{
  "AppConfig": [
    [
      "django/apps/config.py",
      [
        "AppConfig"
      ]
    ]
  ],
  "Apps": [
    [
      "django/apps/registry.py",
      [
        "Apps"
      ]
    ]
  ],
  "SettingsReference": [
    [
      "django/conf/__init__.py",
      [
        "SettingsReference"
      ]
    ]
  ],
  "LazySettings": [
    [
      "django/conf/__init__.py",
      [
        "LazySettings"
      ]
    ]
  ],
  "Settings": [
    [
      "django/conf/__init__.py",
      [
        "Settings"
      ]
    ]
  ],
  "UserSettingsHolder": [
    [
      "django/conf/__init__.py",
      [
        "UserSettingsHolder"
      ]
    ]
  ],
  "SimpleAdminConfig": [
    [
      "django/contrib/admin/apps.py",
      [
        "SimpleAdminConfig"
      ]
    ]
  ],
  "AdminConfig": [
    [
      "django/contrib/admin/apps.py",
      [
        "AdminConfig"
      ]
    ]
  ],
  "BaseModelAdminChecks": [
    [
      "django/contrib/admin/checks.py",
      [
        "BaseModelAdminChecks"
      ]
    ]
  ],
  "ModelAdminChecks": [
    [
      "django/contrib/admin/checks.py",
      [
        "ModelAdminChecks"
      ]
    ]
  ],
  "InlineModelAdminChecks": [
    [
      "django/contrib/admin/checks.py",
      [
        "InlineModelAdminChecks"
      ]
    ]
  ],
  "DisallowedModelAdminLookup": [
    [
      "django/contrib/admin/exceptions.py",
      [
        "DisallowedModelAdminLookup"
      ]
    ]
  ],
  "DisallowedModelAdminToField": [
    [
      "django/contrib/admin/exceptions.py",
      [
        "DisallowedModelAdminToField"
      ]
    ]
  ],
  "ListFilter": [
    [
      "django/contrib/admin/filters.py",
      [
        "ListFilter"
      ]
    ]
  ],
  "SimpleListFilter": [
    [
      "django/contrib/admin/filters.py",
      [
        "SimpleListFilter"
      ]
    ]
  ],
  "FieldListFilter": [
    [
      "django/contrib/admin/filters.py",
      [
        "FieldListFilter"
      ]
    ]
  ],
  "RelatedFieldListFilter": [
    [
      "django/contrib/admin/filters.py",
      [
        "RelatedFieldListFilter"
      ]
    ]
  ],
  "BooleanFieldListFilter": [
    [
      "django/contrib/admin/filters.py",
      [
        "BooleanFieldListFilter"
      ]
    ]
  ],
  "ChoicesFieldListFilter": [
    [
      "django/contrib/admin/filters.py",
      [
        "ChoicesFieldListFilter"
      ]
    ]
  ],
  "DateFieldListFilter": [
    [
      "django/contrib/admin/filters.py",
      [
        "DateFieldListFilter"
      ]
    ]
  ],
  "AllValuesFieldListFilter": [
    [
      "django/contrib/admin/filters.py",
      [
        "AllValuesFieldListFilter"
      ]
    ]
  ],
  "RelatedOnlyFieldListFilter": [
    [
      "django/contrib/admin/filters.py",
      [
        "RelatedOnlyFieldListFilter"
      ]
    ]
  ],
  "AdminAuthenticationForm": [
    [
      "django/contrib/admin/forms.py",
      [
        "AdminAuthenticationForm"
      ]
    ]
  ],
  "AdminPasswordChangeForm": [
    [
      "django/contrib/admin/forms.py",
      [
        "AdminPasswordChangeForm"
      ]
    ],
    [
      "django/contrib/auth/forms.py",
      [
        "AdminPasswordChangeForm"
      ]
    ]
  ],
  "ActionForm": [
    [
      "django/contrib/admin/helpers.py",
      [
        "ActionForm"
      ]
    ]
  ],
  "AdminForm": [
    [
      "django/contrib/admin/helpers.py",
      [
        "AdminForm"
      ]
    ]
  ],
  "Fieldset": [
    [
      "django/contrib/admin/helpers.py",
      [
        "Fieldset"
      ]
    ]
  ],
  "Fieldline": [
    [
      "django/contrib/admin/helpers.py",
      [
        "Fieldline"
      ]
    ]
  ],
  "AdminField": [
    [
      "django/contrib/admin/helpers.py",
      [
        "AdminField"
      ]
    ]
  ],
  "AdminReadonlyField": [
    [
      "django/contrib/admin/helpers.py",
      [
        "AdminReadonlyField"
      ]
    ]
  ],
  "InlineAdminFormSet": [
    [
      "django/contrib/admin/helpers.py",
      [
        "InlineAdminFormSet"
      ]
    ]
  ],
  "InlineAdminForm": [
    [
      "django/contrib/admin/helpers.py",
      [
        "InlineAdminForm"
      ]
    ]
  ],
  "InlineFieldset": [
    [
      "django/contrib/admin/helpers.py",
      [
        "InlineFieldset"
      ]
    ]
  ],
  "AdminErrorList": [
    [
      "django/contrib/admin/helpers.py",
      [
        "AdminErrorList"
      ]
    ]
  ],
  "Migration": [
    [
      "django/contrib/admin/migrations/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "django/contrib/admin/migrations/0002_logentry_remove_auto_add.py",
      [
        "Migration"
      ]
    ],
    [
      "django/contrib/admin/migrations/0003_logentry_add_action_flag_choices.py",
      [
        "Migration"
      ]
    ],
    [
      "django/contrib/auth/migrations/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "django/contrib/auth/migrations/0002_alter_permission_name_max_length.py",
      [
        "Migration"
      ]
    ],
    [
      "django/contrib/auth/migrations/0003_alter_user_email_max_length.py",
      [
        "Migration"
      ]
    ],
    [
      "django/contrib/auth/migrations/0004_alter_user_username_opts.py",
      [
        "Migration"
      ]
    ],
    [
      "django/contrib/auth/migrations/0005_alter_user_last_login_null.py",
      [
        "Migration"
      ]
    ],
    [
      "django/contrib/auth/migrations/0006_require_contenttypes_0002.py",
      [
        "Migration"
      ]
    ],
    [
      "django/contrib/auth/migrations/0007_alter_validators_add_error_messages.py",
      [
        "Migration"
      ]
    ],
    [
      "django/contrib/auth/migrations/0008_alter_user_username_max_length.py",
      [
        "Migration"
      ]
    ],
    [
      "django/contrib/auth/migrations/0009_alter_user_last_name_max_length.py",
      [
        "Migration"
      ]
    ],
    [
      "django/contrib/auth/migrations/0010_alter_group_name_max_length.py",
      [
        "Migration"
      ]
    ],
    [
      "django/contrib/auth/migrations/0011_update_proxy_permissions.py",
      [
        "Migration"
      ]
    ],
    [
      "django/contrib/contenttypes/migrations/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "django/contrib/contenttypes/migrations/0002_remove_content_type_name.py",
      [
        "Migration"
      ]
    ],
    [
      "django/contrib/flatpages/migrations/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "django/contrib/redirects/migrations/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "django/contrib/sessions/migrations/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "django/contrib/sites/migrations/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "django/contrib/sites/migrations/0002_alter_domain_unique.py",
      [
        "Migration"
      ]
    ],
    [
      "django/db/migrations/migration.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/admin_scripts/another_app_waiting_migration/migrations/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/admin_scripts/app_waiting_migration/migrations/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/contenttypes_tests/operations_migrations/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/contenttypes_tests/operations_migrations/0002_rename_foo.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/gis_tests/gis_migrations/migrations/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrate_signals/custom_migrations/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migration_test_data_persistence/migrations/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migration_test_data_persistence/migrations/0002_add_book.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/deprecated_field_migrations/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/deprecated_field_migrations/0002_remove_ipaddressfield_ip.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/migrations_test_apps/alter_fk/author_app/migrations/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/migrations_test_apps/alter_fk/author_app/migrations/0002_alter_id.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/migrations_test_apps/alter_fk/book_app/migrations/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/0002_conflicting_second.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/0002_second.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0002_a2.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0003_a3.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/migrations_test_apps/lookuperror_a/migrations/0004_a4.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/migrations_test_apps/lookuperror_b/migrations/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/migrations_test_apps/lookuperror_b/migrations/0002_b2.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/migrations_test_apps/lookuperror_b/migrations/0003_b3.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/migrations_test_apps/lookuperror_c/migrations/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/migrations_test_apps/lookuperror_c/migrations/0002_c2.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/migrations_test_apps/lookuperror_c/migrations/0003_c3.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/migrations_test_apps/migrated_app/migrations/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/migrations_test_apps/migrated_unapplied_app/migrations/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/migrations_test_apps/mutate_state_a/migrations/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/migrations_test_apps/mutate_state_b/migrations/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/migrations_test_apps/mutate_state_b/migrations/0002_add_field.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/0002_conflicting_second.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/0002_second.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_add_many_to_many_field_initial/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_add_many_to_many_field_initial/0002_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_auto_now_add/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations/0002_second.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_atomic_operation/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_backwards_deps_1/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_backwards_deps_1/0002_second.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_clashing_prefix/a.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_clashing_prefix/ab.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_conflict/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_conflict/0002_conflicting_second.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_conflict/0002_second.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_custom_user/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_fake_split_initial/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_fake_split_initial/0002_second.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_first/second.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_first/thefirst.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_initial_false/0001_not_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_no_ancestor/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_no_ancestor/0002_conflicting_second.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_no_ancestor/0002_second.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_no_changes/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_no_changes/0002_second.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_no_changes/0003_third.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_no_default/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_non_atomic/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_order/0001.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_plan/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_plan/0002_second.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_plan/0003_third.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_plan/0004_fourth.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_private/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_run_before/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_run_before/0002_second.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_run_before/0003_third.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed/0001_squashed_0002.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed/0002_second.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_complex/1_auto.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_complex/2_auto.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_complex/3_auto.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_complex/3_squashed_5.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_complex/4_auto.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_complex/5_auto.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_complex/6_auto.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_complex/7_auto.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/1_auto.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/2_auto.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/2_squashed_3.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/3_auto.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_complex_multi_apps/app1/4_auto.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_complex_multi_apps/app2/1_auto.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_complex_multi_apps/app2/1_squashed_2.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_complex_multi_apps/app2/2_auto.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_erroneous/1_auto.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_erroneous/2_auto.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_erroneous/3_squashed_5.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_erroneous/6_auto.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_erroneous/7_auto.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_extra/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_extra/0001_squashed_0002.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_extra/0002_second.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_extra/0003_third.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_ref_squashed/app1/1_auto.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_ref_squashed/app1/2_auto.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_ref_squashed/app1/2_squashed_3.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_ref_squashed/app1/3_auto.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_ref_squashed/app1/4_auto.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_ref_squashed/app2/1_auto.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_ref_squashed/app2/1_squashed_2.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_squashed_ref_squashed/app2/2_auto.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations/test_migrations_unmigdep/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations2/test_migrations_2/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations2/test_migrations_2_first/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations2/test_migrations_2_first/0002_second.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/migrations2/test_migrations_2_no_deps/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/postgres_tests/array_default_migrations/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/postgres_tests/array_default_migrations/0002_integerarraymodel_field_2.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/postgres_tests/array_index_migrations/0001_initial.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/postgres_tests/migrations/0001_setup_extensions.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/postgres_tests/migrations/0002_create_test_models.py",
      [
        "Migration"
      ]
    ],
    [
      "tests/sites_framework/migrations/0001_initial.py",
      [
        "Migration"
      ]
    ]
  ],
  "LogEntryManager": [
    [
      "django/contrib/admin/models.py",
      [
        "LogEntryManager"
      ]
    ]
  ],
  "Meta": [
    [
      "django/contrib/admin/models.py",
      [
        "LogEntry",
        "Meta"
      ]
    ],
    [
      "django/contrib/auth/base_user.py",
      [
        "AbstractBaseUser",
        "Meta"
      ]
    ],
    [
      "django/contrib/auth/forms.py",
      [
        "UserCreationForm",
        "Meta"
      ]
    ],
    [
      "django/contrib/auth/forms.py",
      [
        "UserChangeForm",
        "Meta"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "Permission",
        "Meta"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "Group",
        "Meta"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "PermissionsMixin",
        "Meta"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "AbstractUser",
        "Meta"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "User",
        "Meta"
      ]
    ],
    [
      "django/contrib/contenttypes/models.py",
      [
        "ContentType",
        "Meta"
      ]
    ],
    [
      "django/contrib/flatpages/forms.py",
      [
        "FlatpageForm",
        "Meta"
      ]
    ],
    [
      "django/contrib/flatpages/models.py",
      [
        "FlatPage",
        "Meta"
      ]
    ],
    [
      "django/contrib/gis/db/backends/oracle/models.py",
      [
        "OracleGeometryColumns",
        "Meta"
      ]
    ],
    [
      "django/contrib/gis/db/backends/oracle/models.py",
      [
        "OracleSpatialRefSys",
        "Meta"
      ]
    ],
    [
      "django/contrib/gis/db/backends/postgis/models.py",
      [
        "PostGISGeometryColumns",
        "Meta"
      ]
    ],
    [
      "django/contrib/gis/db/backends/postgis/models.py",
      [
        "PostGISSpatialRefSys",
        "Meta"
      ]
    ],
    [
      "django/contrib/gis/db/backends/spatialite/models.py",
      [
        "SpatialiteGeometryColumns",
        "Meta"
      ]
    ],
    [
      "django/contrib/gis/db/backends/spatialite/models.py",
      [
        "SpatialiteSpatialRefSys",
        "Meta"
      ]
    ],
    [
      "django/contrib/redirects/models.py",
      [
        "Redirect",
        "Meta"
      ]
    ],
    [
      "django/contrib/sessions/base_session.py",
      [
        "AbstractBaseSession",
        "Meta"
      ]
    ],
    [
      "django/contrib/sessions/models.py",
      [
        "Session",
        "Meta"
      ]
    ],
    [
      "django/contrib/sites/models.py",
      [
        "Site",
        "Meta"
      ]
    ],
    [
      "tests/admin_changelist/models.py",
      [
        "Swallow",
        "Meta"
      ]
    ],
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_total_ordering_optimization",
        "Related",
        "Meta"
      ]
    ],
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_total_ordering_optimization",
        "Model",
        "Meta"
      ]
    ],
    [
      "tests/admin_checks/models.py",
      [
        "Song",
        "Meta"
      ]
    ],
    [
      "tests/admin_inlines/admin.py",
      [
        "SomeChildModelForm",
        "Meta"
      ]
    ],
    [
      "tests/admin_inlines/models.py",
      [
        "NovelReadonlyChapter",
        "Meta"
      ]
    ],
    [
      "tests/admin_ordering/models.py",
      [
        "Band",
        "Meta"
      ]
    ],
    [
      "tests/admin_ordering/models.py",
      [
        "Song",
        "Meta"
      ]
    ],
    [
      "tests/admin_registration/models.py",
      [
        "Location",
        "Meta"
      ]
    ],
    [
      "tests/admin_scripts/another_app_waiting_migration/models.py",
      [
        "Foo",
        "Meta"
      ]
    ],
    [
      "tests/admin_scripts/app_waiting_migration/models.py",
      [
        "Bar",
        "Meta"
      ]
    ],
    [
      "tests/admin_scripts/complex_app/models/bar.py",
      [
        "Bar",
        "Meta"
      ]
    ],
    [
      "tests/admin_scripts/complex_app/models/foo.py",
      [
        "Foo",
        "Meta"
      ]
    ],
    [
      "tests/admin_utils/models.py",
      [
        "ArticleProxy",
        "Meta"
      ]
    ],
    [
      "tests/admin_utils/models.py",
      [
        "Guest",
        "Meta"
      ]
    ],
    [
      "tests/admin_utils/models.py",
      [
        "VehicleMixin",
        "Meta"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "ArticleForm",
        "Meta"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "FieldOverridePostForm",
        "Meta"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "StoryForm",
        "Meta"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Chapter",
        "Meta"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Color2",
        "Meta"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Podcast",
        "Meta"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Language",
        "Meta"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Category",
        "Meta"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "FieldOverridePost",
        "Meta"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "PlotProxy",
        "Meta"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "ReadablePizza",
        "Meta"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "ReadOnlyPizza",
        "Meta"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Answer2",
        "Meta"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "FoodDelivery",
        "Meta"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "UserProxy",
        "Meta"
      ]
    ],
    [
      "tests/admin_widgets/models.py",
      [
        "Student",
        "Meta"
      ]
    ],
    [
      "tests/admin_widgets/test_autocomplete_widget.py",
      [
        "AlbumForm",
        "Meta"
      ]
    ],
    [
      "tests/aggregation_regress/models.py",
      [
        "Book",
        "Meta"
      ]
    ],
    [
      "tests/app_loading/not_installed/models.py",
      [
        "NotInstalledModel",
        "Meta"
      ]
    ],
    [
      "tests/app_loading/not_installed/models.py",
      [
        "RelatedModel",
        "Meta"
      ]
    ],
    [
      "tests/app_loading/not_installed/models.py",
      [
        "M2MRelatedModel",
        "Meta"
      ]
    ],
    [
      "tests/apps/models.py",
      [
        "SoAlternative",
        "Meta"
      ]
    ],
    [
      "tests/auth_tests/models/proxy.py",
      [
        "Proxy",
        "Meta"
      ]
    ],
    [
      "tests/auth_tests/models/proxy.py",
      [
        "UserProxy",
        "Meta"
      ]
    ],
    [
      "tests/backends/models.py",
      [
        "Post",
        "Meta"
      ]
    ],
    [
      "tests/backends/models.py",
      [
        "ReporterProxy",
        "Meta"
      ]
    ],
    [
      "tests/basic/models.py",
      [
        "Article",
        "Meta"
      ]
    ],
    [
      "tests/basic/models.py",
      [
        "ArticleSelectOnSave",
        "Meta"
      ]
    ],
    [
      "tests/bulk_create/models.py",
      [
        "ProxyCountry",
        "Meta"
      ]
    ],
    [
      "tests/bulk_create/models.py",
      [
        "ProxyProxyCountry",
        "Meta"
      ]
    ],
    [
      "tests/bulk_create/models.py",
      [
        "ProxyMultiProxyCountry",
        "Meta"
      ]
    ],
    [
      "tests/bulk_create/models.py",
      [
        "Place",
        "Meta"
      ]
    ],
    [
      "tests/constraints/models.py",
      [
        "Product",
        "Meta"
      ]
    ],
    [
      "tests/contenttypes_tests/models.py",
      [
        "ProxyModel",
        "Meta"
      ]
    ],
    [
      "tests/contenttypes_tests/models.py",
      [
        "Answer",
        "Meta"
      ]
    ],
    [
      "tests/contenttypes_tests/models.py",
      [
        "Post",
        "Meta"
      ]
    ],
    [
      "tests/contenttypes_tests/test_checks.py",
      [
        "GenericRelationTests",
        "test_pointing_to_swapped_model",
        "SwappedModel",
        "Meta"
      ]
    ],
    [
      "tests/custom_columns/models.py",
      [
        "Author",
        "Meta"
      ]
    ],
    [
      "tests/custom_columns/models.py",
      [
        "Article",
        "Meta"
      ]
    ],
    [
      "tests/custom_managers/models.py",
      [
        "Book",
        "Meta"
      ]
    ],
    [
      "tests/custom_managers/models.py",
      [
        "FastCarAsBase",
        "Meta"
      ]
    ],
    [
      "tests/custom_managers/models.py",
      [
        "FastCarAsDefault",
        "Meta"
      ]
    ],
    [
      "tests/custom_managers/models.py",
      [
        "AbstractPerson",
        "Meta"
      ]
    ],
    [
      "tests/custom_pk/models.py",
      [
        "Employee",
        "Meta"
      ]
    ],
    [
      "tests/custom_pk/models.py",
      [
        "Business",
        "Meta"
      ]
    ],
    [
      "tests/datatypes/models.py",
      [
        "Donut",
        "Meta"
      ]
    ],
    [
      "tests/defer/models.py",
      [
        "ChildProxy",
        "Meta"
      ]
    ],
    [
      "tests/defer/models.py",
      [
        "RefreshPrimaryProxy",
        "Meta"
      ]
    ],
    [
      "tests/defer_regress/models.py",
      [
        "ProxyRelated",
        "Meta"
      ]
    ],
    [
      "tests/defer_regress/models.py",
      [
        "Proxy",
        "Meta"
      ]
    ],
    [
      "tests/delete/models.py",
      [
        "AvatarProxy",
        "Meta"
      ]
    ],
    [
      "tests/delete_regress/models.py",
      [
        "Image",
        "Meta"
      ]
    ],
    [
      "tests/delete_regress/models.py",
      [
        "Photo",
        "Meta"
      ]
    ],
    [
      "tests/delete_regress/models.py",
      [
        "FooFileProxy",
        "Meta"
      ]
    ],
    [
      "tests/delete_regress/models.py",
      [
        "OrderedPerson",
        "Meta"
      ]
    ],
    [
      "tests/distinct_on_fields/models.py",
      [
        "Tag",
        "Meta"
      ]
    ],
    [
      "tests/expressions/models.py",
      [
        "Experiment",
        "Meta"
      ]
    ],
    [
      "tests/fixtures/models.py",
      [
        "Category",
        "Meta"
      ]
    ],
    [
      "tests/fixtures/models.py",
      [
        "Article",
        "Meta"
      ]
    ],
    [
      "tests/fixtures/models.py",
      [
        "Person",
        "Meta"
      ]
    ],
    [
      "tests/fixtures/models.py",
      [
        "ProxySpy",
        "Meta"
      ]
    ],
    [
      "tests/fixtures/models.py",
      [
        "Book",
        "Meta"
      ]
    ],
    [
      "tests/fixtures_model_package/models/__init__.py",
      [
        "Article",
        "Meta"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "Plant",
        "Meta"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "Parent",
        "Meta"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "Article",
        "Meta"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "CommonFeature",
        "Meta"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "Widget",
        "Meta"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "WidgetProxy",
        "Meta"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "Store",
        "Meta"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "Person",
        "Meta"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "Book",
        "Meta"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "BaseNKModel",
        "Meta"
      ]
    ],
    [
      "tests/force_insert_update/models.py",
      [
        "ProxyCounter",
        "Meta"
      ]
    ],
    [
      "tests/foreign_object/models/article.py",
      [
        "ArticleTranslation",
        "Meta"
      ]
    ],
    [
      "tests/foreign_object/models/customers.py",
      [
        "Address",
        "Meta"
      ]
    ],
    [
      "tests/foreign_object/models/customers.py",
      [
        "Customer",
        "Meta"
      ]
    ],
    [
      "tests/foreign_object/models/empty_join.py",
      [
        "SlugPage",
        "Meta"
      ]
    ],
    [
      "tests/foreign_object/models/person.py",
      [
        "Person",
        "Meta"
      ]
    ],
    [
      "tests/foreign_object/models/person.py",
      [
        "Group",
        "Meta"
      ]
    ],
    [
      "tests/foreign_object/models/person.py",
      [
        "Membership",
        "Meta"
      ]
    ],
    [
      "tests/foreign_object/test_forms.py",
      [
        "FormsTests",
        "ArticleForm",
        "Meta"
      ]
    ],
    [
      "tests/forms_tests/models.py",
      [
        "ChoiceOptionModel",
        "Meta"
      ]
    ],
    [
      "tests/forms_tests/tests/tests.py",
      [
        "ChoiceFieldForm",
        "Meta"
      ]
    ],
    [
      "tests/forms_tests/tests/tests.py",
      [
        "OptionalMultiChoiceModelForm",
        "Meta"
      ]
    ],
    [
      "tests/forms_tests/tests/tests.py",
      [
        "ChoiceFieldExclusionForm",
        "Meta"
      ]
    ],
    [
      "tests/forms_tests/tests/tests.py",
      [
        "EmptyCharLabelChoiceForm",
        "Meta"
      ]
    ],
    [
      "tests/forms_tests/tests/tests.py",
      [
        "EmptyIntegerLabelChoiceForm",
        "Meta"
      ]
    ],
    [
      "tests/forms_tests/tests/tests.py",
      [
        "EmptyCharLabelNoneChoiceForm",
        "Meta"
      ]
    ],
    [
      "tests/forms_tests/tests/tests.py",
      [
        "FormsModelTestCase",
        "test_formfield_initial",
        "DefaultsForm",
        "Meta"
      ]
    ],
    [
      "tests/forms_tests/tests/tests.py",
      [
        "FormsModelTestCase",
        "test_formfield_initial",
        "ExcludingForm",
        "Meta"
      ]
    ],
    [
      "tests/forms_tests/views.py",
      [
        "ArticleForm",
        "Meta"
      ]
    ],
    [
      "tests/generic_inline_admin/models.py",
      [
        "PhoneNumber",
        "Meta"
      ]
    ],
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineModelAdminTest",
        "test_custom_form_meta_exclude_with_readonly",
        "MediaForm",
        "Meta"
      ]
    ],
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineModelAdminTest",
        "test_custom_form_meta_exclude",
        "MediaForm",
        "Meta"
      ]
    ],
    [
      "tests/generic_relations/models.py",
      [
        "TaggedItem",
        "Meta"
      ]
    ],
    [
      "tests/generic_relations/models.py",
      [
        "ProxyRelatedModel",
        "Meta"
      ]
    ],
    [
      "tests/generic_relations/test_forms.py",
      [
        "TaggedItemForm",
        "Meta"
      ]
    ],
    [
      "tests/generic_relations_regress/models.py",
      [
        "LinkProxy",
        "Meta"
      ]
    ],
    [
      "tests/generic_relations_regress/models.py",
      [
        "HasLinks",
        "Meta"
      ]
    ],
    [
      "tests/generic_relations_regress/models.py",
      [
        "B",
        "Meta"
      ]
    ],
    [
      "tests/generic_relations_regress/models.py",
      [
        "C",
        "Meta"
      ]
    ],
    [
      "tests/generic_relations_regress/models.py",
      [
        "D",
        "Meta"
      ]
    ],
    [
      "tests/generic_views/forms.py",
      [
        "AuthorForm",
        "Meta"
      ]
    ],
    [
      "tests/generic_views/models.py",
      [
        "Artist",
        "Meta"
      ]
    ],
    [
      "tests/generic_views/models.py",
      [
        "Author",
        "Meta"
      ]
    ],
    [
      "tests/generic_views/models.py",
      [
        "Book",
        "Meta"
      ]
    ],
    [
      "tests/get_earliest_or_latest/models.py",
      [
        "Article",
        "Meta"
      ]
    ],
    [
      "tests/gis_tests/distapp/models.py",
      [
        "NamedModel",
        "Meta"
      ]
    ],
    [
      "tests/gis_tests/geo3d/models.py",
      [
        "NamedModel",
        "Meta"
      ]
    ],
    [
      "tests/gis_tests/geo3d/models.py",
      [
        "SimpleModel",
        "Meta"
      ]
    ],
    [
      "tests/gis_tests/geoadmin/models.py",
      [
        "City",
        "Meta"
      ]
    ],
    [
      "tests/gis_tests/geoapp/models.py",
      [
        "NamedModel",
        "Meta"
      ]
    ],
    [
      "tests/gis_tests/geoapp/models.py",
      [
        "City",
        "Meta"
      ]
    ],
    [
      "tests/gis_tests/geoapp/models.py",
      [
        "PennsylvaniaCity",
        "Meta"
      ]
    ],
    [
      "tests/gis_tests/geoapp/models.py",
      [
        "State",
        "Meta"
      ]
    ],
    [
      "tests/gis_tests/geoapp/models.py",
      [
        "UniqueTogetherModel",
        "Meta"
      ]
    ],
    [
      "tests/gis_tests/geogapp/models.py",
      [
        "NamedModel",
        "Meta"
      ]
    ],
    [
      "tests/gis_tests/geogapp/models.py",
      [
        "City",
        "Meta"
      ]
    ],
    [
      "tests/gis_tests/geogapp/models.py",
      [
        "County",
        "Meta"
      ]
    ],
    [
      "tests/gis_tests/layermap/models.py",
      [
        "NamedModel",
        "Meta"
      ]
    ],
    [
      "tests/gis_tests/layermap/models.py",
      [
        "City",
        "Meta"
      ]
    ],
    [
      "tests/gis_tests/layermap/models.py",
      [
        "Interstate",
        "Meta"
      ]
    ],
    [
      "tests/gis_tests/layermap/models.py",
      [
        "ICity1",
        "Meta"
      ]
    ],
    [
      "tests/gis_tests/layermap/models.py",
      [
        "ICity2",
        "Meta"
      ]
    ],
    [
      "tests/gis_tests/rasterapp/models.py",
      [
        "RasterModel",
        "Meta"
      ]
    ],
    [
      "tests/gis_tests/rasterapp/models.py",
      [
        "RasterRelatedModel",
        "Meta"
      ]
    ],
    [
      "tests/gis_tests/relatedapp/models.py",
      [
        "SimpleModel",
        "Meta"
      ]
    ],
    [
      "tests/i18n/forms.py",
      [
        "CompanyForm",
        "Meta"
      ]
    ],
    [
      "tests/i18n/models.py",
      [
        "Company",
        "Meta"
      ]
    ],
    [
      "tests/indexes/models.py",
      [
        "Article",
        "Meta"
      ]
    ],
    [
      "tests/indexes/models.py",
      [
        "IndexTogetherSingleList",
        "Meta"
      ]
    ],
    [
      "tests/inline_formsets/models.py",
      [
        "Poem",
        "Meta"
      ]
    ],
    [
      "tests/inspectdb/models.py",
      [
        "SpecialName",
        "Meta"
      ]
    ],
    [
      "tests/inspectdb/models.py",
      [
        "UniqueTogether",
        "Meta"
      ]
    ],
    [
      "tests/introspection/models.py",
      [
        "Reporter",
        "Meta"
      ]
    ],
    [
      "tests/introspection/models.py",
      [
        "Article",
        "Meta"
      ]
    ],
    [
      "tests/introspection/models.py",
      [
        "ArticleReporter",
        "Meta"
      ]
    ],
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_m2m_unmanaged_shadow_models_not_checked",
        "A2",
        "Meta"
      ]
    ],
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_m2m_unmanaged_shadow_models_not_checked",
        "C2",
        "Meta"
      ]
    ],
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_m2m_unmanaged_shadow_models_not_checked",
        "Intermediate",
        "Meta"
      ]
    ],
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_lazy_reference_checks",
        "DummyModel",
        "Meta"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_not_swapped_model",
        "SwappableModel",
        "Meta"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_referencing_to_swapped_model",
        "SwappedModel",
        "Meta"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "M2mThroughFieldsTests",
        "test_superset_foreign_object",
        "Parent",
        "Meta"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "M2mThroughFieldsTests",
        "test_intersection_foreign_object",
        "Parent",
        "Meta"
      ]
    ],
    [
      "tests/lookup/models.py",
      [
        "Author",
        "Meta"
      ]
    ],
    [
      "tests/lookup/models.py",
      [
        "Article",
        "Meta"
      ]
    ],
    [
      "tests/lookup/models.py",
      [
        "Tag",
        "Meta"
      ]
    ],
    [
      "tests/m2m_and_m2o/models.py",
      [
        "Issue",
        "Meta"
      ]
    ],
    [
      "tests/m2m_multiple/models.py",
      [
        "Category",
        "Meta"
      ]
    ],
    [
      "tests/m2m_multiple/models.py",
      [
        "Article",
        "Meta"
      ]
    ],
    [
      "tests/m2m_regress/models.py",
      [
        "BadModelWithSplit",
        "Meta"
      ]
    ],
    [
      "tests/m2m_signals/models.py",
      [
        "Part",
        "Meta"
      ]
    ],
    [
      "tests/m2m_signals/models.py",
      [
        "Car",
        "Meta"
      ]
    ],
    [
      "tests/m2m_signals/models.py",
      [
        "Person",
        "Meta"
      ]
    ],
    [
      "tests/m2m_through/models.py",
      [
        "Person",
        "Meta"
      ]
    ],
    [
      "tests/m2m_through/models.py",
      [
        "Group",
        "Meta"
      ]
    ],
    [
      "tests/m2m_through/models.py",
      [
        "Membership",
        "Meta"
      ]
    ],
    [
      "tests/m2m_through/models.py",
      [
        "CustomMembership",
        "Meta"
      ]
    ],
    [
      "tests/m2m_through/models.py",
      [
        "Employee",
        "Meta"
      ]
    ],
    [
      "tests/m2m_through/models.py",
      [
        "Ingredient",
        "Meta"
      ]
    ],
    [
      "tests/m2m_through/models.py",
      [
        "Recipe",
        "Meta"
      ]
    ],
    [
      "tests/m2m_through_regress/models.py",
      [
        "Driver",
        "Meta"
      ]
    ],
    [
      "tests/m2m_through_regress/models.py",
      [
        "ProxiedIndividualCompetitor",
        "Meta"
      ]
    ],
    [
      "tests/managers_regress/models.py",
      [
        "AbstractBase1",
        "Meta"
      ]
    ],
    [
      "tests/managers_regress/models.py",
      [
        "AbstractBase2",
        "Meta"
      ]
    ],
    [
      "tests/managers_regress/models.py",
      [
        "AbstractBase3",
        "Meta"
      ]
    ],
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_implicit_inheritance",
        "AbstractModel",
        "Meta"
      ]
    ],
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_implicit_inheritance",
        "ProxyModel",
        "Meta"
      ]
    ],
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_default_manager_inheritance",
        "AbstractModel",
        "Meta"
      ]
    ],
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_default_manager_inheritance",
        "PlainModel",
        "Meta"
      ]
    ],
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_default_manager_inheritance",
        "ProxyModel",
        "Meta"
      ]
    ],
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_base_manager_inheritance",
        "AbstractModel",
        "Meta"
      ]
    ],
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_base_manager_inheritance",
        "PlainModel",
        "Meta"
      ]
    ],
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_base_manager_inheritance",
        "ProxyModel",
        "Meta"
      ]
    ],
    [
      "tests/many_to_many/models.py",
      [
        "Publication",
        "Meta"
      ]
    ],
    [
      "tests/many_to_many/models.py",
      [
        "Article",
        "Meta"
      ]
    ],
    [
      "tests/many_to_many/models.py",
      [
        "AbstractArticle",
        "Meta"
      ]
    ],
    [
      "tests/many_to_one/models.py",
      [
        "Article",
        "Meta"
      ]
    ],
    [
      "tests/many_to_one_null/models.py",
      [
        "Article",
        "Meta"
      ]
    ],
    [
      "tests/migration_test_data_persistence/models.py",
      [
        "Unmanaged",
        "Meta"
      ]
    ],
    [
      "tests/migrations/migrations_test_apps/migrated_unapplied_app/models.py",
      [
        "OtherAuthor",
        "Meta"
      ]
    ],
    [
      "tests/migrations/models.py",
      [
        "UnicodeModel",
        "Meta"
      ]
    ],
    [
      "tests/migrations/models.py",
      [
        "UnserializableModel",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_dry_run_verbosity_3",
        "SillyModel",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_create",
        "Author",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_create",
        "AuthorProxy",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_create",
        "SubAuthor",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_create",
        "Book",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_create",
        "Food",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_create",
        "FoodNoManagers",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_create",
        "FoodNoDefaultManager",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_create",
        "FoodOrderedManagers",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_no_duplicate_managers",
        "Person",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_no_duplicate_managers",
        "Boss",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_custom_base_manager",
        "Author",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_custom_base_manager",
        "Author2",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_render_model_with_multiple_inheritance",
        "Foo",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_render_model_with_multiple_inheritance",
        "Bar",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_render_model_with_multiple_inheritance",
        "FooBar",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_render_model_with_multiple_inheritance",
        "AbstractSubFooBar",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_render_model_with_multiple_inheritance",
        "SubFooBar",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_render_project_dependencies",
        "A",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_render_project_dependencies",
        "B",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_render_project_dependencies",
        "C",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_render_project_dependencies",
        "D",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_render_project_dependencies",
        "E",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_render_project_dependencies",
        "F",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_add_relations",
        "A",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_add_relations",
        "B",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_add_relations",
        "C",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_remove_relations",
        "A",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_remove_relations",
        "B",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_self_relation",
        "A",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_dangling_references_throw_error",
        "Author",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_dangling_references_throw_error",
        "Publisher",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_dangling_references_throw_error",
        "Book",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_dangling_references_throw_error",
        "Magazine",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_real_apps",
        "TestModel",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_ignore_order_wrt",
        "Author",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_ignore_order_wrt",
        "Book",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "ModelStateTests",
        "test_create_swappable",
        "Author",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "ModelStateTests",
        "test_create_swappable_from_abstract",
        "SearchableLocation",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "ModelStateTests",
        "test_create_swappable_from_abstract",
        "Station",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "ModelStateTests",
        "test_create_swappable_from_abstract",
        "BusStation",
        "Meta"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "ModelStateTests",
        "test_abstract_model_children_inherit_indexes",
        "Abstract",
        "Meta"
      ]
    ],
    [
      "tests/model_fields/models.py",
      [
        "if_Image_",
        "AbstractPersonWithHeight",
        "Meta"
      ]
    ],
    [
      "tests/model_fields/test_manytomanyfield.py",
      [
        "ManyToManyFieldTests",
        "test_abstract_model_app_relative_foreign_key",
        "AbstractReferent",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Writer",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Price",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Triple",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Inventory",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Book",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "BookXtra",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "ExplicitPK",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/test_uuid.py",
      [
        "UUIDPKForm",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "ProductForm",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "PriceForm",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "BookForm",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "DerivedBookForm",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "ExplicitPKForm",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "PostForm",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "DerivedPostForm",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "CustomWriterForm",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "BaseCategoryForm",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "ArticleForm",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "RoykoForm",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "ArticleStatusForm",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "InventoryForm",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "CustomFieldForExclusionForm",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "TextFileForm",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "BigIntForm",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormWithMedia",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "CustomErrorMessageForm",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_blank_with_null_foreign_key_field",
        "FormForTestingIsValid",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_exclude_and_validation",
        "PriceFormWithoutQuantity",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_exclude_and_validation",
        "PriceFormWithoutQuantity_1",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "FieldOverridesByFormMetaForm",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "IncompleteCategoryFormWithFields",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "IncompleteCategoryFormWithExclude",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "UniqueTest",
        "test_unique_together_exclusion",
        "BookForm",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBasicTests",
        "test_subset_fields",
        "PartialArticleForm",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBasicTests",
        "test_subset_fields",
        "PartialArticleFormWithSlug",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "ModelOneToOneFieldTests",
        "test_onetoonefield",
        "WriterProfileForm",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "FileAndImageFieldTests",
        "test_file_field_multiple_save",
        "PhotoForm",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "OtherModelFormTests",
        "test_foreignkeys_which_use_to_field",
        "CategoryForm",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "OtherModelFormTests",
        "test_callable_field_default",
        "PublicationDefaultsForm",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "StumpJokeForm",
        "Meta"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "StumpJokeWithCustomFieldForm",
        "Meta"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Author",
        "Meta"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Book",
        "Meta"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "BookWithOptionalAltEditor",
        "Meta"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Price",
        "Meta"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Revision",
        "Meta"
      ]
    ],
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_callable_defaults",
        "MembershipForm",
        "Meta"
      ]
    ],
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_inlineformset_with_arrayfield",
        "BookForm",
        "Meta"
      ]
    ],
    [
      "tests/model_formsets_regress/tests.py",
      [
        "UserSiteForm",
        "Meta"
      ]
    ],
    [
      "tests/model_formsets_regress/tests.py",
      [
        "FormfieldShouldDeleteFormTests",
        "CustomDeleteUserForm",
        "Meta"
      ]
    ],
    [
      "tests/model_indexes/models.py",
      [
        "Book",
        "Meta"
      ]
    ],
    [
      "tests/model_indexes/models.py",
      [
        "AbstractModel",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance/models.py",
      [
        "CommonInfo",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance/models.py",
      [
        "Student",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance/models.py",
      [
        "Attachment",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance/models.py",
      [
        "Rating",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance/models.py",
      [
        "Restaurant",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance/models.py",
      [
        "NamedURL",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance/models.py",
      [
        "GrandParent",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_multiple_parents_mro",
        "AbstractBaseOne",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_multiple_parents_mro",
        "AbstractBaseTwo",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_multiple_parents_mro",
        "DescendantOne",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_multiple_parents_mro",
        "DescendantTwo",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_multiple_inheritance_cannot_shadow_concrete_inherited_field",
        "AbstractParent",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_virtual_field",
        "RelatedModelAbstract",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_virtual_field",
        "ModelAbstract",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_reverse_foreign_key",
        "AbstractBase",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_multi_inheritance_field_clashes",
        "AbstractBase",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_multi_inheritance_field_clashes",
        "AbstractDescendant",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_abstract_model_with_regular_python_mixin_mro",
        "AbstractModel",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance/tests.py",
      [
        "InheritanceSameModelNameTests",
        "test_abstract_fk_related_name",
        "Referenced",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance/tests.py",
      [
        "InheritanceSameModelNameTests",
        "test_abstract_fk_related_name",
        "AbstractReferent",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance/tests.py",
      [
        "InheritanceSameModelNameTests",
        "test_abstract_fk_related_name",
        "Referent",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance/tests.py",
      [
        "InheritanceSameModelNameTests",
        "test_abstract_fk_related_name",
        "Referent_3",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "Place",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "ParkingLot4",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "Article",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "Evaluation",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "AuditBase",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "CertificationAudit",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "Person",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "AbstractEvent",
        "Meta"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "Station",
        "Meta"
      ]
    ],
    [
      "tests/model_meta/models.py",
      [
        "AbstractPerson",
        "Meta"
      ]
    ],
    [
      "tests/model_meta/models.py",
      [
        "ProxyPerson",
        "Meta"
      ]
    ],
    [
      "tests/model_options/models/default_related_name.py",
      [
        "Book",
        "Meta"
      ]
    ],
    [
      "tests/model_options/models/default_related_name.py",
      [
        "Store",
        "Meta"
      ]
    ],
    [
      "tests/model_options/models/default_related_name.py",
      [
        "EditorStore",
        "Meta"
      ]
    ],
    [
      "tests/model_options/models/tablespaces.py",
      [
        "Scientist",
        "Meta"
      ]
    ],
    [
      "tests/model_options/models/tablespaces.py",
      [
        "Article",
        "Meta"
      ]
    ],
    [
      "tests/model_regress/models.py",
      [
        "Article",
        "Meta"
      ]
    ],
    [
      "tests/modeladmin/models.py",
      [
        "Band",
        "Meta"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_custom_form_meta_exclude_with_readonly",
        "AdminBandForm",
        "Meta"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_custom_form_meta_exclude_with_readonly",
        "AdminConcertForm",
        "Meta"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_custom_formfield_override_readonly",
        "AdminBandForm",
        "Meta"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_custom_form_meta_exclude",
        "AdminBandForm",
        "Meta"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_custom_form_meta_exclude",
        "AdminConcertForm",
        "Meta"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_formset_exclude_kwarg_override",
        "AdminConcertForm",
        "Meta"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_regression_for_ticket_15820",
        "CustomConcertForm",
        "Meta"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_foreign_key_as_radio_field",
        "AdminConcertForm",
        "Meta"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_foreign_key_as_radio_field",
        "AdminConcertForm_3",
        "Meta"
      ]
    ],
    [
      "tests/multiple_database/models.py",
      [
        "Review",
        "Meta"
      ]
    ],
    [
      "tests/multiple_database/models.py",
      [
        "Person",
        "Meta"
      ]
    ],
    [
      "tests/multiple_database/models.py",
      [
        "Book",
        "Meta"
      ]
    ],
    [
      "tests/multiple_database/models.py",
      [
        "Pet",
        "Meta"
      ]
    ],
    [
      "tests/multiple_database/models.py",
      [
        "UserProfile",
        "Meta"
      ]
    ],
    [
      "tests/null_fk/models.py",
      [
        "Comment",
        "Meta"
      ]
    ],
    [
      "tests/null_fk_ordering/models.py",
      [
        "Article",
        "Meta"
      ]
    ],
    [
      "tests/null_fk_ordering/models.py",
      [
        "Comment",
        "Meta"
      ]
    ],
    [
      "tests/or_lookups/models.py",
      [
        "Article",
        "Meta"
      ]
    ],
    [
      "tests/order_with_respect_to/models.py",
      [
        "Answer",
        "Meta"
      ]
    ],
    [
      "tests/order_with_respect_to/models.py",
      [
        "Post",
        "Meta"
      ]
    ],
    [
      "tests/order_with_respect_to/models.py",
      [
        "Component",
        "Meta"
      ]
    ],
    [
      "tests/ordering/models.py",
      [
        "Author",
        "Meta"
      ]
    ],
    [
      "tests/ordering/models.py",
      [
        "Article",
        "Meta"
      ]
    ],
    [
      "tests/ordering/models.py",
      [
        "OrderedByAuthorArticle",
        "Meta"
      ]
    ],
    [
      "tests/ordering/models.py",
      [
        "OrderedByFArticle",
        "Meta"
      ]
    ],
    [
      "tests/ordering/models.py",
      [
        "Reference",
        "Meta"
      ]
    ],
    [
      "tests/postgres_tests/models.py",
      [
        "PostgreSQLModel",
        "Meta"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "Author",
        "Meta"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "FavoriteAuthors",
        "Meta"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "AuthorAddress",
        "Meta"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "Book",
        "Meta"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "Reader",
        "Meta"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "Qualification",
        "Meta"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "Teacher",
        "Meta"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "Department",
        "Meta"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "TaggedItem",
        "Meta"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "Bookmark",
        "Meta"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "Comment",
        "Meta"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "House",
        "Meta"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "Room",
        "Meta"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "Person",
        "Meta"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "Employee",
        "Meta"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "Author2",
        "Meta"
      ]
    ],
    [
      "tests/proxy_model_inheritance/app1/models.py",
      [
        "ProxyModel",
        "Meta"
      ]
    ],
    [
      "tests/proxy_model_inheritance/models.py",
      [
        "ProxyModel",
        "Meta"
      ]
    ],
    [
      "tests/proxy_model_inheritance/models.py",
      [
        "ConcreteModelSubclassProxy",
        "Meta"
      ]
    ],
    [
      "tests/proxy_models/models.py",
      [
        "Abstract",
        "Meta"
      ]
    ],
    [
      "tests/proxy_models/models.py",
      [
        "MyPerson",
        "Meta"
      ]
    ],
    [
      "tests/proxy_models/models.py",
      [
        "ManagerMixin",
        "Meta"
      ]
    ],
    [
      "tests/proxy_models/models.py",
      [
        "OtherPerson",
        "Meta"
      ]
    ],
    [
      "tests/proxy_models/models.py",
      [
        "MyPersonProxy",
        "Meta"
      ]
    ],
    [
      "tests/proxy_models/models.py",
      [
        "UserProxy",
        "Meta"
      ]
    ],
    [
      "tests/proxy_models/models.py",
      [
        "AnotherUserProxy",
        "Meta"
      ]
    ],
    [
      "tests/proxy_models/models.py",
      [
        "UserProxyProxy",
        "Meta"
      ]
    ],
    [
      "tests/proxy_models/models.py",
      [
        "MultiUserProxy",
        "Meta"
      ]
    ],
    [
      "tests/proxy_models/models.py",
      [
        "StateProxy",
        "Meta"
      ]
    ],
    [
      "tests/proxy_models/models.py",
      [
        "ProxyTrackerUser",
        "Meta"
      ]
    ],
    [
      "tests/proxy_models/models.py",
      [
        "ProxyBug",
        "Meta"
      ]
    ],
    [
      "tests/proxy_models/models.py",
      [
        "ProxyProxyBug",
        "Meta"
      ]
    ],
    [
      "tests/proxy_models/models.py",
      [
        "ProxyImprovement",
        "Meta"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "ProxyCategory",
        "Meta"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Tag",
        "Meta"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Note",
        "Meta"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "ExtraInfo",
        "Meta"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Author",
        "Meta"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Item",
        "Meta"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Ranking",
        "Meta"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Cover",
        "Meta"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Valid",
        "Meta"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "LoopX",
        "Meta"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "LoopY",
        "Meta"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "LoopZ",
        "Meta"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "CustomPk",
        "Meta"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "SingleObject",
        "Meta"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "RelatedObject",
        "Meta"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Plaything",
        "Meta"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "ProxyObjectA",
        "Meta"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "ProxyObjectB",
        "Meta"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "NullableName",
        "Meta"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Order",
        "Meta"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "OrderItem",
        "Meta"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Individual",
        "Meta"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "RelatedIndividual",
        "Meta"
      ]
    ],
    [
      "tests/reserved_names/models.py",
      [
        "Thing",
        "Meta"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "Author",
        "Meta"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "AuthorCharFieldWithIndex",
        "Meta"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "AuthorTextFieldWithIndex",
        "Meta"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "AuthorWithDefaultHeight",
        "Meta"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "AuthorWithEvenLongerName",
        "Meta"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "AuthorWithIndexedName",
        "Meta"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "Book",
        "Meta"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "BookWeak",
        "Meta"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "BookWithLongName",
        "Meta"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "BookWithO2O",
        "Meta"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "BookWithSlug",
        "Meta"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "BookWithoutAuthor",
        "Meta"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "BookForeignObj",
        "Meta"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "IntegerPK",
        "Meta"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "Note",
        "Meta"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "NoteRename",
        "Meta"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "Tag",
        "Meta"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "TagIndexed",
        "Meta"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "TagM2MTest",
        "Meta"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "TagUniqueRename",
        "Meta"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "Thing",
        "Meta"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "UniqueTest",
        "Meta"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "Node",
        "Meta"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_no_db_constraint_added_during_primary_key_change",
        "Author",
        "Meta"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_no_db_constraint_added_during_primary_key_change",
        "BookWeak",
        "Meta"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_to_fk",
        "LocalBook",
        "Meta"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_int_pk_to_int_unique",
        "Transitional",
        "Meta"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_int_pk_to_int_unique",
        "IntegerUnique",
        "Meta"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "_test_m2m_create_through",
        "LocalTagThrough",
        "Meta"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "_test_m2m_create_through",
        "LocalBookWithM2MThrough",
        "Meta"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "_test_m2m",
        "LocalAuthorWithM2M",
        "Meta"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "_test_m2m_through_alter",
        "LocalAuthorTag",
        "Meta"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "_test_m2m_through_alter",
        "LocalAuthorWithM2MThrough",
        "Meta"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "_test_m2m_repoint",
        "LocalBookWithM2M",
        "Meta"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_m2m_rename_field_in_target_model",
        "LocalTagM2MTest",
        "Meta"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_m2m_rename_field_in_target_model",
        "LocalM2M",
        "Meta"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_unique_no_unnecessary_fk_drops",
        "Author",
        "Meta"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_unique_no_unnecessary_fk_drops",
        "Book",
        "Meta"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_unique_and_reverse_m2m",
        "Tag",
        "Meta"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_unique_and_reverse_m2m",
        "Book",
        "Meta"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_db_table",
        "Author",
        "Meta"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_db_table",
        "Book",
        "Meta"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_creation_with_db_table_double_quotes",
        "Student",
        "Meta"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_creation_with_db_table_double_quotes",
        "Document",
        "Meta"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_referenced_field_without_constraint_rename_inside_atomic_block",
        "Foo",
        "Meta"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_referenced_field_without_constraint_rename_inside_atomic_block",
        "Bar",
        "Meta"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_referenced_table_without_constraint_rename_inside_atomic_block",
        "Foo",
        "Meta"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_referenced_table_without_constraint_rename_inside_atomic_block",
        "Bar",
        "Meta"
      ]
    ],
    [
      "tests/select_related_regress/models.py",
      [
        "Base",
        "Meta"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "CategoryMetaData",
        "Meta"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "Category",
        "Meta"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "Author",
        "Meta"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "Article",
        "Meta"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "Actor",
        "Meta"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "Movie",
        "Meta"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "ProxyBaseModel",
        "Meta"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "ProxyProxyBaseModel",
        "Meta"
      ]
    ],
    [
      "tests/serializers/models/data.py",
      [
        "Tag",
        "Meta"
      ]
    ],
    [
      "tests/serializers/models/data.py",
      [
        "Anchor",
        "Meta"
      ]
    ],
    [
      "tests/serializers/models/data.py",
      [
        "AbstractBaseModel",
        "Meta"
      ]
    ],
    [
      "tests/sites_framework/models.py",
      [
        "AbstractArticle",
        "Meta"
      ]
    ],
    [
      "tests/swappable_models/models.py",
      [
        "Article",
        "Meta"
      ]
    ],
    [
      "tests/syndication_tests/models.py",
      [
        "Entry",
        "Meta"
      ]
    ],
    [
      "tests/test_client_regress/models.py",
      [
        "CustomUser",
        "Meta"
      ]
    ],
    [
      "tests/timezones/forms.py",
      [
        "EventModelForm",
        "Meta"
      ]
    ],
    [
      "tests/timezones/forms.py",
      [
        "EventLocalizedModelForm",
        "Meta"
      ]
    ],
    [
      "tests/transactions/models.py",
      [
        "Reporter",
        "Meta"
      ]
    ],
    [
      "tests/unmanaged_models/models.py",
      [
        "A01",
        "Meta"
      ]
    ],
    [
      "tests/unmanaged_models/models.py",
      [
        "B01",
        "Meta"
      ]
    ],
    [
      "tests/unmanaged_models/models.py",
      [
        "C01",
        "Meta"
      ]
    ],
    [
      "tests/unmanaged_models/models.py",
      [
        "A02",
        "Meta"
      ]
    ],
    [
      "tests/unmanaged_models/models.py",
      [
        "B02",
        "Meta"
      ]
    ],
    [
      "tests/unmanaged_models/models.py",
      [
        "C02",
        "Meta"
      ]
    ],
    [
      "tests/unmanaged_models/models.py",
      [
        "Intermediate",
        "Meta"
      ]
    ],
    [
      "tests/unmanaged_models/models.py",
      [
        "Proxy1",
        "Meta"
      ]
    ],
    [
      "tests/unmanaged_models/models.py",
      [
        "Proxy2",
        "Meta"
      ]
    ],
    [
      "tests/unmanaged_models/models.py",
      [
        "Unmanaged1",
        "Meta"
      ]
    ],
    [
      "tests/unmanaged_models/models.py",
      [
        "Unmanaged2",
        "Meta"
      ]
    ],
    [
      "tests/update_only_fields/models.py",
      [
        "ProxyEmployee",
        "Meta"
      ]
    ],
    [
      "tests/validation/models.py",
      [
        "UniqueTogetherModel",
        "Meta"
      ]
    ],
    [
      "tests/validation/tests.py",
      [
        "ArticleForm",
        "Meta"
      ]
    ],
    [
      "tests/view_tests/models.py",
      [
        "BaseArticle",
        "Meta"
      ]
    ]
  ],
  "LogEntry": [
    [
      "django/contrib/admin/models.py",
      [
        "LogEntry"
      ]
    ]
  ],
  "IncorrectLookupParameters": [
    [
      "django/contrib/admin/options.py",
      [
        "IncorrectLookupParameters"
      ]
    ]
  ],
  "BaseModelAdmin": [
    [
      "django/contrib/admin/options.py",
      [
        "BaseModelAdmin"
      ]
    ]
  ],
  "ModelAdmin": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin"
      ]
    ],
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_total_ordering_optimization",
        "ModelAdmin"
      ]
    ]
  ],
  "DeleteProtectedModelForm": [
    [
      "django/contrib/admin/options.py",
      [
        "InlineModelAdmin",
        "get_formset",
        "DeleteProtectedModelForm"
      ]
    ]
  ],
  "InlineModelAdmin": [
    [
      "django/contrib/admin/options.py",
      [
        "InlineModelAdmin"
      ]
    ]
  ],
  "StackedInline": [
    [
      "django/contrib/admin/options.py",
      [
        "StackedInline"
      ]
    ]
  ],
  "TabularInline": [
    [
      "django/contrib/admin/options.py",
      [
        "TabularInline"
      ]
    ]
  ],
  "AlreadyRegistered": [
    [
      "django/contrib/admin/sites.py",
      [
        "AlreadyRegistered"
      ]
    ]
  ],
  "NotRegistered": [
    [
      "django/contrib/admin/sites.py",
      [
        "NotRegistered"
      ]
    ]
  ],
  "AdminSite": [
    [
      "django/contrib/admin/sites.py",
      [
        "AdminSite"
      ]
    ]
  ],
  "DefaultAdminSite": [
    [
      "django/contrib/admin/sites.py",
      [
        "DefaultAdminSite"
      ]
    ]
  ],
  "ResultList": [
    [
      "django/contrib/admin/templatetags/admin_list.py",
      [
        "ResultList"
      ]
    ]
  ],
  "InclusionAdminNode": [
    [
      "django/contrib/admin/templatetags/base.py",
      [
        "InclusionAdminNode"
      ]
    ]
  ],
  "AdminLogNode": [
    [
      "django/contrib/admin/templatetags/log.py",
      [
        "AdminLogNode"
      ]
    ]
  ],
  "CSPMiddleware": [
    [
      "django/contrib/admin/tests.py",
      [
        "CSPMiddleware"
      ]
    ]
  ],
  "AdminSeleniumTestCase": [
    [
      "django/contrib/admin/tests.py",
      [
        "AdminSeleniumTestCase"
      ]
    ]
  ],
  "FieldIsAForeignKeyColumnName": [
    [
      "django/contrib/admin/utils.py",
      [
        "FieldIsAForeignKeyColumnName"
      ]
    ]
  ],
  "NestedObjects": [
    [
      "django/contrib/admin/utils.py",
      [
        "NestedObjects"
      ]
    ]
  ],
  "NotRelationField": [
    [
      "django/contrib/admin/utils.py",
      [
        "NotRelationField"
      ]
    ]
  ],
  "AutocompleteJsonView": [
    [
      "django/contrib/admin/views/autocomplete.py",
      [
        "AutocompleteJsonView"
      ]
    ]
  ],
  "ChangeList": [
    [
      "django/contrib/admin/views/main.py",
      [
        "ChangeList"
      ]
    ]
  ],
  "FilteredSelectMultiple": [
    [
      "django/contrib/admin/widgets.py",
      [
        "FilteredSelectMultiple"
      ]
    ]
  ],
  "Media": [
    [
      "django/contrib/admin/widgets.py",
      [
        "AdminDateWidget",
        "Media"
      ]
    ],
    [
      "django/contrib/admin/widgets.py",
      [
        "AdminTimeWidget",
        "Media"
      ]
    ],
    [
      "django/contrib/gis/forms/widgets.py",
      [
        "OpenLayersWidget",
        "Media"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "Media"
      ]
    ],
    [
      "tests/admin_inlines/admin.py",
      [
        "HolderAdmin",
        "Media"
      ]
    ],
    [
      "tests/admin_inlines/admin.py",
      [
        "InnerInline2",
        "Media"
      ]
    ],
    [
      "tests/admin_inlines/admin.py",
      [
        "CustomNumberWidget",
        "Media"
      ]
    ],
    [
      "tests/admin_inlines/admin.py",
      [
        "InnerInline3",
        "Media"
      ]
    ],
    [
      "tests/admin_views/forms.py",
      [
        "CustomAdminAuthenticationForm",
        "Media"
      ]
    ],
    [
      "tests/admin_views/forms.py",
      [
        "MediaActionForm",
        "Media"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Media"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_dsl",
        "MyWidget1",
        "Media"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_combine_media",
        "MyWidget1",
        "Media"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_combine_media",
        "MyWidget2",
        "Media"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_combine_media",
        "MyWidget3",
        "Media"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_combine_media",
        "MyWidget4",
        "Media"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_property_parent_references",
        "MyWidget1",
        "Media"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_inheritance",
        "MyWidget1",
        "Media"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_inheritance",
        "MyWidget8",
        "Media"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_inheritance_from_property",
        "MyWidget1",
        "Media"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_inheritance_from_property",
        "MyWidget9",
        "Media"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_inheritance_from_property",
        "MyWidget10",
        "Media"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_inheritance_extends",
        "MyWidget1",
        "Media"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_inheritance_extends",
        "MyWidget11",
        "Media"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_inheritance_single_type",
        "MyWidget1",
        "Media"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_inheritance_single_type",
        "MyWidget12",
        "Media"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_multi_widget",
        "MyWidget1",
        "Media"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_multi_widget",
        "MyWidget2",
        "Media"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_multi_widget",
        "MyWidget3",
        "Media"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_form_media",
        "MyWidget1",
        "Media"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_form_media",
        "MyWidget2",
        "Media"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_form_media",
        "MyWidget3",
        "Media"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_form_media",
        "FormWithMedia",
        "Media"
      ]
    ],
    [
      "tests/generic_inline_admin/models.py",
      [
        "Media"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormWithMedia",
        "Media"
      ]
    ]
  ],
  "AdminDateWidget": [
    [
      "django/contrib/admin/widgets.py",
      [
        "AdminDateWidget"
      ]
    ]
  ],
  "AdminTimeWidget": [
    [
      "django/contrib/admin/widgets.py",
      [
        "AdminTimeWidget"
      ]
    ]
  ],
  "AdminSplitDateTime": [
    [
      "django/contrib/admin/widgets.py",
      [
        "AdminSplitDateTime"
      ]
    ]
  ],
  "AdminRadioSelect": [
    [
      "django/contrib/admin/widgets.py",
      [
        "AdminRadioSelect"
      ]
    ]
  ],
  "AdminFileWidget": [
    [
      "django/contrib/admin/widgets.py",
      [
        "AdminFileWidget"
      ]
    ]
  ],
  "ForeignKeyRawIdWidget": [
    [
      "django/contrib/admin/widgets.py",
      [
        "ForeignKeyRawIdWidget"
      ]
    ]
  ],
  "ManyToManyRawIdWidget": [
    [
      "django/contrib/admin/widgets.py",
      [
        "ManyToManyRawIdWidget"
      ]
    ]
  ],
  "RelatedFieldWidgetWrapper": [
    [
      "django/contrib/admin/widgets.py",
      [
        "RelatedFieldWidgetWrapper"
      ]
    ]
  ],
  "AdminTextareaWidget": [
    [
      "django/contrib/admin/widgets.py",
      [
        "AdminTextareaWidget"
      ]
    ]
  ],
  "AdminTextInputWidget": [
    [
      "django/contrib/admin/widgets.py",
      [
        "AdminTextInputWidget"
      ]
    ]
  ],
  "AdminEmailInputWidget": [
    [
      "django/contrib/admin/widgets.py",
      [
        "AdminEmailInputWidget"
      ]
    ]
  ],
  "AdminURLFieldWidget": [
    [
      "django/contrib/admin/widgets.py",
      [
        "AdminURLFieldWidget"
      ]
    ]
  ],
  "AdminIntegerFieldWidget": [
    [
      "django/contrib/admin/widgets.py",
      [
        "AdminIntegerFieldWidget"
      ]
    ]
  ],
  "AdminBigIntegerFieldWidget": [
    [
      "django/contrib/admin/widgets.py",
      [
        "AdminBigIntegerFieldWidget"
      ]
    ]
  ],
  "AdminUUIDInputWidget": [
    [
      "django/contrib/admin/widgets.py",
      [
        "AdminUUIDInputWidget"
      ]
    ]
  ],
  "AutocompleteMixin": [
    [
      "django/contrib/admin/widgets.py",
      [
        "AutocompleteMixin"
      ]
    ]
  ],
  "AutocompleteSelect": [
    [
      "django/contrib/admin/widgets.py",
      [
        "AutocompleteSelect"
      ]
    ]
  ],
  "AutocompleteSelectMultiple": [
    [
      "django/contrib/admin/widgets.py",
      [
        "AutocompleteSelectMultiple"
      ]
    ]
  ],
  "AdminDocsConfig": [
    [
      "django/contrib/admindocs/apps.py",
      [
        "AdminDocsConfig"
      ]
    ]
  ],
  "XViewMiddleware": [
    [
      "django/contrib/admindocs/middleware.py",
      [
        "XViewMiddleware"
      ]
    ]
  ],
  "BaseAdminDocsView": [
    [
      "django/contrib/admindocs/views.py",
      [
        "BaseAdminDocsView"
      ]
    ]
  ],
  "BookmarkletsView": [
    [
      "django/contrib/admindocs/views.py",
      [
        "BookmarkletsView"
      ]
    ]
  ],
  "TemplateTagIndexView": [
    [
      "django/contrib/admindocs/views.py",
      [
        "TemplateTagIndexView"
      ]
    ]
  ],
  "TemplateFilterIndexView": [
    [
      "django/contrib/admindocs/views.py",
      [
        "TemplateFilterIndexView"
      ]
    ]
  ],
  "ViewIndexView": [
    [
      "django/contrib/admindocs/views.py",
      [
        "ViewIndexView"
      ]
    ]
  ],
  "ViewDetailView": [
    [
      "django/contrib/admindocs/views.py",
      [
        "ViewDetailView"
      ]
    ]
  ],
  "ModelIndexView": [
    [
      "django/contrib/admindocs/views.py",
      [
        "ModelIndexView"
      ]
    ]
  ],
  "ModelDetailView": [
    [
      "django/contrib/admindocs/views.py",
      [
        "ModelDetailView"
      ]
    ]
  ],
  "TemplateDetailView": [
    [
      "django/contrib/admindocs/views.py",
      [
        "TemplateDetailView"
      ]
    ]
  ],
  "GroupAdmin": [
    [
      "django/contrib/auth/admin.py",
      [
        "GroupAdmin"
      ]
    ],
    [
      "tests/admin_changelist/admin.py",
      [
        "GroupAdmin"
      ]
    ]
  ],
  "UserAdmin": [
    [
      "django/contrib/auth/admin.py",
      [
        "UserAdmin"
      ]
    ]
  ],
  "AuthConfig": [
    [
      "django/contrib/auth/apps.py",
      [
        "AuthConfig"
      ]
    ]
  ],
  "ModelBackend": [
    [
      "django/contrib/auth/backends.py",
      [
        "ModelBackend"
      ]
    ]
  ],
  "AllowAllUsersModelBackend": [
    [
      "django/contrib/auth/backends.py",
      [
        "AllowAllUsersModelBackend"
      ]
    ]
  ],
  "RemoteUserBackend": [
    [
      "django/contrib/auth/backends.py",
      [
        "RemoteUserBackend"
      ]
    ]
  ],
  "AllowAllUsersRemoteUserBackend": [
    [
      "django/contrib/auth/backends.py",
      [
        "AllowAllUsersRemoteUserBackend"
      ]
    ]
  ],
  "BaseUserManager": [
    [
      "django/contrib/auth/base_user.py",
      [
        "BaseUserManager"
      ]
    ]
  ],
  "AbstractBaseUser": [
    [
      "django/contrib/auth/base_user.py",
      [
        "AbstractBaseUser"
      ]
    ]
  ],
  "PermLookupDict": [
    [
      "django/contrib/auth/context_processors.py",
      [
        "PermLookupDict"
      ]
    ]
  ],
  "PermWrapper": [
    [
      "django/contrib/auth/context_processors.py",
      [
        "PermWrapper"
      ]
    ]
  ],
  "ReadOnlyPasswordHashWidget": [
    [
      "django/contrib/auth/forms.py",
      [
        "ReadOnlyPasswordHashWidget"
      ]
    ]
  ],
  "ReadOnlyPasswordHashField": [
    [
      "django/contrib/auth/forms.py",
      [
        "ReadOnlyPasswordHashField"
      ]
    ]
  ],
  "UsernameField": [
    [
      "django/contrib/auth/forms.py",
      [
        "UsernameField"
      ]
    ]
  ],
  "UserCreationForm": [
    [
      "django/contrib/auth/forms.py",
      [
        "UserCreationForm"
      ]
    ]
  ],
  "UserChangeForm": [
    [
      "django/contrib/auth/forms.py",
      [
        "UserChangeForm"
      ]
    ]
  ],
  "AuthenticationForm": [
    [
      "django/contrib/auth/forms.py",
      [
        "AuthenticationForm"
      ]
    ]
  ],
  "PasswordResetForm": [
    [
      "django/contrib/auth/forms.py",
      [
        "PasswordResetForm"
      ]
    ]
  ],
  "SetPasswordForm": [
    [
      "django/contrib/auth/forms.py",
      [
        "SetPasswordForm"
      ]
    ]
  ],
  "PasswordChangeForm": [
    [
      "django/contrib/auth/forms.py",
      [
        "PasswordChangeForm"
      ]
    ]
  ],
  "BasePasswordHasher": [
    [
      "django/contrib/auth/hashers.py",
      [
        "BasePasswordHasher"
      ]
    ]
  ],
  "PBKDF2PasswordHasher": [
    [
      "django/contrib/auth/hashers.py",
      [
        "PBKDF2PasswordHasher"
      ]
    ]
  ],
  "PBKDF2SHA1PasswordHasher": [
    [
      "django/contrib/auth/hashers.py",
      [
        "PBKDF2SHA1PasswordHasher"
      ]
    ]
  ],
  "Argon2PasswordHasher": [
    [
      "django/contrib/auth/hashers.py",
      [
        "Argon2PasswordHasher"
      ]
    ]
  ],
  "BCryptSHA256PasswordHasher": [
    [
      "django/contrib/auth/hashers.py",
      [
        "BCryptSHA256PasswordHasher"
      ]
    ]
  ],
  "BCryptPasswordHasher": [
    [
      "django/contrib/auth/hashers.py",
      [
        "BCryptPasswordHasher"
      ]
    ]
  ],
  "SHA1PasswordHasher": [
    [
      "django/contrib/auth/hashers.py",
      [
        "SHA1PasswordHasher"
      ]
    ]
  ],
  "MD5PasswordHasher": [
    [
      "django/contrib/auth/hashers.py",
      [
        "MD5PasswordHasher"
      ]
    ]
  ],
  "UnsaltedSHA1PasswordHasher": [
    [
      "django/contrib/auth/hashers.py",
      [
        "UnsaltedSHA1PasswordHasher"
      ]
    ]
  ],
  "UnsaltedMD5PasswordHasher": [
    [
      "django/contrib/auth/hashers.py",
      [
        "UnsaltedMD5PasswordHasher"
      ]
    ]
  ],
  "CryptPasswordHasher": [
    [
      "django/contrib/auth/hashers.py",
      [
        "CryptPasswordHasher"
      ]
    ]
  ],
  "Command": [
    [
      "django/contrib/auth/management/commands/changepassword.py",
      [
        "Command"
      ]
    ],
    [
      "django/contrib/auth/management/commands/createsuperuser.py",
      [
        "Command"
      ]
    ],
    [
      "django/contrib/contenttypes/management/commands/remove_stale_contenttypes.py",
      [
        "Command"
      ]
    ],
    [
      "django/contrib/gis/management/commands/inspectdb.py",
      [
        "Command"
      ]
    ],
    [
      "django/contrib/gis/management/commands/ogrinspect.py",
      [
        "Command"
      ]
    ],
    [
      "django/contrib/sessions/management/commands/clearsessions.py",
      [
        "Command"
      ]
    ],
    [
      "django/contrib/sitemaps/management/commands/ping_google.py",
      [
        "Command"
      ]
    ],
    [
      "django/contrib/staticfiles/management/commands/collectstatic.py",
      [
        "Command"
      ]
    ],
    [
      "django/contrib/staticfiles/management/commands/findstatic.py",
      [
        "Command"
      ]
    ],
    [
      "django/contrib/staticfiles/management/commands/runserver.py",
      [
        "Command"
      ]
    ],
    [
      "django/core/management/commands/check.py",
      [
        "Command"
      ]
    ],
    [
      "django/core/management/commands/compilemessages.py",
      [
        "Command"
      ]
    ],
    [
      "django/core/management/commands/createcachetable.py",
      [
        "Command"
      ]
    ],
    [
      "django/core/management/commands/dbshell.py",
      [
        "Command"
      ]
    ],
    [
      "django/core/management/commands/diffsettings.py",
      [
        "Command"
      ]
    ],
    [
      "django/core/management/commands/dumpdata.py",
      [
        "Command"
      ]
    ],
    [
      "django/core/management/commands/flush.py",
      [
        "Command"
      ]
    ],
    [
      "django/core/management/commands/inspectdb.py",
      [
        "Command"
      ]
    ],
    [
      "django/core/management/commands/loaddata.py",
      [
        "Command"
      ]
    ],
    [
      "django/core/management/commands/makemessages.py",
      [
        "Command"
      ]
    ],
    [
      "django/core/management/commands/makemigrations.py",
      [
        "Command"
      ]
    ],
    [
      "django/core/management/commands/migrate.py",
      [
        "Command"
      ]
    ],
    [
      "django/core/management/commands/runserver.py",
      [
        "Command"
      ]
    ],
    [
      "django/core/management/commands/sendtestemail.py",
      [
        "Command"
      ]
    ],
    [
      "django/core/management/commands/shell.py",
      [
        "Command"
      ]
    ],
    [
      "django/core/management/commands/showmigrations.py",
      [
        "Command"
      ]
    ],
    [
      "django/core/management/commands/sqlflush.py",
      [
        "Command"
      ]
    ],
    [
      "django/core/management/commands/sqlmigrate.py",
      [
        "Command"
      ]
    ],
    [
      "django/core/management/commands/sqlsequencereset.py",
      [
        "Command"
      ]
    ],
    [
      "django/core/management/commands/squashmigrations.py",
      [
        "Command"
      ]
    ],
    [
      "django/core/management/commands/startapp.py",
      [
        "Command"
      ]
    ],
    [
      "django/core/management/commands/startproject.py",
      [
        "Command"
      ]
    ],
    [
      "django/core/management/commands/test.py",
      [
        "Command"
      ]
    ],
    [
      "django/core/management/commands/testserver.py",
      [
        "Command"
      ]
    ],
    [
      "tests/admin_scripts/complex_app/management/commands/duplicate.py",
      [
        "Command"
      ]
    ],
    [
      "tests/admin_scripts/management/commands/app_command.py",
      [
        "Command"
      ]
    ],
    [
      "tests/admin_scripts/management/commands/base_command.py",
      [
        "Command"
      ]
    ],
    [
      "tests/admin_scripts/management/commands/custom_startproject.py",
      [
        "Command"
      ]
    ],
    [
      "tests/admin_scripts/management/commands/label_command.py",
      [
        "Command"
      ]
    ],
    [
      "tests/admin_scripts/management/commands/noargs_command.py",
      [
        "Command"
      ]
    ],
    [
      "tests/admin_scripts/simple_app/management/commands/duplicate.py",
      [
        "Command"
      ]
    ],
    [
      "tests/bash_completion/management/commands/test_command.py",
      [
        "Command"
      ]
    ],
    [
      "tests/user_commands/management/commands/common_args.py",
      [
        "Command"
      ]
    ],
    [
      "tests/user_commands/management/commands/dance.py",
      [
        "Command"
      ]
    ],
    [
      "tests/user_commands/management/commands/hal.py",
      [
        "Command"
      ]
    ],
    [
      "tests/user_commands/management/commands/no_translations.py",
      [
        "Command"
      ]
    ],
    [
      "tests/user_commands/management/commands/required_option.py",
      [
        "Command"
      ]
    ],
    [
      "tests/user_commands/management/commands/reverse_url.py",
      [
        "Command"
      ]
    ],
    [
      "tests/user_commands/management/commands/set_option.py",
      [
        "Command"
      ]
    ],
    [
      "tests/user_commands/management/commands/subparser.py",
      [
        "Command"
      ]
    ],
    [
      "tests/user_commands/management/commands/transaction.py",
      [
        "Command"
      ]
    ]
  ],
  "NotRunningInTTYException": [
    [
      "django/contrib/auth/management/commands/createsuperuser.py",
      [
        "NotRunningInTTYException"
      ]
    ]
  ],
  "AuthenticationMiddleware": [
    [
      "django/contrib/auth/middleware.py",
      [
        "AuthenticationMiddleware"
      ]
    ]
  ],
  "RemoteUserMiddleware": [
    [
      "django/contrib/auth/middleware.py",
      [
        "RemoteUserMiddleware"
      ]
    ]
  ],
  "PersistentRemoteUserMiddleware": [
    [
      "django/contrib/auth/middleware.py",
      [
        "PersistentRemoteUserMiddleware"
      ]
    ]
  ],
  "AccessMixin": [
    [
      "django/contrib/auth/mixins.py",
      [
        "AccessMixin"
      ]
    ]
  ],
  "LoginRequiredMixin": [
    [
      "django/contrib/auth/mixins.py",
      [
        "LoginRequiredMixin"
      ]
    ]
  ],
  "PermissionRequiredMixin": [
    [
      "django/contrib/auth/mixins.py",
      [
        "PermissionRequiredMixin"
      ]
    ]
  ],
  "UserPassesTestMixin": [
    [
      "django/contrib/auth/mixins.py",
      [
        "UserPassesTestMixin"
      ]
    ]
  ],
  "PermissionManager": [
    [
      "django/contrib/auth/models.py",
      [
        "PermissionManager"
      ]
    ]
  ],
  "Permission": [
    [
      "django/contrib/auth/models.py",
      [
        "Permission"
      ]
    ]
  ],
  "GroupManager": [
    [
      "django/contrib/auth/models.py",
      [
        "GroupManager"
      ]
    ]
  ],
  "Group": [
    [
      "django/contrib/auth/models.py",
      [
        "Group"
      ]
    ],
    [
      "django/utils/regex_helper.py",
      [
        "Group"
      ]
    ],
    [
      "tests/admin_changelist/models.py",
      [
        "Group"
      ]
    ],
    [
      "tests/admin_docs/models.py",
      [
        "Group"
      ]
    ],
    [
      "tests/foreign_object/models/person.py",
      [
        "Group"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_ambiguous_relationship_model",
        "Group"
      ]
    ],
    [
      "tests/m2m_through/models.py",
      [
        "Group"
      ]
    ],
    [
      "tests/m2m_through_regress/models.py",
      [
        "Group"
      ]
    ],
    [
      "tests/queryset_pickle/models.py",
      [
        "Group"
      ]
    ]
  ],
  "UserManager": [
    [
      "django/contrib/auth/models.py",
      [
        "UserManager"
      ]
    ],
    [
      "tests/auth_tests/models/no_password.py",
      [
        "UserManager"
      ]
    ]
  ],
  "PermissionsMixin": [
    [
      "django/contrib/auth/models.py",
      [
        "PermissionsMixin"
      ]
    ]
  ],
  "AbstractUser": [
    [
      "django/contrib/auth/models.py",
      [
        "AbstractUser"
      ]
    ]
  ],
  "User": [
    [
      "django/contrib/auth/models.py",
      [
        "User"
      ]
    ],
    [
      "tests/delete/models.py",
      [
        "User"
      ]
    ],
    [
      "tests/m2m_and_m2o/models.py",
      [
        "User"
      ]
    ],
    [
      "tests/m2m_regress/models.py",
      [
        "User"
      ]
    ],
    [
      "tests/model_formsets_regress/models.py",
      [
        "User"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "User"
      ]
    ],
    [
      "tests/proxy_models/models.py",
      [
        "User"
      ]
    ],
    [
      "tests/reverse_lookup/models.py",
      [
        "User"
      ]
    ],
    [
      "tests/select_related_onetoone/models.py",
      [
        "User"
      ]
    ],
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "User"
      ]
    ]
  ],
  "AnonymousUser": [
    [
      "django/contrib/auth/models.py",
      [
        "AnonymousUser"
      ]
    ]
  ],
  "MinimumLengthValidator": [
    [
      "django/contrib/auth/password_validation.py",
      [
        "MinimumLengthValidator"
      ]
    ]
  ],
  "UserAttributeSimilarityValidator": [
    [
      "django/contrib/auth/password_validation.py",
      [
        "UserAttributeSimilarityValidator"
      ]
    ]
  ],
  "CommonPasswordValidator": [
    [
      "django/contrib/auth/password_validation.py",
      [
        "CommonPasswordValidator"
      ]
    ]
  ],
  "NumericPasswordValidator": [
    [
      "django/contrib/auth/password_validation.py",
      [
        "NumericPasswordValidator"
      ]
    ]
  ],
  "PasswordResetTokenGenerator": [
    [
      "django/contrib/auth/tokens.py",
      [
        "PasswordResetTokenGenerator"
      ]
    ]
  ],
  "ASCIIUsernameValidator": [
    [
      "django/contrib/auth/validators.py",
      [
        "ASCIIUsernameValidator"
      ]
    ]
  ],
  "UnicodeUsernameValidator": [
    [
      "django/contrib/auth/validators.py",
      [
        "UnicodeUsernameValidator"
      ]
    ]
  ],
  "SuccessURLAllowedHostsMixin": [
    [
      "django/contrib/auth/views.py",
      [
        "SuccessURLAllowedHostsMixin"
      ]
    ]
  ],
  "LoginView": [
    [
      "django/contrib/auth/views.py",
      [
        "LoginView"
      ]
    ]
  ],
  "LogoutView": [
    [
      "django/contrib/auth/views.py",
      [
        "LogoutView"
      ]
    ]
  ],
  "PasswordContextMixin": [
    [
      "django/contrib/auth/views.py",
      [
        "PasswordContextMixin"
      ]
    ]
  ],
  "PasswordResetView": [
    [
      "django/contrib/auth/views.py",
      [
        "PasswordResetView"
      ]
    ]
  ],
  "PasswordResetDoneView": [
    [
      "django/contrib/auth/views.py",
      [
        "PasswordResetDoneView"
      ]
    ]
  ],
  "PasswordResetConfirmView": [
    [
      "django/contrib/auth/views.py",
      [
        "PasswordResetConfirmView"
      ]
    ]
  ],
  "PasswordResetCompleteView": [
    [
      "django/contrib/auth/views.py",
      [
        "PasswordResetCompleteView"
      ]
    ]
  ],
  "PasswordChangeView": [
    [
      "django/contrib/auth/views.py",
      [
        "PasswordChangeView"
      ]
    ]
  ],
  "PasswordChangeDoneView": [
    [
      "django/contrib/auth/views.py",
      [
        "PasswordChangeDoneView"
      ]
    ]
  ],
  "GenericInlineModelAdminChecks": [
    [
      "django/contrib/contenttypes/admin.py",
      [
        "GenericInlineModelAdminChecks"
      ]
    ]
  ],
  "GenericInlineModelAdmin": [
    [
      "django/contrib/contenttypes/admin.py",
      [
        "GenericInlineModelAdmin"
      ]
    ]
  ],
  "GenericStackedInline": [
    [
      "django/contrib/contenttypes/admin.py",
      [
        "GenericStackedInline"
      ]
    ]
  ],
  "GenericTabularInline": [
    [
      "django/contrib/contenttypes/admin.py",
      [
        "GenericTabularInline"
      ]
    ]
  ],
  "ContentTypesConfig": [
    [
      "django/contrib/contenttypes/apps.py",
      [
        "ContentTypesConfig"
      ]
    ]
  ],
  "GenericForeignKey": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericForeignKey"
      ]
    ]
  ],
  "GenericRel": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericRel"
      ]
    ]
  ],
  "GenericRelation": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericRelation"
      ]
    ]
  ],
  "ReverseGenericManyToOneDescriptor": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "ReverseGenericManyToOneDescriptor"
      ]
    ]
  ],
  "GenericRelatedObjectManager": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "create_generic_related_manager",
        "GenericRelatedObjectManager"
      ]
    ]
  ],
  "BaseGenericInlineFormSet": [
    [
      "django/contrib/contenttypes/forms.py",
      [
        "BaseGenericInlineFormSet"
      ]
    ]
  ],
  "RenameContentType": [
    [
      "django/contrib/contenttypes/management/__init__.py",
      [
        "RenameContentType"
      ]
    ]
  ],
  "NoFastDeleteCollector": [
    [
      "django/contrib/contenttypes/management/commands/remove_stale_contenttypes.py",
      [
        "NoFastDeleteCollector"
      ]
    ]
  ],
  "ContentTypeManager": [
    [
      "django/contrib/contenttypes/models.py",
      [
        "ContentTypeManager"
      ]
    ]
  ],
  "ContentType": [
    [
      "django/contrib/contenttypes/models.py",
      [
        "ContentType"
      ]
    ]
  ],
  "FlatPageAdmin": [
    [
      "django/contrib/flatpages/admin.py",
      [
        "FlatPageAdmin"
      ]
    ]
  ],
  "FlatPagesConfig": [
    [
      "django/contrib/flatpages/apps.py",
      [
        "FlatPagesConfig"
      ]
    ]
  ],
  "FlatpageForm": [
    [
      "django/contrib/flatpages/forms.py",
      [
        "FlatpageForm"
      ]
    ]
  ],
  "FlatpageFallbackMiddleware": [
    [
      "django/contrib/flatpages/middleware.py",
      [
        "FlatpageFallbackMiddleware"
      ]
    ]
  ],
  "FlatPage": [
    [
      "django/contrib/flatpages/models.py",
      [
        "FlatPage"
      ]
    ]
  ],
  "FlatPageSitemap": [
    [
      "django/contrib/flatpages/sitemaps.py",
      [
        "FlatPageSitemap"
      ]
    ]
  ],
  "FlatpageNode": [
    [
      "django/contrib/flatpages/templatetags/flatpages.py",
      [
        "FlatpageNode"
      ]
    ]
  ],
  "OLMap": [
    [
      "django/contrib/gis/admin/options.py",
      [
        "GeoModelAdmin",
        "get_map_widget",
        "OLMap"
      ]
    ]
  ],
  "GeoModelAdmin": [
    [
      "django/contrib/gis/admin/options.py",
      [
        "GeoModelAdmin"
      ]
    ]
  ],
  "OSMGeoAdmin": [
    [
      "django/contrib/gis/admin/options.py",
      [
        "OSMGeoAdmin"
      ]
    ]
  ],
  "OpenLayersWidget": [
    [
      "django/contrib/gis/admin/widgets.py",
      [
        "OpenLayersWidget"
      ]
    ],
    [
      "django/contrib/gis/forms/widgets.py",
      [
        "OpenLayersWidget"
      ]
    ]
  ],
  "GISConfig": [
    [
      "django/contrib/gis/apps.py",
      [
        "GISConfig"
      ]
    ]
  ],
  "WKTAdapter": [
    [
      "django/contrib/gis/db/backends/base/adapter.py",
      [
        "WKTAdapter"
      ]
    ]
  ],
  "BaseSpatialFeatures": [
    [
      "django/contrib/gis/db/backends/base/features.py",
      [
        "BaseSpatialFeatures"
      ]
    ]
  ],
  "SpatialRefSysMixin": [
    [
      "django/contrib/gis/db/backends/base/models.py",
      [
        "SpatialRefSysMixin"
      ]
    ]
  ],
  "BaseSpatialOperations": [
    [
      "django/contrib/gis/db/backends/base/operations.py",
      [
        "BaseSpatialOperations"
      ]
    ]
  ],
  "DatabaseWrapper": [
    [
      "django/contrib/gis/db/backends/mysql/base.py",
      [
        "DatabaseWrapper"
      ]
    ],
    [
      "django/contrib/gis/db/backends/oracle/base.py",
      [
        "DatabaseWrapper"
      ]
    ],
    [
      "django/contrib/gis/db/backends/postgis/base.py",
      [
        "DatabaseWrapper"
      ]
    ],
    [
      "django/contrib/gis/db/backends/spatialite/base.py",
      [
        "DatabaseWrapper"
      ]
    ],
    [
      "django/db/backends/dummy/base.py",
      [
        "DatabaseWrapper"
      ]
    ],
    [
      "django/db/backends/mysql/base.py",
      [
        "DatabaseWrapper"
      ]
    ],
    [
      "django/db/backends/oracle/base.py",
      [
        "DatabaseWrapper"
      ]
    ],
    [
      "django/db/backends/postgresql/base.py",
      [
        "DatabaseWrapper"
      ]
    ],
    [
      "django/db/backends/sqlite3/base.py",
      [
        "DatabaseWrapper"
      ]
    ]
  ],
  "DatabaseFeatures": [
    [
      "django/contrib/gis/db/backends/mysql/features.py",
      [
        "DatabaseFeatures"
      ]
    ],
    [
      "django/contrib/gis/db/backends/oracle/features.py",
      [
        "DatabaseFeatures"
      ]
    ],
    [
      "django/contrib/gis/db/backends/postgis/features.py",
      [
        "DatabaseFeatures"
      ]
    ],
    [
      "django/contrib/gis/db/backends/spatialite/features.py",
      [
        "DatabaseFeatures"
      ]
    ],
    [
      "django/db/backends/mysql/features.py",
      [
        "DatabaseFeatures"
      ]
    ],
    [
      "django/db/backends/oracle/features.py",
      [
        "DatabaseFeatures"
      ]
    ],
    [
      "django/db/backends/postgresql/features.py",
      [
        "DatabaseFeatures"
      ]
    ],
    [
      "django/db/backends/sqlite3/features.py",
      [
        "DatabaseFeatures"
      ]
    ]
  ],
  "MySQLIntrospection": [
    [
      "django/contrib/gis/db/backends/mysql/introspection.py",
      [
        "MySQLIntrospection"
      ]
    ]
  ],
  "MySQLOperations": [
    [
      "django/contrib/gis/db/backends/mysql/operations.py",
      [
        "MySQLOperations"
      ]
    ]
  ],
  "MySQLGISSchemaEditor": [
    [
      "django/contrib/gis/db/backends/mysql/schema.py",
      [
        "MySQLGISSchemaEditor"
      ]
    ]
  ],
  "OracleSpatialAdapter": [
    [
      "django/contrib/gis/db/backends/oracle/adapter.py",
      [
        "OracleSpatialAdapter"
      ]
    ]
  ],
  "OracleIntrospection": [
    [
      "django/contrib/gis/db/backends/oracle/introspection.py",
      [
        "OracleIntrospection"
      ]
    ]
  ],
  "OracleGeometryColumns": [
    [
      "django/contrib/gis/db/backends/oracle/models.py",
      [
        "OracleGeometryColumns"
      ]
    ]
  ],
  "OracleSpatialRefSys": [
    [
      "django/contrib/gis/db/backends/oracle/models.py",
      [
        "OracleSpatialRefSys"
      ]
    ]
  ],
  "SDOOperator": [
    [
      "django/contrib/gis/db/backends/oracle/operations.py",
      [
        "SDOOperator"
      ]
    ]
  ],
  "SDODWithin": [
    [
      "django/contrib/gis/db/backends/oracle/operations.py",
      [
        "SDODWithin"
      ]
    ]
  ],
  "SDODisjoint": [
    [
      "django/contrib/gis/db/backends/oracle/operations.py",
      [
        "SDODisjoint"
      ]
    ]
  ],
  "SDORelate": [
    [
      "django/contrib/gis/db/backends/oracle/operations.py",
      [
        "SDORelate"
      ]
    ]
  ],
  "OracleOperations": [
    [
      "django/contrib/gis/db/backends/oracle/operations.py",
      [
        "OracleOperations"
      ]
    ]
  ],
  "OracleGISSchemaEditor": [
    [
      "django/contrib/gis/db/backends/oracle/schema.py",
      [
        "OracleGISSchemaEditor"
      ]
    ]
  ],
  "PostGISAdapter": [
    [
      "django/contrib/gis/db/backends/postgis/adapter.py",
      [
        "PostGISAdapter"
      ]
    ]
  ],
  "PostGISIntrospection": [
    [
      "django/contrib/gis/db/backends/postgis/introspection.py",
      [
        "PostGISIntrospection"
      ]
    ]
  ],
  "PostGISGeometryColumns": [
    [
      "django/contrib/gis/db/backends/postgis/models.py",
      [
        "PostGISGeometryColumns"
      ]
    ]
  ],
  "PostGISSpatialRefSys": [
    [
      "django/contrib/gis/db/backends/postgis/models.py",
      [
        "PostGISSpatialRefSys"
      ]
    ]
  ],
  "PostGISOperator": [
    [
      "django/contrib/gis/db/backends/postgis/operations.py",
      [
        "PostGISOperator"
      ]
    ]
  ],
  "ST_Polygon": [
    [
      "django/contrib/gis/db/backends/postgis/operations.py",
      [
        "ST_Polygon"
      ]
    ]
  ],
  "PostGISOperations": [
    [
      "django/contrib/gis/db/backends/postgis/operations.py",
      [
        "PostGISOperations"
      ]
    ]
  ],
  "PostGISSchemaEditor": [
    [
      "django/contrib/gis/db/backends/postgis/schema.py",
      [
        "PostGISSchemaEditor"
      ]
    ]
  ],
  "SpatiaLiteAdapter": [
    [
      "django/contrib/gis/db/backends/spatialite/adapter.py",
      [
        "SpatiaLiteAdapter"
      ]
    ]
  ],
  "SpatiaLiteClient": [
    [
      "django/contrib/gis/db/backends/spatialite/client.py",
      [
        "SpatiaLiteClient"
      ]
    ]
  ],
  "GeoFlexibleFieldLookupDict": [
    [
      "django/contrib/gis/db/backends/spatialite/introspection.py",
      [
        "GeoFlexibleFieldLookupDict"
      ]
    ]
  ],
  "SpatiaLiteIntrospection": [
    [
      "django/contrib/gis/db/backends/spatialite/introspection.py",
      [
        "SpatiaLiteIntrospection"
      ]
    ]
  ],
  "SpatialiteGeometryColumns": [
    [
      "django/contrib/gis/db/backends/spatialite/models.py",
      [
        "SpatialiteGeometryColumns"
      ]
    ]
  ],
  "SpatialiteSpatialRefSys": [
    [
      "django/contrib/gis/db/backends/spatialite/models.py",
      [
        "SpatialiteSpatialRefSys"
      ]
    ]
  ],
  "SpatialiteNullCheckOperator": [
    [
      "django/contrib/gis/db/backends/spatialite/operations.py",
      [
        "SpatialiteNullCheckOperator"
      ]
    ]
  ],
  "SpatiaLiteOperations": [
    [
      "django/contrib/gis/db/backends/spatialite/operations.py",
      [
        "SpatiaLiteOperations"
      ]
    ]
  ],
  "SpatialiteSchemaEditor": [
    [
      "django/contrib/gis/db/backends/spatialite/schema.py",
      [
        "SpatialiteSchemaEditor"
      ]
    ]
  ],
  "SpatialOperator": [
    [
      "django/contrib/gis/db/backends/utils.py",
      [
        "SpatialOperator"
      ]
    ]
  ],
  "GeoAggregate": [
    [
      "django/contrib/gis/db/models/aggregates.py",
      [
        "GeoAggregate"
      ]
    ]
  ],
  "Collect": [
    [
      "django/contrib/gis/db/models/aggregates.py",
      [
        "Collect"
      ]
    ]
  ],
  "Extent": [
    [
      "django/contrib/gis/db/models/aggregates.py",
      [
        "Extent"
      ]
    ]
  ],
  "Extent3D": [
    [
      "django/contrib/gis/db/models/aggregates.py",
      [
        "Extent3D"
      ]
    ]
  ],
  "MakeLine": [
    [
      "django/contrib/gis/db/models/aggregates.py",
      [
        "MakeLine"
      ]
    ]
  ],
  "Union": [
    [
      "django/contrib/gis/db/models/aggregates.py",
      [
        "Union"
      ]
    ],
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "Union"
      ]
    ]
  ],
  "BaseSpatialField": [
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "BaseSpatialField"
      ]
    ]
  ],
  "GeometryField": [
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "GeometryField"
      ]
    ],
    [
      "django/contrib/gis/forms/fields.py",
      [
        "GeometryField"
      ]
    ]
  ],
  "PointField": [
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "PointField"
      ]
    ],
    [
      "django/contrib/gis/forms/fields.py",
      [
        "PointField"
      ]
    ]
  ],
  "LineStringField": [
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "LineStringField"
      ]
    ],
    [
      "django/contrib/gis/forms/fields.py",
      [
        "LineStringField"
      ]
    ]
  ],
  "PolygonField": [
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "PolygonField"
      ]
    ],
    [
      "django/contrib/gis/forms/fields.py",
      [
        "PolygonField"
      ]
    ]
  ],
  "MultiPointField": [
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "MultiPointField"
      ]
    ],
    [
      "django/contrib/gis/forms/fields.py",
      [
        "MultiPointField"
      ]
    ]
  ],
  "MultiLineStringField": [
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "MultiLineStringField"
      ]
    ],
    [
      "django/contrib/gis/forms/fields.py",
      [
        "MultiLineStringField"
      ]
    ]
  ],
  "MultiPolygonField": [
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "MultiPolygonField"
      ]
    ],
    [
      "django/contrib/gis/forms/fields.py",
      [
        "MultiPolygonField"
      ]
    ]
  ],
  "GeometryCollectionField": [
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "GeometryCollectionField"
      ]
    ],
    [
      "django/contrib/gis/forms/fields.py",
      [
        "GeometryCollectionField"
      ]
    ]
  ],
  "ExtentField": [
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "ExtentField"
      ]
    ]
  ],
  "RasterField": [
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "RasterField"
      ]
    ]
  ],
  "GeoFuncMixin": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "GeoFuncMixin"
      ]
    ]
  ],
  "GeoFunc": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "GeoFunc"
      ]
    ]
  ],
  "GeomOutputGeoFunc": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "GeomOutputGeoFunc"
      ]
    ]
  ],
  "SQLiteDecimalToFloatMixin": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "SQLiteDecimalToFloatMixin"
      ]
    ]
  ],
  "OracleToleranceMixin": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "OracleToleranceMixin"
      ]
    ]
  ],
  "Area": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "Area"
      ]
    ],
    [
      "django/contrib/gis/measure.py",
      [
        "Area"
      ]
    ]
  ],
  "Azimuth": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "Azimuth"
      ]
    ]
  ],
  "AsGeoJSON": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "AsGeoJSON"
      ]
    ]
  ],
  "AsGML": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "AsGML"
      ]
    ]
  ],
  "AsKML": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "AsKML"
      ]
    ]
  ],
  "AsSVG": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "AsSVG"
      ]
    ]
  ],
  "BoundingCircle": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "BoundingCircle"
      ]
    ]
  ],
  "Centroid": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "Centroid"
      ]
    ]
  ],
  "Difference": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "Difference"
      ]
    ]
  ],
  "DistanceResultMixin": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "DistanceResultMixin"
      ]
    ]
  ],
  "Distance": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "Distance"
      ]
    ],
    [
      "django/contrib/gis/measure.py",
      [
        "Distance"
      ]
    ]
  ],
  "Envelope": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "Envelope"
      ]
    ],
    [
      "django/contrib/gis/gdal/envelope.py",
      [
        "Envelope"
      ]
    ]
  ],
  "ForcePolygonCW": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "ForcePolygonCW"
      ]
    ]
  ],
  "GeoHash": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "GeoHash"
      ]
    ]
  ],
  "Intersection": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "Intersection"
      ]
    ]
  ],
  "IsValid": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "IsValid"
      ]
    ]
  ],
  "Length": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "Length"
      ]
    ],
    [
      "django/db/models/functions/text.py",
      [
        "Length"
      ]
    ]
  ],
  "LineLocatePoint": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "LineLocatePoint"
      ]
    ]
  ],
  "MakeValid": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "MakeValid"
      ]
    ]
  ],
  "MemSize": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "MemSize"
      ]
    ]
  ],
  "NumGeometries": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "NumGeometries"
      ]
    ]
  ],
  "NumPoints": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "NumPoints"
      ]
    ]
  ],
  "Perimeter": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "Perimeter"
      ]
    ]
  ],
  "PointOnSurface": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "PointOnSurface"
      ]
    ]
  ],
  "Reverse": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "Reverse"
      ]
    ],
    [
      "django/db/models/functions/text.py",
      [
        "Reverse"
      ]
    ]
  ],
  "Scale": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "Scale"
      ]
    ]
  ],
  "SnapToGrid": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "SnapToGrid"
      ]
    ]
  ],
  "SymDifference": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "SymDifference"
      ]
    ]
  ],
  "Transform": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "Transform"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "Transform"
      ]
    ]
  ],
  "Translate": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "Translate"
      ]
    ]
  ],
  "RasterBandTransform": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "RasterBandTransform"
      ]
    ]
  ],
  "GISLookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "GISLookup"
      ]
    ]
  ],
  "OverlapsLeftLookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "OverlapsLeftLookup"
      ]
    ]
  ],
  "OverlapsRightLookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "OverlapsRightLookup"
      ]
    ]
  ],
  "OverlapsBelowLookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "OverlapsBelowLookup"
      ]
    ]
  ],
  "OverlapsAboveLookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "OverlapsAboveLookup"
      ]
    ]
  ],
  "LeftLookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "LeftLookup"
      ]
    ]
  ],
  "RightLookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "RightLookup"
      ]
    ]
  ],
  "StrictlyBelowLookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "StrictlyBelowLookup"
      ]
    ]
  ],
  "StrictlyAboveLookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "StrictlyAboveLookup"
      ]
    ]
  ],
  "SameAsLookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "SameAsLookup"
      ]
    ]
  ],
  "BBContainsLookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "BBContainsLookup"
      ]
    ]
  ],
  "BBOverlapsLookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "BBOverlapsLookup"
      ]
    ]
  ],
  "ContainedLookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "ContainedLookup"
      ]
    ]
  ],
  "ContainsLookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "ContainsLookup"
      ]
    ]
  ],
  "ContainsProperlyLookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "ContainsProperlyLookup"
      ]
    ]
  ],
  "CoveredByLookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "CoveredByLookup"
      ]
    ]
  ],
  "CoversLookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "CoversLookup"
      ]
    ]
  ],
  "CrossesLookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "CrossesLookup"
      ]
    ]
  ],
  "DisjointLookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "DisjointLookup"
      ]
    ]
  ],
  "EqualsLookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "EqualsLookup"
      ]
    ]
  ],
  "IntersectsLookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "IntersectsLookup"
      ]
    ]
  ],
  "OverlapsLookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "OverlapsLookup"
      ]
    ]
  ],
  "RelateLookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "RelateLookup"
      ]
    ]
  ],
  "TouchesLookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "TouchesLookup"
      ]
    ]
  ],
  "WithinLookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "WithinLookup"
      ]
    ]
  ],
  "DistanceLookupBase": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "DistanceLookupBase"
      ]
    ]
  ],
  "DWithinLookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "DWithinLookup"
      ]
    ]
  ],
  "DistanceLookupFromFunction": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "DistanceLookupFromFunction"
      ]
    ]
  ],
  "DistanceGTLookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "DistanceGTLookup"
      ]
    ]
  ],
  "DistanceGTELookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "DistanceGTELookup"
      ]
    ]
  ],
  "DistanceLTLookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "DistanceLTLookup"
      ]
    ]
  ],
  "DistanceLTELookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "DistanceLTELookup"
      ]
    ]
  ],
  "SpatialProxy": [
    [
      "django/contrib/gis/db/models/proxy.py",
      [
        "SpatialProxy"
      ]
    ]
  ],
  "AreaField": [
    [
      "django/contrib/gis/db/models/sql/conversion.py",
      [
        "AreaField"
      ]
    ]
  ],
  "DistanceField": [
    [
      "django/contrib/gis/db/models/sql/conversion.py",
      [
        "DistanceField"
      ]
    ]
  ],
  "GeoFeedMixin": [
    [
      "django/contrib/gis/feeds.py",
      [
        "GeoFeedMixin"
      ]
    ]
  ],
  "GeoRSSFeed": [
    [
      "django/contrib/gis/feeds.py",
      [
        "GeoRSSFeed"
      ]
    ]
  ],
  "GeoAtom1Feed": [
    [
      "django/contrib/gis/feeds.py",
      [
        "GeoAtom1Feed"
      ]
    ]
  ],
  "W3CGeoFeed": [
    [
      "django/contrib/gis/feeds.py",
      [
        "W3CGeoFeed"
      ]
    ]
  ],
  "Feed": [
    [
      "django/contrib/gis/feeds.py",
      [
        "Feed"
      ]
    ],
    [
      "django/contrib/syndication/views.py",
      [
        "Feed"
      ]
    ]
  ],
  "BaseGeometryWidget": [
    [
      "django/contrib/gis/forms/widgets.py",
      [
        "BaseGeometryWidget"
      ]
    ]
  ],
  "OSMWidget": [
    [
      "django/contrib/gis/forms/widgets.py",
      [
        "OSMWidget"
      ]
    ]
  ],
  "GDALBase": [
    [
      "django/contrib/gis/gdal/base.py",
      [
        "GDALBase"
      ]
    ]
  ],
  "DataSource": [
    [
      "django/contrib/gis/gdal/datasource.py",
      [
        "DataSource"
      ]
    ]
  ],
  "Driver": [
    [
      "django/contrib/gis/gdal/driver.py",
      [
        "Driver"
      ]
    ],
    [
      "tests/m2m_through_regress/models.py",
      [
        "Driver"
      ]
    ],
    [
      "tests/many_to_one_null/models.py",
      [
        "Driver"
      ]
    ]
  ],
  "OGREnvelope": [
    [
      "django/contrib/gis/gdal/envelope.py",
      [
        "OGREnvelope"
      ]
    ]
  ],
  "GDALException": [
    [
      "django/contrib/gis/gdal/error.py",
      [
        "GDALException"
      ]
    ]
  ],
  "SRSException": [
    [
      "django/contrib/gis/gdal/error.py",
      [
        "SRSException"
      ]
    ]
  ],
  "Feature": [
    [
      "django/contrib/gis/gdal/feature.py",
      [
        "Feature"
      ]
    ],
    [
      "tests/defer_regress/models.py",
      [
        "Feature"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "Feature"
      ]
    ],
    [
      "tests/gis_tests/geoapp/models.py",
      [
        "Feature"
      ]
    ]
  ],
  "Field": [
    [
      "django/contrib/gis/gdal/field.py",
      [
        "Field"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "Field"
      ]
    ],
    [
      "tests/model_fields/tests.py",
      [
        "Nested",
        "Field"
      ]
    ]
  ],
  "OFTInteger": [
    [
      "django/contrib/gis/gdal/field.py",
      [
        "OFTInteger"
      ]
    ]
  ],
  "OFTReal": [
    [
      "django/contrib/gis/gdal/field.py",
      [
        "OFTReal"
      ]
    ]
  ],
  "OFTString": [
    [
      "django/contrib/gis/gdal/field.py",
      [
        "OFTString"
      ]
    ]
  ],
  "OFTWideString": [
    [
      "django/contrib/gis/gdal/field.py",
      [
        "OFTWideString"
      ]
    ]
  ],
  "OFTBinary": [
    [
      "django/contrib/gis/gdal/field.py",
      [
        "OFTBinary"
      ]
    ]
  ],
  "OFTDate": [
    [
      "django/contrib/gis/gdal/field.py",
      [
        "OFTDate"
      ]
    ]
  ],
  "OFTDateTime": [
    [
      "django/contrib/gis/gdal/field.py",
      [
        "OFTDateTime"
      ]
    ]
  ],
  "OFTTime": [
    [
      "django/contrib/gis/gdal/field.py",
      [
        "OFTTime"
      ]
    ]
  ],
  "OFTInteger64": [
    [
      "django/contrib/gis/gdal/field.py",
      [
        "OFTInteger64"
      ]
    ]
  ],
  "OFTIntegerList": [
    [
      "django/contrib/gis/gdal/field.py",
      [
        "OFTIntegerList"
      ]
    ]
  ],
  "OFTRealList": [
    [
      "django/contrib/gis/gdal/field.py",
      [
        "OFTRealList"
      ]
    ]
  ],
  "OFTStringList": [
    [
      "django/contrib/gis/gdal/field.py",
      [
        "OFTStringList"
      ]
    ]
  ],
  "OFTWideStringList": [
    [
      "django/contrib/gis/gdal/field.py",
      [
        "OFTWideStringList"
      ]
    ]
  ],
  "OFTInteger64List": [
    [
      "django/contrib/gis/gdal/field.py",
      [
        "OFTInteger64List"
      ]
    ]
  ],
  "OGRGeometry": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry"
      ]
    ]
  ],
  "Point": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "Point"
      ]
    ],
    [
      "django/contrib/gis/geos/point.py",
      [
        "Point"
      ]
    ]
  ],
  "LineString": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "LineString"
      ]
    ],
    [
      "django/contrib/gis/geos/linestring.py",
      [
        "LineString"
      ]
    ]
  ],
  "LinearRing": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "LinearRing"
      ]
    ],
    [
      "django/contrib/gis/geos/linestring.py",
      [
        "LinearRing"
      ]
    ]
  ],
  "Polygon": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "Polygon"
      ]
    ],
    [
      "django/contrib/gis/geos/polygon.py",
      [
        "Polygon"
      ]
    ]
  ],
  "GeometryCollection": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "GeometryCollection"
      ]
    ],
    [
      "django/contrib/gis/geos/collections.py",
      [
        "GeometryCollection"
      ]
    ]
  ],
  "MultiPoint": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "MultiPoint"
      ]
    ],
    [
      "django/contrib/gis/geos/collections.py",
      [
        "MultiPoint"
      ]
    ]
  ],
  "MultiLineString": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "MultiLineString"
      ]
    ],
    [
      "django/contrib/gis/geos/collections.py",
      [
        "MultiLineString"
      ]
    ]
  ],
  "MultiPolygon": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "MultiPolygon"
      ]
    ],
    [
      "django/contrib/gis/geos/collections.py",
      [
        "MultiPolygon"
      ]
    ]
  ],
  "OGRGeomType": [
    [
      "django/contrib/gis/gdal/geomtype.py",
      [
        "OGRGeomType"
      ]
    ]
  ],
  "Layer": [
    [
      "django/contrib/gis/gdal/layer.py",
      [
        "Layer"
      ]
    ]
  ],
  "gdal_char_p": [
    [
      "django/contrib/gis/gdal/prototypes/generation.py",
      [
        "gdal_char_p"
      ]
    ]
  ],
  "GDALBand": [
    [
      "django/contrib/gis/gdal/raster/band.py",
      [
        "GDALBand"
      ]
    ]
  ],
  "BandList": [
    [
      "django/contrib/gis/gdal/raster/band.py",
      [
        "BandList"
      ]
    ]
  ],
  "GDALRasterBase": [
    [
      "django/contrib/gis/gdal/raster/base.py",
      [
        "GDALRasterBase"
      ]
    ]
  ],
  "TransformPoint": [
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "TransformPoint"
      ]
    ]
  ],
  "GDALRaster": [
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "GDALRaster"
      ]
    ]
  ],
  "SpatialReference": [
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference"
      ]
    ]
  ],
  "CoordTransform": [
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "CoordTransform"
      ]
    ]
  ],
  "GeoIP2Exception": [
    [
      "django/contrib/gis/geoip2/base.py",
      [
        "GeoIP2Exception"
      ]
    ]
  ],
  "GeoIP2": [
    [
      "django/contrib/gis/geoip2/base.py",
      [
        "GeoIP2"
      ]
    ]
  ],
  "GEOSBase": [
    [
      "django/contrib/gis/geos/base.py",
      [
        "GEOSBase"
      ]
    ]
  ],
  "GEOSCoordSeq": [
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq"
      ]
    ]
  ],
  "GEOSException": [
    [
      "django/contrib/gis/geos/error.py",
      [
        "GEOSException"
      ]
    ]
  ],
  "GEOSGeometryBase": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase"
      ]
    ]
  ],
  "LinearGeometryMixin": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "LinearGeometryMixin"
      ]
    ]
  ],
  "GEOSGeometry": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometry"
      ]
    ]
  ],
  "WKBReader": [
    [
      "django/contrib/gis/geos/io.py",
      [
        "WKBReader"
      ]
    ]
  ],
  "WKTReader": [
    [
      "django/contrib/gis/geos/io.py",
      [
        "WKTReader"
      ]
    ]
  ],
  "GEOSGeom_t": [
    [
      "django/contrib/gis/geos/libgeos.py",
      [
        "GEOSGeom_t"
      ]
    ]
  ],
  "GEOSPrepGeom_t": [
    [
      "django/contrib/gis/geos/libgeos.py",
      [
        "GEOSPrepGeom_t"
      ]
    ]
  ],
  "GEOSCoordSeq_t": [
    [
      "django/contrib/gis/geos/libgeos.py",
      [
        "GEOSCoordSeq_t"
      ]
    ]
  ],
  "GEOSContextHandle_t": [
    [
      "django/contrib/gis/geos/libgeos.py",
      [
        "GEOSContextHandle_t"
      ]
    ]
  ],
  "GEOSFuncFactory": [
    [
      "django/contrib/gis/geos/libgeos.py",
      [
        "GEOSFuncFactory"
      ]
    ]
  ],
  "ListMixin": [
    [
      "django/contrib/gis/geos/mutable_list.py",
      [
        "ListMixin"
      ]
    ]
  ],
  "PreparedGeometry": [
    [
      "django/contrib/gis/geos/prepared.py",
      [
        "PreparedGeometry"
      ]
    ]
  ],
  "CsInt": [
    [
      "django/contrib/gis/geos/prototypes/coordseq.py",
      [
        "CsInt"
      ]
    ]
  ],
  "CsOperation": [
    [
      "django/contrib/gis/geos/prototypes/coordseq.py",
      [
        "CsOperation"
      ]
    ]
  ],
  "CsOutput": [
    [
      "django/contrib/gis/geos/prototypes/coordseq.py",
      [
        "CsOutput"
      ]
    ]
  ],
  "geos_char_p": [
    [
      "django/contrib/gis/geos/prototypes/geom.py",
      [
        "geos_char_p"
      ]
    ]
  ],
  "BinConstructor": [
    [
      "django/contrib/gis/geos/prototypes/geom.py",
      [
        "BinConstructor"
      ]
    ]
  ],
  "BinOutput": [
    [
      "django/contrib/gis/geos/prototypes/geom.py",
      [
        "BinOutput"
      ]
    ]
  ],
  "GeomOutput": [
    [
      "django/contrib/gis/geos/prototypes/geom.py",
      [
        "GeomOutput"
      ]
    ]
  ],
  "IntFromGeom": [
    [
      "django/contrib/gis/geos/prototypes/geom.py",
      [
        "IntFromGeom"
      ]
    ]
  ],
  "StringFromGeom": [
    [
      "django/contrib/gis/geos/prototypes/geom.py",
      [
        "StringFromGeom"
      ]
    ]
  ],
  "WKTReader_st": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "WKTReader_st"
      ]
    ]
  ],
  "WKTWriter_st": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "WKTWriter_st"
      ]
    ]
  ],
  "WKBReader_st": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "WKBReader_st"
      ]
    ]
  ],
  "WKBWriter_st": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "WKBWriter_st"
      ]
    ]
  ],
  "WKBReadFunc": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "WKBReadFunc"
      ]
    ]
  ],
  "WKBWriteFunc": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "WKBWriteFunc"
      ]
    ]
  ],
  "WKBWriterGet": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "WKBWriterGet"
      ]
    ]
  ],
  "WKBWriterSet": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "WKBWriterSet"
      ]
    ]
  ],
  "IOBase": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "IOBase"
      ]
    ]
  ],
  "_WKTReader": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "_WKTReader"
      ]
    ]
  ],
  "_WKBReader": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "_WKBReader"
      ]
    ]
  ],
  "WKTWriter": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "WKTWriter"
      ]
    ]
  ],
  "WKBWriter": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "WKBWriter"
      ]
    ]
  ],
  "ThreadLocalIO": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "ThreadLocalIO"
      ]
    ]
  ],
  "DblFromGeom": [
    [
      "django/contrib/gis/geos/prototypes/misc.py",
      [
        "DblFromGeom"
      ]
    ]
  ],
  "UnaryPredicate": [
    [
      "django/contrib/gis/geos/prototypes/predicates.py",
      [
        "UnaryPredicate"
      ]
    ]
  ],
  "BinaryPredicate": [
    [
      "django/contrib/gis/geos/prototypes/predicates.py",
      [
        "BinaryPredicate"
      ]
    ]
  ],
  "PreparedPredicate": [
    [
      "django/contrib/gis/geos/prototypes/prepared.py",
      [
        "PreparedPredicate"
      ]
    ]
  ],
  "GEOSContextHandle": [
    [
      "django/contrib/gis/geos/prototypes/threadsafe.py",
      [
        "GEOSContextHandle"
      ]
    ]
  ],
  "GEOSContext": [
    [
      "django/contrib/gis/geos/prototypes/threadsafe.py",
      [
        "GEOSContext"
      ]
    ]
  ],
  "GEOSFunc": [
    [
      "django/contrib/gis/geos/prototypes/threadsafe.py",
      [
        "GEOSFunc"
      ]
    ]
  ],
  "Topology": [
    [
      "django/contrib/gis/geos/prototypes/topology.py",
      [
        "Topology"
      ]
    ]
  ],
  "LayerOptionAction": [
    [
      "django/contrib/gis/management/commands/ogrinspect.py",
      [
        "LayerOptionAction"
      ]
    ]
  ],
  "ListOptionAction": [
    [
      "django/contrib/gis/management/commands/ogrinspect.py",
      [
        "ListOptionAction"
      ]
    ]
  ],
  "MeasureBase": [
    [
      "django/contrib/gis/measure.py",
      [
        "MeasureBase"
      ]
    ]
  ],
  "CPointerBase": [
    [
      "django/contrib/gis/ptr.py",
      [
        "CPointerBase"
      ]
    ]
  ],
  "Serializer": [
    [
      "django/contrib/gis/serializers/geojson.py",
      [
        "Serializer"
      ]
    ],
    [
      "django/core/serializers/base.py",
      [
        "Serializer"
      ]
    ],
    [
      "django/core/serializers/json.py",
      [
        "Serializer"
      ]
    ],
    [
      "django/core/serializers/python.py",
      [
        "Serializer"
      ]
    ],
    [
      "django/core/serializers/pyyaml.py",
      [
        "Serializer"
      ]
    ],
    [
      "django/core/serializers/xml_serializer.py",
      [
        "Serializer"
      ]
    ],
    [
      "django/db/migrations/serializer.py",
      [
        "Serializer"
      ]
    ]
  ],
  "Deserializer": [
    [
      "django/contrib/gis/serializers/geojson.py",
      [
        "Deserializer"
      ]
    ],
    [
      "django/core/serializers/base.py",
      [
        "Deserializer"
      ]
    ],
    [
      "django/core/serializers/xml_serializer.py",
      [
        "Deserializer"
      ]
    ]
  ],
  "KMLSitemap": [
    [
      "django/contrib/gis/sitemaps/kml.py",
      [
        "KMLSitemap"
      ]
    ]
  ],
  "KMZSitemap": [
    [
      "django/contrib/gis/sitemaps/kml.py",
      [
        "KMZSitemap"
      ]
    ]
  ],
  "LayerMapError": [
    [
      "django/contrib/gis/utils/layermapping.py",
      [
        "LayerMapError"
      ]
    ]
  ],
  "InvalidString": [
    [
      "django/contrib/gis/utils/layermapping.py",
      [
        "InvalidString"
      ]
    ]
  ],
  "InvalidDecimal": [
    [
      "django/contrib/gis/utils/layermapping.py",
      [
        "InvalidDecimal"
      ]
    ]
  ],
  "InvalidInteger": [
    [
      "django/contrib/gis/utils/layermapping.py",
      [
        "InvalidInteger"
      ]
    ]
  ],
  "MissingForeignKey": [
    [
      "django/contrib/gis/utils/layermapping.py",
      [
        "MissingForeignKey"
      ]
    ]
  ],
  "LayerMapping": [
    [
      "django/contrib/gis/utils/layermapping.py",
      [
        "LayerMapping"
      ]
    ]
  ],
  "HumanizeConfig": [
    [
      "django/contrib/humanize/apps.py",
      [
        "HumanizeConfig"
      ]
    ]
  ],
  "NaturalTimeFormatter": [
    [
      "django/contrib/humanize/templatetags/humanize.py",
      [
        "NaturalTimeFormatter"
      ]
    ]
  ],
  "MessageFailure": [
    [
      "django/contrib/messages/api.py",
      [
        "MessageFailure"
      ]
    ]
  ],
  "MessagesConfig": [
    [
      "django/contrib/messages/apps.py",
      [
        "MessagesConfig"
      ]
    ]
  ],
  "MessageMiddleware": [
    [
      "django/contrib/messages/middleware.py",
      [
        "MessageMiddleware"
      ]
    ]
  ],
  "Message": [
    [
      "django/contrib/messages/storage/base.py",
      [
        "Message"
      ]
    ],
    [
      "tests/inspectdb/models.py",
      [
        "Message"
      ]
    ]
  ],
  "BaseStorage": [
    [
      "django/contrib/messages/storage/base.py",
      [
        "BaseStorage"
      ]
    ]
  ],
  "MessageEncoder": [
    [
      "django/contrib/messages/storage/cookie.py",
      [
        "MessageEncoder"
      ]
    ]
  ],
  "MessageDecoder": [
    [
      "django/contrib/messages/storage/cookie.py",
      [
        "MessageDecoder"
      ]
    ]
  ],
  "CookieStorage": [
    [
      "django/contrib/messages/storage/cookie.py",
      [
        "CookieStorage"
      ]
    ]
  ],
  "FallbackStorage": [
    [
      "django/contrib/messages/storage/fallback.py",
      [
        "FallbackStorage"
      ]
    ]
  ],
  "SessionStorage": [
    [
      "django/contrib/messages/storage/session.py",
      [
        "SessionStorage"
      ]
    ]
  ],
  "SuccessMessageMixin": [
    [
      "django/contrib/messages/views.py",
      [
        "SuccessMessageMixin"
      ]
    ]
  ],
  "ArrayAgg": [
    [
      "django/contrib/postgres/aggregates/general.py",
      [
        "ArrayAgg"
      ]
    ]
  ],
  "BitAnd": [
    [
      "django/contrib/postgres/aggregates/general.py",
      [
        "BitAnd"
      ]
    ]
  ],
  "BitOr": [
    [
      "django/contrib/postgres/aggregates/general.py",
      [
        "BitOr"
      ]
    ]
  ],
  "BoolAnd": [
    [
      "django/contrib/postgres/aggregates/general.py",
      [
        "BoolAnd"
      ]
    ]
  ],
  "BoolOr": [
    [
      "django/contrib/postgres/aggregates/general.py",
      [
        "BoolOr"
      ]
    ]
  ],
  "JSONBAgg": [
    [
      "django/contrib/postgres/aggregates/general.py",
      [
        "JSONBAgg"
      ]
    ]
  ],
  "StringAgg": [
    [
      "django/contrib/postgres/aggregates/general.py",
      [
        "StringAgg"
      ]
    ]
  ],
  "OrderableAggMixin": [
    [
      "django/contrib/postgres/aggregates/mixins.py",
      [
        "OrderableAggMixin"
      ]
    ]
  ],
  "StatAggregate": [
    [
      "django/contrib/postgres/aggregates/statistics.py",
      [
        "StatAggregate"
      ]
    ]
  ],
  "Corr": [
    [
      "django/contrib/postgres/aggregates/statistics.py",
      [
        "Corr"
      ]
    ]
  ],
  "CovarPop": [
    [
      "django/contrib/postgres/aggregates/statistics.py",
      [
        "CovarPop"
      ]
    ]
  ],
  "RegrAvgX": [
    [
      "django/contrib/postgres/aggregates/statistics.py",
      [
        "RegrAvgX"
      ]
    ]
  ],
  "RegrAvgY": [
    [
      "django/contrib/postgres/aggregates/statistics.py",
      [
        "RegrAvgY"
      ]
    ]
  ],
  "RegrCount": [
    [
      "django/contrib/postgres/aggregates/statistics.py",
      [
        "RegrCount"
      ]
    ]
  ],
  "RegrIntercept": [
    [
      "django/contrib/postgres/aggregates/statistics.py",
      [
        "RegrIntercept"
      ]
    ]
  ],
  "RegrR2": [
    [
      "django/contrib/postgres/aggregates/statistics.py",
      [
        "RegrR2"
      ]
    ]
  ],
  "RegrSlope": [
    [
      "django/contrib/postgres/aggregates/statistics.py",
      [
        "RegrSlope"
      ]
    ]
  ],
  "RegrSXX": [
    [
      "django/contrib/postgres/aggregates/statistics.py",
      [
        "RegrSXX"
      ]
    ]
  ],
  "RegrSXY": [
    [
      "django/contrib/postgres/aggregates/statistics.py",
      [
        "RegrSXY"
      ]
    ]
  ],
  "RegrSYY": [
    [
      "django/contrib/postgres/aggregates/statistics.py",
      [
        "RegrSYY"
      ]
    ]
  ],
  "PostgresConfig": [
    [
      "django/contrib/postgres/apps.py",
      [
        "PostgresConfig"
      ]
    ]
  ],
  "ArrayField": [
    [
      "django/contrib/postgres/fields/array.py",
      [
        "ArrayField"
      ]
    ]
  ],
  "ArrayContains": [
    [
      "django/contrib/postgres/fields/array.py",
      [
        "ArrayContains"
      ]
    ]
  ],
  "ArrayContainedBy": [
    [
      "django/contrib/postgres/fields/array.py",
      [
        "ArrayContainedBy"
      ]
    ]
  ],
  "ArrayExact": [
    [
      "django/contrib/postgres/fields/array.py",
      [
        "ArrayExact"
      ]
    ]
  ],
  "ArrayOverlap": [
    [
      "django/contrib/postgres/fields/array.py",
      [
        "ArrayOverlap"
      ]
    ]
  ],
  "ArrayLenTransform": [
    [
      "django/contrib/postgres/fields/array.py",
      [
        "ArrayLenTransform"
      ]
    ]
  ],
  "ArrayInLookup": [
    [
      "django/contrib/postgres/fields/array.py",
      [
        "ArrayInLookup"
      ]
    ]
  ],
  "IndexTransform": [
    [
      "django/contrib/postgres/fields/array.py",
      [
        "IndexTransform"
      ]
    ]
  ],
  "IndexTransformFactory": [
    [
      "django/contrib/postgres/fields/array.py",
      [
        "IndexTransformFactory"
      ]
    ]
  ],
  "SliceTransform": [
    [
      "django/contrib/postgres/fields/array.py",
      [
        "SliceTransform"
      ]
    ]
  ],
  "SliceTransformFactory": [
    [
      "django/contrib/postgres/fields/array.py",
      [
        "SliceTransformFactory"
      ]
    ]
  ],
  "CIText": [
    [
      "django/contrib/postgres/fields/citext.py",
      [
        "CIText"
      ]
    ]
  ],
  "CICharField": [
    [
      "django/contrib/postgres/fields/citext.py",
      [
        "CICharField"
      ]
    ]
  ],
  "CIEmailField": [
    [
      "django/contrib/postgres/fields/citext.py",
      [
        "CIEmailField"
      ]
    ]
  ],
  "CITextField": [
    [
      "django/contrib/postgres/fields/citext.py",
      [
        "CITextField"
      ]
    ]
  ],
  "HStoreField": [
    [
      "django/contrib/postgres/fields/hstore.py",
      [
        "HStoreField"
      ]
    ],
    [
      "django/contrib/postgres/forms/hstore.py",
      [
        "HStoreField"
      ]
    ]
  ],
  "KeyTransform": [
    [
      "django/contrib/postgres/fields/hstore.py",
      [
        "KeyTransform"
      ]
    ],
    [
      "django/contrib/postgres/fields/jsonb.py",
      [
        "KeyTransform"
      ]
    ]
  ],
  "KeyTransformFactory": [
    [
      "django/contrib/postgres/fields/hstore.py",
      [
        "KeyTransformFactory"
      ]
    ],
    [
      "django/contrib/postgres/fields/jsonb.py",
      [
        "KeyTransformFactory"
      ]
    ]
  ],
  "KeysTransform": [
    [
      "django/contrib/postgres/fields/hstore.py",
      [
        "KeysTransform"
      ]
    ]
  ],
  "ValuesTransform": [
    [
      "django/contrib/postgres/fields/hstore.py",
      [
        "ValuesTransform"
      ]
    ]
  ],
  "JsonAdapter": [
    [
      "django/contrib/postgres/fields/jsonb.py",
      [
        "JsonAdapter"
      ]
    ]
  ],
  "JSONField": [
    [
      "django/contrib/postgres/fields/jsonb.py",
      [
        "JSONField"
      ]
    ],
    [
      "django/contrib/postgres/forms/jsonb.py",
      [
        "JSONField"
      ]
    ]
  ],
  "KeyTextTransform": [
    [
      "django/contrib/postgres/fields/jsonb.py",
      [
        "KeyTextTransform"
      ]
    ]
  ],
  "KeyTransformTextLookupMixin": [
    [
      "django/contrib/postgres/fields/jsonb.py",
      [
        "KeyTransformTextLookupMixin"
      ]
    ]
  ],
  "KeyTransformIExact": [
    [
      "django/contrib/postgres/fields/jsonb.py",
      [
        "KeyTransformIExact"
      ]
    ]
  ],
  "KeyTransformIContains": [
    [
      "django/contrib/postgres/fields/jsonb.py",
      [
        "KeyTransformIContains"
      ]
    ]
  ],
  "KeyTransformStartsWith": [
    [
      "django/contrib/postgres/fields/jsonb.py",
      [
        "KeyTransformStartsWith"
      ]
    ]
  ],
  "KeyTransformIStartsWith": [
    [
      "django/contrib/postgres/fields/jsonb.py",
      [
        "KeyTransformIStartsWith"
      ]
    ]
  ],
  "KeyTransformEndsWith": [
    [
      "django/contrib/postgres/fields/jsonb.py",
      [
        "KeyTransformEndsWith"
      ]
    ]
  ],
  "KeyTransformIEndsWith": [
    [
      "django/contrib/postgres/fields/jsonb.py",
      [
        "KeyTransformIEndsWith"
      ]
    ]
  ],
  "KeyTransformRegex": [
    [
      "django/contrib/postgres/fields/jsonb.py",
      [
        "KeyTransformRegex"
      ]
    ]
  ],
  "KeyTransformIRegex": [
    [
      "django/contrib/postgres/fields/jsonb.py",
      [
        "KeyTransformIRegex"
      ]
    ]
  ],
  "CheckFieldDefaultMixin": [
    [
      "django/contrib/postgres/fields/mixins.py",
      [
        "CheckFieldDefaultMixin"
      ]
    ]
  ],
  "RangeField": [
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "RangeField"
      ]
    ]
  ],
  "IntegerRangeField": [
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "IntegerRangeField"
      ]
    ],
    [
      "django/contrib/postgres/forms/ranges.py",
      [
        "IntegerRangeField"
      ]
    ]
  ],
  "BigIntegerRangeField": [
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "BigIntegerRangeField"
      ]
    ]
  ],
  "DecimalRangeField": [
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "DecimalRangeField"
      ]
    ],
    [
      "django/contrib/postgres/forms/ranges.py",
      [
        "DecimalRangeField"
      ]
    ]
  ],
  "FloatRangeField": [
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "FloatRangeField"
      ]
    ],
    [
      "django/contrib/postgres/forms/ranges.py",
      [
        "FloatRangeField"
      ]
    ]
  ],
  "DateTimeRangeField": [
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "DateTimeRangeField"
      ]
    ],
    [
      "django/contrib/postgres/forms/ranges.py",
      [
        "DateTimeRangeField"
      ]
    ]
  ],
  "DateRangeField": [
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "DateRangeField"
      ]
    ],
    [
      "django/contrib/postgres/forms/ranges.py",
      [
        "DateRangeField"
      ]
    ]
  ],
  "DateTimeRangeContains": [
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "DateTimeRangeContains"
      ]
    ]
  ],
  "RangeContainedBy": [
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "RangeContainedBy"
      ]
    ]
  ],
  "FullyLessThan": [
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "FullyLessThan"
      ]
    ]
  ],
  "FullGreaterThan": [
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "FullGreaterThan"
      ]
    ]
  ],
  "NotLessThan": [
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "NotLessThan"
      ]
    ]
  ],
  "NotGreaterThan": [
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "NotGreaterThan"
      ]
    ]
  ],
  "AdjacentToLookup": [
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "AdjacentToLookup"
      ]
    ]
  ],
  "RangeStartsWith": [
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "RangeStartsWith"
      ]
    ]
  ],
  "RangeEndsWith": [
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "RangeEndsWith"
      ]
    ]
  ],
  "IsEmpty": [
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "IsEmpty"
      ]
    ]
  ],
  "AttributeSetter": [
    [
      "django/contrib/postgres/fields/utils.py",
      [
        "AttributeSetter"
      ]
    ]
  ],
  "SimpleArrayField": [
    [
      "django/contrib/postgres/forms/array.py",
      [
        "SimpleArrayField"
      ]
    ],
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_inlineformset_with_arrayfield",
        "SimpleArrayField"
      ]
    ]
  ],
  "SplitArrayWidget": [
    [
      "django/contrib/postgres/forms/array.py",
      [
        "SplitArrayWidget"
      ]
    ]
  ],
  "SplitArrayField": [
    [
      "django/contrib/postgres/forms/array.py",
      [
        "SplitArrayField"
      ]
    ]
  ],
  "InvalidJSONInput": [
    [
      "django/contrib/postgres/forms/jsonb.py",
      [
        "InvalidJSONInput"
      ]
    ]
  ],
  "JSONString": [
    [
      "django/contrib/postgres/forms/jsonb.py",
      [
        "JSONString"
      ]
    ]
  ],
  "BaseRangeField": [
    [
      "django/contrib/postgres/forms/ranges.py",
      [
        "BaseRangeField"
      ]
    ]
  ],
  "RangeWidget": [
    [
      "django/contrib/postgres/forms/ranges.py",
      [
        "RangeWidget"
      ]
    ]
  ],
  "RandomUUID": [
    [
      "django/contrib/postgres/functions.py",
      [
        "RandomUUID"
      ]
    ]
  ],
  "TransactionNow": [
    [
      "django/contrib/postgres/functions.py",
      [
        "TransactionNow"
      ]
    ]
  ],
  "PostgresIndex": [
    [
      "django/contrib/postgres/indexes.py",
      [
        "PostgresIndex"
      ]
    ]
  ],
  "BrinIndex": [
    [
      "django/contrib/postgres/indexes.py",
      [
        "BrinIndex"
      ]
    ]
  ],
  "BTreeIndex": [
    [
      "django/contrib/postgres/indexes.py",
      [
        "BTreeIndex"
      ]
    ]
  ],
  "GinIndex": [
    [
      "django/contrib/postgres/indexes.py",
      [
        "GinIndex"
      ]
    ]
  ],
  "GistIndex": [
    [
      "django/contrib/postgres/indexes.py",
      [
        "GistIndex"
      ]
    ]
  ],
  "HashIndex": [
    [
      "django/contrib/postgres/indexes.py",
      [
        "HashIndex"
      ]
    ]
  ],
  "SpGistIndex": [
    [
      "django/contrib/postgres/indexes.py",
      [
        "SpGistIndex"
      ]
    ]
  ],
  "PostgresSimpleLookup": [
    [
      "django/contrib/postgres/lookups.py",
      [
        "PostgresSimpleLookup"
      ]
    ]
  ],
  "DataContains": [
    [
      "django/contrib/postgres/lookups.py",
      [
        "DataContains"
      ]
    ]
  ],
  "ContainedBy": [
    [
      "django/contrib/postgres/lookups.py",
      [
        "ContainedBy"
      ]
    ]
  ],
  "Overlap": [
    [
      "django/contrib/postgres/lookups.py",
      [
        "Overlap"
      ]
    ]
  ],
  "HasKey": [
    [
      "django/contrib/postgres/lookups.py",
      [
        "HasKey"
      ]
    ]
  ],
  "HasKeys": [
    [
      "django/contrib/postgres/lookups.py",
      [
        "HasKeys"
      ]
    ]
  ],
  "HasAnyKeys": [
    [
      "django/contrib/postgres/lookups.py",
      [
        "HasAnyKeys"
      ]
    ]
  ],
  "Unaccent": [
    [
      "django/contrib/postgres/lookups.py",
      [
        "Unaccent"
      ]
    ]
  ],
  "SearchLookup": [
    [
      "django/contrib/postgres/lookups.py",
      [
        "SearchLookup"
      ]
    ]
  ],
  "TrigramSimilar": [
    [
      "django/contrib/postgres/lookups.py",
      [
        "TrigramSimilar"
      ]
    ]
  ],
  "JSONExact": [
    [
      "django/contrib/postgres/lookups.py",
      [
        "JSONExact"
      ]
    ]
  ],
  "CreateExtension": [
    [
      "django/contrib/postgres/operations.py",
      [
        "CreateExtension"
      ]
    ]
  ],
  "BtreeGinExtension": [
    [
      "django/contrib/postgres/operations.py",
      [
        "BtreeGinExtension"
      ]
    ]
  ],
  "BtreeGistExtension": [
    [
      "django/contrib/postgres/operations.py",
      [
        "BtreeGistExtension"
      ]
    ]
  ],
  "CITextExtension": [
    [
      "django/contrib/postgres/operations.py",
      [
        "CITextExtension"
      ]
    ]
  ],
  "CryptoExtension": [
    [
      "django/contrib/postgres/operations.py",
      [
        "CryptoExtension"
      ]
    ]
  ],
  "HStoreExtension": [
    [
      "django/contrib/postgres/operations.py",
      [
        "HStoreExtension"
      ]
    ]
  ],
  "TrigramExtension": [
    [
      "django/contrib/postgres/operations.py",
      [
        "TrigramExtension"
      ]
    ]
  ],
  "UnaccentExtension": [
    [
      "django/contrib/postgres/operations.py",
      [
        "UnaccentExtension"
      ]
    ]
  ],
  "SearchVectorExact": [
    [
      "django/contrib/postgres/search.py",
      [
        "SearchVectorExact"
      ]
    ]
  ],
  "SearchVectorField": [
    [
      "django/contrib/postgres/search.py",
      [
        "SearchVectorField"
      ]
    ]
  ],
  "SearchQueryField": [
    [
      "django/contrib/postgres/search.py",
      [
        "SearchQueryField"
      ]
    ]
  ],
  "SearchVectorCombinable": [
    [
      "django/contrib/postgres/search.py",
      [
        "SearchVectorCombinable"
      ]
    ]
  ],
  "SearchVector": [
    [
      "django/contrib/postgres/search.py",
      [
        "SearchVector"
      ]
    ]
  ],
  "CombinedSearchVector": [
    [
      "django/contrib/postgres/search.py",
      [
        "CombinedSearchVector"
      ]
    ]
  ],
  "SearchQueryCombinable": [
    [
      "django/contrib/postgres/search.py",
      [
        "SearchQueryCombinable"
      ]
    ]
  ],
  "SearchQuery": [
    [
      "django/contrib/postgres/search.py",
      [
        "SearchQuery"
      ]
    ]
  ],
  "CombinedSearchQuery": [
    [
      "django/contrib/postgres/search.py",
      [
        "CombinedSearchQuery"
      ]
    ]
  ],
  "SearchRank": [
    [
      "django/contrib/postgres/search.py",
      [
        "SearchRank"
      ]
    ]
  ],
  "TrigramBase": [
    [
      "django/contrib/postgres/search.py",
      [
        "TrigramBase"
      ]
    ]
  ],
  "TrigramSimilarity": [
    [
      "django/contrib/postgres/search.py",
      [
        "TrigramSimilarity"
      ]
    ]
  ],
  "TrigramDistance": [
    [
      "django/contrib/postgres/search.py",
      [
        "TrigramDistance"
      ]
    ]
  ],
  "RangeSerializer": [
    [
      "django/contrib/postgres/serializers.py",
      [
        "RangeSerializer"
      ]
    ]
  ],
  "ArrayMaxLengthValidator": [
    [
      "django/contrib/postgres/validators.py",
      [
        "ArrayMaxLengthValidator"
      ]
    ]
  ],
  "ArrayMinLengthValidator": [
    [
      "django/contrib/postgres/validators.py",
      [
        "ArrayMinLengthValidator"
      ]
    ]
  ],
  "KeysValidator": [
    [
      "django/contrib/postgres/validators.py",
      [
        "KeysValidator"
      ]
    ]
  ],
  "RangeMaxValueValidator": [
    [
      "django/contrib/postgres/validators.py",
      [
        "RangeMaxValueValidator"
      ]
    ]
  ],
  "RangeMinValueValidator": [
    [
      "django/contrib/postgres/validators.py",
      [
        "RangeMinValueValidator"
      ]
    ]
  ],
  "RedirectAdmin": [
    [
      "django/contrib/redirects/admin.py",
      [
        "RedirectAdmin"
      ]
    ]
  ],
  "RedirectsConfig": [
    [
      "django/contrib/redirects/apps.py",
      [
        "RedirectsConfig"
      ]
    ]
  ],
  "RedirectFallbackMiddleware": [
    [
      "django/contrib/redirects/middleware.py",
      [
        "RedirectFallbackMiddleware"
      ]
    ]
  ],
  "Redirect": [
    [
      "django/contrib/redirects/models.py",
      [
        "Redirect"
      ]
    ]
  ],
  "SessionsConfig": [
    [
      "django/contrib/sessions/apps.py",
      [
        "SessionsConfig"
      ]
    ]
  ],
  "CreateError": [
    [
      "django/contrib/sessions/backends/base.py",
      [
        "CreateError"
      ]
    ]
  ],
  "UpdateError": [
    [
      "django/contrib/sessions/backends/base.py",
      [
        "UpdateError"
      ]
    ]
  ],
  "SessionBase": [
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase"
      ]
    ]
  ],
  "SessionStore": [
    [
      "django/contrib/sessions/backends/cache.py",
      [
        "SessionStore"
      ]
    ],
    [
      "django/contrib/sessions/backends/cached_db.py",
      [
        "SessionStore"
      ]
    ],
    [
      "django/contrib/sessions/backends/db.py",
      [
        "SessionStore"
      ]
    ],
    [
      "django/contrib/sessions/backends/file.py",
      [
        "SessionStore"
      ]
    ],
    [
      "django/contrib/sessions/backends/signed_cookies.py",
      [
        "SessionStore"
      ]
    ],
    [
      "tests/sessions_tests/models.py",
      [
        "SessionStore"
      ]
    ],
    [
      "tests/test_client_regress/session.py",
      [
        "SessionStore"
      ]
    ]
  ],
  "BaseSessionManager": [
    [
      "django/contrib/sessions/base_session.py",
      [
        "BaseSessionManager"
      ]
    ]
  ],
  "AbstractBaseSession": [
    [
      "django/contrib/sessions/base_session.py",
      [
        "AbstractBaseSession"
      ]
    ]
  ],
  "InvalidSessionKey": [
    [
      "django/contrib/sessions/exceptions.py",
      [
        "InvalidSessionKey"
      ]
    ]
  ],
  "SuspiciousSession": [
    [
      "django/contrib/sessions/exceptions.py",
      [
        "SuspiciousSession"
      ]
    ]
  ],
  "SessionMiddleware": [
    [
      "django/contrib/sessions/middleware.py",
      [
        "SessionMiddleware"
      ]
    ]
  ],
  "SessionManager": [
    [
      "django/contrib/sessions/models.py",
      [
        "SessionManager"
      ]
    ]
  ],
  "Session": [
    [
      "django/contrib/sessions/models.py",
      [
        "Session"
      ]
    ],
    [
      "tests/timezones/models.py",
      [
        "Session"
      ]
    ]
  ],
  "PickleSerializer": [
    [
      "django/contrib/sessions/serializers.py",
      [
        "PickleSerializer"
      ]
    ]
  ],
  "SitemapNotFound": [
    [
      "django/contrib/sitemaps/__init__.py",
      [
        "SitemapNotFound"
      ]
    ]
  ],
  "Sitemap": [
    [
      "django/contrib/sitemaps/__init__.py",
      [
        "Sitemap"
      ]
    ]
  ],
  "GenericSitemap": [
    [
      "django/contrib/sitemaps/__init__.py",
      [
        "GenericSitemap"
      ]
    ]
  ],
  "SiteMapsConfig": [
    [
      "django/contrib/sitemaps/apps.py",
      [
        "SiteMapsConfig"
      ]
    ]
  ],
  "SiteAdmin": [
    [
      "django/contrib/sites/admin.py",
      [
        "SiteAdmin"
      ]
    ],
    [
      "tests/admin_utils/admin.py",
      [
        "SiteAdmin"
      ]
    ]
  ],
  "SitesConfig": [
    [
      "django/contrib/sites/apps.py",
      [
        "SitesConfig"
      ]
    ]
  ],
  "CurrentSiteManager": [
    [
      "django/contrib/sites/managers.py",
      [
        "CurrentSiteManager"
      ]
    ]
  ],
  "CurrentSiteMiddleware": [
    [
      "django/contrib/sites/middleware.py",
      [
        "CurrentSiteMiddleware"
      ]
    ]
  ],
  "SiteManager": [
    [
      "django/contrib/sites/models.py",
      [
        "SiteManager"
      ]
    ]
  ],
  "Site": [
    [
      "django/contrib/sites/models.py",
      [
        "Site"
      ]
    ],
    [
      "tests/admin_utils/models.py",
      [
        "Site"
      ]
    ],
    [
      "tests/contenttypes_tests/models.py",
      [
        "Site"
      ]
    ],
    [
      "tests/model_package/models/article.py",
      [
        "Site"
      ]
    ]
  ],
  "RequestSite": [
    [
      "django/contrib/sites/requests.py",
      [
        "RequestSite"
      ]
    ]
  ],
  "StaticFilesConfig": [
    [
      "django/contrib/staticfiles/apps.py",
      [
        "StaticFilesConfig"
      ]
    ]
  ],
  "BaseFinder": [
    [
      "django/contrib/staticfiles/finders.py",
      [
        "BaseFinder"
      ]
    ]
  ],
  "FileSystemFinder": [
    [
      "django/contrib/staticfiles/finders.py",
      [
        "FileSystemFinder"
      ]
    ]
  ],
  "AppDirectoriesFinder": [
    [
      "django/contrib/staticfiles/finders.py",
      [
        "AppDirectoriesFinder"
      ]
    ]
  ],
  "BaseStorageFinder": [
    [
      "django/contrib/staticfiles/finders.py",
      [
        "BaseStorageFinder"
      ]
    ]
  ],
  "DefaultStorageFinder": [
    [
      "django/contrib/staticfiles/finders.py",
      [
        "DefaultStorageFinder"
      ]
    ]
  ],
  "StaticFilesHandler": [
    [
      "django/contrib/staticfiles/handlers.py",
      [
        "StaticFilesHandler"
      ]
    ]
  ],
  "StaticFilesStorage": [
    [
      "django/contrib/staticfiles/storage.py",
      [
        "StaticFilesStorage"
      ]
    ]
  ],
  "HashedFilesMixin": [
    [
      "django/contrib/staticfiles/storage.py",
      [
        "HashedFilesMixin"
      ]
    ]
  ],
  "ManifestFilesMixin": [
    [
      "django/contrib/staticfiles/storage.py",
      [
        "ManifestFilesMixin"
      ]
    ]
  ],
  "_MappingCache": [
    [
      "django/contrib/staticfiles/storage.py",
      [
        "_MappingCache"
      ]
    ]
  ],
  "CachedFilesMixin": [
    [
      "django/contrib/staticfiles/storage.py",
      [
        "CachedFilesMixin"
      ]
    ]
  ],
  "CachedStaticFilesStorage": [
    [
      "django/contrib/staticfiles/storage.py",
      [
        "CachedStaticFilesStorage"
      ]
    ]
  ],
  "ManifestStaticFilesStorage": [
    [
      "django/contrib/staticfiles/storage.py",
      [
        "ManifestStaticFilesStorage"
      ]
    ]
  ],
  "ConfiguredStorage": [
    [
      "django/contrib/staticfiles/storage.py",
      [
        "ConfiguredStorage"
      ]
    ]
  ],
  "StaticLiveServerTestCase": [
    [
      "django/contrib/staticfiles/testing.py",
      [
        "StaticLiveServerTestCase"
      ]
    ]
  ],
  "SyndicationConfig": [
    [
      "django/contrib/syndication/apps.py",
      [
        "SyndicationConfig"
      ]
    ]
  ],
  "FeedDoesNotExist": [
    [
      "django/contrib/syndication/views.py",
      [
        "FeedDoesNotExist"
      ]
    ]
  ],
  "CacheHandler": [
    [
      "django/core/cache/__init__.py",
      [
        "CacheHandler"
      ]
    ]
  ],
  "DefaultCacheProxy": [
    [
      "django/core/cache/__init__.py",
      [
        "DefaultCacheProxy"
      ]
    ]
  ],
  "InvalidCacheBackendError": [
    [
      "django/core/cache/backends/base.py",
      [
        "InvalidCacheBackendError"
      ]
    ]
  ],
  "CacheKeyWarning": [
    [
      "django/core/cache/backends/base.py",
      [
        "CacheKeyWarning"
      ]
    ]
  ],
  "BaseCache": [
    [
      "django/core/cache/backends/base.py",
      [
        "BaseCache"
      ]
    ]
  ],
  "Options": [
    [
      "django/core/cache/backends/db.py",
      [
        "Options"
      ]
    ],
    [
      "django/db/models/options.py",
      [
        "Options"
      ]
    ]
  ],
  "BaseDatabaseCache": [
    [
      "django/core/cache/backends/db.py",
      [
        "BaseDatabaseCache"
      ]
    ]
  ],
  "DatabaseCache": [
    [
      "django/core/cache/backends/db.py",
      [
        "DatabaseCache"
      ]
    ]
  ],
  "DummyCache": [
    [
      "django/core/cache/backends/dummy.py",
      [
        "DummyCache"
      ]
    ]
  ],
  "FileBasedCache": [
    [
      "django/core/cache/backends/filebased.py",
      [
        "FileBasedCache"
      ]
    ]
  ],
  "LocMemCache": [
    [
      "django/core/cache/backends/locmem.py",
      [
        "LocMemCache"
      ]
    ]
  ],
  "BaseMemcachedCache": [
    [
      "django/core/cache/backends/memcached.py",
      [
        "BaseMemcachedCache"
      ]
    ]
  ],
  "MemcachedCache": [
    [
      "django/core/cache/backends/memcached.py",
      [
        "MemcachedCache"
      ]
    ]
  ],
  "PyLibMCCache": [
    [
      "django/core/cache/backends/memcached.py",
      [
        "PyLibMCCache"
      ]
    ]
  ],
  "CheckMessage": [
    [
      "django/core/checks/messages.py",
      [
        "CheckMessage"
      ]
    ]
  ],
  "Debug": [
    [
      "django/core/checks/messages.py",
      [
        "Debug"
      ]
    ]
  ],
  "Info": [
    [
      "django/core/checks/messages.py",
      [
        "Info"
      ]
    ]
  ],
  "Warning": [
    [
      "django/core/checks/messages.py",
      [
        "Warning"
      ]
    ]
  ],
  "Error": [
    [
      "django/core/checks/messages.py",
      [
        "Error"
      ]
    ],
    [
      "django/db/utils.py",
      [
        "Error"
      ]
    ]
  ],
  "Critical": [
    [
      "django/core/checks/messages.py",
      [
        "Critical"
      ]
    ]
  ],
  "Tags": [
    [
      "django/core/checks/registry.py",
      [
        "Tags"
      ]
    ]
  ],
  "CheckRegistry": [
    [
      "django/core/checks/registry.py",
      [
        "CheckRegistry"
      ]
    ]
  ],
  "FieldDoesNotExist": [
    [
      "django/core/exceptions.py",
      [
        "FieldDoesNotExist"
      ]
    ]
  ],
  "AppRegistryNotReady": [
    [
      "django/core/exceptions.py",
      [
        "AppRegistryNotReady"
      ]
    ]
  ],
  "ObjectDoesNotExist": [
    [
      "django/core/exceptions.py",
      [
        "ObjectDoesNotExist"
      ]
    ]
  ],
  "MultipleObjectsReturned": [
    [
      "django/core/exceptions.py",
      [
        "MultipleObjectsReturned"
      ]
    ]
  ],
  "SuspiciousOperation": [
    [
      "django/core/exceptions.py",
      [
        "SuspiciousOperation"
      ]
    ]
  ],
  "SuspiciousMultipartForm": [
    [
      "django/core/exceptions.py",
      [
        "SuspiciousMultipartForm"
      ]
    ]
  ],
  "SuspiciousFileOperation": [
    [
      "django/core/exceptions.py",
      [
        "SuspiciousFileOperation"
      ]
    ]
  ],
  "DisallowedHost": [
    [
      "django/core/exceptions.py",
      [
        "DisallowedHost"
      ]
    ]
  ],
  "DisallowedRedirect": [
    [
      "django/core/exceptions.py",
      [
        "DisallowedRedirect"
      ]
    ]
  ],
  "TooManyFieldsSent": [
    [
      "django/core/exceptions.py",
      [
        "TooManyFieldsSent"
      ]
    ]
  ],
  "RequestDataTooBig": [
    [
      "django/core/exceptions.py",
      [
        "RequestDataTooBig"
      ]
    ]
  ],
  "PermissionDenied": [
    [
      "django/core/exceptions.py",
      [
        "PermissionDenied"
      ]
    ]
  ],
  "ViewDoesNotExist": [
    [
      "django/core/exceptions.py",
      [
        "ViewDoesNotExist"
      ]
    ]
  ],
  "MiddlewareNotUsed": [
    [
      "django/core/exceptions.py",
      [
        "MiddlewareNotUsed"
      ]
    ]
  ],
  "ImproperlyConfigured": [
    [
      "django/core/exceptions.py",
      [
        "ImproperlyConfigured"
      ]
    ]
  ],
  "FieldError": [
    [
      "django/core/exceptions.py",
      [
        "FieldError"
      ]
    ]
  ],
  "ValidationError": [
    [
      "django/core/exceptions.py",
      [
        "ValidationError"
      ]
    ]
  ],
  "EmptyResultSet": [
    [
      "django/core/exceptions.py",
      [
        "EmptyResultSet"
      ]
    ]
  ],
  "File": [
    [
      "django/core/files/base.py",
      [
        "File"
      ]
    ],
    [
      "tests/delete_regress/models.py",
      [
        "File"
      ]
    ]
  ],
  "ContentFile": [
    [
      "django/core/files/base.py",
      [
        "ContentFile"
      ]
    ]
  ],
  "ImageFile": [
    [
      "django/core/files/images.py",
      [
        "ImageFile"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "try_",
        "ImageFile"
      ]
    ]
  ],
  "_OFFSET": [
    [
      "django/core/files/locks.py",
      [
        "if_os_name_nt_",
        "_OFFSET"
      ]
    ]
  ],
  "_OFFSET_UNION": [
    [
      "django/core/files/locks.py",
      [
        "if_os_name_nt_",
        "_OFFSET_UNION"
      ]
    ]
  ],
  "OVERLAPPED": [
    [
      "django/core/files/locks.py",
      [
        "if_os_name_nt_",
        "OVERLAPPED"
      ]
    ]
  ],
  "Storage": [
    [
      "django/core/files/storage.py",
      [
        "Storage"
      ]
    ],
    [
      "tests/file_storage/models.py",
      [
        "Storage"
      ]
    ]
  ],
  "FileSystemStorage": [
    [
      "django/core/files/storage.py",
      [
        "FileSystemStorage"
      ]
    ]
  ],
  "DefaultStorage": [
    [
      "django/core/files/storage.py",
      [
        "DefaultStorage"
      ]
    ]
  ],
  "TemporaryFile": [
    [
      "django/core/files/temp.py",
      [
        "if_os_name_nt_",
        "TemporaryFile"
      ]
    ]
  ],
  "UploadedFile": [
    [
      "django/core/files/uploadedfile.py",
      [
        "UploadedFile"
      ]
    ]
  ],
  "TemporaryUploadedFile": [
    [
      "django/core/files/uploadedfile.py",
      [
        "TemporaryUploadedFile"
      ]
    ]
  ],
  "InMemoryUploadedFile": [
    [
      "django/core/files/uploadedfile.py",
      [
        "InMemoryUploadedFile"
      ]
    ]
  ],
  "SimpleUploadedFile": [
    [
      "django/core/files/uploadedfile.py",
      [
        "SimpleUploadedFile"
      ]
    ]
  ],
  "UploadFileException": [
    [
      "django/core/files/uploadhandler.py",
      [
        "UploadFileException"
      ]
    ]
  ],
  "StopUpload": [
    [
      "django/core/files/uploadhandler.py",
      [
        "StopUpload"
      ]
    ]
  ],
  "SkipFile": [
    [
      "django/core/files/uploadhandler.py",
      [
        "SkipFile"
      ]
    ]
  ],
  "StopFutureHandlers": [
    [
      "django/core/files/uploadhandler.py",
      [
        "StopFutureHandlers"
      ]
    ]
  ],
  "FileUploadHandler": [
    [
      "django/core/files/uploadhandler.py",
      [
        "FileUploadHandler"
      ]
    ]
  ],
  "TemporaryFileUploadHandler": [
    [
      "django/core/files/uploadhandler.py",
      [
        "TemporaryFileUploadHandler"
      ]
    ]
  ],
  "MemoryFileUploadHandler": [
    [
      "django/core/files/uploadhandler.py",
      [
        "MemoryFileUploadHandler"
      ]
    ]
  ],
  "FileProxyMixin": [
    [
      "django/core/files/utils.py",
      [
        "FileProxyMixin"
      ]
    ]
  ],
  "BaseHandler": [
    [
      "django/core/handlers/base.py",
      [
        "BaseHandler"
      ]
    ]
  ],
  "LimitedStream": [
    [
      "django/core/handlers/wsgi.py",
      [
        "LimitedStream"
      ]
    ]
  ],
  "WSGIRequest": [
    [
      "django/core/handlers/wsgi.py",
      [
        "WSGIRequest"
      ]
    ]
  ],
  "WSGIHandler": [
    [
      "django/core/handlers/wsgi.py",
      [
        "WSGIHandler"
      ]
    ]
  ],
  "BaseEmailBackend": [
    [
      "django/core/mail/backends/base.py",
      [
        "BaseEmailBackend"
      ]
    ]
  ],
  "EmailBackend": [
    [
      "django/core/mail/backends/console.py",
      [
        "EmailBackend"
      ]
    ],
    [
      "django/core/mail/backends/dummy.py",
      [
        "EmailBackend"
      ]
    ],
    [
      "django/core/mail/backends/filebased.py",
      [
        "EmailBackend"
      ]
    ],
    [
      "django/core/mail/backends/locmem.py",
      [
        "EmailBackend"
      ]
    ],
    [
      "django/core/mail/backends/smtp.py",
      [
        "EmailBackend"
      ]
    ],
    [
      "tests/mail/custombackend.py",
      [
        "EmailBackend"
      ]
    ]
  ],
  "BadHeaderError": [
    [
      "django/core/mail/message.py",
      [
        "BadHeaderError"
      ]
    ],
    [
      "django/http/response.py",
      [
        "BadHeaderError"
      ]
    ]
  ],
  "MIMEMixin": [
    [
      "django/core/mail/message.py",
      [
        "MIMEMixin"
      ]
    ]
  ],
  "SafeMIMEMessage": [
    [
      "django/core/mail/message.py",
      [
        "SafeMIMEMessage"
      ]
    ]
  ],
  "SafeMIMEText": [
    [
      "django/core/mail/message.py",
      [
        "SafeMIMEText"
      ]
    ]
  ],
  "SafeMIMEMultipart": [
    [
      "django/core/mail/message.py",
      [
        "SafeMIMEMultipart"
      ]
    ]
  ],
  "EmailMessage": [
    [
      "django/core/mail/message.py",
      [
        "EmailMessage"
      ]
    ]
  ],
  "EmailMultiAlternatives": [
    [
      "django/core/mail/message.py",
      [
        "EmailMultiAlternatives"
      ]
    ]
  ],
  "CachedDnsName": [
    [
      "django/core/mail/utils.py",
      [
        "CachedDnsName"
      ]
    ]
  ],
  "ManagementUtility": [
    [
      "django/core/management/__init__.py",
      [
        "ManagementUtility"
      ]
    ]
  ],
  "CommandError": [
    [
      "django/core/management/base.py",
      [
        "CommandError"
      ]
    ]
  ],
  "SystemCheckError": [
    [
      "django/core/management/base.py",
      [
        "SystemCheckError"
      ]
    ]
  ],
  "CommandParser": [
    [
      "django/core/management/base.py",
      [
        "CommandParser"
      ]
    ]
  ],
  "DjangoHelpFormatter": [
    [
      "django/core/management/base.py",
      [
        "DjangoHelpFormatter"
      ]
    ]
  ],
  "OutputWrapper": [
    [
      "django/core/management/base.py",
      [
        "OutputWrapper"
      ]
    ]
  ],
  "BaseCommand": [
    [
      "django/core/management/base.py",
      [
        "BaseCommand"
      ]
    ]
  ],
  "AppCommand": [
    [
      "django/core/management/base.py",
      [
        "AppCommand"
      ]
    ]
  ],
  "LabelCommand": [
    [
      "django/core/management/base.py",
      [
        "LabelCommand"
      ]
    ]
  ],
  "Style": [
    [
      "django/core/management/color.py",
      [
        "Style"
      ]
    ]
  ],
  "ProxyModelWarning": [
    [
      "django/core/management/commands/dumpdata.py",
      [
        "ProxyModelWarning"
      ]
    ]
  ],
  "SingleZipReader": [
    [
      "django/core/management/commands/loaddata.py",
      [
        "SingleZipReader"
      ]
    ]
  ],
  "TranslatableFile": [
    [
      "django/core/management/commands/makemessages.py",
      [
        "TranslatableFile"
      ]
    ]
  ],
  "BuildFile": [
    [
      "django/core/management/commands/makemessages.py",
      [
        "BuildFile"
      ]
    ]
  ],
  "TemplateCommand": [
    [
      "django/core/management/templates.py",
      [
        "TemplateCommand"
      ]
    ]
  ],
  "UnorderedObjectListWarning": [
    [
      "django/core/paginator.py",
      [
        "UnorderedObjectListWarning"
      ]
    ]
  ],
  "InvalidPage": [
    [
      "django/core/paginator.py",
      [
        "InvalidPage"
      ]
    ]
  ],
  "PageNotAnInteger": [
    [
      "django/core/paginator.py",
      [
        "PageNotAnInteger"
      ]
    ]
  ],
  "EmptyPage": [
    [
      "django/core/paginator.py",
      [
        "EmptyPage"
      ]
    ]
  ],
  "Paginator": [
    [
      "django/core/paginator.py",
      [
        "Paginator"
      ]
    ]
  ],
  "QuerySetPaginator": [
    [
      "django/core/paginator.py",
      [
        "QuerySetPaginator"
      ]
    ]
  ],
  "Page": [
    [
      "django/core/paginator.py",
      [
        "Page"
      ]
    ],
    [
      "tests/generic_views/models.py",
      [
        "Page"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Page"
      ]
    ]
  ],
  "BadSerializer": [
    [
      "django/core/serializers/__init__.py",
      [
        "BadSerializer"
      ]
    ]
  ],
  "SerializerDoesNotExist": [
    [
      "django/core/serializers/base.py",
      [
        "SerializerDoesNotExist"
      ]
    ]
  ],
  "SerializationError": [
    [
      "django/core/serializers/base.py",
      [
        "SerializationError"
      ]
    ]
  ],
  "DeserializationError": [
    [
      "django/core/serializers/base.py",
      [
        "DeserializationError"
      ]
    ]
  ],
  "M2MDeserializationError": [
    [
      "django/core/serializers/base.py",
      [
        "M2MDeserializationError"
      ]
    ]
  ],
  "ProgressBar": [
    [
      "django/core/serializers/base.py",
      [
        "ProgressBar"
      ]
    ]
  ],
  "DeserializedObject": [
    [
      "django/core/serializers/base.py",
      [
        "DeserializedObject"
      ]
    ]
  ],
  "DjangoJSONEncoder": [
    [
      "django/core/serializers/json.py",
      [
        "DjangoJSONEncoder"
      ]
    ]
  ],
  "DjangoSafeDumper": [
    [
      "django/core/serializers/pyyaml.py",
      [
        "DjangoSafeDumper"
      ]
    ]
  ],
  "DefusedExpatParser": [
    [
      "django/core/serializers/xml_serializer.py",
      [
        "DefusedExpatParser"
      ]
    ]
  ],
  "DefusedXmlException": [
    [
      "django/core/serializers/xml_serializer.py",
      [
        "DefusedXmlException"
      ]
    ]
  ],
  "DTDForbidden": [
    [
      "django/core/serializers/xml_serializer.py",
      [
        "DTDForbidden"
      ]
    ]
  ],
  "EntitiesForbidden": [
    [
      "django/core/serializers/xml_serializer.py",
      [
        "EntitiesForbidden"
      ]
    ]
  ],
  "ExternalReferenceForbidden": [
    [
      "django/core/serializers/xml_serializer.py",
      [
        "ExternalReferenceForbidden"
      ]
    ]
  ],
  "WSGIServer": [
    [
      "django/core/servers/basehttp.py",
      [
        "WSGIServer"
      ]
    ]
  ],
  "ThreadedWSGIServer": [
    [
      "django/core/servers/basehttp.py",
      [
        "ThreadedWSGIServer"
      ]
    ]
  ],
  "ServerHandler": [
    [
      "django/core/servers/basehttp.py",
      [
        "ServerHandler"
      ]
    ],
    [
      "tests/builtin_server/tests.py",
      [
        "ServerHandler"
      ]
    ]
  ],
  "WSGIRequestHandler": [
    [
      "django/core/servers/basehttp.py",
      [
        "WSGIRequestHandler"
      ]
    ]
  ],
  "BadSignature": [
    [
      "django/core/signing.py",
      [
        "BadSignature"
      ]
    ]
  ],
  "SignatureExpired": [
    [
      "django/core/signing.py",
      [
        "SignatureExpired"
      ]
    ]
  ],
  "JSONSerializer": [
    [
      "django/core/signing.py",
      [
        "JSONSerializer"
      ]
    ]
  ],
  "Signer": [
    [
      "django/core/signing.py",
      [
        "Signer"
      ]
    ]
  ],
  "TimestampSigner": [
    [
      "django/core/signing.py",
      [
        "TimestampSigner"
      ]
    ]
  ],
  "RegexValidator": [
    [
      "django/core/validators.py",
      [
        "RegexValidator"
      ]
    ]
  ],
  "URLValidator": [
    [
      "django/core/validators.py",
      [
        "URLValidator"
      ]
    ]
  ],
  "EmailValidator": [
    [
      "django/core/validators.py",
      [
        "EmailValidator"
      ]
    ]
  ],
  "BaseValidator": [
    [
      "django/core/validators.py",
      [
        "BaseValidator"
      ]
    ]
  ],
  "MaxValueValidator": [
    [
      "django/core/validators.py",
      [
        "MaxValueValidator"
      ]
    ]
  ],
  "MinValueValidator": [
    [
      "django/core/validators.py",
      [
        "MinValueValidator"
      ]
    ]
  ],
  "MinLengthValidator": [
    [
      "django/core/validators.py",
      [
        "MinLengthValidator"
      ]
    ]
  ],
  "MaxLengthValidator": [
    [
      "django/core/validators.py",
      [
        "MaxLengthValidator"
      ]
    ]
  ],
  "DecimalValidator": [
    [
      "django/core/validators.py",
      [
        "DecimalValidator"
      ]
    ]
  ],
  "FileExtensionValidator": [
    [
      "django/core/validators.py",
      [
        "FileExtensionValidator"
      ]
    ]
  ],
  "ProhibitNullCharactersValidator": [
    [
      "django/core/validators.py",
      [
        "ProhibitNullCharactersValidator"
      ]
    ]
  ],
  "DefaultConnectionProxy": [
    [
      "django/db/__init__.py",
      [
        "DefaultConnectionProxy"
      ]
    ]
  ],
  "BaseDatabaseWrapper": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper"
      ]
    ]
  ],
  "BaseDatabaseClient": [
    [
      "django/db/backends/base/client.py",
      [
        "BaseDatabaseClient"
      ]
    ]
  ],
  "BaseDatabaseCreation": [
    [
      "django/db/backends/base/creation.py",
      [
        "BaseDatabaseCreation"
      ]
    ]
  ],
  "BaseDatabaseFeatures": [
    [
      "django/db/backends/base/features.py",
      [
        "BaseDatabaseFeatures"
      ]
    ]
  ],
  "BaseDatabaseIntrospection": [
    [
      "django/db/backends/base/introspection.py",
      [
        "BaseDatabaseIntrospection"
      ]
    ]
  ],
  "BaseDatabaseOperations": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations"
      ]
    ]
  ],
  "BaseDatabaseSchemaEditor": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor"
      ]
    ]
  ],
  "BaseDatabaseValidation": [
    [
      "django/db/backends/base/validation.py",
      [
        "BaseDatabaseValidation"
      ]
    ]
  ],
  "Reference": [
    [
      "django/db/backends/ddl_references.py",
      [
        "Reference"
      ]
    ],
    [
      "tests/ordering/models.py",
      [
        "Reference"
      ]
    ]
  ],
  "Table": [
    [
      "django/db/backends/ddl_references.py",
      [
        "Table"
      ]
    ]
  ],
  "TableColumns": [
    [
      "django/db/backends/ddl_references.py",
      [
        "TableColumns"
      ]
    ]
  ],
  "Columns": [
    [
      "django/db/backends/ddl_references.py",
      [
        "Columns"
      ]
    ]
  ],
  "IndexName": [
    [
      "django/db/backends/ddl_references.py",
      [
        "IndexName"
      ]
    ]
  ],
  "IndexColumns": [
    [
      "django/db/backends/ddl_references.py",
      [
        "IndexColumns"
      ]
    ]
  ],
  "ForeignKeyName": [
    [
      "django/db/backends/ddl_references.py",
      [
        "ForeignKeyName"
      ]
    ]
  ],
  "Statement": [
    [
      "django/db/backends/ddl_references.py",
      [
        "Statement"
      ]
    ]
  ],
  "DatabaseOperations": [
    [
      "django/db/backends/dummy/base.py",
      [
        "DatabaseOperations"
      ]
    ],
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations"
      ]
    ]
  ],
  "DatabaseClient": [
    [
      "django/db/backends/dummy/base.py",
      [
        "DatabaseClient"
      ]
    ],
    [
      "django/db/backends/mysql/client.py",
      [
        "DatabaseClient"
      ]
    ],
    [
      "django/db/backends/oracle/client.py",
      [
        "DatabaseClient"
      ]
    ],
    [
      "django/db/backends/postgresql/client.py",
      [
        "DatabaseClient"
      ]
    ],
    [
      "django/db/backends/sqlite3/client.py",
      [
        "DatabaseClient"
      ]
    ]
  ],
  "DatabaseCreation": [
    [
      "django/db/backends/dummy/base.py",
      [
        "DatabaseCreation"
      ]
    ],
    [
      "django/db/backends/mysql/creation.py",
      [
        "DatabaseCreation"
      ]
    ],
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation"
      ]
    ],
    [
      "django/db/backends/postgresql/creation.py",
      [
        "DatabaseCreation"
      ]
    ],
    [
      "django/db/backends/sqlite3/creation.py",
      [
        "DatabaseCreation"
      ]
    ]
  ],
  "DatabaseIntrospection": [
    [
      "django/db/backends/dummy/base.py",
      [
        "DatabaseIntrospection"
      ]
    ],
    [
      "django/db/backends/mysql/introspection.py",
      [
        "DatabaseIntrospection"
      ]
    ],
    [
      "django/db/backends/oracle/introspection.py",
      [
        "DatabaseIntrospection"
      ]
    ],
    [
      "django/db/backends/postgresql/introspection.py",
      [
        "DatabaseIntrospection"
      ]
    ],
    [
      "django/db/backends/sqlite3/introspection.py",
      [
        "DatabaseIntrospection"
      ]
    ]
  ],
  "DummyDatabaseFeatures": [
    [
      "django/db/backends/dummy/features.py",
      [
        "DummyDatabaseFeatures"
      ]
    ]
  ],
  "CursorWrapper": [
    [
      "django/db/backends/mysql/base.py",
      [
        "CursorWrapper"
      ]
    ],
    [
      "django/db/backends/utils.py",
      [
        "CursorWrapper"
      ]
    ]
  ],
  "SQLCompiler": [
    [
      "django/db/backends/mysql/compiler.py",
      [
        "SQLCompiler"
      ]
    ],
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler"
      ]
    ]
  ],
  "SQLInsertCompiler": [
    [
      "django/db/backends/mysql/compiler.py",
      [
        "SQLInsertCompiler"
      ]
    ],
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLInsertCompiler"
      ]
    ]
  ],
  "SQLDeleteCompiler": [
    [
      "django/db/backends/mysql/compiler.py",
      [
        "SQLDeleteCompiler"
      ]
    ],
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLDeleteCompiler"
      ]
    ]
  ],
  "SQLUpdateCompiler": [
    [
      "django/db/backends/mysql/compiler.py",
      [
        "SQLUpdateCompiler"
      ]
    ],
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLUpdateCompiler"
      ]
    ]
  ],
  "SQLAggregateCompiler": [
    [
      "django/db/backends/mysql/compiler.py",
      [
        "SQLAggregateCompiler"
      ]
    ],
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLAggregateCompiler"
      ]
    ]
  ],
  "DatabaseSchemaEditor": [
    [
      "django/db/backends/mysql/schema.py",
      [
        "DatabaseSchemaEditor"
      ]
    ],
    [
      "django/db/backends/oracle/schema.py",
      [
        "DatabaseSchemaEditor"
      ]
    ],
    [
      "django/db/backends/postgresql/schema.py",
      [
        "DatabaseSchemaEditor"
      ]
    ],
    [
      "django/db/backends/sqlite3/schema.py",
      [
        "DatabaseSchemaEditor"
      ]
    ]
  ],
  "DatabaseValidation": [
    [
      "django/db/backends/mysql/validation.py",
      [
        "DatabaseValidation"
      ]
    ],
    [
      "django/db/backends/oracle/validation.py",
      [
        "DatabaseValidation"
      ]
    ]
  ],
  "_UninitializedOperatorsDescriptor": [
    [
      "django/db/backends/oracle/base.py",
      [
        "_UninitializedOperatorsDescriptor"
      ]
    ]
  ],
  "OracleParam": [
    [
      "django/db/backends/oracle/base.py",
      [
        "OracleParam"
      ]
    ]
  ],
  "VariableWrapper": [
    [
      "django/db/backends/oracle/base.py",
      [
        "VariableWrapper"
      ]
    ]
  ],
  "FormatStylePlaceholderCursor": [
    [
      "django/db/backends/oracle/base.py",
      [
        "FormatStylePlaceholderCursor"
      ]
    ]
  ],
  "IntervalToSeconds": [
    [
      "django/db/backends/oracle/functions.py",
      [
        "IntervalToSeconds"
      ]
    ]
  ],
  "SecondsToInterval": [
    [
      "django/db/backends/oracle/functions.py",
      [
        "SecondsToInterval"
      ]
    ]
  ],
  "InsertIdVar": [
    [
      "django/db/backends/oracle/utils.py",
      [
        "InsertIdVar"
      ]
    ]
  ],
  "Oracle_datetime": [
    [
      "django/db/backends/oracle/utils.py",
      [
        "Oracle_datetime"
      ]
    ]
  ],
  "BulkInsertMapper": [
    [
      "django/db/backends/oracle/utils.py",
      [
        "BulkInsertMapper"
      ]
    ]
  ],
  "SQLiteCursorWrapper": [
    [
      "django/db/backends/sqlite3/base.py",
      [
        "SQLiteCursorWrapper"
      ]
    ]
  ],
  "FlexibleFieldLookupDict": [
    [
      "django/db/backends/sqlite3/introspection.py",
      [
        "FlexibleFieldLookupDict"
      ]
    ]
  ],
  "CursorDebugWrapper": [
    [
      "django/db/backends/utils.py",
      [
        "CursorDebugWrapper"
      ]
    ]
  ],
  "MigrationAutodetector": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector"
      ]
    ]
  ],
  "AmbiguityError": [
    [
      "django/db/migrations/exceptions.py",
      [
        "AmbiguityError"
      ]
    ]
  ],
  "BadMigrationError": [
    [
      "django/db/migrations/exceptions.py",
      [
        "BadMigrationError"
      ]
    ]
  ],
  "CircularDependencyError": [
    [
      "django/db/migrations/exceptions.py",
      [
        "CircularDependencyError"
      ]
    ]
  ],
  "InconsistentMigrationHistory": [
    [
      "django/db/migrations/exceptions.py",
      [
        "InconsistentMigrationHistory"
      ]
    ]
  ],
  "InvalidBasesError": [
    [
      "django/db/migrations/exceptions.py",
      [
        "InvalidBasesError"
      ]
    ]
  ],
  "IrreversibleError": [
    [
      "django/db/migrations/exceptions.py",
      [
        "IrreversibleError"
      ]
    ]
  ],
  "NodeNotFoundError": [
    [
      "django/db/migrations/exceptions.py",
      [
        "NodeNotFoundError"
      ]
    ]
  ],
  "MigrationSchemaMissing": [
    [
      "django/db/migrations/exceptions.py",
      [
        "MigrationSchemaMissing"
      ]
    ]
  ],
  "InvalidMigrationPlan": [
    [
      "django/db/migrations/exceptions.py",
      [
        "InvalidMigrationPlan"
      ]
    ]
  ],
  "MigrationExecutor": [
    [
      "django/db/migrations/executor.py",
      [
        "MigrationExecutor"
      ]
    ]
  ],
  "Node": [
    [
      "django/db/migrations/graph.py",
      [
        "Node"
      ]
    ],
    [
      "django/template/base.py",
      [
        "Node"
      ]
    ],
    [
      "django/utils/tree.py",
      [
        "Node"
      ]
    ],
    [
      "tests/generic_relations_regress/models.py",
      [
        "Node"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Node"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "Node"
      ]
    ]
  ],
  "DummyNode": [
    [
      "django/db/migrations/graph.py",
      [
        "DummyNode"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "WhereNodeTest",
        "DummyNode"
      ]
    ]
  ],
  "MigrationGraph": [
    [
      "django/db/migrations/graph.py",
      [
        "MigrationGraph"
      ]
    ]
  ],
  "MigrationLoader": [
    [
      "django/db/migrations/loader.py",
      [
        "MigrationLoader"
      ]
    ]
  ],
  "SwappableTuple": [
    [
      "django/db/migrations/migration.py",
      [
        "SwappableTuple"
      ]
    ]
  ],
  "Operation": [
    [
      "django/db/migrations/operations/base.py",
      [
        "Operation"
      ]
    ]
  ],
  "FieldOperation": [
    [
      "django/db/migrations/operations/fields.py",
      [
        "FieldOperation"
      ]
    ]
  ],
  "AddField": [
    [
      "django/db/migrations/operations/fields.py",
      [
        "AddField"
      ]
    ]
  ],
  "RemoveField": [
    [
      "django/db/migrations/operations/fields.py",
      [
        "RemoveField"
      ]
    ]
  ],
  "AlterField": [
    [
      "django/db/migrations/operations/fields.py",
      [
        "AlterField"
      ]
    ]
  ],
  "RenameField": [
    [
      "django/db/migrations/operations/fields.py",
      [
        "RenameField"
      ]
    ]
  ],
  "ModelOperation": [
    [
      "django/db/migrations/operations/models.py",
      [
        "ModelOperation"
      ]
    ]
  ],
  "CreateModel": [
    [
      "django/db/migrations/operations/models.py",
      [
        "CreateModel"
      ]
    ],
    [
      "tests/custom_migration_operations/operations.py",
      [
        "CreateModel"
      ]
    ]
  ],
  "DeleteModel": [
    [
      "django/db/migrations/operations/models.py",
      [
        "DeleteModel"
      ]
    ]
  ],
  "RenameModel": [
    [
      "django/db/migrations/operations/models.py",
      [
        "RenameModel"
      ]
    ]
  ],
  "AlterModelTable": [
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterModelTable"
      ]
    ]
  ],
  "ModelOptionOperation": [
    [
      "django/db/migrations/operations/models.py",
      [
        "ModelOptionOperation"
      ]
    ]
  ],
  "AlterTogetherOptionOperation": [
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterTogetherOptionOperation"
      ]
    ]
  ],
  "AlterUniqueTogether": [
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterUniqueTogether"
      ]
    ]
  ],
  "AlterIndexTogether": [
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterIndexTogether"
      ]
    ]
  ],
  "AlterOrderWithRespectTo": [
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterOrderWithRespectTo"
      ]
    ]
  ],
  "AlterModelOptions": [
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterModelOptions"
      ]
    ]
  ],
  "AlterModelManagers": [
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterModelManagers"
      ]
    ]
  ],
  "IndexOperation": [
    [
      "django/db/migrations/operations/models.py",
      [
        "IndexOperation"
      ]
    ]
  ],
  "AddIndex": [
    [
      "django/db/migrations/operations/models.py",
      [
        "AddIndex"
      ]
    ]
  ],
  "RemoveIndex": [
    [
      "django/db/migrations/operations/models.py",
      [
        "RemoveIndex"
      ]
    ]
  ],
  "AddConstraint": [
    [
      "django/db/migrations/operations/models.py",
      [
        "AddConstraint"
      ]
    ]
  ],
  "RemoveConstraint": [
    [
      "django/db/migrations/operations/models.py",
      [
        "RemoveConstraint"
      ]
    ]
  ],
  "SeparateDatabaseAndState": [
    [
      "django/db/migrations/operations/special.py",
      [
        "SeparateDatabaseAndState"
      ]
    ]
  ],
  "RunSQL": [
    [
      "django/db/migrations/operations/special.py",
      [
        "RunSQL"
      ]
    ]
  ],
  "RunPython": [
    [
      "django/db/migrations/operations/special.py",
      [
        "RunPython"
      ]
    ]
  ],
  "ModelTuple": [
    [
      "django/db/migrations/operations/utils.py",
      [
        "ModelTuple"
      ]
    ]
  ],
  "MigrationOptimizer": [
    [
      "django/db/migrations/optimizer.py",
      [
        "MigrationOptimizer"
      ]
    ]
  ],
  "MigrationQuestioner": [
    [
      "django/db/migrations/questioner.py",
      [
        "MigrationQuestioner"
      ]
    ]
  ],
  "InteractiveMigrationQuestioner": [
    [
      "django/db/migrations/questioner.py",
      [
        "InteractiveMigrationQuestioner"
      ]
    ]
  ],
  "NonInteractiveMigrationQuestioner": [
    [
      "django/db/migrations/questioner.py",
      [
        "NonInteractiveMigrationQuestioner"
      ]
    ]
  ],
  "MigrationRecorder": [
    [
      "django/db/migrations/recorder.py",
      [
        "MigrationRecorder"
      ]
    ]
  ],
  "BaseSerializer": [
    [
      "django/db/migrations/serializer.py",
      [
        "BaseSerializer"
      ]
    ]
  ],
  "BaseSequenceSerializer": [
    [
      "django/db/migrations/serializer.py",
      [
        "BaseSequenceSerializer"
      ]
    ]
  ],
  "BaseSimpleSerializer": [
    [
      "django/db/migrations/serializer.py",
      [
        "BaseSimpleSerializer"
      ]
    ]
  ],
  "DateTimeSerializer": [
    [
      "django/db/migrations/serializer.py",
      [
        "DateTimeSerializer"
      ]
    ]
  ],
  "DatetimeDatetimeSerializer": [
    [
      "django/db/migrations/serializer.py",
      [
        "DatetimeDatetimeSerializer"
      ]
    ]
  ],
  "DecimalSerializer": [
    [
      "django/db/migrations/serializer.py",
      [
        "DecimalSerializer"
      ]
    ]
  ],
  "DeconstructableSerializer": [
    [
      "django/db/migrations/serializer.py",
      [
        "DeconstructableSerializer"
      ]
    ]
  ],
  "DictionarySerializer": [
    [
      "django/db/migrations/serializer.py",
      [
        "DictionarySerializer"
      ]
    ]
  ],
  "EnumSerializer": [
    [
      "django/db/migrations/serializer.py",
      [
        "EnumSerializer"
      ]
    ]
  ],
  "FloatSerializer": [
    [
      "django/db/migrations/serializer.py",
      [
        "FloatSerializer"
      ]
    ]
  ],
  "FrozensetSerializer": [
    [
      "django/db/migrations/serializer.py",
      [
        "FrozensetSerializer"
      ]
    ]
  ],
  "FunctionTypeSerializer": [
    [
      "django/db/migrations/serializer.py",
      [
        "FunctionTypeSerializer"
      ]
    ]
  ],
  "FunctoolsPartialSerializer": [
    [
      "django/db/migrations/serializer.py",
      [
        "FunctoolsPartialSerializer"
      ]
    ]
  ],
  "IterableSerializer": [
    [
      "django/db/migrations/serializer.py",
      [
        "IterableSerializer"
      ]
    ]
  ],
  "ModelFieldSerializer": [
    [
      "django/db/migrations/serializer.py",
      [
        "ModelFieldSerializer"
      ]
    ]
  ],
  "ModelManagerSerializer": [
    [
      "django/db/migrations/serializer.py",
      [
        "ModelManagerSerializer"
      ]
    ]
  ],
  "OperationSerializer": [
    [
      "django/db/migrations/serializer.py",
      [
        "OperationSerializer"
      ]
    ]
  ],
  "RegexSerializer": [
    [
      "django/db/migrations/serializer.py",
      [
        "RegexSerializer"
      ]
    ]
  ],
  "SequenceSerializer": [
    [
      "django/db/migrations/serializer.py",
      [
        "SequenceSerializer"
      ]
    ]
  ],
  "SetSerializer": [
    [
      "django/db/migrations/serializer.py",
      [
        "SetSerializer"
      ]
    ]
  ],
  "SettingsReferenceSerializer": [
    [
      "django/db/migrations/serializer.py",
      [
        "SettingsReferenceSerializer"
      ]
    ]
  ],
  "TupleSerializer": [
    [
      "django/db/migrations/serializer.py",
      [
        "TupleSerializer"
      ]
    ]
  ],
  "TypeSerializer": [
    [
      "django/db/migrations/serializer.py",
      [
        "TypeSerializer"
      ]
    ]
  ],
  "UUIDSerializer": [
    [
      "django/db/migrations/serializer.py",
      [
        "UUIDSerializer"
      ]
    ]
  ],
  "ProjectState": [
    [
      "django/db/migrations/state.py",
      [
        "ProjectState"
      ]
    ]
  ],
  "AppConfigStub": [
    [
      "django/db/migrations/state.py",
      [
        "AppConfigStub"
      ]
    ]
  ],
  "StateApps": [
    [
      "django/db/migrations/state.py",
      [
        "StateApps"
      ]
    ]
  ],
  "ModelState": [
    [
      "django/db/migrations/state.py",
      [
        "ModelState"
      ]
    ],
    [
      "django/db/models/base.py",
      [
        "ModelState"
      ]
    ]
  ],
  "RegexObject": [
    [
      "django/db/migrations/utils.py",
      [
        "RegexObject"
      ]
    ]
  ],
  "OperationWriter": [
    [
      "django/db/migrations/writer.py",
      [
        "OperationWriter"
      ]
    ]
  ],
  "MigrationWriter": [
    [
      "django/db/migrations/writer.py",
      [
        "MigrationWriter"
      ]
    ]
  ],
  "Aggregate": [
    [
      "django/db/models/aggregates.py",
      [
        "Aggregate"
      ]
    ]
  ],
  "Avg": [
    [
      "django/db/models/aggregates.py",
      [
        "Avg"
      ]
    ]
  ],
  "Count": [
    [
      "django/db/models/aggregates.py",
      [
        "Count"
      ]
    ],
    [
      "tests/admin_utils/models.py",
      [
        "Count"
      ]
    ]
  ],
  "Max": [
    [
      "django/db/models/aggregates.py",
      [
        "Max"
      ]
    ]
  ],
  "Min": [
    [
      "django/db/models/aggregates.py",
      [
        "Min"
      ]
    ]
  ],
  "StdDev": [
    [
      "django/db/models/aggregates.py",
      [
        "StdDev"
      ]
    ]
  ],
  "Sum": [
    [
      "django/db/models/aggregates.py",
      [
        "Sum"
      ]
    ]
  ],
  "Variance": [
    [
      "django/db/models/aggregates.py",
      [
        "Variance"
      ]
    ]
  ],
  "Deferred": [
    [
      "django/db/models/base.py",
      [
        "Deferred"
      ]
    ]
  ],
  "ModelBase": [
    [
      "django/db/models/base.py",
      [
        "ModelBase"
      ]
    ]
  ],
  "ModelStateFieldsCacheDescriptor": [
    [
      "django/db/models/base.py",
      [
        "ModelStateFieldsCacheDescriptor"
      ]
    ]
  ],
  "Model": [
    [
      "django/db/models/base.py",
      [
        "Model"
      ]
    ],
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_total_ordering_optimization",
        "Model"
      ]
    ],
    [
      "tests/contenttypes_tests/test_checks.py",
      [
        "GenericRelationTests",
        "test_pointing_to_swapped_model",
        "Model"
      ]
    ],
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "DateFieldTests",
        "test_fix_default_value",
        "Model"
      ]
    ],
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "DateTimeFieldTests",
        "test_fix_default_value",
        "Model"
      ]
    ],
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "TimeFieldTests",
        "test_fix_default_value",
        "Model"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_many_to_many_with_useless_options",
        "Model"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_not_swapped_model",
        "Model"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_referencing_to_swapped_model",
        "Model"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "AccessorClashTests",
        "test_clash_between_accessors",
        "Model"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "AccessorClashTests",
        "test_m2m_to_m2m_with_inheritance",
        "Model"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ExplicitRelatedNameClashTests",
        "_test_explicit_related_name_clash",
        "Model"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ComplexClashTests",
        "test_complex_clash",
        "Model"
      ]
    ]
  ],
  "BaseConstraint": [
    [
      "django/db/models/constraints.py",
      [
        "BaseConstraint"
      ]
    ]
  ],
  "CheckConstraint": [
    [
      "django/db/models/constraints.py",
      [
        "CheckConstraint"
      ]
    ]
  ],
  "UniqueConstraint": [
    [
      "django/db/models/constraints.py",
      [
        "UniqueConstraint"
      ]
    ]
  ],
  "ProtectedError": [
    [
      "django/db/models/deletion.py",
      [
        "ProtectedError"
      ]
    ]
  ],
  "Collector": [
    [
      "django/db/models/deletion.py",
      [
        "Collector"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Collector"
      ]
    ]
  ],
  "SQLiteNumericMixin": [
    [
      "django/db/models/expressions.py",
      [
        "SQLiteNumericMixin"
      ]
    ]
  ],
  "Combinable": [
    [
      "django/db/models/expressions.py",
      [
        "Combinable"
      ]
    ]
  ],
  "BaseExpression": [
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression"
      ]
    ]
  ],
  "Expression": [
    [
      "django/db/models/expressions.py",
      [
        "Expression"
      ]
    ]
  ],
  "CombinedExpression": [
    [
      "django/db/models/expressions.py",
      [
        "CombinedExpression"
      ]
    ]
  ],
  "DurationExpression": [
    [
      "django/db/models/expressions.py",
      [
        "DurationExpression"
      ]
    ]
  ],
  "TemporalSubtraction": [
    [
      "django/db/models/expressions.py",
      [
        "TemporalSubtraction"
      ]
    ]
  ],
  "F": [
    [
      "django/db/models/expressions.py",
      [
        "F"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_render_project_dependencies",
        "F"
      ]
    ]
  ],
  "ResolvedOuterRef": [
    [
      "django/db/models/expressions.py",
      [
        "ResolvedOuterRef"
      ]
    ]
  ],
  "OuterRef": [
    [
      "django/db/models/expressions.py",
      [
        "OuterRef"
      ]
    ]
  ],
  "Func": [
    [
      "django/db/models/expressions.py",
      [
        "Func"
      ]
    ]
  ],
  "Value": [
    [
      "django/db/models/expressions.py",
      [
        "Value"
      ]
    ]
  ],
  "DurationValue": [
    [
      "django/db/models/expressions.py",
      [
        "DurationValue"
      ]
    ]
  ],
  "RawSQL": [
    [
      "django/db/models/expressions.py",
      [
        "RawSQL"
      ]
    ]
  ],
  "Star": [
    [
      "django/db/models/expressions.py",
      [
        "Star"
      ]
    ]
  ],
  "Random": [
    [
      "django/db/models/expressions.py",
      [
        "Random"
      ]
    ]
  ],
  "Col": [
    [
      "django/db/models/expressions.py",
      [
        "Col"
      ]
    ]
  ],
  "SimpleCol": [
    [
      "django/db/models/expressions.py",
      [
        "SimpleCol"
      ]
    ]
  ],
  "Ref": [
    [
      "django/db/models/expressions.py",
      [
        "Ref"
      ]
    ]
  ],
  "ExpressionList": [
    [
      "django/db/models/expressions.py",
      [
        "ExpressionList"
      ]
    ]
  ],
  "ExpressionWrapper": [
    [
      "django/db/models/expressions.py",
      [
        "ExpressionWrapper"
      ]
    ]
  ],
  "When": [
    [
      "django/db/models/expressions.py",
      [
        "When"
      ]
    ]
  ],
  "Case": [
    [
      "django/db/models/expressions.py",
      [
        "Case"
      ]
    ]
  ],
  "Subquery": [
    [
      "django/db/models/expressions.py",
      [
        "Subquery"
      ]
    ]
  ],
  "Exists": [
    [
      "django/db/models/expressions.py",
      [
        "Exists"
      ]
    ]
  ],
  "OrderBy": [
    [
      "django/db/models/expressions.py",
      [
        "OrderBy"
      ]
    ]
  ],
  "Window": [
    [
      "django/db/models/expressions.py",
      [
        "Window"
      ]
    ]
  ],
  "WindowFrame": [
    [
      "django/db/models/expressions.py",
      [
        "WindowFrame"
      ]
    ]
  ],
  "RowRange": [
    [
      "django/db/models/expressions.py",
      [
        "RowRange"
      ]
    ]
  ],
  "ValueRange": [
    [
      "django/db/models/expressions.py",
      [
        "ValueRange"
      ]
    ]
  ],
  "Empty": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Empty"
      ]
    ],
    [
      "django/db/models/sql/datastructures.py",
      [
        "Empty"
      ]
    ],
    [
      "tests/empty/models.py",
      [
        "Empty"
      ]
    ]
  ],
  "NOT_PROVIDED": [
    [
      "django/db/models/fields/__init__.py",
      [
        "NOT_PROVIDED"
      ]
    ]
  ],
  "AutoField": [
    [
      "django/db/models/fields/__init__.py",
      [
        "AutoField"
      ]
    ]
  ],
  "BigAutoField": [
    [
      "django/db/models/fields/__init__.py",
      [
        "BigAutoField"
      ]
    ]
  ],
  "BooleanField": [
    [
      "django/db/models/fields/__init__.py",
      [
        "BooleanField"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "BooleanField"
      ]
    ]
  ],
  "CharField": [
    [
      "django/db/models/fields/__init__.py",
      [
        "CharField"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "CharField"
      ]
    ]
  ],
  "CommaSeparatedIntegerField": [
    [
      "django/db/models/fields/__init__.py",
      [
        "CommaSeparatedIntegerField"
      ]
    ]
  ],
  "DateTimeCheckMixin": [
    [
      "django/db/models/fields/__init__.py",
      [
        "DateTimeCheckMixin"
      ]
    ]
  ],
  "DateField": [
    [
      "django/db/models/fields/__init__.py",
      [
        "DateField"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "DateField"
      ]
    ]
  ],
  "DateTimeField": [
    [
      "django/db/models/fields/__init__.py",
      [
        "DateTimeField"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "DateTimeField"
      ]
    ]
  ],
  "DecimalField": [
    [
      "django/db/models/fields/__init__.py",
      [
        "DecimalField"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "DecimalField"
      ]
    ]
  ],
  "DurationField": [
    [
      "django/db/models/fields/__init__.py",
      [
        "DurationField"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "DurationField"
      ]
    ]
  ],
  "EmailField": [
    [
      "django/db/models/fields/__init__.py",
      [
        "EmailField"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "EmailField"
      ]
    ]
  ],
  "FilePathField": [
    [
      "django/db/models/fields/__init__.py",
      [
        "FilePathField"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "FilePathField"
      ]
    ]
  ],
  "FloatField": [
    [
      "django/db/models/fields/__init__.py",
      [
        "FloatField"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "FloatField"
      ]
    ]
  ],
  "IntegerField": [
    [
      "django/db/models/fields/__init__.py",
      [
        "IntegerField"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "IntegerField"
      ]
    ]
  ],
  "BigIntegerField": [
    [
      "django/db/models/fields/__init__.py",
      [
        "BigIntegerField"
      ]
    ]
  ],
  "IPAddressField": [
    [
      "django/db/models/fields/__init__.py",
      [
        "IPAddressField"
      ]
    ]
  ],
  "GenericIPAddressField": [
    [
      "django/db/models/fields/__init__.py",
      [
        "GenericIPAddressField"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "GenericIPAddressField"
      ]
    ]
  ],
  "NullBooleanField": [
    [
      "django/db/models/fields/__init__.py",
      [
        "NullBooleanField"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "NullBooleanField"
      ]
    ]
  ],
  "PositiveIntegerRelDbTypeMixin": [
    [
      "django/db/models/fields/__init__.py",
      [
        "PositiveIntegerRelDbTypeMixin"
      ]
    ]
  ],
  "PositiveIntegerField": [
    [
      "django/db/models/fields/__init__.py",
      [
        "PositiveIntegerField"
      ]
    ]
  ],
  "PositiveSmallIntegerField": [
    [
      "django/db/models/fields/__init__.py",
      [
        "PositiveSmallIntegerField"
      ]
    ]
  ],
  "SlugField": [
    [
      "django/db/models/fields/__init__.py",
      [
        "SlugField"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "SlugField"
      ]
    ]
  ],
  "SmallIntegerField": [
    [
      "django/db/models/fields/__init__.py",
      [
        "SmallIntegerField"
      ]
    ]
  ],
  "TextField": [
    [
      "django/db/models/fields/__init__.py",
      [
        "TextField"
      ]
    ]
  ],
  "TimeField": [
    [
      "django/db/models/fields/__init__.py",
      [
        "TimeField"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "TimeField"
      ]
    ]
  ],
  "URLField": [
    [
      "django/db/models/fields/__init__.py",
      [
        "URLField"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "URLField"
      ]
    ]
  ],
  "BinaryField": [
    [
      "django/db/models/fields/__init__.py",
      [
        "BinaryField"
      ]
    ]
  ],
  "UUIDField": [
    [
      "django/db/models/fields/__init__.py",
      [
        "UUIDField"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "UUIDField"
      ]
    ]
  ],
  "FieldFile": [
    [
      "django/db/models/fields/files.py",
      [
        "FieldFile"
      ]
    ]
  ],
  "FileDescriptor": [
    [
      "django/db/models/fields/files.py",
      [
        "FileDescriptor"
      ]
    ]
  ],
  "FileField": [
    [
      "django/db/models/fields/files.py",
      [
        "FileField"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "FileField"
      ]
    ]
  ],
  "ImageFileDescriptor": [
    [
      "django/db/models/fields/files.py",
      [
        "ImageFileDescriptor"
      ]
    ]
  ],
  "ImageFieldFile": [
    [
      "django/db/models/fields/files.py",
      [
        "ImageFieldFile"
      ]
    ]
  ],
  "ImageField": [
    [
      "django/db/models/fields/files.py",
      [
        "ImageField"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "ImageField"
      ]
    ]
  ],
  "FieldCacheMixin": [
    [
      "django/db/models/fields/mixins.py",
      [
        "FieldCacheMixin"
      ]
    ]
  ],
  "OrderWrt": [
    [
      "django/db/models/fields/proxy.py",
      [
        "OrderWrt"
      ]
    ]
  ],
  "RelatedField": [
    [
      "django/db/models/fields/related.py",
      [
        "RelatedField"
      ]
    ]
  ],
  "ForeignObject": [
    [
      "django/db/models/fields/related.py",
      [
        "ForeignObject"
      ]
    ]
  ],
  "ForeignKey": [
    [
      "django/db/models/fields/related.py",
      [
        "ForeignKey"
      ]
    ]
  ],
  "OneToOneField": [
    [
      "django/db/models/fields/related.py",
      [
        "OneToOneField"
      ]
    ]
  ],
  "ManyToManyField": [
    [
      "django/db/models/fields/related.py",
      [
        "ManyToManyField"
      ]
    ]
  ],
  "ForwardManyToOneDescriptor": [
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ForwardManyToOneDescriptor"
      ]
    ]
  ],
  "ForwardOneToOneDescriptor": [
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ForwardOneToOneDescriptor"
      ]
    ]
  ],
  "ReverseOneToOneDescriptor": [
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ReverseOneToOneDescriptor"
      ]
    ]
  ],
  "ReverseManyToOneDescriptor": [
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ReverseManyToOneDescriptor"
      ]
    ]
  ],
  "RelatedManager": [
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_reverse_many_to_one_manager",
        "RelatedManager"
      ]
    ]
  ],
  "ManyToManyDescriptor": [
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ManyToManyDescriptor"
      ]
    ]
  ],
  "ManyRelatedManager": [
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_forward_many_to_many_manager",
        "ManyRelatedManager"
      ]
    ]
  ],
  "MultiColSource": [
    [
      "django/db/models/fields/related_lookups.py",
      [
        "MultiColSource"
      ]
    ]
  ],
  "RelatedIn": [
    [
      "django/db/models/fields/related_lookups.py",
      [
        "RelatedIn"
      ]
    ]
  ],
  "RelatedLookupMixin": [
    [
      "django/db/models/fields/related_lookups.py",
      [
        "RelatedLookupMixin"
      ]
    ]
  ],
  "RelatedExact": [
    [
      "django/db/models/fields/related_lookups.py",
      [
        "RelatedExact"
      ]
    ]
  ],
  "RelatedLessThan": [
    [
      "django/db/models/fields/related_lookups.py",
      [
        "RelatedLessThan"
      ]
    ]
  ],
  "RelatedGreaterThan": [
    [
      "django/db/models/fields/related_lookups.py",
      [
        "RelatedGreaterThan"
      ]
    ]
  ],
  "RelatedGreaterThanOrEqual": [
    [
      "django/db/models/fields/related_lookups.py",
      [
        "RelatedGreaterThanOrEqual"
      ]
    ]
  ],
  "RelatedLessThanOrEqual": [
    [
      "django/db/models/fields/related_lookups.py",
      [
        "RelatedLessThanOrEqual"
      ]
    ]
  ],
  "RelatedIsNull": [
    [
      "django/db/models/fields/related_lookups.py",
      [
        "RelatedIsNull"
      ]
    ]
  ],
  "ForeignObjectRel": [
    [
      "django/db/models/fields/reverse_related.py",
      [
        "ForeignObjectRel"
      ]
    ]
  ],
  "ManyToOneRel": [
    [
      "django/db/models/fields/reverse_related.py",
      [
        "ManyToOneRel"
      ]
    ]
  ],
  "OneToOneRel": [
    [
      "django/db/models/fields/reverse_related.py",
      [
        "OneToOneRel"
      ]
    ]
  ],
  "ManyToManyRel": [
    [
      "django/db/models/fields/reverse_related.py",
      [
        "ManyToManyRel"
      ]
    ]
  ],
  "Cast": [
    [
      "django/db/models/functions/comparison.py",
      [
        "Cast"
      ]
    ]
  ],
  "Coalesce": [
    [
      "django/db/models/functions/comparison.py",
      [
        "Coalesce"
      ]
    ]
  ],
  "Greatest": [
    [
      "django/db/models/functions/comparison.py",
      [
        "Greatest"
      ]
    ]
  ],
  "Least": [
    [
      "django/db/models/functions/comparison.py",
      [
        "Least"
      ]
    ]
  ],
  "NullIf": [
    [
      "django/db/models/functions/comparison.py",
      [
        "NullIf"
      ]
    ]
  ],
  "TimezoneMixin": [
    [
      "django/db/models/functions/datetime.py",
      [
        "TimezoneMixin"
      ]
    ]
  ],
  "Extract": [
    [
      "django/db/models/functions/datetime.py",
      [
        "Extract"
      ]
    ]
  ],
  "ExtractYear": [
    [
      "django/db/models/functions/datetime.py",
      [
        "ExtractYear"
      ]
    ]
  ],
  "ExtractIsoYear": [
    [
      "django/db/models/functions/datetime.py",
      [
        "ExtractIsoYear"
      ]
    ]
  ],
  "ExtractMonth": [
    [
      "django/db/models/functions/datetime.py",
      [
        "ExtractMonth"
      ]
    ]
  ],
  "ExtractDay": [
    [
      "django/db/models/functions/datetime.py",
      [
        "ExtractDay"
      ]
    ]
  ],
  "ExtractWeek": [
    [
      "django/db/models/functions/datetime.py",
      [
        "ExtractWeek"
      ]
    ]
  ],
  "ExtractWeekDay": [
    [
      "django/db/models/functions/datetime.py",
      [
        "ExtractWeekDay"
      ]
    ]
  ],
  "ExtractQuarter": [
    [
      "django/db/models/functions/datetime.py",
      [
        "ExtractQuarter"
      ]
    ]
  ],
  "ExtractHour": [
    [
      "django/db/models/functions/datetime.py",
      [
        "ExtractHour"
      ]
    ]
  ],
  "ExtractMinute": [
    [
      "django/db/models/functions/datetime.py",
      [
        "ExtractMinute"
      ]
    ]
  ],
  "ExtractSecond": [
    [
      "django/db/models/functions/datetime.py",
      [
        "ExtractSecond"
      ]
    ]
  ],
  "Now": [
    [
      "django/db/models/functions/datetime.py",
      [
        "Now"
      ]
    ]
  ],
  "TruncBase": [
    [
      "django/db/models/functions/datetime.py",
      [
        "TruncBase"
      ]
    ]
  ],
  "Trunc": [
    [
      "django/db/models/functions/datetime.py",
      [
        "Trunc"
      ]
    ]
  ],
  "TruncYear": [
    [
      "django/db/models/functions/datetime.py",
      [
        "TruncYear"
      ]
    ]
  ],
  "TruncQuarter": [
    [
      "django/db/models/functions/datetime.py",
      [
        "TruncQuarter"
      ]
    ]
  ],
  "TruncMonth": [
    [
      "django/db/models/functions/datetime.py",
      [
        "TruncMonth"
      ]
    ]
  ],
  "TruncWeek": [
    [
      "django/db/models/functions/datetime.py",
      [
        "TruncWeek"
      ]
    ]
  ],
  "TruncDay": [
    [
      "django/db/models/functions/datetime.py",
      [
        "TruncDay"
      ]
    ]
  ],
  "TruncDate": [
    [
      "django/db/models/functions/datetime.py",
      [
        "TruncDate"
      ]
    ]
  ],
  "TruncTime": [
    [
      "django/db/models/functions/datetime.py",
      [
        "TruncTime"
      ]
    ]
  ],
  "TruncHour": [
    [
      "django/db/models/functions/datetime.py",
      [
        "TruncHour"
      ]
    ]
  ],
  "TruncMinute": [
    [
      "django/db/models/functions/datetime.py",
      [
        "TruncMinute"
      ]
    ]
  ],
  "TruncSecond": [
    [
      "django/db/models/functions/datetime.py",
      [
        "TruncSecond"
      ]
    ]
  ],
  "Abs": [
    [
      "django/db/models/functions/math.py",
      [
        "Abs"
      ]
    ]
  ],
  "ACos": [
    [
      "django/db/models/functions/math.py",
      [
        "ACos"
      ]
    ]
  ],
  "ASin": [
    [
      "django/db/models/functions/math.py",
      [
        "ASin"
      ]
    ]
  ],
  "ATan": [
    [
      "django/db/models/functions/math.py",
      [
        "ATan"
      ]
    ]
  ],
  "ATan2": [
    [
      "django/db/models/functions/math.py",
      [
        "ATan2"
      ]
    ]
  ],
  "Ceil": [
    [
      "django/db/models/functions/math.py",
      [
        "Ceil"
      ]
    ]
  ],
  "Cos": [
    [
      "django/db/models/functions/math.py",
      [
        "Cos"
      ]
    ]
  ],
  "Cot": [
    [
      "django/db/models/functions/math.py",
      [
        "Cot"
      ]
    ]
  ],
  "Degrees": [
    [
      "django/db/models/functions/math.py",
      [
        "Degrees"
      ]
    ]
  ],
  "Exp": [
    [
      "django/db/models/functions/math.py",
      [
        "Exp"
      ]
    ]
  ],
  "Floor": [
    [
      "django/db/models/functions/math.py",
      [
        "Floor"
      ]
    ]
  ],
  "Ln": [
    [
      "django/db/models/functions/math.py",
      [
        "Ln"
      ]
    ]
  ],
  "Log": [
    [
      "django/db/models/functions/math.py",
      [
        "Log"
      ]
    ]
  ],
  "Mod": [
    [
      "django/db/models/functions/math.py",
      [
        "Mod"
      ]
    ]
  ],
  "Pi": [
    [
      "django/db/models/functions/math.py",
      [
        "Pi"
      ]
    ]
  ],
  "Power": [
    [
      "django/db/models/functions/math.py",
      [
        "Power"
      ]
    ]
  ],
  "Radians": [
    [
      "django/db/models/functions/math.py",
      [
        "Radians"
      ]
    ]
  ],
  "Round": [
    [
      "django/db/models/functions/math.py",
      [
        "Round"
      ]
    ]
  ],
  "Sin": [
    [
      "django/db/models/functions/math.py",
      [
        "Sin"
      ]
    ]
  ],
  "Sqrt": [
    [
      "django/db/models/functions/math.py",
      [
        "Sqrt"
      ]
    ]
  ],
  "Tan": [
    [
      "django/db/models/functions/math.py",
      [
        "Tan"
      ]
    ]
  ],
  "FixDecimalInputMixin": [
    [
      "django/db/models/functions/mixins.py",
      [
        "FixDecimalInputMixin"
      ]
    ]
  ],
  "FixDurationInputMixin": [
    [
      "django/db/models/functions/mixins.py",
      [
        "FixDurationInputMixin"
      ]
    ]
  ],
  "NumericOutputFieldMixin": [
    [
      "django/db/models/functions/mixins.py",
      [
        "NumericOutputFieldMixin"
      ]
    ]
  ],
  "BytesToCharFieldConversionMixin": [
    [
      "django/db/models/functions/text.py",
      [
        "BytesToCharFieldConversionMixin"
      ]
    ]
  ],
  "Chr": [
    [
      "django/db/models/functions/text.py",
      [
        "Chr"
      ]
    ]
  ],
  "ConcatPair": [
    [
      "django/db/models/functions/text.py",
      [
        "ConcatPair"
      ]
    ]
  ],
  "Concat": [
    [
      "django/db/models/functions/text.py",
      [
        "Concat"
      ]
    ]
  ],
  "Left": [
    [
      "django/db/models/functions/text.py",
      [
        "Left"
      ]
    ]
  ],
  "Lower": [
    [
      "django/db/models/functions/text.py",
      [
        "Lower"
      ]
    ],
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_custom_functions_can_ref_other_functions",
        "Lower"
      ]
    ]
  ],
  "LPad": [
    [
      "django/db/models/functions/text.py",
      [
        "LPad"
      ]
    ]
  ],
  "LTrim": [
    [
      "django/db/models/functions/text.py",
      [
        "LTrim"
      ]
    ]
  ],
  "Ord": [
    [
      "django/db/models/functions/text.py",
      [
        "Ord"
      ]
    ]
  ],
  "Repeat": [
    [
      "django/db/models/functions/text.py",
      [
        "Repeat"
      ]
    ]
  ],
  "Replace": [
    [
      "django/db/models/functions/text.py",
      [
        "Replace"
      ]
    ]
  ],
  "Right": [
    [
      "django/db/models/functions/text.py",
      [
        "Right"
      ]
    ]
  ],
  "RPad": [
    [
      "django/db/models/functions/text.py",
      [
        "RPad"
      ]
    ]
  ],
  "RTrim": [
    [
      "django/db/models/functions/text.py",
      [
        "RTrim"
      ]
    ]
  ],
  "StrIndex": [
    [
      "django/db/models/functions/text.py",
      [
        "StrIndex"
      ]
    ]
  ],
  "Substr": [
    [
      "django/db/models/functions/text.py",
      [
        "Substr"
      ]
    ]
  ],
  "Trim": [
    [
      "django/db/models/functions/text.py",
      [
        "Trim"
      ]
    ]
  ],
  "Upper": [
    [
      "django/db/models/functions/text.py",
      [
        "Upper"
      ]
    ]
  ],
  "CumeDist": [
    [
      "django/db/models/functions/window.py",
      [
        "CumeDist"
      ]
    ]
  ],
  "DenseRank": [
    [
      "django/db/models/functions/window.py",
      [
        "DenseRank"
      ]
    ]
  ],
  "FirstValue": [
    [
      "django/db/models/functions/window.py",
      [
        "FirstValue"
      ]
    ]
  ],
  "LagLeadFunction": [
    [
      "django/db/models/functions/window.py",
      [
        "LagLeadFunction"
      ]
    ]
  ],
  "Lag": [
    [
      "django/db/models/functions/window.py",
      [
        "Lag"
      ]
    ]
  ],
  "LastValue": [
    [
      "django/db/models/functions/window.py",
      [
        "LastValue"
      ]
    ]
  ],
  "Lead": [
    [
      "django/db/models/functions/window.py",
      [
        "Lead"
      ]
    ]
  ],
  "NthValue": [
    [
      "django/db/models/functions/window.py",
      [
        "NthValue"
      ]
    ]
  ],
  "Ntile": [
    [
      "django/db/models/functions/window.py",
      [
        "Ntile"
      ]
    ]
  ],
  "PercentRank": [
    [
      "django/db/models/functions/window.py",
      [
        "PercentRank"
      ]
    ]
  ],
  "Rank": [
    [
      "django/db/models/functions/window.py",
      [
        "Rank"
      ]
    ]
  ],
  "RowNumber": [
    [
      "django/db/models/functions/window.py",
      [
        "RowNumber"
      ]
    ]
  ],
  "Index": [
    [
      "django/db/models/indexes.py",
      [
        "Index"
      ]
    ]
  ],
  "Lookup": [
    [
      "django/db/models/lookups.py",
      [
        "Lookup"
      ]
    ]
  ],
  "BuiltinLookup": [
    [
      "django/db/models/lookups.py",
      [
        "BuiltinLookup"
      ]
    ]
  ],
  "FieldGetDbPrepValueMixin": [
    [
      "django/db/models/lookups.py",
      [
        "FieldGetDbPrepValueMixin"
      ]
    ]
  ],
  "FieldGetDbPrepValueIterableMixin": [
    [
      "django/db/models/lookups.py",
      [
        "FieldGetDbPrepValueIterableMixin"
      ]
    ]
  ],
  "Exact": [
    [
      "django/db/models/lookups.py",
      [
        "Exact"
      ]
    ]
  ],
  "IExact": [
    [
      "django/db/models/lookups.py",
      [
        "IExact"
      ]
    ]
  ],
  "GreaterThan": [
    [
      "django/db/models/lookups.py",
      [
        "GreaterThan"
      ]
    ]
  ],
  "GreaterThanOrEqual": [
    [
      "django/db/models/lookups.py",
      [
        "GreaterThanOrEqual"
      ]
    ]
  ],
  "LessThan": [
    [
      "django/db/models/lookups.py",
      [
        "LessThan"
      ]
    ]
  ],
  "LessThanOrEqual": [
    [
      "django/db/models/lookups.py",
      [
        "LessThanOrEqual"
      ]
    ]
  ],
  "IntegerFieldFloatRounding": [
    [
      "django/db/models/lookups.py",
      [
        "IntegerFieldFloatRounding"
      ]
    ]
  ],
  "IntegerGreaterThanOrEqual": [
    [
      "django/db/models/lookups.py",
      [
        "IntegerGreaterThanOrEqual"
      ]
    ]
  ],
  "IntegerLessThan": [
    [
      "django/db/models/lookups.py",
      [
        "IntegerLessThan"
      ]
    ]
  ],
  "In": [
    [
      "django/db/models/lookups.py",
      [
        "In"
      ]
    ]
  ],
  "PatternLookup": [
    [
      "django/db/models/lookups.py",
      [
        "PatternLookup"
      ]
    ]
  ],
  "Contains": [
    [
      "django/db/models/lookups.py",
      [
        "Contains"
      ]
    ]
  ],
  "IContains": [
    [
      "django/db/models/lookups.py",
      [
        "IContains"
      ]
    ]
  ],
  "StartsWith": [
    [
      "django/db/models/lookups.py",
      [
        "StartsWith"
      ]
    ]
  ],
  "IStartsWith": [
    [
      "django/db/models/lookups.py",
      [
        "IStartsWith"
      ]
    ]
  ],
  "EndsWith": [
    [
      "django/db/models/lookups.py",
      [
        "EndsWith"
      ]
    ]
  ],
  "IEndsWith": [
    [
      "django/db/models/lookups.py",
      [
        "IEndsWith"
      ]
    ]
  ],
  "Range": [
    [
      "django/db/models/lookups.py",
      [
        "Range"
      ]
    ]
  ],
  "IsNull": [
    [
      "django/db/models/lookups.py",
      [
        "IsNull"
      ]
    ]
  ],
  "Regex": [
    [
      "django/db/models/lookups.py",
      [
        "Regex"
      ]
    ]
  ],
  "IRegex": [
    [
      "django/db/models/lookups.py",
      [
        "IRegex"
      ]
    ]
  ],
  "YearLookup": [
    [
      "django/db/models/lookups.py",
      [
        "YearLookup"
      ]
    ]
  ],
  "YearComparisonLookup": [
    [
      "django/db/models/lookups.py",
      [
        "YearComparisonLookup"
      ]
    ]
  ],
  "YearExact": [
    [
      "django/db/models/lookups.py",
      [
        "YearExact"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "YearExact"
      ]
    ]
  ],
  "YearGt": [
    [
      "django/db/models/lookups.py",
      [
        "YearGt"
      ]
    ]
  ],
  "YearGte": [
    [
      "django/db/models/lookups.py",
      [
        "YearGte"
      ]
    ]
  ],
  "YearLt": [
    [
      "django/db/models/lookups.py",
      [
        "YearLt"
      ]
    ]
  ],
  "YearLte": [
    [
      "django/db/models/lookups.py",
      [
        "YearLte"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "YearLte"
      ]
    ]
  ],
  "BaseManager": [
    [
      "django/db/models/manager.py",
      [
        "BaseManager"
      ]
    ]
  ],
  "Manager": [
    [
      "django/db/models/manager.py",
      [
        "Manager"
      ]
    ],
    [
      "tests/fixtures/models.py",
      [
        "NaturalKeyThing",
        "Manager"
      ]
    ],
    [
      "tests/model_formsets_regress/models.py",
      [
        "Manager"
      ]
    ],
    [
      "tests/serializers/models/natural.py",
      [
        "NaturalKeyThing",
        "Manager"
      ]
    ],
    [
      "tests/serializers/models/natural.py",
      [
        "NaturalPKWithDefault",
        "Manager"
      ]
    ]
  ],
  "ManagerDescriptor": [
    [
      "django/db/models/manager.py",
      [
        "ManagerDescriptor"
      ]
    ]
  ],
  "EmptyManager": [
    [
      "django/db/models/manager.py",
      [
        "EmptyManager"
      ]
    ],
    [
      "tests/migrations/models.py",
      [
        "EmptyManager"
      ]
    ]
  ],
  "BaseIterable": [
    [
      "django/db/models/query.py",
      [
        "BaseIterable"
      ]
    ]
  ],
  "ModelIterable": [
    [
      "django/db/models/query.py",
      [
        "ModelIterable"
      ]
    ]
  ],
  "ValuesIterable": [
    [
      "django/db/models/query.py",
      [
        "ValuesIterable"
      ]
    ]
  ],
  "ValuesListIterable": [
    [
      "django/db/models/query.py",
      [
        "ValuesListIterable"
      ]
    ]
  ],
  "NamedValuesListIterable": [
    [
      "django/db/models/query.py",
      [
        "NamedValuesListIterable"
      ]
    ]
  ],
  "FlatValuesListIterable": [
    [
      "django/db/models/query.py",
      [
        "FlatValuesListIterable"
      ]
    ]
  ],
  "QuerySet": [
    [
      "django/db/models/query.py",
      [
        "QuerySet"
      ]
    ]
  ],
  "InstanceCheckMeta": [
    [
      "django/db/models/query.py",
      [
        "InstanceCheckMeta"
      ]
    ]
  ],
  "EmptyQuerySet": [
    [
      "django/db/models/query.py",
      [
        "EmptyQuerySet"
      ]
    ]
  ],
  "RawQuerySet": [
    [
      "django/db/models/query.py",
      [
        "RawQuerySet"
      ]
    ]
  ],
  "Prefetch": [
    [
      "django/db/models/query.py",
      [
        "Prefetch"
      ]
    ]
  ],
  "RelatedPopulator": [
    [
      "django/db/models/query.py",
      [
        "RelatedPopulator"
      ]
    ]
  ],
  "InvalidQuery": [
    [
      "django/db/models/query_utils.py",
      [
        "InvalidQuery"
      ]
    ]
  ],
  "QueryWrapper": [
    [
      "django/db/models/query_utils.py",
      [
        "QueryWrapper"
      ]
    ]
  ],
  "Q": [
    [
      "django/db/models/query_utils.py",
      [
        "Q"
      ]
    ]
  ],
  "DeferredAttribute": [
    [
      "django/db/models/query_utils.py",
      [
        "DeferredAttribute"
      ]
    ]
  ],
  "RegisterLookupMixin": [
    [
      "django/db/models/query_utils.py",
      [
        "RegisterLookupMixin"
      ]
    ]
  ],
  "FilteredRelation": [
    [
      "django/db/models/query_utils.py",
      [
        "FilteredRelation"
      ]
    ]
  ],
  "ModelSignal": [
    [
      "django/db/models/signals.py",
      [
        "ModelSignal"
      ]
    ]
  ],
  "MultiJoin": [
    [
      "django/db/models/sql/datastructures.py",
      [
        "MultiJoin"
      ]
    ]
  ],
  "Join": [
    [
      "django/db/models/sql/datastructures.py",
      [
        "Join"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Join"
      ]
    ]
  ],
  "BaseTable": [
    [
      "django/db/models/sql/datastructures.py",
      [
        "BaseTable"
      ]
    ]
  ],
  "RawQuery": [
    [
      "django/db/models/sql/query.py",
      [
        "RawQuery"
      ]
    ]
  ],
  "Query": [
    [
      "django/db/models/sql/query.py",
      [
        "Query"
      ]
    ]
  ],
  "JoinPromoter": [
    [
      "django/db/models/sql/query.py",
      [
        "JoinPromoter"
      ]
    ]
  ],
  "DeleteQuery": [
    [
      "django/db/models/sql/subqueries.py",
      [
        "DeleteQuery"
      ]
    ]
  ],
  "UpdateQuery": [
    [
      "django/db/models/sql/subqueries.py",
      [
        "UpdateQuery"
      ]
    ]
  ],
  "InsertQuery": [
    [
      "django/db/models/sql/subqueries.py",
      [
        "InsertQuery"
      ]
    ]
  ],
  "AggregateQuery": [
    [
      "django/db/models/sql/subqueries.py",
      [
        "AggregateQuery"
      ]
    ]
  ],
  "WhereNode": [
    [
      "django/db/models/sql/where.py",
      [
        "WhereNode"
      ]
    ]
  ],
  "NothingNode": [
    [
      "django/db/models/sql/where.py",
      [
        "NothingNode"
      ]
    ]
  ],
  "ExtraWhere": [
    [
      "django/db/models/sql/where.py",
      [
        "ExtraWhere"
      ]
    ]
  ],
  "SubqueryConstraint": [
    [
      "django/db/models/sql/where.py",
      [
        "SubqueryConstraint"
      ]
    ]
  ],
  "TransactionManagementError": [
    [
      "django/db/transaction.py",
      [
        "TransactionManagementError"
      ]
    ]
  ],
  "Atomic": [
    [
      "django/db/transaction.py",
      [
        "Atomic"
      ]
    ]
  ],
  "InterfaceError": [
    [
      "django/db/utils.py",
      [
        "InterfaceError"
      ]
    ]
  ],
  "DatabaseError": [
    [
      "django/db/utils.py",
      [
        "DatabaseError"
      ]
    ]
  ],
  "DataError": [
    [
      "django/db/utils.py",
      [
        "DataError"
      ]
    ]
  ],
  "OperationalError": [
    [
      "django/db/utils.py",
      [
        "OperationalError"
      ]
    ]
  ],
  "IntegrityError": [
    [
      "django/db/utils.py",
      [
        "IntegrityError"
      ]
    ]
  ],
  "InternalError": [
    [
      "django/db/utils.py",
      [
        "InternalError"
      ]
    ]
  ],
  "ProgrammingError": [
    [
      "django/db/utils.py",
      [
        "ProgrammingError"
      ]
    ]
  ],
  "NotSupportedError": [
    [
      "django/db/utils.py",
      [
        "NotSupportedError"
      ]
    ]
  ],
  "DatabaseErrorWrapper": [
    [
      "django/db/utils.py",
      [
        "DatabaseErrorWrapper"
      ]
    ]
  ],
  "ConnectionDoesNotExist": [
    [
      "django/db/utils.py",
      [
        "ConnectionDoesNotExist"
      ]
    ]
  ],
  "ConnectionHandler": [
    [
      "django/db/utils.py",
      [
        "ConnectionHandler"
      ]
    ]
  ],
  "ConnectionRouter": [
    [
      "django/db/utils.py",
      [
        "ConnectionRouter"
      ]
    ]
  ],
  "Signal": [
    [
      "django/dispatch/dispatcher.py",
      [
        "Signal"
      ]
    ]
  ],
  "BoundField": [
    [
      "django/forms/boundfield.py",
      [
        "BoundField"
      ]
    ]
  ],
  "BoundWidget": [
    [
      "django/forms/boundfield.py",
      [
        "BoundWidget"
      ]
    ]
  ],
  "BaseTemporalField": [
    [
      "django/forms/fields.py",
      [
        "BaseTemporalField"
      ]
    ]
  ],
  "RegexField": [
    [
      "django/forms/fields.py",
      [
        "RegexField"
      ]
    ]
  ],
  "CallableChoiceIterator": [
    [
      "django/forms/fields.py",
      [
        "CallableChoiceIterator"
      ]
    ]
  ],
  "ChoiceField": [
    [
      "django/forms/fields.py",
      [
        "ChoiceField"
      ]
    ]
  ],
  "TypedChoiceField": [
    [
      "django/forms/fields.py",
      [
        "TypedChoiceField"
      ]
    ]
  ],
  "MultipleChoiceField": [
    [
      "django/forms/fields.py",
      [
        "MultipleChoiceField"
      ]
    ]
  ],
  "TypedMultipleChoiceField": [
    [
      "django/forms/fields.py",
      [
        "TypedMultipleChoiceField"
      ]
    ]
  ],
  "ComboField": [
    [
      "django/forms/fields.py",
      [
        "ComboField"
      ]
    ]
  ],
  "MultiValueField": [
    [
      "django/forms/fields.py",
      [
        "MultiValueField"
      ]
    ]
  ],
  "SplitDateTimeField": [
    [
      "django/forms/fields.py",
      [
        "SplitDateTimeField"
      ]
    ]
  ],
  "DeclarativeFieldsMetaclass": [
    [
      "django/forms/forms.py",
      [
        "DeclarativeFieldsMetaclass"
      ]
    ]
  ],
  "BaseForm": [
    [
      "django/forms/forms.py",
      [
        "BaseForm"
      ]
    ]
  ],
  "Form": [
    [
      "django/forms/forms.py",
      [
        "Form"
      ]
    ]
  ],
  "ManagementForm": [
    [
      "django/forms/formsets.py",
      [
        "ManagementForm"
      ]
    ]
  ],
  "BaseFormSet": [
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet"
      ]
    ]
  ],
  "ModelFormOptions": [
    [
      "django/forms/models.py",
      [
        "ModelFormOptions"
      ]
    ]
  ],
  "ModelFormMetaclass": [
    [
      "django/forms/models.py",
      [
        "ModelFormMetaclass"
      ]
    ]
  ],
  "BaseModelForm": [
    [
      "django/forms/models.py",
      [
        "BaseModelForm"
      ]
    ]
  ],
  "ModelForm": [
    [
      "django/forms/models.py",
      [
        "ModelForm"
      ]
    ]
  ],
  "BaseModelFormSet": [
    [
      "django/forms/models.py",
      [
        "BaseModelFormSet"
      ]
    ]
  ],
  "BaseInlineFormSet": [
    [
      "django/forms/models.py",
      [
        "BaseInlineFormSet"
      ]
    ]
  ],
  "InlineForeignKeyField": [
    [
      "django/forms/models.py",
      [
        "InlineForeignKeyField"
      ]
    ]
  ],
  "ModelChoiceIterator": [
    [
      "django/forms/models.py",
      [
        "ModelChoiceIterator"
      ]
    ]
  ],
  "ModelChoiceField": [
    [
      "django/forms/models.py",
      [
        "ModelChoiceField"
      ]
    ]
  ],
  "ModelMultipleChoiceField": [
    [
      "django/forms/models.py",
      [
        "ModelMultipleChoiceField"
      ]
    ]
  ],
  "BaseRenderer": [
    [
      "django/forms/renderers.py",
      [
        "BaseRenderer"
      ]
    ]
  ],
  "EngineMixin": [
    [
      "django/forms/renderers.py",
      [
        "EngineMixin"
      ]
    ]
  ],
  "DjangoTemplates": [
    [
      "django/forms/renderers.py",
      [
        "DjangoTemplates"
      ]
    ],
    [
      "django/template/backends/django.py",
      [
        "DjangoTemplates"
      ]
    ]
  ],
  "Jinja2": [
    [
      "django/forms/renderers.py",
      [
        "Jinja2"
      ]
    ],
    [
      "django/template/backends/jinja2.py",
      [
        "Jinja2"
      ]
    ]
  ],
  "TemplatesSetting": [
    [
      "django/forms/renderers.py",
      [
        "TemplatesSetting"
      ]
    ]
  ],
  "ErrorDict": [
    [
      "django/forms/utils.py",
      [
        "ErrorDict"
      ]
    ]
  ],
  "ErrorList": [
    [
      "django/forms/utils.py",
      [
        "ErrorList"
      ]
    ]
  ],
  "MediaOrderConflictWarning": [
    [
      "django/forms/widgets.py",
      [
        "MediaOrderConflictWarning"
      ]
    ]
  ],
  "MediaDefiningClass": [
    [
      "django/forms/widgets.py",
      [
        "MediaDefiningClass"
      ]
    ]
  ],
  "Widget": [
    [
      "django/forms/widgets.py",
      [
        "Widget"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Widget"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "Widget"
      ]
    ]
  ],
  "Input": [
    [
      "django/forms/widgets.py",
      [
        "Input"
      ]
    ]
  ],
  "TextInput": [
    [
      "django/forms/widgets.py",
      [
        "TextInput"
      ]
    ]
  ],
  "NumberInput": [
    [
      "django/forms/widgets.py",
      [
        "NumberInput"
      ]
    ]
  ],
  "EmailInput": [
    [
      "django/forms/widgets.py",
      [
        "EmailInput"
      ]
    ]
  ],
  "URLInput": [
    [
      "django/forms/widgets.py",
      [
        "URLInput"
      ]
    ]
  ],
  "PasswordInput": [
    [
      "django/forms/widgets.py",
      [
        "PasswordInput"
      ]
    ]
  ],
  "HiddenInput": [
    [
      "django/forms/widgets.py",
      [
        "HiddenInput"
      ]
    ]
  ],
  "MultipleHiddenInput": [
    [
      "django/forms/widgets.py",
      [
        "MultipleHiddenInput"
      ]
    ]
  ],
  "FileInput": [
    [
      "django/forms/widgets.py",
      [
        "FileInput"
      ]
    ]
  ],
  "ClearableFileInput": [
    [
      "django/forms/widgets.py",
      [
        "ClearableFileInput"
      ]
    ]
  ],
  "Textarea": [
    [
      "django/forms/widgets.py",
      [
        "Textarea"
      ]
    ]
  ],
  "DateTimeBaseInput": [
    [
      "django/forms/widgets.py",
      [
        "DateTimeBaseInput"
      ]
    ]
  ],
  "DateInput": [
    [
      "django/forms/widgets.py",
      [
        "DateInput"
      ]
    ]
  ],
  "DateTimeInput": [
    [
      "django/forms/widgets.py",
      [
        "DateTimeInput"
      ]
    ]
  ],
  "TimeInput": [
    [
      "django/forms/widgets.py",
      [
        "TimeInput"
      ]
    ]
  ],
  "CheckboxInput": [
    [
      "django/forms/widgets.py",
      [
        "CheckboxInput"
      ]
    ]
  ],
  "ChoiceWidget": [
    [
      "django/forms/widgets.py",
      [
        "ChoiceWidget"
      ]
    ]
  ],
  "Select": [
    [
      "django/forms/widgets.py",
      [
        "Select"
      ]
    ]
  ],
  "NullBooleanSelect": [
    [
      "django/forms/widgets.py",
      [
        "NullBooleanSelect"
      ]
    ]
  ],
  "SelectMultiple": [
    [
      "django/forms/widgets.py",
      [
        "SelectMultiple"
      ]
    ]
  ],
  "RadioSelect": [
    [
      "django/forms/widgets.py",
      [
        "RadioSelect"
      ]
    ]
  ],
  "CheckboxSelectMultiple": [
    [
      "django/forms/widgets.py",
      [
        "CheckboxSelectMultiple"
      ]
    ]
  ],
  "MultiWidget": [
    [
      "django/forms/widgets.py",
      [
        "MultiWidget"
      ]
    ]
  ],
  "SplitDateTimeWidget": [
    [
      "django/forms/widgets.py",
      [
        "SplitDateTimeWidget"
      ]
    ]
  ],
  "SplitHiddenDateTimeWidget": [
    [
      "django/forms/widgets.py",
      [
        "SplitHiddenDateTimeWidget"
      ]
    ]
  ],
  "SelectDateWidget": [
    [
      "django/forms/widgets.py",
      [
        "SelectDateWidget"
      ]
    ]
  ],
  "MultiPartParserError": [
    [
      "django/http/multipartparser.py",
      [
        "MultiPartParserError"
      ]
    ]
  ],
  "InputStreamExhausted": [
    [
      "django/http/multipartparser.py",
      [
        "InputStreamExhausted"
      ]
    ]
  ],
  "MultiPartParser": [
    [
      "django/http/multipartparser.py",
      [
        "MultiPartParser"
      ]
    ]
  ],
  "LazyStream": [
    [
      "django/http/multipartparser.py",
      [
        "LazyStream"
      ]
    ]
  ],
  "ChunkIter": [
    [
      "django/http/multipartparser.py",
      [
        "ChunkIter"
      ]
    ]
  ],
  "InterBoundaryIter": [
    [
      "django/http/multipartparser.py",
      [
        "InterBoundaryIter"
      ]
    ]
  ],
  "BoundaryIter": [
    [
      "django/http/multipartparser.py",
      [
        "BoundaryIter"
      ]
    ]
  ],
  "Parser": [
    [
      "django/http/multipartparser.py",
      [
        "Parser"
      ]
    ],
    [
      "django/template/base.py",
      [
        "Parser"
      ]
    ],
    [
      "django/test/html.py",
      [
        "Parser"
      ]
    ]
  ],
  "UnreadablePostError": [
    [
      "django/http/request.py",
      [
        "UnreadablePostError"
      ]
    ]
  ],
  "RawPostDataException": [
    [
      "django/http/request.py",
      [
        "RawPostDataException"
      ]
    ]
  ],
  "HttpRequest": [
    [
      "django/http/request.py",
      [
        "HttpRequest"
      ]
    ]
  ],
  "HttpHeaders": [
    [
      "django/http/request.py",
      [
        "HttpHeaders"
      ]
    ]
  ],
  "QueryDict": [
    [
      "django/http/request.py",
      [
        "QueryDict"
      ]
    ]
  ],
  "HttpResponseBase": [
    [
      "django/http/response.py",
      [
        "HttpResponseBase"
      ]
    ]
  ],
  "HttpResponse": [
    [
      "django/http/response.py",
      [
        "HttpResponse"
      ]
    ]
  ],
  "StreamingHttpResponse": [
    [
      "django/http/response.py",
      [
        "StreamingHttpResponse"
      ]
    ]
  ],
  "FileResponse": [
    [
      "django/http/response.py",
      [
        "FileResponse"
      ]
    ]
  ],
  "HttpResponseRedirectBase": [
    [
      "django/http/response.py",
      [
        "HttpResponseRedirectBase"
      ]
    ]
  ],
  "HttpResponseRedirect": [
    [
      "django/http/response.py",
      [
        "HttpResponseRedirect"
      ]
    ]
  ],
  "HttpResponsePermanentRedirect": [
    [
      "django/http/response.py",
      [
        "HttpResponsePermanentRedirect"
      ]
    ]
  ],
  "HttpResponseNotModified": [
    [
      "django/http/response.py",
      [
        "HttpResponseNotModified"
      ]
    ]
  ],
  "HttpResponseBadRequest": [
    [
      "django/http/response.py",
      [
        "HttpResponseBadRequest"
      ]
    ]
  ],
  "HttpResponseNotFound": [
    [
      "django/http/response.py",
      [
        "HttpResponseNotFound"
      ]
    ]
  ],
  "HttpResponseForbidden": [
    [
      "django/http/response.py",
      [
        "HttpResponseForbidden"
      ]
    ]
  ],
  "HttpResponseNotAllowed": [
    [
      "django/http/response.py",
      [
        "HttpResponseNotAllowed"
      ]
    ]
  ],
  "HttpResponseGone": [
    [
      "django/http/response.py",
      [
        "HttpResponseGone"
      ]
    ]
  ],
  "HttpResponseServerError": [
    [
      "django/http/response.py",
      [
        "HttpResponseServerError"
      ]
    ]
  ],
  "Http404": [
    [
      "django/http/response.py",
      [
        "Http404"
      ]
    ]
  ],
  "JsonResponse": [
    [
      "django/http/response.py",
      [
        "JsonResponse"
      ]
    ]
  ],
  "UpdateCacheMiddleware": [
    [
      "django/middleware/cache.py",
      [
        "UpdateCacheMiddleware"
      ]
    ]
  ],
  "FetchFromCacheMiddleware": [
    [
      "django/middleware/cache.py",
      [
        "FetchFromCacheMiddleware"
      ]
    ]
  ],
  "CacheMiddleware": [
    [
      "django/middleware/cache.py",
      [
        "CacheMiddleware"
      ]
    ]
  ],
  "XFrameOptionsMiddleware": [
    [
      "django/middleware/clickjacking.py",
      [
        "XFrameOptionsMiddleware"
      ]
    ]
  ],
  "CommonMiddleware": [
    [
      "django/middleware/common.py",
      [
        "CommonMiddleware"
      ]
    ]
  ],
  "BrokenLinkEmailsMiddleware": [
    [
      "django/middleware/common.py",
      [
        "BrokenLinkEmailsMiddleware"
      ]
    ]
  ],
  "CsrfViewMiddleware": [
    [
      "django/middleware/csrf.py",
      [
        "CsrfViewMiddleware"
      ]
    ]
  ],
  "GZipMiddleware": [
    [
      "django/middleware/gzip.py",
      [
        "GZipMiddleware"
      ]
    ]
  ],
  "ConditionalGetMiddleware": [
    [
      "django/middleware/http.py",
      [
        "ConditionalGetMiddleware"
      ]
    ]
  ],
  "LocaleMiddleware": [
    [
      "django/middleware/locale.py",
      [
        "LocaleMiddleware"
      ]
    ]
  ],
  "SecurityMiddleware": [
    [
      "django/middleware/security.py",
      [
        "SecurityMiddleware"
      ]
    ]
  ],
  "BaseEngine": [
    [
      "django/template/backends/base.py",
      [
        "BaseEngine"
      ]
    ]
  ],
  "Template": [
    [
      "django/template/backends/django.py",
      [
        "Template"
      ]
    ],
    [
      "django/template/backends/dummy.py",
      [
        "Template"
      ]
    ],
    [
      "django/template/backends/jinja2.py",
      [
        "Template"
      ]
    ],
    [
      "django/template/base.py",
      [
        "Template"
      ]
    ]
  ],
  "TemplateStrings": [
    [
      "django/template/backends/dummy.py",
      [
        "TemplateStrings"
      ]
    ]
  ],
  "Origin": [
    [
      "django/template/backends/jinja2.py",
      [
        "Origin"
      ]
    ],
    [
      "django/template/base.py",
      [
        "Origin"
      ]
    ]
  ],
  "TokenType": [
    [
      "django/template/base.py",
      [
        "TokenType"
      ]
    ]
  ],
  "VariableDoesNotExist": [
    [
      "django/template/base.py",
      [
        "VariableDoesNotExist"
      ]
    ]
  ],
  "Token": [
    [
      "django/template/base.py",
      [
        "Token"
      ]
    ]
  ],
  "Lexer": [
    [
      "django/template/base.py",
      [
        "Lexer"
      ]
    ],
    [
      "django/utils/jslex.py",
      [
        "Lexer"
      ]
    ]
  ],
  "DebugLexer": [
    [
      "django/template/base.py",
      [
        "DebugLexer"
      ]
    ]
  ],
  "FilterExpression": [
    [
      "django/template/base.py",
      [
        "FilterExpression"
      ]
    ]
  ],
  "Variable": [
    [
      "django/template/base.py",
      [
        "Variable"
      ]
    ]
  ],
  "NodeList": [
    [
      "django/template/base.py",
      [
        "NodeList"
      ]
    ]
  ],
  "TextNode": [
    [
      "django/template/base.py",
      [
        "TextNode"
      ]
    ]
  ],
  "VariableNode": [
    [
      "django/template/base.py",
      [
        "VariableNode"
      ]
    ]
  ],
  "ContextPopException": [
    [
      "django/template/context.py",
      [
        "ContextPopException"
      ]
    ]
  ],
  "ContextDict": [
    [
      "django/template/context.py",
      [
        "ContextDict"
      ]
    ]
  ],
  "BaseContext": [
    [
      "django/template/context.py",
      [
        "BaseContext"
      ]
    ]
  ],
  "Context": [
    [
      "django/template/context.py",
      [
        "Context"
      ]
    ]
  ],
  "RenderContext": [
    [
      "django/template/context.py",
      [
        "RenderContext"
      ]
    ]
  ],
  "RequestContext": [
    [
      "django/template/context.py",
      [
        "RequestContext"
      ]
    ]
  ],
  "AutoEscapeControlNode": [
    [
      "django/template/defaulttags.py",
      [
        "AutoEscapeControlNode"
      ]
    ]
  ],
  "CommentNode": [
    [
      "django/template/defaulttags.py",
      [
        "CommentNode"
      ]
    ]
  ],
  "CsrfTokenNode": [
    [
      "django/template/defaulttags.py",
      [
        "CsrfTokenNode"
      ]
    ]
  ],
  "CycleNode": [
    [
      "django/template/defaulttags.py",
      [
        "CycleNode"
      ]
    ]
  ],
  "DebugNode": [
    [
      "django/template/defaulttags.py",
      [
        "DebugNode"
      ]
    ]
  ],
  "FilterNode": [
    [
      "django/template/defaulttags.py",
      [
        "FilterNode"
      ]
    ]
  ],
  "FirstOfNode": [
    [
      "django/template/defaulttags.py",
      [
        "FirstOfNode"
      ]
    ]
  ],
  "ForNode": [
    [
      "django/template/defaulttags.py",
      [
        "ForNode"
      ]
    ]
  ],
  "IfChangedNode": [
    [
      "django/template/defaulttags.py",
      [
        "IfChangedNode"
      ]
    ]
  ],
  "IfEqualNode": [
    [
      "django/template/defaulttags.py",
      [
        "IfEqualNode"
      ]
    ]
  ],
  "IfNode": [
    [
      "django/template/defaulttags.py",
      [
        "IfNode"
      ]
    ]
  ],
  "LoremNode": [
    [
      "django/template/defaulttags.py",
      [
        "LoremNode"
      ]
    ]
  ],
  "RegroupNode": [
    [
      "django/template/defaulttags.py",
      [
        "RegroupNode"
      ]
    ]
  ],
  "LoadNode": [
    [
      "django/template/defaulttags.py",
      [
        "LoadNode"
      ]
    ]
  ],
  "NowNode": [
    [
      "django/template/defaulttags.py",
      [
        "NowNode"
      ]
    ]
  ],
  "ResetCycleNode": [
    [
      "django/template/defaulttags.py",
      [
        "ResetCycleNode"
      ]
    ]
  ],
  "SpacelessNode": [
    [
      "django/template/defaulttags.py",
      [
        "SpacelessNode"
      ]
    ]
  ],
  "TemplateTagNode": [
    [
      "django/template/defaulttags.py",
      [
        "TemplateTagNode"
      ]
    ]
  ],
  "URLNode": [
    [
      "django/template/defaulttags.py",
      [
        "URLNode"
      ]
    ]
  ],
  "VerbatimNode": [
    [
      "django/template/defaulttags.py",
      [
        "VerbatimNode"
      ]
    ]
  ],
  "WidthRatioNode": [
    [
      "django/template/defaulttags.py",
      [
        "WidthRatioNode"
      ]
    ]
  ],
  "WithNode": [
    [
      "django/template/defaulttags.py",
      [
        "WithNode"
      ]
    ]
  ],
  "TemplateLiteral": [
    [
      "django/template/defaulttags.py",
      [
        "TemplateLiteral"
      ]
    ]
  ],
  "TemplateIfParser": [
    [
      "django/template/defaulttags.py",
      [
        "TemplateIfParser"
      ]
    ]
  ],
  "Engine": [
    [
      "django/template/engine.py",
      [
        "Engine"
      ]
    ]
  ],
  "TemplateDoesNotExist": [
    [
      "django/template/exceptions.py",
      [
        "TemplateDoesNotExist"
      ]
    ]
  ],
  "TemplateSyntaxError": [
    [
      "django/template/exceptions.py",
      [
        "TemplateSyntaxError"
      ]
    ]
  ],
  "InvalidTemplateLibrary": [
    [
      "django/template/library.py",
      [
        "InvalidTemplateLibrary"
      ]
    ]
  ],
  "Library": [
    [
      "django/template/library.py",
      [
        "Library"
      ]
    ]
  ],
  "TagHelperNode": [
    [
      "django/template/library.py",
      [
        "TagHelperNode"
      ]
    ]
  ],
  "SimpleNode": [
    [
      "django/template/library.py",
      [
        "SimpleNode"
      ]
    ]
  ],
  "InclusionNode": [
    [
      "django/template/library.py",
      [
        "InclusionNode"
      ]
    ]
  ],
  "BlockContext": [
    [
      "django/template/loader_tags.py",
      [
        "BlockContext"
      ]
    ]
  ],
  "BlockNode": [
    [
      "django/template/loader_tags.py",
      [
        "BlockNode"
      ]
    ]
  ],
  "ExtendsNode": [
    [
      "django/template/loader_tags.py",
      [
        "ExtendsNode"
      ]
    ]
  ],
  "IncludeNode": [
    [
      "django/template/loader_tags.py",
      [
        "IncludeNode"
      ]
    ]
  ],
  "Loader": [
    [
      "django/template/loaders/app_directories.py",
      [
        "Loader"
      ]
    ],
    [
      "django/template/loaders/base.py",
      [
        "Loader"
      ]
    ],
    [
      "django/template/loaders/cached.py",
      [
        "Loader"
      ]
    ],
    [
      "django/template/loaders/filesystem.py",
      [
        "Loader"
      ]
    ],
    [
      "django/template/loaders/locmem.py",
      [
        "Loader"
      ]
    ]
  ],
  "ContentNotRenderedError": [
    [
      "django/template/response.py",
      [
        "ContentNotRenderedError"
      ]
    ]
  ],
  "SimpleTemplateResponse": [
    [
      "django/template/response.py",
      [
        "SimpleTemplateResponse"
      ]
    ]
  ],
  "TemplateResponse": [
    [
      "django/template/response.py",
      [
        "TemplateResponse"
      ]
    ]
  ],
  "TokenBase": [
    [
      "django/template/smartif.py",
      [
        "TokenBase"
      ]
    ]
  ],
  "Literal": [
    [
      "django/template/smartif.py",
      [
        "Literal"
      ]
    ]
  ],
  "EndToken": [
    [
      "django/template/smartif.py",
      [
        "EndToken"
      ]
    ]
  ],
  "IfParser": [
    [
      "django/template/smartif.py",
      [
        "IfParser"
      ]
    ]
  ],
  "InvalidTemplateEngineError": [
    [
      "django/template/utils.py",
      [
        "InvalidTemplateEngineError"
      ]
    ]
  ],
  "EngineHandler": [
    [
      "django/template/utils.py",
      [
        "EngineHandler"
      ]
    ]
  ],
  "CacheNode": [
    [
      "django/templatetags/cache.py",
      [
        "CacheNode"
      ]
    ]
  ],
  "GetAvailableLanguagesNode": [
    [
      "django/templatetags/i18n.py",
      [
        "GetAvailableLanguagesNode"
      ]
    ]
  ],
  "GetLanguageInfoNode": [
    [
      "django/templatetags/i18n.py",
      [
        "GetLanguageInfoNode"
      ]
    ]
  ],
  "GetLanguageInfoListNode": [
    [
      "django/templatetags/i18n.py",
      [
        "GetLanguageInfoListNode"
      ]
    ]
  ],
  "GetCurrentLanguageNode": [
    [
      "django/templatetags/i18n.py",
      [
        "GetCurrentLanguageNode"
      ]
    ]
  ],
  "GetCurrentLanguageBidiNode": [
    [
      "django/templatetags/i18n.py",
      [
        "GetCurrentLanguageBidiNode"
      ]
    ]
  ],
  "TranslateNode": [
    [
      "django/templatetags/i18n.py",
      [
        "TranslateNode"
      ]
    ]
  ],
  "BlockTranslateNode": [
    [
      "django/templatetags/i18n.py",
      [
        "BlockTranslateNode"
      ]
    ]
  ],
  "LanguageNode": [
    [
      "django/templatetags/i18n.py",
      [
        "LanguageNode"
      ]
    ]
  ],
  "LocalizeNode": [
    [
      "django/templatetags/l10n.py",
      [
        "LocalizeNode"
      ]
    ]
  ],
  "PrefixNode": [
    [
      "django/templatetags/static.py",
      [
        "PrefixNode"
      ]
    ]
  ],
  "StaticNode": [
    [
      "django/templatetags/static.py",
      [
        "StaticNode"
      ]
    ]
  ],
  "datetimeobject": [
    [
      "django/templatetags/tz.py",
      [
        "datetimeobject"
      ]
    ]
  ],
  "LocalTimeNode": [
    [
      "django/templatetags/tz.py",
      [
        "LocalTimeNode"
      ]
    ]
  ],
  "TimezoneNode": [
    [
      "django/templatetags/tz.py",
      [
        "TimezoneNode"
      ]
    ]
  ],
  "GetCurrentTimezoneNode": [
    [
      "django/templatetags/tz.py",
      [
        "GetCurrentTimezoneNode"
      ]
    ]
  ],
  "RedirectCycleError": [
    [
      "django/test/client.py",
      [
        "RedirectCycleError"
      ]
    ]
  ],
  "FakePayload": [
    [
      "django/test/client.py",
      [
        "FakePayload"
      ]
    ]
  ],
  "ClientHandler": [
    [
      "django/test/client.py",
      [
        "ClientHandler"
      ]
    ]
  ],
  "RequestFactory": [
    [
      "django/test/client.py",
      [
        "RequestFactory"
      ]
    ]
  ],
  "Client": [
    [
      "django/test/client.py",
      [
        "Client"
      ]
    ],
    [
      "tests/expressions_case/models.py",
      [
        "Client"
      ]
    ],
    [
      "tests/select_related_regress/models.py",
      [
        "Client"
      ]
    ]
  ],
  "Element": [
    [
      "django/test/html.py",
      [
        "Element"
      ]
    ]
  ],
  "RootElement": [
    [
      "django/test/html.py",
      [
        "RootElement"
      ]
    ]
  ],
  "HTMLParseError": [
    [
      "django/test/html.py",
      [
        "HTMLParseError"
      ]
    ]
  ],
  "DebugSQLTextTestResult": [
    [
      "django/test/runner.py",
      [
        "DebugSQLTextTestResult"
      ]
    ]
  ],
  "RemoteTestResult": [
    [
      "django/test/runner.py",
      [
        "RemoteTestResult"
      ]
    ]
  ],
  "RemoteTestRunner": [
    [
      "django/test/runner.py",
      [
        "RemoteTestRunner"
      ]
    ]
  ],
  "ParallelTestSuite": [
    [
      "django/test/runner.py",
      [
        "ParallelTestSuite"
      ]
    ]
  ],
  "DiscoverRunner": [
    [
      "django/test/runner.py",
      [
        "DiscoverRunner"
      ]
    ]
  ],
  "SeleniumTestCaseBase": [
    [
      "django/test/selenium.py",
      [
        "SeleniumTestCaseBase"
      ]
    ]
  ],
  "SeleniumTestCase": [
    [
      "django/test/selenium.py",
      [
        "SeleniumTestCase"
      ]
    ]
  ],
  "_AssertNumQueriesContext": [
    [
      "django/test/testcases.py",
      [
        "_AssertNumQueriesContext"
      ]
    ]
  ],
  "_AssertTemplateUsedContext": [
    [
      "django/test/testcases.py",
      [
        "_AssertTemplateUsedContext"
      ]
    ]
  ],
  "_AssertTemplateNotUsedContext": [
    [
      "django/test/testcases.py",
      [
        "_AssertTemplateNotUsedContext"
      ]
    ]
  ],
  "_DatabaseFailure": [
    [
      "django/test/testcases.py",
      [
        "_DatabaseFailure"
      ]
    ]
  ],
  "_SimpleTestCaseDatabasesDescriptor": [
    [
      "django/test/testcases.py",
      [
        "_SimpleTestCaseDatabasesDescriptor"
      ]
    ]
  ],
  "SimpleTestCase": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase"
      ]
    ]
  ],
  "_TransactionTestCaseDatabasesDescriptor": [
    [
      "django/test/testcases.py",
      [
        "_TransactionTestCaseDatabasesDescriptor"
      ]
    ]
  ],
  "TransactionTestCase": [
    [
      "django/test/testcases.py",
      [
        "TransactionTestCase"
      ]
    ]
  ],
  "_TestCaseDatabasesDescriptor": [
    [
      "django/test/testcases.py",
      [
        "_TestCaseDatabasesDescriptor"
      ]
    ]
  ],
  "TestCase": [
    [
      "django/test/testcases.py",
      [
        "TestCase"
      ]
    ]
  ],
  "CheckCondition": [
    [
      "django/test/testcases.py",
      [
        "CheckCondition"
      ]
    ]
  ],
  "QuietWSGIRequestHandler": [
    [
      "django/test/testcases.py",
      [
        "QuietWSGIRequestHandler"
      ]
    ]
  ],
  "FSFilesHandler": [
    [
      "django/test/testcases.py",
      [
        "FSFilesHandler"
      ]
    ]
  ],
  "_StaticFilesHandler": [
    [
      "django/test/testcases.py",
      [
        "_StaticFilesHandler"
      ]
    ]
  ],
  "_MediaFilesHandler": [
    [
      "django/test/testcases.py",
      [
        "_MediaFilesHandler"
      ]
    ]
  ],
  "LiveServerThread": [
    [
      "django/test/testcases.py",
      [
        "LiveServerThread"
      ]
    ]
  ],
  "LiveServerTestCase": [
    [
      "django/test/testcases.py",
      [
        "LiveServerTestCase"
      ]
    ]
  ],
  "SerializeMixin": [
    [
      "django/test/testcases.py",
      [
        "SerializeMixin"
      ]
    ]
  ],
  "Approximate": [
    [
      "django/test/utils.py",
      [
        "Approximate"
      ]
    ]
  ],
  "ContextList": [
    [
      "django/test/utils.py",
      [
        "ContextList"
      ]
    ]
  ],
  "_TestState": [
    [
      "django/test/utils.py",
      [
        "_TestState"
      ]
    ]
  ],
  "TestContextDecorator": [
    [
      "django/test/utils.py",
      [
        "TestContextDecorator"
      ]
    ]
  ],
  "override_settings": [
    [
      "django/test/utils.py",
      [
        "override_settings"
      ]
    ]
  ],
  "modify_settings": [
    [
      "django/test/utils.py",
      [
        "modify_settings"
      ]
    ]
  ],
  "override_system_checks": [
    [
      "django/test/utils.py",
      [
        "override_system_checks"
      ]
    ]
  ],
  "CaptureQueriesContext": [
    [
      "django/test/utils.py",
      [
        "CaptureQueriesContext"
      ]
    ]
  ],
  "ignore_warnings": [
    [
      "django/test/utils.py",
      [
        "ignore_warnings"
      ]
    ]
  ],
  "override_script_prefix": [
    [
      "django/test/utils.py",
      [
        "override_script_prefix"
      ]
    ]
  ],
  "LoggingCaptureMixin": [
    [
      "django/test/utils.py",
      [
        "LoggingCaptureMixin"
      ]
    ]
  ],
  "isolate_apps": [
    [
      "django/test/utils.py",
      [
        "isolate_apps"
      ]
    ]
  ],
  "IntConverter": [
    [
      "django/urls/converters.py",
      [
        "IntConverter"
      ]
    ]
  ],
  "StringConverter": [
    [
      "django/urls/converters.py",
      [
        "StringConverter"
      ]
    ]
  ],
  "UUIDConverter": [
    [
      "django/urls/converters.py",
      [
        "UUIDConverter"
      ]
    ]
  ],
  "SlugConverter": [
    [
      "django/urls/converters.py",
      [
        "SlugConverter"
      ]
    ]
  ],
  "PathConverter": [
    [
      "django/urls/converters.py",
      [
        "PathConverter"
      ]
    ]
  ],
  "Resolver404": [
    [
      "django/urls/exceptions.py",
      [
        "Resolver404"
      ]
    ]
  ],
  "NoReverseMatch": [
    [
      "django/urls/exceptions.py",
      [
        "NoReverseMatch"
      ]
    ]
  ],
  "ResolverMatch": [
    [
      "django/urls/resolvers.py",
      [
        "ResolverMatch"
      ]
    ]
  ],
  "LocaleRegexDescriptor": [
    [
      "django/urls/resolvers.py",
      [
        "LocaleRegexDescriptor"
      ]
    ]
  ],
  "CheckURLMixin": [
    [
      "django/urls/resolvers.py",
      [
        "CheckURLMixin"
      ]
    ]
  ],
  "RegexPattern": [
    [
      "django/urls/resolvers.py",
      [
        "RegexPattern"
      ]
    ]
  ],
  "RoutePattern": [
    [
      "django/urls/resolvers.py",
      [
        "RoutePattern"
      ]
    ]
  ],
  "LocalePrefixPattern": [
    [
      "django/urls/resolvers.py",
      [
        "LocalePrefixPattern"
      ]
    ]
  ],
  "URLPattern": [
    [
      "django/urls/resolvers.py",
      [
        "URLPattern"
      ]
    ]
  ],
  "URLResolver": [
    [
      "django/urls/resolvers.py",
      [
        "URLResolver"
      ]
    ]
  ],
  "ArchiveException": [
    [
      "django/utils/archive.py",
      [
        "ArchiveException"
      ]
    ]
  ],
  "UnrecognizedArchiveFormat": [
    [
      "django/utils/archive.py",
      [
        "UnrecognizedArchiveFormat"
      ]
    ]
  ],
  "Archive": [
    [
      "django/utils/archive.py",
      [
        "Archive"
      ]
    ]
  ],
  "BaseArchive": [
    [
      "django/utils/archive.py",
      [
        "BaseArchive"
      ]
    ]
  ],
  "TarArchive": [
    [
      "django/utils/archive.py",
      [
        "TarArchive"
      ]
    ]
  ],
  "ZipArchive": [
    [
      "django/utils/archive.py",
      [
        "ZipArchive"
      ]
    ]
  ],
  "BaseReloader": [
    [
      "django/utils/autoreload.py",
      [
        "BaseReloader"
      ]
    ]
  ],
  "StatReloader": [
    [
      "django/utils/autoreload.py",
      [
        "StatReloader"
      ]
    ]
  ],
  "WatchmanUnavailable": [
    [
      "django/utils/autoreload.py",
      [
        "WatchmanUnavailable"
      ]
    ]
  ],
  "WatchmanReloader": [
    [
      "django/utils/autoreload.py",
      [
        "WatchmanReloader"
      ]
    ]
  ],
  "BaseConverter": [
    [
      "django/utils/baseconv.py",
      [
        "BaseConverter"
      ]
    ]
  ],
  "OrderedSet": [
    [
      "django/utils/datastructures.py",
      [
        "OrderedSet"
      ]
    ]
  ],
  "MultiValueDictKeyError": [
    [
      "django/utils/datastructures.py",
      [
        "MultiValueDictKeyError"
      ]
    ]
  ],
  "MultiValueDict": [
    [
      "django/utils/datastructures.py",
      [
        "MultiValueDict"
      ]
    ]
  ],
  "ImmutableList": [
    [
      "django/utils/datastructures.py",
      [
        "ImmutableList"
      ]
    ]
  ],
  "DictWrapper": [
    [
      "django/utils/datastructures.py",
      [
        "DictWrapper"
      ]
    ]
  ],
  "CaseInsensitiveMapping": [
    [
      "django/utils/datastructures.py",
      [
        "CaseInsensitiveMapping"
      ]
    ]
  ],
  "Formatter": [
    [
      "django/utils/dateformat.py",
      [
        "Formatter"
      ]
    ]
  ],
  "TimeFormat": [
    [
      "django/utils/dateformat.py",
      [
        "TimeFormat"
      ]
    ]
  ],
  "DateFormat": [
    [
      "django/utils/dateformat.py",
      [
        "DateFormat"
      ]
    ]
  ],
  "date": [
    [
      "django/utils/datetime_safe.py",
      [
        "date"
      ]
    ]
  ],
  "datetime": [
    [
      "django/utils/datetime_safe.py",
      [
        "datetime"
      ]
    ]
  ],
  "time": [
    [
      "django/utils/datetime_safe.py",
      [
        "time"
      ]
    ]
  ],
  "classonlymethod": [
    [
      "django/utils/decorators.py",
      [
        "classonlymethod"
      ]
    ]
  ],
  "classproperty": [
    [
      "django/utils/decorators.py",
      [
        "classproperty"
      ]
    ]
  ],
  "RemovedInDjango31Warning": [
    [
      "django/utils/deprecation.py",
      [
        "RemovedInDjango31Warning"
      ]
    ]
  ],
  "RemovedInDjango40Warning": [
    [
      "django/utils/deprecation.py",
      [
        "RemovedInDjango40Warning"
      ]
    ]
  ],
  "warn_about_renamed_method": [
    [
      "django/utils/deprecation.py",
      [
        "warn_about_renamed_method"
      ]
    ]
  ],
  "RenameMethodsBase": [
    [
      "django/utils/deprecation.py",
      [
        "RenameMethodsBase"
      ]
    ]
  ],
  "DeprecationInstanceCheck": [
    [
      "django/utils/deprecation.py",
      [
        "DeprecationInstanceCheck"
      ]
    ]
  ],
  "MiddlewareMixin": [
    [
      "django/utils/deprecation.py",
      [
        "MiddlewareMixin"
      ]
    ]
  ],
  "DjangoUnicodeDecodeError": [
    [
      "django/utils/encoding.py",
      [
        "DjangoUnicodeDecodeError"
      ]
    ]
  ],
  "SyndicationFeed": [
    [
      "django/utils/feedgenerator.py",
      [
        "SyndicationFeed"
      ]
    ]
  ],
  "Enclosure": [
    [
      "django/utils/feedgenerator.py",
      [
        "Enclosure"
      ]
    ]
  ],
  "RssFeed": [
    [
      "django/utils/feedgenerator.py",
      [
        "RssFeed"
      ]
    ]
  ],
  "RssUserland091Feed": [
    [
      "django/utils/feedgenerator.py",
      [
        "RssUserland091Feed"
      ]
    ]
  ],
  "Rss201rev2Feed": [
    [
      "django/utils/feedgenerator.py",
      [
        "Rss201rev2Feed"
      ]
    ]
  ],
  "Atom1Feed": [
    [
      "django/utils/feedgenerator.py",
      [
        "Atom1Feed"
      ]
    ]
  ],
  "cached_property": [
    [
      "django/utils/functional.py",
      [
        "cached_property"
      ]
    ]
  ],
  "Promise": [
    [
      "django/utils/functional.py",
      [
        "Promise"
      ]
    ]
  ],
  "__proxy__": [
    [
      "django/utils/functional.py",
      [
        "lazy",
        "__proxy__"
      ]
    ]
  ],
  "LazyObject": [
    [
      "django/utils/functional.py",
      [
        "LazyObject"
      ]
    ]
  ],
  "SimpleLazyObject": [
    [
      "django/utils/functional.py",
      [
        "SimpleLazyObject"
      ]
    ]
  ],
  "MLStripper": [
    [
      "django/utils/html.py",
      [
        "MLStripper"
      ]
    ]
  ],
  "Tok": [
    [
      "django/utils/jslex.py",
      [
        "Tok"
      ]
    ]
  ],
  "JsLexer": [
    [
      "django/utils/jslex.py",
      [
        "JsLexer"
      ]
    ]
  ],
  "AdminEmailHandler": [
    [
      "django/utils/log.py",
      [
        "AdminEmailHandler"
      ]
    ]
  ],
  "CallbackFilter": [
    [
      "django/utils/log.py",
      [
        "CallbackFilter"
      ]
    ]
  ],
  "RequireDebugFalse": [
    [
      "django/utils/log.py",
      [
        "RequireDebugFalse"
      ]
    ]
  ],
  "RequireDebugTrue": [
    [
      "django/utils/log.py",
      [
        "RequireDebugTrue"
      ]
    ]
  ],
  "ServerFormatter": [
    [
      "django/utils/log.py",
      [
        "ServerFormatter"
      ]
    ]
  ],
  "Choice": [
    [
      "django/utils/regex_helper.py",
      [
        "Choice"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Choice"
      ]
    ],
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "Choice"
      ]
    ],
    [
      "tests/null_queries/models.py",
      [
        "Choice"
      ]
    ],
    [
      "tests/reverse_lookup/models.py",
      [
        "Choice"
      ]
    ]
  ],
  "NonCapture": [
    [
      "django/utils/regex_helper.py",
      [
        "NonCapture"
      ]
    ]
  ],
  "SafeData": [
    [
      "django/utils/safestring.py",
      [
        "SafeData"
      ]
    ]
  ],
  "SafeString": [
    [
      "django/utils/safestring.py",
      [
        "SafeString"
      ]
    ]
  ],
  "Truncator": [
    [
      "django/utils/text.py",
      [
        "Truncator"
      ]
    ]
  ],
  "StreamingBuffer": [
    [
      "django/utils/text.py",
      [
        "StreamingBuffer"
      ]
    ]
  ],
  "FixedOffset": [
    [
      "django/utils/timezone.py",
      [
        "FixedOffset"
      ]
    ]
  ],
  "override": [
    [
      "django/utils/timezone.py",
      [
        "override"
      ]
    ],
    [
      "django/utils/translation/__init__.py",
      [
        "override"
      ]
    ]
  ],
  "TranslatorCommentWarning": [
    [
      "django/utils/translation/__init__.py",
      [
        "TranslatorCommentWarning"
      ]
    ]
  ],
  "Trans": [
    [
      "django/utils/translation/__init__.py",
      [
        "Trans"
      ]
    ]
  ],
  "NumberAwareString": [
    [
      "django/utils/translation/__init__.py",
      [
        "lazy_number",
        "if_isinstance_number_int",
        "else_",
        "NumberAwareString"
      ]
    ]
  ],
  "DjangoTranslation": [
    [
      "django/utils/translation/trans_real.py",
      [
        "DjangoTranslation"
      ]
    ]
  ],
  "UnserializableContentError": [
    [
      "django/utils/xmlutils.py",
      [
        "UnserializableContentError"
      ]
    ]
  ],
  "SimplerXMLGenerator": [
    [
      "django/utils/xmlutils.py",
      [
        "SimplerXMLGenerator"
      ]
    ]
  ],
  "CallableSettingWrapper": [
    [
      "django/views/debug.py",
      [
        "CallableSettingWrapper"
      ]
    ]
  ],
  "ExceptionReporterFilter": [
    [
      "django/views/debug.py",
      [
        "ExceptionReporterFilter"
      ]
    ]
  ],
  "SafeExceptionReporterFilter": [
    [
      "django/views/debug.py",
      [
        "SafeExceptionReporterFilter"
      ]
    ]
  ],
  "ExceptionReporter": [
    [
      "django/views/debug.py",
      [
        "ExceptionReporter"
      ]
    ]
  ],
  "_EnsureCsrfToken": [
    [
      "django/views/decorators/csrf.py",
      [
        "_EnsureCsrfToken"
      ]
    ]
  ],
  "_EnsureCsrfCookie": [
    [
      "django/views/decorators/csrf.py",
      [
        "_EnsureCsrfCookie"
      ]
    ]
  ],
  "GenericViewError": [
    [
      "django/views/generic/__init__.py",
      [
        "GenericViewError"
      ]
    ]
  ],
  "ContextMixin": [
    [
      "django/views/generic/base.py",
      [
        "ContextMixin"
      ]
    ]
  ],
  "View": [
    [
      "django/views/generic/base.py",
      [
        "View"
      ]
    ]
  ],
  "TemplateResponseMixin": [
    [
      "django/views/generic/base.py",
      [
        "TemplateResponseMixin"
      ]
    ]
  ],
  "TemplateView": [
    [
      "django/views/generic/base.py",
      [
        "TemplateView"
      ]
    ]
  ],
  "RedirectView": [
    [
      "django/views/generic/base.py",
      [
        "RedirectView"
      ]
    ]
  ],
  "YearMixin": [
    [
      "django/views/generic/dates.py",
      [
        "YearMixin"
      ]
    ]
  ],
  "MonthMixin": [
    [
      "django/views/generic/dates.py",
      [
        "MonthMixin"
      ]
    ]
  ],
  "DayMixin": [
    [
      "django/views/generic/dates.py",
      [
        "DayMixin"
      ]
    ]
  ],
  "WeekMixin": [
    [
      "django/views/generic/dates.py",
      [
        "WeekMixin"
      ]
    ]
  ],
  "DateMixin": [
    [
      "django/views/generic/dates.py",
      [
        "DateMixin"
      ]
    ]
  ],
  "BaseDateListView": [
    [
      "django/views/generic/dates.py",
      [
        "BaseDateListView"
      ]
    ]
  ],
  "BaseArchiveIndexView": [
    [
      "django/views/generic/dates.py",
      [
        "BaseArchiveIndexView"
      ]
    ]
  ],
  "ArchiveIndexView": [
    [
      "django/views/generic/dates.py",
      [
        "ArchiveIndexView"
      ]
    ]
  ],
  "BaseYearArchiveView": [
    [
      "django/views/generic/dates.py",
      [
        "BaseYearArchiveView"
      ]
    ]
  ],
  "YearArchiveView": [
    [
      "django/views/generic/dates.py",
      [
        "YearArchiveView"
      ]
    ]
  ],
  "BaseMonthArchiveView": [
    [
      "django/views/generic/dates.py",
      [
        "BaseMonthArchiveView"
      ]
    ]
  ],
  "MonthArchiveView": [
    [
      "django/views/generic/dates.py",
      [
        "MonthArchiveView"
      ]
    ]
  ],
  "BaseWeekArchiveView": [
    [
      "django/views/generic/dates.py",
      [
        "BaseWeekArchiveView"
      ]
    ]
  ],
  "WeekArchiveView": [
    [
      "django/views/generic/dates.py",
      [
        "WeekArchiveView"
      ]
    ]
  ],
  "BaseDayArchiveView": [
    [
      "django/views/generic/dates.py",
      [
        "BaseDayArchiveView"
      ]
    ]
  ],
  "DayArchiveView": [
    [
      "django/views/generic/dates.py",
      [
        "DayArchiveView"
      ]
    ]
  ],
  "BaseTodayArchiveView": [
    [
      "django/views/generic/dates.py",
      [
        "BaseTodayArchiveView"
      ]
    ]
  ],
  "TodayArchiveView": [
    [
      "django/views/generic/dates.py",
      [
        "TodayArchiveView"
      ]
    ]
  ],
  "BaseDateDetailView": [
    [
      "django/views/generic/dates.py",
      [
        "BaseDateDetailView"
      ]
    ]
  ],
  "DateDetailView": [
    [
      "django/views/generic/dates.py",
      [
        "DateDetailView"
      ]
    ]
  ],
  "SingleObjectMixin": [
    [
      "django/views/generic/detail.py",
      [
        "SingleObjectMixin"
      ]
    ]
  ],
  "BaseDetailView": [
    [
      "django/views/generic/detail.py",
      [
        "BaseDetailView"
      ]
    ]
  ],
  "SingleObjectTemplateResponseMixin": [
    [
      "django/views/generic/detail.py",
      [
        "SingleObjectTemplateResponseMixin"
      ]
    ]
  ],
  "DetailView": [
    [
      "django/views/generic/detail.py",
      [
        "DetailView"
      ]
    ]
  ],
  "FormMixin": [
    [
      "django/views/generic/edit.py",
      [
        "FormMixin"
      ]
    ]
  ],
  "ModelFormMixin": [
    [
      "django/views/generic/edit.py",
      [
        "ModelFormMixin"
      ]
    ]
  ],
  "ProcessFormView": [
    [
      "django/views/generic/edit.py",
      [
        "ProcessFormView"
      ]
    ]
  ],
  "BaseFormView": [
    [
      "django/views/generic/edit.py",
      [
        "BaseFormView"
      ]
    ]
  ],
  "FormView": [
    [
      "django/views/generic/edit.py",
      [
        "FormView"
      ]
    ]
  ],
  "BaseCreateView": [
    [
      "django/views/generic/edit.py",
      [
        "BaseCreateView"
      ]
    ]
  ],
  "CreateView": [
    [
      "django/views/generic/edit.py",
      [
        "CreateView"
      ]
    ]
  ],
  "BaseUpdateView": [
    [
      "django/views/generic/edit.py",
      [
        "BaseUpdateView"
      ]
    ]
  ],
  "UpdateView": [
    [
      "django/views/generic/edit.py",
      [
        "UpdateView"
      ]
    ]
  ],
  "DeletionMixin": [
    [
      "django/views/generic/edit.py",
      [
        "DeletionMixin"
      ]
    ]
  ],
  "BaseDeleteView": [
    [
      "django/views/generic/edit.py",
      [
        "BaseDeleteView"
      ]
    ]
  ],
  "DeleteView": [
    [
      "django/views/generic/edit.py",
      [
        "DeleteView"
      ]
    ]
  ],
  "MultipleObjectMixin": [
    [
      "django/views/generic/list.py",
      [
        "MultipleObjectMixin"
      ]
    ]
  ],
  "BaseListView": [
    [
      "django/views/generic/list.py",
      [
        "BaseListView"
      ]
    ]
  ],
  "MultipleObjectTemplateResponseMixin": [
    [
      "django/views/generic/list.py",
      [
        "MultipleObjectTemplateResponseMixin"
      ]
    ]
  ],
  "ListView": [
    [
      "django/views/generic/list.py",
      [
        "ListView"
      ]
    ]
  ],
  "JavaScriptCatalog": [
    [
      "django/views/i18n.py",
      [
        "JavaScriptCatalog"
      ]
    ]
  ],
  "JSONCatalog": [
    [
      "django/views/i18n.py",
      [
        "JSONCatalog"
      ]
    ]
  ],
  "VersionDirective": [
    [
      "docs/_ext/djangodocs.py",
      [
        "VersionDirective"
      ]
    ]
  ],
  "DjangoHTMLTranslator": [
    [
      "docs/_ext/djangodocs.py",
      [
        "DjangoHTMLTranslator"
      ]
    ]
  ],
  "DjangoStandaloneHTMLBuilder": [
    [
      "docs/_ext/djangodocs.py",
      [
        "DjangoStandaloneHTMLBuilder"
      ]
    ]
  ],
  "ConsoleNode": [
    [
      "docs/_ext/djangodocs.py",
      [
        "ConsoleNode"
      ]
    ]
  ],
  "ConsoleDirective": [
    [
      "docs/_ext/djangodocs.py",
      [
        "ConsoleDirective"
      ]
    ]
  ],
  "AbsoluteUrlOverrideTests": [
    [
      "tests/absolute_url_overrides/tests.py",
      [
        "AbsoluteUrlOverrideTests"
      ]
    ]
  ],
  "Story": [
    [
      "tests/admin_autodiscover/models.py",
      [
        "Story"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Story"
      ]
    ]
  ],
  "AdminAutoDiscoverTests": [
    [
      "tests/admin_autodiscover/tests.py",
      [
        "AdminAutoDiscoverTests"
      ]
    ]
  ],
  "CustomPaginator": [
    [
      "tests/admin_changelist/admin.py",
      [
        "CustomPaginator"
      ]
    ],
    [
      "tests/generic_views/views.py",
      [
        "CustomPaginator"
      ]
    ]
  ],
  "EventAdmin": [
    [
      "tests/admin_changelist/admin.py",
      [
        "EventAdmin"
      ]
    ],
    [
      "tests/admin_widgets/widgetadmin.py",
      [
        "EventAdmin"
      ]
    ],
    [
      "tests/timezones/admin.py",
      [
        "EventAdmin"
      ]
    ]
  ],
  "ParentAdmin": [
    [
      "tests/admin_changelist/admin.py",
      [
        "ParentAdmin"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "ParentAdmin"
      ]
    ]
  ],
  "ChildAdmin": [
    [
      "tests/admin_changelist/admin.py",
      [
        "ChildAdmin"
      ]
    ]
  ],
  "CustomPaginationAdmin": [
    [
      "tests/admin_changelist/admin.py",
      [
        "CustomPaginationAdmin"
      ]
    ]
  ],
  "FilteredChildAdmin": [
    [
      "tests/admin_changelist/admin.py",
      [
        "FilteredChildAdmin"
      ]
    ]
  ],
  "BandAdmin": [
    [
      "tests/admin_changelist/admin.py",
      [
        "BandAdmin"
      ]
    ],
    [
      "tests/modeladmin/test_actions.py",
      [
        "AdminActionsTests",
        "test_get_actions_respects_permissions",
        "BandAdmin"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_field_arguments_restricted_on_form",
        "BandAdmin"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_custom_form_meta_exclude_with_readonly",
        "BandAdmin"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_custom_formfield_override_readonly",
        "BandAdmin"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_custom_form_meta_exclude",
        "BandAdmin"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_formset_exclude_kwarg_override",
        "BandAdmin"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_regression_for_ticket_15820",
        "BandAdmin"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_foreign_key_as_radio_field",
        "BandAdmin"
      ]
    ]
  ],
  "ConcertAdmin": [
    [
      "tests/admin_changelist/admin.py",
      [
        "ConcertAdmin"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_foreign_key_as_radio_field",
        "ConcertAdmin"
      ]
    ]
  ],
  "QuartetAdmin": [
    [
      "tests/admin_changelist/admin.py",
      [
        "QuartetAdmin"
      ]
    ]
  ],
  "ChordsBandAdmin": [
    [
      "tests/admin_changelist/admin.py",
      [
        "ChordsBandAdmin"
      ]
    ]
  ],
  "InvitationAdmin": [
    [
      "tests/admin_changelist/admin.py",
      [
        "InvitationAdmin"
      ]
    ]
  ],
  "DynamicListDisplayChildAdmin": [
    [
      "tests/admin_changelist/admin.py",
      [
        "DynamicListDisplayChildAdmin"
      ]
    ]
  ],
  "DynamicListDisplayLinksChildAdmin": [
    [
      "tests/admin_changelist/admin.py",
      [
        "DynamicListDisplayLinksChildAdmin"
      ]
    ]
  ],
  "NoListDisplayLinksParentAdmin": [
    [
      "tests/admin_changelist/admin.py",
      [
        "NoListDisplayLinksParentAdmin"
      ]
    ]
  ],
  "SwallowAdmin": [
    [
      "tests/admin_changelist/admin.py",
      [
        "SwallowAdmin"
      ]
    ]
  ],
  "DynamicListFilterChildAdmin": [
    [
      "tests/admin_changelist/admin.py",
      [
        "DynamicListFilterChildAdmin"
      ]
    ]
  ],
  "DynamicSearchFieldsChildAdmin": [
    [
      "tests/admin_changelist/admin.py",
      [
        "DynamicSearchFieldsChildAdmin"
      ]
    ]
  ],
  "EmptyValueChildAdmin": [
    [
      "tests/admin_changelist/admin.py",
      [
        "EmptyValueChildAdmin"
      ]
    ]
  ],
  "Event": [
    [
      "tests/admin_changelist/models.py",
      [
        "Event"
      ]
    ],
    [
      "tests/admin_utils/models.py",
      [
        "Event"
      ]
    ],
    [
      "tests/admin_widgets/models.py",
      [
        "Event"
      ]
    ],
    [
      "tests/gis_tests/relatedapp/models.py",
      [
        "Event"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "M2mThroughFieldsTests",
        "test_invalid_order",
        "Event"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "M2mThroughFieldsTests",
        "test_invalid_field",
        "Event"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "M2mThroughFieldsTests",
        "test_explicit_field_names",
        "Event"
      ]
    ],
    [
      "tests/m2m_through/models.py",
      [
        "Event"
      ]
    ],
    [
      "tests/m2m_through_regress/models.py",
      [
        "Event"
      ]
    ],
    [
      "tests/model_regress/models.py",
      [
        "Event"
      ]
    ],
    [
      "tests/nested_foreign_keys/models.py",
      [
        "Event"
      ]
    ],
    [
      "tests/queryset_pickle/models.py",
      [
        "Event"
      ]
    ],
    [
      "tests/timezones/models.py",
      [
        "Event"
      ]
    ]
  ],
  "Parent": [
    [
      "tests/admin_changelist/models.py",
      [
        "Parent"
      ]
    ],
    [
      "tests/admin_inlines/models.py",
      [
        "Parent"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Parent"
      ]
    ],
    [
      "tests/delete/models.py",
      [
        "Parent"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "Parent"
      ]
    ],
    [
      "tests/inline_formsets/models.py",
      [
        "Parent"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_related_field_has_invalid_related_name",
        "Parent"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_related_field_has_valid_related_name",
        "Parent"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_to_fields_exist",
        "Parent"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "AccessorClashTests",
        "test_m2m_to_m2m_with_inheritance",
        "Parent"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "M2mThroughFieldsTests",
        "test_superset_foreign_object",
        "Parent"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "M2mThroughFieldsTests",
        "test_intersection_foreign_object",
        "Parent"
      ]
    ],
    [
      "tests/managers_regress/models.py",
      [
        "Parent"
      ]
    ],
    [
      "tests/many_to_one/models.py",
      [
        "Parent"
      ]
    ],
    [
      "tests/model_inheritance/models.py",
      [
        "Parent"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "Parent"
      ]
    ],
    [
      "tests/mutually_referential/models.py",
      [
        "Parent"
      ]
    ],
    [
      "tests/select_related_regress/models.py",
      [
        "Parent"
      ]
    ],
    [
      "tests/serializers/models/multi_table.py",
      [
        "Parent"
      ]
    ]
  ],
  "Child": [
    [
      "tests/admin_changelist/models.py",
      [
        "Child"
      ]
    ],
    [
      "tests/admin_inlines/models.py",
      [
        "Child"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Child"
      ]
    ],
    [
      "tests/defer/models.py",
      [
        "Child"
      ]
    ],
    [
      "tests/defer_regress/models.py",
      [
        "Child"
      ]
    ],
    [
      "tests/delete/models.py",
      [
        "Child"
      ]
    ],
    [
      "tests/delete_regress/models.py",
      [
        "Child"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "Child"
      ]
    ],
    [
      "tests/inline_formsets/models.py",
      [
        "Child"
      ]
    ],
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "ShadowingFieldsTests",
        "test_multiinheritance_clash",
        "Child"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_to_fields_exist",
        "Child"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "AccessorClashTests",
        "test_m2m_to_m2m_with_inheritance",
        "Child"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "M2mThroughFieldsTests",
        "test_superset_foreign_object",
        "Child"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "M2mThroughFieldsTests",
        "test_intersection_foreign_object",
        "Child"
      ]
    ],
    [
      "tests/many_to_one/models.py",
      [
        "Child"
      ]
    ],
    [
      "tests/model_inheritance/models.py",
      [
        "Child"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "Child"
      ]
    ],
    [
      "tests/model_meta/models.py",
      [
        "Child"
      ]
    ],
    [
      "tests/mutually_referential/models.py",
      [
        "Child"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Child"
      ]
    ],
    [
      "tests/select_related_regress/models.py",
      [
        "Child"
      ]
    ],
    [
      "tests/serializers/models/multi_table.py",
      [
        "Child"
      ]
    ],
    [
      "tests/string_lookup/models.py",
      [
        "Child"
      ]
    ]
  ],
  "Genre": [
    [
      "tests/admin_changelist/models.py",
      [
        "Genre"
      ]
    ]
  ],
  "Band": [
    [
      "tests/admin_changelist/models.py",
      [
        "Band"
      ]
    ],
    [
      "tests/admin_ordering/models.py",
      [
        "Band"
      ]
    ],
    [
      "tests/admin_widgets/models.py",
      [
        "Band"
      ]
    ],
    [
      "tests/modeladmin/models.py",
      [
        "Band"
      ]
    ]
  ],
  "Musician": [
    [
      "tests/admin_changelist/models.py",
      [
        "Musician"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_subclassing_forms",
        "Musician"
      ]
    ]
  ],
  "Concert": [
    [
      "tests/admin_changelist/models.py",
      [
        "Concert"
      ]
    ],
    [
      "tests/modeladmin/models.py",
      [
        "Concert"
      ]
    ]
  ],
  "Membership": [
    [
      "tests/admin_changelist/models.py",
      [
        "Membership"
      ]
    ],
    [
      "tests/foreign_object/models/person.py",
      [
        "Membership"
      ]
    ],
    [
      "tests/m2m_through/models.py",
      [
        "Membership"
      ]
    ],
    [
      "tests/m2m_through_regress/models.py",
      [
        "Membership"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Membership"
      ]
    ]
  ],
  "Quartet": [
    [
      "tests/admin_changelist/models.py",
      [
        "Quartet"
      ]
    ]
  ],
  "ChordsMusician": [
    [
      "tests/admin_changelist/models.py",
      [
        "ChordsMusician"
      ]
    ]
  ],
  "ChordsBand": [
    [
      "tests/admin_changelist/models.py",
      [
        "ChordsBand"
      ]
    ]
  ],
  "Invitation": [
    [
      "tests/admin_changelist/models.py",
      [
        "Invitation"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "M2mThroughFieldsTests",
        "test_invalid_order",
        "Invitation"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "M2mThroughFieldsTests",
        "test_invalid_field",
        "Invitation"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "M2mThroughFieldsTests",
        "test_explicit_field_names",
        "Invitation"
      ]
    ],
    [
      "tests/m2m_through/models.py",
      [
        "Invitation"
      ]
    ]
  ],
  "Swallow": [
    [
      "tests/admin_changelist/models.py",
      [
        "Swallow"
      ]
    ]
  ],
  "SwallowOneToOne": [
    [
      "tests/admin_changelist/models.py",
      [
        "SwallowOneToOne"
      ]
    ]
  ],
  "UnorderedObject": [
    [
      "tests/admin_changelist/models.py",
      [
        "UnorderedObject"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "UnorderedObject"
      ]
    ]
  ],
  "OrderedObjectManager": [
    [
      "tests/admin_changelist/models.py",
      [
        "OrderedObjectManager"
      ]
    ]
  ],
  "OrderedObject": [
    [
      "tests/admin_changelist/models.py",
      [
        "OrderedObject"
      ]
    ]
  ],
  "CustomIdUser": [
    [
      "tests/admin_changelist/models.py",
      [
        "CustomIdUser"
      ]
    ]
  ],
  "CharPK": [
    [
      "tests/admin_changelist/models.py",
      [
        "CharPK"
      ]
    ]
  ],
  "DateHierarchyTests": [
    [
      "tests/admin_changelist/test_date_hierarchy.py",
      [
        "DateHierarchyTests"
      ]
    ],
    [
      "tests/admin_views/test_templatetags.py",
      [
        "DateHierarchyTests"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "DateHierarchyTests"
      ]
    ]
  ],
  "UnorderedObjectAdmin": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_deterministic_order_for_unordered_model",
        "UnorderedObjectAdmin"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "UnorderedObjectAdmin"
      ]
    ]
  ],
  "OrderedObjectAdmin": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_deterministic_order_for_model_ordered_by_its_manager",
        "OrderedObjectAdmin"
      ]
    ]
  ],
  "Related": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_total_ordering_optimization",
        "Related"
      ]
    ],
    [
      "tests/generic_relations_regress/models.py",
      [
        "Related"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Related"
      ]
    ]
  ],
  "ChangeListTests": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests"
      ]
    ]
  ],
  "GetAdminLogTests": [
    [
      "tests/admin_changelist/tests.py",
      [
        "GetAdminLogTests"
      ]
    ]
  ],
  "SeleniumTests": [
    [
      "tests/admin_changelist/tests.py",
      [
        "SeleniumTests"
      ]
    ],
    [
      "tests/admin_inlines/tests.py",
      [
        "SeleniumTests"
      ]
    ],
    [
      "tests/admin_views/test_autocomplete_view.py",
      [
        "SeleniumTests"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "SeleniumTests"
      ]
    ]
  ],
  "Album": [
    [
      "tests/admin_checks/models.py",
      [
        "Album"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Album"
      ]
    ],
    [
      "tests/admin_widgets/models.py",
      [
        "Album"
      ]
    ]
  ],
  "Song": [
    [
      "tests/admin_checks/models.py",
      [
        "Song"
      ]
    ],
    [
      "tests/admin_ordering/models.py",
      [
        "Song"
      ]
    ],
    [
      "tests/modeladmin/models.py",
      [
        "Song"
      ]
    ]
  ],
  "TwoAlbumFKAndAnE": [
    [
      "tests/admin_checks/models.py",
      [
        "TwoAlbumFKAndAnE"
      ]
    ]
  ],
  "Author": [
    [
      "tests/admin_checks/models.py",
      [
        "Author"
      ]
    ],
    [
      "tests/admin_inlines/models.py",
      [
        "Author"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Author"
      ]
    ],
    [
      "tests/aggregation/models.py",
      [
        "Author"
      ]
    ],
    [
      "tests/aggregation_regress/models.py",
      [
        "Author"
      ]
    ],
    [
      "tests/annotations/models.py",
      [
        "Author"
      ]
    ],
    [
      "tests/backends/models.py",
      [
        "Author"
      ]
    ],
    [
      "tests/contenttypes_tests/models.py",
      [
        "Author"
      ]
    ],
    [
      "tests/custom_columns/models.py",
      [
        "Author"
      ]
    ],
    [
      "tests/custom_lookups/models.py",
      [
        "Author"
      ]
    ],
    [
      "tests/db_functions/models.py",
      [
        "Author"
      ]
    ],
    [
      "tests/filtered_relation/models.py",
      [
        "Author"
      ]
    ],
    [
      "tests/generic_views/models.py",
      [
        "Author"
      ]
    ],
    [
      "tests/get_object_or_404/models.py",
      [
        "Author"
      ]
    ],
    [
      "tests/get_or_create/models.py",
      [
        "Author"
      ]
    ],
    [
      "tests/gis_tests/relatedapp/models.py",
      [
        "Author"
      ]
    ],
    [
      "tests/lookup/models.py",
      [
        "Author"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_create",
        "Author"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_custom_base_manager",
        "Author"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_dangling_references_throw_error",
        "Author"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_ignore_order_wrt",
        "Author"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "ModelStateTests",
        "test_create_swappable",
        "Author"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Author"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Author"
      ]
    ],
    [
      "tests/model_options/models/default_related_name.py",
      [
        "Author"
      ]
    ],
    [
      "tests/null_fk_ordering/models.py",
      [
        "Author"
      ]
    ],
    [
      "tests/ordering/models.py",
      [
        "Author"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "Author"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Author"
      ]
    ],
    [
      "tests/raw_query/models.py",
      [
        "Author"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "Author"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_no_db_constraint_added_during_primary_key_change",
        "Author"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_unique_no_unnecessary_fk_drops",
        "Author"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_db_table",
        "Author"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "Author"
      ]
    ],
    [
      "tests/signals/models.py",
      [
        "Author"
      ]
    ],
    [
      "tests/validation/models.py",
      [
        "Author"
      ]
    ],
    [
      "tests/view_tests/models.py",
      [
        "Author"
      ]
    ]
  ],
  "Book": [
    [
      "tests/admin_checks/models.py",
      [
        "Book"
      ]
    ],
    [
      "tests/admin_filters/models.py",
      [
        "Book"
      ]
    ],
    [
      "tests/admin_inlines/models.py",
      [
        "Book"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Book"
      ]
    ],
    [
      "tests/aggregation/models.py",
      [
        "Book"
      ]
    ],
    [
      "tests/aggregation_regress/models.py",
      [
        "Book"
      ]
    ],
    [
      "tests/annotations/models.py",
      [
        "Book"
      ]
    ],
    [
      "tests/backends/models.py",
      [
        "Book"
      ]
    ],
    [
      "tests/custom_managers/models.py",
      [
        "Book"
      ]
    ],
    [
      "tests/delete_regress/models.py",
      [
        "Book"
      ]
    ],
    [
      "tests/filtered_relation/models.py",
      [
        "Book"
      ]
    ],
    [
      "tests/fixtures/models.py",
      [
        "Book"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "Book"
      ]
    ],
    [
      "tests/generic_views/models.py",
      [
        "Book"
      ]
    ],
    [
      "tests/get_or_create/models.py",
      [
        "Book"
      ]
    ],
    [
      "tests/gis_tests/relatedapp/models.py",
      [
        "Book"
      ]
    ],
    [
      "tests/migration_test_data_persistence/models.py",
      [
        "Book"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_create",
        "Book"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_dangling_references_throw_error",
        "Book"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_ignore_order_wrt",
        "Book"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Book"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Book"
      ]
    ],
    [
      "tests/model_indexes/models.py",
      [
        "Book"
      ]
    ],
    [
      "tests/model_options/models/default_related_name.py",
      [
        "Book"
      ]
    ],
    [
      "tests/multiple_database/models.py",
      [
        "Book"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "Book"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Book"
      ]
    ],
    [
      "tests/raw_query/models.py",
      [
        "Book"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "Book"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_unique_no_unnecessary_fk_drops",
        "Book"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_unique_and_reverse_m2m",
        "Book"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_db_table",
        "Book"
      ]
    ],
    [
      "tests/signals/models.py",
      [
        "Book"
      ]
    ]
  ],
  "AuthorsBooks": [
    [
      "tests/admin_checks/models.py",
      [
        "AuthorsBooks"
      ]
    ]
  ],
  "State": [
    [
      "tests/admin_checks/models.py",
      [
        "State"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "State"
      ]
    ],
    [
      "tests/bulk_create/models.py",
      [
        "State"
      ]
    ],
    [
      "tests/gis_tests/geoapp/models.py",
      [
        "State"
      ]
    ],
    [
      "tests/gis_tests/layermap/models.py",
      [
        "State"
      ]
    ],
    [
      "tests/proxy_models/models.py",
      [
        "State"
      ]
    ],
    [
      "tests/select_related_regress/models.py",
      [
        "State"
      ]
    ]
  ],
  "City": [
    [
      "tests/admin_checks/models.py",
      [
        "City"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "City"
      ]
    ],
    [
      "tests/gis_tests/geoadmin/models.py",
      [
        "City"
      ]
    ],
    [
      "tests/gis_tests/geoapp/models.py",
      [
        "City"
      ]
    ],
    [
      "tests/gis_tests/geogapp/models.py",
      [
        "City"
      ]
    ],
    [
      "tests/gis_tests/layermap/models.py",
      [
        "City"
      ]
    ],
    [
      "tests/gis_tests/relatedapp/models.py",
      [
        "City"
      ]
    ],
    [
      "tests/introspection/models.py",
      [
        "City"
      ]
    ],
    [
      "tests/many_to_one/models.py",
      [
        "City"
      ]
    ],
    [
      "tests/select_for_update/models.py",
      [
        "City"
      ]
    ]
  ],
  "Influence": [
    [
      "tests/admin_checks/models.py",
      [
        "Influence"
      ]
    ]
  ],
  "SongForm": [
    [
      "tests/admin_checks/tests.py",
      [
        "SongForm"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_hidden_data",
        "SongForm"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_multiple_choice_checkbox",
        "SongForm"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_multiple_choice_list_data",
        "SongForm"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_multiple_hidden",
        "SongForm"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_empty_permitted",
        "SongForm"
      ]
    ]
  ],
  "ValidFields": [
    [
      "tests/admin_checks/tests.py",
      [
        "ValidFields"
      ]
    ]
  ],
  "ValidFormFieldsets": [
    [
      "tests/admin_checks/tests.py",
      [
        "ValidFormFieldsets"
      ]
    ]
  ],
  "MyAdmin": [
    [
      "tests/admin_checks/tests.py",
      [
        "MyAdmin"
      ]
    ],
    [
      "tests/apps/apps.py",
      [
        "MyAdmin"
      ]
    ]
  ],
  "SystemChecksTestCase": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase"
      ]
    ]
  ],
  "Action": [
    [
      "tests/admin_custom_urls/models.py",
      [
        "Action"
      ]
    ]
  ],
  "ActionAdmin": [
    [
      "tests/admin_custom_urls/models.py",
      [
        "ActionAdmin"
      ]
    ]
  ],
  "Person": [
    [
      "tests/admin_custom_urls/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/admin_docs/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/admin_inlines/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/admin_registration/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/backends/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/choices/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/custom_managers/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/delete_regress/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/fixtures/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/foreign_object/models/person.py",
      [
        "Person"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "Person"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_dynamic_construction",
        "Person"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_hidden_widget",
        "Person"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_changed_data",
        "Person"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_subclassing_forms",
        "Person"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_forms_with_prefixes",
        "Person"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_forms_with_null_boolean",
        "Person"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_error_html_required_html_classes",
        "Person"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_error_list_with_hidden_field_errors_has_correct_class",
        "Person"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_error_list_with_non_field_errors_has_correct_class",
        "Person"
      ]
    ],
    [
      "tests/generic_relations_regress/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/get_earliest_or_latest/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/get_or_create/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_ambiguous_relationship_model",
        "Person"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_symmetric_self_reference_with_intermediate_table_and_through_fields",
        "Person"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_foreign_object_to_non_unique_fields",
        "Person"
      ]
    ],
    [
      "tests/m2m_recursive/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/m2m_signals/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/m2m_through/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/m2m_through_regress/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/m2o_recursive/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_no_duplicate_managers",
        "Person"
      ]
    ],
    [
      "tests/model_fields/models.py",
      [
        "if_Image_",
        "Person"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/model_meta/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/multiple_database/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/nested_foreign_keys/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/properties/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/proxy_models/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/save_delete_hooks/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/select_for_update/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/select_related_regress/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/servers/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/signals/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/test_runner/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/test_utils/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/update_only_fields/models.py",
      [
        "Person"
      ]
    ],
    [
      "tests/utils_tests/test_inspect.py",
      [
        "Person"
      ]
    ]
  ],
  "PersonAdmin": [
    [
      "tests/admin_custom_urls/models.py",
      [
        "PersonAdmin"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "PersonAdmin"
      ]
    ]
  ],
  "Car": [
    [
      "tests/admin_custom_urls/models.py",
      [
        "Car"
      ]
    ],
    [
      "tests/admin_utils/models.py",
      [
        "Car"
      ]
    ],
    [
      "tests/admin_widgets/models.py",
      [
        "Car"
      ]
    ],
    [
      "tests/custom_managers/models.py",
      [
        "Car"
      ]
    ],
    [
      "tests/m2m_signals/models.py",
      [
        "Car"
      ]
    ],
    [
      "tests/m2m_through_regress/models.py",
      [
        "Car"
      ]
    ],
    [
      "tests/many_to_one_null/models.py",
      [
        "Car"
      ]
    ],
    [
      "tests/signals/models.py",
      [
        "Car"
      ]
    ],
    [
      "tests/test_utils/models.py",
      [
        "Car"
      ]
    ]
  ],
  "CarAdmin": [
    [
      "tests/admin_custom_urls/models.py",
      [
        "CarAdmin"
      ]
    ],
    [
      "tests/admin_widgets/widgetadmin.py",
      [
        "CarAdmin"
      ]
    ]
  ],
  "AdminCustomUrlsTest": [
    [
      "tests/admin_custom_urls/tests.py",
      [
        "AdminCustomUrlsTest"
      ]
    ]
  ],
  "MyCustomAdminConfig": [
    [
      "tests/admin_default_site/apps.py",
      [
        "MyCustomAdminConfig"
      ]
    ]
  ],
  "CustomAdminSite": [
    [
      "tests/admin_default_site/sites.py",
      [
        "CustomAdminSite"
      ]
    ]
  ],
  "CustomAdminSiteTests": [
    [
      "tests/admin_default_site/tests.py",
      [
        "CustomAdminSiteTests"
      ]
    ]
  ],
  "DefaultAdminSiteTests": [
    [
      "tests/admin_default_site/tests.py",
      [
        "DefaultAdminSiteTests"
      ]
    ]
  ],
  "Company": [
    [
      "tests/admin_docs/models.py",
      [
        "Company"
      ]
    ],
    [
      "tests/admin_widgets/models.py",
      [
        "Company"
      ]
    ],
    [
      "tests/annotations/models.py",
      [
        "Company"
      ]
    ],
    [
      "tests/expressions/models.py",
      [
        "Company"
      ]
    ],
    [
      "tests/generic_relations_regress/models.py",
      [
        "Company"
      ]
    ],
    [
      "tests/i18n/models.py",
      [
        "Company"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Company"
      ]
    ]
  ],
  "Family": [
    [
      "tests/admin_docs/models.py",
      [
        "Family"
      ]
    ],
    [
      "tests/select_related/models.py",
      [
        "Family"
      ]
    ]
  ],
  "XViewMiddlewareTest": [
    [
      "tests/admin_docs/test_middleware.py",
      [
        "XViewMiddlewareTest"
      ]
    ]
  ],
  "TestUtils": [
    [
      "tests/admin_docs/test_utils.py",
      [
        "TestUtils"
      ]
    ],
    [
      "tests/backends/test_utils.py",
      [
        "TestUtils"
      ]
    ]
  ],
  "AdminDocViewTests": [
    [
      "tests/admin_docs/test_views.py",
      [
        "AdminDocViewTests"
      ]
    ]
  ],
  "AdminDocViewWithMultipleEngines": [
    [
      "tests/admin_docs/test_views.py",
      [
        "AdminDocViewWithMultipleEngines"
      ]
    ]
  ],
  "TestModelDetailView": [
    [
      "tests/admin_docs/test_views.py",
      [
        "TestModelDetailView"
      ]
    ]
  ],
  "CustomField": [
    [
      "tests/admin_docs/test_views.py",
      [
        "CustomField"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "CustomField"
      ]
    ]
  ],
  "DescriptionLackingField": [
    [
      "tests/admin_docs/test_views.py",
      [
        "DescriptionLackingField"
      ]
    ]
  ],
  "TestFieldType": [
    [
      "tests/admin_docs/test_views.py",
      [
        "TestFieldType"
      ]
    ]
  ],
  "AdminDocViewFunctionsTests": [
    [
      "tests/admin_docs/test_views.py",
      [
        "AdminDocViewFunctionsTests"
      ]
    ]
  ],
  "TestDataMixin": [
    [
      "tests/admin_docs/tests.py",
      [
        "TestDataMixin"
      ]
    ],
    [
      "tests/admin_inlines/tests.py",
      [
        "TestDataMixin"
      ]
    ],
    [
      "tests/admin_widgets/tests.py",
      [
        "TestDataMixin"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "TestDataMixin"
      ]
    ],
    [
      "tests/flatpages_tests/test_middleware.py",
      [
        "TestDataMixin"
      ]
    ],
    [
      "tests/flatpages_tests/test_views.py",
      [
        "TestDataMixin"
      ]
    ],
    [
      "tests/generic_inline_admin/tests.py",
      [
        "TestDataMixin"
      ]
    ],
    [
      "tests/generic_views/test_dates.py",
      [
        "TestDataMixin"
      ]
    ],
    [
      "tests/gis_tests/test_data.py",
      [
        "TestDataMixin"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "TestDataMixin"
      ]
    ],
    [
      "tests/test_client_regress/tests.py",
      [
        "TestDataMixin"
      ]
    ]
  ],
  "AdminDocsSimpleTestCase": [
    [
      "tests/admin_docs/tests.py",
      [
        "AdminDocsSimpleTestCase"
      ]
    ]
  ],
  "AdminDocsTestCase": [
    [
      "tests/admin_docs/tests.py",
      [
        "AdminDocsTestCase"
      ]
    ]
  ],
  "XViewClass": [
    [
      "tests/admin_docs/views.py",
      [
        "XViewClass"
      ]
    ]
  ],
  "XViewCallableObject": [
    [
      "tests/admin_docs/views.py",
      [
        "XViewCallableObject"
      ]
    ]
  ],
  "Department": [
    [
      "tests/admin_filters/models.py",
      [
        "Department"
      ]
    ],
    [
      "tests/model_regress/models.py",
      [
        "Department"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_lookup_allowed_onetoone",
        "Department"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "Department"
      ]
    ]
  ],
  "Employee": [
    [
      "tests/admin_filters/models.py",
      [
        "Employee"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Employee"
      ]
    ],
    [
      "tests/annotations/models.py",
      [
        "Employee"
      ]
    ],
    [
      "tests/custom_pk/models.py",
      [
        "Employee"
      ]
    ],
    [
      "tests/expressions/models.py",
      [
        "Employee"
      ]
    ],
    [
      "tests/expressions_window/models.py",
      [
        "Employee"
      ]
    ],
    [
      "tests/m2m_through/models.py",
      [
        "Employee"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_lookup_allowed_onetoone",
        "Employee"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "Employee"
      ]
    ],
    [
      "tests/update_only_fields/models.py",
      [
        "Employee"
      ]
    ]
  ],
  "TaggedItem": [
    [
      "tests/admin_filters/models.py",
      [
        "TaggedItem"
      ]
    ],
    [
      "tests/generic_relations/models.py",
      [
        "TaggedItem"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "TaggedItem"
      ]
    ],
    [
      "tests/select_related/models.py",
      [
        "TaggedItem"
      ]
    ]
  ],
  "Bookmark": [
    [
      "tests/admin_filters/models.py",
      [
        "Bookmark"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Bookmark"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "Bookmark"
      ]
    ],
    [
      "tests/select_related/models.py",
      [
        "Bookmark"
      ]
    ]
  ],
  "DecadeListFilter": [
    [
      "tests/admin_filters/tests.py",
      [
        "DecadeListFilter"
      ]
    ]
  ],
  "NotNinetiesListFilter": [
    [
      "tests/admin_filters/tests.py",
      [
        "NotNinetiesListFilter"
      ]
    ]
  ],
  "DecadeListFilterWithTitleAndParameter": [
    [
      "tests/admin_filters/tests.py",
      [
        "DecadeListFilterWithTitleAndParameter"
      ]
    ]
  ],
  "DecadeListFilterWithoutTitle": [
    [
      "tests/admin_filters/tests.py",
      [
        "DecadeListFilterWithoutTitle"
      ]
    ]
  ],
  "DecadeListFilterWithoutParameter": [
    [
      "tests/admin_filters/tests.py",
      [
        "DecadeListFilterWithoutParameter"
      ]
    ]
  ],
  "DecadeListFilterWithNoneReturningLookups": [
    [
      "tests/admin_filters/tests.py",
      [
        "DecadeListFilterWithNoneReturningLookups"
      ]
    ]
  ],
  "DecadeListFilterWithFailingQueryset": [
    [
      "tests/admin_filters/tests.py",
      [
        "DecadeListFilterWithFailingQueryset"
      ]
    ]
  ],
  "DecadeListFilterWithQuerysetBasedLookups": [
    [
      "tests/admin_filters/tests.py",
      [
        "DecadeListFilterWithQuerysetBasedLookups"
      ]
    ]
  ],
  "DecadeListFilterParameterEndsWith__In": [
    [
      "tests/admin_filters/tests.py",
      [
        "DecadeListFilterParameterEndsWith__In"
      ]
    ]
  ],
  "DecadeListFilterParameterEndsWith__Isnull": [
    [
      "tests/admin_filters/tests.py",
      [
        "DecadeListFilterParameterEndsWith__Isnull"
      ]
    ]
  ],
  "DepartmentListFilterLookupWithNonStringValue": [
    [
      "tests/admin_filters/tests.py",
      [
        "DepartmentListFilterLookupWithNonStringValue"
      ]
    ]
  ],
  "DepartmentListFilterLookupWithUnderscoredParameter": [
    [
      "tests/admin_filters/tests.py",
      [
        "DepartmentListFilterLookupWithUnderscoredParameter"
      ]
    ]
  ],
  "DepartmentListFilterLookupWithDynamicValue": [
    [
      "tests/admin_filters/tests.py",
      [
        "DepartmentListFilterLookupWithDynamicValue"
      ]
    ]
  ],
  "CustomUserAdmin": [
    [
      "tests/admin_filters/tests.py",
      [
        "CustomUserAdmin"
      ]
    ],
    [
      "tests/auth_tests/urls_custom_user_admin.py",
      [
        "CustomUserAdmin"
      ]
    ]
  ],
  "BookAdmin": [
    [
      "tests/admin_filters/tests.py",
      [
        "BookAdmin"
      ]
    ],
    [
      "tests/admin_views/customadmin.py",
      [
        "BookAdmin"
      ]
    ],
    [
      "tests/admin_views/test_autocomplete_view.py",
      [
        "BookAdmin"
      ]
    ]
  ],
  "BookAdmin2": [
    [
      "tests/admin_filters/tests.py",
      [
        "BookAdmin2"
      ]
    ]
  ],
  "BookAdminWithTupleBooleanFilter": [
    [
      "tests/admin_filters/tests.py",
      [
        "BookAdminWithTupleBooleanFilter"
      ]
    ]
  ],
  "BookAdminWithUnderscoreLookupAndTuple": [
    [
      "tests/admin_filters/tests.py",
      [
        "BookAdminWithUnderscoreLookupAndTuple"
      ]
    ]
  ],
  "BookAdminWithCustomQueryset": [
    [
      "tests/admin_filters/tests.py",
      [
        "BookAdminWithCustomQueryset"
      ]
    ]
  ],
  "BookAdminRelatedOnlyFilter": [
    [
      "tests/admin_filters/tests.py",
      [
        "BookAdminRelatedOnlyFilter"
      ]
    ]
  ],
  "DecadeFilterBookAdmin": [
    [
      "tests/admin_filters/tests.py",
      [
        "DecadeFilterBookAdmin"
      ]
    ]
  ],
  "NotNinetiesListFilterAdmin": [
    [
      "tests/admin_filters/tests.py",
      [
        "NotNinetiesListFilterAdmin"
      ]
    ]
  ],
  "DecadeFilterBookAdminWithoutTitle": [
    [
      "tests/admin_filters/tests.py",
      [
        "DecadeFilterBookAdminWithoutTitle"
      ]
    ]
  ],
  "DecadeFilterBookAdminWithoutParameter": [
    [
      "tests/admin_filters/tests.py",
      [
        "DecadeFilterBookAdminWithoutParameter"
      ]
    ]
  ],
  "DecadeFilterBookAdminWithNoneReturningLookups": [
    [
      "tests/admin_filters/tests.py",
      [
        "DecadeFilterBookAdminWithNoneReturningLookups"
      ]
    ]
  ],
  "DecadeFilterBookAdminWithFailingQueryset": [
    [
      "tests/admin_filters/tests.py",
      [
        "DecadeFilterBookAdminWithFailingQueryset"
      ]
    ]
  ],
  "DecadeFilterBookAdminWithQuerysetBasedLookups": [
    [
      "tests/admin_filters/tests.py",
      [
        "DecadeFilterBookAdminWithQuerysetBasedLookups"
      ]
    ]
  ],
  "DecadeFilterBookAdminParameterEndsWith__In": [
    [
      "tests/admin_filters/tests.py",
      [
        "DecadeFilterBookAdminParameterEndsWith__In"
      ]
    ]
  ],
  "DecadeFilterBookAdminParameterEndsWith__Isnull": [
    [
      "tests/admin_filters/tests.py",
      [
        "DecadeFilterBookAdminParameterEndsWith__Isnull"
      ]
    ]
  ],
  "EmployeeAdmin": [
    [
      "tests/admin_filters/tests.py",
      [
        "EmployeeAdmin"
      ]
    ]
  ],
  "DepartmentFilterEmployeeAdmin": [
    [
      "tests/admin_filters/tests.py",
      [
        "DepartmentFilterEmployeeAdmin"
      ]
    ]
  ],
  "DepartmentFilterUnderscoredEmployeeAdmin": [
    [
      "tests/admin_filters/tests.py",
      [
        "DepartmentFilterUnderscoredEmployeeAdmin"
      ]
    ]
  ],
  "DepartmentFilterDynamicValueBookAdmin": [
    [
      "tests/admin_filters/tests.py",
      [
        "DepartmentFilterDynamicValueBookAdmin"
      ]
    ]
  ],
  "BookmarkAdminGenericRelation": [
    [
      "tests/admin_filters/tests.py",
      [
        "BookmarkAdminGenericRelation"
      ]
    ]
  ],
  "ListFiltersTests": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests"
      ]
    ]
  ],
  "BookInline": [
    [
      "tests/admin_inlines/admin.py",
      [
        "BookInline"
      ]
    ]
  ],
  "NonAutoPKBookTabularInline": [
    [
      "tests/admin_inlines/admin.py",
      [
        "NonAutoPKBookTabularInline"
      ]
    ]
  ],
  "NonAutoPKBookChildTabularInline": [
    [
      "tests/admin_inlines/admin.py",
      [
        "NonAutoPKBookChildTabularInline"
      ]
    ]
  ],
  "NonAutoPKBookStackedInline": [
    [
      "tests/admin_inlines/admin.py",
      [
        "NonAutoPKBookStackedInline"
      ]
    ]
  ],
  "EditablePKBookTabularInline": [
    [
      "tests/admin_inlines/admin.py",
      [
        "EditablePKBookTabularInline"
      ]
    ]
  ],
  "EditablePKBookStackedInline": [
    [
      "tests/admin_inlines/admin.py",
      [
        "EditablePKBookStackedInline"
      ]
    ]
  ],
  "AuthorAdmin": [
    [
      "tests/admin_inlines/admin.py",
      [
        "AuthorAdmin"
      ]
    ],
    [
      "tests/admin_views/test_autocomplete_view.py",
      [
        "AuthorAdmin"
      ]
    ]
  ],
  "InnerInline": [
    [
      "tests/admin_inlines/admin.py",
      [
        "InnerInline"
      ]
    ]
  ],
  "HolderAdmin": [
    [
      "tests/admin_inlines/admin.py",
      [
        "HolderAdmin"
      ]
    ]
  ],
  "ReadOnlyInlineInline": [
    [
      "tests/admin_inlines/admin.py",
      [
        "ReadOnlyInlineInline"
      ]
    ]
  ],
  "InnerInline2": [
    [
      "tests/admin_inlines/admin.py",
      [
        "InnerInline2"
      ]
    ]
  ],
  "InnerInline2Tabular": [
    [
      "tests/admin_inlines/admin.py",
      [
        "InnerInline2Tabular"
      ]
    ]
  ],
  "CustomNumberWidget": [
    [
      "tests/admin_inlines/admin.py",
      [
        "CustomNumberWidget"
      ]
    ]
  ],
  "InnerInline3": [
    [
      "tests/admin_inlines/admin.py",
      [
        "InnerInline3"
      ]
    ]
  ],
  "TitleForm": [
    [
      "tests/admin_inlines/admin.py",
      [
        "TitleForm"
      ]
    ]
  ],
  "TitleInline": [
    [
      "tests/admin_inlines/admin.py",
      [
        "TitleInline"
      ]
    ]
  ],
  "Inner4StackedInline": [
    [
      "tests/admin_inlines/admin.py",
      [
        "Inner4StackedInline"
      ]
    ]
  ],
  "Inner4TabularInline": [
    [
      "tests/admin_inlines/admin.py",
      [
        "Inner4TabularInline"
      ]
    ]
  ],
  "Holder4Admin": [
    [
      "tests/admin_inlines/admin.py",
      [
        "Holder4Admin"
      ]
    ]
  ],
  "InlineWeakness": [
    [
      "tests/admin_inlines/admin.py",
      [
        "InlineWeakness"
      ]
    ]
  ],
  "QuestionInline": [
    [
      "tests/admin_inlines/admin.py",
      [
        "QuestionInline"
      ]
    ]
  ],
  "PollAdmin": [
    [
      "tests/admin_inlines/admin.py",
      [
        "PollAdmin"
      ]
    ]
  ],
  "ChapterInline": [
    [
      "tests/admin_inlines/admin.py",
      [
        "ChapterInline"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "ChapterInline"
      ]
    ]
  ],
  "NovelAdmin": [
    [
      "tests/admin_inlines/admin.py",
      [
        "NovelAdmin"
      ]
    ]
  ],
  "ReadOnlyChapterInline": [
    [
      "tests/admin_inlines/admin.py",
      [
        "ReadOnlyChapterInline"
      ]
    ]
  ],
  "NovelReadonlyChapterAdmin": [
    [
      "tests/admin_inlines/admin.py",
      [
        "NovelReadonlyChapterAdmin"
      ]
    ]
  ],
  "ConsigliereInline": [
    [
      "tests/admin_inlines/admin.py",
      [
        "ConsigliereInline"
      ]
    ]
  ],
  "SottoCapoInline": [
    [
      "tests/admin_inlines/admin.py",
      [
        "SottoCapoInline"
      ]
    ]
  ],
  "ProfileInline": [
    [
      "tests/admin_inlines/admin.py",
      [
        "ProfileInline"
      ]
    ]
  ],
  "ChildModel1Inline": [
    [
      "tests/admin_inlines/admin.py",
      [
        "ChildModel1Inline"
      ]
    ]
  ],
  "ChildModel2Inline": [
    [
      "tests/admin_inlines/admin.py",
      [
        "ChildModel2Inline"
      ]
    ]
  ],
  "BinaryTreeAdmin": [
    [
      "tests/admin_inlines/admin.py",
      [
        "BinaryTreeAdmin"
      ]
    ]
  ],
  "SightingInline": [
    [
      "tests/admin_inlines/admin.py",
      [
        "SightingInline"
      ]
    ]
  ],
  "SomeChildModelForm": [
    [
      "tests/admin_inlines/admin.py",
      [
        "SomeChildModelForm"
      ]
    ]
  ],
  "SomeChildModelInline": [
    [
      "tests/admin_inlines/admin.py",
      [
        "SomeChildModelInline"
      ]
    ]
  ],
  "Teacher": [
    [
      "tests/admin_inlines/models.py",
      [
        "Teacher"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "Teacher"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Teacher"
      ]
    ]
  ],
  "NonAutoPKBook": [
    [
      "tests/admin_inlines/models.py",
      [
        "NonAutoPKBook"
      ]
    ]
  ],
  "NonAutoPKBookChild": [
    [
      "tests/admin_inlines/models.py",
      [
        "NonAutoPKBookChild"
      ]
    ]
  ],
  "EditablePKBook": [
    [
      "tests/admin_inlines/models.py",
      [
        "EditablePKBook"
      ]
    ]
  ],
  "Holder": [
    [
      "tests/admin_inlines/models.py",
      [
        "Holder"
      ]
    ]
  ],
  "Inner": [
    [
      "tests/admin_inlines/models.py",
      [
        "Inner"
      ]
    ],
    [
      "tests/null_queries/models.py",
      [
        "Inner"
      ]
    ]
  ],
  "Holder2": [
    [
      "tests/admin_inlines/models.py",
      [
        "Holder2"
      ]
    ]
  ],
  "Inner2": [
    [
      "tests/admin_inlines/models.py",
      [
        "Inner2"
      ]
    ]
  ],
  "Holder3": [
    [
      "tests/admin_inlines/models.py",
      [
        "Holder3"
      ]
    ]
  ],
  "Inner3": [
    [
      "tests/admin_inlines/models.py",
      [
        "Inner3"
      ]
    ]
  ],
  "Holder4": [
    [
      "tests/admin_inlines/models.py",
      [
        "Holder4"
      ]
    ]
  ],
  "Inner4Stacked": [
    [
      "tests/admin_inlines/models.py",
      [
        "Inner4Stacked"
      ]
    ]
  ],
  "Inner4Tabular": [
    [
      "tests/admin_inlines/models.py",
      [
        "Inner4Tabular"
      ]
    ]
  ],
  "OutfitItem": [
    [
      "tests/admin_inlines/models.py",
      [
        "OutfitItem"
      ]
    ]
  ],
  "Fashionista": [
    [
      "tests/admin_inlines/models.py",
      [
        "Fashionista"
      ]
    ]
  ],
  "ShoppingWeakness": [
    [
      "tests/admin_inlines/models.py",
      [
        "ShoppingWeakness"
      ]
    ]
  ],
  "TitleCollection": [
    [
      "tests/admin_inlines/models.py",
      [
        "TitleCollection"
      ]
    ]
  ],
  "Title": [
    [
      "tests/admin_inlines/models.py",
      [
        "Title"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Title"
      ]
    ],
    [
      "tests/model_inheritance/models.py",
      [
        "Title"
      ]
    ]
  ],
  "Poll": [
    [
      "tests/admin_inlines/models.py",
      [
        "Poll"
      ]
    ],
    [
      "tests/cache/models.py",
      [
        "Poll"
      ]
    ],
    [
      "tests/null_queries/models.py",
      [
        "Poll"
      ]
    ],
    [
      "tests/reverse_lookup/models.py",
      [
        "Poll"
      ]
    ]
  ],
  "Question": [
    [
      "tests/admin_inlines/models.py",
      [
        "Question"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Question"
      ]
    ],
    [
      "tests/contenttypes_tests/models.py",
      [
        "Question"
      ]
    ],
    [
      "tests/order_with_respect_to/models.py",
      [
        "Question"
      ]
    ]
  ],
  "Novel": [
    [
      "tests/admin_inlines/models.py",
      [
        "Novel"
      ]
    ]
  ],
  "NovelReadonlyChapter": [
    [
      "tests/admin_inlines/models.py",
      [
        "NovelReadonlyChapter"
      ]
    ]
  ],
  "Chapter": [
    [
      "tests/admin_inlines/models.py",
      [
        "Chapter"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Chapter"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Chapter"
      ]
    ]
  ],
  "FootNote": [
    [
      "tests/admin_inlines/models.py",
      [
        "FootNote"
      ]
    ]
  ],
  "CapoFamiglia": [
    [
      "tests/admin_inlines/models.py",
      [
        "CapoFamiglia"
      ]
    ]
  ],
  "Consigliere": [
    [
      "tests/admin_inlines/models.py",
      [
        "Consigliere"
      ]
    ]
  ],
  "SottoCapo": [
    [
      "tests/admin_inlines/models.py",
      [
        "SottoCapo"
      ]
    ]
  ],
  "ReadOnlyInline": [
    [
      "tests/admin_inlines/models.py",
      [
        "ReadOnlyInline"
      ]
    ]
  ],
  "ParentModelWithCustomPk": [
    [
      "tests/admin_inlines/models.py",
      [
        "ParentModelWithCustomPk"
      ]
    ]
  ],
  "ChildModel1": [
    [
      "tests/admin_inlines/models.py",
      [
        "ChildModel1"
      ]
    ],
    [
      "tests/model_indexes/models.py",
      [
        "ChildModel1"
      ]
    ]
  ],
  "ChildModel2": [
    [
      "tests/admin_inlines/models.py",
      [
        "ChildModel2"
      ]
    ],
    [
      "tests/model_indexes/models.py",
      [
        "ChildModel2"
      ]
    ]
  ],
  "BinaryTree": [
    [
      "tests/admin_inlines/models.py",
      [
        "BinaryTree"
      ]
    ]
  ],
  "LifeForm": [
    [
      "tests/admin_inlines/models.py",
      [
        "LifeForm"
      ]
    ]
  ],
  "ExtraTerrestrial": [
    [
      "tests/admin_inlines/models.py",
      [
        "ExtraTerrestrial"
      ]
    ]
  ],
  "Sighting": [
    [
      "tests/admin_inlines/models.py",
      [
        "Sighting"
      ]
    ]
  ],
  "SomeParentModel": [
    [
      "tests/admin_inlines/models.py",
      [
        "SomeParentModel"
      ]
    ]
  ],
  "SomeChildModel": [
    [
      "tests/admin_inlines/models.py",
      [
        "SomeChildModel"
      ]
    ]
  ],
  "ProfileCollection": [
    [
      "tests/admin_inlines/models.py",
      [
        "ProfileCollection"
      ]
    ]
  ],
  "Profile": [
    [
      "tests/admin_inlines/models.py",
      [
        "Profile"
      ]
    ],
    [
      "tests/admin_widgets/models.py",
      [
        "Profile"
      ]
    ],
    [
      "tests/defer_regress/models.py",
      [
        "Profile"
      ]
    ],
    [
      "tests/get_or_create/models.py",
      [
        "Profile"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "Profile"
      ]
    ],
    [
      "tests/update_only_fields/models.py",
      [
        "Profile"
      ]
    ]
  ],
  "TestTemplates": [
    [
      "tests/admin_inlines/test_templates.py",
      [
        "TestTemplates"
      ]
    ]
  ],
  "MinNumInline": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_custom_min_num",
        "MinNumInline"
      ]
    ]
  ],
  "TestInline": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline"
      ]
    ]
  ],
  "TestInlineMedia": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInlineMedia"
      ]
    ]
  ],
  "TestInlineAdminForm": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInlineAdminForm"
      ]
    ]
  ],
  "TestInlineProtectedOnDelete": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInlineProtectedOnDelete"
      ]
    ]
  ],
  "TestInlinePermissions": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInlinePermissions"
      ]
    ]
  ],
  "SongInlineDefaultOrdering": [
    [
      "tests/admin_ordering/models.py",
      [
        "SongInlineDefaultOrdering"
      ]
    ]
  ],
  "SongInlineNewOrdering": [
    [
      "tests/admin_ordering/models.py",
      [
        "SongInlineNewOrdering"
      ]
    ]
  ],
  "DynOrderingBandAdmin": [
    [
      "tests/admin_ordering/models.py",
      [
        "DynOrderingBandAdmin"
      ]
    ]
  ],
  "MockRequest": [
    [
      "tests/admin_ordering/tests.py",
      [
        "MockRequest"
      ]
    ],
    [
      "tests/generic_inline_admin/tests.py",
      [
        "MockRequest"
      ]
    ],
    [
      "tests/modeladmin/test_actions.py",
      [
        "AdminActionsTests",
        "test_get_actions_respects_permissions",
        "MockRequest"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "MockRequest"
      ]
    ]
  ],
  "MockSuperUser": [
    [
      "tests/admin_ordering/tests.py",
      [
        "MockSuperUser"
      ]
    ],
    [
      "tests/generic_inline_admin/tests.py",
      [
        "MockSuperUser"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "MockSuperUser"
      ]
    ]
  ],
  "TestAdminOrdering": [
    [
      "tests/admin_ordering/tests.py",
      [
        "TestAdminOrdering"
      ]
    ]
  ],
  "TestInlineModelAdminOrdering": [
    [
      "tests/admin_ordering/tests.py",
      [
        "TestInlineModelAdminOrdering"
      ]
    ]
  ],
  "TestRelatedFieldsAdminOrdering": [
    [
      "tests/admin_ordering/tests.py",
      [
        "TestRelatedFieldsAdminOrdering"
      ]
    ]
  ],
  "Traveler": [
    [
      "tests/admin_registration/models.py",
      [
        "Traveler"
      ]
    ]
  ],
  "Location": [
    [
      "tests/admin_registration/models.py",
      [
        "Location"
      ]
    ],
    [
      "tests/admin_utils/models.py",
      [
        "Location"
      ]
    ],
    [
      "tests/defer_regress/models.py",
      [
        "Location"
      ]
    ],
    [
      "tests/delete_regress/models.py",
      [
        "Location"
      ]
    ],
    [
      "tests/gis_tests/relatedapp/models.py",
      [
        "Location"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Location"
      ]
    ]
  ],
  "Place": [
    [
      "tests/admin_registration/models.py",
      [
        "Place"
      ]
    ],
    [
      "tests/bulk_create/models.py",
      [
        "Place"
      ]
    ],
    [
      "tests/generic_relations_regress/models.py",
      [
        "Place"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Place"
      ]
    ],
    [
      "tests/model_formsets_regress/models.py",
      [
        "Place"
      ]
    ],
    [
      "tests/model_inheritance/models.py",
      [
        "Place"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "Place"
      ]
    ],
    [
      "tests/one_to_one/models.py",
      [
        "Place"
      ]
    ]
  ],
  "NameAdmin": [
    [
      "tests/admin_registration/tests.py",
      [
        "NameAdmin"
      ]
    ]
  ],
  "CustomSite": [
    [
      "tests/admin_registration/tests.py",
      [
        "CustomSite"
      ]
    ]
  ],
  "TestRegistration": [
    [
      "tests/admin_registration/tests.py",
      [
        "TestRegistration"
      ]
    ]
  ],
  "TestRegistrationDecorator": [
    [
      "tests/admin_registration/tests.py",
      [
        "TestRegistrationDecorator"
      ]
    ]
  ],
  "Foo": [
    [
      "tests/admin_scripts/another_app_waiting_migration/models.py",
      [
        "Foo"
      ]
    ],
    [
      "tests/admin_scripts/complex_app/models/foo.py",
      [
        "Foo"
      ]
    ],
    [
      "tests/custom_pk/models.py",
      [
        "Foo"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_construction",
        "Foo"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_render_model_with_multiple_inheritance",
        "Foo"
      ]
    ],
    [
      "tests/model_fields/models.py",
      [
        "Foo"
      ]
    ],
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_reverse_foreign_key",
        "Foo"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_referenced_field_without_constraint_rename_inside_atomic_block",
        "Foo"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_referenced_table_without_constraint_rename_inside_atomic_block",
        "Foo"
      ]
    ],
    [
      "tests/string_lookup/models.py",
      [
        "Foo"
      ]
    ],
    [
      "tests/test_runner_apps/tagged/tests_inheritance.py",
      [
        "Foo"
      ]
    ],
    [
      "tests/update/models.py",
      [
        "Foo"
      ]
    ],
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "Foo"
      ]
    ]
  ],
  "ModelRaisingMessages": [
    [
      "tests/admin_scripts/app_raising_messages/models.py",
      [
        "ModelRaisingMessages"
      ]
    ],
    [
      "tests/admin_scripts/app_raising_warning/models.py",
      [
        "ModelRaisingMessages"
      ]
    ]
  ],
  "Bar": [
    [
      "tests/admin_scripts/app_waiting_migration/models.py",
      [
        "Bar"
      ]
    ],
    [
      "tests/admin_scripts/complex_app/models/bar.py",
      [
        "Bar"
      ]
    ],
    [
      "tests/custom_pk/models.py",
      [
        "Bar"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_render_model_with_multiple_inheritance",
        "Bar"
      ]
    ],
    [
      "tests/model_fields/models.py",
      [
        "Bar"
      ]
    ],
    [
      "tests/one_to_one/models.py",
      [
        "Bar"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_referenced_field_without_constraint_rename_inside_atomic_block",
        "Bar"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_referenced_table_without_constraint_rename_inside_atomic_block",
        "Bar"
      ]
    ],
    [
      "tests/string_lookup/models.py",
      [
        "Bar"
      ]
    ],
    [
      "tests/update/models.py",
      [
        "Bar"
      ]
    ]
  ],
  "UserProfile": [
    [
      "tests/admin_scripts/app_with_import/models.py",
      [
        "UserProfile"
      ]
    ],
    [
      "tests/model_formsets_regress/models.py",
      [
        "UserProfile"
      ]
    ],
    [
      "tests/multiple_database/models.py",
      [
        "UserProfile"
      ]
    ],
    [
      "tests/select_related_onetoone/models.py",
      [
        "UserProfile"
      ]
    ]
  ],
  "AdminScriptTestCase": [
    [
      "tests/admin_scripts/tests.py",
      [
        "AdminScriptTestCase"
      ]
    ]
  ],
  "DjangoAdminNoSettings": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminNoSettings"
      ]
    ]
  ],
  "DjangoAdminDefaultSettings": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminDefaultSettings"
      ]
    ]
  ],
  "DjangoAdminFullPathDefaultSettings": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminFullPathDefaultSettings"
      ]
    ]
  ],
  "DjangoAdminMinimalSettings": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminMinimalSettings"
      ]
    ]
  ],
  "DjangoAdminAlternateSettings": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminAlternateSettings"
      ]
    ]
  ],
  "DjangoAdminMultipleSettings": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminMultipleSettings"
      ]
    ]
  ],
  "DjangoAdminSettingsDirectory": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminSettingsDirectory"
      ]
    ]
  ],
  "ManageNoSettings": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageNoSettings"
      ]
    ]
  ],
  "ManageDefaultSettings": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageDefaultSettings"
      ]
    ]
  ],
  "ManageFullPathDefaultSettings": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageFullPathDefaultSettings"
      ]
    ]
  ],
  "ManageMinimalSettings": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageMinimalSettings"
      ]
    ]
  ],
  "ManageAlternateSettings": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageAlternateSettings"
      ]
    ]
  ],
  "ManageMultipleSettings": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageMultipleSettings"
      ]
    ]
  ],
  "ManageSettingsWithSettingsErrors": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageSettingsWithSettingsErrors"
      ]
    ]
  ],
  "ManageCheck": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageCheck"
      ]
    ]
  ],
  "ManageRunserver": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageRunserver"
      ]
    ]
  ],
  "ManageRunserverMigrationWarning": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageRunserverMigrationWarning"
      ]
    ]
  ],
  "ManageRunserverEmptyAllowedHosts": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageRunserverEmptyAllowedHosts"
      ]
    ]
  ],
  "ManageTestserver": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageTestserver"
      ]
    ]
  ],
  "ColorCommand": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ColorCommand"
      ]
    ]
  ],
  "CommandTypes": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes"
      ]
    ]
  ],
  "Discovery": [
    [
      "tests/admin_scripts/tests.py",
      [
        "Discovery"
      ]
    ]
  ],
  "ArgumentOrder": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ArgumentOrder"
      ]
    ]
  ],
  "StartProject": [
    [
      "tests/admin_scripts/tests.py",
      [
        "StartProject"
      ]
    ]
  ],
  "StartApp": [
    [
      "tests/admin_scripts/tests.py",
      [
        "StartApp"
      ]
    ]
  ],
  "DiffSettings": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DiffSettings"
      ]
    ]
  ],
  "Dumpdata": [
    [
      "tests/admin_scripts/tests.py",
      [
        "Dumpdata"
      ]
    ]
  ],
  "MainModule": [
    [
      "tests/admin_scripts/tests.py",
      [
        "MainModule"
      ]
    ]
  ],
  "DjangoAdminSuggestions": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminSuggestions"
      ]
    ]
  ],
  "ArticleInline": [
    [
      "tests/admin_utils/admin.py",
      [
        "ArticleInline"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "ArticleInline"
      ]
    ]
  ],
  "Article": [
    [
      "tests/admin_utils/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/backends/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/basic/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/contenttypes_tests/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/custom_columns/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/custom_lookups/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/custom_methods/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/dates/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/datetimes/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/db_functions/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/field_defaults/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/fixtures/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/fixtures_model_package/models/__init__.py",
      [
        "Article"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/foreign_object/models/article.py",
      [
        "Article"
      ]
    ],
    [
      "tests/forms_tests/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/get_earliest_or_latest/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/get_object_or_404/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/gis_tests/relatedapp/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/indexes/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/introspection/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/lookup/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/m2m_intermediary/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/m2m_multiple/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/many_to_many/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/many_to_one/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/many_to_one_null/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/model_options/models/tablespaces.py",
      [
        "Article"
      ]
    ],
    [
      "tests/model_package/models/article.py",
      [
        "Article"
      ]
    ],
    [
      "tests/model_regress/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/null_fk_ordering/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/or_lookups/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/ordering/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/pagination/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "Article"
      ]
    ],
    [
      "tests/string_lookup/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/swappable_models/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/syndication_tests/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/validation/models.py",
      [
        "Article"
      ]
    ],
    [
      "tests/view_tests/models.py",
      [
        "Article"
      ]
    ]
  ],
  "ArticleProxy": [
    [
      "tests/admin_utils/models.py",
      [
        "ArticleProxy"
      ]
    ]
  ],
  "Guest": [
    [
      "tests/admin_utils/models.py",
      [
        "Guest"
      ]
    ]
  ],
  "EventGuide": [
    [
      "tests/admin_utils/models.py",
      [
        "EventGuide"
      ]
    ]
  ],
  "Vehicle": [
    [
      "tests/admin_utils/models.py",
      [
        "Vehicle"
      ]
    ]
  ],
  "VehicleMixin": [
    [
      "tests/admin_utils/models.py",
      [
        "VehicleMixin"
      ]
    ]
  ],
  "LogEntryTests": [
    [
      "tests/admin_utils/test_logentry.py",
      [
        "LogEntryTests"
      ]
    ]
  ],
  "NestedObjectsTests": [
    [
      "tests/admin_utils/tests.py",
      [
        "NestedObjectsTests"
      ]
    ]
  ],
  "MockModelAdmin": [
    [
      "tests/admin_utils/tests.py",
      [
        "UtilsTests",
        "test_values_from_lookup_field",
        "MockModelAdmin"
      ]
    ],
    [
      "tests/admin_utils/tests.py",
      [
        "UtilsTests",
        "test_label_for_field",
        "MockModelAdmin"
      ]
    ]
  ],
  "UtilsTests": [
    [
      "tests/admin_utils/tests.py",
      [
        "UtilsTests"
      ]
    ],
    [
      "tests/user_commands/tests.py",
      [
        "UtilsTests"
      ]
    ]
  ],
  "ChapterXtra1Admin": [
    [
      "tests/admin_views/admin.py",
      [
        "ChapterXtra1Admin"
      ]
    ]
  ],
  "ArticleForm": [
    [
      "tests/admin_views/admin.py",
      [
        "ArticleForm"
      ]
    ],
    [
      "tests/foreign_object/test_forms.py",
      [
        "FormsTests",
        "ArticleForm"
      ]
    ],
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "ArticleForm"
      ]
    ],
    [
      "tests/forms_tests/views.py",
      [
        "ArticleForm"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "ArticleForm"
      ]
    ],
    [
      "tests/validation/tests.py",
      [
        "ArticleForm"
      ]
    ]
  ],
  "ArticleAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "ArticleAdmin"
      ]
    ]
  ],
  "ArticleAdmin2": [
    [
      "tests/admin_views/admin.py",
      [
        "ArticleAdmin2"
      ]
    ]
  ],
  "RowLevelChangePermissionModelAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "RowLevelChangePermissionModelAdmin"
      ]
    ]
  ],
  "CustomArticleAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "CustomArticleAdmin"
      ]
    ]
  ],
  "ThingAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "ThingAdmin"
      ]
    ]
  ],
  "InquisitionAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "InquisitionAdmin"
      ]
    ]
  ],
  "SketchAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "SketchAdmin"
      ]
    ]
  ],
  "FabricAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "FabricAdmin"
      ]
    ]
  ],
  "BasePersonModelFormSet": [
    [
      "tests/admin_views/admin.py",
      [
        "BasePersonModelFormSet"
      ]
    ]
  ],
  "FooAccountAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "FooAccountAdmin"
      ]
    ]
  ],
  "BarAccountAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "BarAccountAdmin"
      ]
    ]
  ],
  "PersonaAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "PersonaAdmin"
      ]
    ]
  ],
  "SubscriberAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "SubscriberAdmin"
      ]
    ]
  ],
  "ExternalSubscriberAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "ExternalSubscriberAdmin"
      ]
    ]
  ],
  "PodcastAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "PodcastAdmin"
      ]
    ]
  ],
  "VodcastAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "VodcastAdmin"
      ]
    ]
  ],
  "ChildInline": [
    [
      "tests/admin_views/admin.py",
      [
        "ChildInline"
      ]
    ]
  ],
  "EmptyModelAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "EmptyModelAdmin"
      ]
    ]
  ],
  "OldSubscriberAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "OldSubscriberAdmin"
      ]
    ]
  ],
  "PictureInline": [
    [
      "tests/admin_views/admin.py",
      [
        "PictureInline"
      ]
    ]
  ],
  "GalleryAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "GalleryAdmin"
      ]
    ]
  ],
  "PictureAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "PictureAdmin"
      ]
    ]
  ],
  "LanguageAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "LanguageAdmin"
      ]
    ]
  ],
  "RecommendationAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "RecommendationAdmin"
      ]
    ]
  ],
  "WidgetInline": [
    [
      "tests/admin_views/admin.py",
      [
        "WidgetInline"
      ]
    ]
  ],
  "DooHickeyInline": [
    [
      "tests/admin_views/admin.py",
      [
        "DooHickeyInline"
      ]
    ]
  ],
  "GrommetInline": [
    [
      "tests/admin_views/admin.py",
      [
        "GrommetInline"
      ]
    ]
  ],
  "WhatsitInline": [
    [
      "tests/admin_views/admin.py",
      [
        "WhatsitInline"
      ]
    ]
  ],
  "FancyDoodadInline": [
    [
      "tests/admin_views/admin.py",
      [
        "FancyDoodadInline"
      ]
    ]
  ],
  "CategoryAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "CategoryAdmin"
      ]
    ]
  ],
  "CategoryInline": [
    [
      "tests/admin_views/admin.py",
      [
        "CategoryInline"
      ]
    ]
  ],
  "CollectorAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "CollectorAdmin"
      ]
    ]
  ],
  "LinkInline": [
    [
      "tests/admin_views/admin.py",
      [
        "LinkInline"
      ]
    ]
  ],
  "SubPostInline": [
    [
      "tests/admin_views/admin.py",
      [
        "SubPostInline"
      ]
    ]
  ],
  "PrePopulatedPostAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "PrePopulatedPostAdmin"
      ]
    ]
  ],
  "PrePopulatedPostReadOnlyAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "PrePopulatedPostReadOnlyAdmin"
      ]
    ]
  ],
  "PostAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "PostAdmin"
      ]
    ]
  ],
  "FieldOverridePostForm": [
    [
      "tests/admin_views/admin.py",
      [
        "FieldOverridePostForm"
      ]
    ]
  ],
  "FieldOverridePostAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "FieldOverridePostAdmin"
      ]
    ]
  ],
  "CustomChangeList": [
    [
      "tests/admin_views/admin.py",
      [
        "CustomChangeList"
      ]
    ]
  ],
  "GadgetAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "GadgetAdmin"
      ]
    ]
  ],
  "ToppingAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "ToppingAdmin"
      ]
    ]
  ],
  "PizzaAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "PizzaAdmin"
      ]
    ]
  ],
  "StudentAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "StudentAdmin"
      ]
    ]
  ],
  "ReadOnlyPizzaAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "ReadOnlyPizzaAdmin"
      ]
    ]
  ],
  "WorkHourAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "WorkHourAdmin"
      ]
    ]
  ],
  "FoodDeliveryAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "FoodDeliveryAdmin"
      ]
    ]
  ],
  "CoverLetterAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "CoverLetterAdmin"
      ]
    ]
  ],
  "PaperAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "PaperAdmin"
      ]
    ]
  ],
  "ShortMessageAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "ShortMessageAdmin"
      ]
    ]
  ],
  "TelegramAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "TelegramAdmin"
      ]
    ]
  ],
  "StoryForm": [
    [
      "tests/admin_views/admin.py",
      [
        "StoryForm"
      ]
    ]
  ],
  "StoryAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "StoryAdmin"
      ]
    ]
  ],
  "OtherStoryAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "OtherStoryAdmin"
      ]
    ]
  ],
  "ComplexSortedPersonAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "ComplexSortedPersonAdmin"
      ]
    ]
  ],
  "PluggableSearchPersonAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "PluggableSearchPersonAdmin"
      ]
    ]
  ],
  "AlbumAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "AlbumAdmin"
      ]
    ],
    [
      "tests/admin_widgets/widgetadmin.py",
      [
        "AlbumAdmin"
      ]
    ]
  ],
  "QuestionAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "QuestionAdmin"
      ]
    ]
  ],
  "AnswerAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "AnswerAdmin"
      ]
    ]
  ],
  "PrePopulatedPostLargeSlugAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "PrePopulatedPostLargeSlugAdmin"
      ]
    ]
  ],
  "AdminOrderedFieldAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "AdminOrderedFieldAdmin"
      ]
    ]
  ],
  "AdminOrderedModelMethodAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "AdminOrderedModelMethodAdmin"
      ]
    ]
  ],
  "AdminOrderedAdminMethodAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "AdminOrderedAdminMethodAdmin"
      ]
    ]
  ],
  "AdminOrderedCallableAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "AdminOrderedCallableAdmin"
      ]
    ]
  ],
  "ReportAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "ReportAdmin"
      ]
    ]
  ],
  "CustomTemplateBooleanFieldListFilter": [
    [
      "tests/admin_views/admin.py",
      [
        "CustomTemplateBooleanFieldListFilter"
      ]
    ]
  ],
  "CustomTemplateFilterColorAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "CustomTemplateFilterColorAdmin"
      ]
    ]
  ],
  "RelatedPrepopulatedInline1": [
    [
      "tests/admin_views/admin.py",
      [
        "RelatedPrepopulatedInline1"
      ]
    ]
  ],
  "RelatedPrepopulatedInline2": [
    [
      "tests/admin_views/admin.py",
      [
        "RelatedPrepopulatedInline2"
      ]
    ]
  ],
  "RelatedPrepopulatedInline3": [
    [
      "tests/admin_views/admin.py",
      [
        "RelatedPrepopulatedInline3"
      ]
    ]
  ],
  "MainPrepopulatedAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "MainPrepopulatedAdmin"
      ]
    ]
  ],
  "UndeletableObjectAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "UndeletableObjectAdmin"
      ]
    ]
  ],
  "UnchangeableObjectAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "UnchangeableObjectAdmin"
      ]
    ]
  ],
  "AttributeErrorRaisingAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "AttributeErrorRaisingAdmin"
      ]
    ]
  ],
  "CustomManagerAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "CustomManagerAdmin"
      ]
    ]
  ],
  "MessageTestingAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "MessageTestingAdmin"
      ]
    ]
  ],
  "ChoiceList": [
    [
      "tests/admin_views/admin.py",
      [
        "ChoiceList"
      ]
    ]
  ],
  "DependentChildAdminForm": [
    [
      "tests/admin_views/admin.py",
      [
        "DependentChildAdminForm"
      ]
    ]
  ],
  "DependentChildInline": [
    [
      "tests/admin_views/admin.py",
      [
        "DependentChildInline"
      ]
    ]
  ],
  "ParentWithDependentChildrenAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "ParentWithDependentChildrenAdmin"
      ]
    ]
  ],
  "FormWithoutHiddenField": [
    [
      "tests/admin_views/admin.py",
      [
        "FormWithoutHiddenField"
      ]
    ]
  ],
  "FormWithoutVisibleField": [
    [
      "tests/admin_views/admin.py",
      [
        "FormWithoutVisibleField"
      ]
    ]
  ],
  "FormWithVisibleAndHiddenField": [
    [
      "tests/admin_views/admin.py",
      [
        "FormWithVisibleAndHiddenField"
      ]
    ]
  ],
  "EmptyModelVisibleAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "EmptyModelVisibleAdmin"
      ]
    ]
  ],
  "EmptyModelHiddenAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "EmptyModelHiddenAdmin"
      ]
    ]
  ],
  "EmptyModelMixinAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "EmptyModelMixinAdmin"
      ]
    ]
  ],
  "CityInlineAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "CityInlineAdmin"
      ]
    ]
  ],
  "StateAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "StateAdmin"
      ]
    ]
  ],
  "RestaurantInlineAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "RestaurantInlineAdmin"
      ]
    ]
  ],
  "CityAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "CityAdmin"
      ]
    ]
  ],
  "WorkerAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "WorkerAdmin"
      ]
    ]
  ],
  "WorkerInlineAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "WorkerInlineAdmin"
      ]
    ]
  ],
  "RestaurantAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "RestaurantAdmin"
      ]
    ]
  ],
  "FunkyTagAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "FunkyTagAdmin"
      ]
    ]
  ],
  "InlineReferenceInline": [
    [
      "tests/admin_views/admin.py",
      [
        "InlineReferenceInline"
      ]
    ]
  ],
  "InlineRefererAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "InlineRefererAdmin"
      ]
    ]
  ],
  "PlotReadonlyAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "PlotReadonlyAdmin"
      ]
    ]
  ],
  "GetFormsetsArgumentCheckingAdmin": [
    [
      "tests/admin_views/admin.py",
      [
        "GetFormsetsArgumentCheckingAdmin"
      ]
    ]
  ],
  "ArticleAdmin6": [
    [
      "tests/admin_views/admin.py",
      [
        "ArticleAdmin6"
      ]
    ]
  ],
  "ActorAdmin6": [
    [
      "tests/admin_views/admin.py",
      [
        "ActorAdmin6"
      ]
    ]
  ],
  "ChapterAdmin6": [
    [
      "tests/admin_views/admin.py",
      [
        "ChapterAdmin6"
      ]
    ]
  ],
  "ColorAdmin6": [
    [
      "tests/admin_views/admin.py",
      [
        "ColorAdmin6"
      ]
    ]
  ],
  "ArticleAdmin9": [
    [
      "tests/admin_views/admin.py",
      [
        "ArticleAdmin9"
      ]
    ]
  ],
  "ArticleAdmin10": [
    [
      "tests/admin_views/admin.py",
      [
        "ArticleAdmin10"
      ]
    ]
  ],
  "PermissionAdminAuthenticationForm": [
    [
      "tests/admin_views/custom_has_permission_admin.py",
      [
        "PermissionAdminAuthenticationForm"
      ]
    ]
  ],
  "HasPermissionAdmin": [
    [
      "tests/admin_views/custom_has_permission_admin.py",
      [
        "HasPermissionAdmin"
      ]
    ]
  ],
  "Admin2": [
    [
      "tests/admin_views/customadmin.py",
      [
        "Admin2"
      ]
    ]
  ],
  "UserLimitedAdmin": [
    [
      "tests/admin_views/customadmin.py",
      [
        "UserLimitedAdmin"
      ]
    ]
  ],
  "CustomPwdTemplateUserAdmin": [
    [
      "tests/admin_views/customadmin.py",
      [
        "CustomPwdTemplateUserAdmin"
      ]
    ]
  ],
  "CustomAdminAuthenticationForm": [
    [
      "tests/admin_views/forms.py",
      [
        "CustomAdminAuthenticationForm"
      ]
    ]
  ],
  "MediaActionForm": [
    [
      "tests/admin_views/forms.py",
      [
        "MediaActionForm"
      ]
    ]
  ],
  "Section": [
    [
      "tests/admin_views/models.py",
      [
        "Section"
      ]
    ]
  ],
  "Promo": [
    [
      "tests/admin_views/models.py",
      [
        "Promo"
      ]
    ]
  ],
  "ChapterXtra1": [
    [
      "tests/admin_views/models.py",
      [
        "ChapterXtra1"
      ]
    ]
  ],
  "ChapterXtra2": [
    [
      "tests/admin_views/models.py",
      [
        "ChapterXtra2"
      ]
    ]
  ],
  "RowLevelChangePermissionModel": [
    [
      "tests/admin_views/models.py",
      [
        "RowLevelChangePermissionModel"
      ]
    ]
  ],
  "CustomArticle": [
    [
      "tests/admin_views/models.py",
      [
        "CustomArticle"
      ]
    ],
    [
      "tests/sites_framework/models.py",
      [
        "CustomArticle"
      ]
    ]
  ],
  "ModelWithStringPrimaryKey": [
    [
      "tests/admin_views/models.py",
      [
        "ModelWithStringPrimaryKey"
      ]
    ]
  ],
  "Color": [
    [
      "tests/admin_views/models.py",
      [
        "Color"
      ]
    ]
  ],
  "Color2": [
    [
      "tests/admin_views/models.py",
      [
        "Color2"
      ]
    ]
  ],
  "Thing": [
    [
      "tests/admin_views/models.py",
      [
        "Thing"
      ]
    ],
    [
      "tests/get_or_create/models.py",
      [
        "Thing"
      ]
    ],
    [
      "tests/reserved_names/models.py",
      [
        "Thing"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "Thing"
      ]
    ],
    [
      "tests/transaction_hooks/models.py",
      [
        "Thing"
      ]
    ]
  ],
  "Actor": [
    [
      "tests/admin_views/models.py",
      [
        "Actor"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "Actor"
      ]
    ]
  ],
  "Inquisition": [
    [
      "tests/admin_views/models.py",
      [
        "Inquisition"
      ]
    ]
  ],
  "Sketch": [
    [
      "tests/admin_views/models.py",
      [
        "Sketch"
      ]
    ]
  ],
  "Character": [
    [
      "tests/admin_views/models.py",
      [
        "Character"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Character"
      ]
    ],
    [
      "tests/postgres_tests/models.py",
      [
        "Character"
      ]
    ]
  ],
  "StumpJoke": [
    [
      "tests/admin_views/models.py",
      [
        "StumpJoke"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "StumpJoke"
      ]
    ]
  ],
  "Fabric": [
    [
      "tests/admin_views/models.py",
      [
        "Fabric"
      ]
    ]
  ],
  "Persona": [
    [
      "tests/admin_views/models.py",
      [
        "Persona"
      ]
    ]
  ],
  "Account": [
    [
      "tests/admin_views/models.py",
      [
        "Account"
      ]
    ],
    [
      "tests/update_only_fields/models.py",
      [
        "Account"
      ]
    ]
  ],
  "FooAccount": [
    [
      "tests/admin_views/models.py",
      [
        "FooAccount"
      ]
    ]
  ],
  "BarAccount": [
    [
      "tests/admin_views/models.py",
      [
        "BarAccount"
      ]
    ]
  ],
  "Subscriber": [
    [
      "tests/admin_views/models.py",
      [
        "Subscriber"
      ]
    ]
  ],
  "ExternalSubscriber": [
    [
      "tests/admin_views/models.py",
      [
        "ExternalSubscriber"
      ]
    ]
  ],
  "OldSubscriber": [
    [
      "tests/admin_views/models.py",
      [
        "OldSubscriber"
      ]
    ]
  ],
  "Podcast": [
    [
      "tests/admin_views/models.py",
      [
        "Podcast"
      ]
    ]
  ],
  "Vodcast": [
    [
      "tests/admin_views/models.py",
      [
        "Vodcast"
      ]
    ]
  ],
  "EmptyModel": [
    [
      "tests/admin_views/models.py",
      [
        "EmptyModel"
      ]
    ]
  ],
  "Gallery": [
    [
      "tests/admin_views/models.py",
      [
        "Gallery"
      ]
    ]
  ],
  "Picture": [
    [
      "tests/admin_views/models.py",
      [
        "Picture"
      ]
    ]
  ],
  "Language": [
    [
      "tests/admin_views/models.py",
      [
        "Language"
      ]
    ]
  ],
  "TitleTranslation": [
    [
      "tests/admin_views/models.py",
      [
        "TitleTranslation"
      ]
    ]
  ],
  "Recommender": [
    [
      "tests/admin_views/models.py",
      [
        "Recommender"
      ]
    ]
  ],
  "Recommendation": [
    [
      "tests/admin_views/models.py",
      [
        "Recommendation"
      ]
    ]
  ],
  "DooHickey": [
    [
      "tests/admin_views/models.py",
      [
        "DooHickey"
      ]
    ]
  ],
  "Grommet": [
    [
      "tests/admin_views/models.py",
      [
        "Grommet"
      ]
    ]
  ],
  "Whatsit": [
    [
      "tests/admin_views/models.py",
      [
        "Whatsit"
      ]
    ]
  ],
  "Doodad": [
    [
      "tests/admin_views/models.py",
      [
        "Doodad"
      ]
    ],
    [
      "tests/template_tests/test_callables.py",
      [
        "CallableVariablesTests",
        "test_callable",
        "Doodad"
      ]
    ],
    [
      "tests/template_tests/test_callables.py",
      [
        "CallableVariablesTests",
        "test_alters_data",
        "Doodad"
      ]
    ],
    [
      "tests/template_tests/test_callables.py",
      [
        "CallableVariablesTests",
        "test_do_not_call",
        "Doodad"
      ]
    ],
    [
      "tests/template_tests/test_callables.py",
      [
        "CallableVariablesTests",
        "test_do_not_call_and_alters_data",
        "Doodad"
      ]
    ]
  ],
  "FancyDoodad": [
    [
      "tests/admin_views/models.py",
      [
        "FancyDoodad"
      ]
    ]
  ],
  "Category": [
    [
      "tests/admin_views/models.py",
      [
        "Category"
      ]
    ],
    [
      "tests/dates/models.py",
      [
        "Category"
      ]
    ],
    [
      "tests/datetimes/models.py",
      [
        "Category"
      ]
    ],
    [
      "tests/fixtures/models.py",
      [
        "Category"
      ]
    ],
    [
      "tests/generic_inline_admin/models.py",
      [
        "Category"
      ]
    ],
    [
      "tests/m2m_multiple/models.py",
      [
        "Category"
      ]
    ],
    [
      "tests/m2o_recursive/models.py",
      [
        "Category"
      ]
    ],
    [
      "tests/many_to_one/models.py",
      [
        "Category"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Category"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "Category"
      ]
    ],
    [
      "tests/utils_tests/models.py",
      [
        "Category"
      ]
    ]
  ],
  "Link": [
    [
      "tests/admin_views/models.py",
      [
        "Link"
      ]
    ],
    [
      "tests/generic_relations_regress/models.py",
      [
        "Link"
      ]
    ],
    [
      "tests/model_inheritance/models.py",
      [
        "Link"
      ]
    ]
  ],
  "PrePopulatedPost": [
    [
      "tests/admin_views/models.py",
      [
        "PrePopulatedPost"
      ]
    ]
  ],
  "PrePopulatedSubPost": [
    [
      "tests/admin_views/models.py",
      [
        "PrePopulatedSubPost"
      ]
    ]
  ],
  "Post": [
    [
      "tests/admin_views/models.py",
      [
        "Post"
      ]
    ],
    [
      "tests/backends/models.py",
      [
        "Post"
      ]
    ],
    [
      "tests/contenttypes_tests/models.py",
      [
        "Post"
      ]
    ],
    [
      "tests/m2m_regress/models.py",
      [
        "Post"
      ]
    ],
    [
      "tests/model_fields/models.py",
      [
        "Post"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Post"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Post"
      ]
    ],
    [
      "tests/model_inheritance/models.py",
      [
        "Post"
      ]
    ],
    [
      "tests/null_fk/models.py",
      [
        "Post"
      ]
    ],
    [
      "tests/null_fk_ordering/models.py",
      [
        "Post"
      ]
    ],
    [
      "tests/order_with_respect_to/models.py",
      [
        "Post"
      ]
    ],
    [
      "tests/validation/models.py",
      [
        "Post"
      ]
    ]
  ],
  "FieldOverridePost": [
    [
      "tests/admin_views/models.py",
      [
        "FieldOverridePost"
      ]
    ]
  ],
  "Gadget": [
    [
      "tests/admin_views/models.py",
      [
        "Gadget"
      ]
    ]
  ],
  "Villain": [
    [
      "tests/admin_views/models.py",
      [
        "Villain"
      ]
    ]
  ],
  "SuperVillain": [
    [
      "tests/admin_views/models.py",
      [
        "SuperVillain"
      ]
    ]
  ],
  "FunkyTag": [
    [
      "tests/admin_views/models.py",
      [
        "FunkyTag"
      ]
    ]
  ],
  "Plot": [
    [
      "tests/admin_views/models.py",
      [
        "Plot"
      ]
    ]
  ],
  "PlotDetails": [
    [
      "tests/admin_views/models.py",
      [
        "PlotDetails"
      ]
    ]
  ],
  "PlotProxy": [
    [
      "tests/admin_views/models.py",
      [
        "PlotProxy"
      ]
    ]
  ],
  "SecretHideout": [
    [
      "tests/admin_views/models.py",
      [
        "SecretHideout"
      ]
    ]
  ],
  "SuperSecretHideout": [
    [
      "tests/admin_views/models.py",
      [
        "SuperSecretHideout"
      ]
    ]
  ],
  "CyclicOne": [
    [
      "tests/admin_views/models.py",
      [
        "CyclicOne"
      ]
    ]
  ],
  "CyclicTwo": [
    [
      "tests/admin_views/models.py",
      [
        "CyclicTwo"
      ]
    ]
  ],
  "Topping": [
    [
      "tests/admin_views/models.py",
      [
        "Topping"
      ]
    ],
    [
      "tests/select_related/models.py",
      [
        "Topping"
      ]
    ]
  ],
  "Pizza": [
    [
      "tests/admin_views/models.py",
      [
        "Pizza"
      ]
    ],
    [
      "tests/select_related/models.py",
      [
        "Pizza"
      ]
    ]
  ],
  "ReadablePizza": [
    [
      "tests/admin_views/models.py",
      [
        "ReadablePizza"
      ]
    ]
  ],
  "ReadOnlyPizza": [
    [
      "tests/admin_views/models.py",
      [
        "ReadOnlyPizza"
      ]
    ]
  ],
  "WorkHour": [
    [
      "tests/admin_views/models.py",
      [
        "WorkHour"
      ]
    ]
  ],
  "Answer": [
    [
      "tests/admin_views/models.py",
      [
        "Answer"
      ]
    ],
    [
      "tests/contenttypes_tests/models.py",
      [
        "Answer"
      ]
    ],
    [
      "tests/order_with_respect_to/models.py",
      [
        "Answer"
      ]
    ]
  ],
  "Answer2": [
    [
      "tests/admin_views/models.py",
      [
        "Answer2"
      ]
    ]
  ],
  "Reservation": [
    [
      "tests/admin_views/models.py",
      [
        "Reservation"
      ]
    ],
    [
      "tests/filtered_relation/models.py",
      [
        "Reservation"
      ]
    ]
  ],
  "FoodDelivery": [
    [
      "tests/admin_views/models.py",
      [
        "FoodDelivery"
      ]
    ]
  ],
  "CoverLetter": [
    [
      "tests/admin_views/models.py",
      [
        "CoverLetter"
      ]
    ]
  ],
  "Paper": [
    [
      "tests/admin_views/models.py",
      [
        "Paper"
      ]
    ]
  ],
  "ShortMessage": [
    [
      "tests/admin_views/models.py",
      [
        "ShortMessage"
      ]
    ]
  ],
  "Telegram": [
    [
      "tests/admin_views/models.py",
      [
        "Telegram"
      ]
    ]
  ],
  "OtherStory": [
    [
      "tests/admin_views/models.py",
      [
        "OtherStory"
      ]
    ]
  ],
  "ComplexSortedPerson": [
    [
      "tests/admin_views/models.py",
      [
        "ComplexSortedPerson"
      ]
    ]
  ],
  "PluggableSearchPerson": [
    [
      "tests/admin_views/models.py",
      [
        "PluggableSearchPerson"
      ]
    ]
  ],
  "PrePopulatedPostLargeSlug": [
    [
      "tests/admin_views/models.py",
      [
        "PrePopulatedPostLargeSlug"
      ]
    ]
  ],
  "AdminOrderedField": [
    [
      "tests/admin_views/models.py",
      [
        "AdminOrderedField"
      ]
    ]
  ],
  "AdminOrderedModelMethod": [
    [
      "tests/admin_views/models.py",
      [
        "AdminOrderedModelMethod"
      ]
    ]
  ],
  "AdminOrderedAdminMethod": [
    [
      "tests/admin_views/models.py",
      [
        "AdminOrderedAdminMethod"
      ]
    ]
  ],
  "AdminOrderedCallable": [
    [
      "tests/admin_views/models.py",
      [
        "AdminOrderedCallable"
      ]
    ]
  ],
  "Report": [
    [
      "tests/admin_views/models.py",
      [
        "Report"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Report"
      ]
    ]
  ],
  "MainPrepopulated": [
    [
      "tests/admin_views/models.py",
      [
        "MainPrepopulated"
      ]
    ]
  ],
  "RelatedPrepopulated": [
    [
      "tests/admin_views/models.py",
      [
        "RelatedPrepopulated"
      ]
    ]
  ],
  "UndeletableObject": [
    [
      "tests/admin_views/models.py",
      [
        "UndeletableObject"
      ]
    ]
  ],
  "UnchangeableObject": [
    [
      "tests/admin_views/models.py",
      [
        "UnchangeableObject"
      ]
    ]
  ],
  "UserMessenger": [
    [
      "tests/admin_views/models.py",
      [
        "UserMessenger"
      ]
    ]
  ],
  "Simple": [
    [
      "tests/admin_views/models.py",
      [
        "Simple"
      ]
    ]
  ],
  "ParentWithDependentChildren": [
    [
      "tests/admin_views/models.py",
      [
        "ParentWithDependentChildren"
      ]
    ]
  ],
  "DependentChild": [
    [
      "tests/admin_views/models.py",
      [
        "DependentChild"
      ]
    ]
  ],
  "_Manager": [
    [
      "tests/admin_views/models.py",
      [
        "_Manager"
      ]
    ]
  ],
  "FilteredManager": [
    [
      "tests/admin_views/models.py",
      [
        "FilteredManager"
      ]
    ]
  ],
  "EmptyModelVisible": [
    [
      "tests/admin_views/models.py",
      [
        "EmptyModelVisible"
      ]
    ]
  ],
  "EmptyModelHidden": [
    [
      "tests/admin_views/models.py",
      [
        "EmptyModelHidden"
      ]
    ]
  ],
  "EmptyModelMixin": [
    [
      "tests/admin_views/models.py",
      [
        "EmptyModelMixin"
      ]
    ]
  ],
  "Restaurant": [
    [
      "tests/admin_views/models.py",
      [
        "Restaurant"
      ]
    ],
    [
      "tests/bulk_create/models.py",
      [
        "Restaurant"
      ]
    ],
    [
      "tests/generic_relations_regress/models.py",
      [
        "Restaurant"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Restaurant"
      ]
    ],
    [
      "tests/model_formsets_regress/models.py",
      [
        "Restaurant"
      ]
    ],
    [
      "tests/model_inheritance/models.py",
      [
        "Restaurant"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "Restaurant"
      ]
    ],
    [
      "tests/one_to_one/models.py",
      [
        "Restaurant"
      ]
    ]
  ],
  "Worker": [
    [
      "tests/admin_views/models.py",
      [
        "Worker"
      ]
    ],
    [
      "tests/model_inheritance/models.py",
      [
        "Worker"
      ]
    ],
    [
      "tests/model_regress/models.py",
      [
        "Worker"
      ]
    ]
  ],
  "ReferencedByParent": [
    [
      "tests/admin_views/models.py",
      [
        "ReferencedByParent"
      ]
    ]
  ],
  "ParentWithFK": [
    [
      "tests/admin_views/models.py",
      [
        "ParentWithFK"
      ]
    ]
  ],
  "ChildOfReferer": [
    [
      "tests/admin_views/models.py",
      [
        "ChildOfReferer"
      ]
    ]
  ],
  "InlineReferer": [
    [
      "tests/admin_views/models.py",
      [
        "InlineReferer"
      ]
    ]
  ],
  "ReferencedByInline": [
    [
      "tests/admin_views/models.py",
      [
        "ReferencedByInline"
      ]
    ]
  ],
  "InlineReference": [
    [
      "tests/admin_views/models.py",
      [
        "InlineReference"
      ]
    ]
  ],
  "Recipe": [
    [
      "tests/admin_views/models.py",
      [
        "Recipe"
      ]
    ],
    [
      "tests/m2m_through/models.py",
      [
        "Recipe"
      ]
    ]
  ],
  "Ingredient": [
    [
      "tests/admin_views/models.py",
      [
        "Ingredient"
      ]
    ],
    [
      "tests/m2m_through/models.py",
      [
        "Ingredient"
      ]
    ]
  ],
  "RecipeIngredient": [
    [
      "tests/admin_views/models.py",
      [
        "RecipeIngredient"
      ]
    ],
    [
      "tests/m2m_through/models.py",
      [
        "RecipeIngredient"
      ]
    ]
  ],
  "NotReferenced": [
    [
      "tests/admin_views/models.py",
      [
        "NotReferenced"
      ]
    ]
  ],
  "ExplicitlyProvidedPK": [
    [
      "tests/admin_views/models.py",
      [
        "ExplicitlyProvidedPK"
      ]
    ]
  ],
  "ImplicitlyGeneratedPK": [
    [
      "tests/admin_views/models.py",
      [
        "ImplicitlyGeneratedPK"
      ]
    ]
  ],
  "ReferencedByGenRel": [
    [
      "tests/admin_views/models.py",
      [
        "ReferencedByGenRel"
      ]
    ]
  ],
  "GenRelReference": [
    [
      "tests/admin_views/models.py",
      [
        "GenRelReference"
      ]
    ]
  ],
  "ParentWithUUIDPK": [
    [
      "tests/admin_views/models.py",
      [
        "ParentWithUUIDPK"
      ]
    ]
  ],
  "RelatedWithUUIDPKModel": [
    [
      "tests/admin_views/models.py",
      [
        "RelatedWithUUIDPKModel"
      ]
    ]
  ],
  "Authorship": [
    [
      "tests/admin_views/models.py",
      [
        "Authorship"
      ]
    ]
  ],
  "UserProxy": [
    [
      "tests/admin_views/models.py",
      [
        "UserProxy"
      ]
    ],
    [
      "tests/auth_tests/models/proxy.py",
      [
        "UserProxy"
      ]
    ],
    [
      "tests/proxy_models/models.py",
      [
        "UserProxy"
      ]
    ]
  ],
  "AdminActionsTest": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest"
      ]
    ]
  ],
  "AdminActionsPermissionTests": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsPermissionTests"
      ]
    ]
  ],
  "SiteEachContextTest": [
    [
      "tests/admin_views/test_adminsite.py",
      [
        "SiteEachContextTest"
      ]
    ]
  ],
  "SiteActionsTests": [
    [
      "tests/admin_views/test_adminsite.py",
      [
        "SiteActionsTests"
      ]
    ]
  ],
  "AuthorshipInline": [
    [
      "tests/admin_views/test_autocomplete_view.py",
      [
        "AuthorshipInline"
      ]
    ]
  ],
  "AutocompleteJsonViewTests": [
    [
      "tests/admin_views/test_autocomplete_view.py",
      [
        "AutocompleteJsonViewTests"
      ]
    ]
  ],
  "AdminAuthenticationFormTests": [
    [
      "tests/admin_views/test_forms.py",
      [
        "AdminAuthenticationFormTests"
      ]
    ]
  ],
  "Router": [
    [
      "tests/admin_views/test_multidb.py",
      [
        "Router"
      ]
    ],
    [
      "tests/auth_tests/test_admin_multidb.py",
      [
        "Router"
      ]
    ]
  ],
  "MultiDatabaseTests": [
    [
      "tests/admin_views/test_multidb.py",
      [
        "MultiDatabaseTests"
      ]
    ],
    [
      "tests/auth_tests/test_admin_multidb.py",
      [
        "MultiDatabaseTests"
      ]
    ]
  ],
  "AdminTemplateTagsTest": [
    [
      "tests/admin_views/test_templatetags.py",
      [
        "AdminTemplateTagsTest"
      ]
    ]
  ],
  "AdminFieldExtractionMixin": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminFieldExtractionMixin"
      ]
    ]
  ],
  "AdminViewBasicTestCase": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTestCase"
      ]
    ]
  ],
  "AdminViewBasicTest": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest"
      ]
    ]
  ],
  "AdminCustomTemplateTests": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminCustomTemplateTests"
      ]
    ]
  ],
  "AdminViewFormUrlTest": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewFormUrlTest"
      ]
    ]
  ],
  "AdminJavaScriptTest": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminJavaScriptTest"
      ]
    ]
  ],
  "SaveAsTests": [
    [
      "tests/admin_views/tests.py",
      [
        "SaveAsTests"
      ]
    ]
  ],
  "CustomModelAdminTest": [
    [
      "tests/admin_views/tests.py",
      [
        "CustomModelAdminTest"
      ]
    ]
  ],
  "AdminViewPermissionsTest": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest"
      ]
    ]
  ],
  "AdminViewProxyModelPermissionsTests": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewProxyModelPermissionsTests"
      ]
    ]
  ],
  "AdminViewsNoUrlTest": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewsNoUrlTest"
      ]
    ]
  ],
  "AdminViewDeletedObjectsTest": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewDeletedObjectsTest"
      ]
    ]
  ],
  "TestGenericRelations": [
    [
      "tests/admin_views/tests.py",
      [
        "TestGenericRelations"
      ]
    ]
  ],
  "AdminViewStringPrimaryKeyTest": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewStringPrimaryKeyTest"
      ]
    ]
  ],
  "SecureViewTests": [
    [
      "tests/admin_views/tests.py",
      [
        "SecureViewTests"
      ]
    ]
  ],
  "AdminViewUnicodeTest": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewUnicodeTest"
      ]
    ]
  ],
  "AdminViewListEditable": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewListEditable"
      ]
    ]
  ],
  "AdminSearchTest": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminSearchTest"
      ]
    ]
  ],
  "AdminInheritedInlinesTest": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminInheritedInlinesTest"
      ]
    ]
  ],
  "TestCustomChangeList": [
    [
      "tests/admin_views/tests.py",
      [
        "TestCustomChangeList"
      ]
    ]
  ],
  "TestInlineNotEditable": [
    [
      "tests/admin_views/tests.py",
      [
        "TestInlineNotEditable"
      ]
    ]
  ],
  "AdminCustomQuerysetTest": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminCustomQuerysetTest"
      ]
    ]
  ],
  "AdminInlineFileUploadTest": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminInlineFileUploadTest"
      ]
    ]
  ],
  "AdminInlineTests": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminInlineTests"
      ]
    ]
  ],
  "NeverCacheTests": [
    [
      "tests/admin_views/tests.py",
      [
        "NeverCacheTests"
      ]
    ]
  ],
  "PrePopulatedTest": [
    [
      "tests/admin_views/tests.py",
      [
        "PrePopulatedTest"
      ]
    ]
  ],
  "ReadonlyTest": [
    [
      "tests/admin_views/tests.py",
      [
        "ReadonlyTest"
      ]
    ]
  ],
  "LimitChoicesToInAdminTest": [
    [
      "tests/admin_views/tests.py",
      [
        "LimitChoicesToInAdminTest"
      ]
    ]
  ],
  "RawIdFieldsTest": [
    [
      "tests/admin_views/tests.py",
      [
        "RawIdFieldsTest"
      ]
    ]
  ],
  "UserAdminTest": [
    [
      "tests/admin_views/tests.py",
      [
        "UserAdminTest"
      ]
    ]
  ],
  "GroupAdminTest": [
    [
      "tests/admin_views/tests.py",
      [
        "GroupAdminTest"
      ]
    ]
  ],
  "CSSTest": [
    [
      "tests/admin_views/tests.py",
      [
        "CSSTest"
      ]
    ]
  ],
  "AdminDocsTest": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminDocsTest"
      ]
    ]
  ],
  "ValidXHTMLTests": [
    [
      "tests/admin_views/tests.py",
      [
        "ValidXHTMLTests"
      ]
    ]
  ],
  "AdminCustomSaveRelatedTests": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminCustomSaveRelatedTests"
      ]
    ]
  ],
  "AdminViewLogoutTests": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewLogoutTests"
      ]
    ]
  ],
  "AdminUserMessageTest": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminUserMessageTest"
      ]
    ]
  ],
  "AdminKeepChangeListFiltersTests": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminKeepChangeListFiltersTests"
      ]
    ]
  ],
  "NamespacedAdminKeepChangeListFiltersTests": [
    [
      "tests/admin_views/tests.py",
      [
        "NamespacedAdminKeepChangeListFiltersTests"
      ]
    ]
  ],
  "TestLabelVisibility": [
    [
      "tests/admin_views/tests.py",
      [
        "TestLabelVisibility"
      ]
    ]
  ],
  "AdminViewOnSiteTests": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewOnSiteTests"
      ]
    ]
  ],
  "InlineAdminViewOnSiteTest": [
    [
      "tests/admin_views/tests.py",
      [
        "InlineAdminViewOnSiteTest"
      ]
    ]
  ],
  "GetFormsetsWithInlinesArgumentTest": [
    [
      "tests/admin_views/tests.py",
      [
        "GetFormsetsWithInlinesArgumentTest"
      ]
    ]
  ],
  "MyFileField": [
    [
      "tests/admin_widgets/models.py",
      [
        "MyFileField"
      ]
    ]
  ],
  "Member": [
    [
      "tests/admin_widgets/models.py",
      [
        "Member"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Member"
      ]
    ]
  ],
  "HiddenInventoryManager": [
    [
      "tests/admin_widgets/models.py",
      [
        "HiddenInventoryManager"
      ]
    ]
  ],
  "Inventory": [
    [
      "tests/admin_widgets/models.py",
      [
        "Inventory"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Inventory"
      ]
    ]
  ],
  "CarTire": [
    [
      "tests/admin_widgets/models.py",
      [
        "CarTire"
      ]
    ]
  ],
  "Honeycomb": [
    [
      "tests/admin_widgets/models.py",
      [
        "Honeycomb"
      ]
    ]
  ],
  "Bee": [
    [
      "tests/admin_widgets/models.py",
      [
        "Bee"
      ]
    ]
  ],
  "Individual": [
    [
      "tests/admin_widgets/models.py",
      [
        "Individual"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Individual"
      ]
    ]
  ],
  "Advisor": [
    [
      "tests/admin_widgets/models.py",
      [
        "Advisor"
      ]
    ]
  ],
  "Student": [
    [
      "tests/admin_widgets/models.py",
      [
        "Student"
      ]
    ],
    [
      "tests/many_to_one/models.py",
      [
        "Student"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Student"
      ]
    ],
    [
      "tests/model_inheritance/models.py",
      [
        "Student"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Student"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_creation_with_db_table_double_quotes",
        "Student"
      ]
    ],
    [
      "tests/select_related_regress/models.py",
      [
        "Student"
      ]
    ]
  ],
  "School": [
    [
      "tests/admin_widgets/models.py",
      [
        "School"
      ]
    ],
    [
      "tests/inline_formsets/models.py",
      [
        "School"
      ]
    ],
    [
      "tests/many_to_one/models.py",
      [
        "School"
      ]
    ],
    [
      "tests/one_to_one/models.py",
      [
        "School"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "School"
      ]
    ]
  ],
  "AlbumForm": [
    [
      "tests/admin_widgets/test_autocomplete_widget.py",
      [
        "AlbumForm"
      ]
    ]
  ],
  "NotRequiredBandForm": [
    [
      "tests/admin_widgets/test_autocomplete_widget.py",
      [
        "NotRequiredBandForm"
      ]
    ]
  ],
  "RequiredBandForm": [
    [
      "tests/admin_widgets/test_autocomplete_widget.py",
      [
        "RequiredBandForm"
      ]
    ]
  ],
  "AutocompleteMixinTests": [
    [
      "tests/admin_widgets/test_autocomplete_widget.py",
      [
        "AutocompleteMixinTests"
      ]
    ]
  ],
  "AdminFormfieldForDBFieldTests": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFormfieldForDBFieldTests"
      ]
    ]
  ],
  "AdminFormfieldForDBFieldWithRequestTests": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFormfieldForDBFieldWithRequestTests"
      ]
    ]
  ],
  "AdminForeignKeyWidgetChangeList": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminForeignKeyWidgetChangeList"
      ]
    ]
  ],
  "AdminForeignKeyRawIdWidget": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminForeignKeyRawIdWidget"
      ]
    ]
  ],
  "FilteredSelectMultipleWidgetTest": [
    [
      "tests/admin_widgets/tests.py",
      [
        "FilteredSelectMultipleWidgetTest"
      ]
    ]
  ],
  "AdminDateWidgetTest": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminDateWidgetTest"
      ]
    ]
  ],
  "AdminTimeWidgetTest": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminTimeWidgetTest"
      ]
    ]
  ],
  "AdminSplitDateTimeWidgetTest": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminSplitDateTimeWidgetTest"
      ]
    ]
  ],
  "AdminURLWidgetTest": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminURLWidgetTest"
      ]
    ]
  ],
  "AdminUUIDWidgetTests": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminUUIDWidgetTests"
      ]
    ]
  ],
  "AdminFileWidgetTests": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFileWidgetTests"
      ]
    ]
  ],
  "ForeignKeyRawIdWidgetTest": [
    [
      "tests/admin_widgets/tests.py",
      [
        "ForeignKeyRawIdWidgetTest"
      ]
    ]
  ],
  "ManyToManyRawIdWidgetTest": [
    [
      "tests/admin_widgets/tests.py",
      [
        "ManyToManyRawIdWidgetTest"
      ]
    ]
  ],
  "RelatedFieldWidgetWrapperTests": [
    [
      "tests/admin_widgets/tests.py",
      [
        "RelatedFieldWidgetWrapperTests"
      ]
    ]
  ],
  "AdminWidgetSeleniumTestCase": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminWidgetSeleniumTestCase"
      ]
    ]
  ],
  "DateTimePickerSeleniumTests": [
    [
      "tests/admin_widgets/tests.py",
      [
        "DateTimePickerSeleniumTests"
      ]
    ]
  ],
  "DateTimePickerShortcutsSeleniumTests": [
    [
      "tests/admin_widgets/tests.py",
      [
        "DateTimePickerShortcutsSeleniumTests"
      ]
    ]
  ],
  "DateTimePickerAltTimezoneSeleniumTests": [
    [
      "tests/admin_widgets/tests.py",
      [
        "DateTimePickerAltTimezoneSeleniumTests"
      ]
    ]
  ],
  "HorizontalVerticalFilterSeleniumTests": [
    [
      "tests/admin_widgets/tests.py",
      [
        "HorizontalVerticalFilterSeleniumTests"
      ]
    ]
  ],
  "AdminRawIdWidgetSeleniumTests": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminRawIdWidgetSeleniumTests"
      ]
    ]
  ],
  "RelatedFieldWidgetSeleniumTests": [
    [
      "tests/admin_widgets/tests.py",
      [
        "RelatedFieldWidgetSeleniumTests"
      ]
    ]
  ],
  "WidgetAdmin": [
    [
      "tests/admin_widgets/widgetadmin.py",
      [
        "WidgetAdmin"
      ]
    ]
  ],
  "CarTireAdmin": [
    [
      "tests/admin_widgets/widgetadmin.py",
      [
        "CarTireAdmin"
      ]
    ]
  ],
  "SchoolAdmin": [
    [
      "tests/admin_widgets/widgetadmin.py",
      [
        "SchoolAdmin"
      ]
    ]
  ],
  "Publisher": [
    [
      "tests/aggregation/models.py",
      [
        "Publisher"
      ]
    ],
    [
      "tests/aggregation_regress/models.py",
      [
        "Publisher"
      ]
    ],
    [
      "tests/annotations/models.py",
      [
        "Publisher"
      ]
    ],
    [
      "tests/get_or_create/models.py",
      [
        "Publisher"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_dangling_references_throw_error",
        "Publisher"
      ]
    ]
  ],
  "Store": [
    [
      "tests/aggregation/models.py",
      [
        "Store"
      ]
    ],
    [
      "tests/aggregation_regress/models.py",
      [
        "Store"
      ]
    ],
    [
      "tests/annotations/models.py",
      [
        "Store"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "Store"
      ]
    ],
    [
      "tests/model_options/models/default_related_name.py",
      [
        "Store"
      ]
    ]
  ],
  "FilteredAggregateTests": [
    [
      "tests/aggregation/test_filter_argument.py",
      [
        "FilteredAggregateTests"
      ]
    ]
  ],
  "MySum": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_add_implementation",
        "MySum"
      ]
    ]
  ],
  "AggregateTestCase": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase"
      ]
    ]
  ],
  "ItemTag": [
    [
      "tests/aggregation_regress/models.py",
      [
        "ItemTag"
      ]
    ]
  ],
  "Entries": [
    [
      "tests/aggregation_regress/models.py",
      [
        "Entries"
      ]
    ]
  ],
  "Clues": [
    [
      "tests/aggregation_regress/models.py",
      [
        "Clues"
      ]
    ]
  ],
  "WithManualPK": [
    [
      "tests/aggregation_regress/models.py",
      [
        "WithManualPK"
      ]
    ]
  ],
  "HardbackBook": [
    [
      "tests/aggregation_regress/models.py",
      [
        "HardbackBook"
      ]
    ]
  ],
  "Alfa": [
    [
      "tests/aggregation_regress/models.py",
      [
        "Alfa"
      ]
    ]
  ],
  "Bravo": [
    [
      "tests/aggregation_regress/models.py",
      [
        "Bravo"
      ]
    ]
  ],
  "Charlie": [
    [
      "tests/aggregation_regress/models.py",
      [
        "Charlie"
      ]
    ]
  ],
  "SelfRefFK": [
    [
      "tests/aggregation_regress/models.py",
      [
        "SelfRefFK"
      ]
    ]
  ],
  "AggregationTests": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests"
      ]
    ]
  ],
  "JoinPromotionTests": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "JoinPromotionTests"
      ]
    ]
  ],
  "SelfReferentialFKTests": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "SelfReferentialFKTests"
      ]
    ]
  ],
  "DepartmentStore": [
    [
      "tests/annotations/models.py",
      [
        "DepartmentStore"
      ]
    ]
  ],
  "Ticket": [
    [
      "tests/annotations/models.py",
      [
        "Ticket"
      ]
    ]
  ],
  "NonAggregateAnnotationTestCase": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase"
      ]
    ]
  ],
  "NotInstalledModel": [
    [
      "tests/app_loading/not_installed/models.py",
      [
        "NotInstalledModel"
      ]
    ]
  ],
  "RelatedModel": [
    [
      "tests/app_loading/not_installed/models.py",
      [
        "RelatedModel"
      ]
    ],
    [
      "tests/custom_managers/models.py",
      [
        "RelatedModel"
      ]
    ],
    [
      "tests/managers_regress/models.py",
      [
        "RelatedModel"
      ]
    ],
    [
      "tests/one_to_one/models.py",
      [
        "RelatedModel"
      ]
    ]
  ],
  "M2MRelatedModel": [
    [
      "tests/app_loading/not_installed/models.py",
      [
        "M2MRelatedModel"
      ]
    ]
  ],
  "EggLoadingTest": [
    [
      "tests/app_loading/tests.py",
      [
        "EggLoadingTest"
      ]
    ]
  ],
  "GetModelsTest": [
    [
      "tests/app_loading/tests.py",
      [
        "GetModelsTest"
      ]
    ]
  ],
  "MyAuth": [
    [
      "tests/apps/apps.py",
      [
        "MyAuth"
      ]
    ]
  ],
  "BadConfig": [
    [
      "tests/apps/apps.py",
      [
        "BadConfig"
      ]
    ]
  ],
  "NotAConfig": [
    [
      "tests/apps/apps.py",
      [
        "NotAConfig"
      ]
    ]
  ],
  "NoSuchApp": [
    [
      "tests/apps/apps.py",
      [
        "NoSuchApp"
      ]
    ]
  ],
  "PlainAppsConfig": [
    [
      "tests/apps/apps.py",
      [
        "PlainAppsConfig"
      ]
    ]
  ],
  "RelabeledAppsConfig": [
    [
      "tests/apps/apps.py",
      [
        "RelabeledAppsConfig"
      ]
    ]
  ],
  "CustomConfig": [
    [
      "tests/apps/default_config_app/apps.py",
      [
        "CustomConfig"
      ]
    ]
  ],
  "TotallyNormal": [
    [
      "tests/apps/models.py",
      [
        "TotallyNormal"
      ]
    ]
  ],
  "SoAlternative": [
    [
      "tests/apps/models.py",
      [
        "SoAlternative"
      ]
    ]
  ],
  "NSAppConfig": [
    [
      "tests/apps/namespace_package_base/nsapp/apps.py",
      [
        "NSAppConfig"
      ]
    ]
  ],
  "LazyA": [
    [
      "tests/apps/tests.py",
      [
        "AppsTests",
        "test_lazy_model_operation",
        "LazyA"
      ]
    ]
  ],
  "LazyB": [
    [
      "tests/apps/tests.py",
      [
        "AppsTests",
        "test_lazy_model_operation",
        "LazyB"
      ]
    ]
  ],
  "LazyC": [
    [
      "tests/apps/tests.py",
      [
        "AppsTests",
        "test_lazy_model_operation",
        "LazyC"
      ]
    ]
  ],
  "AppsTests": [
    [
      "tests/apps/tests.py",
      [
        "AppsTests"
      ]
    ]
  ],
  "Stub": [
    [
      "tests/apps/tests.py",
      [
        "Stub"
      ]
    ],
    [
      "tests/servers/test_basehttp.py",
      [
        "Stub"
      ]
    ]
  ],
  "AppConfigTests": [
    [
      "tests/apps/tests.py",
      [
        "AppConfigTests"
      ]
    ]
  ],
  "NamespacePackageAppTests": [
    [
      "tests/apps/tests.py",
      [
        "NamespacePackageAppTests"
      ]
    ]
  ],
  "PasswordResetConfirmClient": [
    [
      "tests/auth_tests/client.py",
      [
        "PasswordResetConfirmClient"
      ]
    ]
  ],
  "CustomPermissionsUserManager": [
    [
      "tests/auth_tests/models/custom_permissions.py",
      [
        "CustomPermissionsUserManager"
      ]
    ]
  ],
  "CustomUserManager": [
    [
      "tests/auth_tests/models/custom_user.py",
      [
        "CustomUserManager"
      ]
    ]
  ],
  "CustomUser": [
    [
      "tests/auth_tests/models/custom_user.py",
      [
        "CustomUser"
      ]
    ],
    [
      "tests/test_client_regress/models.py",
      [
        "CustomUser"
      ]
    ]
  ],
  "RemoveGroupsAndPermissions": [
    [
      "tests/auth_tests/models/custom_user.py",
      [
        "RemoveGroupsAndPermissions"
      ]
    ]
  ],
  "CustomUserWithoutIsActiveField": [
    [
      "tests/auth_tests/models/custom_user.py",
      [
        "CustomUserWithoutIsActiveField"
      ]
    ]
  ],
  "CustomUserNonUniqueUsername": [
    [
      "tests/auth_tests/models/invalid_models.py",
      [
        "CustomUserNonUniqueUsername"
      ]
    ]
  ],
  "IsActiveTestUser1": [
    [
      "tests/auth_tests/models/is_active.py",
      [
        "IsActiveTestUser1"
      ]
    ]
  ],
  "MinimalUser": [
    [
      "tests/auth_tests/models/minimal.py",
      [
        "MinimalUser"
      ]
    ]
  ],
  "NoPasswordUser": [
    [
      "tests/auth_tests/models/no_password.py",
      [
        "NoPasswordUser"
      ]
    ]
  ],
  "Concrete": [
    [
      "tests/auth_tests/models/proxy.py",
      [
        "Concrete"
      ]
    ]
  ],
  "Proxy": [
    [
      "tests/auth_tests/models/proxy.py",
      [
        "Proxy"
      ]
    ],
    [
      "tests/defer_regress/models.py",
      [
        "Proxy"
      ]
    ]
  ],
  "CustomEmailFieldUserManager": [
    [
      "tests/auth_tests/models/with_custom_email_field.py",
      [
        "CustomEmailFieldUserManager"
      ]
    ]
  ],
  "CustomEmailField": [
    [
      "tests/auth_tests/models/with_custom_email_field.py",
      [
        "CustomEmailField"
      ]
    ]
  ],
  "Email": [
    [
      "tests/auth_tests/models/with_foreign_key.py",
      [
        "Email"
      ]
    ],
    [
      "tests/delete_regress/models.py",
      [
        "Email"
      ]
    ]
  ],
  "CustomUserWithFKManager": [
    [
      "tests/auth_tests/models/with_foreign_key.py",
      [
        "CustomUserWithFKManager"
      ]
    ]
  ],
  "CustomUserWithFK": [
    [
      "tests/auth_tests/models/with_foreign_key.py",
      [
        "CustomUserWithFK"
      ]
    ]
  ],
  "IntegerUsernameUserManager": [
    [
      "tests/auth_tests/models/with_integer_username.py",
      [
        "IntegerUsernameUserManager"
      ]
    ]
  ],
  "IntegerUsernameUser": [
    [
      "tests/auth_tests/models/with_integer_username.py",
      [
        "IntegerUsernameUser"
      ]
    ]
  ],
  "UserWithDisabledLastLoginField": [
    [
      "tests/auth_tests/models/with_last_login_attr.py",
      [
        "UserWithDisabledLastLoginField"
      ]
    ]
  ],
  "CountingMD5PasswordHasher": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "CountingMD5PasswordHasher"
      ]
    ]
  ],
  "BaseModelBackendTest": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "BaseModelBackendTest"
      ]
    ]
  ],
  "ModelBackendTest": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "ModelBackendTest"
      ]
    ]
  ],
  "ExtensionUserModelBackendTest": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "ExtensionUserModelBackendTest"
      ]
    ]
  ],
  "CustomPermissionsUserModelBackendTest": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "CustomPermissionsUserModelBackendTest"
      ]
    ]
  ],
  "CustomUserModelBackendAuthenticateTest": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "CustomUserModelBackendAuthenticateTest"
      ]
    ]
  ],
  "UUIDUserTests": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "UUIDUserTests"
      ]
    ],
    [
      "tests/auth_tests/test_views.py",
      [
        "UUIDUserTests"
      ]
    ]
  ],
  "TestObj": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "TestObj"
      ]
    ],
    [
      "tests/gis_tests/test_data.py",
      [
        "TestObj"
      ]
    ],
    [
      "tests/template_tests/utils.py",
      [
        "TestObj"
      ]
    ]
  ],
  "SimpleRowlevelBackend": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "SimpleRowlevelBackend"
      ]
    ]
  ],
  "RowlevelBackendTest": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "RowlevelBackendTest"
      ]
    ]
  ],
  "AnonymousUserBackendTest": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "AnonymousUserBackendTest"
      ]
    ]
  ],
  "NoBackendsTest": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "NoBackendsTest"
      ]
    ]
  ],
  "InActiveUserBackendTest": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "InActiveUserBackendTest"
      ]
    ]
  ],
  "PermissionDeniedBackend": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "PermissionDeniedBackend"
      ]
    ]
  ],
  "PermissionDeniedBackendTest": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "PermissionDeniedBackendTest"
      ]
    ]
  ],
  "NewModelBackend": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "NewModelBackend"
      ]
    ]
  ],
  "ChangedBackendSettingsTest": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "ChangedBackendSettingsTest"
      ]
    ]
  ],
  "TypeErrorBackend": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "TypeErrorBackend"
      ]
    ]
  ],
  "SkippedBackend": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "SkippedBackend"
      ]
    ]
  ],
  "AuthenticateTests": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "AuthenticateTests"
      ]
    ]
  ],
  "ImproperlyConfiguredUserModelTest": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "ImproperlyConfiguredUserModelTest"
      ]
    ]
  ],
  "ImportedModelBackend": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "ImportedModelBackend"
      ]
    ]
  ],
  "CustomModelBackend": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "CustomModelBackend"
      ]
    ]
  ],
  "OtherModelBackend": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "OtherModelBackend"
      ]
    ]
  ],
  "ImportedBackendTests": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "ImportedBackendTests"
      ]
    ]
  ],
  "SelectingBackendTests": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "SelectingBackendTests"
      ]
    ]
  ],
  "AllowAllUsersModelBackendTest": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "AllowAllUsersModelBackendTest"
      ]
    ]
  ],
  "BasicTestCase": [
    [
      "tests/auth_tests/test_basic.py",
      [
        "BasicTestCase"
      ]
    ]
  ],
  "TestGetUser": [
    [
      "tests/auth_tests/test_basic.py",
      [
        "TestGetUser"
      ]
    ]
  ],
  "BadUser": [
    [
      "tests/auth_tests/test_checks.py",
      [
        "UserModelChecksTests",
        "test_is_anonymous_authenticated_methods",
        "BadUser"
      ]
    ]
  ],
  "UserModelChecksTests": [
    [
      "tests/auth_tests/test_checks.py",
      [
        "UserModelChecksTests"
      ]
    ]
  ],
  "ModelsPermissionsChecksTests": [
    [
      "tests/auth_tests/test_checks.py",
      [
        "ModelsPermissionsChecksTests"
      ]
    ]
  ],
  "MockUser": [
    [
      "tests/auth_tests/test_context_processors.py",
      [
        "MockUser"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminPermissionTests",
        "MockUser"
      ]
    ]
  ],
  "EQLimiterObject": [
    [
      "tests/auth_tests/test_context_processors.py",
      [
        "PermWrapperTests",
        "EQLimiterObject"
      ]
    ]
  ],
  "PermWrapperTests": [
    [
      "tests/auth_tests/test_context_processors.py",
      [
        "PermWrapperTests"
      ]
    ]
  ],
  "AuthContextProcessorTests": [
    [
      "tests/auth_tests/test_context_processors.py",
      [
        "AuthContextProcessorTests"
      ]
    ]
  ],
  "LoginRequiredTestCase": [
    [
      "tests/auth_tests/test_decorators.py",
      [
        "LoginRequiredTestCase"
      ]
    ]
  ],
  "PermissionsRequiredDecoratorTest": [
    [
      "tests/auth_tests/test_decorators.py",
      [
        "PermissionsRequiredDecoratorTest"
      ]
    ]
  ],
  "UserCreationFormTest": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserCreationFormTest"
      ]
    ]
  ],
  "AuthenticationFormWithInactiveUsersOkay": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "AuthenticationFormTest",
        "test_custom_login_allowed_policy",
        "AuthenticationFormWithInactiveUsersOkay"
      ]
    ]
  ],
  "PickyAuthenticationForm": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "AuthenticationFormTest",
        "test_custom_login_allowed_policy",
        "PickyAuthenticationForm"
      ]
    ]
  ],
  "AuthenticationFormTest": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "AuthenticationFormTest"
      ]
    ]
  ],
  "SetPasswordFormTest": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "SetPasswordFormTest"
      ]
    ]
  ],
  "PasswordChangeFormTest": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "PasswordChangeFormTest"
      ]
    ]
  ],
  "UserChangeFormTest": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserChangeFormTest"
      ]
    ]
  ],
  "CustomEmailPasswordResetForm": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "PasswordResetFormTest",
        "test_custom_email_constructor",
        "CustomEmailPasswordResetForm"
      ]
    ]
  ],
  "PasswordResetFormTest": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "PasswordResetFormTest"
      ]
    ]
  ],
  "ReadOnlyPasswordHashTest": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "ReadOnlyPasswordHashTest"
      ]
    ]
  ],
  "AdminPasswordChangeFormTest": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "AdminPasswordChangeFormTest"
      ]
    ]
  ],
  "ModWsgiHandlerTestCase": [
    [
      "tests/auth_tests/test_handlers.py",
      [
        "ModWsgiHandlerTestCase"
      ]
    ]
  ],
  "PBKDF2SingleIterationHasher": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "PBKDF2SingleIterationHasher"
      ]
    ]
  ],
  "TestUtilsHashPass": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPass"
      ]
    ]
  ],
  "BasePasswordHasherTests": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "BasePasswordHasherTests"
      ]
    ]
  ],
  "TestUtilsHashPassArgon2": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPassArgon2"
      ]
    ]
  ],
  "mock_getpass": [
    [
      "tests/auth_tests/test_management.py",
      [
        "mock_inputs",
        "inner",
        "wrapped",
        "mock_getpass"
      ]
    ]
  ],
  "MockTTY": [
    [
      "tests/auth_tests/test_management.py",
      [
        "MockTTY"
      ]
    ]
  ],
  "MockInputTests": [
    [
      "tests/auth_tests/test_management.py",
      [
        "MockInputTests"
      ]
    ]
  ],
  "GetDefaultUsernameTestCase": [
    [
      "tests/auth_tests/test_management.py",
      [
        "GetDefaultUsernameTestCase"
      ]
    ]
  ],
  "ChangepasswordManagementCommandTestCase": [
    [
      "tests/auth_tests/test_management.py",
      [
        "ChangepasswordManagementCommandTestCase"
      ]
    ]
  ],
  "MultiDBChangepasswordManagementCommandTestCase": [
    [
      "tests/auth_tests/test_management.py",
      [
        "MultiDBChangepasswordManagementCommandTestCase"
      ]
    ]
  ],
  "CreatesuperuserManagementCommandTestCase": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase"
      ]
    ]
  ],
  "MultiDBCreatesuperuserTestCase": [
    [
      "tests/auth_tests/test_management.py",
      [
        "MultiDBCreatesuperuserTestCase"
      ]
    ]
  ],
  "CreatePermissionsTests": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatePermissionsTests"
      ]
    ]
  ],
  "TestAuthenticationMiddleware": [
    [
      "tests/auth_tests/test_middleware.py",
      [
        "TestAuthenticationMiddleware"
      ]
    ]
  ],
  "ProxyModelWithDifferentAppLabelTests": [
    [
      "tests/auth_tests/test_migrations.py",
      [
        "ProxyModelWithDifferentAppLabelTests"
      ]
    ]
  ],
  "ProxyModelWithSameAppLabelTests": [
    [
      "tests/auth_tests/test_migrations.py",
      [
        "ProxyModelWithSameAppLabelTests"
      ]
    ]
  ],
  "AlwaysTrueMixin": [
    [
      "tests/auth_tests/test_mixins.py",
      [
        "AlwaysTrueMixin"
      ]
    ]
  ],
  "AlwaysFalseMixin": [
    [
      "tests/auth_tests/test_mixins.py",
      [
        "AlwaysFalseMixin"
      ]
    ]
  ],
  "EmptyResponseView": [
    [
      "tests/auth_tests/test_mixins.py",
      [
        "EmptyResponseView"
      ]
    ]
  ],
  "AlwaysTrueView": [
    [
      "tests/auth_tests/test_mixins.py",
      [
        "AlwaysTrueView"
      ]
    ]
  ],
  "AlwaysFalseView": [
    [
      "tests/auth_tests/test_mixins.py",
      [
        "AlwaysFalseView"
      ]
    ]
  ],
  "StackedMixinsView1": [
    [
      "tests/auth_tests/test_mixins.py",
      [
        "StackedMixinsView1"
      ]
    ]
  ],
  "StackedMixinsView2": [
    [
      "tests/auth_tests/test_mixins.py",
      [
        "StackedMixinsView2"
      ]
    ]
  ],
  "AccessMixinTests": [
    [
      "tests/auth_tests/test_mixins.py",
      [
        "AccessMixinTests"
      ]
    ]
  ],
  "UserPassesTestTests": [
    [
      "tests/auth_tests/test_mixins.py",
      [
        "UserPassesTestTests"
      ]
    ]
  ],
  "LoginRequiredMixinTests": [
    [
      "tests/auth_tests/test_mixins.py",
      [
        "LoginRequiredMixinTests"
      ]
    ]
  ],
  "PermissionsRequiredMixinTests": [
    [
      "tests/auth_tests/test_mixins.py",
      [
        "PermissionsRequiredMixinTests"
      ]
    ]
  ],
  "NaturalKeysTestCase": [
    [
      "tests/auth_tests/test_models.py",
      [
        "NaturalKeysTestCase"
      ]
    ]
  ],
  "LoadDataWithoutNaturalKeysTestCase": [
    [
      "tests/auth_tests/test_models.py",
      [
        "LoadDataWithoutNaturalKeysTestCase"
      ]
    ]
  ],
  "LoadDataWithNaturalKeysTestCase": [
    [
      "tests/auth_tests/test_models.py",
      [
        "LoadDataWithNaturalKeysTestCase"
      ]
    ]
  ],
  "LoadDataWithNaturalKeysAndMultipleDatabasesTestCase": [
    [
      "tests/auth_tests/test_models.py",
      [
        "LoadDataWithNaturalKeysAndMultipleDatabasesTestCase"
      ]
    ]
  ],
  "UserManagerTestCase": [
    [
      "tests/auth_tests/test_models.py",
      [
        "UserManagerTestCase"
      ]
    ]
  ],
  "AbstractBaseUserTests": [
    [
      "tests/auth_tests/test_models.py",
      [
        "AbstractBaseUserTests"
      ]
    ]
  ],
  "AbstractUserTestCase": [
    [
      "tests/auth_tests/test_models.py",
      [
        "AbstractUserTestCase"
      ]
    ]
  ],
  "IsActiveTestCase": [
    [
      "tests/auth_tests/test_models.py",
      [
        "IsActiveTestCase"
      ]
    ]
  ],
  "TestCreateSuperUserSignals": [
    [
      "tests/auth_tests/test_models.py",
      [
        "TestCreateSuperUserSignals"
      ]
    ]
  ],
  "AnonymousUserTests": [
    [
      "tests/auth_tests/test_models.py",
      [
        "AnonymousUserTests"
      ]
    ]
  ],
  "GroupTests": [
    [
      "tests/auth_tests/test_models.py",
      [
        "GroupTests"
      ]
    ]
  ],
  "PermissionTests": [
    [
      "tests/auth_tests/test_models.py",
      [
        "PermissionTests"
      ]
    ]
  ],
  "RemoteUserTest": [
    [
      "tests/auth_tests/test_remote_user.py",
      [
        "RemoteUserTest"
      ]
    ]
  ],
  "RemoteUserNoCreateBackend": [
    [
      "tests/auth_tests/test_remote_user.py",
      [
        "RemoteUserNoCreateBackend"
      ]
    ]
  ],
  "RemoteUserNoCreateTest": [
    [
      "tests/auth_tests/test_remote_user.py",
      [
        "RemoteUserNoCreateTest"
      ]
    ]
  ],
  "AllowAllUsersRemoteUserBackendTest": [
    [
      "tests/auth_tests/test_remote_user.py",
      [
        "AllowAllUsersRemoteUserBackendTest"
      ]
    ]
  ],
  "CustomRemoteUserBackend": [
    [
      "tests/auth_tests/test_remote_user.py",
      [
        "CustomRemoteUserBackend"
      ]
    ],
    [
      "tests/auth_tests/test_remote_user_deprecation.py",
      [
        "CustomRemoteUserBackend"
      ]
    ]
  ],
  "RemoteUserCustomTest": [
    [
      "tests/auth_tests/test_remote_user.py",
      [
        "RemoteUserCustomTest"
      ]
    ],
    [
      "tests/auth_tests/test_remote_user_deprecation.py",
      [
        "RemoteUserCustomTest"
      ]
    ]
  ],
  "CustomHeaderMiddleware": [
    [
      "tests/auth_tests/test_remote_user.py",
      [
        "CustomHeaderMiddleware"
      ]
    ]
  ],
  "CustomHeaderRemoteUserTest": [
    [
      "tests/auth_tests/test_remote_user.py",
      [
        "CustomHeaderRemoteUserTest"
      ]
    ]
  ],
  "PersistentRemoteUserTest": [
    [
      "tests/auth_tests/test_remote_user.py",
      [
        "PersistentRemoteUserTest"
      ]
    ]
  ],
  "SignalTestCase": [
    [
      "tests/auth_tests/test_signals.py",
      [
        "SignalTestCase"
      ]
    ]
  ],
  "AuthTemplateTests": [
    [
      "tests/auth_tests/test_templates.py",
      [
        "AuthTemplateTests"
      ]
    ]
  ],
  "TokenGeneratorTest": [
    [
      "tests/auth_tests/test_tokens.py",
      [
        "TokenGeneratorTest"
      ]
    ]
  ],
  "PasswordValidationTest": [
    [
      "tests/auth_tests/test_validators.py",
      [
        "PasswordValidationTest"
      ]
    ]
  ],
  "MinimumLengthValidatorTest": [
    [
      "tests/auth_tests/test_validators.py",
      [
        "MinimumLengthValidatorTest"
      ]
    ]
  ],
  "UserAttributeSimilarityValidatorTest": [
    [
      "tests/auth_tests/test_validators.py",
      [
        "UserAttributeSimilarityValidatorTest"
      ]
    ]
  ],
  "CommonPasswordValidatorTest": [
    [
      "tests/auth_tests/test_validators.py",
      [
        "CommonPasswordValidatorTest"
      ]
    ]
  ],
  "NumericPasswordValidatorTest": [
    [
      "tests/auth_tests/test_validators.py",
      [
        "NumericPasswordValidatorTest"
      ]
    ]
  ],
  "UsernameValidatorsTests": [
    [
      "tests/auth_tests/test_validators.py",
      [
        "UsernameValidatorsTests"
      ]
    ]
  ],
  "AuthViewsTestCase": [
    [
      "tests/auth_tests/test_views.py",
      [
        "AuthViewsTestCase"
      ]
    ]
  ],
  "AuthViewNamedURLTests": [
    [
      "tests/auth_tests/test_views.py",
      [
        "AuthViewNamedURLTests"
      ]
    ]
  ],
  "PasswordResetTest": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest"
      ]
    ]
  ],
  "CustomUserPasswordResetTest": [
    [
      "tests/auth_tests/test_views.py",
      [
        "CustomUserPasswordResetTest"
      ]
    ]
  ],
  "UUIDUserPasswordResetTest": [
    [
      "tests/auth_tests/test_views.py",
      [
        "UUIDUserPasswordResetTest"
      ]
    ]
  ],
  "ChangePasswordTest": [
    [
      "tests/auth_tests/test_views.py",
      [
        "ChangePasswordTest"
      ]
    ]
  ],
  "SessionAuthenticationTests": [
    [
      "tests/auth_tests/test_views.py",
      [
        "SessionAuthenticationTests"
      ]
    ]
  ],
  "LoginTest": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginTest"
      ]
    ]
  ],
  "LoginURLSettings": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginURLSettings"
      ]
    ]
  ],
  "LoginRedirectUrlTest": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginRedirectUrlTest"
      ]
    ]
  ],
  "RedirectToLoginTests": [
    [
      "tests/auth_tests/test_views.py",
      [
        "RedirectToLoginTests"
      ]
    ]
  ],
  "LogoutThenLoginTests": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LogoutThenLoginTests"
      ]
    ]
  ],
  "LoginRedirectAuthenticatedUser": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginRedirectAuthenticatedUser"
      ]
    ]
  ],
  "LoginSuccessURLAllowedHostsTest": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginSuccessURLAllowedHostsTest"
      ]
    ]
  ],
  "LogoutTest": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LogoutTest"
      ]
    ]
  ],
  "ChangelistTests": [
    [
      "tests/auth_tests/test_views.py",
      [
        "ChangelistTests"
      ]
    ]
  ],
  "CustomRequestAuthenticationForm": [
    [
      "tests/auth_tests/urls.py",
      [
        "CustomRequestAuthenticationForm"
      ]
    ]
  ],
  "DatabaseWrapperTests": [
    [
      "tests/backends/base/test_base.py",
      [
        "DatabaseWrapperTests"
      ]
    ]
  ],
  "ExecuteWrapperTests": [
    [
      "tests/backends/base/test_base.py",
      [
        "ExecuteWrapperTests"
      ]
    ]
  ],
  "TestDbSignatureTests": [
    [
      "tests/backends/base/test_creation.py",
      [
        "TestDbSignatureTests"
      ]
    ]
  ],
  "TestDatabaseFeatures": [
    [
      "tests/backends/base/test_features.py",
      [
        "TestDatabaseFeatures"
      ]
    ]
  ],
  "SimpleDatabaseOperationTests": [
    [
      "tests/backends/base/test_operations.py",
      [
        "SimpleDatabaseOperationTests"
      ]
    ]
  ],
  "DatabaseOperationTests": [
    [
      "tests/backends/base/test_operations.py",
      [
        "DatabaseOperationTests"
      ]
    ]
  ],
  "SchemaEditorTests": [
    [
      "tests/backends/base/test_schema.py",
      [
        "SchemaEditorTests"
      ]
    ],
    [
      "tests/backends/mysql/test_schema.py",
      [
        "SchemaEditorTests"
      ]
    ]
  ],
  "Square": [
    [
      "tests/backends/models.py",
      [
        "Square"
      ]
    ]
  ],
  "SchoolClass": [
    [
      "tests/backends/models.py",
      [
        "SchoolClass"
      ]
    ]
  ],
  "VeryLongModelNameZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ": [
    [
      "tests/backends/models.py",
      [
        "VeryLongModelNameZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ"
      ]
    ]
  ],
  "Tag": [
    [
      "tests/backends/models.py",
      [
        "Tag"
      ]
    ],
    [
      "tests/distinct_on_fields/models.py",
      [
        "Tag"
      ]
    ],
    [
      "tests/fixtures/models.py",
      [
        "Tag"
      ]
    ],
    [
      "tests/generic_relations_regress/models.py",
      [
        "Tag"
      ]
    ],
    [
      "tests/get_or_create/models.py",
      [
        "Tag"
      ]
    ],
    [
      "tests/lookup/models.py",
      [
        "Tag"
      ]
    ],
    [
      "tests/m2m_regress/models.py",
      [
        "Tag"
      ]
    ],
    [
      "tests/many_to_many/models.py",
      [
        "Tag"
      ]
    ],
    [
      "tests/postgres_tests/models.py",
      [
        "Tag"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Tag"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "Tag"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_unique_and_reverse_m2m",
        "Tag"
      ]
    ],
    [
      "tests/serializers/models/data.py",
      [
        "Tag"
      ]
    ]
  ],
  "Reporter": [
    [
      "tests/backends/models.py",
      [
        "Reporter"
      ]
    ],
    [
      "tests/introspection/models.py",
      [
        "Reporter"
      ]
    ],
    [
      "tests/m2m_intermediary/models.py",
      [
        "Reporter"
      ]
    ],
    [
      "tests/many_to_one/models.py",
      [
        "Reporter"
      ]
    ],
    [
      "tests/many_to_one_null/models.py",
      [
        "Reporter"
      ]
    ],
    [
      "tests/transactions/models.py",
      [
        "Reporter"
      ]
    ]
  ],
  "ReporterProxy": [
    [
      "tests/backends/models.py",
      [
        "ReporterProxy"
      ]
    ]
  ],
  "Item": [
    [
      "tests/backends/models.py",
      [
        "Item"
      ]
    ],
    [
      "tests/defer_regress/models.py",
      [
        "Item"
      ]
    ],
    [
      "tests/delete_regress/models.py",
      [
        "Item"
      ]
    ],
    [
      "tests/null_fk/models.py",
      [
        "Item"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Item"
      ]
    ],
    [
      "tests/select_related_regress/models.py",
      [
        "Item"
      ]
    ]
  ],
  "Object": [
    [
      "tests/backends/models.py",
      [
        "Object"
      ]
    ]
  ],
  "ObjectReference": [
    [
      "tests/backends/models.py",
      [
        "ObjectReference"
      ]
    ]
  ],
  "RawData": [
    [
      "tests/backends/models.py",
      [
        "RawData"
      ]
    ]
  ],
  "DatabaseCreationTests": [
    [
      "tests/backends/mysql/test_creation.py",
      [
        "DatabaseCreationTests"
      ]
    ],
    [
      "tests/backends/oracle/test_creation.py",
      [
        "DatabaseCreationTests"
      ]
    ],
    [
      "tests/backends/postgresql/test_creation.py",
      [
        "DatabaseCreationTests"
      ]
    ]
  ],
  "TestFeatures": [
    [
      "tests/backends/mysql/test_features.py",
      [
        "TestFeatures"
      ]
    ]
  ],
  "IsolationLevelTests": [
    [
      "tests/backends/mysql/tests.py",
      [
        "IsolationLevelTests"
      ]
    ]
  ],
  "DatabaseSequenceTests": [
    [
      "tests/backends/oracle/test_introspection.py",
      [
        "DatabaseSequenceTests"
      ]
    ],
    [
      "tests/backends/postgresql/test_introspection.py",
      [
        "DatabaseSequenceTests"
      ]
    ]
  ],
  "OperationsTests": [
    [
      "tests/backends/oracle/test_operations.py",
      [
        "OperationsTests"
      ]
    ]
  ],
  "Tests": [
    [
      "tests/backends/oracle/tests.py",
      [
        "Tests"
      ]
    ],
    [
      "tests/backends/postgresql/tests.py",
      [
        "Tests"
      ]
    ],
    [
      "tests/backends/sqlite/tests.py",
      [
        "Tests"
      ]
    ],
    [
      "tests/migrations/test_deprecated_fields.py",
      [
        "Tests"
      ]
    ]
  ],
  "TransactionalTests": [
    [
      "tests/backends/oracle/tests.py",
      [
        "TransactionalTests"
      ]
    ]
  ],
  "ServerSideCursorsPostgres": [
    [
      "tests/backends/postgresql/test_server_side_cursors.py",
      [
        "ServerSideCursorsPostgres"
      ]
    ]
  ],
  "IntrospectionTests": [
    [
      "tests/backends/sqlite/test_introspection.py",
      [
        "IntrospectionTests"
      ]
    ],
    [
      "tests/introspection/tests.py",
      [
        "IntrospectionTests"
      ]
    ]
  ],
  "SchemaTests": [
    [
      "tests/backends/sqlite/tests.py",
      [
        "SchemaTests"
      ]
    ],
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "SchemaTests"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests"
      ]
    ]
  ],
  "LastExecutedQueryTest": [
    [
      "tests/backends/sqlite/tests.py",
      [
        "LastExecutedQueryTest"
      ]
    ],
    [
      "tests/backends/tests.py",
      [
        "LastExecutedQueryTest"
      ]
    ]
  ],
  "EscapingChecks": [
    [
      "tests/backends/sqlite/tests.py",
      [
        "EscapingChecks"
      ]
    ],
    [
      "tests/backends/tests.py",
      [
        "EscapingChecks"
      ]
    ]
  ],
  "EscapingChecksDebug": [
    [
      "tests/backends/sqlite/tests.py",
      [
        "EscapingChecksDebug"
      ]
    ],
    [
      "tests/backends/tests.py",
      [
        "EscapingChecksDebug"
      ]
    ]
  ],
  "ThreadSharing": [
    [
      "tests/backends/sqlite/tests.py",
      [
        "ThreadSharing"
      ]
    ]
  ],
  "TableTests": [
    [
      "tests/backends/test_ddl_references.py",
      [
        "TableTests"
      ]
    ]
  ],
  "ColumnsTests": [
    [
      "tests/backends/test_ddl_references.py",
      [
        "ColumnsTests"
      ]
    ]
  ],
  "IndexNameTests": [
    [
      "tests/backends/test_ddl_references.py",
      [
        "IndexNameTests"
      ]
    ]
  ],
  "ForeignKeyNameTests": [
    [
      "tests/backends/test_ddl_references.py",
      [
        "ForeignKeyNameTests"
      ]
    ]
  ],
  "MockReference": [
    [
      "tests/backends/test_ddl_references.py",
      [
        "MockReference"
      ]
    ]
  ],
  "StatementTests": [
    [
      "tests/backends/test_ddl_references.py",
      [
        "StatementTests"
      ]
    ]
  ],
  "CursorWrapperTests": [
    [
      "tests/backends/test_utils.py",
      [
        "CursorWrapperTests"
      ]
    ]
  ],
  "DateQuotingTest": [
    [
      "tests/backends/tests.py",
      [
        "DateQuotingTest"
      ]
    ]
  ],
  "ParameterHandlingTest": [
    [
      "tests/backends/tests.py",
      [
        "ParameterHandlingTest"
      ]
    ]
  ],
  "LongNameTest": [
    [
      "tests/backends/tests.py",
      [
        "LongNameTest"
      ]
    ]
  ],
  "SequenceResetTest": [
    [
      "tests/backends/tests.py",
      [
        "SequenceResetTest"
      ]
    ]
  ],
  "ConnectionCreatedSignalTest": [
    [
      "tests/backends/tests.py",
      [
        "ConnectionCreatedSignalTest"
      ]
    ]
  ],
  "BackendTestCase": [
    [
      "tests/backends/tests.py",
      [
        "BackendTestCase"
      ]
    ]
  ],
  "FkConstraintsTests": [
    [
      "tests/backends/tests.py",
      [
        "FkConstraintsTests"
      ]
    ]
  ],
  "ThreadTests": [
    [
      "tests/backends/tests.py",
      [
        "ThreadTests"
      ]
    ]
  ],
  "MySQLPKZeroTests": [
    [
      "tests/backends/tests.py",
      [
        "MySQLPKZeroTests"
      ]
    ]
  ],
  "DBConstraintTestCase": [
    [
      "tests/backends/tests.py",
      [
        "DBConstraintTestCase"
      ]
    ]
  ],
  "CustomBaseModel": [
    [
      "tests/base/models.py",
      [
        "CustomBaseModel"
      ]
    ]
  ],
  "MyModel": [
    [
      "tests/base/models.py",
      [
        "MyModel"
      ]
    ]
  ],
  "BashCompletionTests": [
    [
      "tests/bash_completion/tests.py",
      [
        "BashCompletionTests"
      ]
    ]
  ],
  "FeaturedArticle": [
    [
      "tests/basic/models.py",
      [
        "FeaturedArticle"
      ]
    ]
  ],
  "ArticleSelectOnSave": [
    [
      "tests/basic/models.py",
      [
        "ArticleSelectOnSave"
      ]
    ]
  ],
  "SelfRef": [
    [
      "tests/basic/models.py",
      [
        "SelfRef"
      ]
    ]
  ],
  "ModelInstanceCreationTests": [
    [
      "tests/basic/tests.py",
      [
        "ModelInstanceCreationTests"
      ]
    ]
  ],
  "ModelTest": [
    [
      "tests/basic/tests.py",
      [
        "ModelTest"
      ]
    ]
  ],
  "ModelLookupTest": [
    [
      "tests/basic/tests.py",
      [
        "ModelLookupTest"
      ]
    ]
  ],
  "ConcurrentSaveTests": [
    [
      "tests/basic/tests.py",
      [
        "ConcurrentSaveTests"
      ]
    ]
  ],
  "ManagerTest": [
    [
      "tests/basic/tests.py",
      [
        "ManagerTest"
      ]
    ]
  ],
  "FakeQuerySet": [
    [
      "tests/basic/tests.py",
      [
        "SelectOnSaveTests",
        "test_select_on_save_lying_update",
        "FakeQuerySet"
      ]
    ]
  ],
  "SelectOnSaveTests": [
    [
      "tests/basic/tests.py",
      [
        "SelectOnSaveTests"
      ]
    ]
  ],
  "ModelRefreshTests": [
    [
      "tests/basic/tests.py",
      [
        "ModelRefreshTests"
      ]
    ]
  ],
  "DummyHandler": [
    [
      "tests/builtin_server/tests.py",
      [
        "DummyHandler"
      ]
    ]
  ],
  "FileWrapperHandler": [
    [
      "tests/builtin_server/tests.py",
      [
        "FileWrapperHandler"
      ]
    ]
  ],
  "WSGIFileWrapperTests": [
    [
      "tests/builtin_server/tests.py",
      [
        "WSGIFileWrapperTests"
      ]
    ]
  ],
  "WriteChunkCounterHandler": [
    [
      "tests/builtin_server/tests.py",
      [
        "WriteChunkCounterHandler"
      ]
    ]
  ],
  "ServerHandlerChunksProperly": [
    [
      "tests/builtin_server/tests.py",
      [
        "ServerHandlerChunksProperly"
      ]
    ]
  ],
  "Country": [
    [
      "tests/bulk_create/models.py",
      [
        "Country"
      ]
    ],
    [
      "tests/foreign_object/models/person.py",
      [
        "Country"
      ]
    ],
    [
      "tests/gis_tests/geoapp/models.py",
      [
        "Country"
      ]
    ],
    [
      "tests/proxy_models/models.py",
      [
        "Country"
      ]
    ],
    [
      "tests/select_for_update/models.py",
      [
        "Country"
      ]
    ],
    [
      "tests/select_related_regress/models.py",
      [
        "Country"
      ]
    ]
  ],
  "ProxyCountry": [
    [
      "tests/bulk_create/models.py",
      [
        "ProxyCountry"
      ]
    ]
  ],
  "ProxyProxyCountry": [
    [
      "tests/bulk_create/models.py",
      [
        "ProxyProxyCountry"
      ]
    ]
  ],
  "ProxyMultiCountry": [
    [
      "tests/bulk_create/models.py",
      [
        "ProxyMultiCountry"
      ]
    ]
  ],
  "ProxyMultiProxyCountry": [
    [
      "tests/bulk_create/models.py",
      [
        "ProxyMultiProxyCountry"
      ]
    ]
  ],
  "Pizzeria": [
    [
      "tests/bulk_create/models.py",
      [
        "Pizzeria"
      ]
    ]
  ],
  "TwoFields": [
    [
      "tests/bulk_create/models.py",
      [
        "TwoFields"
      ]
    ]
  ],
  "NoFields": [
    [
      "tests/bulk_create/models.py",
      [
        "NoFields"
      ]
    ]
  ],
  "NullableFields": [
    [
      "tests/bulk_create/models.py",
      [
        "NullableFields"
      ]
    ]
  ],
  "BulkCreateTests": [
    [
      "tests/bulk_create/tests.py",
      [
        "BulkCreateTests"
      ]
    ]
  ],
  "CloseHookMixin": [
    [
      "tests/cache/closeable_cache.py",
      [
        "CloseHookMixin"
      ]
    ]
  ],
  "CacheClass": [
    [
      "tests/cache/closeable_cache.py",
      [
        "CacheClass"
      ]
    ],
    [
      "tests/cache/liberal_backend.py",
      [
        "CacheClass"
      ]
    ]
  ],
  "LiberalKeyValidationMixin": [
    [
      "tests/cache/liberal_backend.py",
      [
        "LiberalKeyValidationMixin"
      ]
    ]
  ],
  "C": [
    [
      "tests/cache/tests.py",
      [
        "C"
      ]
    ],
    [
      "tests/generic_relations_regress/models.py",
      [
        "C"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_render_project_dependencies",
        "C"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_add_relations",
        "C"
      ]
    ],
    [
      "tests/select_related_regress/models.py",
      [
        "C"
      ]
    ],
    [
      "tests/update/models.py",
      [
        "C"
      ]
    ]
  ],
  "Unpicklable": [
    [
      "tests/cache/tests.py",
      [
        "Unpicklable"
      ]
    ]
  ],
  "DummyCacheTests": [
    [
      "tests/cache/tests.py",
      [
        "DummyCacheTests"
      ]
    ]
  ],
  "BaseCacheTests": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests"
      ]
    ]
  ],
  "DBCacheTests": [
    [
      "tests/cache/tests.py",
      [
        "DBCacheTests"
      ]
    ]
  ],
  "DBCacheWithTimeZoneTests": [
    [
      "tests/cache/tests.py",
      [
        "DBCacheWithTimeZoneTests"
      ]
    ]
  ],
  "DBCacheRouter": [
    [
      "tests/cache/tests.py",
      [
        "DBCacheRouter"
      ]
    ]
  ],
  "CreateCacheTableForDBCacheTests": [
    [
      "tests/cache/tests.py",
      [
        "CreateCacheTableForDBCacheTests"
      ]
    ]
  ],
  "PicklingSideEffect": [
    [
      "tests/cache/tests.py",
      [
        "PicklingSideEffect"
      ]
    ]
  ],
  "LocMemCacheTests": [
    [
      "tests/cache/tests.py",
      [
        "LocMemCacheTests"
      ]
    ]
  ],
  "BaseMemcachedTests": [
    [
      "tests/cache/tests.py",
      [
        "BaseMemcachedTests"
      ]
    ]
  ],
  "MemcachedCacheTests": [
    [
      "tests/cache/tests.py",
      [
        "MemcachedCacheTests"
      ]
    ]
  ],
  "PyLibMCCacheTests": [
    [
      "tests/cache/tests.py",
      [
        "PyLibMCCacheTests"
      ]
    ]
  ],
  "FileBasedCacheTests": [
    [
      "tests/cache/tests.py",
      [
        "FileBasedCacheTests"
      ]
    ]
  ],
  "CustomCacheKeyValidationTests": [
    [
      "tests/cache/tests.py",
      [
        "CustomCacheKeyValidationTests"
      ]
    ]
  ],
  "CacheClosingTests": [
    [
      "tests/cache/tests.py",
      [
        "CacheClosingTests"
      ]
    ]
  ],
  "DefaultNonExpiringCacheKeyTests": [
    [
      "tests/cache/tests.py",
      [
        "DefaultNonExpiringCacheKeyTests"
      ]
    ]
  ],
  "CacheUtils": [
    [
      "tests/cache/tests.py",
      [
        "CacheUtils"
      ]
    ]
  ],
  "PrefixedCacheUtils": [
    [
      "tests/cache/tests.py",
      [
        "PrefixedCacheUtils"
      ]
    ]
  ],
  "CacheHEADTest": [
    [
      "tests/cache/tests.py",
      [
        "CacheHEADTest"
      ]
    ]
  ],
  "CacheI18nTest": [
    [
      "tests/cache/tests.py",
      [
        "CacheI18nTest"
      ]
    ]
  ],
  "PrefixedCacheI18nTest": [
    [
      "tests/cache/tests.py",
      [
        "PrefixedCacheI18nTest"
      ]
    ]
  ],
  "CacheMiddlewareTest": [
    [
      "tests/cache/tests.py",
      [
        "CacheMiddlewareTest"
      ]
    ],
    [
      "tests/template_tests/test_response.py",
      [
        "CacheMiddlewareTest"
      ]
    ]
  ],
  "TestWithTemplateResponse": [
    [
      "tests/cache/tests.py",
      [
        "TestWithTemplateResponse"
      ]
    ]
  ],
  "TestMakeTemplateFragmentKey": [
    [
      "tests/cache/tests.py",
      [
        "TestMakeTemplateFragmentKey"
      ]
    ]
  ],
  "CacheHandlerTest": [
    [
      "tests/cache/tests.py",
      [
        "CacheHandlerTest"
      ]
    ]
  ],
  "SimpleModel": [
    [
      "tests/check_framework/models.py",
      [
        "SimpleModel"
      ]
    ],
    [
      "tests/gis_tests/geo3d/models.py",
      [
        "SimpleModel"
      ]
    ],
    [
      "tests/gis_tests/relatedapp/models.py",
      [
        "SimpleModel"
      ]
    ]
  ],
  "CheckCacheSettingsAppDirsTest": [
    [
      "tests/check_framework/test_caches.py",
      [
        "CheckCacheSettingsAppDirsTest"
      ]
    ]
  ],
  "DatabaseCheckTests": [
    [
      "tests/check_framework/test_database.py",
      [
        "DatabaseCheckTests"
      ]
    ]
  ],
  "DuplicateDBTableTests": [
    [
      "tests/check_framework/test_model_checks.py",
      [
        "DuplicateDBTableTests"
      ]
    ]
  ],
  "TestDeprecatedField": [
    [
      "tests/check_framework/test_model_field_deprecation.py",
      [
        "TestDeprecatedField"
      ]
    ]
  ],
  "TestRemovedField": [
    [
      "tests/check_framework/test_model_field_deprecation.py",
      [
        "TestRemovedField"
      ]
    ]
  ],
  "TestRouter": [
    [
      "tests/check_framework/test_multi_db.py",
      [
        "TestRouter"
      ]
    ],
    [
      "tests/contenttypes_tests/test_models.py",
      [
        "TestRouter"
      ]
    ],
    [
      "tests/migrations/routers.py",
      [
        "TestRouter"
      ]
    ],
    [
      "tests/multiple_database/routers.py",
      [
        "TestRouter"
      ]
    ]
  ],
  "TestMultiDBChecks": [
    [
      "tests/check_framework/test_multi_db.py",
      [
        "TestMultiDBChecks"
      ]
    ]
  ],
  "CheckSessionCookieSecureTest": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckSessionCookieSecureTest"
      ]
    ]
  ],
  "CheckSessionCookieHttpOnlyTest": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckSessionCookieHttpOnlyTest"
      ]
    ]
  ],
  "CheckCSRFMiddlewareTest": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckCSRFMiddlewareTest"
      ]
    ]
  ],
  "CheckCSRFCookieSecureTest": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckCSRFCookieSecureTest"
      ]
    ]
  ],
  "CheckSecurityMiddlewareTest": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckSecurityMiddlewareTest"
      ]
    ]
  ],
  "CheckStrictTransportSecurityTest": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckStrictTransportSecurityTest"
      ]
    ]
  ],
  "CheckStrictTransportSecuritySubdomainsTest": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckStrictTransportSecuritySubdomainsTest"
      ]
    ]
  ],
  "CheckStrictTransportSecurityPreloadTest": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckStrictTransportSecurityPreloadTest"
      ]
    ]
  ],
  "CheckXFrameOptionsMiddlewareTest": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckXFrameOptionsMiddlewareTest"
      ]
    ]
  ],
  "CheckXFrameOptionsDenyTest": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckXFrameOptionsDenyTest"
      ]
    ]
  ],
  "CheckContentTypeNosniffTest": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckContentTypeNosniffTest"
      ]
    ]
  ],
  "CheckXssFilterTest": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckXssFilterTest"
      ]
    ]
  ],
  "CheckSSLRedirectTest": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckSSLRedirectTest"
      ]
    ]
  ],
  "CheckSecretKeyTest": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckSecretKeyTest"
      ]
    ]
  ],
  "CheckDebugTest": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckDebugTest"
      ]
    ]
  ],
  "CheckAllowedHostsTest": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckAllowedHostsTest"
      ]
    ]
  ],
  "CheckTemplateSettingsAppDirsTest": [
    [
      "tests/check_framework/test_templates.py",
      [
        "CheckTemplateSettingsAppDirsTest"
      ]
    ]
  ],
  "CheckTemplateStringIfInvalidTest": [
    [
      "tests/check_framework/test_templates.py",
      [
        "CheckTemplateStringIfInvalidTest"
      ]
    ]
  ],
  "TranslationCheckTests": [
    [
      "tests/check_framework/test_translation.py",
      [
        "TranslationCheckTests"
      ]
    ]
  ],
  "CheckUrlConfigTests": [
    [
      "tests/check_framework/test_urls.py",
      [
        "CheckUrlConfigTests"
      ]
    ]
  ],
  "UpdatedToPathTests": [
    [
      "tests/check_framework/test_urls.py",
      [
        "UpdatedToPathTests"
      ]
    ]
  ],
  "CheckCustomErrorHandlersTests": [
    [
      "tests/check_framework/test_urls.py",
      [
        "CheckCustomErrorHandlersTests"
      ]
    ]
  ],
  "CheckURLSettingsTests": [
    [
      "tests/check_framework/test_urls.py",
      [
        "CheckURLSettingsTests"
      ]
    ]
  ],
  "DummyObj": [
    [
      "tests/check_framework/tests.py",
      [
        "DummyObj"
      ]
    ]
  ],
  "SystemCheckFrameworkTests": [
    [
      "tests/check_framework/tests.py",
      [
        "SystemCheckFrameworkTests"
      ]
    ]
  ],
  "MessageTests": [
    [
      "tests/check_framework/tests.py",
      [
        "MessageTests"
      ]
    ]
  ],
  "CheckCommandTests": [
    [
      "tests/check_framework/tests.py",
      [
        "CheckCommandTests"
      ]
    ]
  ],
  "SilencingCheckTests": [
    [
      "tests/check_framework/tests.py",
      [
        "SilencingCheckTests"
      ]
    ]
  ],
  "ModelWithAttributeCalledCheck": [
    [
      "tests/check_framework/tests.py",
      [
        "CheckFrameworkReservedNamesTests",
        "test_model_check_method_not_shadowed",
        "ModelWithAttributeCalledCheck"
      ]
    ]
  ],
  "ModelWithFieldCalledCheck": [
    [
      "tests/check_framework/tests.py",
      [
        "CheckFrameworkReservedNamesTests",
        "test_model_check_method_not_shadowed",
        "ModelWithFieldCalledCheck"
      ]
    ]
  ],
  "ModelWithRelatedManagerCalledCheck": [
    [
      "tests/check_framework/tests.py",
      [
        "CheckFrameworkReservedNamesTests",
        "test_model_check_method_not_shadowed",
        "ModelWithRelatedManagerCalledCheck"
      ]
    ]
  ],
  "ModelWithDescriptorCalledCheck": [
    [
      "tests/check_framework/tests.py",
      [
        "CheckFrameworkReservedNamesTests",
        "test_model_check_method_not_shadowed",
        "ModelWithDescriptorCalledCheck"
      ]
    ]
  ],
  "CheckFrameworkReservedNamesTests": [
    [
      "tests/check_framework/tests.py",
      [
        "CheckFrameworkReservedNamesTests"
      ]
    ]
  ],
  "ChecksRunDuringTests": [
    [
      "tests/check_framework/tests.py",
      [
        "ChecksRunDuringTests"
      ]
    ]
  ],
  "ChoicesTests": [
    [
      "tests/choices/tests.py",
      [
        "ChoicesTests"
      ]
    ],
    [
      "tests/model_fields/tests.py",
      [
        "ChoicesTests"
      ]
    ]
  ],
  "ConditionalGet": [
    [
      "tests/conditional_processing/tests.py",
      [
        "ConditionalGet"
      ]
    ]
  ],
  "Product": [
    [
      "tests/constraints/models.py",
      [
        "Product"
      ]
    ],
    [
      "tests/lookup/models.py",
      [
        "Product"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Product"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Product"
      ]
    ],
    [
      "tests/select_related_onetoone/models.py",
      [
        "Product"
      ]
    ]
  ],
  "BaseConstraintTests": [
    [
      "tests/constraints/tests.py",
      [
        "BaseConstraintTests"
      ]
    ]
  ],
  "CheckConstraintTests": [
    [
      "tests/constraints/tests.py",
      [
        "CheckConstraintTests"
      ]
    ]
  ],
  "UniqueConstraintTests": [
    [
      "tests/constraints/tests.py",
      [
        "UniqueConstraintTests"
      ]
    ]
  ],
  "SchemeIncludedURL": [
    [
      "tests/contenttypes_tests/models.py",
      [
        "SchemeIncludedURL"
      ]
    ]
  ],
  "ConcreteModel": [
    [
      "tests/contenttypes_tests/models.py",
      [
        "ConcreteModel"
      ]
    ],
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_abstract_model_with_regular_python_mixin_mro",
        "ConcreteModel"
      ]
    ],
    [
      "tests/proxy_model_inheritance/models.py",
      [
        "ConcreteModel"
      ]
    ]
  ],
  "ProxyModel": [
    [
      "tests/contenttypes_tests/models.py",
      [
        "ProxyModel"
      ]
    ],
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_implicit_inheritance",
        "ProxyModel"
      ]
    ],
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_default_manager_inheritance",
        "ProxyModel"
      ]
    ],
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_base_manager_inheritance",
        "ProxyModel"
      ]
    ],
    [
      "tests/proxy_model_inheritance/app1/models.py",
      [
        "ProxyModel"
      ]
    ],
    [
      "tests/proxy_model_inheritance/models.py",
      [
        "ProxyModel"
      ]
    ]
  ],
  "FooWithoutUrl": [
    [
      "tests/contenttypes_tests/models.py",
      [
        "FooWithoutUrl"
      ]
    ]
  ],
  "FooWithUrl": [
    [
      "tests/contenttypes_tests/models.py",
      [
        "FooWithUrl"
      ]
    ]
  ],
  "FooWithBrokenAbsoluteUrl": [
    [
      "tests/contenttypes_tests/models.py",
      [
        "FooWithBrokenAbsoluteUrl"
      ]
    ]
  ],
  "ModelWithNullFKToSite": [
    [
      "tests/contenttypes_tests/models.py",
      [
        "ModelWithNullFKToSite"
      ]
    ]
  ],
  "ModelWithM2MToSite": [
    [
      "tests/contenttypes_tests/models.py",
      [
        "ModelWithM2MToSite"
      ]
    ]
  ],
  "GenericForeignKeyTests": [
    [
      "tests/contenttypes_tests/test_checks.py",
      [
        "GenericForeignKeyTests"
      ]
    ],
    [
      "tests/contenttypes_tests/test_fields.py",
      [
        "GenericForeignKeyTests"
      ]
    ]
  ],
  "Replacement": [
    [
      "tests/contenttypes_tests/test_checks.py",
      [
        "GenericRelationTests",
        "test_pointing_to_swapped_model",
        "Replacement"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_referencing_to_swapped_model",
        "Replacement"
      ]
    ]
  ],
  "SwappedModel": [
    [
      "tests/contenttypes_tests/test_checks.py",
      [
        "GenericRelationTests",
        "test_pointing_to_swapped_model",
        "SwappedModel"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_referencing_to_swapped_model",
        "SwappedModel"
      ]
    ]
  ],
  "GenericRelationTests": [
    [
      "tests/contenttypes_tests/test_checks.py",
      [
        "GenericRelationTests"
      ]
    ],
    [
      "tests/contenttypes_tests/test_fields.py",
      [
        "GenericRelationTests"
      ]
    ],
    [
      "tests/generic_relations_regress/tests.py",
      [
        "GenericRelationTests"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "GenericRelationTests"
      ]
    ]
  ],
  "ModelCheckTests": [
    [
      "tests/contenttypes_tests/test_checks.py",
      [
        "ModelCheckTests"
      ]
    ]
  ],
  "RemoveStaleContentTypesTests": [
    [
      "tests/contenttypes_tests/test_management.py",
      [
        "RemoveStaleContentTypesTests"
      ]
    ]
  ],
  "ContentTypesTests": [
    [
      "tests/contenttypes_tests/test_models.py",
      [
        "ContentTypesTests"
      ]
    ]
  ],
  "ContentTypesMultidbTests": [
    [
      "tests/contenttypes_tests/test_models.py",
      [
        "ContentTypesMultidbTests"
      ]
    ]
  ],
  "ContentTypeOperationsTests": [
    [
      "tests/contenttypes_tests/test_operations.py",
      [
        "ContentTypeOperationsTests"
      ]
    ]
  ],
  "OrderWithRespectToGFKTests": [
    [
      "tests/contenttypes_tests/test_order_with_respect_to.py",
      [
        "OrderWithRespectToGFKTests"
      ]
    ]
  ],
  "ContentTypesViewsTests": [
    [
      "tests/contenttypes_tests/test_views.py",
      [
        "ContentTypesViewsTests"
      ]
    ]
  ],
  "ContentTypesViewsSiteRelTests": [
    [
      "tests/contenttypes_tests/test_views.py",
      [
        "ContentTypesViewsSiteRelTests"
      ]
    ]
  ],
  "ShortcutViewTests": [
    [
      "tests/contenttypes_tests/test_views.py",
      [
        "ShortcutViewTests"
      ]
    ]
  ],
  "DebugObject": [
    [
      "tests/context_processors/models.py",
      [
        "DebugObject"
      ]
    ]
  ],
  "RequestContextProcessorTests": [
    [
      "tests/context_processors/tests.py",
      [
        "RequestContextProcessorTests"
      ]
    ]
  ],
  "DebugContextProcessorTests": [
    [
      "tests/context_processors/tests.py",
      [
        "DebugContextProcessorTests"
      ]
    ]
  ],
  "TestContextProcessor": [
    [
      "tests/csrf_tests/test_context_processor.py",
      [
        "TestContextProcessor"
      ]
    ]
  ],
  "TestingHttpRequest": [
    [
      "tests/csrf_tests/tests.py",
      [
        "TestingHttpRequest"
      ]
    ]
  ],
  "CsrfPostRequest": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "test_post_data_read_failure",
        "CsrfPostRequest"
      ]
    ]
  ],
  "CsrfViewMiddlewareTestMixin": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin"
      ]
    ]
  ],
  "CsrfViewMiddlewareTests": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTests"
      ]
    ]
  ],
  "CsrfViewMiddlewareUseSessionsTests": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareUseSessionsTests"
      ]
    ]
  ],
  "CsrfInErrorHandlingViewsTests": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfInErrorHandlingViewsTests"
      ]
    ]
  ],
  "CustomColumnsTests": [
    [
      "tests/custom_columns/tests.py",
      [
        "CustomColumnsTests"
      ]
    ]
  ],
  "MySQLUnixTimestamp": [
    [
      "tests/custom_lookups/models.py",
      [
        "MySQLUnixTimestamp"
      ]
    ]
  ],
  "Div3Lookup": [
    [
      "tests/custom_lookups/tests.py",
      [
        "Div3Lookup"
      ]
    ]
  ],
  "Div3Transform": [
    [
      "tests/custom_lookups/tests.py",
      [
        "Div3Transform"
      ]
    ]
  ],
  "Div3BilateralTransform": [
    [
      "tests/custom_lookups/tests.py",
      [
        "Div3BilateralTransform"
      ]
    ]
  ],
  "Mult3BilateralTransform": [
    [
      "tests/custom_lookups/tests.py",
      [
        "Mult3BilateralTransform"
      ]
    ]
  ],
  "LastDigitTransform": [
    [
      "tests/custom_lookups/tests.py",
      [
        "LastDigitTransform"
      ]
    ]
  ],
  "UpperBilateralTransform": [
    [
      "tests/custom_lookups/tests.py",
      [
        "UpperBilateralTransform"
      ]
    ]
  ],
  "YearTransform": [
    [
      "tests/custom_lookups/tests.py",
      [
        "YearTransform"
      ]
    ]
  ],
  "Exactly": [
    [
      "tests/custom_lookups/tests.py",
      [
        "Exactly"
      ]
    ]
  ],
  "SQLFuncMixin": [
    [
      "tests/custom_lookups/tests.py",
      [
        "SQLFuncMixin"
      ]
    ]
  ],
  "SQLFuncLookup": [
    [
      "tests/custom_lookups/tests.py",
      [
        "SQLFuncLookup"
      ]
    ]
  ],
  "SQLFuncTransform": [
    [
      "tests/custom_lookups/tests.py",
      [
        "SQLFuncTransform"
      ]
    ]
  ],
  "SQLFuncFactory": [
    [
      "tests/custom_lookups/tests.py",
      [
        "SQLFuncFactory"
      ]
    ]
  ],
  "CustomModel": [
    [
      "tests/custom_lookups/tests.py",
      [
        "CustomModel"
      ]
    ]
  ],
  "InMonth": [
    [
      "tests/custom_lookups/tests.py",
      [
        "InMonth"
      ]
    ]
  ],
  "DateTimeTransform": [
    [
      "tests/custom_lookups/tests.py",
      [
        "DateTimeTransform"
      ]
    ]
  ],
  "LookupTests": [
    [
      "tests/custom_lookups/tests.py",
      [
        "LookupTests"
      ]
    ],
    [
      "tests/lookup/tests.py",
      [
        "LookupTests"
      ]
    ]
  ],
  "BilateralTransformTests": [
    [
      "tests/custom_lookups/tests.py",
      [
        "BilateralTransformTests"
      ]
    ]
  ],
  "DateTimeLookupTests": [
    [
      "tests/custom_lookups/tests.py",
      [
        "DateTimeLookupTests"
      ]
    ]
  ],
  "YearLteTests": [
    [
      "tests/custom_lookups/tests.py",
      [
        "YearLteTests"
      ]
    ]
  ],
  "TrackCallsYearTransform": [
    [
      "tests/custom_lookups/tests.py",
      [
        "TrackCallsYearTransform"
      ]
    ]
  ],
  "LookupTransformCallOrderTests": [
    [
      "tests/custom_lookups/tests.py",
      [
        "LookupTransformCallOrderTests"
      ]
    ]
  ],
  "CustomisedMethodsTests": [
    [
      "tests/custom_lookups/tests.py",
      [
        "CustomisedMethodsTests"
      ]
    ]
  ],
  "SubqueryTransformTests": [
    [
      "tests/custom_lookups/tests.py",
      [
        "SubqueryTransformTests"
      ]
    ]
  ],
  "PersonManager": [
    [
      "tests/custom_managers/models.py",
      [
        "PersonManager"
      ]
    ],
    [
      "tests/fixtures/models.py",
      [
        "PersonManager"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_no_duplicate_managers",
        "PersonManager"
      ]
    ],
    [
      "tests/multiple_database/models.py",
      [
        "PersonManager"
      ]
    ],
    [
      "tests/proxy_models/models.py",
      [
        "PersonManager"
      ]
    ]
  ],
  "PublishedBookManager": [
    [
      "tests/custom_managers/models.py",
      [
        "PublishedBookManager"
      ]
    ]
  ],
  "AnnotatedBookManager": [
    [
      "tests/custom_managers/models.py",
      [
        "AnnotatedBookManager"
      ]
    ]
  ],
  "CustomQuerySet": [
    [
      "tests/custom_managers/models.py",
      [
        "CustomQuerySet"
      ]
    ]
  ],
  "BaseCustomManager": [
    [
      "tests/custom_managers/models.py",
      [
        "BaseCustomManager"
      ]
    ]
  ],
  "CustomInitQuerySet": [
    [
      "tests/custom_managers/models.py",
      [
        "CustomInitQuerySet"
      ]
    ]
  ],
  "DeconstructibleCustomManager": [
    [
      "tests/custom_managers/models.py",
      [
        "DeconstructibleCustomManager"
      ]
    ]
  ],
  "FunPeopleManager": [
    [
      "tests/custom_managers/models.py",
      [
        "FunPeopleManager"
      ]
    ]
  ],
  "BoringPeopleManager": [
    [
      "tests/custom_managers/models.py",
      [
        "BoringPeopleManager"
      ]
    ]
  ],
  "FunPerson": [
    [
      "tests/custom_managers/models.py",
      [
        "FunPerson"
      ]
    ]
  ],
  "FastCarManager": [
    [
      "tests/custom_managers/models.py",
      [
        "FastCarManager"
      ]
    ]
  ],
  "FastCarAsBase": [
    [
      "tests/custom_managers/models.py",
      [
        "FastCarAsBase"
      ]
    ]
  ],
  "FastCarAsDefault": [
    [
      "tests/custom_managers/models.py",
      [
        "FastCarAsDefault"
      ]
    ]
  ],
  "RestrictedManager": [
    [
      "tests/custom_managers/models.py",
      [
        "RestrictedManager"
      ]
    ]
  ],
  "RestrictedModel": [
    [
      "tests/custom_managers/models.py",
      [
        "RestrictedModel"
      ]
    ]
  ],
  "OneToOneRestrictedModel": [
    [
      "tests/custom_managers/models.py",
      [
        "OneToOneRestrictedModel"
      ]
    ]
  ],
  "AbstractPerson": [
    [
      "tests/custom_managers/models.py",
      [
        "AbstractPerson"
      ]
    ],
    [
      "tests/model_meta/models.py",
      [
        "AbstractPerson"
      ]
    ]
  ],
  "PersonFromAbstract": [
    [
      "tests/custom_managers/models.py",
      [
        "PersonFromAbstract"
      ]
    ]
  ],
  "CustomManagerTests": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests"
      ]
    ]
  ],
  "TestCars": [
    [
      "tests/custom_managers/tests.py",
      [
        "TestCars"
      ]
    ]
  ],
  "CustomManagersRegressTestCase": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagersRegressTestCase"
      ]
    ]
  ],
  "MethodsTests": [
    [
      "tests/custom_methods/tests.py",
      [
        "MethodsTests"
      ]
    ]
  ],
  "TestOperation": [
    [
      "tests/custom_migration_operations/more_operations.py",
      [
        "TestOperation"
      ]
    ],
    [
      "tests/custom_migration_operations/operations.py",
      [
        "TestOperation"
      ]
    ]
  ],
  "ArgsOperation": [
    [
      "tests/custom_migration_operations/operations.py",
      [
        "ArgsOperation"
      ]
    ]
  ],
  "KwargsOperation": [
    [
      "tests/custom_migration_operations/operations.py",
      [
        "KwargsOperation"
      ]
    ]
  ],
  "ArgsKwargsOperation": [
    [
      "tests/custom_migration_operations/operations.py",
      [
        "ArgsKwargsOperation"
      ]
    ]
  ],
  "ExpandArgsOperation": [
    [
      "tests/custom_migration_operations/operations.py",
      [
        "ExpandArgsOperation"
      ]
    ]
  ],
  "MyWrapper": [
    [
      "tests/custom_pk/fields.py",
      [
        "MyWrapper"
      ]
    ]
  ],
  "MyAutoField": [
    [
      "tests/custom_pk/fields.py",
      [
        "MyAutoField"
      ]
    ]
  ],
  "Business": [
    [
      "tests/custom_pk/models.py",
      [
        "Business"
      ]
    ]
  ],
  "BasicCustomPKTests": [
    [
      "tests/custom_pk/tests.py",
      [
        "BasicCustomPKTests"
      ]
    ]
  ],
  "CustomPKTests": [
    [
      "tests/custom_pk/tests.py",
      [
        "CustomPKTests"
      ]
    ]
  ],
  "Donut": [
    [
      "tests/datatypes/models.py",
      [
        "Donut"
      ]
    ]
  ],
  "RumBaba": [
    [
      "tests/datatypes/models.py",
      [
        "RumBaba"
      ]
    ]
  ],
  "DataTypesTestCase": [
    [
      "tests/datatypes/tests.py",
      [
        "DataTypesTestCase"
      ]
    ]
  ],
  "Comment": [
    [
      "tests/dates/models.py",
      [
        "Comment"
      ]
    ],
    [
      "tests/datetimes/models.py",
      [
        "Comment"
      ]
    ],
    [
      "tests/model_inheritance/models.py",
      [
        "Comment"
      ]
    ],
    [
      "tests/null_fk/models.py",
      [
        "Comment"
      ]
    ],
    [
      "tests/null_fk_ordering/models.py",
      [
        "Comment"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "Comment"
      ]
    ]
  ],
  "DatesTests": [
    [
      "tests/dates/tests.py",
      [
        "DatesTests"
      ]
    ]
  ],
  "DateTimesTests": [
    [
      "tests/datetimes/tests.py",
      [
        "DateTimesTests"
      ]
    ]
  ],
  "CastTests": [
    [
      "tests/db_functions/comparison/test_cast.py",
      [
        "CastTests"
      ]
    ]
  ],
  "CoalesceTests": [
    [
      "tests/db_functions/comparison/test_coalesce.py",
      [
        "CoalesceTests"
      ]
    ]
  ],
  "GreatestTests": [
    [
      "tests/db_functions/comparison/test_greatest.py",
      [
        "GreatestTests"
      ]
    ]
  ],
  "LeastTests": [
    [
      "tests/db_functions/comparison/test_least.py",
      [
        "LeastTests"
      ]
    ]
  ],
  "NullIfTests": [
    [
      "tests/db_functions/comparison/test_nullif.py",
      [
        "NullIfTests"
      ]
    ]
  ],
  "DateFunctionTests": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests"
      ]
    ]
  ],
  "DateFunctionWithTimeZoneTests": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionWithTimeZoneTests"
      ]
    ]
  ],
  "NowTests": [
    [
      "tests/db_functions/datetime/test_now.py",
      [
        "NowTests"
      ]
    ]
  ],
  "AbsTests": [
    [
      "tests/db_functions/math/test_abs.py",
      [
        "AbsTests"
      ]
    ]
  ],
  "ACosTests": [
    [
      "tests/db_functions/math/test_acos.py",
      [
        "ACosTests"
      ]
    ]
  ],
  "ASinTests": [
    [
      "tests/db_functions/math/test_asin.py",
      [
        "ASinTests"
      ]
    ]
  ],
  "ATanTests": [
    [
      "tests/db_functions/math/test_atan.py",
      [
        "ATanTests"
      ]
    ]
  ],
  "ATan2Tests": [
    [
      "tests/db_functions/math/test_atan2.py",
      [
        "ATan2Tests"
      ]
    ]
  ],
  "CeilTests": [
    [
      "tests/db_functions/math/test_ceil.py",
      [
        "CeilTests"
      ]
    ]
  ],
  "CosTests": [
    [
      "tests/db_functions/math/test_cos.py",
      [
        "CosTests"
      ]
    ]
  ],
  "CotTests": [
    [
      "tests/db_functions/math/test_cot.py",
      [
        "CotTests"
      ]
    ]
  ],
  "DegreesTests": [
    [
      "tests/db_functions/math/test_degrees.py",
      [
        "DegreesTests"
      ]
    ]
  ],
  "ExpTests": [
    [
      "tests/db_functions/math/test_exp.py",
      [
        "ExpTests"
      ]
    ]
  ],
  "FloorTests": [
    [
      "tests/db_functions/math/test_floor.py",
      [
        "FloorTests"
      ]
    ]
  ],
  "LnTests": [
    [
      "tests/db_functions/math/test_ln.py",
      [
        "LnTests"
      ]
    ]
  ],
  "LogTests": [
    [
      "tests/db_functions/math/test_log.py",
      [
        "LogTests"
      ]
    ]
  ],
  "ModTests": [
    [
      "tests/db_functions/math/test_mod.py",
      [
        "ModTests"
      ]
    ]
  ],
  "PiTests": [
    [
      "tests/db_functions/math/test_pi.py",
      [
        "PiTests"
      ]
    ]
  ],
  "PowerTests": [
    [
      "tests/db_functions/math/test_power.py",
      [
        "PowerTests"
      ]
    ]
  ],
  "RadiansTests": [
    [
      "tests/db_functions/math/test_radians.py",
      [
        "RadiansTests"
      ]
    ]
  ],
  "RoundTests": [
    [
      "tests/db_functions/math/test_round.py",
      [
        "RoundTests"
      ]
    ]
  ],
  "SinTests": [
    [
      "tests/db_functions/math/test_sin.py",
      [
        "SinTests"
      ]
    ]
  ],
  "SqrtTests": [
    [
      "tests/db_functions/math/test_sqrt.py",
      [
        "SqrtTests"
      ]
    ]
  ],
  "TanTests": [
    [
      "tests/db_functions/math/test_tan.py",
      [
        "TanTests"
      ]
    ]
  ],
  "Fan": [
    [
      "tests/db_functions/models.py",
      [
        "Fan"
      ]
    ],
    [
      "tests/distinct_on_fields/models.py",
      [
        "Fan"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "M2mThroughFieldsTests",
        "test_invalid_order",
        "Fan"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "M2mThroughFieldsTests",
        "test_invalid_field",
        "Fan"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "M2mThroughFieldsTests",
        "test_explicit_field_names",
        "Fan"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Fan"
      ]
    ]
  ],
  "DTModel": [
    [
      "tests/db_functions/models.py",
      [
        "DTModel"
      ]
    ]
  ],
  "DecimalModel": [
    [
      "tests/db_functions/models.py",
      [
        "DecimalModel"
      ]
    ]
  ],
  "IntegerModel": [
    [
      "tests/db_functions/models.py",
      [
        "IntegerModel"
      ]
    ],
    [
      "tests/model_fields/models.py",
      [
        "IntegerModel"
      ]
    ]
  ],
  "FloatModel": [
    [
      "tests/db_functions/models.py",
      [
        "FloatModel"
      ]
    ],
    [
      "tests/model_fields/models.py",
      [
        "FloatModel"
      ]
    ]
  ],
  "UpperBilateral": [
    [
      "tests/db_functions/tests.py",
      [
        "UpperBilateral"
      ]
    ]
  ],
  "FunctionTests": [
    [
      "tests/db_functions/tests.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_add.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_addslashes.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_capfirst.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_center.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_cut.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_date.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_default.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_default_if_none.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_dictsort.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_dictsortreversed.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_divisibleby.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_escape.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_escapejs.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_filesizeformat.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_first.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_floatformat.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_force_escape.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_get_digit.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_iriencode.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_join.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_length.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_length_is.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_linebreaks.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_linebreaksbr.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_linenumbers.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_ljust.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_lower.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_make_list.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_phone2numeric.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_pluralize.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_rjust.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_slice.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_slugify.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_stringformat.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_striptags.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_time.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_timesince.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_timeuntil.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_title.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_truncatechars_html.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_truncatewords.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_truncatewords_html.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_unordered_list.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_upper.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_urlencode.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_urlizetrunc.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_wordcount.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_wordwrap.py",
      [
        "FunctionTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_yesno.py",
      [
        "FunctionTests"
      ]
    ]
  ],
  "ChrTests": [
    [
      "tests/db_functions/text/test_chr.py",
      [
        "ChrTests"
      ]
    ]
  ],
  "ConcatTests": [
    [
      "tests/db_functions/text/test_concat.py",
      [
        "ConcatTests"
      ]
    ]
  ],
  "LeftTests": [
    [
      "tests/db_functions/text/test_left.py",
      [
        "LeftTests"
      ]
    ]
  ],
  "LengthTests": [
    [
      "tests/db_functions/text/test_length.py",
      [
        "LengthTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_length.py",
      [
        "LengthTests"
      ]
    ]
  ],
  "LowerTests": [
    [
      "tests/db_functions/text/test_lower.py",
      [
        "LowerTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_lower.py",
      [
        "LowerTests"
      ]
    ]
  ],
  "OrdTests": [
    [
      "tests/db_functions/text/test_ord.py",
      [
        "OrdTests"
      ]
    ]
  ],
  "PadTests": [
    [
      "tests/db_functions/text/test_pad.py",
      [
        "PadTests"
      ]
    ]
  ],
  "RepeatTests": [
    [
      "tests/db_functions/text/test_repeat.py",
      [
        "RepeatTests"
      ]
    ]
  ],
  "ReplaceTests": [
    [
      "tests/db_functions/text/test_replace.py",
      [
        "ReplaceTests"
      ]
    ]
  ],
  "ReverseTests": [
    [
      "tests/db_functions/text/test_reverse.py",
      [
        "ReverseTests"
      ]
    ]
  ],
  "RightTests": [
    [
      "tests/db_functions/text/test_right.py",
      [
        "RightTests"
      ]
    ]
  ],
  "StrIndexTests": [
    [
      "tests/db_functions/text/test_strindex.py",
      [
        "StrIndexTests"
      ]
    ]
  ],
  "SubstrTests": [
    [
      "tests/db_functions/text/test_substr.py",
      [
        "SubstrTests"
      ]
    ]
  ],
  "TrimTests": [
    [
      "tests/db_functions/text/test_trim.py",
      [
        "TrimTests"
      ]
    ]
  ],
  "UpperTests": [
    [
      "tests/db_functions/text/test_upper.py",
      [
        "UpperTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_upper.py",
      [
        "UpperTests"
      ]
    ]
  ],
  "ValidationTests": [
    [
      "tests/db_functions/window/test_validation.py",
      [
        "ValidationTests"
      ]
    ],
    [
      "tests/model_fields/test_charfield.py",
      [
        "ValidationTests"
      ]
    ],
    [
      "tests/model_fields/test_integerfield.py",
      [
        "ValidationTests"
      ]
    ]
  ],
  "DBTypeCasts": [
    [
      "tests/db_typecasts/tests.py",
      [
        "DBTypeCasts"
      ]
    ]
  ],
  "ConnectionHandlerTests": [
    [
      "tests/db_utils/tests.py",
      [
        "ConnectionHandlerTests"
      ]
    ]
  ],
  "DatabaseErrorWrapperTests": [
    [
      "tests/db_utils/tests.py",
      [
        "DatabaseErrorWrapperTests"
      ]
    ]
  ],
  "LoadBackendTests": [
    [
      "tests/db_utils/tests.py",
      [
        "LoadBackendTests"
      ]
    ]
  ],
  "MySqlDbshellCommandTestCase": [
    [
      "tests/dbshell/test_mysql.py",
      [
        "MySqlDbshellCommandTestCase"
      ]
    ]
  ],
  "OracleDbshellTests": [
    [
      "tests/dbshell/test_oracle.py",
      [
        "OracleDbshellTests"
      ]
    ]
  ],
  "PostgreSqlDbshellCommandTestCase": [
    [
      "tests/dbshell/test_postgresql_psycopg2.py",
      [
        "PostgreSqlDbshellCommandTestCase"
      ]
    ]
  ],
  "DummyUser": [
    [
      "tests/decorators/tests.py",
      [
        "DecoratorsTest",
        "test_user_passes_test_composition",
        "DummyUser"
      ]
    ]
  ],
  "DummyRequest": [
    [
      "tests/decorators/tests.py",
      [
        "DecoratorsTest",
        "test_user_passes_test_composition",
        "DummyRequest"
      ]
    ]
  ],
  "DecoratorsTest": [
    [
      "tests/decorators/tests.py",
      [
        "DecoratorsTest"
      ]
    ]
  ],
  "ClsDec": [
    [
      "tests/decorators/tests.py",
      [
        "ClsDec"
      ]
    ]
  ],
  "TestPlain": [
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_preserve_attributes",
        "TestPlain"
      ]
    ]
  ],
  "TestMethodAndClass": [
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_preserve_attributes",
        "TestMethodAndClass"
      ]
    ]
  ],
  "TestFunctionIterable": [
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_preserve_attributes",
        "TestFunctionIterable"
      ]
    ]
  ],
  "TestMethodIterable": [
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_preserve_attributes",
        "TestMethodIterable"
      ]
    ]
  ],
  "bound_wrapper": [
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_descriptors",
        "bound_wrapper"
      ]
    ]
  ],
  "descriptor_wrapper": [
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_descriptors",
        "descriptor_wrapper"
      ]
    ]
  ],
  "Test": [
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_descriptors",
        "Test"
      ]
    ],
    [
      "tests/test_runner_apps/sample/pattern_tests.py",
      [
        "Test"
      ]
    ],
    [
      "tests/test_runner_apps/sample/tests/tests.py",
      [
        "Test"
      ]
    ]
  ],
  "TestFirst": [
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_tuple_of_decorators",
        "TestFirst"
      ]
    ]
  ],
  "TestSecond": [
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_tuple_of_decorators",
        "TestSecond"
      ]
    ]
  ],
  "MethodDecoratorTests": [
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests"
      ]
    ]
  ],
  "XFrameOptionsDecoratorsTests": [
    [
      "tests/decorators/tests.py",
      [
        "XFrameOptionsDecoratorsTests"
      ]
    ]
  ],
  "NeverCacheDecoratorTest": [
    [
      "tests/decorators/tests.py",
      [
        "NeverCacheDecoratorTest"
      ]
    ]
  ],
  "Secondary": [
    [
      "tests/defer/models.py",
      [
        "Secondary"
      ]
    ]
  ],
  "Primary": [
    [
      "tests/defer/models.py",
      [
        "Primary"
      ]
    ]
  ],
  "BigChild": [
    [
      "tests/defer/models.py",
      [
        "BigChild"
      ]
    ]
  ],
  "ChildProxy": [
    [
      "tests/defer/models.py",
      [
        "ChildProxy"
      ]
    ]
  ],
  "RefreshPrimaryProxy": [
    [
      "tests/defer/models.py",
      [
        "RefreshPrimaryProxy"
      ]
    ]
  ],
  "AssertionMixin": [
    [
      "tests/defer/tests.py",
      [
        "AssertionMixin"
      ]
    ]
  ],
  "DeferTests": [
    [
      "tests/defer/tests.py",
      [
        "DeferTests"
      ]
    ]
  ],
  "BigChildDeferTests": [
    [
      "tests/defer/tests.py",
      [
        "BigChildDeferTests"
      ]
    ]
  ],
  "TestDefer2": [
    [
      "tests/defer/tests.py",
      [
        "TestDefer2"
      ]
    ]
  ],
  "RelatedItem": [
    [
      "tests/defer_regress/models.py",
      [
        "RelatedItem"
      ]
    ]
  ],
  "ProxyRelated": [
    [
      "tests/defer_regress/models.py",
      [
        "ProxyRelated"
      ]
    ]
  ],
  "Leaf": [
    [
      "tests/defer_regress/models.py",
      [
        "Leaf"
      ]
    ]
  ],
  "ResolveThis": [
    [
      "tests/defer_regress/models.py",
      [
        "ResolveThis"
      ]
    ]
  ],
  "SimpleItem": [
    [
      "tests/defer_regress/models.py",
      [
        "SimpleItem"
      ]
    ]
  ],
  "SpecialFeature": [
    [
      "tests/defer_regress/models.py",
      [
        "SpecialFeature"
      ]
    ]
  ],
  "OneToOneItem": [
    [
      "tests/defer_regress/models.py",
      [
        "OneToOneItem"
      ]
    ]
  ],
  "ItemAndSimpleItem": [
    [
      "tests/defer_regress/models.py",
      [
        "ItemAndSimpleItem"
      ]
    ]
  ],
  "Request": [
    [
      "tests/defer_regress/models.py",
      [
        "Request"
      ]
    ]
  ],
  "Base": [
    [
      "tests/defer_regress/models.py",
      [
        "Base"
      ]
    ],
    [
      "tests/delete/models.py",
      [
        "Base"
      ]
    ],
    [
      "tests/model_inheritance/models.py",
      [
        "Base"
      ]
    ],
    [
      "tests/select_related_regress/models.py",
      [
        "Base"
      ]
    ],
    [
      "tests/string_lookup/models.py",
      [
        "Base"
      ]
    ]
  ],
  "Derived": [
    [
      "tests/defer_regress/models.py",
      [
        "Derived"
      ]
    ],
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_multiple_parents_mro",
        "Derived"
      ]
    ]
  ],
  "DeferRegressionTest": [
    [
      "tests/defer_regress/tests.py",
      [
        "DeferRegressionTest"
      ]
    ]
  ],
  "DeferAnnotateSelectRelatedTest": [
    [
      "tests/defer_regress/tests.py",
      [
        "DeferAnnotateSelectRelatedTest"
      ]
    ]
  ],
  "DeferDeletionSignalsTests": [
    [
      "tests/defer_regress/tests.py",
      [
        "DeferDeletionSignalsTests"
      ]
    ]
  ],
  "R": [
    [
      "tests/delete/models.py",
      [
        "R"
      ]
    ]
  ],
  "S": [
    [
      "tests/delete/models.py",
      [
        "S"
      ]
    ]
  ],
  "T": [
    [
      "tests/delete/models.py",
      [
        "T"
      ]
    ]
  ],
  "U": [
    [
      "tests/delete/models.py",
      [
        "U"
      ]
    ]
  ],
  "RChild": [
    [
      "tests/delete/models.py",
      [
        "RChild"
      ]
    ]
  ],
  "A": [
    [
      "tests/delete/models.py",
      [
        "A"
      ]
    ],
    [
      "tests/generic_relations_regress/models.py",
      [
        "A"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_render_project_dependencies",
        "A"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_add_relations",
        "A"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_remove_relations",
        "A"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_self_relation",
        "A"
      ]
    ],
    [
      "tests/select_related_regress/models.py",
      [
        "A"
      ]
    ],
    [
      "tests/update/models.py",
      [
        "A"
      ]
    ]
  ],
  "M": [
    [
      "tests/delete/models.py",
      [
        "M"
      ]
    ]
  ],
  "MR": [
    [
      "tests/delete/models.py",
      [
        "MR"
      ]
    ]
  ],
  "MRNull": [
    [
      "tests/delete/models.py",
      [
        "MRNull"
      ]
    ]
  ],
  "Avatar": [
    [
      "tests/delete/models.py",
      [
        "Avatar"
      ]
    ]
  ],
  "AvatarProxy": [
    [
      "tests/delete/models.py",
      [
        "AvatarProxy"
      ]
    ]
  ],
  "HiddenUser": [
    [
      "tests/delete/models.py",
      [
        "HiddenUser"
      ]
    ]
  ],
  "HiddenUserProfile": [
    [
      "tests/delete/models.py",
      [
        "HiddenUserProfile"
      ]
    ]
  ],
  "M2MTo": [
    [
      "tests/delete/models.py",
      [
        "M2MTo"
      ]
    ]
  ],
  "M2MFrom": [
    [
      "tests/delete/models.py",
      [
        "M2MFrom"
      ]
    ]
  ],
  "RelToBase": [
    [
      "tests/delete/models.py",
      [
        "RelToBase"
      ]
    ]
  ],
  "OnDeleteTests": [
    [
      "tests/delete/tests.py",
      [
        "OnDeleteTests"
      ]
    ]
  ],
  "DeletionTests": [
    [
      "tests/delete/tests.py",
      [
        "DeletionTests"
      ]
    ],
    [
      "tests/inline_formsets/tests.py",
      [
        "DeletionTests"
      ]
    ],
    [
      "tests/model_formsets/tests.py",
      [
        "DeletionTests"
      ]
    ]
  ],
  "FastDeleteTests": [
    [
      "tests/delete/tests.py",
      [
        "FastDeleteTests"
      ]
    ]
  ],
  "Award": [
    [
      "tests/delete_regress/models.py",
      [
        "Award"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Award"
      ]
    ]
  ],
  "AwardNote": [
    [
      "tests/delete_regress/models.py",
      [
        "AwardNote"
      ]
    ]
  ],
  "Toy": [
    [
      "tests/delete_regress/models.py",
      [
        "Toy"
      ]
    ]
  ],
  "PlayedWith": [
    [
      "tests/delete_regress/models.py",
      [
        "PlayedWith"
      ]
    ]
  ],
  "PlayedWithNote": [
    [
      "tests/delete_regress/models.py",
      [
        "PlayedWithNote"
      ]
    ]
  ],
  "Contact": [
    [
      "tests/delete_regress/models.py",
      [
        "Contact"
      ]
    ],
    [
      "tests/foreign_object/models/customers.py",
      [
        "Contact"
      ]
    ],
    [
      "tests/generic_inline_admin/models.py",
      [
        "Contact"
      ]
    ],
    [
      "tests/generic_relations_regress/models.py",
      [
        "Contact"
      ]
    ]
  ],
  "Researcher": [
    [
      "tests/delete_regress/models.py",
      [
        "Researcher"
      ]
    ]
  ],
  "Food": [
    [
      "tests/delete_regress/models.py",
      [
        "Food"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_create",
        "Food"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Food"
      ]
    ]
  ],
  "Eaten": [
    [
      "tests/delete_regress/models.py",
      [
        "Eaten"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Eaten"
      ]
    ]
  ],
  "Policy": [
    [
      "tests/delete_regress/models.py",
      [
        "Policy"
      ]
    ]
  ],
  "Version": [
    [
      "tests/delete_regress/models.py",
      [
        "Version"
      ]
    ]
  ],
  "Image": [
    [
      "tests/delete_regress/models.py",
      [
        "Image"
      ]
    ],
    [
      "tests/select_related_onetoone/models.py",
      [
        "Image"
      ]
    ]
  ],
  "Photo": [
    [
      "tests/delete_regress/models.py",
      [
        "Photo"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Photo"
      ]
    ]
  ],
  "FooImage": [
    [
      "tests/delete_regress/models.py",
      [
        "FooImage"
      ]
    ]
  ],
  "FooFile": [
    [
      "tests/delete_regress/models.py",
      [
        "FooFile"
      ]
    ]
  ],
  "FooPhoto": [
    [
      "tests/delete_regress/models.py",
      [
        "FooPhoto"
      ]
    ]
  ],
  "FooFileProxy": [
    [
      "tests/delete_regress/models.py",
      [
        "FooFileProxy"
      ]
    ]
  ],
  "OrgUnit": [
    [
      "tests/delete_regress/models.py",
      [
        "OrgUnit"
      ]
    ]
  ],
  "Login": [
    [
      "tests/delete_regress/models.py",
      [
        "Login"
      ]
    ]
  ],
  "House": [
    [
      "tests/delete_regress/models.py",
      [
        "House"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "House"
      ]
    ]
  ],
  "OrderedPerson": [
    [
      "tests/delete_regress/models.py",
      [
        "OrderedPerson"
      ]
    ]
  ],
  "DeleteLockingTest": [
    [
      "tests/delete_regress/tests.py",
      [
        "DeleteLockingTest"
      ]
    ]
  ],
  "DeleteCascadeTests": [
    [
      "tests/delete_regress/tests.py",
      [
        "DeleteCascadeTests"
      ]
    ]
  ],
  "DeleteCascadeTransactionTests": [
    [
      "tests/delete_regress/tests.py",
      [
        "DeleteCascadeTransactionTests"
      ]
    ]
  ],
  "LargeDeleteTests": [
    [
      "tests/delete_regress/tests.py",
      [
        "LargeDeleteTests"
      ]
    ]
  ],
  "ProxyDeleteTest": [
    [
      "tests/delete_regress/tests.py",
      [
        "ProxyDeleteTest"
      ]
    ]
  ],
  "Ticket19102Tests": [
    [
      "tests/delete_regress/tests.py",
      [
        "Ticket19102Tests"
      ]
    ]
  ],
  "DeleteTests": [
    [
      "tests/delete_regress/tests.py",
      [
        "DeleteTests"
      ]
    ]
  ],
  "RenameManagerMethods": [
    [
      "tests/deprecation/tests.py",
      [
        "RenameManagerMethods"
      ]
    ]
  ],
  "Renamed": [
    [
      "tests/deprecation/tests.py",
      [
        "RenameMethodsTests",
        "test_deprecated_subclass_renamed_and_mixins",
        "Renamed"
      ]
    ]
  ],
  "RenamedMixin": [
    [
      "tests/deprecation/tests.py",
      [
        "RenameMethodsTests",
        "test_deprecated_subclass_renamed_and_mixins",
        "RenamedMixin"
      ]
    ]
  ],
  "DeprecatedMixin": [
    [
      "tests/deprecation/tests.py",
      [
        "RenameMethodsTests",
        "test_deprecated_subclass_renamed_and_mixins",
        "DeprecatedMixin"
      ]
    ]
  ],
  "RenameMethodsTests": [
    [
      "tests/deprecation/tests.py",
      [
        "RenameMethodsTests"
      ]
    ]
  ],
  "DeprecationInstanceCheckTest": [
    [
      "tests/deprecation/tests.py",
      [
        "DeprecationInstanceCheckTest"
      ]
    ]
  ],
  "Callable": [
    [
      "tests/dispatch/tests.py",
      [
        "Callable"
      ]
    ]
  ],
  "DispatcherTests": [
    [
      "tests/dispatch/tests.py",
      [
        "DispatcherTests"
      ]
    ]
  ],
  "ReceiverTestCase": [
    [
      "tests/dispatch/tests.py",
      [
        "ReceiverTestCase"
      ]
    ]
  ],
  "Celebrity": [
    [
      "tests/distinct_on_fields/models.py",
      [
        "Celebrity"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Celebrity"
      ]
    ]
  ],
  "Staff": [
    [
      "tests/distinct_on_fields/models.py",
      [
        "Staff"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Staff"
      ]
    ]
  ],
  "StaffTag": [
    [
      "tests/distinct_on_fields/models.py",
      [
        "StaffTag"
      ]
    ]
  ],
  "DistinctOnTests": [
    [
      "tests/distinct_on_fields/tests.py",
      [
        "DistinctOnTests"
      ]
    ]
  ],
  "EmptyModelTests": [
    [
      "tests/empty/tests.py",
      [
        "EmptyModelTests"
      ]
    ]
  ],
  "RemoteEmployee": [
    [
      "tests/expressions/models.py",
      [
        "RemoteEmployee"
      ]
    ]
  ],
  "Number": [
    [
      "tests/expressions/models.py",
      [
        "Number"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Number"
      ]
    ]
  ],
  "Experiment": [
    [
      "tests/expressions/models.py",
      [
        "Experiment"
      ]
    ]
  ],
  "Result": [
    [
      "tests/expressions/models.py",
      [
        "Result"
      ]
    ]
  ],
  "Time": [
    [
      "tests/expressions/models.py",
      [
        "Time"
      ]
    ]
  ],
  "SimulationRun": [
    [
      "tests/expressions/models.py",
      [
        "SimulationRun"
      ]
    ]
  ],
  "UUIDPK": [
    [
      "tests/expressions/models.py",
      [
        "UUIDPK"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "UUIDPK"
      ]
    ]
  ],
  "UUID": [
    [
      "tests/expressions/models.py",
      [
        "UUID"
      ]
    ]
  ],
  "ValuesExpressionsTests": [
    [
      "tests/expressions/test_queryset_values.py",
      [
        "ValuesExpressionsTests"
      ]
    ]
  ],
  "BasicExpressionsTests": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests"
      ]
    ]
  ],
  "IterableLookupInnerExpressionsTests": [
    [
      "tests/expressions/tests.py",
      [
        "IterableLookupInnerExpressionsTests"
      ]
    ]
  ],
  "FTests": [
    [
      "tests/expressions/tests.py",
      [
        "FTests"
      ]
    ]
  ],
  "ExpressionsTests": [
    [
      "tests/expressions/tests.py",
      [
        "ExpressionsTests"
      ]
    ]
  ],
  "SimpleExpressionTests": [
    [
      "tests/expressions/tests.py",
      [
        "SimpleExpressionTests"
      ]
    ]
  ],
  "ExpressionsNumericTests": [
    [
      "tests/expressions/tests.py",
      [
        "ExpressionsNumericTests"
      ]
    ]
  ],
  "ExpressionOperatorTests": [
    [
      "tests/expressions/tests.py",
      [
        "ExpressionOperatorTests"
      ]
    ]
  ],
  "FTimeDeltaTests": [
    [
      "tests/expressions/tests.py",
      [
        "FTimeDeltaTests"
      ]
    ]
  ],
  "ValueTests": [
    [
      "tests/expressions/tests.py",
      [
        "ValueTests"
      ]
    ]
  ],
  "FieldTransformTests": [
    [
      "tests/expressions/tests.py",
      [
        "FieldTransformTests"
      ]
    ]
  ],
  "ReprTests": [
    [
      "tests/expressions/tests.py",
      [
        "ReprTests"
      ]
    ]
  ],
  "CombinableTests": [
    [
      "tests/expressions/tests.py",
      [
        "CombinableTests"
      ]
    ]
  ],
  "CaseTestModel": [
    [
      "tests/expressions_case/models.py",
      [
        "CaseTestModel"
      ]
    ]
  ],
  "O2OCaseTestModel": [
    [
      "tests/expressions_case/models.py",
      [
        "O2OCaseTestModel"
      ]
    ]
  ],
  "FKCaseTestModel": [
    [
      "tests/expressions_case/models.py",
      [
        "FKCaseTestModel"
      ]
    ]
  ],
  "CaseExpressionTests": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests"
      ]
    ]
  ],
  "CaseDocumentationExamples": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseDocumentationExamples"
      ]
    ]
  ],
  "CaseWhenTests": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseWhenTests"
      ]
    ]
  ],
  "WindowFunctionTests": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests"
      ]
    ]
  ],
  "NonQueryWindowTests": [
    [
      "tests/expressions_window/tests.py",
      [
        "NonQueryWindowTests"
      ]
    ]
  ],
  "RevisionableModel": [
    [
      "tests/extra_regress/models.py",
      [
        "RevisionableModel"
      ]
    ]
  ],
  "Order": [
    [
      "tests/extra_regress/models.py",
      [
        "Order"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Order"
      ]
    ],
    [
      "tests/select_related/models.py",
      [
        "Order"
      ]
    ]
  ],
  "TestObject": [
    [
      "tests/extra_regress/models.py",
      [
        "TestObject"
      ]
    ],
    [
      "tests/template_tests/test_logging.py",
      [
        "VariableResolveLoggingTests",
        "test_log_on_variable_does_not_exist_silent",
        "TestObject"
      ]
    ]
  ],
  "ExtraRegressTests": [
    [
      "tests/extra_regress/tests.py",
      [
        "ExtraRegressTests"
      ]
    ]
  ],
  "FieldDeconstructionTests": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests"
      ]
    ]
  ],
  "DefaultTests": [
    [
      "tests/field_defaults/tests.py",
      [
        "DefaultTests"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_default.py",
      [
        "DefaultTests"
      ]
    ]
  ],
  "CustomTypedField": [
    [
      "tests/field_subclassing/fields.py",
      [
        "CustomTypedField"
      ]
    ]
  ],
  "TestDbType": [
    [
      "tests/field_subclassing/tests.py",
      [
        "TestDbType"
      ]
    ]
  ],
  "CustomValidNameStorage": [
    [
      "tests/file_storage/models.py",
      [
        "CustomValidNameStorage"
      ]
    ]
  ],
  "AWSS3Storage": [
    [
      "tests/file_storage/test_generate_filename.py",
      [
        "AWSS3Storage"
      ]
    ]
  ],
  "GenerateFilenameStorageTests": [
    [
      "tests/file_storage/test_generate_filename.py",
      [
        "GenerateFilenameStorageTests"
      ]
    ]
  ],
  "GetStorageClassTests": [
    [
      "tests/file_storage/tests.py",
      [
        "GetStorageClassTests"
      ]
    ]
  ],
  "FileSystemStorageTests": [
    [
      "tests/file_storage/tests.py",
      [
        "FileSystemStorageTests"
      ]
    ]
  ],
  "FileStorageTests": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests"
      ]
    ]
  ],
  "CustomStorage": [
    [
      "tests/file_storage/tests.py",
      [
        "CustomStorage"
      ]
    ]
  ],
  "CustomStorageTests": [
    [
      "tests/file_storage/tests.py",
      [
        "CustomStorageTests"
      ]
    ]
  ],
  "OverwritingStorage": [
    [
      "tests/file_storage/tests.py",
      [
        "OverwritingStorage"
      ]
    ]
  ],
  "OverwritingStorageTests": [
    [
      "tests/file_storage/tests.py",
      [
        "OverwritingStorageTests"
      ]
    ]
  ],
  "DiscardingFalseContentStorage": [
    [
      "tests/file_storage/tests.py",
      [
        "DiscardingFalseContentStorage"
      ]
    ]
  ],
  "DiscardingFalseContentStorageTests": [
    [
      "tests/file_storage/tests.py",
      [
        "DiscardingFalseContentStorageTests"
      ]
    ]
  ],
  "FileFieldStorageTests": [
    [
      "tests/file_storage/tests.py",
      [
        "FileFieldStorageTests"
      ]
    ]
  ],
  "SlowFile": [
    [
      "tests/file_storage/tests.py",
      [
        "SlowFile"
      ]
    ]
  ],
  "FileSaveRaceConditionTest": [
    [
      "tests/file_storage/tests.py",
      [
        "FileSaveRaceConditionTest"
      ]
    ]
  ],
  "FileStoragePermissions": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStoragePermissions"
      ]
    ]
  ],
  "FileStoragePathParsing": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStoragePathParsing"
      ]
    ]
  ],
  "ContentFileStorageTestCase": [
    [
      "tests/file_storage/tests.py",
      [
        "ContentFileStorageTestCase"
      ]
    ]
  ],
  "FileLikeObjectTestCase": [
    [
      "tests/file_storage/tests.py",
      [
        "FileLikeObjectTestCase"
      ]
    ]
  ],
  "FileModel": [
    [
      "tests/file_uploads/models.py",
      [
        "FileModel"
      ]
    ],
    [
      "tests/forms_tests/models.py",
      [
        "FileModel"
      ]
    ]
  ],
  "POSTAccessingHandler": [
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests",
        "test_file_error_blocking",
        "POSTAccessingHandler"
      ]
    ]
  ],
  "FileUploadTests": [
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests"
      ]
    ]
  ],
  "DirectoryCreationTests": [
    [
      "tests/file_uploads/tests.py",
      [
        "DirectoryCreationTests"
      ]
    ]
  ],
  "MultiParserTests": [
    [
      "tests/file_uploads/tests.py",
      [
        "MultiParserTests"
      ]
    ]
  ],
  "QuotaUploadHandler": [
    [
      "tests/file_uploads/uploadhandler.py",
      [
        "QuotaUploadHandler"
      ]
    ]
  ],
  "CustomUploadError": [
    [
      "tests/file_uploads/uploadhandler.py",
      [
        "CustomUploadError"
      ]
    ]
  ],
  "ErroringUploadHandler": [
    [
      "tests/file_uploads/uploadhandler.py",
      [
        "ErroringUploadHandler"
      ]
    ]
  ],
  "FileTests": [
    [
      "tests/files/tests.py",
      [
        "FileTests"
      ]
    ]
  ],
  "NoNameFileTestCase": [
    [
      "tests/files/tests.py",
      [
        "NoNameFileTestCase"
      ]
    ]
  ],
  "ContentFileTestCase": [
    [
      "tests/files/tests.py",
      [
        "ContentFileTestCase"
      ]
    ]
  ],
  "InMemoryUploadedFileTests": [
    [
      "tests/files/tests.py",
      [
        "InMemoryUploadedFileTests"
      ]
    ]
  ],
  "TemporaryUploadedFileTests": [
    [
      "tests/files/tests.py",
      [
        "TemporaryUploadedFileTests"
      ]
    ]
  ],
  "FileWrapper": [
    [
      "tests/files/tests.py",
      [
        "DimensionClosingBug",
        "test_closing_of_filenames",
        "FileWrapper"
      ]
    ]
  ],
  "DimensionClosingBug": [
    [
      "tests/files/tests.py",
      [
        "DimensionClosingBug"
      ]
    ]
  ],
  "InconsistentGetImageDimensionsBug": [
    [
      "tests/files/tests.py",
      [
        "InconsistentGetImageDimensionsBug"
      ]
    ]
  ],
  "GetImageDimensionsTests": [
    [
      "tests/files/tests.py",
      [
        "GetImageDimensionsTests"
      ]
    ]
  ],
  "FileMoveSafeTests": [
    [
      "tests/files/tests.py",
      [
        "FileMoveSafeTests"
      ]
    ]
  ],
  "SpooledTempTests": [
    [
      "tests/files/tests.py",
      [
        "SpooledTempTests"
      ]
    ]
  ],
  "Editor": [
    [
      "tests/filtered_relation/models.py",
      [
        "Editor"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Editor"
      ]
    ],
    [
      "tests/model_options/models/default_related_name.py",
      [
        "Editor"
      ]
    ]
  ],
  "Borrower": [
    [
      "tests/filtered_relation/models.py",
      [
        "Borrower"
      ]
    ]
  ],
  "RentalSession": [
    [
      "tests/filtered_relation/models.py",
      [
        "RentalSession"
      ]
    ]
  ],
  "FilteredRelationTests": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests"
      ]
    ]
  ],
  "FilteredRelationAggregationTests": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationAggregationTests"
      ]
    ]
  ],
  "Blog": [
    [
      "tests/fixtures/models.py",
      [
        "Blog"
      ]
    ]
  ],
  "SpyManager": [
    [
      "tests/fixtures/models.py",
      [
        "SpyManager"
      ]
    ]
  ],
  "Spy": [
    [
      "tests/fixtures/models.py",
      [
        "Spy"
      ]
    ]
  ],
  "ProxySpy": [
    [
      "tests/fixtures/models.py",
      [
        "ProxySpy"
      ]
    ]
  ],
  "Visa": [
    [
      "tests/fixtures/models.py",
      [
        "Visa"
      ]
    ]
  ],
  "PrimaryKeyUUIDModel": [
    [
      "tests/fixtures/models.py",
      [
        "PrimaryKeyUUIDModel"
      ]
    ],
    [
      "tests/model_fields/models.py",
      [
        "PrimaryKeyUUIDModel"
      ]
    ]
  ],
  "NaturalKeyThing": [
    [
      "tests/fixtures/models.py",
      [
        "NaturalKeyThing"
      ]
    ],
    [
      "tests/serializers/models/natural.py",
      [
        "NaturalKeyThing"
      ]
    ]
  ],
  "TestCaseFixtureLoadingTests": [
    [
      "tests/fixtures/tests.py",
      [
        "TestCaseFixtureLoadingTests"
      ]
    ]
  ],
  "SubclassTestCaseFixtureLoadingTests": [
    [
      "tests/fixtures/tests.py",
      [
        "SubclassTestCaseFixtureLoadingTests"
      ]
    ]
  ],
  "DumpDataAssertMixin": [
    [
      "tests/fixtures/tests.py",
      [
        "DumpDataAssertMixin"
      ]
    ]
  ],
  "FixtureLoadingTests": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureLoadingTests"
      ]
    ]
  ],
  "NonexistentFixtureTests": [
    [
      "tests/fixtures/tests.py",
      [
        "NonexistentFixtureTests"
      ]
    ]
  ],
  "FixtureTransactionTests": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureTransactionTests"
      ]
    ]
  ],
  "ForwardReferenceTests": [
    [
      "tests/fixtures/tests.py",
      [
        "ForwardReferenceTests"
      ]
    ]
  ],
  "SampleTestCase": [
    [
      "tests/fixtures_model_package/tests.py",
      [
        "SampleTestCase"
      ]
    ]
  ],
  "FixtureTestCase": [
    [
      "tests/fixtures_model_package/tests.py",
      [
        "FixtureTestCase"
      ]
    ],
    [
      "tests/multiple_database/tests.py",
      [
        "FixtureTestCase"
      ]
    ]
  ],
  "Animal": [
    [
      "tests/fixtures_regress/models.py",
      [
        "Animal"
      ]
    ],
    [
      "tests/generic_relations/models.py",
      [
        "Animal"
      ]
    ]
  ],
  "Plant": [
    [
      "tests/fixtures_regress/models.py",
      [
        "Plant"
      ]
    ]
  ],
  "Stuff": [
    [
      "tests/fixtures_regress/models.py",
      [
        "Stuff"
      ]
    ]
  ],
  "Absolute": [
    [
      "tests/fixtures_regress/models.py",
      [
        "Absolute"
      ]
    ]
  ],
  "Channel": [
    [
      "tests/fixtures_regress/models.py",
      [
        "Channel"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Channel"
      ]
    ]
  ],
  "SpecialArticle": [
    [
      "tests/fixtures_regress/models.py",
      [
        "SpecialArticle"
      ]
    ]
  ],
  "CommonFeature": [
    [
      "tests/fixtures_regress/models.py",
      [
        "CommonFeature"
      ]
    ]
  ],
  "WidgetProxy": [
    [
      "tests/fixtures_regress/models.py",
      [
        "WidgetProxy"
      ]
    ]
  ],
  "TestManager": [
    [
      "tests/fixtures_regress/models.py",
      [
        "TestManager"
      ]
    ]
  ],
  "NKManager": [
    [
      "tests/fixtures_regress/models.py",
      [
        "NKManager"
      ]
    ]
  ],
  "NKChild": [
    [
      "tests/fixtures_regress/models.py",
      [
        "NKChild"
      ]
    ]
  ],
  "RefToNKChild": [
    [
      "tests/fixtures_regress/models.py",
      [
        "RefToNKChild"
      ]
    ]
  ],
  "Circle1": [
    [
      "tests/fixtures_regress/models.py",
      [
        "Circle1"
      ]
    ]
  ],
  "Circle2": [
    [
      "tests/fixtures_regress/models.py",
      [
        "Circle2"
      ]
    ]
  ],
  "Circle3": [
    [
      "tests/fixtures_regress/models.py",
      [
        "Circle3"
      ]
    ]
  ],
  "Circle4": [
    [
      "tests/fixtures_regress/models.py",
      [
        "Circle4"
      ]
    ]
  ],
  "Circle5": [
    [
      "tests/fixtures_regress/models.py",
      [
        "Circle5"
      ]
    ]
  ],
  "Circle6": [
    [
      "tests/fixtures_regress/models.py",
      [
        "Circle6"
      ]
    ]
  ],
  "ExternalDependency": [
    [
      "tests/fixtures_regress/models.py",
      [
        "ExternalDependency"
      ]
    ]
  ],
  "Thingy": [
    [
      "tests/fixtures_regress/models.py",
      [
        "Thingy"
      ]
    ]
  ],
  "M2MToSelf": [
    [
      "tests/fixtures_regress/models.py",
      [
        "M2MToSelf"
      ]
    ]
  ],
  "BaseNKModel": [
    [
      "tests/fixtures_regress/models.py",
      [
        "BaseNKModel"
      ]
    ]
  ],
  "M2MSimpleA": [
    [
      "tests/fixtures_regress/models.py",
      [
        "M2MSimpleA"
      ]
    ]
  ],
  "M2MSimpleB": [
    [
      "tests/fixtures_regress/models.py",
      [
        "M2MSimpleB"
      ]
    ]
  ],
  "M2MSimpleCircularA": [
    [
      "tests/fixtures_regress/models.py",
      [
        "M2MSimpleCircularA"
      ]
    ]
  ],
  "M2MSimpleCircularB": [
    [
      "tests/fixtures_regress/models.py",
      [
        "M2MSimpleCircularB"
      ]
    ]
  ],
  "M2MComplexA": [
    [
      "tests/fixtures_regress/models.py",
      [
        "M2MComplexA"
      ]
    ]
  ],
  "M2MComplexB": [
    [
      "tests/fixtures_regress/models.py",
      [
        "M2MComplexB"
      ]
    ]
  ],
  "M2MThroughAB": [
    [
      "tests/fixtures_regress/models.py",
      [
        "M2MThroughAB"
      ]
    ]
  ],
  "M2MComplexCircular1A": [
    [
      "tests/fixtures_regress/models.py",
      [
        "M2MComplexCircular1A"
      ]
    ]
  ],
  "M2MComplexCircular1B": [
    [
      "tests/fixtures_regress/models.py",
      [
        "M2MComplexCircular1B"
      ]
    ]
  ],
  "M2MComplexCircular1C": [
    [
      "tests/fixtures_regress/models.py",
      [
        "M2MComplexCircular1C"
      ]
    ]
  ],
  "M2MCircular1ThroughAB": [
    [
      "tests/fixtures_regress/models.py",
      [
        "M2MCircular1ThroughAB"
      ]
    ]
  ],
  "M2MCircular1ThroughBC": [
    [
      "tests/fixtures_regress/models.py",
      [
        "M2MCircular1ThroughBC"
      ]
    ]
  ],
  "M2MCircular1ThroughCA": [
    [
      "tests/fixtures_regress/models.py",
      [
        "M2MCircular1ThroughCA"
      ]
    ]
  ],
  "M2MComplexCircular2A": [
    [
      "tests/fixtures_regress/models.py",
      [
        "M2MComplexCircular2A"
      ]
    ]
  ],
  "M2MComplexCircular2B": [
    [
      "tests/fixtures_regress/models.py",
      [
        "M2MComplexCircular2B"
      ]
    ]
  ],
  "M2MCircular2ThroughAB": [
    [
      "tests/fixtures_regress/models.py",
      [
        "M2MCircular2ThroughAB"
      ]
    ]
  ],
  "TestFixtures": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures"
      ]
    ]
  ],
  "NaturalKeyFixtureTests": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "NaturalKeyFixtureTests"
      ]
    ]
  ],
  "M2MNaturalKeyFixtureTests": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "M2MNaturalKeyFixtureTests"
      ]
    ]
  ],
  "TestTicket11101": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestTicket11101"
      ]
    ]
  ],
  "TestLoadFixtureFromOtherAppDirectory": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestLoadFixtureFromOtherAppDirectory"
      ]
    ]
  ],
  "FlatpageCSRFTests": [
    [
      "tests/flatpages_tests/test_csrf.py",
      [
        "FlatpageCSRFTests"
      ]
    ]
  ],
  "FlatpageAdminFormTests": [
    [
      "tests/flatpages_tests/test_forms.py",
      [
        "FlatpageAdminFormTests"
      ]
    ]
  ],
  "FlatpageMiddlewareTests": [
    [
      "tests/flatpages_tests/test_middleware.py",
      [
        "FlatpageMiddlewareTests"
      ]
    ]
  ],
  "FlatpageMiddlewareAppendSlashTests": [
    [
      "tests/flatpages_tests/test_middleware.py",
      [
        "FlatpageMiddlewareAppendSlashTests"
      ]
    ]
  ],
  "FlatpageModelTests": [
    [
      "tests/flatpages_tests/test_models.py",
      [
        "FlatpageModelTests"
      ]
    ]
  ],
  "FlatpagesSitemapTests": [
    [
      "tests/flatpages_tests/test_sitemaps.py",
      [
        "FlatpagesSitemapTests"
      ]
    ]
  ],
  "FlatpageTemplateTagTests": [
    [
      "tests/flatpages_tests/test_templatetags.py",
      [
        "FlatpageTemplateTagTests"
      ]
    ]
  ],
  "FlatpageViewTests": [
    [
      "tests/flatpages_tests/test_views.py",
      [
        "FlatpageViewTests"
      ]
    ]
  ],
  "FlatpageViewAppendSlashTests": [
    [
      "tests/flatpages_tests/test_views.py",
      [
        "FlatpageViewAppendSlashTests"
      ]
    ]
  ],
  "Counter": [
    [
      "tests/force_insert_update/models.py",
      [
        "Counter"
      ]
    ]
  ],
  "InheritedCounter": [
    [
      "tests/force_insert_update/models.py",
      [
        "InheritedCounter"
      ]
    ]
  ],
  "ProxyCounter": [
    [
      "tests/force_insert_update/models.py",
      [
        "ProxyCounter"
      ]
    ]
  ],
  "SubCounter": [
    [
      "tests/force_insert_update/models.py",
      [
        "SubCounter"
      ]
    ]
  ],
  "WithCustomPK": [
    [
      "tests/force_insert_update/models.py",
      [
        "WithCustomPK"
      ]
    ]
  ],
  "ForceTests": [
    [
      "tests/force_insert_update/tests.py",
      [
        "ForceTests"
      ]
    ]
  ],
  "InheritanceTests": [
    [
      "tests/force_insert_update/tests.py",
      [
        "InheritanceTests"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests"
      ]
    ]
  ],
  "ArticleTranslationDescriptor": [
    [
      "tests/foreign_object/models/article.py",
      [
        "ArticleTranslationDescriptor"
      ]
    ]
  ],
  "ColConstraint": [
    [
      "tests/foreign_object/models/article.py",
      [
        "ColConstraint"
      ]
    ]
  ],
  "ActiveTranslationField": [
    [
      "tests/foreign_object/models/article.py",
      [
        "ActiveTranslationField"
      ]
    ]
  ],
  "ActiveTranslationFieldWithQ": [
    [
      "tests/foreign_object/models/article.py",
      [
        "ActiveTranslationFieldWithQ"
      ]
    ]
  ],
  "NewsArticle": [
    [
      "tests/foreign_object/models/article.py",
      [
        "NewsArticle"
      ]
    ]
  ],
  "ArticleTranslation": [
    [
      "tests/foreign_object/models/article.py",
      [
        "ArticleTranslation"
      ]
    ],
    [
      "tests/indexes/models.py",
      [
        "ArticleTranslation"
      ]
    ]
  ],
  "ArticleTag": [
    [
      "tests/foreign_object/models/article.py",
      [
        "ArticleTag"
      ]
    ]
  ],
  "ArticleIdea": [
    [
      "tests/foreign_object/models/article.py",
      [
        "ArticleIdea"
      ]
    ]
  ],
  "Address": [
    [
      "tests/foreign_object/models/customers.py",
      [
        "Address"
      ]
    ],
    [
      "tests/generic_relations_regress/models.py",
      [
        "Address"
      ]
    ]
  ],
  "Customer": [
    [
      "tests/foreign_object/models/customers.py",
      [
        "Customer"
      ]
    ]
  ],
  "CustomForeignObjectRel": [
    [
      "tests/foreign_object/models/empty_join.py",
      [
        "CustomForeignObjectRel"
      ]
    ]
  ],
  "StartsWithRelation": [
    [
      "tests/foreign_object/models/empty_join.py",
      [
        "StartsWithRelation"
      ]
    ]
  ],
  "BrokenContainsRelation": [
    [
      "tests/foreign_object/models/empty_join.py",
      [
        "BrokenContainsRelation"
      ]
    ]
  ],
  "SlugPage": [
    [
      "tests/foreign_object/models/empty_join.py",
      [
        "SlugPage"
      ]
    ]
  ],
  "Friendship": [
    [
      "tests/foreign_object/models/person.py",
      [
        "Friendship"
      ]
    ],
    [
      "tests/m2m_through/models.py",
      [
        "Friendship"
      ]
    ]
  ],
  "TestLookupQuery": [
    [
      "tests/foreign_object/test_agnostic_order_trimjoin.py",
      [
        "TestLookupQuery"
      ]
    ]
  ],
  "RestrictedConditionsTests": [
    [
      "tests/foreign_object/test_empty_join.py",
      [
        "RestrictedConditionsTests"
      ]
    ]
  ],
  "FormsTests": [
    [
      "tests/foreign_object/test_forms.py",
      [
        "FormsTests"
      ]
    ]
  ],
  "MultiColumnFKTests": [
    [
      "tests/foreign_object/tests.py",
      [
        "MultiColumnFKTests"
      ]
    ]
  ],
  "TestModelCheckTests": [
    [
      "tests/foreign_object/tests.py",
      [
        "TestModelCheckTests"
      ]
    ]
  ],
  "TestExtraJoinFilterQ": [
    [
      "tests/foreign_object/tests.py",
      [
        "TestExtraJoinFilterQ"
      ]
    ]
  ],
  "FormFieldAssertionsMixin": [
    [
      "tests/forms_tests/field_tests/__init__.py",
      [
        "FormFieldAssertionsMixin"
      ]
    ]
  ],
  "BasicFieldsTests": [
    [
      "tests/forms_tests/field_tests/test_base.py",
      [
        "BasicFieldsTests"
      ]
    ]
  ],
  "DisabledFieldTests": [
    [
      "tests/forms_tests/field_tests/test_base.py",
      [
        "DisabledFieldTests"
      ]
    ]
  ],
  "BooleanFieldTest": [
    [
      "tests/forms_tests/field_tests/test_booleanfield.py",
      [
        "BooleanFieldTest"
      ]
    ]
  ],
  "CharFieldTest": [
    [
      "tests/forms_tests/field_tests/test_charfield.py",
      [
        "CharFieldTest"
      ]
    ]
  ],
  "ChoiceFieldTest": [
    [
      "tests/forms_tests/field_tests/test_choicefield.py",
      [
        "ChoiceFieldTest"
      ]
    ]
  ],
  "ComboFieldTest": [
    [
      "tests/forms_tests/field_tests/test_combofield.py",
      [
        "ComboFieldTest"
      ]
    ]
  ],
  "GetDate": [
    [
      "tests/forms_tests/field_tests/test_datefield.py",
      [
        "GetDate"
      ]
    ]
  ],
  "GetDateShowHiddenInitial": [
    [
      "tests/forms_tests/field_tests/test_datefield.py",
      [
        "DateFieldTest",
        "test_l10n_date_changed",
        "GetDateShowHiddenInitial"
      ]
    ]
  ],
  "DateFieldTest": [
    [
      "tests/forms_tests/field_tests/test_datefield.py",
      [
        "DateFieldTest"
      ]
    ]
  ],
  "DateTimeFieldTest": [
    [
      "tests/forms_tests/field_tests/test_datetimefield.py",
      [
        "DateTimeFieldTest"
      ]
    ]
  ],
  "DecimalFieldTest": [
    [
      "tests/forms_tests/field_tests/test_decimalfield.py",
      [
        "DecimalFieldTest"
      ]
    ]
  ],
  "DurationFieldTest": [
    [
      "tests/forms_tests/field_tests/test_durationfield.py",
      [
        "DurationFieldTest"
      ]
    ]
  ],
  "EmailFieldTest": [
    [
      "tests/forms_tests/field_tests/test_emailfield.py",
      [
        "EmailFieldTest"
      ]
    ]
  ],
  "FileFieldTest": [
    [
      "tests/forms_tests/field_tests/test_filefield.py",
      [
        "FileFieldTest"
      ]
    ]
  ],
  "FilePathFieldTest": [
    [
      "tests/forms_tests/field_tests/test_filepathfield.py",
      [
        "FilePathFieldTest"
      ]
    ]
  ],
  "FloatFieldTest": [
    [
      "tests/forms_tests/field_tests/test_floatfield.py",
      [
        "FloatFieldTest"
      ]
    ]
  ],
  "GenericIPAddressFieldTest": [
    [
      "tests/forms_tests/field_tests/test_genericipaddressfield.py",
      [
        "GenericIPAddressFieldTest"
      ]
    ]
  ],
  "ImageFieldTest": [
    [
      "tests/forms_tests/field_tests/test_imagefield.py",
      [
        "ImageFieldTest"
      ]
    ]
  ],
  "IntegerFieldTest": [
    [
      "tests/forms_tests/field_tests/test_integerfield.py",
      [
        "IntegerFieldTest"
      ]
    ]
  ],
  "MultipleChoiceFieldTest": [
    [
      "tests/forms_tests/field_tests/test_multiplechoicefield.py",
      [
        "MultipleChoiceFieldTest"
      ]
    ]
  ],
  "ComplexMultiWidget": [
    [
      "tests/forms_tests/field_tests/test_multivaluefield.py",
      [
        "ComplexMultiWidget"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_multiwidget.py",
      [
        "ComplexMultiWidget"
      ]
    ]
  ],
  "ComplexField": [
    [
      "tests/forms_tests/field_tests/test_multivaluefield.py",
      [
        "ComplexField"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_multiwidget.py",
      [
        "ComplexField"
      ]
    ]
  ],
  "ComplexFieldForm": [
    [
      "tests/forms_tests/field_tests/test_multivaluefield.py",
      [
        "ComplexFieldForm"
      ]
    ]
  ],
  "MultiValueFieldTest": [
    [
      "tests/forms_tests/field_tests/test_multivaluefield.py",
      [
        "MultiValueFieldTest"
      ]
    ]
  ],
  "NullBooleanFieldTest": [
    [
      "tests/forms_tests/field_tests/test_nullbooleanfield.py",
      [
        "NullBooleanFieldTest"
      ]
    ]
  ],
  "RegexFieldTest": [
    [
      "tests/forms_tests/field_tests/test_regexfield.py",
      [
        "RegexFieldTest"
      ]
    ]
  ],
  "SlugFieldTest": [
    [
      "tests/forms_tests/field_tests/test_slugfield.py",
      [
        "SlugFieldTest"
      ]
    ]
  ],
  "SplitDateTimeFieldTest": [
    [
      "tests/forms_tests/field_tests/test_splitdatetimefield.py",
      [
        "SplitDateTimeFieldTest"
      ]
    ]
  ],
  "TimeFieldTest": [
    [
      "tests/forms_tests/field_tests/test_timefield.py",
      [
        "TimeFieldTest"
      ]
    ]
  ],
  "TypedChoiceFieldTest": [
    [
      "tests/forms_tests/field_tests/test_typedchoicefield.py",
      [
        "TypedChoiceFieldTest"
      ]
    ]
  ],
  "TypedMultipleChoiceFieldTest": [
    [
      "tests/forms_tests/field_tests/test_typedmultiplechoicefield.py",
      [
        "TypedMultipleChoiceFieldTest"
      ]
    ]
  ],
  "URLFieldTest": [
    [
      "tests/forms_tests/field_tests/test_urlfield.py",
      [
        "URLFieldTest"
      ]
    ]
  ],
  "UUIDFieldTest": [
    [
      "tests/forms_tests/field_tests/test_uuidfield.py",
      [
        "UUIDFieldTest"
      ]
    ]
  ],
  "BoundaryModel": [
    [
      "tests/forms_tests/models.py",
      [
        "BoundaryModel"
      ]
    ]
  ],
  "Defaults": [
    [
      "tests/forms_tests/models.py",
      [
        "Defaults"
      ]
    ]
  ],
  "ChoiceModel": [
    [
      "tests/forms_tests/models.py",
      [
        "ChoiceModel"
      ]
    ]
  ],
  "ChoiceOptionModel": [
    [
      "tests/forms_tests/models.py",
      [
        "ChoiceOptionModel"
      ]
    ]
  ],
  "ChoiceFieldModel": [
    [
      "tests/forms_tests/models.py",
      [
        "ChoiceFieldModel"
      ]
    ]
  ],
  "OptionalMultiChoiceModel": [
    [
      "tests/forms_tests/models.py",
      [
        "OptionalMultiChoiceModel"
      ]
    ]
  ],
  "AssertFormErrorsMixin": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "AssertFormErrorsMixin"
      ]
    ]
  ],
  "TestForm": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "FormsErrorMessagesTestCase",
        "test_subclassing_errorlist",
        "TestForm"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_hidden_widget",
        "TestForm"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_field_order",
        "TestForm"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_explicit_field_order",
        "TestForm"
      ]
    ],
    [
      "tests/test_client/views.py",
      [
        "TestForm"
      ]
    ]
  ],
  "CustomErrorList": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "FormsErrorMessagesTestCase",
        "test_subclassing_errorlist",
        "CustomErrorList"
      ]
    ]
  ],
  "SomeForm": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "FormsErrorMessagesTestCase",
        "test_error_messages_escaping",
        "SomeForm"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_field_name_with_hidden_input",
        "SomeForm"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_field_name_with_hidden_input_and_non_matching_row_ender",
        "SomeForm"
      ]
    ],
    [
      "tests/forms_tests/tests/test_i18n.py",
      [
        "FormsI18nTests",
        "test_non_ascii_choices",
        "SomeForm"
      ]
    ]
  ],
  "SomeForm_1": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "FormsErrorMessagesTestCase",
        "test_error_messages_escaping",
        "SomeForm_1"
      ]
    ]
  ],
  "SomeForm_2": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "FormsErrorMessagesTestCase",
        "test_error_messages_escaping",
        "SomeForm_2"
      ]
    ]
  ],
  "FormsErrorMessagesTestCase": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "FormsErrorMessagesTestCase"
      ]
    ]
  ],
  "ModelChoiceFieldErrorMessagesTestCase": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "ModelChoiceFieldErrorMessagesTestCase"
      ]
    ]
  ],
  "PersonNew": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "PersonNew"
      ]
    ]
  ],
  "MultiValueDictLike": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "MultiValueDictLike"
      ]
    ]
  ],
  "OptionalPersonForm": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_optional_data",
        "OptionalPersonForm"
      ]
    ]
  ],
  "OptionalPersonForm_1": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_optional_data",
        "OptionalPersonForm_1"
      ]
    ]
  ],
  "SignupForm": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_various_boolean_values",
        "SignupForm"
      ]
    ]
  ],
  "ContactForm": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_widget_output",
        "ContactForm"
      ]
    ],
    [
      "tests/generic_views/forms.py",
      [
        "ContactForm"
      ]
    ],
    [
      "tests/messages_tests/urls.py",
      [
        "ContactForm"
      ]
    ]
  ],
  "ContactForm_1": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_widget_output",
        "ContactForm_1"
      ]
    ]
  ],
  "FrameworkForm": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_forms_with_choices",
        "FrameworkForm"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_forms_with_radio",
        "FrameworkForm"
      ]
    ]
  ],
  "FrameworkForm_1": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_forms_with_choices",
        "FrameworkForm_1"
      ]
    ]
  ],
  "FrameworkForm_2": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_forms_with_choices",
        "FrameworkForm_2"
      ]
    ]
  ],
  "FrameworkForm_3": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_forms_with_choices",
        "FrameworkForm_3"
      ]
    ]
  ],
  "FrameworkForm_4": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_forms_with_choices",
        "FrameworkForm_4"
      ]
    ]
  ],
  "BeatleForm": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_form_with_iterable_boundfield_id",
        "BeatleForm"
      ]
    ]
  ],
  "PersonForm": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_form_with_disabled_fields",
        "PersonForm"
      ]
    ]
  ],
  "PersonFormFieldInitial": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_form_with_disabled_fields",
        "PersonFormFieldInitial"
      ]
    ]
  ],
  "MessageForm": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_hidden_data",
        "MessageForm"
      ]
    ]
  ],
  "SongFormHidden": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_multiple_hidden",
        "SongFormHidden"
      ]
    ]
  ],
  "EscapingForm": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_escaping",
        "EscapingForm"
      ]
    ]
  ],
  "UserRegistration": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_validating_multiple_fields",
        "UserRegistration"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_has_error",
        "UserRegistration"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_form_html_attributes",
        "UserRegistration"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_specifying_labels",
        "UserRegistration"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_initial_data",
        "UserRegistration"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_dynamic_initial_data",
        "UserRegistration"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_callable_initial_data",
        "UserRegistration"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_help_text",
        "UserRegistration"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_basic_processing_in_view",
        "UserRegistration"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_templates_with_forms",
        "UserRegistration"
      ]
    ]
  ],
  "UserRegistration_1": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_validating_multiple_fields",
        "UserRegistration_1"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_form_html_attributes",
        "UserRegistration_1"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_dynamic_initial_data",
        "UserRegistration_1"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_callable_initial_data",
        "UserRegistration_1"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_help_text",
        "UserRegistration_1"
      ]
    ]
  ],
  "CodeForm": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_update_error_dict",
        "CodeForm"
      ]
    ]
  ],
  "MyForm": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_dynamic_construction",
        "MyForm"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_error_dict",
        "MyForm"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_error_dict_as_json_escape_html",
        "MyForm"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_use_required_attribute_true",
        "MyForm"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_use_required_attribute_false",
        "MyForm"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_form_media",
        "MyForm"
      ]
    ]
  ],
  "MyForm_2": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_dynamic_construction",
        "MyForm_2"
      ]
    ]
  ],
  "Person_3": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_dynamic_construction",
        "Person_3"
      ]
    ]
  ],
  "Person_4": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_dynamic_construction",
        "Person_4"
      ]
    ]
  ],
  "Person_5": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_dynamic_construction",
        "Person_5"
      ]
    ]
  ],
  "TestFormParent": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_explicit_field_order",
        "TestFormParent"
      ]
    ]
  ],
  "TestFormRemove": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_explicit_field_order",
        "TestFormRemove"
      ]
    ]
  ],
  "TestFormMissing": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_explicit_field_order",
        "TestFormMissing"
      ]
    ]
  ],
  "TestFormInit": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_explicit_field_order",
        "TestFormInit"
      ]
    ]
  ],
  "Questions": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_specifying_labels",
        "Questions"
      ]
    ]
  ],
  "UserRegistration_2": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_specifying_labels",
        "UserRegistration_2"
      ]
    ]
  ],
  "UserRegistration_3": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_specifying_labels",
        "UserRegistration_3"
      ]
    ]
  ],
  "FavoriteForm": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_label_suffix",
        "FavoriteForm"
      ]
    ]
  ],
  "PedanticField": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_changed_data",
        "PedanticField"
      ]
    ]
  ],
  "Person2": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_changed_data",
        "Person2"
      ]
    ]
  ],
  "HiddenInputWithoutMicrosec": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_initial_datetime_values",
        "HiddenInputWithoutMicrosec"
      ]
    ]
  ],
  "TextInputWithoutMicrosec": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_initial_datetime_values",
        "TextInputWithoutMicrosec"
      ]
    ]
  ],
  "DateTimeForm": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_initial_datetime_values",
        "DateTimeForm"
      ]
    ]
  ],
  "Person_2": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_subclassing_forms",
        "Person_2"
      ]
    ]
  ],
  "Instrument": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_subclassing_forms",
        "Instrument"
      ]
    ]
  ],
  "Beatle": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_subclassing_forms",
        "Beatle"
      ]
    ]
  ],
  "Person_1": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_forms_with_prefixes",
        "Person_1"
      ]
    ]
  ],
  "FileForm": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_forms_with_file_fields",
        "FileForm"
      ]
    ],
    [
      "tests/forms_tests/tests/tests.py",
      [
        "FileForm"
      ]
    ]
  ],
  "PriceForm": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_empty_permitted",
        "PriceForm"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "PriceForm"
      ]
    ]
  ],
  "NameField": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_multivalue_field_validation",
        "NameField"
      ]
    ]
  ],
  "NameForm": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_multivalue_field_validation",
        "NameForm"
      ]
    ]
  ],
  "PhoneField": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_multivalue_optional_subfields",
        "PhoneField"
      ]
    ]
  ],
  "FormsTestCase": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase"
      ]
    ]
  ],
  "CustomRenderer": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "CustomRenderer"
      ]
    ]
  ],
  "RendererTests": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "RendererTests"
      ]
    ]
  ],
  "FavoriteDrinkForm": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FavoriteDrinkForm"
      ]
    ]
  ],
  "BaseFavoriteDrinksFormSet": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "BaseFavoriteDrinksFormSet"
      ]
    ]
  ],
  "CustomKwargForm": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "CustomKwargForm"
      ]
    ]
  ],
  "CheckForm": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_formset_with_deletion_remove_deletion_flag",
        "CheckForm"
      ]
    ]
  ],
  "BaseReverseFormSet": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_formset_iteration",
        "BaseReverseFormSet"
      ]
    ]
  ],
  "FormsFormsetTestCase": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase"
      ]
    ]
  ],
  "FormsetAsFooTests": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsetAsFooTests"
      ]
    ]
  ],
  "TestIsBoundBehavior": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "TestIsBoundBehavior"
      ]
    ]
  ],
  "TestEmptyFormSet": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "TestEmptyFormSet"
      ]
    ]
  ],
  "AllValidTests": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "AllValidTests"
      ]
    ]
  ],
  "FormsI18nTests": [
    [
      "tests/forms_tests/tests/test_i18n.py",
      [
        "FormsI18nTests"
      ]
    ]
  ],
  "LocalizedTimeTests": [
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "LocalizedTimeTests"
      ]
    ]
  ],
  "CustomTimeInputFormatsTests": [
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "CustomTimeInputFormatsTests"
      ]
    ]
  ],
  "SimpleTimeFormatTests": [
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "SimpleTimeFormatTests"
      ]
    ]
  ],
  "LocalizedDateTests": [
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "LocalizedDateTests"
      ]
    ]
  ],
  "CustomDateInputFormatsTests": [
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "CustomDateInputFormatsTests"
      ]
    ]
  ],
  "SimpleDateFormatTests": [
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "SimpleDateFormatTests"
      ]
    ]
  ],
  "LocalizedDateTimeTests": [
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "LocalizedDateTimeTests"
      ]
    ]
  ],
  "CustomDateTimeInputFormatsTests": [
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "CustomDateTimeInputFormatsTests"
      ]
    ]
  ],
  "SimpleDateTimeFormatTests": [
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "SimpleDateTimeFormatTests"
      ]
    ]
  ],
  "MyWidget": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_construction",
        "MyWidget"
      ]
    ]
  ],
  "MyWidget1": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_dsl",
        "MyWidget1"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_combine_media",
        "MyWidget1"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_property_parent_references",
        "MyWidget1"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_inheritance",
        "MyWidget1"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_inheritance_from_property",
        "MyWidget1"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_inheritance_extends",
        "MyWidget1"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_inheritance_single_type",
        "MyWidget1"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_multi_widget",
        "MyWidget1"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_form_media",
        "MyWidget1"
      ]
    ]
  ],
  "MyWidget2": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_combine_media",
        "MyWidget2"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_multi_widget",
        "MyWidget2"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_form_media",
        "MyWidget2"
      ]
    ]
  ],
  "MyWidget3": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_combine_media",
        "MyWidget3"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_multi_widget",
        "MyWidget3"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_form_media",
        "MyWidget3"
      ]
    ]
  ],
  "MyWidget4": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_combine_media",
        "MyWidget4"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_property",
        "MyWidget4"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_inheritance_from_property",
        "MyWidget4"
      ]
    ]
  ],
  "MyWidget5": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_property",
        "MyWidget5"
      ]
    ]
  ],
  "MyWidget6": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_property_parent_references",
        "MyWidget6"
      ]
    ]
  ],
  "MyWidget7": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_inheritance",
        "MyWidget7"
      ]
    ]
  ],
  "MyWidget8": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_inheritance",
        "MyWidget8"
      ]
    ]
  ],
  "MyWidget9": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_inheritance_from_property",
        "MyWidget9"
      ]
    ]
  ],
  "MyWidget10": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_inheritance_from_property",
        "MyWidget10"
      ]
    ]
  ],
  "MyWidget11": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_inheritance_extends",
        "MyWidget11"
      ]
    ]
  ],
  "MyWidget12": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_inheritance_single_type",
        "MyWidget12"
      ]
    ]
  ],
  "MyMultiWidget": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_multi_widget",
        "MyMultiWidget"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_multiwidget.py",
      [
        "MyMultiWidget"
      ]
    ]
  ],
  "AnotherForm": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_form_media",
        "AnotherForm"
      ]
    ]
  ],
  "FormWithMedia": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_form_media",
        "FormWithMedia"
      ]
    ]
  ],
  "FormsMediaTestCase": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase"
      ]
    ]
  ],
  "SharedTests": [
    [
      "tests/forms_tests/tests/test_renderers.py",
      [
        "SharedTests"
      ]
    ]
  ],
  "BaseTemplateRendererTests": [
    [
      "tests/forms_tests/tests/test_renderers.py",
      [
        "BaseTemplateRendererTests"
      ]
    ]
  ],
  "DjangoTemplatesTests": [
    [
      "tests/forms_tests/tests/test_renderers.py",
      [
        "DjangoTemplatesTests"
      ]
    ],
    [
      "tests/template_backends/test_django.py",
      [
        "DjangoTemplatesTests"
      ]
    ]
  ],
  "Jinja2Tests": [
    [
      "tests/forms_tests/tests/test_renderers.py",
      [
        "Jinja2Tests"
      ]
    ],
    [
      "tests/template_backends/test_jinja2.py",
      [
        "Jinja2Tests"
      ]
    ]
  ],
  "TemplatesSettingTests": [
    [
      "tests/forms_tests/tests/test_renderers.py",
      [
        "TemplatesSettingTests"
      ]
    ]
  ],
  "VeryBadError": [
    [
      "tests/forms_tests/tests/test_utils.py",
      [
        "FormsUtilsTestCase",
        "test_validation_error",
        "VeryBadError"
      ]
    ]
  ],
  "FormsUtilsTestCase": [
    [
      "tests/forms_tests/tests/test_utils.py",
      [
        "FormsUtilsTestCase"
      ]
    ]
  ],
  "UserForm": [
    [
      "tests/forms_tests/tests/test_validators.py",
      [
        "TestFieldWithValidators",
        "test_all_errors_get_reported",
        "UserForm"
      ]
    ]
  ],
  "TestFieldWithValidators": [
    [
      "tests/forms_tests/tests/test_validators.py",
      [
        "TestFieldWithValidators"
      ]
    ]
  ],
  "LiveWidgetTests": [
    [
      "tests/forms_tests/tests/test_widgets.py",
      [
        "LiveWidgetTests"
      ]
    ]
  ],
  "ChoiceFieldForm": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "ChoiceFieldForm"
      ]
    ]
  ],
  "OptionalMultiChoiceModelForm": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "OptionalMultiChoiceModelForm"
      ]
    ]
  ],
  "ChoiceFieldExclusionForm": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "ChoiceFieldExclusionForm"
      ]
    ]
  ],
  "EmptyCharLabelChoiceForm": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "EmptyCharLabelChoiceForm"
      ]
    ]
  ],
  "EmptyIntegerLabelChoiceForm": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "EmptyIntegerLabelChoiceForm"
      ]
    ]
  ],
  "EmptyCharLabelNoneChoiceForm": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "EmptyCharLabelNoneChoiceForm"
      ]
    ]
  ],
  "TestTicket14567": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "TestTicket14567"
      ]
    ]
  ],
  "ModelFormCallableModelDefault": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "ModelFormCallableModelDefault"
      ]
    ]
  ],
  "DefaultsForm": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "FormsModelTestCase",
        "test_formfield_initial",
        "DefaultsForm"
      ]
    ]
  ],
  "ExcludingForm": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "FormsModelTestCase",
        "test_formfield_initial",
        "ExcludingForm"
      ]
    ]
  ],
  "FormsModelTestCase": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "FormsModelTestCase"
      ]
    ]
  ],
  "RelatedModelFormTests": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "RelatedModelFormTests"
      ]
    ]
  ],
  "ManyToManyExclusionTestCase": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "ManyToManyExclusionTestCase"
      ]
    ]
  ],
  "EmptyLabelTestCase": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "EmptyLabelTestCase"
      ]
    ]
  ],
  "ArticleFormView": [
    [
      "tests/forms_tests/views.py",
      [
        "ArticleFormView"
      ]
    ]
  ],
  "WidgetTest": [
    [
      "tests/forms_tests/widget_tests/base.py",
      [
        "WidgetTest"
      ]
    ]
  ],
  "CheckboxInputTest": [
    [
      "tests/forms_tests/widget_tests/test_checkboxinput.py",
      [
        "CheckboxInputTest"
      ]
    ]
  ],
  "CheckboxSelectMultipleTest": [
    [
      "tests/forms_tests/widget_tests/test_checkboxselectmultiple.py",
      [
        "CheckboxSelectMultipleTest"
      ]
    ]
  ],
  "FakeFieldFile": [
    [
      "tests/forms_tests/widget_tests/test_clearablefileinput.py",
      [
        "FakeFieldFile"
      ]
    ]
  ],
  "ClearableFileInputTest": [
    [
      "tests/forms_tests/widget_tests/test_clearablefileinput.py",
      [
        "ClearableFileInputTest"
      ]
    ]
  ],
  "DateInputTest": [
    [
      "tests/forms_tests/widget_tests/test_dateinput.py",
      [
        "DateInputTest"
      ]
    ]
  ],
  "DateTimeInputTest": [
    [
      "tests/forms_tests/widget_tests/test_datetimeinput.py",
      [
        "DateTimeInputTest"
      ]
    ]
  ],
  "FileInputTest": [
    [
      "tests/forms_tests/widget_tests/test_fileinput.py",
      [
        "FileInputTest"
      ]
    ]
  ],
  "HiddenInputTest": [
    [
      "tests/forms_tests/widget_tests/test_hiddeninput.py",
      [
        "HiddenInputTest"
      ]
    ]
  ],
  "InputTests": [
    [
      "tests/forms_tests/widget_tests/test_input.py",
      [
        "InputTests"
      ]
    ]
  ],
  "MultipleHiddenInputTest": [
    [
      "tests/forms_tests/widget_tests/test_multiplehiddeninput.py",
      [
        "MultipleHiddenInputTest"
      ]
    ]
  ],
  "DeepCopyWidget": [
    [
      "tests/forms_tests/widget_tests/test_multiwidget.py",
      [
        "DeepCopyWidget"
      ]
    ]
  ],
  "MultiWidgetTest": [
    [
      "tests/forms_tests/widget_tests/test_multiwidget.py",
      [
        "MultiWidgetTest"
      ]
    ]
  ],
  "NullBooleanSelectTest": [
    [
      "tests/forms_tests/widget_tests/test_nullbooleanselect.py",
      [
        "NullBooleanSelectTest"
      ]
    ]
  ],
  "NumberInputTests": [
    [
      "tests/forms_tests/widget_tests/test_numberinput.py",
      [
        "NumberInputTests"
      ]
    ]
  ],
  "PasswordInputTest": [
    [
      "tests/forms_tests/widget_tests/test_passwordinput.py",
      [
        "PasswordInputTest"
      ]
    ]
  ],
  "RadioSelectTest": [
    [
      "tests/forms_tests/widget_tests/test_radioselect.py",
      [
        "RadioSelectTest"
      ]
    ]
  ],
  "SelectTest": [
    [
      "tests/forms_tests/widget_tests/test_select.py",
      [
        "SelectTest"
      ]
    ]
  ],
  "SelectDateWidgetTest": [
    [
      "tests/forms_tests/widget_tests/test_selectdatewidget.py",
      [
        "SelectDateWidgetTest"
      ]
    ]
  ],
  "SelectMultipleTest": [
    [
      "tests/forms_tests/widget_tests/test_selectmultiple.py",
      [
        "SelectMultipleTest"
      ]
    ]
  ],
  "SplitDateTimeWidgetTest": [
    [
      "tests/forms_tests/widget_tests/test_splitdatetimewidget.py",
      [
        "SplitDateTimeWidgetTest"
      ]
    ]
  ],
  "SplitHiddenDateTimeWidgetTest": [
    [
      "tests/forms_tests/widget_tests/test_splithiddendatetimewidget.py",
      [
        "SplitHiddenDateTimeWidgetTest"
      ]
    ]
  ],
  "TextareaTest": [
    [
      "tests/forms_tests/widget_tests/test_textarea.py",
      [
        "TextareaTest"
      ]
    ]
  ],
  "TextInputTest": [
    [
      "tests/forms_tests/widget_tests/test_textinput.py",
      [
        "TextInputTest"
      ]
    ]
  ],
  "TimeInputTest": [
    [
      "tests/forms_tests/widget_tests/test_timeinput.py",
      [
        "TimeInputTest"
      ]
    ]
  ],
  "WidgetTests": [
    [
      "tests/forms_tests/widget_tests/test_widget.py",
      [
        "WidgetTests"
      ]
    ]
  ],
  "Cash": [
    [
      "tests/from_db_value/models.py",
      [
        "Cash"
      ]
    ]
  ],
  "CashField": [
    [
      "tests/from_db_value/models.py",
      [
        "CashField"
      ]
    ]
  ],
  "CashModel": [
    [
      "tests/from_db_value/models.py",
      [
        "CashModel"
      ]
    ]
  ],
  "FromDBValueTest": [
    [
      "tests/from_db_value/tests.py",
      [
        "FromDBValueTest"
      ]
    ]
  ],
  "MediaInline": [
    [
      "tests/generic_inline_admin/admin.py",
      [
        "MediaInline"
      ]
    ],
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineModelAdminTest",
        "test_custom_form_meta_exclude_with_readonly",
        "MediaInline"
      ]
    ],
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineModelAdminTest",
        "test_custom_form_meta_exclude",
        "MediaInline"
      ]
    ]
  ],
  "EpisodeAdmin": [
    [
      "tests/generic_inline_admin/admin.py",
      [
        "EpisodeAdmin"
      ]
    ],
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineModelAdminTest",
        "test_custom_form_meta_exclude_with_readonly",
        "EpisodeAdmin"
      ]
    ],
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineModelAdminTest",
        "test_custom_form_meta_exclude",
        "EpisodeAdmin"
      ]
    ]
  ],
  "PhoneNumberInline": [
    [
      "tests/generic_inline_admin/admin.py",
      [
        "PhoneNumberInline"
      ]
    ]
  ],
  "MediaPermanentInline": [
    [
      "tests/generic_inline_admin/admin.py",
      [
        "MediaPermanentInline"
      ]
    ]
  ],
  "Episode": [
    [
      "tests/generic_inline_admin/models.py",
      [
        "Episode"
      ]
    ]
  ],
  "PhoneNumber": [
    [
      "tests/generic_inline_admin/models.py",
      [
        "PhoneNumber"
      ]
    ]
  ],
  "EpisodePermanent": [
    [
      "tests/generic_inline_admin/models.py",
      [
        "EpisodePermanent"
      ]
    ]
  ],
  "GenericAdminViewTest": [
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericAdminViewTest"
      ]
    ]
  ],
  "GenericInlineAdminParametersTest": [
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineAdminParametersTest"
      ]
    ]
  ],
  "GenericInlineAdminWithUniqueTogetherTest": [
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineAdminWithUniqueTogetherTest"
      ]
    ]
  ],
  "NoInlineDeletionTest": [
    [
      "tests/generic_inline_admin/tests.py",
      [
        "NoInlineDeletionTest"
      ]
    ]
  ],
  "MediaForm": [
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineModelAdminTest",
        "test_custom_form_meta_exclude_with_readonly",
        "MediaForm"
      ]
    ],
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineModelAdminTest",
        "test_custom_form_meta_exclude",
        "MediaForm"
      ]
    ]
  ],
  "MediaInline_3": [
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineModelAdminTest",
        "test_custom_form_meta_exclude",
        "MediaInline_3"
      ]
    ]
  ],
  "EpisodeAdmin_4": [
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineModelAdminTest",
        "test_custom_form_meta_exclude",
        "EpisodeAdmin_4"
      ]
    ]
  ],
  "GenericInlineModelAdminTest": [
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineModelAdminTest"
      ]
    ]
  ],
  "ValuableTaggedItem": [
    [
      "tests/generic_relations/models.py",
      [
        "ValuableTaggedItem"
      ]
    ]
  ],
  "AbstractComparison": [
    [
      "tests/generic_relations/models.py",
      [
        "AbstractComparison"
      ]
    ]
  ],
  "Comparison": [
    [
      "tests/generic_relations/models.py",
      [
        "Comparison"
      ]
    ]
  ],
  "Vegetable": [
    [
      "tests/generic_relations/models.py",
      [
        "Vegetable"
      ]
    ]
  ],
  "Carrot": [
    [
      "tests/generic_relations/models.py",
      [
        "Carrot"
      ]
    ]
  ],
  "Mineral": [
    [
      "tests/generic_relations/models.py",
      [
        "Mineral"
      ]
    ]
  ],
  "GeckoManager": [
    [
      "tests/generic_relations/models.py",
      [
        "GeckoManager"
      ]
    ]
  ],
  "Gecko": [
    [
      "tests/generic_relations/models.py",
      [
        "Gecko"
      ]
    ]
  ],
  "Rock": [
    [
      "tests/generic_relations/models.py",
      [
        "Rock"
      ]
    ]
  ],
  "ValuableRock": [
    [
      "tests/generic_relations/models.py",
      [
        "ValuableRock"
      ]
    ]
  ],
  "ManualPK": [
    [
      "tests/generic_relations/models.py",
      [
        "ManualPK"
      ]
    ]
  ],
  "ForProxyModelModel": [
    [
      "tests/generic_relations/models.py",
      [
        "ForProxyModelModel"
      ]
    ]
  ],
  "ForConcreteModelModel": [
    [
      "tests/generic_relations/models.py",
      [
        "ForConcreteModelModel"
      ]
    ]
  ],
  "ConcreteRelatedModel": [
    [
      "tests/generic_relations/models.py",
      [
        "ConcreteRelatedModel"
      ]
    ]
  ],
  "ProxyRelatedModel": [
    [
      "tests/generic_relations/models.py",
      [
        "ProxyRelatedModel"
      ]
    ]
  ],
  "AllowsNullGFK": [
    [
      "tests/generic_relations/models.py",
      [
        "AllowsNullGFK"
      ]
    ]
  ],
  "CustomWidget": [
    [
      "tests/generic_relations/test_forms.py",
      [
        "CustomWidget"
      ]
    ],
    [
      "tests/model_formsets_regress/tests.py",
      [
        "CustomWidget"
      ]
    ]
  ],
  "TaggedItemForm": [
    [
      "tests/generic_relations/test_forms.py",
      [
        "TaggedItemForm"
      ]
    ]
  ],
  "GenericInlineFormsetTests": [
    [
      "tests/generic_relations/test_forms.py",
      [
        "GenericInlineFormsetTests"
      ]
    ]
  ],
  "GenericRelationsTests": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests"
      ]
    ]
  ],
  "ProxyRelatedModelTest": [
    [
      "tests/generic_relations/tests.py",
      [
        "ProxyRelatedModelTest"
      ]
    ]
  ],
  "TestInitWithNoneArgument": [
    [
      "tests/generic_relations/tests.py",
      [
        "TestInitWithNoneArgument"
      ]
    ]
  ],
  "LinkProxy": [
    [
      "tests/generic_relations_regress/models.py",
      [
        "LinkProxy"
      ]
    ]
  ],
  "Cafe": [
    [
      "tests/generic_relations_regress/models.py",
      [
        "Cafe"
      ]
    ]
  ],
  "CharLink": [
    [
      "tests/generic_relations_regress/models.py",
      [
        "CharLink"
      ]
    ]
  ],
  "TextLink": [
    [
      "tests/generic_relations_regress/models.py",
      [
        "TextLink"
      ]
    ]
  ],
  "OddRelation1": [
    [
      "tests/generic_relations_regress/models.py",
      [
        "OddRelation1"
      ]
    ]
  ],
  "OddRelation2": [
    [
      "tests/generic_relations_regress/models.py",
      [
        "OddRelation2"
      ]
    ]
  ],
  "Note": [
    [
      "tests/generic_relations_regress/models.py",
      [
        "Note"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Note"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "Note"
      ]
    ]
  ],
  "Organization": [
    [
      "tests/generic_relations_regress/models.py",
      [
        "Organization"
      ]
    ]
  ],
  "Developer": [
    [
      "tests/generic_relations_regress/models.py",
      [
        "Developer"
      ]
    ]
  ],
  "Team": [
    [
      "tests/generic_relations_regress/models.py",
      [
        "Team"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Team"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "Team"
      ]
    ]
  ],
  "Guild": [
    [
      "tests/generic_relations_regress/models.py",
      [
        "Guild"
      ]
    ]
  ],
  "Board": [
    [
      "tests/generic_relations_regress/models.py",
      [
        "Board"
      ]
    ]
  ],
  "SpecialGenericRelation": [
    [
      "tests/generic_relations_regress/models.py",
      [
        "SpecialGenericRelation"
      ]
    ]
  ],
  "HasLinks": [
    [
      "tests/generic_relations_regress/models.py",
      [
        "HasLinks"
      ]
    ]
  ],
  "HasLinkThing": [
    [
      "tests/generic_relations_regress/models.py",
      [
        "HasLinkThing"
      ]
    ]
  ],
  "B": [
    [
      "tests/generic_relations_regress/models.py",
      [
        "B"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_render_project_dependencies",
        "B"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_add_relations",
        "B"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_remove_relations",
        "B"
      ]
    ],
    [
      "tests/select_related_regress/models.py",
      [
        "B"
      ]
    ],
    [
      "tests/test_runner/models.py",
      [
        "B"
      ]
    ],
    [
      "tests/update/models.py",
      [
        "B"
      ]
    ]
  ],
  "D": [
    [
      "tests/generic_relations_regress/models.py",
      [
        "D"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_render_project_dependencies",
        "D"
      ]
    ],
    [
      "tests/update/models.py",
      [
        "D"
      ]
    ]
  ],
  "Content": [
    [
      "tests/generic_relations_regress/models.py",
      [
        "Content"
      ]
    ]
  ],
  "AuthorForm": [
    [
      "tests/generic_views/forms.py",
      [
        "AuthorForm"
      ]
    ]
  ],
  "Artist": [
    [
      "tests/generic_views/models.py",
      [
        "Artist"
      ]
    ]
  ],
  "DoesNotExistQuerySet": [
    [
      "tests/generic_views/models.py",
      [
        "DoesNotExistQuerySet"
      ]
    ]
  ],
  "BookSigning": [
    [
      "tests/generic_views/models.py",
      [
        "BookSigning"
      ]
    ]
  ],
  "SimpleView": [
    [
      "tests/generic_views/test_base.py",
      [
        "SimpleView"
      ]
    ]
  ],
  "SimplePostView": [
    [
      "tests/generic_views/test_base.py",
      [
        "SimplePostView"
      ]
    ]
  ],
  "PostOnlyView": [
    [
      "tests/generic_views/test_base.py",
      [
        "PostOnlyView"
      ]
    ]
  ],
  "CustomizableView": [
    [
      "tests/generic_views/test_base.py",
      [
        "CustomizableView"
      ]
    ]
  ],
  "DecoratedDispatchView": [
    [
      "tests/generic_views/test_base.py",
      [
        "DecoratedDispatchView"
      ]
    ]
  ],
  "AboutTemplateView": [
    [
      "tests/generic_views/test_base.py",
      [
        "AboutTemplateView"
      ]
    ]
  ],
  "AboutTemplateAttributeView": [
    [
      "tests/generic_views/test_base.py",
      [
        "AboutTemplateAttributeView"
      ]
    ]
  ],
  "InstanceView": [
    [
      "tests/generic_views/test_base.py",
      [
        "InstanceView"
      ]
    ]
  ],
  "ViewTest": [
    [
      "tests/generic_views/test_base.py",
      [
        "ViewTest"
      ]
    ]
  ],
  "TemplateViewTest": [
    [
      "tests/generic_views/test_base.py",
      [
        "TemplateViewTest"
      ]
    ]
  ],
  "RedirectViewTest": [
    [
      "tests/generic_views/test_base.py",
      [
        "RedirectViewTest"
      ]
    ]
  ],
  "GetContextDataTest": [
    [
      "tests/generic_views/test_base.py",
      [
        "GetContextDataTest"
      ]
    ]
  ],
  "UseMultipleObjectMixinTest": [
    [
      "tests/generic_views/test_base.py",
      [
        "UseMultipleObjectMixinTest"
      ]
    ]
  ],
  "SingleObjectTemplateResponseMixinTest": [
    [
      "tests/generic_views/test_base.py",
      [
        "SingleObjectTemplateResponseMixinTest"
      ]
    ]
  ],
  "ArchiveIndexViewTests": [
    [
      "tests/generic_views/test_dates.py",
      [
        "ArchiveIndexViewTests"
      ]
    ]
  ],
  "YearArchiveViewTests": [
    [
      "tests/generic_views/test_dates.py",
      [
        "YearArchiveViewTests"
      ]
    ]
  ],
  "MonthArchiveViewTests": [
    [
      "tests/generic_views/test_dates.py",
      [
        "MonthArchiveViewTests"
      ]
    ]
  ],
  "WeekArchiveViewTests": [
    [
      "tests/generic_views/test_dates.py",
      [
        "WeekArchiveViewTests"
      ]
    ]
  ],
  "DayArchiveViewTests": [
    [
      "tests/generic_views/test_dates.py",
      [
        "DayArchiveViewTests"
      ]
    ]
  ],
  "DateDetailViewTests": [
    [
      "tests/generic_views/test_dates.py",
      [
        "DateDetailViewTests"
      ]
    ]
  ],
  "DetailViewTest": [
    [
      "tests/generic_views/test_detail.py",
      [
        "DetailViewTest"
      ]
    ]
  ],
  "FormMixinTests": [
    [
      "tests/generic_views/test_edit.py",
      [
        "FormMixinTests"
      ]
    ]
  ],
  "BasicFormTests": [
    [
      "tests/generic_views/test_edit.py",
      [
        "BasicFormTests"
      ]
    ]
  ],
  "ModelFormMixinTests": [
    [
      "tests/generic_views/test_edit.py",
      [
        "ModelFormMixinTests"
      ]
    ]
  ],
  "CreateViewTests": [
    [
      "tests/generic_views/test_edit.py",
      [
        "CreateViewTests"
      ]
    ]
  ],
  "UpdateViewTests": [
    [
      "tests/generic_views/test_edit.py",
      [
        "UpdateViewTests"
      ]
    ]
  ],
  "DeleteViewTests": [
    [
      "tests/generic_views/test_edit.py",
      [
        "DeleteViewTests"
      ]
    ]
  ],
  "ListViewTests": [
    [
      "tests/generic_views/test_list.py",
      [
        "ListViewTests"
      ]
    ]
  ],
  "CustomTemplateView": [
    [
      "tests/generic_views/views.py",
      [
        "CustomTemplateView"
      ]
    ]
  ],
  "ObjectDetail": [
    [
      "tests/generic_views/views.py",
      [
        "ObjectDetail"
      ]
    ]
  ],
  "ArtistDetail": [
    [
      "tests/generic_views/views.py",
      [
        "ArtistDetail"
      ]
    ]
  ],
  "AuthorDetail": [
    [
      "tests/generic_views/views.py",
      [
        "AuthorDetail"
      ]
    ]
  ],
  "AuthorCustomDetail": [
    [
      "tests/generic_views/views.py",
      [
        "AuthorCustomDetail"
      ]
    ]
  ],
  "PageDetail": [
    [
      "tests/generic_views/views.py",
      [
        "PageDetail"
      ]
    ]
  ],
  "DictList": [
    [
      "tests/generic_views/views.py",
      [
        "DictList"
      ]
    ]
  ],
  "ArtistList": [
    [
      "tests/generic_views/views.py",
      [
        "ArtistList"
      ]
    ]
  ],
  "AuthorList": [
    [
      "tests/generic_views/views.py",
      [
        "AuthorList"
      ]
    ]
  ],
  "AuthorListGetQuerysetReturnsNone": [
    [
      "tests/generic_views/views.py",
      [
        "AuthorListGetQuerysetReturnsNone"
      ]
    ]
  ],
  "BookList": [
    [
      "tests/generic_views/views.py",
      [
        "BookList"
      ]
    ]
  ],
  "AuthorListCustomPaginator": [
    [
      "tests/generic_views/views.py",
      [
        "AuthorListCustomPaginator"
      ]
    ]
  ],
  "ContactView": [
    [
      "tests/generic_views/views.py",
      [
        "ContactView"
      ]
    ]
  ],
  "ArtistCreate": [
    [
      "tests/generic_views/views.py",
      [
        "ArtistCreate"
      ]
    ]
  ],
  "NaiveAuthorCreate": [
    [
      "tests/generic_views/views.py",
      [
        "NaiveAuthorCreate"
      ]
    ]
  ],
  "TemplateResponseWithoutTemplate": [
    [
      "tests/generic_views/views.py",
      [
        "TemplateResponseWithoutTemplate"
      ]
    ]
  ],
  "AuthorCreate": [
    [
      "tests/generic_views/views.py",
      [
        "AuthorCreate"
      ]
    ]
  ],
  "SpecializedAuthorCreate": [
    [
      "tests/generic_views/views.py",
      [
        "SpecializedAuthorCreate"
      ]
    ]
  ],
  "AuthorCreateRestricted": [
    [
      "tests/generic_views/views.py",
      [
        "AuthorCreateRestricted"
      ]
    ]
  ],
  "ArtistUpdate": [
    [
      "tests/generic_views/views.py",
      [
        "ArtistUpdate"
      ]
    ]
  ],
  "NaiveAuthorUpdate": [
    [
      "tests/generic_views/views.py",
      [
        "NaiveAuthorUpdate"
      ]
    ]
  ],
  "AuthorUpdate": [
    [
      "tests/generic_views/views.py",
      [
        "AuthorUpdate"
      ]
    ]
  ],
  "OneAuthorUpdate": [
    [
      "tests/generic_views/views.py",
      [
        "OneAuthorUpdate"
      ]
    ]
  ],
  "SpecializedAuthorUpdate": [
    [
      "tests/generic_views/views.py",
      [
        "SpecializedAuthorUpdate"
      ]
    ]
  ],
  "NaiveAuthorDelete": [
    [
      "tests/generic_views/views.py",
      [
        "NaiveAuthorDelete"
      ]
    ]
  ],
  "AuthorDelete": [
    [
      "tests/generic_views/views.py",
      [
        "AuthorDelete"
      ]
    ]
  ],
  "SpecializedAuthorDelete": [
    [
      "tests/generic_views/views.py",
      [
        "SpecializedAuthorDelete"
      ]
    ]
  ],
  "BookConfig": [
    [
      "tests/generic_views/views.py",
      [
        "BookConfig"
      ]
    ]
  ],
  "BookArchive": [
    [
      "tests/generic_views/views.py",
      [
        "BookArchive"
      ]
    ]
  ],
  "BookYearArchive": [
    [
      "tests/generic_views/views.py",
      [
        "BookYearArchive"
      ]
    ]
  ],
  "BookMonthArchive": [
    [
      "tests/generic_views/views.py",
      [
        "BookMonthArchive"
      ]
    ]
  ],
  "BookWeekArchive": [
    [
      "tests/generic_views/views.py",
      [
        "BookWeekArchive"
      ]
    ]
  ],
  "BookDayArchive": [
    [
      "tests/generic_views/views.py",
      [
        "BookDayArchive"
      ]
    ]
  ],
  "BookTodayArchive": [
    [
      "tests/generic_views/views.py",
      [
        "BookTodayArchive"
      ]
    ]
  ],
  "BookDetail": [
    [
      "tests/generic_views/views.py",
      [
        "BookDetail"
      ]
    ]
  ],
  "AuthorGetQuerySetFormView": [
    [
      "tests/generic_views/views.py",
      [
        "AuthorGetQuerySetFormView"
      ]
    ]
  ],
  "BookDetailGetObjectCustomQueryset": [
    [
      "tests/generic_views/views.py",
      [
        "BookDetailGetObjectCustomQueryset"
      ]
    ]
  ],
  "CustomMultipleObjectMixinView": [
    [
      "tests/generic_views/views.py",
      [
        "CustomMultipleObjectMixinView"
      ]
    ]
  ],
  "CustomContextView": [
    [
      "tests/generic_views/views.py",
      [
        "CustomContextView"
      ]
    ]
  ],
  "CustomSingleObjectView": [
    [
      "tests/generic_views/views.py",
      [
        "CustomSingleObjectView"
      ]
    ]
  ],
  "BookSigningConfig": [
    [
      "tests/generic_views/views.py",
      [
        "BookSigningConfig"
      ]
    ]
  ],
  "BookSigningArchive": [
    [
      "tests/generic_views/views.py",
      [
        "BookSigningArchive"
      ]
    ]
  ],
  "BookSigningYearArchive": [
    [
      "tests/generic_views/views.py",
      [
        "BookSigningYearArchive"
      ]
    ]
  ],
  "BookSigningMonthArchive": [
    [
      "tests/generic_views/views.py",
      [
        "BookSigningMonthArchive"
      ]
    ]
  ],
  "BookSigningWeekArchive": [
    [
      "tests/generic_views/views.py",
      [
        "BookSigningWeekArchive"
      ]
    ]
  ],
  "BookSigningDayArchive": [
    [
      "tests/generic_views/views.py",
      [
        "BookSigningDayArchive"
      ]
    ]
  ],
  "BookSigningTodayArchive": [
    [
      "tests/generic_views/views.py",
      [
        "BookSigningTodayArchive"
      ]
    ]
  ],
  "BookArchiveWithoutDateField": [
    [
      "tests/generic_views/views.py",
      [
        "BookArchiveWithoutDateField"
      ]
    ]
  ],
  "BookSigningDetail": [
    [
      "tests/generic_views/views.py",
      [
        "BookSigningDetail"
      ]
    ]
  ],
  "NonModel": [
    [
      "tests/generic_views/views.py",
      [
        "NonModel"
      ]
    ]
  ],
  "NonModelDetail": [
    [
      "tests/generic_views/views.py",
      [
        "NonModelDetail"
      ]
    ]
  ],
  "ObjectDoesNotExistDetail": [
    [
      "tests/generic_views/views.py",
      [
        "ObjectDoesNotExistDetail"
      ]
    ]
  ],
  "LateValidationView": [
    [
      "tests/generic_views/views.py",
      [
        "LateValidationView"
      ]
    ]
  ],
  "IndexErrorQuerySet": [
    [
      "tests/get_earliest_or_latest/models.py",
      [
        "IndexErrorQuerySet"
      ]
    ]
  ],
  "IndexErrorArticle": [
    [
      "tests/get_earliest_or_latest/models.py",
      [
        "IndexErrorArticle"
      ]
    ]
  ],
  "EarliestOrLatestTests": [
    [
      "tests/get_earliest_or_latest/tests.py",
      [
        "EarliestOrLatestTests"
      ]
    ]
  ],
  "TestFirstLast": [
    [
      "tests/get_earliest_or_latest/tests.py",
      [
        "TestFirstLast"
      ]
    ]
  ],
  "ArticleManager": [
    [
      "tests/get_object_or_404/models.py",
      [
        "ArticleManager"
      ]
    ]
  ],
  "AttributeErrorManager": [
    [
      "tests/get_object_or_404/models.py",
      [
        "AttributeErrorManager"
      ]
    ]
  ],
  "GetObjectOr404Tests": [
    [
      "tests/get_object_or_404/tests.py",
      [
        "GetObjectOr404Tests"
      ]
    ]
  ],
  "DefaultPerson": [
    [
      "tests/get_or_create/models.py",
      [
        "DefaultPerson"
      ]
    ]
  ],
  "ManualPrimaryKeyTest": [
    [
      "tests/get_or_create/models.py",
      [
        "ManualPrimaryKeyTest"
      ]
    ]
  ],
  "GetOrCreateTests": [
    [
      "tests/get_or_create/tests.py",
      [
        "GetOrCreateTests"
      ]
    ]
  ],
  "GetOrCreateTestsWithManualPKs": [
    [
      "tests/get_or_create/tests.py",
      [
        "GetOrCreateTestsWithManualPKs"
      ]
    ]
  ],
  "GetOrCreateTransactionTests": [
    [
      "tests/get_or_create/tests.py",
      [
        "GetOrCreateTransactionTests"
      ]
    ]
  ],
  "GetOrCreateThroughManyToMany": [
    [
      "tests/get_or_create/tests.py",
      [
        "GetOrCreateThroughManyToMany"
      ]
    ]
  ],
  "UpdateOrCreateTests": [
    [
      "tests/get_or_create/tests.py",
      [
        "UpdateOrCreateTests"
      ]
    ]
  ],
  "UpdateOrCreateTestsWithManualPKs": [
    [
      "tests/get_or_create/tests.py",
      [
        "UpdateOrCreateTestsWithManualPKs"
      ]
    ]
  ],
  "UpdateOrCreateTransactionTests": [
    [
      "tests/get_or_create/tests.py",
      [
        "UpdateOrCreateTransactionTests"
      ]
    ]
  ],
  "InvalidCreateArgumentsTests": [
    [
      "tests/get_or_create/tests.py",
      [
        "InvalidCreateArgumentsTests"
      ]
    ]
  ],
  "NamedModel": [
    [
      "tests/gis_tests/distapp/models.py",
      [
        "NamedModel"
      ]
    ],
    [
      "tests/gis_tests/geo3d/models.py",
      [
        "NamedModel"
      ]
    ],
    [
      "tests/gis_tests/geoapp/models.py",
      [
        "NamedModel"
      ]
    ],
    [
      "tests/gis_tests/geogapp/models.py",
      [
        "NamedModel"
      ]
    ],
    [
      "tests/gis_tests/layermap/models.py",
      [
        "NamedModel"
      ]
    ]
  ],
  "SouthTexasCity": [
    [
      "tests/gis_tests/distapp/models.py",
      [
        "SouthTexasCity"
      ]
    ]
  ],
  "SouthTexasCityFt": [
    [
      "tests/gis_tests/distapp/models.py",
      [
        "SouthTexasCityFt"
      ]
    ]
  ],
  "AustraliaCity": [
    [
      "tests/gis_tests/distapp/models.py",
      [
        "AustraliaCity"
      ]
    ]
  ],
  "CensusZipcode": [
    [
      "tests/gis_tests/distapp/models.py",
      [
        "CensusZipcode"
      ]
    ]
  ],
  "SouthTexasZipcode": [
    [
      "tests/gis_tests/distapp/models.py",
      [
        "SouthTexasZipcode"
      ]
    ]
  ],
  "Interstate": [
    [
      "tests/gis_tests/distapp/models.py",
      [
        "Interstate"
      ]
    ],
    [
      "tests/gis_tests/layermap/models.py",
      [
        "Interstate"
      ]
    ]
  ],
  "SouthTexasInterstate": [
    [
      "tests/gis_tests/distapp/models.py",
      [
        "SouthTexasInterstate"
      ]
    ]
  ],
  "DistanceTest": [
    [
      "tests/gis_tests/distapp/tests.py",
      [
        "DistanceTest"
      ]
    ],
    [
      "tests/gis_tests/test_measure.py",
      [
        "DistanceTest"
      ]
    ]
  ],
  "DistanceFunctionsTests": [
    [
      "tests/gis_tests/distapp/tests.py",
      [
        "DistanceFunctionsTests"
      ]
    ]
  ],
  "DriverTest": [
    [
      "tests/gis_tests/gdal_tests/test_driver.py",
      [
        "DriverTest"
      ]
    ]
  ],
  "DataSourceTest": [
    [
      "tests/gis_tests/gdal_tests/test_ds.py",
      [
        "DataSourceTest"
      ]
    ]
  ],
  "TestPoint": [
    [
      "tests/gis_tests/gdal_tests/test_envelope.py",
      [
        "TestPoint"
      ]
    ]
  ],
  "EnvelopeTest": [
    [
      "tests/gis_tests/gdal_tests/test_envelope.py",
      [
        "EnvelopeTest"
      ]
    ]
  ],
  "OGRGeomTest": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest"
      ]
    ]
  ],
  "GDALRasterTests": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALRasterTests"
      ]
    ]
  ],
  "GDALBandTests": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALBandTests"
      ]
    ]
  ],
  "TestSRS": [
    [
      "tests/gis_tests/gdal_tests/test_srs.py",
      [
        "TestSRS"
      ]
    ]
  ],
  "SpatialRefTest": [
    [
      "tests/gis_tests/gdal_tests/test_srs.py",
      [
        "SpatialRefTest"
      ]
    ]
  ],
  "City3D": [
    [
      "tests/gis_tests/geo3d/models.py",
      [
        "City3D"
      ]
    ]
  ],
  "Interstate2D": [
    [
      "tests/gis_tests/geo3d/models.py",
      [
        "Interstate2D"
      ]
    ]
  ],
  "Interstate3D": [
    [
      "tests/gis_tests/geo3d/models.py",
      [
        "Interstate3D"
      ]
    ]
  ],
  "InterstateProj2D": [
    [
      "tests/gis_tests/geo3d/models.py",
      [
        "InterstateProj2D"
      ]
    ]
  ],
  "InterstateProj3D": [
    [
      "tests/gis_tests/geo3d/models.py",
      [
        "InterstateProj3D"
      ]
    ]
  ],
  "Polygon2D": [
    [
      "tests/gis_tests/geo3d/models.py",
      [
        "Polygon2D"
      ]
    ]
  ],
  "Polygon3D": [
    [
      "tests/gis_tests/geo3d/models.py",
      [
        "Polygon3D"
      ]
    ]
  ],
  "Point2D": [
    [
      "tests/gis_tests/geo3d/models.py",
      [
        "Point2D"
      ]
    ]
  ],
  "Point3D": [
    [
      "tests/gis_tests/geo3d/models.py",
      [
        "Point3D"
      ]
    ]
  ],
  "MultiPoint3D": [
    [
      "tests/gis_tests/geo3d/models.py",
      [
        "MultiPoint3D"
      ]
    ]
  ],
  "Geo3DLoadingHelper": [
    [
      "tests/gis_tests/geo3d/tests.py",
      [
        "Geo3DLoadingHelper"
      ]
    ]
  ],
  "Geo3DTest": [
    [
      "tests/gis_tests/geo3d/tests.py",
      [
        "Geo3DTest"
      ]
    ]
  ],
  "Geo3DFunctionsTests": [
    [
      "tests/gis_tests/geo3d/tests.py",
      [
        "Geo3DFunctionsTests"
      ]
    ]
  ],
  "UnmodifiableAdmin": [
    [
      "tests/gis_tests/geoadmin/admin.py",
      [
        "UnmodifiableAdmin"
      ]
    ]
  ],
  "GeoAdminTest": [
    [
      "tests/gis_tests/geoadmin/tests.py",
      [
        "GeoAdminTest"
      ]
    ]
  ],
  "TestGeoRSS1": [
    [
      "tests/gis_tests/geoapp/feeds.py",
      [
        "TestGeoRSS1"
      ]
    ]
  ],
  "TestGeoRSS2": [
    [
      "tests/gis_tests/geoapp/feeds.py",
      [
        "TestGeoRSS2"
      ]
    ]
  ],
  "TestGeoAtom1": [
    [
      "tests/gis_tests/geoapp/feeds.py",
      [
        "TestGeoAtom1"
      ]
    ]
  ],
  "TestGeoAtom2": [
    [
      "tests/gis_tests/geoapp/feeds.py",
      [
        "TestGeoAtom2"
      ]
    ]
  ],
  "TestW3CGeo1": [
    [
      "tests/gis_tests/geoapp/feeds.py",
      [
        "TestW3CGeo1"
      ]
    ]
  ],
  "TestW3CGeo2": [
    [
      "tests/gis_tests/geoapp/feeds.py",
      [
        "TestW3CGeo2"
      ]
    ]
  ],
  "TestW3CGeo3": [
    [
      "tests/gis_tests/geoapp/feeds.py",
      [
        "TestW3CGeo3"
      ]
    ]
  ],
  "CountryWebMercator": [
    [
      "tests/gis_tests/geoapp/models.py",
      [
        "CountryWebMercator"
      ]
    ]
  ],
  "PennsylvaniaCity": [
    [
      "tests/gis_tests/geoapp/models.py",
      [
        "PennsylvaniaCity"
      ]
    ]
  ],
  "Track": [
    [
      "tests/gis_tests/geoapp/models.py",
      [
        "Track"
      ]
    ]
  ],
  "MultiFields": [
    [
      "tests/gis_tests/geoapp/models.py",
      [
        "MultiFields"
      ]
    ]
  ],
  "UniqueTogetherModel": [
    [
      "tests/gis_tests/geoapp/models.py",
      [
        "UniqueTogetherModel"
      ]
    ],
    [
      "tests/validation/models.py",
      [
        "UniqueTogetherModel"
      ]
    ]
  ],
  "Truth": [
    [
      "tests/gis_tests/geoapp/models.py",
      [
        "Truth"
      ]
    ]
  ],
  "MinusOneSRID": [
    [
      "tests/gis_tests/geoapp/models.py",
      [
        "MinusOneSRID"
      ]
    ]
  ],
  "NonConcreteField": [
    [
      "tests/gis_tests/geoapp/models.py",
      [
        "NonConcreteField"
      ]
    ]
  ],
  "NonConcreteModel": [
    [
      "tests/gis_tests/geoapp/models.py",
      [
        "NonConcreteModel"
      ]
    ]
  ],
  "ManyPointModel": [
    [
      "tests/gis_tests/geoapp/models.py",
      [
        "ManyPointModel"
      ]
    ]
  ],
  "GeoExpressionsTests": [
    [
      "tests/gis_tests/geoapp/test_expressions.py",
      [
        "GeoExpressionsTests"
      ]
    ]
  ],
  "GeoFeedTest": [
    [
      "tests/gis_tests/geoapp/test_feeds.py",
      [
        "GeoFeedTest"
      ]
    ]
  ],
  "GISFunctionsTests": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests"
      ]
    ]
  ],
  "GeoRegressionTests": [
    [
      "tests/gis_tests/geoapp/test_regress.py",
      [
        "GeoRegressionTests"
      ]
    ]
  ],
  "GeoJSONSerializerTests": [
    [
      "tests/gis_tests/geoapp/test_serializers.py",
      [
        "GeoJSONSerializerTests"
      ]
    ]
  ],
  "GeoSitemapTest": [
    [
      "tests/gis_tests/geoapp/test_sitemaps.py",
      [
        "GeoSitemapTest"
      ]
    ]
  ],
  "GeoModelTest": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoModelTest"
      ]
    ]
  ],
  "GeoLookupTest": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoLookupTest"
      ]
    ]
  ],
  "GeoQuerySetTest": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoQuerySetTest"
      ]
    ]
  ],
  "Zipcode": [
    [
      "tests/gis_tests/geogapp/models.py",
      [
        "Zipcode"
      ]
    ]
  ],
  "County": [
    [
      "tests/gis_tests/geogapp/models.py",
      [
        "County"
      ]
    ],
    [
      "tests/gis_tests/layermap/models.py",
      [
        "County"
      ]
    ]
  ],
  "GeographyTest": [
    [
      "tests/gis_tests/geogapp/tests.py",
      [
        "GeographyTest"
      ]
    ]
  ],
  "GeographyFunctionTests": [
    [
      "tests/gis_tests/geogapp/tests.py",
      [
        "GeographyFunctionTests"
      ]
    ]
  ],
  "GEOSCoordSeqTest": [
    [
      "tests/gis_tests/geos_tests/test_coordseq.py",
      [
        "GEOSCoordSeqTest"
      ]
    ]
  ],
  "GEOSTest": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest"
      ]
    ]
  ],
  "GEOSMutationTest": [
    [
      "tests/gis_tests/geos_tests/test_geos_mutation.py",
      [
        "GEOSMutationTest"
      ]
    ]
  ],
  "GEOSIOTest": [
    [
      "tests/gis_tests/geos_tests/test_io.py",
      [
        "GEOSIOTest"
      ]
    ]
  ],
  "UserListA": [
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "UserListA"
      ]
    ]
  ],
  "UserListB": [
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "UserListB"
      ]
    ]
  ],
  "ListMixinTest": [
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "ListMixinTest"
      ]
    ]
  ],
  "ListMixinTestSingle": [
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "ListMixinTestSingle"
      ]
    ]
  ],
  "MigrateTests": [
    [
      "tests/gis_tests/gis_migrations/test_commands.py",
      [
        "MigrateTests"
      ]
    ],
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests"
      ]
    ]
  ],
  "OperationTestCase": [
    [
      "tests/gis_tests/gis_migrations/test_operations.py",
      [
        "OperationTestCase"
      ]
    ]
  ],
  "OperationTests": [
    [
      "tests/gis_tests/gis_migrations/test_operations.py",
      [
        "OperationTests"
      ]
    ],
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests"
      ]
    ]
  ],
  "NoRasterSupportTests": [
    [
      "tests/gis_tests/gis_migrations/test_operations.py",
      [
        "NoRasterSupportTests"
      ]
    ]
  ],
  "AllOGRFields": [
    [
      "tests/gis_tests/inspectapp/models.py",
      [
        "AllOGRFields"
      ]
    ]
  ],
  "Fields3D": [
    [
      "tests/gis_tests/inspectapp/models.py",
      [
        "Fields3D"
      ]
    ]
  ],
  "InspectDbTests": [
    [
      "tests/gis_tests/inspectapp/tests.py",
      [
        "InspectDbTests"
      ]
    ]
  ],
  "OGRInspectTest": [
    [
      "tests/gis_tests/inspectapp/tests.py",
      [
        "OGRInspectTest"
      ]
    ]
  ],
  "CountyFeat": [
    [
      "tests/gis_tests/layermap/models.py",
      [
        "CountyFeat"
      ]
    ]
  ],
  "CityBase": [
    [
      "tests/gis_tests/layermap/models.py",
      [
        "CityBase"
      ]
    ]
  ],
  "ICity1": [
    [
      "tests/gis_tests/layermap/models.py",
      [
        "ICity1"
      ]
    ]
  ],
  "ICity2": [
    [
      "tests/gis_tests/layermap/models.py",
      [
        "ICity2"
      ]
    ]
  ],
  "Invalid": [
    [
      "tests/gis_tests/layermap/models.py",
      [
        "Invalid"
      ]
    ]
  ],
  "HasNulls": [
    [
      "tests/gis_tests/layermap/models.py",
      [
        "HasNulls"
      ]
    ]
  ],
  "DoesNotAllowNulls": [
    [
      "tests/gis_tests/layermap/models.py",
      [
        "DoesNotAllowNulls"
      ]
    ]
  ],
  "LayerMapTest": [
    [
      "tests/gis_tests/layermap/tests.py",
      [
        "LayerMapTest"
      ]
    ]
  ],
  "OtherRouter": [
    [
      "tests/gis_tests/layermap/tests.py",
      [
        "OtherRouter"
      ]
    ]
  ],
  "LayerMapRouterTest": [
    [
      "tests/gis_tests/layermap/tests.py",
      [
        "LayerMapRouterTest"
      ]
    ]
  ],
  "RasterModel": [
    [
      "tests/gis_tests/rasterapp/models.py",
      [
        "RasterModel"
      ]
    ]
  ],
  "RasterRelatedModel": [
    [
      "tests/gis_tests/rasterapp/models.py",
      [
        "RasterRelatedModel"
      ]
    ]
  ],
  "RasterFieldTest": [
    [
      "tests/gis_tests/rasterapp/test_rasterfield.py",
      [
        "RasterFieldTest"
      ]
    ]
  ],
  "AugmentedLocation": [
    [
      "tests/gis_tests/relatedapp/models.py",
      [
        "AugmentedLocation"
      ]
    ]
  ],
  "DirectoryEntry": [
    [
      "tests/gis_tests/relatedapp/models.py",
      [
        "DirectoryEntry"
      ]
    ]
  ],
  "Parcel": [
    [
      "tests/gis_tests/relatedapp/models.py",
      [
        "Parcel"
      ]
    ]
  ],
  "RelatedGeoModelTest": [
    [
      "tests/gis_tests/relatedapp/tests.py",
      [
        "RelatedGeoModelTest"
      ]
    ]
  ],
  "TestDS": [
    [
      "tests/gis_tests/test_data.py",
      [
        "TestDS"
      ]
    ]
  ],
  "TestGeom": [
    [
      "tests/gis_tests/test_data.py",
      [
        "TestGeom"
      ]
    ]
  ],
  "TestGeomSet": [
    [
      "tests/gis_tests/test_data.py",
      [
        "TestGeomSet"
      ]
    ]
  ],
  "FieldsTests": [
    [
      "tests/gis_tests/test_fields.py",
      [
        "FieldsTests"
      ]
    ]
  ],
  "GeometryFieldTests": [
    [
      "tests/gis_tests/test_fields.py",
      [
        "GeometryFieldTests"
      ]
    ]
  ],
  "PointForm": [
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "GeometryFieldTest",
        "test_field_string_value",
        "PointForm"
      ]
    ],
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "GeometryWidgetTests",
        "test_custom_serialization_widget",
        "PointForm"
      ]
    ]
  ],
  "GeometryFieldTest": [
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "GeometryFieldTest"
      ]
    ]
  ],
  "SpecializedFieldTest": [
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "SpecializedFieldTest"
      ]
    ]
  ],
  "OSMWidgetTest": [
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "OSMWidgetTest"
      ]
    ]
  ],
  "CustomGeometryWidget": [
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "GeometryWidgetTests",
        "test_custom_serialization_widget",
        "CustomGeometryWidget"
      ]
    ]
  ],
  "GeometryWidgetTests": [
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "GeometryWidgetTests"
      ]
    ]
  ],
  "GeoIPTest": [
    [
      "tests/gis_tests/test_geoip2.py",
      [
        "GeoIPTest"
      ]
    ]
  ],
  "FuncTestMixinTests": [
    [
      "tests/gis_tests/test_gis_tests_utils.py",
      [
        "FuncTestMixinTests"
      ]
    ]
  ],
  "AreaTest": [
    [
      "tests/gis_tests/test_measure.py",
      [
        "AreaTest"
      ]
    ]
  ],
  "NullPointerException": [
    [
      "tests/gis_tests/test_ptr.py",
      [
        "CPointerBaseTests",
        "test",
        "NullPointerException"
      ]
    ]
  ],
  "FakeGeom1": [
    [
      "tests/gis_tests/test_ptr.py",
      [
        "CPointerBaseTests",
        "test",
        "FakeGeom1"
      ]
    ]
  ],
  "FakeGeom2": [
    [
      "tests/gis_tests/test_ptr.py",
      [
        "CPointerBaseTests",
        "test",
        "FakeGeom2"
      ]
    ]
  ],
  "CPointerBaseTests": [
    [
      "tests/gis_tests/test_ptr.py",
      [
        "CPointerBaseTests"
      ]
    ]
  ],
  "SpatialRefSysTest": [
    [
      "tests/gis_tests/test_spatialrefsys.py",
      [
        "SpatialRefSysTest"
      ]
    ]
  ],
  "TestPostGISVersionCheck": [
    [
      "tests/gis_tests/tests.py",
      [
        "TestPostGISVersionCheck"
      ]
    ]
  ],
  "FuncTestMixin": [
    [
      "tests/gis_tests/utils.py",
      [
        "FuncTestMixin"
      ]
    ]
  ],
  "ExceptionHandlerTests": [
    [
      "tests/handlers/test_exception.py",
      [
        "ExceptionHandlerTests"
      ]
    ]
  ],
  "HandlerTests": [
    [
      "tests/handlers/tests.py",
      [
        "HandlerTests"
      ]
    ]
  ],
  "TransactionsPerRequestTests": [
    [
      "tests/handlers/tests.py",
      [
        "TransactionsPerRequestTests"
      ]
    ]
  ],
  "SignalsTests": [
    [
      "tests/handlers/tests.py",
      [
        "SignalsTests"
      ]
    ]
  ],
  "HandlerRequestTests": [
    [
      "tests/handlers/tests.py",
      [
        "HandlerRequestTests"
      ]
    ]
  ],
  "ScriptNameTests": [
    [
      "tests/handlers/tests.py",
      [
        "ScriptNameTests"
      ]
    ]
  ],
  "MiddlewareAccessingContent": [
    [
      "tests/handlers/tests_custom_error_handlers.py",
      [
        "MiddlewareAccessingContent"
      ]
    ]
  ],
  "CustomErrorHandlerTests": [
    [
      "tests/handlers/tests_custom_error_handlers.py",
      [
        "CustomErrorHandlerTests"
      ]
    ]
  ],
  "NoResponse": [
    [
      "tests/handlers/views.py",
      [
        "NoResponse"
      ]
    ]
  ],
  "QueryDictTests": [
    [
      "tests/httpwrappers/tests.py",
      [
        "QueryDictTests"
      ]
    ]
  ],
  "HttpResponseTests": [
    [
      "tests/httpwrappers/tests.py",
      [
        "HttpResponseTests"
      ]
    ],
    [
      "tests/responses/tests.py",
      [
        "HttpResponseTests"
      ]
    ]
  ],
  "HttpResponseSubclassesTests": [
    [
      "tests/httpwrappers/tests.py",
      [
        "HttpResponseSubclassesTests"
      ]
    ]
  ],
  "JsonResponseTests": [
    [
      "tests/httpwrappers/tests.py",
      [
        "JsonResponseTests"
      ]
    ],
    [
      "tests/view_tests/tests/test_json.py",
      [
        "JsonResponseTests"
      ]
    ]
  ],
  "StreamingHttpResponseTests": [
    [
      "tests/httpwrappers/tests.py",
      [
        "StreamingHttpResponseTests"
      ]
    ]
  ],
  "FileCloseTests": [
    [
      "tests/httpwrappers/tests.py",
      [
        "FileCloseTests"
      ]
    ]
  ],
  "CookieTests": [
    [
      "tests/httpwrappers/tests.py",
      [
        "CookieTests"
      ]
    ],
    [
      "tests/messages_tests/test_cookie.py",
      [
        "CookieTests"
      ]
    ]
  ],
  "MockDateTime": [
    [
      "tests/humanize_tests/tests.py",
      [
        "MockDateTime"
      ]
    ]
  ],
  "naive": [
    [
      "tests/humanize_tests/tests.py",
      [
        "HumanizeTests",
        "test_naturaltime",
        "naive"
      ]
    ]
  ],
  "DocumentedMockDateTime": [
    [
      "tests/humanize_tests/tests.py",
      [
        "HumanizeTests",
        "test_naturaltime_as_documented",
        "DocumentedMockDateTime"
      ]
    ]
  ],
  "HumanizeTests": [
    [
      "tests/humanize_tests/tests.py",
      [
        "HumanizeTests"
      ]
    ]
  ],
  "ContentTypeTests": [
    [
      "tests/i18n/contenttypes/tests.py",
      [
        "ContentTypeTests"
      ]
    ]
  ],
  "I18nForm": [
    [
      "tests/i18n/forms.py",
      [
        "I18nForm"
      ]
    ]
  ],
  "SelectDateForm": [
    [
      "tests/i18n/forms.py",
      [
        "SelectDateForm"
      ]
    ]
  ],
  "CompanyForm": [
    [
      "tests/i18n/forms.py",
      [
        "CompanyForm"
      ]
    ]
  ],
  "TestModel": [
    [
      "tests/i18n/models.py",
      [
        "TestModel"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_real_apps",
        "TestModel"
      ]
    ],
    [
      "tests/sitemaps_tests/models.py",
      [
        "TestModel"
      ]
    ]
  ],
  "PermanentRedirectLocaleMiddleWare": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "PermanentRedirectLocaleMiddleWare"
      ]
    ]
  ],
  "URLTestCaseBase": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLTestCaseBase"
      ]
    ]
  ],
  "URLPrefixTests": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLPrefixTests"
      ]
    ]
  ],
  "URLDisabledTests": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLDisabledTests"
      ]
    ]
  ],
  "RequestURLConfTests": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "RequestURLConfTests"
      ]
    ]
  ],
  "PathUnusedTests": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "PathUnusedTests"
      ]
    ]
  ],
  "URLTranslationTests": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLTranslationTests"
      ]
    ]
  ],
  "URLNamespaceTests": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLNamespaceTests"
      ]
    ]
  ],
  "URLRedirectTests": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLRedirectTests"
      ]
    ]
  ],
  "URLVaryAcceptLanguageTests": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLVaryAcceptLanguageTests"
      ]
    ]
  ],
  "URLRedirectWithoutTrailingSlashTests": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLRedirectWithoutTrailingSlashTests"
      ]
    ]
  ],
  "URLRedirectWithoutTrailingSlashSettingTests": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLRedirectWithoutTrailingSlashSettingTests"
      ]
    ]
  ],
  "URLResponseTests": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLResponseTests"
      ]
    ]
  ],
  "URLRedirectWithScriptAliasTests": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLRedirectWithScriptAliasTests"
      ]
    ]
  ],
  "URLTagTests": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLTagTests"
      ]
    ]
  ],
  "MessageCompilationTests": [
    [
      "tests/i18n/test_compilation.py",
      [
        "MessageCompilationTests"
      ]
    ]
  ],
  "PoFileTests": [
    [
      "tests/i18n/test_compilation.py",
      [
        "PoFileTests"
      ]
    ]
  ],
  "PoFileContentsTests": [
    [
      "tests/i18n/test_compilation.py",
      [
        "PoFileContentsTests"
      ]
    ]
  ],
  "MultipleLocaleCompilationTests": [
    [
      "tests/i18n/test_compilation.py",
      [
        "MultipleLocaleCompilationTests"
      ]
    ]
  ],
  "ExcludedLocaleCompilationTests": [
    [
      "tests/i18n/test_compilation.py",
      [
        "ExcludedLocaleCompilationTests"
      ]
    ]
  ],
  "IgnoreDirectoryCompilationTests": [
    [
      "tests/i18n/test_compilation.py",
      [
        "IgnoreDirectoryCompilationTests"
      ]
    ]
  ],
  "CompilationErrorHandling": [
    [
      "tests/i18n/test_compilation.py",
      [
        "CompilationErrorHandling"
      ]
    ]
  ],
  "ProjectAndAppTests": [
    [
      "tests/i18n/test_compilation.py",
      [
        "ProjectAndAppTests"
      ]
    ]
  ],
  "FuzzyTranslationTest": [
    [
      "tests/i18n/test_compilation.py",
      [
        "FuzzyTranslationTest"
      ]
    ]
  ],
  "AppCompilationTest": [
    [
      "tests/i18n/test_compilation.py",
      [
        "AppCompilationTest"
      ]
    ]
  ],
  "ExtractorTests": [
    [
      "tests/i18n/test_extraction.py",
      [
        "ExtractorTests"
      ]
    ]
  ],
  "BasicExtractorTests": [
    [
      "tests/i18n/test_extraction.py",
      [
        "BasicExtractorTests"
      ]
    ]
  ],
  "JavascriptExtractorTests": [
    [
      "tests/i18n/test_extraction.py",
      [
        "JavascriptExtractorTests"
      ]
    ]
  ],
  "IgnoredExtractorTests": [
    [
      "tests/i18n/test_extraction.py",
      [
        "IgnoredExtractorTests"
      ]
    ]
  ],
  "SymlinkExtractorTests": [
    [
      "tests/i18n/test_extraction.py",
      [
        "SymlinkExtractorTests"
      ]
    ]
  ],
  "CopyPluralFormsExtractorTests": [
    [
      "tests/i18n/test_extraction.py",
      [
        "CopyPluralFormsExtractorTests"
      ]
    ]
  ],
  "NoWrapExtractorTests": [
    [
      "tests/i18n/test_extraction.py",
      [
        "NoWrapExtractorTests"
      ]
    ]
  ],
  "LocationCommentsTests": [
    [
      "tests/i18n/test_extraction.py",
      [
        "LocationCommentsTests"
      ]
    ]
  ],
  "KeepPotFileExtractorTests": [
    [
      "tests/i18n/test_extraction.py",
      [
        "KeepPotFileExtractorTests"
      ]
    ]
  ],
  "MultipleLocaleExtractionTests": [
    [
      "tests/i18n/test_extraction.py",
      [
        "MultipleLocaleExtractionTests"
      ]
    ]
  ],
  "ExcludedLocaleExtractionTests": [
    [
      "tests/i18n/test_extraction.py",
      [
        "ExcludedLocaleExtractionTests"
      ]
    ]
  ],
  "CustomLayoutExtractionTests": [
    [
      "tests/i18n/test_extraction.py",
      [
        "CustomLayoutExtractionTests"
      ]
    ]
  ],
  "NoSettingsExtractionTests": [
    [
      "tests/i18n/test_extraction.py",
      [
        "NoSettingsExtractionTests"
      ]
    ]
  ],
  "TranslatableFileTests": [
    [
      "tests/i18n/test_management.py",
      [
        "TranslatableFileTests"
      ]
    ]
  ],
  "FrenchTestCase": [
    [
      "tests/i18n/test_percents.py",
      [
        "FrenchTestCase"
      ]
    ]
  ],
  "ExtractingStringsWithPercentSigns": [
    [
      "tests/i18n/test_percents.py",
      [
        "ExtractingStringsWithPercentSigns"
      ]
    ]
  ],
  "RenderingTemplatesWithPercentSigns": [
    [
      "tests/i18n/test_percents.py",
      [
        "RenderingTemplatesWithPercentSigns"
      ]
    ]
  ],
  "AppModuleStub": [
    [
      "tests/i18n/tests.py",
      [
        "AppModuleStub"
      ]
    ]
  ],
  "TranslationTests": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationTests"
      ]
    ]
  ],
  "TranslationThreadSafetyTests": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationThreadSafetyTests"
      ]
    ]
  ],
  "FormattingTests": [
    [
      "tests/i18n/tests.py",
      [
        "FormattingTests"
      ]
    ]
  ],
  "MiscTests": [
    [
      "tests/i18n/tests.py",
      [
        "MiscTests"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      [
        "MiscTests"
      ]
    ]
  ],
  "ResolutionOrderI18NTests": [
    [
      "tests/i18n/tests.py",
      [
        "ResolutionOrderI18NTests"
      ]
    ]
  ],
  "AppResolutionOrderI18NTests": [
    [
      "tests/i18n/tests.py",
      [
        "AppResolutionOrderI18NTests"
      ]
    ]
  ],
  "LocalePathsResolutionOrderI18NTests": [
    [
      "tests/i18n/tests.py",
      [
        "LocalePathsResolutionOrderI18NTests"
      ]
    ]
  ],
  "DjangoFallbackResolutionOrderI18NTests": [
    [
      "tests/i18n/tests.py",
      [
        "DjangoFallbackResolutionOrderI18NTests"
      ]
    ]
  ],
  "TranslationFallbackI18NTests": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationFallbackI18NTests"
      ]
    ]
  ],
  "TestModels": [
    [
      "tests/i18n/tests.py",
      [
        "TestModels"
      ]
    ]
  ],
  "TestLanguageInfo": [
    [
      "tests/i18n/tests.py",
      [
        "TestLanguageInfo"
      ]
    ]
  ],
  "LocaleMiddlewareTests": [
    [
      "tests/i18n/tests.py",
      [
        "LocaleMiddlewareTests"
      ]
    ]
  ],
  "UnprefixedDefaultLanguageTests": [
    [
      "tests/i18n/tests.py",
      [
        "UnprefixedDefaultLanguageTests"
      ]
    ]
  ],
  "CountrySpecificLanguageTests": [
    [
      "tests/i18n/tests.py",
      [
        "CountrySpecificLanguageTests"
      ]
    ]
  ],
  "TranslationFilesMissing": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationFilesMissing"
      ]
    ]
  ],
  "NonDjangoLanguageTests": [
    [
      "tests/i18n/tests.py",
      [
        "NonDjangoLanguageTests"
      ]
    ]
  ],
  "WatchForTranslationChangesTests": [
    [
      "tests/i18n/tests.py",
      [
        "WatchForTranslationChangesTests"
      ]
    ]
  ],
  "TranslationFileChangedTests": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationFileChangedTests"
      ]
    ]
  ],
  "POFileAssertionMixin": [
    [
      "tests/i18n/utils.py",
      [
        "POFileAssertionMixin"
      ]
    ]
  ],
  "RunInTmpDirMixin": [
    [
      "tests/i18n/utils.py",
      [
        "RunInTmpDirMixin"
      ]
    ]
  ],
  "CurrentTranslation": [
    [
      "tests/indexes/models.py",
      [
        "CurrentTranslation"
      ]
    ]
  ],
  "IndexTogetherSingleList": [
    [
      "tests/indexes/models.py",
      [
        "IndexTogetherSingleList"
      ]
    ]
  ],
  "IndexedArticle2": [
    [
      "tests/indexes/models.py",
      [
        "IndexedArticle2"
      ]
    ]
  ],
  "SchemaIndexesTests": [
    [
      "tests/indexes/tests.py",
      [
        "SchemaIndexesTests"
      ]
    ]
  ],
  "SchemaIndexesNotPostgreSQLTests": [
    [
      "tests/indexes/tests.py",
      [
        "SchemaIndexesNotPostgreSQLTests"
      ]
    ]
  ],
  "PartialIndexConditionIgnoredTests": [
    [
      "tests/indexes/tests.py",
      [
        "PartialIndexConditionIgnoredTests"
      ]
    ]
  ],
  "SchemaIndexesPostgreSQLTests": [
    [
      "tests/indexes/tests.py",
      [
        "SchemaIndexesPostgreSQLTests"
      ]
    ]
  ],
  "SchemaIndexesMySQLTests": [
    [
      "tests/indexes/tests.py",
      [
        "SchemaIndexesMySQLTests"
      ]
    ]
  ],
  "PartialIndexTests": [
    [
      "tests/indexes/tests.py",
      [
        "PartialIndexTests"
      ]
    ]
  ],
  "Poet": [
    [
      "tests/inline_formsets/models.py",
      [
        "Poet"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Poet"
      ]
    ]
  ],
  "Poem": [
    [
      "tests/inline_formsets/models.py",
      [
        "Poem"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Poem"
      ]
    ]
  ],
  "InlineFormsetFactoryTest": [
    [
      "tests/inline_formsets/tests.py",
      [
        "InlineFormsetFactoryTest"
      ]
    ]
  ],
  "People": [
    [
      "tests/inspectdb/models.py",
      [
        "People"
      ]
    ]
  ],
  "PeopleData": [
    [
      "tests/inspectdb/models.py",
      [
        "PeopleData"
      ]
    ]
  ],
  "PeopleMoreData": [
    [
      "tests/inspectdb/models.py",
      [
        "PeopleMoreData"
      ]
    ]
  ],
  "DigitsInColumnName": [
    [
      "tests/inspectdb/models.py",
      [
        "DigitsInColumnName"
      ]
    ]
  ],
  "SpecialName": [
    [
      "tests/inspectdb/models.py",
      [
        "SpecialName"
      ]
    ]
  ],
  "ColumnTypes": [
    [
      "tests/inspectdb/models.py",
      [
        "ColumnTypes"
      ]
    ]
  ],
  "UniqueTogether": [
    [
      "tests/inspectdb/models.py",
      [
        "UniqueTogether"
      ]
    ]
  ],
  "InspectDBTestCase": [
    [
      "tests/inspectdb/tests.py",
      [
        "InspectDBTestCase"
      ]
    ]
  ],
  "InspectDBTransactionalTests": [
    [
      "tests/inspectdb/tests.py",
      [
        "InspectDBTransactionalTests"
      ]
    ]
  ],
  "District": [
    [
      "tests/introspection/models.py",
      [
        "District"
      ]
    ],
    [
      "tests/many_to_one/models.py",
      [
        "District"
      ]
    ]
  ],
  "ArticleReporter": [
    [
      "tests/introspection/models.py",
      [
        "ArticleReporter"
      ]
    ]
  ],
  "BackendSpecificChecksTests": [
    [
      "tests/invalid_models_tests/test_backend_specific.py",
      [
        "BackendSpecificChecksTests"
      ]
    ]
  ],
  "CustomFieldTest": [
    [
      "tests/invalid_models_tests/test_custom_fields.py",
      [
        "CustomFieldTest"
      ]
    ]
  ],
  "DeprecatedFieldsTests": [
    [
      "tests/invalid_models_tests/test_deprecated_fields.py",
      [
        "DeprecatedFieldsTests"
      ]
    ]
  ],
  "IndexTogetherTests": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "IndexTogetherTests"
      ]
    ]
  ],
  "UniqueTogetherTests": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "UniqueTogetherTests"
      ]
    ]
  ],
  "IndexesTests": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "IndexesTests"
      ]
    ],
    [
      "tests/model_indexes/tests.py",
      [
        "IndexesTests"
      ]
    ]
  ],
  "VeryLongModelNamezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "FieldNamesTests",
        "test_M2M_long_column_name",
        "VeryLongModelNamezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"
      ]
    ]
  ],
  "ModelWithLongField": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "FieldNamesTests",
        "test_M2M_long_column_name",
        "ModelWithLongField"
      ]
    ]
  ],
  "m2msimple": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "FieldNamesTests",
        "test_M2M_long_column_name",
        "m2msimple"
      ]
    ]
  ],
  "m2mcomplex": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "FieldNamesTests",
        "test_M2M_long_column_name",
        "m2mcomplex"
      ]
    ]
  ],
  "FieldNamesTests": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "FieldNamesTests"
      ]
    ]
  ],
  "Mother": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "ShadowingFieldsTests",
        "test_multiinheritance_clash",
        "Mother"
      ]
    ]
  ],
  "Father": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "ShadowingFieldsTests",
        "test_multiinheritance_clash",
        "Father"
      ]
    ]
  ],
  "ShadowingFieldsTests": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "ShadowingFieldsTests"
      ]
    ]
  ],
  "A1": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_m2m_unmanaged_shadow_models_not_checked",
        "A1"
      ]
    ],
    [
      "tests/migrations/migrations_test_apps/lookuperror_a/models.py",
      [
        "A1"
      ]
    ]
  ],
  "C1": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_m2m_unmanaged_shadow_models_not_checked",
        "C1"
      ]
    ],
    [
      "tests/migrations/migrations_test_apps/lookuperror_c/models.py",
      [
        "C1"
      ]
    ]
  ],
  "A2": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_m2m_unmanaged_shadow_models_not_checked",
        "A2"
      ]
    ],
    [
      "tests/migrations/migrations_test_apps/lookuperror_a/models.py",
      [
        "A2"
      ]
    ]
  ],
  "C2": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_m2m_unmanaged_shadow_models_not_checked",
        "C2"
      ]
    ],
    [
      "tests/migrations/migrations_test_apps/lookuperror_c/models.py",
      [
        "C2"
      ]
    ]
  ],
  "Intermediate": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_m2m_unmanaged_shadow_models_not_checked",
        "Intermediate"
      ]
    ],
    [
      "tests/serializers/models/data.py",
      [
        "Intermediate"
      ]
    ],
    [
      "tests/unmanaged_models/models.py",
      [
        "Intermediate"
      ]
    ]
  ],
  "DummyModel": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_lazy_reference_checks",
        "DummyModel"
      ]
    ]
  ],
  "DummyClass": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_lazy_reference_checks",
        "DummyClass"
      ]
    ]
  ],
  "OtherModelTests": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests"
      ]
    ]
  ],
  "ConstraintsTests": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "ConstraintsTests"
      ]
    ]
  ],
  "AutoFieldTests": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "AutoFieldTests"
      ]
    ]
  ],
  "CharFieldTests": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "CharFieldTests"
      ]
    ]
  ],
  "DateFieldTests": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "DateFieldTests"
      ]
    ]
  ],
  "DateTimeFieldTests": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "DateTimeFieldTests"
      ]
    ],
    [
      "tests/model_fields/test_datetimefield.py",
      [
        "DateTimeFieldTests"
      ]
    ]
  ],
  "DecimalFieldTests": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "DecimalFieldTests"
      ]
    ],
    [
      "tests/model_fields/test_decimalfield.py",
      [
        "DecimalFieldTests"
      ]
    ]
  ],
  "FileFieldTests": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "FileFieldTests"
      ]
    ],
    [
      "tests/model_fields/test_filefield.py",
      [
        "FileFieldTests"
      ]
    ]
  ],
  "FilePathFieldTests": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "FilePathFieldTests"
      ]
    ]
  ],
  "GenericIPAddressFieldTests": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "GenericIPAddressFieldTests"
      ]
    ],
    [
      "tests/model_fields/test_genericipaddressfield.py",
      [
        "GenericIPAddressFieldTests"
      ]
    ],
    [
      "tests/validation/tests.py",
      [
        "GenericIPAddressFieldTests"
      ]
    ]
  ],
  "ImageFieldTests": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "ImageFieldTests"
      ]
    ],
    [
      "tests/model_fields/test_imagefield.py",
      [
        "ImageFieldTests"
      ]
    ]
  ],
  "IntegerFieldTests": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "IntegerFieldTests"
      ]
    ],
    [
      "tests/model_fields/test_integerfield.py",
      [
        "IntegerFieldTests"
      ]
    ]
  ],
  "TimeFieldTests": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "TimeFieldTests"
      ]
    ]
  ],
  "TextFieldTests": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "TextFieldTests"
      ]
    ],
    [
      "tests/model_fields/test_textfield.py",
      [
        "TextFieldTests"
      ]
    ]
  ],
  "ModelM2M": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_many_to_many_with_useless_options",
        "ModelM2M"
      ]
    ]
  ],
  "ThroughModel": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_many_to_many_with_useless_options",
        "ThroughModel"
      ]
    ]
  ],
  "AmbiguousRelationship": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_ambiguous_relationship_model",
        "AmbiguousRelationship"
      ]
    ]
  ],
  "Relationship": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_symmetric_self_reference_with_intermediate_table_and_through_fields",
        "Relationship"
      ]
    ],
    [
      "tests/m2m_through/models.py",
      [
        "Relationship"
      ]
    ]
  ],
  "MMembership": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_foreign_object_to_non_unique_fields",
        "MMembership"
      ]
    ]
  ],
  "SwappableModel": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_not_swapped_model",
        "SwappableModel"
      ]
    ]
  ],
  "RelativeFieldTests": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests"
      ]
    ]
  ],
  "Target": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "AccessorClashTests",
        "test_clash_between_accessors",
        "Target"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "AccessorClashTests",
        "test_m2m_to_m2m_with_inheritance",
        "Target"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ExplicitRelatedNameClashTests",
        "_test_explicit_related_name_clash",
        "Target"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ComplexClashTests",
        "test_complex_clash",
        "Target"
      ]
    ],
    [
      "tests/one_to_one/models.py",
      [
        "Target"
      ]
    ]
  ],
  "AccessorClashTests": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "AccessorClashTests"
      ]
    ]
  ],
  "ReverseQueryNameClashTests": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ReverseQueryNameClashTests"
      ]
    ]
  ],
  "Another": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ExplicitRelatedNameClashTests",
        "_test_explicit_related_name_clash",
        "Another"
      ]
    ]
  ],
  "ExplicitRelatedNameClashTests": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ExplicitRelatedNameClashTests"
      ]
    ]
  ],
  "ExplicitRelatedQueryNameClashTests": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ExplicitRelatedQueryNameClashTests"
      ]
    ]
  ],
  "SelfReferentialM2MClashTests": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "SelfReferentialM2MClashTests"
      ]
    ]
  ],
  "SelfReferentialFKClashTests": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "SelfReferentialFKClashTests"
      ]
    ]
  ],
  "ComplexClashTests": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ComplexClashTests"
      ]
    ]
  ],
  "M2mThroughFieldsTests": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "M2mThroughFieldsTests"
      ]
    ]
  ],
  "Tournament": [
    [
      "tests/known_related_objects/models.py",
      [
        "Tournament"
      ]
    ]
  ],
  "Organiser": [
    [
      "tests/known_related_objects/models.py",
      [
        "Organiser"
      ]
    ]
  ],
  "Pool": [
    [
      "tests/known_related_objects/models.py",
      [
        "Pool"
      ]
    ]
  ],
  "PoolStyle": [
    [
      "tests/known_related_objects/models.py",
      [
        "PoolStyle"
      ]
    ]
  ],
  "ExistingRelatedInstancesTests": [
    [
      "tests/known_related_objects/tests.py",
      [
        "ExistingRelatedInstancesTests"
      ]
    ]
  ],
  "MyHandler": [
    [
      "tests/logging_tests/logconfig.py",
      [
        "MyHandler"
      ]
    ]
  ],
  "MyEmailBackend": [
    [
      "tests/logging_tests/logconfig.py",
      [
        "MyEmailBackend"
      ]
    ]
  ],
  "LoggingFiltersTest": [
    [
      "tests/logging_tests/tests.py",
      [
        "LoggingFiltersTest"
      ]
    ]
  ],
  "SetupDefaultLoggingMixin": [
    [
      "tests/logging_tests/tests.py",
      [
        "SetupDefaultLoggingMixin"
      ]
    ]
  ],
  "DefaultLoggingTests": [
    [
      "tests/logging_tests/tests.py",
      [
        "DefaultLoggingTests"
      ]
    ]
  ],
  "LoggingAssertionMixin": [
    [
      "tests/logging_tests/tests.py",
      [
        "LoggingAssertionMixin"
      ]
    ]
  ],
  "HandlerLoggingTests": [
    [
      "tests/logging_tests/tests.py",
      [
        "HandlerLoggingTests"
      ]
    ]
  ],
  "I18nLoggingTests": [
    [
      "tests/logging_tests/tests.py",
      [
        "I18nLoggingTests"
      ]
    ]
  ],
  "CallbackFilterTest": [
    [
      "tests/logging_tests/tests.py",
      [
        "CallbackFilterTest"
      ]
    ]
  ],
  "AdminEmailHandlerTest": [
    [
      "tests/logging_tests/tests.py",
      [
        "AdminEmailHandlerTest"
      ]
    ]
  ],
  "SettingsConfigTest": [
    [
      "tests/logging_tests/tests.py",
      [
        "SettingsConfigTest"
      ]
    ]
  ],
  "SetupConfigureLogging": [
    [
      "tests/logging_tests/tests.py",
      [
        "SetupConfigureLogging"
      ]
    ]
  ],
  "SecurityLoggerTest": [
    [
      "tests/logging_tests/tests.py",
      [
        "SecurityLoggerTest"
      ]
    ]
  ],
  "SettingsCustomLoggingTest": [
    [
      "tests/logging_tests/tests.py",
      [
        "SettingsCustomLoggingTest"
      ]
    ]
  ],
  "LogFormattersTests": [
    [
      "tests/logging_tests/tests.py",
      [
        "LogFormattersTests"
      ]
    ]
  ],
  "UncaughtException": [
    [
      "tests/logging_tests/views.py",
      [
        "UncaughtException"
      ]
    ]
  ],
  "Alarm": [
    [
      "tests/lookup/models.py",
      [
        "Alarm"
      ]
    ]
  ],
  "NulledTextField": [
    [
      "tests/lookup/models.py",
      [
        "NulledTextField"
      ]
    ]
  ],
  "NulledTransform": [
    [
      "tests/lookup/models.py",
      [
        "NulledTransform"
      ]
    ]
  ],
  "IsNullWithNoneAsRHS": [
    [
      "tests/lookup/models.py",
      [
        "IsNullWithNoneAsRHS"
      ]
    ]
  ],
  "Season": [
    [
      "tests/lookup/models.py",
      [
        "Season"
      ]
    ]
  ],
  "Game": [
    [
      "tests/lookup/models.py",
      [
        "Game"
      ]
    ]
  ],
  "Player": [
    [
      "tests/lookup/models.py",
      [
        "Player"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Player"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "Player"
      ]
    ]
  ],
  "Stock": [
    [
      "tests/lookup/models.py",
      [
        "Stock"
      ]
    ]
  ],
  "DecimalFieldLookupTests": [
    [
      "tests/lookup/test_decimalfield.py",
      [
        "DecimalFieldLookupTests"
      ]
    ]
  ],
  "YearComparisonLookupTests": [
    [
      "tests/lookup/test_lookups.py",
      [
        "YearComparisonLookupTests"
      ]
    ]
  ],
  "TimeFieldLookupTests": [
    [
      "tests/lookup/test_timefield.py",
      [
        "TimeFieldLookupTests"
      ]
    ]
  ],
  "Issue": [
    [
      "tests/m2m_and_m2o/models.py",
      [
        "Issue"
      ]
    ],
    [
      "tests/proxy_models/models.py",
      [
        "Issue"
      ]
    ]
  ],
  "StringReferenceModel": [
    [
      "tests/m2m_and_m2o/models.py",
      [
        "StringReferenceModel"
      ]
    ]
  ],
  "RelatedObjectTests": [
    [
      "tests/m2m_and_m2o/tests.py",
      [
        "RelatedObjectTests"
      ]
    ]
  ],
  "RelatedObjectUnicodeTests": [
    [
      "tests/m2m_and_m2o/tests.py",
      [
        "RelatedObjectUnicodeTests"
      ]
    ]
  ],
  "Writer": [
    [
      "tests/m2m_intermediary/models.py",
      [
        "Writer"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Writer"
      ]
    ]
  ],
  "M2MIntermediaryTests": [
    [
      "tests/m2m_intermediary/tests.py",
      [
        "M2MIntermediaryTests"
      ]
    ]
  ],
  "M2MMultipleTests": [
    [
      "tests/m2m_multiple/tests.py",
      [
        "M2MMultipleTests"
      ]
    ]
  ],
  "RecursiveM2MTests": [
    [
      "tests/m2m_recursive/tests.py",
      [
        "RecursiveM2MTests"
      ]
    ]
  ],
  "SelfRefer": [
    [
      "tests/m2m_regress/models.py",
      [
        "SelfRefer"
      ]
    ]
  ],
  "TagCollection": [
    [
      "tests/m2m_regress/models.py",
      [
        "TagCollection"
      ]
    ]
  ],
  "Entry": [
    [
      "tests/m2m_regress/models.py",
      [
        "Entry"
      ]
    ],
    [
      "tests/syndication_tests/models.py",
      [
        "Entry"
      ]
    ]
  ],
  "SelfReferChild": [
    [
      "tests/m2m_regress/models.py",
      [
        "SelfReferChild"
      ]
    ]
  ],
  "SelfReferChildSibling": [
    [
      "tests/m2m_regress/models.py",
      [
        "SelfReferChildSibling"
      ]
    ]
  ],
  "Line": [
    [
      "tests/m2m_regress/models.py",
      [
        "Line"
      ]
    ],
    [
      "tests/postgres_tests/models.py",
      [
        "Line"
      ]
    ]
  ],
  "Worksheet": [
    [
      "tests/m2m_regress/models.py",
      [
        "Worksheet"
      ]
    ]
  ],
  "BadModelWithSplit": [
    [
      "tests/m2m_regress/models.py",
      [
        "BadModelWithSplit"
      ]
    ]
  ],
  "RegressionModelSplit": [
    [
      "tests/m2m_regress/models.py",
      [
        "RegressionModelSplit"
      ]
    ]
  ],
  "M2MRegressionTests": [
    [
      "tests/m2m_regress/tests.py",
      [
        "M2MRegressionTests"
      ]
    ]
  ],
  "Part": [
    [
      "tests/m2m_signals/models.py",
      [
        "Part"
      ]
    ]
  ],
  "SportsCar": [
    [
      "tests/m2m_signals/models.py",
      [
        "SportsCar"
      ]
    ]
  ],
  "ManyToManySignalsTest": [
    [
      "tests/m2m_signals/tests.py",
      [
        "ManyToManySignalsTest"
      ]
    ]
  ],
  "CustomMembership": [
    [
      "tests/m2m_through/models.py",
      [
        "CustomMembership"
      ]
    ]
  ],
  "TestNoDefaultsOrNulls": [
    [
      "tests/m2m_through/models.py",
      [
        "TestNoDefaultsOrNulls"
      ]
    ]
  ],
  "PersonSelfRefM2M": [
    [
      "tests/m2m_through/models.py",
      [
        "PersonSelfRefM2M"
      ]
    ]
  ],
  "M2mThroughTests": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests"
      ]
    ]
  ],
  "M2mThroughReferentialTests": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughReferentialTests"
      ]
    ]
  ],
  "M2mThroughToFieldsTests": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughToFieldsTests"
      ]
    ]
  ],
  "UserMembership": [
    [
      "tests/m2m_through_regress/models.py",
      [
        "UserMembership"
      ]
    ]
  ],
  "CarDriver": [
    [
      "tests/m2m_through_regress/models.py",
      [
        "CarDriver"
      ]
    ]
  ],
  "Competitor": [
    [
      "tests/m2m_through_regress/models.py",
      [
        "Competitor"
      ]
    ]
  ],
  "IndividualCompetitor": [
    [
      "tests/m2m_through_regress/models.py",
      [
        "IndividualCompetitor"
      ]
    ]
  ],
  "CompetingTeam": [
    [
      "tests/m2m_through_regress/models.py",
      [
        "CompetingTeam"
      ]
    ]
  ],
  "ProxiedIndividualCompetitor": [
    [
      "tests/m2m_through_regress/models.py",
      [
        "ProxiedIndividualCompetitor"
      ]
    ]
  ],
  "MultiTableTests": [
    [
      "tests/m2m_through_regress/test_multitable.py",
      [
        "MultiTableTests"
      ]
    ]
  ],
  "M2MThroughTestCase": [
    [
      "tests/m2m_through_regress/tests.py",
      [
        "M2MThroughTestCase"
      ]
    ]
  ],
  "M2MThroughSerializationTestCase": [
    [
      "tests/m2m_through_regress/tests.py",
      [
        "M2MThroughSerializationTestCase"
      ]
    ]
  ],
  "ToFieldThroughTests": [
    [
      "tests/m2m_through_regress/tests.py",
      [
        "ToFieldThroughTests"
      ]
    ]
  ],
  "ThroughLoadDataTestCase": [
    [
      "tests/m2m_through_regress/tests.py",
      [
        "ThroughLoadDataTestCase"
      ]
    ]
  ],
  "ManyToOneRecursiveTests": [
    [
      "tests/m2o_recursive/tests.py",
      [
        "ManyToOneRecursiveTests"
      ]
    ]
  ],
  "MultipleManyToOneRecursiveTests": [
    [
      "tests/m2o_recursive/tests.py",
      [
        "MultipleManyToOneRecursiveTests"
      ]
    ]
  ],
  "SendTestEmailManagementCommand": [
    [
      "tests/mail/test_sendtestemail.py",
      [
        "SendTestEmailManagementCommand"
      ]
    ]
  ],
  "HeadersCheckMixin": [
    [
      "tests/mail/tests.py",
      [
        "HeadersCheckMixin"
      ]
    ]
  ],
  "MailTests": [
    [
      "tests/mail/tests.py",
      [
        "MailTests"
      ]
    ]
  ],
  "MailTimeZoneTests": [
    [
      "tests/mail/tests.py",
      [
        "MailTimeZoneTests"
      ]
    ]
  ],
  "PythonGlobalState": [
    [
      "tests/mail/tests.py",
      [
        "PythonGlobalState"
      ]
    ]
  ],
  "BaseEmailBackendTests": [
    [
      "tests/mail/tests.py",
      [
        "BaseEmailBackendTests"
      ]
    ]
  ],
  "LocmemBackendTests": [
    [
      "tests/mail/tests.py",
      [
        "LocmemBackendTests"
      ]
    ]
  ],
  "FileBackendTests": [
    [
      "tests/mail/tests.py",
      [
        "FileBackendTests"
      ]
    ]
  ],
  "ConsoleBackendTests": [
    [
      "tests/mail/tests.py",
      [
        "ConsoleBackendTests"
      ]
    ]
  ],
  "FakeSMTPChannel": [
    [
      "tests/mail/tests.py",
      [
        "FakeSMTPChannel"
      ]
    ]
  ],
  "FakeSMTPServer": [
    [
      "tests/mail/tests.py",
      [
        "FakeSMTPServer"
      ]
    ]
  ],
  "FakeAUTHSMTPConnection": [
    [
      "tests/mail/tests.py",
      [
        "FakeAUTHSMTPConnection"
      ]
    ]
  ],
  "SMTPBackendTestsBase": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTestsBase"
      ]
    ]
  ],
  "SMTPBackendTests": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests"
      ]
    ]
  ],
  "SMTPBackendStoppedServerTests": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendStoppedServerTests"
      ]
    ]
  ],
  "OnlyFred": [
    [
      "tests/managers_regress/models.py",
      [
        "OnlyFred"
      ]
    ]
  ],
  "OnlyBarney": [
    [
      "tests/managers_regress/models.py",
      [
        "OnlyBarney"
      ]
    ]
  ],
  "Value42": [
    [
      "tests/managers_regress/models.py",
      [
        "Value42"
      ]
    ]
  ],
  "AbstractBase1": [
    [
      "tests/managers_regress/models.py",
      [
        "AbstractBase1"
      ]
    ]
  ],
  "AbstractBase2": [
    [
      "tests/managers_regress/models.py",
      [
        "AbstractBase2"
      ]
    ]
  ],
  "AbstractBase3": [
    [
      "tests/managers_regress/models.py",
      [
        "AbstractBase3"
      ]
    ]
  ],
  "Child1": [
    [
      "tests/managers_regress/models.py",
      [
        "Child1"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "ModelStateTests",
        "test_abstract_model_children_inherit_indexes",
        "Child1"
      ]
    ],
    [
      "tests/select_related_onetoone/models.py",
      [
        "Child1"
      ]
    ]
  ],
  "Child2": [
    [
      "tests/managers_regress/models.py",
      [
        "Child2"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "ModelStateTests",
        "test_abstract_model_children_inherit_indexes",
        "Child2"
      ]
    ],
    [
      "tests/select_related_onetoone/models.py",
      [
        "Child2"
      ]
    ]
  ],
  "Child3": [
    [
      "tests/managers_regress/models.py",
      [
        "Child3"
      ]
    ],
    [
      "tests/select_related_onetoone/models.py",
      [
        "Child3"
      ]
    ]
  ],
  "Child4": [
    [
      "tests/managers_regress/models.py",
      [
        "Child4"
      ]
    ],
    [
      "tests/select_related_onetoone/models.py",
      [
        "Child4"
      ]
    ]
  ],
  "Child5": [
    [
      "tests/managers_regress/models.py",
      [
        "Child5"
      ]
    ]
  ],
  "Child6": [
    [
      "tests/managers_regress/models.py",
      [
        "Child6"
      ]
    ]
  ],
  "Child7": [
    [
      "tests/managers_regress/models.py",
      [
        "Child7"
      ]
    ]
  ],
  "RelationModel": [
    [
      "tests/managers_regress/models.py",
      [
        "RelationModel"
      ]
    ],
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_virtual_field",
        "RelationModel"
      ]
    ]
  ],
  "ManagersRegressionTests": [
    [
      "tests/managers_regress/tests.py",
      [
        "ManagersRegressionTests"
      ]
    ]
  ],
  "CustomManager": [
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_implicit_inheritance",
        "CustomManager"
      ]
    ],
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_default_manager_inheritance",
        "CustomManager"
      ]
    ],
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_base_manager_inheritance",
        "CustomManager"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "CustomManager"
      ]
    ]
  ],
  "AbstractModel": [
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_implicit_inheritance",
        "AbstractModel"
      ]
    ],
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_default_manager_inheritance",
        "AbstractModel"
      ]
    ],
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_base_manager_inheritance",
        "AbstractModel"
      ]
    ],
    [
      "tests/model_indexes/models.py",
      [
        "AbstractModel"
      ]
    ],
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_abstract_model_with_regular_python_mixin_mro",
        "AbstractModel"
      ]
    ]
  ],
  "PlainModel": [
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_implicit_inheritance",
        "PlainModel"
      ]
    ],
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_default_manager_inheritance",
        "PlainModel"
      ]
    ],
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_base_manager_inheritance",
        "PlainModel"
      ]
    ]
  ],
  "ModelWithAbstractParent": [
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_implicit_inheritance",
        "ModelWithAbstractParent"
      ]
    ],
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_default_manager_inheritance",
        "ModelWithAbstractParent"
      ]
    ],
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_base_manager_inheritance",
        "ModelWithAbstractParent"
      ]
    ]
  ],
  "MTIModel": [
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_implicit_inheritance",
        "MTIModel"
      ]
    ],
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_default_manager_inheritance",
        "MTIModel"
      ]
    ],
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_base_manager_inheritance",
        "MTIModel"
      ]
    ]
  ],
  "TestManagerInheritance": [
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance"
      ]
    ]
  ],
  "Publication": [
    [
      "tests/many_to_many/models.py",
      [
        "Publication"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Publication"
      ]
    ],
    [
      "tests/model_package/models/publication.py",
      [
        "Publication"
      ]
    ]
  ],
  "AbstractArticle": [
    [
      "tests/many_to_many/models.py",
      [
        "AbstractArticle"
      ]
    ],
    [
      "tests/sites_framework/models.py",
      [
        "AbstractArticle"
      ]
    ]
  ],
  "InheritedArticleA": [
    [
      "tests/many_to_many/models.py",
      [
        "InheritedArticleA"
      ]
    ]
  ],
  "InheritedArticleB": [
    [
      "tests/many_to_many/models.py",
      [
        "InheritedArticleB"
      ]
    ]
  ],
  "NullableTargetArticle": [
    [
      "tests/many_to_many/models.py",
      [
        "NullableTargetArticle"
      ]
    ]
  ],
  "NullablePublicationThrough": [
    [
      "tests/many_to_many/models.py",
      [
        "NullablePublicationThrough"
      ]
    ]
  ],
  "ManyToManyTests": [
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests"
      ]
    ]
  ],
  "ManyToManyQueryTests": [
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyQueryTests"
      ]
    ]
  ],
  "First": [
    [
      "tests/many_to_one/models.py",
      [
        "First"
      ]
    ]
  ],
  "Second": [
    [
      "tests/many_to_one/models.py",
      [
        "Second"
      ]
    ]
  ],
  "Third": [
    [
      "tests/many_to_one/models.py",
      [
        "Third"
      ]
    ]
  ],
  "ToFieldChild": [
    [
      "tests/many_to_one/models.py",
      [
        "ToFieldChild"
      ]
    ]
  ],
  "Record": [
    [
      "tests/many_to_one/models.py",
      [
        "Record"
      ]
    ]
  ],
  "Relation": [
    [
      "tests/many_to_one/models.py",
      [
        "Relation"
      ]
    ],
    [
      "tests/model_meta/models.py",
      [
        "Relation"
      ]
    ]
  ],
  "SchoolManager": [
    [
      "tests/many_to_one/models.py",
      [
        "SchoolManager"
      ]
    ],
    [
      "tests/one_to_one/models.py",
      [
        "SchoolManager"
      ]
    ]
  ],
  "ManyToOneTests": [
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests"
      ]
    ]
  ],
  "ManyToOneNullTests": [
    [
      "tests/many_to_one_null/tests.py",
      [
        "ManyToOneNullTests"
      ]
    ]
  ],
  "PersonWithDefaultMaxLengths": [
    [
      "tests/max_lengths/models.py",
      [
        "PersonWithDefaultMaxLengths"
      ]
    ]
  ],
  "PersonWithCustomMaxLengths": [
    [
      "tests/max_lengths/models.py",
      [
        "PersonWithCustomMaxLengths"
      ]
    ]
  ],
  "MaxLengthArgumentsTests": [
    [
      "tests/max_lengths/tests.py",
      [
        "MaxLengthArgumentsTests"
      ]
    ]
  ],
  "MaxLengthORMTests": [
    [
      "tests/max_lengths/tests.py",
      [
        "MaxLengthORMTests"
      ]
    ]
  ],
  "override_settings_tags": [
    [
      "tests/messages_tests/base.py",
      [
        "override_settings_tags"
      ]
    ]
  ],
  "BaseTests": [
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests"
      ]
    ]
  ],
  "DummyStorage": [
    [
      "tests/messages_tests/test_api.py",
      [
        "DummyStorage"
      ]
    ],
    [
      "tests/staticfiles_tests/storage.py",
      [
        "DummyStorage"
      ]
    ]
  ],
  "ApiTests": [
    [
      "tests/messages_tests/test_api.py",
      [
        "ApiTests"
      ]
    ]
  ],
  "CustomRequest": [
    [
      "tests/messages_tests/test_api.py",
      [
        "CustomRequest"
      ]
    ]
  ],
  "CustomRequestApiTests": [
    [
      "tests/messages_tests/test_api.py",
      [
        "CustomRequestApiTests"
      ]
    ]
  ],
  "FallbackTests": [
    [
      "tests/messages_tests/test_fallback.py",
      [
        "FallbackTests"
      ]
    ]
  ],
  "MiddlewareTests": [
    [
      "tests/messages_tests/test_middleware.py",
      [
        "MiddlewareTests"
      ]
    ],
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MiddlewareTests"
      ]
    ]
  ],
  "SuccessMessageMixinTests": [
    [
      "tests/messages_tests/test_mixins.py",
      [
        "SuccessMessageMixinTests"
      ]
    ]
  ],
  "SessionTests": [
    [
      "tests/messages_tests/test_session.py",
      [
        "SessionTests"
      ]
    ],
    [
      "tests/test_client_regress/tests.py",
      [
        "SessionTests"
      ]
    ]
  ],
  "ContactFormViewWithMsg": [
    [
      "tests/messages_tests/urls.py",
      [
        "ContactFormViewWithMsg"
      ]
    ]
  ],
  "SecurityMiddlewareTest": [
    [
      "tests/middleware/test_security.py",
      [
        "SecurityMiddlewareTest"
      ]
    ]
  ],
  "CommonMiddlewareTest": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest"
      ]
    ]
  ],
  "BrokenLinkEmailsMiddlewareTest": [
    [
      "tests/middleware/tests.py",
      [
        "BrokenLinkEmailsMiddlewareTest"
      ]
    ]
  ],
  "ConditionalGetMiddlewareTest": [
    [
      "tests/middleware/tests.py",
      [
        "ConditionalGetMiddlewareTest"
      ]
    ]
  ],
  "OtherXFrameOptionsMiddleware": [
    [
      "tests/middleware/tests.py",
      [
        "XFrameOptionsMiddlewareTest",
        "test_is_extendable",
        "OtherXFrameOptionsMiddleware"
      ]
    ]
  ],
  "XFrameOptionsMiddlewareTest": [
    [
      "tests/middleware/tests.py",
      [
        "XFrameOptionsMiddlewareTest"
      ]
    ]
  ],
  "GZipMiddlewareTest": [
    [
      "tests/middleware/tests.py",
      [
        "GZipMiddlewareTest"
      ]
    ]
  ],
  "ETagGZipMiddlewareTest": [
    [
      "tests/middleware/tests.py",
      [
        "ETagGZipMiddlewareTest"
      ]
    ]
  ],
  "BaseMiddleware": [
    [
      "tests/middleware_exceptions/middleware.py",
      [
        "BaseMiddleware"
      ]
    ]
  ],
  "ProcessExceptionMiddleware": [
    [
      "tests/middleware_exceptions/middleware.py",
      [
        "ProcessExceptionMiddleware"
      ]
    ]
  ],
  "ProcessExceptionLogMiddleware": [
    [
      "tests/middleware_exceptions/middleware.py",
      [
        "ProcessExceptionLogMiddleware"
      ]
    ]
  ],
  "ProcessExceptionExcMiddleware": [
    [
      "tests/middleware_exceptions/middleware.py",
      [
        "ProcessExceptionExcMiddleware"
      ]
    ]
  ],
  "ProcessViewMiddleware": [
    [
      "tests/middleware_exceptions/middleware.py",
      [
        "ProcessViewMiddleware"
      ]
    ],
    [
      "tests/utils_tests/test_decorators.py",
      [
        "ProcessViewMiddleware"
      ]
    ]
  ],
  "ProcessViewNoneMiddleware": [
    [
      "tests/middleware_exceptions/middleware.py",
      [
        "ProcessViewNoneMiddleware"
      ]
    ]
  ],
  "ProcessViewTemplateResponseMiddleware": [
    [
      "tests/middleware_exceptions/middleware.py",
      [
        "ProcessViewTemplateResponseMiddleware"
      ]
    ]
  ],
  "TemplateResponseMiddleware": [
    [
      "tests/middleware_exceptions/middleware.py",
      [
        "TemplateResponseMiddleware"
      ]
    ]
  ],
  "LogMiddleware": [
    [
      "tests/middleware_exceptions/middleware.py",
      [
        "LogMiddleware"
      ]
    ]
  ],
  "NoTemplateResponseMiddleware": [
    [
      "tests/middleware_exceptions/middleware.py",
      [
        "NoTemplateResponseMiddleware"
      ]
    ]
  ],
  "NotFoundMiddleware": [
    [
      "tests/middleware_exceptions/middleware.py",
      [
        "NotFoundMiddleware"
      ]
    ]
  ],
  "RootUrlconfTests": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "RootUrlconfTests"
      ]
    ]
  ],
  "MyMiddleware": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MyMiddleware"
      ]
    ]
  ],
  "MyMiddlewareWithExceptionMessage": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MyMiddlewareWithExceptionMessage"
      ]
    ]
  ],
  "MiddlewareNotUsedTests": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MiddlewareNotUsedTests"
      ]
    ]
  ],
  "Receiver": [
    [
      "tests/migrate_signals/tests.py",
      [
        "Receiver"
      ]
    ]
  ],
  "OneTimeReceiver": [
    [
      "tests/migrate_signals/tests.py",
      [
        "OneTimeReceiver"
      ]
    ]
  ],
  "MigrateSignalTests": [
    [
      "tests/migrate_signals/tests.py",
      [
        "MigrateSignalTests"
      ]
    ]
  ],
  "Unmanaged": [
    [
      "tests/migration_test_data_persistence/models.py",
      [
        "Unmanaged"
      ]
    ]
  ],
  "MigrationDataPersistenceTestCase": [
    [
      "tests/migration_test_data_persistence/tests.py",
      [
        "MigrationDataPersistenceTestCase"
      ]
    ]
  ],
  "MigrationDataNormalPersistenceTestCase": [
    [
      "tests/migration_test_data_persistence/tests.py",
      [
        "MigrationDataNormalPersistenceTestCase"
      ]
    ]
  ],
  "A3": [
    [
      "tests/migrations/migrations_test_apps/lookuperror_a/models.py",
      [
        "A3"
      ]
    ]
  ],
  "A4": [
    [
      "tests/migrations/migrations_test_apps/lookuperror_a/models.py",
      [
        "A4"
      ]
    ]
  ],
  "B1": [
    [
      "tests/migrations/migrations_test_apps/lookuperror_b/models.py",
      [
        "B1"
      ]
    ]
  ],
  "B2": [
    [
      "tests/migrations/migrations_test_apps/lookuperror_b/models.py",
      [
        "B2"
      ]
    ]
  ],
  "B3": [
    [
      "tests/migrations/migrations_test_apps/lookuperror_b/models.py",
      [
        "B3"
      ]
    ]
  ],
  "C3": [
    [
      "tests/migrations/migrations_test_apps/lookuperror_c/models.py",
      [
        "C3"
      ]
    ]
  ],
  "OtherAuthor": [
    [
      "tests/migrations/migrations_test_apps/migrated_unapplied_app/models.py",
      [
        "OtherAuthor"
      ]
    ]
  ],
  "SillyModel": [
    [
      "tests/migrations/migrations_test_apps/unmigrated_app/models.py",
      [
        "SillyModel"
      ]
    ],
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_dry_run_verbosity_3",
        "SillyModel"
      ]
    ]
  ],
  "UnmigratedModel": [
    [
      "tests/migrations/migrations_test_apps/unmigrated_app_simple/models.py",
      [
        "UnmigratedModel"
      ]
    ],
    [
      "tests/migrations/models.py",
      [
        "UnmigratedModel"
      ]
    ]
  ],
  "Classroom": [
    [
      "tests/migrations/migrations_test_apps/unmigrated_app_syncdb/models.py",
      [
        "Classroom"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Classroom"
      ]
    ]
  ],
  "Lesson": [
    [
      "tests/migrations/migrations_test_apps/unmigrated_app_syncdb/models.py",
      [
        "Lesson"
      ]
    ]
  ],
  "CustomModelBase": [
    [
      "tests/migrations/models.py",
      [
        "CustomModelBase"
      ]
    ]
  ],
  "ModelWithCustomBase": [
    [
      "tests/migrations/models.py",
      [
        "ModelWithCustomBase"
      ]
    ]
  ],
  "UnicodeModel": [
    [
      "tests/migrations/models.py",
      [
        "UnicodeModel"
      ]
    ]
  ],
  "Unserializable": [
    [
      "tests/migrations/models.py",
      [
        "Unserializable"
      ]
    ]
  ],
  "UnserializableModel": [
    [
      "tests/migrations/models.py",
      [
        "UnserializableModel"
      ]
    ]
  ],
  "FoodQuerySet": [
    [
      "tests/migrations/models.py",
      [
        "FoodQuerySet"
      ]
    ]
  ],
  "BaseFoodManager": [
    [
      "tests/migrations/models.py",
      [
        "BaseFoodManager"
      ]
    ]
  ],
  "FoodManager": [
    [
      "tests/migrations/models.py",
      [
        "FoodManager"
      ]
    ]
  ],
  "NoMigrationFoodManager": [
    [
      "tests/migrations/models.py",
      [
        "NoMigrationFoodManager"
      ]
    ]
  ],
  "EmptyRouter": [
    [
      "tests/migrations/routers.py",
      [
        "EmptyRouter"
      ]
    ]
  ],
  "DeconstructibleObject": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "DeconstructibleObject"
      ]
    ]
  ],
  "AutodetectorTests": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests"
      ]
    ]
  ],
  "MigrationTestBase": [
    [
      "tests/migrations/test_base.py",
      [
        "MigrationTestBase"
      ]
    ]
  ],
  "MakeMigrationsTests": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests"
      ]
    ]
  ],
  "SquashMigrationsTests": [
    [
      "tests/migrations/test_commands.py",
      [
        "SquashMigrationsTests"
      ]
    ]
  ],
  "AppLabelErrorTests": [
    [
      "tests/migrations/test_commands.py",
      [
        "AppLabelErrorTests"
      ]
    ]
  ],
  "ExceptionTests": [
    [
      "tests/migrations/test_exceptions.py",
      [
        "ExceptionTests"
      ]
    ],
    [
      "tests/test_client_regress/tests.py",
      [
        "ExceptionTests"
      ]
    ]
  ],
  "ExecutorTests": [
    [
      "tests/migrations/test_executor.py",
      [
        "ExecutorTests"
      ]
    ]
  ],
  "FakeLoader": [
    [
      "tests/migrations/test_executor.py",
      [
        "FakeLoader"
      ]
    ]
  ],
  "FakeMigration": [
    [
      "tests/migrations/test_executor.py",
      [
        "FakeMigration"
      ]
    ]
  ],
  "ExecutorUnitTests": [
    [
      "tests/migrations/test_executor.py",
      [
        "ExecutorUnitTests"
      ]
    ]
  ],
  "GraphTests": [
    [
      "tests/migrations/test_graph.py",
      [
        "GraphTests"
      ]
    ]
  ],
  "NodeTests": [
    [
      "tests/migrations/test_graph.py",
      [
        "NodeTests"
      ]
    ],
    [
      "tests/utils_tests/test_tree.py",
      [
        "NodeTests"
      ]
    ]
  ],
  "RecorderTests": [
    [
      "tests/migrations/test_loader.py",
      [
        "RecorderTests"
      ]
    ]
  ],
  "LoaderTests": [
    [
      "tests/migrations/test_loader.py",
      [
        "LoaderTests"
      ]
    ],
    [
      "tests/template_tests/test_engine.py",
      [
        "LoaderTests"
      ]
    ]
  ],
  "PycLoaderTests": [
    [
      "tests/migrations/test_loader.py",
      [
        "PycLoaderTests"
      ]
    ]
  ],
  "AgnosticRouter": [
    [
      "tests/migrations/test_multidb.py",
      [
        "AgnosticRouter"
      ]
    ]
  ],
  "MigrateNothingRouter": [
    [
      "tests/migrations/test_multidb.py",
      [
        "MigrateNothingRouter"
      ]
    ]
  ],
  "MigrateEverythingRouter": [
    [
      "tests/migrations/test_multidb.py",
      [
        "MigrateEverythingRouter"
      ]
    ]
  ],
  "MigrateWhenFooRouter": [
    [
      "tests/migrations/test_multidb.py",
      [
        "MigrateWhenFooRouter"
      ]
    ]
  ],
  "MultiDBOperationTests": [
    [
      "tests/migrations/test_multidb.py",
      [
        "MultiDBOperationTests"
      ]
    ]
  ],
  "Mixin": [
    [
      "tests/migrations/test_operations.py",
      [
        "Mixin"
      ]
    ],
    [
      "tests/model_inheritance/models.py",
      [
        "Mixin"
      ]
    ],
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_abstract_model_with_regular_python_mixin_mro",
        "Mixin"
      ]
    ]
  ],
  "OperationTestBase": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTestBase"
      ]
    ]
  ],
  "SwappableOperationTests": [
    [
      "tests/migrations/test_operations.py",
      [
        "SwappableOperationTests"
      ]
    ]
  ],
  "TestCreateModel": [
    [
      "tests/migrations/test_operations.py",
      [
        "TestCreateModel"
      ]
    ]
  ],
  "FieldOperationTests": [
    [
      "tests/migrations/test_operations.py",
      [
        "FieldOperationTests"
      ]
    ]
  ],
  "OptimizerTests": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests"
      ]
    ]
  ],
  "QuestionerTests": [
    [
      "tests/migrations/test_questioner.py",
      [
        "QuestionerTests"
      ]
    ]
  ],
  "AuthorProxy": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_create",
        "AuthorProxy"
      ]
    ]
  ],
  "SubAuthor": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_create",
        "SubAuthor"
      ]
    ]
  ],
  "FoodNoManagers": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_create",
        "FoodNoManagers"
      ]
    ]
  ],
  "FoodNoDefaultManager": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_create",
        "FoodNoDefaultManager"
      ]
    ]
  ],
  "FoodOrderedManagers": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_create",
        "FoodOrderedManagers"
      ]
    ]
  ],
  "BossManager": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_no_duplicate_managers",
        "BossManager"
      ]
    ]
  ],
  "Boss": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_no_duplicate_managers",
        "Boss"
      ]
    ]
  ],
  "Author2": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_custom_base_manager",
        "Author2"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "Author2"
      ]
    ]
  ],
  "FooBar": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_render_model_with_multiple_inheritance",
        "FooBar"
      ]
    ],
    [
      "tests/test_runner_apps/tagged/tests_inheritance.py",
      [
        "FooBar"
      ]
    ]
  ],
  "AbstractSubFooBar": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_render_model_with_multiple_inheritance",
        "AbstractSubFooBar"
      ]
    ]
  ],
  "SubFooBar": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_render_model_with_multiple_inheritance",
        "SubFooBar"
      ]
    ]
  ],
  "E": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_render_project_dependencies",
        "E"
      ]
    ]
  ],
  "Magazine": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_dangling_references_throw_error",
        "Magazine"
      ]
    ]
  ],
  "StateTests": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests"
      ]
    ]
  ],
  "SearchableLocation": [
    [
      "tests/migrations/test_state.py",
      [
        "ModelStateTests",
        "test_create_swappable_from_abstract",
        "SearchableLocation"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "SearchableLocation"
      ]
    ]
  ],
  "Station": [
    [
      "tests/migrations/test_state.py",
      [
        "ModelStateTests",
        "test_create_swappable_from_abstract",
        "Station"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "Station"
      ]
    ]
  ],
  "BusStation": [
    [
      "tests/migrations/test_state.py",
      [
        "ModelStateTests",
        "test_create_swappable_from_abstract",
        "BusStation"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "BusStation"
      ]
    ]
  ],
  "Abstract": [
    [
      "tests/migrations/test_state.py",
      [
        "ModelStateTests",
        "test_abstract_model_children_inherit_indexes",
        "Abstract"
      ]
    ],
    [
      "tests/proxy_models/models.py",
      [
        "Abstract"
      ]
    ]
  ],
  "ModelStateTests": [
    [
      "tests/migrations/test_state.py",
      [
        "ModelStateTests"
      ]
    ],
    [
      "tests/model_regress/test_state.py",
      [
        "ModelStateTests"
      ]
    ]
  ],
  "RelatedModelsTests": [
    [
      "tests/migrations/test_state.py",
      [
        "RelatedModelsTests"
      ]
    ]
  ],
  "Money": [
    [
      "tests/migrations/test_writer.py",
      [
        "Money"
      ]
    ]
  ],
  "TestModel1": [
    [
      "tests/migrations/test_writer.py",
      [
        "TestModel1"
      ]
    ]
  ],
  "OperationWriterTests": [
    [
      "tests/migrations/test_writer.py",
      [
        "OperationWriterTests"
      ]
    ]
  ],
  "TextEnum": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_enums",
        "TextEnum"
      ]
    ]
  ],
  "BinaryEnum": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_enums",
        "BinaryEnum"
      ]
    ]
  ],
  "IntEnum": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_enums",
        "IntEnum"
      ]
    ]
  ],
  "WriterTests": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests"
      ]
    ]
  ],
  "Whiz": [
    [
      "tests/model_fields/models.py",
      [
        "Whiz"
      ]
    ],
    [
      "tests/string_lookup/models.py",
      [
        "Whiz"
      ]
    ]
  ],
  "WhizDelayed": [
    [
      "tests/model_fields/models.py",
      [
        "WhizDelayed"
      ]
    ]
  ],
  "WhizIter": [
    [
      "tests/model_fields/models.py",
      [
        "WhizIter"
      ]
    ]
  ],
  "WhizIterEmpty": [
    [
      "tests/model_fields/models.py",
      [
        "WhizIterEmpty"
      ]
    ]
  ],
  "Choiceful": [
    [
      "tests/model_fields/models.py",
      [
        "Choiceful"
      ]
    ]
  ],
  "BigD": [
    [
      "tests/model_fields/models.py",
      [
        "BigD"
      ]
    ]
  ],
  "BigS": [
    [
      "tests/model_fields/models.py",
      [
        "BigS"
      ]
    ]
  ],
  "UnicodeSlugField": [
    [
      "tests/model_fields/models.py",
      [
        "UnicodeSlugField"
      ]
    ]
  ],
  "SmallIntegerModel": [
    [
      "tests/model_fields/models.py",
      [
        "SmallIntegerModel"
      ]
    ]
  ],
  "BigIntegerModel": [
    [
      "tests/model_fields/models.py",
      [
        "BigIntegerModel"
      ]
    ]
  ],
  "PositiveSmallIntegerModel": [
    [
      "tests/model_fields/models.py",
      [
        "PositiveSmallIntegerModel"
      ]
    ]
  ],
  "PositiveIntegerModel": [
    [
      "tests/model_fields/models.py",
      [
        "PositiveIntegerModel"
      ]
    ]
  ],
  "NullBooleanModel": [
    [
      "tests/model_fields/models.py",
      [
        "NullBooleanModel"
      ]
    ]
  ],
  "BooleanModel": [
    [
      "tests/model_fields/models.py",
      [
        "BooleanModel"
      ]
    ]
  ],
  "DateTimeModel": [
    [
      "tests/model_fields/models.py",
      [
        "DateTimeModel"
      ]
    ]
  ],
  "DurationModel": [
    [
      "tests/model_fields/models.py",
      [
        "DurationModel"
      ]
    ]
  ],
  "NullDurationModel": [
    [
      "tests/model_fields/models.py",
      [
        "NullDurationModel"
      ]
    ]
  ],
  "PrimaryKeyCharModel": [
    [
      "tests/model_fields/models.py",
      [
        "PrimaryKeyCharModel"
      ]
    ]
  ],
  "FksToBooleans": [
    [
      "tests/model_fields/models.py",
      [
        "FksToBooleans"
      ]
    ]
  ],
  "FkToChar": [
    [
      "tests/model_fields/models.py",
      [
        "FkToChar"
      ]
    ]
  ],
  "RenamedField": [
    [
      "tests/model_fields/models.py",
      [
        "RenamedField"
      ]
    ]
  ],
  "VerboseNameField": [
    [
      "tests/model_fields/models.py",
      [
        "VerboseNameField"
      ]
    ]
  ],
  "GenericIPAddress": [
    [
      "tests/model_fields/models.py",
      [
        "GenericIPAddress"
      ]
    ]
  ],
  "DecimalLessThanOne": [
    [
      "tests/model_fields/models.py",
      [
        "DecimalLessThanOne"
      ]
    ]
  ],
  "FieldClassAttributeModel": [
    [
      "tests/model_fields/models.py",
      [
        "FieldClassAttributeModel"
      ]
    ]
  ],
  "DataModel": [
    [
      "tests/model_fields/models.py",
      [
        "DataModel"
      ]
    ]
  ],
  "Document": [
    [
      "tests/model_fields/models.py",
      [
        "Document"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Document"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_creation_with_db_table_double_quotes",
        "Document"
      ]
    ]
  ],
  "TestImageFieldFile": [
    [
      "tests/model_fields/models.py",
      [
        "if_Image_",
        "TestImageFieldFile"
      ]
    ]
  ],
  "TestImageField": [
    [
      "tests/model_fields/models.py",
      [
        "if_Image_",
        "TestImageField"
      ]
    ]
  ],
  "AbstractPersonWithHeight": [
    [
      "tests/model_fields/models.py",
      [
        "if_Image_",
        "AbstractPersonWithHeight"
      ]
    ]
  ],
  "PersonWithHeight": [
    [
      "tests/model_fields/models.py",
      [
        "if_Image_",
        "PersonWithHeight"
      ]
    ]
  ],
  "PersonWithHeightAndWidth": [
    [
      "tests/model_fields/models.py",
      [
        "if_Image_",
        "PersonWithHeightAndWidth"
      ]
    ]
  ],
  "PersonDimensionsFirst": [
    [
      "tests/model_fields/models.py",
      [
        "if_Image_",
        "PersonDimensionsFirst"
      ]
    ]
  ],
  "PersonTwoImages": [
    [
      "tests/model_fields/models.py",
      [
        "if_Image_",
        "PersonTwoImages"
      ]
    ]
  ],
  "AllFieldsModel": [
    [
      "tests/model_fields/models.py",
      [
        "AllFieldsModel"
      ]
    ]
  ],
  "ManyToMany": [
    [
      "tests/model_fields/models.py",
      [
        "ManyToMany"
      ]
    ]
  ],
  "UUIDModel": [
    [
      "tests/model_fields/models.py",
      [
        "UUIDModel"
      ]
    ]
  ],
  "NullableUUIDModel": [
    [
      "tests/model_fields/models.py",
      [
        "NullableUUIDModel"
      ]
    ]
  ],
  "RelatedToUUIDModel": [
    [
      "tests/model_fields/models.py",
      [
        "RelatedToUUIDModel"
      ]
    ]
  ],
  "UUIDChild": [
    [
      "tests/model_fields/models.py",
      [
        "UUIDChild"
      ]
    ]
  ],
  "UUIDGrandchild": [
    [
      "tests/model_fields/models.py",
      [
        "UUIDGrandchild"
      ]
    ]
  ],
  "BinaryFieldTests": [
    [
      "tests/model_fields/test_binaryfield.py",
      [
        "BinaryFieldTests"
      ]
    ]
  ],
  "BooleanFieldTests": [
    [
      "tests/model_fields/test_booleanfield.py",
      [
        "BooleanFieldTests"
      ]
    ]
  ],
  "ValidationTest": [
    [
      "tests/model_fields/test_booleanfield.py",
      [
        "ValidationTest"
      ]
    ],
    [
      "tests/model_fields/test_datetimefield.py",
      [
        "ValidationTest"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "ValidationTest"
      ]
    ]
  ],
  "TestCharField": [
    [
      "tests/model_fields/test_charfield.py",
      [
        "TestCharField"
      ]
    ]
  ],
  "TestSaveLoad": [
    [
      "tests/model_fields/test_durationfield.py",
      [
        "TestSaveLoad"
      ]
    ],
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestSaveLoad"
      ]
    ],
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSaveLoad"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestSaveLoad"
      ]
    ],
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestSaveLoad"
      ]
    ]
  ],
  "TestQuerying": [
    [
      "tests/model_fields/test_durationfield.py",
      [
        "TestQuerying"
      ]
    ],
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestQuerying"
      ]
    ],
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying"
      ]
    ],
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestQuerying"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying"
      ]
    ],
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQuerying"
      ]
    ]
  ],
  "TestSerialization": [
    [
      "tests/model_fields/test_durationfield.py",
      [
        "TestSerialization"
      ]
    ],
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestSerialization"
      ]
    ],
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSerialization"
      ]
    ],
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestSerialization"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestSerialization"
      ]
    ],
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestSerialization"
      ]
    ]
  ],
  "TestValidation": [
    [
      "tests/model_fields/test_durationfield.py",
      [
        "TestValidation"
      ]
    ],
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestValidation"
      ]
    ],
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestValidation"
      ]
    ],
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestValidation"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestValidation"
      ]
    ]
  ],
  "TestFormField": [
    [
      "tests/model_fields/test_durationfield.py",
      [
        "TestFormField"
      ]
    ],
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestFormField"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestFormField"
      ]
    ],
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField"
      ]
    ]
  ],
  "FieldFlagsTests": [
    [
      "tests/model_fields/test_field_flags.py",
      [
        "FieldFlagsTests"
      ]
    ]
  ],
  "TestFloatField": [
    [
      "tests/model_fields/test_floatfield.py",
      [
        "TestFloatField"
      ]
    ]
  ],
  "ForeignKeyTests": [
    [
      "tests/model_fields/test_foreignkey.py",
      [
        "ForeignKeyTests"
      ]
    ]
  ],
  "ImageFieldTestMixin": [
    [
      "tests/model_fields/test_imagefield.py",
      [
        "ImageFieldTestMixin"
      ]
    ]
  ],
  "ImageFieldTwoDimensionsTests": [
    [
      "tests/model_fields/test_imagefield.py",
      [
        "ImageFieldTwoDimensionsTests"
      ]
    ]
  ],
  "ImageFieldNoDimensionsTests": [
    [
      "tests/model_fields/test_imagefield.py",
      [
        "ImageFieldNoDimensionsTests"
      ]
    ]
  ],
  "ImageFieldOneDimensionTests": [
    [
      "tests/model_fields/test_imagefield.py",
      [
        "ImageFieldOneDimensionTests"
      ]
    ]
  ],
  "ImageFieldDimensionsFirstTests": [
    [
      "tests/model_fields/test_imagefield.py",
      [
        "ImageFieldDimensionsFirstTests"
      ]
    ]
  ],
  "ImageFieldUsingFileTests": [
    [
      "tests/model_fields/test_imagefield.py",
      [
        "ImageFieldUsingFileTests"
      ]
    ]
  ],
  "TwoImageFieldTests": [
    [
      "tests/model_fields/test_imagefield.py",
      [
        "TwoImageFieldTests"
      ]
    ]
  ],
  "SmallIntegerFieldTests": [
    [
      "tests/model_fields/test_integerfield.py",
      [
        "SmallIntegerFieldTests"
      ]
    ]
  ],
  "BigIntegerFieldTests": [
    [
      "tests/model_fields/test_integerfield.py",
      [
        "BigIntegerFieldTests"
      ]
    ]
  ],
  "PositiveSmallIntegerFieldTests": [
    [
      "tests/model_fields/test_integerfield.py",
      [
        "PositiveSmallIntegerFieldTests"
      ]
    ]
  ],
  "PositiveIntegerFieldTests": [
    [
      "tests/model_fields/test_integerfield.py",
      [
        "PositiveIntegerFieldTests"
      ]
    ]
  ],
  "AbstractReferent": [
    [
      "tests/model_fields/test_manytomanyfield.py",
      [
        "ManyToManyFieldTests",
        "test_abstract_model_app_relative_foreign_key",
        "AbstractReferent"
      ]
    ],
    [
      "tests/model_inheritance/tests.py",
      [
        "InheritanceSameModelNameTests",
        "test_abstract_fk_related_name",
        "AbstractReferent"
      ]
    ]
  ],
  "ManyToManyFieldTests": [
    [
      "tests/model_fields/test_manytomanyfield.py",
      [
        "ManyToManyFieldTests"
      ]
    ]
  ],
  "ManyToManyFieldDBTests": [
    [
      "tests/model_fields/test_manytomanyfield.py",
      [
        "ManyToManyFieldDBTests"
      ]
    ]
  ],
  "PromiseTest": [
    [
      "tests/model_fields/test_promises.py",
      [
        "PromiseTest"
      ]
    ]
  ],
  "SlugFieldTests": [
    [
      "tests/model_fields/test_slugfield.py",
      [
        "SlugFieldTests"
      ]
    ]
  ],
  "TestMethods": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestMethods"
      ]
    ]
  ],
  "TestAsPrimaryKey": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestAsPrimaryKey"
      ]
    ]
  ],
  "TestAsPrimaryKeyTransactionTests": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestAsPrimaryKeyTransactionTests"
      ]
    ]
  ],
  "Nested": [
    [
      "tests/model_fields/tests.py",
      [
        "Nested"
      ]
    ]
  ],
  "BasicFieldTests": [
    [
      "tests/model_fields/tests.py",
      [
        "BasicFieldTests"
      ]
    ]
  ],
  "GetFieldDisplayTests": [
    [
      "tests/model_fields/tests.py",
      [
        "GetFieldDisplayTests"
      ]
    ]
  ],
  "GetChoicesTests": [
    [
      "tests/model_fields/tests.py",
      [
        "GetChoicesTests"
      ]
    ]
  ],
  "GetChoicesOrderingTests": [
    [
      "tests/model_fields/tests.py",
      [
        "GetChoicesOrderingTests"
      ]
    ]
  ],
  "ImprovedArticle": [
    [
      "tests/model_forms/models.py",
      [
        "ImprovedArticle"
      ]
    ]
  ],
  "ImprovedArticleWithParentLink": [
    [
      "tests/model_forms/models.py",
      [
        "ImprovedArticleWithParentLink"
      ]
    ]
  ],
  "BetterWriter": [
    [
      "tests/model_forms/models.py",
      [
        "BetterWriter"
      ]
    ]
  ],
  "PublicationDefaults": [
    [
      "tests/model_forms/models.py",
      [
        "PublicationDefaults"
      ]
    ]
  ],
  "Author1": [
    [
      "tests/model_forms/models.py",
      [
        "Author1"
      ]
    ]
  ],
  "WriterProfile": [
    [
      "tests/model_forms/models.py",
      [
        "WriterProfile"
      ]
    ]
  ],
  "TextFile": [
    [
      "tests/model_forms/models.py",
      [
        "TextFile"
      ]
    ]
  ],
  "CustomFileField": [
    [
      "tests/model_forms/models.py",
      [
        "CustomFileField"
      ]
    ]
  ],
  "CustomFF": [
    [
      "tests/model_forms/models.py",
      [
        "CustomFF"
      ]
    ]
  ],
  "FilePathModel": [
    [
      "tests/model_forms/models.py",
      [
        "FilePathModel"
      ]
    ]
  ],
  "OptionalImageFile": [
    [
      "tests/model_forms/models.py",
      [
        "try_",
        "OptionalImageFile"
      ]
    ]
  ],
  "NoExtensionImageFile": [
    [
      "tests/model_forms/models.py",
      [
        "try_",
        "NoExtensionImageFile"
      ]
    ]
  ],
  "Homepage": [
    [
      "tests/model_forms/models.py",
      [
        "Homepage"
      ]
    ]
  ],
  "Price": [
    [
      "tests/model_forms/models.py",
      [
        "Price"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Price"
      ]
    ]
  ],
  "Triple": [
    [
      "tests/model_forms/models.py",
      [
        "Triple"
      ]
    ]
  ],
  "ArticleStatus": [
    [
      "tests/model_forms/models.py",
      [
        "ArticleStatus"
      ]
    ]
  ],
  "BookXtra": [
    [
      "tests/model_forms/models.py",
      [
        "BookXtra"
      ]
    ]
  ],
  "DerivedBook": [
    [
      "tests/model_forms/models.py",
      [
        "DerivedBook"
      ]
    ]
  ],
  "ExplicitPK": [
    [
      "tests/model_forms/models.py",
      [
        "ExplicitPK"
      ]
    ]
  ],
  "DateTimePost": [
    [
      "tests/model_forms/models.py",
      [
        "DateTimePost"
      ]
    ]
  ],
  "DerivedPost": [
    [
      "tests/model_forms/models.py",
      [
        "DerivedPost"
      ]
    ]
  ],
  "BigInt": [
    [
      "tests/model_forms/models.py",
      [
        "BigInt"
      ]
    ]
  ],
  "MarkupField": [
    [
      "tests/model_forms/models.py",
      [
        "MarkupField"
      ]
    ]
  ],
  "CustomFieldForExclusionModel": [
    [
      "tests/model_forms/models.py",
      [
        "CustomFieldForExclusionModel"
      ]
    ]
  ],
  "FlexibleDatePost": [
    [
      "tests/model_forms/models.py",
      [
        "FlexibleDatePost"
      ]
    ],
    [
      "tests/validation/models.py",
      [
        "FlexibleDatePost"
      ]
    ]
  ],
  "Colour": [
    [
      "tests/model_forms/models.py",
      [
        "Colour"
      ]
    ]
  ],
  "ColourfulItem": [
    [
      "tests/model_forms/models.py",
      [
        "ColourfulItem"
      ]
    ]
  ],
  "CustomErrorMessage": [
    [
      "tests/model_forms/models.py",
      [
        "CustomErrorMessage"
      ]
    ]
  ],
  "StrictAssignmentFieldSpecific": [
    [
      "tests/model_forms/models.py",
      [
        "StrictAssignmentFieldSpecific"
      ]
    ]
  ],
  "StrictAssignmentAll": [
    [
      "tests/model_forms/models.py",
      [
        "StrictAssignmentAll"
      ]
    ]
  ],
  "NullableUniqueCharFieldModel": [
    [
      "tests/model_forms/models.py",
      [
        "NullableUniqueCharFieldModel"
      ]
    ]
  ],
  "CustomModelChoiceValue": [
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_choice_iterator_passes_model_to_widget",
        "CustomModelChoiceValue"
      ]
    ]
  ],
  "CustomModelChoiceIterator": [
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_choice_iterator_passes_model_to_widget",
        "CustomModelChoiceIterator"
      ]
    ]
  ],
  "CustomCheckboxSelectMultiple": [
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_choice_iterator_passes_model_to_widget",
        "CustomCheckboxSelectMultiple"
      ]
    ]
  ],
  "CustomModelMultipleChoiceField": [
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_choice_iterator_passes_model_to_widget",
        "CustomModelMultipleChoiceField"
      ]
    ]
  ],
  "ModelChoiceFieldTests": [
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests"
      ]
    ]
  ],
  "UUIDPKForm": [
    [
      "tests/model_forms/test_uuid.py",
      [
        "UUIDPKForm"
      ]
    ]
  ],
  "ModelFormBaseTest": [
    [
      "tests/model_forms/test_uuid.py",
      [
        "ModelFormBaseTest"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest"
      ]
    ]
  ],
  "ProductForm": [
    [
      "tests/model_forms/tests.py",
      [
        "ProductForm"
      ]
    ]
  ],
  "BookForm": [
    [
      "tests/model_forms/tests.py",
      [
        "BookForm"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "UniqueTest",
        "test_unique_together_exclusion",
        "BookForm"
      ]
    ],
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_inlineformset_with_arrayfield",
        "BookForm"
      ]
    ]
  ],
  "DerivedBookForm": [
    [
      "tests/model_forms/tests.py",
      [
        "DerivedBookForm"
      ]
    ]
  ],
  "ExplicitPKForm": [
    [
      "tests/model_forms/tests.py",
      [
        "ExplicitPKForm"
      ]
    ]
  ],
  "PostForm": [
    [
      "tests/model_forms/tests.py",
      [
        "PostForm"
      ]
    ]
  ],
  "DerivedPostForm": [
    [
      "tests/model_forms/tests.py",
      [
        "DerivedPostForm"
      ]
    ]
  ],
  "CustomWriterForm": [
    [
      "tests/model_forms/tests.py",
      [
        "CustomWriterForm"
      ]
    ]
  ],
  "BaseCategoryForm": [
    [
      "tests/model_forms/tests.py",
      [
        "BaseCategoryForm"
      ]
    ]
  ],
  "RoykoForm": [
    [
      "tests/model_forms/tests.py",
      [
        "RoykoForm"
      ]
    ]
  ],
  "ArticleStatusForm": [
    [
      "tests/model_forms/tests.py",
      [
        "ArticleStatusForm"
      ]
    ]
  ],
  "InventoryForm": [
    [
      "tests/model_forms/tests.py",
      [
        "InventoryForm"
      ]
    ]
  ],
  "SelectInventoryForm": [
    [
      "tests/model_forms/tests.py",
      [
        "SelectInventoryForm"
      ]
    ]
  ],
  "CustomFieldForExclusionForm": [
    [
      "tests/model_forms/tests.py",
      [
        "CustomFieldForExclusionForm"
      ]
    ]
  ],
  "TextFileForm": [
    [
      "tests/model_forms/tests.py",
      [
        "TextFileForm"
      ]
    ]
  ],
  "BigIntForm": [
    [
      "tests/model_forms/tests.py",
      [
        "BigIntForm"
      ]
    ]
  ],
  "ModelFormWithMedia": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormWithMedia"
      ]
    ]
  ],
  "CustomErrorMessageForm": [
    [
      "tests/model_forms/tests.py",
      [
        "CustomErrorMessageForm"
      ]
    ]
  ],
  "FormForTestingIsValid": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_blank_with_null_foreign_key_field",
        "FormForTestingIsValid"
      ]
    ]
  ],
  "PriceFormWithoutQuantity": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_exclude_and_validation",
        "PriceFormWithoutQuantity"
      ]
    ]
  ],
  "PriceFormWithoutQuantity_1": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_exclude_and_validation",
        "PriceFormWithoutQuantity_1"
      ]
    ]
  ],
  "FieldOverridesByFormMetaForm": [
    [
      "tests/model_forms/tests.py",
      [
        "FieldOverridesByFormMetaForm"
      ]
    ]
  ],
  "TestFieldOverridesByFormMeta": [
    [
      "tests/model_forms/tests.py",
      [
        "TestFieldOverridesByFormMeta"
      ]
    ]
  ],
  "IncompleteCategoryFormWithFields": [
    [
      "tests/model_forms/tests.py",
      [
        "IncompleteCategoryFormWithFields"
      ]
    ]
  ],
  "IncompleteCategoryFormWithExclude": [
    [
      "tests/model_forms/tests.py",
      [
        "IncompleteCategoryFormWithExclude"
      ]
    ]
  ],
  "UniqueTest": [
    [
      "tests/model_forms/tests.py",
      [
        "UniqueTest"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "UniqueTest"
      ]
    ]
  ],
  "PartialArticleForm": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBasicTests",
        "test_subset_fields",
        "PartialArticleForm"
      ]
    ]
  ],
  "PartialArticleFormWithSlug": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBasicTests",
        "test_subset_fields",
        "PartialArticleFormWithSlug"
      ]
    ]
  ],
  "ModelFormBasicTests": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBasicTests"
      ]
    ]
  ],
  "WriterForm": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelMultipleChoiceFieldTests",
        "test_model_multiple_choice_show_hidden_initial",
        "WriterForm"
      ]
    ]
  ],
  "ModelMultipleChoiceFieldTests": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelMultipleChoiceFieldTests"
      ]
    ]
  ],
  "WriterProfileForm": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelOneToOneFieldTests",
        "test_onetoonefield",
        "WriterProfileForm"
      ]
    ]
  ],
  "ModelOneToOneFieldTests": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelOneToOneFieldTests"
      ]
    ]
  ],
  "PhotoForm": [
    [
      "tests/model_forms/tests.py",
      [
        "FileAndImageFieldTests",
        "test_file_field_multiple_save",
        "PhotoForm"
      ]
    ]
  ],
  "FileAndImageFieldTests": [
    [
      "tests/model_forms/tests.py",
      [
        "FileAndImageFieldTests"
      ]
    ]
  ],
  "ModelOtherFieldTests": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelOtherFieldTests"
      ]
    ]
  ],
  "CategoryForm": [
    [
      "tests/model_forms/tests.py",
      [
        "OtherModelFormTests",
        "test_foreignkeys_which_use_to_field",
        "CategoryForm"
      ]
    ]
  ],
  "PublicationDefaultsForm": [
    [
      "tests/model_forms/tests.py",
      [
        "OtherModelFormTests",
        "test_callable_field_default",
        "PublicationDefaultsForm"
      ]
    ]
  ],
  "OtherModelFormTests": [
    [
      "tests/model_forms/tests.py",
      [
        "OtherModelFormTests"
      ]
    ]
  ],
  "ModelFormCustomErrorTests": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormCustomErrorTests"
      ]
    ]
  ],
  "CustomCleanTests": [
    [
      "tests/model_forms/tests.py",
      [
        "CustomCleanTests"
      ]
    ]
  ],
  "ModelFormInheritanceTests": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormInheritanceTests"
      ]
    ]
  ],
  "StumpJokeForm": [
    [
      "tests/model_forms/tests.py",
      [
        "StumpJokeForm"
      ]
    ]
  ],
  "CustomFieldWithQuerysetButNoLimitChoicesTo": [
    [
      "tests/model_forms/tests.py",
      [
        "CustomFieldWithQuerysetButNoLimitChoicesTo"
      ]
    ]
  ],
  "StumpJokeWithCustomFieldForm": [
    [
      "tests/model_forms/tests.py",
      [
        "StumpJokeWithCustomFieldForm"
      ]
    ]
  ],
  "LimitChoicesToTests": [
    [
      "tests/model_forms/tests.py",
      [
        "LimitChoicesToTests"
      ]
    ]
  ],
  "FormFieldCallbackTests": [
    [
      "tests/model_forms/tests.py",
      [
        "FormFieldCallbackTests"
      ]
    ]
  ],
  "LocalizedModelFormTest": [
    [
      "tests/model_forms/tests.py",
      [
        "LocalizedModelFormTest"
      ]
    ]
  ],
  "CustomMetaclass": [
    [
      "tests/model_forms/tests.py",
      [
        "CustomMetaclass"
      ]
    ]
  ],
  "CustomMetaclassForm": [
    [
      "tests/model_forms/tests.py",
      [
        "CustomMetaclassForm"
      ]
    ]
  ],
  "CustomMetaclassTestCase": [
    [
      "tests/model_forms/tests.py",
      [
        "CustomMetaclassTestCase"
      ]
    ]
  ],
  "StrictAssignmentTests": [
    [
      "tests/model_forms/tests.py",
      [
        "StrictAssignmentTests"
      ]
    ]
  ],
  "ModelToDictTests": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelToDictTests"
      ]
    ]
  ],
  "BetterAuthor": [
    [
      "tests/model_formsets/models.py",
      [
        "BetterAuthor"
      ]
    ]
  ],
  "BookWithCustomPK": [
    [
      "tests/model_formsets/models.py",
      [
        "BookWithCustomPK"
      ]
    ]
  ],
  "BookWithOptionalAltEditor": [
    [
      "tests/model_formsets/models.py",
      [
        "BookWithOptionalAltEditor"
      ]
    ]
  ],
  "AlternateBook": [
    [
      "tests/model_formsets/models.py",
      [
        "AlternateBook"
      ]
    ]
  ],
  "AuthorMeeting": [
    [
      "tests/model_formsets/models.py",
      [
        "AuthorMeeting"
      ]
    ]
  ],
  "CustomPrimaryKey": [
    [
      "tests/model_formsets/models.py",
      [
        "CustomPrimaryKey"
      ]
    ]
  ],
  "Owner": [
    [
      "tests/model_formsets/models.py",
      [
        "Owner"
      ]
    ]
  ],
  "OwnerProfile": [
    [
      "tests/model_formsets/models.py",
      [
        "OwnerProfile"
      ]
    ]
  ],
  "MexicanRestaurant": [
    [
      "tests/model_formsets/models.py",
      [
        "MexicanRestaurant"
      ]
    ]
  ],
  "ClassyMexicanRestaurant": [
    [
      "tests/model_formsets/models.py",
      [
        "ClassyMexicanRestaurant"
      ]
    ]
  ],
  "Repository": [
    [
      "tests/model_formsets/models.py",
      [
        "Repository"
      ]
    ]
  ],
  "Revision": [
    [
      "tests/model_formsets/models.py",
      [
        "Revision"
      ]
    ]
  ],
  "UUIDPKParent": [
    [
      "tests/model_formsets/models.py",
      [
        "UUIDPKParent"
      ]
    ]
  ],
  "UUIDPKChild": [
    [
      "tests/model_formsets/models.py",
      [
        "UUIDPKChild"
      ]
    ]
  ],
  "ChildWithEditablePK": [
    [
      "tests/model_formsets/models.py",
      [
        "ChildWithEditablePK"
      ]
    ]
  ],
  "AutoPKChildOfUUIDPKParent": [
    [
      "tests/model_formsets/models.py",
      [
        "AutoPKChildOfUUIDPKParent"
      ]
    ]
  ],
  "AutoPKParent": [
    [
      "tests/model_formsets/models.py",
      [
        "AutoPKParent"
      ]
    ]
  ],
  "UUIDPKChildOfAutoPKParent": [
    [
      "tests/model_formsets/models.py",
      [
        "UUIDPKChildOfAutoPKParent"
      ]
    ]
  ],
  "ParentWithUUIDAlternateKey": [
    [
      "tests/model_formsets/models.py",
      [
        "ParentWithUUIDAlternateKey"
      ]
    ]
  ],
  "ChildRelatedViaAK": [
    [
      "tests/model_formsets/models.py",
      [
        "ChildRelatedViaAK"
      ]
    ]
  ],
  "InlineFormsetTests": [
    [
      "tests/model_formsets/test_uuid.py",
      [
        "InlineFormsetTests"
      ]
    ],
    [
      "tests/model_formsets_regress/tests.py",
      [
        "InlineFormsetTests"
      ]
    ]
  ],
  "PoetForm": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_custom_save_method",
        "PoetForm"
      ]
    ]
  ],
  "PoemForm": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_inline_formsets_with_custom_save_method",
        "PoemForm"
      ]
    ]
  ],
  "PoemForm2": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_inline_formsets_with_custom_save_method_related_instance",
        "PoemForm2"
      ]
    ]
  ],
  "MembershipForm": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_callable_defaults",
        "MembershipForm"
      ]
    ]
  ],
  "ModelFormsetTest": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest"
      ]
    ]
  ],
  "TestModelFormsetOverridesTroughFormMeta": [
    [
      "tests/model_formsets/tests.py",
      [
        "TestModelFormsetOverridesTroughFormMeta"
      ]
    ]
  ],
  "UserSite": [
    [
      "tests/model_formsets_regress/models.py",
      [
        "UserSite"
      ]
    ]
  ],
  "UserPreferences": [
    [
      "tests/model_formsets_regress/models.py",
      [
        "UserPreferences"
      ]
    ]
  ],
  "ProfileNetwork": [
    [
      "tests/model_formsets_regress/models.py",
      [
        "ProfileNetwork"
      ]
    ]
  ],
  "Network": [
    [
      "tests/model_formsets_regress/models.py",
      [
        "Network"
      ]
    ]
  ],
  "Host": [
    [
      "tests/model_formsets_regress/models.py",
      [
        "Host"
      ]
    ]
  ],
  "FormsetTests": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "FormsetTests"
      ]
    ]
  ],
  "UserSiteForm": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "UserSiteForm"
      ]
    ]
  ],
  "Callback": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "Callback"
      ]
    ]
  ],
  "FormfieldCallbackTests": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "FormfieldCallbackTests"
      ]
    ]
  ],
  "BaseCustomDeleteFormSet": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "BaseCustomDeleteFormSet"
      ]
    ]
  ],
  "BaseCustomDeleteModelFormSet": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "FormfieldShouldDeleteFormTests",
        "BaseCustomDeleteModelFormSet"
      ]
    ]
  ],
  "CustomDeleteUserForm": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "FormfieldShouldDeleteFormTests",
        "CustomDeleteUserForm"
      ]
    ]
  ],
  "FormfieldShouldDeleteFormTests": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "FormfieldShouldDeleteFormTests"
      ]
    ]
  ],
  "RedeleteTests": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "RedeleteTests"
      ]
    ]
  ],
  "SimpleIndexesTests": [
    [
      "tests/model_indexes/tests.py",
      [
        "SimpleIndexesTests"
      ]
    ]
  ],
  "CommonInfo": [
    [
      "tests/model_inheritance/models.py",
      [
        "CommonInfo"
      ]
    ]
  ],
  "Attachment": [
    [
      "tests/model_inheritance/models.py",
      [
        "Attachment"
      ]
    ]
  ],
  "Chef": [
    [
      "tests/model_inheritance/models.py",
      [
        "Chef"
      ]
    ]
  ],
  "Rating": [
    [
      "tests/model_inheritance/models.py",
      [
        "Rating"
      ]
    ]
  ],
  "ItalianRestaurant": [
    [
      "tests/model_inheritance/models.py",
      [
        "ItalianRestaurant"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "ItalianRestaurant"
      ]
    ]
  ],
  "Supplier": [
    [
      "tests/model_inheritance/models.py",
      [
        "Supplier"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "Supplier"
      ]
    ]
  ],
  "ParkingLot": [
    [
      "tests/model_inheritance/models.py",
      [
        "ParkingLot"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "ParkingLot"
      ]
    ]
  ],
  "NamedURL": [
    [
      "tests/model_inheritance/models.py",
      [
        "NamedURL"
      ]
    ]
  ],
  "MixinModel": [
    [
      "tests/model_inheritance/models.py",
      [
        "MixinModel"
      ]
    ]
  ],
  "SubBase": [
    [
      "tests/model_inheritance/models.py",
      [
        "SubBase"
      ]
    ]
  ],
  "GrandParent": [
    [
      "tests/model_inheritance/models.py",
      [
        "GrandParent"
      ]
    ]
  ],
  "GrandChild": [
    [
      "tests/model_inheritance/models.py",
      [
        "GrandChild"
      ]
    ]
  ],
  "AbstractBaseOne": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_multiple_parents_mro",
        "AbstractBaseOne"
      ]
    ]
  ],
  "AbstractBaseTwo": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_multiple_parents_mro",
        "AbstractBaseTwo"
      ]
    ]
  ],
  "DescendantOne": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_multiple_parents_mro",
        "DescendantOne"
      ]
    ]
  ],
  "DescendantTwo": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_multiple_parents_mro",
        "DescendantTwo"
      ]
    ]
  ],
  "ConcreteParent": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_multiple_inheritance_cannot_shadow_concrete_inherited_field",
        "ConcreteParent"
      ]
    ]
  ],
  "AbstractParent": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_multiple_inheritance_cannot_shadow_concrete_inherited_field",
        "AbstractParent"
      ]
    ]
  ],
  "FirstChild": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_multiple_inheritance_cannot_shadow_concrete_inherited_field",
        "FirstChild"
      ]
    ]
  ],
  "AnotherChild": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_multiple_inheritance_cannot_shadow_concrete_inherited_field",
        "AnotherChild"
      ]
    ]
  ],
  "RelatedModelAbstract": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_virtual_field",
        "RelatedModelAbstract"
      ]
    ]
  ],
  "ModelAbstract": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_virtual_field",
        "ModelAbstract"
      ]
    ]
  ],
  "OverrideRelatedModelAbstract": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_virtual_field",
        "OverrideRelatedModelAbstract"
      ]
    ]
  ],
  "ExtendModelAbstract": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_virtual_field",
        "ExtendModelAbstract"
      ]
    ]
  ],
  "AbstractBase": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_reverse_foreign_key",
        "AbstractBase"
      ]
    ],
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_multi_inheritance_field_clashes",
        "AbstractBase"
      ]
    ]
  ],
  "Descendant": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_reverse_foreign_key",
        "Descendant"
      ]
    ]
  ],
  "ConcreteBase": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_multi_inheritance_field_clashes",
        "ConcreteBase"
      ]
    ]
  ],
  "AbstractDescendant": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_multi_inheritance_field_clashes",
        "AbstractDescendant"
      ]
    ]
  ],
  "ConcreteDescendant": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_multi_inheritance_field_clashes",
        "ConcreteDescendant"
      ]
    ]
  ],
  "Mixin2": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_abstract_model_with_regular_python_mixin_mro",
        "Mixin2"
      ]
    ]
  ],
  "DescendantMixin": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_abstract_model_with_regular_python_mixin_mro",
        "DescendantMixin"
      ]
    ]
  ],
  "ConcreteModel2": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_abstract_model_with_regular_python_mixin_mro",
        "ConcreteModel2"
      ]
    ]
  ],
  "AbstractInheritanceTests": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests"
      ]
    ]
  ],
  "ModelInheritanceTests": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceTests"
      ]
    ]
  ],
  "ModelInheritanceDataTests": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceDataTests"
      ]
    ]
  ],
  "Referenced": [
    [
      "tests/model_inheritance/tests.py",
      [
        "InheritanceSameModelNameTests",
        "test_abstract_fk_related_name",
        "Referenced"
      ]
    ]
  ],
  "Referent": [
    [
      "tests/model_inheritance/tests.py",
      [
        "InheritanceSameModelNameTests",
        "test_abstract_fk_related_name",
        "Referent"
      ]
    ]
  ],
  "Referent_3": [
    [
      "tests/model_inheritance/tests.py",
      [
        "InheritanceSameModelNameTests",
        "test_abstract_fk_related_name",
        "Referent_3"
      ]
    ]
  ],
  "InheritanceSameModelNameTests": [
    [
      "tests/model_inheritance/tests.py",
      [
        "InheritanceSameModelNameTests"
      ]
    ]
  ],
  "InheritanceUniqueTests": [
    [
      "tests/model_inheritance/tests.py",
      [
        "InheritanceUniqueTests"
      ]
    ]
  ],
  "ParkingLot3": [
    [
      "tests/model_inheritance_regress/models.py",
      [
        "ParkingLot3"
      ]
    ]
  ],
  "ParkingLot4": [
    [
      "tests/model_inheritance_regress/models.py",
      [
        "ParkingLot4"
      ]
    ]
  ],
  "ParkingLot4A": [
    [
      "tests/model_inheritance_regress/models.py",
      [
        "ParkingLot4A"
      ]
    ]
  ],
  "ParkingLot4B": [
    [
      "tests/model_inheritance_regress/models.py",
      [
        "ParkingLot4B"
      ]
    ]
  ],
  "Wholesaler": [
    [
      "tests/model_inheritance_regress/models.py",
      [
        "Wholesaler"
      ]
    ]
  ],
  "SelfRefParent": [
    [
      "tests/model_inheritance_regress/models.py",
      [
        "SelfRefParent"
      ]
    ]
  ],
  "SelfRefChild": [
    [
      "tests/model_inheritance_regress/models.py",
      [
        "SelfRefChild"
      ]
    ]
  ],
  "ArticleWithAuthor": [
    [
      "tests/model_inheritance_regress/models.py",
      [
        "ArticleWithAuthor"
      ]
    ]
  ],
  "M2MBase": [
    [
      "tests/model_inheritance_regress/models.py",
      [
        "M2MBase"
      ]
    ]
  ],
  "M2MChild": [
    [
      "tests/model_inheritance_regress/models.py",
      [
        "M2MChild"
      ]
    ]
  ],
  "Evaluation": [
    [
      "tests/model_inheritance_regress/models.py",
      [
        "Evaluation"
      ]
    ]
  ],
  "QualityControl": [
    [
      "tests/model_inheritance_regress/models.py",
      [
        "QualityControl"
      ]
    ]
  ],
  "BaseM": [
    [
      "tests/model_inheritance_regress/models.py",
      [
        "BaseM"
      ]
    ]
  ],
  "DerivedM": [
    [
      "tests/model_inheritance_regress/models.py",
      [
        "DerivedM"
      ]
    ]
  ],
  "AuditBase": [
    [
      "tests/model_inheritance_regress/models.py",
      [
        "AuditBase"
      ]
    ]
  ],
  "CertificationAudit": [
    [
      "tests/model_inheritance_regress/models.py",
      [
        "CertificationAudit"
      ]
    ]
  ],
  "InternalCertificationAudit": [
    [
      "tests/model_inheritance_regress/models.py",
      [
        "InternalCertificationAudit"
      ]
    ]
  ],
  "AbstractEvent": [
    [
      "tests/model_inheritance_regress/models.py",
      [
        "AbstractEvent"
      ]
    ]
  ],
  "BirthdayParty": [
    [
      "tests/model_inheritance_regress/models.py",
      [
        "BirthdayParty"
      ]
    ]
  ],
  "BachelorParty": [
    [
      "tests/model_inheritance_regress/models.py",
      [
        "BachelorParty"
      ]
    ]
  ],
  "MessyBachelorParty": [
    [
      "tests/model_inheritance_regress/models.py",
      [
        "MessyBachelorParty"
      ]
    ]
  ],
  "TrainStation": [
    [
      "tests/model_inheritance_regress/models.py",
      [
        "TrainStation"
      ]
    ]
  ],
  "Politician": [
    [
      "tests/model_inheritance_regress/models.py",
      [
        "Politician"
      ]
    ]
  ],
  "Congressman": [
    [
      "tests/model_inheritance_regress/models.py",
      [
        "Congressman"
      ]
    ]
  ],
  "Senator": [
    [
      "tests/model_inheritance_regress/models.py",
      [
        "Senator"
      ]
    ]
  ],
  "ModelInheritanceTest": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest"
      ]
    ]
  ],
  "InstanceOnlyDescriptor": [
    [
      "tests/model_meta/models.py",
      [
        "InstanceOnlyDescriptor"
      ]
    ]
  ],
  "BasePerson": [
    [
      "tests/model_meta/models.py",
      [
        "BasePerson"
      ]
    ]
  ],
  "ProxyPerson": [
    [
      "tests/model_meta/models.py",
      [
        "ProxyPerson"
      ]
    ]
  ],
  "PersonThroughProxySubclass": [
    [
      "tests/model_meta/models.py",
      [
        "PersonThroughProxySubclass"
      ]
    ]
  ],
  "Relating": [
    [
      "tests/model_meta/models.py",
      [
        "Relating"
      ]
    ]
  ],
  "CommonAncestor": [
    [
      "tests/model_meta/models.py",
      [
        "CommonAncestor"
      ]
    ]
  ],
  "FirstParent": [
    [
      "tests/model_meta/models.py",
      [
        "FirstParent"
      ]
    ]
  ],
  "SecondParent": [
    [
      "tests/model_meta/models.py",
      [
        "SecondParent"
      ]
    ]
  ],
  "OptionsBaseTests": [
    [
      "tests/model_meta/tests.py",
      [
        "OptionsBaseTests"
      ]
    ]
  ],
  "GetFieldsTests": [
    [
      "tests/model_meta/tests.py",
      [
        "GetFieldsTests"
      ]
    ]
  ],
  "LabelTests": [
    [
      "tests/model_meta/tests.py",
      [
        "LabelTests"
      ]
    ]
  ],
  "DataTests": [
    [
      "tests/model_meta/tests.py",
      [
        "DataTests"
      ]
    ]
  ],
  "M2MTests": [
    [
      "tests/model_meta/tests.py",
      [
        "M2MTests"
      ]
    ]
  ],
  "RelatedObjectsTests": [
    [
      "tests/model_meta/tests.py",
      [
        "RelatedObjectsTests"
      ]
    ]
  ],
  "PrivateFieldsTests": [
    [
      "tests/model_meta/tests.py",
      [
        "PrivateFieldsTests"
      ]
    ]
  ],
  "GetFieldByNameTests": [
    [
      "tests/model_meta/tests.py",
      [
        "GetFieldByNameTests"
      ]
    ]
  ],
  "RelationTreeTests": [
    [
      "tests/model_meta/tests.py",
      [
        "RelationTreeTests"
      ]
    ]
  ],
  "ParentListTests": [
    [
      "tests/model_meta/tests.py",
      [
        "ParentListTests"
      ]
    ]
  ],
  "PropertyNamesTests": [
    [
      "tests/model_meta/tests.py",
      [
        "PropertyNamesTests"
      ]
    ]
  ],
  "BookStore": [
    [
      "tests/model_options/models/default_related_name.py",
      [
        "BookStore"
      ]
    ]
  ],
  "EditorStore": [
    [
      "tests/model_options/models/default_related_name.py",
      [
        "EditorStore"
      ]
    ]
  ],
  "ScientistRef": [
    [
      "tests/model_options/models/tablespaces.py",
      [
        "ScientistRef"
      ]
    ]
  ],
  "ArticleRef": [
    [
      "tests/model_options/models/tablespaces.py",
      [
        "ArticleRef"
      ]
    ]
  ],
  "Scientist": [
    [
      "tests/model_options/models/tablespaces.py",
      [
        "Scientist"
      ]
    ]
  ],
  "DefaultRelatedNameTests": [
    [
      "tests/model_options/test_default_related_name.py",
      [
        "DefaultRelatedNameTests"
      ]
    ]
  ],
  "TablespacesTests": [
    [
      "tests/model_options/test_tablespaces.py",
      [
        "TablespacesTests"
      ]
    ]
  ],
  "Advertisement": [
    [
      "tests/model_package/tests.py",
      [
        "Advertisement"
      ]
    ]
  ],
  "ModelPackageTests": [
    [
      "tests/model_package/tests.py",
      [
        "ModelPackageTests"
      ]
    ]
  ],
  "Movie": [
    [
      "tests/model_regress/models.py",
      [
        "Movie"
      ]
    ],
    [
      "tests/nested_foreign_keys/models.py",
      [
        "Movie"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "Movie"
      ]
    ]
  ],
  "Party": [
    [
      "tests/model_regress/models.py",
      [
        "Party"
      ]
    ]
  ],
  "NonAutoPK": [
    [
      "tests/model_regress/models.py",
      [
        "NonAutoPK"
      ]
    ]
  ],
  "Model1": [
    [
      "tests/model_regress/models.py",
      [
        "Model1"
      ]
    ]
  ],
  "Model2": [
    [
      "tests/model_regress/models.py",
      [
        "Model2"
      ]
    ]
  ],
  "Model3": [
    [
      "tests/model_regress/models.py",
      [
        "Model3"
      ]
    ]
  ],
  "ModelPickleTests": [
    [
      "tests/model_regress/test_pickle.py",
      [
        "ModelPickleTests"
      ]
    ]
  ],
  "ModelTests": [
    [
      "tests/model_regress/tests.py",
      [
        "ModelTests"
      ]
    ]
  ],
  "ModelValidationTest": [
    [
      "tests/model_regress/tests.py",
      [
        "ModelValidationTest"
      ]
    ]
  ],
  "EvaluateMethodTest": [
    [
      "tests/model_regress/tests.py",
      [
        "EvaluateMethodTest"
      ]
    ]
  ],
  "ValidationTestModel": [
    [
      "tests/modeladmin/models.py",
      [
        "ValidationTestModel"
      ]
    ]
  ],
  "ValidationTestInlineModel": [
    [
      "tests/modeladmin/models.py",
      [
        "ValidationTestInlineModel"
      ]
    ]
  ],
  "AdminActionsTests": [
    [
      "tests/modeladmin/test_actions.py",
      [
        "AdminActionsTests"
      ]
    ]
  ],
  "CheckTestCase": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "CheckTestCase"
      ]
    ]
  ],
  "RawIdCheckTests": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "RawIdCheckTests"
      ]
    ]
  ],
  "FieldsetsCheckTests": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "FieldsetsCheckTests"
      ]
    ]
  ],
  "FieldsCheckTests": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "FieldsCheckTests"
      ]
    ]
  ],
  "FormCheckTests": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "FormCheckTests"
      ]
    ]
  ],
  "FilterVerticalCheckTests": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "FilterVerticalCheckTests"
      ]
    ]
  ],
  "FilterHorizontalCheckTests": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "FilterHorizontalCheckTests"
      ]
    ]
  ],
  "RadioFieldsCheckTests": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "RadioFieldsCheckTests"
      ]
    ]
  ],
  "PrepopulatedFieldsCheckTests": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "PrepopulatedFieldsCheckTests"
      ]
    ]
  ],
  "ListDisplayTests": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListDisplayTests"
      ]
    ]
  ],
  "ListDisplayLinksCheckTests": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListDisplayLinksCheckTests"
      ]
    ]
  ],
  "ListFilterTests": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListFilterTests"
      ]
    ]
  ],
  "ListPerPageCheckTests": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListPerPageCheckTests"
      ]
    ]
  ],
  "ListMaxShowAllCheckTests": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListMaxShowAllCheckTests"
      ]
    ]
  ],
  "SearchFieldsCheckTests": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "SearchFieldsCheckTests"
      ]
    ]
  ],
  "DateHierarchyCheckTests": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "DateHierarchyCheckTests"
      ]
    ]
  ],
  "OrderingCheckTests": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "OrderingCheckTests"
      ]
    ]
  ],
  "ListSelectRelatedCheckTests": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListSelectRelatedCheckTests"
      ]
    ]
  ],
  "SaveAsCheckTests": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "SaveAsCheckTests"
      ]
    ]
  ],
  "SaveOnTopCheckTests": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "SaveOnTopCheckTests"
      ]
    ]
  ],
  "InlinesCheckTests": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "InlinesCheckTests"
      ]
    ]
  ],
  "FkNameCheckTests": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "FkNameCheckTests"
      ]
    ]
  ],
  "ExtraCheckTests": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ExtraCheckTests"
      ]
    ]
  ],
  "MaxNumCheckTests": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "MaxNumCheckTests"
      ]
    ]
  ],
  "MinNumCheckTests": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "MinNumCheckTests"
      ]
    ]
  ],
  "FormsetCheckTests": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "FormsetCheckTests"
      ]
    ]
  ],
  "ListDisplayEditableTests": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListDisplayEditableTests"
      ]
    ]
  ],
  "AutocompleteFieldsTests": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "AutocompleteFieldsTests"
      ]
    ]
  ],
  "ActionsCheckTests": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ActionsCheckTests"
      ]
    ]
  ],
  "EmployeeProfile": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_lookup_allowed_onetoone",
        "EmployeeProfile"
      ]
    ]
  ],
  "EmployeeInfo": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_lookup_allowed_onetoone",
        "EmployeeInfo"
      ]
    ]
  ],
  "EmployeeProfileAdmin": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_lookup_allowed_onetoone",
        "EmployeeProfileAdmin"
      ]
    ]
  ],
  "BandAdmin_1": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_field_arguments_restricted_on_form",
        "BandAdmin_1"
      ]
    ]
  ],
  "BandAdmin_2": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_field_arguments_restricted_on_form",
        "BandAdmin_2"
      ]
    ]
  ],
  "BandAdmin_3": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_field_arguments_restricted_on_form",
        "BandAdmin_3"
      ]
    ]
  ],
  "BandAdmin_4": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_field_arguments_restricted_on_form",
        "BandAdmin_4"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_custom_form_meta_exclude_with_readonly",
        "BandAdmin_4"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_custom_form_meta_exclude",
        "BandAdmin_4"
      ]
    ]
  ],
  "AdminBandForm": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_custom_form_meta_exclude_with_readonly",
        "AdminBandForm"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_custom_formfield_override_readonly",
        "AdminBandForm"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_custom_form_meta_exclude",
        "AdminBandForm"
      ]
    ]
  ],
  "AdminConcertForm": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_custom_form_meta_exclude_with_readonly",
        "AdminConcertForm"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_custom_form_meta_exclude",
        "AdminConcertForm"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_formset_exclude_kwarg_override",
        "AdminConcertForm"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_queryset_override",
        "AdminConcertForm"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_foreign_key_as_radio_field",
        "AdminConcertForm"
      ]
    ]
  ],
  "ConcertInline": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_custom_form_meta_exclude_with_readonly",
        "ConcertInline"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_custom_form_meta_exclude",
        "ConcertInline"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_formset_exclude_kwarg_override",
        "ConcertInline"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_regression_for_ticket_15820",
        "ConcertInline"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_foreign_key_as_radio_field",
        "ConcertInline"
      ]
    ]
  ],
  "ConcertAdminWithForm": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_queryset_override",
        "ConcertAdminWithForm"
      ]
    ]
  ],
  "CustomConcertForm": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_regression_for_ticket_15820",
        "CustomConcertForm"
      ]
    ]
  ],
  "ConcertAdmin_2": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_foreign_key_as_radio_field",
        "ConcertAdmin_2"
      ]
    ]
  ],
  "AdminConcertForm_3": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_foreign_key_as_radio_field",
        "AdminConcertForm_3"
      ]
    ]
  ],
  "ConcertAdmin_4": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_foreign_key_as_radio_field",
        "ConcertAdmin_4"
      ]
    ]
  ],
  "ModelAdminTests": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests"
      ]
    ]
  ],
  "MockViewUser": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminPermissionTests",
        "MockViewUser"
      ]
    ]
  ],
  "MockAddUser": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminPermissionTests",
        "MockAddUser"
      ]
    ]
  ],
  "MockChangeUser": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminPermissionTests",
        "MockChangeUser"
      ]
    ]
  ],
  "MockDeleteUser": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminPermissionTests",
        "MockDeleteUser"
      ]
    ]
  ],
  "ModelAdminPermissionTests": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminPermissionTests"
      ]
    ]
  ],
  "Review": [
    [
      "tests/multiple_database/models.py",
      [
        "Review"
      ]
    ]
  ],
  "BookManager": [
    [
      "tests/multiple_database/models.py",
      [
        "BookManager"
      ]
    ]
  ],
  "Pet": [
    [
      "tests/multiple_database/models.py",
      [
        "Pet"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "Pet"
      ]
    ]
  ],
  "AuthRouter": [
    [
      "tests/multiple_database/routers.py",
      [
        "AuthRouter"
      ]
    ]
  ],
  "WriteRouter": [
    [
      "tests/multiple_database/routers.py",
      [
        "WriteRouter"
      ]
    ]
  ],
  "QueryTestCase": [
    [
      "tests/multiple_database/tests.py",
      [
        "QueryTestCase"
      ]
    ]
  ],
  "ConnectionRouterTestCase": [
    [
      "tests/multiple_database/tests.py",
      [
        "ConnectionRouterTestCase"
      ]
    ]
  ],
  "RouterTestCase": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouterTestCase"
      ]
    ]
  ],
  "AuthTestCase": [
    [
      "tests/multiple_database/tests.py",
      [
        "AuthTestCase"
      ]
    ]
  ],
  "AntiPetRouter": [
    [
      "tests/multiple_database/tests.py",
      [
        "AntiPetRouter"
      ]
    ]
  ],
  "PickleQuerySetTestCase": [
    [
      "tests/multiple_database/tests.py",
      [
        "PickleQuerySetTestCase"
      ]
    ]
  ],
  "DatabaseReceiver": [
    [
      "tests/multiple_database/tests.py",
      [
        "DatabaseReceiver"
      ]
    ]
  ],
  "WriteToOtherRouter": [
    [
      "tests/multiple_database/tests.py",
      [
        "WriteToOtherRouter"
      ]
    ]
  ],
  "SignalTests": [
    [
      "tests/multiple_database/tests.py",
      [
        "SignalTests"
      ]
    ],
    [
      "tests/signals/tests.py",
      [
        "SignalTests"
      ]
    ]
  ],
  "AttributeErrorRouter": [
    [
      "tests/multiple_database/tests.py",
      [
        "AttributeErrorRouter"
      ]
    ]
  ],
  "RouterAttributeErrorTestCase": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouterAttributeErrorTestCase"
      ]
    ]
  ],
  "ModelMetaRouter": [
    [
      "tests/multiple_database/tests.py",
      [
        "ModelMetaRouter"
      ]
    ]
  ],
  "RouterModelArgumentTestCase": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouterModelArgumentTestCase"
      ]
    ]
  ],
  "SyncOnlyDefaultDatabaseRouter": [
    [
      "tests/multiple_database/tests.py",
      [
        "SyncOnlyDefaultDatabaseRouter"
      ]
    ]
  ],
  "MigrateTestCase": [
    [
      "tests/multiple_database/tests.py",
      [
        "MigrateTestCase"
      ]
    ]
  ],
  "RouterUsed": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouterUsed"
      ]
    ]
  ],
  "WriteCheckRouter": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouteForWriteTestCase",
        "WriteCheckRouter"
      ]
    ]
  ],
  "RouteForWriteTestCase": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouteForWriteTestCase"
      ]
    ]
  ],
  "NoRelationRouter": [
    [
      "tests/multiple_database/tests.py",
      [
        "NoRelationRouter"
      ]
    ]
  ],
  "RelationAssignmentTests": [
    [
      "tests/multiple_database/tests.py",
      [
        "RelationAssignmentTests"
      ]
    ]
  ],
  "MutuallyReferentialTests": [
    [
      "tests/mutually_referential/tests.py",
      [
        "MutuallyReferentialTests"
      ]
    ]
  ],
  "Screening": [
    [
      "tests/nested_foreign_keys/models.py",
      [
        "Screening"
      ]
    ]
  ],
  "ScreeningNullFK": [
    [
      "tests/nested_foreign_keys/models.py",
      [
        "ScreeningNullFK"
      ]
    ]
  ],
  "Package": [
    [
      "tests/nested_foreign_keys/models.py",
      [
        "Package"
      ]
    ]
  ],
  "PackageNullFK": [
    [
      "tests/nested_foreign_keys/models.py",
      [
        "PackageNullFK"
      ]
    ]
  ],
  "NestedForeignKeysTests": [
    [
      "tests/nested_foreign_keys/tests.py",
      [
        "NestedForeignKeysTests"
      ]
    ]
  ],
  "DeeplyNestedForeignKeysTests": [
    [
      "tests/nested_foreign_keys/tests.py",
      [
        "DeeplyNestedForeignKeysTests"
      ]
    ]
  ],
  "NoModelTests": [
    [
      "tests/no_models/tests.py",
      [
        "NoModelTests"
      ]
    ]
  ],
  "SystemDetails": [
    [
      "tests/null_fk/models.py",
      [
        "SystemDetails"
      ]
    ]
  ],
  "SystemInfo": [
    [
      "tests/null_fk/models.py",
      [
        "SystemInfo"
      ]
    ],
    [
      "tests/null_fk_ordering/models.py",
      [
        "SystemInfo"
      ]
    ]
  ],
  "Forum": [
    [
      "tests/null_fk/models.py",
      [
        "Forum"
      ]
    ],
    [
      "tests/null_fk_ordering/models.py",
      [
        "Forum"
      ]
    ]
  ],
  "PropertyValue": [
    [
      "tests/null_fk/models.py",
      [
        "PropertyValue"
      ]
    ]
  ],
  "Property": [
    [
      "tests/null_fk/models.py",
      [
        "Property"
      ]
    ]
  ],
  "NullFkTests": [
    [
      "tests/null_fk/tests.py",
      [
        "NullFkTests"
      ]
    ]
  ],
  "NullFkOrderingTests": [
    [
      "tests/null_fk_ordering/tests.py",
      [
        "NullFkOrderingTests"
      ]
    ]
  ],
  "OuterA": [
    [
      "tests/null_queries/models.py",
      [
        "OuterA"
      ]
    ]
  ],
  "OuterB": [
    [
      "tests/null_queries/models.py",
      [
        "OuterB"
      ]
    ]
  ],
  "NullQueriesTests": [
    [
      "tests/null_queries/tests.py",
      [
        "NullQueriesTests"
      ]
    ]
  ],
  "UndergroundBar": [
    [
      "tests/one_to_one/models.py",
      [
        "UndergroundBar"
      ]
    ]
  ],
  "Waiter": [
    [
      "tests/one_to_one/models.py",
      [
        "Waiter"
      ]
    ]
  ],
  "Favorites": [
    [
      "tests/one_to_one/models.py",
      [
        "Favorites"
      ]
    ]
  ],
  "ManualPrimaryKey": [
    [
      "tests/one_to_one/models.py",
      [
        "ManualPrimaryKey"
      ]
    ]
  ],
  "MultiModel": [
    [
      "tests/one_to_one/models.py",
      [
        "MultiModel"
      ]
    ]
  ],
  "Pointer": [
    [
      "tests/one_to_one/models.py",
      [
        "Pointer"
      ]
    ]
  ],
  "Pointer2": [
    [
      "tests/one_to_one/models.py",
      [
        "Pointer2"
      ]
    ]
  ],
  "HiddenPointer": [
    [
      "tests/one_to_one/models.py",
      [
        "HiddenPointer"
      ]
    ]
  ],
  "ToFieldPointer": [
    [
      "tests/one_to_one/models.py",
      [
        "ToFieldPointer"
      ]
    ]
  ],
  "DirectorManager": [
    [
      "tests/one_to_one/models.py",
      [
        "DirectorManager"
      ]
    ]
  ],
  "Director": [
    [
      "tests/one_to_one/models.py",
      [
        "Director"
      ]
    ]
  ],
  "OneToOneTests": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests"
      ]
    ]
  ],
  "OrLookupsTests": [
    [
      "tests/or_lookups/tests.py",
      [
        "OrLookupsTests"
      ]
    ]
  ],
  "BaseOrderWithRespectToTests": [
    [
      "tests/order_with_respect_to/base_tests.py",
      [
        "BaseOrderWithRespectToTests"
      ]
    ]
  ],
  "Entity": [
    [
      "tests/order_with_respect_to/models.py",
      [
        "Entity"
      ]
    ]
  ],
  "Dimension": [
    [
      "tests/order_with_respect_to/models.py",
      [
        "Dimension"
      ]
    ]
  ],
  "Component": [
    [
      "tests/order_with_respect_to/models.py",
      [
        "Component"
      ]
    ]
  ],
  "OrderWithRespectToBaseTests": [
    [
      "tests/order_with_respect_to/tests.py",
      [
        "OrderWithRespectToBaseTests"
      ]
    ]
  ],
  "OrderWithRespectToTests": [
    [
      "tests/order_with_respect_to/tests.py",
      [
        "OrderWithRespectToTests"
      ]
    ]
  ],
  "TestOrderWithRespectToOneToOnePK": [
    [
      "tests/order_with_respect_to/tests.py",
      [
        "TestOrderWithRespectToOneToOnePK"
      ]
    ]
  ],
  "OrderedByAuthorArticle": [
    [
      "tests/ordering/models.py",
      [
        "OrderedByAuthorArticle"
      ]
    ]
  ],
  "OrderedByFArticle": [
    [
      "tests/ordering/models.py",
      [
        "OrderedByFArticle"
      ]
    ]
  ],
  "OrderingTests": [
    [
      "tests/ordering/tests.py",
      [
        "OrderingTests"
      ]
    ]
  ],
  "ValidAdjacentNumsPage": [
    [
      "tests/pagination/custom.py",
      [
        "ValidAdjacentNumsPage"
      ]
    ]
  ],
  "ValidAdjacentNumsPaginator": [
    [
      "tests/pagination/custom.py",
      [
        "ValidAdjacentNumsPaginator"
      ]
    ]
  ],
  "PaginationTests": [
    [
      "tests/pagination/tests.py",
      [
        "PaginationTests"
      ]
    ]
  ],
  "ModelPaginationTests": [
    [
      "tests/pagination/tests.py",
      [
        "ModelPaginationTests"
      ]
    ]
  ],
  "PostgreSQLSimpleTestCase": [
    [
      "tests/postgres_tests/__init__.py",
      [
        "PostgreSQLSimpleTestCase"
      ]
    ]
  ],
  "PostgreSQLTestCase": [
    [
      "tests/postgres_tests/__init__.py",
      [
        "PostgreSQLTestCase"
      ]
    ]
  ],
  "PostgreSQLWidgetTestCase": [
    [
      "tests/postgres_tests/__init__.py",
      [
        "PostgreSQLWidgetTestCase"
      ]
    ]
  ],
  "DummyArrayField": [
    [
      "tests/postgres_tests/fields.py",
      [
        "try_",
        "except_ImportError_",
        "DummyArrayField"
      ]
    ]
  ],
  "DummyJSONField": [
    [
      "tests/postgres_tests/fields.py",
      [
        "try_",
        "except_ImportError_",
        "DummyJSONField"
      ]
    ]
  ],
  "TagField": [
    [
      "tests/postgres_tests/models.py",
      [
        "TagField"
      ]
    ]
  ],
  "PostgreSQLModel": [
    [
      "tests/postgres_tests/models.py",
      [
        "PostgreSQLModel"
      ]
    ]
  ],
  "IntegerArrayModel": [
    [
      "tests/postgres_tests/models.py",
      [
        "IntegerArrayModel"
      ]
    ]
  ],
  "NullableIntegerArrayModel": [
    [
      "tests/postgres_tests/models.py",
      [
        "NullableIntegerArrayModel"
      ]
    ]
  ],
  "CharArrayModel": [
    [
      "tests/postgres_tests/models.py",
      [
        "CharArrayModel"
      ]
    ]
  ],
  "DateTimeArrayModel": [
    [
      "tests/postgres_tests/models.py",
      [
        "DateTimeArrayModel"
      ]
    ]
  ],
  "NestedIntegerArrayModel": [
    [
      "tests/postgres_tests/models.py",
      [
        "NestedIntegerArrayModel"
      ]
    ]
  ],
  "OtherTypesArrayModel": [
    [
      "tests/postgres_tests/models.py",
      [
        "OtherTypesArrayModel"
      ]
    ]
  ],
  "HStoreModel": [
    [
      "tests/postgres_tests/models.py",
      [
        "HStoreModel"
      ]
    ]
  ],
  "CharFieldModel": [
    [
      "tests/postgres_tests/models.py",
      [
        "CharFieldModel"
      ]
    ]
  ],
  "TextFieldModel": [
    [
      "tests/postgres_tests/models.py",
      [
        "TextFieldModel"
      ]
    ]
  ],
  "Scene": [
    [
      "tests/postgres_tests/models.py",
      [
        "Scene"
      ]
    ]
  ],
  "CITestModel": [
    [
      "tests/postgres_tests/models.py",
      [
        "CITestModel"
      ]
    ]
  ],
  "RangesModel": [
    [
      "tests/postgres_tests/models.py",
      [
        "RangesModel"
      ]
    ]
  ],
  "RangeLookupsModel": [
    [
      "tests/postgres_tests/models.py",
      [
        "RangeLookupsModel"
      ]
    ]
  ],
  "JSONModel": [
    [
      "tests/postgres_tests/models.py",
      [
        "JSONModel"
      ]
    ]
  ],
  "ArrayFieldSubclass": [
    [
      "tests/postgres_tests/models.py",
      [
        "ArrayFieldSubclass"
      ]
    ]
  ],
  "AggregateTestModel": [
    [
      "tests/postgres_tests/models.py",
      [
        "AggregateTestModel"
      ]
    ]
  ],
  "StatTestModel": [
    [
      "tests/postgres_tests/models.py",
      [
        "StatTestModel"
      ]
    ]
  ],
  "NowTestModel": [
    [
      "tests/postgres_tests/models.py",
      [
        "NowTestModel"
      ]
    ]
  ],
  "UUIDTestModel": [
    [
      "tests/postgres_tests/models.py",
      [
        "UUIDTestModel"
      ]
    ]
  ],
  "TestGeneralAggregate": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate"
      ]
    ]
  ],
  "TestAggregateDistinct": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestAggregateDistinct"
      ]
    ]
  ],
  "TestStatisticsAggregate": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate"
      ]
    ]
  ],
  "PostgresConfigTests": [
    [
      "tests/postgres_tests/test_apps.py",
      [
        "PostgresConfigTests"
      ]
    ]
  ],
  "TestDateTimeExactQuerying": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestDateTimeExactQuerying"
      ]
    ]
  ],
  "TestOtherTypesExactQuerying": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestOtherTypesExactQuerying"
      ]
    ]
  ],
  "TestChecks": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestChecks"
      ]
    ],
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestChecks"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestChecks"
      ]
    ]
  ],
  "TestMigrations": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestMigrations"
      ]
    ]
  ],
  "TestSimpleFormField": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSimpleFormField"
      ]
    ]
  ],
  "TestSplitFormField": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSplitFormField"
      ]
    ]
  ],
  "TestSplitFormWidget": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSplitFormWidget"
      ]
    ]
  ],
  "BulkSaveTests": [
    [
      "tests/postgres_tests/test_bulk_update.py",
      [
        "BulkSaveTests"
      ]
    ]
  ],
  "CITextTestCase": [
    [
      "tests/postgres_tests/test_citext.py",
      [
        "CITextTestCase"
      ]
    ]
  ],
  "TestTransactionNow": [
    [
      "tests/postgres_tests/test_functions.py",
      [
        "TestTransactionNow"
      ]
    ]
  ],
  "TestRandomUUID": [
    [
      "tests/postgres_tests/test_functions.py",
      [
        "TestRandomUUID"
      ]
    ]
  ],
  "SimpleTests": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "SimpleTests"
      ]
    ],
    [
      "tests/str/tests.py",
      [
        "SimpleTests"
      ]
    ],
    [
      "tests/unmanaged_models/tests.py",
      [
        "SimpleTests"
      ]
    ]
  ],
  "TestValidator": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestValidator"
      ]
    ]
  ],
  "IndexTestMixin": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "IndexTestMixin"
      ]
    ]
  ],
  "BrinIndexTests": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "BrinIndexTests"
      ]
    ]
  ],
  "BTreeIndexTests": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "BTreeIndexTests"
      ]
    ]
  ],
  "GinIndexTests": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "GinIndexTests"
      ]
    ]
  ],
  "GistIndexTests": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "GistIndexTests"
      ]
    ]
  ],
  "HashIndexTests": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "HashIndexTests"
      ]
    ]
  ],
  "SpGistIndexTests": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "SpGistIndexTests"
      ]
    ]
  ],
  "PostgresIntegrationTests": [
    [
      "tests/postgres_tests/test_integration.py",
      [
        "PostgresIntegrationTests"
      ]
    ]
  ],
  "InspectDBTests": [
    [
      "tests/postgres_tests/test_introspection.py",
      [
        "InspectDBTests"
      ]
    ]
  ],
  "TestRangeContainsLookup": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestRangeContainsLookup"
      ]
    ]
  ],
  "TestQueryingWithRanges": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQueryingWithRanges"
      ]
    ]
  ],
  "TestValidators": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestValidators"
      ]
    ],
    [
      "tests/validators/tests.py",
      [
        "TestValidators"
      ]
    ]
  ],
  "SplitDateTimeRangeField": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_using_split_datetime_widget",
        "SplitDateTimeRangeField"
      ]
    ]
  ],
  "SplitForm": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_using_split_datetime_widget",
        "SplitForm"
      ]
    ]
  ],
  "TestWidget": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestWidget"
      ]
    ]
  ],
  "GrailTestData": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "GrailTestData"
      ]
    ]
  ],
  "SimpleSearchTest": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "SimpleSearchTest"
      ]
    ]
  ],
  "SearchVectorFieldTest": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "SearchVectorFieldTest"
      ]
    ]
  ],
  "MultipleFieldsTest": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "MultipleFieldsTest"
      ]
    ]
  ],
  "TestCombinations": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "TestCombinations"
      ]
    ]
  ],
  "TestRankingAndWeights": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "TestRankingAndWeights"
      ]
    ]
  ],
  "SearchQueryTests": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "SearchQueryTests"
      ]
    ]
  ],
  "OIDTests": [
    [
      "tests/postgres_tests/test_signals.py",
      [
        "OIDTests"
      ]
    ]
  ],
  "TrigramTest": [
    [
      "tests/postgres_tests/test_trigram.py",
      [
        "TrigramTest"
      ]
    ]
  ],
  "TrigramTextFieldTest": [
    [
      "tests/postgres_tests/test_trigram.py",
      [
        "TrigramTextFieldTest"
      ]
    ]
  ],
  "UnaccentTest": [
    [
      "tests/postgres_tests/test_unaccent.py",
      [
        "UnaccentTest"
      ]
    ]
  ],
  "UnaccentTextFieldTest": [
    [
      "tests/postgres_tests/test_unaccent.py",
      [
        "UnaccentTextFieldTest"
      ]
    ]
  ],
  "AuthorWithAge": [
    [
      "tests/prefetch_related/models.py",
      [
        "AuthorWithAge"
      ]
    ]
  ],
  "FavoriteAuthors": [
    [
      "tests/prefetch_related/models.py",
      [
        "FavoriteAuthors"
      ]
    ]
  ],
  "AuthorAddress": [
    [
      "tests/prefetch_related/models.py",
      [
        "AuthorAddress"
      ]
    ]
  ],
  "BookWithYear": [
    [
      "tests/prefetch_related/models.py",
      [
        "BookWithYear"
      ]
    ]
  ],
  "Bio": [
    [
      "tests/prefetch_related/models.py",
      [
        "Bio"
      ]
    ]
  ],
  "Reader": [
    [
      "tests/prefetch_related/models.py",
      [
        "Reader"
      ]
    ]
  ],
  "BookReview": [
    [
      "tests/prefetch_related/models.py",
      [
        "BookReview"
      ]
    ]
  ],
  "Qualification": [
    [
      "tests/prefetch_related/models.py",
      [
        "Qualification"
      ]
    ]
  ],
  "ModelIterableSubclass": [
    [
      "tests/prefetch_related/models.py",
      [
        "ModelIterableSubclass"
      ]
    ]
  ],
  "TeacherQuerySet": [
    [
      "tests/prefetch_related/models.py",
      [
        "TeacherQuerySet"
      ]
    ]
  ],
  "TeacherManager": [
    [
      "tests/prefetch_related/models.py",
      [
        "TeacherManager"
      ]
    ]
  ],
  "Room": [
    [
      "tests/prefetch_related/models.py",
      [
        "Room"
      ]
    ]
  ],
  "LessonEntry": [
    [
      "tests/prefetch_related/models.py",
      [
        "LessonEntry"
      ]
    ]
  ],
  "WordEntry": [
    [
      "tests/prefetch_related/models.py",
      [
        "WordEntry"
      ]
    ]
  ],
  "Flea": [
    [
      "tests/prefetch_related/models.py",
      [
        "Flea"
      ]
    ]
  ],
  "PrefetchRelatedObjectsTests": [
    [
      "tests/prefetch_related/test_prefetch_related_objects.py",
      [
        "PrefetchRelatedObjectsTests"
      ]
    ]
  ],
  "UUIDPrefetchRelated": [
    [
      "tests/prefetch_related/test_uuid.py",
      [
        "UUIDPrefetchRelated"
      ]
    ]
  ],
  "UUIDPrefetchRelatedLookups": [
    [
      "tests/prefetch_related/test_uuid.py",
      [
        "UUIDPrefetchRelatedLookups"
      ]
    ]
  ],
  "PrefetchRelatedTests": [
    [
      "tests/prefetch_related/tests.py",
      [
        "PrefetchRelatedTests"
      ]
    ]
  ],
  "RawQuerySetTests": [
    [
      "tests/prefetch_related/tests.py",
      [
        "RawQuerySetTests"
      ]
    ]
  ],
  "CustomPrefetchTests": [
    [
      "tests/prefetch_related/tests.py",
      [
        "CustomPrefetchTests"
      ]
    ]
  ],
  "DefaultManagerTests": [
    [
      "tests/prefetch_related/tests.py",
      [
        "DefaultManagerTests"
      ]
    ]
  ],
  "MultiTableInheritanceTest": [
    [
      "tests/prefetch_related/tests.py",
      [
        "MultiTableInheritanceTest"
      ]
    ]
  ],
  "ForeignKeyToFieldTest": [
    [
      "tests/prefetch_related/tests.py",
      [
        "ForeignKeyToFieldTest"
      ]
    ]
  ],
  "LookupOrderingTest": [
    [
      "tests/prefetch_related/tests.py",
      [
        "LookupOrderingTest"
      ]
    ]
  ],
  "NullableTest": [
    [
      "tests/prefetch_related/tests.py",
      [
        "NullableTest"
      ]
    ]
  ],
  "MultiDbTests": [
    [
      "tests/prefetch_related/tests.py",
      [
        "MultiDbTests"
      ]
    ]
  ],
  "Ticket19607Tests": [
    [
      "tests/prefetch_related/tests.py",
      [
        "Ticket19607Tests"
      ]
    ]
  ],
  "Ticket21410Tests": [
    [
      "tests/prefetch_related/tests.py",
      [
        "Ticket21410Tests"
      ]
    ]
  ],
  "Ticket21760Tests": [
    [
      "tests/prefetch_related/tests.py",
      [
        "Ticket21760Tests"
      ]
    ]
  ],
  "DirectPrefechedObjectCacheReuseTests": [
    [
      "tests/prefetch_related/tests.py",
      [
        "DirectPrefechedObjectCacheReuseTests"
      ]
    ]
  ],
  "ReadPrefetchedObjectsCacheTests": [
    [
      "tests/prefetch_related/tests.py",
      [
        "ReadPrefetchedObjectsCacheTests"
      ]
    ]
  ],
  "TestStartProjectSettings": [
    [
      "tests/project_template/test_settings.py",
      [
        "TestStartProjectSettings"
      ]
    ]
  ],
  "PropertyTests": [
    [
      "tests/properties/tests.py",
      [
        "PropertyTests"
      ]
    ]
  ],
  "NiceModel": [
    [
      "tests/proxy_model_inheritance/app2/models.py",
      [
        "NiceModel"
      ]
    ]
  ],
  "ConcreteModelSubclass": [
    [
      "tests/proxy_model_inheritance/models.py",
      [
        "ConcreteModelSubclass"
      ]
    ]
  ],
  "ConcreteModelSubclassProxy": [
    [
      "tests/proxy_model_inheritance/models.py",
      [
        "ConcreteModelSubclassProxy"
      ]
    ]
  ],
  "ProxyModelInheritanceTests": [
    [
      "tests/proxy_model_inheritance/tests.py",
      [
        "ProxyModelInheritanceTests"
      ]
    ]
  ],
  "MultiTableInheritanceProxyTest": [
    [
      "tests/proxy_model_inheritance/tests.py",
      [
        "MultiTableInheritanceProxyTest"
      ]
    ]
  ],
  "SubManager": [
    [
      "tests/proxy_models/models.py",
      [
        "SubManager"
      ]
    ]
  ],
  "MyPerson": [
    [
      "tests/proxy_models/models.py",
      [
        "MyPerson"
      ]
    ]
  ],
  "ManagerMixin": [
    [
      "tests/proxy_models/models.py",
      [
        "ManagerMixin"
      ]
    ]
  ],
  "OtherPerson": [
    [
      "tests/proxy_models/models.py",
      [
        "OtherPerson"
      ]
    ]
  ],
  "StatusPerson": [
    [
      "tests/proxy_models/models.py",
      [
        "StatusPerson"
      ]
    ]
  ],
  "MyPersonProxy": [
    [
      "tests/proxy_models/models.py",
      [
        "MyPersonProxy"
      ]
    ]
  ],
  "LowerStatusPerson": [
    [
      "tests/proxy_models/models.py",
      [
        "LowerStatusPerson"
      ]
    ]
  ],
  "AnotherUserProxy": [
    [
      "tests/proxy_models/models.py",
      [
        "AnotherUserProxy"
      ]
    ]
  ],
  "UserProxyProxy": [
    [
      "tests/proxy_models/models.py",
      [
        "UserProxyProxy"
      ]
    ]
  ],
  "MultiUserProxy": [
    [
      "tests/proxy_models/models.py",
      [
        "MultiUserProxy"
      ]
    ]
  ],
  "StateProxy": [
    [
      "tests/proxy_models/models.py",
      [
        "StateProxy"
      ]
    ]
  ],
  "BaseUser": [
    [
      "tests/proxy_models/models.py",
      [
        "BaseUser"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "BaseUser"
      ]
    ]
  ],
  "TrackerUser": [
    [
      "tests/proxy_models/models.py",
      [
        "TrackerUser"
      ]
    ]
  ],
  "ProxyTrackerUser": [
    [
      "tests/proxy_models/models.py",
      [
        "ProxyTrackerUser"
      ]
    ]
  ],
  "Bug": [
    [
      "tests/proxy_models/models.py",
      [
        "Bug"
      ]
    ]
  ],
  "ProxyBug": [
    [
      "tests/proxy_models/models.py",
      [
        "ProxyBug"
      ]
    ]
  ],
  "ProxyProxyBug": [
    [
      "tests/proxy_models/models.py",
      [
        "ProxyProxyBug"
      ]
    ]
  ],
  "Improvement": [
    [
      "tests/proxy_models/models.py",
      [
        "Improvement"
      ]
    ]
  ],
  "ProxyImprovement": [
    [
      "tests/proxy_models/models.py",
      [
        "ProxyImprovement"
      ]
    ]
  ],
  "ProxyModelTests": [
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelTests"
      ]
    ]
  ],
  "ProxyModelAdminTests": [
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelAdminTests"
      ]
    ]
  ],
  "DumbCategory": [
    [
      "tests/queries/models.py",
      [
        "DumbCategory"
      ]
    ]
  ],
  "ProxyCategory": [
    [
      "tests/queries/models.py",
      [
        "ProxyCategory"
      ]
    ]
  ],
  "NamedCategory": [
    [
      "tests/queries/models.py",
      [
        "NamedCategory"
      ]
    ]
  ],
  "Annotation": [
    [
      "tests/queries/models.py",
      [
        "Annotation"
      ]
    ]
  ],
  "ExtraInfo": [
    [
      "tests/queries/models.py",
      [
        "ExtraInfo"
      ]
    ]
  ],
  "ReportComment": [
    [
      "tests/queries/models.py",
      [
        "ReportComment"
      ]
    ]
  ],
  "Ranking": [
    [
      "tests/queries/models.py",
      [
        "Ranking"
      ]
    ]
  ],
  "Cover": [
    [
      "tests/queries/models.py",
      [
        "Cover"
      ]
    ]
  ],
  "Valid": [
    [
      "tests/queries/models.py",
      [
        "Valid"
      ]
    ]
  ],
  "X": [
    [
      "tests/queries/models.py",
      [
        "X"
      ]
    ]
  ],
  "Y": [
    [
      "tests/queries/models.py",
      [
        "Y"
      ]
    ]
  ],
  "LoopX": [
    [
      "tests/queries/models.py",
      [
        "LoopX"
      ]
    ]
  ],
  "LoopY": [
    [
      "tests/queries/models.py",
      [
        "LoopY"
      ]
    ]
  ],
  "LoopZ": [
    [
      "tests/queries/models.py",
      [
        "LoopZ"
      ]
    ]
  ],
  "ManagedModel": [
    [
      "tests/queries/models.py",
      [
        "ManagedModel"
      ]
    ]
  ],
  "Detail": [
    [
      "tests/queries/models.py",
      [
        "Detail"
      ]
    ]
  ],
  "MemberManager": [
    [
      "tests/queries/models.py",
      [
        "MemberManager"
      ]
    ]
  ],
  "CustomPk": [
    [
      "tests/queries/models.py",
      [
        "CustomPk"
      ]
    ]
  ],
  "CustomPkTag": [
    [
      "tests/queries/models.py",
      [
        "CustomPkTag"
      ]
    ]
  ],
  "TvChef": [
    [
      "tests/queries/models.py",
      [
        "TvChef"
      ]
    ]
  ],
  "LeafA": [
    [
      "tests/queries/models.py",
      [
        "LeafA"
      ]
    ]
  ],
  "LeafB": [
    [
      "tests/queries/models.py",
      [
        "LeafB"
      ]
    ]
  ],
  "ReservedName": [
    [
      "tests/queries/models.py",
      [
        "ReservedName"
      ]
    ]
  ],
  "SharedConnection": [
    [
      "tests/queries/models.py",
      [
        "SharedConnection"
      ]
    ]
  ],
  "PointerA": [
    [
      "tests/queries/models.py",
      [
        "PointerA"
      ]
    ]
  ],
  "PointerB": [
    [
      "tests/queries/models.py",
      [
        "PointerB"
      ]
    ]
  ],
  "SingleObject": [
    [
      "tests/queries/models.py",
      [
        "SingleObject"
      ]
    ]
  ],
  "RelatedObject": [
    [
      "tests/queries/models.py",
      [
        "RelatedObject"
      ]
    ]
  ],
  "Plaything": [
    [
      "tests/queries/models.py",
      [
        "Plaything"
      ]
    ]
  ],
  "ObjectA": [
    [
      "tests/queries/models.py",
      [
        "ObjectA"
      ]
    ]
  ],
  "ProxyObjectA": [
    [
      "tests/queries/models.py",
      [
        "ProxyObjectA"
      ]
    ]
  ],
  "ChildObjectA": [
    [
      "tests/queries/models.py",
      [
        "ChildObjectA"
      ]
    ]
  ],
  "ObjectB": [
    [
      "tests/queries/models.py",
      [
        "ObjectB"
      ]
    ]
  ],
  "ProxyObjectB": [
    [
      "tests/queries/models.py",
      [
        "ProxyObjectB"
      ]
    ]
  ],
  "ObjectC": [
    [
      "tests/queries/models.py",
      [
        "ObjectC"
      ]
    ]
  ],
  "SimpleCategory": [
    [
      "tests/queries/models.py",
      [
        "SimpleCategory"
      ]
    ]
  ],
  "SpecialCategory": [
    [
      "tests/queries/models.py",
      [
        "SpecialCategory"
      ]
    ]
  ],
  "CategoryItem": [
    [
      "tests/queries/models.py",
      [
        "CategoryItem"
      ]
    ]
  ],
  "MixedCaseFieldCategoryItem": [
    [
      "tests/queries/models.py",
      [
        "MixedCaseFieldCategoryItem"
      ]
    ]
  ],
  "MixedCaseDbColumnCategoryItem": [
    [
      "tests/queries/models.py",
      [
        "MixedCaseDbColumnCategoryItem"
      ]
    ]
  ],
  "OneToOneCategory": [
    [
      "tests/queries/models.py",
      [
        "OneToOneCategory"
      ]
    ]
  ],
  "CategoryRelationship": [
    [
      "tests/queries/models.py",
      [
        "CategoryRelationship"
      ]
    ]
  ],
  "CommonMixedCaseForeignKeys": [
    [
      "tests/queries/models.py",
      [
        "CommonMixedCaseForeignKeys"
      ]
    ]
  ],
  "NullableName": [
    [
      "tests/queries/models.py",
      [
        "NullableName"
      ]
    ]
  ],
  "ModelD": [
    [
      "tests/queries/models.py",
      [
        "ModelD"
      ]
    ]
  ],
  "ModelC": [
    [
      "tests/queries/models.py",
      [
        "ModelC"
      ]
    ]
  ],
  "ModelB": [
    [
      "tests/queries/models.py",
      [
        "ModelB"
      ]
    ]
  ],
  "ModelA": [
    [
      "tests/queries/models.py",
      [
        "ModelA"
      ]
    ]
  ],
  "Job": [
    [
      "tests/queries/models.py",
      [
        "Job"
      ]
    ]
  ],
  "JobResponsibilities": [
    [
      "tests/queries/models.py",
      [
        "JobResponsibilities"
      ]
    ]
  ],
  "Responsibility": [
    [
      "tests/queries/models.py",
      [
        "Responsibility"
      ]
    ]
  ],
  "FK1": [
    [
      "tests/queries/models.py",
      [
        "FK1"
      ]
    ]
  ],
  "FK2": [
    [
      "tests/queries/models.py",
      [
        "FK2"
      ]
    ]
  ],
  "FK3": [
    [
      "tests/queries/models.py",
      [
        "FK3"
      ]
    ]
  ],
  "BaseA": [
    [
      "tests/queries/models.py",
      [
        "BaseA"
      ]
    ]
  ],
  "Identifier": [
    [
      "tests/queries/models.py",
      [
        "Identifier"
      ]
    ]
  ],
  "Program": [
    [
      "tests/queries/models.py",
      [
        "Program"
      ]
    ]
  ],
  "Paragraph": [
    [
      "tests/queries/models.py",
      [
        "Paragraph"
      ]
    ]
  ],
  "MyObject": [
    [
      "tests/queries/models.py",
      [
        "MyObject"
      ]
    ]
  ],
  "OrderItem": [
    [
      "tests/queries/models.py",
      [
        "OrderItem"
      ]
    ]
  ],
  "Task": [
    [
      "tests/queries/models.py",
      [
        "Task"
      ]
    ]
  ],
  "StaffUser": [
    [
      "tests/queries/models.py",
      [
        "StaffUser"
      ]
    ]
  ],
  "Ticket21203Parent": [
    [
      "tests/queries/models.py",
      [
        "Ticket21203Parent"
      ]
    ]
  ],
  "Ticket21203Child": [
    [
      "tests/queries/models.py",
      [
        "Ticket21203Child"
      ]
    ]
  ],
  "Employment": [
    [
      "tests/queries/models.py",
      [
        "Employment"
      ]
    ]
  ],
  "Ticket23605AParent": [
    [
      "tests/queries/models.py",
      [
        "Ticket23605AParent"
      ]
    ]
  ],
  "Ticket23605A": [
    [
      "tests/queries/models.py",
      [
        "Ticket23605A"
      ]
    ]
  ],
  "Ticket23605B": [
    [
      "tests/queries/models.py",
      [
        "Ticket23605B"
      ]
    ]
  ],
  "Ticket23605C": [
    [
      "tests/queries/models.py",
      [
        "Ticket23605C"
      ]
    ]
  ],
  "RelatedIndividual": [
    [
      "tests/queries/models.py",
      [
        "RelatedIndividual"
      ]
    ]
  ],
  "CustomDbColumn": [
    [
      "tests/queries/models.py",
      [
        "CustomDbColumn"
      ]
    ]
  ],
  "BulkUpdateNoteTests": [
    [
      "tests/queries/test_bulk_update.py",
      [
        "BulkUpdateNoteTests"
      ]
    ]
  ],
  "BulkUpdateTests": [
    [
      "tests/queries/test_bulk_update.py",
      [
        "BulkUpdateTests"
      ]
    ]
  ],
  "ExplainTests": [
    [
      "tests/queries/test_explain.py",
      [
        "ExplainTests"
      ]
    ]
  ],
  "ExplainUnsupportedTests": [
    [
      "tests/queries/test_explain.py",
      [
        "ExplainUnsupportedTests"
      ]
    ]
  ],
  "QuerySetIteratorTests": [
    [
      "tests/queries/test_iterator.py",
      [
        "QuerySetIteratorTests"
      ]
    ]
  ],
  "QTests": [
    [
      "tests/queries/test_q.py",
      [
        "QTests"
      ]
    ]
  ],
  "QuerySetSetOperationTests": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests"
      ]
    ]
  ],
  "TestQuery": [
    [
      "tests/queries/test_query.py",
      [
        "TestQuery"
      ]
    ]
  ],
  "Queries1Tests": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests"
      ]
    ]
  ],
  "Queries2Tests": [
    [
      "tests/queries/tests.py",
      [
        "Queries2Tests"
      ]
    ]
  ],
  "Queries3Tests": [
    [
      "tests/queries/tests.py",
      [
        "Queries3Tests"
      ]
    ]
  ],
  "Queries4Tests": [
    [
      "tests/queries/tests.py",
      [
        "Queries4Tests"
      ]
    ]
  ],
  "Queries5Tests": [
    [
      "tests/queries/tests.py",
      [
        "Queries5Tests"
      ]
    ]
  ],
  "SelectRelatedTests": [
    [
      "tests/queries/tests.py",
      [
        "SelectRelatedTests"
      ]
    ],
    [
      "tests/select_related/tests.py",
      [
        "SelectRelatedTests"
      ]
    ]
  ],
  "SubclassFKTests": [
    [
      "tests/queries/tests.py",
      [
        "SubclassFKTests"
      ]
    ]
  ],
  "CustomPkTests": [
    [
      "tests/queries/tests.py",
      [
        "CustomPkTests"
      ]
    ]
  ],
  "NullableRelOrderingTests": [
    [
      "tests/queries/tests.py",
      [
        "NullableRelOrderingTests"
      ]
    ]
  ],
  "DisjunctiveFilterTests": [
    [
      "tests/queries/tests.py",
      [
        "DisjunctiveFilterTests"
      ]
    ]
  ],
  "Queries6Tests": [
    [
      "tests/queries/tests.py",
      [
        "Queries6Tests"
      ]
    ]
  ],
  "RawQueriesTests": [
    [
      "tests/queries/tests.py",
      [
        "RawQueriesTests"
      ]
    ]
  ],
  "GeneratorExpressionTests": [
    [
      "tests/queries/tests.py",
      [
        "GeneratorExpressionTests"
      ]
    ]
  ],
  "ComparisonTests": [
    [
      "tests/queries/tests.py",
      [
        "ComparisonTests"
      ]
    ]
  ],
  "ExistsSql": [
    [
      "tests/queries/tests.py",
      [
        "ExistsSql"
      ]
    ]
  ],
  "QuerysetOrderedTests": [
    [
      "tests/queries/tests.py",
      [
        "QuerysetOrderedTests"
      ]
    ]
  ],
  "SubqueryTests": [
    [
      "tests/queries/tests.py",
      [
        "SubqueryTests"
      ]
    ]
  ],
  "QuerySetBitwiseOperationTests": [
    [
      "tests/queries/tests.py",
      [
        "QuerySetBitwiseOperationTests"
      ]
    ]
  ],
  "CloneTests": [
    [
      "tests/queries/tests.py",
      [
        "CloneTests"
      ]
    ]
  ],
  "EmptyQuerySetTests": [
    [
      "tests/queries/tests.py",
      [
        "EmptyQuerySetTests"
      ]
    ]
  ],
  "ValuesQuerysetTests": [
    [
      "tests/queries/tests.py",
      [
        "ValuesQuerysetTests"
      ]
    ]
  ],
  "QuerySetSupportsPythonIdioms": [
    [
      "tests/queries/tests.py",
      [
        "QuerySetSupportsPythonIdioms"
      ]
    ]
  ],
  "WeirdQuerysetSlicingTests": [
    [
      "tests/queries/tests.py",
      [
        "WeirdQuerysetSlicingTests"
      ]
    ]
  ],
  "EscapingTests": [
    [
      "tests/queries/tests.py",
      [
        "EscapingTests"
      ]
    ]
  ],
  "ToFieldTests": [
    [
      "tests/queries/tests.py",
      [
        "ToFieldTests"
      ]
    ]
  ],
  "IsNullTests": [
    [
      "tests/queries/tests.py",
      [
        "IsNullTests"
      ]
    ]
  ],
  "ConditionalTests": [
    [
      "tests/queries/tests.py",
      [
        "ConditionalTests"
      ]
    ]
  ],
  "UnionTests": [
    [
      "tests/queries/tests.py",
      [
        "UnionTests"
      ]
    ]
  ],
  "DefaultValuesInsertTest": [
    [
      "tests/queries/tests.py",
      [
        "DefaultValuesInsertTest"
      ]
    ]
  ],
  "ExcludeTests": [
    [
      "tests/queries/tests.py",
      [
        "ExcludeTests"
      ]
    ]
  ],
  "ExcludeTest17600": [
    [
      "tests/queries/tests.py",
      [
        "ExcludeTest17600"
      ]
    ]
  ],
  "Exclude15786": [
    [
      "tests/queries/tests.py",
      [
        "Exclude15786"
      ]
    ]
  ],
  "NullInExcludeTest": [
    [
      "tests/queries/tests.py",
      [
        "NullInExcludeTest"
      ]
    ]
  ],
  "EmptyStringsAsNullTest": [
    [
      "tests/queries/tests.py",
      [
        "EmptyStringsAsNullTest"
      ]
    ]
  ],
  "ProxyQueryCleanupTest": [
    [
      "tests/queries/tests.py",
      [
        "ProxyQueryCleanupTest"
      ]
    ]
  ],
  "MockCompiler": [
    [
      "tests/queries/tests.py",
      [
        "WhereNodeTest",
        "MockCompiler"
      ]
    ]
  ],
  "WhereNodeTest": [
    [
      "tests/queries/tests.py",
      [
        "WhereNodeTest"
      ]
    ]
  ],
  "QuerySetExceptionTests": [
    [
      "tests/queries/tests.py",
      [
        "QuerySetExceptionTests"
      ]
    ]
  ],
  "NullJoinPromotionOrTest": [
    [
      "tests/queries/tests.py",
      [
        "NullJoinPromotionOrTest"
      ]
    ]
  ],
  "ReverseJoinTrimmingTest": [
    [
      "tests/queries/tests.py",
      [
        "ReverseJoinTrimmingTest"
      ]
    ]
  ],
  "JoinReuseTest": [
    [
      "tests/queries/tests.py",
      [
        "JoinReuseTest"
      ]
    ]
  ],
  "DisjunctionPromotionTests": [
    [
      "tests/queries/tests.py",
      [
        "DisjunctionPromotionTests"
      ]
    ]
  ],
  "ManyToManyExcludeTest": [
    [
      "tests/queries/tests.py",
      [
        "ManyToManyExcludeTest"
      ]
    ]
  ],
  "RelabelCloneTest": [
    [
      "tests/queries/tests.py",
      [
        "RelabelCloneTest"
      ]
    ]
  ],
  "Ticket20101Tests": [
    [
      "tests/queries/tests.py",
      [
        "Ticket20101Tests"
      ]
    ]
  ],
  "EmptyStringPromotionTests": [
    [
      "tests/queries/tests.py",
      [
        "EmptyStringPromotionTests"
      ]
    ]
  ],
  "ValuesSubqueryTests": [
    [
      "tests/queries/tests.py",
      [
        "ValuesSubqueryTests"
      ]
    ]
  ],
  "DoubleInSubqueryTests": [
    [
      "tests/queries/tests.py",
      [
        "DoubleInSubqueryTests"
      ]
    ]
  ],
  "Ticket18785Tests": [
    [
      "tests/queries/tests.py",
      [
        "Ticket18785Tests"
      ]
    ]
  ],
  "Ticket20788Tests": [
    [
      "tests/queries/tests.py",
      [
        "Ticket20788Tests"
      ]
    ]
  ],
  "Ticket12807Tests": [
    [
      "tests/queries/tests.py",
      [
        "Ticket12807Tests"
      ]
    ]
  ],
  "RelatedLookupTypeTests": [
    [
      "tests/queries/tests.py",
      [
        "RelatedLookupTypeTests"
      ]
    ]
  ],
  "Ticket14056Tests": [
    [
      "tests/queries/tests.py",
      [
        "Ticket14056Tests"
      ]
    ]
  ],
  "Ticket20955Tests": [
    [
      "tests/queries/tests.py",
      [
        "Ticket20955Tests"
      ]
    ]
  ],
  "Ticket21203Tests": [
    [
      "tests/queries/tests.py",
      [
        "Ticket21203Tests"
      ]
    ]
  ],
  "ValuesJoinPromotionTests": [
    [
      "tests/queries/tests.py",
      [
        "ValuesJoinPromotionTests"
      ]
    ]
  ],
  "ForeignKeyToBaseExcludeTests": [
    [
      "tests/queries/tests.py",
      [
        "ForeignKeyToBaseExcludeTests"
      ]
    ]
  ],
  "ReverseM2MCustomPkTests": [
    [
      "tests/queries/tests.py",
      [
        "ReverseM2MCustomPkTests"
      ]
    ]
  ],
  "Ticket22429Tests": [
    [
      "tests/queries/tests.py",
      [
        "Ticket22429Tests"
      ]
    ]
  ],
  "Ticket23605Tests": [
    [
      "tests/queries/tests.py",
      [
        "Ticket23605Tests"
      ]
    ]
  ],
  "TestTicket24279": [
    [
      "tests/queries/tests.py",
      [
        "TestTicket24279"
      ]
    ]
  ],
  "TestInvalidValuesRelation": [
    [
      "tests/queries/tests.py",
      [
        "TestInvalidValuesRelation"
      ]
    ]
  ],
  "TestTicket24605": [
    [
      "tests/queries/tests.py",
      [
        "TestTicket24605"
      ]
    ]
  ],
  "Ticket23622Tests": [
    [
      "tests/queries/tests.py",
      [
        "Ticket23622Tests"
      ]
    ]
  ],
  "Numbers": [
    [
      "tests/queryset_pickle/models.py",
      [
        "Numbers"
      ]
    ]
  ],
  "PreviousDjangoVersionQuerySet": [
    [
      "tests/queryset_pickle/models.py",
      [
        "PreviousDjangoVersionQuerySet"
      ]
    ]
  ],
  "MissingDjangoVersionQuerySet": [
    [
      "tests/queryset_pickle/models.py",
      [
        "MissingDjangoVersionQuerySet"
      ]
    ]
  ],
  "Happening": [
    [
      "tests/queryset_pickle/models.py",
      [
        "Happening"
      ]
    ]
  ],
  "SomeModel": [
    [
      "tests/queryset_pickle/models.py",
      [
        "Container",
        "SomeModel"
      ]
    ]
  ],
  "Container": [
    [
      "tests/queryset_pickle/models.py",
      [
        "Container"
      ]
    ]
  ],
  "M2MModel": [
    [
      "tests/queryset_pickle/models.py",
      [
        "M2MModel"
      ]
    ]
  ],
  "PickleabilityTestCase": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase"
      ]
    ]
  ],
  "InLookupTests": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "InLookupTests"
      ]
    ]
  ],
  "BookFkAsPk": [
    [
      "tests/raw_query/models.py",
      [
        "BookFkAsPk"
      ]
    ]
  ],
  "Coffee": [
    [
      "tests/raw_query/models.py",
      [
        "Coffee"
      ]
    ]
  ],
  "MixedCaseIDColumn": [
    [
      "tests/raw_query/models.py",
      [
        "MixedCaseIDColumn"
      ]
    ]
  ],
  "Reviewer": [
    [
      "tests/raw_query/models.py",
      [
        "Reviewer"
      ]
    ]
  ],
  "FriendlyAuthor": [
    [
      "tests/raw_query/models.py",
      [
        "FriendlyAuthor"
      ]
    ]
  ],
  "RawQueryTests": [
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests"
      ]
    ]
  ],
  "RedirectTests": [
    [
      "tests/redirects_tests/tests.py",
      [
        "RedirectTests"
      ]
    ]
  ],
  "OverriddenRedirectFallbackMiddleware": [
    [
      "tests/redirects_tests/tests.py",
      [
        "OverriddenRedirectFallbackMiddleware"
      ]
    ]
  ],
  "OverriddenRedirectMiddlewareTests": [
    [
      "tests/redirects_tests/tests.py",
      [
        "OverriddenRedirectMiddlewareTests"
      ]
    ]
  ],
  "DataUploadMaxMemorySizeFormPostTests": [
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxMemorySizeFormPostTests"
      ]
    ]
  ],
  "DataUploadMaxMemorySizeMultipartPostTests": [
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxMemorySizeMultipartPostTests"
      ]
    ]
  ],
  "DataUploadMaxMemorySizeGetTests": [
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxMemorySizeGetTests"
      ]
    ]
  ],
  "DataUploadMaxNumberOfFieldsGet": [
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxNumberOfFieldsGet"
      ]
    ]
  ],
  "DataUploadMaxNumberOfFieldsMultipartPost": [
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxNumberOfFieldsMultipartPost"
      ]
    ]
  ],
  "DataUploadMaxNumberOfFieldsFormPost": [
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxNumberOfFieldsFormPost"
      ]
    ]
  ],
  "RequestsTests": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests"
      ]
    ]
  ],
  "HostValidationTests": [
    [
      "tests/requests/tests.py",
      [
        "HostValidationTests"
      ]
    ]
  ],
  "BuildAbsoluteURITests": [
    [
      "tests/requests/tests.py",
      [
        "BuildAbsoluteURITests"
      ]
    ]
  ],
  "RequestHeadersTests": [
    [
      "tests/requests/tests.py",
      [
        "RequestHeadersTests"
      ]
    ]
  ],
  "HttpHeadersTests": [
    [
      "tests/requests/tests.py",
      [
        "HttpHeadersTests"
      ]
    ]
  ],
  "ReservedNameTests": [
    [
      "tests/reserved_names/tests.py",
      [
        "ReservedNameTests"
      ]
    ]
  ],
  "UnimportantThing": [
    [
      "tests/resolve_url/models.py",
      [
        "UnimportantThing"
      ]
    ]
  ],
  "ResolveUrlTests": [
    [
      "tests/resolve_url/tests.py",
      [
        "ResolveUrlTests"
      ]
    ]
  ],
  "SetCookieTests": [
    [
      "tests/responses/test_cookie.py",
      [
        "SetCookieTests"
      ]
    ]
  ],
  "DeleteCookieTests": [
    [
      "tests/responses/test_cookie.py",
      [
        "DeleteCookieTests"
      ]
    ]
  ],
  "FileResponseTests": [
    [
      "tests/responses/test_fileresponse.py",
      [
        "FileResponseTests"
      ]
    ]
  ],
  "HttpResponseBaseTests": [
    [
      "tests/responses/tests.py",
      [
        "HttpResponseBaseTests"
      ]
    ]
  ],
  "ReverseLookupTests": [
    [
      "tests/reverse_lookup/tests.py",
      [
        "ReverseLookupTests"
      ]
    ]
  ],
  "ActionSelenium": [
    [
      "tests/runtests.py",
      [
        "ActionSelenium"
      ]
    ]
  ],
  "SaveDeleteHookTests": [
    [
      "tests/save_delete_hooks/tests.py",
      [
        "SaveDeleteHookTests"
      ]
    ]
  ],
  "CustomManyToManyField": [
    [
      "tests/schema/fields.py",
      [
        "CustomManyToManyField"
      ]
    ]
  ],
  "InheritedManyToManyField": [
    [
      "tests/schema/fields.py",
      [
        "InheritedManyToManyField"
      ]
    ]
  ],
  "MediumBlobField": [
    [
      "tests/schema/fields.py",
      [
        "MediumBlobField"
      ]
    ]
  ],
  "AuthorCharFieldWithIndex": [
    [
      "tests/schema/models.py",
      [
        "AuthorCharFieldWithIndex"
      ]
    ]
  ],
  "AuthorTextFieldWithIndex": [
    [
      "tests/schema/models.py",
      [
        "AuthorTextFieldWithIndex"
      ]
    ]
  ],
  "AuthorWithDefaultHeight": [
    [
      "tests/schema/models.py",
      [
        "AuthorWithDefaultHeight"
      ]
    ]
  ],
  "AuthorWithEvenLongerName": [
    [
      "tests/schema/models.py",
      [
        "AuthorWithEvenLongerName"
      ]
    ]
  ],
  "AuthorWithIndexedName": [
    [
      "tests/schema/models.py",
      [
        "AuthorWithIndexedName"
      ]
    ]
  ],
  "BookWeak": [
    [
      "tests/schema/models.py",
      [
        "BookWeak"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_no_db_constraint_added_during_primary_key_change",
        "BookWeak"
      ]
    ]
  ],
  "BookWithLongName": [
    [
      "tests/schema/models.py",
      [
        "BookWithLongName"
      ]
    ]
  ],
  "BookWithO2O": [
    [
      "tests/schema/models.py",
      [
        "BookWithO2O"
      ]
    ]
  ],
  "BookWithSlug": [
    [
      "tests/schema/models.py",
      [
        "BookWithSlug"
      ]
    ]
  ],
  "BookWithoutAuthor": [
    [
      "tests/schema/models.py",
      [
        "BookWithoutAuthor"
      ]
    ]
  ],
  "BookForeignObj": [
    [
      "tests/schema/models.py",
      [
        "BookForeignObj"
      ]
    ]
  ],
  "IntegerPK": [
    [
      "tests/schema/models.py",
      [
        "IntegerPK"
      ]
    ]
  ],
  "NoteRename": [
    [
      "tests/schema/models.py",
      [
        "NoteRename"
      ]
    ]
  ],
  "TagIndexed": [
    [
      "tests/schema/models.py",
      [
        "TagIndexed"
      ]
    ]
  ],
  "TagM2MTest": [
    [
      "tests/schema/models.py",
      [
        "TagM2MTest"
      ]
    ]
  ],
  "TagUniqueRename": [
    [
      "tests/schema/models.py",
      [
        "TagUniqueRename"
      ]
    ]
  ],
  "SchemaLoggerTests": [
    [
      "tests/schema/test_logging.py",
      [
        "SchemaLoggerTests"
      ]
    ]
  ],
  "TestTransformField": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_add_field_default_transform",
        "TestTransformField"
      ]
    ]
  ],
  "LocalBook": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_to_fk",
        "LocalBook"
      ]
    ]
  ],
  "Transitional": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_int_pk_to_int_unique",
        "Transitional"
      ]
    ]
  ],
  "IntegerUnique": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_int_pk_to_int_unique",
        "IntegerUnique"
      ]
    ]
  ],
  "LocalTagThrough": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "_test_m2m_create_through",
        "LocalTagThrough"
      ]
    ]
  ],
  "LocalBookWithM2MThrough": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "_test_m2m_create_through",
        "LocalBookWithM2MThrough"
      ]
    ]
  ],
  "LocalAuthorWithM2M": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "_test_m2m",
        "LocalAuthorWithM2M"
      ]
    ]
  ],
  "LocalAuthorTag": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "_test_m2m_through_alter",
        "LocalAuthorTag"
      ]
    ]
  ],
  "LocalAuthorWithM2MThrough": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "_test_m2m_through_alter",
        "LocalAuthorWithM2MThrough"
      ]
    ]
  ],
  "LocalBookWithM2M": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "_test_m2m_repoint",
        "LocalBookWithM2M"
      ]
    ]
  ],
  "LocalTagM2MTest": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_m2m_rename_field_in_target_model",
        "LocalTagM2MTest"
      ]
    ]
  ],
  "LocalM2M": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_m2m_rename_field_in_target_model",
        "LocalM2M"
      ]
    ]
  ],
  "PersonProfile": [
    [
      "tests/select_for_update/models.py",
      [
        "PersonProfile"
      ]
    ]
  ],
  "SelectForUpdateTests": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests"
      ]
    ]
  ],
  "Domain": [
    [
      "tests/select_related/models.py",
      [
        "Domain"
      ]
    ]
  ],
  "Kingdom": [
    [
      "tests/select_related/models.py",
      [
        "Kingdom"
      ]
    ]
  ],
  "Phylum": [
    [
      "tests/select_related/models.py",
      [
        "Phylum"
      ]
    ]
  ],
  "Klass": [
    [
      "tests/select_related/models.py",
      [
        "Klass"
      ]
    ],
    [
      "tests/view_tests/views.py",
      [
        "Klass"
      ]
    ]
  ],
  "Genus": [
    [
      "tests/select_related/models.py",
      [
        "Genus"
      ]
    ]
  ],
  "Species": [
    [
      "tests/select_related/models.py",
      [
        "Species"
      ]
    ]
  ],
  "HybridSpecies": [
    [
      "tests/select_related/models.py",
      [
        "HybridSpecies"
      ]
    ]
  ],
  "SelectRelatedValidationTests": [
    [
      "tests/select_related/tests.py",
      [
        "SelectRelatedValidationTests"
      ]
    ]
  ],
  "UserStatResult": [
    [
      "tests/select_related_onetoone/models.py",
      [
        "UserStatResult"
      ]
    ]
  ],
  "UserStat": [
    [
      "tests/select_related_onetoone/models.py",
      [
        "UserStat"
      ]
    ]
  ],
  "StatDetails": [
    [
      "tests/select_related_onetoone/models.py",
      [
        "StatDetails"
      ]
    ]
  ],
  "AdvancedUserStat": [
    [
      "tests/select_related_onetoone/models.py",
      [
        "AdvancedUserStat"
      ]
    ]
  ],
  "Parent1": [
    [
      "tests/select_related_onetoone/models.py",
      [
        "Parent1"
      ]
    ]
  ],
  "Parent2": [
    [
      "tests/select_related_onetoone/models.py",
      [
        "Parent2"
      ]
    ]
  ],
  "LinkedList": [
    [
      "tests/select_related_onetoone/models.py",
      [
        "LinkedList"
      ]
    ]
  ],
  "ReverseSelectRelatedTestCase": [
    [
      "tests/select_related_onetoone/tests.py",
      [
        "ReverseSelectRelatedTestCase"
      ]
    ]
  ],
  "ReverseSelectRelatedValidationTests": [
    [
      "tests/select_related_onetoone/tests.py",
      [
        "ReverseSelectRelatedValidationTests"
      ]
    ]
  ],
  "Building": [
    [
      "tests/select_related_regress/models.py",
      [
        "Building"
      ]
    ]
  ],
  "Device": [
    [
      "tests/select_related_regress/models.py",
      [
        "Device"
      ]
    ]
  ],
  "Port": [
    [
      "tests/select_related_regress/models.py",
      [
        "Port"
      ]
    ]
  ],
  "Connection": [
    [
      "tests/select_related_regress/models.py",
      [
        "Connection"
      ]
    ]
  ],
  "TUser": [
    [
      "tests/select_related_regress/models.py",
      [
        "TUser"
      ]
    ]
  ],
  "Organizer": [
    [
      "tests/select_related_regress/models.py",
      [
        "Organizer"
      ]
    ]
  ],
  "Class": [
    [
      "tests/select_related_regress/models.py",
      [
        "Class"
      ]
    ],
    [
      "tests/utils_tests/test_functional.py",
      [
        "FunctionalTests",
        "test_cached_property_auto_name",
        "Class"
      ]
    ]
  ],
  "Enrollment": [
    [
      "tests/select_related_regress/models.py",
      [
        "Enrollment"
      ]
    ]
  ],
  "ClientStatus": [
    [
      "tests/select_related_regress/models.py",
      [
        "ClientStatus"
      ]
    ]
  ],
  "SpecialClient": [
    [
      "tests/select_related_regress/models.py",
      [
        "SpecialClient"
      ]
    ]
  ],
  "Fowl": [
    [
      "tests/select_related_regress/models.py",
      [
        "Fowl"
      ]
    ]
  ],
  "Hen": [
    [
      "tests/select_related_regress/models.py",
      [
        "Hen"
      ]
    ]
  ],
  "Chick": [
    [
      "tests/select_related_regress/models.py",
      [
        "Chick"
      ]
    ]
  ],
  "SelectRelatedRegressTests": [
    [
      "tests/select_related_regress/tests.py",
      [
        "SelectRelatedRegressTests"
      ]
    ]
  ],
  "CategoryMetaDataManager": [
    [
      "tests/serializers/models/base.py",
      [
        "CategoryMetaDataManager"
      ]
    ]
  ],
  "CategoryMetaData": [
    [
      "tests/serializers/models/base.py",
      [
        "CategoryMetaData"
      ]
    ]
  ],
  "AuthorProfile": [
    [
      "tests/serializers/models/base.py",
      [
        "AuthorProfile"
      ]
    ]
  ],
  "Score": [
    [
      "tests/serializers/models/base.py",
      [
        "Score"
      ]
    ]
  ],
  "TeamField": [
    [
      "tests/serializers/models/base.py",
      [
        "TeamField"
      ]
    ]
  ],
  "BaseModel": [
    [
      "tests/serializers/models/base.py",
      [
        "BaseModel"
      ]
    ]
  ],
  "ProxyBaseModel": [
    [
      "tests/serializers/models/base.py",
      [
        "ProxyBaseModel"
      ]
    ]
  ],
  "ProxyProxyBaseModel": [
    [
      "tests/serializers/models/base.py",
      [
        "ProxyProxyBaseModel"
      ]
    ]
  ],
  "ComplexModel": [
    [
      "tests/serializers/models/base.py",
      [
        "ComplexModel"
      ]
    ]
  ],
  "BinaryData": [
    [
      "tests/serializers/models/data.py",
      [
        "BinaryData"
      ]
    ]
  ],
  "BooleanData": [
    [
      "tests/serializers/models/data.py",
      [
        "BooleanData"
      ]
    ]
  ],
  "CharData": [
    [
      "tests/serializers/models/data.py",
      [
        "CharData"
      ]
    ]
  ],
  "DateData": [
    [
      "tests/serializers/models/data.py",
      [
        "DateData"
      ]
    ]
  ],
  "DateTimeData": [
    [
      "tests/serializers/models/data.py",
      [
        "DateTimeData"
      ]
    ]
  ],
  "DecimalData": [
    [
      "tests/serializers/models/data.py",
      [
        "DecimalData"
      ]
    ]
  ],
  "EmailData": [
    [
      "tests/serializers/models/data.py",
      [
        "EmailData"
      ]
    ]
  ],
  "FileData": [
    [
      "tests/serializers/models/data.py",
      [
        "FileData"
      ]
    ]
  ],
  "FilePathData": [
    [
      "tests/serializers/models/data.py",
      [
        "FilePathData"
      ]
    ]
  ],
  "FloatData": [
    [
      "tests/serializers/models/data.py",
      [
        "FloatData"
      ]
    ]
  ],
  "IntegerData": [
    [
      "tests/serializers/models/data.py",
      [
        "IntegerData"
      ]
    ]
  ],
  "BigIntegerData": [
    [
      "tests/serializers/models/data.py",
      [
        "BigIntegerData"
      ]
    ]
  ],
  "GenericIPAddressData": [
    [
      "tests/serializers/models/data.py",
      [
        "GenericIPAddressData"
      ]
    ]
  ],
  "NullBooleanData": [
    [
      "tests/serializers/models/data.py",
      [
        "NullBooleanData"
      ]
    ]
  ],
  "PositiveIntegerData": [
    [
      "tests/serializers/models/data.py",
      [
        "PositiveIntegerData"
      ]
    ]
  ],
  "PositiveSmallIntegerData": [
    [
      "tests/serializers/models/data.py",
      [
        "PositiveSmallIntegerData"
      ]
    ]
  ],
  "SlugData": [
    [
      "tests/serializers/models/data.py",
      [
        "SlugData"
      ]
    ]
  ],
  "SmallData": [
    [
      "tests/serializers/models/data.py",
      [
        "SmallData"
      ]
    ]
  ],
  "TextData": [
    [
      "tests/serializers/models/data.py",
      [
        "TextData"
      ]
    ]
  ],
  "TimeData": [
    [
      "tests/serializers/models/data.py",
      [
        "TimeData"
      ]
    ]
  ],
  "GenericData": [
    [
      "tests/serializers/models/data.py",
      [
        "GenericData"
      ]
    ]
  ],
  "Anchor": [
    [
      "tests/serializers/models/data.py",
      [
        "Anchor"
      ]
    ]
  ],
  "UniqueAnchor": [
    [
      "tests/serializers/models/data.py",
      [
        "UniqueAnchor"
      ]
    ]
  ],
  "FKData": [
    [
      "tests/serializers/models/data.py",
      [
        "FKData"
      ]
    ]
  ],
  "M2MData": [
    [
      "tests/serializers/models/data.py",
      [
        "M2MData"
      ]
    ]
  ],
  "O2OData": [
    [
      "tests/serializers/models/data.py",
      [
        "O2OData"
      ]
    ]
  ],
  "FKSelfData": [
    [
      "tests/serializers/models/data.py",
      [
        "FKSelfData"
      ]
    ]
  ],
  "M2MSelfData": [
    [
      "tests/serializers/models/data.py",
      [
        "M2MSelfData"
      ]
    ]
  ],
  "FKDataToField": [
    [
      "tests/serializers/models/data.py",
      [
        "FKDataToField"
      ]
    ]
  ],
  "FKDataToO2O": [
    [
      "tests/serializers/models/data.py",
      [
        "FKDataToO2O"
      ]
    ]
  ],
  "M2MIntermediateData": [
    [
      "tests/serializers/models/data.py",
      [
        "M2MIntermediateData"
      ]
    ]
  ],
  "BooleanPKData": [
    [
      "tests/serializers/models/data.py",
      [
        "BooleanPKData"
      ]
    ]
  ],
  "CharPKData": [
    [
      "tests/serializers/models/data.py",
      [
        "CharPKData"
      ]
    ]
  ],
  "DatePKData": [
    [
      "tests/serializers/models/data.py",
      [
        "DatePKData"
      ]
    ]
  ],
  "DateTimePKData": [
    [
      "tests/serializers/models/data.py",
      [
        "DateTimePKData"
      ]
    ]
  ],
  "DecimalPKData": [
    [
      "tests/serializers/models/data.py",
      [
        "DecimalPKData"
      ]
    ]
  ],
  "EmailPKData": [
    [
      "tests/serializers/models/data.py",
      [
        "EmailPKData"
      ]
    ]
  ],
  "FilePathPKData": [
    [
      "tests/serializers/models/data.py",
      [
        "FilePathPKData"
      ]
    ]
  ],
  "FloatPKData": [
    [
      "tests/serializers/models/data.py",
      [
        "FloatPKData"
      ]
    ]
  ],
  "IntegerPKData": [
    [
      "tests/serializers/models/data.py",
      [
        "IntegerPKData"
      ]
    ]
  ],
  "GenericIPAddressPKData": [
    [
      "tests/serializers/models/data.py",
      [
        "GenericIPAddressPKData"
      ]
    ]
  ],
  "PositiveIntegerPKData": [
    [
      "tests/serializers/models/data.py",
      [
        "PositiveIntegerPKData"
      ]
    ]
  ],
  "PositiveSmallIntegerPKData": [
    [
      "tests/serializers/models/data.py",
      [
        "PositiveSmallIntegerPKData"
      ]
    ]
  ],
  "SlugPKData": [
    [
      "tests/serializers/models/data.py",
      [
        "SlugPKData"
      ]
    ]
  ],
  "SmallPKData": [
    [
      "tests/serializers/models/data.py",
      [
        "SmallPKData"
      ]
    ]
  ],
  "UUIDData": [
    [
      "tests/serializers/models/data.py",
      [
        "UUIDData"
      ]
    ]
  ],
  "FKToUUID": [
    [
      "tests/serializers/models/data.py",
      [
        "FKToUUID"
      ]
    ]
  ],
  "AutoNowDateTimeData": [
    [
      "tests/serializers/models/data.py",
      [
        "AutoNowDateTimeData"
      ]
    ]
  ],
  "ModifyingSaveData": [
    [
      "tests/serializers/models/data.py",
      [
        "ModifyingSaveData"
      ]
    ]
  ],
  "AbstractBaseModel": [
    [
      "tests/serializers/models/data.py",
      [
        "AbstractBaseModel"
      ]
    ]
  ],
  "InheritAbstractModel": [
    [
      "tests/serializers/models/data.py",
      [
        "InheritAbstractModel"
      ]
    ]
  ],
  "InheritBaseModel": [
    [
      "tests/serializers/models/data.py",
      [
        "InheritBaseModel"
      ]
    ]
  ],
  "ExplicitInheritBaseModel": [
    [
      "tests/serializers/models/data.py",
      [
        "ExplicitInheritBaseModel"
      ]
    ]
  ],
  "LengthModel": [
    [
      "tests/serializers/models/data.py",
      [
        "LengthModel"
      ]
    ]
  ],
  "ParentManager": [
    [
      "tests/serializers/models/multi_table.py",
      [
        "ParentManager"
      ]
    ]
  ],
  "NaturalKeyAnchorManager": [
    [
      "tests/serializers/models/natural.py",
      [
        "NaturalKeyAnchorManager"
      ]
    ]
  ],
  "NaturalKeyAnchor": [
    [
      "tests/serializers/models/natural.py",
      [
        "NaturalKeyAnchor"
      ]
    ]
  ],
  "FKDataNaturalKey": [
    [
      "tests/serializers/models/natural.py",
      [
        "FKDataNaturalKey"
      ]
    ]
  ],
  "NaturalPKWithDefault": [
    [
      "tests/serializers/models/natural.py",
      [
        "NaturalPKWithDefault"
      ]
    ]
  ],
  "SerializerDataTests": [
    [
      "tests/serializers/test_data.py",
      [
        "SerializerDataTests"
      ]
    ]
  ],
  "TestDeserializedObjectTests": [
    [
      "tests/serializers/test_deserializedobject.py",
      [
        "TestDeserializedObjectTests"
      ]
    ]
  ],
  "JsonSerializerTestCase": [
    [
      "tests/serializers/test_json.py",
      [
        "JsonSerializerTestCase"
      ]
    ]
  ],
  "JsonSerializerTransactionTestCase": [
    [
      "tests/serializers/test_json.py",
      [
        "JsonSerializerTransactionTestCase"
      ]
    ]
  ],
  "DjangoJSONEncoderTests": [
    [
      "tests/serializers/test_json.py",
      [
        "DjangoJSONEncoderTests"
      ]
    ]
  ],
  "NaturalKeySerializerTests": [
    [
      "tests/serializers/test_natural.py",
      [
        "NaturalKeySerializerTests"
      ]
    ]
  ],
  "XmlSerializerTestCase": [
    [
      "tests/serializers/test_xml.py",
      [
        "XmlSerializerTestCase"
      ]
    ]
  ],
  "XmlSerializerTransactionTestCase": [
    [
      "tests/serializers/test_xml.py",
      [
        "XmlSerializerTransactionTestCase"
      ]
    ]
  ],
  "YamlImportModuleMock": [
    [
      "tests/serializers/test_yaml.py",
      [
        "YamlImportModuleMock"
      ]
    ]
  ],
  "NoYamlSerializerTestCase": [
    [
      "tests/serializers/test_yaml.py",
      [
        "NoYamlSerializerTestCase"
      ]
    ]
  ],
  "YamlSerializerTestCase": [
    [
      "tests/serializers/test_yaml.py",
      [
        "YamlSerializerTestCase"
      ]
    ]
  ],
  "YamlSerializerTransactionTestCase": [
    [
      "tests/serializers/test_yaml.py",
      [
        "YamlSerializerTransactionTestCase"
      ]
    ]
  ],
  "SerializerRegistrationTests": [
    [
      "tests/serializers/tests.py",
      [
        "SerializerRegistrationTests"
      ]
    ]
  ],
  "SerializersTestBase": [
    [
      "tests/serializers/tests.py",
      [
        "SerializersTestBase"
      ]
    ]
  ],
  "SerializerAPITests": [
    [
      "tests/serializers/tests.py",
      [
        "SerializerAPITests"
      ]
    ]
  ],
  "SerializersTransactionTestBase": [
    [
      "tests/serializers/tests.py",
      [
        "SerializersTransactionTestBase"
      ]
    ]
  ],
  "UnclosableBytesIO": [
    [
      "tests/servers/test_basehttp.py",
      [
        "WSGIRequestHandlerTestCase",
        "test_strips_underscore_headers",
        "UnclosableBytesIO"
      ]
    ]
  ],
  "WSGIRequestHandlerTestCase": [
    [
      "tests/servers/test_basehttp.py",
      [
        "WSGIRequestHandlerTestCase"
      ]
    ]
  ],
  "LiveServerThreadTest": [
    [
      "tests/servers/test_liveserverthread.py",
      [
        "LiveServerThreadTest"
      ]
    ]
  ],
  "LiveServerBase": [
    [
      "tests/servers/tests.py",
      [
        "LiveServerBase"
      ]
    ],
    [
      "tests/staticfiles_tests/test_liveserver.py",
      [
        "LiveServerBase"
      ]
    ]
  ],
  "LiveServerAddress": [
    [
      "tests/servers/tests.py",
      [
        "LiveServerAddress"
      ]
    ]
  ],
  "LiveServerViews": [
    [
      "tests/servers/tests.py",
      [
        "LiveServerViews"
      ]
    ]
  ],
  "LiveServerDatabase": [
    [
      "tests/servers/tests.py",
      [
        "LiveServerDatabase"
      ]
    ]
  ],
  "LiveServerPort": [
    [
      "tests/servers/tests.py",
      [
        "LiveServerPort"
      ]
    ]
  ],
  "LiverServerThreadedTests": [
    [
      "tests/servers/tests.py",
      [
        "LiverServerThreadedTests"
      ]
    ]
  ],
  "CustomSession": [
    [
      "tests/sessions_tests/models.py",
      [
        "CustomSession"
      ]
    ]
  ],
  "SessionTestsMixin": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin"
      ]
    ]
  ],
  "DatabaseSessionTests": [
    [
      "tests/sessions_tests/tests.py",
      [
        "DatabaseSessionTests"
      ]
    ]
  ],
  "DatabaseSessionWithTimeZoneTests": [
    [
      "tests/sessions_tests/tests.py",
      [
        "DatabaseSessionWithTimeZoneTests"
      ]
    ]
  ],
  "CustomDatabaseSessionTests": [
    [
      "tests/sessions_tests/tests.py",
      [
        "CustomDatabaseSessionTests"
      ]
    ]
  ],
  "CacheDBSessionTests": [
    [
      "tests/sessions_tests/tests.py",
      [
        "CacheDBSessionTests"
      ]
    ]
  ],
  "CacheDBSessionWithTimeZoneTests": [
    [
      "tests/sessions_tests/tests.py",
      [
        "CacheDBSessionWithTimeZoneTests"
      ]
    ]
  ],
  "FileSessionTests": [
    [
      "tests/sessions_tests/tests.py",
      [
        "FileSessionTests"
      ]
    ]
  ],
  "CacheSessionTests": [
    [
      "tests/sessions_tests/tests.py",
      [
        "CacheSessionTests"
      ]
    ]
  ],
  "SessionMiddlewareTests": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionMiddlewareTests"
      ]
    ]
  ],
  "CookieSessionTests": [
    [
      "tests/sessions_tests/tests.py",
      [
        "CookieSessionTests"
      ]
    ]
  ],
  "DeprecationTests": [
    [
      "tests/settings_tests/test_file_charset.py",
      [
        "DeprecationTests"
      ]
    ]
  ],
  "FullyDecoratedTranTestCase": [
    [
      "tests/settings_tests/tests.py",
      [
        "FullyDecoratedTranTestCase"
      ]
    ]
  ],
  "FullyDecoratedTestCase": [
    [
      "tests/settings_tests/tests.py",
      [
        "FullyDecoratedTestCase"
      ]
    ]
  ],
  "ClassDecoratedTestCaseSuper": [
    [
      "tests/settings_tests/tests.py",
      [
        "ClassDecoratedTestCaseSuper"
      ]
    ]
  ],
  "ClassDecoratedTestCase": [
    [
      "tests/settings_tests/tests.py",
      [
        "ClassDecoratedTestCase"
      ]
    ]
  ],
  "ParentDecoratedTestCase": [
    [
      "tests/settings_tests/tests.py",
      [
        "ParentDecoratedTestCase"
      ]
    ]
  ],
  "ChildDecoratedTestCase": [
    [
      "tests/settings_tests/tests.py",
      [
        "ChildDecoratedTestCase"
      ]
    ]
  ],
  "SettingsTests": [
    [
      "tests/settings_tests/tests.py",
      [
        "SettingsTests"
      ]
    ]
  ],
  "TestComplexSettingOverride": [
    [
      "tests/settings_tests/tests.py",
      [
        "TestComplexSettingOverride"
      ]
    ]
  ],
  "SecureProxySslHeaderTest": [
    [
      "tests/settings_tests/tests.py",
      [
        "SecureProxySslHeaderTest"
      ]
    ]
  ],
  "IsOverriddenTest": [
    [
      "tests/settings_tests/tests.py",
      [
        "IsOverriddenTest"
      ]
    ]
  ],
  "TestListSettings": [
    [
      "tests/settings_tests/tests.py",
      [
        "TestListSettings"
      ]
    ]
  ],
  "SettingChangeEnterException": [
    [
      "tests/settings_tests/tests.py",
      [
        "SettingChangeEnterException"
      ]
    ]
  ],
  "SettingChangeExitException": [
    [
      "tests/settings_tests/tests.py",
      [
        "SettingChangeExitException"
      ]
    ]
  ],
  "OverrideSettingsIsolationOnExceptionTests": [
    [
      "tests/settings_tests/tests.py",
      [
        "OverrideSettingsIsolationOnExceptionTests"
      ]
    ]
  ],
  "ShellCommandTestCase": [
    [
      "tests/shell/tests.py",
      [
        "ShellCommandTestCase"
      ]
    ]
  ],
  "RenderTests": [
    [
      "tests/shortcuts/tests.py",
      [
        "RenderTests"
      ]
    ]
  ],
  "BaseSignalSetup": [
    [
      "tests/signals/tests.py",
      [
        "BaseSignalSetup"
      ]
    ]
  ],
  "PostDeleteHandler": [
    [
      "tests/signals/tests.py",
      [
        "SignalTests",
        "test_delete_signals",
        "PostDeleteHandler"
      ]
    ]
  ],
  "LazyModelRefTests": [
    [
      "tests/signals/tests.py",
      [
        "LazyModelRefTests"
      ]
    ]
  ],
  "SignedCookieTest": [
    [
      "tests/signed_cookies_tests/tests.py",
      [
        "SignedCookieTest"
      ]
    ]
  ],
  "TestSigner": [
    [
      "tests/signing/tests.py",
      [
        "TestSigner"
      ]
    ]
  ],
  "TestTimestampSigner": [
    [
      "tests/signing/tests.py",
      [
        "TestTimestampSigner"
      ]
    ]
  ],
  "SitemapTestsBase": [
    [
      "tests/sitemaps_tests/base.py",
      [
        "SitemapTestsBase"
      ]
    ]
  ],
  "I18nTestModel": [
    [
      "tests/sitemaps_tests/models.py",
      [
        "I18nTestModel"
      ]
    ]
  ],
  "GenericViewsSitemapTests": [
    [
      "tests/sitemaps_tests/test_generic.py",
      [
        "GenericViewsSitemapTests"
      ]
    ]
  ],
  "HTTPSitemapTests": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests"
      ]
    ]
  ],
  "HTTPSSitemapTests": [
    [
      "tests/sitemaps_tests/test_https.py",
      [
        "HTTPSSitemapTests"
      ]
    ]
  ],
  "HTTPSDetectionSitemapTests": [
    [
      "tests/sitemaps_tests/test_https.py",
      [
        "HTTPSDetectionSitemapTests"
      ]
    ]
  ],
  "PingGoogleTests": [
    [
      "tests/sitemaps_tests/test_management.py",
      [
        "PingGoogleTests"
      ]
    ],
    [
      "tests/sitemaps_tests/test_utils.py",
      [
        "PingGoogleTests"
      ]
    ]
  ],
  "SimpleSitemap": [
    [
      "tests/sitemaps_tests/urls/http.py",
      [
        "SimpleSitemap"
      ]
    ]
  ],
  "SimplePagedSitemap": [
    [
      "tests/sitemaps_tests/urls/http.py",
      [
        "SimplePagedSitemap"
      ]
    ]
  ],
  "SimpleI18nSitemap": [
    [
      "tests/sitemaps_tests/urls/http.py",
      [
        "SimpleI18nSitemap"
      ]
    ]
  ],
  "EmptySitemap": [
    [
      "tests/sitemaps_tests/urls/http.py",
      [
        "EmptySitemap"
      ]
    ]
  ],
  "FixedLastmodSitemap": [
    [
      "tests/sitemaps_tests/urls/http.py",
      [
        "FixedLastmodSitemap"
      ]
    ]
  ],
  "FixedLastmodMixedSitemap": [
    [
      "tests/sitemaps_tests/urls/http.py",
      [
        "FixedLastmodMixedSitemap"
      ]
    ]
  ],
  "FixedNewerLastmodSitemap": [
    [
      "tests/sitemaps_tests/urls/http.py",
      [
        "FixedNewerLastmodSitemap"
      ]
    ]
  ],
  "DateSiteMap": [
    [
      "tests/sitemaps_tests/urls/http.py",
      [
        "DateSiteMap"
      ]
    ]
  ],
  "TimezoneSiteMap": [
    [
      "tests/sitemaps_tests/urls/http.py",
      [
        "TimezoneSiteMap"
      ]
    ]
  ],
  "HTTPSSitemap": [
    [
      "tests/sitemaps_tests/urls/https.py",
      [
        "HTTPSSitemap"
      ]
    ]
  ],
  "SyndicatedArticle": [
    [
      "tests/sites_framework/models.py",
      [
        "SyndicatedArticle"
      ]
    ]
  ],
  "ExclusiveArticle": [
    [
      "tests/sites_framework/models.py",
      [
        "ExclusiveArticle"
      ]
    ]
  ],
  "SitesFrameworkTestCase": [
    [
      "tests/sites_framework/tests.py",
      [
        "SitesFrameworkTestCase"
      ]
    ]
  ],
  "CurrentSiteManagerChecksTests": [
    [
      "tests/sites_framework/tests.py",
      [
        "CurrentSiteManagerChecksTests"
      ]
    ]
  ],
  "SitesFrameworkTests": [
    [
      "tests/sites_tests/tests.py",
      [
        "SitesFrameworkTests"
      ]
    ]
  ],
  "RequestSiteTests": [
    [
      "tests/sites_tests/tests.py",
      [
        "RequestSiteTests"
      ]
    ]
  ],
  "JustOtherRouter": [
    [
      "tests/sites_tests/tests.py",
      [
        "JustOtherRouter"
      ]
    ]
  ],
  "CreateDefaultSiteTests": [
    [
      "tests/sites_tests/tests.py",
      [
        "CreateDefaultSiteTests"
      ]
    ]
  ],
  "MiddlewareTest": [
    [
      "tests/sites_tests/tests.py",
      [
        "MiddlewareTest"
      ]
    ]
  ],
  "IgnorePatternsAppConfig": [
    [
      "tests/staticfiles_tests/apps/staticfiles_config.py",
      [
        "IgnorePatternsAppConfig"
      ]
    ]
  ],
  "BaseStaticFilesMixin": [
    [
      "tests/staticfiles_tests/cases.py",
      [
        "BaseStaticFilesMixin"
      ]
    ]
  ],
  "StaticFilesTestCase": [
    [
      "tests/staticfiles_tests/cases.py",
      [
        "StaticFilesTestCase"
      ]
    ]
  ],
  "CollectionTestCase": [
    [
      "tests/staticfiles_tests/cases.py",
      [
        "CollectionTestCase"
      ]
    ]
  ],
  "TestDefaults": [
    [
      "tests/staticfiles_tests/cases.py",
      [
        "TestDefaults"
      ]
    ]
  ],
  "PathNotImplementedStorage": [
    [
      "tests/staticfiles_tests/storage.py",
      [
        "PathNotImplementedStorage"
      ]
    ]
  ],
  "NeverCopyRemoteStorage": [
    [
      "tests/staticfiles_tests/storage.py",
      [
        "NeverCopyRemoteStorage"
      ]
    ]
  ],
  "QueryStringStorage": [
    [
      "tests/staticfiles_tests/storage.py",
      [
        "QueryStringStorage"
      ]
    ]
  ],
  "SimpleStorage": [
    [
      "tests/staticfiles_tests/storage.py",
      [
        "SimpleStorage"
      ]
    ]
  ],
  "ExtraPatternsStorage": [
    [
      "tests/staticfiles_tests/storage.py",
      [
        "ExtraPatternsStorage"
      ]
    ]
  ],
  "FindersCheckTests": [
    [
      "tests/staticfiles_tests/test_checks.py",
      [
        "FindersCheckTests"
      ]
    ]
  ],
  "TestFinders": [
    [
      "tests/staticfiles_tests/test_finders.py",
      [
        "TestFinders"
      ]
    ]
  ],
  "TestFileSystemFinder": [
    [
      "tests/staticfiles_tests/test_finders.py",
      [
        "TestFileSystemFinder"
      ]
    ]
  ],
  "TestAppDirectoriesFinder": [
    [
      "tests/staticfiles_tests/test_finders.py",
      [
        "TestAppDirectoriesFinder"
      ]
    ]
  ],
  "TestDefaultStorageFinder": [
    [
      "tests/staticfiles_tests/test_finders.py",
      [
        "TestDefaultStorageFinder"
      ]
    ]
  ],
  "TestMiscFinder": [
    [
      "tests/staticfiles_tests/test_finders.py",
      [
        "TestMiscFinder"
      ]
    ]
  ],
  "StaticTestStorage": [
    [
      "tests/staticfiles_tests/test_forms.py",
      [
        "StaticTestStorage"
      ]
    ]
  ],
  "StaticFilesFormsMediaTestCase": [
    [
      "tests/staticfiles_tests/test_forms.py",
      [
        "StaticFilesFormsMediaTestCase"
      ]
    ]
  ],
  "StaticLiveServerChecks": [
    [
      "tests/staticfiles_tests/test_liveserver.py",
      [
        "StaticLiveServerChecks"
      ]
    ]
  ],
  "StaticLiveServerView": [
    [
      "tests/staticfiles_tests/test_liveserver.py",
      [
        "StaticLiveServerView"
      ]
    ]
  ],
  "TestNoFilesCreated": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestNoFilesCreated"
      ]
    ]
  ],
  "TestRunserver": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestRunserver"
      ]
    ]
  ],
  "TestFindStatic": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestFindStatic"
      ]
    ]
  ],
  "TestConfiguration": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestConfiguration"
      ]
    ]
  ],
  "TestCollectionHelpSubcommand": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionHelpSubcommand"
      ]
    ]
  ],
  "TestCollection": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollection"
      ]
    ]
  ],
  "TestCollectionVerbosity": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionVerbosity"
      ]
    ]
  ],
  "TestCollectionClear": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionClear"
      ]
    ]
  ],
  "TestInteractiveMessages": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestInteractiveMessages"
      ]
    ]
  ],
  "TestCollectionExcludeNoDefaultIgnore": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionExcludeNoDefaultIgnore"
      ]
    ]
  ],
  "TestCollectionCustomIgnorePatterns": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionCustomIgnorePatterns"
      ]
    ]
  ],
  "TestCollectionDryRun": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionDryRun"
      ]
    ]
  ],
  "TestCollectionFilesOverride": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionFilesOverride"
      ]
    ]
  ],
  "TestCollectionOverwriteWarning": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionOverwriteWarning"
      ]
    ]
  ],
  "TestCollectionNonLocalStorage": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionNonLocalStorage"
      ]
    ]
  ],
  "TestCollectionNeverCopyStorage": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionNeverCopyStorage"
      ]
    ]
  ],
  "TestCollectionLinks": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionLinks"
      ]
    ]
  ],
  "TestHashedFiles": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestHashedFiles"
      ]
    ]
  ],
  "TestCollectionCachedStorage": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestCollectionCachedStorage"
      ]
    ]
  ],
  "TestCachedStaticFilesStorageDeprecation": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestCachedStaticFilesStorageDeprecation"
      ]
    ]
  ],
  "TestExtraPatternsStorage": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestExtraPatternsStorage"
      ]
    ]
  ],
  "TestCollectionManifestStorage": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestCollectionManifestStorage"
      ]
    ]
  ],
  "TestCollectionSimpleStorage": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestCollectionSimpleStorage"
      ]
    ]
  ],
  "CustomStaticFilesStorage": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "CustomStaticFilesStorage"
      ]
    ]
  ],
  "TestStaticFilePermissions": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestStaticFilePermissions"
      ]
    ]
  ],
  "TestCollectionHashedFilesCache": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestCollectionHashedFilesCache"
      ]
    ]
  ],
  "TestTemplateTag": [
    [
      "tests/staticfiles_tests/test_templatetags.py",
      [
        "TestTemplateTag"
      ]
    ]
  ],
  "CheckSettingsTests": [
    [
      "tests/staticfiles_tests/test_utils.py",
      [
        "CheckSettingsTests"
      ]
    ]
  ],
  "TestServeStatic": [
    [
      "tests/staticfiles_tests/test_views.py",
      [
        "TestServeStatic"
      ]
    ]
  ],
  "TestServeDisabled": [
    [
      "tests/staticfiles_tests/test_views.py",
      [
        "TestServeDisabled"
      ]
    ]
  ],
  "TestServeStaticWithDefaultURL": [
    [
      "tests/staticfiles_tests/test_views.py",
      [
        "TestServeStaticWithDefaultURL"
      ]
    ]
  ],
  "TestServeStaticWithURLHelper": [
    [
      "tests/staticfiles_tests/test_views.py",
      [
        "TestServeStaticWithURLHelper"
      ]
    ]
  ],
  "InternationalArticle": [
    [
      "tests/str/models.py",
      [
        "InternationalArticle"
      ]
    ]
  ],
  "StringLookupTests": [
    [
      "tests/string_lookup/tests.py",
      [
        "StringLookupTests"
      ]
    ]
  ],
  "AlternateArticle": [
    [
      "tests/swappable_models/models.py",
      [
        "AlternateArticle"
      ]
    ]
  ],
  "SwappableModelTests": [
    [
      "tests/swappable_models/tests.py",
      [
        "SwappableModelTests"
      ]
    ]
  ],
  "TestRss2Feed": [
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestRss2Feed"
      ]
    ]
  ],
  "TestRss2FeedWithGuidIsPermaLinkTrue": [
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestRss2FeedWithGuidIsPermaLinkTrue"
      ]
    ]
  ],
  "TestRss2FeedWithGuidIsPermaLinkFalse": [
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestRss2FeedWithGuidIsPermaLinkFalse"
      ]
    ]
  ],
  "TestRss091Feed": [
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestRss091Feed"
      ]
    ]
  ],
  "TestNoPubdateFeed": [
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestNoPubdateFeed"
      ]
    ]
  ],
  "TestAtomFeed": [
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestAtomFeed"
      ]
    ]
  ],
  "TestLatestFeed": [
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestLatestFeed"
      ]
    ]
  ],
  "ArticlesFeed": [
    [
      "tests/syndication_tests/feeds.py",
      [
        "ArticlesFeed"
      ]
    ]
  ],
  "TestSingleEnclosureRSSFeed": [
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestSingleEnclosureRSSFeed"
      ]
    ]
  ],
  "TestMultipleEnclosureRSSFeed": [
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestMultipleEnclosureRSSFeed"
      ]
    ]
  ],
  "TemplateFeed": [
    [
      "tests/syndication_tests/feeds.py",
      [
        "TemplateFeed"
      ]
    ]
  ],
  "TemplateContextFeed": [
    [
      "tests/syndication_tests/feeds.py",
      [
        "TemplateContextFeed"
      ]
    ]
  ],
  "NaiveDatesFeed": [
    [
      "tests/syndication_tests/feeds.py",
      [
        "NaiveDatesFeed"
      ]
    ]
  ],
  "TZAwareDatesFeed": [
    [
      "tests/syndication_tests/feeds.py",
      [
        "TZAwareDatesFeed"
      ]
    ]
  ],
  "TestFeedUrlFeed": [
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestFeedUrlFeed"
      ]
    ]
  ],
  "MyCustomAtom1Feed": [
    [
      "tests/syndication_tests/feeds.py",
      [
        "MyCustomAtom1Feed"
      ]
    ]
  ],
  "TestCustomFeed": [
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestCustomFeed"
      ]
    ]
  ],
  "TestSingleEnclosureAtomFeed": [
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestSingleEnclosureAtomFeed"
      ]
    ]
  ],
  "TestMultipleEnclosureAtomFeed": [
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestMultipleEnclosureAtomFeed"
      ]
    ]
  ],
  "FeedTestCase": [
    [
      "tests/syndication_tests/tests.py",
      [
        "FeedTestCase"
      ]
    ]
  ],
  "SyndicationFeedTest": [
    [
      "tests/syndication_tests/tests.py",
      [
        "SyndicationFeedTest"
      ]
    ]
  ],
  "TemplateStringsTests": [
    [
      "tests/template_backends/test_dummy.py",
      [
        "TemplateStringsTests"
      ]
    ]
  ],
  "TemplateUtilsTests": [
    [
      "tests/template_backends/test_utils.py",
      [
        "TemplateUtilsTests"
      ]
    ]
  ],
  "TemplateLoaderTests": [
    [
      "tests/template_loader/tests.py",
      [
        "TemplateLoaderTests"
      ]
    ]
  ],
  "AddTests": [
    [
      "tests/template_tests/filter_tests/test_add.py",
      [
        "AddTests"
      ]
    ]
  ],
  "AddslashesTests": [
    [
      "tests/template_tests/filter_tests/test_addslashes.py",
      [
        "AddslashesTests"
      ]
    ]
  ],
  "AutoescapeStringfilterTests": [
    [
      "tests/template_tests/filter_tests/test_autoescape.py",
      [
        "AutoescapeStringfilterTests"
      ]
    ]
  ],
  "CapfirstTests": [
    [
      "tests/template_tests/filter_tests/test_capfirst.py",
      [
        "CapfirstTests"
      ]
    ]
  ],
  "CenterTests": [
    [
      "tests/template_tests/filter_tests/test_center.py",
      [
        "CenterTests"
      ]
    ]
  ],
  "ChainingTests": [
    [
      "tests/template_tests/filter_tests/test_chaining.py",
      [
        "ChainingTests"
      ]
    ]
  ],
  "CutTests": [
    [
      "tests/template_tests/filter_tests/test_cut.py",
      [
        "CutTests"
      ]
    ]
  ],
  "DateTests": [
    [
      "tests/template_tests/filter_tests/test_date.py",
      [
        "DateTests"
      ]
    ]
  ],
  "DefaultIfNoneTests": [
    [
      "tests/template_tests/filter_tests/test_default.py",
      [
        "DefaultIfNoneTests"
      ]
    ]
  ],
  "EscapeTests": [
    [
      "tests/template_tests/filter_tests/test_escape.py",
      [
        "EscapeTests"
      ]
    ]
  ],
  "EscapejsTests": [
    [
      "tests/template_tests/filter_tests/test_escapejs.py",
      [
        "EscapejsTests"
      ]
    ]
  ],
  "FirstTests": [
    [
      "tests/template_tests/filter_tests/test_first.py",
      [
        "FirstTests"
      ]
    ]
  ],
  "FloatformatTests": [
    [
      "tests/template_tests/filter_tests/test_floatformat.py",
      [
        "FloatformatTests"
      ]
    ]
  ],
  "ForceEscapeTests": [
    [
      "tests/template_tests/filter_tests/test_force_escape.py",
      [
        "ForceEscapeTests"
      ]
    ]
  ],
  "IriencodeTests": [
    [
      "tests/template_tests/filter_tests/test_iriencode.py",
      [
        "IriencodeTests"
      ]
    ]
  ],
  "JoinTests": [
    [
      "tests/template_tests/filter_tests/test_join.py",
      [
        "JoinTests"
      ]
    ]
  ],
  "JsonScriptTests": [
    [
      "tests/template_tests/filter_tests/test_json_script.py",
      [
        "JsonScriptTests"
      ]
    ]
  ],
  "LastTests": [
    [
      "tests/template_tests/filter_tests/test_last.py",
      [
        "LastTests"
      ]
    ]
  ],
  "LengthIsTests": [
    [
      "tests/template_tests/filter_tests/test_length_is.py",
      [
        "LengthIsTests"
      ]
    ]
  ],
  "LinebreaksTests": [
    [
      "tests/template_tests/filter_tests/test_linebreaks.py",
      [
        "LinebreaksTests"
      ]
    ]
  ],
  "LinebreaksbrTests": [
    [
      "tests/template_tests/filter_tests/test_linebreaksbr.py",
      [
        "LinebreaksbrTests"
      ]
    ]
  ],
  "LinenumbersTests": [
    [
      "tests/template_tests/filter_tests/test_linenumbers.py",
      [
        "LinenumbersTests"
      ]
    ]
  ],
  "LjustTests": [
    [
      "tests/template_tests/filter_tests/test_ljust.py",
      [
        "LjustTests"
      ]
    ]
  ],
  "MakeListTests": [
    [
      "tests/template_tests/filter_tests/test_make_list.py",
      [
        "MakeListTests"
      ]
    ]
  ],
  "Phone2numericTests": [
    [
      "tests/template_tests/filter_tests/test_phone2numeric.py",
      [
        "Phone2numericTests"
      ]
    ]
  ],
  "PluralizeTests": [
    [
      "tests/template_tests/filter_tests/test_pluralize.py",
      [
        "PluralizeTests"
      ]
    ]
  ],
  "RandomTests": [
    [
      "tests/template_tests/filter_tests/test_random.py",
      [
        "RandomTests"
      ]
    ]
  ],
  "RjustTests": [
    [
      "tests/template_tests/filter_tests/test_rjust.py",
      [
        "RjustTests"
      ]
    ]
  ],
  "SafeTests": [
    [
      "tests/template_tests/filter_tests/test_safe.py",
      [
        "SafeTests"
      ]
    ]
  ],
  "SafeseqTests": [
    [
      "tests/template_tests/filter_tests/test_safeseq.py",
      [
        "SafeseqTests"
      ]
    ]
  ],
  "SliceTests": [
    [
      "tests/template_tests/filter_tests/test_slice.py",
      [
        "SliceTests"
      ]
    ]
  ],
  "SlugifyTests": [
    [
      "tests/template_tests/filter_tests/test_slugify.py",
      [
        "SlugifyTests"
      ]
    ]
  ],
  "StringformatTests": [
    [
      "tests/template_tests/filter_tests/test_stringformat.py",
      [
        "StringformatTests"
      ]
    ]
  ],
  "StriptagsTests": [
    [
      "tests/template_tests/filter_tests/test_striptags.py",
      [
        "StriptagsTests"
      ]
    ]
  ],
  "TimeTests": [
    [
      "tests/template_tests/filter_tests/test_time.py",
      [
        "TimeTests"
      ]
    ]
  ],
  "TimesinceTests": [
    [
      "tests/template_tests/filter_tests/test_timesince.py",
      [
        "TimesinceTests"
      ]
    ],
    [
      "tests/utils_tests/test_timesince.py",
      [
        "TimesinceTests"
      ]
    ]
  ],
  "TimeuntilTests": [
    [
      "tests/template_tests/filter_tests/test_timeuntil.py",
      [
        "TimeuntilTests"
      ]
    ]
  ],
  "TitleTests": [
    [
      "tests/template_tests/filter_tests/test_title.py",
      [
        "TitleTests"
      ]
    ]
  ],
  "TruncatecharsTests": [
    [
      "tests/template_tests/filter_tests/test_truncatechars.py",
      [
        "TruncatecharsTests"
      ]
    ]
  ],
  "TruncatewordsTests": [
    [
      "tests/template_tests/filter_tests/test_truncatewords.py",
      [
        "TruncatewordsTests"
      ]
    ]
  ],
  "UnorderedListTests": [
    [
      "tests/template_tests/filter_tests/test_unordered_list.py",
      [
        "UnorderedListTests"
      ]
    ]
  ],
  "UrlencodeTests": [
    [
      "tests/template_tests/filter_tests/test_urlencode.py",
      [
        "UrlencodeTests"
      ]
    ]
  ],
  "UrlizeTests": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "UrlizeTests"
      ]
    ]
  ],
  "UrlizetruncTests": [
    [
      "tests/template_tests/filter_tests/test_urlizetrunc.py",
      [
        "UrlizetruncTests"
      ]
    ]
  ],
  "WordcountTests": [
    [
      "tests/template_tests/filter_tests/test_wordcount.py",
      [
        "WordcountTests"
      ]
    ]
  ],
  "WordwrapTests": [
    [
      "tests/template_tests/filter_tests/test_wordwrap.py",
      [
        "WordwrapTests"
      ]
    ]
  ],
  "YesNoTests": [
    [
      "tests/template_tests/filter_tests/test_yesno.py",
      [
        "YesNoTests"
      ]
    ]
  ],
  "TimezoneTestCase": [
    [
      "tests/template_tests/filter_tests/timezone_utils.py",
      [
        "TimezoneTestCase"
      ]
    ]
  ],
  "MultipleLocaleActivationTestCase": [
    [
      "tests/template_tests/syntax_tests/i18n/base.py",
      [
        "MultipleLocaleActivationTestCase"
      ]
    ]
  ],
  "I18nBlockTransTagTests": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      [
        "I18nBlockTransTagTests"
      ]
    ]
  ],
  "TranslationBlockTransTagTests": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      [
        "TranslationBlockTransTagTests"
      ]
    ]
  ],
  "MultipleLocaleActivationBlockTransTests": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktrans.py",
      [
        "MultipleLocaleActivationBlockTransTests"
      ]
    ]
  ],
  "I18nFiltersTests": [
    [
      "tests/template_tests/syntax_tests/i18n/test_filters.py",
      [
        "I18nFiltersTests"
      ]
    ]
  ],
  "GetAvailableLanguagesTagTests": [
    [
      "tests/template_tests/syntax_tests/i18n/test_get_available_languages.py",
      [
        "GetAvailableLanguagesTagTests"
      ]
    ]
  ],
  "I18nGetCurrentLanguageTagTests": [
    [
      "tests/template_tests/syntax_tests/i18n/test_get_current_language.py",
      [
        "I18nGetCurrentLanguageTagTests"
      ]
    ]
  ],
  "I18nGetCurrentLanguageBidiTagTests": [
    [
      "tests/template_tests/syntax_tests/i18n/test_get_current_language_bidi.py",
      [
        "I18nGetCurrentLanguageBidiTagTests"
      ]
    ]
  ],
  "I18nGetLanguageInfoTagTests": [
    [
      "tests/template_tests/syntax_tests/i18n/test_get_language_info.py",
      [
        "I18nGetLanguageInfoTagTests"
      ]
    ]
  ],
  "GetLanguageInfoListTests": [
    [
      "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py",
      [
        "GetLanguageInfoListTests"
      ]
    ]
  ],
  "I18nLanguageTagTests": [
    [
      "tests/template_tests/syntax_tests/i18n/test_language.py",
      [
        "I18nLanguageTagTests"
      ]
    ]
  ],
  "I18nTransTagTests": [
    [
      "tests/template_tests/syntax_tests/i18n/test_trans.py",
      [
        "I18nTransTagTests"
      ]
    ]
  ],
  "TranslationTransTagTests": [
    [
      "tests/template_tests/syntax_tests/i18n/test_trans.py",
      [
        "TranslationTransTagTests"
      ]
    ]
  ],
  "MultipleLocaleActivationTransTagTests": [
    [
      "tests/template_tests/syntax_tests/i18n/test_trans.py",
      [
        "MultipleLocaleActivationTransTagTests"
      ]
    ]
  ],
  "LocalizeNodeTests": [
    [
      "tests/template_tests/syntax_tests/i18n/test_trans.py",
      [
        "LocalizeNodeTests"
      ]
    ]
  ],
  "MultipleLocaleActivationTests": [
    [
      "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      [
        "MultipleLocaleActivationTests"
      ]
    ]
  ],
  "I18nStringLiteralTests": [
    [
      "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      [
        "I18nStringLiteralTests"
      ]
    ]
  ],
  "AutoescapeTagTests": [
    [
      "tests/template_tests/syntax_tests/test_autoescape.py",
      [
        "AutoescapeTagTests"
      ]
    ]
  ],
  "BasicSyntaxTests": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests"
      ]
    ]
  ],
  "BuiltinsTests": [
    [
      "tests/template_tests/syntax_tests/test_builtins.py",
      [
        "BuiltinsTests"
      ]
    ]
  ],
  "CacheTagTests": [
    [
      "tests/template_tests/syntax_tests/test_cache.py",
      [
        "CacheTagTests"
      ]
    ]
  ],
  "CacheTests": [
    [
      "tests/template_tests/syntax_tests/test_cache.py",
      [
        "CacheTests"
      ]
    ]
  ],
  "CommentSyntaxTests": [
    [
      "tests/template_tests/syntax_tests/test_comment.py",
      [
        "CommentSyntaxTests"
      ]
    ]
  ],
  "CycleTagTests": [
    [
      "tests/template_tests/syntax_tests/test_cycle.py",
      [
        "CycleTagTests"
      ]
    ]
  ],
  "ExceptionsTests": [
    [
      "tests/template_tests/syntax_tests/test_exceptions.py",
      [
        "ExceptionsTests"
      ]
    ]
  ],
  "ExtendsNodeTests": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "ExtendsNodeTests"
      ]
    ]
  ],
  "FilterSyntaxTests": [
    [
      "tests/template_tests/syntax_tests/test_filter_syntax.py",
      [
        "FilterSyntaxTests"
      ]
    ]
  ],
  "FilterTagTests": [
    [
      "tests/template_tests/syntax_tests/test_filter_tag.py",
      [
        "FilterTagTests"
      ]
    ]
  ],
  "FirstOfTagTests": [
    [
      "tests/template_tests/syntax_tests/test_firstof.py",
      [
        "FirstOfTagTests"
      ]
    ]
  ],
  "ForTagTests": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests"
      ]
    ]
  ],
  "ForNodeTests": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForNodeTests"
      ]
    ]
  ],
  "IfTagTests": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests"
      ]
    ]
  ],
  "IfNodeTests": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfNodeTests"
      ]
    ]
  ],
  "IfChangedTagTests": [
    [
      "tests/template_tests/syntax_tests/test_if_changed.py",
      [
        "IfChangedTagTests"
      ]
    ]
  ],
  "IfChangedTests": [
    [
      "tests/template_tests/syntax_tests/test_if_changed.py",
      [
        "IfChangedTests"
      ]
    ]
  ],
  "IfEqualTagTests": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests"
      ]
    ]
  ],
  "IfNotEqualTagTests": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfNotEqualTagTests"
      ]
    ]
  ],
  "IfEqualTests": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTests"
      ]
    ]
  ],
  "IncludeTagTests": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTagTests"
      ]
    ]
  ],
  "IncludeTests": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTests"
      ]
    ],
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "IncludeTests"
      ]
    ]
  ],
  "InvalidStringTests": [
    [
      "tests/template_tests/syntax_tests/test_invalid_string.py",
      [
        "InvalidStringTests"
      ]
    ]
  ],
  "ListIndexTests": [
    [
      "tests/template_tests/syntax_tests/test_list_index.py",
      [
        "ListIndexTests"
      ]
    ]
  ],
  "LoadTagTests": [
    [
      "tests/template_tests/syntax_tests/test_load.py",
      [
        "LoadTagTests"
      ]
    ]
  ],
  "LoremTagTests": [
    [
      "tests/template_tests/syntax_tests/test_lorem.py",
      [
        "LoremTagTests"
      ]
    ]
  ],
  "MultilineTests": [
    [
      "tests/template_tests/syntax_tests/test_multiline.py",
      [
        "MultilineTests"
      ]
    ]
  ],
  "NamedEndblockTests": [
    [
      "tests/template_tests/syntax_tests/test_named_endblock.py",
      [
        "NamedEndblockTests"
      ]
    ]
  ],
  "NowTagTests": [
    [
      "tests/template_tests/syntax_tests/test_now.py",
      [
        "NowTagTests"
      ]
    ]
  ],
  "NumpyTests": [
    [
      "tests/template_tests/syntax_tests/test_numpy.py",
      [
        "NumpyTests"
      ]
    ]
  ],
  "RegroupTagTests": [
    [
      "tests/template_tests/syntax_tests/test_regroup.py",
      [
        "RegroupTagTests"
      ]
    ]
  ],
  "ResetCycleTagTests": [
    [
      "tests/template_tests/syntax_tests/test_resetcycle.py",
      [
        "ResetCycleTagTests"
      ]
    ]
  ],
  "SetupTests": [
    [
      "tests/template_tests/syntax_tests/test_setup.py",
      [
        "SetupTests"
      ]
    ]
  ],
  "SimpleTagTests": [
    [
      "tests/template_tests/syntax_tests/test_simple_tag.py",
      [
        "SimpleTagTests"
      ]
    ],
    [
      "tests/template_tests/test_custom.py",
      [
        "SimpleTagTests"
      ]
    ]
  ],
  "SpacelessTagTests": [
    [
      "tests/template_tests/syntax_tests/test_spaceless.py",
      [
        "SpacelessTagTests"
      ]
    ]
  ],
  "StaticTagTests": [
    [
      "tests/template_tests/syntax_tests/test_static.py",
      [
        "StaticTagTests"
      ]
    ]
  ],
  "TemplateTagTests": [
    [
      "tests/template_tests/syntax_tests/test_template_tag.py",
      [
        "TemplateTagTests"
      ]
    ]
  ],
  "UrlTagTests": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests"
      ]
    ]
  ],
  "VerbatimTagTests": [
    [
      "tests/template_tests/syntax_tests/test_verbatim.py",
      [
        "VerbatimTagTests"
      ]
    ]
  ],
  "WidthRatioTagTests": [
    [
      "tests/template_tests/syntax_tests/test_width_ratio.py",
      [
        "WidthRatioTagTests"
      ]
    ]
  ],
  "WithTagTests": [
    [
      "tests/template_tests/syntax_tests/test_with.py",
      [
        "WithTagTests"
      ]
    ]
  ],
  "WithNodeTests": [
    [
      "tests/template_tests/syntax_tests/test_with.py",
      [
        "WithNodeTests"
      ]
    ]
  ],
  "CounterNode": [
    [
      "tests/template_tests/templatetags/custom.py",
      [
        "CounterNode"
      ]
    ]
  ],
  "BadNode": [
    [
      "tests/template_tests/templatetags/tag_27584.py",
      [
        "BadNode"
      ]
    ]
  ],
  "EchoNode": [
    [
      "tests/template_tests/templatetags/testtags.py",
      [
        "EchoNode"
      ]
    ]
  ],
  "TemplateTests": [
    [
      "tests/template_tests/test_base.py",
      [
        "TemplateTests"
      ]
    ],
    [
      "tests/template_tests/tests.py",
      [
        "TemplateTests"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "TemplateTests"
      ]
    ]
  ],
  "VariableDoesNotExistTests": [
    [
      "tests/template_tests/test_base.py",
      [
        "VariableDoesNotExistTests"
      ]
    ]
  ],
  "VariableTests": [
    [
      "tests/template_tests/test_base.py",
      [
        "VariableTests"
      ]
    ]
  ],
  "CallableVariablesTests": [
    [
      "tests/template_tests/test_callables.py",
      [
        "CallableVariablesTests"
      ]
    ]
  ],
  "ContextTests": [
    [
      "tests/template_tests/test_context.py",
      [
        "ContextTests"
      ]
    ],
    [
      "tests/test_client_regress/tests.py",
      [
        "ContextTests"
      ]
    ]
  ],
  "RequestContextTests": [
    [
      "tests/template_tests/test_context.py",
      [
        "RequestContextTests"
      ]
    ]
  ],
  "CustomFilterTests": [
    [
      "tests/template_tests/test_custom.py",
      [
        "CustomFilterTests"
      ]
    ]
  ],
  "TagTestCase": [
    [
      "tests/template_tests/test_custom.py",
      [
        "TagTestCase"
      ]
    ]
  ],
  "InclusionTagTests": [
    [
      "tests/template_tests/test_custom.py",
      [
        "InclusionTagTests"
      ]
    ]
  ],
  "TemplateTagLoadingTests": [
    [
      "tests/template_tests/test_custom.py",
      [
        "TemplateTagLoadingTests"
      ]
    ]
  ],
  "RenderToStringTest": [
    [
      "tests/template_tests/test_engine.py",
      [
        "RenderToStringTest"
      ]
    ]
  ],
  "GetDefaultTests": [
    [
      "tests/template_tests/test_engine.py",
      [
        "GetDefaultTests"
      ]
    ]
  ],
  "ExtendsBehaviorTests": [
    [
      "tests/template_tests/test_extends.py",
      [
        "ExtendsBehaviorTests"
      ]
    ]
  ],
  "ExtendsRelativeBehaviorTests": [
    [
      "tests/template_tests/test_extends_relative.py",
      [
        "ExtendsRelativeBehaviorTests"
      ]
    ]
  ],
  "IncludeRelativeBehaviorTests": [
    [
      "tests/template_tests/test_extends_relative.py",
      [
        "IncludeRelativeBehaviorTests"
      ]
    ]
  ],
  "ExtendsMixedBehaviorTests": [
    [
      "tests/template_tests/test_extends_relative.py",
      [
        "ExtendsMixedBehaviorTests"
      ]
    ]
  ],
  "FilterRegistrationTests": [
    [
      "tests/template_tests/test_library.py",
      [
        "FilterRegistrationTests"
      ]
    ]
  ],
  "InclusionTagRegistrationTests": [
    [
      "tests/template_tests/test_library.py",
      [
        "InclusionTagRegistrationTests"
      ]
    ]
  ],
  "SimpleTagRegistrationTests": [
    [
      "tests/template_tests/test_library.py",
      [
        "SimpleTagRegistrationTests"
      ]
    ]
  ],
  "TagRegistrationTests": [
    [
      "tests/template_tests/test_library.py",
      [
        "TagRegistrationTests"
      ]
    ]
  ],
  "CachedLoaderTests": [
    [
      "tests/template_tests/test_loaders.py",
      [
        "CachedLoaderTests"
      ]
    ]
  ],
  "FileSystemLoaderTests": [
    [
      "tests/template_tests/test_loaders.py",
      [
        "FileSystemLoaderTests"
      ]
    ]
  ],
  "AppDirectoriesLoaderTests": [
    [
      "tests/template_tests/test_loaders.py",
      [
        "AppDirectoriesLoaderTests"
      ]
    ]
  ],
  "LocmemLoaderTests": [
    [
      "tests/template_tests/test_loaders.py",
      [
        "LocmemLoaderTests"
      ]
    ]
  ],
  "SilentDoesNotExist": [
    [
      "tests/template_tests/test_logging.py",
      [
        "VariableResolveLoggingTests",
        "test_log_on_variable_does_not_exist_silent",
        "TestObject",
        "SilentDoesNotExist"
      ]
    ]
  ],
  "VariableResolveLoggingTests": [
    [
      "tests/template_tests/test_logging.py",
      [
        "VariableResolveLoggingTests"
      ]
    ]
  ],
  "NodelistTest": [
    [
      "tests/template_tests/test_nodelist.py",
      [
        "NodelistTest"
      ]
    ]
  ],
  "TextNodeTest": [
    [
      "tests/template_tests/test_nodelist.py",
      [
        "TextNodeTest"
      ]
    ]
  ],
  "ErrorIndexTest": [
    [
      "tests/template_tests/test_nodelist.py",
      [
        "ErrorIndexTest"
      ]
    ]
  ],
  "OriginTestCase": [
    [
      "tests/template_tests/test_origin.py",
      [
        "OriginTestCase"
      ]
    ]
  ],
  "ParserTests": [
    [
      "tests/template_tests/test_parser.py",
      [
        "ParserTests"
      ]
    ]
  ],
  "CustomURLConfMiddleware": [
    [
      "tests/template_tests/test_response.py",
      [
        "CustomURLConfMiddleware"
      ]
    ]
  ],
  "SimpleTemplateResponseTest": [
    [
      "tests/template_tests/test_response.py",
      [
        "SimpleTemplateResponseTest"
      ]
    ]
  ],
  "TemplateResponseTest": [
    [
      "tests/template_tests/test_response.py",
      [
        "TemplateResponseTest"
      ]
    ]
  ],
  "CustomURLConfTest": [
    [
      "tests/template_tests/test_response.py",
      [
        "CustomURLConfTest"
      ]
    ]
  ],
  "SmartIfTests": [
    [
      "tests/template_tests/test_smartif.py",
      [
        "SmartIfTests"
      ]
    ]
  ],
  "SomeException": [
    [
      "tests/template_tests/utils.py",
      [
        "SomeException"
      ]
    ]
  ],
  "SomeOtherException": [
    [
      "tests/template_tests/utils.py",
      [
        "SomeOtherException"
      ]
    ]
  ],
  "ShouldNotExecuteException": [
    [
      "tests/template_tests/utils.py",
      [
        "ShouldNotExecuteException"
      ]
    ]
  ],
  "SomeClass": [
    [
      "tests/template_tests/utils.py",
      [
        "SomeClass"
      ]
    ]
  ],
  "OtherClass": [
    [
      "tests/template_tests/utils.py",
      [
        "OtherClass"
      ]
    ]
  ],
  "SilentGetItemClass": [
    [
      "tests/template_tests/utils.py",
      [
        "SilentGetItemClass"
      ]
    ]
  ],
  "SilentAttrClass": [
    [
      "tests/template_tests/utils.py",
      [
        "SilentAttrClass"
      ]
    ]
  ],
  "UTF8Class": [
    [
      "tests/template_tests/utils.py",
      [
        "UTF8Class"
      ]
    ]
  ],
  "UnsafeClass": [
    [
      "tests/template_tests/utils.py",
      [
        "UnsafeClass"
      ]
    ]
  ],
  "SafeClass": [
    [
      "tests/template_tests/utils.py",
      [
        "SafeClass"
      ]
    ]
  ],
  "TestClientBackend": [
    [
      "tests/test_client/auth_backends.py",
      [
        "TestClientBackend"
      ]
    ]
  ],
  "BackendWithoutGetUserMethod": [
    [
      "tests/test_client/auth_backends.py",
      [
        "BackendWithoutGetUserMethod"
      ]
    ]
  ],
  "ConditionalContentTests": [
    [
      "tests/test_client/test_conditional_content_removal.py",
      [
        "ConditionalContentTests"
      ]
    ]
  ],
  "FakePayloadTests": [
    [
      "tests/test_client/test_fakepayload.py",
      [
        "FakePayloadTests"
      ]
    ]
  ],
  "ClientTest": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest"
      ]
    ]
  ],
  "CSRFEnabledClientTests": [
    [
      "tests/test_client/tests.py",
      [
        "CSRFEnabledClientTests"
      ]
    ]
  ],
  "CustomTestClient": [
    [
      "tests/test_client/tests.py",
      [
        "CustomTestClient"
      ]
    ]
  ],
  "CustomTestClientTest": [
    [
      "tests/test_client/tests.py",
      [
        "CustomTestClientTest"
      ]
    ]
  ],
  "RequestFactoryTest": [
    [
      "tests/test_client/tests.py",
      [
        "RequestFactoryTest"
      ]
    ]
  ],
  "BaseTestFormSet": [
    [
      "tests/test_client/views.py",
      [
        "BaseTestFormSet"
      ]
    ]
  ],
  "_ViewManager": [
    [
      "tests/test_client/views.py",
      [
        "_ViewManager"
      ]
    ]
  ],
  "TwoArgException": [
    [
      "tests/test_client/views.py",
      [
        "TwoArgException"
      ]
    ]
  ],
  "CustomUserBackend": [
    [
      "tests/test_client_regress/auth_backends.py",
      [
        "CustomUserBackend"
      ]
    ]
  ],
  "AssertContainsTests": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertContainsTests"
      ]
    ]
  ],
  "AssertTemplateUsedTests": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertTemplateUsedTests"
      ]
    ]
  ],
  "AssertRedirectsTests": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertRedirectsTests"
      ]
    ]
  ],
  "AssertFormErrorTests": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertFormErrorTests"
      ]
    ]
  ],
  "AssertFormsetErrorTests": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertFormsetErrorTests"
      ]
    ]
  ],
  "LoginTests": [
    [
      "tests/test_client_regress/tests.py",
      [
        "LoginTests"
      ]
    ]
  ],
  "SessionEngineTests": [
    [
      "tests/test_client_regress/tests.py",
      [
        "SessionEngineTests"
      ]
    ]
  ],
  "URLEscapingTests": [
    [
      "tests/test_client_regress/tests.py",
      [
        "URLEscapingTests"
      ]
    ]
  ],
  "TemplateExceptionTests": [
    [
      "tests/test_client_regress/tests.py",
      [
        "TemplateExceptionTests"
      ]
    ]
  ],
  "UrlconfSubstitutionTests": [
    [
      "tests/test_client_regress/tests.py",
      [
        "UrlconfSubstitutionTests"
      ]
    ]
  ],
  "zzUrlconfSubstitutionTests": [
    [
      "tests/test_client_regress/tests.py",
      [
        "zzUrlconfSubstitutionTests"
      ]
    ]
  ],
  "RequestMethodTests": [
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestMethodTests"
      ]
    ]
  ],
  "RequestMethodStringDataTests": [
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestMethodStringDataTests"
      ]
    ]
  ],
  "QueryStringTests": [
    [
      "tests/test_client_regress/tests.py",
      [
        "QueryStringTests"
      ]
    ]
  ],
  "PayloadEncodingTests": [
    [
      "tests/test_client_regress/tests.py",
      [
        "PayloadEncodingTests"
      ]
    ]
  ],
  "DummyFile": [
    [
      "tests/test_client_regress/tests.py",
      [
        "DummyFile"
      ]
    ]
  ],
  "UploadedFileEncodingTest": [
    [
      "tests/test_client_regress/tests.py",
      [
        "UploadedFileEncodingTest"
      ]
    ]
  ],
  "RequestHeadersTest": [
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestHeadersTest"
      ]
    ]
  ],
  "ReadLimitedStreamTest": [
    [
      "tests/test_client_regress/tests.py",
      [
        "ReadLimitedStreamTest"
      ]
    ]
  ],
  "RequestFactoryStateTest": [
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestFactoryStateTest"
      ]
    ]
  ],
  "RequestFactoryEnvironmentTests": [
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestFactoryEnvironmentTests"
      ]
    ]
  ],
  "CustomTestException": [
    [
      "tests/test_client_regress/views.py",
      [
        "CustomTestException"
      ]
    ]
  ],
  "TestValidationError": [
    [
      "tests/test_exceptions/test_validation_error.py",
      [
        "TestValidationError"
      ]
    ]
  ],
  "ThroughBase": [
    [
      "tests/test_runner/models.py",
      [
        "ThroughBase"
      ]
    ]
  ],
  "Through": [
    [
      "tests/test_runner/models.py",
      [
        "Through"
      ]
    ]
  ],
  "CustomOptionsTestRunner": [
    [
      "tests/test_runner/runner.py",
      [
        "CustomOptionsTestRunner"
      ]
    ]
  ],
  "PassingTest": [
    [
      "tests/test_runner/test_debug_sql.py",
      [
        "TestDebugSQL",
        "PassingTest"
      ]
    ]
  ],
  "FailingTest": [
    [
      "tests/test_runner/test_debug_sql.py",
      [
        "TestDebugSQL",
        "FailingTest"
      ]
    ]
  ],
  "ErrorTest": [
    [
      "tests/test_runner/test_debug_sql.py",
      [
        "TestDebugSQL",
        "ErrorTest"
      ]
    ]
  ],
  "PassingSubTest": [
    [
      "tests/test_runner/test_debug_sql.py",
      [
        "TestDebugSQL",
        "PassingSubTest"
      ]
    ]
  ],
  "FailingSubTest": [
    [
      "tests/test_runner/test_debug_sql.py",
      [
        "TestDebugSQL",
        "FailingSubTest"
      ]
    ]
  ],
  "ErrorSubTest": [
    [
      "tests/test_runner/test_debug_sql.py",
      [
        "TestDebugSQL",
        "ErrorSubTest"
      ]
    ]
  ],
  "TestDebugSQL": [
    [
      "tests/test_runner/test_debug_sql.py",
      [
        "TestDebugSQL"
      ]
    ]
  ],
  "DiscoverRunnerTests": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests"
      ]
    ]
  ],
  "DiscoverRunnerGetDatabasesTests": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerGetDatabasesTests"
      ]
    ]
  ],
  "ExceptionThatFailsUnpickling": [
    [
      "tests/test_runner/test_parallel.py",
      [
        "ExceptionThatFailsUnpickling"
      ]
    ]
  ],
  "ParallelTestRunnerTest": [
    [
      "tests/test_runner/test_parallel.py",
      [
        "ParallelTestRunnerTest"
      ]
    ]
  ],
  "SampleFailingSubtest": [
    [
      "tests/test_runner/test_parallel.py",
      [
        "SampleFailingSubtest"
      ]
    ]
  ],
  "RemoteTestResultTest": [
    [
      "tests/test_runner/test_parallel.py",
      [
        "RemoteTestResultTest"
      ]
    ]
  ],
  "DependencyOrderingTests": [
    [
      "tests/test_runner/tests.py",
      [
        "DependencyOrderingTests"
      ]
    ]
  ],
  "MockTestRunner": [
    [
      "tests/test_runner/tests.py",
      [
        "MockTestRunner"
      ]
    ]
  ],
  "ManageCommandTests": [
    [
      "tests/test_runner/tests.py",
      [
        "ManageCommandTests"
      ]
    ]
  ],
  "CustomTestRunnerOptionsSettingsTests": [
    [
      "tests/test_runner/tests.py",
      [
        "CustomTestRunnerOptionsSettingsTests"
      ]
    ]
  ],
  "CustomTestRunnerOptionsCmdlineTests": [
    [
      "tests/test_runner/tests.py",
      [
        "CustomTestRunnerOptionsCmdlineTests"
      ]
    ]
  ],
  "Ticket17477RegressionTests": [
    [
      "tests/test_runner/tests.py",
      [
        "Ticket17477RegressionTests"
      ]
    ]
  ],
  "SQLiteInMemoryTestDbs": [
    [
      "tests/test_runner/tests.py",
      [
        "SQLiteInMemoryTestDbs"
      ]
    ]
  ],
  "DummyBackendTest": [
    [
      "tests/test_runner/tests.py",
      [
        "DummyBackendTest"
      ]
    ]
  ],
  "AliasedDefaultTestSetupTest": [
    [
      "tests/test_runner/tests.py",
      [
        "AliasedDefaultTestSetupTest"
      ]
    ]
  ],
  "SetupDatabasesTests": [
    [
      "tests/test_runner/tests.py",
      [
        "SetupDatabasesTests"
      ]
    ]
  ],
  "AutoIncrementResetTest": [
    [
      "tests/test_runner/tests.py",
      [
        "AutoIncrementResetTest"
      ]
    ]
  ],
  "EmptyDefaultDatabaseTest": [
    [
      "tests/test_runner/tests.py",
      [
        "EmptyDefaultDatabaseTest"
      ]
    ]
  ],
  "RunTestsExceptionHandlingTests": [
    [
      "tests/test_runner/tests.py",
      [
        "RunTestsExceptionHandlingTests"
      ]
    ]
  ],
  "NoDatabaseTests": [
    [
      "tests/test_runner_apps/databases/tests.py",
      [
        "NoDatabaseTests"
      ]
    ]
  ],
  "DefaultDatabaseTests": [
    [
      "tests/test_runner_apps/databases/tests.py",
      [
        "DefaultDatabaseTests"
      ]
    ]
  ],
  "OtherDatabaseTests": [
    [
      "tests/test_runner_apps/databases/tests.py",
      [
        "OtherDatabaseTests"
      ]
    ]
  ],
  "AllDatabasesTests": [
    [
      "tests/test_runner_apps/databases/tests.py",
      [
        "AllDatabasesTests"
      ]
    ]
  ],
  "TestVanillaUnittest": [
    [
      "tests/test_runner_apps/sample/tests_sample.py",
      [
        "TestVanillaUnittest"
      ]
    ]
  ],
  "TestDjangoTestCase": [
    [
      "tests/test_runner_apps/sample/tests_sample.py",
      [
        "TestDjangoTestCase"
      ]
    ]
  ],
  "TestZimpleTestCase": [
    [
      "tests/test_runner_apps/sample/tests_sample.py",
      [
        "TestZimpleTestCase"
      ]
    ]
  ],
  "EmptyTestCase": [
    [
      "tests/test_runner_apps/sample/tests_sample.py",
      [
        "EmptyTestCase"
      ]
    ]
  ],
  "DjangoCase1": [
    [
      "tests/test_runner_apps/simple/tests.py",
      [
        "DjangoCase1"
      ]
    ]
  ],
  "DjangoCase2": [
    [
      "tests/test_runner_apps/simple/tests.py",
      [
        "DjangoCase2"
      ]
    ]
  ],
  "SimpleCase1": [
    [
      "tests/test_runner_apps/simple/tests.py",
      [
        "SimpleCase1"
      ]
    ]
  ],
  "SimpleCase2": [
    [
      "tests/test_runner_apps/simple/tests.py",
      [
        "SimpleCase2"
      ]
    ]
  ],
  "UnittestCase1": [
    [
      "tests/test_runner_apps/simple/tests.py",
      [
        "UnittestCase1"
      ]
    ]
  ],
  "UnittestCase2": [
    [
      "tests/test_runner_apps/simple/tests.py",
      [
        "UnittestCase2"
      ]
    ]
  ],
  "TaggedTestCase": [
    [
      "tests/test_runner_apps/tagged/tests.py",
      [
        "TaggedTestCase"
      ]
    ]
  ],
  "FooBase": [
    [
      "tests/test_runner_apps/tagged/tests_inheritance.py",
      [
        "FooBase"
      ]
    ]
  ],
  "PossessedCar": [
    [
      "tests/test_utils/models.py",
      [
        "PossessedCar"
      ]
    ]
  ],
  "AllowDatabaseQueriesDeprecationTests": [
    [
      "tests/test_utils/test_deprecated_features.py",
      [
        "AllowDatabaseQueriesDeprecationTests"
      ]
    ]
  ],
  "MultiDbDeprecationTests": [
    [
      "tests/test_utils/test_deprecated_features.py",
      [
        "MultiDbDeprecationTests"
      ]
    ]
  ],
  "TestTestCase": [
    [
      "tests/test_utils/test_testcase.py",
      [
        "TestTestCase"
      ]
    ]
  ],
  "TestSerializedRollbackInhibitsPostMigrate": [
    [
      "tests/test_utils/test_transactiontestcase.py",
      [
        "TestSerializedRollbackInhibitsPostMigrate"
      ]
    ]
  ],
  "TransactionTestCaseDatabasesTests": [
    [
      "tests/test_utils/test_transactiontestcase.py",
      [
        "TransactionTestCaseDatabasesTests"
      ]
    ]
  ],
  "DisallowedDatabaseQueriesTests": [
    [
      "tests/test_utils/test_transactiontestcase.py",
      [
        "DisallowedDatabaseQueriesTests"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "DisallowedDatabaseQueriesTests"
      ]
    ]
  ],
  "SkipTestCase": [
    [
      "tests/test_utils/tests.py",
      [
        "SkippingTestCase",
        "test_skip_unless_db_feature",
        "SkipTestCase"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "SkippingTestCase",
        "test_skip_if_db_feature",
        "SkipTestCase"
      ]
    ]
  ],
  "SkippingTestCase": [
    [
      "tests/test_utils/tests.py",
      [
        "SkippingTestCase"
      ]
    ]
  ],
  "NotSkippedTests": [
    [
      "tests/test_utils/tests.py",
      [
        "SkippingClassTestCase",
        "test_skip_class_unless_db_feature",
        "NotSkippedTests"
      ]
    ]
  ],
  "SkippedTests": [
    [
      "tests/test_utils/tests.py",
      [
        "SkippingClassTestCase",
        "test_skip_class_unless_db_feature",
        "SkippedTests"
      ]
    ]
  ],
  "SkippedTestsSubclass": [
    [
      "tests/test_utils/tests.py",
      [
        "SkippingClassTestCase",
        "test_skip_class_unless_db_feature",
        "SkippedTestsSubclass"
      ]
    ]
  ],
  "SkippingClassTestCase": [
    [
      "tests/test_utils/tests.py",
      [
        "SkippingClassTestCase"
      ]
    ]
  ],
  "AssertNumQueriesTests": [
    [
      "tests/test_utils/tests.py",
      [
        "AssertNumQueriesTests"
      ]
    ]
  ],
  "AssertNumQueriesUponConnectionTests": [
    [
      "tests/test_utils/tests.py",
      [
        "AssertNumQueriesUponConnectionTests"
      ]
    ]
  ],
  "AssertQuerysetEqualTests": [
    [
      "tests/test_utils/tests.py",
      [
        "AssertQuerysetEqualTests"
      ]
    ]
  ],
  "CaptureQueriesContextManagerTests": [
    [
      "tests/test_utils/tests.py",
      [
        "CaptureQueriesContextManagerTests"
      ]
    ]
  ],
  "AssertNumQueriesContextManagerTests": [
    [
      "tests/test_utils/tests.py",
      [
        "AssertNumQueriesContextManagerTests"
      ]
    ]
  ],
  "AssertTemplateUsedContextManagerTests": [
    [
      "tests/test_utils/tests.py",
      [
        "AssertTemplateUsedContextManagerTests"
      ]
    ]
  ],
  "HTMLEqualTests": [
    [
      "tests/test_utils/tests.py",
      [
        "HTMLEqualTests"
      ]
    ]
  ],
  "JSONEqualTests": [
    [
      "tests/test_utils/tests.py",
      [
        "JSONEqualTests"
      ]
    ]
  ],
  "XMLEqualTests": [
    [
      "tests/test_utils/tests.py",
      [
        "XMLEqualTests"
      ]
    ]
  ],
  "SkippingExtraTests": [
    [
      "tests/test_utils/tests.py",
      [
        "SkippingExtraTests"
      ]
    ]
  ],
  "AssertRaisesMsgTest": [
    [
      "tests/test_utils/tests.py",
      [
        "AssertRaisesMsgTest"
      ]
    ]
  ],
  "AssertWarnsMessageTests": [
    [
      "tests/test_utils/tests.py",
      [
        "AssertWarnsMessageTests"
      ]
    ]
  ],
  "AssertFieldOutputTests": [
    [
      "tests/test_utils/tests.py",
      [
        "AssertFieldOutputTests"
      ]
    ]
  ],
  "AssertURLEqualTests": [
    [
      "tests/test_utils/tests.py",
      [
        "AssertURLEqualTests"
      ]
    ]
  ],
  "FirstUrls": [
    [
      "tests/test_utils/tests.py",
      [
        "FirstUrls"
      ]
    ]
  ],
  "SecondUrls": [
    [
      "tests/test_utils/tests.py",
      [
        "SecondUrls"
      ]
    ]
  ],
  "SetupTestEnvironmentTests": [
    [
      "tests/test_utils/tests.py",
      [
        "SetupTestEnvironmentTests"
      ]
    ]
  ],
  "OverrideSettingsTests": [
    [
      "tests/test_utils/tests.py",
      [
        "OverrideSettingsTests"
      ]
    ]
  ],
  "MyException": [
    [
      "tests/test_utils/tests.py",
      [
        "TestBadSetUpTestData",
        "MyException"
      ]
    ]
  ],
  "TestBadSetUpTestData": [
    [
      "tests/test_utils/tests.py",
      [
        "TestBadSetUpTestData"
      ]
    ]
  ],
  "AllowedDatabaseQueriesTests": [
    [
      "tests/test_utils/tests.py",
      [
        "AllowedDatabaseQueriesTests"
      ]
    ]
  ],
  "DatabaseAliasTests": [
    [
      "tests/test_utils/tests.py",
      [
        "DatabaseAliasTests"
      ]
    ]
  ],
  "IsolatedAppsTests": [
    [
      "tests/test_utils/tests.py",
      [
        "IsolatedAppsTests"
      ]
    ]
  ],
  "DoNothingDecorator": [
    [
      "tests/test_utils/tests.py",
      [
        "DoNothingDecorator"
      ]
    ]
  ],
  "TestContextDecoratorTests": [
    [
      "tests/test_utils/tests.py",
      [
        "TestContextDecoratorTests"
      ]
    ]
  ],
  "TimestampAdmin": [
    [
      "tests/timezones/admin.py",
      [
        "TimestampAdmin"
      ]
    ]
  ],
  "EventForm": [
    [
      "tests/timezones/forms.py",
      [
        "EventForm"
      ]
    ]
  ],
  "EventSplitForm": [
    [
      "tests/timezones/forms.py",
      [
        "EventSplitForm"
      ]
    ]
  ],
  "EventLocalizedForm": [
    [
      "tests/timezones/forms.py",
      [
        "EventLocalizedForm"
      ]
    ]
  ],
  "EventModelForm": [
    [
      "tests/timezones/forms.py",
      [
        "EventModelForm"
      ]
    ]
  ],
  "EventLocalizedModelForm": [
    [
      "tests/timezones/forms.py",
      [
        "EventLocalizedModelForm"
      ]
    ]
  ],
  "MaybeEvent": [
    [
      "tests/timezones/models.py",
      [
        "MaybeEvent"
      ]
    ]
  ],
  "SessionEvent": [
    [
      "tests/timezones/models.py",
      [
        "SessionEvent"
      ]
    ]
  ],
  "Timestamp": [
    [
      "tests/timezones/models.py",
      [
        "Timestamp"
      ]
    ]
  ],
  "AllDayEvent": [
    [
      "tests/timezones/models.py",
      [
        "AllDayEvent"
      ]
    ]
  ],
  "LegacyDatabaseTests": [
    [
      "tests/timezones/tests.py",
      [
        "LegacyDatabaseTests"
      ]
    ]
  ],
  "NewDatabaseTests": [
    [
      "tests/timezones/tests.py",
      [
        "NewDatabaseTests"
      ]
    ]
  ],
  "ForcedTimeZoneDatabaseTests": [
    [
      "tests/timezones/tests.py",
      [
        "ForcedTimeZoneDatabaseTests"
      ]
    ]
  ],
  "UnsupportedTimeZoneDatabaseTests": [
    [
      "tests/timezones/tests.py",
      [
        "UnsupportedTimeZoneDatabaseTests"
      ]
    ]
  ],
  "SerializationTests": [
    [
      "tests/timezones/tests.py",
      [
        "SerializationTests"
      ]
    ]
  ],
  "LegacyFormsTests": [
    [
      "tests/timezones/tests.py",
      [
        "LegacyFormsTests"
      ]
    ]
  ],
  "NewFormsTests": [
    [
      "tests/timezones/tests.py",
      [
        "NewFormsTests"
      ]
    ]
  ],
  "AdminTests": [
    [
      "tests/timezones/tests.py",
      [
        "AdminTests"
      ]
    ]
  ],
  "ForcedError": [
    [
      "tests/transaction_hooks/tests.py",
      [
        "ForcedError"
      ]
    ]
  ],
  "TestConnectionOnCommit": [
    [
      "tests/transaction_hooks/tests.py",
      [
        "TestConnectionOnCommit"
      ]
    ]
  ],
  "AtomicTests": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicTests"
      ]
    ]
  ],
  "AtomicInsideTransactionTests": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicInsideTransactionTests"
      ]
    ]
  ],
  "AtomicWithoutAutocommitTests": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicWithoutAutocommitTests"
      ]
    ]
  ],
  "AtomicMergeTests": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicMergeTests"
      ]
    ]
  ],
  "AtomicErrorsTests": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicErrorsTests"
      ]
    ]
  ],
  "AtomicMySQLTests": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicMySQLTests"
      ]
    ]
  ],
  "AtomicMiscTests": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicMiscTests"
      ]
    ]
  ],
  "NonAutocommitTests": [
    [
      "tests/transactions/tests.py",
      [
        "NonAutocommitTests"
      ]
    ]
  ],
  "A01": [
    [
      "tests/unmanaged_models/models.py",
      [
        "A01"
      ]
    ]
  ],
  "B01": [
    [
      "tests/unmanaged_models/models.py",
      [
        "B01"
      ]
    ]
  ],
  "C01": [
    [
      "tests/unmanaged_models/models.py",
      [
        "C01"
      ]
    ]
  ],
  "A02": [
    [
      "tests/unmanaged_models/models.py",
      [
        "A02"
      ]
    ]
  ],
  "B02": [
    [
      "tests/unmanaged_models/models.py",
      [
        "B02"
      ]
    ]
  ],
  "C02": [
    [
      "tests/unmanaged_models/models.py",
      [
        "C02"
      ]
    ]
  ],
  "Proxy1": [
    [
      "tests/unmanaged_models/models.py",
      [
        "Proxy1"
      ]
    ]
  ],
  "Proxy2": [
    [
      "tests/unmanaged_models/models.py",
      [
        "Proxy2"
      ]
    ]
  ],
  "Unmanaged1": [
    [
      "tests/unmanaged_models/models.py",
      [
        "Unmanaged1"
      ]
    ]
  ],
  "Unmanaged2": [
    [
      "tests/unmanaged_models/models.py",
      [
        "Unmanaged2"
      ]
    ]
  ],
  "Managed1": [
    [
      "tests/unmanaged_models/models.py",
      [
        "Managed1"
      ]
    ]
  ],
  "ManyToManyUnmanagedTests": [
    [
      "tests/unmanaged_models/tests.py",
      [
        "ManyToManyUnmanagedTests"
      ]
    ]
  ],
  "DataPoint": [
    [
      "tests/update/models.py",
      [
        "DataPoint"
      ]
    ]
  ],
  "RelatedPoint": [
    [
      "tests/update/models.py",
      [
        "RelatedPoint"
      ]
    ]
  ],
  "SimpleTest": [
    [
      "tests/update/tests.py",
      [
        "SimpleTest"
      ]
    ]
  ],
  "AdvancedTests": [
    [
      "tests/update/tests.py",
      [
        "AdvancedTests"
      ]
    ]
  ],
  "ProxyEmployee": [
    [
      "tests/update_only_fields/models.py",
      [
        "ProxyEmployee"
      ]
    ]
  ],
  "UpdateOnlyFieldsTests": [
    [
      "tests/update_only_fields/tests.py",
      [
        "UpdateOnlyFieldsTests"
      ]
    ]
  ],
  "Base64Converter": [
    [
      "tests/urlpatterns/converters.py",
      [
        "Base64Converter"
      ]
    ]
  ],
  "DynamicConverter": [
    [
      "tests/urlpatterns/converters.py",
      [
        "DynamicConverter"
      ]
    ]
  ],
  "RegexPatternTests": [
    [
      "tests/urlpatterns/test_resolvers.py",
      [
        "RegexPatternTests"
      ]
    ]
  ],
  "RoutePatternTests": [
    [
      "tests/urlpatterns/test_resolvers.py",
      [
        "RoutePatternTests"
      ]
    ]
  ],
  "SimplifiedURLTests": [
    [
      "tests/urlpatterns/tests.py",
      [
        "SimplifiedURLTests"
      ]
    ]
  ],
  "ConverterTests": [
    [
      "tests/urlpatterns/tests.py",
      [
        "ConverterTests"
      ]
    ]
  ],
  "ParameterRestrictionTests": [
    [
      "tests/urlpatterns/tests.py",
      [
        "ParameterRestrictionTests"
      ]
    ]
  ],
  "ConversionExceptionTests": [
    [
      "tests/urlpatterns/tests.py",
      [
        "ConversionExceptionTests"
      ]
    ]
  ],
  "ViewContainer": [
    [
      "tests/urlpatterns_reverse/method_view_urls.py",
      [
        "ViewContainer"
      ]
    ]
  ],
  "ChangeURLconfMiddleware": [
    [
      "tests/urlpatterns_reverse/middleware.py",
      [
        "ChangeURLconfMiddleware"
      ]
    ]
  ],
  "NullChangeURLconfMiddleware": [
    [
      "tests/urlpatterns_reverse/middleware.py",
      [
        "NullChangeURLconfMiddleware"
      ]
    ]
  ],
  "ReverseInnerInResponseMiddleware": [
    [
      "tests/urlpatterns_reverse/middleware.py",
      [
        "ReverseInnerInResponseMiddleware"
      ]
    ]
  ],
  "ReverseOuterInResponseMiddleware": [
    [
      "tests/urlpatterns_reverse/middleware.py",
      [
        "ReverseOuterInResponseMiddleware"
      ]
    ]
  ],
  "ReverseInnerInStreaming": [
    [
      "tests/urlpatterns_reverse/middleware.py",
      [
        "ReverseInnerInStreaming"
      ]
    ]
  ],
  "ReverseOuterInStreaming": [
    [
      "tests/urlpatterns_reverse/middleware.py",
      [
        "ReverseOuterInStreaming"
      ]
    ]
  ],
  "View3": [
    [
      "tests/urlpatterns_reverse/nested_urls.py",
      [
        "View3"
      ]
    ]
  ],
  "LocaleRegexDescriptorTests": [
    [
      "tests/urlpatterns_reverse/test_localeregexdescriptor.py",
      [
        "LocaleRegexDescriptorTests"
      ]
    ]
  ],
  "NoURLPatternsTests": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "NoURLPatternsTests"
      ]
    ]
  ],
  "URLPatternReverse": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "URLPatternReverse"
      ]
    ]
  ],
  "ResolverTests": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ResolverTests"
      ]
    ]
  ],
  "ReverseLazyTest": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ReverseLazyTest"
      ]
    ]
  ],
  "ReverseLazySettingsTest": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ReverseLazySettingsTest"
      ]
    ]
  ],
  "ReverseShortcutTests": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ReverseShortcutTests"
      ]
    ]
  ],
  "NamespaceTests": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "NamespaceTests"
      ]
    ]
  ],
  "RequestURLconfTests": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "RequestURLconfTests"
      ]
    ]
  ],
  "ErrorHandlerResolutionTests": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ErrorHandlerResolutionTests"
      ]
    ]
  ],
  "DefaultErrorHandlerTests": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "DefaultErrorHandlerTests"
      ]
    ]
  ],
  "NoRootUrlConfTests": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "NoRootUrlConfTests"
      ]
    ]
  ],
  "ResolverMatchTests": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ResolverMatchTests"
      ]
    ]
  ],
  "ErroneousViewTests": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ErroneousViewTests"
      ]
    ]
  ],
  "ViewLoadingTests": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ViewLoadingTests"
      ]
    ]
  ],
  "LookaheadTests": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "LookaheadTests"
      ]
    ]
  ],
  "URLObject": [
    [
      "tests/urlpatterns_reverse/utils.py",
      [
        "URLObject"
      ]
    ]
  ],
  "ViewClass": [
    [
      "tests/urlpatterns_reverse/views.py",
      [
        "ViewClass"
      ]
    ]
  ],
  "LazyRedirectView": [
    [
      "tests/urlpatterns_reverse/views.py",
      [
        "LazyRedirectView"
      ]
    ]
  ],
  "CommandTests": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandTests"
      ]
    ]
  ],
  "CommandRunTests": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandRunTests"
      ]
    ]
  ],
  "CategoryInfo": [
    [
      "tests/utils_tests/models.py",
      [
        "CategoryInfo"
      ]
    ]
  ],
  "ArchiveTester": [
    [
      "tests/utils_tests/test_archive.py",
      [
        "ArchiveTester"
      ]
    ]
  ],
  "TestZip": [
    [
      "tests/utils_tests/test_archive.py",
      [
        "TestZip"
      ]
    ]
  ],
  "TestTar": [
    [
      "tests/utils_tests/test_archive.py",
      [
        "TestTar"
      ]
    ]
  ],
  "TestGzipTar": [
    [
      "tests/utils_tests/test_archive.py",
      [
        "TestGzipTar"
      ]
    ]
  ],
  "TestBzip2Tar": [
    [
      "tests/utils_tests/test_archive.py",
      [
        "TestBzip2Tar"
      ]
    ]
  ],
  "TestIterModulesAndFiles": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestIterModulesAndFiles"
      ]
    ]
  ],
  "TestCommonRoots": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestCommonRoots"
      ]
    ]
  ],
  "TestSysPathDirectories": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestSysPathDirectories"
      ]
    ]
  ],
  "GetReloaderTests": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "GetReloaderTests"
      ]
    ]
  ],
  "RunWithReloaderTests": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "RunWithReloaderTests"
      ]
    ]
  ],
  "StartDjangoTests": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "StartDjangoTests"
      ]
    ]
  ],
  "TestCheckErrors": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestCheckErrors"
      ]
    ]
  ],
  "TestRaiseLastException": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestRaiseLastException"
      ]
    ]
  ],
  "RestartWithReloaderTests": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "RestartWithReloaderTests"
      ]
    ]
  ],
  "ReloaderTests": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "ReloaderTests"
      ]
    ]
  ],
  "IntegrationTests": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "IntegrationTests"
      ]
    ]
  ],
  "BaseReloaderTests": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "BaseReloaderTests"
      ]
    ]
  ],
  "WatchmanReloaderTests": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "WatchmanReloaderTests"
      ]
    ]
  ],
  "StatReloaderTests": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "StatReloaderTests"
      ]
    ]
  ],
  "TestBaseConv": [
    [
      "tests/utils_tests/test_baseconv.py",
      [
        "TestBaseConv"
      ]
    ]
  ],
  "TestUtilsCryptoMisc": [
    [
      "tests/utils_tests/test_crypto.py",
      [
        "TestUtilsCryptoMisc"
      ]
    ]
  ],
  "TestUtilsCryptoPBKDF2": [
    [
      "tests/utils_tests/test_crypto.py",
      [
        "TestUtilsCryptoPBKDF2"
      ]
    ]
  ],
  "OrderedSetTests": [
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "OrderedSetTests"
      ]
    ]
  ],
  "MultiValueDictTests": [
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "MultiValueDictTests"
      ]
    ]
  ],
  "ImmutableListTests": [
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "ImmutableListTests"
      ]
    ]
  ],
  "DictWrapperTests": [
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "DictWrapperTests"
      ]
    ]
  ],
  "CaseInsensitiveMappingTests": [
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "CaseInsensitiveMappingTests"
      ]
    ]
  ],
  "DateFormatTests": [
    [
      "tests/utils_tests/test_dateformat.py",
      [
        "DateFormatTests"
      ]
    ]
  ],
  "DateParseTests": [
    [
      "tests/utils_tests/test_dateparse.py",
      [
        "DateParseTests"
      ]
    ]
  ],
  "DurationParseTests": [
    [
      "tests/utils_tests/test_dateparse.py",
      [
        "DurationParseTests"
      ]
    ]
  ],
  "DatetimeTests": [
    [
      "tests/utils_tests/test_datetime_safe.py",
      [
        "DatetimeTests"
      ]
    ]
  ],
  "ClassProcessView": [
    [
      "tests/utils_tests/test_decorators.py",
      [
        "ClassProcessView"
      ]
    ]
  ],
  "FullMiddleware": [
    [
      "tests/utils_tests/test_decorators.py",
      [
        "FullMiddleware"
      ]
    ]
  ],
  "DecoratorFromMiddlewareTests": [
    [
      "tests/utils_tests/test_decorators.py",
      [
        "DecoratorFromMiddlewareTests"
      ]
    ]
  ],
  "ClassPropertyTest": [
    [
      "tests/utils_tests/test_decorators.py",
      [
        "ClassPropertyTest"
      ]
    ]
  ],
  "TestDurationString": [
    [
      "tests/utils_tests/test_duration.py",
      [
        "TestDurationString"
      ]
    ]
  ],
  "TestParseDurationRoundtrip": [
    [
      "tests/utils_tests/test_duration.py",
      [
        "TestParseDurationRoundtrip"
      ]
    ]
  ],
  "TestISODurationString": [
    [
      "tests/utils_tests/test_duration.py",
      [
        "TestISODurationString"
      ]
    ]
  ],
  "TestParseISODurationRoundtrip": [
    [
      "tests/utils_tests/test_duration.py",
      [
        "TestParseISODurationRoundtrip"
      ]
    ]
  ],
  "TestDurationMicroseconds": [
    [
      "tests/utils_tests/test_duration.py",
      [
        "TestDurationMicroseconds"
      ]
    ]
  ],
  "TestEncodingUtils": [
    [
      "tests/utils_tests/test_encoding.py",
      [
        "TestEncodingUtils"
      ]
    ]
  ],
  "TestRFC3987IEncodingUtils": [
    [
      "tests/utils_tests/test_encoding.py",
      [
        "TestRFC3987IEncodingUtils"
      ]
    ]
  ],
  "TestDeprecatedEncodingUtils": [
    [
      "tests/utils_tests/test_encoding_deprecations.py",
      [
        "TestDeprecatedEncodingUtils"
      ]
    ]
  ],
  "FeedgeneratorTests": [
    [
      "tests/utils_tests/test_feedgenerator.py",
      [
        "FeedgeneratorTests"
      ]
    ]
  ],
  "SubClass": [
    [
      "tests/utils_tests/test_functional.py",
      [
        "FunctionalTests",
        "assertCachedPropertyWorks",
        "with_self_subTest_attr_at",
        "SubClass"
      ]
    ]
  ],
  "FunctionalTests": [
    [
      "tests/utils_tests/test_functional.py",
      [
        "FunctionalTests"
      ]
    ]
  ],
  "TestHashable": [
    [
      "tests/utils_tests/test_hashable.py",
      [
        "TestHashable"
      ]
    ]
  ],
  "TestUtilsHtml": [
    [
      "tests/utils_tests/test_html.py",
      [
        "TestUtilsHtml"
      ]
    ]
  ],
  "URLEncodeTests": [
    [
      "tests/utils_tests/test_http.py",
      [
        "URLEncodeTests"
      ]
    ]
  ],
  "Base36IntTests": [
    [
      "tests/utils_tests/test_http.py",
      [
        "Base36IntTests"
      ]
    ]
  ],
  "IsSafeURLTests": [
    [
      "tests/utils_tests/test_http.py",
      [
        "IsSafeURLTests"
      ]
    ]
  ],
  "URLSafeBase64Tests": [
    [
      "tests/utils_tests/test_http.py",
      [
        "URLSafeBase64Tests"
      ]
    ]
  ],
  "URLQuoteTests": [
    [
      "tests/utils_tests/test_http.py",
      [
        "URLQuoteTests"
      ]
    ]
  ],
  "IsSameDomainTests": [
    [
      "tests/utils_tests/test_http.py",
      [
        "IsSameDomainTests"
      ]
    ]
  ],
  "ETagProcessingTests": [
    [
      "tests/utils_tests/test_http.py",
      [
        "ETagProcessingTests"
      ]
    ]
  ],
  "HttpDateProcessingTests": [
    [
      "tests/utils_tests/test_http.py",
      [
        "HttpDateProcessingTests"
      ]
    ]
  ],
  "EscapeLeadingSlashesTests": [
    [
      "tests/utils_tests/test_http.py",
      [
        "EscapeLeadingSlashesTests"
      ]
    ]
  ],
  "TestInspectMethods": [
    [
      "tests/utils_tests/test_inspect.py",
      [
        "TestInspectMethods"
      ]
    ]
  ],
  "TestUtilsIPv6": [
    [
      "tests/utils_tests/test_ipv6.py",
      [
        "TestUtilsIPv6"
      ]
    ]
  ],
  "JsTokensTest": [
    [
      "tests/utils_tests/test_jslex.py",
      [
        "JsTokensTest"
      ]
    ]
  ],
  "JsToCForGettextTest": [
    [
      "tests/utils_tests/test_jslex.py",
      [
        "JsToCForGettextTest"
      ]
    ]
  ],
  "LazyObjectTestCase": [
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase"
      ]
    ]
  ],
  "SimpleLazyObjectTestCase": [
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "SimpleLazyObjectTestCase"
      ]
    ]
  ],
  "BaseBaz": [
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "BaseBaz"
      ]
    ]
  ],
  "Baz": [
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "Baz"
      ]
    ]
  ],
  "BazProxy": [
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "BazProxy"
      ]
    ]
  ],
  "SimpleLazyObjectPickleTestCase": [
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "SimpleLazyObjectPickleTestCase"
      ]
    ]
  ],
  "LoremIpsumTests": [
    [
      "tests/utils_tests/test_lorem_ipsum.py",
      [
        "LoremIpsumTests"
      ]
    ]
  ],
  "SiteMock": [
    [
      "tests/utils_tests/test_module/__init__.py",
      [
        "SiteMock"
      ]
    ]
  ],
  "DefaultLoader": [
    [
      "tests/utils_tests/test_module_loading.py",
      [
        "DefaultLoader"
      ]
    ]
  ],
  "EggLoader": [
    [
      "tests/utils_tests/test_module_loading.py",
      [
        "EggLoader"
      ]
    ]
  ],
  "ModuleImportTests": [
    [
      "tests/utils_tests/test_module_loading.py",
      [
        "ModuleImportTests"
      ]
    ]
  ],
  "AutodiscoverModulesTestCase": [
    [
      "tests/utils_tests/test_module_loading.py",
      [
        "AutodiscoverModulesTestCase"
      ]
    ]
  ],
  "TestFinder": [
    [
      "tests/utils_tests/test_module_loading.py",
      [
        "TestFinder"
      ]
    ]
  ],
  "TestLoader": [
    [
      "tests/utils_tests/test_module_loading.py",
      [
        "TestLoader"
      ]
    ]
  ],
  "CustomLoader": [
    [
      "tests/utils_tests/test_module_loading.py",
      [
        "CustomLoader"
      ]
    ]
  ],
  "TestNumberFormat": [
    [
      "tests/utils_tests/test_numberformat.py",
      [
        "TestNumberFormat"
      ]
    ]
  ],
  "SafeJoinTests": [
    [
      "tests/utils_tests/test_os_utils.py",
      [
        "SafeJoinTests"
      ]
    ]
  ],
  "NormalizeTests": [
    [
      "tests/utils_tests/test_regex_helper.py",
      [
        "NormalizeTests"
      ]
    ]
  ],
  "customescape": [
    [
      "tests/utils_tests/test_safestring.py",
      [
        "customescape"
      ]
    ]
  ],
  "SafeStringTest": [
    [
      "tests/utils_tests/test_safestring.py",
      [
        "SafeStringTest"
      ]
    ]
  ],
  "TestUtilsSimpleLazyObjectDjangoTestCase": [
    [
      "tests/utils_tests/test_simplelazyobject.py",
      [
        "TestUtilsSimpleLazyObjectDjangoTestCase"
      ]
    ]
  ],
  "TermColorTests": [
    [
      "tests/utils_tests/test_termcolors.py",
      [
        "TermColorTests"
      ]
    ]
  ],
  "TestUtilsText": [
    [
      "tests/utils_tests/test_text.py",
      [
        "TestUtilsText"
      ]
    ]
  ],
  "TimezoneTests": [
    [
      "tests/utils_tests/test_timezone.py",
      [
        "TimezoneTests"
      ]
    ]
  ],
  "ValidationAssertions": [
    [
      "tests/validation/__init__.py",
      [
        "ValidationAssertions"
      ]
    ]
  ],
  "ModelToValidate": [
    [
      "tests/validation/models.py",
      [
        "ModelToValidate"
      ]
    ]
  ],
  "UniqueFieldsModel": [
    [
      "tests/validation/models.py",
      [
        "UniqueFieldsModel"
      ]
    ]
  ],
  "CustomPKModel": [
    [
      "tests/validation/models.py",
      [
        "CustomPKModel"
      ]
    ]
  ],
  "UniqueForDateModel": [
    [
      "tests/validation/models.py",
      [
        "UniqueForDateModel"
      ]
    ]
  ],
  "CustomMessagesModel": [
    [
      "tests/validation/models.py",
      [
        "CustomMessagesModel"
      ]
    ]
  ],
  "UniqueErrorsModel": [
    [
      "tests/validation/models.py",
      [
        "UniqueErrorsModel"
      ]
    ]
  ],
  "GenericIPAddressTestModel": [
    [
      "tests/validation/models.py",
      [
        "GenericIPAddressTestModel"
      ]
    ]
  ],
  "GenericIPAddrUnpackUniqueTest": [
    [
      "tests/validation/models.py",
      [
        "GenericIPAddrUnpackUniqueTest"
      ]
    ]
  ],
  "CustomMessagesTests": [
    [
      "tests/validation/test_custom_messages.py",
      [
        "CustomMessagesTests"
      ]
    ]
  ],
  "ValidationMessagesTest": [
    [
      "tests/validation/test_error_messages.py",
      [
        "ValidationMessagesTest"
      ]
    ]
  ],
  "PickableValidationErrorTestCase": [
    [
      "tests/validation/test_picklable.py",
      [
        "PickableValidationErrorTestCase"
      ]
    ]
  ],
  "GetUniqueCheckTests": [
    [
      "tests/validation/test_unique.py",
      [
        "GetUniqueCheckTests"
      ]
    ]
  ],
  "PerformUniqueChecksTest": [
    [
      "tests/validation/test_unique.py",
      [
        "PerformUniqueChecksTest"
      ]
    ]
  ],
  "TestModelsWithValidators": [
    [
      "tests/validation/test_validators.py",
      [
        "TestModelsWithValidators"
      ]
    ]
  ],
  "BaseModelValidationTests": [
    [
      "tests/validation/tests.py",
      [
        "BaseModelValidationTests"
      ]
    ]
  ],
  "ModelFormsTests": [
    [
      "tests/validation/tests.py",
      [
        "ModelFormsTests"
      ]
    ]
  ],
  "TestValidatorEquality": [
    [
      "tests/validators/tests.py",
      [
        "TestValidatorEquality"
      ]
    ]
  ],
  "VersionTests": [
    [
      "tests/version/tests.py",
      [
        "VersionTests"
      ]
    ]
  ],
  "BaseArticle": [
    [
      "tests/view_tests/models.py",
      [
        "BaseArticle"
      ]
    ]
  ],
  "UrlArticle": [
    [
      "tests/view_tests/models.py",
      [
        "UrlArticle"
      ]
    ]
  ],
  "DateArticle": [
    [
      "tests/view_tests/models.py",
      [
        "DateArticle"
      ]
    ]
  ],
  "CsrfViewTests": [
    [
      "tests/view_tests/tests/test_csrf.py",
      [
        "CsrfViewTests"
      ]
    ]
  ],
  "WithoutEmptyPathUrls": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "WithoutEmptyPathUrls"
      ]
    ]
  ],
  "CallableSettingWrapperTests": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "CallableSettingWrapperTests"
      ]
    ]
  ],
  "DebugViewTests": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "DebugViewTests"
      ]
    ]
  ],
  "DebugViewQueriesAllowedTests": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "DebugViewQueriesAllowedTests"
      ]
    ]
  ],
  "NonDjangoTemplatesDebugViewTests": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "NonDjangoTemplatesDebugViewTests"
      ]
    ]
  ],
  "ExceptionUser": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterTests",
        "test_exception_fetching_user",
        "ExceptionUser"
      ]
    ]
  ],
  "ExceptionReporterTests": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterTests"
      ]
    ]
  ],
  "PlainTextReportTests": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "PlainTextReportTests"
      ]
    ]
  ],
  "ExceptionReportTestMixin": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReportTestMixin"
      ]
    ]
  ],
  "ExceptionReporterFilterTests": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterFilterTests"
      ]
    ]
  ],
  "AjaxResponseExceptionReporterFilter": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "AjaxResponseExceptionReporterFilter"
      ]
    ]
  ],
  "HelperFunctionTests": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "HelperFunctionTests"
      ]
    ]
  ],
  "DefaultsTests": [
    [
      "tests/view_tests/tests/test_defaults.py",
      [
        "DefaultsTests"
      ]
    ]
  ],
  "SetLanguageTests": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "SetLanguageTests"
      ]
    ]
  ],
  "I18NViewTests": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "I18NViewTests"
      ]
    ]
  ],
  "I18nSeleniumTests": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "I18nSeleniumTests"
      ]
    ]
  ],
  "URLHandling": [
    [
      "tests/view_tests/tests/test_specials.py",
      [
        "URLHandling"
      ]
    ]
  ],
  "StaticTests": [
    [
      "tests/view_tests/tests/test_static.py",
      [
        "StaticTests"
      ]
    ]
  ],
  "StaticHelperTest": [
    [
      "tests/view_tests/tests/test_static.py",
      [
        "StaticHelperTest"
      ]
    ]
  ],
  "StaticUtilsTests": [
    [
      "tests/view_tests/tests/test_static.py",
      [
        "StaticUtilsTests"
      ]
    ]
  ],
  "Http404View": [
    [
      "tests/view_tests/views.py",
      [
        "Http404View"
      ]
    ]
  ],
  "UnsafeExceptionReporterFilter": [
    [
      "tests/view_tests/views.py",
      [
        "UnsafeExceptionReporterFilter"
      ]
    ]
  ],
  "WSGITest": [
    [
      "tests/wsgi/tests.py",
      [
        "WSGITest"
      ]
    ]
  ],
  "GetInternalWSGIApplicationTest": [
    [
      "tests/wsgi/tests.py",
      [
        "GetInternalWSGIApplicationTest"
      ]
    ]
  ]
}