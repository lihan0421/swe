{
  "MyAstroidChecker": [
    [
      "examples/custom.py",
      [
        "MyAstroidChecker"
      ]
    ]
  ],
  "MyRawChecker": [
    [
      "examples/custom_raw.py",
      [
        "MyRawChecker"
      ]
    ]
  ],
  "DeprecationChecker": [
    [
      "examples/deprecation_checker.py",
      [
        "DeprecationChecker"
      ]
    ]
  ],
  "AsyncChecker": [
    [
      "pylint/checkers/async.py",
      [
        "AsyncChecker"
      ]
    ]
  ],
  "NamingStyle": [
    [
      "pylint/checkers/base.py",
      [
        "NamingStyle"
      ]
    ]
  ],
  "SnakeCaseStyle": [
    [
      "pylint/checkers/base.py",
      [
        "SnakeCaseStyle"
      ]
    ]
  ],
  "CamelCaseStyle": [
    [
      "pylint/checkers/base.py",
      [
        "CamelCaseStyle"
      ]
    ]
  ],
  "PascalCaseStyle": [
    [
      "pylint/checkers/base.py",
      [
        "PascalCaseStyle"
      ]
    ]
  ],
  "UpperCaseStyle": [
    [
      "pylint/checkers/base.py",
      [
        "UpperCaseStyle"
      ]
    ]
  ],
  "AnyStyle": [
    [
      "pylint/checkers/base.py",
      [
        "AnyStyle"
      ]
    ]
  ],
  "_BasicChecker": [
    [
      "pylint/checkers/base.py",
      [
        "_BasicChecker"
      ]
    ]
  ],
  "BasicErrorChecker": [
    [
      "pylint/checkers/base.py",
      [
        "BasicErrorChecker"
      ]
    ]
  ],
  "BasicChecker": [
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker"
      ]
    ]
  ],
  "NameChecker": [
    [
      "pylint/checkers/base.py",
      [
        "NameChecker"
      ]
    ]
  ],
  "DocStringChecker": [
    [
      "pylint/checkers/base.py",
      [
        "DocStringChecker"
      ]
    ]
  ],
  "PassChecker": [
    [
      "pylint/checkers/base.py",
      [
        "PassChecker"
      ]
    ]
  ],
  "ComparisonChecker": [
    [
      "pylint/checkers/base.py",
      [
        "ComparisonChecker"
      ]
    ]
  ],
  "BaseChecker": [
    [
      "pylint/checkers/base_checker.py",
      [
        "BaseChecker"
      ]
    ]
  ],
  "BaseTokenChecker": [
    [
      "pylint/checkers/base_checker.py",
      [
        "BaseTokenChecker"
      ]
    ]
  ],
  "ScopeAccessMap": [
    [
      "pylint/checkers/classes.py",
      [
        "ScopeAccessMap"
      ]
    ]
  ],
  "ClassChecker": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker"
      ]
    ]
  ],
  "SpecialMethodsChecker": [
    [
      "pylint/checkers/classes.py",
      [
        "SpecialMethodsChecker"
      ]
    ]
  ],
  "DeprecatedMixin": [
    [
      "pylint/checkers/deprecated.py",
      [
        "DeprecatedMixin"
      ]
    ]
  ],
  "MisdesignChecker": [
    [
      "pylint/checkers/design_analysis.py",
      [
        "MisdesignChecker"
      ]
    ]
  ],
  "BaseVisitor": [
    [
      "pylint/checkers/exceptions.py",
      [
        "BaseVisitor"
      ]
    ]
  ],
  "ExceptionRaiseRefVisitor": [
    [
      "pylint/checkers/exceptions.py",
      [
        "ExceptionRaiseRefVisitor"
      ]
    ]
  ],
  "ExceptionRaiseLeafVisitor": [
    [
      "pylint/checkers/exceptions.py",
      [
        "ExceptionRaiseLeafVisitor"
      ]
    ]
  ],
  "ExceptionsChecker": [
    [
      "pylint/checkers/exceptions.py",
      [
        "ExceptionsChecker"
      ]
    ]
  ],
  "TokenWrapper": [
    [
      "pylint/checkers/format.py",
      [
        "TokenWrapper"
      ]
    ]
  ],
  "FormatChecker": [
    [
      "pylint/checkers/format.py",
      [
        "FormatChecker"
      ]
    ]
  ],
  "ImportsChecker": [
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker"
      ]
    ]
  ],
  "LoggingChecker": [
    [
      "pylint/checkers/logging.py",
      [
        "LoggingChecker"
      ]
    ]
  ],
  "MapReduceMixin": [
    [
      "pylint/checkers/mapreduce_checker.py",
      [
        "MapReduceMixin"
      ]
    ]
  ],
  "ByIdManagedMessagesChecker": [
    [
      "pylint/checkers/misc.py",
      [
        "ByIdManagedMessagesChecker"
      ]
    ]
  ],
  "EncodingChecker": [
    [
      "pylint/checkers/misc.py",
      [
        "EncodingChecker"
      ]
    ]
  ],
  "NewStyleConflictChecker": [
    [
      "pylint/checkers/newstyle.py",
      [
        "NewStyleConflictChecker"
      ]
    ]
  ],
  "Python3Checker": [
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker"
      ]
    ]
  ],
  "Python3TokenChecker": [
    [
      "pylint/checkers/python3.py",
      [
        "Python3TokenChecker"
      ]
    ]
  ],
  "RawMetricsChecker": [
    [
      "pylint/checkers/raw_metrics.py",
      [
        "RawMetricsChecker"
      ]
    ]
  ],
  "LenChecker": [
    [
      "pylint/checkers/refactoring/len_checker.py",
      [
        "LenChecker"
      ]
    ]
  ],
  "NotChecker": [
    [
      "pylint/checkers/refactoring/not_checker.py",
      [
        "NotChecker"
      ]
    ]
  ],
  "RecommendationChecker": [
    [
      "pylint/checkers/refactoring/recommendation_checker.py",
      [
        "RecommendationChecker"
      ]
    ]
  ],
  "RefactoringChecker": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker"
      ]
    ]
  ],
  "Similar": [
    [
      "pylint/checkers/similar.py",
      [
        "Similar"
      ]
    ]
  ],
  "LineSet": [
    [
      "pylint/checkers/similar.py",
      [
        "LineSet"
      ]
    ]
  ],
  "SimilarChecker": [
    [
      "pylint/checkers/similar.py",
      [
        "SimilarChecker"
      ]
    ]
  ],
  "WordsWithDigitsFilter": [
    [
      "pylint/checkers/spelling.py",
      [
        "WordsWithDigitsFilter"
      ]
    ]
  ],
  "WordsWithUnderscores": [
    [
      "pylint/checkers/spelling.py",
      [
        "WordsWithUnderscores"
      ]
    ]
  ],
  "RegExFilter": [
    [
      "pylint/checkers/spelling.py",
      [
        "RegExFilter"
      ]
    ]
  ],
  "CamelCasedWord": [
    [
      "pylint/checkers/spelling.py",
      [
        "CamelCasedWord"
      ]
    ]
  ],
  "SphinxDirectives": [
    [
      "pylint/checkers/spelling.py",
      [
        "SphinxDirectives"
      ]
    ]
  ],
  "ForwardSlashChunker": [
    [
      "pylint/checkers/spelling.py",
      [
        "ForwardSlashChunker"
      ]
    ]
  ],
  "SpellingChecker": [
    [
      "pylint/checkers/spelling.py",
      [
        "SpellingChecker"
      ]
    ]
  ],
  "StdlibChecker": [
    [
      "pylint/checkers/stdlib.py",
      [
        "StdlibChecker"
      ]
    ]
  ],
  "StringFormatChecker": [
    [
      "pylint/checkers/strings.py",
      [
        "StringFormatChecker"
      ]
    ]
  ],
  "StringConstantChecker": [
    [
      "pylint/checkers/strings.py",
      [
        "StringConstantChecker"
      ]
    ]
  ],
  "TypeChecker": [
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker"
      ]
    ]
  ],
  "IterableChecker": [
    [
      "pylint/checkers/typecheck.py",
      [
        "IterableChecker"
      ]
    ]
  ],
  "NoSuchArgumentError": [
    [
      "pylint/checkers/utils.py",
      [
        "NoSuchArgumentError"
      ]
    ]
  ],
  "InferredTypeError": [
    [
      "pylint/checkers/utils.py",
      [
        "InferredTypeError"
      ]
    ]
  ],
  "IncompleteFormatString": [
    [
      "pylint/checkers/utils.py",
      [
        "IncompleteFormatString"
      ]
    ]
  ],
  "UnsupportedFormatCharacter": [
    [
      "pylint/checkers/utils.py",
      [
        "UnsupportedFormatCharacter"
      ]
    ]
  ],
  "NamesConsumer": [
    [
      "pylint/checkers/variables.py",
      [
        "NamesConsumer"
      ]
    ]
  ],
  "VariablesChecker": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker"
      ]
    ]
  ],
  "ConfigurationMixIn": [
    [
      "pylint/config/configuration_mixin.py",
      [
        "ConfigurationMixIn"
      ]
    ]
  ],
  "_ManHelpFormatter": [
    [
      "pylint/config/man_help_formatter.py",
      [
        "_ManHelpFormatter"
      ]
    ]
  ],
  "Option": [
    [
      "pylint/config/option.py",
      [
        "Option"
      ]
    ]
  ],
  "OptionsManagerMixIn": [
    [
      "pylint/config/option_manager_mixin.py",
      [
        "OptionsManagerMixIn"
      ]
    ]
  ],
  "OptionParser": [
    [
      "pylint/config/option_parser.py",
      [
        "OptionParser"
      ]
    ]
  ],
  "UnsupportedAction": [
    [
      "pylint/config/options_provider_mixin.py",
      [
        "UnsupportedAction"
      ]
    ]
  ],
  "OptionsProviderMixIn": [
    [
      "pylint/config/options_provider_mixin.py",
      [
        "OptionsProviderMixIn"
      ]
    ]
  ],
  "WarningScope": [
    [
      "pylint/constants.py",
      [
        "WarningScope"
      ]
    ]
  ],
  "InvalidMessageError": [
    [
      "pylint/exceptions.py",
      [
        "InvalidMessageError"
      ]
    ]
  ],
  "UnknownMessageError": [
    [
      "pylint/exceptions.py",
      [
        "UnknownMessageError"
      ]
    ]
  ],
  "EmptyReportError": [
    [
      "pylint/exceptions.py",
      [
        "EmptyReportError"
      ]
    ]
  ],
  "InvalidReporterError": [
    [
      "pylint/exceptions.py",
      [
        "InvalidReporterError"
      ]
    ]
  ],
  "InvalidArgsError": [
    [
      "pylint/exceptions.py",
      [
        "InvalidArgsError"
      ]
    ]
  ],
  "Docstring": [
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "Docstring"
      ]
    ]
  ],
  "SphinxDocstring": [
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "SphinxDocstring"
      ]
    ]
  ],
  "EpytextDocstring": [
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "EpytextDocstring"
      ]
    ]
  ],
  "GoogleDocstring": [
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "GoogleDocstring"
      ]
    ]
  ],
  "NumpyDocstring": [
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "NumpyDocstring"
      ]
    ]
  ],
  "BadBuiltinChecker": [
    [
      "pylint/extensions/bad_builtin.py",
      [
        "BadBuiltinChecker"
      ]
    ]
  ],
  "BroadTryClauseChecker": [
    [
      "pylint/extensions/broad_try_clause.py",
      [
        "BroadTryClauseChecker"
      ]
    ]
  ],
  "ElseifUsedChecker": [
    [
      "pylint/extensions/check_elif.py",
      [
        "ElseifUsedChecker"
      ]
    ]
  ],
  "CodeStyleChecker": [
    [
      "pylint/extensions/code_style.py",
      [
        "CodeStyleChecker"
      ]
    ]
  ],
  "CompareToZeroChecker": [
    [
      "pylint/extensions/comparetozero.py",
      [
        "CompareToZeroChecker"
      ]
    ]
  ],
  "ConfusingConsecutiveElifChecker": [
    [
      "pylint/extensions/confusing_elif.py",
      [
        "ConfusingConsecutiveElifChecker"
      ]
    ]
  ],
  "DocstringParameterChecker": [
    [
      "pylint/extensions/docparams.py",
      [
        "DocstringParameterChecker"
      ]
    ]
  ],
  "DocStringStyleChecker": [
    [
      "pylint/extensions/docstyle.py",
      [
        "DocStringStyleChecker"
      ]
    ]
  ],
  "CommentChecker": [
    [
      "pylint/extensions/empty_comment.py",
      [
        "CommentChecker"
      ]
    ]
  ],
  "CompareToEmptyStringChecker": [
    [
      "pylint/extensions/emptystring.py",
      [
        "CompareToEmptyStringChecker"
      ]
    ]
  ],
  "PathGraph": [
    [
      "pylint/extensions/mccabe.py",
      [
        "PathGraph"
      ]
    ]
  ],
  "PathGraphingAstVisitor": [
    [
      "pylint/extensions/mccabe.py",
      [
        "PathGraphingAstVisitor"
      ]
    ]
  ],
  "McCabeMethodChecker": [
    [
      "pylint/extensions/mccabe.py",
      [
        "McCabeMethodChecker"
      ]
    ]
  ],
  "OverlappingExceptionsChecker": [
    [
      "pylint/extensions/overlapping_exceptions.py",
      [
        "OverlappingExceptionsChecker"
      ]
    ]
  ],
  "MultipleTypesChecker": [
    [
      "pylint/extensions/redefined_variable_type.py",
      [
        "MultipleTypesChecker"
      ]
    ]
  ],
  "TypingAlias": [
    [
      "pylint/extensions/typing.py",
      [
        "TypingAlias"
      ]
    ]
  ],
  "DeprecatedTypingAliasMsg": [
    [
      "pylint/extensions/typing.py",
      [
        "DeprecatedTypingAliasMsg"
      ]
    ]
  ],
  "TypingChecker": [
    [
      "pylint/extensions/typing.py",
      [
        "TypingChecker"
      ]
    ]
  ],
  "DotBackend": [
    [
      "pylint/graph.py",
      [
        "DotBackend"
      ]
    ]
  ],
  "Interface": [
    [
      "pylint/interfaces.py",
      [
        "Interface"
      ]
    ],
    [
      "tests/data/suppliermodule_test.py",
      [
        "Interface"
      ]
    ]
  ],
  "IChecker": [
    [
      "pylint/interfaces.py",
      [
        "IChecker"
      ]
    ]
  ],
  "IRawChecker": [
    [
      "pylint/interfaces.py",
      [
        "IRawChecker"
      ]
    ]
  ],
  "ITokenChecker": [
    [
      "pylint/interfaces.py",
      [
        "ITokenChecker"
      ]
    ]
  ],
  "IAstroidChecker": [
    [
      "pylint/interfaces.py",
      [
        "IAstroidChecker"
      ]
    ]
  ],
  "IReporter": [
    [
      "pylint/interfaces.py",
      [
        "IReporter"
      ]
    ]
  ],
  "PyLinter": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter"
      ]
    ]
  ],
  "Run": [
    [
      "pylint/lint/run.py",
      [
        "Run"
      ]
    ],
    [
      "pylint/pyreverse/main.py",
      [
        "Run"
      ]
    ]
  ],
  "ArgumentPreprocessingError": [
    [
      "pylint/lint/utils.py",
      [
        "ArgumentPreprocessingError"
      ]
    ]
  ],
  "Message": [
    [
      "pylint/message/message.py",
      [
        "Message"
      ]
    ],
    [
      "pylint/testutils/output_line.py",
      [
        "Message"
      ]
    ]
  ],
  "MessageDefinition": [
    [
      "pylint/message/message_definition.py",
      [
        "MessageDefinition"
      ]
    ]
  ],
  "MessageDefinitionStore": [
    [
      "pylint/message/message_definition_store.py",
      [
        "MessageDefinitionStore"
      ]
    ]
  ],
  "MessagesHandlerMixIn": [
    [
      "pylint/message/message_handler_mix_in.py",
      [
        "MessagesHandlerMixIn"
      ]
    ]
  ],
  "MessageIdStore": [
    [
      "pylint/message/message_id_store.py",
      [
        "MessageIdStore"
      ]
    ]
  ],
  "DiaDefGenerator": [
    [
      "pylint/pyreverse/diadefslib.py",
      [
        "DiaDefGenerator"
      ]
    ]
  ],
  "DefaultDiadefGenerator": [
    [
      "pylint/pyreverse/diadefslib.py",
      [
        "DefaultDiadefGenerator"
      ]
    ]
  ],
  "ClassDiadefGenerator": [
    [
      "pylint/pyreverse/diadefslib.py",
      [
        "ClassDiadefGenerator"
      ]
    ]
  ],
  "DiadefsHandler": [
    [
      "pylint/pyreverse/diadefslib.py",
      [
        "DiadefsHandler"
      ]
    ]
  ],
  "Figure": [
    [
      "pylint/pyreverse/diagrams.py",
      [
        "Figure"
      ]
    ]
  ],
  "Relationship": [
    [
      "pylint/pyreverse/diagrams.py",
      [
        "Relationship"
      ]
    ]
  ],
  "DiagramEntity": [
    [
      "pylint/pyreverse/diagrams.py",
      [
        "DiagramEntity"
      ]
    ]
  ],
  "ClassDiagram": [
    [
      "pylint/pyreverse/diagrams.py",
      [
        "ClassDiagram"
      ]
    ]
  ],
  "PackageDiagram": [
    [
      "pylint/pyreverse/diagrams.py",
      [
        "PackageDiagram"
      ]
    ]
  ],
  "IdGeneratorMixIn": [
    [
      "pylint/pyreverse/inspector.py",
      [
        "IdGeneratorMixIn"
      ]
    ]
  ],
  "Linker": [
    [
      "pylint/pyreverse/inspector.py",
      [
        "Linker"
      ]
    ]
  ],
  "Project": [
    [
      "pylint/pyreverse/inspector.py",
      [
        "Project"
      ]
    ]
  ],
  "FilterMixIn": [
    [
      "pylint/pyreverse/utils.py",
      [
        "FilterMixIn"
      ]
    ]
  ],
  "ASTWalker": [
    [
      "pylint/pyreverse/utils.py",
      [
        "ASTWalker"
      ]
    ],
    [
      "pylint/utils/ast_walker.py",
      [
        "ASTWalker"
      ]
    ]
  ],
  "LocalsVisitor": [
    [
      "pylint/pyreverse/utils.py",
      [
        "LocalsVisitor"
      ]
    ]
  ],
  "VCGPrinter": [
    [
      "pylint/pyreverse/vcgutils.py",
      [
        "VCGPrinter"
      ]
    ]
  ],
  "DiagramWriter": [
    [
      "pylint/pyreverse/writer.py",
      [
        "DiagramWriter"
      ]
    ]
  ],
  "DotWriter": [
    [
      "pylint/pyreverse/writer.py",
      [
        "DotWriter"
      ]
    ]
  ],
  "VCGWriter": [
    [
      "pylint/pyreverse/writer.py",
      [
        "VCGWriter"
      ]
    ]
  ],
  "BaseReporter": [
    [
      "pylint/reporters/base_reporter.py",
      [
        "BaseReporter"
      ]
    ]
  ],
  "CollectingReporter": [
    [
      "pylint/reporters/collecting_reporter.py",
      [
        "CollectingReporter"
      ]
    ]
  ],
  "JSONReporter": [
    [
      "pylint/reporters/json_reporter.py",
      [
        "JSONReporter"
      ]
    ]
  ],
  "MultiReporter": [
    [
      "pylint/reporters/multi_reporter.py",
      [
        "MultiReporter"
      ]
    ],
    [
      "tests/test_self.py",
      [
        "MultiReporter"
      ]
    ]
  ],
  "ReportsHandlerMixIn": [
    [
      "pylint/reporters/reports_handler_mix_in.py",
      [
        "ReportsHandlerMixIn"
      ]
    ]
  ],
  "TextReporter": [
    [
      "pylint/reporters/text.py",
      [
        "TextReporter"
      ]
    ]
  ],
  "ParseableTextReporter": [
    [
      "pylint/reporters/text.py",
      [
        "ParseableTextReporter"
      ]
    ]
  ],
  "VSTextReporter": [
    [
      "pylint/reporters/text.py",
      [
        "VSTextReporter"
      ]
    ]
  ],
  "ColorizedTextReporter": [
    [
      "pylint/reporters/text.py",
      [
        "ColorizedTextReporter"
      ]
    ]
  ],
  "BaseWriter": [
    [
      "pylint/reporters/ureports/__init__.py",
      [
        "BaseWriter"
      ]
    ]
  ],
  "VNode": [
    [
      "pylint/reporters/ureports/nodes.py",
      [
        "VNode"
      ]
    ]
  ],
  "BaseLayout": [
    [
      "pylint/reporters/ureports/nodes.py",
      [
        "BaseLayout"
      ]
    ]
  ],
  "Text": [
    [
      "pylint/reporters/ureports/nodes.py",
      [
        "Text"
      ]
    ],
    [
      "tests/functional/a/arguments.py",
      [
        "Text"
      ]
    ]
  ],
  "VerbatimText": [
    [
      "pylint/reporters/ureports/nodes.py",
      [
        "VerbatimText"
      ]
    ]
  ],
  "Section": [
    [
      "pylint/reporters/ureports/nodes.py",
      [
        "Section"
      ]
    ]
  ],
  "EvaluationSection": [
    [
      "pylint/reporters/ureports/nodes.py",
      [
        "EvaluationSection"
      ]
    ]
  ],
  "Title": [
    [
      "pylint/reporters/ureports/nodes.py",
      [
        "Title"
      ]
    ]
  ],
  "Paragraph": [
    [
      "pylint/reporters/ureports/nodes.py",
      [
        "Paragraph"
      ]
    ]
  ],
  "Table": [
    [
      "pylint/reporters/ureports/nodes.py",
      [
        "Table"
      ]
    ]
  ],
  "TextWriter": [
    [
      "pylint/reporters/ureports/text_writer.py",
      [
        "TextWriter"
      ]
    ]
  ],
  "CheckerTestCase": [
    [
      "pylint/testutils/checker_test_case.py",
      [
        "CheckerTestCase"
      ]
    ]
  ],
  "NoFileError": [
    [
      "pylint/testutils/functional_test_file.py",
      [
        "NoFileError"
      ]
    ]
  ],
  "FunctionalTestFile": [
    [
      "pylint/testutils/functional_test_file.py",
      [
        "FunctionalTestFile"
      ]
    ]
  ],
  "LintModuleTest": [
    [
      "pylint/testutils/lint_module_test.py",
      [
        "LintModuleTest"
      ]
    ]
  ],
  "MalformedOutputLineException": [
    [
      "pylint/testutils/output_line.py",
      [
        "MalformedOutputLineException"
      ]
    ]
  ],
  "OutputLine": [
    [
      "pylint/testutils/output_line.py",
      [
        "OutputLine"
      ]
    ]
  ],
  "GenericTestReporter": [
    [
      "pylint/testutils/reporter_for_tests.py",
      [
        "GenericTestReporter"
      ]
    ]
  ],
  "MinimalTestReporter": [
    [
      "pylint/testutils/reporter_for_tests.py",
      [
        "MinimalTestReporter"
      ]
    ]
  ],
  "FunctionalTestReporter": [
    [
      "pylint/testutils/reporter_for_tests.py",
      [
        "FunctionalTestReporter"
      ]
    ]
  ],
  "UnittestLinter": [
    [
      "pylint/testutils/unittest_linter.py",
      [
        "UnittestLinter"
      ]
    ]
  ],
  "FileState": [
    [
      "pylint/utils/file_state.py",
      [
        "FileState"
      ]
    ]
  ],
  "PragmaParserError": [
    [
      "pylint/utils/pragma_parser.py",
      [
        "PragmaParserError"
      ]
    ]
  ],
  "UnRecognizedOptionError": [
    [
      "pylint/utils/pragma_parser.py",
      [
        "UnRecognizedOptionError"
      ]
    ]
  ],
  "InvalidPragmaError": [
    [
      "pylint/utils/pragma_parser.py",
      [
        "InvalidPragmaError"
      ]
    ]
  ],
  "IsortDriver": [
    [
      "pylint/utils/utils.py",
      [
        "IsortDriver"
      ]
    ]
  ],
  "CustomHelpFormatter": [
    [
      "script/fix_documentation.py",
      [
        "CustomHelpFormatter"
      ]
    ]
  ],
  "SleepingChecker": [
    [
      "tests/benchmark/test_baseline_benchmarks.py",
      [
        "SleepingChecker"
      ]
    ]
  ],
  "SleepingCheckerLong": [
    [
      "tests/benchmark/test_baseline_benchmarks.py",
      [
        "SleepingCheckerLong"
      ]
    ]
  ],
  "NoWorkChecker": [
    [
      "tests/benchmark/test_baseline_benchmarks.py",
      [
        "NoWorkChecker"
      ]
    ]
  ],
  "TestEstablishBaselineBenchmarks": [
    [
      "tests/benchmark/test_baseline_benchmarks.py",
      [
        "TestEstablishBaselineBenchmarks"
      ]
    ]
  ],
  "TestDocstring": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestDocstring"
      ]
    ]
  ],
  "TestNameChecker": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestNameChecker"
      ]
    ]
  ],
  "TestMultiNamingStyle": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestMultiNamingStyle"
      ]
    ]
  ],
  "TestComparison": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestComparison"
      ]
    ]
  ],
  "TestNamePresets": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestNamePresets"
      ]
    ]
  ],
  "OtherBasicChecker": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestBaseChecker",
        "test_doc",
        "OtherBasicChecker"
      ]
    ]
  ],
  "LessBasicChecker": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestBaseChecker",
        "test_doc",
        "LessBasicChecker"
      ]
    ]
  ],
  "TestBaseChecker": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestBaseChecker"
      ]
    ]
  ],
  "TestNoSix": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestNoSix"
      ]
    ]
  ],
  "TestVariablesChecker": [
    [
      "tests/checkers/unittest_classes.py",
      [
        "TestVariablesChecker"
      ]
    ],
    [
      "tests/checkers/unittest_variables.py",
      [
        "TestVariablesChecker"
      ]
    ]
  ],
  "_DeprecatedChecker": [
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "_DeprecatedChecker"
      ]
    ]
  ],
  "TestDeprecatedChecker": [
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "TestDeprecatedChecker"
      ]
    ]
  ],
  "TestExceptionsChecker": [
    [
      "tests/checkers/unittest_exceptions.py",
      [
        "TestExceptionsChecker"
      ]
    ]
  ],
  "TestMultiStatementLine": [
    [
      "tests/checkers/unittest_format.py",
      [
        "TestMultiStatementLine"
      ]
    ]
  ],
  "TestSuperfluousParentheses": [
    [
      "tests/checkers/unittest_format.py",
      [
        "TestSuperfluousParentheses"
      ]
    ]
  ],
  "TestCheckSpace": [
    [
      "tests/checkers/unittest_format.py",
      [
        "TestCheckSpace"
      ]
    ]
  ],
  "TestImportsChecker": [
    [
      "tests/checkers/unittest_imports.py",
      [
        "TestImportsChecker"
      ]
    ]
  ],
  "TestLoggingModuleDetection": [
    [
      "tests/checkers/unittest_logging.py",
      [
        "TestLoggingModuleDetection"
      ]
    ]
  ],
  "TestFixme": [
    [
      "tests/checkers/unittest_misc.py",
      [
        "TestFixme"
      ]
    ]
  ],
  "TestPython3Checker": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker"
      ]
    ]
  ],
  "TestSpellingChecker": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker"
      ]
    ]
  ],
  "TestStdlibChecker": [
    [
      "tests/checkers/unittest_stdlib.py",
      [
        "TestStdlibChecker"
      ]
    ]
  ],
  "TestStringChecker": [
    [
      "tests/checkers/unittest_strings.py",
      [
        "TestStringChecker"
      ]
    ]
  ],
  "TestTypeChecker": [
    [
      "tests/checkers/unittest_typecheck.py",
      [
        "TestTypeChecker"
      ]
    ]
  ],
  "TestTypeCheckerOnDecorators": [
    [
      "tests/checkers/unittest_typecheck.py",
      [
        "TestTypeCheckerOnDecorators"
      ]
    ]
  ],
  "TestVariablesCheckerWithTearDown": [
    [
      "tests/checkers/unittest_variables.py",
      [
        "TestVariablesCheckerWithTearDown"
      ]
    ]
  ],
  "TestMissingSubmodule": [
    [
      "tests/checkers/unittest_variables.py",
      [
        "TestMissingSubmodule"
      ]
    ]
  ],
  "Ancestor": [
    [
      "tests/data/clientmodule_test.py",
      [
        "Ancestor"
      ]
    ],
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "Ancestor"
      ]
    ]
  ],
  "Specialization": [
    [
      "tests/data/clientmodule_test.py",
      [
        "Specialization"
      ]
    ]
  ],
  "DoNothing": [
    [
      "tests/data/suppliermodule_test.py",
      [
        "DoNothing"
      ]
    ]
  ],
  "FFFF": [
    [
      "tests/extensions/data/docstring.py",
      [
        "FFFF"
      ]
    ]
  ],
  "MyClass1": [
    [
      "tests/extensions/data/mccabe.py",
      [
        "MyClass1"
      ]
    ]
  ],
  "SomeException": [
    [
      "tests/extensions/data/overlapping_exceptions.py",
      [
        "SomeException"
      ]
    ]
  ],
  "SubclassException": [
    [
      "tests/extensions/data/overlapping_exceptions.py",
      [
        "SubclassException"
      ]
    ]
  ],
  "Klass": [
    [
      "tests/extensions/data/redefined.py",
      [
        "MyClass",
        "Klass"
      ]
    ],
    [
      "tests/functional/g/generated_members.py",
      [
        "Klass"
      ]
    ],
    [
      "tests/functional/n/name/names_in__all__.py",
      [
        "Klass"
      ]
    ],
    [
      "tests/functional/t/too/too_few_public_methods.py",
      [
        "Klass"
      ]
    ],
    [
      "tests/functional/u/unnecessary/unnecessary_not.py",
      [
        "Klass"
      ]
    ],
    [
      "tests/regrtest_data/special_attr_scope_lookup_crash.py",
      [
        "Klass"
      ]
    ]
  ],
  "MyClass": [
    [
      "tests/extensions/data/redefined.py",
      [
        "MyClass"
      ]
    ],
    [
      "tests/functional/a/access/access_to_protected_members.py",
      [
        "MyClass"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "MyClass"
      ]
    ],
    [
      "tests/functional/b/base_init_vars.py",
      [
        "MyClass"
      ]
    ],
    [
      "tests/functional/c/class_members_py30.py",
      [
        "MyClass"
      ]
    ],
    [
      "tests/functional/c/consider/consider_using_enumerate.py",
      [
        "MyClass"
      ]
    ],
    [
      "tests/functional/d/deprecated/deprecated_decorators.py",
      [
        "MyClass"
      ]
    ],
    [
      "tests/functional/g/genexp_in_class_scope.py",
      [
        "MyClass"
      ]
    ],
    [
      "tests/functional/i/iterable_context.py",
      [
        "MyClass"
      ]
    ],
    [
      "tests/functional/m/mapping_context.py",
      [
        "MyClass"
      ]
    ],
    [
      "tests/functional/m/misplaced_comparison_constant.py",
      [
        "MyClass"
      ]
    ],
    [
      "tests/functional/m/missing/missing_self_argument.py",
      [
        "MyClass"
      ]
    ],
    [
      "tests/functional/n/name/namePresetCamelCase.py",
      [
        "MyClass"
      ]
    ],
    [
      "tests/functional/n/name/name_preset_snake_case.py",
      [
        "MyClass"
      ]
    ],
    [
      "tests/functional/n/no/no_classmethod_decorator.py",
      [
        "MyClass"
      ]
    ],
    [
      "tests/functional/n/no/no_staticmethod_decorator.py",
      [
        "MyClass"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_activated_with_alias.py",
      [
        "MyClass"
      ]
    ],
    [
      "tests/functional/p/protected_access_access_different_scopes.py",
      [
        "MyClass"
      ]
    ],
    [
      "tests/functional/r/recursion/recursion_error_2667.py",
      [
        "MyClass"
      ]
    ],
    [
      "tests/functional/r/regression/regression_3091.py",
      [
        "MyClass"
      ]
    ],
    [
      "tests/functional/r/return_in_init.py",
      [
        "MyClass"
      ]
    ],
    [
      "tests/functional/t/too/too_many_arguments.py",
      [
        "MyClass"
      ]
    ],
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "MyClass"
      ]
    ]
  ],
  "BroadTryClauseTestReporter": [
    [
      "tests/extensions/test_broad_try_clause.py",
      [
        "BroadTryClauseTestReporter"
      ]
    ]
  ],
  "BroadTryClauseTC": [
    [
      "tests/extensions/test_broad_try_clause.py",
      [
        "BroadTryClauseTC"
      ]
    ]
  ],
  "TestParamDocChecker": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker"
      ]
    ]
  ],
  "TestDocstringCheckerRaise": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise"
      ]
    ]
  ],
  "TestDocstringCheckerReturn": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn"
      ]
    ]
  ],
  "TestDocstringCheckerYield": [
    [
      "tests/extensions/test_check_yields_docs.py",
      [
        "TestDocstringCheckerYield"
      ]
    ]
  ],
  "CompareToZeroTestReporter": [
    [
      "tests/extensions/test_comparetozero.py",
      [
        "CompareToZeroTestReporter"
      ]
    ]
  ],
  "CompareToZeroUsedTC": [
    [
      "tests/extensions/test_comparetozero.py",
      [
        "CompareToZeroUsedTC"
      ]
    ]
  ],
  "TestConfusingConsecutiveElifChecker": [
    [
      "tests/extensions/test_confusing_elif.py",
      [
        "TestConfusingConsecutiveElifChecker"
      ]
    ]
  ],
  "Parent": [
    [
      "tests/functional/a/abstract/abstract_abc_methods.py",
      [
        "Parent"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Parent"
      ]
    ],
    [
      "tests/functional/a/arguments_renamed.py",
      [
        "Parent"
      ]
    ],
    [
      "tests/functional/a/assign/assignment_from_no_return.py",
      [
        "Parent"
      ]
    ],
    [
      "tests/functional/c/cached_property.py",
      [
        "Parent"
      ]
    ],
    [
      "tests/functional/i/init_not_called.py",
      [
        "Parent"
      ]
    ],
    [
      "tests/functional/m/member/member_checks_hints.py",
      [
        "Parent"
      ]
    ],
    [
      "tests/functional/m/member/member_checks_no_hints.py",
      [
        "Parent"
      ]
    ],
    [
      "tests/functional/m/missing/missing_kwoa_py3.py",
      [
        "Parent"
      ]
    ],
    [
      "tests/functional/r/regression/regression_properties_in_class_context.py",
      [
        "Parent"
      ]
    ],
    [
      "tests/functional/r/regression/regression_property_no_member_844.py",
      [
        "Parent"
      ]
    ],
    [
      "tests/functional/s/slots_checks.py",
      [
        "Parent"
      ]
    ],
    [
      "tests/functional/u/unsupported/unsupported_binary_operation.py",
      [
        "Parent"
      ]
    ],
    [
      "tests/functional/u/unused/unused_import_class_def_keyword.py",
      [
        "Parent"
      ]
    ]
  ],
  "Child": [
    [
      "tests/functional/a/abstract/abstract_abc_methods.py",
      [
        "Child"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Child"
      ]
    ],
    [
      "tests/functional/a/arguments_renamed.py",
      [
        "Child"
      ]
    ],
    [
      "tests/functional/a/assign/assignment_from_no_return.py",
      [
        "Child"
      ]
    ],
    [
      "tests/functional/c/cached_property.py",
      [
        "Child"
      ]
    ],
    [
      "tests/functional/i/init_not_called.py",
      [
        "Child"
      ]
    ],
    [
      "tests/functional/m/member/member_checks_hints.py",
      [
        "Child"
      ]
    ],
    [
      "tests/functional/m/member/member_checks_no_hints.py",
      [
        "Child"
      ]
    ],
    [
      "tests/functional/m/missing/missing_kwoa_py3.py",
      [
        "Child"
      ]
    ],
    [
      "tests/functional/r/regression/regression_properties_in_class_context.py",
      [
        "Child"
      ]
    ],
    [
      "tests/functional/r/regression/regression_property_no_member_844.py",
      [
        "Child"
      ]
    ],
    [
      "tests/functional/u/unsupported/unsupported_binary_operation.py",
      [
        "Child"
      ]
    ],
    [
      "tests/functional/u/unused/unused_import_class_def_keyword.py",
      [
        "Child"
      ]
    ]
  ],
  "Ala": [
    [
      "tests/functional/a/abstract/abstract_class_instantiated_in_class.py",
      [
        "Ala"
      ]
    ]
  ],
  "GoodClass": [
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "GoodClass"
      ]
    ]
  ],
  "SecondGoodClass": [
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "SecondGoodClass"
      ]
    ]
  ],
  "ThirdGoodClass": [
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "ThirdGoodClass"
      ]
    ]
  ],
  "BadClass": [
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "BadClass"
      ]
    ],
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py34.py",
      [
        "BadClass"
      ]
    ]
  ],
  "SecondBadClass": [
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "SecondBadClass"
      ]
    ]
  ],
  "ThirdBadClass": [
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "ThirdBadClass"
      ]
    ]
  ],
  "Structure": [
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "Structure"
      ]
    ],
    [
      "tests/functional/a/abstract/abstract_method_py3.py",
      [
        "Structure"
      ]
    ]
  ],
  "Container": [
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "Container"
      ]
    ],
    [
      "tests/functional/a/abstract/abstract_method_py3.py",
      [
        "Container"
      ]
    ]
  ],
  "Sizable": [
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "Sizable"
      ]
    ],
    [
      "tests/functional/a/abstract/abstract_method_py3.py",
      [
        "Sizable"
      ]
    ]
  ],
  "Hashable": [
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "Hashable"
      ]
    ],
    [
      "tests/functional/a/abstract/abstract_method_py3.py",
      [
        "Hashable"
      ]
    ]
  ],
  "Iterator": [
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "Iterator"
      ]
    ],
    [
      "tests/functional/a/abstract/abstract_method_py3.py",
      [
        "Iterator"
      ]
    ]
  ],
  "AbstractSizable": [
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "AbstractSizable"
      ]
    ],
    [
      "tests/functional/a/abstract/abstract_method_py3.py",
      [
        "AbstractSizable"
      ]
    ]
  ],
  "NoMroAbstractMethods": [
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "NoMroAbstractMethods"
      ]
    ]
  ],
  "BadMroAbstractMethods": [
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "BadMroAbstractMethods"
      ]
    ]
  ],
  "SomeMetaclass": [
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "SomeMetaclass"
      ]
    ]
  ],
  "FourthGoodClass": [
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "FourthGoodClass"
      ]
    ]
  ],
  "Abstract": [
    [
      "tests/functional/a/abstract/abstract_method_py3.py",
      [
        "Abstract"
      ]
    ],
    [
      "tests/functional/a/assign/assigment_from_no_return.py",
      [
        "Abstract"
      ]
    ]
  ],
  "AbstractB": [
    [
      "tests/functional/a/abstract/abstract_method_py3.py",
      [
        "AbstractB"
      ]
    ]
  ],
  "AbstractC": [
    [
      "tests/functional/a/abstract/abstract_method_py3.py",
      [
        "AbstractC"
      ]
    ]
  ],
  "AbstractD": [
    [
      "tests/functional/a/abstract/abstract_method_py3.py",
      [
        "AbstractD"
      ]
    ]
  ],
  "Concrete": [
    [
      "tests/functional/a/abstract/abstract_method_py3.py",
      [
        "Concrete"
      ]
    ]
  ],
  "GoodComplexMRO": [
    [
      "tests/functional/a/abstract/abstract_method_py3.py",
      [
        "GoodComplexMRO"
      ]
    ]
  ],
  "BadComplexMro": [
    [
      "tests/functional/a/abstract/abstract_method_py3.py",
      [
        "BadComplexMro"
      ]
    ]
  ],
  "SeeTelnet": [
    [
      "tests/functional/a/access/access_attr_before_def_false_positive.py",
      [
        "SeeTelnet"
      ]
    ]
  ],
  "Base": [
    [
      "tests/functional/a/access/access_attr_before_def_false_positive.py",
      [
        "Base"
      ]
    ],
    [
      "tests/functional/a/assign/assigning_non_slot_4509.py",
      [
        "Base"
      ]
    ],
    [
      "tests/functional/n/no/no_self_use.py",
      [
        "Base"
      ]
    ],
    [
      "tests/functional/r/regression/regression_2913.py",
      [
        "Base"
      ]
    ],
    [
      "tests/functional/t/typing_generic.py",
      [
        "Base"
      ]
    ],
    [
      "tests/functional/u/unsupported/unsupported_binary_operation.py",
      [
        "Base"
      ]
    ],
    [
      "tests/functional/u/unused/unused_argument.py",
      [
        "Base"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "Base"
      ]
    ],
    [
      "tests/functional/w/with_using_generator.py",
      [
        "Base"
      ]
    ]
  ],
  "Derived": [
    [
      "tests/functional/a/access/access_attr_before_def_false_positive.py",
      [
        "Derived"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_related.py",
      [
        "Derived"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_related_py39.py",
      [
        "Derived"
      ]
    ]
  ],
  "QoSALConnection": [
    [
      "tests/functional/a/access/access_attr_before_def_false_positive.py",
      [
        "QoSALConnection"
      ]
    ]
  ],
  "DefinedOutsideInit": [
    [
      "tests/functional/a/access/access_attr_before_def_false_positive.py",
      [
        "DefinedOutsideInit"
      ]
    ]
  ],
  "Aaaa": [
    [
      "tests/functional/a/access/access_member_before_definition.py",
      [
        "Aaaa"
      ]
    ],
    [
      "tests/functional/a/access/access_to__name__.py",
      [
        "Aaaa"
      ]
    ],
    [
      "tests/functional/d/dotted_ancestor.py",
      [
        "Aaaa"
      ]
    ],
    [
      "tests/functional/s/super/super_checks.py",
      [
        "Aaaa"
      ]
    ],
    [
      "tests/functional/t/too/too_few_public_methods.py",
      [
        "Aaaa"
      ]
    ],
    [
      "tests/functional/t/too/too_many_ancestors.py",
      [
        "Aaaa"
      ]
    ],
    [
      "tests/functional/t/too/too_many_instance_attributes.py",
      [
        "Aaaa"
      ]
    ],
    [
      "tests/functional/t/too/too_many_public_methods.py",
      [
        "Aaaa"
      ]
    ]
  ],
  "Bbbb": [
    [
      "tests/functional/a/access/access_member_before_definition.py",
      [
        "Bbbb"
      ]
    ],
    [
      "tests/functional/t/too/too_many_ancestors.py",
      [
        "Bbbb"
      ]
    ]
  ],
  "Mixin": [
    [
      "tests/functional/a/access/access_member_before_definition.py",
      [
        "Mixin"
      ]
    ],
    [
      "tests/functional/a/attribute_defined_outside_init.py",
      [
        "Mixin"
      ]
    ],
    [
      "tests/functional/m/member/member_checks.py",
      [
        "Mixin"
      ]
    ]
  ],
  "NewClass": [
    [
      "tests/functional/a/access/access_to__name__.py",
      [
        "NewClass"
      ]
    ],
    [
      "tests/functional/c/class_members_py30.py",
      [
        "NewClass"
      ]
    ]
  ],
  "Subclass": [
    [
      "tests/functional/a/access/access_to_protected_members.py",
      [
        "Subclass"
      ]
    ]
  ],
  "Issue1031": [
    [
      "tests/functional/a/access/access_to_protected_members.py",
      [
        "Issue1031"
      ]
    ]
  ],
  "Issue1802": [
    [
      "tests/functional/a/access/access_to_protected_members.py",
      [
        "Issue1802"
      ]
    ]
  ],
  "Issue1159OtherClass": [
    [
      "tests/functional/a/access/access_to_protected_members.py",
      [
        "Issue1159OtherClass"
      ]
    ]
  ],
  "Issue1159": [
    [
      "tests/functional/a/access/access_to_protected_members.py",
      [
        "Issue1159"
      ]
    ]
  ],
  "Issue1159Subclass": [
    [
      "tests/functional/a/access/access_to_protected_members.py",
      [
        "Issue1159Subclass"
      ]
    ]
  ],
  "CustomCls": [
    [
      "tests/functional/a/alternative/alternative_union_syntax.py",
      [
        "CustomCls"
      ]
    ],
    [
      "tests/functional/a/alternative/alternative_union_syntax_error.py",
      [
        "CustomCls"
      ]
    ],
    [
      "tests/functional/a/alternative/alternative_union_syntax_py37.py",
      [
        "CustomCls"
      ]
    ]
  ],
  "CustomNamedTuple2": [
    [
      "tests/functional/a/alternative/alternative_union_syntax.py",
      [
        "CustomNamedTuple2"
      ]
    ],
    [
      "tests/functional/a/alternative/alternative_union_syntax_error.py",
      [
        "CustomNamedTuple2"
      ]
    ],
    [
      "tests/functional/a/alternative/alternative_union_syntax_py37.py",
      [
        "CustomNamedTuple2"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585.py",
      [
        "CustomNamedTuple2"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_error.py",
      [
        "CustomNamedTuple2"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_py39.py",
      [
        "CustomNamedTuple2"
      ]
    ]
  ],
  "CustomNamedTuple3": [
    [
      "tests/functional/a/alternative/alternative_union_syntax.py",
      [
        "CustomNamedTuple3"
      ]
    ],
    [
      "tests/functional/a/alternative/alternative_union_syntax_error.py",
      [
        "CustomNamedTuple3"
      ]
    ],
    [
      "tests/functional/a/alternative/alternative_union_syntax_py37.py",
      [
        "CustomNamedTuple3"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585.py",
      [
        "CustomNamedTuple3"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_error.py",
      [
        "CustomNamedTuple3"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_py39.py",
      [
        "CustomNamedTuple3"
      ]
    ]
  ],
  "CustomTypedDict3": [
    [
      "tests/functional/a/alternative/alternative_union_syntax.py",
      [
        "CustomTypedDict3"
      ]
    ],
    [
      "tests/functional/a/alternative/alternative_union_syntax_error.py",
      [
        "CustomTypedDict3"
      ]
    ],
    [
      "tests/functional/a/alternative/alternative_union_syntax_py37.py",
      [
        "CustomTypedDict3"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585.py",
      [
        "CustomTypedDict3"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_error.py",
      [
        "CustomTypedDict3"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_py39.py",
      [
        "CustomTypedDict3"
      ]
    ]
  ],
  "CustomTypedDict4": [
    [
      "tests/functional/a/alternative/alternative_union_syntax.py",
      [
        "CustomTypedDict4"
      ]
    ],
    [
      "tests/functional/a/alternative/alternative_union_syntax_error.py",
      [
        "CustomTypedDict4"
      ]
    ],
    [
      "tests/functional/a/alternative/alternative_union_syntax_py37.py",
      [
        "CustomTypedDict4"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585.py",
      [
        "CustomTypedDict4"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_error.py",
      [
        "CustomTypedDict4"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_py39.py",
      [
        "CustomTypedDict4"
      ]
    ]
  ],
  "CustomDataClass": [
    [
      "tests/functional/a/alternative/alternative_union_syntax.py",
      [
        "CustomDataClass"
      ]
    ],
    [
      "tests/functional/a/alternative/alternative_union_syntax_error.py",
      [
        "CustomDataClass"
      ]
    ],
    [
      "tests/functional/a/alternative/alternative_union_syntax_py37.py",
      [
        "CustomDataClass"
      ]
    ],
    [
      "tests/functional/ext/typing/typing_consider_using_alias.py",
      [
        "CustomDataClass"
      ]
    ],
    [
      "tests/functional/ext/typing/typing_consider_using_alias_without_future.py",
      [
        "CustomDataClass"
      ]
    ],
    [
      "tests/functional/ext/typing/typing_consider_using_union.py",
      [
        "CustomDataClass"
      ]
    ],
    [
      "tests/functional/ext/typing/typing_consider_using_union_py310.py",
      [
        "CustomDataClass"
      ]
    ],
    [
      "tests/functional/ext/typing/typing_consider_using_union_without_future.py",
      [
        "CustomDataClass"
      ]
    ],
    [
      "tests/functional/ext/typing/typing_deprecated_alias.py",
      [
        "CustomDataClass"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585.py",
      [
        "CustomDataClass"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_error.py",
      [
        "CustomDataClass"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_py39.py",
      [
        "CustomDataClass"
      ]
    ]
  ],
  "CustomDataClass2": [
    [
      "tests/functional/a/alternative/alternative_union_syntax.py",
      [
        "CustomDataClass2"
      ]
    ],
    [
      "tests/functional/a/alternative/alternative_union_syntax_error.py",
      [
        "CustomDataClass2"
      ]
    ],
    [
      "tests/functional/a/alternative/alternative_union_syntax_py37.py",
      [
        "CustomDataClass2"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585.py",
      [
        "CustomDataClass2"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_error.py",
      [
        "CustomDataClass2"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_py39.py",
      [
        "CustomDataClass2"
      ]
    ]
  ],
  "CustomDataClass3": [
    [
      "tests/functional/a/alternative/alternative_union_syntax.py",
      [
        "CustomDataClass3"
      ]
    ],
    [
      "tests/functional/a/alternative/alternative_union_syntax_error.py",
      [
        "CustomDataClass3"
      ]
    ],
    [
      "tests/functional/a/alternative/alternative_union_syntax_py37.py",
      [
        "CustomDataClass3"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585.py",
      [
        "CustomDataClass3"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_error.py",
      [
        "CustomDataClass3"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_py39.py",
      [
        "CustomDataClass3"
      ]
    ]
  ],
  "CustomDataClass4": [
    [
      "tests/functional/a/alternative/alternative_union_syntax.py",
      [
        "CustomDataClass4"
      ]
    ],
    [
      "tests/functional/a/alternative/alternative_union_syntax_error.py",
      [
        "CustomDataClass4"
      ]
    ],
    [
      "tests/functional/a/alternative/alternative_union_syntax_py37.py",
      [
        "CustomDataClass4"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585.py",
      [
        "CustomDataClass4"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_error.py",
      [
        "CustomDataClass4"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_py39.py",
      [
        "CustomDataClass4"
      ]
    ]
  ],
  "DemoClass": [
    [
      "tests/functional/a/arguments.py",
      [
        "DemoClass"
      ]
    ]
  ],
  "TestStaticMethod": [
    [
      "tests/functional/a/arguments.py",
      [
        "TestStaticMethod"
      ]
    ]
  ],
  "TypeCheckConstructor": [
    [
      "tests/functional/a/arguments.py",
      [
        "TypeCheckConstructor"
      ]
    ]
  ],
  "Test": [
    [
      "tests/functional/a/arguments.py",
      [
        "Test"
      ]
    ],
    [
      "tests/functional/c/cellvar_escaping_loop.py",
      [
        "Test"
      ]
    ],
    [
      "tests/functional/d/dataclass_with_default_factory.py",
      [
        "Test"
      ]
    ],
    [
      "tests/functional/d/decorator_scope.py",
      [
        "Test"
      ]
    ],
    [
      "tests/functional/m/metaclass_attr_access.py",
      [
        "Test"
      ]
    ],
    [
      "tests/functional/p/property_affectation_py26.py",
      [
        "Test"
      ]
    ],
    [
      "tests/functional/s/string/string_formatting.py",
      [
        "Test"
      ]
    ],
    [
      "tests/functional/t/too/too_few_public_methods_37.py",
      [
        "Test"
      ]
    ],
    [
      "tests/functional/u/unpacking_non_sequence.py",
      [
        "Test"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation_py3.py",
      [
        "Test"
      ]
    ],
    [
      "tests/regrtest_data/py3k_error_flag.py",
      [
        "Test"
      ]
    ],
    [
      "tests/regrtest_data/py3k_errors_and_warnings.py",
      [
        "Test"
      ]
    ]
  ],
  "Issue642": [
    [
      "tests/functional/a/arguments.py",
      [
        "Issue642"
      ]
    ]
  ],
  "ParentDefaults": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "ParentDefaults"
      ]
    ],
    [
      "tests/functional/a/arguments_renamed.py",
      [
        "ParentDefaults"
      ]
    ]
  ],
  "ChildDefaults": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "ChildDefaults"
      ]
    ],
    [
      "tests/functional/a/arguments_renamed.py",
      [
        "ChildDefaults"
      ]
    ]
  ],
  "Classmethod": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Classmethod"
      ]
    ]
  ],
  "ClassmethodChild": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "ClassmethodChild"
      ]
    ]
  ],
  "Builtins": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Builtins"
      ]
    ]
  ],
  "Varargs": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Varargs"
      ]
    ]
  ],
  "VarargsChild": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "VarargsChild"
      ]
    ]
  ],
  "Super": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Super"
      ]
    ],
    [
      "tests/functional/n/no/no_self_use.py",
      [
        "Super"
      ]
    ],
    [
      "tests/functional/n/non/non_init_parent_called.py",
      [
        "Super"
      ]
    ]
  ],
  "Sub": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Sub"
      ]
    ],
    [
      "tests/functional/c/class_scope.py",
      [
        "Well",
        "Sub"
      ]
    ],
    [
      "tests/functional/n/no/no_self_use.py",
      [
        "Sub"
      ]
    ],
    [
      "tests/functional/u/unused/unused_argument.py",
      [
        "Sub"
      ]
    ]
  ],
  "Staticmethod": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Staticmethod"
      ]
    ]
  ],
  "StaticmethodChild": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "StaticmethodChild"
      ]
    ]
  ],
  "Property": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Property"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_overridden_method.py",
      [
        "Property"
      ]
    ],
    [
      "tests/functional/m/missing/missing_docstring.py",
      [
        "Property"
      ]
    ],
    [
      "tests/functional/n/not_context_manager.py",
      [
        "Property"
      ]
    ]
  ],
  "PropertySetter": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "PropertySetter"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_overridden_method.py",
      [
        "PropertySetter"
      ]
    ]
  ],
  "StaticmethodChild2": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "StaticmethodChild2"
      ]
    ]
  ],
  "SuperClass": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "SuperClass"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_overridden_method.py",
      [
        "SuperClass"
      ]
    ]
  ],
  "FirstHasArgs": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "FirstHasArgs"
      ]
    ]
  ],
  "SecondChangesArgs": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "SecondChangesArgs"
      ]
    ]
  ],
  "Positional": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Positional"
      ]
    ]
  ],
  "PositionalChild": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "PositionalChild"
      ]
    ]
  ],
  "Mixed": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Mixed"
      ]
    ]
  ],
  "MixedChild1": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "MixedChild1"
      ]
    ]
  ],
  "MixedChild2": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "MixedChild2"
      ]
    ]
  ],
  "HasSpecialMethod": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "HasSpecialMethod"
      ]
    ]
  ],
  "OverridesSpecialMethod": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "OverridesSpecialMethod"
      ]
    ]
  ],
  "ParentClass": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "ParentClass"
      ]
    ]
  ],
  "ChildClass": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "ChildClass"
      ]
    ]
  ],
  "ParentT1": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "ParentT1"
      ]
    ]
  ],
  "ChildT1": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "ChildT1"
      ]
    ]
  ],
  "ParentT2": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "ParentT2"
      ]
    ]
  ],
  "ChildT2": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "ChildT2"
      ]
    ]
  ],
  "FooT1": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "FooT1"
      ]
    ]
  ],
  "ParentT3": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "ParentT3"
      ]
    ]
  ],
  "ChildT3": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "ChildT3"
      ]
    ]
  ],
  "AbstractFoo": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "AbstractFoo"
      ]
    ]
  ],
  "Foo": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Foo"
      ]
    ],
    [
      "tests/functional/a/assign/assigning_non_slot_4509.py",
      [
        "Foo"
      ]
    ],
    [
      "tests/functional/c/consider/consider_using_dict_items.py",
      [
        "Foo"
      ]
    ],
    [
      "tests/functional/c/crash_missing_module_type.py",
      [
        "Foo"
      ]
    ],
    [
      "tests/functional/d/deprecated/deprecated_decorators.py",
      [
        "Foo"
      ]
    ],
    [
      "tests/functional/d/disable_msg_github_issue_1389.py",
      [
        "Foo"
      ]
    ],
    [
      "tests/functional/ext/code_style/code_style_consider_using_namedtuple_or_dataclass.py",
      [
        "Foo"
      ]
    ],
    [
      "tests/functional/m/method_hidden.py",
      [
        "Foo"
      ]
    ],
    [
      "tests/functional/n/name/name_final.py",
      [
        "Foo"
      ]
    ],
    [
      "tests/functional/n/name/name_final_snake_case.py",
      [
        "Foo"
      ]
    ],
    [
      "tests/functional/p/pragma_after_backslash.py",
      [
        "Foo"
      ]
    ],
    [
      "tests/functional/r/regression/regression_4358_unsubscriptable_enum.py",
      [
        "Foo"
      ]
    ],
    [
      "tests/functional/s/self/self_cls_assignment.py",
      [
        "Foo"
      ]
    ],
    [
      "tests/functional/s/super/super_with_arguments.py",
      [
        "Foo"
      ]
    ],
    [
      "tests/functional/u/unnecessary/unnecessary_dict_index_lookup.py",
      [
        "Foo"
      ]
    ],
    [
      "tests/functional/u/use/use_maxsplit_arg.py",
      [
        "Foo"
      ]
    ],
    [
      "tests/regrtest_data/func_block_disable_msg.py",
      [
        "Foo"
      ]
    ]
  ],
  "Foo2": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Foo2"
      ]
    ]
  ],
  "TestClass": [
    [
      "tests/functional/a/arguments_out_of_order.py",
      [
        "args_out_of_order",
        "TestClass"
      ]
    ],
    [
      "tests/functional/r/regression/regression_property_slots_2439.py",
      [
        "TestClass"
      ]
    ],
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "TestClass"
      ]
    ]
  ],
  "Condiment": [
    [
      "tests/functional/a/arguments_renamed.py",
      [
        "Condiment"
      ]
    ]
  ],
  "Fruit": [
    [
      "tests/functional/a/arguments_renamed.py",
      [
        "Fruit"
      ]
    ]
  ],
  "Orange": [
    [
      "tests/functional/a/arguments_renamed.py",
      [
        "Orange"
      ]
    ]
  ],
  "Banana": [
    [
      "tests/functional/a/arguments_renamed.py",
      [
        "Banana"
      ]
    ]
  ],
  "Child2": [
    [
      "tests/functional/a/arguments_renamed.py",
      [
        "Child2"
      ]
    ],
    [
      "tests/functional/r/regression/regression_properties_in_class_context.py",
      [
        "Child2"
      ]
    ]
  ],
  "Empty": [
    [
      "tests/functional/a/assign/assigning_non_slot.py",
      [
        "Empty"
      ]
    ],
    [
      "tests/functional/i/inherit_non_class.py",
      [
        "Empty"
      ]
    ],
    [
      "tests/functional/s/super/super_checks.py",
      [
        "Empty"
      ]
    ]
  ],
  "Bad": [
    [
      "tests/functional/a/assign/assigning_non_slot.py",
      [
        "Bad"
      ]
    ],
    [
      "tests/functional/c/consider/consider_using_enumerate.py",
      [
        "Bad"
      ]
    ],
    [
      "tests/functional/i/inherit_non_class.py",
      [
        "Bad"
      ]
    ],
    [
      "tests/functional/s/slots_checks.py",
      [
        "Bad"
      ]
    ],
    [
      "tests/functional/u/undefined/undefined_variable_py30.py",
      [
        "Bad"
      ]
    ]
  ],
  "Bad2": [
    [
      "tests/functional/a/assign/assigning_non_slot.py",
      [
        "Bad2"
      ]
    ],
    [
      "tests/functional/i/inherit_non_class.py",
      [
        "Bad2"
      ]
    ]
  ],
  "Bad3": [
    [
      "tests/functional/a/assign/assigning_non_slot.py",
      [
        "Bad3"
      ]
    ],
    [
      "tests/functional/i/inherit_non_class.py",
      [
        "Bad3"
      ]
    ]
  ],
  "Good": [
    [
      "tests/functional/a/assign/assigning_non_slot.py",
      [
        "Good"
      ]
    ],
    [
      "tests/functional/c/consider/consider_using_enumerate.py",
      [
        "Good"
      ]
    ],
    [
      "tests/functional/i/inherit_non_class.py",
      [
        "Good"
      ]
    ],
    [
      "tests/functional/s/slots_checks.py",
      [
        "Good"
      ]
    ],
    [
      "tests/functional/u/undefined/undefined_variable_py30.py",
      [
        "Good"
      ]
    ]
  ],
  "Good2": [
    [
      "tests/functional/a/assign/assigning_non_slot.py",
      [
        "Good2"
      ]
    ],
    [
      "tests/functional/i/inherit_non_class.py",
      [
        "Good2"
      ]
    ]
  ],
  "PropertyGood": [
    [
      "tests/functional/a/assign/assigning_non_slot.py",
      [
        "PropertyGood"
      ]
    ]
  ],
  "PropertyGood2": [
    [
      "tests/functional/a/assign/assigning_non_slot.py",
      [
        "PropertyGood2"
      ]
    ]
  ],
  "UnicodeSlots": [
    [
      "tests/functional/a/assign/assigning_non_slot.py",
      [
        "UnicodeSlots"
      ]
    ]
  ],
  "DataDescriptor": [
    [
      "tests/functional/a/assign/assigning_non_slot.py",
      [
        "DataDescriptor"
      ]
    ]
  ],
  "NonDataDescriptor": [
    [
      "tests/functional/a/assign/assigning_non_slot.py",
      [
        "NonDataDescriptor"
      ]
    ]
  ],
  "SlotsWithDescriptor": [
    [
      "tests/functional/a/assign/assigning_non_slot.py",
      [
        "SlotsWithDescriptor"
      ]
    ]
  ],
  "ClassWithSlots": [
    [
      "tests/functional/a/assign/assigning_non_slot.py",
      [
        "ClassWithSlots"
      ]
    ]
  ],
  "ClassReassigningDunderClass": [
    [
      "tests/functional/a/assign/assigning_non_slot.py",
      [
        "ClassReassigningDunderClass"
      ]
    ]
  ],
  "ClassReassingingInvalidLayoutClass": [
    [
      "tests/functional/a/assign/assigning_non_slot.py",
      [
        "ClassReassingingInvalidLayoutClass"
      ]
    ]
  ],
  "ClassHavingUnknownAncestors": [
    [
      "tests/functional/a/assign/assigning_non_slot.py",
      [
        "ClassHavingUnknownAncestors"
      ]
    ]
  ],
  "Cls": [
    [
      "tests/functional/a/assign/assigning_non_slot.py",
      [
        "Cls"
      ]
    ],
    [
      "tests/functional/f/function_redefined_2540.py",
      [
        "Cls"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_side_effects.py",
      [
        "Cls"
      ]
    ],
    [
      "tests/functional/m/member/member_checks.py",
      [
        "Cls"
      ]
    ],
    [
      "tests/functional/n/no/no_method_argument_py38.py",
      [
        "Cls"
      ]
    ],
    [
      "tests/functional/p/property_with_parameters.py",
      [
        "Cls"
      ]
    ],
    [
      "tests/functional/r/recursion/recursion_error_crash_2683.py",
      [
        "Cls"
      ]
    ],
    [
      "tests/functional/r/redefined_outer_name_type_checking.py",
      [
        "Cls"
      ]
    ],
    [
      "tests/functional/r/regression/regression_3231_no_member_property.py",
      [
        "Cls"
      ]
    ],
    [
      "tests/functional/r/regression/regression_no_member_1078.py",
      [
        "Cls"
      ]
    ],
    [
      "tests/functional/t/typing_use.py",
      [
        "Cls"
      ]
    ],
    [
      "tests/functional/u/undefined/undefined_variable_crash_on_attribute.py",
      [
        "Cls"
      ]
    ]
  ],
  "Class": [
    [
      "tests/functional/a/assign/assignment_from_no_return.py",
      [
        "Class"
      ]
    ],
    [
      "tests/functional/a/async_functions.py",
      [
        "Class"
      ]
    ],
    [
      "tests/functional/b/bugfix_local_scope_metaclass_1177.py",
      [
        "Class"
      ]
    ],
    [
      "tests/functional/c/class_members_py36.py",
      [
        "Class"
      ]
    ],
    [
      "tests/functional/m/missing/missing_parentheses_for_call_in_test.py",
      [
        "Class"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_activated.py",
      [
        "Class"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_not_activated.py",
      [
        "Class"
      ]
    ],
    [
      "tests/functional/r/regression/regression_infer_call_result_3690.py",
      [
        "Class"
      ]
    ],
    [
      "tests/functional/s/self/self_assigning_variable.py",
      [
        "Class"
      ]
    ],
    [
      "tests/functional/u/use/using_constant_test.py",
      [
        "Class"
      ]
    ]
  ],
  "Coro": [
    [
      "tests/functional/a/assign/assignment_from_no_return_py3.py",
      [
        "Coro"
      ]
    ]
  ],
  "OtherClass": [
    [
      "tests/functional/a/async_functions.py",
      [
        "OtherClass"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_activated.py",
      [
        "OtherClass"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_activated_with_alias.py",
      [
        "OtherClass"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_not_activated.py",
      [
        "OtherClass"
      ]
    ]
  ],
  "A": [
    [
      "tests/functional/a/attribute_defined_outside_init.py",
      [
        "A"
      ]
    ],
    [
      "tests/functional/c/consider/consider_using_min_max_builtin.py",
      [
        "A"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_class_object.py",
      [
        "A"
      ]
    ],
    [
      "tests/functional/i/isinstance_second_argument.py",
      [
        "A"
      ]
    ],
    [
      "tests/functional/i/iterable_context.py",
      [
        "A"
      ]
    ],
    [
      "tests/functional/m/member/member_checks_typed_annotations.py",
      [
        "A"
      ]
    ],
    [
      "tests/functional/m/misplaced_bare_raise.py",
      [
        "A"
      ]
    ],
    [
      "tests/functional/n/no/no_self_use_py3.py",
      [
        "A"
      ]
    ],
    [
      "tests/functional/r/regression/regression_3535_double_enum_inherit.py",
      [
        "A"
      ]
    ],
    [
      "tests/functional/r/regression/regression_implicit_none_with_no_return.py",
      [
        "A"
      ]
    ],
    [
      "tests/functional/r/regression/regression_property_no_member_3269.py",
      [
        "A"
      ]
    ],
    [
      "tests/functional/t/typing_generic.py",
      [
        "A"
      ]
    ],
    [
      "tests/functional/u/unsupported/unsupported_binary_operation.py",
      [
        "A"
      ]
    ],
    [
      "tests/functional/u/unused/unused_import_class_def_keyword.py",
      [
        "A"
      ]
    ],
    [
      "tests/functional/u/useless/useless_object_inheritance.py",
      [
        "A"
      ]
    ]
  ],
  "B": [
    [
      "tests/functional/a/attribute_defined_outside_init.py",
      [
        "B"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_class_object.py",
      [
        "B"
      ]
    ],
    [
      "tests/functional/i/isinstance_second_argument.py",
      [
        "B"
      ]
    ],
    [
      "tests/functional/i/iterable_context.py",
      [
        "B"
      ]
    ],
    [
      "tests/functional/m/member/member_checks_typed_annotations.py",
      [
        "B"
      ]
    ],
    [
      "tests/functional/n/no/no_self_use_py3.py",
      [
        "B"
      ]
    ],
    [
      "tests/functional/r/regression/regression_3535_double_enum_inherit.py",
      [
        "B"
      ]
    ],
    [
      "tests/functional/r/regression/regression_property_no_member_3269.py",
      [
        "B"
      ]
    ],
    [
      "tests/functional/t/typing_generic.py",
      [
        "B"
      ]
    ],
    [
      "tests/functional/u/unsupported/unsupported_binary_operation.py",
      [
        "B"
      ]
    ],
    [
      "tests/functional/u/unused/unused_import_class_def_keyword.py",
      [
        "B"
      ]
    ],
    [
      "tests/functional/u/useless/useless_object_inheritance.py",
      [
        "B"
      ]
    ]
  ],
  "C": [
    [
      "tests/functional/a/attribute_defined_outside_init.py",
      [
        "C"
      ]
    ],
    [
      "tests/functional/i/iterable_context.py",
      [
        "C"
      ]
    ],
    [
      "tests/functional/import_outside_toplevel.py",
      [
        "C"
      ]
    ],
    [
      "tests/functional/m/member/member_checks_typed_annotations.py",
      [
        "C"
      ]
    ],
    [
      "tests/functional/t/typing_generic.py",
      [
        "C"
      ]
    ],
    [
      "tests/functional/u/useless/useless_object_inheritance.py",
      [
        "C"
      ]
    ]
  ],
  "D": [
    [
      "tests/functional/a/attribute_defined_outside_init.py",
      [
        "D"
      ]
    ],
    [
      "tests/functional/m/member/member_checks_typed_annotations.py",
      [
        "D"
      ]
    ],
    [
      "tests/functional/u/useless/useless_object_inheritance.py",
      [
        "D"
      ]
    ]
  ],
  "E": [
    [
      "tests/functional/a/attribute_defined_outside_init.py",
      [
        "E"
      ]
    ],
    [
      "tests/functional/u/useless/useless_object_inheritance.py",
      [
        "E"
      ]
    ]
  ],
  "F": [
    [
      "tests/functional/a/attribute_defined_outside_init.py",
      [
        "F"
      ]
    ],
    [
      "tests/functional/u/useless/useless_object_inheritance.py",
      [
        "F"
      ]
    ]
  ],
  "Mine": [
    [
      "tests/functional/a/attribute_defined_outside_init.py",
      [
        "Mine"
      ]
    ]
  ],
  "DataClass": [
    [
      "tests/functional/a/attribute_defined_outside_init.py",
      [
        "DataClass"
      ]
    ]
  ],
  "ExceptionSubclass": [
    [
      "tests/functional/b/bad_exception_context.py",
      [
        "ExceptionSubclass"
      ]
    ]
  ],
  "GoodReversed": [
    [
      "tests/functional/b/bad_reversed_sequence.py",
      [
        "GoodReversed"
      ]
    ]
  ],
  "SecondGoodReversed": [
    [
      "tests/functional/b/bad_reversed_sequence.py",
      [
        "SecondGoodReversed"
      ]
    ]
  ],
  "BadReversed": [
    [
      "tests/functional/b/bad_reversed_sequence.py",
      [
        "BadReversed"
      ]
    ]
  ],
  "SecondBadReversed": [
    [
      "tests/functional/b/bad_reversed_sequence.py",
      [
        "SecondBadReversed"
      ]
    ]
  ],
  "ThirdBadReversed": [
    [
      "tests/functional/b/bad_reversed_sequence.py",
      [
        "ThirdBadReversed"
      ]
    ]
  ],
  "Abcd": [
    [
      "tests/functional/b/bad_staticmethod_argument.py",
      [
        "Abcd"
      ]
    ],
    [
      "tests/functional/m/method_hidden.py",
      [
        "Abcd"
      ]
    ],
    [
      "tests/functional/s/signature_differs.py",
      [
        "Abcd"
      ]
    ]
  ],
  "BaseClass": [
    [
      "tests/functional/b/base_init_vars.py",
      [
        "BaseClass"
      ]
    ],
    [
      "tests/functional/e/e1101_9588_base_attr_aug_assign.py",
      [
        "BaseClass"
      ]
    ],
    [
      "tests/functional/s/super/super_checks.py",
      [
        "BaseClass"
      ]
    ]
  ],
  "Meta": [
    [
      "tests/functional/b/bugfix_local_scope_metaclass_1177.py",
      [
        "Meta"
      ]
    ],
    [
      "tests/functional/f/first_arg.py",
      [
        "Meta"
      ]
    ],
    [
      "tests/functional/i/iterable_context_py3.py",
      [
        "Meta"
      ]
    ],
    [
      "tests/functional/m/mapping_context_py3.py",
      [
        "Meta"
      ]
    ],
    [
      "tests/functional/m/metaclass_attr_access.py",
      [
        "Meta"
      ]
    ],
    [
      "tests/functional/r/regression/regression_properties_in_class_context.py",
      [
        "Meta"
      ]
    ],
    [
      "tests/functional/u/unused/unused_import_py30.py",
      [
        "Meta"
      ]
    ]
  ],
  "Meta3": [
    [
      "tests/functional/b/bugfix_local_scope_metaclass_1177.py",
      [
        "ClassScope",
        "Meta3"
      ]
    ],
    [
      "tests/functional/u/unused/unused_import_py30.py",
      [
        "Meta3"
      ]
    ]
  ],
  "Class3": [
    [
      "tests/functional/b/bugfix_local_scope_metaclass_1177.py",
      [
        "ClassScope",
        "Class3"
      ]
    ]
  ],
  "ClassScope": [
    [
      "tests/functional/b/bugfix_local_scope_metaclass_1177.py",
      [
        "ClassScope"
      ]
    ]
  ],
  "Clazz": [
    [
      "tests/functional/c/class_attributes.py",
      [
        "Clazz"
      ]
    ],
    [
      "tests/functional/m/monkeypatch_method.py",
      [
        "Clazz"
      ]
    ]
  ],
  "XYZMixin": [
    [
      "tests/functional/c/class_members_py30.py",
      [
        "XYZMixin"
      ]
    ]
  ],
  "TestMetaclass": [
    [
      "tests/functional/c/class_members_py30.py",
      [
        "TestMetaclass"
      ]
    ]
  ],
  "Metaclass": [
    [
      "tests/functional/c/class_members_py30.py",
      [
        "Metaclass"
      ]
    ],
    [
      "tests/functional/c/ctor_arguments.py",
      [
        "Metaclass"
      ]
    ],
    [
      "tests/functional/s/slots_checks.py",
      [
        "Metaclass"
      ]
    ]
  ],
  "UsingMetaclass": [
    [
      "tests/functional/c/class_members_py30.py",
      [
        "UsingMetaclass"
      ]
    ]
  ],
  "NoKnownBases": [
    [
      "tests/functional/c/class_members_py30.py",
      [
        "NoKnownBases"
      ]
    ]
  ],
  "MetaClass": [
    [
      "tests/functional/c/class_members_py30.py",
      [
        "MetaClass"
      ]
    ]
  ],
  "Data": [
    [
      "tests/functional/c/class_scope.py",
      [
        "Well",
        "Data"
      ]
    ],
    [
      "tests/functional/r/recursion/recursion_error_2836.py",
      [
        "Data"
      ]
    ]
  ],
  "Well": [
    [
      "tests/functional/c/class_scope.py",
      [
        "Well"
      ]
    ]
  ],
  "Result1": [
    [
      "tests/functional/c/class_scope.py",
      [
        "Right",
        "Result1"
      ]
    ]
  ],
  "Right": [
    [
      "tests/functional/c/class_scope.py",
      [
        "Right"
      ]
    ]
  ],
  "Result2": [
    [
      "tests/functional/c/class_scope.py",
      [
        "Wrong",
        "Result2"
      ]
    ]
  ],
  "Wrong": [
    [
      "tests/functional/c/class_scope.py",
      [
        "Wrong"
      ]
    ]
  ],
  "Example": [
    [
      "tests/functional/c/class_variable_slots_conflict_exempted.py",
      [
        "Example"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_activated.py",
      [
        "Example"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_activated_with_alias.py",
      [
        "Example"
      ]
    ],
    [
      "tests/functional/r/regression/regression_2443_duplicate_bases.py",
      [
        "Example"
      ]
    ],
    [
      "tests/functional/r/regression/regression_3595_notcallable_collections.py",
      [
        "Example"
      ]
    ],
    [
      "tests/functional/t/too/too_few_public_methods_37.py",
      [
        "Example"
      ]
    ]
  ],
  "XAsub": [
    [
      "tests/functional/c/classes_meth_could_be_a_function.py",
      [
        "XAsub"
      ]
    ]
  ],
  "XBsub": [
    [
      "tests/functional/c/classes_meth_could_be_a_function.py",
      [
        "XBsub"
      ]
    ]
  ],
  "XCsub": [
    [
      "tests/functional/c/classes_meth_could_be_a_function.py",
      [
        "XCsub"
      ]
    ]
  ],
  "Aimpl": [
    [
      "tests/functional/c/classes_meth_could_be_a_function.py",
      [
        "Aimpl"
      ]
    ]
  ],
  "Bimpl": [
    [
      "tests/functional/c/classes_meth_could_be_a_function.py",
      [
        "Bimpl"
      ]
    ]
  ],
  "Cimpl": [
    [
      "tests/functional/c/classes_meth_could_be_a_function.py",
      [
        "Cimpl"
      ]
    ]
  ],
  "A3123": [
    [
      "tests/functional/c/classes_protected_member_access.py",
      [
        "A3123"
      ]
    ]
  ],
  "FakeClass": [
    [
      "tests/functional/c/comparison_with_callable.py",
      [
        "FakeClass"
      ]
    ],
    [
      "tests/functional/m/misplaced_format_function.py",
      [
        "FakeClass"
      ]
    ]
  ],
  "Client": [
    [
      "tests/functional/c/confidence_filter.py",
      [
        "Client"
      ]
    ],
    [
      "tests/functional/m/member/member_checks.py",
      [
        "Client"
      ]
    ]
  ],
  "CustomClass": [
    [
      "tests/functional/c/consider/consider_iterating_dictionary.py",
      [
        "CustomClass"
      ]
    ]
  ],
  "AA": [
    [
      "tests/functional/c/consider/consider_using_min_max_builtin.py",
      [
        "AA"
      ]
    ]
  ],
  "MyLockContext": [
    [
      "tests/functional/c/consider/consider_using_with.py",
      [
        "MyLockContext"
      ]
    ]
  ],
  "Class1Arg": [
    [
      "tests/functional/c/ctor_arguments.py",
      [
        "Class1Arg"
      ]
    ]
  ],
  "Class3Arg": [
    [
      "tests/functional/c/ctor_arguments.py",
      [
        "Class3Arg"
      ]
    ]
  ],
  "ClassDefaultArg": [
    [
      "tests/functional/c/ctor_arguments.py",
      [
        "ClassDefaultArg"
      ]
    ]
  ],
  "Subclass1Arg": [
    [
      "tests/functional/c/ctor_arguments.py",
      [
        "Subclass1Arg"
      ]
    ]
  ],
  "ClassAllArgs": [
    [
      "tests/functional/c/ctor_arguments.py",
      [
        "ClassAllArgs"
      ]
    ]
  ],
  "ClassMultiInheritance": [
    [
      "tests/functional/c/ctor_arguments.py",
      [
        "ClassMultiInheritance"
      ]
    ]
  ],
  "ClassNew": [
    [
      "tests/functional/c/ctor_arguments.py",
      [
        "ClassNew"
      ]
    ]
  ],
  "ClassWithMeta": [
    [
      "tests/functional/c/ctor_arguments.py",
      [
        "ClassWithMeta"
      ]
    ]
  ],
  "BuiltinExc": [
    [
      "tests/functional/c/ctor_arguments.py",
      [
        "BuiltinExc"
      ]
    ]
  ],
  "Clsmethod": [
    [
      "tests/functional/c/ctor_arguments.py",
      [
        "Clsmethod"
      ]
    ]
  ],
  "MyTest": [
    [
      "tests/functional/d/deprecated/deprecated_methods_py3.py",
      [
        "MyTest"
      ]
    ],
    [
      "tests/functional/d/deprecated/deprecated_methods_py38.py",
      [
        "MyTest"
      ]
    ]
  ],
  "SuperCrash": [
    [
      "tests/functional/d/deprecated/deprecated_methods_py3.py",
      [
        "SuperCrash"
      ]
    ],
    [
      "tests/functional/d/deprecated/deprecated_methods_py38.py",
      [
        "SuperCrash"
      ]
    ]
  ],
  "Tests": [
    [
      "tests/functional/d/deprecated/deprecated_methods_py3.py",
      [
        "Tests"
      ]
    ],
    [
      "tests/functional/d/deprecated/deprecated_methods_py38.py",
      [
        "Tests"
      ]
    ],
    [
      "tests/functional/r/redundant_unittest_assert.py",
      [
        "Tests"
      ]
    ]
  ],
  "Bar": [
    [
      "tests/functional/d/disable_msg_github_issue_1389.py",
      [
        "Bar"
      ]
    ],
    [
      "tests/functional/n/name/name_preset_snake_case.py",
      [
        "Bar"
      ]
    ],
    [
      "tests/functional/n/name/name_styles.py",
      [
        "Bar"
      ]
    ],
    [
      "tests/functional/s/super/super_with_arguments.py",
      [
        "Bar"
      ]
    ],
    [
      "tests/functional/u/use/use_maxsplit_arg.py",
      [
        "Bar"
      ]
    ]
  ],
  "AAAA": [
    [
      "tests/functional/d/docstrings.py",
      [
        "AAAA"
      ]
    ],
    [
      "tests/functional/f/function_redefined.py",
      [
        "AAAA"
      ]
    ],
    [
      "tests/functional/i/init_not_called.py",
      [
        "AAAA"
      ]
    ],
    [
      "tests/functional/k/keyword_arg_before_vararg.py",
      [
        "AAAA"
      ]
    ],
    [
      "tests/functional/n/no/no_warning_docstring.py",
      [
        "AAAA"
      ]
    ],
    [
      "tests/functional/n/non/non_init_parent_called.py",
      [
        "AAAA"
      ]
    ],
    [
      "tests/functional/u/unused/unused_argument.py",
      [
        "AAAA"
      ]
    ]
  ],
  "DDDD": [
    [
      "tests/functional/d/docstrings.py",
      [
        "DDDD"
      ]
    ],
    [
      "tests/functional/n/non/non_init_parent_called.py",
      [
        "DDDD"
      ]
    ]
  ],
  "Duplicates": [
    [
      "tests/functional/d/duplicate_bases.py",
      [
        "Duplicates"
      ]
    ]
  ],
  "Alpha": [
    [
      "tests/functional/d/duplicate_bases.py",
      [
        "Alpha"
      ]
    ]
  ],
  "NotDuplicates": [
    [
      "tests/functional/d/duplicate_bases.py",
      [
        "NotDuplicates"
      ]
    ]
  ],
  "FalsePositiveClass": [
    [
      "tests/functional/e/e1101_9588_base_attr_aug_assign.py",
      [
        "FalsePositiveClass"
      ]
    ]
  ],
  "NegativeClass": [
    [
      "tests/functional/e/e1101_9588_base_attr_aug_assign.py",
      [
        "NegativeClass"
      ]
    ]
  ],
  "Issue1932": [
    [
      "tests/functional/e/enum_subclasses.py",
      [
        "Issue1932"
      ]
    ]
  ],
  "Issue2062": [
    [
      "tests/functional/e/enum_subclasses.py",
      [
        "Issue2062"
      ]
    ]
  ],
  "Aaa": [
    [
      "tests/functional/e/external_classmethod_crash.py",
      [
        "Aaa"
      ]
    ],
    [
      "tests/functional/i/init_return_from_inner_function.py",
      [
        "Aaa"
      ]
    ],
    [
      "tests/functional/i/inner_classes.py",
      [
        "Aaa"
      ]
    ]
  ],
  "CustomIntList": [
    [
      "tests/functional/ext/typing/typing_consider_using_alias.py",
      [
        "CustomIntList"
      ]
    ],
    [
      "tests/functional/ext/typing/typing_consider_using_alias_without_future.py",
      [
        "CustomIntList"
      ]
    ],
    [
      "tests/functional/ext/typing/typing_deprecated_alias.py",
      [
        "CustomIntList"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585.py",
      [
        "CustomIntList"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_error.py",
      [
        "CustomIntList"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_py39.py",
      [
        "CustomIntList"
      ]
    ]
  ],
  "CustomNamedTuple": [
    [
      "tests/functional/ext/typing/typing_consider_using_alias.py",
      [
        "CustomNamedTuple"
      ]
    ],
    [
      "tests/functional/ext/typing/typing_consider_using_alias_without_future.py",
      [
        "CustomNamedTuple"
      ]
    ],
    [
      "tests/functional/ext/typing/typing_consider_using_union.py",
      [
        "CustomNamedTuple"
      ]
    ],
    [
      "tests/functional/ext/typing/typing_consider_using_union_py310.py",
      [
        "CustomNamedTuple"
      ]
    ],
    [
      "tests/functional/ext/typing/typing_consider_using_union_without_future.py",
      [
        "CustomNamedTuple"
      ]
    ],
    [
      "tests/functional/ext/typing/typing_deprecated_alias.py",
      [
        "CustomNamedTuple"
      ]
    ]
  ],
  "CustomTypedDict2": [
    [
      "tests/functional/ext/typing/typing_consider_using_alias.py",
      [
        "CustomTypedDict2"
      ]
    ],
    [
      "tests/functional/ext/typing/typing_consider_using_alias_without_future.py",
      [
        "CustomTypedDict2"
      ]
    ],
    [
      "tests/functional/ext/typing/typing_consider_using_union.py",
      [
        "CustomTypedDict2"
      ]
    ],
    [
      "tests/functional/ext/typing/typing_consider_using_union_py310.py",
      [
        "CustomTypedDict2"
      ]
    ],
    [
      "tests/functional/ext/typing/typing_consider_using_union_without_future.py",
      [
        "CustomTypedDict2"
      ]
    ],
    [
      "tests/functional/ext/typing/typing_deprecated_alias.py",
      [
        "CustomTypedDict2"
      ]
    ]
  ],
  "Custom1": [
    [
      "tests/functional/ext/typing/typing_consider_using_union.py",
      [
        "Custom1"
      ]
    ],
    [
      "tests/functional/ext/typing/typing_consider_using_union_py310.py",
      [
        "Custom1"
      ]
    ],
    [
      "tests/functional/ext/typing/typing_consider_using_union_without_future.py",
      [
        "Custom1"
      ]
    ]
  ],
  "Obj": [
    [
      "tests/functional/f/first_arg.py",
      [
        "Obj"
      ]
    ]
  ],
  "AAAA_1": [
    [
      "tests/functional/f/function_redefined.py",
      [
        "AAAA_1"
      ]
    ]
  ],
  "ObjectProxy": [
    [
      "tests/functional/f/function_redefined.py",
      [
        "ObjectProxy"
      ]
    ]
  ],
  "DerivedHashable": [
    [
      "tests/functional/g/generic_alias/generic_alias_collections.py",
      [
        "DerivedHashable"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_collections_py37.py",
      [
        "DerivedHashable"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py",
      [
        "DerivedHashable"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_mixed_py37.py",
      [
        "DerivedHashable"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_mixed_py39.py",
      [
        "DerivedHashable"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py",
      [
        "DerivedHashable"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_typing.py",
      [
        "DerivedHashable"
      ]
    ]
  ],
  "DerivedIterable": [
    [
      "tests/functional/g/generic_alias/generic_alias_collections.py",
      [
        "DerivedIterable"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_collections_py37.py",
      [
        "DerivedIterable"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py",
      [
        "DerivedIterable"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_mixed_py37.py",
      [
        "DerivedIterable"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_mixed_py39.py",
      [
        "DerivedIterable"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py",
      [
        "DerivedIterable"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_typing.py",
      [
        "DerivedIterable"
      ]
    ]
  ],
  "DerivedCollection": [
    [
      "tests/functional/g/generic_alias/generic_alias_collections.py",
      [
        "DerivedCollection"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_collections_py37.py",
      [
        "DerivedCollection"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py",
      [
        "DerivedCollection"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_mixed_py37.py",
      [
        "DerivedCollection"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_mixed_py39.py",
      [
        "DerivedCollection"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py",
      [
        "DerivedCollection"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_typing.py",
      [
        "DerivedCollection"
      ]
    ]
  ],
  "DerivedList": [
    [
      "tests/functional/g/generic_alias/generic_alias_collections.py",
      [
        "DerivedList"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_collections_py37.py",
      [
        "DerivedList"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py",
      [
        "DerivedList"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py",
      [
        "DerivedList"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_typing.py",
      [
        "DerivedList"
      ]
    ]
  ],
  "DerivedSet": [
    [
      "tests/functional/g/generic_alias/generic_alias_collections.py",
      [
        "DerivedSet"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_collections_py37.py",
      [
        "DerivedSet"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py",
      [
        "DerivedSet"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py",
      [
        "DerivedSet"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_typing.py",
      [
        "DerivedSet"
      ]
    ]
  ],
  "DerivedOrderedDict": [
    [
      "tests/functional/g/generic_alias/generic_alias_collections.py",
      [
        "DerivedOrderedDict"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_collections_py37.py",
      [
        "DerivedOrderedDict"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py",
      [
        "DerivedOrderedDict"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py",
      [
        "DerivedOrderedDict"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_typing.py",
      [
        "DerivedOrderedDict"
      ]
    ]
  ],
  "DerivedListIterable": [
    [
      "tests/functional/g/generic_alias/generic_alias_collections.py",
      [
        "DerivedListIterable"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_collections_py37.py",
      [
        "DerivedListIterable"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py",
      [
        "DerivedListIterable"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_mixed_py37.py",
      [
        "DerivedListIterable"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_mixed_py39.py",
      [
        "DerivedListIterable"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py",
      [
        "DerivedListIterable"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_typing.py",
      [
        "DerivedListIterable"
      ]
    ]
  ],
  "DerivedMultiple": [
    [
      "tests/functional/g/generic_alias/generic_alias_collections.py",
      [
        "DerivedMultiple"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_collections_py37.py",
      [
        "DerivedMultiple"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py",
      [
        "DerivedMultiple"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py",
      [
        "DerivedMultiple"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_typing.py",
      [
        "DerivedMultiple"
      ]
    ]
  ],
  "CustomAbstractCls1": [
    [
      "tests/functional/g/generic_alias/generic_alias_collections.py",
      [
        "CustomAbstractCls1"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_collections_py37.py",
      [
        "CustomAbstractCls1"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py",
      [
        "CustomAbstractCls1"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py",
      [
        "CustomAbstractCls1"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_typing.py",
      [
        "CustomAbstractCls1"
      ]
    ]
  ],
  "CustomAbstractCls2": [
    [
      "tests/functional/g/generic_alias/generic_alias_collections.py",
      [
        "CustomAbstractCls2"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_collections_py37.py",
      [
        "CustomAbstractCls2"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py",
      [
        "CustomAbstractCls2"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py",
      [
        "CustomAbstractCls2"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_typing.py",
      [
        "CustomAbstractCls2"
      ]
    ]
  ],
  "CustomImplementation": [
    [
      "tests/functional/g/generic_alias/generic_alias_collections.py",
      [
        "CustomImplementation"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_collections_py37.py",
      [
        "CustomImplementation"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_collections_py37_with_typing.py",
      [
        "CustomImplementation"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_postponed_evaluation_py37.py",
      [
        "CustomImplementation"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_typing.py",
      [
        "CustomImplementation"
      ]
    ]
  ],
  "ClsUnsubscriptable": [
    [
      "tests/functional/g/generic_alias/generic_alias_related.py",
      [
        "ClsUnsubscriptable"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_related_py39.py",
      [
        "ClsUnsubscriptable"
      ]
    ]
  ],
  "ClsGetItem": [
    [
      "tests/functional/g/generic_alias/generic_alias_related.py",
      [
        "ClsGetItem"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_related_py39.py",
      [
        "ClsGetItem"
      ]
    ]
  ],
  "ClsClassGetItem": [
    [
      "tests/functional/g/generic_alias/generic_alias_related.py",
      [
        "ClsClassGetItem"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_related_py39.py",
      [
        "ClsClassGetItem"
      ]
    ]
  ],
  "ClsList": [
    [
      "tests/functional/g/generic_alias/generic_alias_related.py",
      [
        "ClsList"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_related_py39.py",
      [
        "ClsList"
      ]
    ]
  ],
  "ClsAbstract": [
    [
      "tests/functional/g/generic_alias/generic_alias_related.py",
      [
        "ClsAbstract"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_related_py39.py",
      [
        "ClsAbstract"
      ]
    ]
  ],
  "HasherGeneric": [
    [
      "tests/functional/g/generic_alias/generic_alias_side_effects.py",
      [
        "HasherGeneric"
      ]
    ],
    [
      "tests/functional/p/protocol_classes.py",
      [
        "HasherGeneric"
      ]
    ]
  ],
  "ConsumingMixin": [
    [
      "tests/functional/g/generic_alias/generic_alias_side_effects.py",
      [
        "ConsumingMixin"
      ]
    ],
    [
      "tests/functional/r/regression/regression_2443_duplicate_bases.py",
      [
        "ConsumingMixin"
      ]
    ]
  ],
  "ProducingMixin": [
    [
      "tests/functional/g/generic_alias/generic_alias_side_effects.py",
      [
        "ProducingMixin"
      ]
    ],
    [
      "tests/functional/r/regression/regression_2443_duplicate_bases.py",
      [
        "ProducingMixin"
      ]
    ]
  ],
  "StreamingMixin": [
    [
      "tests/functional/g/generic_alias/generic_alias_side_effects.py",
      [
        "StreamingMixin"
      ]
    ],
    [
      "tests/functional/r/regression/regression_2443_duplicate_bases.py",
      [
        "StreamingMixin"
      ]
    ]
  ],
  "DerivedList2": [
    [
      "tests/functional/g/generic_alias/generic_alias_typing.py",
      [
        "DerivedList2"
      ]
    ]
  ],
  "DerivedOrderedDict2": [
    [
      "tests/functional/g/generic_alias/generic_alias_typing.py",
      [
        "DerivedOrderedDict2"
      ]
    ]
  ],
  "DerivedIterable2": [
    [
      "tests/functional/g/generic_alias/generic_alias_typing.py",
      [
        "DerivedIterable2"
      ]
    ]
  ],
  "Str": [
    [
      "tests/functional/i/inconsistent/inconsistent_mro.py",
      [
        "Str"
      ]
    ]
  ],
  "Inconsistent": [
    [
      "tests/functional/i/inconsistent/inconsistent_mro.py",
      [
        "Inconsistent"
      ]
    ]
  ],
  "BlargException": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "BlargException"
      ]
    ]
  ],
  "Bad1": [
    [
      "tests/functional/i/inherit_non_class.py",
      [
        "Bad1"
      ]
    ]
  ],
  "Bad4": [
    [
      "tests/functional/i/inherit_non_class.py",
      [
        "Bad4"
      ]
    ]
  ],
  "Good1": [
    [
      "tests/functional/i/inherit_non_class.py",
      [
        "Good1"
      ]
    ]
  ],
  "Good3": [
    [
      "tests/functional/i/inherit_non_class.py",
      [
        "Good3"
      ]
    ]
  ],
  "Good4": [
    [
      "tests/functional/i/inherit_non_class.py",
      [
        "Good4"
      ]
    ]
  ],
  "Good5": [
    [
      "tests/functional/i/inherit_non_class.py",
      [
        "Good5"
      ]
    ]
  ],
  "Good6": [
    [
      "tests/functional/i/inherit_non_class.py",
      [
        "Good6"
      ]
    ]
  ],
  "Unknown": [
    [
      "tests/functional/i/inherit_non_class.py",
      [
        "Unknown"
      ]
    ]
  ],
  "Unknown1": [
    [
      "tests/functional/i/inherit_non_class.py",
      [
        "Unknown1"
      ]
    ]
  ],
  "NotInheritableBool": [
    [
      "tests/functional/i/inherit_non_class.py",
      [
        "NotInheritableBool"
      ]
    ]
  ],
  "NotInheritableRange": [
    [
      "tests/functional/i/inherit_non_class.py",
      [
        "NotInheritableRange"
      ]
    ]
  ],
  "NotInheritableSlice": [
    [
      "tests/functional/i/inherit_non_class.py",
      [
        "NotInheritableSlice"
      ]
    ]
  ],
  "NotInheritableMemoryView": [
    [
      "tests/functional/i/inherit_non_class.py",
      [
        "NotInheritableMemoryView"
      ]
    ]
  ],
  "SomeClass": [
    [
      "tests/functional/i/init_is_generator.py",
      [
        "SomeClass"
      ]
    ],
    [
      "tests/functional/i/iterable_context_py3.py",
      [
        "SomeClass"
      ]
    ],
    [
      "tests/functional/m/mapping_context_py3.py",
      [
        "SomeClass"
      ]
    ],
    [
      "tests/functional/m/member/member_checks.py",
      [
        "SomeClass"
      ]
    ],
    [
      "tests/functional/n/nonlocal_without_binding.py",
      [
        "SomeClass"
      ]
    ],
    [
      "tests/functional/u/unused/unused_import.py",
      [
        "SomeClass"
      ]
    ],
    [
      "tests/functional/u/useless/useless_return.py",
      [
        "SomeClass"
      ]
    ],
    [
      "tests/regrtest_data/classdoc_usage.py",
      [
        "SomeClass"
      ]
    ]
  ],
  "BBBB": [
    [
      "tests/functional/i/init_not_called.py",
      [
        "BBBB"
      ]
    ],
    [
      "tests/functional/n/no/no_warning_docstring.py",
      [
        "BBBB"
      ]
    ],
    [
      "tests/functional/u/unused/unused_argument.py",
      [
        "BBBB"
      ]
    ]
  ],
  "CCCC": [
    [
      "tests/functional/i/init_not_called.py",
      [
        "CCCC"
      ]
    ],
    [
      "tests/functional/n/no/no_warning_docstring.py",
      [
        "CCCC"
      ]
    ]
  ],
  "ZZZZ": [
    [
      "tests/functional/i/init_not_called.py",
      [
        "ZZZZ"
      ]
    ]
  ],
  "NewStyleA": [
    [
      "tests/functional/i/init_not_called.py",
      [
        "NewStyleA"
      ]
    ]
  ],
  "NewStyleB": [
    [
      "tests/functional/i/init_not_called.py",
      [
        "NewStyleB"
      ]
    ]
  ],
  "NoInit": [
    [
      "tests/functional/i/init_not_called.py",
      [
        "NoInit"
      ]
    ]
  ],
  "Init": [
    [
      "tests/functional/i/init_not_called.py",
      [
        "Init"
      ]
    ]
  ],
  "NewStyleC": [
    [
      "tests/functional/i/init_not_called.py",
      [
        "NewStyleC"
      ]
    ]
  ],
  "AssignedInit": [
    [
      "tests/functional/i/init_not_called.py",
      [
        "AssignedInit"
      ]
    ]
  ],
  "UnknownBases": [
    [
      "tests/functional/i/init_not_called.py",
      [
        "UnknownBases"
      ]
    ],
    [
      "tests/functional/n/not_async_context_manager.py",
      [
        "UnknownBases"
      ]
    ],
    [
      "tests/functional/s/super/super_checks.py",
      [
        "UnknownBases"
      ]
    ]
  ],
  "PluginBase": [
    [
      "tests/functional/i/init_subclass_classmethod_py36.py",
      [
        "PluginBase"
      ]
    ]
  ],
  "Plugin1": [
    [
      "tests/functional/i/init_subclass_classmethod_py36.py",
      [
        "Plugin1"
      ]
    ]
  ],
  "Plugin2": [
    [
      "tests/functional/i/init_subclass_classmethod_py36.py",
      [
        "Plugin2"
      ]
    ]
  ],
  "Bbb": [
    [
      "tests/functional/i/inner_classes.py",
      [
        "Bbb"
      ]
    ]
  ],
  "Ddd": [
    [
      "tests/functional/i/inner_classes.py",
      [
        "Ccc",
        "Ddd"
      ]
    ]
  ],
  "Eee": [
    [
      "tests/functional/i/inner_classes.py",
      [
        "Ccc",
        "Eee"
      ]
    ]
  ],
  "Ccc": [
    [
      "tests/functional/i/inner_classes.py",
      [
        "Ccc"
      ]
    ]
  ],
  "FirstGoodBool": [
    [
      "tests/functional/i/invalid/b/invalid_bool_returned.py",
      [
        "FirstGoodBool"
      ]
    ]
  ],
  "SecondGoodBool": [
    [
      "tests/functional/i/invalid/b/invalid_bool_returned.py",
      [
        "SecondGoodBool"
      ]
    ]
  ],
  "BoolMetaclass": [
    [
      "tests/functional/i/invalid/b/invalid_bool_returned.py",
      [
        "BoolMetaclass"
      ]
    ]
  ],
  "ThirdGoodBool": [
    [
      "tests/functional/i/invalid/b/invalid_bool_returned.py",
      [
        "ThirdGoodBool"
      ]
    ]
  ],
  "FirstBadBool": [
    [
      "tests/functional/i/invalid/b/invalid_bool_returned.py",
      [
        "FirstBadBool"
      ]
    ]
  ],
  "SecondBadBool": [
    [
      "tests/functional/i/invalid/b/invalid_bool_returned.py",
      [
        "SecondBadBool"
      ]
    ]
  ],
  "ThirdBadBool": [
    [
      "tests/functional/i/invalid/b/invalid_bool_returned.py",
      [
        "ThirdBadBool"
      ]
    ]
  ],
  "AmbigousBool": [
    [
      "tests/functional/i/invalid/b/invalid_bool_returned.py",
      [
        "AmbigousBool"
      ]
    ]
  ],
  "AnotherAmbiguousBool": [
    [
      "tests/functional/i/invalid/b/invalid_bool_returned.py",
      [
        "AnotherAmbiguousBool"
      ]
    ]
  ],
  "FirstGoodBytes": [
    [
      "tests/functional/i/invalid/b/invalid_bytes_returned.py",
      [
        "FirstGoodBytes"
      ]
    ]
  ],
  "SecondGoodBytes": [
    [
      "tests/functional/i/invalid/b/invalid_bytes_returned.py",
      [
        "SecondGoodBytes"
      ]
    ]
  ],
  "BytesMetaclass": [
    [
      "tests/functional/i/invalid/b/invalid_bytes_returned.py",
      [
        "BytesMetaclass"
      ]
    ]
  ],
  "ThirdGoodBytes": [
    [
      "tests/functional/i/invalid/b/invalid_bytes_returned.py",
      [
        "ThirdGoodBytes"
      ]
    ]
  ],
  "FirstBadBytes": [
    [
      "tests/functional/i/invalid/b/invalid_bytes_returned.py",
      [
        "FirstBadBytes"
      ]
    ]
  ],
  "SecondBadBytes": [
    [
      "tests/functional/i/invalid/b/invalid_bytes_returned.py",
      [
        "SecondBadBytes"
      ]
    ]
  ],
  "ThirdBadBytes": [
    [
      "tests/functional/i/invalid/b/invalid_bytes_returned.py",
      [
        "ThirdBadBytes"
      ]
    ]
  ],
  "AmbiguousBytes": [
    [
      "tests/functional/i/invalid/b/invalid_bytes_returned.py",
      [
        "AmbiguousBytes"
      ]
    ]
  ],
  "AnotherAmbiguousBytes": [
    [
      "tests/functional/i/invalid/b/invalid_bytes_returned.py",
      [
        "AnotherAmbiguousBytes"
      ]
    ]
  ],
  "MyException": [
    [
      "tests/functional/i/invalid/e/invalid_exceptions_caught.py",
      [
        "MyException"
      ]
    ]
  ],
  "MySecondException": [
    [
      "tests/functional/i/invalid/e/invalid_exceptions_caught.py",
      [
        "MySecondException"
      ]
    ]
  ],
  "MyGoodException": [
    [
      "tests/functional/i/invalid/e/invalid_exceptions_caught.py",
      [
        "MyGoodException"
      ]
    ]
  ],
  "MySecondGoodException": [
    [
      "tests/functional/i/invalid/e/invalid_exceptions_caught.py",
      [
        "MySecondGoodException"
      ]
    ]
  ],
  "SkipException": [
    [
      "tests/functional/i/invalid/e/invalid_exceptions_caught.py",
      [
        "SkipException"
      ]
    ]
  ],
  "SecondSkipException": [
    [
      "tests/functional/i/invalid/e/invalid_exceptions_caught.py",
      [
        "SecondSkipException"
      ]
    ]
  ],
  "HasErrorInMRO": [
    [
      "tests/functional/i/invalid/e/invalid_exceptions_caught.py",
      [
        "HasErrorInMRO"
      ]
    ]
  ],
  "Second": [
    [
      "tests/functional/i/invalid/e/invalid_exceptions_caught.py",
      [
        "Second"
      ]
    ]
  ],
  "SomeBase": [
    [
      "tests/functional/i/invalid/e/invalid_exceptions_caught.py",
      [
        "SomeBase"
      ]
    ]
  ],
  "ValidException": [
    [
      "tests/functional/i/invalid/e/invalid_exceptions_raised.py",
      [
        "ValidException"
      ]
    ]
  ],
  "OldStyleClass": [
    [
      "tests/functional/i/invalid/e/invalid_exceptions_raised.py",
      [
        "OldStyleClass"
      ]
    ]
  ],
  "NewStyleClass": [
    [
      "tests/functional/i/invalid/e/invalid_exceptions_raised.py",
      [
        "NewStyleClass"
      ]
    ]
  ],
  "FirstGoodGetNewArgsEx": [
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_ex_returned.py",
      [
        "FirstGoodGetNewArgsEx"
      ]
    ]
  ],
  "SecondGoodGetNewArgsEx": [
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_ex_returned.py",
      [
        "SecondGoodGetNewArgsEx"
      ]
    ]
  ],
  "GetNewArgsExMetaclass": [
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_ex_returned.py",
      [
        "GetNewArgsExMetaclass"
      ]
    ]
  ],
  "ThirdGoodGetNewArgsEx": [
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_ex_returned.py",
      [
        "ThirdGoodGetNewArgsEx"
      ]
    ]
  ],
  "FirstBadGetNewArgsEx": [
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_ex_returned.py",
      [
        "FirstBadGetNewArgsEx"
      ]
    ]
  ],
  "SecondBadGetNewArgsEx": [
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_ex_returned.py",
      [
        "SecondBadGetNewArgsEx"
      ]
    ]
  ],
  "ThirdBadGetNewArgsEx": [
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_ex_returned.py",
      [
        "ThirdBadGetNewArgsEx"
      ]
    ]
  ],
  "FourthBadGetNewArgsEx": [
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_ex_returned.py",
      [
        "FourthBadGetNewArgsEx"
      ]
    ]
  ],
  "FifthBadGetNewArgsEx": [
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_ex_returned.py",
      [
        "FifthBadGetNewArgsEx"
      ]
    ]
  ],
  "SixthBadGetNewArgsEx": [
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_ex_returned.py",
      [
        "SixthBadGetNewArgsEx"
      ]
    ]
  ],
  "AmbigousGetNewArgsEx": [
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_ex_returned.py",
      [
        "AmbigousGetNewArgsEx"
      ]
    ]
  ],
  "AnotherAmbiguousGetNewArgsEx": [
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_ex_returned.py",
      [
        "AnotherAmbiguousGetNewArgsEx"
      ]
    ]
  ],
  "FirstGoodGetNewArgs": [
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_returned.py",
      [
        "FirstGoodGetNewArgs"
      ]
    ]
  ],
  "SecondGoodGetNewArgs": [
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_returned.py",
      [
        "SecondGoodGetNewArgs"
      ]
    ]
  ],
  "GetNewArgsMetaclass": [
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_returned.py",
      [
        "GetNewArgsMetaclass"
      ]
    ]
  ],
  "ThirdGoodGetNewArgs": [
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_returned.py",
      [
        "ThirdGoodGetNewArgs"
      ]
    ]
  ],
  "FirstBadGetNewArgs": [
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_returned.py",
      [
        "FirstBadGetNewArgs"
      ]
    ]
  ],
  "SecondBadGetNewArgs": [
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_returned.py",
      [
        "SecondBadGetNewArgs"
      ]
    ]
  ],
  "ThirdBadGetNewArgs": [
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_returned.py",
      [
        "ThirdBadGetNewArgs"
      ]
    ]
  ],
  "AmbigousGetNewArgs": [
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_returned.py",
      [
        "AmbigousGetNewArgs"
      ]
    ]
  ],
  "AnotherAmbiguousGetNewArgs": [
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_returned.py",
      [
        "AnotherAmbiguousGetNewArgs"
      ]
    ]
  ],
  "FirstGoodFormat": [
    [
      "tests/functional/i/invalid/invalid_format_returned.py",
      [
        "FirstGoodFormat"
      ]
    ]
  ],
  "SecondGoodFormat": [
    [
      "tests/functional/i/invalid/invalid_format_returned.py",
      [
        "SecondGoodFormat"
      ]
    ]
  ],
  "FormatMetaclass": [
    [
      "tests/functional/i/invalid/invalid_format_returned.py",
      [
        "FormatMetaclass"
      ]
    ]
  ],
  "ThirdGoodFormat": [
    [
      "tests/functional/i/invalid/invalid_format_returned.py",
      [
        "ThirdGoodFormat"
      ]
    ]
  ],
  "FirstBadFormat": [
    [
      "tests/functional/i/invalid/invalid_format_returned.py",
      [
        "FirstBadFormat"
      ]
    ]
  ],
  "SecondBadFormat": [
    [
      "tests/functional/i/invalid/invalid_format_returned.py",
      [
        "SecondBadFormat"
      ]
    ]
  ],
  "ThirdBadFormat": [
    [
      "tests/functional/i/invalid/invalid_format_returned.py",
      [
        "ThirdBadFormat"
      ]
    ]
  ],
  "AmbiguousFormat": [
    [
      "tests/functional/i/invalid/invalid_format_returned.py",
      [
        "AmbiguousFormat"
      ]
    ]
  ],
  "AnotherAmbiguousFormat": [
    [
      "tests/functional/i/invalid/invalid_format_returned.py",
      [
        "AnotherAmbiguousFormat"
      ]
    ]
  ],
  "FirstGoodHash": [
    [
      "tests/functional/i/invalid/invalid_hash_returned.py",
      [
        "FirstGoodHash"
      ]
    ]
  ],
  "SecondGoodHash": [
    [
      "tests/functional/i/invalid/invalid_hash_returned.py",
      [
        "SecondGoodHash"
      ]
    ]
  ],
  "HashMetaclass": [
    [
      "tests/functional/i/invalid/invalid_hash_returned.py",
      [
        "HashMetaclass"
      ]
    ]
  ],
  "ThirdGoodHash": [
    [
      "tests/functional/i/invalid/invalid_hash_returned.py",
      [
        "ThirdGoodHash"
      ]
    ]
  ],
  "FirstBadHash": [
    [
      "tests/functional/i/invalid/invalid_hash_returned.py",
      [
        "FirstBadHash"
      ]
    ]
  ],
  "SecondBadHash": [
    [
      "tests/functional/i/invalid/invalid_hash_returned.py",
      [
        "SecondBadHash"
      ]
    ]
  ],
  "ThirdBadHash": [
    [
      "tests/functional/i/invalid/invalid_hash_returned.py",
      [
        "ThirdBadHash"
      ]
    ]
  ],
  "FourthBadHash": [
    [
      "tests/functional/i/invalid/invalid_hash_returned.py",
      [
        "FourthBadHash"
      ]
    ]
  ],
  "AmbigousHash": [
    [
      "tests/functional/i/invalid/invalid_hash_returned.py",
      [
        "AmbigousHash"
      ]
    ]
  ],
  "AnotherAmbiguousHash": [
    [
      "tests/functional/i/invalid/invalid_hash_returned.py",
      [
        "AnotherAmbiguousHash"
      ]
    ]
  ],
  "FirstGoodIndex": [
    [
      "tests/functional/i/invalid/invalid_index_returned.py",
      [
        "FirstGoodIndex"
      ]
    ]
  ],
  "SecondGoodIndex": [
    [
      "tests/functional/i/invalid/invalid_index_returned.py",
      [
        "SecondGoodIndex"
      ]
    ]
  ],
  "IndexMetaclass": [
    [
      "tests/functional/i/invalid/invalid_index_returned.py",
      [
        "IndexMetaclass"
      ]
    ]
  ],
  "ThirdGoodIndex": [
    [
      "tests/functional/i/invalid/invalid_index_returned.py",
      [
        "ThirdGoodIndex"
      ]
    ]
  ],
  "FirstBadIndex": [
    [
      "tests/functional/i/invalid/invalid_index_returned.py",
      [
        "FirstBadIndex"
      ]
    ]
  ],
  "SecondBadIndex": [
    [
      "tests/functional/i/invalid/invalid_index_returned.py",
      [
        "SecondBadIndex"
      ]
    ]
  ],
  "ThirdBadIndex": [
    [
      "tests/functional/i/invalid/invalid_index_returned.py",
      [
        "ThirdBadIndex"
      ]
    ]
  ],
  "FourthBadIndex": [
    [
      "tests/functional/i/invalid/invalid_index_returned.py",
      [
        "FourthBadIndex"
      ]
    ]
  ],
  "AmbigousIndex": [
    [
      "tests/functional/i/invalid/invalid_index_returned.py",
      [
        "AmbigousIndex"
      ]
    ]
  ],
  "AnotherAmbiguousIndex": [
    [
      "tests/functional/i/invalid/invalid_index_returned.py",
      [
        "AnotherAmbiguousIndex"
      ]
    ]
  ],
  "ValidDerived": [
    [
      "tests/functional/i/invalid/invalid_overridden_method.py",
      [
        "ValidDerived"
      ]
    ]
  ],
  "InvalidDerived": [
    [
      "tests/functional/i/invalid/invalid_overridden_method.py",
      [
        "InvalidDerived"
      ]
    ]
  ],
  "AbstractProperty": [
    [
      "tests/functional/i/invalid/invalid_overridden_method.py",
      [
        "AbstractProperty"
      ]
    ]
  ],
  "FirstGoodRepr": [
    [
      "tests/functional/i/invalid/invalid_repr_returned.py",
      [
        "FirstGoodRepr"
      ]
    ]
  ],
  "SecondGoodRepr": [
    [
      "tests/functional/i/invalid/invalid_repr_returned.py",
      [
        "SecondGoodRepr"
      ]
    ]
  ],
  "ReprMetaclass": [
    [
      "tests/functional/i/invalid/invalid_repr_returned.py",
      [
        "ReprMetaclass"
      ]
    ]
  ],
  "ThirdGoodRepr": [
    [
      "tests/functional/i/invalid/invalid_repr_returned.py",
      [
        "ThirdGoodRepr"
      ]
    ]
  ],
  "FirstBadRepr": [
    [
      "tests/functional/i/invalid/invalid_repr_returned.py",
      [
        "FirstBadRepr"
      ]
    ]
  ],
  "SecondBadRepr": [
    [
      "tests/functional/i/invalid/invalid_repr_returned.py",
      [
        "SecondBadRepr"
      ]
    ]
  ],
  "ThirdBadRepr": [
    [
      "tests/functional/i/invalid/invalid_repr_returned.py",
      [
        "ThirdBadRepr"
      ]
    ]
  ],
  "AmbiguousRepr": [
    [
      "tests/functional/i/invalid/invalid_repr_returned.py",
      [
        "AmbiguousRepr"
      ]
    ]
  ],
  "AnotherAmbiguousRepr": [
    [
      "tests/functional/i/invalid/invalid_repr_returned.py",
      [
        "AnotherAmbiguousRepr"
      ]
    ]
  ],
  "Implemented": [
    [
      "tests/functional/i/invalid/invalid_unary_operand_type.py",
      [
        "Implemented"
      ]
    ]
  ],
  "FirstGoodLengthHint": [
    [
      "tests/functional/i/invalid/l/invalid_length_hint_returned.py",
      [
        "FirstGoodLengthHint"
      ]
    ]
  ],
  "SecondGoodLengthHint": [
    [
      "tests/functional/i/invalid/l/invalid_length_hint_returned.py",
      [
        "SecondGoodLengthHint"
      ]
    ]
  ],
  "LengthHintMetaclass": [
    [
      "tests/functional/i/invalid/l/invalid_length_hint_returned.py",
      [
        "LengthHintMetaclass"
      ]
    ]
  ],
  "ThirdGoodLengthHint": [
    [
      "tests/functional/i/invalid/l/invalid_length_hint_returned.py",
      [
        "ThirdGoodLengthHint"
      ]
    ]
  ],
  "FirstBadLengthHint": [
    [
      "tests/functional/i/invalid/l/invalid_length_hint_returned.py",
      [
        "FirstBadLengthHint"
      ]
    ]
  ],
  "SecondBadLengthHint": [
    [
      "tests/functional/i/invalid/l/invalid_length_hint_returned.py",
      [
        "SecondBadLengthHint"
      ]
    ]
  ],
  "ThirdBadLengthHint": [
    [
      "tests/functional/i/invalid/l/invalid_length_hint_returned.py",
      [
        "ThirdBadLengthHint"
      ]
    ]
  ],
  "AmbigousLengthHint": [
    [
      "tests/functional/i/invalid/l/invalid_length_hint_returned.py",
      [
        "AmbigousLengthHint"
      ]
    ]
  ],
  "AnotherAmbiguousLengthHint": [
    [
      "tests/functional/i/invalid/l/invalid_length_hint_returned.py",
      [
        "AnotherAmbiguousLengthHint"
      ]
    ]
  ],
  "FirstGoodLen": [
    [
      "tests/functional/i/invalid/l/invalid_length_returned.py",
      [
        "FirstGoodLen"
      ]
    ]
  ],
  "SecondGoodLen": [
    [
      "tests/functional/i/invalid/l/invalid_length_returned.py",
      [
        "SecondGoodLen"
      ]
    ]
  ],
  "LenMetaclass": [
    [
      "tests/functional/i/invalid/l/invalid_length_returned.py",
      [
        "LenMetaclass"
      ]
    ]
  ],
  "ThirdGoodLen": [
    [
      "tests/functional/i/invalid/l/invalid_length_returned.py",
      [
        "ThirdGoodLen"
      ]
    ]
  ],
  "FirstBadLen": [
    [
      "tests/functional/i/invalid/l/invalid_length_returned.py",
      [
        "FirstBadLen"
      ]
    ]
  ],
  "SecondBadLen": [
    [
      "tests/functional/i/invalid/l/invalid_length_returned.py",
      [
        "SecondBadLen"
      ]
    ]
  ],
  "ThirdBadLen": [
    [
      "tests/functional/i/invalid/l/invalid_length_returned.py",
      [
        "ThirdBadLen"
      ]
    ]
  ],
  "NonRegression": [
    [
      "tests/functional/i/invalid/l/invalid_length_returned.py",
      [
        "NonRegression"
      ]
    ]
  ],
  "AmbigousLen": [
    [
      "tests/functional/i/invalid/l/invalid_length_returned.py",
      [
        "AmbigousLen"
      ]
    ]
  ],
  "AnotherAmbiguousLen": [
    [
      "tests/functional/i/invalid/l/invalid_length_returned.py",
      [
        "AnotherAmbiguousLen"
      ]
    ]
  ],
  "InvalidAsMetaclass": [
    [
      "tests/functional/i/invalid/m/invalid_metaclass.py",
      [
        "InvalidAsMetaclass"
      ]
    ]
  ],
  "ValidAsMetaclass": [
    [
      "tests/functional/i/invalid/m/invalid_metaclass.py",
      [
        "ValidAsMetaclass"
      ]
    ]
  ],
  "FirstGood": [
    [
      "tests/functional/i/invalid/m/invalid_metaclass.py",
      [
        "FirstGood"
      ]
    ]
  ],
  "SecondGood": [
    [
      "tests/functional/i/invalid/m/invalid_metaclass.py",
      [
        "SecondGood"
      ]
    ],
    [
      "tests/functional/s/slots_checks.py",
      [
        "SecondGood"
      ]
    ],
    [
      "tests/functional/u/undefined/undefined_variable_py30.py",
      [
        "SecondGood"
      ]
    ]
  ],
  "ThirdGood": [
    [
      "tests/functional/i/invalid/m/invalid_metaclass.py",
      [
        "ThirdGood"
      ]
    ],
    [
      "tests/functional/s/slots_checks.py",
      [
        "ThirdGood"
      ]
    ],
    [
      "tests/functional/u/undefined/undefined_variable_py30.py",
      [
        "ThirdGood"
      ]
    ]
  ],
  "FourthGood": [
    [
      "tests/functional/i/invalid/m/invalid_metaclass.py",
      [
        "FourthGood"
      ]
    ],
    [
      "tests/functional/s/slots_checks.py",
      [
        "FourthGood"
      ]
    ],
    [
      "tests/functional/u/undefined/undefined_variable_py30.py",
      [
        "FourthGood"
      ]
    ]
  ],
  "GoodMetaclass": [
    [
      "tests/functional/i/invalid/m/invalid_metaclass_py3.py",
      [
        "GoodMetaclass"
      ]
    ]
  ],
  "SecondGoodMetaclass": [
    [
      "tests/functional/i/invalid/m/invalid_metaclass_py3.py",
      [
        "SecondGoodMetaclass"
      ]
    ]
  ],
  "FirstGoodStr": [
    [
      "tests/functional/i/invalid/s/invalid_str_returned.py",
      [
        "FirstGoodStr"
      ]
    ]
  ],
  "SecondGoodStr": [
    [
      "tests/functional/i/invalid/s/invalid_str_returned.py",
      [
        "SecondGoodStr"
      ]
    ]
  ],
  "StrMetaclass": [
    [
      "tests/functional/i/invalid/s/invalid_str_returned.py",
      [
        "StrMetaclass"
      ]
    ]
  ],
  "ThirdGoodStr": [
    [
      "tests/functional/i/invalid/s/invalid_str_returned.py",
      [
        "ThirdGoodStr"
      ]
    ]
  ],
  "FirstBadStr": [
    [
      "tests/functional/i/invalid/s/invalid_str_returned.py",
      [
        "FirstBadStr"
      ]
    ]
  ],
  "SecondBadStr": [
    [
      "tests/functional/i/invalid/s/invalid_str_returned.py",
      [
        "SecondBadStr"
      ]
    ]
  ],
  "ThirdBadStr": [
    [
      "tests/functional/i/invalid/s/invalid_str_returned.py",
      [
        "ThirdBadStr"
      ]
    ]
  ],
  "AmbiguousStr": [
    [
      "tests/functional/i/invalid/s/invalid_str_returned.py",
      [
        "AmbiguousStr"
      ]
    ]
  ],
  "AnotherAmbiguousStr": [
    [
      "tests/functional/i/invalid/s/invalid_str_returned.py",
      [
        "AnotherAmbiguousStr"
      ]
    ]
  ],
  "ManagedAccessViewMixin": [
    [
      "tests/functional/i/iterable_context.py",
      [
        "ManagedAccessViewMixin"
      ]
    ]
  ],
  "BaseType": [
    [
      "tests/functional/i/iterable_context.py",
      [
        "BaseType"
      ]
    ]
  ],
  "AbstractUrlMarkManager": [
    [
      "tests/functional/i/iterable_context.py",
      [
        "AbstractUrlMarkManager"
      ]
    ]
  ],
  "UrlMarkManager": [
    [
      "tests/functional/i/iterable_context.py",
      [
        "UrlMarkManager"
      ]
    ]
  ],
  "HasDynamicGetattr": [
    [
      "tests/functional/i/iterable_context.py",
      [
        "HasDynamicGetattr"
      ]
    ],
    [
      "tests/functional/m/mapping_context.py",
      [
        "HasDynamicGetattr"
      ]
    ]
  ],
  "AIter": [
    [
      "tests/functional/i/iterable_context_py36.py",
      [
        "AIter"
      ]
    ]
  ],
  "ClassWithBool": [
    [
      "tests/functional/l/len_checks.py",
      [
        "github_issue_1879",
        "ClassWithBool"
      ]
    ]
  ],
  "ClassWithoutBool": [
    [
      "tests/functional/l/len_checks.py",
      [
        "github_issue_1879",
        "ClassWithoutBool"
      ]
    ]
  ],
  "ChildClassWithBool": [
    [
      "tests/functional/l/len_checks.py",
      [
        "github_issue_1879",
        "ChildClassWithBool"
      ]
    ]
  ],
  "ChildClassWithoutBool": [
    [
      "tests/functional/l/len_checks.py",
      [
        "github_issue_1879",
        "ChildClassWithoutBool"
      ]
    ]
  ],
  "Logger": [
    [
      "tests/functional/l/logging_format_interpolation.py",
      [
        "Logger"
      ]
    ],
    [
      "tests/functional/r/renamed_import_logging_not_lazy.py",
      [
        "Logger"
      ]
    ]
  ],
  "CustomMapping": [
    [
      "tests/functional/m/mapping_context.py",
      [
        "CustomMapping"
      ]
    ]
  ],
  "NotMapping": [
    [
      "tests/functional/m/mapping_context.py",
      [
        "NotMapping"
      ]
    ]
  ],
  "SomeMixin": [
    [
      "tests/functional/m/mapping_context.py",
      [
        "SomeMixin"
      ]
    ]
  ],
  "AbstractThing": [
    [
      "tests/functional/m/mapping_context.py",
      [
        "AbstractThing"
      ]
    ],
    [
      "tests/functional/m/member/membership_protocol.py",
      [
        "AbstractThing"
      ]
    ]
  ],
  "BaseThing": [
    [
      "tests/functional/m/mapping_context.py",
      [
        "BaseThing"
      ]
    ],
    [
      "tests/functional/m/member/membership_protocol.py",
      [
        "BaseThing"
      ]
    ]
  ],
  "Thing": [
    [
      "tests/functional/m/mapping_context.py",
      [
        "Thing"
      ]
    ],
    [
      "tests/functional/m/member/membership_protocol.py",
      [
        "Thing"
      ]
    ]
  ],
  "Provider": [
    [
      "tests/functional/m/member/member_checks.py",
      [
        "Provider"
      ]
    ]
  ],
  "Getattr": [
    [
      "tests/functional/m/member/member_checks.py",
      [
        "Getattr"
      ]
    ],
    [
      "tests/functional/s/super/super_checks.py",
      [
        "Getattr"
      ]
    ]
  ],
  "Getattribute": [
    [
      "tests/functional/m/member/member_checks.py",
      [
        "Getattribute"
      ]
    ]
  ],
  "SuperChecks": [
    [
      "tests/functional/m/member/member_checks.py",
      [
        "SuperChecks"
      ]
    ]
  ],
  "NoDunderNameInInstance": [
    [
      "tests/functional/m/member/member_checks.py",
      [
        "NoDunderNameInInstance"
      ]
    ]
  ],
  "InvalidAccessBySlots": [
    [
      "tests/functional/m/member/member_checks.py",
      [
        "InvalidAccessBySlots"
      ]
    ]
  ],
  "MetaWithDynamicGetattr": [
    [
      "tests/functional/m/member/member_checks.py",
      [
        "MetaWithDynamicGetattr"
      ]
    ]
  ],
  "ClassWithMangledAttribute": [
    [
      "tests/functional/m/member/member_checks.py",
      [
        "ClassWithMangledAttribute"
      ]
    ]
  ],
  "SomeClassUsingSlice": [
    [
      "tests/functional/m/member/member_checks.py",
      [
        "SomeClassUsingSlice"
      ]
    ]
  ],
  "Animal": [
    [
      "tests/functional/m/member/member_checks.py",
      [
        "Animal"
      ]
    ]
  ],
  "UniversalContainer": [
    [
      "tests/functional/m/member/membership_protocol.py",
      [
        "UniversalContainer"
      ]
    ]
  ],
  "CustomIterable": [
    [
      "tests/functional/m/member/membership_protocol.py",
      [
        "CustomIterable"
      ]
    ]
  ],
  "OldStyleIterable": [
    [
      "tests/functional/m/member/membership_protocol.py",
      [
        "OldStyleIterable"
      ]
    ]
  ],
  "MaybeIterable": [
    [
      "tests/functional/m/member/membership_protocol.py",
      [
        "MaybeIterable"
      ]
    ]
  ],
  "UsefulMixin": [
    [
      "tests/functional/m/member/membership_protocol.py",
      [
        "UsefulMixin"
      ]
    ]
  ],
  "EmptyClass": [
    [
      "tests/functional/m/member/membership_protocol.py",
      [
        "EmptyClass"
      ]
    ]
  ],
  "MetaIterable": [
    [
      "tests/functional/m/member/membership_protocol_py3.py",
      [
        "MetaIterable"
      ]
    ],
    [
      "tests/functional/n/none_dunder_protocols_py36.py",
      [
        "MetaIterable"
      ]
    ]
  ],
  "MetaOldIterable": [
    [
      "tests/functional/m/member/membership_protocol_py3.py",
      [
        "MetaOldIterable"
      ]
    ],
    [
      "tests/functional/n/none_dunder_protocols_py36.py",
      [
        "MetaOldIterable"
      ]
    ]
  ],
  "MetaContainer": [
    [
      "tests/functional/m/member/membership_protocol_py3.py",
      [
        "MetaContainer"
      ]
    ],
    [
      "tests/functional/n/none_dunder_protocols_py36.py",
      [
        "MetaContainer"
      ]
    ]
  ],
  "IterableClass": [
    [
      "tests/functional/m/member/membership_protocol_py3.py",
      [
        "IterableClass"
      ]
    ],
    [
      "tests/functional/s/slots_checks.py",
      [
        "IterableClass"
      ]
    ]
  ],
  "OldIterableClass": [
    [
      "tests/functional/m/member/membership_protocol_py3.py",
      [
        "OldIterableClass"
      ]
    ]
  ],
  "ContainerClass": [
    [
      "tests/functional/m/member/membership_protocol_py3.py",
      [
        "ContainerClass"
      ]
    ]
  ],
  "Cdef": [
    [
      "tests/functional/m/method_hidden.py",
      [
        "Cdef"
      ]
    ],
    [
      "tests/functional/s/signature_differs.py",
      [
        "Cdef"
      ]
    ]
  ],
  "AbcdMixin": [
    [
      "tests/functional/m/method_hidden.py",
      [
        "AbcdMixin"
      ]
    ]
  ],
  "Dabc": [
    [
      "tests/functional/m/method_hidden.py",
      [
        "Dabc"
      ]
    ]
  ],
  "CustomProperty": [
    [
      "tests/functional/m/method_hidden.py",
      [
        "CustomProperty"
      ]
    ]
  ],
  "Ddef": [
    [
      "tests/functional/m/method_hidden.py",
      [
        "Ddef"
      ]
    ]
  ],
  "One": [
    [
      "tests/functional/m/method_hidden.py",
      [
        "One"
      ]
    ]
  ],
  "Two": [
    [
      "tests/functional/m/method_hidden.py",
      [
        "Two"
      ]
    ]
  ],
  "JsonEncoder": [
    [
      "tests/functional/m/method_hidden.py",
      [
        "JsonEncoder"
      ]
    ]
  ],
  "ContextManager": [
    [
      "tests/functional/m/misplaced_bare_raise.py",
      [
        "ContextManager"
      ]
    ],
    [
      "tests/functional/n/not_async_context_manager.py",
      [
        "ContextManager"
      ]
    ],
    [
      "tests/functional/u/unused/unused_typing_imports.py",
      [
        "ContextManager"
      ]
    ]
  ],
  "ClassDocumented": [
    [
      "tests/functional/m/missing/missing_docstring.py",
      [
        "ClassDocumented"
      ]
    ],
    [
      "tests/functional/m/missing/missing_docstring_new_style.py",
      [
        "ClassDocumented"
      ]
    ]
  ],
  "ClassUndocumented": [
    [
      "tests/functional/m/missing/missing_docstring.py",
      [
        "ClassUndocumented"
      ]
    ],
    [
      "tests/functional/m/missing/missing_docstring_new_style.py",
      [
        "ClassUndocumented"
      ]
    ]
  ],
  "DocumentedViaDunderDoc": [
    [
      "tests/functional/m/missing/missing_docstring.py",
      [
        "DocumentedViaDunderDoc"
      ]
    ]
  ],
  "UndocumentedClass": [
    [
      "tests/functional/m/missing/missing_docstring_new_style.py",
      [
        "UndocumentedClass"
      ]
    ]
  ],
  "OtherClassUndocumented": [
    [
      "tests/functional/m/missing/missing_docstring_new_style.py",
      [
        "OtherClassUndocumented"
      ]
    ]
  ],
  "Documented": [
    [
      "tests/functional/m/missing/missing_module_docstring_disabled.py",
      [
        "Documented"
      ]
    ]
  ],
  "my_class": [
    [
      "tests/functional/n/name/name_good_bad_names_regex.py",
      [
        "my_class"
      ]
    ]
  ],
  "FooEnum": [
    [
      "tests/functional/n/name/name_preset_snake_case.py",
      [
        "FooEnum"
      ]
    ],
    [
      "tests/functional/n/name/name_styles.py",
      [
        "FooEnum"
      ]
    ]
  ],
  "bad_class_name": [
    [
      "tests/functional/n/name/name_styles.py",
      [
        "bad_class_name"
      ]
    ]
  ],
  "CorrectClassName": [
    [
      "tests/functional/n/name/name_styles.py",
      [
        "CorrectClassName"
      ]
    ]
  ],
  "DerivedFromCorrect": [
    [
      "tests/functional/n/name/name_styles.py",
      [
        "DerivedFromCorrect"
      ]
    ]
  ],
  "FooClass": [
    [
      "tests/functional/n/name/name_styles.py",
      [
        "FooClass"
      ]
    ]
  ],
  "_AnExceptionalExceptionThatOccursVeryVeryRarely": [
    [
      "tests/functional/n/name/name_styles.py",
      [
        "_AnExceptionalExceptionThatOccursVeryVeryRarely"
      ]
    ]
  ],
  "Dummy": [
    [
      "tests/functional/n/name/names_in__all__.py",
      [
        "Dummy"
      ]
    ]
  ],
  "InnerKlass": [
    [
      "tests/functional/n/name/names_in__all__.py",
      [
        "Klass",
        "InnerKlass"
      ]
    ]
  ],
  "File": [
    [
      "tests/functional/n/new_style_class_py_30.py",
      [
        "File"
      ]
    ]
  ],
  "MyOtherClass": [
    [
      "tests/functional/n/no/no_classmethod_decorator.py",
      [
        "MyOtherClass"
      ]
    ],
    [
      "tests/functional/n/no/no_staticmethod_decorator.py",
      [
        "MyOtherClass"
      ]
    ]
  ],
  "NoSelfArgument": [
    [
      "tests/functional/n/no/no_self_argument.py",
      [
        "NoSelfArgument"
      ]
    ]
  ],
  "Toto": [
    [
      "tests/functional/n/no/no_self_argument_py37.py",
      [
        "Toto"
      ]
    ],
    [
      "tests/functional/n/no/no_self_use.py",
      [
        "Toto"
      ]
    ]
  ],
  "Sub1": [
    [
      "tests/functional/n/no/no_self_use.py",
      [
        "Sub1"
      ]
    ]
  ],
  "Prop": [
    [
      "tests/functional/n/no/no_self_use.py",
      [
        "Prop"
      ]
    ]
  ],
  "BBBBMixin": [
    [
      "tests/functional/n/non/non_init_parent_called.py",
      [
        "BBBBMixin"
      ]
    ]
  ],
  "CCC": [
    [
      "tests/functional/n/non/non_init_parent_called.py",
      [
        "CCC"
      ]
    ]
  ],
  "Super2": [
    [
      "tests/functional/n/non/non_init_parent_called.py",
      [
        "Super2"
      ]
    ]
  ],
  "FirstGoodIterator": [
    [
      "tests/functional/n/non/non_iterator_returned.py",
      [
        "FirstGoodIterator"
      ]
    ]
  ],
  "SecondGoodIterator": [
    [
      "tests/functional/n/non/non_iterator_returned.py",
      [
        "SecondGoodIterator"
      ]
    ]
  ],
  "ThirdGoodIterator": [
    [
      "tests/functional/n/non/non_iterator_returned.py",
      [
        "ThirdGoodIterator"
      ]
    ]
  ],
  "FourthGoodIterator": [
    [
      "tests/functional/n/non/non_iterator_returned.py",
      [
        "FourthGoodIterator"
      ]
    ]
  ],
  "IteratorMetaclass": [
    [
      "tests/functional/n/non/non_iterator_returned.py",
      [
        "IteratorMetaclass"
      ]
    ]
  ],
  "IteratorClass": [
    [
      "tests/functional/n/non/non_iterator_returned.py",
      [
        "IteratorClass"
      ]
    ]
  ],
  "FifthGoodIterator": [
    [
      "tests/functional/n/non/non_iterator_returned.py",
      [
        "FifthGoodIterator"
      ]
    ]
  ],
  "FileBasedIterator": [
    [
      "tests/functional/n/non/non_iterator_returned.py",
      [
        "FileBasedIterator"
      ]
    ]
  ],
  "FirstBadIterator": [
    [
      "tests/functional/n/non/non_iterator_returned.py",
      [
        "FirstBadIterator"
      ]
    ]
  ],
  "SecondBadIterator": [
    [
      "tests/functional/n/non/non_iterator_returned.py",
      [
        "SecondBadIterator"
      ]
    ]
  ],
  "ThirdBadIterator": [
    [
      "tests/functional/n/non/non_iterator_returned.py",
      [
        "ThirdBadIterator"
      ]
    ]
  ],
  "FourthBadIterator": [
    [
      "tests/functional/n/non/non_iterator_returned.py",
      [
        "FourthBadIterator"
      ]
    ]
  ],
  "ExampleClass": [
    [
      "tests/functional/n/non/non_str_assignment_to_dunder_name.py",
      [
        "ExampleClass"
      ]
    ]
  ],
  "NonIterableClass": [
    [
      "tests/functional/n/none_dunder_protocols_py36.py",
      [
        "NonIterableClass"
      ]
    ]
  ],
  "OldNonIterableClass": [
    [
      "tests/functional/n/none_dunder_protocols_py36.py",
      [
        "OldNonIterableClass"
      ]
    ]
  ],
  "NonContainerClass": [
    [
      "tests/functional/n/none_dunder_protocols_py36.py",
      [
        "NonContainerClass"
      ]
    ]
  ],
  "PartialAsyncContextManager": [
    [
      "tests/functional/n/not_async_context_manager.py",
      [
        "PartialAsyncContextManager"
      ]
    ]
  ],
  "SecondPartialAsyncContextManager": [
    [
      "tests/functional/n/not_async_context_manager.py",
      [
        "SecondPartialAsyncContextManager"
      ]
    ]
  ],
  "AsyncManagerMixin": [
    [
      "tests/functional/n/not_async_context_manager.py",
      [
        "AsyncManagerMixin"
      ]
    ]
  ],
  "GoodAsyncManager": [
    [
      "tests/functional/n/not_async_context_manager.py",
      [
        "GoodAsyncManager"
      ]
    ]
  ],
  "InheritExit": [
    [
      "tests/functional/n/not_async_context_manager.py",
      [
        "InheritExit"
      ]
    ]
  ],
  "SecondGoodAsyncManager": [
    [
      "tests/functional/n/not_async_context_manager.py",
      [
        "SecondGoodAsyncManager"
      ]
    ]
  ],
  "Correct": [
    [
      "tests/functional/n/not_callable.py",
      [
        "Correct"
      ]
    ]
  ],
  "MetaCorrect": [
    [
      "tests/functional/n/not_callable.py",
      [
        "MetaCorrect"
      ]
    ]
  ],
  "MyProperty": [
    [
      "tests/functional/n/not_callable.py",
      [
        "MyProperty"
      ]
    ]
  ],
  "PropertyTest": [
    [
      "tests/functional/n/not_callable.py",
      [
        "PropertyTest"
      ]
    ]
  ],
  "SafeProperty": [
    [
      "tests/functional/n/not_callable.py",
      [
        "SafeProperty"
      ]
    ]
  ],
  "UnknownBaseCallable": [
    [
      "tests/functional/n/not_callable.py",
      [
        "UnknownBaseCallable"
      ]
    ]
  ],
  "Manager": [
    [
      "tests/functional/n/not_context_manager.py",
      [
        "Manager"
      ]
    ]
  ],
  "AnotherManager": [
    [
      "tests/functional/n/not_context_manager.py",
      [
        "AnotherManager"
      ]
    ]
  ],
  "NotAManager": [
    [
      "tests/functional/n/not_context_manager.py",
      [
        "NotAManager"
      ]
    ]
  ],
  "TestKnownBases": [
    [
      "tests/functional/n/not_context_manager.py",
      [
        "TestKnownBases"
      ]
    ]
  ],
  "ManagerMixin": [
    [
      "tests/functional/n/not_context_manager.py",
      [
        "ManagerMixin"
      ]
    ]
  ],
  "FullContextManager": [
    [
      "tests/functional/n/not_context_manager.py",
      [
        "FullContextManager"
      ]
    ]
  ],
  "Statement": [
    [
      "tests/functional/o/object_as_class_attribute.py",
      [
        "Statement"
      ]
    ]
  ],
  "Myarray": [
    [
      "tests/functional/o/overloaded_operator.py",
      [
        "Myarray"
      ]
    ]
  ],
  "Point2D": [
    [
      "tests/functional/p/pattern_matching.py",
      [
        "Point2D"
      ]
    ]
  ],
  "Other": [
    [
      "tests/functional/p/postponed_evaluation_activated.py",
      [
        "Other"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_activated_with_alias.py",
      [
        "Other"
      ]
    ]
  ],
  "ExampleSelf": [
    [
      "tests/functional/p/postponed_evaluation_activated.py",
      [
        "ExampleSelf"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_activated_with_alias.py",
      [
        "ExampleSelf"
      ]
    ]
  ],
  "CustomIntListError": [
    [
      "tests/functional/p/postponed_evaluation_pep585.py",
      [
        "CustomIntListError"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_error.py",
      [
        "CustomIntListError"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_py39.py",
      [
        "CustomIntListError"
      ]
    ]
  ],
  "OrderedDict": [
    [
      "tests/functional/p/postponed_evaluation_pep585.py",
      [
        "OrderedDict"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_py39.py",
      [
        "OrderedDict"
      ]
    ]
  ],
  "MyClassBase": [
    [
      "tests/functional/p/property_with_parameters.py",
      [
        "MyClassBase"
      ]
    ]
  ],
  "Hasher": [
    [
      "tests/functional/p/protocol_classes.py",
      [
        "Hasher"
      ]
    ]
  ],
  "Protocol": [
    [
      "tests/functional/p/protocol_classes.py",
      [
        "Protocol"
      ]
    ]
  ],
  "HasherFake": [
    [
      "tests/functional/p/protocol_classes.py",
      [
        "HasherFake"
      ]
    ]
  ],
  "Exc": [
    [
      "tests/functional/r/raise/raising_non_exception_py3.py",
      [
        "Exc"
      ]
    ]
  ],
  "MultiException": [
    [
      "tests/functional/r/raise/raising_self.py",
      [
        "MultiException"
      ]
    ]
  ],
  "Repository": [
    [
      "tests/functional/r/recursion/recursion_error_2861.py",
      [
        "Repository"
      ]
    ]
  ],
  "Custom": [
    [
      "tests/functional/r/recursion/recursion_error_3152.py",
      [
        "Custom"
      ]
    ],
    [
      "tests/functional/s/string/string_formatting.py",
      [
        "Custom"
      ]
    ]
  ],
  "AnyCommand": [
    [
      "tests/functional/r/recursion/recursion_error_3159.py",
      [
        "AnyCommand"
      ]
    ]
  ],
  "NewDate": [
    [
      "tests/functional/r/recursion/recursion_error_940.py",
      [
        "NewDate"
      ]
    ]
  ],
  "Next": [
    [
      "tests/functional/r/recursion/recursion_error_940.py",
      [
        "Next"
      ]
    ]
  ],
  "RegressionWithArgs": [
    [
      "tests/functional/r/redundant_unittest_assert.py",
      [
        "RegressionWithArgs"
      ]
    ]
  ],
  "Color": [
    [
      "tests/functional/r/regression/regression_2306_enum_value.py",
      [
        "Color"
      ]
    ]
  ],
  "Service": [
    [
      "tests/functional/r/regression/regression_2443_duplicate_bases.py",
      [
        "Service"
      ]
    ]
  ],
  "BaseCorrect": [
    [
      "tests/functional/r/regression/regression_2913.py",
      [
        "BaseCorrect"
      ]
    ]
  ],
  "BaseInner": [
    [
      "tests/functional/r/regression/regression_2913.py",
      [
        "BaseInner"
      ]
    ]
  ],
  "Subcls": [
    [
      "tests/functional/r/regression/regression_3231_no_member_property.py",
      [
        "Subcls"
      ]
    ]
  ],
  "ConfigManager": [
    [
      "tests/functional/r/regression/regression_no_value_for_parameter.py",
      [
        "ConfigManager"
      ]
    ]
  ],
  "Foobar": [
    [
      "tests/functional/r/regression/regression_posonly_args.py",
      [
        "Foobar"
      ]
    ]
  ],
  "Meta2": [
    [
      "tests/functional/r/regression/regression_properties_in_class_context.py",
      [
        "Meta2"
      ]
    ],
    [
      "tests/functional/u/unused/unused_import_py30.py",
      [
        "Meta2"
      ]
    ]
  ],
  "Parent2": [
    [
      "tests/functional/r/regression/regression_properties_in_class_context.py",
      [
        "Parent2"
      ]
    ]
  ],
  "Person": [
    [
      "tests/functional/r/regression/regression_property_no_member_2641.py",
      [
        "Person"
      ]
    ]
  ],
  "Myself": [
    [
      "tests/functional/r/regression/regression_property_no_member_2641.py",
      [
        "Myself"
      ]
    ]
  ],
  "Wife": [
    [
      "tests/functional/r/regression/regression_property_no_member_2641.py",
      [
        "Wife"
      ]
    ]
  ],
  "X": [
    [
      "tests/functional/r/regression/regression_property_no_member_870.py",
      [
        "X"
      ]
    ]
  ],
  "NodeCheckMetaClass": [
    [
      "tests/functional/r/regression/regression_too_many_arguments_2335.py",
      [
        "NodeCheckMetaClass"
      ]
    ]
  ],
  "MyClass2": [
    [
      "tests/functional/r/return_in_init.py",
      [
        "MyClass2"
      ]
    ]
  ],
  "MyClass3": [
    [
      "tests/functional/r/return_in_init.py",
      [
        "MyClass3"
      ]
    ]
  ],
  "MyClass5": [
    [
      "tests/functional/r/return_in_init.py",
      [
        "MyClass5"
      ]
    ]
  ],
  "RedefinedModuleLevel": [
    [
      "tests/functional/s/self/self_assigning_variable.py",
      [
        "RedefinedModuleLevel"
      ]
    ]
  ],
  "TestNonLocal": [
    [
      "tests/functional/s/self/self_cls_assignment.py",
      [
        "TestNonLocal"
      ]
    ]
  ],
  "Ghij": [
    [
      "tests/functional/s/signature_differs.py",
      [
        "Ghij"
      ]
    ]
  ],
  "FakeSingleDispatch": [
    [
      "tests/functional/s/singledispatch_functions_py3.py",
      [
        "FakeSingleDispatch"
      ]
    ]
  ],
  "NotIterable": [
    [
      "tests/functional/s/slots_checks.py",
      [
        "NotIterable"
      ]
    ]
  ],
  "FifthGood": [
    [
      "tests/functional/s/slots_checks.py",
      [
        "FifthGood"
      ]
    ],
    [
      "tests/functional/u/undefined/undefined_variable_py30.py",
      [
        "FifthGood"
      ]
    ]
  ],
  "SixthGood": [
    [
      "tests/functional/s/slots_checks.py",
      [
        "SixthGood"
      ]
    ]
  ],
  "SecondBad": [
    [
      "tests/functional/s/slots_checks.py",
      [
        "SecondBad"
      ]
    ],
    [
      "tests/functional/u/undefined/undefined_variable_py30.py",
      [
        "SecondBad"
      ]
    ]
  ],
  "ThirdBad": [
    [
      "tests/functional/s/slots_checks.py",
      [
        "ThirdBad"
      ]
    ]
  ],
  "FourthBad": [
    [
      "tests/functional/s/slots_checks.py",
      [
        "FourthBad"
      ]
    ]
  ],
  "FifthBad": [
    [
      "tests/functional/s/slots_checks.py",
      [
        "FifthBad"
      ]
    ]
  ],
  "SixthBad": [
    [
      "tests/functional/s/slots_checks.py",
      [
        "SixthBad"
      ]
    ]
  ],
  "SeventhBad": [
    [
      "tests/functional/s/slots_checks.py",
      [
        "SeventhBad"
      ]
    ]
  ],
  "EighthBad": [
    [
      "tests/functional/s/slots_checks.py",
      [
        "EighthBad"
      ]
    ]
  ],
  "PotentiallyGood": [
    [
      "tests/functional/s/slots_checks.py",
      [
        "PotentiallyGood"
      ]
    ]
  ],
  "PotentiallySecondGood": [
    [
      "tests/functional/s/slots_checks.py",
      [
        "PotentiallySecondGood"
      ]
    ]
  ],
  "PotentiallyThirdGood": [
    [
      "tests/functional/s/slots_checks.py",
      [
        "PotentiallyThirdGood"
      ]
    ]
  ],
  "PotentiallyFourthGood": [
    [
      "tests/functional/s/slots_checks.py",
      [
        "PotentiallyFourthGood"
      ]
    ]
  ],
  "ValueInSlotConflict": [
    [
      "tests/functional/s/slots_checks.py",
      [
        "ValueInSlotConflict"
      ]
    ]
  ],
  "ChildNotAffectedByValueInSlot": [
    [
      "tests/functional/s/slots_checks.py",
      [
        "ChildNotAffectedByValueInSlot"
      ]
    ]
  ],
  "ClassLevelAttributeTest": [
    [
      "tests/functional/s/statement_without_effect.py",
      [
        "ClassLevelAttributeTest"
      ]
    ],
    [
      "tests/functional/s/statement_without_effect_py36.py",
      [
        "ClassLevelAttributeTest"
      ]
    ]
  ],
  "EllipsisBody": [
    [
      "tests/functional/s/statement_without_effect.py",
      [
        "EllipsisBody"
      ]
    ]
  ],
  "RebornStopIteration": [
    [
      "tests/functional/s/stop_iteration_inside_generator.py",
      [
        "RebornStopIteration"
      ]
    ]
  ],
  "SomeClassWithNext": [
    [
      "tests/functional/s/stop_iteration_inside_generator.py",
      [
        "SomeClassWithNext"
      ]
    ]
  ],
  "Getitem": [
    [
      "tests/functional/s/string/string_formatting.py",
      [
        "Getitem"
      ]
    ]
  ],
  "ReturnYes": [
    [
      "tests/functional/s/string/string_formatting.py",
      [
        "ReturnYes"
      ]
    ]
  ],
  "NewAaaa": [
    [
      "tests/functional/s/super/super_checks.py",
      [
        "NewAaaa"
      ]
    ]
  ],
  "Py3kAaaa": [
    [
      "tests/functional/s/super/super_checks.py",
      [
        "Py3kAaaa"
      ]
    ]
  ],
  "Py3kWrongSuper": [
    [
      "tests/functional/s/super/super_checks.py",
      [
        "Py3kWrongSuper"
      ]
    ]
  ],
  "WrongNameRegression": [
    [
      "tests/functional/s/super/super_checks.py",
      [
        "WrongNameRegression"
      ]
    ]
  ],
  "CrashSuper": [
    [
      "tests/functional/s/super/super_checks.py",
      [
        "CrashSuper"
      ]
    ]
  ],
  "SuperDifferentScope": [
    [
      "tests/functional/s/super/super_checks.py",
      [
        "SuperDifferentScope"
      ]
    ]
  ],
  "InvalidSuperChecks": [
    [
      "tests/functional/s/super/super_checks.py",
      [
        "InvalidSuperChecks"
      ]
    ]
  ],
  "SuperWithType": [
    [
      "tests/functional/s/super/super_checks.py",
      [
        "SuperWithType"
      ]
    ]
  ],
  "SuperWithSelfClass": [
    [
      "tests/functional/s/super/super_checks.py",
      [
        "SuperWithSelfClass"
      ]
    ]
  ],
  "Baz": [
    [
      "tests/functional/s/super/super_with_arguments.py",
      [
        "Baz"
      ]
    ]
  ],
  "Qux": [
    [
      "tests/functional/s/super/super_with_arguments.py",
      [
        "Qux"
      ]
    ]
  ],
  "NotSuperCall": [
    [
      "tests/functional/s/super/super_with_arguments.py",
      [
        "NotSuperCall"
      ]
    ]
  ],
  "InvalidSuperCall": [
    [
      "tests/functional/s/super/super_with_arguments.py",
      [
        "InvalidSuperCall"
      ]
    ]
  ],
  "WrapperClass": [
    [
      "tests/functional/t/test_compile.py",
      [
        "WrapperClass"
      ]
    ]
  ],
  "EnoughPublicMethods": [
    [
      "tests/functional/t/too/too_few_public_methods.py",
      [
        "EnoughPublicMethods"
      ]
    ]
  ],
  "BossMonster": [
    [
      "tests/functional/t/too/too_few_public_methods.py",
      [
        "BossMonster"
      ]
    ]
  ],
  "DumbList": [
    [
      "tests/functional/t/too/too_few_public_methods.py",
      [
        "DumbList"
      ]
    ]
  ],
  "ScheduledTxSearchModel": [
    [
      "tests/functional/t/too/too_few_public_methods_37.py",
      [
        "ScheduledTxSearchModel"
      ]
    ]
  ],
  "ScheduledTxSearchModelOne": [
    [
      "tests/functional/t/too/too_few_public_methods_37.py",
      [
        "ScheduledTxSearchModelOne"
      ]
    ]
  ],
  "Point": [
    [
      "tests/functional/t/too/too_few_public_methods_37.py",
      [
        "Point"
      ]
    ]
  ],
  "Cccc": [
    [
      "tests/functional/t/too/too_many_ancestors.py",
      [
        "Cccc"
      ]
    ]
  ],
  "Dddd": [
    [
      "tests/functional/t/too/too_many_ancestors.py",
      [
        "Dddd"
      ]
    ]
  ],
  "Eeee": [
    [
      "tests/functional/t/too/too_many_ancestors.py",
      [
        "Eeee"
      ]
    ]
  ],
  "Ffff": [
    [
      "tests/functional/t/too/too_many_ancestors.py",
      [
        "Ffff"
      ]
    ]
  ],
  "Gggg": [
    [
      "tests/functional/t/too/too_many_ancestors.py",
      [
        "Gggg"
      ]
    ]
  ],
  "Hhhh": [
    [
      "tests/functional/t/too/too_many_ancestors.py",
      [
        "Hhhh"
      ]
    ]
  ],
  "Iiii": [
    [
      "tests/functional/t/too/too_many_ancestors.py",
      [
        "Iiii"
      ]
    ]
  ],
  "Jjjj": [
    [
      "tests/functional/t/too/too_many_ancestors.py",
      [
        "Jjjj"
      ]
    ]
  ],
  "ItemSequence": [
    [
      "tests/functional/t/too/too_many_ancestors.py",
      [
        "ItemSequence"
      ]
    ]
  ],
  "ClassA": [
    [
      "tests/functional/t/too/too_many_arguments_overload.py",
      [
        "ClassA"
      ]
    ]
  ],
  "ClassB": [
    [
      "tests/functional/t/too/too_many_arguments_overload.py",
      [
        "ClassB"
      ]
    ]
  ],
  "BBB": [
    [
      "tests/functional/t/too/too_many_public_methods.py",
      [
        "BBB"
      ]
    ]
  ],
  "AAAException": [
    [
      "tests/functional/t/try_except_raise.py",
      [
        "AAAException"
      ]
    ]
  ],
  "BBBException": [
    [
      "tests/functional/t/try_except_raise.py",
      [
        "BBBException"
      ]
    ]
  ],
  "TestBaseException": [
    [
      "tests/functional/t/try_except_raise_crash.py",
      [
        "TestBaseException"
      ]
    ]
  ],
  "TestException": [
    [
      "tests/functional/t/try_except_raise_crash.py",
      [
        "TestException"
      ]
    ]
  ],
  "CustomTD": [
    [
      "tests/functional/t/typedDict.py",
      [
        "CustomTD"
      ]
    ]
  ],
  "CustomTD2": [
    [
      "tests/functional/t/typedDict.py",
      [
        "CustomTD2"
      ]
    ]
  ],
  "CustomTD3": [
    [
      "tests/functional/t/typedDict.py",
      [
        "CustomTD3"
      ]
    ]
  ],
  "Impl": [
    [
      "tests/functional/t/typing_generic.py",
      [
        "Impl"
      ]
    ]
  ],
  "UnbalancedUnpacking": [
    [
      "tests/functional/u/unbalanced_tuple_unpacking.py",
      [
        "UnbalancedUnpacking"
      ]
    ]
  ],
  "MissingAncestor": [
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "TestClass",
        "MissingAncestor"
      ]
    ]
  ],
  "Self": [
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "Self"
      ]
    ]
  ],
  "Self1": [
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "Self1"
      ]
    ]
  ],
  "Ancestor1": [
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "Ancestor1"
      ]
    ]
  ],
  "KeywordArgument": [
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "KeywordArgument"
      ]
    ]
  ],
  "MyError": [
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "MyError"
      ]
    ],
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "MyClass",
        "MyError"
      ]
    ]
  ],
  "LambdaClass": [
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "LambdaClass"
      ]
    ]
  ],
  "LambdaClass2": [
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "LambdaClass2"
      ]
    ]
  ],
  "LambdaClass3": [
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "LambdaClass3"
      ]
    ]
  ],
  "LambdaClass4": [
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "LambdaClass4"
      ]
    ]
  ],
  "LambdaClass5": [
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "LambdaClass5"
      ]
    ]
  ],
  "DunderClass": [
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "DunderClass"
      ]
    ]
  ],
  "Undefined": [
    [
      "tests/functional/u/undefined/undefined_variable_py30.py",
      [
        "Undefined"
      ]
    ]
  ],
  "InnerScope": [
    [
      "tests/functional/u/undefined/undefined_variable_py30.py",
      [
        "Undefined1",
        "InnerScope"
      ]
    ]
  ],
  "Undefined1": [
    [
      "tests/functional/u/undefined/undefined_variable_py30.py",
      [
        "Undefined1"
      ]
    ]
  ],
  "FalsePositive342": [
    [
      "tests/functional/u/undefined/undefined_variable_py30.py",
      [
        "FalsePositive342"
      ]
    ]
  ],
  "Invalid": [
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "Invalid"
      ]
    ]
  ],
  "FirstBadContextManager": [
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "FirstBadContextManager"
      ]
    ]
  ],
  "SecondBadContextManager": [
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "SecondBadContextManager"
      ]
    ]
  ],
  "ThirdBadContextManager": [
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "ThirdBadContextManager"
      ]
    ]
  ],
  "Async": [
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "Async"
      ]
    ]
  ],
  "Valid": [
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "Valid"
      ]
    ]
  ],
  "FirstGoodContextManager": [
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "FirstGoodContextManager"
      ]
    ]
  ],
  "SecondGoodContextManager": [
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "SecondGoodContextManager"
      ]
    ]
  ],
  "ThirdGoodContextManager": [
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "ThirdGoodContextManager"
      ]
    ]
  ],
  "Unhashable": [
    [
      "tests/functional/u/unhashable_dict_key.py",
      [
        "Unhashable"
      ]
    ]
  ],
  "DocstringOnly": [
    [
      "tests/functional/u/unnecessary/unnecessary_pass.py",
      [
        "DocstringOnly"
      ]
    ]
  ],
  "PassOnly": [
    [
      "tests/functional/u/unnecessary/unnecessary_pass.py",
      [
        "PassOnly"
      ]
    ]
  ],
  "DocstringAndPass": [
    [
      "tests/functional/u/unnecessary/unnecessary_pass.py",
      [
        "DocstringAndPass"
      ]
    ]
  ],
  "Seq": [
    [
      "tests/functional/u/unpacking_non_sequence.py",
      [
        "Seq"
      ]
    ]
  ],
  "Iter": [
    [
      "tests/functional/u/unpacking_non_sequence.py",
      [
        "Iter"
      ]
    ]
  ],
  "MetaIter": [
    [
      "tests/functional/u/unpacking_non_sequence.py",
      [
        "MetaIter"
      ]
    ]
  ],
  "IterClass": [
    [
      "tests/functional/u/unpacking_non_sequence.py",
      [
        "IterClass"
      ]
    ]
  ],
  "AbstrClass": [
    [
      "tests/functional/u/unpacking_non_sequence.py",
      [
        "AbstrClass"
      ]
    ]
  ],
  "NonSeq": [
    [
      "tests/functional/u/unpacking_non_sequence.py",
      [
        "NonSeq"
      ]
    ]
  ],
  "ClassUnpacking": [
    [
      "tests/functional/u/unpacking_non_sequence.py",
      [
        "ClassUnpacking"
      ]
    ]
  ],
  "TestBase": [
    [
      "tests/functional/u/unpacking_non_sequence.py",
      [
        "TestBase"
      ]
    ]
  ],
  "NonSubscriptable": [
    [
      "tests/functional/u/unsubscriptable_value.py",
      [
        "NonSubscriptable"
      ]
    ],
    [
      "tests/functional/u/unsupported/unsupported_assignment_operation.py",
      [
        "NonSubscriptable"
      ]
    ],
    [
      "tests/functional/u/unsupported/unsupported_delete_operation.py",
      [
        "NonSubscriptable"
      ]
    ]
  ],
  "Subscriptable": [
    [
      "tests/functional/u/unsubscriptable_value.py",
      [
        "Subscriptable"
      ]
    ],
    [
      "tests/functional/u/unsubscriptable_value_py37.py",
      [
        "Subscriptable"
      ]
    ],
    [
      "tests/functional/u/unsupported/unsupported_assignment_operation.py",
      [
        "Subscriptable"
      ]
    ],
    [
      "tests/functional/u/unsupported/unsupported_delete_operation.py",
      [
        "Subscriptable"
      ]
    ]
  ],
  "MaybeSubscriptable": [
    [
      "tests/functional/u/unsubscriptable_value.py",
      [
        "MaybeSubscriptable"
      ]
    ],
    [
      "tests/functional/u/unsupported/unsupported_assignment_operation.py",
      [
        "MaybeSubscriptable"
      ]
    ],
    [
      "tests/functional/u/unsupported/unsupported_delete_operation.py",
      [
        "MaybeSubscriptable"
      ]
    ]
  ],
  "MetaSubscriptable": [
    [
      "tests/functional/u/unsubscriptable_value.py",
      [
        "MetaSubscriptable"
      ]
    ],
    [
      "tests/functional/u/unsupported/unsupported_assignment_operation.py",
      [
        "MetaSubscriptable"
      ]
    ],
    [
      "tests/functional/u/unsupported/unsupported_delete_operation.py",
      [
        "MetaSubscriptable"
      ]
    ]
  ],
  "SubscriptableClass": [
    [
      "tests/functional/u/unsubscriptable_value.py",
      [
        "SubscriptableClass"
      ]
    ],
    [
      "tests/functional/u/unsupported/unsupported_assignment_operation.py",
      [
        "SubscriptableClass"
      ]
    ],
    [
      "tests/functional/u/unsupported/unsupported_delete_operation.py",
      [
        "SubscriptableClass"
      ]
    ]
  ],
  "AbstractClass": [
    [
      "tests/functional/u/unsubscriptable_value.py",
      [
        "AbstractClass"
      ]
    ]
  ],
  "ClassMixin": [
    [
      "tests/functional/u/unsubscriptable_value.py",
      [
        "ClassMixin"
      ]
    ]
  ],
  "A1": [
    [
      "tests/functional/u/unsupported/unsupported_binary_operation.py",
      [
        "A1"
      ]
    ]
  ],
  "A2": [
    [
      "tests/functional/u/unsupported/unsupported_binary_operation.py",
      [
        "A2"
      ]
    ]
  ],
  "B2": [
    [
      "tests/functional/u/unsupported/unsupported_binary_operation.py",
      [
        "B2"
      ]
    ]
  ],
  "A3": [
    [
      "tests/functional/u/unsupported/unsupported_binary_operation.py",
      [
        "A3"
      ]
    ]
  ],
  "B3": [
    [
      "tests/functional/u/unsupported/unsupported_binary_operation.py",
      [
        "B3"
      ]
    ]
  ],
  "Sub2": [
    [
      "tests/functional/u/unused/unused_argument.py",
      [
        "Sub2"
      ]
    ]
  ],
  "NonRegr": [
    [
      "tests/functional/u/unused/unused_import.py",
      [
        "NonRegr"
      ]
    ]
  ],
  "Y": [
    [
      "tests/functional/u/unused/unused_import_assigned_to.py",
      [
        "Y"
      ]
    ]
  ],
  "BaseModel": [
    [
      "tests/functional/u/unused/unused_import_assigned_to.py",
      [
        "BaseModel"
      ]
    ]
  ],
  "bar": [
    [
      "tests/functional/u/unused/unused_import_assigned_to.py",
      [
        "bar"
      ]
    ]
  ],
  "Parent_2": [
    [
      "tests/functional/u/unused/unused_import_class_def_keyword.py",
      [
        "Parent_2"
      ]
    ]
  ],
  "AnotherClass": [
    [
      "tests/functional/u/unused/unused_private_member.py",
      [
        "AnotherClass"
      ]
    ]
  ],
  "HasUnusedInClass": [
    [
      "tests/functional/u/unused/unused_private_member.py",
      [
        "HasUnusedInClass"
      ]
    ]
  ],
  "MyCls": [
    [
      "tests/functional/u/unused/unused_private_member.py",
      [
        "MyCls"
      ]
    ]
  ],
  "HasUnusedDunderClass": [
    [
      "tests/functional/u/unused/unused_variable.py",
      [
        "HasUnusedDunderClass"
      ]
    ]
  ],
  "FalsePositive": [
    [
      "tests/functional/u/use/used_before_assignment_issue1081.py",
      [
        "FalsePositive"
      ]
    ]
  ],
  "G": [
    [
      "tests/functional/u/useless/useless_object_inheritance.py",
      [
        "G"
      ]
    ]
  ],
  "SuperBase": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "SuperBase"
      ]
    ]
  ],
  "NotUselessSuper": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation_py3.py",
      [
        "NotUselessSuper"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation_py35.py",
      [
        "NotUselessSuper"
      ]
    ]
  ],
  "UselessSuper": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "UselessSuper"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation_py3.py",
      [
        "UselessSuper"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation_py35.py",
      [
        "UselessSuper"
      ]
    ]
  ],
  "NotUselessSuperDecorators": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuperDecorators"
      ]
    ]
  ],
  "AlsoNotUselessSuper": [
    [
      "tests/functional/u/useless/useless_super_delegation_py3.py",
      [
        "AlsoNotUselessSuper"
      ]
    ]
  ],
  "Egg": [
    [
      "tests/functional/u/useless/useless_super_delegation_py3.py",
      [
        "Egg"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation_py38.py",
      [
        "Egg"
      ]
    ]
  ],
  "Spam": [
    [
      "tests/functional/u/useless/useless_super_delegation_py3.py",
      [
        "Spam"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation_py38.py",
      [
        "Spam"
      ]
    ]
  ],
  "Ham": [
    [
      "tests/functional/u/useless/useless_super_delegation_py3.py",
      [
        "Ham"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation_py38.py",
      [
        "Ham"
      ]
    ]
  ],
  "Amet": [
    [
      "tests/input/similar_lines_a.py",
      [
        "Amet"
      ]
    ]
  ],
  "Nulla": [
    [
      "tests/input/similar_lines_b.py",
      [
        "Nulla"
      ]
    ]
  ],
  "Commodo": [
    [
      "tests/input/similar_lines_b.py",
      [
        "Commodo"
      ]
    ]
  ],
  "TestPreprocessOptions": [
    [
      "tests/lint/unittest_lint.py",
      [
        "TestPreprocessOptions"
      ]
    ]
  ],
  "_CustomPyLinter": [
    [
      "tests/lint/unittest_lint.py",
      [
        "_CustomPyLinter"
      ]
    ]
  ],
  "FalseChecker": [
    [
      "tests/message/unittest_message_definition.py",
      [
        "FalseChecker"
      ]
    ]
  ],
  "TestMessagesDefinition": [
    [
      "tests/message/unittest_message_definition.py",
      [
        "TestMessagesDefinition"
      ]
    ]
  ],
  "Checker": [
    [
      "tests/message/unittest_message_definition_store.py",
      [
        "test_register_error",
        "Checker"
      ]
    ],
    [
      "tests/utils/unittest_ast_walker.py",
      [
        "TestASTWalker",
        "Checker"
      ]
    ]
  ],
  "TestMessageDefinitionStore": [
    [
      "tests/message/unittest_message_definition_store.py",
      [
        "TestMessageDefinitionStore"
      ]
    ]
  ],
  "FamillyChecker": [
    [
      "tests/message/unittest_message_definition_store.py",
      [
        "test_multiple_child_of_old_name",
        "FamillyChecker"
      ]
    ]
  ],
  "InventoryItem": [
    [
      "tests/regrtest_data/dataclasses_pyreverse/__init__.py",
      [
        "InventoryItem"
      ]
    ]
  ],
  "Page": [
    [
      "tests/regrtest_data/descriptor_crash.py",
      [
        "Page"
      ]
    ]
  ],
  "DummyPlugin1": [
    [
      "tests/regrtest_data/dummy_plugin/dummy_plugin.py",
      [
        "DummyPlugin1"
      ]
    ]
  ],
  "DummyPlugin2": [
    [
      "tests/regrtest_data/dummy_plugin/dummy_plugin.py",
      [
        "DummyPlugin2"
      ]
    ]
  ],
  "ClassLevelMessage": [
    [
      "tests/regrtest_data/func_block_disable_msg.py",
      [
        "ClassLevelMessage"
      ]
    ]
  ],
  "test": [
    [
      "tests/regrtest_data/no_stdout_encoding.py",
      [
        "test"
      ]
    ]
  ],
  "AudioTime": [
    [
      "tests/regrtest_data/package/__init__.py",
      [
        "AudioTime"
      ]
    ]
  ],
  "Something": [
    [
      "tests/regrtest_data/wrong_import_position.py",
      [
        "Something"
      ]
    ]
  ],
  "SequentialTestChecker": [
    [
      "tests/test_check_parallel.py",
      [
        "SequentialTestChecker"
      ]
    ]
  ],
  "ExtraSequentialTestChecker": [
    [
      "tests/test_check_parallel.py",
      [
        "ExtraSequentialTestChecker"
      ]
    ]
  ],
  "ThirdSequentialTestChecker": [
    [
      "tests/test_check_parallel.py",
      [
        "ThirdSequentialTestChecker"
      ]
    ]
  ],
  "TestCheckParallelFramework": [
    [
      "tests/test_check_parallel.py",
      [
        "TestCheckParallelFramework"
      ]
    ]
  ],
  "TestCheckParallel": [
    [
      "tests/test_check_parallel.py",
      [
        "TestCheckParallel"
      ]
    ]
  ],
  "LintTestUsingModule": [
    [
      "tests/test_func.py",
      [
        "LintTestUsingModule"
      ]
    ]
  ],
  "LintTestUpdate": [
    [
      "tests/test_func.py",
      [
        "LintTestUpdate"
      ]
    ]
  ],
  "TestDialect": [
    [
      "tests/test_functional.py",
      [
        "LintModuleOutputUpdate",
        "TestDialect"
      ]
    ]
  ],
  "LintModuleOutputUpdate": [
    [
      "tests/test_functional.py",
      [
        "LintModuleOutputUpdate"
      ]
    ]
  ],
  "TestRunTC": [
    [
      "tests/test_self.py",
      [
        "TestRunTC"
      ]
    ]
  ],
  "TestDefaultDiadefGenerator": [
    [
      "tests/unittest_pyreverse_diadefs.py",
      [
        "TestDefaultDiadefGenerator"
      ]
    ]
  ],
  "Config": [
    [
      "tests/unittest_pyreverse_writer.py",
      [
        "Config"
      ]
    ]
  ],
  "NopReporter": [
    [
      "tests/unittest_reporting.py",
      [
        "NopReporter"
      ]
    ]
  ],
  "MockLinter": [
    [
      "tests/utils/unittest_ast_walker.py",
      [
        "TestASTWalker",
        "MockLinter"
      ]
    ]
  ],
  "TestASTWalker": [
    [
      "tests/utils/unittest_ast_walker.py",
      [
        "TestASTWalker"
      ]
    ]
  ]
}