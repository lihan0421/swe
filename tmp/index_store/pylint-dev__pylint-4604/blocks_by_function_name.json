{
  "builder_inited": [
    [
      "doc/exts/pylint_extensions.py",
      [
        "builder_inited"
      ]
    ],
    [
      "doc/exts/pylint_features.py",
      [
        "builder_inited"
      ]
    ]
  ],
  "get_plugins_info": [
    [
      "doc/exts/pylint_extensions.py",
      [
        "get_plugins_info"
      ]
    ]
  ],
  "setup": [
    [
      "doc/exts/pylint_extensions.py",
      [
        "setup"
      ]
    ],
    [
      "doc/exts/pylint_features.py",
      [
        "setup"
      ]
    ],
    [
      "tests/functional/m/missing/missing_self_argument.py",
      [
        "MyClass",
        "setup"
      ]
    ],
    [
      "tests/unittest_pyreverse_writer.py",
      [
        "setup"
      ]
    ]
  ],
  "visit_call": [
    [
      "examples/custom.py",
      [
        "MyAstroidChecker",
        "visit_call"
      ]
    ],
    [
      "pylint/checkers/base.py",
      [
        "BasicErrorChecker",
        "visit_call"
      ]
    ],
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "visit_call"
      ]
    ],
    [
      "pylint/checkers/deprecated.py",
      [
        "DeprecatedMixin",
        "visit_call"
      ]
    ],
    [
      "pylint/checkers/exceptions.py",
      [
        "ExceptionRaiseRefVisitor",
        "visit_call"
      ]
    ],
    [
      "pylint/checkers/logging.py",
      [
        "LoggingChecker",
        "visit_call"
      ]
    ],
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "visit_call"
      ]
    ],
    [
      "pylint/checkers/refactoring/len_checker.py",
      [
        "LenChecker",
        "visit_call"
      ]
    ],
    [
      "pylint/checkers/refactoring/recommendation_checker.py",
      [
        "RecommendationChecker",
        "visit_call"
      ]
    ],
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "visit_call"
      ]
    ],
    [
      "pylint/checkers/stdlib.py",
      [
        "StdlibChecker",
        "visit_call"
      ]
    ],
    [
      "pylint/checkers/strings.py",
      [
        "StringFormatChecker",
        "visit_call"
      ]
    ],
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "visit_call"
      ]
    ],
    [
      "pylint/checkers/typecheck.py",
      [
        "IterableChecker",
        "visit_call"
      ]
    ],
    [
      "pylint/extensions/bad_builtin.py",
      [
        "BadBuiltinChecker",
        "visit_call"
      ]
    ],
    [
      "tests/utils/unittest_ast_walker.py",
      [
        "TestASTWalker",
        "Checker",
        "visit_call"
      ]
    ]
  ],
  "register": [
    [
      "examples/custom.py",
      [
        "register"
      ]
    ],
    [
      "examples/custom_raw.py",
      [
        "register"
      ]
    ],
    [
      "examples/deprecation_checker.py",
      [
        "register"
      ]
    ],
    [
      "pylint/checkers/async.py",
      [
        "register"
      ]
    ],
    [
      "pylint/checkers/base.py",
      [
        "register"
      ]
    ],
    [
      "pylint/checkers/classes.py",
      [
        "register"
      ]
    ],
    [
      "pylint/checkers/design_analysis.py",
      [
        "register"
      ]
    ],
    [
      "pylint/checkers/exceptions.py",
      [
        "register"
      ]
    ],
    [
      "pylint/checkers/format.py",
      [
        "register"
      ]
    ],
    [
      "pylint/checkers/imports.py",
      [
        "register"
      ]
    ],
    [
      "pylint/checkers/logging.py",
      [
        "register"
      ]
    ],
    [
      "pylint/checkers/misc.py",
      [
        "register"
      ]
    ],
    [
      "pylint/checkers/newstyle.py",
      [
        "register"
      ]
    ],
    [
      "pylint/checkers/python3.py",
      [
        "register"
      ]
    ],
    [
      "pylint/checkers/raw_metrics.py",
      [
        "register"
      ]
    ],
    [
      "pylint/checkers/refactoring/__init__.py",
      [
        "register"
      ]
    ],
    [
      "pylint/checkers/similar.py",
      [
        "register"
      ]
    ],
    [
      "pylint/checkers/spelling.py",
      [
        "register"
      ]
    ],
    [
      "pylint/checkers/stdlib.py",
      [
        "register"
      ]
    ],
    [
      "pylint/checkers/strings.py",
      [
        "register"
      ]
    ],
    [
      "pylint/checkers/typecheck.py",
      [
        "register"
      ]
    ],
    [
      "pylint/checkers/variables.py",
      [
        "register"
      ]
    ],
    [
      "pylint/extensions/bad_builtin.py",
      [
        "register"
      ]
    ],
    [
      "pylint/extensions/broad_try_clause.py",
      [
        "register"
      ]
    ],
    [
      "pylint/extensions/check_docs.py",
      [
        "register"
      ]
    ],
    [
      "pylint/extensions/check_elif.py",
      [
        "register"
      ]
    ],
    [
      "pylint/extensions/code_style.py",
      [
        "register"
      ]
    ],
    [
      "pylint/extensions/comparetozero.py",
      [
        "register"
      ]
    ],
    [
      "pylint/extensions/confusing_elif.py",
      [
        "register"
      ]
    ],
    [
      "pylint/extensions/docparams.py",
      [
        "register"
      ]
    ],
    [
      "pylint/extensions/docstyle.py",
      [
        "register"
      ]
    ],
    [
      "pylint/extensions/empty_comment.py",
      [
        "register"
      ]
    ],
    [
      "pylint/extensions/emptystring.py",
      [
        "register"
      ]
    ],
    [
      "pylint/extensions/mccabe.py",
      [
        "register"
      ]
    ],
    [
      "pylint/extensions/overlapping_exceptions.py",
      [
        "register"
      ]
    ],
    [
      "pylint/extensions/redefined_variable_type.py",
      [
        "register"
      ]
    ],
    [
      "pylint/extensions/typing.py",
      [
        "register"
      ]
    ],
    [
      "pylint/reporters/json_reporter.py",
      [
        "register"
      ]
    ],
    [
      "pylint/reporters/text.py",
      [
        "register"
      ]
    ],
    [
      "tests/conftest.py",
      [
        "register"
      ]
    ],
    [
      "tests/extensions/test_check_mccabe.py",
      [
        "register"
      ]
    ],
    [
      "tests/functional/s/singledispatch_functions_py3.py",
      [
        "FakeSingleDispatch",
        "register"
      ]
    ],
    [
      "tests/regrtest_data/dummy_plugin/dummy_conf_plugin.py",
      [
        "register"
      ]
    ],
    [
      "tests/regrtest_data/dummy_plugin/dummy_plugin.py",
      [
        "register"
      ]
    ]
  ],
  "process_module": [
    [
      "examples/custom_raw.py",
      [
        "MyRawChecker",
        "process_module"
      ]
    ],
    [
      "pylint/checkers/format.py",
      [
        "FormatChecker",
        "process_module"
      ]
    ],
    [
      "pylint/checkers/misc.py",
      [
        "ByIdManagedMessagesChecker",
        "process_module"
      ]
    ],
    [
      "pylint/checkers/misc.py",
      [
        "EncodingChecker",
        "process_module"
      ]
    ],
    [
      "pylint/checkers/similar.py",
      [
        "SimilarChecker",
        "process_module"
      ]
    ],
    [
      "pylint/checkers/strings.py",
      [
        "StringConstantChecker",
        "process_module"
      ]
    ],
    [
      "pylint/extensions/empty_comment.py",
      [
        "CommentChecker",
        "process_module"
      ]
    ],
    [
      "pylint/interfaces.py",
      [
        "IRawChecker",
        "process_module"
      ]
    ],
    [
      "tests/benchmark/test_baseline_benchmarks.py",
      [
        "SleepingChecker",
        "process_module"
      ]
    ],
    [
      "tests/benchmark/test_baseline_benchmarks.py",
      [
        "SleepingCheckerLong",
        "process_module"
      ]
    ],
    [
      "tests/benchmark/test_baseline_benchmarks.py",
      [
        "NoWorkChecker",
        "process_module"
      ]
    ],
    [
      "tests/test_check_parallel.py",
      [
        "SequentialTestChecker",
        "process_module"
      ]
    ]
  ],
  "deprecated_methods": [
    [
      "examples/deprecation_checker.py",
      [
        "DeprecationChecker",
        "deprecated_methods"
      ]
    ],
    [
      "pylint/checkers/deprecated.py",
      [
        "DeprecatedMixin",
        "deprecated_methods"
      ]
    ],
    [
      "pylint/checkers/stdlib.py",
      [
        "StdlibChecker",
        "deprecated_methods"
      ]
    ],
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "_DeprecatedChecker",
        "deprecated_methods"
      ]
    ]
  ],
  "deprecated_arguments": [
    [
      "examples/deprecation_checker.py",
      [
        "DeprecationChecker",
        "deprecated_arguments"
      ]
    ],
    [
      "pylint/checkers/deprecated.py",
      [
        "DeprecatedMixin",
        "deprecated_arguments"
      ]
    ],
    [
      "pylint/checkers/stdlib.py",
      [
        "StdlibChecker",
        "deprecated_arguments"
      ]
    ],
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "_DeprecatedChecker",
        "deprecated_arguments"
      ]
    ]
  ],
  "run_pylint": [
    [
      "pylint/__init__.py",
      [
        "run_pylint"
      ]
    ]
  ],
  "run_epylint": [
    [
      "pylint/__init__.py",
      [
        "run_epylint"
      ]
    ]
  ],
  "run_pyreverse": [
    [
      "pylint/__init__.py",
      [
        "run_pyreverse"
      ]
    ]
  ],
  "run_symilar": [
    [
      "pylint/__init__.py",
      [
        "run_symilar"
      ]
    ]
  ],
  "modify_sys_path": [
    [
      "pylint/__init__.py",
      [
        "modify_sys_path"
      ]
    ]
  ],
  "get_numversion_from_version": [
    [
      "pylint/__pkginfo__.py",
      [
        "get_numversion_from_version"
      ]
    ]
  ],
  "table_lines_from_stats": [
    [
      "pylint/checkers/__init__.py",
      [
        "table_lines_from_stats"
      ]
    ]
  ],
  "initialize": [
    [
      "pylint/checkers/__init__.py",
      [
        "initialize"
      ]
    ],
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "initialize"
      ]
    ],
    [
      "pylint/reporters/__init__.py",
      [
        "initialize"
      ]
    ]
  ],
  "open": [
    [
      "pylint/checkers/async.py",
      [
        "AsyncChecker",
        "open"
      ]
    ],
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "open"
      ]
    ],
    [
      "pylint/checkers/base.py",
      [
        "NameChecker",
        "open"
      ]
    ],
    [
      "pylint/checkers/base.py",
      [
        "DocStringChecker",
        "open"
      ]
    ],
    [
      "pylint/checkers/base_checker.py",
      [
        "BaseChecker",
        "open"
      ]
    ],
    [
      "pylint/checkers/design_analysis.py",
      [
        "MisdesignChecker",
        "open"
      ]
    ],
    [
      "pylint/checkers/exceptions.py",
      [
        "ExceptionsChecker",
        "open"
      ]
    ],
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker",
        "open"
      ]
    ],
    [
      "pylint/checkers/misc.py",
      [
        "EncodingChecker",
        "open"
      ]
    ],
    [
      "pylint/checkers/raw_metrics.py",
      [
        "RawMetricsChecker",
        "open"
      ]
    ],
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "open"
      ]
    ],
    [
      "pylint/checkers/similar.py",
      [
        "SimilarChecker",
        "open"
      ]
    ],
    [
      "pylint/checkers/spelling.py",
      [
        "SpellingChecker",
        "open"
      ]
    ],
    [
      "pylint/interfaces.py",
      [
        "IChecker",
        "open"
      ]
    ],
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "open"
      ]
    ]
  ],
  "visit_asyncfunctiondef": [
    [
      "pylint/checkers/async.py",
      [
        "AsyncChecker",
        "visit_asyncfunctiondef"
      ]
    ]
  ],
  "visit_asyncwith": [
    [
      "pylint/checkers/async.py",
      [
        "AsyncChecker",
        "visit_asyncwith"
      ]
    ]
  ],
  "get_regex": [
    [
      "pylint/checkers/base.py",
      [
        "NamingStyle",
        "get_regex"
      ]
    ]
  ],
  "_redefines_import": [
    [
      "pylint/checkers/base.py",
      [
        "_redefines_import"
      ]
    ]
  ],
  "in_loop": [
    [
      "pylint/checkers/base.py",
      [
        "in_loop"
      ]
    ]
  ],
  "in_nested_list": [
    [
      "pylint/checkers/base.py",
      [
        "in_nested_list"
      ]
    ]
  ],
  "_get_break_loop_node": [
    [
      "pylint/checkers/base.py",
      [
        "_get_break_loop_node"
      ]
    ]
  ],
  "_loop_exits_early": [
    [
      "pylint/checkers/base.py",
      [
        "_loop_exits_early"
      ]
    ]
  ],
  "_is_multi_naming_match": [
    [
      "pylint/checkers/base.py",
      [
        "_is_multi_naming_match"
      ]
    ]
  ],
  "_get_properties": [
    [
      "pylint/checkers/base.py",
      [
        "_get_properties"
      ]
    ]
  ],
  "_determine_function_name_type": [
    [
      "pylint/checkers/base.py",
      [
        "_determine_function_name_type"
      ]
    ]
  ],
  "_has_abstract_methods": [
    [
      "pylint/checkers/base.py",
      [
        "_has_abstract_methods"
      ]
    ]
  ],
  "report_by_type_stats": [
    [
      "pylint/checkers/base.py",
      [
        "report_by_type_stats"
      ]
    ]
  ],
  "redefined_by_decorator": [
    [
      "pylint/checkers/base.py",
      [
        "redefined_by_decorator"
      ]
    ]
  ],
  "visit_classdef": [
    [
      "pylint/checkers/base.py",
      [
        "BasicErrorChecker",
        "visit_classdef"
      ]
    ],
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "visit_classdef"
      ]
    ],
    [
      "pylint/checkers/base.py",
      [
        "NameChecker",
        "visit_classdef"
      ]
    ],
    [
      "pylint/checkers/base.py",
      [
        "DocStringChecker",
        "visit_classdef"
      ]
    ],
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "visit_classdef"
      ]
    ],
    [
      "pylint/checkers/design_analysis.py",
      [
        "MisdesignChecker",
        "visit_classdef"
      ]
    ],
    [
      "pylint/checkers/exceptions.py",
      [
        "ExceptionRaiseLeafVisitor",
        "visit_classdef"
      ]
    ],
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "visit_classdef"
      ]
    ],
    [
      "pylint/checkers/spelling.py",
      [
        "SpellingChecker",
        "visit_classdef"
      ]
    ],
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "visit_classdef"
      ]
    ],
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "visit_classdef"
      ]
    ],
    [
      "pylint/extensions/docstyle.py",
      [
        "DocStringStyleChecker",
        "visit_classdef"
      ]
    ],
    [
      "pylint/extensions/redefined_variable_type.py",
      [
        "MultipleTypesChecker",
        "visit_classdef"
      ]
    ],
    [
      "pylint/pyreverse/diadefslib.py",
      [
        "DefaultDiadefGenerator",
        "visit_classdef"
      ]
    ],
    [
      "pylint/pyreverse/inspector.py",
      [
        "Linker",
        "visit_classdef"
      ]
    ]
  ],
  "_too_many_starred_for_tuple": [
    [
      "pylint/checkers/base.py",
      [
        "BasicErrorChecker",
        "_too_many_starred_for_tuple"
      ]
    ]
  ],
  "visit_assign": [
    [
      "pylint/checkers/base.py",
      [
        "BasicErrorChecker",
        "visit_assign"
      ]
    ],
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "visit_assign"
      ]
    ],
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "visit_assign"
      ]
    ],
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "visit_assign"
      ]
    ],
    [
      "pylint/checkers/strings.py",
      [
        "StringConstantChecker",
        "visit_assign"
      ]
    ],
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "visit_assign"
      ]
    ],
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "visit_assign"
      ]
    ],
    [
      "pylint/extensions/redefined_variable_type.py",
      [
        "MultipleTypesChecker",
        "visit_assign"
      ]
    ]
  ],
  "visit_starred": [
    [
      "pylint/checkers/base.py",
      [
        "BasicErrorChecker",
        "visit_starred"
      ]
    ]
  ],
  "visit_functiondef": [
    [
      "pylint/checkers/base.py",
      [
        "BasicErrorChecker",
        "visit_functiondef"
      ]
    ],
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "visit_functiondef"
      ]
    ],
    [
      "pylint/checkers/base.py",
      [
        "NameChecker",
        "visit_functiondef"
      ]
    ],
    [
      "pylint/checkers/base.py",
      [
        "DocStringChecker",
        "visit_functiondef"
      ]
    ],
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "visit_functiondef"
      ]
    ],
    [
      "pylint/checkers/classes.py",
      [
        "SpecialMethodsChecker",
        "visit_functiondef"
      ]
    ],
    [
      "pylint/checkers/design_analysis.py",
      [
        "MisdesignChecker",
        "visit_functiondef"
      ]
    ],
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker",
        "visit_functiondef"
      ]
    ],
    [
      "pylint/checkers/newstyle.py",
      [
        "NewStyleConflictChecker",
        "visit_functiondef"
      ]
    ],
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "visit_functiondef"
      ]
    ],
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "visit_functiondef"
      ]
    ],
    [
      "pylint/checkers/spelling.py",
      [
        "SpellingChecker",
        "visit_functiondef"
      ]
    ],
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "visit_functiondef"
      ]
    ],
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "visit_functiondef"
      ]
    ],
    [
      "pylint/extensions/docparams.py",
      [
        "DocstringParameterChecker",
        "visit_functiondef"
      ]
    ],
    [
      "pylint/extensions/docstyle.py",
      [
        "DocStringStyleChecker",
        "visit_functiondef"
      ]
    ],
    [
      "pylint/pyreverse/inspector.py",
      [
        "Linker",
        "visit_functiondef"
      ]
    ]
  ],
  "_check_name_used_prior_global": [
    [
      "pylint/checkers/base.py",
      [
        "BasicErrorChecker",
        "_check_name_used_prior_global"
      ]
    ]
  ],
  "same_scope": [
    [
      "pylint/checkers/base.py",
      [
        "BasicErrorChecker",
        "_check_nonlocal_and_global",
        "same_scope"
      ]
    ]
  ],
  "_check_nonlocal_and_global": [
    [
      "pylint/checkers/base.py",
      [
        "BasicErrorChecker",
        "_check_nonlocal_and_global"
      ]
    ]
  ],
  "visit_return": [
    [
      "pylint/checkers/base.py",
      [
        "BasicErrorChecker",
        "visit_return"
      ]
    ],
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "visit_return"
      ]
    ],
    [
      "pylint/checkers/design_analysis.py",
      [
        "MisdesignChecker",
        "visit_return"
      ]
    ],
    [
      "pylint/extensions/docparams.py",
      [
        "DocstringParameterChecker",
        "visit_return"
      ]
    ]
  ],
  "visit_yield": [
    [
      "pylint/checkers/base.py",
      [
        "BasicErrorChecker",
        "visit_yield"
      ]
    ],
    [
      "pylint/extensions/docparams.py",
      [
        "DocstringParameterChecker",
        "visit_yield"
      ]
    ]
  ],
  "visit_yieldfrom": [
    [
      "pylint/checkers/base.py",
      [
        "BasicErrorChecker",
        "visit_yieldfrom"
      ]
    ],
    [
      "pylint/checkers/typecheck.py",
      [
        "IterableChecker",
        "visit_yieldfrom"
      ]
    ],
    [
      "pylint/extensions/docparams.py",
      [
        "DocstringParameterChecker",
        "visit_yieldfrom"
      ]
    ]
  ],
  "visit_continue": [
    [
      "pylint/checkers/base.py",
      [
        "BasicErrorChecker",
        "visit_continue"
      ]
    ],
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "visit_continue"
      ]
    ]
  ],
  "visit_break": [
    [
      "pylint/checkers/base.py",
      [
        "BasicErrorChecker",
        "visit_break"
      ]
    ],
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "visit_break"
      ]
    ]
  ],
  "visit_for": [
    [
      "pylint/checkers/base.py",
      [
        "BasicErrorChecker",
        "visit_for"
      ]
    ],
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "visit_for"
      ]
    ],
    [
      "pylint/checkers/refactoring/recommendation_checker.py",
      [
        "RecommendationChecker",
        "visit_for"
      ]
    ],
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "visit_for"
      ]
    ],
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "visit_for"
      ]
    ],
    [
      "pylint/checkers/typecheck.py",
      [
        "IterableChecker",
        "visit_for"
      ]
    ],
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "visit_for"
      ]
    ],
    [
      "pylint/extensions/code_style.py",
      [
        "CodeStyleChecker",
        "visit_for"
      ]
    ]
  ],
  "visit_while": [
    [
      "pylint/checkers/base.py",
      [
        "BasicErrorChecker",
        "visit_while"
      ]
    ],
    [
      "pylint/checkers/design_analysis.py",
      [
        "MisdesignChecker",
        "visit_while"
      ]
    ]
  ],
  "visit_unaryop": [
    [
      "pylint/checkers/base.py",
      [
        "BasicErrorChecker",
        "visit_unaryop"
      ]
    ],
    [
      "pylint/checkers/refactoring/len_checker.py",
      [
        "LenChecker",
        "visit_unaryop"
      ]
    ],
    [
      "pylint/checkers/refactoring/not_checker.py",
      [
        "NotChecker",
        "visit_unaryop"
      ]
    ],
    [
      "pylint/checkers/stdlib.py",
      [
        "StdlibChecker",
        "visit_unaryop"
      ]
    ],
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "visit_unaryop"
      ]
    ]
  ],
  "_check_nonlocal_without_binding": [
    [
      "pylint/checkers/base.py",
      [
        "BasicErrorChecker",
        "_check_nonlocal_without_binding"
      ]
    ]
  ],
  "visit_nonlocal": [
    [
      "pylint/checkers/base.py",
      [
        "BasicErrorChecker",
        "visit_nonlocal"
      ]
    ]
  ],
  "_check_inferred_class_is_abstract": [
    [
      "pylint/checkers/base.py",
      [
        "BasicErrorChecker",
        "_check_inferred_class_is_abstract"
      ]
    ]
  ],
  "_check_yield_outside_func": [
    [
      "pylint/checkers/base.py",
      [
        "BasicErrorChecker",
        "_check_yield_outside_func"
      ]
    ]
  ],
  "_check_else_on_loop": [
    [
      "pylint/checkers/base.py",
      [
        "BasicErrorChecker",
        "_check_else_on_loop"
      ]
    ]
  ],
  "_check_in_loop": [
    [
      "pylint/checkers/base.py",
      [
        "BasicErrorChecker",
        "_check_in_loop"
      ]
    ]
  ],
  "_check_redefinition": [
    [
      "pylint/checkers/base.py",
      [
        "BasicErrorChecker",
        "_check_redefinition"
      ]
    ]
  ],
  "visit_if": [
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "visit_if"
      ]
    ],
    [
      "pylint/checkers/design_analysis.py",
      [
        "MisdesignChecker",
        "visit_if"
      ]
    ],
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "visit_if"
      ]
    ],
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "visit_if"
      ]
    ],
    [
      "pylint/checkers/stdlib.py",
      [
        "StdlibChecker",
        "visit_if"
      ]
    ],
    [
      "pylint/extensions/check_elif.py",
      [
        "ElseifUsedChecker",
        "visit_if"
      ]
    ],
    [
      "pylint/extensions/confusing_elif.py",
      [
        "ConfusingConsecutiveElifChecker",
        "visit_if"
      ]
    ],
    [
      "tests/functional/u/unused/unused_variable.py",
      [
        "visit_if"
      ]
    ]
  ],
  "visit_ifexp": [
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "visit_ifexp"
      ]
    ],
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "visit_ifexp"
      ]
    ],
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "visit_ifexp"
      ]
    ],
    [
      "pylint/checkers/stdlib.py",
      [
        "StdlibChecker",
        "visit_ifexp"
      ]
    ],
    [
      "pylint/extensions/check_elif.py",
      [
        "ElseifUsedChecker",
        "visit_ifexp"
      ]
    ]
  ],
  "visit_comprehension": [
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "visit_comprehension"
      ]
    ],
    [
      "pylint/checkers/refactoring/recommendation_checker.py",
      [
        "RecommendationChecker",
        "visit_comprehension"
      ]
    ],
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "visit_comprehension"
      ]
    ],
    [
      "pylint/extensions/check_elif.py",
      [
        "ElseifUsedChecker",
        "visit_comprehension"
      ]
    ],
    [
      "pylint/extensions/code_style.py",
      [
        "CodeStyleChecker",
        "visit_comprehension"
      ]
    ]
  ],
  "_check_using_constant_test": [
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "_check_using_constant_test"
      ]
    ]
  ],
  "visit_module": [
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "visit_module"
      ]
    ],
    [
      "pylint/checkers/base.py",
      [
        "NameChecker",
        "visit_module"
      ]
    ],
    [
      "pylint/checkers/base.py",
      [
        "DocStringChecker",
        "visit_module"
      ]
    ],
    [
      "pylint/checkers/logging.py",
      [
        "LoggingChecker",
        "visit_module"
      ]
    ],
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "visit_module"
      ]
    ],
    [
      "pylint/checkers/spelling.py",
      [
        "SpellingChecker",
        "visit_module"
      ]
    ],
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "visit_module"
      ]
    ],
    [
      "pylint/extensions/docstyle.py",
      [
        "DocStringStyleChecker",
        "visit_module"
      ]
    ],
    [
      "pylint/extensions/mccabe.py",
      [
        "McCabeMethodChecker",
        "visit_module"
      ]
    ],
    [
      "pylint/extensions/redefined_variable_type.py",
      [
        "MultipleTypesChecker",
        "visit_module"
      ]
    ],
    [
      "pylint/pyreverse/diadefslib.py",
      [
        "DefaultDiadefGenerator",
        "visit_module"
      ]
    ],
    [
      "pylint/pyreverse/inspector.py",
      [
        "Linker",
        "visit_module"
      ]
    ],
    [
      "tests/utils/unittest_ast_walker.py",
      [
        "TestASTWalker",
        "Checker",
        "visit_module"
      ]
    ]
  ],
  "visit_expr": [
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "visit_expr"
      ]
    ]
  ],
  "_filter_vararg": [
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "_filter_vararg"
      ]
    ]
  ],
  "_has_variadic_argument": [
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "_has_variadic_argument"
      ]
    ]
  ],
  "visit_lambda": [
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "visit_lambda"
      ]
    ],
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "visit_lambda"
      ]
    ]
  ],
  "is_iterable": [
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "_check_dangerous_default",
        "is_iterable"
      ]
    ],
    [
      "pylint/checkers/utils.py",
      [
        "is_iterable"
      ]
    ]
  ],
  "_check_dangerous_default": [
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "_check_dangerous_default"
      ]
    ]
  ],
  "visit_raise": [
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "visit_raise"
      ]
    ],
    [
      "pylint/checkers/exceptions.py",
      [
        "ExceptionsChecker",
        "visit_raise"
      ]
    ],
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "visit_raise"
      ]
    ],
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "visit_raise"
      ]
    ],
    [
      "pylint/extensions/docparams.py",
      [
        "DocstringParameterChecker",
        "visit_raise"
      ]
    ]
  ],
  "visit_exec": [
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "visit_exec"
      ]
    ]
  ],
  "_check_misplaced_format_function": [
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "_check_misplaced_format_function"
      ]
    ]
  ],
  "visit_assert": [
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "visit_assert"
      ]
    ]
  ],
  "visit_dict": [
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "visit_dict"
      ]
    ],
    [
      "pylint/extensions/code_style.py",
      [
        "CodeStyleChecker",
        "visit_dict"
      ]
    ]
  ],
  "visit_tryfinally": [
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "visit_tryfinally"
      ]
    ],
    [
      "pylint/checkers/design_analysis.py",
      [
        "MisdesignChecker",
        "visit_tryfinally"
      ]
    ],
    [
      "pylint/extensions/broad_try_clause.py",
      [
        "BroadTryClauseChecker",
        "visit_tryfinally"
      ]
    ]
  ],
  "leave_tryfinally": [
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "leave_tryfinally"
      ]
    ]
  ],
  "_check_unreachable": [
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "_check_unreachable"
      ]
    ]
  ],
  "_check_not_in_finally": [
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "_check_not_in_finally"
      ]
    ]
  ],
  "_check_reversed": [
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "_check_reversed"
      ]
    ]
  ],
  "visit_with": [
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "visit_with"
      ]
    ],
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "visit_with"
      ]
    ],
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "visit_with"
      ]
    ]
  ],
  "_check_self_assigning_variable": [
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "_check_self_assigning_variable"
      ]
    ]
  ],
  "_check_redeclared_assign_name": [
    [
      "pylint/checkers/base.py",
      [
        "BasicChecker",
        "_check_redeclared_assign_name"
      ]
    ]
  ],
  "_create_naming_options": [
    [
      "pylint/checkers/base.py",
      [
        "_create_naming_options"
      ]
    ]
  ],
  "_create_naming_rules": [
    [
      "pylint/checkers/base.py",
      [
        "NameChecker",
        "_create_naming_rules"
      ]
    ]
  ],
  "leave_module": [
    [
      "pylint/checkers/base.py",
      [
        "NameChecker",
        "leave_module"
      ]
    ],
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker",
        "leave_module"
      ]
    ],
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "leave_module"
      ]
    ],
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "leave_module"
      ]
    ],
    [
      "pylint/extensions/check_elif.py",
      [
        "ElseifUsedChecker",
        "leave_module"
      ]
    ],
    [
      "pylint/extensions/typing.py",
      [
        "TypingChecker",
        "leave_module"
      ]
    ]
  ],
  "visit_global": [
    [
      "pylint/checkers/base.py",
      [
        "NameChecker",
        "visit_global"
      ]
    ],
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "visit_global"
      ]
    ]
  ],
  "visit_assignname": [
    [
      "pylint/checkers/base.py",
      [
        "NameChecker",
        "visit_assignname"
      ]
    ],
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "visit_assignname"
      ]
    ],
    [
      "pylint/pyreverse/inspector.py",
      [
        "Linker",
        "visit_assignname"
      ]
    ],
    [
      "tests/utils/unittest_ast_walker.py",
      [
        "TestASTWalker",
        "Checker",
        "visit_assignname"
      ]
    ]
  ],
  "_recursive_check_names": [
    [
      "pylint/checkers/base.py",
      [
        "NameChecker",
        "_recursive_check_names"
      ]
    ]
  ],
  "_find_name_group": [
    [
      "pylint/checkers/base.py",
      [
        "NameChecker",
        "_find_name_group"
      ]
    ]
  ],
  "_raise_name_warning": [
    [
      "pylint/checkers/base.py",
      [
        "NameChecker",
        "_raise_name_warning"
      ]
    ]
  ],
  "_name_allowed_by_regex": [
    [
      "pylint/checkers/base.py",
      [
        "NameChecker",
        "_name_allowed_by_regex"
      ]
    ]
  ],
  "_name_disallowed_by_regex": [
    [
      "pylint/checkers/base.py",
      [
        "NameChecker",
        "_name_disallowed_by_regex"
      ]
    ]
  ],
  "_should_exempt_from_invalid_name": [
    [
      "pylint/checkers/base.py",
      [
        "NameChecker",
        "_check_name",
        "_should_exempt_from_invalid_name"
      ]
    ]
  ],
  "_check_name": [
    [
      "pylint/checkers/base.py",
      [
        "NameChecker",
        "_check_name"
      ]
    ]
  ],
  "_check_assign_to_new_keyword_violation": [
    [
      "pylint/checkers/base.py",
      [
        "NameChecker",
        "_check_assign_to_new_keyword_violation"
      ]
    ]
  ],
  "_name_became_keyword_in_version": [
    [
      "pylint/checkers/base.py",
      [
        "NameChecker",
        "_name_became_keyword_in_version"
      ]
    ]
  ],
  "_check_docstring": [
    [
      "pylint/checkers/base.py",
      [
        "DocStringChecker",
        "_check_docstring"
      ]
    ],
    [
      "pylint/checkers/spelling.py",
      [
        "SpellingChecker",
        "_check_docstring"
      ]
    ],
    [
      "pylint/extensions/docstyle.py",
      [
        "DocStringStyleChecker",
        "_check_docstring"
      ]
    ]
  ],
  "visit_pass": [
    [
      "pylint/checkers/base.py",
      [
        "PassChecker",
        "visit_pass"
      ]
    ]
  ],
  "_is_one_arg_pos_call": [
    [
      "pylint/checkers/base.py",
      [
        "_is_one_arg_pos_call"
      ]
    ]
  ],
  "_infer_dunder_doc_attribute": [
    [
      "pylint/checkers/base.py",
      [
        "_infer_dunder_doc_attribute"
      ]
    ]
  ],
  "_is_singleton_const": [
    [
      "pylint/checkers/base.py",
      [
        "ComparisonChecker",
        "_check_singleton_comparison",
        "_is_singleton_const"
      ]
    ]
  ],
  "_check_singleton_comparison": [
    [
      "pylint/checkers/base.py",
      [
        "ComparisonChecker",
        "_check_singleton_comparison"
      ]
    ]
  ],
  "_is_float_nan": [
    [
      "pylint/checkers/base.py",
      [
        "ComparisonChecker",
        "_check_nan_comparison",
        "_is_float_nan"
      ]
    ]
  ],
  "_is_numpy_nan": [
    [
      "pylint/checkers/base.py",
      [
        "ComparisonChecker",
        "_check_nan_comparison",
        "_is_numpy_nan"
      ]
    ]
  ],
  "_is_nan": [
    [
      "pylint/checkers/base.py",
      [
        "ComparisonChecker",
        "_check_nan_comparison",
        "_is_nan"
      ]
    ]
  ],
  "_check_nan_comparison": [
    [
      "pylint/checkers/base.py",
      [
        "ComparisonChecker",
        "_check_nan_comparison"
      ]
    ]
  ],
  "_check_literal_comparison": [
    [
      "pylint/checkers/base.py",
      [
        "ComparisonChecker",
        "_check_literal_comparison"
      ]
    ]
  ],
  "_check_misplaced_constant": [
    [
      "pylint/checkers/base.py",
      [
        "ComparisonChecker",
        "_check_misplaced_constant"
      ]
    ]
  ],
  "_check_logical_tautology": [
    [
      "pylint/checkers/base.py",
      [
        "ComparisonChecker",
        "_check_logical_tautology"
      ]
    ]
  ],
  "_check_callable_comparison": [
    [
      "pylint/checkers/base.py",
      [
        "ComparisonChecker",
        "_check_callable_comparison"
      ]
    ]
  ],
  "visit_compare": [
    [
      "pylint/checkers/base.py",
      [
        "ComparisonChecker",
        "visit_compare"
      ]
    ],
    [
      "pylint/checkers/exceptions.py",
      [
        "ExceptionsChecker",
        "visit_compare"
      ]
    ],
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "visit_compare"
      ]
    ],
    [
      "pylint/extensions/comparetozero.py",
      [
        "CompareToZeroChecker",
        "visit_compare"
      ]
    ],
    [
      "pylint/extensions/emptystring.py",
      [
        "CompareToEmptyStringChecker",
        "visit_compare"
      ]
    ]
  ],
  "_check_unidiomatic_typecheck": [
    [
      "pylint/checkers/base.py",
      [
        "ComparisonChecker",
        "_check_unidiomatic_typecheck"
      ]
    ]
  ],
  "_check_type_x_is_y": [
    [
      "pylint/checkers/base.py",
      [
        "ComparisonChecker",
        "_check_type_x_is_y"
      ]
    ]
  ],
  "__gt__": [
    [
      "pylint/checkers/base_checker.py",
      [
        "BaseChecker",
        "__gt__"
      ]
    ],
    [
      "tests/functional/c/consider/consider_using_min_max_builtin.py",
      [
        "AA",
        "__gt__"
      ]
    ]
  ],
  "__repr__": [
    [
      "pylint/checkers/base_checker.py",
      [
        "BaseChecker",
        "__repr__"
      ]
    ],
    [
      "pylint/checkers/variables.py",
      [
        "NamesConsumer",
        "__repr__"
      ]
    ],
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "Docstring",
        "__repr__"
      ]
    ],
    [
      "pylint/message/message_definition.py",
      [
        "MessageDefinition",
        "__repr__"
      ]
    ],
    [
      "pylint/message/message_id_store.py",
      [
        "MessageIdStore",
        "__repr__"
      ]
    ],
    [
      "pylint/pyreverse/inspector.py",
      [
        "Project",
        "__repr__"
      ]
    ],
    [
      "pylint/testutils/functional_test_file.py",
      [
        "FunctionalTestFile",
        "__repr__"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_repr_returned.py",
      [
        "FirstGoodRepr",
        "__repr__"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_repr_returned.py",
      [
        "SecondGoodRepr",
        "__repr__"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_repr_returned.py",
      [
        "ReprMetaclass",
        "__repr__"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_repr_returned.py",
      [
        "FirstBadRepr",
        "__repr__"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_repr_returned.py",
      [
        "SecondBadRepr",
        "__repr__"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_repr_returned.py",
      [
        "ThirdBadRepr",
        "__repr__"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_repr_returned.py",
      [
        "AnotherAmbiguousRepr",
        "__repr__"
      ]
    ]
  ],
  "__str__": [
    [
      "pylint/checkers/base_checker.py",
      [
        "BaseChecker",
        "__str__"
      ]
    ],
    [
      "pylint/checkers/similar.py",
      [
        "LineSet",
        "__str__"
      ]
    ],
    [
      "pylint/message/message_definition.py",
      [
        "MessageDefinition",
        "__str__"
      ]
    ],
    [
      "pylint/testutils/lint_module_test.py",
      [
        "LintModuleTest",
        "__str__"
      ]
    ],
    [
      "tests/functional/a/arguments.py",
      [
        "Issue642",
        "__str__"
      ]
    ],
    [
      "tests/functional/e/enum_subclasses.py",
      [
        "Issue2062",
        "__str__"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_str_returned.py",
      [
        "FirstGoodStr",
        "__str__"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_str_returned.py",
      [
        "SecondGoodStr",
        "__str__"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_str_returned.py",
      [
        "StrMetaclass",
        "__str__"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_str_returned.py",
      [
        "FirstBadStr",
        "__str__"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_str_returned.py",
      [
        "SecondBadStr",
        "__str__"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_str_returned.py",
      [
        "ThirdBadStr",
        "__str__"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_str_returned.py",
      [
        "AnotherAmbiguousStr",
        "__str__"
      ]
    ],
    [
      "tests/functional/u/unused/unused_private_member.py",
      [
        "HasUnusedInClass",
        "__str__"
      ]
    ]
  ],
  "get_full_documentation": [
    [
      "pylint/checkers/base_checker.py",
      [
        "BaseChecker",
        "get_full_documentation"
      ]
    ]
  ],
  "add_message": [
    [
      "pylint/checkers/base_checker.py",
      [
        "BaseChecker",
        "add_message"
      ]
    ],
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "add_message"
      ]
    ],
    [
      "pylint/message/message_handler_mix_in.py",
      [
        "MessagesHandlerMixIn",
        "add_message"
      ]
    ],
    [
      "pylint/testutils/unittest_linter.py",
      [
        "UnittestLinter",
        "add_message"
      ]
    ]
  ],
  "check_consistency": [
    [
      "pylint/checkers/base_checker.py",
      [
        "BaseChecker",
        "check_consistency"
      ]
    ]
  ],
  "create_message_definition_from_tuple": [
    [
      "pylint/checkers/base_checker.py",
      [
        "BaseChecker",
        "create_message_definition_from_tuple"
      ]
    ]
  ],
  "messages": [
    [
      "pylint/checkers/base_checker.py",
      [
        "BaseChecker",
        "messages"
      ]
    ],
    [
      "pylint/message/message_definition_store.py",
      [
        "MessageDefinitionStore",
        "messages"
      ]
    ]
  ],
  "get_message_definition": [
    [
      "pylint/checkers/base_checker.py",
      [
        "BaseChecker",
        "get_message_definition"
      ]
    ],
    [
      "tests/message/unittest_message_definition.py",
      [
        "TestMessagesDefinition",
        "get_message_definition"
      ]
    ]
  ],
  "close": [
    [
      "pylint/checkers/base_checker.py",
      [
        "BaseChecker",
        "close"
      ]
    ],
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker",
        "close"
      ]
    ],
    [
      "pylint/checkers/similar.py",
      [
        "SimilarChecker",
        "close"
      ]
    ],
    [
      "pylint/checkers/spelling.py",
      [
        "SpellingChecker",
        "close"
      ]
    ],
    [
      "pylint/interfaces.py",
      [
        "IChecker",
        "close"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Property",
        "close"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "PropertySetter",
        "close"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_overridden_method.py",
      [
        "Property",
        "close"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_overridden_method.py",
      [
        "PropertySetter",
        "close"
      ]
    ],
    [
      "tests/functional/n/new_style_class_py_30.py",
      [
        "File",
        "close"
      ]
    ]
  ],
  "process_tokens": [
    [
      "pylint/checkers/base_checker.py",
      [
        "BaseTokenChecker",
        "process_tokens"
      ]
    ],
    [
      "pylint/checkers/format.py",
      [
        "FormatChecker",
        "process_tokens"
      ]
    ],
    [
      "pylint/checkers/misc.py",
      [
        "EncodingChecker",
        "process_tokens"
      ]
    ],
    [
      "pylint/checkers/python3.py",
      [
        "Python3TokenChecker",
        "process_tokens"
      ]
    ],
    [
      "pylint/checkers/raw_metrics.py",
      [
        "RawMetricsChecker",
        "process_tokens"
      ]
    ],
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "process_tokens"
      ]
    ],
    [
      "pylint/checkers/spelling.py",
      [
        "SpellingChecker",
        "process_tokens"
      ]
    ],
    [
      "pylint/checkers/strings.py",
      [
        "StringConstantChecker",
        "process_tokens"
      ]
    ],
    [
      "pylint/extensions/check_elif.py",
      [
        "ElseifUsedChecker",
        "process_tokens"
      ]
    ],
    [
      "pylint/interfaces.py",
      [
        "ITokenChecker",
        "process_tokens"
      ]
    ],
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "process_tokens"
      ]
    ]
  ],
  "_signature_from_call": [
    [
      "pylint/checkers/classes.py",
      [
        "_signature_from_call"
      ]
    ]
  ],
  "_signature_from_arguments": [
    [
      "pylint/checkers/classes.py",
      [
        "_signature_from_arguments"
      ]
    ]
  ],
  "_definition_equivalent_to_call": [
    [
      "pylint/checkers/classes.py",
      [
        "_definition_equivalent_to_call"
      ]
    ]
  ],
  "_positional_parameters": [
    [
      "pylint/checkers/classes.py",
      [
        "_positional_parameters"
      ]
    ]
  ],
  "_get_node_type": [
    [
      "pylint/checkers/classes.py",
      [
        "_get_node_type"
      ]
    ]
  ],
  "_check_arg_equality": [
    [
      "pylint/checkers/classes.py",
      [
        "_check_arg_equality"
      ]
    ]
  ],
  "_has_different_parameters_default_value": [
    [
      "pylint/checkers/classes.py",
      [
        "_has_different_parameters_default_value"
      ]
    ]
  ],
  "_has_different_parameters": [
    [
      "pylint/checkers/classes.py",
      [
        "_has_different_parameters"
      ]
    ]
  ],
  "_different_parameters": [
    [
      "pylint/checkers/classes.py",
      [
        "_different_parameters"
      ]
    ]
  ],
  "_is_invalid_base_class": [
    [
      "pylint/checkers/classes.py",
      [
        "_is_invalid_base_class"
      ]
    ]
  ],
  "_has_data_descriptor": [
    [
      "pylint/checkers/classes.py",
      [
        "_has_data_descriptor"
      ]
    ]
  ],
  "_called_in_methods": [
    [
      "pylint/checkers/classes.py",
      [
        "_called_in_methods"
      ]
    ]
  ],
  "_is_attribute_property": [
    [
      "pylint/checkers/classes.py",
      [
        "_is_attribute_property"
      ]
    ]
  ],
  "_has_bare_super_call": [
    [
      "pylint/checkers/classes.py",
      [
        "_has_bare_super_call"
      ]
    ]
  ],
  "_safe_infer_call_result": [
    [
      "pylint/checkers/classes.py",
      [
        "_safe_infer_call_result"
      ]
    ]
  ],
  "_has_same_layout_slots": [
    [
      "pylint/checkers/classes.py",
      [
        "_has_same_layout_slots"
      ]
    ]
  ],
  "_scope_default": [
    [
      "pylint/checkers/classes.py",
      [
        "_scope_default"
      ]
    ]
  ],
  "set_accessed": [
    [
      "pylint/checkers/classes.py",
      [
        "ScopeAccessMap",
        "set_accessed"
      ]
    ]
  ],
  "accessed": [
    [
      "pylint/checkers/classes.py",
      [
        "ScopeAccessMap",
        "accessed"
      ]
    ]
  ],
  "_dummy_rgx": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "_dummy_rgx"
      ]
    ],
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_dummy_rgx"
      ]
    ]
  ],
  "_ignore_mixin": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "_ignore_mixin"
      ]
    ]
  ],
  "_check_consistent_mro": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "_check_consistent_mro"
      ]
    ]
  ],
  "_check_proper_bases": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "_check_proper_bases"
      ]
    ]
  ],
  "leave_classdef": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "leave_classdef"
      ]
    ],
    [
      "pylint/checkers/design_analysis.py",
      [
        "MisdesignChecker",
        "leave_classdef"
      ]
    ],
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "leave_classdef"
      ]
    ],
    [
      "pylint/extensions/redefined_variable_type.py",
      [
        "MultipleTypesChecker",
        "leave_classdef"
      ]
    ]
  ],
  "_check_unused_private_members": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "_check_unused_private_members"
      ]
    ]
  ],
  "_check_attribute_defined_outside_init": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "_check_attribute_defined_outside_init"
      ]
    ]
  ],
  "_check_useless_super_delegation": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "_check_useless_super_delegation"
      ]
    ]
  ],
  "_check_property_with_parameters": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "_check_property_with_parameters"
      ]
    ]
  ],
  "_check_invalid_overridden_method": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "_check_invalid_overridden_method"
      ]
    ]
  ],
  "_check_slots": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "_check_slots"
      ]
    ]
  ],
  "_check_slots_elt": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "_check_slots_elt"
      ]
    ]
  ],
  "leave_functiondef": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "leave_functiondef"
      ]
    ],
    [
      "pylint/checkers/design_analysis.py",
      [
        "MisdesignChecker",
        "leave_functiondef"
      ]
    ],
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "leave_functiondef"
      ]
    ],
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "leave_functiondef"
      ]
    ]
  ],
  "visit_attribute": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "visit_attribute"
      ]
    ],
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "visit_attribute"
      ]
    ],
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "visit_attribute"
      ]
    ],
    [
      "pylint/extensions/typing.py",
      [
        "TypingChecker",
        "visit_attribute"
      ]
    ]
  ],
  "visit_assignattr": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "visit_assignattr"
      ]
    ],
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "visit_assignattr"
      ]
    ],
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "visit_assignattr"
      ]
    ]
  ],
  "_check_invalid_class_object": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "_check_invalid_class_object"
      ]
    ]
  ],
  "_check_in_slots": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "_check_in_slots"
      ]
    ]
  ],
  "_check_classmethod_declaration": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "_check_classmethod_declaration"
      ]
    ]
  ],
  "_check_protected_attribute_access": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "_check_protected_attribute_access"
      ]
    ]
  ],
  "_is_called_inside_special_method": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "_is_called_inside_special_method"
      ]
    ]
  ],
  "_is_type_self_call": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "_is_type_self_call"
      ]
    ]
  ],
  "_is_classmethod": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "_is_classmethod"
      ]
    ]
  ],
  "_is_inferred_instance": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "_is_inferred_instance"
      ]
    ]
  ],
  "_is_class_attribute": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "_is_class_attribute"
      ]
    ]
  ],
  "visit_name": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "visit_name"
      ]
    ],
    [
      "pylint/checkers/exceptions.py",
      [
        "ExceptionRaiseRefVisitor",
        "visit_name"
      ]
    ],
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "visit_name"
      ]
    ],
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "visit_name"
      ]
    ],
    [
      "pylint/extensions/typing.py",
      [
        "TypingChecker",
        "visit_name"
      ]
    ]
  ],
  "_check_accessed_members": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "_check_accessed_members"
      ]
    ]
  ],
  "_check_first_arg_for_type": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "_check_first_arg_for_type"
      ]
    ]
  ],
  "_check_first_arg_config": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "_check_first_arg_config"
      ]
    ]
  ],
  "is_abstract": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "_check_bases_classes",
        "is_abstract"
      ]
    ],
    [
      "pylint/pyreverse/utils.py",
      [
        "is_abstract"
      ]
    ]
  ],
  "_check_bases_classes": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "_check_bases_classes"
      ]
    ]
  ],
  "_check_init": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "_check_init"
      ]
    ]
  ],
  "_check_signature": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "_check_signature"
      ]
    ]
  ],
  "_uses_mandatory_method_param": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "_uses_mandatory_method_param"
      ]
    ]
  ],
  "_is_mandatory_method_param": [
    [
      "pylint/checkers/classes.py",
      [
        "ClassChecker",
        "_is_mandatory_method_param"
      ]
    ]
  ],
  "_check_unexpected_method_signature": [
    [
      "pylint/checkers/classes.py",
      [
        "SpecialMethodsChecker",
        "_check_unexpected_method_signature"
      ]
    ]
  ],
  "_is_wrapped_type": [
    [
      "pylint/checkers/classes.py",
      [
        "SpecialMethodsChecker",
        "_is_wrapped_type"
      ]
    ]
  ],
  "_is_int": [
    [
      "pylint/checkers/classes.py",
      [
        "SpecialMethodsChecker",
        "_is_int"
      ]
    ]
  ],
  "_is_str": [
    [
      "pylint/checkers/classes.py",
      [
        "SpecialMethodsChecker",
        "_is_str"
      ]
    ]
  ],
  "_is_bool": [
    [
      "pylint/checkers/classes.py",
      [
        "SpecialMethodsChecker",
        "_is_bool"
      ]
    ]
  ],
  "_is_bytes": [
    [
      "pylint/checkers/classes.py",
      [
        "SpecialMethodsChecker",
        "_is_bytes"
      ]
    ]
  ],
  "_is_tuple": [
    [
      "pylint/checkers/classes.py",
      [
        "SpecialMethodsChecker",
        "_is_tuple"
      ]
    ]
  ],
  "_is_dict": [
    [
      "pylint/checkers/classes.py",
      [
        "SpecialMethodsChecker",
        "_is_dict"
      ]
    ]
  ],
  "_is_iterator": [
    [
      "pylint/checkers/classes.py",
      [
        "SpecialMethodsChecker",
        "_is_iterator"
      ]
    ]
  ],
  "_check_iter": [
    [
      "pylint/checkers/classes.py",
      [
        "SpecialMethodsChecker",
        "_check_iter"
      ]
    ]
  ],
  "_check_len": [
    [
      "pylint/checkers/classes.py",
      [
        "SpecialMethodsChecker",
        "_check_len"
      ]
    ]
  ],
  "_check_bool": [
    [
      "pylint/checkers/classes.py",
      [
        "SpecialMethodsChecker",
        "_check_bool"
      ]
    ]
  ],
  "_check_index": [
    [
      "pylint/checkers/classes.py",
      [
        "SpecialMethodsChecker",
        "_check_index"
      ]
    ]
  ],
  "_check_repr": [
    [
      "pylint/checkers/classes.py",
      [
        "SpecialMethodsChecker",
        "_check_repr"
      ]
    ]
  ],
  "_check_str": [
    [
      "pylint/checkers/classes.py",
      [
        "SpecialMethodsChecker",
        "_check_str"
      ]
    ]
  ],
  "_check_bytes": [
    [
      "pylint/checkers/classes.py",
      [
        "SpecialMethodsChecker",
        "_check_bytes"
      ]
    ]
  ],
  "_check_hash": [
    [
      "pylint/checkers/classes.py",
      [
        "SpecialMethodsChecker",
        "_check_hash"
      ]
    ]
  ],
  "_check_length_hint": [
    [
      "pylint/checkers/classes.py",
      [
        "SpecialMethodsChecker",
        "_check_length_hint"
      ]
    ]
  ],
  "_check_format": [
    [
      "pylint/checkers/classes.py",
      [
        "SpecialMethodsChecker",
        "_check_format"
      ]
    ]
  ],
  "_check_getnewargs": [
    [
      "pylint/checkers/classes.py",
      [
        "SpecialMethodsChecker",
        "_check_getnewargs"
      ]
    ]
  ],
  "_check_getnewargs_ex": [
    [
      "pylint/checkers/classes.py",
      [
        "SpecialMethodsChecker",
        "_check_getnewargs_ex"
      ]
    ]
  ],
  "_ancestors_to_call": [
    [
      "pylint/checkers/classes.py",
      [
        "_ancestors_to_call"
      ]
    ]
  ],
  "visit_import": [
    [
      "pylint/checkers/deprecated.py",
      [
        "DeprecatedMixin",
        "visit_import"
      ]
    ],
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker",
        "visit_import"
      ]
    ],
    [
      "pylint/checkers/logging.py",
      [
        "LoggingChecker",
        "visit_import"
      ]
    ],
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "visit_import"
      ]
    ],
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "visit_import"
      ]
    ],
    [
      "pylint/pyreverse/inspector.py",
      [
        "Linker",
        "visit_import"
      ]
    ]
  ],
  "deprecated_decorators": [
    [
      "pylint/checkers/deprecated.py",
      [
        "DeprecatedMixin",
        "deprecated_decorators"
      ]
    ],
    [
      "pylint/checkers/stdlib.py",
      [
        "StdlibChecker",
        "deprecated_decorators"
      ]
    ],
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "_DeprecatedChecker",
        "deprecated_decorators"
      ]
    ]
  ],
  "visit_decorators": [
    [
      "pylint/checkers/deprecated.py",
      [
        "DeprecatedMixin",
        "visit_decorators"
      ]
    ]
  ],
  "visit_importfrom": [
    [
      "pylint/checkers/deprecated.py",
      [
        "DeprecatedMixin",
        "visit_importfrom"
      ]
    ],
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker",
        "visit_importfrom"
      ]
    ],
    [
      "pylint/checkers/logging.py",
      [
        "LoggingChecker",
        "visit_importfrom"
      ]
    ],
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "visit_importfrom"
      ]
    ],
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "visit_importfrom"
      ]
    ],
    [
      "pylint/pyreverse/diadefslib.py",
      [
        "DefaultDiadefGenerator",
        "visit_importfrom"
      ]
    ],
    [
      "pylint/pyreverse/inspector.py",
      [
        "Linker",
        "visit_importfrom"
      ]
    ]
  ],
  "deprecated_modules": [
    [
      "pylint/checkers/deprecated.py",
      [
        "DeprecatedMixin",
        "deprecated_modules"
      ]
    ],
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker",
        "deprecated_modules"
      ]
    ],
    [
      "pylint/checkers/stdlib.py",
      [
        "StdlibChecker",
        "deprecated_modules"
      ]
    ],
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "_DeprecatedChecker",
        "deprecated_modules"
      ]
    ]
  ],
  "deprecated_classes": [
    [
      "pylint/checkers/deprecated.py",
      [
        "DeprecatedMixin",
        "deprecated_classes"
      ]
    ],
    [
      "pylint/checkers/stdlib.py",
      [
        "StdlibChecker",
        "deprecated_classes"
      ]
    ],
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "_DeprecatedChecker",
        "deprecated_classes"
      ]
    ]
  ],
  "check_deprecated_module": [
    [
      "pylint/checkers/deprecated.py",
      [
        "DeprecatedMixin",
        "check_deprecated_module"
      ]
    ]
  ],
  "check_deprecated_method": [
    [
      "pylint/checkers/deprecated.py",
      [
        "DeprecatedMixin",
        "check_deprecated_method"
      ]
    ]
  ],
  "check_deprecated_class": [
    [
      "pylint/checkers/deprecated.py",
      [
        "DeprecatedMixin",
        "check_deprecated_class"
      ]
    ]
  ],
  "check_deprecated_class_in_call": [
    [
      "pylint/checkers/deprecated.py",
      [
        "DeprecatedMixin",
        "check_deprecated_class_in_call"
      ]
    ]
  ],
  "_is_exempt_from_public_methods": [
    [
      "pylint/checkers/design_analysis.py",
      [
        "_is_exempt_from_public_methods"
      ]
    ]
  ],
  "_count_boolean_expressions": [
    [
      "pylint/checkers/design_analysis.py",
      [
        "_count_boolean_expressions"
      ]
    ]
  ],
  "_count_methods_in_class": [
    [
      "pylint/checkers/design_analysis.py",
      [
        "_count_methods_in_class"
      ]
    ]
  ],
  "_inc_all_stmts": [
    [
      "pylint/checkers/design_analysis.py",
      [
        "MisdesignChecker",
        "_inc_all_stmts"
      ]
    ]
  ],
  "_ignored_argument_names": [
    [
      "pylint/checkers/design_analysis.py",
      [
        "MisdesignChecker",
        "_ignored_argument_names"
      ]
    ]
  ],
  "visit_default": [
    [
      "pylint/checkers/design_analysis.py",
      [
        "MisdesignChecker",
        "visit_default"
      ]
    ],
    [
      "pylint/checkers/exceptions.py",
      [
        "BaseVisitor",
        "visit_default"
      ]
    ],
    [
      "pylint/checkers/exceptions.py",
      [
        "ExceptionRaiseLeafVisitor",
        "visit_default"
      ]
    ],
    [
      "pylint/checkers/format.py",
      [
        "FormatChecker",
        "visit_default"
      ]
    ]
  ],
  "visit_tryexcept": [
    [
      "pylint/checkers/design_analysis.py",
      [
        "MisdesignChecker",
        "visit_tryexcept"
      ]
    ],
    [
      "pylint/checkers/exceptions.py",
      [
        "ExceptionsChecker",
        "visit_tryexcept"
      ]
    ],
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "visit_tryexcept"
      ]
    ],
    [
      "pylint/extensions/broad_try_clause.py",
      [
        "BroadTryClauseChecker",
        "visit_tryexcept"
      ]
    ],
    [
      "pylint/extensions/overlapping_exceptions.py",
      [
        "OverlappingExceptionsChecker",
        "visit_tryexcept"
      ]
    ]
  ],
  "_check_boolean_expressions": [
    [
      "pylint/checkers/design_analysis.py",
      [
        "MisdesignChecker",
        "_check_boolean_expressions"
      ]
    ]
  ],
  "_inc_branch": [
    [
      "pylint/checkers/design_analysis.py",
      [
        "MisdesignChecker",
        "_inc_branch"
      ]
    ]
  ],
  "_builtin_exceptions": [
    [
      "pylint/checkers/exceptions.py",
      [
        "_builtin_exceptions"
      ]
    ]
  ],
  "_annotated_unpack_infer": [
    [
      "pylint/checkers/exceptions.py",
      [
        "_annotated_unpack_infer"
      ]
    ]
  ],
  "_is_raising": [
    [
      "pylint/checkers/exceptions.py",
      [
        "_is_raising"
      ]
    ]
  ],
  "visit": [
    [
      "pylint/checkers/exceptions.py",
      [
        "BaseVisitor",
        "visit"
      ]
    ],
    [
      "pylint/pyreverse/utils.py",
      [
        "ASTWalker",
        "visit"
      ]
    ],
    [
      "pylint/pyreverse/utils.py",
      [
        "LocalsVisitor",
        "visit"
      ]
    ]
  ],
  "visit_const": [
    [
      "pylint/checkers/exceptions.py",
      [
        "ExceptionRaiseLeafVisitor",
        "visit_const"
      ]
    ]
  ],
  "visit_instance": [
    [
      "pylint/checkers/exceptions.py",
      [
        "ExceptionRaiseLeafVisitor",
        "visit_instance"
      ]
    ]
  ],
  "visit_tuple": [
    [
      "pylint/checkers/exceptions.py",
      [
        "ExceptionRaiseLeafVisitor",
        "visit_tuple"
      ]
    ],
    [
      "pylint/checkers/strings.py",
      [
        "StringConstantChecker",
        "visit_tuple"
      ]
    ]
  ],
  "_check_misplaced_bare_raise": [
    [
      "pylint/checkers/exceptions.py",
      [
        "ExceptionsChecker",
        "_check_misplaced_bare_raise"
      ]
    ]
  ],
  "_check_bad_exception_context": [
    [
      "pylint/checkers/exceptions.py",
      [
        "ExceptionsChecker",
        "_check_bad_exception_context"
      ]
    ]
  ],
  "_check_raise_missing_from": [
    [
      "pylint/checkers/exceptions.py",
      [
        "ExceptionsChecker",
        "_check_raise_missing_from"
      ]
    ]
  ],
  "_check_catching_non_exception": [
    [
      "pylint/checkers/exceptions.py",
      [
        "ExceptionsChecker",
        "_check_catching_non_exception"
      ]
    ]
  ],
  "gather_exceptions_from_handler": [
    [
      "pylint/checkers/exceptions.py",
      [
        "ExceptionsChecker",
        "_check_try_except_raise",
        "gather_exceptions_from_handler"
      ]
    ]
  ],
  "_check_try_except_raise": [
    [
      "pylint/checkers/exceptions.py",
      [
        "ExceptionsChecker",
        "_check_try_except_raise"
      ]
    ]
  ],
  "visit_binop": [
    [
      "pylint/checkers/exceptions.py",
      [
        "ExceptionsChecker",
        "visit_binop"
      ]
    ],
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "visit_binop"
      ]
    ],
    [
      "pylint/checkers/strings.py",
      [
        "StringFormatChecker",
        "visit_binop"
      ]
    ],
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "visit_binop"
      ]
    ]
  ],
  "_last_token_on_line_is": [
    [
      "pylint/checkers/format.py",
      [
        "_last_token_on_line_is"
      ]
    ]
  ],
  "token": [
    [
      "pylint/checkers/format.py",
      [
        "TokenWrapper",
        "token"
      ]
    ]
  ],
  "type": [
    [
      "pylint/checkers/format.py",
      [
        "TokenWrapper",
        "type"
      ]
    ]
  ],
  "start_line": [
    [
      "pylint/checkers/format.py",
      [
        "TokenWrapper",
        "start_line"
      ]
    ]
  ],
  "start_col": [
    [
      "pylint/checkers/format.py",
      [
        "TokenWrapper",
        "start_col"
      ]
    ]
  ],
  "line": [
    [
      "pylint/checkers/format.py",
      [
        "TokenWrapper",
        "line"
      ]
    ]
  ],
  "new_line": [
    [
      "pylint/checkers/format.py",
      [
        "FormatChecker",
        "new_line"
      ]
    ]
  ],
  "_check_keyword_parentheses": [
    [
      "pylint/checkers/format.py",
      [
        "FormatChecker",
        "_check_keyword_parentheses"
      ]
    ]
  ],
  "_prepare_token_dispatcher": [
    [
      "pylint/checkers/format.py",
      [
        "FormatChecker",
        "_prepare_token_dispatcher"
      ]
    ]
  ],
  "_check_line_ending": [
    [
      "pylint/checkers/format.py",
      [
        "FormatChecker",
        "_check_line_ending"
      ]
    ]
  ],
  "_check_multi_statement_line": [
    [
      "pylint/checkers/format.py",
      [
        "FormatChecker",
        "_check_multi_statement_line"
      ]
    ]
  ],
  "check_line_ending": [
    [
      "pylint/checkers/format.py",
      [
        "FormatChecker",
        "check_line_ending"
      ]
    ]
  ],
  "check_line_length": [
    [
      "pylint/checkers/format.py",
      [
        "FormatChecker",
        "check_line_length"
      ]
    ]
  ],
  "remove_pylint_option_from_lines": [
    [
      "pylint/checkers/format.py",
      [
        "FormatChecker",
        "remove_pylint_option_from_lines"
      ]
    ]
  ],
  "is_line_length_check_activated": [
    [
      "pylint/checkers/format.py",
      [
        "FormatChecker",
        "is_line_length_check_activated"
      ]
    ]
  ],
  "specific_splitlines": [
    [
      "pylint/checkers/format.py",
      [
        "FormatChecker",
        "specific_splitlines"
      ]
    ]
  ],
  "check_lines": [
    [
      "pylint/checkers/format.py",
      [
        "FormatChecker",
        "check_lines"
      ]
    ]
  ],
  "check_indent_level": [
    [
      "pylint/checkers/format.py",
      [
        "FormatChecker",
        "check_indent_level"
      ]
    ]
  ],
  "_qualified_names": [
    [
      "pylint/checkers/imports.py",
      [
        "_qualified_names"
      ]
    ]
  ],
  "_get_import_name": [
    [
      "pylint/checkers/imports.py",
      [
        "_get_import_name"
      ]
    ]
  ],
  "_get_first_import": [
    [
      "pylint/checkers/imports.py",
      [
        "_get_first_import"
      ]
    ]
  ],
  "_ignore_import_failure": [
    [
      "pylint/checkers/imports.py",
      [
        "_ignore_import_failure"
      ]
    ]
  ],
  "_make_tree_defs": [
    [
      "pylint/checkers/imports.py",
      [
        "_make_tree_defs"
      ]
    ]
  ],
  "_repr_tree_defs": [
    [
      "pylint/checkers/imports.py",
      [
        "_repr_tree_defs"
      ]
    ]
  ],
  "_dependencies_graph": [
    [
      "pylint/checkers/imports.py",
      [
        "_dependencies_graph"
      ]
    ]
  ],
  "_make_graph": [
    [
      "pylint/checkers/imports.py",
      [
        "_make_graph"
      ]
    ]
  ],
  "_compute_site_packages": [
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker",
        "_compute_site_packages"
      ]
    ]
  ],
  "_import_graph_without_ignored_edges": [
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker",
        "_import_graph_without_ignored_edges"
      ]
    ]
  ],
  "compute_first_non_import_node": [
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker",
        "compute_first_non_import_node"
      ]
    ]
  ],
  "_check_misplaced_future": [
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker",
        "_check_misplaced_future"
      ]
    ]
  ],
  "_check_same_line_imports": [
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker",
        "_check_same_line_imports"
      ]
    ]
  ],
  "_check_position": [
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker",
        "_check_position"
      ]
    ]
  ],
  "_record_import": [
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker",
        "_record_import"
      ]
    ]
  ],
  "_is_fallback_import": [
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker",
        "_is_fallback_import"
      ]
    ]
  ],
  "_check_imports_order": [
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker",
        "_check_imports_order"
      ]
    ]
  ],
  "_get_imported_module": [
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker",
        "_get_imported_module"
      ]
    ]
  ],
  "_add_imported_module": [
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker",
        "_add_imported_module"
      ]
    ]
  ],
  "_check_preferred_module": [
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker",
        "_check_preferred_module"
      ]
    ]
  ],
  "_check_import_as_rename": [
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker",
        "_check_import_as_rename"
      ]
    ]
  ],
  "_check_reimport": [
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker",
        "_check_reimport"
      ]
    ]
  ],
  "_report_external_dependencies": [
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker",
        "_report_external_dependencies"
      ]
    ]
  ],
  "_report_dependencies_graph": [
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker",
        "_report_dependencies_graph"
      ]
    ]
  ],
  "_filter_dependencies_graph": [
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker",
        "_filter_dependencies_graph"
      ]
    ]
  ],
  "_external_dependencies_info": [
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker",
        "_external_dependencies_info"
      ]
    ]
  ],
  "_internal_dependencies_info": [
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker",
        "_internal_dependencies_info"
      ]
    ]
  ],
  "_check_wildcard_imports": [
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker",
        "_check_wildcard_imports"
      ]
    ]
  ],
  "_wildcard_import_is_allowed": [
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker",
        "_wildcard_import_is_allowed"
      ]
    ]
  ],
  "_check_toplevel": [
    [
      "pylint/checkers/imports.py",
      [
        "ImportsChecker",
        "_check_toplevel"
      ]
    ]
  ],
  "is_method_call": [
    [
      "pylint/checkers/logging.py",
      [
        "is_method_call"
      ]
    ]
  ],
  "is_logging_name": [
    [
      "pylint/checkers/logging.py",
      [
        "LoggingChecker",
        "visit_call",
        "is_logging_name"
      ]
    ]
  ],
  "is_logger_class": [
    [
      "pylint/checkers/logging.py",
      [
        "LoggingChecker",
        "visit_call",
        "is_logger_class"
      ]
    ]
  ],
  "_check_log_method": [
    [
      "pylint/checkers/logging.py",
      [
        "LoggingChecker",
        "_check_log_method"
      ]
    ]
  ],
  "_helper_string": [
    [
      "pylint/checkers/logging.py",
      [
        "LoggingChecker",
        "_helper_string"
      ]
    ]
  ],
  "_is_operand_literal_str": [
    [
      "pylint/checkers/logging.py",
      [
        "LoggingChecker",
        "_is_operand_literal_str"
      ]
    ]
  ],
  "_check_call_func": [
    [
      "pylint/checkers/logging.py",
      [
        "LoggingChecker",
        "_check_call_func"
      ]
    ]
  ],
  "_check_format_string": [
    [
      "pylint/checkers/logging.py",
      [
        "LoggingChecker",
        "_check_format_string"
      ]
    ]
  ],
  "is_complex_format_str": [
    [
      "pylint/checkers/logging.py",
      [
        "is_complex_format_str"
      ]
    ]
  ],
  "_count_supplied_tokens": [
    [
      "pylint/checkers/logging.py",
      [
        "_count_supplied_tokens"
      ]
    ]
  ],
  "get_map_data": [
    [
      "pylint/checkers/mapreduce_checker.py",
      [
        "MapReduceMixin",
        "get_map_data"
      ]
    ],
    [
      "pylint/checkers/similar.py",
      [
        "Similar",
        "get_map_data"
      ]
    ],
    [
      "pylint/checkers/similar.py",
      [
        "SimilarChecker",
        "get_map_data"
      ]
    ]
  ],
  "reduce_map_data": [
    [
      "pylint/checkers/mapreduce_checker.py",
      [
        "MapReduceMixin",
        "reduce_map_data"
      ]
    ],
    [
      "pylint/checkers/similar.py",
      [
        "SimilarChecker",
        "reduce_map_data"
      ]
    ]
  ],
  "_check_encoding": [
    [
      "pylint/checkers/misc.py",
      [
        "EncodingChecker",
        "_check_encoding"
      ]
    ]
  ],
  "_is_old_octal": [
    [
      "pylint/checkers/python3.py",
      [
        "_is_old_octal"
      ]
    ]
  ],
  "_inferred_value_is_dict": [
    [
      "pylint/checkers/python3.py",
      [
        "_inferred_value_is_dict"
      ]
    ]
  ],
  "_infer_if_relevant_attr": [
    [
      "pylint/checkers/python3.py",
      [
        "_infer_if_relevant_attr"
      ]
    ]
  ],
  "_is_builtin": [
    [
      "pylint/checkers/python3.py",
      [
        "_is_builtin"
      ]
    ],
    [
      "pylint/checkers/refactoring/recommendation_checker.py",
      [
        "RecommendationChecker",
        "_is_builtin"
      ]
    ]
  ],
  "_in_iterating_context": [
    [
      "pylint/checkers/python3.py",
      [
        "_in_iterating_context"
      ]
    ]
  ],
  "_is_conditional_import": [
    [
      "pylint/checkers/python3.py",
      [
        "_is_conditional_import"
      ]
    ]
  ],
  "_is_py2_test": [
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "_is_py2_test"
      ]
    ]
  ],
  "leave_if": [
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "leave_if"
      ]
    ]
  ],
  "leave_ifexp": [
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "leave_ifexp"
      ]
    ]
  ],
  "visit_arguments": [
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "visit_arguments"
      ]
    ],
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "visit_arguments"
      ]
    ]
  ],
  "visit_listcomp": [
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "visit_listcomp"
      ]
    ],
    [
      "pylint/checkers/typecheck.py",
      [
        "IterableChecker",
        "visit_listcomp"
      ]
    ],
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "visit_listcomp"
      ]
    ]
  ],
  "visit_print": [
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "visit_print"
      ]
    ]
  ],
  "_warn_if_deprecated": [
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "_warn_if_deprecated"
      ]
    ]
  ],
  "_check_cmp_argument": [
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "_check_cmp_argument"
      ]
    ]
  ],
  "_is_constant_string_or_name": [
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "_is_constant_string_or_name"
      ]
    ]
  ],
  "_is_none": [
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "_is_none"
      ]
    ]
  ],
  "_has_only_n_positional_args": [
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "_has_only_n_positional_args"
      ]
    ]
  ],
  "_could_be_string": [
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "_could_be_string"
      ]
    ]
  ],
  "_validate_encoding": [
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "_validate_encoding"
      ]
    ]
  ],
  "visit_subscript": [
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "visit_subscript"
      ]
    ],
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "visit_subscript"
      ]
    ]
  ],
  "visit_delattr": [
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "visit_delattr"
      ]
    ],
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "visit_delattr"
      ]
    ]
  ],
  "_is_used_in_except_block": [
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "visit_excepthandler",
        "_is_used_in_except_block"
      ]
    ]
  ],
  "visit_excepthandler": [
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "visit_excepthandler"
      ]
    ],
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "visit_excepthandler"
      ]
    ]
  ],
  "visit_repr": [
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "visit_repr"
      ]
    ]
  ],
  "_check_raise_value": [
    [
      "pylint/checkers/python3.py",
      [
        "Python3Checker",
        "_check_raise_value"
      ]
    ]
  ],
  "report_raw_stats": [
    [
      "pylint/checkers/raw_metrics.py",
      [
        "report_raw_stats"
      ]
    ]
  ],
  "get_type": [
    [
      "pylint/checkers/raw_metrics.py",
      [
        "get_type"
      ]
    ]
  ],
  "instance_has_bool": [
    [
      "pylint/checkers/refactoring/len_checker.py",
      [
        "LenChecker",
        "instance_has_bool"
      ]
    ]
  ],
  "base_classes_of_node": [
    [
      "pylint/checkers/refactoring/len_checker.py",
      [
        "LenChecker",
        "base_classes_of_node"
      ]
    ]
  ],
  "_check_consider_iterating_dictionary": [
    [
      "pylint/checkers/refactoring/recommendation_checker.py",
      [
        "RecommendationChecker",
        "_check_consider_iterating_dictionary"
      ]
    ]
  ],
  "_check_use_maxsplit_arg": [
    [
      "pylint/checkers/refactoring/recommendation_checker.py",
      [
        "RecommendationChecker",
        "_check_use_maxsplit_arg"
      ]
    ]
  ],
  "_check_consider_using_enumerate": [
    [
      "pylint/checkers/refactoring/recommendation_checker.py",
      [
        "RecommendationChecker",
        "_check_consider_using_enumerate"
      ]
    ]
  ],
  "_check_consider_using_dict_items": [
    [
      "pylint/checkers/refactoring/recommendation_checker.py",
      [
        "RecommendationChecker",
        "_check_consider_using_dict_items"
      ]
    ]
  ],
  "_if_statement_is_always_returning": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "_if_statement_is_always_returning"
      ]
    ]
  ],
  "same_start_token": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "_is_trailing_comma",
        "same_start_token"
      ]
    ]
  ],
  "get_curline_index_start": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "_is_trailing_comma",
        "get_curline_index_start"
      ]
    ]
  ],
  "_is_trailing_comma": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "_is_trailing_comma"
      ]
    ]
  ],
  "_is_inside_context_manager": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "_is_inside_context_manager"
      ]
    ]
  ],
  "_init": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_init"
      ]
    ],
    [
      "pylint/extensions/check_elif.py",
      [
        "ElseifUsedChecker",
        "_init"
      ]
    ],
    [
      "tests/functional/a/attribute_defined_outside_init.py",
      [
        "C",
        "_init"
      ]
    ],
    [
      "tests/functional/a/attribute_defined_outside_init.py",
      [
        "E",
        "_init"
      ]
    ]
  ],
  "_is_bool_const": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_is_bool_const"
      ]
    ]
  ],
  "_is_actual_elif": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_is_actual_elif"
      ]
    ]
  ],
  "_check_simplifiable_if": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_simplifiable_if"
      ]
    ]
  ],
  "_check_redefined_argument_from_local": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_redefined_argument_from_local"
      ]
    ]
  ],
  "_check_superfluous_else": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_superfluous_else"
      ]
    ]
  ],
  "_check_superfluous_else_return": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_superfluous_else_return"
      ]
    ]
  ],
  "_check_superfluous_else_raise": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_superfluous_else_raise"
      ]
    ]
  ],
  "_check_superfluous_else_break": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_superfluous_else_break"
      ]
    ]
  ],
  "_check_superfluous_else_continue": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_superfluous_else_continue"
      ]
    ]
  ],
  "_type_and_name_are_equal": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_type_and_name_are_equal"
      ]
    ]
  ],
  "_is_dict_get_block": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_is_dict_get_block"
      ]
    ]
  ],
  "_check_consider_get": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_consider_get"
      ]
    ]
  ],
  "_check_consider_using_min_max_builtin": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_consider_using_min_max_builtin"
      ]
    ]
  ],
  "_check_simplifiable_ifexp": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_simplifiable_ifexp"
      ]
    ]
  ],
  "_check_stop_iteration_inside_generator": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_stop_iteration_inside_generator"
      ]
    ]
  ],
  "_check_exception_inherit_from_stopiteration": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_exception_inherit_from_stopiteration"
      ]
    ]
  ],
  "_check_consider_using_comprehension_constructor": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_consider_using_comprehension_constructor"
      ]
    ]
  ],
  "_check_consider_using_generator": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_consider_using_generator"
      ]
    ]
  ],
  "_has_exit_in_scope": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_has_exit_in_scope"
      ]
    ]
  ],
  "_check_quit_exit_call": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_quit_exit_call"
      ]
    ]
  ],
  "_check_super_with_arguments": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_super_with_arguments"
      ]
    ]
  ],
  "_looks_like_infinite_iterator": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_raising_stopiteration_in_generator_next_call",
        "_looks_like_infinite_iterator"
      ]
    ]
  ],
  "_check_raising_stopiteration_in_generator_next_call": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_raising_stopiteration_in_generator_next_call"
      ]
    ]
  ],
  "_check_nested_blocks": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_nested_blocks"
      ]
    ]
  ],
  "_emit_nested_blocks_message_if_needed": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_emit_nested_blocks_message_if_needed"
      ]
    ]
  ],
  "_duplicated_isinstance_types": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_duplicated_isinstance_types"
      ]
    ]
  ],
  "_check_consider_merging_isinstance": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_consider_merging_isinstance"
      ]
    ]
  ],
  "_check_consider_using_in": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_consider_using_in"
      ]
    ]
  ],
  "_find_lower_upper_bounds": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_chained_comparison",
        "_find_lower_upper_bounds"
      ]
    ]
  ],
  "_check_chained_comparison": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_chained_comparison"
      ]
    ]
  ],
  "_apply_boolean_simplification_rules": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_apply_boolean_simplification_rules"
      ]
    ]
  ],
  "_simplify_boolean_operation": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_simplify_boolean_operation"
      ]
    ]
  ],
  "_check_simplifiable_condition": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_simplifiable_condition"
      ]
    ]
  ],
  "visit_boolop": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "visit_boolop"
      ]
    ],
    [
      "pylint/checkers/stdlib.py",
      [
        "StdlibChecker",
        "visit_boolop"
      ]
    ]
  ],
  "_is_simple_assignment": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_is_simple_assignment"
      ]
    ]
  ],
  "_check_swap_variables": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_swap_variables"
      ]
    ]
  ],
  "_check_consider_using_with": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_consider_using_with"
      ]
    ]
  ],
  "_check_consider_using_join": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_consider_using_join"
      ]
    ]
  ],
  "visit_augassign": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "visit_augassign"
      ]
    ]
  ],
  "_check_unnecessary_comprehension": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_unnecessary_comprehension"
      ]
    ]
  ],
  "_is_and_or_ternary": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_is_and_or_ternary"
      ]
    ]
  ],
  "_and_or_ternary_arguments": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_and_or_ternary_arguments"
      ]
    ]
  ],
  "_check_consistent_returns": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_consistent_returns"
      ]
    ]
  ],
  "_is_if_node_return_ended": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_is_if_node_return_ended"
      ]
    ]
  ],
  "_is_raise_node_return_ended": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_is_raise_node_return_ended"
      ]
    ]
  ],
  "_is_node_return_ended": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_is_node_return_ended"
      ]
    ]
  ],
  "_has_return_in_siblings": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_has_return_in_siblings"
      ]
    ]
  ],
  "_is_function_def_never_returning": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_is_function_def_never_returning"
      ]
    ]
  ],
  "_check_return_at_the_end": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_return_at_the_end"
      ]
    ]
  ],
  "_check_unnecessary_dict_index_lookup": [
    [
      "pylint/checkers/refactoring/refactoring_checker.py",
      [
        "RefactoringChecker",
        "_check_unnecessary_dict_index_lookup"
      ]
    ]
  ],
  "append_stream": [
    [
      "pylint/checkers/similar.py",
      [
        "Similar",
        "append_stream"
      ]
    ]
  ],
  "run": [
    [
      "pylint/checkers/similar.py",
      [
        "Similar",
        "run"
      ]
    ],
    [
      "pylint/pyreverse/main.py",
      [
        "Run",
        "run"
      ]
    ],
    [
      "script/bump_changelog.py",
      [
        "run"
      ]
    ],
    [
      "tests/functional/c/consider/consider_using_sys_exit_local_scope.py",
      [
        "run"
      ]
    ],
    [
      "tests/functional/m/mapping_context.py",
      [
        "SomeMixin",
        "run"
      ]
    ],
    [
      "tests/functional/m/mapping_context.py",
      [
        "AbstractThing",
        "run"
      ]
    ],
    [
      "tests/functional/m/mapping_context.py",
      [
        "BaseThing",
        "run"
      ]
    ],
    [
      "tests/functional/m/mapping_context.py",
      [
        "Thing",
        "run"
      ]
    ],
    [
      "tests/functional/r/recursion/recursion_error_3159.py",
      [
        "AnyCommand",
        "run"
      ]
    ]
  ],
  "_compute_sims": [
    [
      "pylint/checkers/similar.py",
      [
        "Similar",
        "_compute_sims"
      ]
    ]
  ],
  "_display_sims": [
    [
      "pylint/checkers/similar.py",
      [
        "Similar",
        "_display_sims"
      ]
    ]
  ],
  "_find_common": [
    [
      "pylint/checkers/similar.py",
      [
        "Similar",
        "_find_common"
      ]
    ]
  ],
  "_iter_sims": [
    [
      "pylint/checkers/similar.py",
      [
        "Similar",
        "_iter_sims"
      ]
    ]
  ],
  "combine_mapreduce_data": [
    [
      "pylint/checkers/similar.py",
      [
        "Similar",
        "combine_mapreduce_data"
      ]
    ]
  ],
  "stripped_lines": [
    [
      "pylint/checkers/similar.py",
      [
        "stripped_lines"
      ]
    ]
  ],
  "__len__": [
    [
      "pylint/checkers/similar.py",
      [
        "LineSet",
        "__len__"
      ]
    ],
    [
      "pylint/message/message_id_store.py",
      [
        "MessageIdStore",
        "__len__"
      ]
    ],
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "Structure",
        "__len__"
      ]
    ],
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "Sizable",
        "__len__"
      ]
    ],
    [
      "tests/functional/a/abstract/abstract_method_py3.py",
      [
        "Structure",
        "__len__"
      ]
    ],
    [
      "tests/functional/a/abstract/abstract_method_py3.py",
      [
        "Sizable",
        "__len__"
      ]
    ],
    [
      "tests/functional/b/bad_reversed_sequence.py",
      [
        "SecondGoodReversed",
        "__len__"
      ]
    ],
    [
      "tests/functional/b/bad_reversed_sequence.py",
      [
        "BadReversed",
        "__len__"
      ]
    ],
    [
      "tests/functional/i/invalid/l/invalid_length_returned.py",
      [
        "FirstGoodLen",
        "__len__"
      ]
    ],
    [
      "tests/functional/i/invalid/l/invalid_length_returned.py",
      [
        "SecondGoodLen",
        "__len__"
      ]
    ],
    [
      "tests/functional/i/invalid/l/invalid_length_returned.py",
      [
        "LenMetaclass",
        "__len__"
      ]
    ],
    [
      "tests/functional/i/invalid/l/invalid_length_returned.py",
      [
        "FirstBadLen",
        "__len__"
      ]
    ],
    [
      "tests/functional/i/invalid/l/invalid_length_returned.py",
      [
        "SecondBadLen",
        "__len__"
      ]
    ],
    [
      "tests/functional/i/invalid/l/invalid_length_returned.py",
      [
        "ThirdBadLen",
        "__len__"
      ]
    ],
    [
      "tests/functional/i/invalid/l/invalid_length_returned.py",
      [
        "NonRegression",
        "__len__"
      ]
    ],
    [
      "tests/functional/i/invalid/l/invalid_length_returned.py",
      [
        "AnotherAmbiguousLen",
        "__len__"
      ]
    ],
    [
      "tests/functional/i/iterable_context.py",
      [
        "C",
        "__len__"
      ]
    ],
    [
      "tests/functional/n/no/no_self_use.py",
      [
        "Sub1",
        "__len__"
      ]
    ],
    [
      "tests/functional/t/too/too_few_public_methods.py",
      [
        "DumbList",
        "__len__"
      ]
    ],
    [
      "tests/functional/t/too/too_many_ancestors.py",
      [
        "ItemSequence",
        "__len__"
      ]
    ],
    [
      "tests/functional/t/try_except_raise_crash.py",
      [
        "TestBaseException",
        "__len__"
      ]
    ],
    [
      "tests/functional/u/unpacking_non_sequence.py",
      [
        "Seq",
        "__len__"
      ]
    ]
  ],
  "__getitem__": [
    [
      "pylint/checkers/similar.py",
      [
        "LineSet",
        "__getitem__"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "HasSpecialMethod",
        "__getitem__"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "OverridesSpecialMethod",
        "__getitem__"
      ]
    ],
    [
      "tests/functional/b/bad_reversed_sequence.py",
      [
        "SecondGoodReversed",
        "__getitem__"
      ]
    ],
    [
      "tests/functional/b/bad_reversed_sequence.py",
      [
        "SecondBadReversed",
        "__getitem__"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_related.py",
      [
        "ClsGetItem",
        "__getitem__"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_related_py39.py",
      [
        "ClsGetItem",
        "__getitem__"
      ]
    ],
    [
      "tests/functional/i/iterable_context.py",
      [
        "C",
        "__getitem__"
      ]
    ],
    [
      "tests/functional/m/mapping_context.py",
      [
        "CustomMapping",
        "__getitem__"
      ]
    ],
    [
      "tests/functional/m/mapping_context_py3.py",
      [
        "Meta",
        "__getitem__"
      ]
    ],
    [
      "tests/functional/m/member/membership_protocol.py",
      [
        "OldStyleIterable",
        "__getitem__"
      ]
    ],
    [
      "tests/functional/m/member/membership_protocol_py3.py",
      [
        "MetaOldIterable",
        "__getitem__"
      ]
    ],
    [
      "tests/functional/s/string/string_formatting.py",
      [
        "Getitem",
        "__getitem__"
      ]
    ],
    [
      "tests/functional/t/too/too_few_public_methods.py",
      [
        "DumbList",
        "__getitem__"
      ]
    ],
    [
      "tests/functional/t/too/too_many_ancestors.py",
      [
        "ItemSequence",
        "__getitem__"
      ]
    ],
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "Valid",
        "__getitem__"
      ]
    ],
    [
      "tests/functional/u/unpacking_non_sequence.py",
      [
        "Seq",
        "__getitem__"
      ]
    ],
    [
      "tests/functional/u/unsubscriptable_value.py",
      [
        "Subscriptable",
        "__getitem__"
      ]
    ],
    [
      "tests/functional/u/unsubscriptable_value.py",
      [
        "MetaSubscriptable",
        "__getitem__"
      ]
    ]
  ],
  "__lt__": [
    [
      "pylint/checkers/similar.py",
      [
        "LineSet",
        "__lt__"
      ]
    ],
    [
      "tests/functional/c/consider/consider_using_min_max_builtin.py",
      [
        "AA",
        "__lt__"
      ]
    ],
    [
      "tests/functional/r/regression/regression_2306_enum_value.py",
      [
        "Color",
        "__lt__"
      ]
    ]
  ],
  "__hash__": [
    [
      "pylint/checkers/similar.py",
      [
        "LineSet",
        "__hash__"
      ]
    ],
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "Structure",
        "__hash__"
      ]
    ],
    [
      "tests/functional/a/abstract/abstract_method_py3.py",
      [
        "Structure",
        "__hash__"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_hash_returned.py",
      [
        "FirstGoodHash",
        "__hash__"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_hash_returned.py",
      [
        "SecondGoodHash",
        "__hash__"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_hash_returned.py",
      [
        "HashMetaclass",
        "__hash__"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_hash_returned.py",
      [
        "FirstBadHash",
        "__hash__"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_hash_returned.py",
      [
        "SecondBadHash",
        "__hash__"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_hash_returned.py",
      [
        "ThirdBadHash",
        "__hash__"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_hash_returned.py",
      [
        "FourthBadHash",
        "__hash__"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_hash_returned.py",
      [
        "AnotherAmbiguousHash",
        "__hash__"
      ]
    ]
  ],
  "__eq__": [
    [
      "pylint/checkers/similar.py",
      [
        "LineSet",
        "__eq__"
      ]
    ],
    [
      "pylint/testutils/output_line.py",
      [
        "Message",
        "__eq__"
      ]
    ],
    [
      "tests/functional/a/access/access_to_protected_members.py",
      [
        "Issue1802",
        "__eq__"
      ]
    ],
    [
      "tests/functional/n/name/namePresetCamelCase.py",
      [
        "MyClass",
        "__eq__"
      ]
    ],
    [
      "tests/functional/n/name/name_preset_snake_case.py",
      [
        "MyClass",
        "__eq__"
      ]
    ]
  ],
  "enumerate_stripped": [
    [
      "pylint/checkers/similar.py",
      [
        "LineSet",
        "enumerate_stripped"
      ]
    ]
  ],
  "find": [
    [
      "pylint/checkers/similar.py",
      [
        "LineSet",
        "find"
      ]
    ]
  ],
  "_mk_index": [
    [
      "pylint/checkers/similar.py",
      [
        "LineSet",
        "_mk_index"
      ]
    ]
  ],
  "report_similarities": [
    [
      "pylint/checkers/similar.py",
      [
        "report_similarities"
      ]
    ]
  ],
  "set_option": [
    [
      "pylint/checkers/similar.py",
      [
        "SimilarChecker",
        "set_option"
      ]
    ],
    [
      "pylint/config/options_provider_mixin.py",
      [
        "OptionsProviderMixIn",
        "set_option"
      ]
    ],
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "set_option"
      ]
    ]
  ],
  "usage": [
    [
      "pylint/checkers/similar.py",
      [
        "usage"
      ]
    ]
  ],
  "Run": [
    [
      "pylint/checkers/similar.py",
      [
        "Run"
      ]
    ],
    [
      "pylint/epylint.py",
      [
        "Run"
      ]
    ]
  ],
  "_skip": [
    [
      "pylint/checkers/spelling.py",
      [
        "WordsWithDigitsFilter",
        "_skip"
      ]
    ],
    [
      "pylint/checkers/spelling.py",
      [
        "WordsWithUnderscores",
        "_skip"
      ]
    ],
    [
      "pylint/checkers/spelling.py",
      [
        "RegExFilter",
        "_skip"
      ]
    ]
  ],
  "next": [
    [
      "pylint/checkers/spelling.py",
      [
        "ForwardSlashChunker",
        "next"
      ]
    ],
    [
      "tests/functional/a/async_functions.py",
      [
        "next"
      ]
    ],
    [
      "tests/functional/i/iterable_context.py",
      [
        "B",
        "next"
      ]
    ],
    [
      "tests/functional/n/non/non_iterator_returned.py",
      [
        "SecondGoodIterator",
        "next"
      ]
    ],
    [
      "tests/functional/n/non/non_iterator_returned.py",
      [
        "IteratorMetaclass",
        "next"
      ]
    ],
    [
      "tests/functional/r/regression/regression_3595_notcallable_collections.py",
      [
        "Example",
        "next"
      ]
    ],
    [
      "tests/functional/s/stop_iteration_inside_generator.py",
      [
        "SomeClassWithNext",
        "next"
      ]
    ]
  ],
  "_next": [
    [
      "pylint/checkers/spelling.py",
      [
        "ForwardSlashChunker",
        "_next"
      ]
    ]
  ],
  "_strip_code_flanked_in_backticks": [
    [
      "pylint/checkers/spelling.py",
      [
        "_strip_code_flanked_in_backticks"
      ]
    ]
  ],
  "_check_spelling": [
    [
      "pylint/checkers/spelling.py",
      [
        "SpellingChecker",
        "_check_spelling"
      ]
    ]
  ],
  "_check_mode_str": [
    [
      "pylint/checkers/stdlib.py",
      [
        "_check_mode_str"
      ]
    ]
  ],
  "_check_bad_thread_instantiation": [
    [
      "pylint/checkers/stdlib.py",
      [
        "StdlibChecker",
        "_check_bad_thread_instantiation"
      ]
    ]
  ],
  "_check_for_preexec_fn_in_popen": [
    [
      "pylint/checkers/stdlib.py",
      [
        "StdlibChecker",
        "_check_for_preexec_fn_in_popen"
      ]
    ]
  ],
  "_check_for_check_kw_in_run": [
    [
      "pylint/checkers/stdlib.py",
      [
        "StdlibChecker",
        "_check_for_check_kw_in_run"
      ]
    ]
  ],
  "_check_shallow_copy_environ": [
    [
      "pylint/checkers/stdlib.py",
      [
        "StdlibChecker",
        "_check_shallow_copy_environ"
      ]
    ]
  ],
  "_check_redundant_assert": [
    [
      "pylint/checkers/stdlib.py",
      [
        "StdlibChecker",
        "_check_redundant_assert"
      ]
    ]
  ],
  "_check_datetime": [
    [
      "pylint/checkers/stdlib.py",
      [
        "StdlibChecker",
        "_check_datetime"
      ]
    ]
  ],
  "_check_open_mode": [
    [
      "pylint/checkers/stdlib.py",
      [
        "StdlibChecker",
        "_check_open_mode"
      ]
    ]
  ],
  "_check_env_function": [
    [
      "pylint/checkers/stdlib.py",
      [
        "StdlibChecker",
        "_check_env_function"
      ]
    ]
  ],
  "_check_invalid_envvar_value": [
    [
      "pylint/checkers/stdlib.py",
      [
        "StdlibChecker",
        "_check_invalid_envvar_value"
      ]
    ]
  ],
  "get_access_path": [
    [
      "pylint/checkers/strings.py",
      [
        "get_access_path"
      ]
    ]
  ],
  "arg_matches_format_type": [
    [
      "pylint/checkers/strings.py",
      [
        "arg_matches_format_type"
      ]
    ]
  ],
  "visit_joinedstr": [
    [
      "pylint/checkers/strings.py",
      [
        "StringFormatChecker",
        "visit_joinedstr"
      ]
    ]
  ],
  "_detect_vacuous_formatting": [
    [
      "pylint/checkers/strings.py",
      [
        "StringFormatChecker",
        "_detect_vacuous_formatting"
      ]
    ]
  ],
  "_check_new_format": [
    [
      "pylint/checkers/strings.py",
      [
        "StringFormatChecker",
        "_check_new_format"
      ]
    ]
  ],
  "_check_new_format_specifiers": [
    [
      "pylint/checkers/strings.py",
      [
        "StringFormatChecker",
        "_check_new_format_specifiers"
      ]
    ]
  ],
  "visit_list": [
    [
      "pylint/checkers/strings.py",
      [
        "StringConstantChecker",
        "visit_list"
      ]
    ]
  ],
  "visit_set": [
    [
      "pylint/checkers/strings.py",
      [
        "StringConstantChecker",
        "visit_set"
      ]
    ]
  ],
  "check_for_consistent_string_delimiters": [
    [
      "pylint/checkers/strings.py",
      [
        "StringConstantChecker",
        "check_for_consistent_string_delimiters"
      ]
    ]
  ],
  "check_for_concatenated_strings": [
    [
      "pylint/checkers/strings.py",
      [
        "StringConstantChecker",
        "check_for_concatenated_strings"
      ]
    ]
  ],
  "process_string_token": [
    [
      "pylint/checkers/strings.py",
      [
        "StringConstantChecker",
        "process_string_token"
      ]
    ]
  ],
  "process_non_raw_string_token": [
    [
      "pylint/checkers/strings.py",
      [
        "StringConstantChecker",
        "process_non_raw_string_token"
      ]
    ]
  ],
  "str_eval": [
    [
      "pylint/checkers/strings.py",
      [
        "str_eval"
      ]
    ]
  ],
  "_is_long_string": [
    [
      "pylint/checkers/strings.py",
      [
        "_is_long_string"
      ]
    ]
  ],
  "_get_quote_delimiter": [
    [
      "pylint/checkers/strings.py",
      [
        "_get_quote_delimiter"
      ]
    ]
  ],
  "_is_quote_delimiter_chosen_freely": [
    [
      "pylint/checkers/strings.py",
      [
        "_is_quote_delimiter_chosen_freely"
      ]
    ]
  ],
  "_unflatten": [
    [
      "pylint/checkers/typecheck.py",
      [
        "_unflatten"
      ]
    ]
  ],
  "_flatten_container": [
    [
      "pylint/checkers/typecheck.py",
      [
        "_flatten_container"
      ]
    ]
  ],
  "_is_owner_ignored": [
    [
      "pylint/checkers/typecheck.py",
      [
        "_is_owner_ignored"
      ]
    ]
  ],
  "_node_names": [
    [
      "pylint/checkers/typecheck.py",
      [
        "_node_names"
      ]
    ]
  ],
  "_": [
    [
      "pylint/checkers/typecheck.py",
      [
        "_"
      ]
    ],
    [
      "tests/functional/f/function_redefined.py",
      [
        "_"
      ]
    ],
    [
      "tests/functional/s/singledispatch_functions_py3.py",
      [
        "_"
      ]
    ]
  ],
  "_string_distance": [
    [
      "pylint/checkers/typecheck.py",
      [
        "_string_distance"
      ]
    ]
  ],
  "_similar_names": [
    [
      "pylint/checkers/typecheck.py",
      [
        "_similar_names"
      ]
    ]
  ],
  "_missing_member_hint": [
    [
      "pylint/checkers/typecheck.py",
      [
        "_missing_member_hint"
      ]
    ]
  ],
  "_emit_no_member": [
    [
      "pylint/checkers/typecheck.py",
      [
        "_emit_no_member"
      ]
    ]
  ],
  "_determine_callable": [
    [
      "pylint/checkers/typecheck.py",
      [
        "_determine_callable"
      ]
    ]
  ],
  "_has_parent_of_type": [
    [
      "pylint/checkers/typecheck.py",
      [
        "_has_parent_of_type"
      ]
    ]
  ],
  "_no_context_variadic_keywords": [
    [
      "pylint/checkers/typecheck.py",
      [
        "_no_context_variadic_keywords"
      ]
    ]
  ],
  "_no_context_variadic_positional": [
    [
      "pylint/checkers/typecheck.py",
      [
        "_no_context_variadic_positional"
      ]
    ]
  ],
  "_no_context_variadic": [
    [
      "pylint/checkers/typecheck.py",
      [
        "_no_context_variadic"
      ]
    ]
  ],
  "_is_invalid_metaclass": [
    [
      "pylint/checkers/typecheck.py",
      [
        "_is_invalid_metaclass"
      ]
    ]
  ],
  "_infer_from_metaclass_constructor": [
    [
      "pylint/checkers/typecheck.py",
      [
        "_infer_from_metaclass_constructor"
      ]
    ]
  ],
  "_is_c_extension": [
    [
      "pylint/checkers/typecheck.py",
      [
        "_is_c_extension"
      ]
    ]
  ],
  "_is_invalid_isinstance_type": [
    [
      "pylint/checkers/typecheck.py",
      [
        "_is_invalid_isinstance_type"
      ]
    ]
  ],
  "_suggestion_mode": [
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "_suggestion_mode"
      ]
    ]
  ],
  "_compiled_generated_members": [
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "_compiled_generated_members"
      ]
    ]
  ],
  "_metaclass_name": [
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "visit_classdef",
        "_metaclass_name"
      ]
    ]
  ],
  "_get_nomember_msgid_hint": [
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "_get_nomember_msgid_hint"
      ]
    ]
  ],
  "_check_assignment_from_function_call": [
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "_check_assignment_from_function_call"
      ]
    ]
  ],
  "_check_dundername_is_string": [
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "_check_dundername_is_string"
      ]
    ]
  ],
  "_check_uninferable_call": [
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "_check_uninferable_call"
      ]
    ]
  ],
  "_check_argument_order": [
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "_check_argument_order"
      ]
    ]
  ],
  "_check_isinstance_args": [
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "_check_isinstance_args"
      ]
    ]
  ],
  "_check_invalid_sequence_index": [
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "_check_invalid_sequence_index"
      ]
    ]
  ],
  "visit_extslice": [
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "visit_extslice"
      ]
    ]
  ],
  "_check_invalid_slice_index": [
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "_check_invalid_slice_index"
      ]
    ]
  ],
  "_detect_unsupported_alternative_union_syntax": [
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "_detect_unsupported_alternative_union_syntax"
      ]
    ]
  ],
  "_check_unsupported_alternative_union_syntax": [
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "_check_unsupported_alternative_union_syntax"
      ]
    ]
  ],
  "_visit_binop": [
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "_visit_binop"
      ]
    ]
  ],
  "_visit_augassign": [
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "_visit_augassign"
      ]
    ]
  ],
  "_check_binop_errors": [
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "_check_binop_errors"
      ]
    ]
  ],
  "_check_membership_test": [
    [
      "pylint/checkers/typecheck.py",
      [
        "TypeChecker",
        "_check_membership_test"
      ]
    ]
  ],
  "_is_asyncio_coroutine": [
    [
      "pylint/checkers/typecheck.py",
      [
        "IterableChecker",
        "_is_asyncio_coroutine"
      ]
    ]
  ],
  "_check_iterable": [
    [
      "pylint/checkers/typecheck.py",
      [
        "IterableChecker",
        "_check_iterable"
      ]
    ]
  ],
  "_check_mapping": [
    [
      "pylint/checkers/typecheck.py",
      [
        "IterableChecker",
        "_check_mapping"
      ]
    ]
  ],
  "visit_asyncfor": [
    [
      "pylint/checkers/typecheck.py",
      [
        "IterableChecker",
        "visit_asyncfor"
      ]
    ]
  ],
  "visit_dictcomp": [
    [
      "pylint/checkers/typecheck.py",
      [
        "IterableChecker",
        "visit_dictcomp"
      ]
    ],
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "visit_dictcomp"
      ]
    ]
  ],
  "visit_setcomp": [
    [
      "pylint/checkers/typecheck.py",
      [
        "IterableChecker",
        "visit_setcomp"
      ]
    ],
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "visit_setcomp"
      ]
    ]
  ],
  "visit_generatorexp": [
    [
      "pylint/checkers/typecheck.py",
      [
        "IterableChecker",
        "visit_generatorexp"
      ]
    ],
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "visit_generatorexp"
      ]
    ]
  ],
  "visit_await": [
    [
      "pylint/checkers/typecheck.py",
      [
        "IterableChecker",
        "visit_await"
      ]
    ]
  ],
  "_check_await_outside_coroutine": [
    [
      "pylint/checkers/typecheck.py",
      [
        "IterableChecker",
        "_check_await_outside_coroutine"
      ]
    ]
  ],
  "is_inside_lambda": [
    [
      "pylint/checkers/utils.py",
      [
        "is_inside_lambda"
      ]
    ]
  ],
  "get_all_elements": [
    [
      "pylint/checkers/utils.py",
      [
        "get_all_elements"
      ]
    ]
  ],
  "is_super": [
    [
      "pylint/checkers/utils.py",
      [
        "is_super"
      ]
    ]
  ],
  "is_error": [
    [
      "pylint/checkers/utils.py",
      [
        "is_error"
      ]
    ]
  ],
  "is_builtin_object": [
    [
      "pylint/checkers/utils.py",
      [
        "is_builtin_object"
      ]
    ]
  ],
  "is_builtin": [
    [
      "pylint/checkers/utils.py",
      [
        "is_builtin"
      ]
    ]
  ],
  "is_defined_in_scope": [
    [
      "pylint/checkers/utils.py",
      [
        "is_defined_in_scope"
      ]
    ]
  ],
  "is_defined_before": [
    [
      "pylint/checkers/utils.py",
      [
        "is_defined_before"
      ]
    ]
  ],
  "is_default_argument": [
    [
      "pylint/checkers/utils.py",
      [
        "is_default_argument"
      ]
    ]
  ],
  "is_func_decorator": [
    [
      "pylint/checkers/utils.py",
      [
        "is_func_decorator"
      ]
    ]
  ],
  "is_ancestor_name": [
    [
      "pylint/checkers/utils.py",
      [
        "is_ancestor_name"
      ]
    ]
  ],
  "assign_parent": [
    [
      "pylint/checkers/utils.py",
      [
        "assign_parent"
      ]
    ]
  ],
  "overrides_a_method": [
    [
      "pylint/checkers/utils.py",
      [
        "overrides_a_method"
      ]
    ]
  ],
  "check_messages": [
    [
      "pylint/checkers/utils.py",
      [
        "check_messages"
      ]
    ],
    [
      "tests/extensions/data/docstring.py",
      [
        "check_messages"
      ]
    ]
  ],
  "next_char": [
    [
      "pylint/checkers/utils.py",
      [
        "parse_format_string",
        "next_char"
      ]
    ]
  ],
  "parse_format_string": [
    [
      "pylint/checkers/utils.py",
      [
        "parse_format_string"
      ]
    ]
  ],
  "split_format_field_names": [
    [
      "pylint/checkers/utils.py",
      [
        "split_format_field_names"
      ]
    ]
  ],
  "collect_string_fields": [
    [
      "pylint/checkers/utils.py",
      [
        "collect_string_fields"
      ]
    ]
  ],
  "parse_format_method_string": [
    [
      "pylint/checkers/utils.py",
      [
        "parse_format_method_string"
      ]
    ]
  ],
  "is_attr_protected": [
    [
      "pylint/checkers/utils.py",
      [
        "is_attr_protected"
      ]
    ]
  ],
  "node_frame_class": [
    [
      "pylint/checkers/utils.py",
      [
        "node_frame_class"
      ]
    ]
  ],
  "is_attr_private": [
    [
      "pylint/checkers/utils.py",
      [
        "is_attr_private"
      ]
    ]
  ],
  "get_argument_from_call": [
    [
      "pylint/checkers/utils.py",
      [
        "get_argument_from_call"
      ]
    ]
  ],
  "inherit_from_std_ex": [
    [
      "pylint/checkers/utils.py",
      [
        "inherit_from_std_ex"
      ]
    ]
  ],
  "error_of_type": [
    [
      "pylint/checkers/utils.py",
      [
        "error_of_type"
      ]
    ]
  ],
  "decorated_with_property": [
    [
      "pylint/checkers/utils.py",
      [
        "decorated_with_property"
      ]
    ]
  ],
  "_is_property_kind": [
    [
      "pylint/checkers/utils.py",
      [
        "_is_property_kind"
      ]
    ]
  ],
  "is_property_setter": [
    [
      "pylint/checkers/utils.py",
      [
        "is_property_setter"
      ]
    ]
  ],
  "is_property_deleter": [
    [
      "pylint/checkers/utils.py",
      [
        "is_property_deleter"
      ]
    ]
  ],
  "is_property_setter_or_deleter": [
    [
      "pylint/checkers/utils.py",
      [
        "is_property_setter_or_deleter"
      ]
    ]
  ],
  "_is_property_decorator": [
    [
      "pylint/checkers/utils.py",
      [
        "_is_property_decorator"
      ]
    ]
  ],
  "decorated_with": [
    [
      "pylint/checkers/utils.py",
      [
        "decorated_with"
      ]
    ]
  ],
  "unimplemented_abstract_methods": [
    [
      "pylint/checkers/utils.py",
      [
        "unimplemented_abstract_methods"
      ]
    ]
  ],
  "find_try_except_wrapper_node": [
    [
      "pylint/checkers/utils.py",
      [
        "find_try_except_wrapper_node"
      ]
    ]
  ],
  "find_except_wrapper_node_in_scope": [
    [
      "pylint/checkers/utils.py",
      [
        "find_except_wrapper_node_in_scope"
      ]
    ]
  ],
  "is_from_fallback_block": [
    [
      "pylint/checkers/utils.py",
      [
        "is_from_fallback_block"
      ]
    ]
  ],
  "_except_handlers_ignores_exception": [
    [
      "pylint/checkers/utils.py",
      [
        "_except_handlers_ignores_exception"
      ]
    ]
  ],
  "get_exception_handlers": [
    [
      "pylint/checkers/utils.py",
      [
        "get_exception_handlers"
      ]
    ]
  ],
  "is_node_inside_try_except": [
    [
      "pylint/checkers/utils.py",
      [
        "is_node_inside_try_except"
      ]
    ]
  ],
  "node_ignores_exception": [
    [
      "pylint/checkers/utils.py",
      [
        "node_ignores_exception"
      ]
    ]
  ],
  "class_is_abstract": [
    [
      "pylint/checkers/utils.py",
      [
        "class_is_abstract"
      ]
    ]
  ],
  "_supports_protocol_method": [
    [
      "pylint/checkers/utils.py",
      [
        "_supports_protocol_method"
      ]
    ]
  ],
  "is_comprehension": [
    [
      "pylint/checkers/utils.py",
      [
        "is_comprehension"
      ]
    ]
  ],
  "_supports_mapping_protocol": [
    [
      "pylint/checkers/utils.py",
      [
        "_supports_mapping_protocol"
      ]
    ]
  ],
  "_supports_membership_test_protocol": [
    [
      "pylint/checkers/utils.py",
      [
        "_supports_membership_test_protocol"
      ]
    ]
  ],
  "_supports_iteration_protocol": [
    [
      "pylint/checkers/utils.py",
      [
        "_supports_iteration_protocol"
      ]
    ]
  ],
  "_supports_async_iteration_protocol": [
    [
      "pylint/checkers/utils.py",
      [
        "_supports_async_iteration_protocol"
      ]
    ]
  ],
  "_supports_getitem_protocol": [
    [
      "pylint/checkers/utils.py",
      [
        "_supports_getitem_protocol"
      ]
    ]
  ],
  "_supports_setitem_protocol": [
    [
      "pylint/checkers/utils.py",
      [
        "_supports_setitem_protocol"
      ]
    ]
  ],
  "_supports_delitem_protocol": [
    [
      "pylint/checkers/utils.py",
      [
        "_supports_delitem_protocol"
      ]
    ]
  ],
  "_is_abstract_class_name": [
    [
      "pylint/checkers/utils.py",
      [
        "_is_abstract_class_name"
      ]
    ]
  ],
  "is_inside_abstract_class": [
    [
      "pylint/checkers/utils.py",
      [
        "is_inside_abstract_class"
      ]
    ]
  ],
  "_supports_protocol": [
    [
      "pylint/checkers/utils.py",
      [
        "_supports_protocol"
      ]
    ]
  ],
  "is_mapping": [
    [
      "pylint/checkers/utils.py",
      [
        "is_mapping"
      ]
    ]
  ],
  "supports_membership_test": [
    [
      "pylint/checkers/utils.py",
      [
        "supports_membership_test"
      ]
    ]
  ],
  "supports_getitem": [
    [
      "pylint/checkers/utils.py",
      [
        "supports_getitem"
      ]
    ]
  ],
  "supports_setitem": [
    [
      "pylint/checkers/utils.py",
      [
        "supports_setitem"
      ]
    ]
  ],
  "supports_delitem": [
    [
      "pylint/checkers/utils.py",
      [
        "supports_delitem"
      ]
    ]
  ],
  "_get_python_type_of_node": [
    [
      "pylint/checkers/utils.py",
      [
        "_get_python_type_of_node"
      ]
    ]
  ],
  "safe_infer": [
    [
      "pylint/checkers/utils.py",
      [
        "safe_infer"
      ]
    ]
  ],
  "has_known_bases": [
    [
      "pylint/checkers/utils.py",
      [
        "has_known_bases"
      ]
    ]
  ],
  "is_none": [
    [
      "pylint/checkers/utils.py",
      [
        "is_none"
      ]
    ]
  ],
  "node_type": [
    [
      "pylint/checkers/utils.py",
      [
        "node_type"
      ]
    ]
  ],
  "is_registered_in_singledispatch_function": [
    [
      "pylint/checkers/utils.py",
      [
        "is_registered_in_singledispatch_function"
      ]
    ]
  ],
  "get_node_last_lineno": [
    [
      "pylint/checkers/utils.py",
      [
        "get_node_last_lineno"
      ]
    ]
  ],
  "is_postponed_evaluation_enabled": [
    [
      "pylint/checkers/utils.py",
      [
        "is_postponed_evaluation_enabled"
      ]
    ]
  ],
  "is_class_subscriptable_pep585_with_postponed_evaluation_enabled": [
    [
      "pylint/checkers/utils.py",
      [
        "is_class_subscriptable_pep585_with_postponed_evaluation_enabled"
      ]
    ]
  ],
  "is_node_in_type_annotation_context": [
    [
      "pylint/checkers/utils.py",
      [
        "is_node_in_type_annotation_context"
      ]
    ]
  ],
  "is_subclass_of": [
    [
      "pylint/checkers/utils.py",
      [
        "is_subclass_of"
      ]
    ]
  ],
  "is_overload_stub": [
    [
      "pylint/checkers/utils.py",
      [
        "is_overload_stub"
      ]
    ]
  ],
  "is_protocol_class": [
    [
      "pylint/checkers/utils.py",
      [
        "is_protocol_class"
      ]
    ]
  ],
  "is_call_of_name": [
    [
      "pylint/checkers/utils.py",
      [
        "is_call_of_name"
      ]
    ]
  ],
  "is_test_condition": [
    [
      "pylint/checkers/utils.py",
      [
        "is_test_condition"
      ]
    ]
  ],
  "is_classdef_type": [
    [
      "pylint/checkers/utils.py",
      [
        "is_classdef_type"
      ]
    ]
  ],
  "is_attribute_typed_annotation": [
    [
      "pylint/checkers/utils.py",
      [
        "is_attribute_typed_annotation"
      ]
    ]
  ],
  "is_assign_name_annotated_with": [
    [
      "pylint/checkers/utils.py",
      [
        "is_assign_name_annotated_with"
      ]
    ]
  ],
  "get_iterating_dictionary_name": [
    [
      "pylint/checkers/utils.py",
      [
        "get_iterating_dictionary_name"
      ]
    ]
  ],
  "get_subscript_const_value": [
    [
      "pylint/checkers/utils.py",
      [
        "get_subscript_const_value"
      ]
    ]
  ],
  "_is_from_future_import": [
    [
      "pylint/checkers/variables.py",
      [
        "_is_from_future_import"
      ]
    ]
  ],
  "in_for_else_branch": [
    [
      "pylint/checkers/variables.py",
      [
        "in_for_else_branch"
      ]
    ]
  ],
  "overridden_method": [
    [
      "pylint/checkers/variables.py",
      [
        "overridden_method"
      ]
    ]
  ],
  "_get_unpacking_extra_info": [
    [
      "pylint/checkers/variables.py",
      [
        "_get_unpacking_extra_info"
      ]
    ]
  ],
  "_detect_global_scope": [
    [
      "pylint/checkers/variables.py",
      [
        "_detect_global_scope"
      ]
    ]
  ],
  "_infer_name_module": [
    [
      "pylint/checkers/variables.py",
      [
        "_infer_name_module"
      ]
    ]
  ],
  "_fix_dot_imports": [
    [
      "pylint/checkers/variables.py",
      [
        "_fix_dot_imports"
      ]
    ]
  ],
  "_find_frame_imports": [
    [
      "pylint/checkers/variables.py",
      [
        "_find_frame_imports"
      ]
    ]
  ],
  "_import_name_is_global": [
    [
      "pylint/checkers/variables.py",
      [
        "_import_name_is_global"
      ]
    ]
  ],
  "_flattened_scope_names": [
    [
      "pylint/checkers/variables.py",
      [
        "_flattened_scope_names"
      ]
    ]
  ],
  "_assigned_locally": [
    [
      "pylint/checkers/variables.py",
      [
        "_assigned_locally"
      ]
    ]
  ],
  "_is_type_checking_import": [
    [
      "pylint/checkers/variables.py",
      [
        "_is_type_checking_import"
      ]
    ]
  ],
  "_has_locals_call_after_node": [
    [
      "pylint/checkers/variables.py",
      [
        "_has_locals_call_after_node"
      ]
    ]
  ],
  "__iter__": [
    [
      "pylint/checkers/variables.py",
      [
        "NamesConsumer",
        "__iter__"
      ]
    ],
    [
      "pylint/reporters/ureports/nodes.py",
      [
        "VNode",
        "__iter__"
      ]
    ],
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "Structure",
        "__iter__"
      ]
    ],
    [
      "tests/functional/a/abstract/abstract_method_py3.py",
      [
        "Structure",
        "__iter__"
      ]
    ],
    [
      "tests/functional/c/consider/consider_using_enumerate.py",
      [
        "Bad",
        "__iter__"
      ]
    ],
    [
      "tests/functional/c/consider/consider_using_enumerate.py",
      [
        "Good",
        "__iter__"
      ]
    ],
    [
      "tests/functional/i/iterable_context.py",
      [
        "B",
        "__iter__"
      ]
    ],
    [
      "tests/functional/i/iterable_context_py3.py",
      [
        "Meta",
        "__iter__"
      ]
    ],
    [
      "tests/functional/m/member/membership_protocol.py",
      [
        "CustomIterable",
        "__iter__"
      ]
    ],
    [
      "tests/functional/m/member/membership_protocol_py3.py",
      [
        "MetaIterable",
        "__iter__"
      ]
    ],
    [
      "tests/functional/n/non/non_iterator_returned.py",
      [
        "FirstGoodIterator",
        "__iter__"
      ]
    ],
    [
      "tests/functional/n/non/non_iterator_returned.py",
      [
        "SecondGoodIterator",
        "__iter__"
      ]
    ],
    [
      "tests/functional/n/non/non_iterator_returned.py",
      [
        "ThirdGoodIterator",
        "__iter__"
      ]
    ],
    [
      "tests/functional/n/non/non_iterator_returned.py",
      [
        "FourthGoodIterator",
        "__iter__"
      ]
    ],
    [
      "tests/functional/n/non/non_iterator_returned.py",
      [
        "FifthGoodIterator",
        "__iter__"
      ]
    ],
    [
      "tests/functional/n/non/non_iterator_returned.py",
      [
        "FileBasedIterator",
        "__iter__"
      ]
    ],
    [
      "tests/functional/n/non/non_iterator_returned.py",
      [
        "FirstBadIterator",
        "__iter__"
      ]
    ],
    [
      "tests/functional/n/non/non_iterator_returned.py",
      [
        "SecondBadIterator",
        "__iter__"
      ]
    ],
    [
      "tests/functional/n/non/non_iterator_returned.py",
      [
        "ThirdBadIterator",
        "__iter__"
      ]
    ],
    [
      "tests/functional/n/non/non_iterator_returned.py",
      [
        "FourthBadIterator",
        "__iter__"
      ]
    ],
    [
      "tests/functional/s/slots_checks.py",
      [
        "Metaclass",
        "__iter__"
      ]
    ],
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "Invalid",
        "__iter__"
      ]
    ],
    [
      "tests/functional/u/unpacking_non_sequence.py",
      [
        "Iter",
        "__iter__"
      ]
    ],
    [
      "tests/functional/u/unpacking_non_sequence.py",
      [
        "MetaIter",
        "__iter__"
      ]
    ]
  ],
  "to_consume": [
    [
      "pylint/checkers/variables.py",
      [
        "NamesConsumer",
        "to_consume"
      ]
    ]
  ],
  "consumed": [
    [
      "pylint/checkers/variables.py",
      [
        "NamesConsumer",
        "consumed"
      ]
    ]
  ],
  "scope_type": [
    [
      "pylint/checkers/variables.py",
      [
        "NamesConsumer",
        "scope_type"
      ]
    ]
  ],
  "mark_as_consumed": [
    [
      "pylint/checkers/variables.py",
      [
        "NamesConsumer",
        "mark_as_consumed"
      ]
    ]
  ],
  "get_next_to_consume": [
    [
      "pylint/checkers/variables.py",
      [
        "NamesConsumer",
        "get_next_to_consume"
      ]
    ]
  ],
  "leave_for": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "leave_for"
      ]
    ]
  ],
  "leave_lambda": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "leave_lambda"
      ]
    ]
  ],
  "leave_generatorexp": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "leave_generatorexp"
      ]
    ]
  ],
  "leave_dictcomp": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "leave_dictcomp"
      ]
    ]
  ],
  "leave_setcomp": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "leave_setcomp"
      ]
    ]
  ],
  "visit_delname": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "visit_delname"
      ]
    ]
  ],
  "leave_listcomp": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "leave_listcomp"
      ]
    ]
  ],
  "leave_assign": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "leave_assign"
      ]
    ]
  ],
  "leave_with": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "leave_with"
      ]
    ]
  ],
  "_analyse_fallback_blocks": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "_analyse_fallback_blocks"
      ]
    ]
  ],
  "_ignored_modules": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "_ignored_modules"
      ]
    ]
  ],
  "_allow_global_unused_variables": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "_allow_global_unused_variables"
      ]
    ]
  ],
  "_defined_in_function_definition": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "_defined_in_function_definition"
      ]
    ]
  ],
  "_in_lambda_or_comprehension_body": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "_in_lambda_or_comprehension_body"
      ]
    ]
  ],
  "_is_variable_violation": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "_is_variable_violation"
      ]
    ]
  ],
  "_ignore_class_scope": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "_ignore_class_scope"
      ]
    ]
  ],
  "_loopvar_name": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "_loopvar_name"
      ]
    ]
  ],
  "_check_is_unused": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "_check_is_unused"
      ]
    ]
  ],
  "_is_name_ignored": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "_is_name_ignored"
      ]
    ]
  ],
  "_check_unused_arguments": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "_check_unused_arguments"
      ]
    ]
  ],
  "_is_direct_lambda_call": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "_check_late_binding_closure",
        "_is_direct_lambda_call"
      ]
    ]
  ],
  "_check_late_binding_closure": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "_check_late_binding_closure"
      ]
    ]
  ],
  "_should_ignore_redefined_builtin": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "_should_ignore_redefined_builtin"
      ]
    ]
  ],
  "_allowed_redefined_builtin": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "_allowed_redefined_builtin"
      ]
    ]
  ],
  "_has_homonym_in_upper_function_scope": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "_has_homonym_in_upper_function_scope"
      ]
    ]
  ],
  "_store_type_annotation_node": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "_store_type_annotation_node"
      ]
    ]
  ],
  "_store_type_annotation_names": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "_store_type_annotation_names"
      ]
    ]
  ],
  "_check_self_cls_assign": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "_check_self_cls_assign"
      ]
    ]
  ],
  "_check_unpacking": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "_check_unpacking"
      ]
    ]
  ],
  "_check_module_attrs": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "_check_module_attrs"
      ]
    ]
  ],
  "_check_all": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "_check_all"
      ]
    ]
  ],
  "_check_globals": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "_check_globals"
      ]
    ]
  ],
  "_check_imports": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "_check_imports"
      ]
    ]
  ],
  "_check_metaclasses": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "_check_metaclasses"
      ]
    ]
  ],
  "_check_classdef_metaclasses": [
    [
      "pylint/checkers/variables.py",
      [
        "VariablesChecker",
        "_check_classdef_metaclasses"
      ]
    ]
  ],
  "_get_pdata_path": [
    [
      "pylint/config/__init__.py",
      [
        "_get_pdata_path"
      ]
    ]
  ],
  "load_results": [
    [
      "pylint/config/__init__.py",
      [
        "load_results"
      ]
    ]
  ],
  "save_results": [
    [
      "pylint/config/__init__.py",
      [
        "save_results"
      ]
    ]
  ],
  "find_pylintrc": [
    [
      "pylint/config/__init__.py",
      [
        "find_pylintrc"
      ]
    ]
  ],
  "_toml_has_config": [
    [
      "pylint/config/find_default_config_files.py",
      [
        "_toml_has_config"
      ]
    ]
  ],
  "_cfg_has_config": [
    [
      "pylint/config/find_default_config_files.py",
      [
        "_cfg_has_config"
      ]
    ]
  ],
  "find_default_config_files": [
    [
      "pylint/config/find_default_config_files.py",
      [
        "find_default_config_files"
      ]
    ]
  ],
  "format_heading": [
    [
      "pylint/config/man_help_formatter.py",
      [
        "_ManHelpFormatter",
        "format_heading"
      ]
    ]
  ],
  "format_description": [
    [
      "pylint/config/man_help_formatter.py",
      [
        "_ManHelpFormatter",
        "format_description"
      ]
    ]
  ],
  "format_option": [
    [
      "pylint/config/man_help_formatter.py",
      [
        "_ManHelpFormatter",
        "format_option"
      ]
    ]
  ],
  "format_head": [
    [
      "pylint/config/man_help_formatter.py",
      [
        "_ManHelpFormatter",
        "format_head"
      ]
    ]
  ],
  "format_title": [
    [
      "pylint/config/man_help_formatter.py",
      [
        "_ManHelpFormatter",
        "format_title"
      ]
    ]
  ],
  "format_short_description": [
    [
      "pylint/config/man_help_formatter.py",
      [
        "_ManHelpFormatter",
        "format_short_description"
      ]
    ]
  ],
  "format_synopsis": [
    [
      "pylint/config/man_help_formatter.py",
      [
        "_ManHelpFormatter",
        "format_synopsis"
      ]
    ]
  ],
  "format_long_description": [
    [
      "pylint/config/man_help_formatter.py",
      [
        "_ManHelpFormatter",
        "format_long_description"
      ]
    ]
  ],
  "format_tail": [
    [
      "pylint/config/man_help_formatter.py",
      [
        "_ManHelpFormatter",
        "format_tail"
      ]
    ]
  ],
  "_generate_manpage": [
    [
      "pylint/config/man_help_formatter.py",
      [
        "_generate_manpage"
      ]
    ]
  ],
  "_csv_validator": [
    [
      "pylint/config/option.py",
      [
        "_csv_validator"
      ]
    ]
  ],
  "_regexp_validator": [
    [
      "pylint/config/option.py",
      [
        "_regexp_validator"
      ]
    ]
  ],
  "_regexp_csv_validator": [
    [
      "pylint/config/option.py",
      [
        "_regexp_csv_validator"
      ]
    ]
  ],
  "_choice_validator": [
    [
      "pylint/config/option.py",
      [
        "_choice_validator"
      ]
    ]
  ],
  "_yn_validator": [
    [
      "pylint/config/option.py",
      [
        "_yn_validator"
      ]
    ]
  ],
  "_multiple_choice_validator": [
    [
      "pylint/config/option.py",
      [
        "_multiple_choice_validator"
      ]
    ]
  ],
  "_non_empty_string_validator": [
    [
      "pylint/config/option.py",
      [
        "_non_empty_string_validator"
      ]
    ]
  ],
  "_multiple_choices_validating_option": [
    [
      "pylint/config/option.py",
      [
        "_multiple_choices_validating_option"
      ]
    ]
  ],
  "_py_version_validator": [
    [
      "pylint/config/option.py",
      [
        "_py_version_validator"
      ]
    ]
  ],
  "_call_validator": [
    [
      "pylint/config/option.py",
      [
        "_call_validator"
      ]
    ]
  ],
  "_validate": [
    [
      "pylint/config/option.py",
      [
        "_validate"
      ]
    ]
  ],
  "_check_choice": [
    [
      "pylint/config/option.py",
      [
        "Option",
        "_check_choice"
      ]
    ]
  ],
  "process": [
    [
      "pylint/config/option.py",
      [
        "Option",
        "process"
      ]
    ]
  ],
  "_expand_default": [
    [
      "pylint/config/option_manager_mixin.py",
      [
        "_expand_default"
      ]
    ]
  ],
  "_patch_optparse": [
    [
      "pylint/config/option_manager_mixin.py",
      [
        "_patch_optparse"
      ]
    ]
  ],
  "reset_parsers": [
    [
      "pylint/config/option_manager_mixin.py",
      [
        "OptionsManagerMixIn",
        "reset_parsers"
      ]
    ]
  ],
  "register_options_provider": [
    [
      "pylint/config/option_manager_mixin.py",
      [
        "OptionsManagerMixIn",
        "register_options_provider"
      ]
    ]
  ],
  "add_option_group": [
    [
      "pylint/config/option_manager_mixin.py",
      [
        "OptionsManagerMixIn",
        "add_option_group"
      ]
    ]
  ],
  "add_optik_option": [
    [
      "pylint/config/option_manager_mixin.py",
      [
        "OptionsManagerMixIn",
        "add_optik_option"
      ]
    ]
  ],
  "optik_option": [
    [
      "pylint/config/option_manager_mixin.py",
      [
        "OptionsManagerMixIn",
        "optik_option"
      ]
    ]
  ],
  "cb_set_provider_option": [
    [
      "pylint/config/option_manager_mixin.py",
      [
        "OptionsManagerMixIn",
        "cb_set_provider_option"
      ]
    ]
  ],
  "global_set_option": [
    [
      "pylint/config/option_manager_mixin.py",
      [
        "OptionsManagerMixIn",
        "global_set_option"
      ]
    ]
  ],
  "generate_config": [
    [
      "pylint/config/option_manager_mixin.py",
      [
        "OptionsManagerMixIn",
        "generate_config"
      ]
    ]
  ],
  "generate_manpage": [
    [
      "pylint/config/option_manager_mixin.py",
      [
        "OptionsManagerMixIn",
        "generate_manpage"
      ]
    ]
  ],
  "load_provider_defaults": [
    [
      "pylint/config/option_manager_mixin.py",
      [
        "OptionsManagerMixIn",
        "load_provider_defaults"
      ]
    ]
  ],
  "read_config_file": [
    [
      "pylint/config/option_manager_mixin.py",
      [
        "OptionsManagerMixIn",
        "read_config_file"
      ]
    ]
  ],
  "load_config_file": [
    [
      "pylint/config/option_manager_mixin.py",
      [
        "OptionsManagerMixIn",
        "load_config_file"
      ]
    ]
  ],
  "load_configuration": [
    [
      "pylint/config/option_manager_mixin.py",
      [
        "OptionsManagerMixIn",
        "load_configuration"
      ]
    ],
    [
      "tests/regrtest_data/dummy_plugin/dummy_conf_plugin.py",
      [
        "load_configuration"
      ]
    ]
  ],
  "load_configuration_from_config": [
    [
      "pylint/config/option_manager_mixin.py",
      [
        "OptionsManagerMixIn",
        "load_configuration_from_config"
      ]
    ]
  ],
  "load_command_line_configuration": [
    [
      "pylint/config/option_manager_mixin.py",
      [
        "OptionsManagerMixIn",
        "load_command_line_configuration"
      ]
    ]
  ],
  "add_help_section": [
    [
      "pylint/config/option_manager_mixin.py",
      [
        "OptionsManagerMixIn",
        "add_help_section"
      ]
    ]
  ],
  "help": [
    [
      "pylint/config/option_manager_mixin.py",
      [
        "OptionsManagerMixIn",
        "help"
      ]
    ]
  ],
  "helpfunc": [
    [
      "pylint/config/option_manager_mixin.py",
      [
        "OptionsManagerMixIn",
        "helpfunc"
      ]
    ]
  ],
  "_level_options": [
    [
      "pylint/config/option_parser.py",
      [
        "_level_options"
      ]
    ]
  ],
  "format_option_help": [
    [
      "pylint/config/option_parser.py",
      [
        "OptionParser",
        "format_option_help"
      ]
    ]
  ],
  "_match_long_opt": [
    [
      "pylint/config/option_parser.py",
      [
        "OptionParser",
        "_match_long_opt"
      ]
    ]
  ],
  "load_defaults": [
    [
      "pylint/config/options_provider_mixin.py",
      [
        "OptionsProviderMixIn",
        "load_defaults"
      ]
    ]
  ],
  "option_attrname": [
    [
      "pylint/config/options_provider_mixin.py",
      [
        "OptionsProviderMixIn",
        "option_attrname"
      ]
    ]
  ],
  "option_value": [
    [
      "pylint/config/options_provider_mixin.py",
      [
        "OptionsProviderMixIn",
        "option_value"
      ]
    ]
  ],
  "get_option_def": [
    [
      "pylint/config/options_provider_mixin.py",
      [
        "OptionsProviderMixIn",
        "get_option_def"
      ]
    ]
  ],
  "options_by_section": [
    [
      "pylint/config/options_provider_mixin.py",
      [
        "OptionsProviderMixIn",
        "options_by_section"
      ]
    ]
  ],
  "options_and_values": [
    [
      "pylint/config/options_provider_mixin.py",
      [
        "OptionsProviderMixIn",
        "options_and_values"
      ]
    ]
  ],
  "_get_env": [
    [
      "pylint/epylint.py",
      [
        "_get_env"
      ]
    ]
  ],
  "lint": [
    [
      "pylint/epylint.py",
      [
        "lint"
      ]
    ]
  ],
  "py_run": [
    [
      "pylint/epylint.py",
      [
        "py_run"
      ]
    ]
  ],
  "space_indentation": [
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "space_indentation"
      ]
    ]
  ],
  "get_setters_property_name": [
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "get_setters_property_name"
      ]
    ]
  ],
  "get_setters_property": [
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "get_setters_property"
      ]
    ]
  ],
  "returns_something": [
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "returns_something"
      ]
    ]
  ],
  "_get_raise_target": [
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "_get_raise_target"
      ]
    ]
  ],
  "_split_multiple_exc_types": [
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "_split_multiple_exc_types"
      ]
    ]
  ],
  "possible_exc_types": [
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "possible_exc_types"
      ]
    ]
  ],
  "docstringify": [
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "docstringify"
      ]
    ]
  ],
  "is_valid": [
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "Docstring",
        "is_valid"
      ]
    ],
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "SphinxDocstring",
        "is_valid"
      ]
    ],
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "GoogleDocstring",
        "is_valid"
      ]
    ]
  ],
  "exceptions": [
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "Docstring",
        "exceptions"
      ]
    ],
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "SphinxDocstring",
        "exceptions"
      ]
    ],
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "GoogleDocstring",
        "exceptions"
      ]
    ]
  ],
  "has_params": [
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "Docstring",
        "has_params"
      ]
    ],
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "SphinxDocstring",
        "has_params"
      ]
    ],
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "GoogleDocstring",
        "has_params"
      ]
    ]
  ],
  "has_returns": [
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "Docstring",
        "has_returns"
      ]
    ],
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "SphinxDocstring",
        "has_returns"
      ]
    ],
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "GoogleDocstring",
        "has_returns"
      ]
    ]
  ],
  "has_rtype": [
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "Docstring",
        "has_rtype"
      ]
    ],
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "SphinxDocstring",
        "has_rtype"
      ]
    ],
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "GoogleDocstring",
        "has_rtype"
      ]
    ]
  ],
  "has_property_returns": [
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "Docstring",
        "has_property_returns"
      ]
    ],
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "SphinxDocstring",
        "has_property_returns"
      ]
    ],
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "EpytextDocstring",
        "has_property_returns"
      ]
    ],
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "GoogleDocstring",
        "has_property_returns"
      ]
    ]
  ],
  "has_property_type": [
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "Docstring",
        "has_property_type"
      ]
    ],
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "SphinxDocstring",
        "has_property_type"
      ]
    ],
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "GoogleDocstring",
        "has_property_type"
      ]
    ]
  ],
  "has_yields": [
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "Docstring",
        "has_yields"
      ]
    ],
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "GoogleDocstring",
        "has_yields"
      ]
    ]
  ],
  "has_yields_type": [
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "Docstring",
        "has_yields_type"
      ]
    ],
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "GoogleDocstring",
        "has_yields_type"
      ]
    ]
  ],
  "match_param_docs": [
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "Docstring",
        "match_param_docs"
      ]
    ],
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "SphinxDocstring",
        "match_param_docs"
      ]
    ],
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "GoogleDocstring",
        "match_param_docs"
      ]
    ]
  ],
  "params_documented_elsewhere": [
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "Docstring",
        "params_documented_elsewhere"
      ]
    ]
  ],
  "_first_line": [
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "GoogleDocstring",
        "_first_line"
      ]
    ]
  ],
  "min_section_indent": [
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "GoogleDocstring",
        "min_section_indent"
      ]
    ],
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "NumpyDocstring",
        "min_section_indent"
      ]
    ]
  ],
  "_is_section_header": [
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "GoogleDocstring",
        "_is_section_header"
      ]
    ],
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "NumpyDocstring",
        "_is_section_header"
      ]
    ]
  ],
  "_parse_section": [
    [
      "pylint/extensions/_check_docs_utils.py",
      [
        "GoogleDocstring",
        "_parse_section"
      ]
    ]
  ],
  "_count_statements": [
    [
      "pylint/extensions/broad_try_clause.py",
      [
        "BroadTryClauseChecker",
        "_count_statements"
      ]
    ]
  ],
  "_check_dict_consider_namedtuple_dataclass": [
    [
      "pylint/extensions/code_style.py",
      [
        "CodeStyleChecker",
        "_check_dict_consider_namedtuple_dataclass"
      ]
    ]
  ],
  "_check_inplace_defined_list_set": [
    [
      "pylint/extensions/code_style.py",
      [
        "CodeStyleChecker",
        "_check_inplace_defined_list_set"
      ]
    ]
  ],
  "_is_constant_zero": [
    [
      "pylint/extensions/comparetozero.py",
      [
        "_is_constant_zero"
      ]
    ]
  ],
  "_has_no_else_clause": [
    [
      "pylint/extensions/confusing_elif.py",
      [
        "ConfusingConsecutiveElifChecker",
        "_has_no_else_clause"
      ]
    ]
  ],
  "check_functiondef_params": [
    [
      "pylint/extensions/docparams.py",
      [
        "DocstringParameterChecker",
        "check_functiondef_params"
      ]
    ]
  ],
  "check_functiondef_returns": [
    [
      "pylint/extensions/docparams.py",
      [
        "DocstringParameterChecker",
        "check_functiondef_returns"
      ]
    ]
  ],
  "check_functiondef_yields": [
    [
      "pylint/extensions/docparams.py",
      [
        "DocstringParameterChecker",
        "check_functiondef_yields"
      ]
    ]
  ],
  "_compare_missing_args": [
    [
      "pylint/extensions/docparams.py",
      [
        "DocstringParameterChecker",
        "_compare_missing_args"
      ]
    ]
  ],
  "_compare_different_args": [
    [
      "pylint/extensions/docparams.py",
      [
        "DocstringParameterChecker",
        "_compare_different_args"
      ]
    ]
  ],
  "_compare_ignored_args": [
    [
      "pylint/extensions/docparams.py",
      [
        "DocstringParameterChecker",
        "_compare_ignored_args"
      ]
    ]
  ],
  "check_arguments_in_docstring": [
    [
      "pylint/extensions/docparams.py",
      [
        "DocstringParameterChecker",
        "check_arguments_in_docstring"
      ]
    ]
  ],
  "check_single_constructor_params": [
    [
      "pylint/extensions/docparams.py",
      [
        "DocstringParameterChecker",
        "check_single_constructor_params"
      ]
    ]
  ],
  "_handle_no_raise_doc": [
    [
      "pylint/extensions/docparams.py",
      [
        "DocstringParameterChecker",
        "_handle_no_raise_doc"
      ]
    ]
  ],
  "_add_raise_message": [
    [
      "pylint/extensions/docparams.py",
      [
        "DocstringParameterChecker",
        "_add_raise_message"
      ]
    ]
  ],
  "is_line_commented": [
    [
      "pylint/extensions/empty_comment.py",
      [
        "is_line_commented"
      ]
    ]
  ],
  "comment_part_of_string": [
    [
      "pylint/extensions/empty_comment.py",
      [
        "comment_part_of_string"
      ]
    ]
  ],
  "_is_constant_empty_str": [
    [
      "pylint/extensions/emptystring.py",
      [
        "_is_constant_empty_str"
      ]
    ]
  ],
  "default": [
    [
      "pylint/extensions/mccabe.py",
      [
        "PathGraphingAstVisitor",
        "default"
      ]
    ],
    [
      "tests/functional/m/method_hidden.py",
      [
        "JsonEncoder",
        "default"
      ]
    ]
  ],
  "dispatch": [
    [
      "pylint/extensions/mccabe.py",
      [
        "PathGraphingAstVisitor",
        "dispatch"
      ]
    ],
    [
      "tests/functional/i/iterable_context.py",
      [
        "ManagedAccessViewMixin",
        "dispatch"
      ]
    ],
    [
      "tests/functional/m/mapping_context.py",
      [
        "SomeMixin",
        "dispatch"
      ]
    ],
    [
      "tests/functional/m/mapping_context.py",
      [
        "AbstractThing",
        "dispatch"
      ]
    ],
    [
      "tests/functional/m/mapping_context.py",
      [
        "BaseThing",
        "dispatch"
      ]
    ],
    [
      "tests/functional/m/mapping_context.py",
      [
        "Thing",
        "dispatch"
      ]
    ]
  ],
  "visitFunctionDef": [
    [
      "pylint/extensions/mccabe.py",
      [
        "PathGraphingAstVisitor",
        "visitFunctionDef"
      ]
    ]
  ],
  "visitSimpleStatement": [
    [
      "pylint/extensions/mccabe.py",
      [
        "PathGraphingAstVisitor",
        "visitSimpleStatement"
      ]
    ]
  ],
  "visitWith": [
    [
      "pylint/extensions/mccabe.py",
      [
        "PathGraphingAstVisitor",
        "visitWith"
      ]
    ]
  ],
  "_append_node": [
    [
      "pylint/extensions/mccabe.py",
      [
        "PathGraphingAstVisitor",
        "_append_node"
      ]
    ]
  ],
  "_subgraph": [
    [
      "pylint/extensions/mccabe.py",
      [
        "PathGraphingAstVisitor",
        "_subgraph"
      ]
    ]
  ],
  "_subgraph_parse": [
    [
      "pylint/extensions/mccabe.py",
      [
        "PathGraphingAstVisitor",
        "_subgraph_parse"
      ]
    ]
  ],
  "_check_and_add_messages": [
    [
      "pylint/extensions/redefined_variable_type.py",
      [
        "MultipleTypesChecker",
        "_check_and_add_messages"
      ]
    ]
  ],
  "_py37_plus": [
    [
      "pylint/extensions/typing.py",
      [
        "TypingChecker",
        "_py37_plus"
      ]
    ]
  ],
  "_py39_plus": [
    [
      "pylint/extensions/typing.py",
      [
        "TypingChecker",
        "_py39_plus"
      ]
    ]
  ],
  "_py310_plus": [
    [
      "pylint/extensions/typing.py",
      [
        "TypingChecker",
        "_py310_plus"
      ]
    ]
  ],
  "_should_check_typing_alias": [
    [
      "pylint/extensions/typing.py",
      [
        "TypingChecker",
        "_should_check_typing_alias"
      ]
    ]
  ],
  "_should_check_alternative_union_syntax": [
    [
      "pylint/extensions/typing.py",
      [
        "TypingChecker",
        "_should_check_alternative_union_syntax"
      ]
    ]
  ],
  "_msg_postponed_eval_hint": [
    [
      "pylint/extensions/typing.py",
      [
        "TypingChecker",
        "_msg_postponed_eval_hint"
      ]
    ]
  ],
  "_check_for_alternative_union_syntax": [
    [
      "pylint/extensions/typing.py",
      [
        "TypingChecker",
        "_check_for_alternative_union_syntax"
      ]
    ]
  ],
  "_check_for_typing_alias": [
    [
      "pylint/extensions/typing.py",
      [
        "TypingChecker",
        "_check_for_typing_alias"
      ]
    ]
  ],
  "target_info_from_filename": [
    [
      "pylint/graph.py",
      [
        "target_info_from_filename"
      ]
    ]
  ],
  "get_source": [
    [
      "pylint/graph.py",
      [
        "DotBackend",
        "get_source"
      ]
    ]
  ],
  "generate": [
    [
      "pylint/graph.py",
      [
        "DotBackend",
        "generate"
      ]
    ]
  ],
  "emit": [
    [
      "pylint/graph.py",
      [
        "DotBackend",
        "emit"
      ]
    ]
  ],
  "emit_edge": [
    [
      "pylint/graph.py",
      [
        "DotBackend",
        "emit_edge"
      ]
    ]
  ],
  "emit_node": [
    [
      "pylint/graph.py",
      [
        "DotBackend",
        "emit_node"
      ]
    ]
  ],
  "normalize_node_id": [
    [
      "pylint/graph.py",
      [
        "normalize_node_id"
      ]
    ]
  ],
  "get_cycles": [
    [
      "pylint/graph.py",
      [
        "get_cycles"
      ]
    ]
  ],
  "_get_cycles": [
    [
      "pylint/graph.py",
      [
        "_get_cycles"
      ]
    ]
  ],
  "is_implemented_by": [
    [
      "pylint/interfaces.py",
      [
        "Interface",
        "is_implemented_by"
      ]
    ]
  ],
  "implements": [
    [
      "pylint/interfaces.py",
      [
        "implements"
      ]
    ]
  ],
  "handle_message": [
    [
      "pylint/interfaces.py",
      [
        "IReporter",
        "handle_message"
      ]
    ],
    [
      "pylint/reporters/base_reporter.py",
      [
        "BaseReporter",
        "handle_message"
      ]
    ],
    [
      "pylint/reporters/multi_reporter.py",
      [
        "MultiReporter",
        "handle_message"
      ]
    ],
    [
      "pylint/reporters/text.py",
      [
        "TextReporter",
        "handle_message"
      ]
    ],
    [
      "pylint/reporters/text.py",
      [
        "ColorizedTextReporter",
        "handle_message"
      ]
    ],
    [
      "pylint/testutils/reporter_for_tests.py",
      [
        "GenericTestReporter",
        "handle_message"
      ]
    ],
    [
      "tests/test_self.py",
      [
        "MultiReporter",
        "handle_message"
      ]
    ]
  ],
  "display_reports": [
    [
      "pylint/interfaces.py",
      [
        "IReporter",
        "display_reports"
      ]
    ],
    [
      "pylint/reporters/base_reporter.py",
      [
        "BaseReporter",
        "display_reports"
      ]
    ],
    [
      "pylint/reporters/json_reporter.py",
      [
        "JSONReporter",
        "display_reports"
      ]
    ],
    [
      "pylint/reporters/multi_reporter.py",
      [
        "MultiReporter",
        "display_reports"
      ]
    ],
    [
      "pylint/testutils/reporter_for_tests.py",
      [
        "GenericTestReporter",
        "display_reports"
      ]
    ],
    [
      "pylint/testutils/reporter_for_tests.py",
      [
        "FunctionalTestReporter",
        "display_reports"
      ]
    ]
  ],
  "_modpath_from_file": [
    [
      "pylint/lint/expand_modules.py",
      [
        "_modpath_from_file"
      ]
    ]
  ],
  "get_python_path": [
    [
      "pylint/lint/expand_modules.py",
      [
        "get_python_path"
      ]
    ]
  ],
  "_is_in_ignore_list_re": [
    [
      "pylint/lint/expand_modules.py",
      [
        "_is_in_ignore_list_re"
      ]
    ]
  ],
  "expand_modules": [
    [
      "pylint/lint/expand_modules.py",
      [
        "expand_modules"
      ]
    ]
  ],
  "_get_new_args": [
    [
      "pylint/lint/parallel.py",
      [
        "_get_new_args"
      ]
    ]
  ],
  "_merge_stats": [
    [
      "pylint/lint/parallel.py",
      [
        "_merge_stats"
      ]
    ]
  ],
  "_worker_initialize": [
    [
      "pylint/lint/parallel.py",
      [
        "_worker_initialize"
      ]
    ]
  ],
  "_worker_check_single_file": [
    [
      "pylint/lint/parallel.py",
      [
        "_worker_check_single_file"
      ]
    ]
  ],
  "_merge_mapreduce_data": [
    [
      "pylint/lint/parallel.py",
      [
        "_merge_mapreduce_data"
      ]
    ]
  ],
  "check_parallel": [
    [
      "pylint/lint/parallel.py",
      [
        "check_parallel"
      ]
    ]
  ],
  "_read_stdin": [
    [
      "pylint/lint/pylinter.py",
      [
        "_read_stdin"
      ]
    ]
  ],
  "_load_reporter_by_class": [
    [
      "pylint/lint/pylinter.py",
      [
        "_load_reporter_by_class"
      ]
    ]
  ],
  "make_options": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "make_options"
      ]
    ]
  ],
  "load_default_plugins": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "load_default_plugins"
      ]
    ]
  ],
  "load_plugin_modules": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "load_plugin_modules"
      ]
    ]
  ],
  "load_plugin_configuration": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "load_plugin_configuration"
      ]
    ]
  ],
  "_load_reporters": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "_load_reporters"
      ]
    ]
  ],
  "_load_reporter_by_name": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "_load_reporter_by_name"
      ]
    ]
  ],
  "set_reporter": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "set_reporter"
      ]
    ]
  ],
  "register_reporter": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "register_reporter"
      ]
    ]
  ],
  "report_order": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "report_order"
      ]
    ],
    [
      "pylint/reporters/reports_handler_mix_in.py",
      [
        "ReportsHandlerMixIn",
        "report_order"
      ]
    ]
  ],
  "register_checker": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "register_checker"
      ]
    ]
  ],
  "enable_fail_on_messages": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "enable_fail_on_messages"
      ]
    ]
  ],
  "any_fail_on_issues": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "any_fail_on_issues"
      ]
    ]
  ],
  "disable_noerror_messages": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "disable_noerror_messages"
      ]
    ]
  ],
  "disable_reporters": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "disable_reporters"
      ]
    ]
  ],
  "error_mode": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "error_mode"
      ]
    ]
  ],
  "python3_porting_mode": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "python3_porting_mode"
      ]
    ]
  ],
  "list_messages_enabled": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "list_messages_enabled"
      ]
    ]
  ],
  "get_checkers": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "get_checkers"
      ]
    ]
  ],
  "get_checker_names": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "get_checker_names"
      ]
    ]
  ],
  "prepare_checkers": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "prepare_checkers"
      ]
    ]
  ],
  "should_analyze_file": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "should_analyze_file"
      ]
    ],
    [
      "tests/lint/unittest_lint.py",
      [
        "_CustomPyLinter",
        "should_analyze_file"
      ]
    ]
  ],
  "check": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "check"
      ]
    ],
    [
      "tests/functional/n/no/no_self_use.py",
      [
        "Base",
        "check"
      ]
    ],
    [
      "tests/functional/n/no/no_self_use.py",
      [
        "Sub",
        "check"
      ]
    ]
  ],
  "check_single_file": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "check_single_file"
      ]
    ]
  ],
  "_check_files": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "_check_files"
      ]
    ]
  ],
  "_check_file": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "_check_file"
      ]
    ]
  ],
  "_get_file_descr_from_stdin": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "_get_file_descr_from_stdin"
      ]
    ]
  ],
  "_iterate_file_descrs": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "_iterate_file_descrs"
      ]
    ]
  ],
  "_expand_files": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "_expand_files"
      ]
    ]
  ],
  "set_current_module": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "set_current_module"
      ]
    ]
  ],
  "_astroid_module_checker": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "_astroid_module_checker"
      ]
    ]
  ],
  "get_ast": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "get_ast"
      ]
    ]
  ],
  "check_astroid_module": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "check_astroid_module"
      ]
    ]
  ],
  "_check_astroid_module": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "_check_astroid_module"
      ]
    ]
  ],
  "generate_reports": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "generate_reports"
      ]
    ]
  ],
  "_report_evaluation": [
    [
      "pylint/lint/pylinter.py",
      [
        "PyLinter",
        "_report_evaluation"
      ]
    ]
  ],
  "report_total_messages_stats": [
    [
      "pylint/lint/report_functions.py",
      [
        "report_total_messages_stats"
      ]
    ]
  ],
  "report_messages_stats": [
    [
      "pylint/lint/report_functions.py",
      [
        "report_messages_stats"
      ]
    ]
  ],
  "report_messages_by_module_stats": [
    [
      "pylint/lint/report_functions.py",
      [
        "report_messages_by_module_stats"
      ]
    ]
  ],
  "_cpu_count": [
    [
      "pylint/lint/run.py",
      [
        "_cpu_count"
      ]
    ]
  ],
  "cb_list_extensions": [
    [
      "pylint/lint/run.py",
      [
        "cb_list_extensions"
      ]
    ]
  ],
  "cb_list_confidence_levels": [
    [
      "pylint/lint/run.py",
      [
        "cb_list_confidence_levels"
      ]
    ]
  ],
  "cb_init_hook": [
    [
      "pylint/lint/run.py",
      [
        "cb_init_hook"
      ]
    ]
  ],
  "_return_one": [
    [
      "pylint/lint/run.py",
      [
        "Run",
        "_return_one"
      ]
    ]
  ],
  "version_asked": [
    [
      "pylint/lint/run.py",
      [
        "Run",
        "version_asked"
      ]
    ]
  ],
  "cb_set_rcfile": [
    [
      "pylint/lint/run.py",
      [
        "Run",
        "cb_set_rcfile"
      ]
    ]
  ],
  "cb_set_output": [
    [
      "pylint/lint/run.py",
      [
        "Run",
        "cb_set_output"
      ]
    ]
  ],
  "cb_add_plugins": [
    [
      "pylint/lint/run.py",
      [
        "Run",
        "cb_add_plugins"
      ]
    ]
  ],
  "cb_error_mode": [
    [
      "pylint/lint/run.py",
      [
        "Run",
        "cb_error_mode"
      ]
    ]
  ],
  "cb_generate_config": [
    [
      "pylint/lint/run.py",
      [
        "Run",
        "cb_generate_config"
      ]
    ]
  ],
  "cb_generate_manpage": [
    [
      "pylint/lint/run.py",
      [
        "Run",
        "cb_generate_manpage"
      ]
    ]
  ],
  "cb_help_message": [
    [
      "pylint/lint/run.py",
      [
        "Run",
        "cb_help_message"
      ]
    ]
  ],
  "cb_full_documentation": [
    [
      "pylint/lint/run.py",
      [
        "Run",
        "cb_full_documentation"
      ]
    ]
  ],
  "cb_list_messages": [
    [
      "pylint/lint/run.py",
      [
        "Run",
        "cb_list_messages"
      ]
    ]
  ],
  "cb_list_messages_enabled": [
    [
      "pylint/lint/run.py",
      [
        "Run",
        "cb_list_messages_enabled"
      ]
    ]
  ],
  "cb_list_groups": [
    [
      "pylint/lint/run.py",
      [
        "Run",
        "cb_list_groups"
      ]
    ]
  ],
  "cb_python3_porting_mode": [
    [
      "pylint/lint/run.py",
      [
        "Run",
        "cb_python3_porting_mode"
      ]
    ]
  ],
  "cb_verbose_mode": [
    [
      "pylint/lint/run.py",
      [
        "Run",
        "cb_verbose_mode"
      ]
    ]
  ],
  "preprocess_options": [
    [
      "pylint/lint/utils.py",
      [
        "preprocess_options"
      ]
    ]
  ],
  "_patch_sys_path": [
    [
      "pylint/lint/utils.py",
      [
        "_patch_sys_path"
      ]
    ]
  ],
  "fix_import_path": [
    [
      "pylint/lint/utils.py",
      [
        "fix_import_path"
      ]
    ]
  ],
  "__new__": [
    [
      "pylint/message/message.py",
      [
        "Message",
        "__new__"
      ]
    ],
    [
      "pylint/testutils/output_line.py",
      [
        "Message",
        "__new__"
      ]
    ],
    [
      "tests/functional/a/access/access_attr_before_def_false_positive.py",
      [
        "QoSALConnection",
        "__new__"
      ]
    ],
    [
      "tests/functional/a/access/access_to__name__.py",
      [
        "NewClass",
        "__new__"
      ]
    ],
    [
      "tests/functional/c/ctor_arguments.py",
      [
        "ClassNew",
        "__new__"
      ]
    ],
    [
      "tests/functional/c/ctor_arguments.py",
      [
        "Metaclass",
        "__new__"
      ]
    ],
    [
      "tests/functional/f/first_arg.py",
      [
        "Obj",
        "__new__"
      ]
    ],
    [
      "tests/functional/f/first_arg.py",
      [
        "Meta",
        "__new__"
      ]
    ],
    [
      "tests/functional/r/regression/regression_too_many_arguments_2335.py",
      [
        "NodeCheckMetaClass",
        "__new__"
      ]
    ],
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "Valid",
        "__new__"
      ]
    ]
  ],
  "format": [
    [
      "pylint/message/message.py",
      [
        "Message",
        "format"
      ]
    ],
    [
      "pylint/reporters/ureports/__init__.py",
      [
        "BaseWriter",
        "format"
      ]
    ]
  ],
  "check_msgid": [
    [
      "pylint/message/message_definition.py",
      [
        "MessageDefinition",
        "check_msgid"
      ]
    ]
  ],
  "may_be_emitted": [
    [
      "pylint/message/message_definition.py",
      [
        "MessageDefinition",
        "may_be_emitted"
      ]
    ]
  ],
  "format_help": [
    [
      "pylint/message/message_definition.py",
      [
        "MessageDefinition",
        "format_help"
      ]
    ]
  ],
  "register_messages_from_checker": [
    [
      "pylint/message/message_definition_store.py",
      [
        "MessageDefinitionStore",
        "register_messages_from_checker"
      ]
    ]
  ],
  "register_message": [
    [
      "pylint/message/message_definition_store.py",
      [
        "MessageDefinitionStore",
        "register_message"
      ]
    ]
  ],
  "get_message_definitions": [
    [
      "pylint/message/message_definition_store.py",
      [
        "MessageDefinitionStore",
        "get_message_definitions"
      ]
    ]
  ],
  "get_msg_display_string": [
    [
      "pylint/message/message_definition_store.py",
      [
        "MessageDefinitionStore",
        "get_msg_display_string"
      ]
    ]
  ],
  "help_message": [
    [
      "pylint/message/message_definition_store.py",
      [
        "MessageDefinitionStore",
        "help_message"
      ]
    ]
  ],
  "list_messages": [
    [
      "pylint/message/message_definition_store.py",
      [
        "MessageDefinitionStore",
        "list_messages"
      ]
    ]
  ],
  "_checker_messages": [
    [
      "pylint/message/message_handler_mix_in.py",
      [
        "MessagesHandlerMixIn",
        "_checker_messages"
      ]
    ]
  ],
  "clear_by_id_managed_msgs": [
    [
      "pylint/message/message_handler_mix_in.py",
      [
        "MessagesHandlerMixIn",
        "clear_by_id_managed_msgs"
      ]
    ]
  ],
  "get_by_id_managed_msgs": [
    [
      "pylint/message/message_handler_mix_in.py",
      [
        "MessagesHandlerMixIn",
        "get_by_id_managed_msgs"
      ]
    ]
  ],
  "_register_by_id_managed_msg": [
    [
      "pylint/message/message_handler_mix_in.py",
      [
        "MessagesHandlerMixIn",
        "_register_by_id_managed_msg"
      ]
    ]
  ],
  "disable": [
    [
      "pylint/message/message_handler_mix_in.py",
      [
        "MessagesHandlerMixIn",
        "disable"
      ]
    ],
    [
      "tests/conftest.py",
      [
        "disable"
      ]
    ],
    [
      "tests/extensions/test_bad_builtin.py",
      [
        "disable"
      ]
    ],
    [
      "tests/extensions/test_check_mccabe.py",
      [
        "disable"
      ]
    ],
    [
      "tests/extensions/test_empty_comment.py",
      [
        "disable"
      ]
    ],
    [
      "tests/extensions/test_emptystring.py",
      [
        "disable"
      ]
    ],
    [
      "tests/extensions/test_overlapping_exceptions.py",
      [
        "disable"
      ]
    ],
    [
      "tests/extensions/test_redefined.py",
      [
        "disable"
      ]
    ],
    [
      "tests/lint/unittest_lint.py",
      [
        "disable"
      ]
    ],
    [
      "tests/test_regr.py",
      [
        "disable"
      ]
    ],
    [
      "tests/unittest_reporting.py",
      [
        "disable"
      ]
    ]
  ],
  "enable": [
    [
      "pylint/message/message_handler_mix_in.py",
      [
        "MessagesHandlerMixIn",
        "enable"
      ]
    ],
    [
      "tests/conftest.py",
      [
        "enable"
      ]
    ],
    [
      "tests/extensions/test_check_mccabe.py",
      [
        "enable"
      ]
    ],
    [
      "tests/extensions/test_empty_comment.py",
      [
        "enable"
      ]
    ]
  ],
  "_set_msg_status": [
    [
      "pylint/message/message_handler_mix_in.py",
      [
        "MessagesHandlerMixIn",
        "_set_msg_status"
      ]
    ]
  ],
  "_set_one_msg_status": [
    [
      "pylint/message/message_handler_mix_in.py",
      [
        "MessagesHandlerMixIn",
        "_set_one_msg_status"
      ]
    ]
  ],
  "_message_symbol": [
    [
      "pylint/message/message_handler_mix_in.py",
      [
        "MessagesHandlerMixIn",
        "_message_symbol"
      ]
    ]
  ],
  "get_message_state_scope": [
    [
      "pylint/message/message_handler_mix_in.py",
      [
        "MessagesHandlerMixIn",
        "get_message_state_scope"
      ]
    ]
  ],
  "is_message_enabled": [
    [
      "pylint/message/message_handler_mix_in.py",
      [
        "MessagesHandlerMixIn",
        "is_message_enabled"
      ]
    ],
    [
      "pylint/testutils/unittest_linter.py",
      [
        "UnittestLinter",
        "is_message_enabled"
      ]
    ],
    [
      "tests/utils/unittest_ast_walker.py",
      [
        "TestASTWalker",
        "MockLinter",
        "is_message_enabled"
      ]
    ]
  ],
  "is_one_message_enabled": [
    [
      "pylint/message/message_handler_mix_in.py",
      [
        "MessagesHandlerMixIn",
        "is_one_message_enabled"
      ]
    ]
  ],
  "check_message_definition": [
    [
      "pylint/message/message_handler_mix_in.py",
      [
        "MessagesHandlerMixIn",
        "check_message_definition"
      ]
    ]
  ],
  "add_one_message": [
    [
      "pylint/message/message_handler_mix_in.py",
      [
        "MessagesHandlerMixIn",
        "add_one_message"
      ]
    ]
  ],
  "_get_checkers_infos": [
    [
      "pylint/message/message_handler_mix_in.py",
      [
        "MessagesHandlerMixIn",
        "_get_checkers_infos"
      ]
    ]
  ],
  "get_checkers_documentation": [
    [
      "pylint/message/message_handler_mix_in.py",
      [
        "MessagesHandlerMixIn",
        "get_checkers_documentation"
      ]
    ]
  ],
  "print_full_documentation": [
    [
      "pylint/message/message_handler_mix_in.py",
      [
        "MessagesHandlerMixIn",
        "print_full_documentation"
      ]
    ]
  ],
  "_print_checker_doc": [
    [
      "pylint/message/message_handler_mix_in.py",
      [
        "MessagesHandlerMixIn",
        "_print_checker_doc"
      ]
    ]
  ],
  "get_symbol": [
    [
      "pylint/message/message_id_store.py",
      [
        "MessageIdStore",
        "get_symbol"
      ]
    ]
  ],
  "get_msgid": [
    [
      "pylint/message/message_id_store.py",
      [
        "MessageIdStore",
        "get_msgid"
      ]
    ]
  ],
  "register_message_definition": [
    [
      "pylint/message/message_id_store.py",
      [
        "MessageIdStore",
        "register_message_definition"
      ]
    ]
  ],
  "add_msgid_and_symbol": [
    [
      "pylint/message/message_id_store.py",
      [
        "MessageIdStore",
        "add_msgid_and_symbol"
      ]
    ]
  ],
  "add_legacy_msgid_and_symbol": [
    [
      "pylint/message/message_id_store.py",
      [
        "MessageIdStore",
        "add_legacy_msgid_and_symbol"
      ]
    ]
  ],
  "check_msgid_and_symbol": [
    [
      "pylint/message/message_id_store.py",
      [
        "MessageIdStore",
        "check_msgid_and_symbol"
      ]
    ]
  ],
  "_raise_duplicate_symbol": [
    [
      "pylint/message/message_id_store.py",
      [
        "MessageIdStore",
        "_raise_duplicate_symbol"
      ]
    ]
  ],
  "_raise_duplicate_msgid": [
    [
      "pylint/message/message_id_store.py",
      [
        "MessageIdStore",
        "_raise_duplicate_msgid"
      ]
    ]
  ],
  "get_active_msgids": [
    [
      "pylint/message/message_id_store.py",
      [
        "MessageIdStore",
        "get_active_msgids"
      ]
    ]
  ],
  "get_title": [
    [
      "pylint/pyreverse/diadefslib.py",
      [
        "DiaDefGenerator",
        "get_title"
      ]
    ],
    [
      "pylint/pyreverse/writer.py",
      [
        "DiagramWriter",
        "get_title"
      ]
    ],
    [
      "pylint/pyreverse/writer.py",
      [
        "DotWriter",
        "get_title"
      ]
    ],
    [
      "pylint/pyreverse/writer.py",
      [
        "VCGWriter",
        "get_title"
      ]
    ]
  ],
  "_set_option": [
    [
      "pylint/pyreverse/diadefslib.py",
      [
        "DiaDefGenerator",
        "_set_option"
      ]
    ]
  ],
  "_set_default_options": [
    [
      "pylint/pyreverse/diadefslib.py",
      [
        "DiaDefGenerator",
        "_set_default_options"
      ]
    ]
  ],
  "_get_levels": [
    [
      "pylint/pyreverse/diadefslib.py",
      [
        "DiaDefGenerator",
        "_get_levels"
      ]
    ]
  ],
  "show_node": [
    [
      "pylint/pyreverse/diadefslib.py",
      [
        "DiaDefGenerator",
        "show_node"
      ]
    ]
  ],
  "add_class": [
    [
      "pylint/pyreverse/diadefslib.py",
      [
        "DiaDefGenerator",
        "add_class"
      ]
    ]
  ],
  "get_ancestors": [
    [
      "pylint/pyreverse/diadefslib.py",
      [
        "DiaDefGenerator",
        "get_ancestors"
      ]
    ]
  ],
  "get_associated": [
    [
      "pylint/pyreverse/diadefslib.py",
      [
        "DiaDefGenerator",
        "get_associated"
      ]
    ]
  ],
  "extract_classes": [
    [
      "pylint/pyreverse/diadefslib.py",
      [
        "DiaDefGenerator",
        "extract_classes"
      ]
    ]
  ],
  "visit_project": [
    [
      "pylint/pyreverse/diadefslib.py",
      [
        "DefaultDiadefGenerator",
        "visit_project"
      ]
    ],
    [
      "pylint/pyreverse/inspector.py",
      [
        "Linker",
        "visit_project"
      ]
    ]
  ],
  "leave_project": [
    [
      "pylint/pyreverse/diadefslib.py",
      [
        "DefaultDiadefGenerator",
        "leave_project"
      ]
    ]
  ],
  "class_diagram": [
    [
      "pylint/pyreverse/diadefslib.py",
      [
        "ClassDiadefGenerator",
        "class_diagram"
      ]
    ]
  ],
  "get_diadefs": [
    [
      "pylint/pyreverse/diadefslib.py",
      [
        "DiadefsHandler",
        "get_diadefs"
      ]
    ]
  ],
  "get_relationships": [
    [
      "pylint/pyreverse/diagrams.py",
      [
        "ClassDiagram",
        "get_relationships"
      ]
    ]
  ],
  "add_relationship": [
    [
      "pylint/pyreverse/diagrams.py",
      [
        "ClassDiagram",
        "add_relationship"
      ]
    ]
  ],
  "get_relationship": [
    [
      "pylint/pyreverse/diagrams.py",
      [
        "ClassDiagram",
        "get_relationship"
      ]
    ]
  ],
  "get_attrs": [
    [
      "pylint/pyreverse/diagrams.py",
      [
        "ClassDiagram",
        "get_attrs"
      ]
    ]
  ],
  "get_methods": [
    [
      "pylint/pyreverse/diagrams.py",
      [
        "ClassDiagram",
        "get_methods"
      ]
    ]
  ],
  "add_object": [
    [
      "pylint/pyreverse/diagrams.py",
      [
        "ClassDiagram",
        "add_object"
      ]
    ]
  ],
  "class_names": [
    [
      "pylint/pyreverse/diagrams.py",
      [
        "ClassDiagram",
        "class_names"
      ]
    ]
  ],
  "nodes": [
    [
      "pylint/pyreverse/diagrams.py",
      [
        "ClassDiagram",
        "nodes"
      ]
    ]
  ],
  "has_node": [
    [
      "pylint/pyreverse/diagrams.py",
      [
        "ClassDiagram",
        "has_node"
      ]
    ]
  ],
  "object_from_node": [
    [
      "pylint/pyreverse/diagrams.py",
      [
        "ClassDiagram",
        "object_from_node"
      ]
    ]
  ],
  "classes": [
    [
      "pylint/pyreverse/diagrams.py",
      [
        "ClassDiagram",
        "classes"
      ]
    ]
  ],
  "classe": [
    [
      "pylint/pyreverse/diagrams.py",
      [
        "ClassDiagram",
        "classe"
      ]
    ]
  ],
  "extract_relationships": [
    [
      "pylint/pyreverse/diagrams.py",
      [
        "ClassDiagram",
        "extract_relationships"
      ]
    ],
    [
      "pylint/pyreverse/diagrams.py",
      [
        "PackageDiagram",
        "extract_relationships"
      ]
    ]
  ],
  "modules": [
    [
      "pylint/pyreverse/diagrams.py",
      [
        "PackageDiagram",
        "modules"
      ]
    ]
  ],
  "module": [
    [
      "pylint/pyreverse/diagrams.py",
      [
        "PackageDiagram",
        "module"
      ]
    ],
    [
      "pylint/testutils/functional_test_file.py",
      [
        "FunctionalTestFile",
        "module"
      ]
    ]
  ],
  "get_module": [
    [
      "pylint/pyreverse/diagrams.py",
      [
        "PackageDiagram",
        "get_module"
      ]
    ],
    [
      "pylint/pyreverse/inspector.py",
      [
        "Project",
        "get_module"
      ]
    ]
  ],
  "add_from_depend": [
    [
      "pylint/pyreverse/diagrams.py",
      [
        "PackageDiagram",
        "add_from_depend"
      ]
    ]
  ],
  "_iface_hdlr": [
    [
      "pylint/pyreverse/inspector.py",
      [
        "_iface_hdlr"
      ]
    ]
  ],
  "_astroid_wrapper": [
    [
      "pylint/pyreverse/inspector.py",
      [
        "_astroid_wrapper"
      ]
    ]
  ],
  "interfaces": [
    [
      "pylint/pyreverse/inspector.py",
      [
        "interfaces"
      ]
    ]
  ],
  "init_counter": [
    [
      "pylint/pyreverse/inspector.py",
      [
        "IdGeneratorMixIn",
        "init_counter"
      ]
    ]
  ],
  "generate_id": [
    [
      "pylint/pyreverse/inspector.py",
      [
        "IdGeneratorMixIn",
        "generate_id"
      ]
    ]
  ],
  "visit_package": [
    [
      "pylint/pyreverse/inspector.py",
      [
        "Linker",
        "visit_package"
      ]
    ]
  ],
  "handle_assignattr_type": [
    [
      "pylint/pyreverse/inspector.py",
      [
        "Linker",
        "handle_assignattr_type"
      ]
    ]
  ],
  "compute_module": [
    [
      "pylint/pyreverse/inspector.py",
      [
        "Linker",
        "compute_module"
      ]
    ]
  ],
  "_imported_module": [
    [
      "pylint/pyreverse/inspector.py",
      [
        "Linker",
        "_imported_module"
      ]
    ]
  ],
  "add_module": [
    [
      "pylint/pyreverse/inspector.py",
      [
        "Project",
        "add_module"
      ]
    ]
  ],
  "get_children": [
    [
      "pylint/pyreverse/inspector.py",
      [
        "Project",
        "get_children"
      ]
    ]
  ],
  "project_from_files": [
    [
      "pylint/pyreverse/inspector.py",
      [
        "project_from_files"
      ]
    ]
  ],
  "_check_graphviz_available": [
    [
      "pylint/pyreverse/main.py",
      [
        "_check_graphviz_available"
      ]
    ]
  ],
  "get_default_options": [
    [
      "pylint/pyreverse/utils.py",
      [
        "get_default_options"
      ]
    ]
  ],
  "insert_default_options": [
    [
      "pylint/pyreverse/utils.py",
      [
        "insert_default_options"
      ]
    ]
  ],
  "get_visibility": [
    [
      "pylint/pyreverse/utils.py",
      [
        "get_visibility"
      ]
    ]
  ],
  "is_final": [
    [
      "pylint/pyreverse/utils.py",
      [
        "is_final"
      ]
    ]
  ],
  "is_interface": [
    [
      "pylint/pyreverse/utils.py",
      [
        "is_interface"
      ]
    ]
  ],
  "is_exception": [
    [
      "pylint/pyreverse/utils.py",
      [
        "is_exception"
      ]
    ]
  ],
  "show_attr": [
    [
      "pylint/pyreverse/utils.py",
      [
        "FilterMixIn",
        "show_attr"
      ]
    ]
  ],
  "walk": [
    [
      "pylint/pyreverse/utils.py",
      [
        "ASTWalker",
        "walk"
      ]
    ],
    [
      "pylint/testutils/checker_test_case.py",
      [
        "CheckerTestCase",
        "walk"
      ]
    ],
    [
      "pylint/utils/ast_walker.py",
      [
        "ASTWalker",
        "walk"
      ]
    ]
  ],
  "get_callbacks": [
    [
      "pylint/pyreverse/utils.py",
      [
        "ASTWalker",
        "get_callbacks"
      ]
    ]
  ],
  "leave": [
    [
      "pylint/pyreverse/utils.py",
      [
        "ASTWalker",
        "leave"
      ]
    ],
    [
      "pylint/reporters/ureports/nodes.py",
      [
        "VNode",
        "leave"
      ]
    ]
  ],
  "get_annotation_label": [
    [
      "pylint/pyreverse/utils.py",
      [
        "get_annotation_label"
      ]
    ]
  ],
  "get_annotation": [
    [
      "pylint/pyreverse/utils.py",
      [
        "get_annotation"
      ]
    ]
  ],
  "infer_node": [
    [
      "pylint/pyreverse/utils.py",
      [
        "infer_node"
      ]
    ]
  ],
  "open_graph": [
    [
      "pylint/pyreverse/vcgutils.py",
      [
        "VCGPrinter",
        "open_graph"
      ]
    ]
  ],
  "close_graph": [
    [
      "pylint/pyreverse/vcgutils.py",
      [
        "VCGPrinter",
        "close_graph"
      ]
    ],
    [
      "pylint/pyreverse/writer.py",
      [
        "DiagramWriter",
        "close_graph"
      ]
    ],
    [
      "pylint/pyreverse/writer.py",
      [
        "DotWriter",
        "close_graph"
      ]
    ],
    [
      "pylint/pyreverse/writer.py",
      [
        "VCGWriter",
        "close_graph"
      ]
    ]
  ],
  "node": [
    [
      "pylint/pyreverse/vcgutils.py",
      [
        "VCGPrinter",
        "node"
      ]
    ]
  ],
  "edge": [
    [
      "pylint/pyreverse/vcgutils.py",
      [
        "VCGPrinter",
        "edge"
      ]
    ]
  ],
  "_write_attributes": [
    [
      "pylint/pyreverse/vcgutils.py",
      [
        "VCGPrinter",
        "_write_attributes"
      ]
    ]
  ],
  "_inc_indent": [
    [
      "pylint/pyreverse/vcgutils.py",
      [
        "VCGPrinter",
        "_inc_indent"
      ]
    ]
  ],
  "_dec_indent": [
    [
      "pylint/pyreverse/vcgutils.py",
      [
        "VCGPrinter",
        "_dec_indent"
      ]
    ]
  ],
  "write": [
    [
      "pylint/pyreverse/writer.py",
      [
        "DiagramWriter",
        "write"
      ]
    ],
    [
      "pylint/reporters/ureports/__init__.py",
      [
        "BaseWriter",
        "write"
      ]
    ],
    [
      "tests/functional/n/new_style_class_py_30.py",
      [
        "File",
        "write"
      ]
    ]
  ],
  "write_packages": [
    [
      "pylint/pyreverse/writer.py",
      [
        "DiagramWriter",
        "write_packages"
      ]
    ]
  ],
  "write_classes": [
    [
      "pylint/pyreverse/writer.py",
      [
        "DiagramWriter",
        "write_classes"
      ]
    ]
  ],
  "set_printer": [
    [
      "pylint/pyreverse/writer.py",
      [
        "DiagramWriter",
        "set_printer"
      ]
    ],
    [
      "pylint/pyreverse/writer.py",
      [
        "DotWriter",
        "set_printer"
      ]
    ],
    [
      "pylint/pyreverse/writer.py",
      [
        "VCGWriter",
        "set_printer"
      ]
    ]
  ],
  "get_values": [
    [
      "pylint/pyreverse/writer.py",
      [
        "DiagramWriter",
        "get_values"
      ]
    ],
    [
      "pylint/pyreverse/writer.py",
      [
        "DotWriter",
        "get_values"
      ]
    ],
    [
      "pylint/pyreverse/writer.py",
      [
        "VCGWriter",
        "get_values"
      ]
    ]
  ],
  "set_output": [
    [
      "pylint/reporters/base_reporter.py",
      [
        "BaseReporter",
        "set_output"
      ]
    ],
    [
      "pylint/reporters/multi_reporter.py",
      [
        "MultiReporter",
        "set_output"
      ]
    ]
  ],
  "writeln": [
    [
      "pylint/reporters/base_reporter.py",
      [
        "BaseReporter",
        "writeln"
      ]
    ],
    [
      "pylint/reporters/multi_reporter.py",
      [
        "MultiReporter",
        "writeln"
      ]
    ],
    [
      "pylint/reporters/ureports/__init__.py",
      [
        "BaseWriter",
        "writeln"
      ]
    ],
    [
      "tests/unittest_reporting.py",
      [
        "NopReporter",
        "writeln"
      ]
    ]
  ],
  "_display": [
    [
      "pylint/reporters/base_reporter.py",
      [
        "BaseReporter",
        "_display"
      ]
    ],
    [
      "pylint/reporters/json_reporter.py",
      [
        "JSONReporter",
        "_display"
      ]
    ],
    [
      "pylint/reporters/text.py",
      [
        "TextReporter",
        "_display"
      ]
    ],
    [
      "tests/extensions/test_broad_try_clause.py",
      [
        "BroadTryClauseTestReporter",
        "_display"
      ]
    ],
    [
      "tests/extensions/test_comparetozero.py",
      [
        "CompareToZeroTestReporter",
        "_display"
      ]
    ],
    [
      "tests/functional/m/misplaced_format_function.py",
      [
        "_display"
      ]
    ],
    [
      "tests/test_self.py",
      [
        "MultiReporter",
        "_display"
      ]
    ],
    [
      "tests/unittest_reporting.py",
      [
        "NopReporter",
        "_display"
      ]
    ]
  ],
  "display_messages": [
    [
      "pylint/reporters/base_reporter.py",
      [
        "BaseReporter",
        "display_messages"
      ]
    ],
    [
      "pylint/reporters/json_reporter.py",
      [
        "JSONReporter",
        "display_messages"
      ]
    ],
    [
      "pylint/reporters/multi_reporter.py",
      [
        "MultiReporter",
        "display_messages"
      ]
    ]
  ],
  "on_set_current_module": [
    [
      "pylint/reporters/base_reporter.py",
      [
        "BaseReporter",
        "on_set_current_module"
      ]
    ],
    [
      "pylint/reporters/multi_reporter.py",
      [
        "MultiReporter",
        "on_set_current_module"
      ]
    ],
    [
      "pylint/reporters/text.py",
      [
        "TextReporter",
        "on_set_current_module"
      ]
    ],
    [
      "pylint/testutils/reporter_for_tests.py",
      [
        "GenericTestReporter",
        "on_set_current_module"
      ]
    ],
    [
      "pylint/testutils/reporter_for_tests.py",
      [
        "MinimalTestReporter",
        "on_set_current_module"
      ]
    ],
    [
      "pylint/testutils/reporter_for_tests.py",
      [
        "FunctionalTestReporter",
        "on_set_current_module"
      ]
    ],
    [
      "tests/extensions/test_broad_try_clause.py",
      [
        "BroadTryClauseTestReporter",
        "on_set_current_module"
      ]
    ],
    [
      "tests/extensions/test_comparetozero.py",
      [
        "CompareToZeroTestReporter",
        "on_set_current_module"
      ]
    ],
    [
      "tests/test_self.py",
      [
        "MultiReporter",
        "on_set_current_module"
      ]
    ]
  ],
  "on_close": [
    [
      "pylint/reporters/base_reporter.py",
      [
        "BaseReporter",
        "on_close"
      ]
    ],
    [
      "pylint/reporters/multi_reporter.py",
      [
        "MultiReporter",
        "on_close"
      ]
    ]
  ],
  "reset": [
    [
      "pylint/reporters/collecting_reporter.py",
      [
        "CollectingReporter",
        "reset"
      ]
    ],
    [
      "pylint/testutils/reporter_for_tests.py",
      [
        "GenericTestReporter",
        "reset"
      ]
    ],
    [
      "tests/functional/a/access/access_attr_before_def_false_positive.py",
      [
        "DefinedOutsideInit",
        "reset"
      ]
    ]
  ],
  "__del__": [
    [
      "pylint/reporters/multi_reporter.py",
      [
        "MultiReporter",
        "__del__"
      ]
    ],
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "Invalid",
        "__del__"
      ]
    ]
  ],
  "path_strip_prefix": [
    [
      "pylint/reporters/multi_reporter.py",
      [
        "MultiReporter",
        "path_strip_prefix"
      ]
    ]
  ],
  "linter": [
    [
      "pylint/reporters/multi_reporter.py",
      [
        "MultiReporter",
        "linter"
      ]
    ],
    [
      "tests/conftest.py",
      [
        "linter"
      ]
    ],
    [
      "tests/test_import_graph.py",
      [
        "linter"
      ]
    ],
    [
      "tests/test_self.py",
      [
        "MultiReporter",
        "linter"
      ]
    ]
  ],
  "linter_3": [
    [
      "pylint/reporters/multi_reporter.py",
      [
        "MultiReporter",
        "linter_3"
      ]
    ]
  ],
  "register_report": [
    [
      "pylint/reporters/reports_handler_mix_in.py",
      [
        "ReportsHandlerMixIn",
        "register_report"
      ]
    ]
  ],
  "enable_report": [
    [
      "pylint/reporters/reports_handler_mix_in.py",
      [
        "ReportsHandlerMixIn",
        "enable_report"
      ]
    ]
  ],
  "disable_report": [
    [
      "pylint/reporters/reports_handler_mix_in.py",
      [
        "ReportsHandlerMixIn",
        "disable_report"
      ]
    ]
  ],
  "report_is_enabled": [
    [
      "pylint/reporters/reports_handler_mix_in.py",
      [
        "ReportsHandlerMixIn",
        "report_is_enabled"
      ]
    ]
  ],
  "make_reports": [
    [
      "pylint/reporters/reports_handler_mix_in.py",
      [
        "ReportsHandlerMixIn",
        "make_reports"
      ]
    ]
  ],
  "add_stats": [
    [
      "pylint/reporters/reports_handler_mix_in.py",
      [
        "ReportsHandlerMixIn",
        "add_stats"
      ]
    ],
    [
      "pylint/testutils/unittest_linter.py",
      [
        "UnittestLinter",
        "add_stats"
      ]
    ]
  ],
  "_get_ansi_code": [
    [
      "pylint/reporters/text.py",
      [
        "_get_ansi_code"
      ]
    ]
  ],
  "colorize_ansi": [
    [
      "pylint/reporters/text.py",
      [
        "colorize_ansi"
      ]
    ]
  ],
  "write_message": [
    [
      "pylint/reporters/text.py",
      [
        "TextReporter",
        "write_message"
      ]
    ]
  ],
  "_get_decoration": [
    [
      "pylint/reporters/text.py",
      [
        "ColorizedTextReporter",
        "_get_decoration"
      ]
    ]
  ],
  "format_children": [
    [
      "pylint/reporters/ureports/__init__.py",
      [
        "BaseWriter",
        "format_children"
      ]
    ]
  ],
  "begin_format": [
    [
      "pylint/reporters/ureports/__init__.py",
      [
        "BaseWriter",
        "begin_format"
      ]
    ],
    [
      "pylint/reporters/ureports/text_writer.py",
      [
        "TextWriter",
        "begin_format"
      ]
    ]
  ],
  "end_format": [
    [
      "pylint/reporters/ureports/__init__.py",
      [
        "BaseWriter",
        "end_format"
      ]
    ]
  ],
  "get_table_content": [
    [
      "pylint/reporters/ureports/__init__.py",
      [
        "BaseWriter",
        "get_table_content"
      ]
    ]
  ],
  "compute_content": [
    [
      "pylint/reporters/ureports/__init__.py",
      [
        "BaseWriter",
        "compute_content"
      ]
    ]
  ],
  "append": [
    [
      "pylint/reporters/ureports/nodes.py",
      [
        "VNode",
        "append"
      ]
    ],
    [
      "pylint/reporters/ureports/nodes.py",
      [
        "BaseLayout",
        "append"
      ]
    ]
  ],
  "insert": [
    [
      "pylint/reporters/ureports/nodes.py",
      [
        "VNode",
        "insert"
      ]
    ],
    [
      "tests/functional/t/too/too_many_ancestors.py",
      [
        "ItemSequence",
        "insert"
      ]
    ]
  ],
  "_get_visit_name": [
    [
      "pylint/reporters/ureports/nodes.py",
      [
        "VNode",
        "_get_visit_name"
      ]
    ]
  ],
  "accept": [
    [
      "pylint/reporters/ureports/nodes.py",
      [
        "VNode",
        "accept"
      ]
    ]
  ],
  "parents": [
    [
      "pylint/reporters/ureports/nodes.py",
      [
        "BaseLayout",
        "parents"
      ]
    ]
  ],
  "add_text": [
    [
      "pylint/reporters/ureports/nodes.py",
      [
        "BaseLayout",
        "add_text"
      ]
    ]
  ],
  "visit_section": [
    [
      "pylint/reporters/ureports/text_writer.py",
      [
        "TextWriter",
        "visit_section"
      ]
    ]
  ],
  "visit_evaluationsection": [
    [
      "pylint/reporters/ureports/text_writer.py",
      [
        "TextWriter",
        "visit_evaluationsection"
      ]
    ]
  ],
  "visit_title": [
    [
      "pylint/reporters/ureports/text_writer.py",
      [
        "TextWriter",
        "visit_title"
      ]
    ]
  ],
  "visit_paragraph": [
    [
      "pylint/reporters/ureports/text_writer.py",
      [
        "TextWriter",
        "visit_paragraph"
      ]
    ]
  ],
  "visit_table": [
    [
      "pylint/reporters/ureports/text_writer.py",
      [
        "TextWriter",
        "visit_table"
      ]
    ]
  ],
  "default_table": [
    [
      "pylint/reporters/ureports/text_writer.py",
      [
        "TextWriter",
        "default_table"
      ]
    ]
  ],
  "visit_verbatimtext": [
    [
      "pylint/reporters/ureports/text_writer.py",
      [
        "TextWriter",
        "visit_verbatimtext"
      ]
    ]
  ],
  "visit_text": [
    [
      "pylint/reporters/ureports/text_writer.py",
      [
        "TextWriter",
        "visit_text"
      ]
    ]
  ],
  "setup_method": [
    [
      "pylint/testutils/checker_test_case.py",
      [
        "CheckerTestCase",
        "setup_method"
      ]
    ],
    [
      "tests/checkers/unittest_variables.py",
      [
        "TestVariablesCheckerWithTearDown",
        "setup_method"
      ]
    ]
  ],
  "assertNoMessages": [
    [
      "pylint/testutils/checker_test_case.py",
      [
        "CheckerTestCase",
        "assertNoMessages"
      ]
    ]
  ],
  "assertAddsMessages": [
    [
      "pylint/testutils/checker_test_case.py",
      [
        "CheckerTestCase",
        "assertAddsMessages"
      ]
    ]
  ],
  "set_config": [
    [
      "pylint/testutils/decorator.py",
      [
        "set_config"
      ]
    ]
  ],
  "parse_python_version": [
    [
      "pylint/testutils/functional_test_file.py",
      [
        "parse_python_version"
      ]
    ]
  ],
  "_parse_options": [
    [
      "pylint/testutils/functional_test_file.py",
      [
        "FunctionalTestFile",
        "_parse_options"
      ]
    ]
  ],
  "option_file": [
    [
      "pylint/testutils/functional_test_file.py",
      [
        "FunctionalTestFile",
        "option_file"
      ]
    ]
  ],
  "expected_output": [
    [
      "pylint/testutils/functional_test_file.py",
      [
        "FunctionalTestFile",
        "expected_output"
      ]
    ]
  ],
  "source": [
    [
      "pylint/testutils/functional_test_file.py",
      [
        "FunctionalTestFile",
        "source"
      ]
    ]
  ],
  "_file_type": [
    [
      "pylint/testutils/functional_test_file.py",
      [
        "FunctionalTestFile",
        "_file_type"
      ]
    ]
  ],
  "_get_tests_info": [
    [
      "pylint/testutils/get_test_info.py",
      [
        "_get_tests_info"
      ]
    ]
  ],
  "create_test_linter": [
    [
      "pylint/testutils/global_test_linter.py",
      [
        "create_test_linter"
      ]
    ]
  ],
  "setUp": [
    [
      "pylint/testutils/lint_module_test.py",
      [
        "LintModuleTest",
        "setUp"
      ]
    ],
    [
      "tests/functional/a/attribute_defined_outside_init.py",
      [
        "A",
        "setUp"
      ]
    ],
    [
      "tests/functional/a/attribute_defined_outside_init.py",
      [
        "D",
        "setUp"
      ]
    ]
  ],
  "runTest": [
    [
      "pylint/testutils/lint_module_test.py",
      [
        "LintModuleTest",
        "runTest"
      ]
    ]
  ],
  "_should_be_skipped_due_to_version": [
    [
      "pylint/testutils/lint_module_test.py",
      [
        "LintModuleTest",
        "_should_be_skipped_due_to_version"
      ]
    ]
  ],
  "get_expected_messages": [
    [
      "pylint/testutils/lint_module_test.py",
      [
        "LintModuleTest",
        "get_expected_messages"
      ]
    ]
  ],
  "multiset_difference": [
    [
      "pylint/testutils/lint_module_test.py",
      [
        "LintModuleTest",
        "multiset_difference"
      ]
    ]
  ],
  "_open_expected_file": [
    [
      "pylint/testutils/lint_module_test.py",
      [
        "LintModuleTest",
        "_open_expected_file"
      ]
    ]
  ],
  "_open_source_file": [
    [
      "pylint/testutils/lint_module_test.py",
      [
        "LintModuleTest",
        "_open_source_file"
      ]
    ]
  ],
  "_get_expected": [
    [
      "pylint/testutils/lint_module_test.py",
      [
        "LintModuleTest",
        "_get_expected"
      ]
    ],
    [
      "tests/test_func.py",
      [
        "LintTestUsingModule",
        "_get_expected"
      ]
    ]
  ],
  "_get_actual": [
    [
      "pylint/testutils/lint_module_test.py",
      [
        "LintModuleTest",
        "_get_actual"
      ]
    ]
  ],
  "_runTest": [
    [
      "pylint/testutils/lint_module_test.py",
      [
        "LintModuleTest",
        "_runTest"
      ]
    ]
  ],
  "error_msg_for_unequal_messages": [
    [
      "pylint/testutils/lint_module_test.py",
      [
        "LintModuleTest",
        "error_msg_for_unequal_messages"
      ]
    ]
  ],
  "error_msg_for_unequal_output": [
    [
      "pylint/testutils/lint_module_test.py",
      [
        "LintModuleTest",
        "error_msg_for_unequal_output"
      ]
    ]
  ],
  "_check_output_text": [
    [
      "pylint/testutils/lint_module_test.py",
      [
        "LintModuleTest",
        "_check_output_text"
      ]
    ],
    [
      "tests/test_functional.py",
      [
        "LintModuleOutputUpdate",
        "_check_output_text"
      ]
    ]
  ],
  "from_msg": [
    [
      "pylint/testutils/output_line.py",
      [
        "OutputLine",
        "from_msg"
      ]
    ]
  ],
  "get_column": [
    [
      "pylint/testutils/output_line.py",
      [
        "OutputLine",
        "get_column"
      ]
    ]
  ],
  "from_csv": [
    [
      "pylint/testutils/output_line.py",
      [
        "OutputLine",
        "from_csv"
      ]
    ]
  ],
  "to_csv": [
    [
      "pylint/testutils/output_line.py",
      [
        "OutputLine",
        "to_csv"
      ]
    ]
  ],
  "finalize": [
    [
      "pylint/testutils/reporter_for_tests.py",
      [
        "GenericTestReporter",
        "finalize"
      ]
    ]
  ],
  "_tokenize_str": [
    [
      "pylint/testutils/tokenize_str.py",
      [
        "_tokenize_str"
      ]
    ]
  ],
  "release_messages": [
    [
      "pylint/testutils/unittest_linter.py",
      [
        "UnittestLinter",
        "release_messages"
      ]
    ]
  ],
  "options_providers": [
    [
      "pylint/testutils/unittest_linter.py",
      [
        "UnittestLinter",
        "options_providers"
      ]
    ]
  ],
  "_is_method_enabled": [
    [
      "pylint/utils/ast_walker.py",
      [
        "ASTWalker",
        "_is_method_enabled"
      ]
    ]
  ],
  "add_checker": [
    [
      "pylint/utils/ast_walker.py",
      [
        "ASTWalker",
        "add_checker"
      ]
    ]
  ],
  "collect_block_lines": [
    [
      "pylint/utils/file_state.py",
      [
        "FileState",
        "collect_block_lines"
      ]
    ]
  ],
  "_collect_block_lines": [
    [
      "pylint/utils/file_state.py",
      [
        "FileState",
        "_collect_block_lines"
      ]
    ]
  ],
  "set_msg_status": [
    [
      "pylint/utils/file_state.py",
      [
        "FileState",
        "set_msg_status"
      ]
    ]
  ],
  "handle_ignored_message": [
    [
      "pylint/utils/file_state.py",
      [
        "FileState",
        "handle_ignored_message"
      ]
    ]
  ],
  "iter_spurious_suppression_messages": [
    [
      "pylint/utils/file_state.py",
      [
        "FileState",
        "iter_spurious_suppression_messages"
      ]
    ]
  ],
  "get_effective_max_line_number": [
    [
      "pylint/utils/file_state.py",
      [
        "FileState",
        "get_effective_max_line_number"
      ]
    ]
  ],
  "emit_pragma_representer": [
    [
      "pylint/utils/pragma_parser.py",
      [
        "emit_pragma_representer"
      ]
    ]
  ],
  "parse_pragma": [
    [
      "pylint/utils/pragma_parser.py",
      [
        "parse_pragma"
      ]
    ]
  ],
  "normalize_text": [
    [
      "pylint/utils/utils.py",
      [
        "normalize_text"
      ]
    ]
  ],
  "cmp": [
    [
      "pylint/utils/utils.py",
      [
        "cmp"
      ]
    ]
  ],
  "diff_string": [
    [
      "pylint/utils/utils.py",
      [
        "diff_string"
      ]
    ]
  ],
  "get_module_and_frameid": [
    [
      "pylint/utils/utils.py",
      [
        "get_module_and_frameid"
      ]
    ]
  ],
  "get_rst_title": [
    [
      "pylint/utils/utils.py",
      [
        "get_rst_title"
      ]
    ]
  ],
  "get_rst_section": [
    [
      "pylint/utils/utils.py",
      [
        "get_rst_section"
      ]
    ]
  ],
  "safe_decode": [
    [
      "pylint/utils/utils.py",
      [
        "safe_decode"
      ]
    ]
  ],
  "decoding_stream": [
    [
      "pylint/utils/utils.py",
      [
        "decoding_stream"
      ]
    ]
  ],
  "tokenize_module": [
    [
      "pylint/utils/utils.py",
      [
        "tokenize_module"
      ]
    ]
  ],
  "register_plugins": [
    [
      "pylint/utils/utils.py",
      [
        "register_plugins"
      ]
    ]
  ],
  "get_global_option": [
    [
      "pylint/utils/utils.py",
      [
        "get_global_option"
      ]
    ]
  ],
  "deprecated_option": [
    [
      "pylint/utils/utils.py",
      [
        "deprecated_option"
      ]
    ]
  ],
  "_splitstrip": [
    [
      "pylint/utils/utils.py",
      [
        "_splitstrip"
      ]
    ]
  ],
  "_unquote": [
    [
      "pylint/utils/utils.py",
      [
        "_unquote"
      ]
    ]
  ],
  "_check_csv": [
    [
      "pylint/utils/utils.py",
      [
        "_check_csv"
      ]
    ]
  ],
  "_comment": [
    [
      "pylint/utils/utils.py",
      [
        "_comment"
      ]
    ]
  ],
  "_format_option_value": [
    [
      "pylint/utils/utils.py",
      [
        "_format_option_value"
      ]
    ]
  ],
  "format_section": [
    [
      "pylint/utils/utils.py",
      [
        "format_section"
      ]
    ]
  ],
  "_ini_format": [
    [
      "pylint/utils/utils.py",
      [
        "_ini_format"
      ]
    ]
  ],
  "place_module": [
    [
      "pylint/utils/utils.py",
      [
        "IsortDriver",
        "place_module"
      ]
    ]
  ],
  "main": [
    [
      "script/bump_changelog.py",
      [
        "main"
      ]
    ],
    [
      "script/fix_documentation.py",
      [
        "main"
      ]
    ],
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "main"
      ]
    ],
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py34.py",
      [
        "main"
      ]
    ],
    [
      "tests/functional/a/await_outside_async.py",
      [
        "main"
      ]
    ],
    [
      "tests/functional/d/duplicate_except.py",
      [
        "main"
      ]
    ],
    [
      "tests/functional/i/iterable_context_py3.py",
      [
        "main"
      ]
    ],
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "main"
      ]
    ]
  ],
  "get_next_version": [
    [
      "script/bump_changelog.py",
      [
        "get_next_version"
      ]
    ]
  ],
  "transform_content": [
    [
      "script/bump_changelog.py",
      [
        "transform_content"
      ]
    ]
  ],
  "fix_inline_code_blocks": [
    [
      "script/fix_documentation.py",
      [
        "fix_inline_code_blocks"
      ]
    ]
  ],
  "changelog_insert_empty_lines": [
    [
      "script/fix_documentation.py",
      [
        "changelog_insert_empty_lines"
      ]
    ]
  ],
  "is_module": [
    [
      "tests/acceptance/test_stdlib.py",
      [
        "is_module"
      ]
    ]
  ],
  "is_package": [
    [
      "tests/acceptance/test_stdlib.py",
      [
        "is_package"
      ]
    ]
  ],
  "_patch_stdout": [
    [
      "tests/acceptance/test_stdlib.py",
      [
        "_patch_stdout"
      ]
    ]
  ],
  "test_libmodule": [
    [
      "tests/acceptance/test_stdlib.py",
      [
        "test_libmodule"
      ]
    ]
  ],
  "_empty_filepath": [
    [
      "tests/benchmark/test_baseline_benchmarks.py",
      [
        "_empty_filepath"
      ]
    ]
  ],
  "test_baseline_benchmark_j1": [
    [
      "tests/benchmark/test_baseline_benchmarks.py",
      [
        "TestEstablishBaselineBenchmarks",
        "test_baseline_benchmark_j1"
      ]
    ]
  ],
  "test_baseline_benchmark_j10": [
    [
      "tests/benchmark/test_baseline_benchmarks.py",
      [
        "TestEstablishBaselineBenchmarks",
        "test_baseline_benchmark_j10"
      ]
    ]
  ],
  "test_baseline_benchmark_check_parallel_j10": [
    [
      "tests/benchmark/test_baseline_benchmarks.py",
      [
        "TestEstablishBaselineBenchmarks",
        "test_baseline_benchmark_check_parallel_j10"
      ]
    ]
  ],
  "test_baseline_lots_of_files_j1": [
    [
      "tests/benchmark/test_baseline_benchmarks.py",
      [
        "TestEstablishBaselineBenchmarks",
        "test_baseline_lots_of_files_j1"
      ]
    ]
  ],
  "test_baseline_lots_of_files_j10": [
    [
      "tests/benchmark/test_baseline_benchmarks.py",
      [
        "TestEstablishBaselineBenchmarks",
        "test_baseline_lots_of_files_j10"
      ]
    ]
  ],
  "test_baseline_lots_of_files_j1_empty_checker": [
    [
      "tests/benchmark/test_baseline_benchmarks.py",
      [
        "TestEstablishBaselineBenchmarks",
        "test_baseline_lots_of_files_j1_empty_checker"
      ]
    ]
  ],
  "test_baseline_lots_of_files_j10_empty_checker": [
    [
      "tests/benchmark/test_baseline_benchmarks.py",
      [
        "TestEstablishBaselineBenchmarks",
        "test_baseline_lots_of_files_j10_empty_checker"
      ]
    ]
  ],
  "test_baseline_benchmark_j1_single_working_checker": [
    [
      "tests/benchmark/test_baseline_benchmarks.py",
      [
        "TestEstablishBaselineBenchmarks",
        "test_baseline_benchmark_j1_single_working_checker"
      ]
    ]
  ],
  "test_baseline_benchmark_j10_single_working_checker": [
    [
      "tests/benchmark/test_baseline_benchmarks.py",
      [
        "TestEstablishBaselineBenchmarks",
        "test_baseline_benchmark_j10_single_working_checker"
      ]
    ]
  ],
  "test_baseline_benchmark_j1_all_checks_single_file": [
    [
      "tests/benchmark/test_baseline_benchmarks.py",
      [
        "TestEstablishBaselineBenchmarks",
        "test_baseline_benchmark_j1_all_checks_single_file"
      ]
    ]
  ],
  "test_baseline_benchmark_j1_all_checks_lots_of_files": [
    [
      "tests/benchmark/test_baseline_benchmarks.py",
      [
        "TestEstablishBaselineBenchmarks",
        "test_baseline_benchmark_j1_all_checks_lots_of_files"
      ]
    ]
  ],
  "test_missing_docstring_module": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestDocstring",
        "test_missing_docstring_module"
      ]
    ]
  ],
  "test_missing_docstring_empty_module": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestDocstring",
        "test_missing_docstring_empty_module"
      ]
    ]
  ],
  "test_empty_docstring_module": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestDocstring",
        "test_empty_docstring_module"
      ]
    ]
  ],
  "test_empty_docstring_function": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestDocstring",
        "test_empty_docstring_function"
      ]
    ]
  ],
  "test_short_function_no_docstring": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestDocstring",
        "test_short_function_no_docstring"
      ]
    ]
  ],
  "test_long_function_no_docstring": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestDocstring",
        "test_long_function_no_docstring"
      ]
    ]
  ],
  "test_long_function_nested_statements_no_docstring": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestDocstring",
        "test_long_function_nested_statements_no_docstring"
      ]
    ]
  ],
  "test_function_no_docstring_by_name": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestDocstring",
        "test_function_no_docstring_by_name"
      ]
    ]
  ],
  "test_class_no_docstring": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestDocstring",
        "test_class_no_docstring"
      ]
    ]
  ],
  "test_inner_function_no_docstring": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestDocstring",
        "test_inner_function_no_docstring"
      ]
    ]
  ],
  "test_property_names": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestNameChecker",
        "test_property_names"
      ]
    ]
  ],
  "test_property_setters": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestNameChecker",
        "test_property_setters"
      ]
    ]
  ],
  "test_module_level_names": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestNameChecker",
        "test_module_level_names"
      ]
    ]
  ],
  "test_assign_to_new_keyword_py3": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestNameChecker",
        "test_assign_to_new_keyword_py3"
      ]
    ]
  ],
  "test_multi_name_detection_majority": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestMultiNamingStyle",
        "test_multi_name_detection_majority"
      ]
    ]
  ],
  "test_multi_name_detection_first_invalid": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestMultiNamingStyle",
        "test_multi_name_detection_first_invalid"
      ]
    ]
  ],
  "test_multi_name_detection_group": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestMultiNamingStyle",
        "test_multi_name_detection_group"
      ]
    ]
  ],
  "test_multi_name_detection_exempt": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestMultiNamingStyle",
        "test_multi_name_detection_exempt"
      ]
    ]
  ],
  "test_comparison": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestComparison",
        "test_comparison"
      ]
    ]
  ],
  "_test_name_is_correct_for_all_name_types": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestNamePresets",
        "_test_name_is_correct_for_all_name_types"
      ]
    ]
  ],
  "_test_name_is_incorrect_for_all_name_types": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestNamePresets",
        "_test_name_is_incorrect_for_all_name_types"
      ]
    ]
  ],
  "_test_should_always_pass": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestNamePresets",
        "_test_should_always_pass"
      ]
    ]
  ],
  "_test_is_correct": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestNamePresets",
        "_test_is_correct"
      ]
    ]
  ],
  "_test_is_incorrect": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestNamePresets",
        "_test_is_incorrect"
      ]
    ]
  ],
  "test_snake_case": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestNamePresets",
        "test_snake_case"
      ]
    ]
  ],
  "test_camel_case": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestNamePresets",
        "test_camel_case"
      ]
    ]
  ],
  "test_upper_case": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestNamePresets",
        "test_upper_case"
      ]
    ]
  ],
  "test_pascal_case": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestNamePresets",
        "test_pascal_case"
      ]
    ]
  ],
  "test_doc": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestBaseChecker",
        "test_doc"
      ]
    ]
  ],
  "test_no_six": [
    [
      "tests/checkers/unittest_base.py",
      [
        "TestNoSix",
        "test_no_six"
      ]
    ]
  ],
  "test_bitbucket_issue_164": [
    [
      "tests/checkers/unittest_classes.py",
      [
        "TestVariablesChecker",
        "test_bitbucket_issue_164"
      ]
    ]
  ],
  "test_exclude_protected": [
    [
      "tests/checkers/unittest_classes.py",
      [
        "TestVariablesChecker",
        "test_exclude_protected"
      ]
    ]
  ],
  "test_regression_non_parent_init_called_tracemalloc": [
    [
      "tests/checkers/unittest_classes.py",
      [
        "TestVariablesChecker",
        "test_regression_non_parent_init_called_tracemalloc"
      ]
    ]
  ],
  "test_super_init_not_called_regression": [
    [
      "tests/checkers/unittest_classes.py",
      [
        "TestVariablesChecker",
        "test_super_init_not_called_regression"
      ]
    ]
  ],
  "test_uninferable_attribute": [
    [
      "tests/checkers/unittest_classes.py",
      [
        "TestVariablesChecker",
        "test_uninferable_attribute"
      ]
    ]
  ],
  "test_check_protected_access_in_special_methods": [
    [
      "tests/checkers/unittest_classes.py",
      [
        "TestVariablesChecker",
        "test_check_protected_access_in_special_methods"
      ]
    ]
  ],
  "test_check_protected_access_in_special_methods_deact": [
    [
      "tests/checkers/unittest_classes.py",
      [
        "TestVariablesChecker",
        "test_check_protected_access_in_special_methods_deact"
      ]
    ]
  ],
  "test_private_attribute_hides_method": [
    [
      "tests/checkers/unittest_classes.py",
      [
        "TestVariablesChecker",
        "test_private_attribute_hides_method"
      ]
    ]
  ],
  "test_protected_attribute_hides_method": [
    [
      "tests/checkers/unittest_classes.py",
      [
        "TestVariablesChecker",
        "test_protected_attribute_hides_method"
      ]
    ]
  ],
  "test_deprecated_function": [
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "TestDeprecatedChecker",
        "test_deprecated_function"
      ]
    ]
  ],
  "test_deprecated_method": [
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "TestDeprecatedChecker",
        "test_deprecated_method"
      ]
    ]
  ],
  "test_no_message": [
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "TestDeprecatedChecker",
        "test_no_message"
      ]
    ]
  ],
  "test_function_deprecated_arg": [
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "TestDeprecatedChecker",
        "test_function_deprecated_arg"
      ]
    ]
  ],
  "test_function_deprecated_kwarg": [
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "TestDeprecatedChecker",
        "test_function_deprecated_kwarg"
      ]
    ]
  ],
  "test_function_deprecated_not_used": [
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "TestDeprecatedChecker",
        "test_function_deprecated_not_used"
      ]
    ]
  ],
  "test_function_deprecated_kwarg_only": [
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "TestDeprecatedChecker",
        "test_function_deprecated_kwarg_only"
      ]
    ]
  ],
  "test_method_deprecated_arg": [
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "TestDeprecatedChecker",
        "test_method_deprecated_arg"
      ]
    ]
  ],
  "test_method_deprecated_kwarg": [
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "TestDeprecatedChecker",
        "test_method_deprecated_kwarg"
      ]
    ]
  ],
  "test_method_deprecated_not_used": [
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "TestDeprecatedChecker",
        "test_method_deprecated_not_used"
      ]
    ]
  ],
  "test_method_deprecated_kwarg_only": [
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "TestDeprecatedChecker",
        "test_method_deprecated_kwarg_only"
      ]
    ]
  ],
  "test_function_deprecated_arg_kwargs": [
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "TestDeprecatedChecker",
        "test_function_deprecated_arg_kwargs"
      ]
    ]
  ],
  "test_function_deprecated_kwarg_kwarg": [
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "TestDeprecatedChecker",
        "test_function_deprecated_kwarg_kwarg"
      ]
    ]
  ],
  "test_method_deprecated_arg_kwargs": [
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "TestDeprecatedChecker",
        "test_method_deprecated_arg_kwargs"
      ]
    ]
  ],
  "test_method_deprecated_kwarg_kwarg": [
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "TestDeprecatedChecker",
        "test_method_deprecated_kwarg_kwarg"
      ]
    ]
  ],
  "test_class_deprecated_arguments": [
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "TestDeprecatedChecker",
        "test_class_deprecated_arguments"
      ]
    ]
  ],
  "test_deprecated_module": [
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "TestDeprecatedChecker",
        "test_deprecated_module"
      ]
    ]
  ],
  "test_deprecated_module_from": [
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "TestDeprecatedChecker",
        "test_deprecated_module_from"
      ]
    ]
  ],
  "test_deprecated_class_import_from": [
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "TestDeprecatedChecker",
        "test_deprecated_class_import_from"
      ]
    ]
  ],
  "test_deprecated_class_import": [
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "TestDeprecatedChecker",
        "test_deprecated_class_import"
      ]
    ]
  ],
  "test_deprecated_class_call": [
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "TestDeprecatedChecker",
        "test_deprecated_class_call"
      ]
    ]
  ],
  "test_deprecated_decorator": [
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "TestDeprecatedChecker",
        "test_deprecated_decorator"
      ]
    ]
  ],
  "test_deprecated_decorator_with_arguments": [
    [
      "tests/checkers/unittest_deprecated.py",
      [
        "TestDeprecatedChecker",
        "test_deprecated_decorator_with_arguments"
      ]
    ]
  ],
  "test_raising_bad_type_python3": [
    [
      "tests/checkers/unittest_exceptions.py",
      [
        "TestExceptionsChecker",
        "test_raising_bad_type_python3"
      ]
    ]
  ],
  "test_bad_exception_context_function": [
    [
      "tests/checkers/unittest_exceptions.py",
      [
        "TestExceptionsChecker",
        "test_bad_exception_context_function"
      ]
    ]
  ],
  "testSingleLineIfStmts": [
    [
      "tests/checkers/unittest_format.py",
      [
        "TestMultiStatementLine",
        "testSingleLineIfStmts"
      ]
    ]
  ],
  "testSingleLineClassStmts": [
    [
      "tests/checkers/unittest_format.py",
      [
        "TestMultiStatementLine",
        "testSingleLineClassStmts"
      ]
    ]
  ],
  "testTryExceptFinallyNoMultipleStatement": [
    [
      "tests/checkers/unittest_format.py",
      [
        "TestMultiStatementLine",
        "testTryExceptFinallyNoMultipleStatement"
      ]
    ]
  ],
  "visitFirst": [
    [
      "tests/checkers/unittest_format.py",
      [
        "TestMultiStatementLine",
        "visitFirst"
      ]
    ]
  ],
  "test_ellipsis_is_ignored": [
    [
      "tests/checkers/unittest_format.py",
      [
        "TestMultiStatementLine",
        "test_ellipsis_is_ignored"
      ]
    ]
  ],
  "testCheckKeywordParensHandlesValidCases": [
    [
      "tests/checkers/unittest_format.py",
      [
        "TestSuperfluousParentheses",
        "testCheckKeywordParensHandlesValidCases"
      ]
    ]
  ],
  "testCheckKeywordParensHandlesUnnecessaryParens": [
    [
      "tests/checkers/unittest_format.py",
      [
        "TestSuperfluousParentheses",
        "testCheckKeywordParensHandlesUnnecessaryParens"
      ]
    ]
  ],
  "testNoSuperfluousParensWalrusOperatorIf": [
    [
      "tests/checkers/unittest_format.py",
      [
        "TestSuperfluousParentheses",
        "testNoSuperfluousParensWalrusOperatorIf"
      ]
    ]
  ],
  "testPositiveSuperfluousParensWalrusOperatorIf": [
    [
      "tests/checkers/unittest_format.py",
      [
        "TestSuperfluousParentheses",
        "testPositiveSuperfluousParensWalrusOperatorIf"
      ]
    ]
  ],
  "testNoSuperfluousParensWalrusOperatorNot": [
    [
      "tests/checkers/unittest_format.py",
      [
        "TestSuperfluousParentheses",
        "testNoSuperfluousParensWalrusOperatorNot"
      ]
    ]
  ],
  "testCheckIfArgsAreNotUnicode": [
    [
      "tests/checkers/unittest_format.py",
      [
        "TestSuperfluousParentheses",
        "testCheckIfArgsAreNotUnicode"
      ]
    ]
  ],
  "testFuturePrintStatementWithoutParensWarning": [
    [
      "tests/checkers/unittest_format.py",
      [
        "TestSuperfluousParentheses",
        "testFuturePrintStatementWithoutParensWarning"
      ]
    ]
  ],
  "testKeywordParensFalsePositive": [
    [
      "tests/checkers/unittest_format.py",
      [
        "TestSuperfluousParentheses",
        "testKeywordParensFalsePositive"
      ]
    ]
  ],
  "test_encoding_token": [
    [
      "tests/checkers/unittest_format.py",
      [
        "TestCheckSpace",
        "test_encoding_token"
      ]
    ]
  ],
  "test_disable_global_option_end_of_line": [
    [
      "tests/checkers/unittest_format.py",
      [
        "test_disable_global_option_end_of_line"
      ]
    ]
  ],
  "test_import_outside_toplevel": [
    [
      "tests/checkers/unittest_imports.py",
      [
        "TestImportsChecker",
        "test_import_outside_toplevel"
      ]
    ]
  ],
  "test_import_error_skipped": [
    [
      "tests/checkers/unittest_imports.py",
      [
        "TestImportsChecker",
        "test_import_error_skipped"
      ]
    ]
  ],
  "test_reimported_same_line": [
    [
      "tests/checkers/unittest_imports.py",
      [
        "TestImportsChecker",
        "test_reimported_same_line"
      ]
    ]
  ],
  "test_relative_beyond_top_level": [
    [
      "tests/checkers/unittest_imports.py",
      [
        "TestImportsChecker",
        "test_relative_beyond_top_level"
      ]
    ]
  ],
  "test_wildcard_import_init": [
    [
      "tests/checkers/unittest_imports.py",
      [
        "TestImportsChecker",
        "test_wildcard_import_init"
      ]
    ]
  ],
  "test_wildcard_import_non_init": [
    [
      "tests/checkers/unittest_imports.py",
      [
        "TestImportsChecker",
        "test_wildcard_import_non_init"
      ]
    ]
  ],
  "test_detects_standard_logging_module": [
    [
      "tests/checkers/unittest_logging.py",
      [
        "TestLoggingModuleDetection",
        "test_detects_standard_logging_module"
      ]
    ]
  ],
  "test_dont_crash_on_invalid_format_string": [
    [
      "tests/checkers/unittest_logging.py",
      [
        "TestLoggingModuleDetection",
        "test_dont_crash_on_invalid_format_string"
      ]
    ]
  ],
  "test_detects_renamed_standard_logging_module": [
    [
      "tests/checkers/unittest_logging.py",
      [
        "TestLoggingModuleDetection",
        "test_detects_renamed_standard_logging_module"
      ]
    ]
  ],
  "test_nonstandard_logging_module": [
    [
      "tests/checkers/unittest_logging.py",
      [
        "TestLoggingModuleDetection",
        "test_nonstandard_logging_module"
      ]
    ]
  ],
  "_assert_logging_format_no_messages": [
    [
      "tests/checkers/unittest_logging.py",
      [
        "TestLoggingModuleDetection",
        "_assert_logging_format_no_messages"
      ]
    ]
  ],
  "_assert_logging_format_message": [
    [
      "tests/checkers/unittest_logging.py",
      [
        "TestLoggingModuleDetection",
        "_assert_logging_format_message"
      ]
    ]
  ],
  "_assert_logging_format_too_few_args": [
    [
      "tests/checkers/unittest_logging.py",
      [
        "TestLoggingModuleDetection",
        "_assert_logging_format_too_few_args"
      ]
    ]
  ],
  "_assert_logging_format_too_many_args": [
    [
      "tests/checkers/unittest_logging.py",
      [
        "TestLoggingModuleDetection",
        "_assert_logging_format_too_many_args"
      ]
    ]
  ],
  "test_brace_format_style_matching_arguments": [
    [
      "tests/checkers/unittest_logging.py",
      [
        "TestLoggingModuleDetection",
        "test_brace_format_style_matching_arguments"
      ]
    ]
  ],
  "test_brace_format_style_too_few_args": [
    [
      "tests/checkers/unittest_logging.py",
      [
        "TestLoggingModuleDetection",
        "test_brace_format_style_too_few_args"
      ]
    ]
  ],
  "test_brace_format_style_not_enough_arguments": [
    [
      "tests/checkers/unittest_logging.py",
      [
        "TestLoggingModuleDetection",
        "test_brace_format_style_not_enough_arguments"
      ]
    ]
  ],
  "test_fstr_not_new_format_style_matching_arguments": [
    [
      "tests/checkers/unittest_logging.py",
      [
        "TestLoggingModuleDetection",
        "test_fstr_not_new_format_style_matching_arguments"
      ]
    ]
  ],
  "test_fixme_with_message": [
    [
      "tests/checkers/unittest_misc.py",
      [
        "TestFixme",
        "test_fixme_with_message"
      ]
    ]
  ],
  "test_todo_without_message": [
    [
      "tests/checkers/unittest_misc.py",
      [
        "TestFixme",
        "test_todo_without_message"
      ]
    ]
  ],
  "test_xxx_without_space": [
    [
      "tests/checkers/unittest_misc.py",
      [
        "TestFixme",
        "test_xxx_without_space"
      ]
    ]
  ],
  "test_xxx_middle": [
    [
      "tests/checkers/unittest_misc.py",
      [
        "TestFixme",
        "test_xxx_middle"
      ]
    ]
  ],
  "test_without_space_fixme": [
    [
      "tests/checkers/unittest_misc.py",
      [
        "TestFixme",
        "test_without_space_fixme"
      ]
    ]
  ],
  "test_absent_codetag": [
    [
      "tests/checkers/unittest_misc.py",
      [
        "TestFixme",
        "test_absent_codetag"
      ]
    ]
  ],
  "test_other_present_codetag": [
    [
      "tests/checkers/unittest_misc.py",
      [
        "TestFixme",
        "test_other_present_codetag"
      ]
    ]
  ],
  "test_issue_2321_should_not_trigger": [
    [
      "tests/checkers/unittest_misc.py",
      [
        "TestFixme",
        "test_issue_2321_should_not_trigger"
      ]
    ]
  ],
  "test_issue_2321_should_trigger": [
    [
      "tests/checkers/unittest_misc.py",
      [
        "TestFixme",
        "test_issue_2321_should_trigger"
      ]
    ]
  ],
  "test_dont_trigger_on_todoist": [
    [
      "tests/checkers/unittest_misc.py",
      [
        "TestFixme",
        "test_dont_trigger_on_todoist"
      ]
    ]
  ],
  "check_bad_builtin": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "check_bad_builtin"
      ]
    ]
  ],
  "test_bad_builtins": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_bad_builtins"
      ]
    ]
  ],
  "as_iterable_in_for_loop_test": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "as_iterable_in_for_loop_test"
      ]
    ]
  ],
  "as_used_by_iterable_in_for_loop_test": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "as_used_by_iterable_in_for_loop_test"
      ]
    ]
  ],
  "as_iterable_in_genexp_test": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "as_iterable_in_genexp_test"
      ]
    ]
  ],
  "as_iterable_in_starred_context": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "as_iterable_in_starred_context"
      ]
    ]
  ],
  "as_iterable_in_listcomp_test": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "as_iterable_in_listcomp_test"
      ]
    ]
  ],
  "as_iterable_in_yield_from": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "as_iterable_in_yield_from"
      ]
    ]
  ],
  "as_used_in_variant_in_genexp_test": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "as_used_in_variant_in_genexp_test"
      ]
    ]
  ],
  "as_used_in_variant_in_listcomp_test": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "as_used_in_variant_in_listcomp_test"
      ]
    ]
  ],
  "as_argument_to_callable_constructor_test": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "as_argument_to_callable_constructor_test"
      ]
    ]
  ],
  "as_argument_to_materialized_filter": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "as_argument_to_materialized_filter"
      ]
    ]
  ],
  "as_argument_to_random_fxn_test": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "as_argument_to_random_fxn_test"
      ]
    ]
  ],
  "as_argument_to_str_join_test": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "as_argument_to_str_join_test"
      ]
    ]
  ],
  "as_argument_to_itertools_functions": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "as_argument_to_itertools_functions"
      ]
    ]
  ],
  "as_argument_to_zip_test": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "as_argument_to_zip_test"
      ]
    ]
  ],
  "as_argument_to_map_test": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "as_argument_to_map_test"
      ]
    ]
  ],
  "as_iterable_in_unpacking": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "as_iterable_in_unpacking"
      ]
    ]
  ],
  "as_assignment": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "as_assignment"
      ]
    ]
  ],
  "iterating_context_tests": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "iterating_context_tests"
      ]
    ]
  ],
  "test_dict_subclasses_methods_in_iterating_context": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_dict_subclasses_methods_in_iterating_context"
      ]
    ]
  ],
  "test_dict_methods_in_iterating_context": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_dict_methods_in_iterating_context"
      ]
    ]
  ],
  "test_map_in_iterating_context": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_map_in_iterating_context"
      ]
    ]
  ],
  "test_zip_in_iterating_context": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_zip_in_iterating_context"
      ]
    ]
  ],
  "test_range_in_iterating_context": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_range_in_iterating_context"
      ]
    ]
  ],
  "test_filter_in_iterating_context": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_filter_in_iterating_context"
      ]
    ]
  ],
  "defined_method_test": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "defined_method_test"
      ]
    ]
  ],
  "test_delslice_method": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_delslice_method"
      ]
    ]
  ],
  "test_getslice_method": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_getslice_method"
      ]
    ]
  ],
  "test_setslice_method": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_setslice_method"
      ]
    ]
  ],
  "test_coerce_method": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_coerce_method"
      ]
    ]
  ],
  "test_oct_method": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_oct_method"
      ]
    ]
  ],
  "test_hex_method": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_hex_method"
      ]
    ]
  ],
  "test_nonzero_method": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_nonzero_method"
      ]
    ]
  ],
  "test_cmp_method": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_cmp_method"
      ]
    ]
  ],
  "test_div_method": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_div_method"
      ]
    ]
  ],
  "test_idiv_method": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_idiv_method"
      ]
    ]
  ],
  "test_rdiv_method": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_rdiv_method"
      ]
    ]
  ],
  "test_eq_and_hash_method": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_eq_and_hash_method"
      ]
    ]
  ],
  "test_eq_and_hash_is_none": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_eq_and_hash_is_none"
      ]
    ]
  ],
  "test_eq_without_hash_method": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_eq_without_hash_method"
      ]
    ]
  ],
  "test_relative_import": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_relative_import"
      ]
    ]
  ],
  "test_relative_from_import": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_relative_from_import"
      ]
    ]
  ],
  "test_absolute_import": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_absolute_import"
      ]
    ]
  ],
  "test_import_star_module_level": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_import_star_module_level"
      ]
    ]
  ],
  "test_division": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_division"
      ]
    ]
  ],
  "test_division_with_future_statement": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_division_with_future_statement"
      ]
    ]
  ],
  "test_floor_division": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_floor_division"
      ]
    ]
  ],
  "test_division_by_float": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_division_by_float"
      ]
    ]
  ],
  "test_division_different_types": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_division_different_types"
      ]
    ]
  ],
  "test_dict_iter_method": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_dict_iter_method"
      ]
    ]
  ],
  "test_dict_iter_method_on_dict": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_dict_iter_method_on_dict"
      ]
    ]
  ],
  "test_dict_not_iter_method": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_dict_not_iter_method"
      ]
    ]
  ],
  "test_dict_view_method": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_dict_view_method"
      ]
    ]
  ],
  "test_dict_viewkeys": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_dict_viewkeys"
      ]
    ]
  ],
  "test_next_method": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_next_method"
      ]
    ]
  ],
  "test_not_next_method": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_not_next_method"
      ]
    ]
  ],
  "test_metaclass_assignment": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_metaclass_assignment"
      ]
    ]
  ],
  "test_metaclass_global_assignment": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_metaclass_global_assignment"
      ]
    ]
  ],
  "test_xreadlines_attribute": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_xreadlines_attribute"
      ]
    ]
  ],
  "test_exception_message_attribute": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_exception_message_attribute"
      ]
    ]
  ],
  "test_normal_message_attribute": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_normal_message_attribute"
      ]
    ]
  ],
  "test_invalid_codec": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_invalid_codec"
      ]
    ]
  ],
  "test_valid_codec": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_valid_codec"
      ]
    ]
  ],
  "test_visit_call_with_kwarg": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_visit_call_with_kwarg"
      ]
    ]
  ],
  "test_invalid_open_codec": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_invalid_open_codec"
      ]
    ]
  ],
  "test_valid_open_codec": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_valid_open_codec"
      ]
    ]
  ],
  "test_using_cmp_argument": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_using_cmp_argument"
      ]
    ]
  ],
  "test_sys_maxint": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_sys_maxint"
      ]
    ]
  ],
  "test_itertools_izip": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_itertools_izip"
      ]
    ]
  ],
  "test_deprecated_types_fields": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_deprecated_types_fields"
      ]
    ]
  ],
  "test_sys_maxint_imort_from": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_sys_maxint_imort_from"
      ]
    ]
  ],
  "test_object_maxint": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_object_maxint"
      ]
    ]
  ],
  "test_bad_import": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_bad_import"
      ]
    ]
  ],
  "test_bad_import_turtle": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_bad_import_turtle"
      ]
    ]
  ],
  "test_bad_import_dbm": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_bad_import_dbm"
      ]
    ]
  ],
  "test_bad_import_conditional": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_bad_import_conditional"
      ]
    ]
  ],
  "test_bad_import_try_except_handler": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_bad_import_try_except_handler"
      ]
    ]
  ],
  "test_bad_import_try": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_bad_import_try"
      ]
    ]
  ],
  "test_bad_import_try_finally": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_bad_import_try_finally"
      ]
    ]
  ],
  "test_bad_import_from": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_bad_import_from"
      ]
    ]
  ],
  "test_bad_string_attribute": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_bad_string_attribute"
      ]
    ]
  ],
  "test_bad_operator_attribute": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_bad_operator_attribute"
      ]
    ]
  ],
  "test_comprehension_escape": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_comprehension_escape"
      ]
    ]
  ],
  "test_comprehension_escape_newly_introduced": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_comprehension_escape_newly_introduced"
      ]
    ]
  ],
  "test_exception_escape": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_exception_escape"
      ]
    ]
  ],
  "test_bad_sys_attribute": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_bad_sys_attribute"
      ]
    ]
  ],
  "test_bad_urllib_attribute": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_bad_urllib_attribute"
      ]
    ]
  ],
  "test_ok_string_attribute": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_ok_string_attribute"
      ]
    ]
  ],
  "test_bad_string_call": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_bad_string_call"
      ]
    ]
  ],
  "test_ok_shadowed_call": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_ok_shadowed_call"
      ]
    ]
  ],
  "test_ok_string_call": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_ok_string_call"
      ]
    ]
  ],
  "test_bad_string_import_from": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_bad_string_import_from"
      ]
    ]
  ],
  "test_ok_string_import_from": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_ok_string_import_from"
      ]
    ]
  ],
  "test_bad_str_translate_call_string_literal": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_bad_str_translate_call_string_literal"
      ]
    ]
  ],
  "test_bad_str_translate_call_variable": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_bad_str_translate_call_variable"
      ]
    ]
  ],
  "test_bad_str_translate_call_infer_str": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_bad_str_translate_call_infer_str"
      ]
    ]
  ],
  "test_ok_str_translate_call_integer": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_ok_str_translate_call_integer"
      ]
    ]
  ],
  "test_ok_str_translate_call_keyword": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_ok_str_translate_call_keyword"
      ]
    ]
  ],
  "test_ok_str_translate_call_not_str": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_ok_str_translate_call_not_str"
      ]
    ]
  ],
  "test_non_py2_conditional": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_non_py2_conditional"
      ]
    ]
  ],
  "test_six_conditional": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_six_conditional"
      ]
    ]
  ],
  "test_versioninfo_conditional": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_versioninfo_conditional"
      ]
    ]
  ],
  "test_versioninfo_tuple_conditional": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_versioninfo_tuple_conditional"
      ]
    ]
  ],
  "test_six_ifexp_conditional": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_six_ifexp_conditional"
      ]
    ]
  ],
  "test_next_defined": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_next_defined"
      ]
    ]
  ],
  "test_next_defined_too_many_args": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_next_defined_too_many_args"
      ]
    ]
  ],
  "test_next_defined_static_method_too_many_args": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_next_defined_static_method_too_many_args"
      ]
    ]
  ],
  "test_next_defined_static_method": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_next_defined_static_method"
      ]
    ]
  ],
  "test_next_defined_class_method": [
    [
      "tests/checkers/unittest_python3.py",
      [
        "TestPython3Checker",
        "test_next_defined_class_method"
      ]
    ]
  ],
  "test_class_tree_detection": [
    [
      "tests/checkers/unittest_refactoring.py",
      [
        "test_class_tree_detection"
      ]
    ]
  ],
  "test_ignore_comments": [
    [
      "tests/checkers/unittest_similar.py",
      [
        "test_ignore_comments"
      ]
    ]
  ],
  "test_ignore_docsrings": [
    [
      "tests/checkers/unittest_similar.py",
      [
        "test_ignore_docsrings"
      ]
    ]
  ],
  "test_ignore_imports": [
    [
      "tests/checkers/unittest_similar.py",
      [
        "test_ignore_imports"
      ]
    ]
  ],
  "test_multiline_imports": [
    [
      "tests/checkers/unittest_similar.py",
      [
        "test_multiline_imports"
      ]
    ]
  ],
  "test_ignore_multiline_imports": [
    [
      "tests/checkers/unittest_similar.py",
      [
        "test_ignore_multiline_imports"
      ]
    ]
  ],
  "test_ignore_signatures_fail": [
    [
      "tests/checkers/unittest_similar.py",
      [
        "test_ignore_signatures_fail"
      ]
    ]
  ],
  "test_ignore_signatures_pass": [
    [
      "tests/checkers/unittest_similar.py",
      [
        "test_ignore_signatures_pass"
      ]
    ]
  ],
  "test_no_hide_code_with_imports": [
    [
      "tests/checkers/unittest_similar.py",
      [
        "test_no_hide_code_with_imports"
      ]
    ]
  ],
  "test_ignore_nothing": [
    [
      "tests/checkers/unittest_similar.py",
      [
        "test_ignore_nothing"
      ]
    ]
  ],
  "test_lines_without_meaningful_content_do_not_trigger_similarity": [
    [
      "tests/checkers/unittest_similar.py",
      [
        "test_lines_without_meaningful_content_do_not_trigger_similarity"
      ]
    ]
  ],
  "test_help": [
    [
      "tests/checkers/unittest_similar.py",
      [
        "test_help"
      ]
    ]
  ],
  "test_no_args": [
    [
      "tests/checkers/unittest_similar.py",
      [
        "test_no_args"
      ]
    ],
    [
      "tests/lint/unittest_lint.py",
      [
        "test_no_args"
      ]
    ]
  ],
  "test_get_map_data": [
    [
      "tests/checkers/unittest_similar.py",
      [
        "test_get_map_data"
      ]
    ]
  ],
  "_get_msg_suggestions": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker",
        "_get_msg_suggestions"
      ]
    ]
  ],
  "test_check_bad_coment": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker",
        "test_check_bad_coment"
      ]
    ]
  ],
  "test_check_bad_coment_custom_suggestion_count": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker",
        "test_check_bad_coment_custom_suggestion_count"
      ]
    ]
  ],
  "test_check_bad_docstring": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker",
        "test_check_bad_docstring"
      ]
    ]
  ],
  "test_invalid_docstring_characters": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker",
        "test_invalid_docstring_characters"
      ]
    ]
  ],
  "test_skip_shebangs": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker",
        "test_skip_shebangs"
      ]
    ]
  ],
  "test_skip_python_coding_comments": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker",
        "test_skip_python_coding_comments"
      ]
    ]
  ],
  "test_skip_top_level_pylint_enable_disable_comments": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker",
        "test_skip_top_level_pylint_enable_disable_comments"
      ]
    ]
  ],
  "test_skip_words_with_numbers": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker",
        "test_skip_words_with_numbers"
      ]
    ]
  ],
  "test_skip_wiki_words": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker",
        "test_skip_wiki_words"
      ]
    ]
  ],
  "test_skip_camel_cased_words": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker",
        "test_skip_camel_cased_words"
      ]
    ]
  ],
  "test_skip_words_with_underscores": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker",
        "test_skip_words_with_underscores"
      ]
    ]
  ],
  "test_skip_email_address": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker",
        "test_skip_email_address"
      ]
    ]
  ],
  "test_skip_urls": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker",
        "test_skip_urls"
      ]
    ]
  ],
  "test_skip_sphinx_directives": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker",
        "test_skip_sphinx_directives"
      ]
    ]
  ],
  "test_skip_sphinx_directives_2": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker",
        "test_skip_sphinx_directives_2"
      ]
    ]
  ],
  "test_skip_tool_directives_at_beginning_of_comments_but_still_raise_error_if_directive_appears_later_in_comment": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker",
        "test_skip_tool_directives_at_beginning_of_comments_but_still_raise_error_if_directive_appears_later_in_comment"
      ]
    ]
  ],
  "test_skip_code_flanked_in_double_backticks": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker",
        "test_skip_code_flanked_in_double_backticks"
      ]
    ]
  ],
  "test_skip_code_flanked_in_single_backticks": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker",
        "test_skip_code_flanked_in_single_backticks"
      ]
    ]
  ],
  "test_skip_directives_specified_in_pylintrc": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker",
        "test_skip_directives_specified_in_pylintrc"
      ]
    ]
  ],
  "test_handle_words_joined_by_forward_slash": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker",
        "test_handle_words_joined_by_forward_slash"
      ]
    ]
  ],
  "test_more_than_one_error_in_same_line_for_same_word_on_docstring": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker",
        "test_more_than_one_error_in_same_line_for_same_word_on_docstring"
      ]
    ]
  ],
  "test_more_than_one_error_in_same_line_for_same_word_on_comment": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker",
        "test_more_than_one_error_in_same_line_for_same_word_on_comment"
      ]
    ]
  ],
  "test_docstring_lines_that_look_like_comments_1": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker",
        "test_docstring_lines_that_look_like_comments_1"
      ]
    ]
  ],
  "test_docstring_lines_that_look_like_comments_2": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker",
        "test_docstring_lines_that_look_like_comments_2"
      ]
    ]
  ],
  "test_docstring_lines_that_look_like_comments_3": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker",
        "test_docstring_lines_that_look_like_comments_3"
      ]
    ]
  ],
  "test_docstring_lines_that_look_like_comments_4": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker",
        "test_docstring_lines_that_look_like_comments_4"
      ]
    ]
  ],
  "test_docstring_lines_that_look_like_comments_5": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker",
        "test_docstring_lines_that_look_like_comments_5"
      ]
    ]
  ],
  "test_docstring_lines_that_look_like_comments_6": [
    [
      "tests/checkers/unittest_spelling.py",
      [
        "TestSpellingChecker",
        "test_docstring_lines_that_look_like_comments_6"
      ]
    ]
  ],
  "_add_transform": [
    [
      "tests/checkers/unittest_stdlib.py",
      [
        "_add_transform"
      ]
    ]
  ],
  "test_deprecated_no_qname_on_unexpected_nodes": [
    [
      "tests/checkers/unittest_stdlib.py",
      [
        "TestStdlibChecker",
        "test_deprecated_no_qname_on_unexpected_nodes"
      ]
    ]
  ],
  "test_copy_environ": [
    [
      "tests/checkers/unittest_stdlib.py",
      [
        "TestStdlibChecker",
        "test_copy_environ"
      ]
    ]
  ],
  "test_copy_environ_hidden": [
    [
      "tests/checkers/unittest_stdlib.py",
      [
        "TestStdlibChecker",
        "test_copy_environ_hidden"
      ]
    ]
  ],
  "test_copy_dict": [
    [
      "tests/checkers/unittest_stdlib.py",
      [
        "TestStdlibChecker",
        "test_copy_dict"
      ]
    ]
  ],
  "test_copy_uninferable": [
    [
      "tests/checkers/unittest_stdlib.py",
      [
        "TestStdlibChecker",
        "test_copy_uninferable"
      ]
    ]
  ],
  "test_deepcopy_environ": [
    [
      "tests/checkers/unittest_stdlib.py",
      [
        "TestStdlibChecker",
        "test_deepcopy_environ"
      ]
    ]
  ],
  "test_format_bytes": [
    [
      "tests/checkers/unittest_strings.py",
      [
        "TestStringChecker",
        "test_format_bytes"
      ]
    ]
  ],
  "test_format_types": [
    [
      "tests/checkers/unittest_strings.py",
      [
        "TestStringChecker",
        "test_format_types"
      ]
    ]
  ],
  "test_str_eval": [
    [
      "tests/checkers/unittest_strings.py",
      [
        "test_str_eval"
      ]
    ]
  ],
  "test_no_member_in_getattr": [
    [
      "tests/checkers/unittest_typecheck.py",
      [
        "TestTypeChecker",
        "test_no_member_in_getattr"
      ]
    ]
  ],
  "test_no_member_in_getattr_ignored": [
    [
      "tests/checkers/unittest_typecheck.py",
      [
        "TestTypeChecker",
        "test_no_member_in_getattr_ignored"
      ]
    ]
  ],
  "test_ignored_modules_invalid_pattern": [
    [
      "tests/checkers/unittest_typecheck.py",
      [
        "TestTypeChecker",
        "test_ignored_modules_invalid_pattern"
      ]
    ]
  ],
  "test_ignored_modules_root_one_applies_as_well": [
    [
      "tests/checkers/unittest_typecheck.py",
      [
        "TestTypeChecker",
        "test_ignored_modules_root_one_applies_as_well"
      ]
    ]
  ],
  "test_ignored_modules_patterns": [
    [
      "tests/checkers/unittest_typecheck.py",
      [
        "TestTypeChecker",
        "test_ignored_modules_patterns"
      ]
    ]
  ],
  "test_ignored_classes_no_recursive_pattern": [
    [
      "tests/checkers/unittest_typecheck.py",
      [
        "TestTypeChecker",
        "test_ignored_classes_no_recursive_pattern"
      ]
    ]
  ],
  "test_ignored_classes_qualified_name": [
    [
      "tests/checkers/unittest_typecheck.py",
      [
        "TestTypeChecker",
        "test_ignored_classes_qualified_name"
      ]
    ]
  ],
  "test_ignored_classes_only_name": [
    [
      "tests/checkers/unittest_typecheck.py",
      [
        "TestTypeChecker",
        "test_ignored_classes_only_name"
      ]
    ]
  ],
  "test_nomember_on_c_extension_error_msg": [
    [
      "tests/checkers/unittest_typecheck.py",
      [
        "TestTypeChecker",
        "test_nomember_on_c_extension_error_msg"
      ]
    ]
  ],
  "test_nomember_on_c_extension_info_msg": [
    [
      "tests/checkers/unittest_typecheck.py",
      [
        "TestTypeChecker",
        "test_nomember_on_c_extension_info_msg"
      ]
    ]
  ],
  "test_custom_context_manager": [
    [
      "tests/checkers/unittest_typecheck.py",
      [
        "TestTypeChecker",
        "test_custom_context_manager"
      ]
    ]
  ],
  "test_invalid_metaclass": [
    [
      "tests/checkers/unittest_typecheck.py",
      [
        "TestTypeChecker",
        "test_invalid_metaclass"
      ]
    ]
  ],
  "test_invalid_metaclass_function_metaclasses": [
    [
      "tests/checkers/unittest_typecheck.py",
      [
        "TestTypeChecker",
        "test_invalid_metaclass_function_metaclasses"
      ]
    ]
  ],
  "test_typing_namedtuple_not_callable_issue1295": [
    [
      "tests/checkers/unittest_typecheck.py",
      [
        "TestTypeChecker",
        "test_typing_namedtuple_not_callable_issue1295"
      ]
    ]
  ],
  "test_typing_namedtuple_unsubscriptable_object_issue1295": [
    [
      "tests/checkers/unittest_typecheck.py",
      [
        "TestTypeChecker",
        "test_typing_namedtuple_unsubscriptable_object_issue1295"
      ]
    ]
  ],
  "test_staticmethod_multiprocessing_call": [
    [
      "tests/checkers/unittest_typecheck.py",
      [
        "TestTypeChecker",
        "test_staticmethod_multiprocessing_call"
      ]
    ]
  ],
  "test_not_callable_uninferable_property": [
    [
      "tests/checkers/unittest_typecheck.py",
      [
        "TestTypeChecker",
        "test_not_callable_uninferable_property"
      ]
    ]
  ],
  "test_descriptor_call": [
    [
      "tests/checkers/unittest_typecheck.py",
      [
        "TestTypeChecker",
        "test_descriptor_call"
      ]
    ]
  ],
  "test_unknown_parent": [
    [
      "tests/checkers/unittest_typecheck.py",
      [
        "TestTypeChecker",
        "test_unknown_parent"
      ]
    ]
  ],
  "test_issue3882_class_decorators": [
    [
      "tests/checkers/unittest_typecheck.py",
      [
        "TestTypeCheckerOnDecorators",
        "test_issue3882_class_decorators"
      ]
    ]
  ],
  "getitem_on_modules": [
    [
      "tests/checkers/unittest_typecheck.py",
      [
        "TestTypeCheckerOnDecorators",
        "getitem_on_modules"
      ]
    ]
  ],
  "typing_objects_are_subscriptable": [
    [
      "tests/checkers/unittest_typecheck.py",
      [
        "TestTypeCheckerOnDecorators",
        "typing_objects_are_subscriptable"
      ]
    ]
  ],
  "decorated_by_a_subscriptable_class": [
    [
      "tests/checkers/unittest_typecheck.py",
      [
        "TestTypeCheckerOnDecorators",
        "decorated_by_a_subscriptable_class"
      ]
    ]
  ],
  "decorated_by_subscriptable_then_unsubscriptable_class": [
    [
      "tests/checkers/unittest_typecheck.py",
      [
        "TestTypeCheckerOnDecorators",
        "decorated_by_subscriptable_then_unsubscriptable_class"
      ]
    ]
  ],
  "decorated_by_unsubscriptable_then_subscriptable_class": [
    [
      "tests/checkers/unittest_typecheck.py",
      [
        "TestTypeCheckerOnDecorators",
        "decorated_by_unsubscriptable_then_subscriptable_class"
      ]
    ]
  ],
  "decorated_by_an_unsubscriptable_class": [
    [
      "tests/checkers/unittest_typecheck.py",
      [
        "TestTypeCheckerOnDecorators",
        "decorated_by_an_unsubscriptable_class"
      ]
    ]
  ],
  "testIsBuiltin": [
    [
      "tests/checkers/unittest_utils.py",
      [
        "testIsBuiltin"
      ]
    ]
  ],
  "testGetArgumentFromCallError": [
    [
      "tests/checkers/unittest_utils.py",
      [
        "testGetArgumentFromCallError"
      ]
    ]
  ],
  "testGetArgumentFromCallExists": [
    [
      "tests/checkers/unittest_utils.py",
      [
        "testGetArgumentFromCallExists"
      ]
    ]
  ],
  "testGetArgumentFromCall": [
    [
      "tests/checkers/unittest_utils.py",
      [
        "testGetArgumentFromCall"
      ]
    ]
  ],
  "test_error_of_type": [
    [
      "tests/checkers/unittest_utils.py",
      [
        "test_error_of_type"
      ]
    ]
  ],
  "test_node_ignores_exception": [
    [
      "tests/checkers/unittest_utils.py",
      [
        "test_node_ignores_exception"
      ]
    ]
  ],
  "test_is_subclass_of_node_b_derived_from_node_a": [
    [
      "tests/checkers/unittest_utils.py",
      [
        "test_is_subclass_of_node_b_derived_from_node_a"
      ]
    ]
  ],
  "test_is_subclass_of_node_b_not_derived_from_node_a": [
    [
      "tests/checkers/unittest_utils.py",
      [
        "test_is_subclass_of_node_b_not_derived_from_node_a"
      ]
    ]
  ],
  "test_is_subclass_of_not_classdefs": [
    [
      "tests/checkers/unittest_utils.py",
      [
        "test_is_subclass_of_not_classdefs"
      ]
    ]
  ],
  "test_parse_format_method_string": [
    [
      "tests/checkers/unittest_utils.py",
      [
        "test_parse_format_method_string"
      ]
    ]
  ],
  "test_inherit_from_std_ex_recursive_definition": [
    [
      "tests/checkers/unittest_utils.py",
      [
        "test_inherit_from_std_ex_recursive_definition"
      ]
    ]
  ],
  "test_get_node_last_lineno_simple": [
    [
      "tests/checkers/unittest_utils.py",
      [
        "test_get_node_last_lineno_simple"
      ]
    ]
  ],
  "test_get_node_last_lineno_if_simple": [
    [
      "tests/checkers/unittest_utils.py",
      [
        "test_get_node_last_lineno_if_simple"
      ]
    ]
  ],
  "test_get_node_last_lineno_if_elseif_else": [
    [
      "tests/checkers/unittest_utils.py",
      [
        "test_get_node_last_lineno_if_elseif_else"
      ]
    ]
  ],
  "test_get_node_last_lineno_while": [
    [
      "tests/checkers/unittest_utils.py",
      [
        "test_get_node_last_lineno_while"
      ]
    ]
  ],
  "test_get_node_last_lineno_while_else": [
    [
      "tests/checkers/unittest_utils.py",
      [
        "test_get_node_last_lineno_while_else"
      ]
    ]
  ],
  "test_get_node_last_lineno_for": [
    [
      "tests/checkers/unittest_utils.py",
      [
        "test_get_node_last_lineno_for"
      ]
    ]
  ],
  "test_get_node_last_lineno_for_else": [
    [
      "tests/checkers/unittest_utils.py",
      [
        "test_get_node_last_lineno_for_else"
      ]
    ]
  ],
  "test_get_node_last_lineno_try": [
    [
      "tests/checkers/unittest_utils.py",
      [
        "test_get_node_last_lineno_try"
      ]
    ]
  ],
  "test_get_node_last_lineno_try_except_else": [
    [
      "tests/checkers/unittest_utils.py",
      [
        "test_get_node_last_lineno_try_except_else"
      ]
    ]
  ],
  "test_get_node_last_lineno_try_except_finally": [
    [
      "tests/checkers/unittest_utils.py",
      [
        "test_get_node_last_lineno_try_except_finally"
      ]
    ]
  ],
  "test_get_node_last_lineno_try_except_else_finally": [
    [
      "tests/checkers/unittest_utils.py",
      [
        "test_get_node_last_lineno_try_except_else_finally"
      ]
    ]
  ],
  "test_get_node_last_lineno_with": [
    [
      "tests/checkers/unittest_utils.py",
      [
        "test_get_node_last_lineno_with"
      ]
    ]
  ],
  "test_get_node_last_lineno_method": [
    [
      "tests/checkers/unittest_utils.py",
      [
        "test_get_node_last_lineno_method"
      ]
    ]
  ],
  "test_get_node_last_lineno_decorator": [
    [
      "tests/checkers/unittest_utils.py",
      [
        "test_get_node_last_lineno_decorator"
      ]
    ]
  ],
  "test_get_node_last_lineno_class": [
    [
      "tests/checkers/unittest_utils.py",
      [
        "test_get_node_last_lineno_class"
      ]
    ]
  ],
  "test_get_node_last_lineno_combined": [
    [
      "tests/checkers/unittest_utils.py",
      [
        "test_get_node_last_lineno_combined"
      ]
    ]
  ],
  "test_bitbucket_issue_78": [
    [
      "tests/checkers/unittest_variables.py",
      [
        "TestVariablesChecker",
        "test_bitbucket_issue_78"
      ]
    ]
  ],
  "test_no_name_in_module_skipped": [
    [
      "tests/checkers/unittest_variables.py",
      [
        "TestVariablesChecker",
        "test_no_name_in_module_skipped"
      ]
    ]
  ],
  "test_all_elements_without_parent": [
    [
      "tests/checkers/unittest_variables.py",
      [
        "TestVariablesChecker",
        "test_all_elements_without_parent"
      ]
    ]
  ],
  "test_redefined_builtin_ignored": [
    [
      "tests/checkers/unittest_variables.py",
      [
        "TestVariablesChecker",
        "test_redefined_builtin_ignored"
      ]
    ]
  ],
  "test_redefined_builtin_custom_modules": [
    [
      "tests/checkers/unittest_variables.py",
      [
        "TestVariablesChecker",
        "test_redefined_builtin_custom_modules"
      ]
    ]
  ],
  "test_redefined_builtin_modname_not_ignored": [
    [
      "tests/checkers/unittest_variables.py",
      [
        "TestVariablesChecker",
        "test_redefined_builtin_modname_not_ignored"
      ]
    ],
    [
      "tests/checkers/unittest_variables.py",
      [
        "TestVariablesCheckerWithTearDown",
        "test_redefined_builtin_modname_not_ignored"
      ]
    ]
  ],
  "test_redefined_builtin_in_function": [
    [
      "tests/checkers/unittest_variables.py",
      [
        "TestVariablesChecker",
        "test_redefined_builtin_in_function"
      ]
    ],
    [
      "tests/checkers/unittest_variables.py",
      [
        "TestVariablesCheckerWithTearDown",
        "test_redefined_builtin_in_function"
      ]
    ]
  ],
  "test_unassigned_global": [
    [
      "tests/checkers/unittest_variables.py",
      [
        "TestVariablesChecker",
        "test_unassigned_global"
      ]
    ]
  ],
  "test_listcomp_in_decorator": [
    [
      "tests/checkers/unittest_variables.py",
      [
        "TestVariablesChecker",
        "test_listcomp_in_decorator"
      ]
    ]
  ],
  "test_listcomp_in_ancestors": [
    [
      "tests/checkers/unittest_variables.py",
      [
        "TestVariablesChecker",
        "test_listcomp_in_ancestors"
      ]
    ]
  ],
  "test_return_type_annotation": [
    [
      "tests/checkers/unittest_variables.py",
      [
        "TestVariablesChecker",
        "test_return_type_annotation"
      ]
    ]
  ],
  "teardown_method": [
    [
      "tests/checkers/unittest_variables.py",
      [
        "TestVariablesCheckerWithTearDown",
        "teardown_method"
      ]
    ]
  ],
  "test_custom_callback_string": [
    [
      "tests/checkers/unittest_variables.py",
      [
        "TestVariablesCheckerWithTearDown",
        "test_custom_callback_string"
      ]
    ]
  ],
  "test_import_as_underscore": [
    [
      "tests/checkers/unittest_variables.py",
      [
        "TestVariablesCheckerWithTearDown",
        "test_import_as_underscore"
      ]
    ]
  ],
  "test_lambda_in_classdef": [
    [
      "tests/checkers/unittest_variables.py",
      [
        "TestVariablesCheckerWithTearDown",
        "test_lambda_in_classdef"
      ]
    ]
  ],
  "test_nested_lambda": [
    [
      "tests/checkers/unittest_variables.py",
      [
        "TestVariablesCheckerWithTearDown",
        "test_nested_lambda"
      ]
    ]
  ],
  "test_ignored_argument_names_no_message": [
    [
      "tests/checkers/unittest_variables.py",
      [
        "TestVariablesCheckerWithTearDown",
        "test_ignored_argument_names_no_message"
      ]
    ]
  ],
  "test_ignored_argument_names_starred_args": [
    [
      "tests/checkers/unittest_variables.py",
      [
        "TestVariablesCheckerWithTearDown",
        "test_ignored_argument_names_starred_args"
      ]
    ]
  ],
  "test_package_all": [
    [
      "tests/checkers/unittest_variables.py",
      [
        "TestMissingSubmodule",
        "test_package_all"
      ]
    ]
  ],
  "tests_directory": [
    [
      "tests/conftest.py",
      [
        "tests_directory"
      ]
    ]
  ],
  "checker": [
    [
      "tests/conftest.py",
      [
        "checker"
      ]
    ],
    [
      "tests/extensions/test_bad_builtin.py",
      [
        "checker"
      ]
    ],
    [
      "tests/extensions/test_docstyle.py",
      [
        "checker"
      ]
    ],
    [
      "tests/extensions/test_elseif_used.py",
      [
        "checker"
      ]
    ],
    [
      "tests/extensions/test_empty_comment.py",
      [
        "checker"
      ]
    ],
    [
      "tests/extensions/test_emptystring.py",
      [
        "checker"
      ]
    ],
    [
      "tests/extensions/test_overlapping_exceptions.py",
      [
        "checker"
      ]
    ],
    [
      "tests/extensions/test_redefined.py",
      [
        "checker"
      ]
    ]
  ],
  "reporter": [
    [
      "tests/conftest.py",
      [
        "reporter"
      ]
    ],
    [
      "tests/lint/unittest_lint.py",
      [
        "reporter"
      ]
    ],
    [
      "tests/test_regr.py",
      [
        "reporter"
      ]
    ],
    [
      "tests/unittest_reporting.py",
      [
        "reporter"
      ]
    ]
  ],
  "get_value": [
    [
      "tests/data/clientmodule_test.py",
      [
        "Ancestor",
        "get_value"
      ]
    ],
    [
      "tests/data/suppliermodule_test.py",
      [
        "Interface",
        "get_value"
      ]
    ]
  ],
  "set_value": [
    [
      "tests/data/clientmodule_test.py",
      [
        "Ancestor",
        "set_value"
      ]
    ],
    [
      "tests/data/suppliermodule_test.py",
      [
        "Interface",
        "set_value"
      ]
    ]
  ],
  "function2": [
    [
      "tests/extensions/data/docstring.py",
      [
        "function2"
      ]
    ],
    [
      "tests/functional/d/dangerous_default_value_py30.py",
      [
        "function2"
      ]
    ],
    [
      "tests/functional/d/docstrings.py",
      [
        "function2"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_sequence_index.py",
      [
        "function2"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_slice_index.py",
      [
        "function2"
      ]
    ],
    [
      "tests/functional/u/unused/unused_variable.py",
      [
        "function2"
      ]
    ]
  ],
  "method1": [
    [
      "tests/extensions/data/docstring.py",
      [
        "FFFF",
        "method1"
      ]
    ],
    [
      "tests/extensions/data/mccabe.py",
      [
        "MyClass1",
        "method1"
      ]
    ],
    [
      "tests/functional/b/bad_staticmethod_argument.py",
      [
        "Abcd",
        "method1"
      ]
    ],
    [
      "tests/functional/d/docstrings.py",
      [
        "AAAA",
        "method1"
      ]
    ],
    [
      "tests/functional/f/first_arg.py",
      [
        "Meta",
        "method1"
      ]
    ],
    [
      "tests/functional/f/function_redefined.py",
      [
        "AAAA",
        "method1"
      ]
    ],
    [
      "tests/functional/n/no/no_warning_docstring.py",
      [
        "AAAA",
        "method1"
      ]
    ],
    [
      "tests/functional/n/no/no_warning_docstring.py",
      [
        "BBBB",
        "method1"
      ]
    ],
    [
      "tests/functional/w/wrong_import_position4.py",
      [
        "method1"
      ]
    ]
  ],
  "method2": [
    [
      "tests/extensions/data/docstring.py",
      [
        "FFFF",
        "method2"
      ]
    ],
    [
      "tests/extensions/data/mccabe.py",
      [
        "MyClass1",
        "method2"
      ]
    ],
    [
      "tests/functional/b/bad_staticmethod_argument.py",
      [
        "Abcd",
        "method2"
      ]
    ],
    [
      "tests/functional/d/docstrings.py",
      [
        "AAAA",
        "method2"
      ]
    ],
    [
      "tests/functional/d/docstrings.py",
      [
        "DDDD",
        "method2"
      ]
    ],
    [
      "tests/functional/f/first_arg.py",
      [
        "Meta",
        "method2"
      ]
    ],
    [
      "tests/functional/f/function_redefined.py",
      [
        "AAAA",
        "method2"
      ]
    ],
    [
      "tests/functional/n/no/no_warning_docstring.py",
      [
        "AAAA",
        "method2"
      ]
    ]
  ],
  "method3": [
    [
      "tests/extensions/data/docstring.py",
      [
        "FFFF",
        "method3"
      ]
    ],
    [
      "tests/extensions/data/mccabe.py",
      [
        "method3"
      ]
    ],
    [
      "tests/functional/d/docstrings.py",
      [
        "AAAA",
        "method3"
      ]
    ],
    [
      "tests/functional/d/docstrings.py",
      [
        "DDDD",
        "method3"
      ]
    ]
  ],
  "method4": [
    [
      "tests/extensions/data/docstring.py",
      [
        "FFFF",
        "method4"
      ]
    ],
    [
      "tests/functional/d/docstrings.py",
      [
        "DDDD",
        "method4"
      ]
    ]
  ],
  "method5": [
    [
      "tests/extensions/data/docstring.py",
      [
        "FFFF",
        "method5"
      ]
    ]
  ],
  "method6": [
    [
      "tests/extensions/data/docstring.py",
      [
        "FFFF",
        "method6"
      ]
    ]
  ],
  "method7": [
    [
      "tests/extensions/data/docstring.py",
      [
        "FFFF",
        "method7"
      ]
    ]
  ],
  "my_function": [
    [
      "tests/extensions/data/elif.py",
      [
        "my_function"
      ]
    ],
    [
      "tests/functional/c/consider/consider_using_enumerate.py",
      [
        "my_function"
      ]
    ],
    [
      "tests/functional/t/too/too_many_nested_blocks.py",
      [
        "my_function"
      ]
    ],
    [
      "tests/functional/u/use/use_symbolic_message_instead.py",
      [
        "my_function"
      ]
    ]
  ],
  "f1": [
    [
      "tests/extensions/data/mccabe.py",
      [
        "f1"
      ]
    ]
  ],
  "f2": [
    [
      "tests/extensions/data/mccabe.py",
      [
        "f2"
      ]
    ]
  ],
  "f3": [
    [
      "tests/extensions/data/mccabe.py",
      [
        "f3"
      ]
    ]
  ],
  "f4": [
    [
      "tests/extensions/data/mccabe.py",
      [
        "f4"
      ]
    ]
  ],
  "f5": [
    [
      "tests/extensions/data/mccabe.py",
      [
        "f5"
      ]
    ]
  ],
  "f6": [
    [
      "tests/extensions/data/mccabe.py",
      [
        "f6"
      ]
    ]
  ],
  "f7": [
    [
      "tests/extensions/data/mccabe.py",
      [
        "f7"
      ]
    ]
  ],
  "f8": [
    [
      "tests/extensions/data/mccabe.py",
      [
        "f8"
      ]
    ]
  ],
  "f9": [
    [
      "tests/extensions/data/mccabe.py",
      [
        "f9"
      ]
    ]
  ],
  "f10": [
    [
      "tests/extensions/data/mccabe.py",
      [
        "f10"
      ]
    ]
  ],
  "_getter": [
    [
      "tests/extensions/data/redefined.py",
      [
        "MyClass",
        "_getter"
      ]
    ],
    [
      "tests/functional/a/assign/assigning_non_slot.py",
      [
        "PropertyGood2",
        "_getter"
      ]
    ]
  ],
  "_setter": [
    [
      "tests/extensions/data/redefined.py",
      [
        "MyClass",
        "_setter"
      ]
    ],
    [
      "tests/functional/a/assign/assigning_non_slot.py",
      [
        "PropertyGood2",
        "_setter"
      ]
    ]
  ],
  "some_method": [
    [
      "tests/extensions/data/redefined.py",
      [
        "MyClass",
        "some_method"
      ]
    ],
    [
      "tests/functional/a/assign/assignment_from_no_return.py",
      [
        "Class",
        "some_method"
      ]
    ],
    [
      "tests/functional/a/async_functions.py",
      [
        "Class",
        "some_method"
      ]
    ],
    [
      "tests/functional/r/regression/regression_3231_no_member_property.py",
      [
        "Cls",
        "some_method"
      ]
    ]
  ],
  "dummy_function": [
    [
      "tests/extensions/data/redefined.py",
      [
        "dummy_function"
      ]
    ],
    [
      "tests/functional/l/line_too_long_end_of_module.py",
      [
        "dummy_function"
      ]
    ]
  ],
  "other_function": [
    [
      "tests/extensions/data/redefined.py",
      [
        "other_function"
      ]
    ],
    [
      "tests/functional/m/missing/missing_kwoa_py3.py",
      [
        "other_function"
      ]
    ],
    [
      "tests/functional/n/not_callable.py",
      [
        "SafeProperty",
        "other_function"
      ]
    ]
  ],
  "func2": [
    [
      "tests/extensions/data/redefined.py",
      [
        "func2"
      ]
    ],
    [
      "tests/functional/a/alternative/alternative_union_syntax.py",
      [
        "func2"
      ]
    ],
    [
      "tests/functional/a/alternative/alternative_union_syntax_error.py",
      [
        "func2"
      ]
    ],
    [
      "tests/functional/a/alternative/alternative_union_syntax_py37.py",
      [
        "func2"
      ]
    ],
    [
      "tests/functional/a/assign/assignment_expression.py",
      [
        "func2"
      ]
    ],
    [
      "tests/functional/a/await_outside_async.py",
      [
        "func2"
      ]
    ],
    [
      "tests/functional/d/defined_and_used_on_same_line.py",
      [
        "func2"
      ]
    ],
    [
      "tests/functional/ext/typing/typing_consider_using_alias.py",
      [
        "func2"
      ]
    ],
    [
      "tests/functional/ext/typing/typing_consider_using_alias_without_future.py",
      [
        "func2"
      ]
    ],
    [
      "tests/functional/ext/typing/typing_deprecated_alias.py",
      [
        "func2"
      ]
    ],
    [
      "tests/functional/f/function_redefined.py",
      [
        "func2"
      ]
    ],
    [
      "tests/functional/n/nonlocal_without_binding.py",
      [
        "func2"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585.py",
      [
        "func2"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_error.py",
      [
        "func2"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_py39.py",
      [
        "func2"
      ]
    ],
    [
      "tests/functional/s/singledispatch_functions_py3.py",
      [
        "func2"
      ]
    ],
    [
      "tests/functional/t/ternary.py",
      [
        "func2"
      ]
    ],
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "func2"
      ]
    ],
    [
      "tests/functional/u/unreachable.py",
      [
        "func2"
      ]
    ],
    [
      "tests/functional/u/unused/unused_typing_imports.py",
      [
        "func2"
      ]
    ],
    [
      "tests/functional/u/unused/unused_variable.py",
      [
        "func2"
      ]
    ]
  ],
  "test_types_redefined": [
    [
      "tests/extensions/test_bad_builtin.py",
      [
        "test_types_redefined"
      ]
    ],
    [
      "tests/extensions/test_redefined.py",
      [
        "test_types_redefined"
      ]
    ]
  ],
  "setUpClass": [
    [
      "tests/extensions/test_broad_try_clause.py",
      [
        "BroadTryClauseTC",
        "setUpClass"
      ]
    ],
    [
      "tests/extensions/test_comparetozero.py",
      [
        "CompareToZeroUsedTC",
        "setUpClass"
      ]
    ]
  ],
  "test_broad_try_clause_message": [
    [
      "tests/extensions/test_broad_try_clause.py",
      [
        "BroadTryClauseTC",
        "test_broad_try_clause_message"
      ]
    ]
  ],
  "test_missing_func_params_in_sphinx_docstring": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_missing_func_params_in_sphinx_docstring"
      ]
    ]
  ],
  "test_missing_func_params_in_google_docstring": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_missing_func_params_in_google_docstring"
      ]
    ]
  ],
  "test_missing_type_doc_google_docstring_exempt_kwonly_args": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_missing_type_doc_google_docstring_exempt_kwonly_args"
      ]
    ]
  ],
  "test_missing_func_params_with_annotations_in_google_docstring": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_missing_func_params_with_annotations_in_google_docstring"
      ]
    ]
  ],
  "test_default_arg_with_annotations_in_google_docstring": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_default_arg_with_annotations_in_google_docstring"
      ]
    ]
  ],
  "test_missing_func_params_with_partial_annotations_in_google_docstring": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_missing_func_params_with_partial_annotations_in_google_docstring"
      ]
    ]
  ],
  "test_non_builtin_annotations_in_google_docstring": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_non_builtin_annotations_in_google_docstring"
      ]
    ]
  ],
  "test_non_builtin_annotations_for_returntype_in_google_docstring": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_non_builtin_annotations_for_returntype_in_google_docstring"
      ]
    ]
  ],
  "test_func_params_and_keyword_params_in_google_docstring": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_func_params_and_keyword_params_in_google_docstring"
      ]
    ]
  ],
  "test_func_params_and_wrong_keyword_params_in_google_docstring": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_func_params_and_wrong_keyword_params_in_google_docstring"
      ]
    ]
  ],
  "test_missing_func_params_in_numpy_docstring": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_missing_func_params_in_numpy_docstring"
      ]
    ]
  ],
  "test_tolerate_no_param_documentation_at_all": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_tolerate_no_param_documentation_at_all"
      ]
    ]
  ],
  "test_don_t_tolerate_no_param_documentation_at_all": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_don_t_tolerate_no_param_documentation_at_all"
      ]
    ]
  ],
  "test_see_tolerate_no_param_documentation_at_all": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_see_tolerate_no_param_documentation_at_all"
      ]
    ]
  ],
  "_visit_methods_of_class": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "_visit_methods_of_class"
      ]
    ]
  ],
  "test_missing_method_params_in_sphinx_docstring": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_missing_method_params_in_sphinx_docstring"
      ]
    ]
  ],
  "test_missing_method_params_in_google_docstring": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_missing_method_params_in_google_docstring"
      ]
    ]
  ],
  "test_missing_method_params_in_numpy_docstring": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_missing_method_params_in_numpy_docstring"
      ]
    ]
  ],
  "test_existing_func_params_in_sphinx_docstring": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_existing_func_params_in_sphinx_docstring"
      ]
    ]
  ],
  "test_existing_func_params_in_google_docstring": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_existing_func_params_in_google_docstring"
      ]
    ]
  ],
  "test_existing_func_params_in_numpy_docstring": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_existing_func_params_in_numpy_docstring"
      ]
    ]
  ],
  "test_wrong_name_of_func_params_in_sphinx_docstring": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_wrong_name_of_func_params_in_sphinx_docstring"
      ]
    ]
  ],
  "test_wrong_name_of_func_params_in_google_docstring": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_wrong_name_of_func_params_in_google_docstring"
      ]
    ]
  ],
  "test_wrong_name_of_func_params_in_numpy_docstring": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_wrong_name_of_func_params_in_numpy_docstring"
      ]
    ]
  ],
  "test_see_sentence_for_func_params_in_sphinx_docstring": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_see_sentence_for_func_params_in_sphinx_docstring"
      ]
    ]
  ],
  "test_see_sentence_for_func_params_in_google_docstring": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_see_sentence_for_func_params_in_google_docstring"
      ]
    ]
  ],
  "test_see_sentence_for_func_params_in_numpy_docstring": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_see_sentence_for_func_params_in_numpy_docstring"
      ]
    ]
  ],
  "test_constr_params_in_class_sphinx": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_constr_params_in_class_sphinx"
      ]
    ]
  ],
  "test_constr_params_in_class_google": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_constr_params_in_class_google"
      ]
    ]
  ],
  "test_constr_params_in_class_numpy": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_constr_params_in_class_numpy"
      ]
    ]
  ],
  "test_constr_params_and_attributes_in_class_numpy": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_constr_params_and_attributes_in_class_numpy"
      ]
    ]
  ],
  "test_constr_params_in_init_sphinx": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_constr_params_in_init_sphinx"
      ]
    ]
  ],
  "test_constr_params_in_init_google": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_constr_params_in_init_google"
      ]
    ]
  ],
  "test_constr_params_in_init_numpy": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_constr_params_in_init_numpy"
      ]
    ]
  ],
  "test_see_sentence_for_constr_params_in_class": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_see_sentence_for_constr_params_in_class"
      ]
    ]
  ],
  "test_see_sentence_for_constr_params_in_init": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_see_sentence_for_constr_params_in_init"
      ]
    ]
  ],
  "test_constr_params_in_class_and_init_sphinx": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_constr_params_in_class_and_init_sphinx"
      ]
    ]
  ],
  "test_constr_params_in_class_and_init_google": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_constr_params_in_class_and_init_google"
      ]
    ]
  ],
  "test_constr_params_in_class_and_init_numpy": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_constr_params_in_class_and_init_numpy"
      ]
    ]
  ],
  "test_kwonlyargs_are_taken_in_account": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_kwonlyargs_are_taken_in_account"
      ]
    ]
  ],
  "test_warns_missing_args_sphinx": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_warns_missing_args_sphinx"
      ]
    ]
  ],
  "test_warns_missing_kwargs_sphinx": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_warns_missing_kwargs_sphinx"
      ]
    ]
  ],
  "test_warns_missing_args_google": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_warns_missing_args_google"
      ]
    ]
  ],
  "test_warns_missing_kwargs_google": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_warns_missing_kwargs_google"
      ]
    ]
  ],
  "test_warns_missing_args_numpy": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_warns_missing_args_numpy"
      ]
    ]
  ],
  "test_warns_missing_kwargs_numpy": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_warns_missing_kwargs_numpy"
      ]
    ]
  ],
  "test_finds_args_without_type_sphinx": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_finds_args_without_type_sphinx"
      ]
    ]
  ],
  "test_finds_kwargs_without_type_sphinx": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_finds_kwargs_without_type_sphinx"
      ]
    ]
  ],
  "test_finds_args_without_type_google": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_finds_args_without_type_google"
      ]
    ]
  ],
  "test_finds_kwargs_without_type_google": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_finds_kwargs_without_type_google"
      ]
    ]
  ],
  "test_finds_args_without_type_numpy": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_finds_args_without_type_numpy"
      ]
    ]
  ],
  "test_finds_args_with_xref_type_google": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_finds_args_with_xref_type_google"
      ]
    ]
  ],
  "test_finds_args_with_xref_type_numpy": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_finds_args_with_xref_type_numpy"
      ]
    ]
  ],
  "test_finds_kwargs_without_type_numpy": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_finds_kwargs_without_type_numpy"
      ]
    ]
  ],
  "test_finds_multiple_types_sphinx": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_finds_multiple_types_sphinx"
      ]
    ]
  ],
  "test_finds_multiple_types_google": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_finds_multiple_types_google"
      ]
    ]
  ],
  "test_finds_multiple_types_numpy": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_finds_multiple_types_numpy"
      ]
    ]
  ],
  "test_finds_compact_container_types_sphinx": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_finds_compact_container_types_sphinx"
      ]
    ]
  ],
  "test_ignores_optional_specifier_google": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_ignores_optional_specifier_google"
      ]
    ]
  ],
  "test_ignores_optional_specifier_numpy": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_ignores_optional_specifier_numpy"
      ]
    ]
  ],
  "test_finds_short_name_exception": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_finds_short_name_exception"
      ]
    ]
  ],
  "test_finds_missing_raises_from_setter_sphinx": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_finds_missing_raises_from_setter_sphinx"
      ]
    ]
  ],
  "test_finds_missing_raises_from_setter_google": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_finds_missing_raises_from_setter_google"
      ]
    ]
  ],
  "test_finds_missing_raises_from_setter_numpy": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_finds_missing_raises_from_setter_numpy"
      ]
    ]
  ],
  "test_finds_missing_raises_in_setter_sphinx": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_finds_missing_raises_in_setter_sphinx"
      ]
    ]
  ],
  "test_finds_missing_raises_from_setter_google_2": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_finds_missing_raises_from_setter_google_2"
      ]
    ]
  ],
  "test_finds_missing_raises_from_setter_numpy_2": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_finds_missing_raises_from_setter_numpy_2"
      ]
    ]
  ],
  "test_finds_property_return_type_sphinx": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_finds_property_return_type_sphinx"
      ]
    ]
  ],
  "test_finds_property_return_type_google": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_finds_property_return_type_google"
      ]
    ]
  ],
  "test_finds_property_return_type_numpy": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_finds_property_return_type_numpy"
      ]
    ]
  ],
  "test_finds_annotation_property_return_type_sphinx": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_finds_annotation_property_return_type_sphinx"
      ]
    ]
  ],
  "test_finds_missing_property_return_type_sphinx": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_finds_missing_property_return_type_sphinx"
      ]
    ]
  ],
  "test_finds_annotation_property_return_type_google": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_finds_annotation_property_return_type_google"
      ]
    ]
  ],
  "test_finds_missing_property_return_type_google": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_finds_missing_property_return_type_google"
      ]
    ]
  ],
  "test_finds_missing_property_return_type_numpy": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_finds_missing_property_return_type_numpy"
      ]
    ]
  ],
  "test_ignores_non_property_return_type_sphinx": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_ignores_non_property_return_type_sphinx"
      ]
    ]
  ],
  "test_ignores_non_property_return_type_google": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_ignores_non_property_return_type_google"
      ]
    ]
  ],
  "test_ignores_non_property_return_type_numpy": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_ignores_non_property_return_type_numpy"
      ]
    ]
  ],
  "test_non_property_annotation_return_type_numpy": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_non_property_annotation_return_type_numpy"
      ]
    ]
  ],
  "test_ignores_return_in_abstract_method_sphinx": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_ignores_return_in_abstract_method_sphinx"
      ]
    ]
  ],
  "test_ignores_return_in_abstract_method_google": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_ignores_return_in_abstract_method_google"
      ]
    ]
  ],
  "test_ignores_return_in_abstract_method_numpy": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_ignores_return_in_abstract_method_numpy"
      ]
    ]
  ],
  "test_ignores_raise_notimplementederror_sphinx": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_ignores_raise_notimplementederror_sphinx"
      ]
    ]
  ],
  "test_ignores_return_in_abstract_method_google_2": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_ignores_return_in_abstract_method_google_2"
      ]
    ]
  ],
  "test_ignores_return_in_abstract_method_numpy_2": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_ignores_return_in_abstract_method_numpy_2"
      ]
    ]
  ],
  "test_ignores_ignored_argument_names_sphinx": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_ignores_ignored_argument_names_sphinx"
      ]
    ]
  ],
  "test_ignores_ignored_argument_names_google": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_ignores_ignored_argument_names_google"
      ]
    ]
  ],
  "test_ignores_ignored_argument_names_numpy": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_ignores_ignored_argument_names_numpy"
      ]
    ]
  ],
  "test_useless_docs_ignored_argument_names_sphinx": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_useless_docs_ignored_argument_names_sphinx"
      ]
    ]
  ],
  "test_useless_docs_ignored_argument_names_google": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_useless_docs_ignored_argument_names_google"
      ]
    ]
  ],
  "test_useless_docs_ignored_argument_names_numpy": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_useless_docs_ignored_argument_names_numpy"
      ]
    ]
  ],
  "test_skip_no_docstring_rgx": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_skip_no_docstring_rgx"
      ]
    ]
  ],
  "test_skip_docstring_min_length": [
    [
      "tests/extensions/test_check_docs.py",
      [
        "TestParamDocChecker",
        "test_skip_docstring_min_length"
      ]
    ]
  ],
  "test_space_indentation": [
    [
      "tests/extensions/test_check_docs_utils.py",
      [
        "test_space_indentation"
      ]
    ]
  ],
  "test_exception": [
    [
      "tests/extensions/test_check_docs_utils.py",
      [
        "test_exception"
      ]
    ]
  ],
  "fname_mccabe_example": [
    [
      "tests/extensions/test_check_mccabe.py",
      [
        "fname_mccabe_example"
      ]
    ]
  ],
  "test_max_mccabe_rate": [
    [
      "tests/extensions/test_check_mccabe.py",
      [
        "test_max_mccabe_rate"
      ]
    ]
  ],
  "test_ignores_no_docstring": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_ignores_no_docstring"
      ]
    ],
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_ignores_no_docstring"
      ]
    ],
    [
      "tests/extensions/test_check_yields_docs.py",
      [
        "TestDocstringCheckerYield",
        "test_ignores_no_docstring"
      ]
    ]
  ],
  "test_ignores_unknown_style": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_ignores_unknown_style"
      ]
    ],
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_ignores_unknown_style"
      ]
    ],
    [
      "tests/extensions/test_check_yields_docs.py",
      [
        "TestDocstringCheckerYield",
        "test_ignores_unknown_style"
      ]
    ]
  ],
  "test_warns_unknown_style": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_warns_unknown_style"
      ]
    ]
  ],
  "test_find_missing_sphinx_raises": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_find_missing_sphinx_raises"
      ]
    ]
  ],
  "test_find_missing_google_raises": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_find_missing_google_raises"
      ]
    ]
  ],
  "test_find_google_attr_raises_exact_exc": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_find_google_attr_raises_exact_exc"
      ]
    ]
  ],
  "test_find_google_attr_raises_substr_exc": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_find_google_attr_raises_substr_exc"
      ]
    ]
  ],
  "test_find_valid_missing_google_attr_raises": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_find_valid_missing_google_attr_raises"
      ]
    ]
  ],
  "test_find_invalid_missing_google_attr_raises": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_find_invalid_missing_google_attr_raises"
      ]
    ]
  ],
  "test_google_raises_local_reference": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_google_raises_local_reference"
      ]
    ]
  ],
  "test_google_raises_with_prefix": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_google_raises_with_prefix"
      ]
    ]
  ],
  "test_find_missing_numpy_raises": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_find_missing_numpy_raises"
      ]
    ]
  ],
  "test_ignore_spurious_sphinx_raises": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_ignore_spurious_sphinx_raises"
      ]
    ]
  ],
  "test_find_all_sphinx_raises": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_find_all_sphinx_raises"
      ]
    ]
  ],
  "test_find_all_google_raises": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_find_all_google_raises"
      ]
    ]
  ],
  "test_find_all_numpy_raises": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_find_all_numpy_raises"
      ]
    ]
  ],
  "test_find_multiple_sphinx_raises": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_find_multiple_sphinx_raises"
      ]
    ]
  ],
  "test_find_multiple_google_raises": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_find_multiple_google_raises"
      ]
    ]
  ],
  "test_finds_rethrown_sphinx_raises": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_finds_rethrown_sphinx_raises"
      ]
    ]
  ],
  "test_find_rethrown_google_raises": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_find_rethrown_google_raises"
      ]
    ]
  ],
  "test_find_rethrown_numpy_raises": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_find_rethrown_numpy_raises"
      ]
    ]
  ],
  "test_finds_rethrown_sphinx_multiple_raises": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_finds_rethrown_sphinx_multiple_raises"
      ]
    ]
  ],
  "test_find_rethrown_google_multiple_raises": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_find_rethrown_google_multiple_raises"
      ]
    ]
  ],
  "test_find_rethrown_numpy_multiple_raises": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_find_rethrown_numpy_multiple_raises"
      ]
    ]
  ],
  "test_ignores_caught_sphinx_raises": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_ignores_caught_sphinx_raises"
      ]
    ]
  ],
  "test_ignores_caught_google_raises": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_ignores_caught_google_raises"
      ]
    ]
  ],
  "test_ignores_caught_numpy_raises": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_ignores_caught_numpy_raises"
      ]
    ]
  ],
  "test_find_numpy_attr_raises_exact_exc": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_find_numpy_attr_raises_exact_exc"
      ]
    ]
  ],
  "test_find_numpy_attr_raises_substr_exc": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_find_numpy_attr_raises_substr_exc"
      ]
    ]
  ],
  "test_find_valid_missing_numpy_attr_raises": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_find_valid_missing_numpy_attr_raises"
      ]
    ]
  ],
  "test_find_invalid_missing_numpy_attr_raises": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_find_invalid_missing_numpy_attr_raises"
      ]
    ]
  ],
  "test_numpy_raises_with_prefix": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_numpy_raises_with_prefix"
      ]
    ]
  ],
  "test_find_missing_sphinx_raises_infer_from_instance": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_find_missing_sphinx_raises_infer_from_instance"
      ]
    ]
  ],
  "test_find_missing_sphinx_raises_infer_from_function": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_find_missing_sphinx_raises_infer_from_function"
      ]
    ]
  ],
  "test_find_sphinx_attr_raises_exact_exc": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_find_sphinx_attr_raises_exact_exc"
      ]
    ]
  ],
  "test_find_sphinx_attr_raises_substr_exc": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_find_sphinx_attr_raises_substr_exc"
      ]
    ]
  ],
  "test_find_valid_missing_sphinx_attr_raises": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_find_valid_missing_sphinx_attr_raises"
      ]
    ]
  ],
  "test_find_invalid_missing_sphinx_attr_raises": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_find_invalid_missing_sphinx_attr_raises"
      ]
    ]
  ],
  "test_sphinx_raises_with_prefix": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_sphinx_raises_with_prefix"
      ]
    ]
  ],
  "test_ignores_raise_uninferable": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_ignores_raise_uninferable"
      ]
    ]
  ],
  "test_ignores_returns_from_inner_functions": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_ignores_returns_from_inner_functions"
      ]
    ]
  ],
  "test_ignores_returns_use_only_names": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_ignores_returns_use_only_names"
      ]
    ]
  ],
  "test_ignores_returns_use_only_exception_instances": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_ignores_returns_use_only_exception_instances"
      ]
    ]
  ],
  "test_no_crash_when_inferring_handlers": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_no_crash_when_inferring_handlers"
      ]
    ]
  ],
  "test_no_crash_when_cant_find_exception": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_no_crash_when_cant_find_exception"
      ]
    ]
  ],
  "test_no_error_notimplemented_documented": [
    [
      "tests/extensions/test_check_raise_docs.py",
      [
        "TestDocstringCheckerRaise",
        "test_no_error_notimplemented_documented"
      ]
    ]
  ],
  "test_warns_no_docstring": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_warns_no_docstring"
      ]
    ],
    [
      "tests/extensions/test_check_yields_docs.py",
      [
        "TestDocstringCheckerYield",
        "test_warns_no_docstring"
      ]
    ]
  ],
  "test_warn_partial_sphinx_returns": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_warn_partial_sphinx_returns"
      ]
    ]
  ],
  "test_sphinx_missing_return_type_with_annotations": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_sphinx_missing_return_type_with_annotations"
      ]
    ]
  ],
  "test_warn_partial_sphinx_returns_type": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_warn_partial_sphinx_returns_type"
      ]
    ]
  ],
  "test_warn_missing_sphinx_returns": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_warn_missing_sphinx_returns"
      ]
    ]
  ],
  "test_warn_partial_google_returns": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_warn_partial_google_returns"
      ]
    ]
  ],
  "test_warn_partial_google_returns_type": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_warn_partial_google_returns_type"
      ]
    ]
  ],
  "test_warn_missing_google_returns": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_warn_missing_google_returns"
      ]
    ]
  ],
  "test_warn_partial_numpy_returns_type": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_warn_partial_numpy_returns_type"
      ]
    ]
  ],
  "test_warn_missing_numpy_returns": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_warn_missing_numpy_returns"
      ]
    ]
  ],
  "test_find_sphinx_returns": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_find_sphinx_returns"
      ]
    ]
  ],
  "test_find_google_returns": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_find_google_returns"
      ]
    ]
  ],
  "test_find_numpy_returns": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_find_numpy_returns"
      ]
    ]
  ],
  "test_find_numpy_returns_with_of": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_find_numpy_returns_with_of"
      ]
    ]
  ],
  "test_ignores_sphinx_return_none": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_ignores_sphinx_return_none"
      ]
    ]
  ],
  "test_ignores_google_return_none": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_ignores_google_return_none"
      ]
    ]
  ],
  "test_ignores_numpy_return_none": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_ignores_numpy_return_none"
      ]
    ]
  ],
  "test_finds_sphinx_return_custom_class": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_finds_sphinx_return_custom_class"
      ]
    ]
  ],
  "test_finds_google_return_custom_class": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_finds_google_return_custom_class"
      ]
    ]
  ],
  "test_finds_numpy_return_custom_class": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_finds_numpy_return_custom_class"
      ]
    ]
  ],
  "test_finds_sphinx_return_list_of_custom_class": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_finds_sphinx_return_list_of_custom_class"
      ]
    ]
  ],
  "test_finds_google_return_list_of_custom_class": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_finds_google_return_list_of_custom_class"
      ]
    ]
  ],
  "test_finds_numpy_return_list_of_custom_class": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_finds_numpy_return_list_of_custom_class"
      ]
    ]
  ],
  "test_warns_sphinx_return_list_of_custom_class_without_description": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_warns_sphinx_return_list_of_custom_class_without_description"
      ]
    ]
  ],
  "test_warns_google_return_list_of_custom_class_without_description": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_warns_google_return_list_of_custom_class_without_description"
      ]
    ]
  ],
  "test_warns_numpy_return_list_of_custom_class_without_description": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_warns_numpy_return_list_of_custom_class_without_description"
      ]
    ]
  ],
  "test_warns_sphinx_redundant_return_doc": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_warns_sphinx_redundant_return_doc"
      ]
    ]
  ],
  "test_warns_sphinx_redundant_rtype_doc": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_warns_sphinx_redundant_rtype_doc"
      ]
    ]
  ],
  "test_warns_google_redundant_return_doc": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_warns_google_redundant_return_doc"
      ]
    ]
  ],
  "test_warns_google_redundant_rtype_doc": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_warns_google_redundant_rtype_doc"
      ]
    ]
  ],
  "test_warns_numpy_redundant_return_doc": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_warns_numpy_redundant_return_doc"
      ]
    ]
  ],
  "test_warns_numpy_redundant_rtype_doc": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_warns_numpy_redundant_rtype_doc"
      ]
    ]
  ],
  "test_ignores_sphinx_redundant_return_doc_multiple_returns": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_ignores_sphinx_redundant_return_doc_multiple_returns"
      ]
    ]
  ],
  "test_ignores_google_redundant_return_doc_multiple_returns": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_ignores_google_redundant_return_doc_multiple_returns"
      ]
    ]
  ],
  "test_ignores_numpy_redundant_return_doc_multiple_returns": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_ignores_numpy_redundant_return_doc_multiple_returns"
      ]
    ]
  ],
  "test_ignore_sphinx_redundant_return_doc_yield": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_ignore_sphinx_redundant_return_doc_yield"
      ]
    ]
  ],
  "test_warns_google_redundant_return_doc_yield": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_warns_google_redundant_return_doc_yield"
      ]
    ]
  ],
  "test_warns_numpy_redundant_return_doc_yield": [
    [
      "tests/extensions/test_check_return_docs.py",
      [
        "TestDocstringCheckerReturn",
        "test_warns_numpy_redundant_return_doc_yield"
      ]
    ]
  ],
  "test_warn_partial_sphinx_yields": [
    [
      "tests/extensions/test_check_yields_docs.py",
      [
        "TestDocstringCheckerYield",
        "test_warn_partial_sphinx_yields"
      ]
    ]
  ],
  "test_warn_partial_sphinx_yields_type": [
    [
      "tests/extensions/test_check_yields_docs.py",
      [
        "TestDocstringCheckerYield",
        "test_warn_partial_sphinx_yields_type"
      ]
    ]
  ],
  "test_warn_missing_sphinx_yields": [
    [
      "tests/extensions/test_check_yields_docs.py",
      [
        "TestDocstringCheckerYield",
        "test_warn_missing_sphinx_yields"
      ]
    ]
  ],
  "test_warn_partial_google_yields": [
    [
      "tests/extensions/test_check_yields_docs.py",
      [
        "TestDocstringCheckerYield",
        "test_warn_partial_google_yields"
      ]
    ]
  ],
  "test_warn_partial_google_yields_type": [
    [
      "tests/extensions/test_check_yields_docs.py",
      [
        "TestDocstringCheckerYield",
        "test_warn_partial_google_yields_type"
      ]
    ]
  ],
  "test_warn_missing_google_yields": [
    [
      "tests/extensions/test_check_yields_docs.py",
      [
        "TestDocstringCheckerYield",
        "test_warn_missing_google_yields"
      ]
    ]
  ],
  "test_warn_missing_numpy_yields": [
    [
      "tests/extensions/test_check_yields_docs.py",
      [
        "TestDocstringCheckerYield",
        "test_warn_missing_numpy_yields"
      ]
    ]
  ],
  "test_find_sphinx_yields": [
    [
      "tests/extensions/test_check_yields_docs.py",
      [
        "TestDocstringCheckerYield",
        "test_find_sphinx_yields"
      ]
    ]
  ],
  "test_find_google_yields": [
    [
      "tests/extensions/test_check_yields_docs.py",
      [
        "TestDocstringCheckerYield",
        "test_find_google_yields"
      ]
    ]
  ],
  "test_find_numpy_yields": [
    [
      "tests/extensions/test_check_yields_docs.py",
      [
        "TestDocstringCheckerYield",
        "test_find_numpy_yields"
      ]
    ]
  ],
  "test_finds_sphinx_yield_custom_class": [
    [
      "tests/extensions/test_check_yields_docs.py",
      [
        "TestDocstringCheckerYield",
        "test_finds_sphinx_yield_custom_class"
      ]
    ]
  ],
  "test_finds_google_yield_custom_class": [
    [
      "tests/extensions/test_check_yields_docs.py",
      [
        "TestDocstringCheckerYield",
        "test_finds_google_yield_custom_class"
      ]
    ]
  ],
  "test_finds_numpy_yield_custom_class": [
    [
      "tests/extensions/test_check_yields_docs.py",
      [
        "TestDocstringCheckerYield",
        "test_finds_numpy_yield_custom_class"
      ]
    ]
  ],
  "test_finds_sphinx_yield_list_of_custom_class": [
    [
      "tests/extensions/test_check_yields_docs.py",
      [
        "TestDocstringCheckerYield",
        "test_finds_sphinx_yield_list_of_custom_class"
      ]
    ]
  ],
  "test_finds_google_yield_list_of_custom_class": [
    [
      "tests/extensions/test_check_yields_docs.py",
      [
        "TestDocstringCheckerYield",
        "test_finds_google_yield_list_of_custom_class"
      ]
    ]
  ],
  "test_finds_numpy_yield_list_of_custom_class": [
    [
      "tests/extensions/test_check_yields_docs.py",
      [
        "TestDocstringCheckerYield",
        "test_finds_numpy_yield_list_of_custom_class"
      ]
    ]
  ],
  "test_warns_sphinx_yield_list_of_custom_class_without_description": [
    [
      "tests/extensions/test_check_yields_docs.py",
      [
        "TestDocstringCheckerYield",
        "test_warns_sphinx_yield_list_of_custom_class_without_description"
      ]
    ]
  ],
  "test_warns_google_yield_list_of_custom_class_without_description": [
    [
      "tests/extensions/test_check_yields_docs.py",
      [
        "TestDocstringCheckerYield",
        "test_warns_google_yield_list_of_custom_class_without_description"
      ]
    ]
  ],
  "test_warns_numpy_yield_list_of_custom_class_without_description": [
    [
      "tests/extensions/test_check_yields_docs.py",
      [
        "TestDocstringCheckerYield",
        "test_warns_numpy_yield_list_of_custom_class_without_description"
      ]
    ]
  ],
  "test_ignores_google_redundant_yield_doc_multiple_yields": [
    [
      "tests/extensions/test_check_yields_docs.py",
      [
        "TestDocstringCheckerYield",
        "test_ignores_google_redundant_yield_doc_multiple_yields"
      ]
    ]
  ],
  "test_ignores_numpy_redundant_yield_doc_multiple_yields": [
    [
      "tests/extensions/test_check_yields_docs.py",
      [
        "TestDocstringCheckerYield",
        "test_ignores_numpy_redundant_yield_doc_multiple_yields"
      ]
    ]
  ],
  "test_warns_google_redundant_yield_doc_return": [
    [
      "tests/extensions/test_check_yields_docs.py",
      [
        "TestDocstringCheckerYield",
        "test_warns_google_redundant_yield_doc_return"
      ]
    ]
  ],
  "test_warns_numpy_redundant_yield_doc_return": [
    [
      "tests/extensions/test_check_yields_docs.py",
      [
        "TestDocstringCheckerYield",
        "test_warns_numpy_redundant_yield_doc_return"
      ]
    ]
  ],
  "test_sphinx_missing_yield_type_with_annotations": [
    [
      "tests/extensions/test_check_yields_docs.py",
      [
        "TestDocstringCheckerYield",
        "test_sphinx_missing_yield_type_with_annotations"
      ]
    ]
  ],
  "test_google_missing_yield_type_with_annotations": [
    [
      "tests/extensions/test_check_yields_docs.py",
      [
        "TestDocstringCheckerYield",
        "test_google_missing_yield_type_with_annotations"
      ]
    ]
  ],
  "test_comparetozero_message": [
    [
      "tests/extensions/test_comparetozero.py",
      [
        "CompareToZeroUsedTC",
        "test_comparetozero_message"
      ]
    ]
  ],
  "test_triggered_if_if_block_ends_with_elif": [
    [
      "tests/extensions/test_confusing_elif.py",
      [
        "TestConfusingConsecutiveElifChecker",
        "test_triggered_if_if_block_ends_with_elif"
      ]
    ]
  ],
  "test_triggered_if_elif_block_ends_with_elif": [
    [
      "tests/extensions/test_confusing_elif.py",
      [
        "TestConfusingConsecutiveElifChecker",
        "test_triggered_if_elif_block_ends_with_elif"
      ]
    ]
  ],
  "test_triggered_if_block_ends_with_if": [
    [
      "tests/extensions/test_confusing_elif.py",
      [
        "TestConfusingConsecutiveElifChecker",
        "test_triggered_if_block_ends_with_if"
      ]
    ]
  ],
  "test_not_triggered_if_indented_block_ends_with_else": [
    [
      "tests/extensions/test_confusing_elif.py",
      [
        "TestConfusingConsecutiveElifChecker",
        "test_not_triggered_if_indented_block_ends_with_else"
      ]
    ]
  ],
  "test_not_triggered_if_indentend_block_ends_with_call": [
    [
      "tests/extensions/test_confusing_elif.py",
      [
        "TestConfusingConsecutiveElifChecker",
        "test_not_triggered_if_indentend_block_ends_with_call"
      ]
    ]
  ],
  "test_not_triggered_if_indented_block_ends_with_ifexp": [
    [
      "tests/extensions/test_confusing_elif.py",
      [
        "TestConfusingConsecutiveElifChecker",
        "test_not_triggered_if_indented_block_ends_with_ifexp"
      ]
    ]
  ],
  "test_not_triggered_if_outer_block_does_not_have_elif": [
    [
      "tests/extensions/test_confusing_elif.py",
      [
        "TestConfusingConsecutiveElifChecker",
        "test_not_triggered_if_outer_block_does_not_have_elif"
      ]
    ]
  ],
  "test_not_triggered_if_outer_block_continues_with_if": [
    [
      "tests/extensions/test_confusing_elif.py",
      [
        "TestConfusingConsecutiveElifChecker",
        "test_not_triggered_if_outer_block_continues_with_if"
      ]
    ]
  ],
  "test_docstring_message": [
    [
      "tests/extensions/test_docstyle.py",
      [
        "test_docstring_message"
      ]
    ]
  ],
  "test_elseif_message": [
    [
      "tests/extensions/test_elseif_used.py",
      [
        "test_elseif_message"
      ]
    ]
  ],
  "test_comment_base_case": [
    [
      "tests/extensions/test_empty_comment.py",
      [
        "test_comment_base_case"
      ]
    ]
  ],
  "test_emptystring_message": [
    [
      "tests/extensions/test_emptystring.py",
      [
        "test_emptystring_message"
      ]
    ]
  ],
  "test_overlapping_exceptions": [
    [
      "tests/extensions/test_overlapping_exceptions.py",
      [
        "test_overlapping_exceptions"
      ]
    ]
  ],
  "test_overlapping_exceptions_py33": [
    [
      "tests/extensions/test_overlapping_exceptions.py",
      [
        "test_overlapping_exceptions_py33"
      ]
    ]
  ],
  "prop": [
    [
      "tests/functional/a/abstract/abstract_abc_methods.py",
      [
        "Parent",
        "prop"
      ]
    ],
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "SomeMetaclass",
        "prop"
      ]
    ],
    [
      "tests/functional/a/attribute_defined_outside_init.py",
      [
        "Mine",
        "prop"
      ]
    ],
    [
      "tests/functional/c/crash_missing_module_type.py",
      [
        "Foo",
        "prop"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_overridden_method.py",
      [
        "SuperClass",
        "prop"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_overridden_method.py",
      [
        "ValidDerived",
        "prop"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_overridden_method.py",
      [
        "InvalidDerived",
        "prop"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_overridden_method.py",
      [
        "AbstractProperty",
        "prop"
      ]
    ]
  ],
  "bala": [
    [
      "tests/functional/a/abstract/abstract_class_instantiated_in_class.py",
      [
        "Ala",
        "bala"
      ]
    ]
  ],
  "portocala": [
    [
      "tests/functional/a/abstract/abstract_class_instantiated_in_class.py",
      [
        "Ala",
        "portocala"
      ]
    ]
  ],
  "test": [
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "SecondGoodClass",
        "test"
      ]
    ],
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "ThirdGoodClass",
        "test"
      ]
    ],
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "BadClass",
        "test"
      ]
    ],
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "SecondBadClass",
        "test"
      ]
    ],
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py34.py",
      [
        "BadClass",
        "test"
      ]
    ],
    [
      "tests/functional/a/access/access_to_protected_members.py",
      [
        "MyClass",
        "test"
      ]
    ],
    [
      "tests/functional/a/arguments.py",
      [
        "TestStaticMethod",
        "test"
      ]
    ],
    [
      "tests/functional/a/arguments.py",
      [
        "TypeCheckConstructor",
        "test"
      ]
    ],
    [
      "tests/functional/a/arguments.py",
      [
        "Test",
        "test"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Parent",
        "test"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Child",
        "test"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "ParentDefaults",
        "test"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "ChildDefaults",
        "test"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "FirstHasArgs",
        "test"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "SecondChangesArgs",
        "test"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Positional",
        "test"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "PositionalChild",
        "test"
      ]
    ],
    [
      "tests/functional/a/arguments_renamed.py",
      [
        "Parent",
        "test"
      ]
    ],
    [
      "tests/functional/a/arguments_renamed.py",
      [
        "Child",
        "test"
      ]
    ],
    [
      "tests/functional/a/arguments_renamed.py",
      [
        "Child2",
        "test"
      ]
    ],
    [
      "tests/functional/a/assign/assigning_non_slot.py",
      [
        "PropertyGood",
        "test"
      ]
    ],
    [
      "tests/functional/a/assign/assigning_non_slot.py",
      [
        "ClassHavingUnknownAncestors",
        "test"
      ]
    ],
    [
      "tests/functional/a/assign/assignment_from_no_return.py",
      [
        "Parent",
        "test"
      ]
    ],
    [
      "tests/functional/a/async_functions.py",
      [
        "OtherClass",
        "test"
      ]
    ],
    [
      "tests/functional/a/attribute_defined_outside_init.py",
      [
        "B",
        "test"
      ]
    ],
    [
      "tests/functional/b/bad_exception_context.py",
      [
        "test"
      ]
    ],
    [
      "tests/functional/b/bad_reversed_sequence.py",
      [
        "test"
      ]
    ],
    [
      "tests/functional/c/class_members_py30.py",
      [
        "MyClass",
        "test"
      ]
    ],
    [
      "tests/functional/c/class_members_py30.py",
      [
        "Metaclass",
        "test"
      ]
    ],
    [
      "tests/functional/c/consider/consider_using_enumerate.py",
      [
        "Bad",
        "test"
      ]
    ],
    [
      "tests/functional/d/deprecated/deprecated_methods_py3.py",
      [
        "MyTest",
        "test"
      ]
    ],
    [
      "tests/functional/d/deprecated/deprecated_methods_py38.py",
      [
        "MyTest",
        "test"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_name.py",
      [
        "test"
      ]
    ],
    [
      "tests/functional/i/iterable_context.py",
      [
        "test"
      ]
    ],
    [
      "tests/functional/m/mapping_context.py",
      [
        "test"
      ]
    ],
    [
      "tests/functional/m/mapping_context_py3.py",
      [
        "test"
      ]
    ],
    [
      "tests/functional/m/member/member_checks.py",
      [
        "SuperChecks",
        "test"
      ]
    ],
    [
      "tests/functional/m/member/member_checks_opaque.py",
      [
        "test"
      ]
    ],
    [
      "tests/functional/m/member/member_checks_py37.py",
      [
        "test"
      ]
    ],
    [
      "tests/functional/m/member/membership_protocol_py3.py",
      [
        "test"
      ]
    ],
    [
      "tests/functional/m/misplaced_bare_raise.py",
      [
        "test"
      ]
    ],
    [
      "tests/functional/m/missing/missing_docstring.py",
      [
        "Property",
        "test"
      ]
    ],
    [
      "tests/functional/n/name/namedtuple_member_inference.py",
      [
        "test"
      ]
    ],
    [
      "tests/functional/n/none_dunder_protocols_py36.py",
      [
        "test"
      ]
    ],
    [
      "tests/functional/n/nonlocal_without_binding.py",
      [
        "test"
      ]
    ],
    [
      "tests/functional/n/not_callable.py",
      [
        "PropertyTest",
        "test"
      ]
    ],
    [
      "tests/functional/n/not_context_manager.py",
      [
        "ManagerMixin",
        "test"
      ]
    ],
    [
      "tests/functional/r/redundant_unittest_assert.py",
      [
        "RegressionWithArgs",
        "test"
      ]
    ],
    [
      "tests/functional/r/regression/regression_2937_ifexp.py",
      [
        "test"
      ]
    ],
    [
      "tests/functional/r/regression/regression_no_member_1078.py",
      [
        "Cls",
        "test"
      ]
    ],
    [
      "tests/functional/r/regression/regression_no_value_for_parameter.py",
      [
        "ConfigManager",
        "test"
      ]
    ],
    [
      "tests/functional/r/regression/regression_property_no_member_3269.py",
      [
        "A",
        "test"
      ]
    ],
    [
      "tests/functional/r/regression/regression_property_no_member_3269.py",
      [
        "B",
        "test"
      ]
    ],
    [
      "tests/functional/r/repeated_keyword.py",
      [
        "test"
      ]
    ],
    [
      "tests/functional/s/statement_without_effect.py",
      [
        "ClassLevelAttributeTest",
        "test"
      ]
    ],
    [
      "tests/functional/s/super/super_checks.py",
      [
        "SuperDifferentScope",
        "test"
      ]
    ],
    [
      "tests/functional/t/trailing_comma_tuple.py",
      [
        "test"
      ]
    ],
    [
      "tests/functional/t/try_except_raise_crash.py",
      [
        "test"
      ]
    ],
    [
      "tests/functional/u/unbalanced_tuple_unpacking.py",
      [
        "UnbalancedUnpacking",
        "test"
      ]
    ],
    [
      "tests/functional/u/unbalanced_tuple_unpacking_py30.py",
      [
        "test"
      ]
    ],
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "test"
      ]
    ],
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "Self1",
        "test"
      ]
    ],
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "KeywordArgument",
        "test"
      ]
    ],
    [
      "tests/functional/u/undefined/undefined_variable_py30.py",
      [
        "Undefined",
        "test"
      ]
    ],
    [
      "tests/functional/u/unpacking_non_sequence.py",
      [
        "ClassUnpacking",
        "test"
      ]
    ],
    [
      "tests/functional/u/unpacking_non_sequence.py",
      [
        "TestBase",
        "test"
      ]
    ],
    [
      "tests/functional/u/unpacking_non_sequence.py",
      [
        "Test",
        "test"
      ]
    ],
    [
      "tests/functional/u/unsubscriptable_value.py",
      [
        "test"
      ]
    ],
    [
      "tests/functional/u/unsupported/unsupported_assignment_operation.py",
      [
        "test"
      ]
    ],
    [
      "tests/functional/u/unsupported/unsupported_delete_operation.py",
      [
        "test"
      ]
    ],
    [
      "tests/functional/u/unused/unused_import_assigned_to.py",
      [
        "test"
      ]
    ],
    [
      "tests/functional/u/unused/unused_variable.py",
      [
        "HasUnusedDunderClass",
        "test"
      ]
    ],
    [
      "tests/functional/u/use/used_prior_global_declaration.py",
      [
        "test"
      ]
    ],
    [
      "tests/functional/u/use/using_constant_test.py",
      [
        "test"
      ]
    ],
    [
      "tests/functional/u/useless/useless_type_doc.py",
      [
        "test"
      ]
    ],
    [
      "tests/regrtest_data/unused_variable.py",
      [
        "test"
      ]
    ]
  ],
  "__contains__": [
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "Structure",
        "__contains__"
      ]
    ],
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "Container",
        "__contains__"
      ]
    ],
    [
      "tests/functional/a/abstract/abstract_method_py3.py",
      [
        "Structure",
        "__contains__"
      ]
    ],
    [
      "tests/functional/a/abstract/abstract_method_py3.py",
      [
        "Container",
        "__contains__"
      ]
    ],
    [
      "tests/functional/m/member/membership_protocol.py",
      [
        "UniversalContainer",
        "__contains__"
      ]
    ],
    [
      "tests/functional/m/member/membership_protocol_py3.py",
      [
        "MetaContainer",
        "__contains__"
      ]
    ]
  ],
  "keys": [
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "Iterator",
        "keys"
      ]
    ],
    [
      "tests/functional/a/abstract/abstract_method_py3.py",
      [
        "Iterator",
        "keys"
      ]
    ],
    [
      "tests/functional/c/consider/consider_iterating_dictionary.py",
      [
        "CustomClass",
        "keys"
      ]
    ],
    [
      "tests/functional/m/mapping_context.py",
      [
        "CustomMapping",
        "keys"
      ]
    ],
    [
      "tests/functional/m/mapping_context_py3.py",
      [
        "Meta",
        "keys"
      ]
    ]
  ],
  "length": [
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "AbstractSizable",
        "length"
      ]
    ],
    [
      "tests/functional/a/abstract/abstract_method_py3.py",
      [
        "AbstractSizable",
        "length"
      ]
    ]
  ],
  "main2": [
    [
      "tests/functional/a/abstract/abstract_class_instantiated_py3.py",
      [
        "main2"
      ]
    ]
  ],
  "aaaa": [
    [
      "tests/functional/a/abstract/abstract_method_py3.py",
      [
        "Abstract",
        "aaaa"
      ]
    ],
    [
      "tests/functional/a/abstract/abstract_method_py3.py",
      [
        "Concrete",
        "aaaa"
      ]
    ]
  ],
  "bbbb": [
    [
      "tests/functional/a/abstract/abstract_method_py3.py",
      [
        "Abstract",
        "bbbb"
      ]
    ]
  ],
  "cccc": [
    [
      "tests/functional/a/abstract/abstract_method_py3.py",
      [
        "AbstractB",
        "cccc"
      ]
    ]
  ],
  "readUntilArray": [
    [
      "tests/functional/a/access/access_attr_before_def_false_positive.py",
      [
        "SeeTelnet",
        "readUntilArray"
      ]
    ]
  ],
  "Work": [
    [
      "tests/functional/a/access/access_attr_before_def_false_positive.py",
      [
        "Derived",
        "Work"
      ]
    ]
  ],
  "use_attr": [
    [
      "tests/functional/a/access/access_attr_before_def_false_positive.py",
      [
        "DefinedOutsideInit",
        "use_attr"
      ]
    ],
    [
      "tests/functional/m/member/member_checks.py",
      [
        "Client",
        "use_attr"
      ]
    ]
  ],
  "__getattr__": [
    [
      "tests/functional/a/access/access_member_before_definition.py",
      [
        "Bbbb",
        "__getattr__"
      ]
    ],
    [
      "tests/functional/i/iterable_context.py",
      [
        "HasDynamicGetattr",
        "__getattr__"
      ]
    ],
    [
      "tests/functional/m/mapping_context.py",
      [
        "HasDynamicGetattr",
        "__getattr__"
      ]
    ],
    [
      "tests/functional/m/member/member_checks.py",
      [
        "Getattr",
        "__getattr__"
      ]
    ],
    [
      "tests/functional/m/member/member_checks.py",
      [
        "MetaWithDynamicGetattr",
        "__getattr__"
      ]
    ],
    [
      "tests/functional/s/string/string_formatting.py",
      [
        "Custom",
        "__getattr__"
      ]
    ],
    [
      "tests/functional/s/super/super_checks.py",
      [
        "BaseClass",
        "__getattr__"
      ]
    ],
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "Invalid",
        "__getattr__"
      ]
    ]
  ],
  "catchme": [
    [
      "tests/functional/a/access/access_member_before_definition.py",
      [
        "Bbbb",
        "catchme"
      ]
    ]
  ],
  "test_mixin": [
    [
      "tests/functional/a/access/access_member_before_definition.py",
      [
        "Mixin",
        "test_mixin"
      ]
    ],
    [
      "tests/functional/a/attribute_defined_outside_init.py",
      [
        "Mixin",
        "test_mixin"
      ]
    ]
  ],
  "clsmeth": [
    [
      "tests/functional/a/access/access_to_protected_members.py",
      [
        "MyClass",
        "clsmeth"
      ]
    ]
  ],
  "_private_method": [
    [
      "tests/functional/a/access/access_to_protected_members.py",
      [
        "MyClass",
        "_private_method"
      ]
    ]
  ],
  "correct_access": [
    [
      "tests/functional/a/access/access_to_protected_members.py",
      [
        "Issue1031",
        "correct_access"
      ]
    ]
  ],
  "incorrect_access": [
    [
      "tests/functional/a/access/access_to_protected_members.py",
      [
        "Issue1031",
        "incorrect_access"
      ]
    ]
  ],
  "not_in_special": [
    [
      "tests/functional/a/access/access_to_protected_members.py",
      [
        "Issue1802",
        "not_in_special"
      ]
    ]
  ],
  "__le__": [
    [
      "tests/functional/a/access/access_to_protected_members.py",
      [
        "Issue1802",
        "__le__"
      ]
    ],
    [
      "tests/functional/c/consider/consider_using_min_max_builtin.py",
      [
        "AA",
        "__le__"
      ]
    ]
  ],
  "__fake_special__": [
    [
      "tests/functional/a/access/access_to_protected_members.py",
      [
        "Issue1802",
        "__fake_special__"
      ]
    ]
  ],
  "access_cls_attr": [
    [
      "tests/functional/a/access/access_to_protected_members.py",
      [
        "Issue1159",
        "access_cls_attr"
      ]
    ]
  ],
  "assign_cls_attr": [
    [
      "tests/functional/a/access/access_to_protected_members.py",
      [
        "Issue1159",
        "assign_cls_attr"
      ]
    ]
  ],
  "access_inst_attr": [
    [
      "tests/functional/a/access/access_to_protected_members.py",
      [
        "Issue1159",
        "access_inst_attr"
      ]
    ],
    [
      "tests/functional/a/access/access_to_protected_members.py",
      [
        "Issue1159Subclass",
        "access_inst_attr"
      ]
    ]
  ],
  "assign_inst_attr": [
    [
      "tests/functional/a/access/access_to_protected_members.py",
      [
        "Issue1159",
        "assign_inst_attr"
      ]
    ],
    [
      "tests/functional/a/access/access_to_protected_members.py",
      [
        "Issue1159Subclass",
        "assign_inst_attr"
      ]
    ]
  ],
  "access_other_attr": [
    [
      "tests/functional/a/access/access_to_protected_members.py",
      [
        "Issue1159",
        "access_other_attr"
      ]
    ],
    [
      "tests/functional/a/access/access_to_protected_members.py",
      [
        "Issue1159Subclass",
        "access_other_attr"
      ]
    ]
  ],
  "access_missing_member": [
    [
      "tests/functional/a/access/access_to_protected_members.py",
      [
        "Issue1159Subclass",
        "access_missing_member"
      ]
    ]
  ],
  "assign_missing_member": [
    [
      "tests/functional/a/access/access_to_protected_members.py",
      [
        "Issue1159Subclass",
        "assign_missing_member"
      ]
    ]
  ],
  "func": [
    [
      "tests/functional/a/alternative/alternative_union_syntax.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/a/alternative/alternative_union_syntax_error.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/a/alternative/alternative_union_syntax_py37.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/a/arguments.py",
      [
        "TestStaticMethod",
        "func"
      ]
    ],
    [
      "tests/functional/a/arguments.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Classmethod",
        "func"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "ClassmethodChild",
        "func"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Staticmethod",
        "func"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "StaticmethodChild",
        "func"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "StaticmethodChild2",
        "func"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "ParentT1",
        "func"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "ChildT1",
        "func"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "ParentT2",
        "func"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "ChildT2",
        "func"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "ParentT3",
        "func"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "ChildT3",
        "func"
      ]
    ],
    [
      "tests/functional/a/assign/assignment_expression.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/a/assign/assignment_from_no_return_py3.py",
      [
        "Coro",
        "func"
      ]
    ],
    [
      "tests/functional/a/async_functions.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/a/attribute_defined_outside_init.py",
      [
        "F",
        "func"
      ]
    ],
    [
      "tests/functional/a/await_outside_async.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/c/cached_property.py",
      [
        "Parent",
        "func"
      ]
    ],
    [
      "tests/functional/c/cached_property.py",
      [
        "Child",
        "func"
      ]
    ],
    [
      "tests/functional/c/class_scope.py",
      [
        "Well",
        "func"
      ]
    ],
    [
      "tests/functional/c/condition_evals_to_constant.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/d/defined_and_used_on_same_line.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/e/eval_used.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/e/exec_used_py3.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/ext/code_style/code_style_consider_using_namedtuple_or_dataclass.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/f/function_redefined.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_typing.py",
      [
        "DerivedList",
        "func"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_typing.py",
      [
        "DerivedSet",
        "func"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_typing.py",
      [
        "DerivedOrderedDict",
        "func"
      ]
    ],
    [
      "tests/functional/m/member/member_checks_ignore_none.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/m/monkeypatch_method.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/n/name/names_in__all__.py",
      [
        "Klass",
        "func"
      ]
    ],
    [
      "tests/functional/n/nonlocal_without_binding.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/n/nonlocal_without_binding.py",
      [
        "SomeClass",
        "func"
      ]
    ],
    [
      "tests/functional/n/not_async_context_manager_py37.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_error.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_py39.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/p/protected_access_access_different_scopes.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/r/redefined_outer_name_type_checking.py",
      [
        "Cls",
        "func"
      ]
    ],
    [
      "tests/functional/r/regression/regression_2937_ifexp.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/r/regression/regression___file___global.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/r/regression/regression_implicit_none_with_no_return.py",
      [
        "A",
        "func"
      ]
    ],
    [
      "tests/functional/r/regression/regression_infer_call_result_3690.py",
      [
        "Class",
        "func"
      ]
    ],
    [
      "tests/functional/r/regression/regression_no_value_for_parameter.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/r/reimport.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/s/simplifiable/simplifiable_condition.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/s/singledispatch_functions_py3.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/s/slots_checks.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/s/statement_without_effect_py36.py",
      [
        "ClassLevelAttributeTest",
        "func"
      ]
    ],
    [
      "tests/functional/t/too/too_many_arguments_issue_1045.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/u/unused/unused_argument_py3.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/u/unused/unused_global_variable3.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/u/unused/unused_import_positional_only_py38.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/u/unused/unused_variable.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/u/use/used_before_assignment_488.py",
      [
        "func"
      ]
    ],
    [
      "tests/functional/u/use/used_before_assignment_issue1081.py",
      [
        "func"
      ]
    ],
    [
      "tests/input/func_w0122_py_30.py",
      [
        "func"
      ]
    ],
    [
      "tests/input/func_w0401_disabled_in_func.py",
      [
        "func"
      ]
    ],
    [
      "tests/regrtest_data/fail_under_plus7_5.py",
      [
        "func"
      ]
    ]
  ],
  "my_decorator": [
    [
      "tests/functional/a/alternative/alternative_union_syntax.py",
      [
        "my_decorator"
      ]
    ],
    [
      "tests/functional/a/alternative/alternative_union_syntax_error.py",
      [
        "my_decorator"
      ]
    ],
    [
      "tests/functional/a/alternative/alternative_union_syntax_py37.py",
      [
        "my_decorator"
      ]
    ],
    [
      "tests/functional/m/method_hidden.py",
      [
        "my_decorator"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585.py",
      [
        "my_decorator"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_error.py",
      [
        "my_decorator"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_py39.py",
      [
        "my_decorator"
      ]
    ]
  ],
  "decorator": [
    [
      "tests/functional/a/arguments.py",
      [
        "decorator"
      ]
    ],
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "decorator"
      ]
    ]
  ],
  "static_method": [
    [
      "tests/functional/a/arguments.py",
      [
        "DemoClass",
        "static_method"
      ]
    ]
  ],
  "class_method": [
    [
      "tests/functional/a/arguments.py",
      [
        "DemoClass",
        "class_method"
      ]
    ]
  ],
  "method": [
    [
      "tests/functional/a/arguments.py",
      [
        "DemoClass",
        "method"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Super",
        "method"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Sub",
        "method"
      ]
    ],
    [
      "tests/functional/d/decorator_scope.py",
      [
        "Test",
        "method"
      ]
    ],
    [
      "tests/functional/d/deprecated/deprecated_decorators.py",
      [
        "Foo",
        "method"
      ]
    ],
    [
      "tests/functional/m/member/member_checks.py",
      [
        "Provider",
        "method"
      ]
    ],
    [
      "tests/functional/m/method_hidden.py",
      [
        "Foo",
        "method"
      ]
    ],
    [
      "tests/functional/m/missing/missing_self_argument.py",
      [
        "MyClass",
        "method"
      ]
    ],
    [
      "tests/functional/n/no/no_self_use.py",
      [
        "Super",
        "method"
      ]
    ],
    [
      "tests/functional/n/no/no_self_use.py",
      [
        "Sub1",
        "method"
      ]
    ],
    [
      "tests/functional/p/protected_access_access_different_scopes.py",
      [
        "MyClass",
        "method"
      ]
    ],
    [
      "tests/functional/r/recursion/recursion_error_crash_2683.py",
      [
        "Cls",
        "method"
      ]
    ],
    [
      "tests/functional/t/test_compile.py",
      [
        "WrapperClass",
        "method"
      ]
    ],
    [
      "tests/functional/t/too/too_many_arguments_overload.py",
      [
        "ClassA",
        "method"
      ]
    ],
    [
      "tests/functional/t/too/too_many_arguments_overload.py",
      [
        "ClassB",
        "method"
      ]
    ],
    [
      "tests/functional/t/typing_use.py",
      [
        "Cls",
        "method"
      ]
    ],
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "DunderClass",
        "method"
      ]
    ],
    [
      "tests/functional/u/unused/unused_argument.py",
      [
        "AAAA",
        "method"
      ]
    ],
    [
      "tests/functional/u/use/using_constant_test.py",
      [
        "Class",
        "method"
      ]
    ]
  ],
  "decorated_method": [
    [
      "tests/functional/a/arguments.py",
      [
        "DemoClass",
        "decorated_method"
      ]
    ]
  ],
  "function_1_arg": [
    [
      "tests/functional/a/arguments.py",
      [
        "function_1_arg"
      ]
    ]
  ],
  "function_3_args": [
    [
      "tests/functional/a/arguments.py",
      [
        "function_3_args"
      ]
    ],
    [
      "tests/functional/a/arguments_out_of_order.py",
      [
        "function_3_args"
      ]
    ]
  ],
  "function_default_arg": [
    [
      "tests/functional/a/arguments.py",
      [
        "function_default_arg"
      ]
    ],
    [
      "tests/functional/a/arguments_out_of_order.py",
      [
        "function_default_arg"
      ]
    ]
  ],
  "method_tests": [
    [
      "tests/functional/a/arguments.py",
      [
        "method_tests"
      ]
    ]
  ],
  "no_context_but_redefined": [
    [
      "tests/functional/a/arguments.py",
      [
        "no_context_but_redefined"
      ]
    ]
  ],
  "no_context_one_elem": [
    [
      "tests/functional/a/arguments.py",
      [
        "no_context_one_elem"
      ]
    ]
  ],
  "expect_three": [
    [
      "tests/functional/a/arguments.py",
      [
        "expect_three"
      ]
    ]
  ],
  "no_context": [
    [
      "tests/functional/a/arguments.py",
      [
        "no_context"
      ]
    ]
  ],
  "no_context_two": [
    [
      "tests/functional/a/arguments.py",
      [
        "no_context_two"
      ]
    ]
  ],
  "no_context_three": [
    [
      "tests/functional/a/arguments.py",
      [
        "no_context_three"
      ]
    ]
  ],
  "compare_prices": [
    [
      "tests/functional/a/arguments.py",
      [
        "compare_prices"
      ]
    ]
  ],
  "find_problems2": [
    [
      "tests/functional/a/arguments.py",
      [
        "find_problems2"
      ]
    ]
  ],
  "namedtuple_replace_issue_1036": [
    [
      "tests/functional/a/arguments.py",
      [
        "namedtuple_replace_issue_1036"
      ]
    ]
  ],
  "some_func": [
    [
      "tests/functional/a/arguments.py",
      [
        "some_func"
      ]
    ],
    [
      "tests/functional/a/assign/assignment_from_no_return.py",
      [
        "some_func"
      ]
    ],
    [
      "tests/functional/f/function_redefined.py",
      [
        "some_func"
      ]
    ],
    [
      "tests/functional/l/len_checks.py",
      [
        "some_func"
      ]
    ],
    [
      "tests/functional/t/trailing_comma_tuple.py",
      [
        "some_func"
      ]
    ]
  ],
  "mutation_decorator": [
    [
      "tests/functional/a/arguments.py",
      [
        "mutation_decorator"
      ]
    ]
  ],
  "other_mutation_decorator": [
    [
      "tests/functional/a/arguments.py",
      [
        "other_mutation_decorator"
      ]
    ]
  ],
  "mutated_function": [
    [
      "tests/functional/a/arguments.py",
      [
        "mutated_function"
      ]
    ]
  ],
  "mutated": [
    [
      "tests/functional/a/arguments.py",
      [
        "mutated"
      ]
    ]
  ],
  "func1": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Classmethod",
        "func1"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "ClassmethodChild",
        "func1"
      ]
    ],
    [
      "tests/functional/ext/typing/typing_consider_using_alias.py",
      [
        "func1"
      ]
    ],
    [
      "tests/functional/ext/typing/typing_consider_using_alias_without_future.py",
      [
        "func1"
      ]
    ],
    [
      "tests/functional/ext/typing/typing_consider_using_union.py",
      [
        "func1"
      ]
    ],
    [
      "tests/functional/ext/typing/typing_consider_using_union_py310.py",
      [
        "func1"
      ]
    ],
    [
      "tests/functional/ext/typing/typing_consider_using_union_without_future.py",
      [
        "func1"
      ]
    ],
    [
      "tests/functional/ext/typing/typing_deprecated_alias.py",
      [
        "func1"
      ]
    ],
    [
      "tests/functional/f/function_redefined.py",
      [
        "func1"
      ]
    ],
    [
      "tests/functional/t/ternary.py",
      [
        "func1"
      ]
    ],
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "func1"
      ]
    ],
    [
      "tests/functional/u/unreachable.py",
      [
        "func1"
      ]
    ],
    [
      "tests/functional/u/unused/unused_typing_imports.py",
      [
        "func1"
      ]
    ]
  ],
  "fromkeys": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Builtins",
        "fromkeys"
      ]
    ]
  ],
  "has_kwargs": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Varargs",
        "has_kwargs"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "VarargsChild",
        "has_kwargs"
      ]
    ]
  ],
  "no_kwargs": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Varargs",
        "no_kwargs"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "VarargsChild",
        "no_kwargs"
      ]
    ]
  ],
  "__private": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Super",
        "__private"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Sub",
        "__private"
      ]
    ]
  ],
  "__private2_": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Super",
        "__private2_"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Sub",
        "__private2_"
      ]
    ]
  ],
  "___private3": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Super",
        "___private3"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Sub",
        "___private3"
      ]
    ]
  ],
  "close_1": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "PropertySetter",
        "close_1"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_overridden_method.py",
      [
        "PropertySetter",
        "close_1"
      ]
    ]
  ],
  "impl": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "SuperClass",
        "impl"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "MyClass",
        "impl"
      ]
    ]
  ],
  "mixed": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Mixed",
        "mixed"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "MixedChild1",
        "mixed"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "MixedChild2",
        "mixed"
      ]
    ]
  ],
  "meth": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "ParentClass",
        "meth"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "ChildClass",
        "meth"
      ]
    ]
  ],
  "kwonly_1": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "AbstractFoo",
        "kwonly_1"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Foo",
        "kwonly_1"
      ]
    ]
  ],
  "kwonly_2": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "AbstractFoo",
        "kwonly_2"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Foo",
        "kwonly_2"
      ]
    ]
  ],
  "kwonly_3": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "AbstractFoo",
        "kwonly_3"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Foo",
        "kwonly_3"
      ]
    ]
  ],
  "kwonly_4": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "AbstractFoo",
        "kwonly_4"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Foo",
        "kwonly_4"
      ]
    ]
  ],
  "kwonly_5": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "AbstractFoo",
        "kwonly_5"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Foo",
        "kwonly_5"
      ]
    ]
  ],
  "kwonly_6": [
    [
      "tests/functional/a/arguments_differ.py",
      [
        "AbstractFoo",
        "kwonly_6"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Foo",
        "kwonly_6"
      ]
    ],
    [
      "tests/functional/a/arguments_differ.py",
      [
        "Foo2",
        "kwonly_6"
      ]
    ]
  ],
  "function_0_args": [
    [
      "tests/functional/a/arguments_out_of_order.py",
      [
        "args_out_of_order",
        "TestClass",
        "function_0_args"
      ]
    ]
  ],
  "function_2_args": [
    [
      "tests/functional/a/arguments_out_of_order.py",
      [
        "args_out_of_order",
        "TestClass",
        "function_2_args"
      ]
    ]
  ],
  "args_out_of_order": [
    [
      "tests/functional/a/arguments_out_of_order.py",
      [
        "args_out_of_order"
      ]
    ]
  ],
  "brew": [
    [
      "tests/functional/a/arguments_renamed.py",
      [
        "Fruit",
        "brew"
      ]
    ],
    [
      "tests/functional/a/arguments_renamed.py",
      [
        "Orange",
        "brew"
      ]
    ],
    [
      "tests/functional/a/arguments_renamed.py",
      [
        "Banana",
        "brew"
      ]
    ]
  ],
  "eat_with_condiment": [
    [
      "tests/functional/a/arguments_renamed.py",
      [
        "Fruit",
        "eat_with_condiment"
      ]
    ],
    [
      "tests/functional/a/arguments_renamed.py",
      [
        "Orange",
        "eat_with_condiment"
      ]
    ],
    [
      "tests/functional/a/arguments_renamed.py",
      [
        "Banana",
        "eat_with_condiment"
      ]
    ]
  ],
  "kwargs_test": [
    [
      "tests/functional/a/arguments_renamed.py",
      [
        "Parent",
        "kwargs_test"
      ]
    ],
    [
      "tests/functional/a/arguments_renamed.py",
      [
        "Child",
        "kwargs_test"
      ]
    ],
    [
      "tests/functional/a/arguments_renamed.py",
      [
        "Child2",
        "kwargs_test"
      ]
    ]
  ],
  "test1": [
    [
      "tests/functional/a/arguments_renamed.py",
      [
        "ParentDefaults",
        "test1"
      ]
    ],
    [
      "tests/functional/a/arguments_renamed.py",
      [
        "ChildDefaults",
        "test1"
      ]
    ],
    [
      "tests/functional/m/misplaced_bare_raise.py",
      [
        "test1"
      ]
    ],
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "test1"
      ]
    ],
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "KeywordArgument",
        "test1"
      ]
    ],
    [
      "tests/functional/u/undefined/undefined_variable_py30.py",
      [
        "Undefined",
        "test1"
      ]
    ],
    [
      "tests/functional/u/undefined/undefined_variable_py30.py",
      [
        "Undefined1",
        "InnerScope",
        "test1"
      ]
    ]
  ],
  "test2": [
    [
      "tests/functional/a/arguments_renamed.py",
      [
        "ParentDefaults",
        "test2"
      ]
    ],
    [
      "tests/functional/a/arguments_renamed.py",
      [
        "ChildDefaults",
        "test2"
      ]
    ],
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "KeywordArgument",
        "test2"
      ]
    ],
    [
      "tests/functional/u/undefined/undefined_variable_py30.py",
      [
        "Undefined",
        "test2"
      ]
    ]
  ],
  "test3": [
    [
      "tests/functional/a/arguments_renamed.py",
      [
        "ParentDefaults",
        "test3"
      ]
    ],
    [
      "tests/functional/a/arguments_renamed.py",
      [
        "ChildDefaults",
        "test3"
      ]
    ]
  ],
  "func_no_return": [
    [
      "tests/functional/a/assign/assigment_from_no_return.py",
      [
        "func_no_return"
      ]
    ]
  ],
  "func_return_none": [
    [
      "tests/functional/a/assign/assigment_from_no_return.py",
      [
        "func_return_none"
      ]
    ]
  ],
  "func_implicit_return_none": [
    [
      "tests/functional/a/assign/assigment_from_no_return.py",
      [
        "func_implicit_return_none"
      ]
    ]
  ],
  "func_return_none_and_smth": [
    [
      "tests/functional/a/assign/assigment_from_no_return.py",
      [
        "func_return_none_and_smth"
      ]
    ]
  ],
  "generator": [
    [
      "tests/functional/a/assign/assigment_from_no_return.py",
      [
        "generator"
      ]
    ],
    [
      "tests/functional/n/not_context_manager.py",
      [
        "generator"
      ]
    ],
    [
      "tests/functional/y/yield_assign_py25.py",
      [
        "generator"
      ]
    ]
  ],
  "abstract_method": [
    [
      "tests/functional/a/assign/assigment_from_no_return.py",
      [
        "Abstract",
        "abstract_method"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_related.py",
      [
        "ClsAbstract",
        "abstract_method"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_related_py39.py",
      [
        "ClsAbstract",
        "abstract_method"
      ]
    ]
  ],
  "use_abstract": [
    [
      "tests/functional/a/assign/assigment_from_no_return.py",
      [
        "Abstract",
        "use_abstract"
      ]
    ]
  ],
  "test_1": [
    [
      "tests/functional/a/assign/assigning_non_slot.py",
      [
        "PropertyGood",
        "test_1"
      ]
    ],
    [
      "tests/functional/m/missing/missing_docstring.py",
      [
        "Property",
        "test_1"
      ]
    ],
    [
      "tests/functional/n/not_callable.py",
      [
        "PropertyTest",
        "test_1"
      ]
    ]
  ],
  "__get__": [
    [
      "tests/functional/a/assign/assigning_non_slot.py",
      [
        "DataDescriptor",
        "__get__"
      ]
    ],
    [
      "tests/functional/a/assign/assigning_non_slot.py",
      [
        "NonDataDescriptor",
        "__get__"
      ]
    ],
    [
      "tests/functional/m/method_hidden.py",
      [
        "CustomProperty",
        "__get__"
      ]
    ]
  ],
  "__set__": [
    [
      "tests/functional/a/assign/assigning_non_slot.py",
      [
        "DataDescriptor",
        "__set__"
      ]
    ],
    [
      "tests/functional/m/method_hidden.py",
      [
        "CustomProperty",
        "__set__"
      ]
    ]
  ],
  "dont_emit_for_descriptors": [
    [
      "tests/functional/a/assign/assigning_non_slot.py",
      [
        "dont_emit_for_descriptors"
      ]
    ]
  ],
  "release": [
    [
      "tests/functional/a/assign/assigning_non_slot.py",
      [
        "ClassReassigningDunderClass",
        "release"
      ]
    ],
    [
      "tests/functional/a/assign/assigning_non_slot.py",
      [
        "ClassReassingingInvalidLayoutClass",
        "release"
      ]
    ]
  ],
  "decorate": [
    [
      "tests/functional/a/assign/assignment_from_no_return.py",
      [
        "decorate"
      ]
    ]
  ],
  "some_other_decorated_method": [
    [
      "tests/functional/a/assign/assignment_from_no_return.py",
      [
        "Class",
        "some_other_decorated_method"
      ]
    ]
  ],
  "some_other_method": [
    [
      "tests/functional/a/assign/assignment_from_no_return.py",
      [
        "Class",
        "some_other_method"
      ]
    ]
  ],
  "compute": [
    [
      "tests/functional/a/assign/assignment_from_no_return.py",
      [
        "Parent",
        "compute"
      ]
    ],
    [
      "tests/functional/a/assign/assignment_from_no_return.py",
      [
        "Child",
        "compute"
      ]
    ]
  ],
  "bla1": [
    [
      "tests/functional/a/assign/assignment_from_no_return_py3.py",
      [
        "bla1"
      ]
    ]
  ],
  "bla2": [
    [
      "tests/functional/a/assign/assignment_from_no_return_py3.py",
      [
        "bla2"
      ]
    ]
  ],
  "combining_coroutine1": [
    [
      "tests/functional/a/assign/assignment_from_no_return_py3.py",
      [
        "combining_coroutine1"
      ]
    ]
  ],
  "combining_coroutine2": [
    [
      "tests/functional/a/assign/assignment_from_no_return_py3.py",
      [
        "combining_coroutine2"
      ]
    ]
  ],
  "do_stuff": [
    [
      "tests/functional/a/assign/assignment_from_no_return_py3.py",
      [
        "do_stuff"
      ]
    ],
    [
      "tests/functional/u/unbalanced_tuple_unpacking.py",
      [
        "do_stuff"
      ]
    ],
    [
      "tests/functional/u/undefined/undefined_loop_variable.py",
      [
        "do_stuff"
      ]
    ]
  ],
  "some_function": [
    [
      "tests/functional/a/async_functions.py",
      [
        "some_function"
      ]
    ],
    [
      "tests/functional/m/missing/missing_kwoa_py3.py",
      [
        "some_function"
      ]
    ]
  ],
  "complex_function": [
    [
      "tests/functional/a/async_functions.py",
      [
        "complex_function"
      ]
    ]
  ],
  "foo": [
    [
      "tests/functional/a/async_functions.py",
      [
        "foo"
      ]
    ],
    [
      "tests/functional/c/comparison_with_callable.py",
      [
        "foo"
      ]
    ],
    [
      "tests/functional/c/consider/consider_using_sys_exit.py",
      [
        "foo"
      ]
    ],
    [
      "tests/functional/d/decorator_unused.py",
      [
        "foo"
      ]
    ],
    [
      "tests/functional/l/logical_tautology.py",
      [
        "foo"
      ]
    ],
    [
      "tests/functional/m/misplaced_format_function.py",
      [
        "foo"
      ]
    ],
    [
      "tests/functional/r/recursion/recursion_error_2906.py",
      [
        "foo"
      ]
    ],
    [
      "tests/functional/s/subprocess_popen_preexec_fn.py",
      [
        "foo"
      ]
    ],
    [
      "tests/functional/u/use/use_symbolic_message_instead.py",
      [
        "foo"
      ]
    ]
  ],
  "set_y": [
    [
      "tests/functional/a/attribute_defined_outside_init.py",
      [
        "A",
        "set_y"
      ]
    ]
  ],
  "set_x": [
    [
      "tests/functional/a/attribute_defined_outside_init.py",
      [
        "A",
        "set_x"
      ]
    ]
  ],
  "set_z": [
    [
      "tests/functional/a/attribute_defined_outside_init.py",
      [
        "A",
        "set_z"
      ]
    ],
    [
      "tests/functional/a/attribute_defined_outside_init.py",
      [
        "D",
        "set_z"
      ]
    ]
  ],
  "prop_1": [
    [
      "tests/functional/a/attribute_defined_outside_init.py",
      [
        "Mine",
        "prop_1"
      ]
    ]
  ],
  "__post_init__": [
    [
      "tests/functional/a/attribute_defined_outside_init.py",
      [
        "DataClass",
        "__post_init__"
      ]
    ]
  ],
  "nested": [
    [
      "tests/functional/a/await_outside_async.py",
      [
        "nested"
      ]
    ]
  ],
  "not_async": [
    [
      "tests/functional/a/await_outside_async.py",
      [
        "not_async"
      ]
    ]
  ],
  "okay_function": [
    [
      "tests/functional/a/await_outside_async.py",
      [
        "okay_function"
      ]
    ]
  ],
  "outer_func": [
    [
      "tests/functional/a/await_outside_async.py",
      [
        "outer_func"
      ]
    ]
  ],
  "totoo": [
    [
      "tests/functional/b/bad_indentation.py",
      [
        "totoo"
      ]
    ]
  ],
  "tutuu": [
    [
      "tests/functional/b/bad_indentation.py",
      [
        "tutuu"
      ]
    ]
  ],
  "titii": [
    [
      "tests/functional/b/bad_indentation.py",
      [
        "titii"
      ]
    ]
  ],
  "tataa": [
    [
      "tests/functional/b/bad_indentation.py",
      [
        "tataa"
      ]
    ]
  ],
  "__reversed__": [
    [
      "tests/functional/b/bad_reversed_sequence.py",
      [
        "GoodReversed",
        "__reversed__"
      ]
    ]
  ],
  "uninferable": [
    [
      "tests/functional/b/bad_reversed_sequence.py",
      [
        "uninferable"
      ]
    ]
  ],
  "test_dict_ancestor_and_reversed": [
    [
      "tests/functional/b/bad_reversed_sequence.py",
      [
        "test_dict_ancestor_and_reversed"
      ]
    ]
  ],
  "test_dont_emit_for_reversing_enums": [
    [
      "tests/functional/b/bad_reversed_sequence.py",
      [
        "test_dont_emit_for_reversing_enums"
      ]
    ]
  ],
  "met": [
    [
      "tests/functional/b/base_init_vars.py",
      [
        "BaseClass",
        "met"
      ]
    ],
    [
      "tests/functional/b/base_init_vars.py",
      [
        "MyClass",
        "met"
      ]
    ]
  ],
  "meeting": [
    [
      "tests/functional/b/base_init_vars.py",
      [
        "BaseClass",
        "meeting"
      ]
    ]
  ],
  "baz": [
    [
      "tests/functional/b/blacklisted_name.py",
      [
        "baz"
      ]
    ],
    [
      "tests/functional/u/use/use_symbolic_message_instead.py",
      [
        "baz"
      ]
    ]
  ],
  "func_scope": [
    [
      "tests/functional/b/bugfix_local_scope_metaclass_1177.py",
      [
        "func_scope"
      ]
    ]
  ],
  "mixed_scopes": [
    [
      "tests/functional/b/bugfix_local_scope_metaclass_1177.py",
      [
        "mixed_scopes"
      ]
    ]
  ],
  "imported_and_nested_scope1": [
    [
      "tests/functional/b/bugfix_local_scope_metaclass_1177.py",
      [
        "imported_and_nested_scope1"
      ]
    ]
  ],
  "imported_and_nested_scope2": [
    [
      "tests/functional/b/bugfix_local_scope_metaclass_1177.py",
      [
        "imported_and_nested_scope2"
      ]
    ]
  ],
  "log10_2": [
    [
      "tests/functional/b/builtin_module_test.py",
      [
        "log10_2"
      ]
    ]
  ],
  "value": [
    [
      "tests/functional/c/cached_property.py",
      [
        "Parent",
        "value"
      ]
    ],
    [
      "tests/functional/c/cached_property.py",
      [
        "Child",
        "value"
      ]
    ]
  ],
  "good_case": [
    [
      "tests/functional/c/cellvar_escaping_loop.py",
      [
        "good_case"
      ]
    ],
    [
      "tests/functional/i/invalid/e/invalid_exceptions_raised.py",
      [
        "good_case"
      ]
    ]
  ],
  "good_case2": [
    [
      "tests/functional/c/cellvar_escaping_loop.py",
      [
        "good_case2"
      ]
    ],
    [
      "tests/functional/i/invalid/e/invalid_exceptions_raised.py",
      [
        "good_case2"
      ]
    ]
  ],
  "good_case3": [
    [
      "tests/functional/c/cellvar_escaping_loop.py",
      [
        "good_case3"
      ]
    ],
    [
      "tests/functional/i/invalid/e/invalid_exceptions_raised.py",
      [
        "good_case3"
      ]
    ]
  ],
  "good_case4": [
    [
      "tests/functional/c/cellvar_escaping_loop.py",
      [
        "good_case4"
      ]
    ]
  ],
  "good_case5": [
    [
      "tests/functional/c/cellvar_escaping_loop.py",
      [
        "good_case5"
      ]
    ]
  ],
  "good_case6": [
    [
      "tests/functional/c/cellvar_escaping_loop.py",
      [
        "good_case6"
      ]
    ]
  ],
  "good_case7": [
    [
      "tests/functional/c/cellvar_escaping_loop.py",
      [
        "good_case7"
      ]
    ]
  ],
  "good_case8": [
    [
      "tests/functional/c/cellvar_escaping_loop.py",
      [
        "good_case8"
      ]
    ]
  ],
  "bad_case": [
    [
      "tests/functional/c/cellvar_escaping_loop.py",
      [
        "bad_case"
      ]
    ],
    [
      "tests/functional/l/loopvar_in_dict_comp_py27.py",
      [
        "bad_case"
      ]
    ]
  ],
  "bad_case2": [
    [
      "tests/functional/c/cellvar_escaping_loop.py",
      [
        "bad_case2"
      ]
    ],
    [
      "tests/functional/i/invalid/e/invalid_exceptions_raised.py",
      [
        "bad_case2"
      ]
    ]
  ],
  "bad_case3": [
    [
      "tests/functional/c/cellvar_escaping_loop.py",
      [
        "bad_case3"
      ]
    ],
    [
      "tests/functional/i/invalid/e/invalid_exceptions_raised.py",
      [
        "bad_case3"
      ]
    ]
  ],
  "bad_case4": [
    [
      "tests/functional/c/cellvar_escaping_loop.py",
      [
        "bad_case4"
      ]
    ],
    [
      "tests/functional/i/invalid/e/invalid_exceptions_raised.py",
      [
        "bad_case4"
      ]
    ]
  ],
  "bad_case5": [
    [
      "tests/functional/c/cellvar_escaping_loop.py",
      [
        "bad_case5"
      ]
    ],
    [
      "tests/functional/i/invalid/e/invalid_exceptions_raised.py",
      [
        "bad_case5"
      ]
    ]
  ],
  "bad_case6": [
    [
      "tests/functional/c/cellvar_escaping_loop.py",
      [
        "bad_case6"
      ]
    ],
    [
      "tests/functional/i/invalid/e/invalid_exceptions_raised.py",
      [
        "bad_case6"
      ]
    ]
  ],
  "new_test": [
    [
      "tests/functional/c/cellvar_escaping_loop.py",
      [
        "Test",
        "new_test"
      ]
    ]
  ],
  "change_type": [
    [
      "tests/functional/c/class_attributes.py",
      [
        "Clazz",
        "change_type"
      ]
    ]
  ],
  "do_nothing": [
    [
      "tests/functional/c/class_attributes.py",
      [
        "Clazz",
        "do_nothing"
      ]
    ],
    [
      "tests/functional/w/with_used_before_assign.py",
      [
        "do_nothing"
      ]
    ]
  ],
  "whatever": [
    [
      "tests/functional/c/class_members_py30.py",
      [
        "MetaClass",
        "whatever"
      ]
    ]
  ],
  "work": [
    [
      "tests/functional/c/class_scope.py",
      [
        "Right",
        "work"
      ]
    ],
    [
      "tests/functional/c/class_scope.py",
      [
        "Wrong",
        "work"
      ]
    ]
  ],
  "makex": [
    [
      "tests/functional/c/classes_meth_could_be_a_function.py",
      [
        "Aimpl",
        "makex"
      ]
    ],
    [
      "tests/functional/c/classes_meth_could_be_a_function.py",
      [
        "Bimpl",
        "makex"
      ]
    ],
    [
      "tests/functional/c/classes_meth_could_be_a_function.py",
      [
        "Cimpl",
        "makex"
      ]
    ]
  ],
  "cmeth": [
    [
      "tests/functional/c/classes_protected_member_access.py",
      [
        "A3123",
        "cmeth"
      ]
    ]
  ],
  "smeth": [
    [
      "tests/functional/c/classes_protected_member_access.py",
      [
        "A3123",
        "smeth"
      ]
    ]
  ],
  "goo": [
    [
      "tests/functional/c/comparison_with_callable.py",
      [
        "goo"
      ]
    ],
    [
      "tests/functional/m/misplaced_format_function.py",
      [
        "goo"
      ]
    ]
  ],
  "fake_method": [
    [
      "tests/functional/c/comparison_with_callable.py",
      [
        "FakeClass",
        "fake_method"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "fake_method"
      ]
    ]
  ],
  "fake_property": [
    [
      "tests/functional/c/comparison_with_callable.py",
      [
        "FakeClass",
        "fake_property"
      ]
    ]
  ],
  "fake_property_2": [
    [
      "tests/functional/c/comparison_with_callable.py",
      [
        "FakeClass",
        "fake_property_2"
      ]
    ]
  ],
  "set_set_later": [
    [
      "tests/functional/c/confidence_filter.py",
      [
        "Client",
        "set_set_later"
      ]
    ],
    [
      "tests/functional/m/member/member_checks.py",
      [
        "Client",
        "set_set_later"
      ]
    ]
  ],
  "isinstances": [
    [
      "tests/functional/c/consider/consider_merging_isinstance.py",
      [
        "isinstances"
      ]
    ]
  ],
  "bad": [
    [
      "tests/functional/c/consider/consider_using_dict_items.py",
      [
        "bad"
      ]
    ],
    [
      "tests/functional/c/consider/consider_using_enumerate.py",
      [
        "bad"
      ]
    ],
    [
      "tests/functional/n/nonlocal_and_global.py",
      [
        "bad"
      ]
    ]
  ],
  "good": [
    [
      "tests/functional/c/consider/consider_using_dict_items.py",
      [
        "good"
      ]
    ],
    [
      "tests/functional/c/consider/consider_using_enumerate.py",
      [
        "good"
      ]
    ],
    [
      "tests/functional/n/nonlocal_and_global.py",
      [
        "good"
      ]
    ],
    [
      "tests/functional/t/too/too_many_branches.py",
      [
        "good"
      ]
    ]
  ],
  "another_bad": [
    [
      "tests/functional/c/consider/consider_using_dict_items.py",
      [
        "another_bad"
      ]
    ]
  ],
  "another_good": [
    [
      "tests/functional/c/consider/consider_using_dict_items.py",
      [
        "another_good"
      ]
    ]
  ],
  "does_not_crash_on_range_without_args": [
    [
      "tests/functional/c/consider/consider_using_enumerate.py",
      [
        "does_not_crash_on_range_without_args"
      ]
    ]
  ],
  "oops": [
    [
      "tests/functional/c/consider/consider_using_in.py",
      [
        "oops"
      ]
    ]
  ],
  "__ge__": [
    [
      "tests/functional/c/consider/consider_using_min_max_builtin.py",
      [
        "AA",
        "__ge__"
      ]
    ]
  ],
  "foo_1": [
    [
      "tests/functional/c/consider/consider_using_sys_exit.py",
      [
        "foo_1"
      ]
    ]
  ],
  "foo_2": [
    [
      "tests/functional/c/consider/consider_using_sys_exit.py",
      [
        "foo_2"
      ]
    ]
  ],
  "test_codecs_open": [
    [
      "tests/functional/c/consider/consider_using_with.py",
      [
        "test_codecs_open"
      ]
    ]
  ],
  "test_urlopen": [
    [
      "tests/functional/c/consider/consider_using_with.py",
      [
        "test_urlopen"
      ]
    ]
  ],
  "test_temporary_file": [
    [
      "tests/functional/c/consider/consider_using_with.py",
      [
        "test_temporary_file"
      ]
    ]
  ],
  "test_named_temporary_file": [
    [
      "tests/functional/c/consider/consider_using_with.py",
      [
        "test_named_temporary_file"
      ]
    ]
  ],
  "test_spooled_temporary_file": [
    [
      "tests/functional/c/consider/consider_using_with.py",
      [
        "test_spooled_temporary_file"
      ]
    ]
  ],
  "test_temporary_directory": [
    [
      "tests/functional/c/consider/consider_using_with.py",
      [
        "test_temporary_directory"
      ]
    ]
  ],
  "test_zipfile": [
    [
      "tests/functional/c/consider/consider_using_with.py",
      [
        "test_zipfile"
      ]
    ]
  ],
  "test_pyzipfile": [
    [
      "tests/functional/c/consider/consider_using_with.py",
      [
        "test_pyzipfile"
      ]
    ]
  ],
  "test_tarfile": [
    [
      "tests/functional/c/consider/consider_using_with.py",
      [
        "test_tarfile"
      ]
    ]
  ],
  "test_lock_acquisition": [
    [
      "tests/functional/c/consider/consider_using_with.py",
      [
        "test_lock_acquisition"
      ]
    ]
  ],
  "test_lock_acquisition_in_context_manager1": [
    [
      "tests/functional/c/consider/consider_using_with.py",
      [
        "test_lock_acquisition_in_context_manager1"
      ]
    ]
  ],
  "__enter__": [
    [
      "tests/functional/c/consider/consider_using_with.py",
      [
        "MyLockContext",
        "__enter__"
      ]
    ],
    [
      "tests/functional/m/misplaced_bare_raise.py",
      [
        "ContextManager",
        "__enter__"
      ]
    ],
    [
      "tests/functional/n/not_async_context_manager.py",
      [
        "ContextManager",
        "__enter__"
      ]
    ],
    [
      "tests/functional/n/not_context_manager.py",
      [
        "Manager",
        "__enter__"
      ]
    ],
    [
      "tests/functional/n/not_context_manager.py",
      [
        "FullContextManager",
        "__enter__"
      ]
    ],
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "Invalid",
        "__enter__"
      ]
    ],
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "FirstBadContextManager",
        "__enter__"
      ]
    ],
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "SecondBadContextManager",
        "__enter__"
      ]
    ],
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "ThirdBadContextManager",
        "__enter__"
      ]
    ],
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "Valid",
        "__enter__"
      ]
    ],
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "FirstGoodContextManager",
        "__enter__"
      ]
    ],
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "SecondGoodContextManager",
        "__enter__"
      ]
    ],
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "ThirdGoodContextManager",
        "__enter__"
      ]
    ],
    [
      "tests/functional/u/unused/unused_typing_imports.py",
      [
        "ContextManager",
        "__enter__"
      ]
    ]
  ],
  "__exit__": [
    [
      "tests/functional/c/consider/consider_using_with.py",
      [
        "MyLockContext",
        "__exit__"
      ]
    ],
    [
      "tests/functional/m/misplaced_bare_raise.py",
      [
        "ContextManager",
        "__exit__"
      ]
    ],
    [
      "tests/functional/n/not_async_context_manager.py",
      [
        "ContextManager",
        "__exit__"
      ]
    ],
    [
      "tests/functional/n/not_context_manager.py",
      [
        "Manager",
        "__exit__"
      ]
    ],
    [
      "tests/functional/n/not_context_manager.py",
      [
        "FullContextManager",
        "__exit__"
      ]
    ],
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "FirstBadContextManager",
        "__exit__"
      ]
    ],
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "SecondBadContextManager",
        "__exit__"
      ]
    ],
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "ThirdBadContextManager",
        "__exit__"
      ]
    ],
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "FirstGoodContextManager",
        "__exit__"
      ]
    ],
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "SecondGoodContextManager",
        "__exit__"
      ]
    ],
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "ThirdGoodContextManager",
        "__exit__"
      ]
    ],
    [
      "tests/functional/u/unused/unused_typing_imports.py",
      [
        "ContextManager",
        "__exit__"
      ]
    ]
  ],
  "test_multiprocessing": [
    [
      "tests/functional/c/consider/consider_using_with.py",
      [
        "test_multiprocessing"
      ]
    ],
    [
      "tests/lint/unittest_lint.py",
      [
        "test_multiprocessing"
      ]
    ]
  ],
  "test_futures": [
    [
      "tests/functional/c/consider/consider_using_with.py",
      [
        "test_futures"
      ]
    ]
  ],
  "test_popen": [
    [
      "tests/functional/c/consider/consider_using_with.py",
      [
        "test_popen"
      ]
    ]
  ],
  "test_open": [
    [
      "tests/functional/c/consider/consider_using_with_open.py",
      [
        "test_open"
      ]
    ]
  ],
  "test_open_in_enter": [
    [
      "tests/functional/c/consider/consider_using_with_open.py",
      [
        "test_open_in_enter"
      ]
    ]
  ],
  "test_open_in_with_contextlib": [
    [
      "tests/functional/c/consider/consider_using_with_open.py",
      [
        "test_open_in_with_contextlib"
      ]
    ]
  ],
  "test_open_outside_assignment": [
    [
      "tests/functional/c/consider/consider_using_with_open.py",
      [
        "test_open_outside_assignment"
      ]
    ]
  ],
  "test_open_inside_with_block": [
    [
      "tests/functional/c/consider/consider_using_with_open.py",
      [
        "test_open_inside_with_block"
      ]
    ]
  ],
  "test_pragma": [
    [
      "tests/functional/c/control_pragmas.py",
      [
        "test_pragma"
      ]
    ]
  ],
  "decor": [
    [
      "tests/functional/c/crash_missing_module_type.py",
      [
        "decor"
      ]
    ]
  ],
  "with_metaclass": [
    [
      "tests/functional/c/ctor_arguments.py",
      [
        "with_metaclass"
      ]
    ]
  ],
  "from_nothing": [
    [
      "tests/functional/c/ctor_arguments.py",
      [
        "Clsmethod",
        "from_nothing"
      ]
    ]
  ],
  "from_nothing1": [
    [
      "tests/functional/c/ctor_arguments.py",
      [
        "Clsmethod",
        "from_nothing1"
      ]
    ]
  ],
  "from_nothing2": [
    [
      "tests/functional/c/ctor_arguments.py",
      [
        "Clsmethod",
        "from_nothing2"
      ]
    ]
  ],
  "function1": [
    [
      "tests/functional/d/dangerous_default_value_py30.py",
      [
        "function1"
      ]
    ],
    [
      "tests/functional/d/docstrings.py",
      [
        "function1"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_sequence_index.py",
      [
        "function1"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_slice_index.py",
      [
        "function1"
      ]
    ]
  ],
  "function3": [
    [
      "tests/functional/d/dangerous_default_value_py30.py",
      [
        "function3"
      ]
    ],
    [
      "tests/functional/d/docstrings.py",
      [
        "function3"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_sequence_index.py",
      [
        "function3"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_slice_index.py",
      [
        "function3"
      ]
    ]
  ],
  "function4": [
    [
      "tests/functional/d/dangerous_default_value_py30.py",
      [
        "function4"
      ]
    ],
    [
      "tests/functional/d/docstrings.py",
      [
        "function4"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_side_effects.py",
      [
        "function4"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_sequence_index.py",
      [
        "function4"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_slice_index.py",
      [
        "function4"
      ]
    ]
  ],
  "function5": [
    [
      "tests/functional/d/dangerous_default_value_py30.py",
      [
        "function5"
      ]
    ],
    [
      "tests/functional/d/docstrings.py",
      [
        "function5"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_side_effects.py",
      [
        "function5"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_sequence_index.py",
      [
        "function5"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_slice_index.py",
      [
        "function5"
      ]
    ]
  ],
  "function6": [
    [
      "tests/functional/d/dangerous_default_value_py30.py",
      [
        "function6"
      ]
    ],
    [
      "tests/functional/d/docstrings.py",
      [
        "function6"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_sequence_index.py",
      [
        "function6"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_slice_index.py",
      [
        "function6"
      ]
    ]
  ],
  "function7": [
    [
      "tests/functional/d/dangerous_default_value_py30.py",
      [
        "function7"
      ]
    ],
    [
      "tests/functional/d/docstrings.py",
      [
        "function7"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_side_effects.py",
      [
        "function7"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_sequence_index.py",
      [
        "function7"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_slice_index.py",
      [
        "function7"
      ]
    ]
  ],
  "function8": [
    [
      "tests/functional/d/dangerous_default_value_py30.py",
      [
        "function8"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_side_effects.py",
      [
        "function8"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_sequence_index.py",
      [
        "function8"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_slice_index.py",
      [
        "function8"
      ]
    ]
  ],
  "function9": [
    [
      "tests/functional/d/dangerous_default_value_py30.py",
      [
        "function9"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_sequence_index.py",
      [
        "function9"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_slice_index.py",
      [
        "function9"
      ]
    ]
  ],
  "function10": [
    [
      "tests/functional/d/dangerous_default_value_py30.py",
      [
        "function10"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_sequence_index.py",
      [
        "function10"
      ]
    ]
  ],
  "function11": [
    [
      "tests/functional/d/dangerous_default_value_py30.py",
      [
        "function11"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_sequence_index.py",
      [
        "function11"
      ]
    ]
  ],
  "function12": [
    [
      "tests/functional/d/dangerous_default_value_py30.py",
      [
        "function12"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_sequence_index.py",
      [
        "function12"
      ]
    ]
  ],
  "function13": [
    [
      "tests/functional/d/dangerous_default_value_py30.py",
      [
        "function13"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_sequence_index.py",
      [
        "function13"
      ]
    ]
  ],
  "function14": [
    [
      "tests/functional/d/dangerous_default_value_py30.py",
      [
        "function14"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_sequence_index.py",
      [
        "function14"
      ]
    ]
  ],
  "function15": [
    [
      "tests/functional/d/dangerous_default_value_py30.py",
      [
        "function15"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_sequence_index.py",
      [
        "function15"
      ]
    ]
  ],
  "function16": [
    [
      "tests/functional/d/dangerous_default_value_py30.py",
      [
        "function16"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_sequence_index.py",
      [
        "function16"
      ]
    ]
  ],
  "function17": [
    [
      "tests/functional/d/dangerous_default_value_py30.py",
      [
        "function17"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_side_effects.py",
      [
        "function17"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_sequence_index.py",
      [
        "function17"
      ]
    ]
  ],
  "function18": [
    [
      "tests/functional/d/dangerous_default_value_py30.py",
      [
        "function18"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_side_effects.py",
      [
        "function18"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_sequence_index.py",
      [
        "function18"
      ]
    ]
  ],
  "function19": [
    [
      "tests/functional/d/dangerous_default_value_py30.py",
      [
        "function19"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_side_effects.py",
      [
        "function19"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_sequence_index.py",
      [
        "function19"
      ]
    ]
  ],
  "function20": [
    [
      "tests/functional/d/dangerous_default_value_py30.py",
      [
        "function20"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_side_effects.py",
      [
        "function20"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_sequence_index.py",
      [
        "function20"
      ]
    ]
  ],
  "function21": [
    [
      "tests/functional/d/dangerous_default_value_py30.py",
      [
        "function21"
      ]
    ],
    [
      "tests/functional/g/generic_alias/generic_alias_side_effects.py",
      [
        "function21"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_sequence_index.py",
      [
        "function21"
      ]
    ]
  ],
  "function22": [
    [
      "tests/functional/d/dangerous_default_value_py30.py",
      [
        "function22"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_sequence_index.py",
      [
        "function22"
      ]
    ]
  ],
  "function23": [
    [
      "tests/functional/d/dangerous_default_value_py30.py",
      [
        "function23"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_sequence_index.py",
      [
        "function23"
      ]
    ]
  ],
  "function24": [
    [
      "tests/functional/d/dangerous_default_value_py30.py",
      [
        "function24"
      ]
    ],
    [
      "tests/functional/i/invalid/s/invalid_sequence_index.py",
      [
        "function24"
      ]
    ]
  ],
  "my_method": [
    [
      "tests/functional/d/deprecated/deprecated_decorators.py",
      [
        "MyClass",
        "my_method"
      ]
    ]
  ],
  "method_1": [
    [
      "tests/functional/d/deprecated/deprecated_decorators.py",
      [
        "Foo",
        "method_1"
      ]
    ],
    [
      "tests/functional/m/method_hidden.py",
      [
        "Foo",
        "method_1"
      ]
    ],
    [
      "tests/functional/t/too/too_many_arguments_overload.py",
      [
        "ClassA",
        "method_1"
      ]
    ],
    [
      "tests/functional/t/too/too_many_arguments_overload.py",
      [
        "ClassB",
        "method_1"
      ]
    ],
    [
      "tests/functional/t/typing_use.py",
      [
        "Cls",
        "method_1"
      ]
    ]
  ],
  "test_foo": [
    [
      "tests/functional/d/deprecated/deprecated_methods_py3.py",
      [
        "Tests",
        "test_foo"
      ]
    ],
    [
      "tests/functional/d/deprecated/deprecated_methods_py38.py",
      [
        "Tests",
        "test_foo"
      ]
    ]
  ],
  "function0": [
    [
      "tests/functional/d/docstrings.py",
      [
        "function0"
      ]
    ]
  ],
  "foo1": [
    [
      "tests/functional/d/duplicate_argument_name.py",
      [
        "foo1"
      ]
    ],
    [
      "tests/functional/d/duplicate_argument_name_py3.py",
      [
        "foo1"
      ]
    ],
    [
      "tests/functional/n/no/no_else_break.py",
      [
        "foo1"
      ]
    ],
    [
      "tests/functional/n/no/no_else_continue.py",
      [
        "foo1"
      ]
    ],
    [
      "tests/functional/n/no/no_else_raise.py",
      [
        "foo1"
      ]
    ],
    [
      "tests/functional/n/no/no_else_return.py",
      [
        "foo1"
      ]
    ]
  ],
  "foo2": [
    [
      "tests/functional/d/duplicate_argument_name.py",
      [
        "foo2"
      ]
    ],
    [
      "tests/functional/n/no/no_else_break.py",
      [
        "foo2"
      ]
    ],
    [
      "tests/functional/n/no/no_else_continue.py",
      [
        "foo2"
      ]
    ],
    [
      "tests/functional/n/no/no_else_raise.py",
      [
        "foo2"
      ]
    ],
    [
      "tests/functional/n/no/no_else_return.py",
      [
        "foo2"
      ]
    ]
  ],
  "foo3": [
    [
      "tests/functional/d/duplicate_argument_name.py",
      [
        "foo3"
      ]
    ],
    [
      "tests/functional/n/no/no_else_break.py",
      [
        "foo3"
      ]
    ],
    [
      "tests/functional/n/no/no_else_continue.py",
      [
        "foo3"
      ]
    ],
    [
      "tests/functional/n/no/no_else_raise.py",
      [
        "foo3"
      ]
    ],
    [
      "tests/functional/n/no/no_else_return.py",
      [
        "foo3"
      ]
    ]
  ],
  "foo4": [
    [
      "tests/functional/d/duplicate_argument_name.py",
      [
        "foo4"
      ]
    ],
    [
      "tests/functional/n/no/no_else_break.py",
      [
        "foo4"
      ]
    ],
    [
      "tests/functional/n/no/no_else_continue.py",
      [
        "foo4"
      ]
    ],
    [
      "tests/functional/n/no/no_else_raise.py",
      [
        "foo4"
      ]
    ],
    [
      "tests/functional/n/no/no_else_return.py",
      [
        "foo4"
      ]
    ]
  ],
  "countup": [
    [
      "tests/functional/e/e1101_9588_base_attr_aug_assign.py",
      [
        "FalsePositiveClass",
        "countup"
      ]
    ],
    [
      "tests/functional/e/e1101_9588_base_attr_aug_assign.py",
      [
        "NegativeClass",
        "countup"
      ]
    ]
  ],
  "whats_my_name": [
    [
      "tests/functional/e/enum_subclasses.py",
      [
        "Issue1932",
        "whats_my_name"
      ]
    ]
  ],
  "fetch_config": [
    [
      "tests/functional/e/external_classmethod_crash.py",
      [
        "fetch_config"
      ]
    ]
  ],
  "check_config": [
    [
      "tests/functional/ext/confusing_elif.py",
      [
        "check_config"
      ]
    ]
  ],
  "check_config_2": [
    [
      "tests/functional/ext/confusing_elif.py",
      [
        "check_config_2"
      ]
    ]
  ],
  "check_config_3": [
    [
      "tests/functional/ext/confusing_elif.py",
      [
        "check_config_3"
      ]
    ]
  ],
  "_private_func": [
    [
      "tests/functional/ext/docparams.py",
      [
        "_private_func"
      ]
    ]
  ],
  "_private_func2": [
    [
      "tests/functional/ext/docparams.py",
      [
        "_private_func2"
      ]
    ]
  ],
  "class1": [
    [
      "tests/functional/f/first_arg.py",
      [
        "Obj",
        "class1"
      ]
    ],
    [
      "tests/functional/f/first_arg.py",
      [
        "Meta",
        "class1"
      ]
    ]
  ],
  "class2": [
    [
      "tests/functional/f/first_arg.py",
      [
        "Obj",
        "class2"
      ]
    ],
    [
      "tests/functional/f/first_arg.py",
      [
        "Meta",
        "class2"
      ]
    ]
  ],
  "function": [
    [
      "tests/functional/f/fixme.py",
      [
        "function"
      ]
    ],
    [
      "tests/functional/l/lambda_use_before_assign.py",
      [
        "function"
      ]
    ],
    [
      "tests/functional/l/line_too_long.py",
      [
        "function"
      ]
    ],
    [
      "tests/functional/n/name/names_in__all__.py",
      [
        "function"
      ]
    ],
    [
      "tests/functional/p/protected_access_access_different_scopes.py",
      [
        "function"
      ]
    ],
    [
      "tests/functional/r/redefined_builtin.py",
      [
        "function"
      ]
    ],
    [
      "tests/functional/r/redefined_builtin_allowed.py",
      [
        "function"
      ]
    ],
    [
      "tests/functional/s/self/self_cls_assignment.py",
      [
        "TestNonLocal",
        "function"
      ]
    ],
    [
      "tests/functional/s/super/super_checks.py",
      [
        "BaseClass",
        "function"
      ]
    ],
    [
      "tests/functional/t/too/too_many_locals.py",
      [
        "function"
      ]
    ],
    [
      "tests/functional/u/unused/unused_argument.py",
      [
        "function"
      ]
    ],
    [
      "tests/functional/u/unused/unused_typing_imports.py",
      [
        "function"
      ]
    ],
    [
      "tests/functional/u/unused/unused_variable.py",
      [
        "function"
      ]
    ],
    [
      "tests/functional/u/unused/unused_variable_py36.py",
      [
        "function"
      ]
    ],
    [
      "tests/functional/u/use/using_constant_test.py",
      [
        "function"
      ]
    ],
    [
      "tests/functional/u/useless/useless_type_doc.py",
      [
        "function"
      ]
    ],
    [
      "tests/input/func_3k_removed_stuff_py_30.py",
      [
        "function"
      ]
    ]
  ],
  "method2_2": [
    [
      "tests/functional/f/function_redefined.py",
      [
        "AAAA",
        "method2_2"
      ]
    ]
  ],
  "yeah": [
    [
      "tests/functional/f/function_redefined.py",
      [
        "AAAA_1",
        "yeah"
      ]
    ]
  ],
  "yoo": [
    [
      "tests/functional/f/function_redefined.py",
      [
        "AAAA_1",
        "yoo"
      ]
    ]
  ],
  "func2_2": [
    [
      "tests/functional/f/function_redefined.py",
      [
        "func2_2"
      ]
    ]
  ],
  "with_inner_function_1": [
    [
      "tests/functional/f/function_redefined.py",
      [
        "with_inner_function_1"
      ]
    ]
  ],
  "with_inner_function_2": [
    [
      "tests/functional/f/function_redefined.py",
      [
        "with_inner_function_2"
      ]
    ]
  ],
  "dummy_func": [
    [
      "tests/functional/f/function_redefined.py",
      [
        "dummy_func"
      ]
    ]
  ],
  "dummy_func_7": [
    [
      "tests/functional/f/function_redefined.py",
      [
        "dummy_func_7"
      ]
    ]
  ],
  "ceil": [
    [
      "tests/functional/f/function_redefined.py",
      [
        "ceil"
      ]
    ]
  ],
  "math": [
    [
      "tests/functional/f/function_redefined.py",
      [
        "math"
      ]
    ]
  ],
  "__module__": [
    [
      "tests/functional/f/function_redefined.py",
      [
        "ObjectProxy",
        "__module__"
      ]
    ]
  ],
  "__doc__": [
    [
      "tests/functional/f/function_redefined.py",
      [
        "ObjectProxy",
        "__doc__"
      ]
    ]
  ],
  "update": [
    [
      "tests/functional/g/generic_alias/generic_alias_side_effects.py",
      [
        "HasherGeneric",
        "update"
      ]
    ],
    [
      "tests/functional/p/protocol_classes.py",
      [
        "Hasher",
        "update"
      ]
    ],
    [
      "tests/functional/p/protocol_classes.py",
      [
        "HasherGeneric",
        "update"
      ]
    ],
    [
      "tests/functional/p/protocol_classes.py",
      [
        "HasherFake",
        "update"
      ]
    ]
  ],
  "digest": [
    [
      "tests/functional/g/generic_alias/generic_alias_side_effects.py",
      [
        "HasherGeneric",
        "digest"
      ]
    ],
    [
      "tests/functional/p/protocol_classes.py",
      [
        "Hasher",
        "digest"
      ]
    ],
    [
      "tests/functional/p/protocol_classes.py",
      [
        "HasherGeneric",
        "digest"
      ]
    ],
    [
      "tests/functional/p/protocol_classes.py",
      [
        "HasherFake",
        "digest"
      ]
    ]
  ],
  "fix_contant": [
    [
      "tests/functional/g/globals.py",
      [
        "fix_contant"
      ]
    ]
  ],
  "other": [
    [
      "tests/functional/g/globals.py",
      [
        "other"
      ]
    ]
  ],
  "define_constant": [
    [
      "tests/functional/g/globals.py",
      [
        "define_constant"
      ]
    ]
  ],
  "global_with_import": [
    [
      "tests/functional/g/globals.py",
      [
        "global_with_import"
      ]
    ]
  ],
  "function_with_docstring": [
    [
      "tests/functional/i/inconsistent/inconsistent_quotes.py",
      [
        "function_with_docstring"
      ]
    ]
  ],
  "explicit_returns": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "explicit_returns"
      ]
    ]
  ],
  "explicit_returns2": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "explicit_returns2"
      ]
    ]
  ],
  "empty_implicit_returns": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "empty_implicit_returns"
      ]
    ]
  ],
  "returns_in_exceptions": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "returns_in_exceptions"
      ]
    ]
  ],
  "returns_and_exceptions": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "returns_and_exceptions"
      ]
    ]
  ],
  "returns_and_exceptions_issue1770": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "returns_and_exceptions_issue1770"
      ]
    ]
  ],
  "explicit_returns3": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "explicit_returns3"
      ]
    ]
  ],
  "explicit_returns4": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "explicit_returns4"
      ]
    ]
  ],
  "explicit_returns5": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "explicit_returns5"
      ]
    ]
  ],
  "nested_function": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "nested_function"
      ]
    ]
  ],
  "explicit_returns6": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "explicit_returns6"
      ]
    ]
  ],
  "explicit_returns7": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "explicit_returns7"
      ]
    ]
  ],
  "bug_1772": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "bug_1772"
      ]
    ]
  ],
  "bug_1771": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "bug_1771"
      ]
    ]
  ],
  "bug_1771_with_user_config": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "bug_1771_with_user_config"
      ]
    ]
  ],
  "bug_1794_inner_func_in_if": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "bug_1794_inner_func_in_if"
      ]
    ]
  ],
  "bug_1794": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "bug_1794"
      ]
    ]
  ],
  "bug_1782_bis": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "bug_1782_bis"
      ]
    ]
  ],
  "explicit_implicit_returns": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "explicit_implicit_returns"
      ]
    ]
  ],
  "empty_explicit_returns": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "empty_explicit_returns"
      ]
    ]
  ],
  "explicit_implicit_returns2": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "explicit_implicit_returns2"
      ]
    ]
  ],
  "explicit_implicit_returns3": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "explicit_implicit_returns3"
      ]
    ]
  ],
  "returns_missing_in_catched_exceptions": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "returns_missing_in_catched_exceptions"
      ]
    ]
  ],
  "complex_func": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "complex_func"
      ]
    ]
  ],
  "inconsistent_returns_in_nested_function": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "inconsistent_returns_in_nested_function"
      ]
    ]
  ],
  "bug_1771_counter_example": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "bug_1771_counter_example"
      ]
    ]
  ],
  "blarg": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "blarg"
      ]
    ]
  ],
  "bug_1772_counter_example": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "bug_1772_counter_example"
      ]
    ]
  ],
  "bug_1794_inner_func_in_if_counter_example_1": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "bug_1794_inner_func_in_if_counter_example_1"
      ]
    ]
  ],
  "bug_1794_inner_func_in_if_counter_example_2": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "bug_1794_inner_func_in_if_counter_example_2"
      ]
    ]
  ],
  "bug_1794_inner_func_in_if_counter_example_3": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "bug_1794_inner_func_in_if_counter_example_3"
      ]
    ]
  ],
  "bug_3468": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "bug_3468"
      ]
    ]
  ],
  "bug_3468_variant": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "bug_3468_variant"
      ]
    ]
  ],
  "bug_3468_counter_example": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "bug_3468_counter_example"
      ]
    ]
  ],
  "bug_3468_counter_example_2": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "bug_3468_counter_example_2"
      ]
    ]
  ],
  "nothing_to_do": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "nothing_to_do"
      ]
    ]
  ],
  "bug_pylint_3873": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "bug_pylint_3873"
      ]
    ]
  ],
  "bug_pylint_3873_1": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "bug_pylint_3873_1"
      ]
    ]
  ],
  "bug_pylint_3873_2": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "bug_pylint_3873_2"
      ]
    ]
  ],
  "bug_pylint_4019": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "bug_pylint_4019"
      ]
    ]
  ],
  "bug_pylint_4019_wrong": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns.py",
      [
        "bug_pylint_4019_wrong"
      ]
    ]
  ],
  "parser_error": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns_noreturn.py",
      [
        "parser_error"
      ]
    ]
  ],
  "parser_error_nortype": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns_noreturn.py",
      [
        "parser_error_nortype"
      ]
    ]
  ],
  "parser_error_name": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns_noreturn.py",
      [
        "parser_error_name"
      ]
    ]
  ],
  "bug_pylint_4122": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns_noreturn.py",
      [
        "bug_pylint_4122"
      ]
    ]
  ],
  "bug_pylint_4122_wrong": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns_noreturn.py",
      [
        "bug_pylint_4122_wrong"
      ]
    ]
  ],
  "bug_pylint_4122_bis": [
    [
      "tests/functional/i/inconsistent/inconsistent_returns_noreturn.py",
      [
        "bug_pylint_4122_bis"
      ]
    ]
  ],
  "return_class": [
    [
      "tests/functional/i/inherit_non_class.py",
      [
        "return_class"
      ]
    ]
  ],
  "xx_init": [
    [
      "tests/functional/i/init_not_called.py",
      [
        "NewStyleC",
        "xx_init"
      ]
    ]
  ],
  "__init_subclass__": [
    [
      "tests/functional/i/init_subclass_classmethod_py36.py",
      [
        "PluginBase",
        "__init_subclass__"
      ]
    ],
    [
      "tests/functional/u/unused/unused_import_class_def_keyword.py",
      [
        "Child",
        "__init_subclass__"
      ]
    ]
  ],
  "one_public": [
    [
      "tests/functional/i/inner_classes.py",
      [
        "Aaa",
        "one_public"
      ]
    ]
  ],
  "another_public": [
    [
      "tests/functional/i/inner_classes.py",
      [
        "Aaa",
        "another_public"
      ]
    ]
  ],
  "__bool__": [
    [
      "tests/functional/i/invalid/b/invalid_bool_returned.py",
      [
        "FirstGoodBool",
        "__bool__"
      ]
    ],
    [
      "tests/functional/i/invalid/b/invalid_bool_returned.py",
      [
        "SecondGoodBool",
        "__bool__"
      ]
    ],
    [
      "tests/functional/i/invalid/b/invalid_bool_returned.py",
      [
        "BoolMetaclass",
        "__bool__"
      ]
    ],
    [
      "tests/functional/i/invalid/b/invalid_bool_returned.py",
      [
        "FirstBadBool",
        "__bool__"
      ]
    ],
    [
      "tests/functional/i/invalid/b/invalid_bool_returned.py",
      [
        "SecondBadBool",
        "__bool__"
      ]
    ],
    [
      "tests/functional/i/invalid/b/invalid_bool_returned.py",
      [
        "ThirdBadBool",
        "__bool__"
      ]
    ],
    [
      "tests/functional/i/invalid/b/invalid_bool_returned.py",
      [
        "AnotherAmbiguousBool",
        "__bool__"
      ]
    ],
    [
      "tests/functional/l/len_checks.py",
      [
        "github_issue_1879",
        "ClassWithBool",
        "__bool__"
      ]
    ]
  ],
  "__bytes__": [
    [
      "tests/functional/i/invalid/b/invalid_bytes_returned.py",
      [
        "FirstGoodBytes",
        "__bytes__"
      ]
    ],
    [
      "tests/functional/i/invalid/b/invalid_bytes_returned.py",
      [
        "SecondGoodBytes",
        "__bytes__"
      ]
    ],
    [
      "tests/functional/i/invalid/b/invalid_bytes_returned.py",
      [
        "BytesMetaclass",
        "__bytes__"
      ]
    ],
    [
      "tests/functional/i/invalid/b/invalid_bytes_returned.py",
      [
        "FirstBadBytes",
        "__bytes__"
      ]
    ],
    [
      "tests/functional/i/invalid/b/invalid_bytes_returned.py",
      [
        "SecondBadBytes",
        "__bytes__"
      ]
    ],
    [
      "tests/functional/i/invalid/b/invalid_bytes_returned.py",
      [
        "ThirdBadBytes",
        "__bytes__"
      ]
    ],
    [
      "tests/functional/i/invalid/b/invalid_bytes_returned.py",
      [
        "AnotherAmbiguousBytes",
        "__bytes__"
      ]
    ]
  ],
  "function_returning_list": [
    [
      "tests/functional/i/invalid/e/invalid_envvar_value.py",
      [
        "function_returning_list"
      ]
    ],
    [
      "tests/functional/l/len_checks.py",
      [
        "github_issue_1879",
        "function_returning_list"
      ]
    ]
  ],
  "function_returning_none": [
    [
      "tests/functional/i/invalid/e/invalid_envvar_value.py",
      [
        "function_returning_none"
      ]
    ]
  ],
  "function_returning_string": [
    [
      "tests/functional/i/invalid/e/invalid_envvar_value.py",
      [
        "function_returning_string"
      ]
    ]
  ],
  "function_returning_bytes": [
    [
      "tests/functional/i/invalid/e/invalid_envvar_value.py",
      [
        "function_returning_bytes"
      ]
    ]
  ],
  "deep_function_returning_string": [
    [
      "tests/functional/i/invalid/e/invalid_envvar_value.py",
      [
        "deep_function_returning_string"
      ]
    ]
  ],
  "deep_function_returning_bytes": [
    [
      "tests/functional/i/invalid/e/invalid_envvar_value.py",
      [
        "deep_function_returning_bytes"
      ]
    ]
  ],
  "good_case1": [
    [
      "tests/functional/i/invalid/e/invalid_exceptions_raised.py",
      [
        "good_case1"
      ]
    ]
  ],
  "bad_case0": [
    [
      "tests/functional/i/invalid/e/invalid_exceptions_raised.py",
      [
        "bad_case0"
      ]
    ]
  ],
  "bad_case1": [
    [
      "tests/functional/i/invalid/e/invalid_exceptions_raised.py",
      [
        "bad_case1"
      ]
    ]
  ],
  "bad_case7": [
    [
      "tests/functional/i/invalid/e/invalid_exceptions_raised.py",
      [
        "bad_case7"
      ]
    ]
  ],
  "bad_case8": [
    [
      "tests/functional/i/invalid/e/invalid_exceptions_raised.py",
      [
        "bad_case8"
      ]
    ]
  ],
  "bad_case9": [
    [
      "tests/functional/i/invalid/e/invalid_exceptions_raised.py",
      [
        "bad_case9"
      ]
    ]
  ],
  "unknown_bases": [
    [
      "tests/functional/i/invalid/e/invalid_exceptions_raised.py",
      [
        "unknown_bases"
      ]
    ]
  ],
  "exception_instance_regression": [
    [
      "tests/functional/i/invalid/e/invalid_exceptions_raised.py",
      [
        "exception_instance_regression"
      ]
    ]
  ],
  "reusing_same_name_picks_the_latest_raised_value": [
    [
      "tests/functional/i/invalid/e/invalid_exceptions_raised.py",
      [
        "reusing_same_name_picks_the_latest_raised_value"
      ]
    ]
  ],
  "__getnewargs_ex__": [
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_ex_returned.py",
      [
        "FirstGoodGetNewArgsEx",
        "__getnewargs_ex__"
      ]
    ],
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_ex_returned.py",
      [
        "SecondGoodGetNewArgsEx",
        "__getnewargs_ex__"
      ]
    ],
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_ex_returned.py",
      [
        "GetNewArgsExMetaclass",
        "__getnewargs_ex__"
      ]
    ],
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_ex_returned.py",
      [
        "FirstBadGetNewArgsEx",
        "__getnewargs_ex__"
      ]
    ],
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_ex_returned.py",
      [
        "SecondBadGetNewArgsEx",
        "__getnewargs_ex__"
      ]
    ],
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_ex_returned.py",
      [
        "ThirdBadGetNewArgsEx",
        "__getnewargs_ex__"
      ]
    ],
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_ex_returned.py",
      [
        "FourthBadGetNewArgsEx",
        "__getnewargs_ex__"
      ]
    ],
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_ex_returned.py",
      [
        "FifthBadGetNewArgsEx",
        "__getnewargs_ex__"
      ]
    ],
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_ex_returned.py",
      [
        "SixthBadGetNewArgsEx",
        "__getnewargs_ex__"
      ]
    ],
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_ex_returned.py",
      [
        "AnotherAmbiguousGetNewArgsEx",
        "__getnewargs_ex__"
      ]
    ]
  ],
  "__getnewargs__": [
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_returned.py",
      [
        "FirstGoodGetNewArgs",
        "__getnewargs__"
      ]
    ],
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_returned.py",
      [
        "SecondGoodGetNewArgs",
        "__getnewargs__"
      ]
    ],
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_returned.py",
      [
        "GetNewArgsMetaclass",
        "__getnewargs__"
      ]
    ],
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_returned.py",
      [
        "FirstBadGetNewArgs",
        "__getnewargs__"
      ]
    ],
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_returned.py",
      [
        "SecondBadGetNewArgs",
        "__getnewargs__"
      ]
    ],
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_returned.py",
      [
        "ThirdBadGetNewArgs",
        "__getnewargs__"
      ]
    ],
    [
      "tests/functional/i/invalid/g/invalid_getnewargs_returned.py",
      [
        "AnotherAmbiguousGetNewArgs",
        "__getnewargs__"
      ]
    ]
  ],
  "__format__": [
    [
      "tests/functional/i/invalid/invalid_format_returned.py",
      [
        "FirstGoodFormat",
        "__format__"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_format_returned.py",
      [
        "SecondGoodFormat",
        "__format__"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_format_returned.py",
      [
        "FormatMetaclass",
        "__format__"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_format_returned.py",
      [
        "FirstBadFormat",
        "__format__"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_format_returned.py",
      [
        "SecondBadFormat",
        "__format__"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_format_returned.py",
      [
        "ThirdBadFormat",
        "__format__"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_format_returned.py",
      [
        "AnotherAmbiguousFormat",
        "__format__"
      ]
    ],
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "Invalid",
        "__format__"
      ]
    ],
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "Valid",
        "__format__"
      ]
    ]
  ],
  "__index__": [
    [
      "tests/functional/i/invalid/invalid_index_returned.py",
      [
        "FirstGoodIndex",
        "__index__"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_index_returned.py",
      [
        "SecondGoodIndex",
        "__index__"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_index_returned.py",
      [
        "IndexMetaclass",
        "__index__"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_index_returned.py",
      [
        "FirstBadIndex",
        "__index__"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_index_returned.py",
      [
        "SecondBadIndex",
        "__index__"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_index_returned.py",
      [
        "ThirdBadIndex",
        "__index__"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_index_returned.py",
      [
        "FourthBadIndex",
        "__index__"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_index_returned.py",
      [
        "AnotherAmbiguousIndex",
        "__index__"
      ]
    ],
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "Valid",
        "__index__"
      ]
    ]
  ],
  "a": [
    [
      "tests/functional/i/invalid/invalid_name.py",
      [
        "a"
      ]
    ]
  ],
  "_generate_cmdline_tests": [
    [
      "tests/functional/i/invalid/invalid_name.py",
      [
        "_generate_cmdline_tests"
      ]
    ]
  ],
  "dummy_decorator": [
    [
      "tests/functional/i/invalid/invalid_name.py",
      [
        "dummy_decorator"
      ]
    ]
  ],
  "a_very_very_very_long_function_name_WithCamelCase_to_make_it_sad": [
    [
      "tests/functional/i/invalid/invalid_name.py",
      [
        "a_very_very_very_long_function_name_WithCamelCase_to_make_it_sad"
      ]
    ]
  ],
  "async_method": [
    [
      "tests/functional/i/invalid/invalid_overridden_method.py",
      [
        "SuperClass",
        "async_method"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_overridden_method.py",
      [
        "ValidDerived",
        "async_method"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_overridden_method.py",
      [
        "InvalidDerived",
        "async_method"
      ]
    ]
  ],
  "method_a": [
    [
      "tests/functional/i/invalid/invalid_overridden_method.py",
      [
        "SuperClass",
        "method_a"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_overridden_method.py",
      [
        "ValidDerived",
        "method_a"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_overridden_method.py",
      [
        "InvalidDerived",
        "method_a"
      ]
    ]
  ],
  "method_b": [
    [
      "tests/functional/i/invalid/invalid_overridden_method.py",
      [
        "SuperClass",
        "method_b"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_overridden_method.py",
      [
        "ValidDerived",
        "method_b"
      ]
    ],
    [
      "tests/functional/i/invalid/invalid_overridden_method.py",
      [
        "InvalidDerived",
        "method_b"
      ]
    ]
  ],
  "close_2": [
    [
      "tests/functional/i/invalid/invalid_overridden_method.py",
      [
        "PropertySetter",
        "close_2"
      ]
    ]
  ],
  "__invert__": [
    [
      "tests/functional/i/invalid/invalid_unary_operand_type.py",
      [
        "Implemented",
        "__invert__"
      ]
    ]
  ],
  "__pos__": [
    [
      "tests/functional/i/invalid/invalid_unary_operand_type.py",
      [
        "Implemented",
        "__pos__"
      ]
    ]
  ],
  "__neg__": [
    [
      "tests/functional/i/invalid/invalid_unary_operand_type.py",
      [
        "Implemented",
        "__neg__"
      ]
    ]
  ],
  "these_are_good": [
    [
      "tests/functional/i/invalid/invalid_unary_operand_type.py",
      [
        "these_are_good"
      ]
    ]
  ],
  "these_are_bad": [
    [
      "tests/functional/i/invalid/invalid_unary_operand_type.py",
      [
        "these_are_bad"
      ]
    ]
  ],
  "__length_hint__": [
    [
      "tests/functional/i/invalid/l/invalid_length_hint_returned.py",
      [
        "FirstGoodLengthHint",
        "__length_hint__"
      ]
    ],
    [
      "tests/functional/i/invalid/l/invalid_length_hint_returned.py",
      [
        "SecondGoodLengthHint",
        "__length_hint__"
      ]
    ],
    [
      "tests/functional/i/invalid/l/invalid_length_hint_returned.py",
      [
        "LengthHintMetaclass",
        "__length_hint__"
      ]
    ],
    [
      "tests/functional/i/invalid/l/invalid_length_hint_returned.py",
      [
        "FirstBadLengthHint",
        "__length_hint__"
      ]
    ],
    [
      "tests/functional/i/invalid/l/invalid_length_hint_returned.py",
      [
        "SecondBadLengthHint",
        "__length_hint__"
      ]
    ],
    [
      "tests/functional/i/invalid/l/invalid_length_hint_returned.py",
      [
        "ThirdBadLengthHint",
        "__length_hint__"
      ]
    ],
    [
      "tests/functional/i/invalid/l/invalid_length_hint_returned.py",
      [
        "AnotherAmbiguousLengthHint",
        "__length_hint__"
      ]
    ]
  ],
  "valid_metaclass_1": [
    [
      "tests/functional/i/invalid/m/invalid_metaclass_py3.py",
      [
        "valid_metaclass_1"
      ]
    ]
  ],
  "valid_metaclass_2": [
    [
      "tests/functional/i/invalid/m/invalid_metaclass_py3.py",
      [
        "valid_metaclass_2"
      ]
    ]
  ],
  "function25": [
    [
      "tests/functional/i/invalid/s/invalid_sequence_index.py",
      [
        "function25"
      ]
    ]
  ],
  "function26": [
    [
      "tests/functional/i/invalid/s/invalid_sequence_index.py",
      [
        "function26"
      ]
    ]
  ],
  "function27": [
    [
      "tests/functional/i/invalid/s/invalid_sequence_index.py",
      [
        "function27"
      ]
    ]
  ],
  "function28": [
    [
      "tests/functional/i/invalid/s/invalid_sequence_index.py",
      [
        "function28"
      ]
    ]
  ],
  "powers_of_two": [
    [
      "tests/functional/i/iterable_context.py",
      [
        "powers_of_two"
      ]
    ],
    [
      "tests/functional/u/unsubscriptable_value.py",
      [
        "powers_of_two"
      ]
    ],
    [
      "tests/functional/u/unsupported/unsupported_assignment_operation.py",
      [
        "powers_of_two"
      ]
    ],
    [
      "tests/functional/u/unsupported/unsupported_delete_operation.py",
      [
        "powers_of_two"
      ]
    ]
  ],
  "__next__": [
    [
      "tests/functional/i/iterable_context.py",
      [
        "B",
        "__next__"
      ]
    ],
    [
      "tests/functional/n/non/non_iterator_returned.py",
      [
        "SecondGoodIterator",
        "__next__"
      ]
    ],
    [
      "tests/functional/n/non/non_iterator_returned.py",
      [
        "IteratorMetaclass",
        "__next__"
      ]
    ]
  ],
  "get_access_requirements": [
    [
      "tests/functional/i/iterable_context.py",
      [
        "ManagedAccessViewMixin",
        "get_access_requirements"
      ]
    ]
  ],
  "validate": [
    [
      "tests/functional/i/iterable_context.py",
      [
        "BaseType",
        "validate"
      ]
    ],
    [
      "tests/functional/m/member/membership_protocol.py",
      [
        "BaseThing",
        "validate"
      ]
    ],
    [
      "tests/functional/m/member/membership_protocol.py",
      [
        "AbstractThing",
        "validate"
      ]
    ],
    [
      "tests/functional/m/member/membership_protocol.py",
      [
        "Thing",
        "validate"
      ]
    ]
  ],
  "_init_lineparser": [
    [
      "tests/functional/i/iterable_context.py",
      [
        "AbstractUrlMarkManager",
        "_init_lineparser"
      ]
    ],
    [
      "tests/functional/i/iterable_context.py",
      [
        "UrlMarkManager",
        "_init_lineparser"
      ]
    ]
  ],
  "coroutine_function_return_none": [
    [
      "tests/functional/i/iterable_context_py3.py",
      [
        "coroutine_function_return_none"
      ]
    ]
  ],
  "coroutine_function_return_object": [
    [
      "tests/functional/i/iterable_context_py3.py",
      [
        "coroutine_function_return_object"
      ]
    ]
  ],
  "coroutine_function_return_future": [
    [
      "tests/functional/i/iterable_context_py3.py",
      [
        "coroutine_function_return_future"
      ]
    ]
  ],
  "coroutine_function_pass": [
    [
      "tests/functional/i/iterable_context_py3.py",
      [
        "coroutine_function_pass"
      ]
    ]
  ],
  "coroutine_generator": [
    [
      "tests/functional/i/iterable_context_py3.py",
      [
        "coroutine_generator"
      ]
    ]
  ],
  "__aiter__": [
    [
      "tests/functional/i/iterable_context_py36.py",
      [
        "AIter",
        "__aiter__"
      ]
    ],
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "Async",
        "__aiter__"
      ]
    ]
  ],
  "to_list": [
    [
      "tests/functional/i/iterable_context_py36.py",
      [
        "AIter",
        "to_list"
      ]
    ]
  ],
  "some_iter_func": [
    [
      "tests/functional/i/iterable_context_py36.py",
      [
        "some_iter_func"
      ]
    ]
  ],
  "count_to": [
    [
      "tests/functional/i/iterable_context_py36.py",
      [
        "count_to"
      ]
    ]
  ],
  "gen_values": [
    [
      "tests/functional/i/iterable_context_py36.py",
      [
        "gen_values"
      ]
    ]
  ],
  "do_some_comprehensions": [
    [
      "tests/functional/i/iterable_context_py36.py",
      [
        "do_some_comprehensions"
      ]
    ]
  ],
  "f": [
    [
      "tests/functional/import_outside_toplevel.py",
      [
        "f"
      ]
    ],
    [
      "tests/regrtest_data/test_pylintrc_comments.py",
      [
        "f"
      ]
    ]
  ],
  "g": [
    [
      "tests/functional/import_outside_toplevel.py",
      [
        "g"
      ]
    ]
  ],
  "h": [
    [
      "tests/functional/import_outside_toplevel.py",
      [
        "h"
      ]
    ]
  ],
  "i": [
    [
      "tests/functional/import_outside_toplevel.py",
      [
        "i"
      ]
    ],
    [
      "tests/functional/r/regression/regression_property_slots_2439.py",
      [
        "TestClass",
        "i"
      ]
    ]
  ],
  "j": [
    [
      "tests/functional/import_outside_toplevel.py",
      [
        "C",
        "j"
      ]
    ],
    [
      "tests/functional/import_outside_toplevel.py",
      [
        "j"
      ]
    ]
  ],
  "k": [
    [
      "tests/functional/import_outside_toplevel.py",
      [
        "k"
      ]
    ]
  ],
  "m": [
    [
      "tests/functional/import_outside_toplevel.py",
      [
        "m"
      ]
    ]
  ],
  "check_kwargs_before_args": [
    [
      "tests/functional/k/keyword_arg_before_vararg.py",
      [
        "check_kwargs_before_args"
      ]
    ]
  ],
  "func_in_class": [
    [
      "tests/functional/k/keyword_arg_before_vararg.py",
      [
        "AAAA",
        "func_in_class"
      ]
    ]
  ],
  "static_method_in_class": [
    [
      "tests/functional/k/keyword_arg_before_vararg.py",
      [
        "AAAA",
        "static_method_in_class"
      ]
    ]
  ],
  "class_method_in_class": [
    [
      "tests/functional/k/keyword_arg_before_vararg.py",
      [
        "AAAA",
        "class_method_in_class"
      ]
    ]
  ],
  "github_issue_1325": [
    [
      "tests/functional/l/len_checks.py",
      [
        "github_issue_1325"
      ]
    ]
  ],
  "github_issue_1331": [
    [
      "tests/functional/l/len_checks.py",
      [
        "github_issue_1331"
      ]
    ]
  ],
  "github_issue_1331_v2": [
    [
      "tests/functional/l/len_checks.py",
      [
        "github_issue_1331_v2"
      ]
    ]
  ],
  "github_issue_1331_v3": [
    [
      "tests/functional/l/len_checks.py",
      [
        "github_issue_1331_v3"
      ]
    ]
  ],
  "github_issue_1331_v4": [
    [
      "tests/functional/l/len_checks.py",
      [
        "github_issue_1331_v4"
      ]
    ]
  ],
  "function_returning_int": [
    [
      "tests/functional/l/len_checks.py",
      [
        "github_issue_1879",
        "function_returning_int"
      ]
    ]
  ],
  "github_issue_1879": [
    [
      "tests/functional/l/len_checks.py",
      [
        "github_issue_1879"
      ]
    ]
  ],
  "github_issue_4215": [
    [
      "tests/functional/l/len_checks.py",
      [
        "github_issue_4215"
      ]
    ]
  ],
  "func_with_long": [
    [
      "tests/functional/l/line_too_long.py",
      [
        "func_with_long"
      ]
    ]
  ],
  "issue_2957": [
    [
      "tests/functional/l/line_too_long.py",
      [
        "issue_2957"
      ]
    ]
  ],
  "issue_2957_bis": [
    [
      "tests/functional/l/line_too_long.py",
      [
        "issue_2957_bis"
      ]
    ]
  ],
  "bar": [
    [
      "tests/functional/l/logical_tautology.py",
      [
        "bar"
      ]
    ],
    [
      "tests/functional/m/misplaced_format_function.py",
      [
        "bar"
      ]
    ],
    [
      "tests/functional/r/recursion/recursion_error_2906.py",
      [
        "bar"
      ]
    ]
  ],
  "foobar": [
    [
      "tests/functional/l/logical_tautology.py",
      [
        "foobar"
      ]
    ],
    [
      "tests/functional/m/misplaced_format_function.py",
      [
        "foobar"
      ]
    ]
  ],
  "insidious_break_and_return": [
    [
      "tests/functional/l/lost_exception.py",
      [
        "insidious_break_and_return"
      ]
    ]
  ],
  "break_and_return": [
    [
      "tests/functional/l/lost_exception.py",
      [
        "break_and_return"
      ]
    ]
  ],
  "get_kwargs": [
    [
      "tests/functional/m/mapping_context.py",
      [
        "SomeMixin",
        "get_kwargs"
      ]
    ],
    [
      "tests/functional/m/mapping_context.py",
      [
        "AbstractThing",
        "get_kwargs"
      ]
    ],
    [
      "tests/functional/m/mapping_context.py",
      [
        "BaseThing",
        "get_kwargs"
      ]
    ],
    [
      "tests/functional/m/mapping_context.py",
      [
        "Thing",
        "get_kwargs"
      ]
    ]
  ],
  "hophop": [
    [
      "tests/functional/m/member/member_checks.py",
      [
        "Provider",
        "hophop"
      ]
    ]
  ],
  "use_method": [
    [
      "tests/functional/m/member/member_checks.py",
      [
        "Client",
        "use_method"
      ]
    ]
  ],
  "debug": [
    [
      "tests/functional/m/member/member_checks.py",
      [
        "Client",
        "debug"
      ]
    ]
  ],
  "test_bt_types": [
    [
      "tests/functional/m/member/member_checks.py",
      [
        "Client",
        "test_bt_types"
      ]
    ]
  ],
  "test_no_false_positives": [
    [
      "tests/functional/m/member/member_checks.py",
      [
        "Client",
        "test_no_false_positives"
      ]
    ]
  ],
  "__getattribute__": [
    [
      "tests/functional/m/member/member_checks.py",
      [
        "Getattribute",
        "__getattribute__"
      ]
    ]
  ],
  "socket_false_positive": [
    [
      "tests/functional/m/member/member_checks.py",
      [
        "socket_false_positive"
      ]
    ]
  ],
  "no_conjugate_member": [
    [
      "tests/functional/m/member/member_checks.py",
      [
        "no_conjugate_member"
      ]
    ]
  ],
  "__bar": [
    [
      "tests/functional/m/member/member_checks.py",
      [
        "ClassWithMangledAttribute",
        "__bar"
      ]
    ]
  ],
  "test_oserror_has_strerror": [
    [
      "tests/functional/m/member/member_checks_inference_improvements.py",
      [
        "test_oserror_has_strerror"
      ]
    ]
  ],
  "gen": [
    [
      "tests/functional/m/member/member_checks_py37.py",
      [
        "gen"
      ]
    ],
    [
      "tests/functional/w/with_using_generator.py",
      [
        "Base",
        "gen"
      ]
    ]
  ],
  "count": [
    [
      "tests/functional/m/member/membership_protocol.py",
      [
        "count"
      ]
    ],
    [
      "tests/functional/n/no/no_self_use.py",
      [
        "Prop",
        "count"
      ]
    ]
  ],
  "get_stuff": [
    [
      "tests/functional/m/member/membership_protocol.py",
      [
        "UsefulMixin",
        "get_stuff"
      ]
    ]
  ],
  "act": [
    [
      "tests/functional/m/member/membership_protocol.py",
      [
        "UsefulMixin",
        "act"
      ]
    ]
  ],
  "_init_values": [
    [
      "tests/functional/m/member/membership_protocol.py",
      [
        "Thing",
        "_init_values"
      ]
    ]
  ],
  "abcd": [
    [
      "tests/functional/m/method_hidden.py",
      [
        "Cdef",
        "abcd"
      ]
    ],
    [
      "tests/functional/m/method_hidden.py",
      [
        "AbcdMixin",
        "abcd"
      ]
    ],
    [
      "tests/functional/m/method_hidden.py",
      [
        "Dabc",
        "abcd"
      ]
    ],
    [
      "tests/functional/s/signature_differs.py",
      [
        "Abcd",
        "abcd"
      ]
    ],
    [
      "tests/functional/s/signature_differs.py",
      [
        "Cdef",
        "abcd"
      ]
    ],
    [
      "tests/functional/s/signature_differs.py",
      [
        "Ghij",
        "abcd"
      ]
    ]
  ],
  "five": [
    [
      "tests/functional/m/method_hidden.py",
      [
        "Ddef",
        "five"
      ]
    ]
  ],
  "do_something_with_baz": [
    [
      "tests/functional/m/method_hidden.py",
      [
        "Foo",
        "do_something_with_baz"
      ]
    ]
  ],
  "one": [
    [
      "tests/functional/m/method_hidden.py",
      [
        "One",
        "one"
      ]
    ],
    [
      "tests/functional/m/method_hidden.py",
      [
        "Two",
        "one"
      ]
    ]
  ],
  "test_dont_trigger_in_finally_clause_found_in_exception_handler": [
    [
      "tests/functional/m/misplaced_bare_raise.py",
      [
        "test_dont_trigger_in_finally_clause_found_in_exception_handler"
      ]
    ]
  ],
  "dummy_return": [
    [
      "tests/functional/m/misplaced_comparison_constant.py",
      [
        "MyClass",
        "dummy_return"
      ]
    ],
    [
      "tests/functional/m/misplaced_comparison_constant.py",
      [
        "dummy_return"
      ]
    ]
  ],
  "bad_comparisons": [
    [
      "tests/functional/m/misplaced_comparison_constant.py",
      [
        "bad_comparisons"
      ]
    ]
  ],
  "good_comparison": [
    [
      "tests/functional/m/misplaced_comparison_constant.py",
      [
        "good_comparison"
      ]
    ]
  ],
  "barfoo": [
    [
      "tests/functional/m/misplaced_format_function.py",
      [
        "barfoo"
      ]
    ]
  ],
  "get_string": [
    [
      "tests/functional/m/misplaced_format_function.py",
      [
        "FakeClass",
        "get_string"
      ]
    ],
    [
      "tests/functional/u/use/use_maxsplit_arg.py",
      [
        "Foo",
        "get_string"
      ]
    ]
  ],
  "format_string": [
    [
      "tests/functional/m/misplaced_format_function.py",
      [
        "FakeClass",
        "format_string"
      ]
    ]
  ],
  "public_documented": [
    [
      "tests/functional/m/missing/missing_docstring.py",
      [
        "public_documented"
      ]
    ],
    [
      "tests/functional/m/missing/missing_docstring_new_style.py",
      [
        "public_documented"
      ]
    ]
  ],
  "_private_undocumented": [
    [
      "tests/functional/m/missing/missing_docstring.py",
      [
        "_private_undocumented"
      ]
    ],
    [
      "tests/functional/m/missing/missing_docstring_new_style.py",
      [
        "_private_undocumented"
      ]
    ]
  ],
  "_private_documented": [
    [
      "tests/functional/m/missing/missing_docstring.py",
      [
        "_private_documented"
      ]
    ],
    [
      "tests/functional/m/missing/missing_docstring_new_style.py",
      [
        "_private_documented"
      ]
    ]
  ],
  "public_undocumented": [
    [
      "tests/functional/m/missing/missing_docstring.py",
      [
        "public_undocumented"
      ]
    ],
    [
      "tests/functional/m/missing/missing_docstring_new_style.py",
      [
        "public_undocumented"
      ]
    ]
  ],
  "__sizeof__": [
    [
      "tests/functional/m/missing/missing_docstring.py",
      [
        "__sizeof__"
      ]
    ]
  ],
  "__mangled": [
    [
      "tests/functional/m/missing/missing_docstring.py",
      [
        "__mangled"
      ]
    ]
  ],
  "test_2": [
    [
      "tests/functional/m/missing/missing_docstring.py",
      [
        "Property",
        "test_2"
      ]
    ]
  ],
  "undocumented_function": [
    [
      "tests/functional/m/missing/missing_docstring_new_style.py",
      [
        "undocumented_function"
      ]
    ]
  ],
  "undocumented_other_function": [
    [
      "tests/functional/m/missing/missing_docstring_new_style.py",
      [
        "undocumented_other_function"
      ]
    ]
  ],
  "target": [
    [
      "tests/functional/m/missing/missing_kwoa_py3.py",
      [
        "target"
      ]
    ]
  ],
  "forwarding_kwds": [
    [
      "tests/functional/m/missing/missing_kwoa_py3.py",
      [
        "forwarding_kwds"
      ]
    ]
  ],
  "forwarding_args": [
    [
      "tests/functional/m/missing/missing_kwoa_py3.py",
      [
        "forwarding_args"
      ]
    ]
  ],
  "forwarding_conversion": [
    [
      "tests/functional/m/missing/missing_kwoa_py3.py",
      [
        "forwarding_conversion"
      ]
    ]
  ],
  "not_forwarding_kwargs": [
    [
      "tests/functional/m/missing/missing_kwoa_py3.py",
      [
        "not_forwarding_kwargs"
      ]
    ]
  ],
  "bool_function": [
    [
      "tests/functional/m/missing/missing_parentheses_for_call_in_test.py",
      [
        "bool_function"
      ]
    ]
  ],
  "nonbool_function": [
    [
      "tests/functional/m/missing/missing_parentheses_for_call_in_test.py",
      [
        "nonbool_function"
      ]
    ]
  ],
  "bool_method": [
    [
      "tests/functional/m/missing/missing_parentheses_for_call_in_test.py",
      [
        "Class",
        "bool_method"
      ]
    ]
  ],
  "nonbool_method": [
    [
      "tests/functional/m/missing/missing_parentheses_for_call_in_test.py",
      [
        "Class",
        "nonbool_method"
      ]
    ]
  ],
  "non_const_node_function": [
    [
      "tests/functional/m/missing/missing_parentheses_for_call_in_test.py",
      [
        "non_const_node_function"
      ]
    ]
  ],
  "yielding_function": [
    [
      "tests/functional/m/missing/missing_parentheses_for_call_in_test.py",
      [
        "yielding_function"
      ]
    ]
  ],
  "correct": [
    [
      "tests/functional/m/missing/missing_self_argument.py",
      [
        "MyClass",
        "correct"
      ]
    ],
    [
      "tests/functional/n/not_callable.py",
      [
        "correct"
      ]
    ]
  ],
  "sayHello": [
    [
      "tests/functional/n/name/namePresetCamelCase.py",
      [
        "sayHello"
      ]
    ],
    [
      "tests/functional/n/name/name_preset_snake_case.py",
      [
        "sayHello"
      ]
    ]
  ],
  "myPublicX": [
    [
      "tests/functional/n/name/namePresetCamelCase.py",
      [
        "MyClass",
        "myPublicX"
      ]
    ]
  ],
  "say_hello": [
    [
      "tests/functional/n/name/namePresetCamelCase.py",
      [
        "say_hello"
      ]
    ],
    [
      "tests/functional/n/name/name_preset_snake_case.py",
      [
        "say_hello"
      ]
    ]
  ],
  "my_public_x": [
    [
      "tests/functional/n/name/name_good_bad_names_regex.py",
      [
        "my_class",
        "my_public_x"
      ]
    ],
    [
      "tests/functional/n/name/name_preset_snake_case.py",
      [
        "MyClass",
        "my_public_x"
      ]
    ]
  ],
  "disallowed_2_snake_case": [
    [
      "tests/functional/n/name/name_good_bad_names_regex.py",
      [
        "disallowed_2_snake_case"
      ]
    ]
  ],
  "BADFUNCTION_name": [
    [
      "tests/functional/n/name/name_styles.py",
      [
        "BADFUNCTION_name"
      ]
    ]
  ],
  "func_bad_argname": [
    [
      "tests/functional/n/name/name_styles.py",
      [
        "func_bad_argname"
      ]
    ]
  ],
  "no_nested_args": [
    [
      "tests/functional/n/name/name_styles.py",
      [
        "no_nested_args"
      ]
    ]
  ],
  "BadMethodName": [
    [
      "tests/functional/n/name/name_styles.py",
      [
        "CorrectClassName",
        "BadMethodName"
      ]
    ],
    [
      "tests/functional/n/name/name_styles.py",
      [
        "DerivedFromCorrect",
        "BadMethodName"
      ]
    ]
  ],
  "good_method_name": [
    [
      "tests/functional/n/name/name_styles.py",
      [
        "CorrectClassName",
        "good_method_name"
      ]
    ]
  ],
  "__DunDER_IS_not_free_for_all__": [
    [
      "tests/functional/n/name/name_styles.py",
      [
        "CorrectClassName",
        "__DunDER_IS_not_free_for_all__"
      ]
    ]
  ],
  "class_builder": [
    [
      "tests/functional/n/name/name_styles.py",
      [
        "class_builder"
      ]
    ]
  ],
  "test_globals": [
    [
      "tests/functional/n/name/name_styles.py",
      [
        "test_globals"
      ]
    ]
  ],
  "PROPERTY_NAME": [
    [
      "tests/functional/n/name/name_styles.py",
      [
        "FooClass",
        "PROPERTY_NAME"
      ]
    ]
  ],
  "ABSTRACT_PROPERTY_NAME": [
    [
      "tests/functional/n/name/name_styles.py",
      [
        "FooClass",
        "ABSTRACT_PROPERTY_NAME"
      ]
    ]
  ],
  "PROPERTY_NAME_SETTER": [
    [
      "tests/functional/n/name/name_styles.py",
      [
        "FooClass",
        "PROPERTY_NAME_SETTER"
      ]
    ]
  ],
  "_nice_and_long_descriptive_private_method_name": [
    [
      "tests/functional/n/name/name_styles.py",
      [
        "FooClass",
        "_nice_and_long_descriptive_private_method_name"
      ]
    ]
  ],
  "good_public_function_name": [
    [
      "tests/functional/n/name/name_styles.py",
      [
        "good_public_function_name"
      ]
    ]
  ],
  "_private_scope_function_with_long_descriptive_name": [
    [
      "tests/functional/n/name/name_styles.py",
      [
        "_private_scope_function_with_long_descriptive_name"
      ]
    ]
  ],
  "had_bug": [
    [
      "tests/functional/n/nested_blocks_issue1088.py",
      [
        "had_bug"
      ]
    ]
  ],
  "was_correct": [
    [
      "tests/functional/n/nested_blocks_issue1088.py",
      [
        "was_correct"
      ]
    ]
  ],
  "example": [
    [
      "tests/functional/n/nested_func_defined_in_loop.py",
      [
        "example"
      ]
    ],
    [
      "tests/functional/p/property_with_parameters.py",
      [
        "MyClassBase",
        "example"
      ]
    ]
  ],
  "writelines": [
    [
      "tests/functional/n/new_style_class_py_30.py",
      [
        "File",
        "writelines"
      ]
    ]
  ],
  "cmethod": [
    [
      "tests/functional/n/no/no_classmethod_decorator.py",
      [
        "MyClass",
        "cmethod"
      ]
    ]
  ],
  "my_second_method": [
    [
      "tests/functional/n/no/no_classmethod_decorator.py",
      [
        "MyClass",
        "my_second_method"
      ]
    ],
    [
      "tests/functional/n/no/no_staticmethod_decorator.py",
      [
        "MyClass",
        "my_second_method"
      ]
    ]
  ],
  "other_method": [
    [
      "tests/functional/n/no/no_classmethod_decorator.py",
      [
        "MyClass",
        "other_method"
      ]
    ],
    [
      "tests/functional/n/no/no_staticmethod_decorator.py",
      [
        "MyClass",
        "other_method"
      ]
    ]
  ],
  "helloworld": [
    [
      "tests/functional/n/no/no_classmethod_decorator.py",
      [
        "helloworld"
      ]
    ],
    [
      "tests/functional/n/no/no_staticmethod_decorator.py",
      [
        "helloworld"
      ]
    ]
  ],
  "clobbering": [
    [
      "tests/functional/n/no/no_dummy_redefined.py",
      [
        "clobbering"
      ]
    ]
  ],
  "foo5": [
    [
      "tests/functional/n/no/no_else_break.py",
      [
        "foo5"
      ]
    ],
    [
      "tests/functional/n/no/no_else_continue.py",
      [
        "foo5"
      ]
    ],
    [
      "tests/functional/n/no/no_else_raise.py",
      [
        "foo5"
      ]
    ],
    [
      "tests/functional/n/no/no_else_return.py",
      [
        "foo5"
      ]
    ]
  ],
  "foo6": [
    [
      "tests/functional/n/no/no_else_break.py",
      [
        "foo6"
      ]
    ],
    [
      "tests/functional/n/no/no_else_continue.py",
      [
        "foo6"
      ]
    ],
    [
      "tests/functional/n/no/no_else_raise.py",
      [
        "foo6"
      ]
    ],
    [
      "tests/functional/n/no/no_else_return.py",
      [
        "foo6"
      ]
    ]
  ],
  "bar1": [
    [
      "tests/functional/n/no/no_else_break.py",
      [
        "bar1"
      ]
    ],
    [
      "tests/functional/n/no/no_else_continue.py",
      [
        "bar1"
      ]
    ],
    [
      "tests/functional/n/no/no_else_raise.py",
      [
        "bar1"
      ]
    ],
    [
      "tests/functional/n/no/no_else_return.py",
      [
        "bar1"
      ]
    ]
  ],
  "bar2": [
    [
      "tests/functional/n/no/no_else_break.py",
      [
        "bar2"
      ]
    ],
    [
      "tests/functional/n/no/no_else_continue.py",
      [
        "bar2"
      ]
    ],
    [
      "tests/functional/n/no/no_else_raise.py",
      [
        "bar2"
      ]
    ],
    [
      "tests/functional/n/no/no_else_return.py",
      [
        "bar2"
      ]
    ]
  ],
  "bar3": [
    [
      "tests/functional/n/no/no_else_break.py",
      [
        "bar3"
      ]
    ],
    [
      "tests/functional/n/no/no_else_continue.py",
      [
        "bar3"
      ]
    ],
    [
      "tests/functional/n/no/no_else_raise.py",
      [
        "bar3"
      ]
    ],
    [
      "tests/functional/n/no/no_else_return.py",
      [
        "bar3"
      ]
    ]
  ],
  "bar4": [
    [
      "tests/functional/n/no/no_else_break.py",
      [
        "bar4"
      ]
    ],
    [
      "tests/functional/n/no/no_else_continue.py",
      [
        "bar4"
      ]
    ],
    [
      "tests/functional/n/no/no_else_raise.py",
      [
        "bar4"
      ]
    ],
    [
      "tests/functional/n/no/no_else_return.py",
      [
        "bar4"
      ]
    ]
  ],
  "nested1": [
    [
      "tests/functional/n/no/no_else_break.py",
      [
        "nested1"
      ]
    ],
    [
      "tests/functional/n/no/no_else_continue.py",
      [
        "nested1"
      ]
    ]
  ],
  "nested2": [
    [
      "tests/functional/n/no/no_else_break.py",
      [
        "nested2"
      ]
    ],
    [
      "tests/functional/n/no/no_else_continue.py",
      [
        "nested2"
      ]
    ]
  ],
  "abdc": [
    [
      "tests/functional/n/no/no_self_argument.py",
      [
        "NoSelfArgument",
        "abdc"
      ]
    ]
  ],
  "edf": [
    [
      "tests/functional/n/no/no_self_argument.py",
      [
        "NoSelfArgument",
        "edf"
      ]
    ]
  ],
  "__class_getitem__": [
    [
      "tests/functional/n/no/no_self_argument_py37.py",
      [
        "Toto",
        "__class_getitem__"
      ]
    ],
    [
      "tests/functional/u/unsubscriptable_value_py37.py",
      [
        "Subscriptable",
        "__class_getitem__"
      ]
    ]
  ],
  "__class_other__": [
    [
      "tests/functional/n/no/no_self_argument_py37.py",
      [
        "Toto",
        "__class_other__"
      ]
    ]
  ],
  "regular_method": [
    [
      "tests/functional/n/no/no_self_use.py",
      [
        "Toto",
        "regular_method"
      ]
    ]
  ],
  "function_method": [
    [
      "tests/functional/n/no/no_self_use.py",
      [
        "Toto",
        "function_method"
      ]
    ]
  ],
  "__cmp__": [
    [
      "tests/functional/n/no/no_self_use.py",
      [
        "Sub1",
        "__cmp__"
      ]
    ]
  ],
  "__copy__": [
    [
      "tests/functional/n/no/no_self_use.py",
      [
        "Sub1",
        "__copy__"
      ]
    ],
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "Valid",
        "__copy__"
      ]
    ]
  ],
  "__getstate__": [
    [
      "tests/functional/n/no/no_self_use.py",
      [
        "Sub1",
        "__getstate__"
      ]
    ]
  ],
  "get": [
    [
      "tests/functional/n/no/no_self_use_py3.py",
      [
        "A",
        "get"
      ]
    ]
  ],
  "get_memo": [
    [
      "tests/functional/n/no/no_self_use_py3.py",
      [
        "B",
        "get_memo"
      ]
    ]
  ],
  "smethod": [
    [
      "tests/functional/n/no/no_staticmethod_decorator.py",
      [
        "MyClass",
        "smethod"
      ]
    ]
  ],
  "\u00fa\u00f3\u00ed\u00e9\u00e1": [
    [
      "tests/functional/n/non/non_ascii_name.py",
      [
        "\u00fa\u00f3\u00ed\u00e9\u00e1"
      ]
    ]
  ],
  "example_function": [
    [
      "tests/functional/n/non/non_str_assignment_to_dunder_name.py",
      [
        "example_function"
      ]
    ]
  ],
  "returns_str": [
    [
      "tests/functional/n/non/non_str_assignment_to_dunder_name.py",
      [
        "returns_str"
      ]
    ]
  ],
  "returns_int": [
    [
      "tests/functional/n/non/non_str_assignment_to_dunder_name.py",
      [
        "returns_int"
      ]
    ]
  ],
  "returns_tuple": [
    [
      "tests/functional/n/non/non_str_assignment_to_dunder_name.py",
      [
        "returns_tuple"
      ]
    ]
  ],
  "returns_random_type": [
    [
      "tests/functional/n/non/non_str_assignment_to_dunder_name.py",
      [
        "returns_random_type"
      ]
    ]
  ],
  "ctx_manager": [
    [
      "tests/functional/n/not_async_context_manager.py",
      [
        "ctx_manager"
      ]
    ]
  ],
  "__aenter__": [
    [
      "tests/functional/n/not_async_context_manager.py",
      [
        "PartialAsyncContextManager",
        "__aenter__"
      ]
    ],
    [
      "tests/functional/n/not_async_context_manager.py",
      [
        "UnknownBases",
        "__aenter__"
      ]
    ],
    [
      "tests/functional/n/not_async_context_manager.py",
      [
        "GoodAsyncManager",
        "__aenter__"
      ]
    ],
    [
      "tests/functional/n/not_async_context_manager.py",
      [
        "SecondGoodAsyncManager",
        "__aenter__"
      ]
    ],
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "Async",
        "__aenter__"
      ]
    ]
  ],
  "__aexit__": [
    [
      "tests/functional/n/not_async_context_manager.py",
      [
        "SecondPartialAsyncContextManager",
        "__aexit__"
      ]
    ],
    [
      "tests/functional/n/not_async_context_manager.py",
      [
        "GoodAsyncManager",
        "__aexit__"
      ]
    ],
    [
      "tests/functional/n/not_async_context_manager.py",
      [
        "InheritExit",
        "__aexit__"
      ]
    ],
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "Async",
        "__aexit__"
      ]
    ]
  ],
  "bad_coro": [
    [
      "tests/functional/n/not_async_context_manager.py",
      [
        "bad_coro"
      ]
    ],
    [
      "tests/functional/y/yield_inside_async_function.py",
      [
        "bad_coro"
      ]
    ],
    [
      "tests/functional/y/yield_inside_async_function_py36.py",
      [
        "bad_coro"
      ]
    ]
  ],
  "good_coro": [
    [
      "tests/functional/n/not_async_context_manager.py",
      [
        "good_coro"
      ]
    ],
    [
      "tests/functional/y/yield_inside_async_function.py",
      [
        "good_coro"
      ]
    ],
    [
      "tests/functional/y/yield_inside_async_function_py36.py",
      [
        "good_coro"
      ]
    ]
  ],
  "context_manager": [
    [
      "tests/functional/n/not_async_context_manager_py37.py",
      [
        "context_manager"
      ]
    ]
  ],
  "async_context_manager": [
    [
      "tests/functional/n/not_async_context_manager_py37.py",
      [
        "async_context_manager"
      ]
    ]
  ],
  "__call__": [
    [
      "tests/functional/n/not_callable.py",
      [
        "MetaCorrect",
        "__call__"
      ]
    ],
    [
      "tests/functional/s/singledispatch_functions_py3.py",
      [
        "FakeSingleDispatch",
        "__call__"
      ]
    ],
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "Valid",
        "__call__"
      ]
    ]
  ],
  "custom": [
    [
      "tests/functional/n/not_callable.py",
      [
        "PropertyTest",
        "custom"
      ]
    ]
  ],
  "custom_3": [
    [
      "tests/functional/n/not_callable.py",
      [
        "PropertyTest",
        "custom_3"
      ]
    ]
  ],
  "static": [
    [
      "tests/functional/n/not_callable.py",
      [
        "SafeProperty",
        "static"
      ]
    ]
  ],
  "klass": [
    [
      "tests/functional/n/not_callable.py",
      [
        "SafeProperty",
        "klass"
      ]
    ]
  ],
  "get_lambda": [
    [
      "tests/functional/n/not_callable.py",
      [
        "SafeProperty",
        "get_lambda"
      ]
    ]
  ],
  "dict_builtin": [
    [
      "tests/functional/n/not_callable.py",
      [
        "SafeProperty",
        "dict_builtin"
      ]
    ]
  ],
  "range_builtin": [
    [
      "tests/functional/n/not_callable.py",
      [
        "SafeProperty",
        "range_builtin"
      ]
    ]
  ],
  "instance": [
    [
      "tests/functional/n/not_callable.py",
      [
        "SafeProperty",
        "instance"
      ]
    ]
  ],
  "does_not_make_sense": [
    [
      "tests/functional/n/not_callable.py",
      [
        "SafeProperty",
        "does_not_make_sense"
      ]
    ]
  ],
  "dec": [
    [
      "tests/functional/n/not_context_manager.py",
      [
        "dec"
      ]
    ],
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "dec"
      ]
    ]
  ],
  "penelopa": [
    [
      "tests/functional/n/not_context_manager.py",
      [
        "penelopa"
      ]
    ]
  ],
  "wrapper": [
    [
      "tests/functional/n/not_context_manager.py",
      [
        "wrapper"
      ]
    ]
  ],
  "ctx": [
    [
      "tests/functional/n/not_context_manager.py",
      [
        "Property",
        "ctx"
      ]
    ]
  ],
  "not_ctx": [
    [
      "tests/functional/n/not_context_manager.py",
      [
        "Property",
        "not_ctx"
      ]
    ]
  ],
  "context_manager_returning_generator": [
    [
      "tests/functional/n/not_context_manager.py",
      [
        "context_manager_returning_generator"
      ]
    ]
  ],
  "other_indirect_func": [
    [
      "tests/functional/n/not_context_manager.py",
      [
        "other_indirect_func"
      ]
    ]
  ],
  "not_context_manager": [
    [
      "tests/functional/n/not_context_manager.py",
      [
        "not_context_manager"
      ]
    ]
  ],
  "lala": [
    [
      "tests/functional/n/not_in_loop.py",
      [
        "lala"
      ]
    ]
  ],
  "__mul__": [
    [
      "tests/functional/o/overloaded_operator.py",
      [
        "Myarray",
        "__mul__"
      ]
    ]
  ],
  "astype": [
    [
      "tests/functional/o/overloaded_operator.py",
      [
        "Myarray",
        "astype"
      ]
    ]
  ],
  "randint": [
    [
      "tests/functional/o/overloaded_operator.py",
      [
        "randint"
      ]
    ]
  ],
  "from_string": [
    [
      "tests/functional/p/postponed_evaluation_activated.py",
      [
        "Class",
        "from_string"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_activated_with_alias.py",
      [
        "MyClass",
        "from_string"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_not_activated.py",
      [
        "Class",
        "from_string"
      ]
    ]
  ],
  "validate_b": [
    [
      "tests/functional/p/postponed_evaluation_activated.py",
      [
        "Class",
        "validate_b"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_activated_with_alias.py",
      [
        "MyClass",
        "validate_b"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_not_activated.py",
      [
        "Class",
        "validate_b"
      ]
    ]
  ],
  "func3": [
    [
      "tests/functional/p/postponed_evaluation_pep585.py",
      [
        "func3"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_error.py",
      [
        "func3"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_py39.py",
      [
        "func3"
      ]
    ],
    [
      "tests/functional/u/unreachable.py",
      [
        "func3"
      ]
    ],
    [
      "tests/functional/u/unused/unused_variable.py",
      [
        "func3"
      ]
    ]
  ],
  "func4": [
    [
      "tests/functional/p/postponed_evaluation_pep585.py",
      [
        "func4"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_error.py",
      [
        "func4"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_py39.py",
      [
        "func4"
      ]
    ],
    [
      "tests/functional/t/ternary.py",
      [
        "func4"
      ]
    ],
    [
      "tests/functional/u/unreachable.py",
      [
        "func4"
      ]
    ],
    [
      "tests/functional/u/unused/unused_variable.py",
      [
        "func4"
      ]
    ]
  ],
  "func5": [
    [
      "tests/functional/p/postponed_evaluation_pep585.py",
      [
        "func5"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_error.py",
      [
        "func5"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_py39.py",
      [
        "func5"
      ]
    ]
  ],
  "func6": [
    [
      "tests/functional/p/postponed_evaluation_pep585.py",
      [
        "func6"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_error.py",
      [
        "func6"
      ]
    ],
    [
      "tests/functional/p/postponed_evaluation_pep585_py39.py",
      [
        "func6"
      ]
    ]
  ],
  "meth3": [
    [
      "tests/functional/p/pragma_after_backslash.py",
      [
        "Foo",
        "meth3"
      ]
    ],
    [
      "tests/functional/t/too/too_many_public_methods.py",
      [
        "Aaaa",
        "meth3"
      ]
    ],
    [
      "tests/regrtest_data/func_block_disable_msg.py",
      [
        "Foo",
        "meth3"
      ]
    ]
  ],
  "myattr": [
    [
      "tests/functional/p/property_affectation_py26.py",
      [
        "Test",
        "myattr"
      ]
    ]
  ],
  "myattr_1": [
    [
      "tests/functional/p/property_affectation_py26.py",
      [
        "Test",
        "myattr_1"
      ]
    ]
  ],
  "attribute": [
    [
      "tests/functional/p/property_with_parameters.py",
      [
        "Cls",
        "attribute"
      ]
    ]
  ],
  "example_1": [
    [
      "tests/functional/p/property_with_parameters.py",
      [
        "MyClassBase",
        "example_1"
      ]
    ]
  ],
  "bad_percent": [
    [
      "tests/functional/r/raise/raising_format_tuple.py",
      [
        "bad_percent"
      ]
    ]
  ],
  "good_percent": [
    [
      "tests/functional/r/raise/raising_format_tuple.py",
      [
        "good_percent"
      ]
    ]
  ],
  "bad_multiarg": [
    [
      "tests/functional/r/raise/raising_format_tuple.py",
      [
        "bad_multiarg"
      ]
    ]
  ],
  "good_multiarg": [
    [
      "tests/functional/r/raise/raising_format_tuple.py",
      [
        "good_multiarg"
      ]
    ]
  ],
  "bad_braces": [
    [
      "tests/functional/r/raise/raising_format_tuple.py",
      [
        "bad_braces"
      ]
    ]
  ],
  "good_braces": [
    [
      "tests/functional/r/raise/raising_format_tuple.py",
      [
        "good_braces"
      ]
    ]
  ],
  "bad_multistring": [
    [
      "tests/functional/r/raise/raising_format_tuple.py",
      [
        "bad_multistring"
      ]
    ]
  ],
  "bad_triplequote": [
    [
      "tests/functional/r/raise/raising_format_tuple.py",
      [
        "bad_triplequote"
      ]
    ]
  ],
  "bad_unicode": [
    [
      "tests/functional/r/raise/raising_format_tuple.py",
      [
        "bad_unicode"
      ]
    ]
  ],
  "raise_something_without_name": [
    [
      "tests/functional/r/raise/raising_format_tuple.py",
      [
        "raise_something_without_name"
      ]
    ]
  ],
  "return_self": [
    [
      "tests/functional/r/raise/raising_self.py",
      [
        "MultiException",
        "return_self"
      ]
    ]
  ],
  "incr": [
    [
      "tests/functional/r/recursion/recursion_error_2667.py",
      [
        "MyClass",
        "incr"
      ]
    ]
  ],
  "ndim": [
    [
      "tests/functional/r/recursion/recursion_error_2836.py",
      [
        "Data",
        "ndim"
      ]
    ]
  ],
  "copy_move_axis": [
    [
      "tests/functional/r/recursion/recursion_error_2836.py",
      [
        "Data",
        "copy_move_axis"
      ]
    ]
  ],
  "_transfer": [
    [
      "tests/functional/r/recursion/recursion_error_2861.py",
      [
        "Repository",
        "_transfer"
      ]
    ]
  ],
  "broken": [
    [
      "tests/functional/r/recursion/recursion_error_2899.py",
      [
        "broken"
      ]
    ]
  ],
  "initialize_options": [
    [
      "tests/functional/r/recursion/recursion_error_3159.py",
      [
        "AnyCommand",
        "initialize_options"
      ]
    ]
  ],
  "finalize_options": [
    [
      "tests/functional/r/recursion/recursion_error_3159.py",
      [
        "AnyCommand",
        "finalize_options"
      ]
    ]
  ],
  "today": [
    [
      "tests/functional/r/recursion/recursion_error_940.py",
      [
        "NewDate",
        "today"
      ]
    ]
  ],
  "test_redefined_in_with": [
    [
      "tests/functional/r/redefined_argument_from_local.py",
      [
        "test_redefined_in_with"
      ]
    ]
  ],
  "test_not_redefined_in_with": [
    [
      "tests/functional/r/redefined_argument_from_local.py",
      [
        "test_not_redefined_in_with"
      ]
    ]
  ],
  "test_redefined_in_for": [
    [
      "tests/functional/r/redefined_argument_from_local.py",
      [
        "test_redefined_in_for"
      ]
    ]
  ],
  "test_not_redefined_in_for": [
    [
      "tests/functional/r/redefined_argument_from_local.py",
      [
        "test_not_redefined_in_for"
      ]
    ]
  ],
  "test_redefined_in_except_handler": [
    [
      "tests/functional/r/redefined_argument_from_local.py",
      [
        "test_redefined_in_except_handler"
      ]
    ]
  ],
  "test_not_redefined_in_except_handler": [
    [
      "tests/functional/r/redefined_argument_from_local.py",
      [
        "test_not_redefined_in_except_handler"
      ]
    ]
  ],
  "test_not_redefined": [
    [
      "tests/functional/r/redefined_argument_from_local.py",
      [
        "test_not_redefined"
      ]
    ]
  ],
  "apply_filter": [
    [
      "tests/functional/r/redefined_argument_from_local.py",
      [
        "apply_filter"
      ]
    ]
  ],
  "test_something": [
    [
      "tests/functional/r/redundant_unittest_assert.py",
      [
        "Tests",
        "test_something"
      ]
    ]
  ],
  "exception_handler": [
    [
      "tests/functional/r/regression/regression_1326_crash_uninferable.py",
      [
        "exception_handler"
      ]
    ]
  ],
  "get_list": [
    [
      "tests/functional/r/regression/regression_2937_ifexp.py",
      [
        "get_list"
      ]
    ]
  ],
  "find_int": [
    [
      "tests/functional/r/regression/regression_2937_ifexp.py",
      [
        "find_int"
      ]
    ]
  ],
  "values": [
    [
      "tests/functional/r/regression/regression_3231_no_member_property.py",
      [
        "Cls",
        "values"
      ]
    ],
    [
      "tests/functional/r/regression/regression_properties_in_class_context.py",
      [
        "Meta",
        "values"
      ]
    ]
  ],
  "fun": [
    [
      "tests/functional/r/regression/regression_3416_unused_argument_raise.py",
      [
        "fun"
      ]
    ],
    [
      "tests/functional/w/with_using_generator.py",
      [
        "Base",
        "fun"
      ]
    ]
  ],
  "prev": [
    [
      "tests/functional/r/regression/regression_3595_notcallable_collections.py",
      [
        "Example",
        "prev"
      ]
    ]
  ],
  "qm_file": [
    [
      "tests/functional/r/regression/regression_4612_crash_pytest_fixture.py",
      [
        "qm_file"
      ]
    ]
  ],
  "index": [
    [
      "tests/functional/r/regression/regression_implicit_none_with_no_return.py",
      [
        "A",
        "index"
      ]
    ]
  ],
  "items": [
    [
      "tests/functional/r/regression/regression_no_value_for_parameter.py",
      [
        "ConfigManager",
        "items"
      ]
    ]
  ],
  "varargs_good": [
    [
      "tests/functional/r/regression/regression_no_value_for_parameter.py",
      [
        "varargs_good"
      ]
    ]
  ],
  "varargs_no_expr": [
    [
      "tests/functional/r/regression/regression_no_value_for_parameter.py",
      [
        "varargs_no_expr"
      ]
    ]
  ],
  "kwargs_good": [
    [
      "tests/functional/r/regression/regression_no_value_for_parameter.py",
      [
        "kwargs_good"
      ]
    ]
  ],
  "kwargs_no_expr": [
    [
      "tests/functional/r/regression/regression_no_value_for_parameter.py",
      [
        "kwargs_no_expr"
      ]
    ]
  ],
  "buildme": [
    [
      "tests/functional/r/regression/regression_posonly_args.py",
      [
        "Foobar",
        "buildme"
      ]
    ]
  ],
  "runme": [
    [
      "tests/functional/r/regression/regression_posonly_args.py",
      [
        "Foobar",
        "runme"
      ]
    ]
  ],
  "a_method": [
    [
      "tests/functional/r/regression/regression_properties_in_class_context.py",
      [
        "Meta2",
        "a_method"
      ]
    ],
    [
      "tests/functional/r/regression/regression_properties_in_class_context.py",
      [
        "Parent2",
        "a_method"
      ]
    ],
    [
      "tests/functional/t/typing_generic.py",
      [
        "A",
        "a_method"
      ]
    ]
  ],
  "name": [
    [
      "tests/functional/r/regression/regression_property_no_member_2641.py",
      [
        "Person",
        "name"
      ]
    ],
    [
      "tests/functional/r/regression/regression_property_no_member_2641.py",
      [
        "Myself",
        "name"
      ]
    ]
  ],
  "name_1": [
    [
      "tests/functional/r/regression/regression_property_no_member_2641.py",
      [
        "Person",
        "name_1"
      ]
    ]
  ],
  "thing": [
    [
      "tests/functional/r/regression/regression_property_no_member_844.py",
      [
        "Parent",
        "thing"
      ]
    ],
    [
      "tests/functional/r/regression/regression_property_no_member_844.py",
      [
        "Child",
        "thing"
      ]
    ]
  ],
  "val": [
    [
      "tests/functional/r/regression/regression_property_no_member_870.py",
      [
        "X",
        "val"
      ]
    ]
  ],
  "val_1": [
    [
      "tests/functional/r/regression/regression_property_no_member_870.py",
      [
        "X",
        "val_1"
      ]
    ]
  ],
  "i_1": [
    [
      "tests/functional/r/regression/regression_property_slots_2439.py",
      [
        "TestClass",
        "i_1"
      ]
    ]
  ],
  "no_reimport": [
    [
      "tests/functional/r/reimported.py",
      [
        "no_reimport"
      ]
    ]
  ],
  "reimport": [
    [
      "tests/functional/r/reimported.py",
      [
        "reimport"
      ]
    ]
  ],
  "self_foo": [
    [
      "tests/functional/s/self/self_cls_assignment.py",
      [
        "Foo",
        "self_foo"
      ]
    ]
  ],
  "self_foofoo": [
    [
      "tests/functional/s/self/self_cls_assignment.py",
      [
        "Foo",
        "self_foofoo"
      ]
    ]
  ],
  "cls_foo": [
    [
      "tests/functional/s/self/self_cls_assignment.py",
      [
        "Foo",
        "cls_foo"
      ]
    ]
  ],
  "static_foo": [
    [
      "tests/functional/s/self/self_cls_assignment.py",
      [
        "Foo",
        "static_foo"
      ]
    ]
  ],
  "free_foo": [
    [
      "tests/functional/s/self/self_cls_assignment.py",
      [
        "free_foo"
      ]
    ]
  ],
  "args": [
    [
      "tests/functional/s/signature_differs.py",
      [
        "Abcd",
        "args"
      ]
    ]
  ],
  "test_simplifiable_1": [
    [
      "tests/functional/s/simplifiable/simplifiable_if_expression.py",
      [
        "test_simplifiable_1"
      ]
    ],
    [
      "tests/functional/s/simplifiable/simplifiable_if_statement.py",
      [
        "test_simplifiable_1"
      ]
    ]
  ],
  "test_simplifiable_2": [
    [
      "tests/functional/s/simplifiable/simplifiable_if_expression.py",
      [
        "test_simplifiable_2"
      ]
    ],
    [
      "tests/functional/s/simplifiable/simplifiable_if_statement.py",
      [
        "test_simplifiable_2"
      ]
    ]
  ],
  "test_simplifiable_3": [
    [
      "tests/functional/s/simplifiable/simplifiable_if_expression.py",
      [
        "test_simplifiable_3"
      ]
    ],
    [
      "tests/functional/s/simplifiable/simplifiable_if_statement.py",
      [
        "test_simplifiable_3"
      ]
    ]
  ],
  "test_simplifiable_4": [
    [
      "tests/functional/s/simplifiable/simplifiable_if_expression.py",
      [
        "test_simplifiable_4"
      ]
    ],
    [
      "tests/functional/s/simplifiable/simplifiable_if_statement.py",
      [
        "test_simplifiable_4"
      ]
    ]
  ],
  "test_not_simplifiable": [
    [
      "tests/functional/s/simplifiable/simplifiable_if_expression.py",
      [
        "test_not_simplifiable"
      ]
    ]
  ],
  "test_not_necessarily_simplifiable_1": [
    [
      "tests/functional/s/simplifiable/simplifiable_if_statement.py",
      [
        "test_not_necessarily_simplifiable_1"
      ]
    ]
  ],
  "test_not_necessarily_simplifiabile_2": [
    [
      "tests/functional/s/simplifiable/simplifiable_if_statement.py",
      [
        "test_not_necessarily_simplifiabile_2"
      ]
    ]
  ],
  "test_not_simplifiable_3": [
    [
      "tests/functional/s/simplifiable/simplifiable_if_statement.py",
      [
        "test_not_simplifiable_3"
      ]
    ]
  ],
  "test_not_simplifiable_4": [
    [
      "tests/functional/s/simplifiable/simplifiable_if_statement.py",
      [
        "test_not_simplifiable_4"
      ]
    ]
  ],
  "test_not_simplifiable_5": [
    [
      "tests/functional/s/simplifiable/simplifiable_if_statement.py",
      [
        "test_not_simplifiable_5"
      ]
    ]
  ],
  "test_not_simplifiable_6": [
    [
      "tests/functional/s/simplifiable/simplifiable_if_statement.py",
      [
        "test_not_simplifiable_6"
      ]
    ]
  ],
  "test_not_simplifiable_7": [
    [
      "tests/functional/s/simplifiable/simplifiable_if_statement.py",
      [
        "test_not_simplifiable_7"
      ]
    ]
  ],
  "test_not_simplifiable_8": [
    [
      "tests/functional/s/simplifiable/simplifiable_if_statement.py",
      [
        "test_not_simplifiable_8"
      ]
    ]
  ],
  "test_not_simplifiable_9": [
    [
      "tests/functional/s/simplifiable/simplifiable_if_statement.py",
      [
        "test_not_simplifiable_9"
      ]
    ]
  ],
  "test_not_simplifiable_10": [
    [
      "tests/functional/s/simplifiable/simplifiable_if_statement.py",
      [
        "test_not_simplifiable_10"
      ]
    ]
  ],
  "test_simplify_chained_comparison_1": [
    [
      "tests/functional/s/simplifiable/simplify_chained_comparison.py",
      [
        "test_simplify_chained_comparison_1"
      ]
    ]
  ],
  "test_simplify_chained_comparison_2": [
    [
      "tests/functional/s/simplifiable/simplify_chained_comparison.py",
      [
        "test_simplify_chained_comparison_2"
      ]
    ]
  ],
  "test_simplify_chained_comparison_3": [
    [
      "tests/functional/s/simplifiable/simplify_chained_comparison.py",
      [
        "test_simplify_chained_comparison_3"
      ]
    ]
  ],
  "test_not_simplify_chained_comparison_1": [
    [
      "tests/functional/s/simplifiable/simplify_chained_comparison.py",
      [
        "test_not_simplify_chained_comparison_1"
      ]
    ]
  ],
  "__2": [
    [
      "tests/functional/s/singledispatch_functions_py3.py",
      [
        "__2"
      ]
    ]
  ],
  "__4": [
    [
      "tests/functional/s/singledispatch_functions_py3.py",
      [
        "__4"
      ]
    ]
  ],
  "with_extra_arg": [
    [
      "tests/functional/s/singledispatch_functions_py3.py",
      [
        "with_extra_arg"
      ]
    ]
  ],
  "__6": [
    [
      "tests/functional/s/singledispatch_functions_py3.py",
      [
        "__6"
      ]
    ]
  ],
  "not_single_dispatch": [
    [
      "tests/functional/s/singledispatch_functions_py3.py",
      [
        "not_single_dispatch"
      ]
    ]
  ],
  "bad_single_dispatch": [
    [
      "tests/functional/s/singledispatch_functions_py3.py",
      [
        "bad_single_dispatch"
      ]
    ]
  ],
  "bad_single_dispatch_9": [
    [
      "tests/functional/s/singledispatch_functions_py3.py",
      [
        "bad_single_dispatch_9"
      ]
    ]
  ],
  "__iter_": [
    [
      "tests/functional/s/slots_checks.py",
      [
        "NotIterable",
        "__iter_"
      ]
    ]
  ],
  "third": [
    [
      "tests/functional/s/slots_checks.py",
      [
        "ValueInSlotConflict",
        "third"
      ]
    ]
  ],
  "fourth": [
    [
      "tests/functional/s/slots_checks.py",
      [
        "ValueInSlotConflict",
        "fourth"
      ]
    ]
  ],
  "to_be": [
    [
      "tests/functional/s/statement_without_effect.py",
      [
        "to_be"
      ]
    ]
  ],
  "ellipsis": [
    [
      "tests/functional/s/statement_without_effect.py",
      [
        "ellipsis"
      ]
    ]
  ],
  "gen_ok": [
    [
      "tests/functional/s/stop_iteration_inside_generator.py",
      [
        "gen_ok"
      ]
    ]
  ],
  "gen_stopiter": [
    [
      "tests/functional/s/stop_iteration_inside_generator.py",
      [
        "gen_stopiter"
      ]
    ]
  ],
  "gen_stopiterchild": [
    [
      "tests/functional/s/stop_iteration_inside_generator.py",
      [
        "gen_stopiterchild"
      ]
    ]
  ],
  "gen_next_raises_stopiter": [
    [
      "tests/functional/s/stop_iteration_inside_generator.py",
      [
        "gen_next_raises_stopiter"
      ]
    ]
  ],
  "gen_next_inside_try_except": [
    [
      "tests/functional/s/stop_iteration_inside_generator.py",
      [
        "gen_next_inside_try_except"
      ]
    ]
  ],
  "gen_next_inside_wrong_try_except": [
    [
      "tests/functional/s/stop_iteration_inside_generator.py",
      [
        "gen_next_inside_wrong_try_except"
      ]
    ]
  ],
  "gen_next_inside_wrong_try_except2": [
    [
      "tests/functional/s/stop_iteration_inside_generator.py",
      [
        "gen_next_inside_wrong_try_except2"
      ]
    ]
  ],
  "gen_in_for": [
    [
      "tests/functional/s/stop_iteration_inside_generator.py",
      [
        "gen_in_for"
      ]
    ]
  ],
  "gen_yield_from": [
    [
      "tests/functional/s/stop_iteration_inside_generator.py",
      [
        "gen_yield_from"
      ]
    ]
  ],
  "gen_dont_crash_on_no_exception": [
    [
      "tests/functional/s/stop_iteration_inside_generator.py",
      [
        "gen_dont_crash_on_no_exception"
      ]
    ]
  ],
  "gen_dont_crash_on_uninferable": [
    [
      "tests/functional/s/stop_iteration_inside_generator.py",
      [
        "gen_dont_crash_on_uninferable"
      ]
    ]
  ],
  "gen_next_with_sentinel": [
    [
      "tests/functional/s/stop_iteration_inside_generator.py",
      [
        "gen_next_with_sentinel"
      ]
    ]
  ],
  "generator_using_next": [
    [
      "tests/functional/s/stop_iteration_inside_generator.py",
      [
        "generator_using_next"
      ]
    ]
  ],
  "some_gen": [
    [
      "tests/functional/s/stop_iteration_inside_generator.py",
      [
        "SomeClassWithNext",
        "some_gen"
      ]
    ]
  ],
  "something_invalid": [
    [
      "tests/functional/s/stop_iteration_inside_generator.py",
      [
        "something_invalid"
      ]
    ]
  ],
  "invalid_object_passed_to_next": [
    [
      "tests/functional/s/stop_iteration_inside_generator.py",
      [
        "invalid_object_passed_to_next"
      ]
    ]
  ],
  "log": [
    [
      "tests/functional/s/string/string_formatting.py",
      [
        "log"
      ]
    ]
  ],
  "print_good": [
    [
      "tests/functional/s/string/string_formatting.py",
      [
        "print_good"
      ]
    ]
  ],
  "pprint_bad": [
    [
      "tests/functional/s/string/string_formatting.py",
      [
        "pprint_bad"
      ]
    ]
  ],
  "good_issue288": [
    [
      "tests/functional/s/string/string_formatting.py",
      [
        "good_issue288"
      ]
    ]
  ],
  "good_issue287": [
    [
      "tests/functional/s/string/string_formatting.py",
      [
        "good_issue287"
      ]
    ]
  ],
  "nested_issue294": [
    [
      "tests/functional/s/string/string_formatting.py",
      [
        "nested_issue294"
      ]
    ]
  ],
  "issue310": [
    [
      "tests/functional/s/string/string_formatting.py",
      [
        "issue310"
      ]
    ]
  ],
  "issue322": [
    [
      "tests/functional/s/string/string_formatting.py",
      [
        "issue322"
      ]
    ]
  ],
  "issue338": [
    [
      "tests/functional/s/string/string_formatting.py",
      [
        "issue338"
      ]
    ]
  ],
  "issue351": [
    [
      "tests/functional/s/string/string_formatting.py",
      [
        "issue351"
      ]
    ]
  ],
  "issue373": [
    [
      "tests/functional/s/string/string_formatting.py",
      [
        "issue373"
      ]
    ]
  ],
  "issue_463": [
    [
      "tests/functional/s/string/string_formatting.py",
      [
        "issue_463"
      ]
    ]
  ],
  "avoid_empty_attribute": [
    [
      "tests/functional/s/string/string_formatting.py",
      [
        "avoid_empty_attribute"
      ]
    ]
  ],
  "invalid_format_index_on_inference_ambiguity": [
    [
      "tests/functional/s/string/string_formatting.py",
      [
        "invalid_format_index_on_inference_ambiguity"
      ]
    ]
  ],
  "pprint": [
    [
      "tests/functional/s/string/string_formatting_error.py",
      [
        "pprint"
      ]
    ],
    [
      "tests/functional/s/string/string_log_formatting.py",
      [
        "pprint"
      ]
    ]
  ],
  "issue_957_good": [
    [
      "tests/functional/s/string/string_formatting_py3.py",
      [
        "issue_957_good"
      ]
    ]
  ],
  "issue_957_bad1": [
    [
      "tests/functional/s/string/string_formatting_py3.py",
      [
        "issue_957_bad1"
      ]
    ]
  ],
  "issue_957_bad2": [
    [
      "tests/functional/s/string/string_formatting_py3.py",
      [
        "issue_957_bad2"
      ]
    ]
  ],
  "issue_957_uninferable": [
    [
      "tests/functional/s/string/string_formatting_py3.py",
      [
        "issue_957_uninferable"
      ]
    ]
  ],
  "hop": [
    [
      "tests/functional/s/super/super_checks.py",
      [
        "Aaaa",
        "hop"
      ]
    ],
    [
      "tests/functional/s/super/super_checks.py",
      [
        "NewAaaa",
        "hop"
      ]
    ]
  ],
  "method_accepting_cls": [
    [
      "tests/functional/s/super/super_with_arguments.py",
      [
        "method_accepting_cls"
      ]
    ]
  ],
  "meth1": [
    [
      "tests/functional/t/too/too_few_public_methods.py",
      [
        "Aaaa",
        "meth1"
      ]
    ],
    [
      "tests/functional/t/too/too_few_public_methods.py",
      [
        "Klass",
        "meth1"
      ]
    ],
    [
      "tests/functional/t/too/too_many_public_methods.py",
      [
        "Aaaa",
        "meth1"
      ]
    ],
    [
      "tests/functional/t/too/too_many_public_methods.py",
      [
        "BBB",
        "meth1"
      ]
    ],
    [
      "tests/regrtest_data/func_block_disable_msg.py",
      [
        "Foo",
        "meth1"
      ]
    ]
  ],
  "_dontcount": [
    [
      "tests/functional/t/too/too_few_public_methods.py",
      [
        "Aaaa",
        "_dontcount"
      ]
    ],
    [
      "tests/functional/t/too/too_many_public_methods.py",
      [
        "Aaaa",
        "_dontcount"
      ]
    ]
  ],
  "meth2": [
    [
      "tests/functional/t/too/too_few_public_methods.py",
      [
        "Klass",
        "meth2"
      ]
    ],
    [
      "tests/functional/t/too/too_many_public_methods.py",
      [
        "Aaaa",
        "meth2"
      ]
    ],
    [
      "tests/functional/t/too/too_many_public_methods.py",
      [
        "BBB",
        "meth2"
      ]
    ],
    [
      "tests/regrtest_data/func_block_disable_msg.py",
      [
        "Foo",
        "meth2"
      ]
    ]
  ],
  "to_array": [
    [
      "tests/functional/t/too/too_few_public_methods_37.py",
      [
        "Point",
        "to_array"
      ]
    ]
  ],
  "__setitem__": [
    [
      "tests/functional/t/too/too_many_ancestors.py",
      [
        "ItemSequence",
        "__setitem__"
      ]
    ],
    [
      "tests/functional/u/unsupported/unsupported_assignment_operation.py",
      [
        "Subscriptable",
        "__setitem__"
      ]
    ],
    [
      "tests/functional/u/unsupported/unsupported_assignment_operation.py",
      [
        "MetaSubscriptable",
        "__setitem__"
      ]
    ]
  ],
  "__delitem__": [
    [
      "tests/functional/t/too/too_many_ancestors.py",
      [
        "ItemSequence",
        "__delitem__"
      ]
    ],
    [
      "tests/functional/u/unsupported/unsupported_delete_operation.py",
      [
        "Subscriptable",
        "__delitem__"
      ]
    ],
    [
      "tests/functional/u/unsupported/unsupported_delete_operation.py",
      [
        "MetaSubscriptable",
        "__delitem__"
      ]
    ]
  ],
  "stupid_function": [
    [
      "tests/functional/t/too/too_many_arguments.py",
      [
        "stupid_function"
      ]
    ],
    [
      "tests/functional/t/too/too_many_return_statements.py",
      [
        "stupid_function"
      ]
    ],
    [
      "tests/functional/t/too/too_many_statements.py",
      [
        "stupid_function"
      ]
    ]
  ],
  "mymethod1": [
    [
      "tests/functional/t/too/too_many_arguments.py",
      [
        "MyClass",
        "mymethod1"
      ]
    ]
  ],
  "mymethod2": [
    [
      "tests/functional/t/too/too_many_arguments.py",
      [
        "MyClass",
        "mymethod2"
      ]
    ]
  ],
  "root_function": [
    [
      "tests/functional/t/too/too_many_arguments.py",
      [
        "root_function"
      ]
    ]
  ],
  "func_call": [
    [
      "tests/functional/t/too/too_many_arguments.py",
      [
        "func_call"
      ]
    ]
  ],
  "method_2": [
    [
      "tests/functional/t/too/too_many_arguments_overload.py",
      [
        "ClassA",
        "method_2"
      ]
    ],
    [
      "tests/functional/t/too/too_many_arguments_overload.py",
      [
        "ClassB",
        "method_2"
      ]
    ],
    [
      "tests/functional/t/typing_use.py",
      [
        "Cls",
        "method_2"
      ]
    ]
  ],
  "wrong": [
    [
      "tests/functional/t/too/too_many_branches.py",
      [
        "wrong"
      ]
    ]
  ],
  "nested_1": [
    [
      "tests/functional/t/too/too_many_branches.py",
      [
        "good",
        "nested_1"
      ]
    ]
  ],
  "too_many_locals_function": [
    [
      "tests/functional/t/too/too_many_locals.py",
      [
        "too_many_locals_function"
      ]
    ]
  ],
  "too_many_arguments_function": [
    [
      "tests/functional/t/too/too_many_locals.py",
      [
        "too_many_arguments_function"
      ]
    ]
  ],
  "ignored_arguments_function": [
    [
      "tests/functional/t/too/too_many_locals.py",
      [
        "ignored_arguments_function"
      ]
    ]
  ],
  "nested_func": [
    [
      "tests/functional/t/too/too_many_nested_blocks.py",
      [
        "my_function",
        "nested_func"
      ]
    ]
  ],
  "more_complex_function": [
    [
      "tests/functional/t/too/too_many_nested_blocks.py",
      [
        "more_complex_function"
      ]
    ]
  ],
  "elif_function": [
    [
      "tests/functional/t/too/too_many_nested_blocks.py",
      [
        "elif_function"
      ]
    ]
  ],
  "else_if_function": [
    [
      "tests/functional/t/too/too_many_nested_blocks.py",
      [
        "else_if_function"
      ]
    ]
  ],
  "meth4": [
    [
      "tests/functional/t/too/too_many_public_methods.py",
      [
        "Aaaa",
        "meth4"
      ]
    ],
    [
      "tests/regrtest_data/func_block_disable_msg.py",
      [
        "Foo",
        "meth4"
      ]
    ]
  ],
  "meth5": [
    [
      "tests/functional/t/too/too_many_public_methods.py",
      [
        "Aaaa",
        "meth5"
      ]
    ],
    [
      "tests/regrtest_data/func_block_disable_msg.py",
      [
        "Foo",
        "meth5"
      ]
    ]
  ],
  "meth6": [
    [
      "tests/functional/t/too/too_many_public_methods.py",
      [
        "Aaaa",
        "meth6"
      ]
    ],
    [
      "tests/regrtest_data/func_block_disable_msg.py",
      [
        "Foo",
        "meth6"
      ]
    ]
  ],
  "meth7": [
    [
      "tests/functional/t/too/too_many_public_methods.py",
      [
        "Aaaa",
        "meth7"
      ]
    ],
    [
      "tests/regrtest_data/func_block_disable_msg.py",
      [
        "Foo",
        "meth7"
      ]
    ]
  ],
  "meth8": [
    [
      "tests/functional/t/too/too_many_public_methods.py",
      [
        "Aaaa",
        "meth8"
      ]
    ],
    [
      "tests/regrtest_data/func_block_disable_msg.py",
      [
        "Foo",
        "meth8"
      ]
    ]
  ],
  "meth9": [
    [
      "tests/functional/t/too/too_many_public_methods.py",
      [
        "Aaaa",
        "meth9"
      ]
    ],
    [
      "tests/regrtest_data/func_block_disable_msg.py",
      [
        "Foo",
        "meth9"
      ]
    ]
  ],
  "meth10": [
    [
      "tests/functional/t/too/too_many_public_methods.py",
      [
        "Aaaa",
        "meth10"
      ]
    ],
    [
      "tests/regrtest_data/func_block_disable_msg.py",
      [
        "Foo",
        "meth10"
      ]
    ]
  ],
  "meth11": [
    [
      "tests/functional/t/too/too_many_public_methods.py",
      [
        "Aaaa",
        "meth11"
      ]
    ]
  ],
  "meth12": [
    [
      "tests/functional/t/too/too_many_public_methods.py",
      [
        "Aaaa",
        "meth12"
      ]
    ]
  ],
  "meth13": [
    [
      "tests/functional/t/too/too_many_public_methods.py",
      [
        "Aaaa",
        "meth13"
      ]
    ]
  ],
  "meth14": [
    [
      "tests/functional/t/too/too_many_public_methods.py",
      [
        "Aaaa",
        "meth14"
      ]
    ]
  ],
  "meth15": [
    [
      "tests/functional/t/too/too_many_public_methods.py",
      [
        "Aaaa",
        "meth15"
      ]
    ]
  ],
  "meth16": [
    [
      "tests/functional/t/too/too_many_public_methods.py",
      [
        "Aaaa",
        "meth16"
      ]
    ]
  ],
  "meth17": [
    [
      "tests/functional/t/too/too_many_public_methods.py",
      [
        "Aaaa",
        "meth17"
      ]
    ]
  ],
  "meth18": [
    [
      "tests/functional/t/too/too_many_public_methods.py",
      [
        "Aaaa",
        "meth18"
      ]
    ]
  ],
  "meth19": [
    [
      "tests/functional/t/too/too_many_public_methods.py",
      [
        "Aaaa",
        "meth19"
      ]
    ]
  ],
  "meth20": [
    [
      "tests/functional/t/too/too_many_public_methods.py",
      [
        "Aaaa",
        "meth20"
      ]
    ]
  ],
  "meth21": [
    [
      "tests/functional/t/too/too_many_public_methods.py",
      [
        "Aaaa",
        "meth21"
      ]
    ]
  ],
  "many_yield": [
    [
      "tests/functional/t/too/too_many_return_statements.py",
      [
        "many_yield"
      ]
    ]
  ],
  "an_inline_function": [
    [
      "tests/functional/t/too/too_many_statements.py",
      [
        "long_function_with_inline_def",
        "an_inline_function"
      ]
    ]
  ],
  "long_function_with_inline_def": [
    [
      "tests/functional/t/too/too_many_statements.py",
      [
        "long_function_with_inline_def"
      ]
    ]
  ],
  "exmaple_function": [
    [
      "tests/functional/t/too/too_many_statements.py",
      [
        "exmaple_function"
      ]
    ]
  ],
  "some_other_func": [
    [
      "tests/functional/t/trailing_comma_tuple.py",
      [
        "some_other_func"
      ]
    ]
  ],
  "ccc": [
    [
      "tests/functional/t/try_except_raise.py",
      [
        "ccc"
      ]
    ]
  ],
  "ddd": [
    [
      "tests/functional/t/try_except_raise.py",
      [
        "ddd"
      ]
    ]
  ],
  "double_with_docstring": [
    [
      "tests/functional/t/typing_use.py",
      [
        "double_with_docstring"
      ]
    ]
  ],
  "double_with_docstring_1": [
    [
      "tests/functional/t/typing_use.py",
      [
        "double_with_docstring_1"
      ]
    ]
  ],
  "double_with_docstring_2": [
    [
      "tests/functional/t/typing_use.py",
      [
        "double_with_docstring_2"
      ]
    ]
  ],
  "double_with_docstring_3": [
    [
      "tests/functional/t/typing_use.py",
      [
        "double_with_docstring_3"
      ]
    ]
  ],
  "double_with_ellipsis": [
    [
      "tests/functional/t/typing_use.py",
      [
        "double_with_ellipsis"
      ]
    ]
  ],
  "double_with_ellipsis_5": [
    [
      "tests/functional/t/typing_use.py",
      [
        "double_with_ellipsis_5"
      ]
    ]
  ],
  "double_with_ellipsis_6": [
    [
      "tests/functional/t/typing_use.py",
      [
        "double_with_ellipsis_6"
      ]
    ]
  ],
  "double_with_pass": [
    [
      "tests/functional/t/typing_use.py",
      [
        "double_with_pass"
      ]
    ]
  ],
  "double_with_pass_8": [
    [
      "tests/functional/t/typing_use.py",
      [
        "double_with_pass_8"
      ]
    ]
  ],
  "double_with_pass_9": [
    [
      "tests/functional/t/typing_use.py",
      [
        "double_with_pass_9"
      ]
    ]
  ],
  "do_stuff1": [
    [
      "tests/functional/u/unbalanced_tuple_unpacking.py",
      [
        "do_stuff1"
      ]
    ]
  ],
  "do_stuff2": [
    [
      "tests/functional/u/unbalanced_tuple_unpacking.py",
      [
        "do_stuff2"
      ]
    ]
  ],
  "do_stuff3": [
    [
      "tests/functional/u/unbalanced_tuple_unpacking.py",
      [
        "do_stuff3"
      ]
    ]
  ],
  "do_stuff4": [
    [
      "tests/functional/u/unbalanced_tuple_unpacking.py",
      [
        "do_stuff4"
      ]
    ]
  ],
  "do_stuff5": [
    [
      "tests/functional/u/unbalanced_tuple_unpacking.py",
      [
        "do_stuff5"
      ]
    ]
  ],
  "do_stuff6": [
    [
      "tests/functional/u/unbalanced_tuple_unpacking.py",
      [
        "do_stuff6"
      ]
    ]
  ],
  "temp": [
    [
      "tests/functional/u/unbalanced_tuple_unpacking.py",
      [
        "temp"
      ]
    ]
  ],
  "do_stuff7": [
    [
      "tests/functional/u/unbalanced_tuple_unpacking.py",
      [
        "do_stuff7"
      ]
    ]
  ],
  "temp2": [
    [
      "tests/functional/u/unbalanced_tuple_unpacking.py",
      [
        "temp2"
      ]
    ]
  ],
  "do_stuff8": [
    [
      "tests/functional/u/unbalanced_tuple_unpacking.py",
      [
        "do_stuff8"
      ]
    ]
  ],
  "do_stuff9": [
    [
      "tests/functional/u/unbalanced_tuple_unpacking.py",
      [
        "do_stuff9"
      ]
    ]
  ],
  "issue329": [
    [
      "tests/functional/u/unbalanced_tuple_unpacking.py",
      [
        "issue329"
      ]
    ]
  ],
  "test_decimal": [
    [
      "tests/functional/u/unbalanced_tuple_unpacking.py",
      [
        "test_decimal"
      ]
    ]
  ],
  "test_issue_559": [
    [
      "tests/functional/u/unbalanced_tuple_unpacking.py",
      [
        "test_issue_559"
      ]
    ]
  ],
  "do_else": [
    [
      "tests/functional/u/undefined/undefined_loop_variable.py",
      [
        "do_else"
      ]
    ]
  ],
  "do_stuff_with_a_list": [
    [
      "tests/functional/u/undefined/undefined_loop_variable.py",
      [
        "do_stuff_with_a_list"
      ]
    ]
  ],
  "do_stuff_with_a_set": [
    [
      "tests/functional/u/undefined/undefined_loop_variable.py",
      [
        "do_stuff_with_a_set"
      ]
    ]
  ],
  "do_stuff_with_a_dict": [
    [
      "tests/functional/u/undefined/undefined_loop_variable.py",
      [
        "do_stuff_with_a_dict"
      ]
    ]
  ],
  "do_stuff_with_a_tuple": [
    [
      "tests/functional/u/undefined/undefined_loop_variable.py",
      [
        "do_stuff_with_a_tuple"
      ]
    ]
  ],
  "do_stuff_with_a_range": [
    [
      "tests/functional/u/undefined/undefined_loop_variable.py",
      [
        "do_stuff_with_a_range"
      ]
    ]
  ],
  "do_stuff_with_redefined_range": [
    [
      "tests/functional/u/undefined/undefined_loop_variable.py",
      [
        "do_stuff_with_redefined_range"
      ]
    ]
  ],
  "in_method": [
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "in_method"
      ]
    ]
  ],
  "bad_default": [
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "bad_default"
      ]
    ]
  ],
  "if_branch_test": [
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "if_branch_test"
      ]
    ]
  ],
  "test_arguments": [
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "test_arguments"
      ]
    ]
  ],
  "test_conditional_comprehension": [
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "test_conditional_comprehension"
      ]
    ]
  ],
  "nonlocal_in_ifexp": [
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "nonlocal_in_ifexp"
      ]
    ],
    [
      "tests/functional/u/use/used_before_assignment_nonlocal.py",
      [
        "nonlocal_in_ifexp"
      ]
    ]
  ],
  "func_should_fail": [
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "func_should_fail"
      ]
    ]
  ],
  "tick": [
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "tick"
      ]
    ]
  ],
  "not_using_loop_variable_accordingly": [
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "not_using_loop_variable_accordingly"
      ]
    ]
  ],
  "undefined_annotation": [
    [
      "tests/functional/u/undefined/undefined_variable.py",
      [
        "undefined_annotation"
      ]
    ]
  ],
  "test_undefined": [
    [
      "tests/functional/u/undefined/undefined_variable_py30.py",
      [
        "Undefined1",
        "InnerScope",
        "test_undefined"
      ]
    ]
  ],
  "test_good": [
    [
      "tests/functional/u/undefined/undefined_variable_py30.py",
      [
        "FalsePositive342",
        "test_good"
      ]
    ]
  ],
  "test_bad": [
    [
      "tests/functional/u/undefined/undefined_variable_py30.py",
      [
        "FalsePositive342",
        "test_bad"
      ]
    ]
  ],
  "test_bad1": [
    [
      "tests/functional/u/undefined/undefined_variable_py30.py",
      [
        "FalsePositive342",
        "test_bad1"
      ]
    ]
  ],
  "test_bad2": [
    [
      "tests/functional/u/undefined/undefined_variable_py30.py",
      [
        "FalsePositive342",
        "test_bad2"
      ]
    ]
  ],
  "used_before_assignment": [
    [
      "tests/functional/u/undefined/undefined_variable_py30.py",
      [
        "used_before_assignment"
      ]
    ]
  ],
  "__setattr__": [
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "Invalid",
        "__setattr__"
      ]
    ]
  ],
  "__round__": [
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "Invalid",
        "__round__"
      ]
    ],
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "Valid",
        "__round__"
      ]
    ]
  ],
  "__deepcopy__": [
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "Invalid",
        "__deepcopy__"
      ]
    ],
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "Valid",
        "__deepcopy__"
      ]
    ]
  ],
  "__anext__": [
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "Async",
        "__anext__"
      ]
    ]
  ],
  "__await__": [
    [
      "tests/functional/u/unexpected_special_method_signature.py",
      [
        "Async",
        "__await__"
      ]
    ]
  ],
  "simple_positives": [
    [
      "tests/functional/u/unidiomatic_typecheck.py",
      [
        "simple_positives"
      ]
    ]
  ],
  "simple_inference_positives": [
    [
      "tests/functional/u/unidiomatic_typecheck.py",
      [
        "simple_inference_positives"
      ]
    ]
  ],
  "type_creation_negatives": [
    [
      "tests/functional/u/unidiomatic_typecheck.py",
      [
        "type_creation_negatives"
      ]
    ]
  ],
  "invalid_type_call_negatives": [
    [
      "tests/functional/u/unidiomatic_typecheck.py",
      [
        "invalid_type_call_negatives"
      ]
    ]
  ],
  "local_var_shadowing_inference_negatives": [
    [
      "tests/functional/u/unidiomatic_typecheck.py",
      [
        "local_var_shadowing_inference_negatives"
      ]
    ]
  ],
  "parameter_shadowing_inference_negatives": [
    [
      "tests/functional/u/unidiomatic_typecheck.py",
      [
        "parameter_shadowing_inference_negatives"
      ]
    ]
  ],
  "deliberate_subclass_check_negatives": [
    [
      "tests/functional/u/unidiomatic_typecheck.py",
      [
        "deliberate_subclass_check_negatives"
      ]
    ]
  ],
  "type_of_literals_positives": [
    [
      "tests/functional/u/unidiomatic_typecheck.py",
      [
        "type_of_literals_positives"
      ]
    ]
  ],
  "unneeded_not": [
    [
      "tests/functional/u/unnecessary/unnecessary_not.py",
      [
        "unneeded_not"
      ]
    ]
  ],
  "tolerated_statements": [
    [
      "tests/functional/u/unnecessary/unnecessary_not.py",
      [
        "tolerated_statements"
      ]
    ]
  ],
  "__ne__": [
    [
      "tests/functional/u/unnecessary/unnecessary_not.py",
      [
        "Klass",
        "__ne__"
      ]
    ]
  ],
  "docstring_only": [
    [
      "tests/functional/u/unnecessary/unnecessary_pass.py",
      [
        "docstring_only"
      ]
    ]
  ],
  "pass_only": [
    [
      "tests/functional/u/unnecessary/unnecessary_pass.py",
      [
        "pass_only"
      ]
    ]
  ],
  "docstring_and_pass": [
    [
      "tests/functional/u/unnecessary/unnecessary_pass.py",
      [
        "docstring_and_pass"
      ]
    ]
  ],
  "unpack": [
    [
      "tests/functional/u/unpacking.py",
      [
        "unpack"
      ]
    ]
  ],
  "nonseq": [
    [
      "tests/functional/u/unpacking.py",
      [
        "nonseq"
      ]
    ]
  ],
  "func_variadic_args": [
    [
      "tests/functional/u/unpacking_generalizations.py",
      [
        "func_variadic_args"
      ]
    ]
  ],
  "func_variadic_positional_args": [
    [
      "tests/functional/u/unpacking_generalizations.py",
      [
        "func_variadic_positional_args"
      ]
    ]
  ],
  "func_positional_args": [
    [
      "tests/functional/u/unpacking_generalizations.py",
      [
        "func_positional_args"
      ]
    ]
  ],
  "good_unpacking": [
    [
      "tests/functional/u/unpacking_non_sequence.py",
      [
        "good_unpacking"
      ]
    ]
  ],
  "good_unpacking2": [
    [
      "tests/functional/u/unpacking_non_sequence.py",
      [
        "good_unpacking2"
      ]
    ]
  ],
  "setup_pair": [
    [
      "tests/functional/u/unpacking_non_sequence.py",
      [
        "AbstrClass",
        "setup_pair"
      ]
    ]
  ],
  "flow_control_false_positive": [
    [
      "tests/functional/u/unpacking_non_sequence.py",
      [
        "flow_control_false_positive"
      ]
    ]
  ],
  "flow_control_unpacking": [
    [
      "tests/functional/u/unpacking_non_sequence.py",
      [
        "flow_control_unpacking"
      ]
    ]
  ],
  "test_unsubscriptable": [
    [
      "tests/functional/u/unsubscriptable_value.py",
      [
        "AbstractClass",
        "test_unsubscriptable"
      ]
    ],
    [
      "tests/functional/u/unsubscriptable_value.py",
      [
        "ClassMixin",
        "test_unsubscriptable"
      ]
    ]
  ],
  "return_an_int": [
    [
      "tests/functional/u/unsubscriptable_value.py",
      [
        "return_an_int"
      ]
    ]
  ],
  "test_one": [
    [
      "tests/functional/u/unsubscriptable_value.py",
      [
        "test_one"
      ]
    ]
  ],
  "__add__": [
    [
      "tests/functional/u/unsupported/unsupported_binary_operation.py",
      [
        "A1",
        "__add__"
      ]
    ],
    [
      "tests/functional/u/unsupported/unsupported_binary_operation.py",
      [
        "A2",
        "__add__"
      ]
    ],
    [
      "tests/functional/u/unsupported/unsupported_binary_operation.py",
      [
        "Child",
        "__add__"
      ]
    ],
    [
      "tests/functional/u/unsupported/unsupported_binary_operation.py",
      [
        "A3",
        "__add__"
      ]
    ]
  ],
  "__radd__": [
    [
      "tests/functional/u/unsupported/unsupported_binary_operation.py",
      [
        "B2",
        "__radd__"
      ]
    ],
    [
      "tests/functional/u/unsupported/unsupported_binary_operation.py",
      [
        "B3",
        "__radd__"
      ]
    ]
  ],
  "test_unused": [
    [
      "tests/functional/u/unused/unused_argument.py",
      [
        "test_unused"
      ]
    ]
  ],
  "test_prefixed_with_ignored": [
    [
      "tests/functional/u/unused/unused_argument.py",
      [
        "test_prefixed_with_ignored"
      ]
    ]
  ],
  "test_prefixed_with_unused": [
    [
      "tests/functional/u/unused/unused_argument.py",
      [
        "test_prefixed_with_unused"
      ]
    ]
  ],
  "inherited": [
    [
      "tests/functional/u/unused/unused_argument.py",
      [
        "Base",
        "inherited"
      ]
    ],
    [
      "tests/functional/u/unused/unused_argument.py",
      [
        "Sub",
        "inherited"
      ]
    ],
    [
      "tests/functional/u/unused/unused_argument.py",
      [
        "Sub2",
        "inherited"
      ]
    ]
  ],
  "newmethod": [
    [
      "tests/functional/u/unused/unused_argument.py",
      [
        "Sub",
        "newmethod"
      ]
    ]
  ],
  "metadata_from_dict": [
    [
      "tests/functional/u/unused/unused_argument.py",
      [
        "metadata_from_dict"
      ]
    ]
  ],
  "selected": [
    [
      "tests/functional/u/unused/unused_argument.py",
      [
        "AAAA",
        "selected"
      ]
    ]
  ],
  "using_inner_function": [
    [
      "tests/functional/u/unused/unused_argument.py",
      [
        "AAAA",
        "using_inner_function"
      ]
    ]
  ],
  "only_raises": [
    [
      "tests/functional/u/unused/unused_argument_py3.py",
      [
        "only_raises"
      ]
    ]
  ],
  "get_ordered_dict": [
    [
      "tests/functional/u/unused/unused_import.py",
      [
        "get_ordered_dict"
      ]
    ]
  ],
  "get_itertools_obj": [
    [
      "tests/functional/u/unused/unused_import.py",
      [
        "get_itertools_obj"
      ]
    ]
  ],
  "use_html_parser": [
    [
      "tests/functional/u/unused/unused_import.py",
      [
        "use_html_parser"
      ]
    ]
  ],
  "sys": [
    [
      "tests/functional/u/unused/unused_import.py",
      [
        "NonRegr",
        "sys"
      ]
    ]
  ],
  "dummy": [
    [
      "tests/functional/u/unused/unused_import.py",
      [
        "NonRegr",
        "dummy"
      ]
    ]
  ],
  "blop": [
    [
      "tests/functional/u/unused/unused_import.py",
      [
        "NonRegr",
        "blop"
      ]
    ]
  ],
  "__test": [
    [
      "tests/functional/u/unused/unused_private_member.py",
      [
        "AnotherClass",
        "__test"
      ]
    ],
    [
      "tests/functional/u/unused/unused_private_member.py",
      [
        "HasUnusedInClass",
        "__test"
      ]
    ]
  ],
  "__private_class_method_unused": [
    [
      "tests/functional/u/unused/unused_private_member.py",
      [
        "HasUnusedInClass",
        "__private_class_method_unused"
      ]
    ]
  ],
  "__private_class_method_used": [
    [
      "tests/functional/u/unused/unused_private_member.py",
      [
        "HasUnusedInClass",
        "__private_class_method_used"
      ]
    ]
  ],
  "__private_static_method_unused": [
    [
      "tests/functional/u/unused/unused_private_member.py",
      [
        "HasUnusedInClass",
        "__private_static_method_unused"
      ]
    ]
  ],
  "__private_static_method_used": [
    [
      "tests/functional/u/unused/unused_private_member.py",
      [
        "HasUnusedInClass",
        "__private_static_method_used"
      ]
    ]
  ],
  "__my_print": [
    [
      "tests/functional/u/unused/unused_private_member.py",
      [
        "HasUnusedInClass",
        "__my_print"
      ]
    ]
  ],
  "hey": [
    [
      "tests/functional/u/unused/unused_private_member.py",
      [
        "HasUnusedInClass",
        "hey"
      ]
    ]
  ],
  "__test_fn_as_var": [
    [
      "tests/functional/u/unused/unused_private_member.py",
      [
        "HasUnusedInClass",
        "__test_fn_as_var"
      ]
    ]
  ],
  "assign_fn_to_var": [
    [
      "tests/functional/u/unused/unused_private_member.py",
      [
        "HasUnusedInClass",
        "assign_fn_to_var"
      ]
    ]
  ],
  "__test_recursive": [
    [
      "tests/functional/u/unused/unused_private_member.py",
      [
        "HasUnusedInClass",
        "__test_recursive"
      ]
    ]
  ],
  "set_class_var": [
    [
      "tests/functional/u/unused/unused_private_member.py",
      [
        "MyCls",
        "set_class_var"
      ]
    ]
  ],
  "get_class_var": [
    [
      "tests/functional/u/unused/unused_private_member.py",
      [
        "MyCls",
        "get_class_var"
      ]
    ]
  ],
  "func_test_type_comment": [
    [
      "tests/functional/u/unused/unused_typing_imports.py",
      [
        "func_test_type_comment"
      ]
    ]
  ],
  "typing_fully_qualified": [
    [
      "tests/functional/u/unused/unused_typing_imports.py",
      [
        "typing_fully_qualified"
      ]
    ]
  ],
  "magic": [
    [
      "tests/functional/u/unused/unused_typing_imports.py",
      [
        "magic"
      ]
    ]
  ],
  "unused_assignment_import": [
    [
      "tests/functional/u/unused/unused_typing_imports.py",
      [
        "unused_assignment_import"
      ]
    ]
  ],
  "unused_reassigned_import": [
    [
      "tests/functional/u/unused/unused_typing_imports.py",
      [
        "unused_reassigned_import"
      ]
    ]
  ],
  "test_regression_737": [
    [
      "tests/functional/u/unused/unused_variable.py",
      [
        "test_regression_737"
      ]
    ]
  ],
  "test_regression_923": [
    [
      "tests/functional/u/unused/unused_variable.py",
      [
        "test_regression_923"
      ]
    ]
  ],
  "test_unused_with_prepended_underscore": [
    [
      "tests/functional/u/unused/unused_variable.py",
      [
        "test_unused_with_prepended_underscore"
      ]
    ]
  ],
  "test_local_field_prefixed_with_unused_or_ignored": [
    [
      "tests/functional/u/unused/unused_variable.py",
      [
        "test_local_field_prefixed_with_unused_or_ignored"
      ]
    ]
  ],
  "best": [
    [
      "tests/functional/u/unused/unused_variable.py",
      [
        "HasUnusedDunderClass",
        "best"
      ]
    ]
  ],
  "locals_example_defined_before": [
    [
      "tests/functional/u/unused/unused_variable.py",
      [
        "locals_example_defined_before"
      ]
    ]
  ],
  "locals_example_defined_after": [
    [
      "tests/functional/u/unused/unused_variable.py",
      [
        "locals_example_defined_after"
      ]
    ]
  ],
  "locals_does_not_account_for_subscopes": [
    [
      "tests/functional/u/unused/unused_variable.py",
      [
        "locals_does_not_account_for_subscopes"
      ]
    ]
  ],
  "unused_import_from": [
    [
      "tests/functional/u/unused/unused_variable.py",
      [
        "unused_import_from"
      ]
    ]
  ],
  "unused_import_in_function": [
    [
      "tests/functional/u/unused/unused_variable.py",
      [
        "unused_import_in_function"
      ]
    ]
  ],
  "hello": [
    [
      "tests/functional/u/unused/unused_variable.py",
      [
        "hello"
      ]
    ]
  ],
  "test_global": [
    [
      "tests/functional/u/unused/unused_variable.py",
      [
        "test_global"
      ]
    ]
  ],
  "toto": [
    [
      "tests/functional/u/use/use_symbolic_message_instead.py",
      [
        "toto"
      ]
    ]
  ],
  "test_enabled_by_id_msg": [
    [
      "tests/functional/u/use/use_symbolic_message_instead.py",
      [
        "test_enabled_by_id_msg"
      ]
    ]
  ],
  "used_before_assignment_1": [
    [
      "tests/functional/u/use/used_before_assignment_issue1081.py",
      [
        "used_before_assignment_1"
      ]
    ]
  ],
  "used_before_assignment_2": [
    [
      "tests/functional/u/use/used_before_assignment_issue1081.py",
      [
        "used_before_assignment_2"
      ]
    ]
  ],
  "used_before_assignment_3": [
    [
      "tests/functional/u/use/used_before_assignment_issue1081.py",
      [
        "used_before_assignment_3"
      ]
    ]
  ],
  "not_used_before_assignment": [
    [
      "tests/functional/u/use/used_before_assignment_issue1081.py",
      [
        "not_used_before_assignment"
      ]
    ]
  ],
  "not_used_before_assignment_2": [
    [
      "tests/functional/u/use/used_before_assignment_issue1081.py",
      [
        "not_used_before_assignment_2"
      ]
    ]
  ],
  "strangeproblem": [
    [
      "tests/functional/u/use/used_before_assignment_issue853.py",
      [
        "strangeproblem"
      ]
    ]
  ],
  "test_ok": [
    [
      "tests/functional/u/use/used_before_assignment_nonlocal.py",
      [
        "test_ok"
      ]
    ]
  ],
  "test_fail": [
    [
      "tests/functional/u/use/used_before_assignment_nonlocal.py",
      [
        "test_fail"
      ]
    ]
  ],
  "test_fail2": [
    [
      "tests/functional/u/use/used_before_assignment_nonlocal.py",
      [
        "test_fail2"
      ]
    ]
  ],
  "test_fail3": [
    [
      "tests/functional/u/use/used_before_assignment_nonlocal.py",
      [
        "test_fail3"
      ]
    ]
  ],
  "test_fail4": [
    [
      "tests/functional/u/use/used_before_assignment_nonlocal.py",
      [
        "test_fail4"
      ]
    ]
  ],
  "test_fail5": [
    [
      "tests/functional/u/use/used_before_assignment_nonlocal.py",
      [
        "test_fail5"
      ]
    ]
  ],
  "undefined": [
    [
      "tests/functional/u/use/used_before_assignment_nonlocal.py",
      [
        "undefined"
      ]
    ]
  ],
  "undefined1": [
    [
      "tests/functional/u/use/used_before_assignment_nonlocal.py",
      [
        "undefined1"
      ]
    ]
  ],
  "other_test": [
    [
      "tests/functional/u/use/used_prior_global_declaration.py",
      [
        "other_test"
      ]
    ]
  ],
  "other_test_1": [
    [
      "tests/functional/u/use/used_prior_global_declaration.py",
      [
        "other_test_1"
      ]
    ]
  ],
  "other_test_2": [
    [
      "tests/functional/u/use/used_prior_global_declaration.py",
      [
        "other_test_2"
      ]
    ]
  ],
  "other_test_3": [
    [
      "tests/functional/u/use/used_prior_global_declaration.py",
      [
        "other_test_3"
      ]
    ]
  ],
  "test_comprehensions": [
    [
      "tests/functional/u/use/using_constant_test.py",
      [
        "test_comprehensions"
      ]
    ]
  ],
  "test_good_comprehension_checks": [
    [
      "tests/functional/u/use/using_constant_test.py",
      [
        "test_good_comprehension_checks"
      ]
    ]
  ],
  "test_return_for": [
    [
      "tests/functional/u/useless/useless_else_on_loop.py",
      [
        "test_return_for"
      ]
    ]
  ],
  "test_return_while": [
    [
      "tests/functional/u/useless/useless_else_on_loop.py",
      [
        "test_return_while"
      ]
    ]
  ],
  "test_return_for2": [
    [
      "tests/functional/u/useless/useless_else_on_loop.py",
      [
        "test_return_for2"
      ]
    ]
  ],
  "test_break_in_orelse_deep": [
    [
      "tests/functional/u/useless/useless_else_on_loop.py",
      [
        "test_break_in_orelse_deep"
      ]
    ]
  ],
  "test_break_in_orelse_deep2": [
    [
      "tests/functional/u/useless/useless_else_on_loop.py",
      [
        "test_break_in_orelse_deep2"
      ]
    ]
  ],
  "test_break_in_orelse_deep3": [
    [
      "tests/functional/u/useless/useless_else_on_loop.py",
      [
        "test_break_in_orelse_deep3"
      ]
    ]
  ],
  "myfunc": [
    [
      "tests/functional/u/useless/useless_return.py",
      [
        "myfunc"
      ]
    ]
  ],
  "mymethod": [
    [
      "tests/functional/u/useless/useless_return.py",
      [
        "SomeClass",
        "mymethod"
      ]
    ]
  ],
  "item_at": [
    [
      "tests/functional/u/useless/useless_return.py",
      [
        "SomeClass",
        "item_at"
      ]
    ]
  ],
  "not_a_method": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "not_a_method"
      ]
    ]
  ],
  "with_default_arg": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "SuperBase",
        "with_default_arg"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "with_default_arg"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "UselessSuper",
        "with_default_arg"
      ]
    ]
  ],
  "with_default_arg_bis": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "SuperBase",
        "with_default_arg_bis"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "with_default_arg_bis"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "UselessSuper",
        "with_default_arg_bis"
      ]
    ]
  ],
  "with_default_arg_ter": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "SuperBase",
        "with_default_arg_ter"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "Base",
        "with_default_arg_ter"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "with_default_arg_ter"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "UselessSuper",
        "with_default_arg_ter"
      ]
    ]
  ],
  "with_default_arg_quad": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "SuperBase",
        "with_default_arg_quad"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "Base",
        "with_default_arg_quad"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "with_default_arg_quad"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "UselessSuper",
        "with_default_arg_quad"
      ]
    ]
  ],
  "something": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "Base",
        "something"
      ]
    ]
  ],
  "with_default_argument": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "Base",
        "with_default_argument"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "with_default_argument"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "UselessSuper",
        "with_default_argument"
      ]
    ]
  ],
  "with_default_argument_bis": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "Base",
        "with_default_argument_bis"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "with_default_argument_bis"
      ]
    ]
  ],
  "without_default_argument": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "Base",
        "without_default_argument"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "without_default_argument"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "UselessSuper",
        "without_default_argument"
      ]
    ]
  ],
  "with_default_argument_none": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "Base",
        "with_default_argument_none"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "with_default_argument_none"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "UselessSuper",
        "with_default_argument_none"
      ]
    ]
  ],
  "without_default_argument2": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "Base",
        "without_default_argument2"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "without_default_argument2"
      ]
    ]
  ],
  "with_default_argument_int": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "Base",
        "with_default_argument_int"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "with_default_argument_int"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "UselessSuper",
        "with_default_argument_int"
      ]
    ]
  ],
  "with_default_argument_tuple": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "Base",
        "with_default_argument_tuple"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "with_default_argument_tuple"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "UselessSuper",
        "with_default_argument_tuple"
      ]
    ]
  ],
  "with_default_argument_dict": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "Base",
        "with_default_argument_dict"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "with_default_argument_dict"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "UselessSuper",
        "with_default_argument_dict"
      ]
    ]
  ],
  "multiple_statements": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "multiple_statements"
      ]
    ]
  ],
  "not_a_call": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "not_a_call"
      ]
    ]
  ],
  "not_super_call": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "not_super_call"
      ]
    ]
  ],
  "not_super_attribute_access": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "not_super_attribute_access"
      ]
    ]
  ],
  "invalid_super_call": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "invalid_super_call"
      ]
    ]
  ],
  "other_invalid_super_call": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "other_invalid_super_call"
      ]
    ]
  ],
  "different_name": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "different_name"
      ]
    ]
  ],
  "different_super_mro_pointer": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "different_super_mro_pointer"
      ]
    ]
  ],
  "different_super_type": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "different_super_type"
      ]
    ]
  ],
  "other_different_super_type": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "other_different_super_type"
      ]
    ]
  ],
  "not_passing_param": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "not_passing_param"
      ]
    ]
  ],
  "modifying_param": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "modifying_param"
      ]
    ]
  ],
  "transforming_param": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "transforming_param"
      ]
    ]
  ],
  "modifying_variadic": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "modifying_variadic"
      ]
    ]
  ],
  "not_passing_keyword_variadics": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "not_passing_keyword_variadics"
      ]
    ]
  ],
  "not_passing_default": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "not_passing_default"
      ]
    ]
  ],
  "passing_only_a_handful": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "passing_only_a_handful"
      ]
    ]
  ],
  "not_the_same_order": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "not_the_same_order"
      ]
    ]
  ],
  "no_kwargs_in_signature": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "no_kwargs_in_signature"
      ]
    ]
  ],
  "no_args_in_signature": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "no_args_in_signature"
      ]
    ]
  ],
  "variadics_with_multiple_keyword_arguments": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "variadics_with_multiple_keyword_arguments"
      ]
    ]
  ],
  "extraneous_keyword_params": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "extraneous_keyword_params"
      ]
    ]
  ],
  "extraneous_positional_args": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuper",
        "extraneous_positional_args"
      ]
    ]
  ],
  "equivalent_params": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "UselessSuper",
        "equivalent_params"
      ]
    ]
  ],
  "equivalent_params_1": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "UselessSuper",
        "equivalent_params_1"
      ]
    ]
  ],
  "equivalent_params_2": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "UselessSuper",
        "equivalent_params_2"
      ]
    ]
  ],
  "equivalent_params_3": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "UselessSuper",
        "equivalent_params_3"
      ]
    ]
  ],
  "equivalent_params_4": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "UselessSuper",
        "equivalent_params_4"
      ]
    ]
  ],
  "equivalent_params_5": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "UselessSuper",
        "equivalent_params_5"
      ]
    ]
  ],
  "equivalent_params_6": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "UselessSuper",
        "equivalent_params_6"
      ]
    ]
  ],
  "trigger_something": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "trigger_something"
      ]
    ]
  ],
  "method_decorated": [
    [
      "tests/functional/u/useless/useless_super_delegation.py",
      [
        "NotUselessSuperDecorators",
        "method_decorated"
      ]
    ]
  ],
  "not_passing_keyword_only": [
    [
      "tests/functional/u/useless/useless_super_delegation_py3.py",
      [
        "NotUselessSuper",
        "not_passing_keyword_only"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation_py3.py",
      [
        "AlsoNotUselessSuper",
        "not_passing_keyword_only"
      ]
    ]
  ],
  "passing_keyword_only_with_modifications": [
    [
      "tests/functional/u/useless/useless_super_delegation_py3.py",
      [
        "NotUselessSuper",
        "passing_keyword_only_with_modifications"
      ]
    ]
  ],
  "useless": [
    [
      "tests/functional/u/useless/useless_super_delegation_py3.py",
      [
        "UselessSuper",
        "useless"
      ]
    ],
    [
      "tests/functional/u/useless/useless_super_delegation_py35.py",
      [
        "UselessSuper",
        "useless"
      ]
    ]
  ],
  "not_passing_all_params": [
    [
      "tests/functional/u/useless/useless_super_delegation_py35.py",
      [
        "NotUselessSuper",
        "not_passing_all_params"
      ]
    ]
  ],
  "smart_function": [
    [
      "tests/functional/u/useless/useless_type_doc.py",
      [
        "smart_function"
      ]
    ]
  ],
  "function_useless_doc": [
    [
      "tests/functional/u/useless/useless_type_doc.py",
      [
        "function_useless_doc"
      ]
    ]
  ],
  "smarter_test": [
    [
      "tests/functional/u/useless/useless_type_doc.py",
      [
        "smarter_test"
      ]
    ]
  ],
  "test_two": [
    [
      "tests/functional/u/useless/useless_type_doc.py",
      [
        "test_two"
      ]
    ]
  ],
  "generator_fp1": [
    [
      "tests/functional/y/yield_assign_py25.py",
      [
        "generator_fp1"
      ]
    ]
  ],
  "generator_fp2": [
    [
      "tests/functional/y/yield_assign_py25.py",
      [
        "generator_fp2"
      ]
    ]
  ],
  "to_ten": [
    [
      "tests/functional/y/yield_from_iterable_py33.py",
      [
        "to_ten"
      ]
    ]
  ],
  "somegen": [
    [
      "tests/functional/y/yield_return_mix.py",
      [
        "somegen"
      ]
    ],
    [
      "tests/input/func_return_yield_mix_py_33.py",
      [
        "somegen"
      ]
    ]
  ],
  "suppressed": [
    [
      "tests/input/func_i0020.py",
      [
        "suppressed"
      ]
    ]
  ],
  "moregen": [
    [
      "tests/input/func_return_yield_mix_py_33.py",
      [
        "moregen"
      ]
    ]
  ],
  "adipiscing": [
    [
      "tests/input/similar_lines_a.py",
      [
        "adipiscing"
      ]
    ]
  ],
  "similar_function_3_lines": [
    [
      "tests/input/similar_lines_a.py",
      [
        "Amet",
        "similar_function_3_lines"
      ]
    ],
    [
      "tests/input/similar_lines_b.py",
      [
        "Commodo",
        "similar_function_3_lines"
      ]
    ]
  ],
  "lorem": [
    [
      "tests/input/similar_lines_a.py",
      [
        "Amet",
        "lorem"
      ]
    ]
  ],
  "similar_function_5_lines": [
    [
      "tests/input/similar_lines_a.py",
      [
        "Amet",
        "similar_function_5_lines"
      ]
    ],
    [
      "tests/input/similar_lines_b.py",
      [
        "Nulla",
        "similar_function_5_lines"
      ]
    ]
  ],
  "similar_function_3_lines_3": [
    [
      "tests/input/similar_lines_a.py",
      [
        "Amet",
        "similar_function_3_lines_3"
      ]
    ]
  ],
  "pulvinar": [
    [
      "tests/input/similar_lines_b.py",
      [
        "Nulla",
        "pulvinar"
      ]
    ]
  ],
  "tortor": [
    [
      "tests/input/similar_lines_b.py",
      [
        "tortor"
      ]
    ]
  ],
  "test__is_in_ignore_list_re_match": [
    [
      "tests/lint/unittest_expand_modules.py",
      [
        "test__is_in_ignore_list_re_match"
      ]
    ]
  ],
  "test__is_in_ignore_list_re_nomatch": [
    [
      "tests/lint/unittest_expand_modules.py",
      [
        "test__is_in_ignore_list_re_nomatch"
      ]
    ]
  ],
  "test_expand_modules": [
    [
      "tests/lint/unittest_expand_modules.py",
      [
        "test_expand_modules"
      ]
    ]
  ],
  "fake_home": [
    [
      "tests/lint/unittest_lint.py",
      [
        "fake_home"
      ]
    ]
  ],
  "remove": [
    [
      "tests/lint/unittest_lint.py",
      [
        "remove"
      ]
    ]
  ],
  "tempdir": [
    [
      "tests/lint/unittest_lint.py",
      [
        "tempdir"
      ]
    ]
  ],
  "create_files": [
    [
      "tests/lint/unittest_lint.py",
      [
        "create_files"
      ]
    ]
  ],
  "fake_path": [
    [
      "tests/lint/unittest_lint.py",
      [
        "fake_path"
      ]
    ]
  ],
  "test_one_arg": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_one_arg"
      ]
    ]
  ],
  "test_two_similar_args": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_two_similar_args"
      ]
    ]
  ],
  "test_more_args": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_more_args"
      ]
    ]
  ],
  "init_linter": [
    [
      "tests/lint/unittest_lint.py",
      [
        "init_linter"
      ]
    ]
  ],
  "test_pylint_visit_method_taken_in_account": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_pylint_visit_method_taken_in_account"
      ]
    ]
  ],
  "test_enable_message": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_enable_message"
      ]
    ]
  ],
  "test_enable_message_category": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_enable_message_category"
      ]
    ]
  ],
  "test_message_state_scope": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_message_state_scope"
      ]
    ]
  ],
  "test_enable_message_block": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_enable_message_block"
      ]
    ]
  ],
  "test_enable_by_symbol": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_enable_by_symbol"
      ]
    ]
  ],
  "test_enable_report": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_enable_report"
      ]
    ]
  ],
  "test_report_output_format_aliased": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_report_output_format_aliased"
      ]
    ]
  ],
  "test_set_unsupported_reporter": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_set_unsupported_reporter"
      ]
    ]
  ],
  "test_set_option_1": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_set_option_1"
      ]
    ]
  ],
  "test_set_option_2": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_set_option_2"
      ]
    ]
  ],
  "test_enable_checkers": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_enable_checkers"
      ]
    ]
  ],
  "test_errors_only": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_errors_only"
      ]
    ]
  ],
  "test_disable_similar": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_disable_similar"
      ]
    ]
  ],
  "test_disable_alot": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_disable_alot"
      ]
    ]
  ],
  "test_addmessage": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_addmessage"
      ]
    ]
  ],
  "test_addmessage_invalid": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_addmessage_invalid"
      ]
    ]
  ],
  "test_load_plugin_command_line": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_load_plugin_command_line"
      ]
    ]
  ],
  "test_load_plugin_config_file": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_load_plugin_config_file"
      ]
    ]
  ],
  "test_load_plugin_configuration": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_load_plugin_configuration"
      ]
    ]
  ],
  "test_init_hooks_called_before_load_plugins": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_init_hooks_called_before_load_plugins"
      ]
    ]
  ],
  "test_analyze_explicit_script": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_analyze_explicit_script"
      ]
    ]
  ],
  "test_python3_checker_disabled": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_python3_checker_disabled"
      ]
    ]
  ],
  "test_full_documentation": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_full_documentation"
      ]
    ]
  ],
  "test_list_msgs_enabled": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_list_msgs_enabled"
      ]
    ]
  ],
  "pop_pylintrc": [
    [
      "tests/lint/unittest_lint.py",
      [
        "pop_pylintrc"
      ]
    ]
  ],
  "test_pylint_home": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_pylint_home"
      ]
    ]
  ],
  "test_pylintrc": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_pylintrc"
      ]
    ]
  ],
  "test_pylintrc_parentdir": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_pylintrc_parentdir"
      ]
    ]
  ],
  "test_pylintrc_parentdir_no_package": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_pylintrc_parentdir_no_package"
      ]
    ]
  ],
  "_callback": [
    [
      "tests/lint/unittest_lint.py",
      [
        "TestPreprocessOptions",
        "_callback"
      ]
    ]
  ],
  "test_value_equal": [
    [
      "tests/lint/unittest_lint.py",
      [
        "TestPreprocessOptions",
        "test_value_equal"
      ]
    ]
  ],
  "test_value_space": [
    [
      "tests/lint/unittest_lint.py",
      [
        "TestPreprocessOptions",
        "test_value_space"
      ]
    ]
  ],
  "test_error_missing_expected_value": [
    [
      "tests/lint/unittest_lint.py",
      [
        "TestPreprocessOptions",
        "test_error_missing_expected_value"
      ]
    ]
  ],
  "test_error_unexpected_value": [
    [
      "tests/lint/unittest_lint.py",
      [
        "TestPreprocessOptions",
        "test_error_unexpected_value"
      ]
    ]
  ],
  "test_custom_should_analyze_file": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_custom_should_analyze_file"
      ]
    ]
  ],
  "test_filename_with__init__": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_filename_with__init__"
      ]
    ]
  ],
  "test_by_module_statement_value": [
    [
      "tests/lint/unittest_lint.py",
      [
        "test_by_module_statement_value"
      ]
    ]
  ],
  "msgid": [
    [
      "tests/message/conftest.py",
      [
        "msgid"
      ]
    ]
  ],
  "symbol": [
    [
      "tests/message/conftest.py",
      [
        "symbol"
      ]
    ]
  ],
  "empty_store": [
    [
      "tests/message/conftest.py",
      [
        "empty_store"
      ]
    ]
  ],
  "store": [
    [
      "tests/message/conftest.py",
      [
        "store"
      ]
    ]
  ],
  "message_definitions": [
    [
      "tests/message/conftest.py",
      [
        "message_definitions"
      ]
    ]
  ],
  "msgids": [
    [
      "tests/message/conftest.py",
      [
        "msgids"
      ]
    ]
  ],
  "empty_msgid_store": [
    [
      "tests/message/conftest.py",
      [
        "empty_msgid_store"
      ]
    ]
  ],
  "msgid_store": [
    [
      "tests/message/conftest.py",
      [
        "msgid_store"
      ]
    ]
  ],
  "build_message": [
    [
      "tests/message/unittest_message.py",
      [
        "test_new_message",
        "build_message"
      ]
    ]
  ],
  "test_new_message": [
    [
      "tests/message/unittest_message.py",
      [
        "test_new_message"
      ]
    ]
  ],
  "test_create_invalid_message_type": [
    [
      "tests/message/unittest_message_definition.py",
      [
        "test_create_invalid_message_type"
      ]
    ]
  ],
  "assert_with_fail_msg": [
    [
      "tests/message/unittest_message_definition.py",
      [
        "TestMessagesDefinition",
        "assert_with_fail_msg"
      ]
    ]
  ],
  "test_may_be_emitted": [
    [
      "tests/message/unittest_message_definition.py",
      [
        "TestMessagesDefinition",
        "test_may_be_emitted"
      ]
    ]
  ],
  "test_repr": [
    [
      "tests/message/unittest_message_definition.py",
      [
        "TestMessagesDefinition",
        "test_repr"
      ]
    ]
  ],
  "test_str": [
    [
      "tests/message/unittest_message_definition.py",
      [
        "TestMessagesDefinition",
        "test_str"
      ]
    ]
  ],
  "test_format_help": [
    [
      "tests/message/unittest_message_definition.py",
      [
        "TestMessagesDefinition",
        "test_format_help"
      ]
    ],
    [
      "tests/message/unittest_message_definition_store.py",
      [
        "test_format_help"
      ]
    ]
  ],
  "test_register_error": [
    [
      "tests/message/unittest_message_definition_store.py",
      [
        "test_register_error"
      ]
    ]
  ],
  "test_register_error_new_id_duplicate_of_new": [
    [
      "tests/message/unittest_message_definition_store.py",
      [
        "test_register_error_new_id_duplicate_of_new"
      ]
    ]
  ],
  "test_get_msg_display_string": [
    [
      "tests/message/unittest_message_definition_store.py",
      [
        "test_get_msg_display_string"
      ]
    ]
  ],
  "test_check_message_id": [
    [
      "tests/message/unittest_message_definition_store.py",
      [
        "test_check_message_id"
      ]
    ]
  ],
  "_compare_messages": [
    [
      "tests/message/unittest_message_definition_store.py",
      [
        "TestMessageDefinitionStore",
        "_compare_messages"
      ]
    ]
  ],
  "test_message_help": [
    [
      "tests/message/unittest_message_definition_store.py",
      [
        "TestMessageDefinitionStore",
        "test_message_help"
      ]
    ]
  ],
  "test_message_help_minmax": [
    [
      "tests/message/unittest_message_definition_store.py",
      [
        "TestMessageDefinitionStore",
        "test_message_help_minmax"
      ]
    ]
  ],
  "test_list_messages": [
    [
      "tests/message/unittest_message_definition_store.py",
      [
        "test_list_messages"
      ]
    ]
  ],
  "test_renamed_message_register": [
    [
      "tests/message/unittest_message_definition_store.py",
      [
        "test_renamed_message_register"
      ]
    ]
  ],
  "test_multiple_child_of_old_name": [
    [
      "tests/message/unittest_message_definition_store.py",
      [
        "test_multiple_child_of_old_name"
      ]
    ]
  ],
  "test_len_str": [
    [
      "tests/message/unittest_message_id_store.py",
      [
        "test_len_str"
      ]
    ]
  ],
  "test_get_message_ids": [
    [
      "tests/message/unittest_message_id_store.py",
      [
        "test_get_message_ids"
      ]
    ]
  ],
  "test_get_message_ids_not_existing": [
    [
      "tests/message/unittest_message_id_store.py",
      [
        "test_get_message_ids_not_existing"
      ]
    ]
  ],
  "test_register_message_definitions": [
    [
      "tests/message/unittest_message_id_store.py",
      [
        "test_register_message_definitions"
      ]
    ]
  ],
  "test_add_msgid_and_symbol": [
    [
      "tests/message/unittest_message_id_store.py",
      [
        "test_add_msgid_and_symbol"
      ]
    ]
  ],
  "test_duplicate_symbol": [
    [
      "tests/message/unittest_message_id_store.py",
      [
        "test_duplicate_symbol"
      ]
    ]
  ],
  "test_duplicate_msgid": [
    [
      "tests/message/unittest_message_id_store.py",
      [
        "test_duplicate_msgid"
      ]
    ]
  ],
  "_get_py_files": [
    [
      "tests/profile/test_profile_against_externals.py",
      [
        "_get_py_files"
      ]
    ]
  ],
  "test_run": [
    [
      "tests/profile/test_profile_against_externals.py",
      [
        "test_run"
      ]
    ]
  ],
  "please": [
    [
      "tests/regrtest_data/classdoc_usage.py",
      [
        "SomeClass",
        "please"
      ]
    ]
  ],
  "besilent": [
    [
      "tests/regrtest_data/classdoc_usage.py",
      [
        "SomeClass",
        "besilent"
      ]
    ]
  ],
  "total_cost": [
    [
      "tests/regrtest_data/dataclasses_pyreverse/__init__.py",
      [
        "InventoryItem",
        "total_cost"
      ]
    ]
  ],
  "getPage": [
    [
      "tests/regrtest_data/descriptor_crash.py",
      [
        "Page",
        "getPage"
      ]
    ]
  ],
  "look_busy": [
    [
      "tests/regrtest_data/duplicate_data_raw_strings/first.py",
      [
        "look_busy"
      ]
    ],
    [
      "tests/regrtest_data/duplicate_data_raw_strings/second.py",
      [
        "look_busy"
      ]
    ]
  ],
  "loop": [
    [
      "tests/regrtest_data/fail_under_minus10.py",
      [
        "loop"
      ]
    ]
  ],
  "too_complex_but_thats_ok": [
    [
      "tests/regrtest_data/func_block_disable_msg.py",
      [
        "ClassLevelMessage",
        "too_complex_but_thats_ok"
      ]
    ]
  ],
  "_gen_file_data": [
    [
      "tests/test_check_parallel.py",
      [
        "_gen_file_data"
      ]
    ]
  ],
  "_gen_file_datas": [
    [
      "tests/test_check_parallel.py",
      [
        "_gen_file_datas"
      ]
    ]
  ],
  "setup_class": [
    [
      "tests/test_check_parallel.py",
      [
        "TestCheckParallelFramework",
        "setup_class"
      ]
    ]
  ],
  "teardown_class": [
    [
      "tests/test_check_parallel.py",
      [
        "TestCheckParallelFramework",
        "teardown_class"
      ]
    ]
  ],
  "test_worker_initialize": [
    [
      "tests/test_check_parallel.py",
      [
        "TestCheckParallelFramework",
        "test_worker_initialize"
      ]
    ]
  ],
  "test_worker_check_single_file_uninitialised": [
    [
      "tests/test_check_parallel.py",
      [
        "TestCheckParallelFramework",
        "test_worker_check_single_file_uninitialised"
      ]
    ]
  ],
  "test_worker_check_single_file_no_checkers": [
    [
      "tests/test_check_parallel.py",
      [
        "TestCheckParallelFramework",
        "test_worker_check_single_file_no_checkers"
      ]
    ]
  ],
  "test_worker_check_sequential_checker": [
    [
      "tests/test_check_parallel.py",
      [
        "TestCheckParallelFramework",
        "test_worker_check_sequential_checker"
      ]
    ]
  ],
  "test_sequential_checkers_work": [
    [
      "tests/test_check_parallel.py",
      [
        "TestCheckParallel",
        "test_sequential_checkers_work"
      ]
    ]
  ],
  "test_invoke_single_job": [
    [
      "tests/test_check_parallel.py",
      [
        "TestCheckParallel",
        "test_invoke_single_job"
      ]
    ]
  ],
  "test_compare_workers_to_single_proc": [
    [
      "tests/test_check_parallel.py",
      [
        "TestCheckParallel",
        "test_compare_workers_to_single_proc"
      ]
    ]
  ],
  "check_configuration_file_reader": [
    [
      "tests/test_config.py",
      [
        "check_configuration_file_reader"
      ]
    ]
  ],
  "test_can_read_ini": [
    [
      "tests/test_config.py",
      [
        "test_can_read_ini"
      ]
    ]
  ],
  "test_can_read_setup_cfg": [
    [
      "tests/test_config.py",
      [
        "test_can_read_setup_cfg"
      ]
    ]
  ],
  "test_can_read_toml": [
    [
      "tests/test_config.py",
      [
        "test_can_read_toml"
      ]
    ]
  ],
  "test_can_read_toml_rich_types": [
    [
      "tests/test_config.py",
      [
        "test_can_read_toml_rich_types"
      ]
    ]
  ],
  "example_path": [
    [
      "tests/test_epylint.py",
      [
        "example_path"
      ]
    ]
  ],
  "test_epylint_good_command": [
    [
      "tests/test_epylint.py",
      [
        "test_epylint_good_command"
      ]
    ]
  ],
  "test_epylint_strange_command": [
    [
      "tests/test_epylint.py",
      [
        "test_epylint_strange_command"
      ]
    ]
  ],
  "exception_str": [
    [
      "tests/test_func.py",
      [
        "exception_str"
      ]
    ]
  ],
  "_test_functionality": [
    [
      "tests/test_func.py",
      [
        "LintTestUsingModule",
        "_test_functionality"
      ]
    ]
  ],
  "_check_result": [
    [
      "tests/test_func.py",
      [
        "LintTestUsingModule",
        "_check_result"
      ]
    ],
    [
      "tests/test_func.py",
      [
        "LintTestUpdate",
        "_check_result"
      ]
    ]
  ],
  "_test": [
    [
      "tests/test_func.py",
      [
        "LintTestUsingModule",
        "_test"
      ]
    ]
  ],
  "_has_output": [
    [
      "tests/test_func.py",
      [
        "LintTestUsingModule",
        "_has_output"
      ]
    ]
  ],
  "gen_tests": [
    [
      "tests/test_func.py",
      [
        "gen_tests"
      ]
    ]
  ],
  "test_functionality": [
    [
      "tests/test_func.py",
      [
        "test_functionality"
      ]
    ]
  ],
  "__test_functionality": [
    [
      "tests/test_func.py",
      [
        "__test_functionality"
      ]
    ]
  ],
  "get_tests": [
    [
      "tests/test_functional.py",
      [
        "get_tests"
      ]
    ]
  ],
  "test_functional": [
    [
      "tests/test_functional.py",
      [
        "test_functional"
      ]
    ]
  ],
  "dest": [
    [
      "tests/test_import_graph.py",
      [
        "dest"
      ]
    ]
  ],
  "test_dependencies_graph": [
    [
      "tests/test_import_graph.py",
      [
        "test_dependencies_graph"
      ]
    ]
  ],
  "test_missing_graphviz": [
    [
      "tests/test_import_graph.py",
      [
        "test_missing_graphviz"
      ]
    ]
  ],
  "remove_files": [
    [
      "tests/test_import_graph.py",
      [
        "remove_files"
      ]
    ]
  ],
  "test_checker_dep_graphs": [
    [
      "tests/test_import_graph.py",
      [
        "test_checker_dep_graphs"
      ]
    ]
  ],
  "test_numversion": [
    [
      "tests/test_numversion.py",
      [
        "test_numversion"
      ]
    ]
  ],
  "test_simple_pragma": [
    [
      "tests/test_pragma_parser.py",
      [
        "test_simple_pragma"
      ]
    ]
  ],
  "test_disable_checker_with_number_in_name": [
    [
      "tests/test_pragma_parser.py",
      [
        "test_disable_checker_with_number_in_name"
      ]
    ]
  ],
  "test_simple_pragma_no_messages": [
    [
      "tests/test_pragma_parser.py",
      [
        "test_simple_pragma_no_messages"
      ]
    ]
  ],
  "test_simple_pragma_multiple_messages": [
    [
      "tests/test_pragma_parser.py",
      [
        "test_simple_pragma_multiple_messages"
      ]
    ]
  ],
  "test_multiple_pragma_multiple_messages": [
    [
      "tests/test_pragma_parser.py",
      [
        "test_multiple_pragma_multiple_messages"
      ]
    ]
  ],
  "test_missing_assignment": [
    [
      "tests/test_pragma_parser.py",
      [
        "test_missing_assignment"
      ]
    ]
  ],
  "test_missing_keyword": [
    [
      "tests/test_pragma_parser.py",
      [
        "test_missing_keyword"
      ]
    ]
  ],
  "test_unsupported_assignment": [
    [
      "tests/test_pragma_parser.py",
      [
        "test_unsupported_assignment"
      ]
    ]
  ],
  "test_unknown_keyword_with_messages": [
    [
      "tests/test_pragma_parser.py",
      [
        "test_unknown_keyword_with_messages"
      ]
    ]
  ],
  "test_unknown_keyword_without_messages": [
    [
      "tests/test_pragma_parser.py",
      [
        "test_unknown_keyword_without_messages"
      ]
    ]
  ],
  "test_missing_message": [
    [
      "tests/test_pragma_parser.py",
      [
        "test_missing_message"
      ]
    ]
  ],
  "test_parse_message_with_dash": [
    [
      "tests/test_pragma_parser.py",
      [
        "test_parse_message_with_dash"
      ]
    ]
  ],
  "test_runner": [
    [
      "tests/test_pylint_runners.py",
      [
        "test_runner"
      ]
    ]
  ],
  "finalize_linter": [
    [
      "tests/test_regr.py",
      [
        "finalize_linter"
      ]
    ]
  ],
  "Equals": [
    [
      "tests/test_regr.py",
      [
        "Equals"
      ]
    ]
  ],
  "test_package": [
    [
      "tests/test_regr.py",
      [
        "test_package"
      ]
    ]
  ],
  "test_crash": [
    [
      "tests/test_regr.py",
      [
        "test_crash"
      ]
    ]
  ],
  "test_descriptor_crash": [
    [
      "tests/test_regr.py",
      [
        "test_descriptor_crash"
      ]
    ]
  ],
  "modify_path": [
    [
      "tests/test_regr.py",
      [
        "modify_path"
      ]
    ]
  ],
  "test_check_package___init__": [
    [
      "tests/test_regr.py",
      [
        "test_check_package___init__"
      ]
    ]
  ],
  "test_pylint_config_attr": [
    [
      "tests/test_regr.py",
      [
        "test_pylint_config_attr"
      ]
    ]
  ],
  "_patch_streams": [
    [
      "tests/test_self.py",
      [
        "_patch_streams"
      ]
    ]
  ],
  "_configure_lc_ctype": [
    [
      "tests/test_self.py",
      [
        "_configure_lc_ctype"
      ]
    ]
  ],
  "out": [
    [
      "tests/test_self.py",
      [
        "MultiReporter",
        "out"
      ]
    ]
  ],
  "linter_5": [
    [
      "tests/test_self.py",
      [
        "MultiReporter",
        "linter_5"
      ]
    ]
  ],
  "_runtest": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "_runtest"
      ]
    ]
  ],
  "_run_pylint": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "_run_pylint"
      ]
    ]
  ],
  "_clean_paths": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "_clean_paths"
      ]
    ]
  ],
  "_test_output": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "_test_output"
      ]
    ]
  ],
  "_test_output_file": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "_test_output_file"
      ]
    ]
  ],
  "test_pkginfo": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_pkginfo"
      ]
    ]
  ],
  "test_all": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_all"
      ]
    ]
  ],
  "test_no_ext_file": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_no_ext_file"
      ]
    ]
  ],
  "test_w0704_ignored": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_w0704_ignored"
      ]
    ]
  ],
  "test_exit_zero": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_exit_zero"
      ]
    ]
  ],
  "test_generate_config_option": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_generate_config_option"
      ]
    ]
  ],
  "test_generate_config_option_order": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_generate_config_option_order"
      ]
    ]
  ],
  "test_generate_config_disable_symbolic_names": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_generate_config_disable_symbolic_names"
      ]
    ]
  ],
  "test_generate_rcfile_no_obsolete_methods": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_generate_rcfile_no_obsolete_methods"
      ]
    ]
  ],
  "test_nonexistent_config_file": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_nonexistent_config_file"
      ]
    ]
  ],
  "test_help_message_option": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_help_message_option"
      ]
    ]
  ],
  "test_error_help_message_option": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_error_help_message_option"
      ]
    ]
  ],
  "test_error_missing_arguments": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_error_missing_arguments"
      ]
    ]
  ],
  "test_no_out_encoding": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_no_out_encoding"
      ]
    ]
  ],
  "test_parallel_execution": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_parallel_execution"
      ]
    ]
  ],
  "test_parallel_execution_bug_2674": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_parallel_execution_bug_2674"
      ]
    ]
  ],
  "test_parallel_execution_missing_arguments": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_parallel_execution_missing_arguments"
      ]
    ]
  ],
  "test_py3k_option": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_py3k_option"
      ]
    ]
  ],
  "test_py3k_jobs_option": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_py3k_jobs_option"
      ]
    ]
  ],
  "test_abbreviations_are_not_supported": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_abbreviations_are_not_supported"
      ]
    ]
  ],
  "test_enable_all_works": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_enable_all_works"
      ]
    ]
  ],
  "test_wrong_import_position_when_others_disabled": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_wrong_import_position_when_others_disabled"
      ]
    ]
  ],
  "test_import_itself_not_accounted_for_relative_imports": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_import_itself_not_accounted_for_relative_imports"
      ]
    ]
  ],
  "test_reject_empty_indent_strings": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_reject_empty_indent_strings"
      ]
    ]
  ],
  "test_json_report_when_file_has_syntax_error": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_json_report_when_file_has_syntax_error"
      ]
    ]
  ],
  "test_json_report_when_file_is_missing": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_json_report_when_file_is_missing"
      ]
    ]
  ],
  "test_json_report_does_not_escape_quotes": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_json_report_does_not_escape_quotes"
      ]
    ]
  ],
  "test_information_category_disabled_by_default": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_information_category_disabled_by_default"
      ]
    ]
  ],
  "test_error_mode_shows_no_score": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_error_mode_shows_no_score"
      ]
    ]
  ],
  "test_evaluation_score_shown_by_default": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_evaluation_score_shown_by_default"
      ]
    ]
  ],
  "test_confidence_levels": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_confidence_levels"
      ]
    ]
  ],
  "test_bom_marker": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_bom_marker"
      ]
    ]
  ],
  "test_pylintrc_plugin_duplicate_options": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_pylintrc_plugin_duplicate_options"
      ]
    ]
  ],
  "test_pylintrc_comments_in_values": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_pylintrc_comments_in_values"
      ]
    ]
  ],
  "test_no_crash_with_formatting_regex_defaults": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_no_crash_with_formatting_regex_defaults"
      ]
    ]
  ],
  "test_getdefaultencoding_crashes_with_lc_ctype_utf8": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_getdefaultencoding_crashes_with_lc_ctype_utf8"
      ]
    ]
  ],
  "test_parseable_file_path": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_parseable_file_path"
      ]
    ]
  ],
  "test_stdin": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_stdin"
      ]
    ]
  ],
  "test_stdin_missing_modulename": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_stdin_missing_modulename"
      ]
    ]
  ],
  "test_relative_imports": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_relative_imports"
      ]
    ]
  ],
  "test_stdin_syntaxerror": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_stdin_syntaxerror"
      ]
    ]
  ],
  "test_version": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_version"
      ]
    ]
  ],
  "test_fail_under": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_fail_under"
      ]
    ]
  ],
  "test_fail_on": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_fail_on"
      ]
    ]
  ],
  "test_fail_on_edge_case": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_fail_on_edge_case"
      ]
    ]
  ],
  "test_sys_path": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_modify_sys_path",
        "test_sys_path"
      ]
    ]
  ],
  "test_environ_pythonpath": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_modify_sys_path",
        "test_environ_pythonpath"
      ]
    ]
  ],
  "test_modify_sys_path": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_modify_sys_path"
      ]
    ]
  ],
  "test_do_not_import_files_from_local_directory": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_do_not_import_files_from_local_directory"
      ]
    ]
  ],
  "test_do_not_import_files_from_local_directory_with_pythonpath": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_do_not_import_files_from_local_directory_with_pythonpath"
      ]
    ]
  ],
  "test_import_plugin_from_local_directory_if_pythonpath_cwd": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_import_plugin_from_local_directory_if_pythonpath_cwd"
      ]
    ]
  ],
  "test_allow_import_of_files_found_in_modules_during_parallel_check": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_allow_import_of_files_found_in_modules_during_parallel_check"
      ]
    ]
  ],
  "test_can_list_directories_without_dunder_init": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_can_list_directories_without_dunder_init"
      ]
    ]
  ],
  "test_jobs_score": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_jobs_score"
      ]
    ]
  ],
  "test_duplicate_code_raw_strings": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_duplicate_code_raw_strings"
      ]
    ]
  ],
  "test_regression_parallel_mode_without_filepath": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_regression_parallel_mode_without_filepath"
      ]
    ]
  ],
  "test_output_file_valid_path": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_output_file_valid_path"
      ]
    ]
  ],
  "test_output_file_invalid_path_exits_with_code_32": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_output_file_invalid_path_exits_with_code_32"
      ]
    ]
  ],
  "test_output_file_can_be_combined_with_output_format_option": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_output_file_can_be_combined_with_output_format_option"
      ]
    ]
  ],
  "test_output_file_can_be_combined_with_custom_reporter": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_output_file_can_be_combined_with_custom_reporter"
      ]
    ]
  ],
  "test_output_file_specified_in_rcfile": [
    [
      "tests/test_self.py",
      [
        "TestRunTC",
        "test_output_file_specified_in_rcfile"
      ]
    ]
  ],
  "message": [
    [
      "tests/testutils/test_output_line.py",
      [
        "message"
      ]
    ]
  ],
  "test_output_line": [
    [
      "tests/testutils/test_output_line.py",
      [
        "test_output_line"
      ]
    ]
  ],
  "test_output_line_from_message": [
    [
      "tests/testutils/test_output_line.py",
      [
        "test_output_line_from_message"
      ]
    ]
  ],
  "test_output_line_to_csv": [
    [
      "tests/testutils/test_output_line.py",
      [
        "test_output_line_to_csv"
      ]
    ]
  ],
  "test_output_line_from_csv_error": [
    [
      "tests/testutils/test_output_line.py",
      [
        "test_output_line_from_csv_error"
      ]
    ]
  ],
  "test_output_line_from_csv": [
    [
      "tests/testutils/test_output_line.py",
      [
        "test_output_line_from_csv"
      ]
    ]
  ],
  "test__regexp_validator_valid": [
    [
      "tests/unittest_config.py",
      [
        "test__regexp_validator_valid"
      ]
    ]
  ],
  "test__regexp_validator_invalid": [
    [
      "tests/unittest_config.py",
      [
        "test__regexp_validator_invalid"
      ]
    ]
  ],
  "test__csv_validator_no_spaces": [
    [
      "tests/unittest_config.py",
      [
        "test__csv_validator_no_spaces"
      ]
    ]
  ],
  "test__csv_validator_spaces": [
    [
      "tests/unittest_config.py",
      [
        "test__csv_validator_spaces"
      ]
    ]
  ],
  "test__regexp_csv_validator_valid": [
    [
      "tests/unittest_config.py",
      [
        "test__regexp_csv_validator_valid"
      ]
    ]
  ],
  "test__regexp_csv_validator_invalid": [
    [
      "tests/unittest_config.py",
      [
        "test__regexp_csv_validator_invalid"
      ]
    ]
  ],
  "_process_classes": [
    [
      "tests/unittest_pyreverse_diadefs.py",
      [
        "_process_classes"
      ]
    ]
  ],
  "_process_relations": [
    [
      "tests/unittest_pyreverse_diadefs.py",
      [
        "_process_relations"
      ]
    ]
  ],
  "HANDLER": [
    [
      "tests/unittest_pyreverse_diadefs.py",
      [
        "HANDLER"
      ]
    ]
  ],
  "PROJECT": [
    [
      "tests/unittest_pyreverse_diadefs.py",
      [
        "PROJECT"
      ]
    ]
  ],
  "test_option_values": [
    [
      "tests/unittest_pyreverse_diadefs.py",
      [
        "test_option_values"
      ]
    ]
  ],
  "test_default_values": [
    [
      "tests/unittest_pyreverse_diadefs.py",
      [
        "test_default_values"
      ]
    ]
  ],
  "test_exctract_relations": [
    [
      "tests/unittest_pyreverse_diadefs.py",
      [
        "TestDefaultDiadefGenerator",
        "test_exctract_relations"
      ]
    ]
  ],
  "test_functional_relation_extraction": [
    [
      "tests/unittest_pyreverse_diadefs.py",
      [
        "TestDefaultDiadefGenerator",
        "test_functional_relation_extraction"
      ]
    ]
  ],
  "test_known_values1": [
    [
      "tests/unittest_pyreverse_diadefs.py",
      [
        "test_known_values1"
      ]
    ]
  ],
  "test_known_values2": [
    [
      "tests/unittest_pyreverse_diadefs.py",
      [
        "test_known_values2"
      ]
    ]
  ],
  "test_known_values3": [
    [
      "tests/unittest_pyreverse_diadefs.py",
      [
        "test_known_values3"
      ]
    ]
  ],
  "test_known_values4": [
    [
      "tests/unittest_pyreverse_diadefs.py",
      [
        "test_known_values4"
      ]
    ]
  ],
  "test_regression_dataclasses_inference": [
    [
      "tests/unittest_pyreverse_diadefs.py",
      [
        "test_regression_dataclasses_inference"
      ]
    ]
  ],
  "project": [
    [
      "tests/unittest_pyreverse_inspector.py",
      [
        "project"
      ]
    ]
  ],
  "test_class_implements": [
    [
      "tests/unittest_pyreverse_inspector.py",
      [
        "test_class_implements"
      ]
    ]
  ],
  "test_class_implements_specialization": [
    [
      "tests/unittest_pyreverse_inspector.py",
      [
        "test_class_implements_specialization"
      ]
    ]
  ],
  "test_locals_assignment_resolution": [
    [
      "tests/unittest_pyreverse_inspector.py",
      [
        "test_locals_assignment_resolution"
      ]
    ]
  ],
  "test_instance_attrs_resolution": [
    [
      "tests/unittest_pyreverse_inspector.py",
      [
        "test_instance_attrs_resolution"
      ]
    ]
  ],
  "test_concat_interfaces": [
    [
      "tests/unittest_pyreverse_inspector.py",
      [
        "test_concat_interfaces"
      ]
    ]
  ],
  "test_interfaces": [
    [
      "tests/unittest_pyreverse_inspector.py",
      [
        "test_interfaces"
      ]
    ]
  ],
  "test_from_directory": [
    [
      "tests/unittest_pyreverse_inspector.py",
      [
        "test_from_directory"
      ]
    ]
  ],
  "test_project_node": [
    [
      "tests/unittest_pyreverse_inspector.py",
      [
        "test_project_node"
      ]
    ]
  ],
  "_file_lines": [
    [
      "tests/unittest_pyreverse_writer.py",
      [
        "_file_lines"
      ]
    ]
  ],
  "get_project": [
    [
      "tests/unittest_pyreverse_writer.py",
      [
        "get_project"
      ]
    ]
  ],
  "test_dot_files": [
    [
      "tests/unittest_pyreverse_writer.py",
      [
        "test_dot_files"
      ]
    ]
  ],
  "test_get_visibility": [
    [
      "tests/unittest_pyreverse_writer.py",
      [
        "test_get_visibility"
      ]
    ]
  ],
  "test_get_annotation_annassign": [
    [
      "tests/unittest_pyreverse_writer.py",
      [
        "test_get_annotation_annassign"
      ]
    ]
  ],
  "test_get_annotation_assignattr": [
    [
      "tests/unittest_pyreverse_writer.py",
      [
        "test_get_annotation_assignattr"
      ]
    ]
  ],
  "test_infer_node_1": [
    [
      "tests/unittest_pyreverse_writer.py",
      [
        "test_infer_node_1"
      ]
    ]
  ],
  "test_infer_node_2": [
    [
      "tests/unittest_pyreverse_writer.py",
      [
        "test_infer_node_2"
      ]
    ]
  ],
  "test_simple_json_output_no_score": [
    [
      "tests/unittest_reporters_json.py",
      [
        "test_simple_json_output_no_score"
      ]
    ]
  ],
  "get_linter_result": [
    [
      "tests/unittest_reporters_json.py",
      [
        "get_linter_result"
      ]
    ]
  ],
  "test_template_option": [
    [
      "tests/unittest_reporting.py",
      [
        "test_template_option"
      ]
    ]
  ],
  "test_parseable_output_deprecated": [
    [
      "tests/unittest_reporting.py",
      [
        "test_parseable_output_deprecated"
      ]
    ]
  ],
  "test_parseable_output_regression": [
    [
      "tests/unittest_reporting.py",
      [
        "test_parseable_output_regression"
      ]
    ]
  ],
  "test_multi_format_output": [
    [
      "tests/unittest_reporting.py",
      [
        "test_multi_format_output"
      ]
    ]
  ],
  "test_display_results_is_renamed": [
    [
      "tests/unittest_reporting.py",
      [
        "test_display_results_is_renamed"
      ]
    ]
  ],
  "leave_assignname": [
    [
      "tests/utils/unittest_ast_walker.py",
      [
        "TestASTWalker",
        "Checker",
        "leave_assignname"
      ]
    ]
  ],
  "test_check_messages": [
    [
      "tests/utils/unittest_ast_walker.py",
      [
        "TestASTWalker",
        "test_check_messages"
      ]
    ]
  ],
  "test_deprecated_methods": [
    [
      "tests/utils/unittest_ast_walker.py",
      [
        "TestASTWalker",
        "test_deprecated_methods"
      ]
    ]
  ],
  "test_decoding_stream_unknown_encoding": [
    [
      "tests/utils/unittest_utils.py",
      [
        "test_decoding_stream_unknown_encoding"
      ]
    ]
  ],
  "test_decoding_stream_known_encoding": [
    [
      "tests/utils/unittest_utils.py",
      [
        "test_decoding_stream_known_encoding"
      ]
    ]
  ]
}