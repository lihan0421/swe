{
  "foo": [
    [
      "bench/manyparam.py",
      [
        "foo"
      ]
    ]
  ],
  "test_it": [
    [
      "bench/manyparam.py",
      [
        "test_it"
      ]
    ]
  ],
  "test_it2": [
    [
      "bench/manyparam.py",
      [
        "test_it2"
      ]
    ]
  ],
  "test_foo": [
    [
      "bench/skip.py",
      [
        "test_foo"
      ]
    ],
    [
      "testing/example_scripts/collect/collect_init_tests/tests/test_foo.py",
      [
        "test_foo"
      ]
    ],
    [
      "testing/example_scripts/config/collect_pytest_prefix/test_foo.py",
      [
        "test_foo"
      ]
    ],
    [
      "testing/example_scripts/unittest/test_setup_skip.py",
      [
        "Test",
        "test_foo"
      ]
    ],
    [
      "testing/example_scripts/unittest/test_setup_skip_class.py",
      [
        "Test",
        "test_foo"
      ]
    ],
    [
      "testing/example_scripts/warnings/test_group_warnings_by_message.py",
      [
        "test_foo"
      ]
    ]
  ],
  "setup": [
    [
      "doc/en/conf.py",
      [
        "setup"
      ]
    ],
    [
      "doc/en/example/costlysetup/conftest.py",
      [
        "setup"
      ]
    ],
    [
      "src/_pytest/debugging.py",
      [
        "pytestPDB",
        "_get_pdb_wrapper_class",
        "PytestPdbWrapper",
        "setup"
      ]
    ],
    [
      "src/_pytest/doctest.py",
      [
        "DoctestItem",
        "setup"
      ]
    ],
    [
      "src/_pytest/nodes.py",
      [
        "Node",
        "setup"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "Package",
        "setup"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "FunctionMixin",
        "setup"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "Function",
        "setup"
      ]
    ],
    [
      "src/_pytest/unittest.py",
      [
        "TestCaseFunction",
        "setup"
      ]
    ]
  ],
  "otherfunc": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "otherfunc"
      ]
    ]
  ],
  "somefunc": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "somefunc"
      ]
    ]
  ],
  "otherfunc_multi": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "otherfunc_multi"
      ]
    ]
  ],
  "test_generative": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "test_generative"
      ]
    ]
  ],
  "test_simple": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestFailing",
        "test_simple"
      ]
    ],
    [
      "testing/python/fixtures.py",
      [
        "TestContextManagerFixtureFuncs",
        "test_simple"
      ]
    ],
    [
      "testing/test_capture.py",
      [
        "TestFDCapture",
        "test_simple"
      ]
    ]
  ],
  "test_simple_multiline": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestFailing",
        "test_simple_multiline"
      ]
    ]
  ],
  "test_not": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestFailing",
        "test_not"
      ]
    ]
  ],
  "test_eq_text": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestSpecialisedExplanations",
        "test_eq_text"
      ]
    ]
  ],
  "test_eq_similar_text": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestSpecialisedExplanations",
        "test_eq_similar_text"
      ]
    ]
  ],
  "test_eq_multiline_text": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestSpecialisedExplanations",
        "test_eq_multiline_text"
      ]
    ]
  ],
  "test_eq_long_text": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestSpecialisedExplanations",
        "test_eq_long_text"
      ]
    ]
  ],
  "test_eq_long_text_multiline": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestSpecialisedExplanations",
        "test_eq_long_text_multiline"
      ]
    ]
  ],
  "test_eq_list": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestSpecialisedExplanations",
        "test_eq_list"
      ]
    ]
  ],
  "test_eq_list_long": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestSpecialisedExplanations",
        "test_eq_list_long"
      ]
    ]
  ],
  "test_eq_dict": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestSpecialisedExplanations",
        "test_eq_dict"
      ]
    ]
  ],
  "test_eq_set": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestSpecialisedExplanations",
        "test_eq_set"
      ]
    ]
  ],
  "test_eq_longer_list": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestSpecialisedExplanations",
        "test_eq_longer_list"
      ]
    ]
  ],
  "test_in_list": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestSpecialisedExplanations",
        "test_in_list"
      ]
    ]
  ],
  "test_not_in_text_multiline": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestSpecialisedExplanations",
        "test_not_in_text_multiline"
      ]
    ]
  ],
  "test_not_in_text_single": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestSpecialisedExplanations",
        "test_not_in_text_single"
      ]
    ]
  ],
  "test_not_in_text_single_long": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestSpecialisedExplanations",
        "test_not_in_text_single_long"
      ]
    ]
  ],
  "test_not_in_text_single_long_term": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestSpecialisedExplanations",
        "test_not_in_text_single_long_term"
      ]
    ]
  ],
  "test_eq_dataclass": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestSpecialisedExplanations",
        "test_eq_dataclass"
      ]
    ]
  ],
  "test_eq_attrs": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestSpecialisedExplanations",
        "test_eq_attrs"
      ]
    ]
  ],
  "test_attribute": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "test_attribute"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_attribute"
      ]
    ]
  ],
  "test_attribute_instance": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "test_attribute_instance"
      ]
    ]
  ],
  "test_attribute_failure": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "test_attribute_failure"
      ]
    ]
  ],
  "test_attribute_multiple": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "test_attribute_multiple"
      ]
    ]
  ],
  "globf": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "globf"
      ]
    ]
  ],
  "test_raises": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestRaises",
        "test_raises"
      ]
    ],
    [
      "testing/python/raises.py",
      [
        "TestRaises",
        "test_raises"
      ]
    ]
  ],
  "test_raises_doesnt": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestRaises",
        "test_raises_doesnt"
      ]
    ]
  ],
  "test_raise": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestRaises",
        "test_raise"
      ]
    ]
  ],
  "test_tupleerror": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestRaises",
        "test_tupleerror"
      ]
    ]
  ],
  "test_reinterpret_fails_with_print_for_the_fun_of_it": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestRaises",
        "test_reinterpret_fails_with_print_for_the_fun_of_it"
      ]
    ]
  ],
  "test_some_error": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestRaises",
        "test_some_error"
      ]
    ]
  ],
  "func1": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestRaises",
        "func1"
      ]
    ]
  ],
  "test_dynamic_compile_shows_nicely": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "test_dynamic_compile_shows_nicely"
      ]
    ]
  ],
  "test_complex_error": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestMoreErrors",
        "test_complex_error"
      ]
    ]
  ],
  "test_z1_unpack_error": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestMoreErrors",
        "test_z1_unpack_error"
      ]
    ]
  ],
  "test_z2_type_error": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestMoreErrors",
        "test_z2_type_error"
      ]
    ]
  ],
  "test_startswith": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestMoreErrors",
        "test_startswith"
      ]
    ]
  ],
  "test_startswith_nested": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestMoreErrors",
        "test_startswith_nested"
      ]
    ]
  ],
  "test_global_func": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestMoreErrors",
        "test_global_func"
      ]
    ]
  ],
  "test_instance": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestMoreErrors",
        "test_instance"
      ]
    ]
  ],
  "test_compare": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestMoreErrors",
        "test_compare"
      ]
    ]
  ],
  "test_try_finally": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestMoreErrors",
        "test_try_finally"
      ]
    ]
  ],
  "test_single_line": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestCustomAssertMsg",
        "test_single_line"
      ]
    ]
  ],
  "test_multiline": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestCustomAssertMsg",
        "test_multiline"
      ]
    ],
    [
      "testing/code/test_source.py",
      [
        "test_multiline"
      ]
    ]
  ],
  "test_custom_repr": [
    [
      "doc/en/example/assertion/failure_demo.py",
      [
        "TestCustomAssertMsg",
        "test_custom_repr"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_custom_repr"
      ]
    ]
  ],
  "pytest_runtest_setup": [
    [
      "doc/en/example/assertion/global_testmodule_config/conftest.py",
      [
        "pytest_runtest_setup"
      ]
    ],
    [
      "src/_pytest/assertion/__init__.py",
      [
        "pytest_runtest_setup"
      ]
    ],
    [
      "src/_pytest/capture.py",
      [
        "CaptureManager",
        "pytest_runtest_setup"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_runtest_setup"
      ]
    ],
    [
      "src/_pytest/logging.py",
      [
        "LoggingPlugin",
        "pytest_runtest_setup"
      ]
    ],
    [
      "src/_pytest/nose.py",
      [
        "pytest_runtest_setup"
      ]
    ],
    [
      "src/_pytest/runner.py",
      [
        "pytest_runtest_setup"
      ]
    ],
    [
      "src/_pytest/skipping.py",
      [
        "pytest_runtest_setup"
      ]
    ]
  ],
  "test_func": [
    [
      "doc/en/example/assertion/global_testmodule_config/test_hello_world.py",
      [
        "test_func"
      ]
    ],
    [
      "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_basic.py",
      [
        "test_func"
      ]
    ],
    [
      "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_modulelevel.py",
      [
        "test_func"
      ]
    ],
    [
      "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookupfails.py",
      [
        "test_func"
      ]
    ]
  ],
  "test_failure_demo_fails_properly": [
    [
      "doc/en/example/assertion/test_failures.py",
      [
        "test_failure_demo_fails_properly"
      ]
    ]
  ],
  "setup_module": [
    [
      "doc/en/example/assertion/test_setup_flow_example.py",
      [
        "setup_module"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "setup_module"
      ]
    ],
    [
      "testing/test_nose.py",
      [
        "setup_module"
      ]
    ]
  ],
  "setup_class": [
    [
      "doc/en/example/assertion/test_setup_flow_example.py",
      [
        "TestStateFullThing",
        "setup_class"
      ]
    ],
    [
      "testing/test_unittest.py",
      [
        "TestTrialUnittest",
        "setup_class"
      ]
    ]
  ],
  "teardown_class": [
    [
      "doc/en/example/assertion/test_setup_flow_example.py",
      [
        "TestStateFullThing",
        "teardown_class"
      ]
    ]
  ],
  "setup_method": [
    [
      "doc/en/example/assertion/test_setup_flow_example.py",
      [
        "TestStateFullThing",
        "setup_method"
      ]
    ],
    [
      "testing/code/test_excinfo.py",
      [
        "TestTraceback_f_g_h",
        "setup_method"
      ]
    ]
  ],
  "test_42": [
    [
      "doc/en/example/assertion/test_setup_flow_example.py",
      [
        "TestStateFullThing",
        "test_42"
      ]
    ]
  ],
  "test_23": [
    [
      "doc/en/example/assertion/test_setup_flow_example.py",
      [
        "TestStateFullThing",
        "test_23"
      ]
    ]
  ],
  "teardown_module": [
    [
      "doc/en/example/assertion/test_setup_flow_example.py",
      [
        "teardown_module"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "teardown_module"
      ]
    ]
  ],
  "finalize": [
    [
      "doc/en/example/costlysetup/conftest.py",
      [
        "CostlySetup",
        "finalize"
      ]
    ],
    [
      "src/_pytest/junitxml.py",
      [
        "_NodeReporter",
        "finalize"
      ]
    ],
    [
      "src/_pytest/junitxml.py",
      [
        "LogXML",
        "finalize"
      ]
    ],
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "finalize"
      ]
    ]
  ],
  "test_quick": [
    [
      "doc/en/example/costlysetup/sub_a/test_quick.py",
      [
        "test_quick"
      ]
    ]
  ],
  "test_something": [
    [
      "doc/en/example/costlysetup/sub_b/test_two.py",
      [
        "test_something"
      ]
    ]
  ],
  "test_something_more": [
    [
      "doc/en/example/costlysetup/sub_b/test_two.py",
      [
        "test_something_more"
      ]
    ]
  ],
  "s1": [
    [
      "doc/en/example/fixtures/test_fixtures_order.py",
      [
        "s1"
      ]
    ]
  ],
  "m1": [
    [
      "doc/en/example/fixtures/test_fixtures_order.py",
      [
        "m1"
      ]
    ]
  ],
  "f1": [
    [
      "doc/en/example/fixtures/test_fixtures_order.py",
      [
        "f1"
      ]
    ]
  ],
  "f3": [
    [
      "doc/en/example/fixtures/test_fixtures_order.py",
      [
        "f3"
      ]
    ]
  ],
  "a1": [
    [
      "doc/en/example/fixtures/test_fixtures_order.py",
      [
        "a1"
      ]
    ]
  ],
  "f2": [
    [
      "doc/en/example/fixtures/test_fixtures_order.py",
      [
        "f2"
      ]
    ]
  ],
  "test_order": [
    [
      "doc/en/example/fixtures/test_fixtures_order.py",
      [
        "test_order"
      ]
    ]
  ],
  "python1": [
    [
      "doc/en/example/multipython.py",
      [
        "python1"
      ]
    ]
  ],
  "python2": [
    [
      "doc/en/example/multipython.py",
      [
        "python2"
      ]
    ]
  ],
  "dumps": [
    [
      "doc/en/example/multipython.py",
      [
        "Python",
        "dumps"
      ]
    ]
  ],
  "load_and_is_true": [
    [
      "doc/en/example/multipython.py",
      [
        "Python",
        "load_and_is_true"
      ]
    ]
  ],
  "test_basic_objects": [
    [
      "doc/en/example/multipython.py",
      [
        "test_basic_objects"
      ]
    ]
  ],
  "pytest_collect_file": [
    [
      "doc/en/example/nonpython/conftest.py",
      [
        "pytest_collect_file"
      ]
    ],
    [
      "src/_pytest/doctest.py",
      [
        "pytest_collect_file"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_collect_file"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "pytest_collect_file"
      ]
    ],
    [
      "testing/example_scripts/fixtures/custom_item/conftest.py",
      [
        "pytest_collect_file"
      ]
    ],
    [
      "testing/example_scripts/issue88_initial_file_multinodes/conftest.py",
      [
        "pytest_collect_file"
      ]
    ]
  ],
  "collect": [
    [
      "doc/en/example/nonpython/conftest.py",
      [
        "YamlFile",
        "collect"
      ]
    ],
    [
      "doc/en/example/py2py3/conftest.py",
      [
        "DummyCollector",
        "collect"
      ]
    ],
    [
      "src/_pytest/doctest.py",
      [
        "DoctestTextfile",
        "collect"
      ]
    ],
    [
      "src/_pytest/doctest.py",
      [
        "DoctestModule",
        "collect"
      ]
    ],
    [
      "src/_pytest/main.py",
      [
        "Session",
        "collect"
      ]
    ],
    [
      "src/_pytest/nodes.py",
      [
        "Collector",
        "collect"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "PyCollector",
        "collect"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "Module",
        "collect"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "Package",
        "collect"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "Class",
        "collect"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "Instance",
        "collect"
      ]
    ],
    [
      "src/_pytest/unittest.py",
      [
        "UnitTestCase",
        "collect"
      ]
    ],
    [
      "testing/example_scripts/issue88_initial_file_multinodes/conftest.py",
      [
        "MyFile",
        "collect"
      ]
    ]
  ],
  "runtest": [
    [
      "doc/en/example/nonpython/conftest.py",
      [
        "YamlItem",
        "runtest"
      ]
    ],
    [
      "src/_pytest/doctest.py",
      [
        "DoctestItem",
        "runtest"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "Function",
        "runtest"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "FunctionDefinition",
        "runtest"
      ]
    ],
    [
      "src/_pytest/unittest.py",
      [
        "TestCaseFunction",
        "runtest"
      ]
    ],
    [
      "testing/example_scripts/fixtures/custom_item/conftest.py",
      [
        "CustomItem",
        "runtest"
      ]
    ],
    [
      "testing/test_runner.py",
      [
        "test_store_except_info_on_error",
        "ItemMightRaise",
        "runtest"
      ]
    ]
  ],
  "repr_failure": [
    [
      "doc/en/example/nonpython/conftest.py",
      [
        "YamlItem",
        "repr_failure"
      ]
    ],
    [
      "src/_pytest/doctest.py",
      [
        "DoctestItem",
        "repr_failure"
      ]
    ],
    [
      "src/_pytest/nodes.py",
      [
        "Node",
        "repr_failure"
      ]
    ],
    [
      "src/_pytest/nodes.py",
      [
        "Collector",
        "repr_failure"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "FunctionMixin",
        "repr_failure"
      ]
    ]
  ],
  "reportinfo": [
    [
      "doc/en/example/nonpython/conftest.py",
      [
        "YamlItem",
        "reportinfo"
      ]
    ],
    [
      "src/_pytest/doctest.py",
      [
        "DoctestItem",
        "reportinfo"
      ]
    ],
    [
      "src/_pytest/nodes.py",
      [
        "Item",
        "reportinfo"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "PyobjMixin",
        "reportinfo"
      ]
    ]
  ],
  "pytest_pycollect_makemodule": [
    [
      "doc/en/example/py2py3/conftest.py",
      [
        "pytest_pycollect_makemodule"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_pycollect_makemodule"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "pytest_pycollect_makemodule"
      ]
    ]
  ],
  "test_exception_syntax": [
    [
      "doc/en/example/py2py3/test_py2.py",
      [
        "test_exception_syntax"
      ]
    ],
    [
      "doc/en/example/py2py3/test_py3.py",
      [
        "test_exception_syntax"
      ]
    ]
  ],
  "test_function": [
    [
      "doc/en/example/pythoncollection.py",
      [
        "test_function"
      ]
    ],
    [
      "testing/test_recwarn.py",
      [
        "TestWarns",
        "test_function"
      ]
    ]
  ],
  "test_method": [
    [
      "doc/en/example/pythoncollection.py",
      [
        "TestClass",
        "test_method"
      ]
    ],
    [
      "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_classlevel.py",
      [
        "TestClass",
        "test_method"
      ]
    ],
    [
      "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_modulelevel.py",
      [
        "TestClass",
        "test_method"
      ]
    ]
  ],
  "test_anothermethod": [
    [
      "doc/en/example/pythoncollection.py",
      [
        "TestClass",
        "test_anothermethod"
      ]
    ]
  ],
  "test_hello": [
    [
      "doc/en/example/xfail_demo.py",
      [
        "test_hello"
      ]
    ],
    [
      "testing/example_scripts/issue88_initial_file_multinodes/test_hello.py",
      [
        "test_hello"
      ]
    ]
  ],
  "test_hello2": [
    [
      "doc/en/example/xfail_demo.py",
      [
        "test_hello2"
      ]
    ]
  ],
  "test_hello3": [
    [
      "doc/en/example/xfail_demo.py",
      [
        "test_hello3"
      ]
    ]
  ],
  "test_hello4": [
    [
      "doc/en/example/xfail_demo.py",
      [
        "test_hello4"
      ]
    ]
  ],
  "test_hello5": [
    [
      "doc/en/example/xfail_demo.py",
      [
        "test_hello5"
      ]
    ]
  ],
  "test_hello6": [
    [
      "doc/en/example/xfail_demo.py",
      [
        "test_hello6"
      ]
    ]
  ],
  "test_hello7": [
    [
      "doc/en/example/xfail_demo.py",
      [
        "test_hello7"
      ]
    ]
  ],
  "get_issues": [
    [
      "extra/get_issues.py",
      [
        "get_issues"
      ]
    ]
  ],
  "main": [
    [
      "extra/get_issues.py",
      [
        "main"
      ]
    ],
    [
      "scripts/publish_gh_release_notes.py",
      [
        "main"
      ]
    ],
    [
      "scripts/release.py",
      [
        "main"
      ]
    ],
    [
      "setup.py",
      [
        "main"
      ]
    ],
    [
      "src/_pytest/config/__init__.py",
      [
        "main"
      ]
    ]
  ],
  "_get_kind": [
    [
      "extra/get_issues.py",
      [
        "_get_kind"
      ]
    ]
  ],
  "report": [
    [
      "extra/get_issues.py",
      [
        "report"
      ]
    ]
  ],
  "publish_github_release": [
    [
      "scripts/publish_gh_release_notes.py",
      [
        "publish_github_release"
      ]
    ]
  ],
  "parse_changelog": [
    [
      "scripts/publish_gh_release_notes.py",
      [
        "parse_changelog"
      ]
    ]
  ],
  "convert_rst_to_md": [
    [
      "scripts/publish_gh_release_notes.py",
      [
        "convert_rst_to_md"
      ]
    ]
  ],
  "announce": [
    [
      "scripts/release.py",
      [
        "announce"
      ]
    ]
  ],
  "regen": [
    [
      "scripts/release.py",
      [
        "regen"
      ]
    ]
  ],
  "fix_formatting": [
    [
      "scripts/release.py",
      [
        "fix_formatting"
      ]
    ]
  ],
  "pre_release": [
    [
      "scripts/release.py",
      [
        "pre_release"
      ]
    ]
  ],
  "changelog": [
    [
      "scripts/release.py",
      [
        "changelog"
      ]
    ]
  ],
  "__call__": [
    [
      "src/_pytest/_argcomplete.py",
      [
        "FastFilesCompleter",
        "__call__"
      ]
    ],
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureFunctionMarker",
        "__call__"
      ]
    ],
    [
      "src/_pytest/helpconfig.py",
      [
        "HelpAction",
        "__call__"
      ]
    ],
    [
      "src/_pytest/mark/structures.py",
      [
        "MarkDecorator",
        "__call__"
      ]
    ],
    [
      "src/_pytest/terminal.py",
      [
        "MoreQuietAction",
        "__call__"
      ]
    ],
    [
      "testing/python/raises.py",
      [
        "TestRaises",
        "test_raises_cyclic_reference",
        "T",
        "__call__"
      ]
    ],
    [
      "testing/test_argcomplete.py",
      [
        "FilesCompleter",
        "__call__"
      ]
    ]
  ],
  "__eq__": [
    [
      "src/_pytest/_code/code.py",
      [
        "Code",
        "__eq__"
      ]
    ],
    [
      "src/_pytest/_code/source.py",
      [
        "Source",
        "__eq__"
      ]
    ],
    [
      "src/_pytest/mark/structures.py",
      [
        "MarkDecorator",
        "__eq__"
      ]
    ],
    [
      "src/_pytest/python_api.py",
      [
        "ApproxBase",
        "__eq__"
      ]
    ],
    [
      "src/_pytest/python_api.py",
      [
        "ApproxNumpy",
        "__eq__"
      ]
    ],
    [
      "src/_pytest/python_api.py",
      [
        "ApproxMapping",
        "__eq__"
      ]
    ],
    [
      "src/_pytest/python_api.py",
      [
        "ApproxSequencelike",
        "__eq__"
      ]
    ],
    [
      "src/_pytest/python_api.py",
      [
        "ApproxScalar",
        "__eq__"
      ]
    ],
    [
      "testing/code/test_excinfo.py",
      [
        "test_exception_repr_extraction_error_on_recursion",
        "numpy_like",
        "__eq__"
      ]
    ]
  ],
  "__ne__": [
    [
      "src/_pytest/_code/code.py",
      [
        "Code",
        "__ne__"
      ]
    ],
    [
      "src/_pytest/python_api.py",
      [
        "ApproxBase",
        "__ne__"
      ]
    ]
  ],
  "path": [
    [
      "src/_pytest/_code/code.py",
      [
        "Code",
        "path"
      ]
    ],
    [
      "src/_pytest/_code/code.py",
      [
        "TracebackEntry",
        "path"
      ]
    ],
    [
      "testing/test_pytester.py",
      [
        "TestSysPathsSnapshot",
        "path"
      ]
    ]
  ],
  "fullsource": [
    [
      "src/_pytest/_code/code.py",
      [
        "Code",
        "fullsource"
      ]
    ],
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_repr_source_failing_fullsource",
        "FakeCode",
        "fullsource"
      ]
    ]
  ],
  "source": [
    [
      "src/_pytest/_code/code.py",
      [
        "Code",
        "source"
      ]
    ]
  ],
  "getargs": [
    [
      "src/_pytest/_code/code.py",
      [
        "Code",
        "getargs"
      ]
    ],
    [
      "src/_pytest/_code/code.py",
      [
        "Frame",
        "getargs"
      ]
    ]
  ],
  "statement": [
    [
      "src/_pytest/_code/code.py",
      [
        "Frame",
        "statement"
      ]
    ],
    [
      "src/_pytest/_code/code.py",
      [
        "TracebackEntry",
        "statement"
      ]
    ]
  ],
  "eval": [
    [
      "src/_pytest/_code/code.py",
      [
        "Frame",
        "eval"
      ]
    ]
  ],
  "exec_": [
    [
      "src/_pytest/_code/code.py",
      [
        "Frame",
        "exec_"
      ]
    ]
  ],
  "repr": [
    [
      "src/_pytest/_code/code.py",
      [
        "Frame",
        "repr"
      ]
    ],
    [
      "src/_pytest/_io/saferepr.py",
      [
        "SafeRepr",
        "repr"
      ]
    ]
  ],
  "is_true": [
    [
      "src/_pytest/_code/code.py",
      [
        "Frame",
        "is_true"
      ]
    ]
  ],
  "set_repr_style": [
    [
      "src/_pytest/_code/code.py",
      [
        "TracebackEntry",
        "set_repr_style"
      ]
    ]
  ],
  "frame": [
    [
      "src/_pytest/_code/code.py",
      [
        "TracebackEntry",
        "frame"
      ]
    ],
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_repr_source_failing_fullsource",
        "FakeTracebackEntry",
        "frame"
      ]
    ]
  ],
  "relline": [
    [
      "src/_pytest/_code/code.py",
      [
        "TracebackEntry",
        "relline"
      ]
    ]
  ],
  "__repr__": [
    [
      "src/_pytest/_code/code.py",
      [
        "TracebackEntry",
        "__repr__"
      ]
    ],
    [
      "src/_pytest/_code/code.py",
      [
        "ExceptionInfo",
        "__repr__"
      ]
    ],
    [
      "src/_pytest/_code/code.py",
      [
        "TerminalRepr",
        "__repr__"
      ]
    ],
    [
      "src/_pytest/capture.py",
      [
        "CaptureManager",
        "__repr__"
      ]
    ],
    [
      "src/_pytest/capture.py",
      [
        "MultiCapture",
        "__repr__"
      ]
    ],
    [
      "src/_pytest/capture.py",
      [
        "FDCaptureBinary",
        "__repr__"
      ]
    ],
    [
      "src/_pytest/capture.py",
      [
        "SysCapture",
        "__repr__"
      ]
    ],
    [
      "src/_pytest/config/__init__.py",
      [
        "Notset",
        "__repr__"
      ]
    ],
    [
      "src/_pytest/config/argparsing.py",
      [
        "Argument",
        "__repr__"
      ]
    ],
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureRequest",
        "__repr__"
      ]
    ],
    [
      "src/_pytest/fixtures.py",
      [
        "SubRequest",
        "__repr__"
      ]
    ],
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureDef",
        "__repr__"
      ]
    ],
    [
      "src/_pytest/main.py",
      [
        "Session",
        "__repr__"
      ]
    ],
    [
      "src/_pytest/mark/structures.py",
      [
        "MarkDecorator",
        "__repr__"
      ]
    ],
    [
      "src/_pytest/mark/structures.py",
      [
        "NodeKeywords",
        "__repr__"
      ]
    ],
    [
      "src/_pytest/monkeypatch.py",
      [
        "Notset",
        "__repr__"
      ]
    ],
    [
      "src/_pytest/nodes.py",
      [
        "Node",
        "__repr__"
      ]
    ],
    [
      "src/_pytest/outcomes.py",
      [
        "OutcomeException",
        "__repr__"
      ]
    ],
    [
      "src/_pytest/pytester.py",
      [
        "ParsedCall",
        "__repr__"
      ]
    ],
    [
      "src/_pytest/pytester.py",
      [
        "RunResult",
        "__repr__"
      ]
    ],
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "__repr__"
      ]
    ],
    [
      "src/_pytest/python_api.py",
      [
        "ApproxBase",
        "__repr__"
      ]
    ],
    [
      "src/_pytest/python_api.py",
      [
        "ApproxNumpy",
        "__repr__"
      ]
    ],
    [
      "src/_pytest/python_api.py",
      [
        "ApproxMapping",
        "__repr__"
      ]
    ],
    [
      "src/_pytest/python_api.py",
      [
        "ApproxSequencelike",
        "__repr__"
      ]
    ],
    [
      "src/_pytest/python_api.py",
      [
        "ApproxScalar",
        "__repr__"
      ]
    ],
    [
      "src/_pytest/reports.py",
      [
        "TestReport",
        "__repr__"
      ]
    ],
    [
      "src/_pytest/reports.py",
      [
        "CollectReport",
        "__repr__"
      ]
    ],
    [
      "src/_pytest/runner.py",
      [
        "CallInfo",
        "__repr__"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_dont_rewrite_if_hasattr_fails",
        "Y",
        "__repr__"
      ]
    ],
    [
      "testing/test_junitxml.py",
      [
        "DomNode",
        "__repr__"
      ]
    ]
  ],
  "locals": [
    [
      "src/_pytest/_code/code.py",
      [
        "TracebackEntry",
        "locals"
      ]
    ]
  ],
  "getfirstlinesource": [
    [
      "src/_pytest/_code/code.py",
      [
        "TracebackEntry",
        "getfirstlinesource"
      ]
    ]
  ],
  "getsource": [
    [
      "src/_pytest/_code/code.py",
      [
        "TracebackEntry",
        "getsource"
      ]
    ],
    [
      "src/_pytest/_code/source.py",
      [
        "getsource"
      ]
    ]
  ],
  "ishidden": [
    [
      "src/_pytest/_code/code.py",
      [
        "TracebackEntry",
        "ishidden"
      ]
    ]
  ],
  "__str__": [
    [
      "src/_pytest/_code/code.py",
      [
        "TracebackEntry",
        "__str__"
      ]
    ],
    [
      "src/_pytest/_code/code.py",
      [
        "TerminalRepr",
        "__str__"
      ]
    ],
    [
      "src/_pytest/_code/code.py",
      [
        "ReprEntry",
        "__str__"
      ]
    ],
    [
      "src/_pytest/_code/source.py",
      [
        "Source",
        "__str__"
      ]
    ],
    [
      "src/_pytest/config/argparsing.py",
      [
        "ArgumentError",
        "__str__"
      ]
    ],
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "__str__"
      ]
    ]
  ],
  "name": [
    [
      "src/_pytest/_code/code.py",
      [
        "TracebackEntry",
        "name"
      ]
    ],
    [
      "src/_pytest/capture.py",
      [
        "EncodedFile",
        "name"
      ]
    ]
  ],
  "cut": [
    [
      "src/_pytest/_code/code.py",
      [
        "Traceback",
        "cut"
      ]
    ]
  ],
  "__getitem__": [
    [
      "src/_pytest/_code/code.py",
      [
        "Traceback",
        "__getitem__"
      ]
    ],
    [
      "src/_pytest/_code/source.py",
      [
        "Source",
        "__getitem__"
      ]
    ],
    [
      "src/_pytest/mark/legacy.py",
      [
        "MarkMapping",
        "__getitem__"
      ]
    ],
    [
      "src/_pytest/mark/legacy.py",
      [
        "KeywordMapping",
        "__getitem__"
      ]
    ],
    [
      "src/_pytest/mark/structures.py",
      [
        "NodeKeywords",
        "__getitem__"
      ]
    ],
    [
      "src/_pytest/recwarn.py",
      [
        "WarningsRecorder",
        "__getitem__"
      ]
    ],
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_Sequence",
        "TestSequence",
        "__getitem__"
      ]
    ],
    [
      "testing/test_junitxml.py",
      [
        "DomNode",
        "__getitem__"
      ]
    ]
  ],
  "filter": [
    [
      "src/_pytest/_code/code.py",
      [
        "Traceback",
        "filter"
      ]
    ]
  ],
  "getcrashentry": [
    [
      "src/_pytest/_code/code.py",
      [
        "Traceback",
        "getcrashentry"
      ]
    ]
  ],
  "recursionindex": [
    [
      "src/_pytest/_code/code.py",
      [
        "Traceback",
        "recursionindex"
      ]
    ]
  ],
  "from_exc_info": [
    [
      "src/_pytest/_code/code.py",
      [
        "ExceptionInfo",
        "from_exc_info"
      ]
    ]
  ],
  "from_current": [
    [
      "src/_pytest/_code/code.py",
      [
        "ExceptionInfo",
        "from_current"
      ]
    ]
  ],
  "for_later": [
    [
      "src/_pytest/_code/code.py",
      [
        "ExceptionInfo",
        "for_later"
      ]
    ]
  ],
  "fill_unfilled": [
    [
      "src/_pytest/_code/code.py",
      [
        "ExceptionInfo",
        "fill_unfilled"
      ]
    ]
  ],
  "type": [
    [
      "src/_pytest/_code/code.py",
      [
        "ExceptionInfo",
        "type"
      ]
    ]
  ],
  "value": [
    [
      "src/_pytest/_code/code.py",
      [
        "ExceptionInfo",
        "value"
      ]
    ]
  ],
  "tb": [
    [
      "src/_pytest/_code/code.py",
      [
        "ExceptionInfo",
        "tb"
      ]
    ]
  ],
  "typename": [
    [
      "src/_pytest/_code/code.py",
      [
        "ExceptionInfo",
        "typename"
      ]
    ]
  ],
  "traceback": [
    [
      "src/_pytest/_code/code.py",
      [
        "ExceptionInfo",
        "traceback"
      ]
    ]
  ],
  "traceback_9": [
    [
      "src/_pytest/_code/code.py",
      [
        "ExceptionInfo",
        "traceback_9"
      ]
    ]
  ],
  "exconly": [
    [
      "src/_pytest/_code/code.py",
      [
        "ExceptionInfo",
        "exconly"
      ]
    ],
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_repr_source_failing_fullsource",
        "FakeExcinfo",
        "exconly"
      ]
    ]
  ],
  "errisinstance": [
    [
      "src/_pytest/_code/code.py",
      [
        "ExceptionInfo",
        "errisinstance"
      ]
    ],
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_repr_source_failing_fullsource",
        "FakeExcinfo",
        "errisinstance"
      ]
    ]
  ],
  "_getreprcrash": [
    [
      "src/_pytest/_code/code.py",
      [
        "ExceptionInfo",
        "_getreprcrash"
      ]
    ]
  ],
  "getrepr": [
    [
      "src/_pytest/_code/code.py",
      [
        "ExceptionInfo",
        "getrepr"
      ]
    ]
  ],
  "match": [
    [
      "src/_pytest/_code/code.py",
      [
        "ExceptionInfo",
        "match"
      ]
    ],
    [
      "testing/test_pathlib.py",
      [
        "TestPort",
        "match"
      ]
    ]
  ],
  "_getindent": [
    [
      "src/_pytest/_code/code.py",
      [
        "FormattedExcinfo",
        "_getindent"
      ]
    ]
  ],
  "_getentrysource": [
    [
      "src/_pytest/_code/code.py",
      [
        "FormattedExcinfo",
        "_getentrysource"
      ]
    ]
  ],
  "repr_args": [
    [
      "src/_pytest/_code/code.py",
      [
        "FormattedExcinfo",
        "repr_args"
      ]
    ]
  ],
  "get_source": [
    [
      "src/_pytest/_code/code.py",
      [
        "FormattedExcinfo",
        "get_source"
      ]
    ]
  ],
  "get_exconly": [
    [
      "src/_pytest/_code/code.py",
      [
        "FormattedExcinfo",
        "get_exconly"
      ]
    ]
  ],
  "repr_locals": [
    [
      "src/_pytest/_code/code.py",
      [
        "FormattedExcinfo",
        "repr_locals"
      ]
    ]
  ],
  "repr_traceback_entry": [
    [
      "src/_pytest/_code/code.py",
      [
        "FormattedExcinfo",
        "repr_traceback_entry"
      ]
    ]
  ],
  "_makepath": [
    [
      "src/_pytest/_code/code.py",
      [
        "FormattedExcinfo",
        "_makepath"
      ]
    ]
  ],
  "repr_traceback": [
    [
      "src/_pytest/_code/code.py",
      [
        "FormattedExcinfo",
        "repr_traceback"
      ]
    ]
  ],
  "_truncate_recursive_traceback": [
    [
      "src/_pytest/_code/code.py",
      [
        "FormattedExcinfo",
        "_truncate_recursive_traceback"
      ]
    ]
  ],
  "repr_excinfo": [
    [
      "src/_pytest/_code/code.py",
      [
        "FormattedExcinfo",
        "repr_excinfo"
      ]
    ]
  ],
  "addsection": [
    [
      "src/_pytest/_code/code.py",
      [
        "ExceptionRepr",
        "addsection"
      ]
    ]
  ],
  "toterminal": [
    [
      "src/_pytest/_code/code.py",
      [
        "ExceptionRepr",
        "toterminal"
      ]
    ],
    [
      "src/_pytest/_code/code.py",
      [
        "ExceptionChainRepr",
        "toterminal"
      ]
    ],
    [
      "src/_pytest/_code/code.py",
      [
        "ReprExceptionInfo",
        "toterminal"
      ]
    ],
    [
      "src/_pytest/_code/code.py",
      [
        "ReprTraceback",
        "toterminal"
      ]
    ],
    [
      "src/_pytest/_code/code.py",
      [
        "ReprEntryNative",
        "toterminal"
      ]
    ],
    [
      "src/_pytest/_code/code.py",
      [
        "ReprEntry",
        "toterminal"
      ]
    ],
    [
      "src/_pytest/_code/code.py",
      [
        "ReprFileLocation",
        "toterminal"
      ]
    ],
    [
      "src/_pytest/_code/code.py",
      [
        "ReprLocals",
        "toterminal"
      ]
    ],
    [
      "src/_pytest/_code/code.py",
      [
        "ReprFuncArgs",
        "toterminal"
      ]
    ],
    [
      "src/_pytest/doctest.py",
      [
        "ReprFailDoctest",
        "toterminal"
      ]
    ],
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureLookupErrorRepr",
        "toterminal"
      ]
    ],
    [
      "src/_pytest/reports.py",
      [
        "BaseReport",
        "toterminal"
      ]
    ],
    [
      "src/_pytest/reports.py",
      [
        "CollectErrorRepr",
        "toterminal"
      ]
    ]
  ],
  "getrawcode": [
    [
      "src/_pytest/_code/code.py",
      [
        "getrawcode"
      ]
    ]
  ],
  "filter_traceback": [
    [
      "src/_pytest/_code/code.py",
      [
        "filter_traceback"
      ]
    ]
  ],
  "__len__": [
    [
      "src/_pytest/_code/source.py",
      [
        "Source",
        "__len__"
      ]
    ],
    [
      "src/_pytest/mark/structures.py",
      [
        "NodeKeywords",
        "__len__"
      ]
    ],
    [
      "src/_pytest/recwarn.py",
      [
        "WarningsRecorder",
        "__len__"
      ]
    ],
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_Sequence",
        "TestSequence",
        "__len__"
      ]
    ]
  ],
  "strip": [
    [
      "src/_pytest/_code/source.py",
      [
        "Source",
        "strip"
      ]
    ]
  ],
  "putaround": [
    [
      "src/_pytest/_code/source.py",
      [
        "Source",
        "putaround"
      ]
    ]
  ],
  "indent": [
    [
      "src/_pytest/_code/source.py",
      [
        "Source",
        "indent"
      ]
    ]
  ],
  "getstatement": [
    [
      "src/_pytest/_code/source.py",
      [
        "Source",
        "getstatement"
      ]
    ],
    [
      "testing/code/test_source.py",
      [
        "getstatement"
      ]
    ]
  ],
  "getstatementrange": [
    [
      "src/_pytest/_code/source.py",
      [
        "Source",
        "getstatementrange"
      ]
    ]
  ],
  "deindent": [
    [
      "src/_pytest/_code/source.py",
      [
        "Source",
        "deindent"
      ]
    ],
    [
      "src/_pytest/_code/source.py",
      [
        "deindent"
      ]
    ]
  ],
  "isparseable": [
    [
      "src/_pytest/_code/source.py",
      [
        "Source",
        "isparseable"
      ]
    ]
  ],
  "compile": [
    [
      "src/_pytest/_code/source.py",
      [
        "Source",
        "compile"
      ]
    ]
  ],
  "compile_": [
    [
      "src/_pytest/_code/source.py",
      [
        "compile_"
      ]
    ]
  ],
  "getfslineno": [
    [
      "src/_pytest/_code/source.py",
      [
        "getfslineno"
      ]
    ],
    [
      "src/_pytest/compat.py",
      [
        "getfslineno"
      ]
    ]
  ],
  "findsource": [
    [
      "src/_pytest/_code/source.py",
      [
        "findsource"
      ]
    ],
    [
      "testing/test_runner.py",
      [
        "test_makereport_getsource_dynamic_code",
        "findsource"
      ]
    ]
  ],
  "get_statement_startend2": [
    [
      "src/_pytest/_code/source.py",
      [
        "get_statement_startend2"
      ]
    ]
  ],
  "getstatementrange_ast": [
    [
      "src/_pytest/_code/source.py",
      [
        "getstatementrange_ast"
      ]
    ]
  ],
  "_format_repr_exception": [
    [
      "src/_pytest/_io/saferepr.py",
      [
        "_format_repr_exception"
      ]
    ]
  ],
  "_ellipsize": [
    [
      "src/_pytest/_io/saferepr.py",
      [
        "_ellipsize"
      ]
    ]
  ],
  "repr_instance": [
    [
      "src/_pytest/_io/saferepr.py",
      [
        "SafeRepr",
        "repr_instance"
      ]
    ]
  ],
  "safeformat": [
    [
      "src/_pytest/_io/saferepr.py",
      [
        "safeformat"
      ]
    ]
  ],
  "saferepr": [
    [
      "src/_pytest/_io/saferepr.py",
      [
        "saferepr"
      ]
    ]
  ],
  "pytest_addoption": [
    [
      "src/_pytest/assertion/__init__.py",
      [
        "pytest_addoption"
      ]
    ],
    [
      "src/_pytest/cacheprovider.py",
      [
        "pytest_addoption"
      ]
    ],
    [
      "src/_pytest/capture.py",
      [
        "pytest_addoption"
      ]
    ],
    [
      "src/_pytest/debugging.py",
      [
        "pytest_addoption"
      ]
    ],
    [
      "src/_pytest/doctest.py",
      [
        "pytest_addoption"
      ]
    ],
    [
      "src/_pytest/faulthandler.py",
      [
        "pytest_addoption"
      ]
    ],
    [
      "src/_pytest/fixtures.py",
      [
        "pytest_addoption"
      ]
    ],
    [
      "src/_pytest/helpconfig.py",
      [
        "pytest_addoption"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_addoption"
      ]
    ],
    [
      "src/_pytest/junitxml.py",
      [
        "pytest_addoption"
      ]
    ],
    [
      "src/_pytest/logging.py",
      [
        "pytest_addoption"
      ]
    ],
    [
      "src/_pytest/main.py",
      [
        "pytest_addoption"
      ]
    ],
    [
      "src/_pytest/mark/__init__.py",
      [
        "pytest_addoption"
      ]
    ],
    [
      "src/_pytest/pastebin.py",
      [
        "pytest_addoption"
      ]
    ],
    [
      "src/_pytest/pytester.py",
      [
        "pytest_addoption"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "pytest_addoption"
      ]
    ],
    [
      "src/_pytest/resultlog.py",
      [
        "pytest_addoption"
      ]
    ],
    [
      "src/_pytest/runner.py",
      [
        "pytest_addoption"
      ]
    ],
    [
      "src/_pytest/setuponly.py",
      [
        "pytest_addoption"
      ]
    ],
    [
      "src/_pytest/setupplan.py",
      [
        "pytest_addoption"
      ]
    ],
    [
      "src/_pytest/skipping.py",
      [
        "pytest_addoption"
      ]
    ],
    [
      "src/_pytest/stepwise.py",
      [
        "pytest_addoption"
      ]
    ],
    [
      "src/_pytest/terminal.py",
      [
        "pytest_addoption"
      ]
    ],
    [
      "src/_pytest/warnings.py",
      [
        "pytest_addoption"
      ]
    ]
  ],
  "register_assert_rewrite": [
    [
      "src/_pytest/assertion/__init__.py",
      [
        "register_assert_rewrite"
      ]
    ]
  ],
  "mark_rewrite": [
    [
      "src/_pytest/assertion/__init__.py",
      [
        "DummyRewriteHook",
        "mark_rewrite"
      ]
    ],
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewritingHook",
        "mark_rewrite"
      ]
    ]
  ],
  "install_importhook": [
    [
      "src/_pytest/assertion/__init__.py",
      [
        "install_importhook"
      ]
    ]
  ],
  "pytest_collection": [
    [
      "src/_pytest/assertion/__init__.py",
      [
        "pytest_collection"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_collection"
      ]
    ],
    [
      "src/_pytest/logging.py",
      [
        "LoggingPlugin",
        "pytest_collection"
      ]
    ],
    [
      "src/_pytest/main.py",
      [
        "pytest_collection"
      ]
    ],
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "pytest_collection"
      ]
    ],
    [
      "src/_pytest/warnings.py",
      [
        "pytest_collection"
      ]
    ]
  ],
  "callbinrepr": [
    [
      "src/_pytest/assertion/__init__.py",
      [
        "pytest_runtest_setup",
        "callbinrepr"
      ]
    ]
  ],
  "pytest_runtest_teardown": [
    [
      "src/_pytest/assertion/__init__.py",
      [
        "pytest_runtest_teardown"
      ]
    ],
    [
      "src/_pytest/capture.py",
      [
        "CaptureManager",
        "pytest_runtest_teardown"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_runtest_teardown"
      ]
    ],
    [
      "src/_pytest/logging.py",
      [
        "LoggingPlugin",
        "pytest_runtest_teardown"
      ]
    ],
    [
      "src/_pytest/runner.py",
      [
        "pytest_runtest_teardown"
      ]
    ]
  ],
  "pytest_sessionfinish": [
    [
      "src/_pytest/assertion/__init__.py",
      [
        "pytest_sessionfinish"
      ]
    ],
    [
      "src/_pytest/cacheprovider.py",
      [
        "LFPlugin",
        "pytest_sessionfinish"
      ]
    ],
    [
      "src/_pytest/cacheprovider.py",
      [
        "NFPlugin",
        "pytest_sessionfinish"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_sessionfinish"
      ]
    ],
    [
      "src/_pytest/junitxml.py",
      [
        "LogXML",
        "pytest_sessionfinish"
      ]
    ],
    [
      "src/_pytest/logging.py",
      [
        "LoggingPlugin",
        "pytest_sessionfinish"
      ]
    ],
    [
      "src/_pytest/runner.py",
      [
        "pytest_sessionfinish"
      ]
    ],
    [
      "src/_pytest/stepwise.py",
      [
        "StepwisePlugin",
        "pytest_sessionfinish"
      ]
    ],
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "pytest_sessionfinish"
      ]
    ]
  ],
  "set_session": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewritingHook",
        "set_session"
      ]
    ]
  ],
  "find_spec": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewritingHook",
        "find_spec"
      ]
    ]
  ],
  "create_module": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewritingHook",
        "create_module"
      ]
    ]
  ],
  "exec_module": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewritingHook",
        "exec_module"
      ]
    ]
  ],
  "_early_rewrite_bailout": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewritingHook",
        "_early_rewrite_bailout"
      ]
    ]
  ],
  "_should_rewrite": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewritingHook",
        "_should_rewrite"
      ]
    ]
  ],
  "_is_marked_for_rewrite": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewritingHook",
        "_is_marked_for_rewrite"
      ]
    ]
  ],
  "_warn_already_imported": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewritingHook",
        "_warn_already_imported"
      ]
    ]
  ],
  "get_data": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewritingHook",
        "get_data"
      ]
    ]
  ],
  "_write_pyc": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "_write_pyc"
      ]
    ]
  ],
  "_rewrite_test": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "_rewrite_test"
      ]
    ]
  ],
  "_read_pyc": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "_read_pyc"
      ]
    ]
  ],
  "rewrite_asserts": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "rewrite_asserts"
      ]
    ]
  ],
  "_saferepr": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "_saferepr"
      ]
    ]
  ],
  "_format_assertmsg": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "_format_assertmsg"
      ]
    ]
  ],
  "_should_repr_global_name": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "_should_repr_global_name"
      ]
    ]
  ],
  "_format_boolop": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "_format_boolop"
      ]
    ]
  ],
  "_call_reprcompare": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "_call_reprcompare"
      ]
    ]
  ],
  "_call_assertion_pass": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "_call_assertion_pass"
      ]
    ]
  ],
  "_check_if_assertion_pass_impl": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "_check_if_assertion_pass_impl"
      ]
    ]
  ],
  "set_location": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "set_location"
      ]
    ]
  ],
  "_write_and_reset": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "_get_assertion_exprs",
        "_write_and_reset"
      ]
    ]
  ],
  "_get_assertion_exprs": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "_get_assertion_exprs"
      ]
    ]
  ],
  "_assert_expr_to_lineno": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewriter",
        "_assert_expr_to_lineno"
      ]
    ]
  ],
  "run": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewriter",
        "run"
      ]
    ],
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "run"
      ]
    ]
  ],
  "is_rewrite_disabled": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewriter",
        "is_rewrite_disabled"
      ]
    ]
  ],
  "variable": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewriter",
        "variable"
      ]
    ]
  ],
  "assign": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewriter",
        "assign"
      ]
    ]
  ],
  "display": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewriter",
        "display"
      ]
    ]
  ],
  "helper": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewriter",
        "helper"
      ]
    ]
  ],
  "builtin": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewriter",
        "builtin"
      ]
    ]
  ],
  "explanation_param": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewriter",
        "explanation_param"
      ]
    ]
  ],
  "push_format_context": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewriter",
        "push_format_context"
      ]
    ]
  ],
  "pop_format_context": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewriter",
        "pop_format_context"
      ]
    ]
  ],
  "generic_visit": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewriter",
        "generic_visit"
      ]
    ]
  ],
  "visit_Assert": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewriter",
        "visit_Assert"
      ]
    ]
  ],
  "warn_about_none_ast": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewriter",
        "warn_about_none_ast"
      ]
    ]
  ],
  "visit_Name": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewriter",
        "visit_Name"
      ]
    ]
  ],
  "visit_BoolOp": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewriter",
        "visit_BoolOp"
      ]
    ]
  ],
  "visit_UnaryOp": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewriter",
        "visit_UnaryOp"
      ]
    ]
  ],
  "visit_BinOp": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewriter",
        "visit_BinOp"
      ]
    ]
  ],
  "visit_Call": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewriter",
        "visit_Call"
      ]
    ]
  ],
  "visit_Starred": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewriter",
        "visit_Starred"
      ]
    ]
  ],
  "visit_Attribute": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewriter",
        "visit_Attribute"
      ]
    ]
  ],
  "visit_Compare": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "AssertionRewriter",
        "visit_Compare"
      ]
    ]
  ],
  "try_mkdir": [
    [
      "src/_pytest/assertion/rewrite.py",
      [
        "try_mkdir"
      ]
    ]
  ],
  "truncate_if_required": [
    [
      "src/_pytest/assertion/truncate.py",
      [
        "truncate_if_required"
      ]
    ]
  ],
  "_should_truncate_item": [
    [
      "src/_pytest/assertion/truncate.py",
      [
        "_should_truncate_item"
      ]
    ]
  ],
  "_running_on_ci": [
    [
      "src/_pytest/assertion/truncate.py",
      [
        "_running_on_ci"
      ]
    ]
  ],
  "_truncate_explanation": [
    [
      "src/_pytest/assertion/truncate.py",
      [
        "_truncate_explanation"
      ]
    ]
  ],
  "_truncate_by_char_count": [
    [
      "src/_pytest/assertion/truncate.py",
      [
        "_truncate_by_char_count"
      ]
    ]
  ],
  "format_explanation": [
    [
      "src/_pytest/assertion/util.py",
      [
        "format_explanation"
      ]
    ]
  ],
  "_split_explanation": [
    [
      "src/_pytest/assertion/util.py",
      [
        "_split_explanation"
      ]
    ]
  ],
  "_format_lines": [
    [
      "src/_pytest/assertion/util.py",
      [
        "_format_lines"
      ]
    ]
  ],
  "issequence": [
    [
      "src/_pytest/assertion/util.py",
      [
        "issequence"
      ]
    ]
  ],
  "istext": [
    [
      "src/_pytest/assertion/util.py",
      [
        "istext"
      ]
    ]
  ],
  "isdict": [
    [
      "src/_pytest/assertion/util.py",
      [
        "isdict"
      ]
    ]
  ],
  "isset": [
    [
      "src/_pytest/assertion/util.py",
      [
        "isset"
      ]
    ]
  ],
  "isdatacls": [
    [
      "src/_pytest/assertion/util.py",
      [
        "isdatacls"
      ]
    ]
  ],
  "isattrs": [
    [
      "src/_pytest/assertion/util.py",
      [
        "isattrs"
      ]
    ]
  ],
  "isiterable": [
    [
      "src/_pytest/assertion/util.py",
      [
        "isiterable"
      ]
    ]
  ],
  "assertrepr_compare": [
    [
      "src/_pytest/assertion/util.py",
      [
        "assertrepr_compare"
      ]
    ]
  ],
  "escape_for_readable_diff": [
    [
      "src/_pytest/assertion/util.py",
      [
        "_diff_text",
        "escape_for_readable_diff"
      ]
    ]
  ],
  "_diff_text": [
    [
      "src/_pytest/assertion/util.py",
      [
        "_diff_text"
      ]
    ]
  ],
  "_compare_eq_verbose": [
    [
      "src/_pytest/assertion/util.py",
      [
        "_compare_eq_verbose"
      ]
    ]
  ],
  "_compare_eq_iterable": [
    [
      "src/_pytest/assertion/util.py",
      [
        "_compare_eq_iterable"
      ]
    ]
  ],
  "_compare_eq_sequence": [
    [
      "src/_pytest/assertion/util.py",
      [
        "_compare_eq_sequence"
      ]
    ]
  ],
  "_compare_eq_set": [
    [
      "src/_pytest/assertion/util.py",
      [
        "_compare_eq_set"
      ]
    ]
  ],
  "_compare_eq_dict": [
    [
      "src/_pytest/assertion/util.py",
      [
        "_compare_eq_dict"
      ]
    ]
  ],
  "_compare_eq_cls": [
    [
      "src/_pytest/assertion/util.py",
      [
        "_compare_eq_cls"
      ]
    ]
  ],
  "_notin_text": [
    [
      "src/_pytest/assertion/util.py",
      [
        "_notin_text"
      ]
    ]
  ],
  "for_config": [
    [
      "src/_pytest/cacheprovider.py",
      [
        "Cache",
        "for_config"
      ]
    ]
  ],
  "cache_dir_from_config": [
    [
      "src/_pytest/cacheprovider.py",
      [
        "Cache",
        "cache_dir_from_config"
      ]
    ]
  ],
  "warn": [
    [
      "src/_pytest/cacheprovider.py",
      [
        "Cache",
        "warn"
      ]
    ],
    [
      "src/_pytest/nodes.py",
      [
        "Node",
        "warn"
      ]
    ]
  ],
  "makedir": [
    [
      "src/_pytest/cacheprovider.py",
      [
        "Cache",
        "makedir"
      ]
    ]
  ],
  "_getvaluepath": [
    [
      "src/_pytest/cacheprovider.py",
      [
        "Cache",
        "_getvaluepath"
      ]
    ]
  ],
  "get": [
    [
      "src/_pytest/cacheprovider.py",
      [
        "Cache",
        "get"
      ]
    ],
    [
      "src/_pytest/mark/evaluate.py",
      [
        "MarkEvaluator",
        "get"
      ]
    ],
    [
      "testing/test_tmpdir.py",
      [
        "FakeConfig",
        "get"
      ]
    ]
  ],
  "set": [
    [
      "src/_pytest/cacheprovider.py",
      [
        "Cache",
        "set"
      ]
    ]
  ],
  "_ensure_supporting_files": [
    [
      "src/_pytest/cacheprovider.py",
      [
        "Cache",
        "_ensure_supporting_files"
      ]
    ]
  ],
  "last_failed_paths": [
    [
      "src/_pytest/cacheprovider.py",
      [
        "LFPlugin",
        "last_failed_paths"
      ]
    ]
  ],
  "pytest_ignore_collect": [
    [
      "src/_pytest/cacheprovider.py",
      [
        "LFPlugin",
        "pytest_ignore_collect"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_ignore_collect"
      ]
    ],
    [
      "src/_pytest/main.py",
      [
        "pytest_ignore_collect"
      ]
    ],
    [
      "testing/example_scripts/collect/package_infinite_recursion/conftest.py",
      [
        "pytest_ignore_collect"
      ]
    ]
  ],
  "pytest_report_collectionfinish": [
    [
      "src/_pytest/cacheprovider.py",
      [
        "LFPlugin",
        "pytest_report_collectionfinish"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_report_collectionfinish"
      ]
    ],
    [
      "src/_pytest/stepwise.py",
      [
        "StepwisePlugin",
        "pytest_report_collectionfinish"
      ]
    ]
  ],
  "pytest_runtest_logreport": [
    [
      "src/_pytest/cacheprovider.py",
      [
        "LFPlugin",
        "pytest_runtest_logreport"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_runtest_logreport"
      ]
    ],
    [
      "src/_pytest/junitxml.py",
      [
        "LogXML",
        "pytest_runtest_logreport"
      ]
    ],
    [
      "src/_pytest/logging.py",
      [
        "LoggingPlugin",
        "pytest_runtest_logreport"
      ]
    ],
    [
      "src/_pytest/main.py",
      [
        "Session",
        "pytest_runtest_logreport"
      ]
    ],
    [
      "src/_pytest/resultlog.py",
      [
        "ResultLog",
        "pytest_runtest_logreport"
      ]
    ],
    [
      "src/_pytest/stepwise.py",
      [
        "StepwisePlugin",
        "pytest_runtest_logreport"
      ]
    ],
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "pytest_runtest_logreport"
      ]
    ]
  ],
  "pytest_collectreport": [
    [
      "src/_pytest/cacheprovider.py",
      [
        "LFPlugin",
        "pytest_collectreport"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_collectreport"
      ]
    ],
    [
      "src/_pytest/junitxml.py",
      [
        "LogXML",
        "pytest_collectreport"
      ]
    ],
    [
      "src/_pytest/resultlog.py",
      [
        "ResultLog",
        "pytest_collectreport"
      ]
    ],
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "pytest_collectreport"
      ]
    ]
  ],
  "pytest_collection_modifyitems": [
    [
      "src/_pytest/cacheprovider.py",
      [
        "LFPlugin",
        "pytest_collection_modifyitems"
      ]
    ],
    [
      "src/_pytest/cacheprovider.py",
      [
        "NFPlugin",
        "pytest_collection_modifyitems"
      ]
    ],
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureManager",
        "pytest_collection_modifyitems"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_collection_modifyitems"
      ]
    ],
    [
      "src/_pytest/main.py",
      [
        "pytest_collection_modifyitems"
      ]
    ],
    [
      "src/_pytest/mark/__init__.py",
      [
        "pytest_collection_modifyitems"
      ]
    ],
    [
      "src/_pytest/stepwise.py",
      [
        "StepwisePlugin",
        "pytest_collection_modifyitems"
      ]
    ],
    [
      "testing/conftest.py",
      [
        "pytest_collection_modifyitems"
      ]
    ]
  ],
  "_get_increasing_order": [
    [
      "src/_pytest/cacheprovider.py",
      [
        "NFPlugin",
        "_get_increasing_order"
      ]
    ]
  ],
  "pytest_cmdline_main": [
    [
      "src/_pytest/cacheprovider.py",
      [
        "pytest_cmdline_main"
      ]
    ],
    [
      "src/_pytest/helpconfig.py",
      [
        "pytest_cmdline_main"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_cmdline_main"
      ]
    ],
    [
      "src/_pytest/main.py",
      [
        "pytest_cmdline_main"
      ]
    ],
    [
      "src/_pytest/mark/__init__.py",
      [
        "pytest_cmdline_main"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "pytest_cmdline_main"
      ]
    ],
    [
      "src/_pytest/setuponly.py",
      [
        "pytest_cmdline_main"
      ]
    ],
    [
      "src/_pytest/setupplan.py",
      [
        "pytest_cmdline_main"
      ]
    ]
  ],
  "pytest_configure": [
    [
      "src/_pytest/cacheprovider.py",
      [
        "pytest_configure"
      ]
    ],
    [
      "src/_pytest/config/__init__.py",
      [
        "PytestPluginManager",
        "pytest_configure"
      ]
    ],
    [
      "src/_pytest/debugging.py",
      [
        "pytest_configure"
      ]
    ],
    [
      "src/_pytest/faulthandler.py",
      [
        "pytest_configure"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_configure"
      ]
    ],
    [
      "src/_pytest/junitxml.py",
      [
        "pytest_configure"
      ]
    ],
    [
      "src/_pytest/logging.py",
      [
        "pytest_configure"
      ]
    ],
    [
      "src/_pytest/mark/__init__.py",
      [
        "pytest_configure"
      ]
    ],
    [
      "src/_pytest/pastebin.py",
      [
        "pytest_configure"
      ]
    ],
    [
      "src/_pytest/pytester.py",
      [
        "pytest_configure"
      ]
    ],
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "inline_run",
        "try_",
        "Collect",
        "pytest_configure"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "pytest_configure"
      ]
    ],
    [
      "src/_pytest/resultlog.py",
      [
        "pytest_configure"
      ]
    ],
    [
      "src/_pytest/skipping.py",
      [
        "pytest_configure"
      ]
    ],
    [
      "src/_pytest/stepwise.py",
      [
        "pytest_configure"
      ]
    ],
    [
      "src/_pytest/terminal.py",
      [
        "pytest_configure"
      ]
    ],
    [
      "src/_pytest/tmpdir.py",
      [
        "pytest_configure"
      ]
    ],
    [
      "src/_pytest/warnings.py",
      [
        "pytest_configure"
      ]
    ],
    [
      "testing/example_scripts/conftest_usageerror/conftest.py",
      [
        "pytest_configure"
      ]
    ]
  ],
  "cache": [
    [
      "src/_pytest/cacheprovider.py",
      [
        "cache"
      ]
    ]
  ],
  "pytest_report_header": [
    [
      "src/_pytest/cacheprovider.py",
      [
        "pytest_report_header"
      ]
    ],
    [
      "src/_pytest/helpconfig.py",
      [
        "pytest_report_header"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_report_header"
      ]
    ],
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "pytest_report_header"
      ]
    ]
  ],
  "cacheshow": [
    [
      "src/_pytest/cacheprovider.py",
      [
        "cacheshow"
      ]
    ]
  ],
  "pytest_load_initial_conftests": [
    [
      "src/_pytest/capture.py",
      [
        "pytest_load_initial_conftests"
      ]
    ],
    [
      "src/_pytest/config/__init__.py",
      [
        "Config",
        "pytest_load_initial_conftests"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_load_initial_conftests"
      ]
    ]
  ],
  "_getcapture": [
    [
      "src/_pytest/capture.py",
      [
        "CaptureManager",
        "_getcapture"
      ]
    ]
  ],
  "is_capturing": [
    [
      "src/_pytest/capture.py",
      [
        "CaptureManager",
        "is_capturing"
      ]
    ]
  ],
  "is_globally_capturing": [
    [
      "src/_pytest/capture.py",
      [
        "CaptureManager",
        "is_globally_capturing"
      ]
    ]
  ],
  "start_global_capturing": [
    [
      "src/_pytest/capture.py",
      [
        "CaptureManager",
        "start_global_capturing"
      ]
    ]
  ],
  "stop_global_capturing": [
    [
      "src/_pytest/capture.py",
      [
        "CaptureManager",
        "stop_global_capturing"
      ]
    ]
  ],
  "resume_global_capture": [
    [
      "src/_pytest/capture.py",
      [
        "CaptureManager",
        "resume_global_capture"
      ]
    ]
  ],
  "suspend_global_capture": [
    [
      "src/_pytest/capture.py",
      [
        "CaptureManager",
        "suspend_global_capture"
      ]
    ]
  ],
  "suspend": [
    [
      "src/_pytest/capture.py",
      [
        "CaptureManager",
        "suspend"
      ]
    ],
    [
      "src/_pytest/capture.py",
      [
        "FDCaptureBinary",
        "suspend"
      ]
    ],
    [
      "src/_pytest/capture.py",
      [
        "SysCapture",
        "suspend"
      ]
    ]
  ],
  "resume": [
    [
      "src/_pytest/capture.py",
      [
        "CaptureManager",
        "resume"
      ]
    ],
    [
      "src/_pytest/capture.py",
      [
        "FDCaptureBinary",
        "resume"
      ]
    ],
    [
      "src/_pytest/capture.py",
      [
        "SysCapture",
        "resume"
      ]
    ]
  ],
  "read_global_capture": [
    [
      "src/_pytest/capture.py",
      [
        "CaptureManager",
        "read_global_capture"
      ]
    ]
  ],
  "activate_fixture": [
    [
      "src/_pytest/capture.py",
      [
        "CaptureManager",
        "activate_fixture"
      ]
    ]
  ],
  "deactivate_fixture": [
    [
      "src/_pytest/capture.py",
      [
        "CaptureManager",
        "deactivate_fixture"
      ]
    ]
  ],
  "suspend_fixture": [
    [
      "src/_pytest/capture.py",
      [
        "CaptureManager",
        "suspend_fixture"
      ]
    ]
  ],
  "resume_fixture": [
    [
      "src/_pytest/capture.py",
      [
        "CaptureManager",
        "resume_fixture"
      ]
    ]
  ],
  "global_and_fixture_disabled": [
    [
      "src/_pytest/capture.py",
      [
        "CaptureManager",
        "global_and_fixture_disabled"
      ]
    ],
    [
      "testing/logging/test_reporting.py",
      [
        "test_live_logging_suspends_capture",
        "MockCaptureManager",
        "global_and_fixture_disabled"
      ]
    ]
  ],
  "item_capture": [
    [
      "src/_pytest/capture.py",
      [
        "CaptureManager",
        "item_capture"
      ]
    ]
  ],
  "pytest_make_collect_report": [
    [
      "src/_pytest/capture.py",
      [
        "CaptureManager",
        "pytest_make_collect_report"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_make_collect_report"
      ]
    ],
    [
      "src/_pytest/runner.py",
      [
        "pytest_make_collect_report"
      ]
    ]
  ],
  "pytest_runtest_protocol": [
    [
      "src/_pytest/capture.py",
      [
        "CaptureManager",
        "pytest_runtest_protocol"
      ]
    ],
    [
      "src/_pytest/faulthandler.py",
      [
        "pytest_runtest_protocol"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_runtest_protocol"
      ]
    ],
    [
      "src/_pytest/pytester.py",
      [
        "LsofFdLeakChecker",
        "pytest_runtest_protocol"
      ]
    ],
    [
      "src/_pytest/runner.py",
      [
        "pytest_runtest_protocol"
      ]
    ],
    [
      "src/_pytest/unittest.py",
      [
        "pytest_runtest_protocol"
      ]
    ],
    [
      "src/_pytest/warnings.py",
      [
        "pytest_runtest_protocol"
      ]
    ]
  ],
  "pytest_runtest_call": [
    [
      "src/_pytest/capture.py",
      [
        "CaptureManager",
        "pytest_runtest_call"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_runtest_call"
      ]
    ],
    [
      "src/_pytest/logging.py",
      [
        "LoggingPlugin",
        "pytest_runtest_call"
      ]
    ],
    [
      "src/_pytest/runner.py",
      [
        "pytest_runtest_call"
      ]
    ]
  ],
  "pytest_keyboard_interrupt": [
    [
      "src/_pytest/capture.py",
      [
        "CaptureManager",
        "pytest_keyboard_interrupt"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_keyboard_interrupt"
      ]
    ],
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "pytest_keyboard_interrupt"
      ]
    ]
  ],
  "pytest_internalerror": [
    [
      "src/_pytest/capture.py",
      [
        "CaptureManager",
        "pytest_internalerror"
      ]
    ],
    [
      "src/_pytest/debugging.py",
      [
        "PdbInvoke",
        "pytest_internalerror"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_internalerror"
      ]
    ],
    [
      "src/_pytest/junitxml.py",
      [
        "LogXML",
        "pytest_internalerror"
      ]
    ],
    [
      "src/_pytest/resultlog.py",
      [
        "ResultLog",
        "pytest_internalerror"
      ]
    ],
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "pytest_internalerror"
      ]
    ]
  ],
  "_ensure_only_one_capture_fixture": [
    [
      "src/_pytest/capture.py",
      [
        "_ensure_only_one_capture_fixture"
      ]
    ]
  ],
  "capsys": [
    [
      "src/_pytest/capture.py",
      [
        "capsys"
      ]
    ]
  ],
  "capsysbinary": [
    [
      "src/_pytest/capture.py",
      [
        "capsysbinary"
      ]
    ]
  ],
  "capfd": [
    [
      "src/_pytest/capture.py",
      [
        "capfd"
      ]
    ]
  ],
  "capfdbinary": [
    [
      "src/_pytest/capture.py",
      [
        "capfdbinary"
      ]
    ]
  ],
  "_install_capture_fixture_on_item": [
    [
      "src/_pytest/capture.py",
      [
        "_install_capture_fixture_on_item"
      ]
    ]
  ],
  "_start": [
    [
      "src/_pytest/capture.py",
      [
        "CaptureFixture",
        "_start"
      ]
    ],
    [
      "src/_pytest/capture.py",
      [
        "FDCaptureBinary",
        "_start"
      ]
    ]
  ],
  "close": [
    [
      "src/_pytest/capture.py",
      [
        "CaptureFixture",
        "close"
      ]
    ],
    [
      "src/_pytest/capture.py",
      [
        "DontReadFromInput",
        "close"
      ]
    ]
  ],
  "readouterr": [
    [
      "src/_pytest/capture.py",
      [
        "CaptureFixture",
        "readouterr"
      ]
    ],
    [
      "src/_pytest/capture.py",
      [
        "MultiCapture",
        "readouterr"
      ]
    ]
  ],
  "_suspend": [
    [
      "src/_pytest/capture.py",
      [
        "CaptureFixture",
        "_suspend"
      ]
    ]
  ],
  "_resume": [
    [
      "src/_pytest/capture.py",
      [
        "CaptureFixture",
        "_resume"
      ]
    ]
  ],
  "disabled": [
    [
      "src/_pytest/capture.py",
      [
        "CaptureFixture",
        "disabled"
      ]
    ]
  ],
  "safe_text_dupfile": [
    [
      "src/_pytest/capture.py",
      [
        "safe_text_dupfile"
      ]
    ]
  ],
  "write": [
    [
      "src/_pytest/capture.py",
      [
        "EncodedFile",
        "write"
      ]
    ],
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "write"
      ]
    ],
    [
      "testing/conftest.py",
      [
        "tw_mock",
        "TWMock",
        "write"
      ]
    ]
  ],
  "writelines": [
    [
      "src/_pytest/capture.py",
      [
        "EncodedFile",
        "writelines"
      ]
    ]
  ],
  "mode": [
    [
      "src/_pytest/capture.py",
      [
        "EncodedFile",
        "mode"
      ]
    ],
    [
      "testing/python/setup_only.py",
      [
        "mode"
      ]
    ]
  ],
  "__getattr__": [
    [
      "src/_pytest/capture.py",
      [
        "EncodedFile",
        "__getattr__"
      ]
    ],
    [
      "src/_pytest/main.py",
      [
        "FSHookProxy",
        "__getattr__"
      ]
    ],
    [
      "src/_pytest/mark/structures.py",
      [
        "MarkGenerator",
        "__getattr__"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_dont_rewrite_if_hasattr_fails",
        "Y",
        "__getattr__"
      ]
    ],
    [
      "testing/test_doctest.py",
      [
        "Broken",
        "__getattr__"
      ]
    ]
  ],
  "start_capturing": [
    [
      "src/_pytest/capture.py",
      [
        "MultiCapture",
        "start_capturing"
      ]
    ]
  ],
  "pop_outerr_to_orig": [
    [
      "src/_pytest/capture.py",
      [
        "MultiCapture",
        "pop_outerr_to_orig"
      ]
    ]
  ],
  "suspend_capturing": [
    [
      "src/_pytest/capture.py",
      [
        "MultiCapture",
        "suspend_capturing"
      ]
    ]
  ],
  "resume_capturing": [
    [
      "src/_pytest/capture.py",
      [
        "MultiCapture",
        "resume_capturing"
      ]
    ]
  ],
  "stop_capturing": [
    [
      "src/_pytest/capture.py",
      [
        "MultiCapture",
        "stop_capturing"
      ]
    ]
  ],
  "snap": [
    [
      "src/_pytest/capture.py",
      [
        "FDCaptureBinary",
        "snap"
      ]
    ],
    [
      "src/_pytest/capture.py",
      [
        "FDCapture",
        "snap"
      ]
    ],
    [
      "src/_pytest/capture.py",
      [
        "SysCapture",
        "snap"
      ]
    ],
    [
      "src/_pytest/capture.py",
      [
        "SysCaptureBinary",
        "snap"
      ]
    ]
  ],
  "_done": [
    [
      "src/_pytest/capture.py",
      [
        "FDCaptureBinary",
        "_done"
      ]
    ]
  ],
  "writeorg": [
    [
      "src/_pytest/capture.py",
      [
        "FDCaptureBinary",
        "writeorg"
      ]
    ],
    [
      "src/_pytest/capture.py",
      [
        "SysCapture",
        "writeorg"
      ]
    ]
  ],
  "start": [
    [
      "src/_pytest/capture.py",
      [
        "SysCapture",
        "start"
      ]
    ]
  ],
  "done": [
    [
      "src/_pytest/capture.py",
      [
        "SysCapture",
        "done"
      ]
    ]
  ],
  "read": [
    [
      "src/_pytest/capture.py",
      [
        "DontReadFromInput",
        "read"
      ]
    ]
  ],
  "__iter__": [
    [
      "src/_pytest/capture.py",
      [
        "DontReadFromInput",
        "__iter__"
      ]
    ],
    [
      "src/_pytest/mark/structures.py",
      [
        "NodeKeywords",
        "__iter__"
      ]
    ],
    [
      "src/_pytest/mark/structures.py",
      [
        "NodeMarkers",
        "__iter__"
      ]
    ],
    [
      "src/_pytest/recwarn.py",
      [
        "WarningsRecorder",
        "__iter__"
      ]
    ]
  ],
  "fileno": [
    [
      "src/_pytest/capture.py",
      [
        "DontReadFromInput",
        "fileno"
      ]
    ]
  ],
  "isatty": [
    [
      "src/_pytest/capture.py",
      [
        "DontReadFromInput",
        "isatty"
      ]
    ]
  ],
  "buffer": [
    [
      "src/_pytest/capture.py",
      [
        "DontReadFromInput",
        "buffer"
      ]
    ]
  ],
  "_colorama_workaround": [
    [
      "src/_pytest/capture.py",
      [
        "_colorama_workaround"
      ]
    ]
  ],
  "_readline_workaround": [
    [
      "src/_pytest/capture.py",
      [
        "_readline_workaround"
      ]
    ]
  ],
  "_reopen_stdio": [
    [
      "src/_pytest/capture.py",
      [
        "_py36_windowsconsoleio_workaround",
        "_reopen_stdio"
      ]
    ]
  ],
  "_py36_windowsconsoleio_workaround": [
    [
      "src/_pytest/capture.py",
      [
        "_py36_windowsconsoleio_workaround"
      ]
    ]
  ],
  "_format_args": [
    [
      "src/_pytest/compat.py",
      [
        "_format_args"
      ]
    ]
  ],
  "is_generator": [
    [
      "src/_pytest/compat.py",
      [
        "is_generator"
      ]
    ]
  ],
  "iscoroutinefunction": [
    [
      "src/_pytest/compat.py",
      [
        "iscoroutinefunction"
      ]
    ]
  ],
  "getlocation": [
    [
      "src/_pytest/compat.py",
      [
        "getlocation"
      ]
    ]
  ],
  "num_mock_patch_args": [
    [
      "src/_pytest/compat.py",
      [
        "num_mock_patch_args"
      ]
    ]
  ],
  "getfuncargnames": [
    [
      "src/_pytest/compat.py",
      [
        "getfuncargnames"
      ]
    ]
  ],
  "get_default_arg_names": [
    [
      "src/_pytest/compat.py",
      [
        "get_default_arg_names"
      ]
    ]
  ],
  "_translate_non_printable": [
    [
      "src/_pytest/compat.py",
      [
        "_translate_non_printable"
      ]
    ]
  ],
  "_bytes_to_ascii": [
    [
      "src/_pytest/compat.py",
      [
        "_bytes_to_ascii"
      ]
    ]
  ],
  "ascii_escaped": [
    [
      "src/_pytest/compat.py",
      [
        "ascii_escaped"
      ]
    ]
  ],
  "get_real_func": [
    [
      "src/_pytest/compat.py",
      [
        "get_real_func"
      ]
    ]
  ],
  "get_real_method": [
    [
      "src/_pytest/compat.py",
      [
        "get_real_method"
      ]
    ]
  ],
  "getimfunc": [
    [
      "src/_pytest/compat.py",
      [
        "getimfunc"
      ]
    ]
  ],
  "safe_getattr": [
    [
      "src/_pytest/compat.py",
      [
        "safe_getattr"
      ]
    ]
  ],
  "safe_isclass": [
    [
      "src/_pytest/compat.py",
      [
        "safe_isclass"
      ]
    ]
  ],
  "_setup_collect_fakemodule": [
    [
      "src/_pytest/compat.py",
      [
        "_setup_collect_fakemodule"
      ]
    ]
  ],
  "getvalue": [
    [
      "src/_pytest/compat.py",
      [
        "CaptureIO",
        "getvalue"
      ]
    ],
    [
      "src/_pytest/config/__init__.py",
      [
        "Config",
        "getvalue"
      ]
    ]
  ],
  "funcargnames": [
    [
      "src/_pytest/compat.py",
      [
        "FuncargnamesCompatAttr",
        "funcargnames"
      ]
    ]
  ],
  "filename_arg": [
    [
      "src/_pytest/config/__init__.py",
      [
        "filename_arg"
      ]
    ]
  ],
  "directory_arg": [
    [
      "src/_pytest/config/__init__.py",
      [
        "directory_arg"
      ]
    ]
  ],
  "get_config": [
    [
      "src/_pytest/config/__init__.py",
      [
        "get_config"
      ]
    ]
  ],
  "get_plugin_manager": [
    [
      "src/_pytest/config/__init__.py",
      [
        "get_plugin_manager"
      ]
    ]
  ],
  "_prepareconfig": [
    [
      "src/_pytest/config/__init__.py",
      [
        "_prepareconfig"
      ]
    ]
  ],
  "_fail_on_non_top_pytest_plugins": [
    [
      "src/_pytest/config/__init__.py",
      [
        "_fail_on_non_top_pytest_plugins"
      ]
    ]
  ],
  "parse_hookimpl_opts": [
    [
      "src/_pytest/config/__init__.py",
      [
        "PytestPluginManager",
        "parse_hookimpl_opts"
      ]
    ]
  ],
  "parse_hookspec_opts": [
    [
      "src/_pytest/config/__init__.py",
      [
        "PytestPluginManager",
        "parse_hookspec_opts"
      ]
    ]
  ],
  "register": [
    [
      "src/_pytest/config/__init__.py",
      [
        "PytestPluginManager",
        "register"
      ]
    ]
  ],
  "getplugin": [
    [
      "src/_pytest/config/__init__.py",
      [
        "PytestPluginManager",
        "getplugin"
      ]
    ]
  ],
  "hasplugin": [
    [
      "src/_pytest/config/__init__.py",
      [
        "PytestPluginManager",
        "hasplugin"
      ]
    ]
  ],
  "_set_initial_conftests": [
    [
      "src/_pytest/config/__init__.py",
      [
        "PytestPluginManager",
        "_set_initial_conftests"
      ]
    ]
  ],
  "_try_load_conftest": [
    [
      "src/_pytest/config/__init__.py",
      [
        "PytestPluginManager",
        "_try_load_conftest"
      ]
    ]
  ],
  "_getconftestmodules": [
    [
      "src/_pytest/config/__init__.py",
      [
        "PytestPluginManager",
        "_getconftestmodules"
      ]
    ]
  ],
  "_rget_with_confmod": [
    [
      "src/_pytest/config/__init__.py",
      [
        "PytestPluginManager",
        "_rget_with_confmod"
      ]
    ]
  ],
  "_importconftest": [
    [
      "src/_pytest/config/__init__.py",
      [
        "PytestPluginManager",
        "_importconftest"
      ]
    ]
  ],
  "consider_preparse": [
    [
      "src/_pytest/config/__init__.py",
      [
        "PytestPluginManager",
        "consider_preparse"
      ]
    ]
  ],
  "consider_pluginarg": [
    [
      "src/_pytest/config/__init__.py",
      [
        "PytestPluginManager",
        "consider_pluginarg"
      ]
    ]
  ],
  "consider_conftest": [
    [
      "src/_pytest/config/__init__.py",
      [
        "PytestPluginManager",
        "consider_conftest"
      ]
    ]
  ],
  "consider_env": [
    [
      "src/_pytest/config/__init__.py",
      [
        "PytestPluginManager",
        "consider_env"
      ]
    ]
  ],
  "consider_module": [
    [
      "src/_pytest/config/__init__.py",
      [
        "PytestPluginManager",
        "consider_module"
      ]
    ]
  ],
  "_import_plugin_specs": [
    [
      "src/_pytest/config/__init__.py",
      [
        "PytestPluginManager",
        "_import_plugin_specs"
      ]
    ]
  ],
  "import_plugin": [
    [
      "src/_pytest/config/__init__.py",
      [
        "PytestPluginManager",
        "import_plugin"
      ]
    ]
  ],
  "_get_plugin_specs_as_list": [
    [
      "src/_pytest/config/__init__.py",
      [
        "_get_plugin_specs_as_list"
      ]
    ]
  ],
  "_ensure_removed_sysmodule": [
    [
      "src/_pytest/config/__init__.py",
      [
        "_ensure_removed_sysmodule"
      ]
    ]
  ],
  "_iter_rewritable_modules": [
    [
      "src/_pytest/config/__init__.py",
      [
        "_iter_rewritable_modules"
      ]
    ]
  ],
  "invocation_dir": [
    [
      "src/_pytest/config/__init__.py",
      [
        "Config",
        "invocation_dir"
      ]
    ]
  ],
  "add_cleanup": [
    [
      "src/_pytest/config/__init__.py",
      [
        "Config",
        "add_cleanup"
      ]
    ]
  ],
  "_do_configure": [
    [
      "src/_pytest/config/__init__.py",
      [
        "Config",
        "_do_configure"
      ]
    ]
  ],
  "_ensure_unconfigure": [
    [
      "src/_pytest/config/__init__.py",
      [
        "Config",
        "_ensure_unconfigure"
      ]
    ]
  ],
  "get_terminal_writer": [
    [
      "src/_pytest/config/__init__.py",
      [
        "Config",
        "get_terminal_writer"
      ]
    ]
  ],
  "pytest_cmdline_parse": [
    [
      "src/_pytest/config/__init__.py",
      [
        "Config",
        "pytest_cmdline_parse"
      ]
    ],
    [
      "src/_pytest/helpconfig.py",
      [
        "pytest_cmdline_parse"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_cmdline_parse"
      ]
    ]
  ],
  "notify_exception": [
    [
      "src/_pytest/config/__init__.py",
      [
        "Config",
        "notify_exception"
      ]
    ]
  ],
  "cwd_relative_nodeid": [
    [
      "src/_pytest/config/__init__.py",
      [
        "Config",
        "cwd_relative_nodeid"
      ]
    ]
  ],
  "fromdictargs": [
    [
      "src/_pytest/config/__init__.py",
      [
        "Config",
        "fromdictargs"
      ]
    ]
  ],
  "_processopt": [
    [
      "src/_pytest/config/__init__.py",
      [
        "Config",
        "_processopt"
      ]
    ]
  ],
  "_initini": [
    [
      "src/_pytest/config/__init__.py",
      [
        "Config",
        "_initini"
      ]
    ]
  ],
  "_consider_importhook": [
    [
      "src/_pytest/config/__init__.py",
      [
        "Config",
        "_consider_importhook"
      ]
    ]
  ],
  "_mark_plugins_for_rewrite": [
    [
      "src/_pytest/config/__init__.py",
      [
        "Config",
        "_mark_plugins_for_rewrite"
      ]
    ]
  ],
  "_validate_args": [
    [
      "src/_pytest/config/__init__.py",
      [
        "Config",
        "_validate_args"
      ]
    ]
  ],
  "_preparse": [
    [
      "src/_pytest/config/__init__.py",
      [
        "Config",
        "_preparse"
      ]
    ]
  ],
  "_checkversion": [
    [
      "src/_pytest/config/__init__.py",
      [
        "Config",
        "_checkversion"
      ]
    ]
  ],
  "parse": [
    [
      "src/_pytest/config/__init__.py",
      [
        "Config",
        "parse"
      ]
    ],
    [
      "src/_pytest/config/argparsing.py",
      [
        "Parser",
        "parse"
      ]
    ]
  ],
  "addinivalue_line": [
    [
      "src/_pytest/config/__init__.py",
      [
        "Config",
        "addinivalue_line"
      ]
    ]
  ],
  "getini": [
    [
      "src/_pytest/config/__init__.py",
      [
        "Config",
        "getini"
      ]
    ],
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_unicode_idval_with_config",
        "MockConfig",
        "getini"
      ]
    ],
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_idmaker_with_idfn_and_config",
        "MockConfig",
        "getini"
      ]
    ],
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_idmaker_with_ids_and_config",
        "MockConfig",
        "getini"
      ]
    ]
  ],
  "_getini": [
    [
      "src/_pytest/config/__init__.py",
      [
        "Config",
        "_getini"
      ]
    ]
  ],
  "_getconftest_pathlist": [
    [
      "src/_pytest/config/__init__.py",
      [
        "Config",
        "_getconftest_pathlist"
      ]
    ]
  ],
  "_get_override_ini_value": [
    [
      "src/_pytest/config/__init__.py",
      [
        "Config",
        "_get_override_ini_value"
      ]
    ]
  ],
  "getoption": [
    [
      "src/_pytest/config/__init__.py",
      [
        "Config",
        "getoption"
      ]
    ]
  ],
  "getvalueorskip": [
    [
      "src/_pytest/config/__init__.py",
      [
        "Config",
        "getvalueorskip"
      ]
    ]
  ],
  "_assertion_supported": [
    [
      "src/_pytest/config/__init__.py",
      [
        "_assertion_supported"
      ]
    ]
  ],
  "_warn_about_missing_assertion": [
    [
      "src/_pytest/config/__init__.py",
      [
        "_warn_about_missing_assertion"
      ]
    ]
  ],
  "setns": [
    [
      "src/_pytest/config/__init__.py",
      [
        "setns"
      ]
    ]
  ],
  "create_terminal_writer": [
    [
      "src/_pytest/config/__init__.py",
      [
        "create_terminal_writer"
      ]
    ]
  ],
  "_strtobool": [
    [
      "src/_pytest/config/__init__.py",
      [
        "_strtobool"
      ]
    ]
  ],
  "processoption": [
    [
      "src/_pytest/config/argparsing.py",
      [
        "Parser",
        "processoption"
      ]
    ]
  ],
  "getgroup": [
    [
      "src/_pytest/config/argparsing.py",
      [
        "Parser",
        "getgroup"
      ]
    ]
  ],
  "addoption": [
    [
      "src/_pytest/config/argparsing.py",
      [
        "Parser",
        "addoption"
      ]
    ],
    [
      "src/_pytest/config/argparsing.py",
      [
        "OptionGroup",
        "addoption"
      ]
    ]
  ],
  "_getparser": [
    [
      "src/_pytest/config/argparsing.py",
      [
        "Parser",
        "_getparser"
      ]
    ]
  ],
  "parse_setoption": [
    [
      "src/_pytest/config/argparsing.py",
      [
        "Parser",
        "parse_setoption"
      ]
    ]
  ],
  "parse_known_args": [
    [
      "src/_pytest/config/argparsing.py",
      [
        "Parser",
        "parse_known_args"
      ]
    ]
  ],
  "parse_known_and_unknown_args": [
    [
      "src/_pytest/config/argparsing.py",
      [
        "Parser",
        "parse_known_and_unknown_args"
      ]
    ]
  ],
  "addini": [
    [
      "src/_pytest/config/argparsing.py",
      [
        "Parser",
        "addini"
      ]
    ]
  ],
  "names": [
    [
      "src/_pytest/config/argparsing.py",
      [
        "Argument",
        "names"
      ]
    ]
  ],
  "attrs": [
    [
      "src/_pytest/config/argparsing.py",
      [
        "Argument",
        "attrs"
      ]
    ]
  ],
  "_set_opt_strings": [
    [
      "src/_pytest/config/argparsing.py",
      [
        "Argument",
        "_set_opt_strings"
      ]
    ]
  ],
  "_addoption": [
    [
      "src/_pytest/config/argparsing.py",
      [
        "OptionGroup",
        "_addoption"
      ]
    ]
  ],
  "_addoption_instance": [
    [
      "src/_pytest/config/argparsing.py",
      [
        "OptionGroup",
        "_addoption_instance"
      ]
    ]
  ],
  "error": [
    [
      "src/_pytest/config/argparsing.py",
      [
        "MyOptionParser",
        "error"
      ]
    ]
  ],
  "parse_args": [
    [
      "src/_pytest/config/argparsing.py",
      [
        "MyOptionParser",
        "parse_args"
      ]
    ]
  ],
  "_parse_optional": [
    [
      "src/_pytest/config/argparsing.py",
      [
        "MyOptionParser",
        "if_sys_version_info_2_",
        "_parse_optional"
      ]
    ]
  ],
  "_format_action_invocation": [
    [
      "src/_pytest/config/argparsing.py",
      [
        "DropShorterLongHelpFormatter",
        "_format_action_invocation"
      ]
    ]
  ],
  "exists": [
    [
      "src/_pytest/config/findpaths.py",
      [
        "exists"
      ]
    ]
  ],
  "getcfg": [
    [
      "src/_pytest/config/findpaths.py",
      [
        "getcfg"
      ]
    ]
  ],
  "get_common_ancestor": [
    [
      "src/_pytest/config/findpaths.py",
      [
        "get_common_ancestor"
      ]
    ]
  ],
  "get_dirs_from_args": [
    [
      "src/_pytest/config/findpaths.py",
      [
        "get_dirs_from_args"
      ]
    ]
  ],
  "determine_setup": [
    [
      "src/_pytest/config/findpaths.py",
      [
        "determine_setup"
      ]
    ]
  ],
  "_validate_usepdb_cls": [
    [
      "src/_pytest/debugging.py",
      [
        "_validate_usepdb_cls"
      ]
    ]
  ],
  "_is_capturing": [
    [
      "src/_pytest/debugging.py",
      [
        "pytestPDB",
        "_is_capturing"
      ]
    ]
  ],
  "_import_pdb_cls": [
    [
      "src/_pytest/debugging.py",
      [
        "pytestPDB",
        "_import_pdb_cls"
      ]
    ]
  ],
  "do_debug": [
    [
      "src/_pytest/debugging.py",
      [
        "pytestPDB",
        "_get_pdb_wrapper_class",
        "PytestPdbWrapper",
        "do_debug"
      ]
    ]
  ],
  "do_continue": [
    [
      "src/_pytest/debugging.py",
      [
        "pytestPDB",
        "_get_pdb_wrapper_class",
        "PytestPdbWrapper",
        "do_continue"
      ]
    ]
  ],
  "do_quit": [
    [
      "src/_pytest/debugging.py",
      [
        "pytestPDB",
        "_get_pdb_wrapper_class",
        "PytestPdbWrapper",
        "do_quit"
      ]
    ]
  ],
  "get_stack": [
    [
      "src/_pytest/debugging.py",
      [
        "pytestPDB",
        "_get_pdb_wrapper_class",
        "PytestPdbWrapper",
        "get_stack"
      ]
    ]
  ],
  "_get_pdb_wrapper_class": [
    [
      "src/_pytest/debugging.py",
      [
        "pytestPDB",
        "_get_pdb_wrapper_class"
      ]
    ]
  ],
  "_init_pdb": [
    [
      "src/_pytest/debugging.py",
      [
        "pytestPDB",
        "_init_pdb"
      ]
    ]
  ],
  "set_trace": [
    [
      "src/_pytest/debugging.py",
      [
        "pytestPDB",
        "set_trace"
      ]
    ]
  ],
  "pytest_exception_interact": [
    [
      "src/_pytest/debugging.py",
      [
        "PdbInvoke",
        "pytest_exception_interact"
      ]
    ],
    [
      "src/_pytest/faulthandler.py",
      [
        "pytest_exception_interact"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_exception_interact"
      ]
    ]
  ],
  "pytest_pyfunc_call": [
    [
      "src/_pytest/debugging.py",
      [
        "PdbTrace",
        "pytest_pyfunc_call"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_pyfunc_call"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "pytest_pyfunc_call"
      ]
    ],
    [
      "src/_pytest/skipping.py",
      [
        "pytest_pyfunc_call"
      ]
    ]
  ],
  "_test_pytest_function": [
    [
      "src/_pytest/debugging.py",
      [
        "_test_pytest_function"
      ]
    ]
  ],
  "_enter_pdb": [
    [
      "src/_pytest/debugging.py",
      [
        "_enter_pdb"
      ]
    ]
  ],
  "_postmortem_traceback": [
    [
      "src/_pytest/debugging.py",
      [
        "_postmortem_traceback"
      ]
    ]
  ],
  "post_mortem": [
    [
      "src/_pytest/debugging.py",
      [
        "post_mortem"
      ]
    ]
  ],
  "_is_setup_py": [
    [
      "src/_pytest/doctest.py",
      [
        "_is_setup_py"
      ]
    ]
  ],
  "_is_doctest": [
    [
      "src/_pytest/doctest.py",
      [
        "_is_doctest"
      ]
    ]
  ],
  "report_failure": [
    [
      "src/_pytest/doctest.py",
      [
        "_init_runner_class",
        "PytestDoctestRunner",
        "report_failure"
      ]
    ],
    [
      "testing/python/approx.py",
      [
        "MyDocTestRunner",
        "report_failure"
      ]
    ]
  ],
  "report_unexpected_exception": [
    [
      "src/_pytest/doctest.py",
      [
        "_init_runner_class",
        "PytestDoctestRunner",
        "report_unexpected_exception"
      ]
    ]
  ],
  "_init_runner_class": [
    [
      "src/_pytest/doctest.py",
      [
        "_init_runner_class"
      ]
    ]
  ],
  "_get_runner": [
    [
      "src/_pytest/doctest.py",
      [
        "_get_runner"
      ]
    ]
  ],
  "_disable_output_capturing_for_darwin": [
    [
      "src/_pytest/doctest.py",
      [
        "DoctestItem",
        "_disable_output_capturing_for_darwin"
      ]
    ]
  ],
  "_get_flag_lookup": [
    [
      "src/_pytest/doctest.py",
      [
        "_get_flag_lookup"
      ]
    ]
  ],
  "get_optionflags": [
    [
      "src/_pytest/doctest.py",
      [
        "get_optionflags"
      ]
    ]
  ],
  "_get_continue_on_failure": [
    [
      "src/_pytest/doctest.py",
      [
        "_get_continue_on_failure"
      ]
    ]
  ],
  "_check_all_skipped": [
    [
      "src/_pytest/doctest.py",
      [
        "_check_all_skipped"
      ]
    ]
  ],
  "_is_mocked": [
    [
      "src/_pytest/doctest.py",
      [
        "_is_mocked"
      ]
    ]
  ],
  "_mock_aware_unwrap": [
    [
      "src/_pytest/doctest.py",
      [
        "_patch_unwrap_mock_aware",
        "_mock_aware_unwrap"
      ]
    ]
  ],
  "_patch_unwrap_mock_aware": [
    [
      "src/_pytest/doctest.py",
      [
        "_patch_unwrap_mock_aware"
      ]
    ]
  ],
  "_find": [
    [
      "src/_pytest/doctest.py",
      [
        "DoctestModule",
        "collect",
        "MockAwareDocTestFinder",
        "_find"
      ]
    ]
  ],
  "_setup_fixtures": [
    [
      "src/_pytest/doctest.py",
      [
        "_setup_fixtures"
      ]
    ]
  ],
  "remove_prefixes": [
    [
      "src/_pytest/doctest.py",
      [
        "_get_checker",
        "LiteralsOutputChecker",
        "check_output",
        "remove_prefixes"
      ]
    ]
  ],
  "check_output": [
    [
      "src/_pytest/doctest.py",
      [
        "_get_checker",
        "LiteralsOutputChecker",
        "check_output"
      ]
    ]
  ],
  "_remove_unwanted_precision": [
    [
      "src/_pytest/doctest.py",
      [
        "_get_checker",
        "LiteralsOutputChecker",
        "_remove_unwanted_precision"
      ]
    ]
  ],
  "_get_checker": [
    [
      "src/_pytest/doctest.py",
      [
        "_get_checker"
      ]
    ]
  ],
  "_get_allow_unicode_flag": [
    [
      "src/_pytest/doctest.py",
      [
        "_get_allow_unicode_flag"
      ]
    ]
  ],
  "_get_allow_bytes_flag": [
    [
      "src/_pytest/doctest.py",
      [
        "_get_allow_bytes_flag"
      ]
    ]
  ],
  "_get_number_flag": [
    [
      "src/_pytest/doctest.py",
      [
        "_get_number_flag"
      ]
    ]
  ],
  "_get_report_choice": [
    [
      "src/_pytest/doctest.py",
      [
        "_get_report_choice"
      ]
    ]
  ],
  "doctest_namespace": [
    [
      "src/_pytest/doctest.py",
      [
        "doctest_namespace"
      ]
    ]
  ],
  "_get_stderr_fileno": [
    [
      "src/_pytest/faulthandler.py",
      [
        "_get_stderr_fileno"
      ]
    ]
  ],
  "pytest_unconfigure": [
    [
      "src/_pytest/faulthandler.py",
      [
        "pytest_unconfigure"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_unconfigure"
      ]
    ],
    [
      "src/_pytest/junitxml.py",
      [
        "pytest_unconfigure"
      ]
    ],
    [
      "src/_pytest/mark/__init__.py",
      [
        "pytest_unconfigure"
      ]
    ],
    [
      "src/_pytest/pastebin.py",
      [
        "pytest_unconfigure"
      ]
    ],
    [
      "src/_pytest/resultlog.py",
      [
        "pytest_unconfigure"
      ]
    ],
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "pytest_unconfigure"
      ]
    ],
    [
      "testing/example_scripts/conftest_usageerror/conftest.py",
      [
        "pytest_unconfigure"
      ]
    ]
  ],
  "pytest_enter_pdb": [
    [
      "src/_pytest/faulthandler.py",
      [
        "pytest_enter_pdb"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_enter_pdb"
      ]
    ]
  ],
  "pytest_sessionstart": [
    [
      "src/_pytest/fixtures.py",
      [
        "pytest_sessionstart"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_sessionstart"
      ]
    ],
    [
      "src/_pytest/junitxml.py",
      [
        "LogXML",
        "pytest_sessionstart"
      ]
    ],
    [
      "src/_pytest/logging.py",
      [
        "LoggingPlugin",
        "pytest_sessionstart"
      ]
    ],
    [
      "src/_pytest/runner.py",
      [
        "pytest_sessionstart"
      ]
    ],
    [
      "src/_pytest/stepwise.py",
      [
        "StepwisePlugin",
        "pytest_sessionstart"
      ]
    ],
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "pytest_sessionstart"
      ]
    ]
  ],
  "scopeproperty": [
    [
      "src/_pytest/fixtures.py",
      [
        "scopeproperty"
      ]
    ]
  ],
  "get_scope_package": [
    [
      "src/_pytest/fixtures.py",
      [
        "get_scope_package"
      ]
    ]
  ],
  "get_scope_node": [
    [
      "src/_pytest/fixtures.py",
      [
        "get_scope_node"
      ]
    ]
  ],
  "add_funcarg_pseudo_fixture_def": [
    [
      "src/_pytest/fixtures.py",
      [
        "add_funcarg_pseudo_fixture_def"
      ]
    ]
  ],
  "getfixturemarker": [
    [
      "src/_pytest/fixtures.py",
      [
        "getfixturemarker"
      ]
    ]
  ],
  "get_parametrized_fixture_keys": [
    [
      "src/_pytest/fixtures.py",
      [
        "get_parametrized_fixture_keys"
      ]
    ]
  ],
  "reorder_items": [
    [
      "src/_pytest/fixtures.py",
      [
        "reorder_items"
      ]
    ]
  ],
  "fix_cache_order": [
    [
      "src/_pytest/fixtures.py",
      [
        "fix_cache_order"
      ]
    ]
  ],
  "reorder_items_atscope": [
    [
      "src/_pytest/fixtures.py",
      [
        "reorder_items_atscope"
      ]
    ]
  ],
  "fillfixtures": [
    [
      "src/_pytest/fixtures.py",
      [
        "fillfixtures"
      ]
    ]
  ],
  "get_direct_param_fixture_func": [
    [
      "src/_pytest/fixtures.py",
      [
        "get_direct_param_fixture_func"
      ]
    ]
  ],
  "prune_dependency_tree": [
    [
      "src/_pytest/fixtures.py",
      [
        "FuncFixtureInfo",
        "prune_dependency_tree"
      ]
    ]
  ],
  "fixturenames": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureRequest",
        "fixturenames"
      ]
    ]
  ],
  "node": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureRequest",
        "node"
      ]
    ]
  ],
  "_getnextfixturedef": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureRequest",
        "_getnextfixturedef"
      ]
    ]
  ],
  "config": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureRequest",
        "config"
      ]
    ]
  ],
  "function": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureRequest",
        "function"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "Function",
        "function"
      ]
    ]
  ],
  "cls": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureRequest",
        "cls"
      ]
    ]
  ],
  "instance": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureRequest",
        "instance"
      ]
    ]
  ],
  "module": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureRequest",
        "module"
      ]
    ]
  ],
  "fspath": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureRequest",
        "fspath"
      ]
    ],
    [
      "src/_pytest/reports.py",
      [
        "BaseReport",
        "fspath"
      ]
    ]
  ],
  "keywords": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureRequest",
        "keywords"
      ]
    ]
  ],
  "session": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureRequest",
        "session"
      ]
    ]
  ],
  "addfinalizer": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureRequest",
        "addfinalizer"
      ]
    ],
    [
      "src/_pytest/fixtures.py",
      [
        "SubRequest",
        "addfinalizer"
      ]
    ],
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureDef",
        "addfinalizer"
      ]
    ],
    [
      "src/_pytest/nodes.py",
      [
        "Node",
        "addfinalizer"
      ]
    ],
    [
      "src/_pytest/runner.py",
      [
        "SetupState",
        "addfinalizer"
      ]
    ]
  ],
  "_addfinalizer": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureRequest",
        "_addfinalizer"
      ]
    ]
  ],
  "applymarker": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureRequest",
        "applymarker"
      ]
    ]
  ],
  "raiseerror": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureRequest",
        "raiseerror"
      ]
    ]
  ],
  "_fillfixtures": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureRequest",
        "_fillfixtures"
      ]
    ]
  ],
  "getfixturevalue": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureRequest",
        "getfixturevalue"
      ]
    ]
  ],
  "_get_active_fixturedef": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureRequest",
        "_get_active_fixturedef"
      ]
    ]
  ],
  "_get_fixturestack": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureRequest",
        "_get_fixturestack"
      ]
    ]
  ],
  "_compute_fixture_value": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureRequest",
        "_compute_fixture_value"
      ]
    ]
  ],
  "_schedule_finalizers": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureRequest",
        "_schedule_finalizers"
      ]
    ],
    [
      "src/_pytest/fixtures.py",
      [
        "SubRequest",
        "_schedule_finalizers"
      ]
    ]
  ],
  "_check_scope": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureRequest",
        "_check_scope"
      ]
    ]
  ],
  "_factorytraceback": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureRequest",
        "_factorytraceback"
      ]
    ]
  ],
  "_getscopeitem": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureRequest",
        "_getscopeitem"
      ]
    ]
  ],
  "scopemismatch": [
    [
      "src/_pytest/fixtures.py",
      [
        "scopemismatch"
      ]
    ]
  ],
  "scope2index": [
    [
      "src/_pytest/fixtures.py",
      [
        "scope2index"
      ]
    ]
  ],
  "formatrepr": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureLookupError",
        "formatrepr"
      ]
    ]
  ],
  "fail_fixturefunc": [
    [
      "src/_pytest/fixtures.py",
      [
        "fail_fixturefunc"
      ]
    ]
  ],
  "call_fixture_func": [
    [
      "src/_pytest/fixtures.py",
      [
        "call_fixture_func"
      ]
    ]
  ],
  "_teardown_yield_fixture": [
    [
      "src/_pytest/fixtures.py",
      [
        "_teardown_yield_fixture"
      ]
    ]
  ],
  "_eval_scope_callable": [
    [
      "src/_pytest/fixtures.py",
      [
        "_eval_scope_callable"
      ]
    ]
  ],
  "finish": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureDef",
        "finish"
      ]
    ]
  ],
  "execute": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureDef",
        "execute"
      ]
    ]
  ],
  "cache_key": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureDef",
        "cache_key"
      ]
    ]
  ],
  "resolve_fixture_function": [
    [
      "src/_pytest/fixtures.py",
      [
        "resolve_fixture_function"
      ]
    ]
  ],
  "pytest_fixture_setup": [
    [
      "src/_pytest/fixtures.py",
      [
        "pytest_fixture_setup"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_fixture_setup"
      ]
    ],
    [
      "src/_pytest/setuponly.py",
      [
        "pytest_fixture_setup"
      ]
    ],
    [
      "src/_pytest/setupplan.py",
      [
        "pytest_fixture_setup"
      ]
    ]
  ],
  "_ensure_immutable_ids": [
    [
      "src/_pytest/fixtures.py",
      [
        "_ensure_immutable_ids"
      ]
    ]
  ],
  "wrap_function_to_error_out_if_called_directly": [
    [
      "src/_pytest/fixtures.py",
      [
        "wrap_function_to_error_out_if_called_directly"
      ]
    ]
  ],
  "_parse_fixture_args": [
    [
      "src/_pytest/fixtures.py",
      [
        "_parse_fixture_args"
      ]
    ]
  ],
  "fixture": [
    [
      "src/_pytest/fixtures.py",
      [
        "fixture"
      ]
    ]
  ],
  "yield_fixture": [
    [
      "src/_pytest/fixtures.py",
      [
        "yield_fixture"
      ]
    ]
  ],
  "pytestconfig": [
    [
      "src/_pytest/fixtures.py",
      [
        "pytestconfig"
      ]
    ]
  ],
  "_get_direct_parametrize_args": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureManager",
        "_get_direct_parametrize_args"
      ]
    ]
  ],
  "getfixtureinfo": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureManager",
        "getfixtureinfo"
      ]
    ]
  ],
  "pytest_plugin_registered": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureManager",
        "pytest_plugin_registered"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_plugin_registered"
      ]
    ],
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "pytest_plugin_registered"
      ]
    ],
    [
      "testing/test_pluginmanager.py",
      [
        "TestPytestPluginInteractions",
        "test_hook_tracing",
        "api1",
        "pytest_plugin_registered"
      ]
    ],
    [
      "testing/test_pluginmanager.py",
      [
        "TestPytestPluginInteractions",
        "test_hook_tracing",
        "api2",
        "pytest_plugin_registered"
      ]
    ]
  ],
  "_getautousenames": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureManager",
        "_getautousenames"
      ]
    ]
  ],
  "merge": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureManager",
        "getfixtureclosure",
        "merge"
      ]
    ]
  ],
  "sort_by_scope": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureManager",
        "getfixtureclosure",
        "sort_by_scope"
      ]
    ]
  ],
  "getfixtureclosure": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureManager",
        "getfixtureclosure"
      ]
    ]
  ],
  "pytest_generate_tests": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureManager",
        "pytest_generate_tests"
      ]
    ],
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_generate_tests"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "pytest_generate_tests"
      ]
    ],
    [
      "testing/example_scripts/issue_519.py",
      [
        "pytest_generate_tests"
      ]
    ]
  ],
  "parsefactories": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureManager",
        "parsefactories"
      ]
    ]
  ],
  "getfixturedefs": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureManager",
        "getfixturedefs"
      ]
    ]
  ],
  "_matchfactories": [
    [
      "src/_pytest/fixtures.py",
      [
        "FixtureManager",
        "_matchfactories"
      ]
    ]
  ],
  "freeze_includes": [
    [
      "src/_pytest/freeze_support.py",
      [
        "freeze_includes"
      ]
    ]
  ],
  "_iter_all_modules": [
    [
      "src/_pytest/freeze_support.py",
      [
        "_iter_all_modules"
      ]
    ]
  ],
  "showversion": [
    [
      "src/_pytest/helpconfig.py",
      [
        "showversion"
      ]
    ]
  ],
  "showhelp": [
    [
      "src/_pytest/helpconfig.py",
      [
        "showhelp"
      ]
    ]
  ],
  "getpluginversioninfo": [
    [
      "src/_pytest/helpconfig.py",
      [
        "getpluginversioninfo"
      ]
    ]
  ],
  "pytest_addhooks": [
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_addhooks"
      ]
    ]
  ],
  "pytest_cmdline_preparse": [
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_cmdline_preparse"
      ]
    ]
  ],
  "pytest_collection_finish": [
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_collection_finish"
      ]
    ],
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "pytest_collection_finish"
      ]
    ]
  ],
  "pytest_collect_directory": [
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_collect_directory"
      ]
    ]
  ],
  "pytest_collectstart": [
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_collectstart"
      ]
    ],
    [
      "src/_pytest/main.py",
      [
        "Session",
        "pytest_collectstart"
      ]
    ]
  ],
  "pytest_itemcollected": [
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_itemcollected"
      ]
    ]
  ],
  "pytest_deselected": [
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_deselected"
      ]
    ],
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "pytest_deselected"
      ]
    ]
  ],
  "pytest_pycollect_makeitem": [
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_pycollect_makeitem"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "pytest_pycollect_makeitem"
      ]
    ],
    [
      "src/_pytest/unittest.py",
      [
        "pytest_pycollect_makeitem"
      ]
    ]
  ],
  "pytest_make_parametrize_id": [
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_make_parametrize_id"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "pytest_make_parametrize_id"
      ]
    ],
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_unicode_idval_with_config",
        "MockConfig",
        "pytest_make_parametrize_id"
      ]
    ],
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_idmaker_with_idfn_and_config",
        "MockConfig",
        "pytest_make_parametrize_id"
      ]
    ],
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_idmaker_with_ids_and_config",
        "MockConfig",
        "pytest_make_parametrize_id"
      ]
    ]
  ],
  "pytest_runtestloop": [
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_runtestloop"
      ]
    ],
    [
      "src/_pytest/logging.py",
      [
        "LoggingPlugin",
        "pytest_runtestloop"
      ]
    ],
    [
      "src/_pytest/main.py",
      [
        "pytest_runtestloop"
      ]
    ]
  ],
  "pytest_itemstart": [
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_itemstart"
      ]
    ]
  ],
  "pytest_runtest_logstart": [
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_runtest_logstart"
      ]
    ],
    [
      "src/_pytest/logging.py",
      [
        "LoggingPlugin",
        "pytest_runtest_logstart"
      ]
    ],
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "pytest_runtest_logstart"
      ]
    ]
  ],
  "pytest_runtest_logfinish": [
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_runtest_logfinish"
      ]
    ],
    [
      "src/_pytest/logging.py",
      [
        "LoggingPlugin",
        "pytest_runtest_logfinish"
      ]
    ],
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "pytest_runtest_logfinish"
      ]
    ]
  ],
  "pytest_runtest_makereport": [
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_runtest_makereport"
      ]
    ],
    [
      "src/_pytest/runner.py",
      [
        "pytest_runtest_makereport"
      ]
    ],
    [
      "src/_pytest/skipping.py",
      [
        "pytest_runtest_makereport"
      ]
    ],
    [
      "src/_pytest/unittest.py",
      [
        "pytest_runtest_makereport"
      ]
    ]
  ],
  "pytest_report_to_serializable": [
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_report_to_serializable"
      ]
    ],
    [
      "src/_pytest/reports.py",
      [
        "pytest_report_to_serializable"
      ]
    ]
  ],
  "pytest_report_from_serializable": [
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_report_from_serializable"
      ]
    ],
    [
      "src/_pytest/reports.py",
      [
        "pytest_report_from_serializable"
      ]
    ]
  ],
  "pytest_fixture_post_finalizer": [
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_fixture_post_finalizer"
      ]
    ],
    [
      "src/_pytest/setuponly.py",
      [
        "pytest_fixture_post_finalizer"
      ]
    ]
  ],
  "pytest_assertrepr_compare": [
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_assertrepr_compare"
      ]
    ]
  ],
  "pytest_assertion_pass": [
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_assertion_pass"
      ]
    ]
  ],
  "pytest_report_teststatus": [
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_report_teststatus"
      ]
    ],
    [
      "src/_pytest/runner.py",
      [
        "pytest_report_teststatus"
      ]
    ],
    [
      "src/_pytest/skipping.py",
      [
        "pytest_report_teststatus"
      ]
    ],
    [
      "src/_pytest/terminal.py",
      [
        "pytest_report_teststatus"
      ]
    ]
  ],
  "pytest_terminal_summary": [
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_terminal_summary"
      ]
    ],
    [
      "src/_pytest/junitxml.py",
      [
        "LogXML",
        "pytest_terminal_summary"
      ]
    ],
    [
      "src/_pytest/pastebin.py",
      [
        "pytest_terminal_summary"
      ]
    ],
    [
      "src/_pytest/runner.py",
      [
        "pytest_terminal_summary"
      ]
    ],
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "pytest_terminal_summary"
      ]
    ],
    [
      "src/_pytest/warnings.py",
      [
        "pytest_terminal_summary"
      ]
    ]
  ],
  "pytest_warning_captured": [
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_warning_captured"
      ]
    ],
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "pytest_warning_captured"
      ]
    ],
    [
      "testing/test_warnings.py",
      [
        "test_warning_captured_hook",
        "WarningCollector",
        "pytest_warning_captured"
      ]
    ]
  ],
  "pytest_doctest_prepare_content": [
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_doctest_prepare_content"
      ]
    ]
  ],
  "pytest_leave_pdb": [
    [
      "src/_pytest/hookspec.py",
      [
        "pytest_leave_pdb"
      ]
    ]
  ],
  "bin_xml_escape": [
    [
      "src/_pytest/junitxml.py",
      [
        "bin_xml_escape"
      ]
    ]
  ],
  "merge_family": [
    [
      "src/_pytest/junitxml.py",
      [
        "merge_family"
      ]
    ]
  ],
  "append": [
    [
      "src/_pytest/junitxml.py",
      [
        "_NodeReporter",
        "append"
      ]
    ]
  ],
  "add_property": [
    [
      "src/_pytest/junitxml.py",
      [
        "_NodeReporter",
        "add_property"
      ]
    ]
  ],
  "add_attribute": [
    [
      "src/_pytest/junitxml.py",
      [
        "_NodeReporter",
        "add_attribute"
      ]
    ]
  ],
  "make_properties_node": [
    [
      "src/_pytest/junitxml.py",
      [
        "_NodeReporter",
        "make_properties_node"
      ]
    ]
  ],
  "record_testreport": [
    [
      "src/_pytest/junitxml.py",
      [
        "_NodeReporter",
        "record_testreport"
      ]
    ]
  ],
  "to_xml": [
    [
      "src/_pytest/junitxml.py",
      [
        "_NodeReporter",
        "to_xml"
      ]
    ]
  ],
  "_add_simple": [
    [
      "src/_pytest/junitxml.py",
      [
        "_NodeReporter",
        "_add_simple"
      ]
    ]
  ],
  "write_captured_output": [
    [
      "src/_pytest/junitxml.py",
      [
        "_NodeReporter",
        "write_captured_output"
      ]
    ]
  ],
  "append_pass": [
    [
      "src/_pytest/junitxml.py",
      [
        "_NodeReporter",
        "append_pass"
      ]
    ]
  ],
  "append_failure": [
    [
      "src/_pytest/junitxml.py",
      [
        "_NodeReporter",
        "append_failure"
      ]
    ]
  ],
  "append_collect_error": [
    [
      "src/_pytest/junitxml.py",
      [
        "_NodeReporter",
        "append_collect_error"
      ]
    ]
  ],
  "append_collect_skipped": [
    [
      "src/_pytest/junitxml.py",
      [
        "_NodeReporter",
        "append_collect_skipped"
      ]
    ]
  ],
  "append_error": [
    [
      "src/_pytest/junitxml.py",
      [
        "_NodeReporter",
        "append_error"
      ]
    ]
  ],
  "append_skipped": [
    [
      "src/_pytest/junitxml.py",
      [
        "_NodeReporter",
        "append_skipped"
      ]
    ]
  ],
  "_warn_incompatibility_with_xunit2": [
    [
      "src/_pytest/junitxml.py",
      [
        "_warn_incompatibility_with_xunit2"
      ]
    ]
  ],
  "record_property": [
    [
      "src/_pytest/junitxml.py",
      [
        "record_property"
      ]
    ]
  ],
  "add_attr_noop": [
    [
      "src/_pytest/junitxml.py",
      [
        "record_xml_attribute",
        "add_attr_noop"
      ]
    ]
  ],
  "record_xml_attribute": [
    [
      "src/_pytest/junitxml.py",
      [
        "record_xml_attribute"
      ]
    ]
  ],
  "_check_record_param_type": [
    [
      "src/_pytest/junitxml.py",
      [
        "_check_record_param_type"
      ]
    ]
  ],
  "record_func": [
    [
      "src/_pytest/junitxml.py",
      [
        "record_testsuite_property",
        "record_func"
      ]
    ]
  ],
  "record_testsuite_property": [
    [
      "src/_pytest/junitxml.py",
      [
        "record_testsuite_property"
      ]
    ]
  ],
  "mangle_test_address": [
    [
      "src/_pytest/junitxml.py",
      [
        "mangle_test_address"
      ]
    ]
  ],
  "node_reporter": [
    [
      "src/_pytest/junitxml.py",
      [
        "LogXML",
        "node_reporter"
      ]
    ]
  ],
  "add_stats": [
    [
      "src/_pytest/junitxml.py",
      [
        "LogXML",
        "add_stats"
      ]
    ]
  ],
  "_opentestcase": [
    [
      "src/_pytest/junitxml.py",
      [
        "LogXML",
        "_opentestcase"
      ]
    ]
  ],
  "update_testcase_duration": [
    [
      "src/_pytest/junitxml.py",
      [
        "LogXML",
        "update_testcase_duration"
      ]
    ]
  ],
  "add_global_property": [
    [
      "src/_pytest/junitxml.py",
      [
        "LogXML",
        "add_global_property"
      ]
    ]
  ],
  "_get_global_properties_node": [
    [
      "src/_pytest/junitxml.py",
      [
        "LogXML",
        "_get_global_properties_node"
      ]
    ]
  ],
  "_remove_ansi_escape_sequences": [
    [
      "src/_pytest/logging.py",
      [
        "_remove_ansi_escape_sequences"
      ]
    ]
  ],
  "format": [
    [
      "src/_pytest/logging.py",
      [
        "ColoredLevelFormatter",
        "format"
      ]
    ],
    [
      "src/_pytest/logging.py",
      [
        "PercentStyleMultiline",
        "format"
      ]
    ],
    [
      "src/_pytest/warning_types.py",
      [
        "UnformattedWarning",
        "format"
      ]
    ]
  ],
  "_update_message": [
    [
      "src/_pytest/logging.py",
      [
        "PercentStyleMultiline",
        "_update_message"
      ]
    ]
  ],
  "get_option_ini": [
    [
      "src/_pytest/logging.py",
      [
        "get_option_ini"
      ]
    ]
  ],
  "add_option_ini": [
    [
      "src/_pytest/logging.py",
      [
        "pytest_addoption",
        "add_option_ini"
      ]
    ]
  ],
  "catching_logs": [
    [
      "src/_pytest/logging.py",
      [
        "catching_logs"
      ]
    ]
  ],
  "emit": [
    [
      "src/_pytest/logging.py",
      [
        "LogCaptureHandler",
        "emit"
      ]
    ],
    [
      "src/_pytest/logging.py",
      [
        "_LiveLoggingStreamHandler",
        "emit"
      ]
    ]
  ],
  "reset": [
    [
      "src/_pytest/logging.py",
      [
        "LogCaptureHandler",
        "reset"
      ]
    ],
    [
      "src/_pytest/logging.py",
      [
        "_LiveLoggingStreamHandler",
        "reset"
      ]
    ]
  ],
  "_finalize": [
    [
      "src/_pytest/logging.py",
      [
        "LogCaptureFixture",
        "_finalize"
      ]
    ]
  ],
  "handler": [
    [
      "src/_pytest/logging.py",
      [
        "LogCaptureFixture",
        "handler"
      ]
    ]
  ],
  "get_records": [
    [
      "src/_pytest/logging.py",
      [
        "LogCaptureFixture",
        "get_records"
      ]
    ]
  ],
  "text": [
    [
      "src/_pytest/logging.py",
      [
        "LogCaptureFixture",
        "text"
      ]
    ],
    [
      "testing/test_junitxml.py",
      [
        "DomNode",
        "text"
      ]
    ]
  ],
  "records": [
    [
      "src/_pytest/logging.py",
      [
        "LogCaptureFixture",
        "records"
      ]
    ]
  ],
  "record_tuples": [
    [
      "src/_pytest/logging.py",
      [
        "LogCaptureFixture",
        "record_tuples"
      ]
    ]
  ],
  "messages": [
    [
      "src/_pytest/logging.py",
      [
        "LogCaptureFixture",
        "messages"
      ]
    ]
  ],
  "clear": [
    [
      "src/_pytest/logging.py",
      [
        "LogCaptureFixture",
        "clear"
      ]
    ],
    [
      "src/_pytest/pytester.py",
      [
        "HookRecorder",
        "clear"
      ]
    ],
    [
      "src/_pytest/recwarn.py",
      [
        "WarningsRecorder",
        "clear"
      ]
    ]
  ],
  "set_level": [
    [
      "src/_pytest/logging.py",
      [
        "LogCaptureFixture",
        "set_level"
      ]
    ]
  ],
  "at_level": [
    [
      "src/_pytest/logging.py",
      [
        "LogCaptureFixture",
        "at_level"
      ]
    ]
  ],
  "caplog": [
    [
      "src/_pytest/logging.py",
      [
        "caplog"
      ]
    ],
    [
      "src/_pytest/reports.py",
      [
        "BaseReport",
        "caplog"
      ]
    ]
  ],
  "get_actual_log_level": [
    [
      "src/_pytest/logging.py",
      [
        "get_actual_log_level"
      ]
    ]
  ],
  "_create_formatter": [
    [
      "src/_pytest/logging.py",
      [
        "LoggingPlugin",
        "_create_formatter"
      ]
    ]
  ],
  "_setup_cli_logging": [
    [
      "src/_pytest/logging.py",
      [
        "LoggingPlugin",
        "_setup_cli_logging"
      ]
    ]
  ],
  "set_log_path": [
    [
      "src/_pytest/logging.py",
      [
        "LoggingPlugin",
        "set_log_path"
      ]
    ]
  ],
  "_log_cli_enabled": [
    [
      "src/_pytest/logging.py",
      [
        "LoggingPlugin",
        "_log_cli_enabled"
      ]
    ]
  ],
  "_runtest_for": [
    [
      "src/_pytest/logging.py",
      [
        "LoggingPlugin",
        "_runtest_for"
      ]
    ]
  ],
  "_runtest_for_main": [
    [
      "src/_pytest/logging.py",
      [
        "LoggingPlugin",
        "_runtest_for_main"
      ]
    ]
  ],
  "set_when": [
    [
      "src/_pytest/logging.py",
      [
        "_LiveLoggingStreamHandler",
        "set_when"
      ]
    ]
  ],
  "wrap_session": [
    [
      "src/_pytest/main.py",
      [
        "wrap_session"
      ]
    ]
  ],
  "_main": [
    [
      "src/_pytest/main.py",
      [
        "_main"
      ]
    ]
  ],
  "_in_venv": [
    [
      "src/_pytest/main.py",
      [
        "_in_venv"
      ]
    ]
  ],
  "__missing__": [
    [
      "src/_pytest/main.py",
      [
        "_bestrelpath_cache",
        "__missing__"
      ]
    ]
  ],
  "_node_location_to_relpath": [
    [
      "src/_pytest/main.py",
      [
        "Session",
        "_node_location_to_relpath"
      ]
    ]
  ],
  "isinitpath": [
    [
      "src/_pytest/main.py",
      [
        "Session",
        "isinitpath"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "Package",
        "isinitpath"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "TestEarlyRewriteBailout",
        "hook",
        "StubSession",
        "isinitpath"
      ]
    ]
  ],
  "gethookproxy": [
    [
      "src/_pytest/main.py",
      [
        "Session",
        "gethookproxy"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "Package",
        "gethookproxy"
      ]
    ]
  ],
  "perform_collect": [
    [
      "src/_pytest/main.py",
      [
        "Session",
        "perform_collect"
      ]
    ]
  ],
  "_perform_collect": [
    [
      "src/_pytest/main.py",
      [
        "Session",
        "_perform_collect"
      ]
    ]
  ],
  "_collect": [
    [
      "src/_pytest/main.py",
      [
        "Session",
        "_collect"
      ]
    ]
  ],
  "_collectfile": [
    [
      "src/_pytest/main.py",
      [
        "Session",
        "_collectfile"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "Package",
        "_collectfile"
      ]
    ]
  ],
  "_recurse": [
    [
      "src/_pytest/main.py",
      [
        "Session",
        "_recurse"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "Package",
        "_recurse"
      ]
    ]
  ],
  "_visit_filter": [
    [
      "src/_pytest/main.py",
      [
        "Session",
        "_visit_filter"
      ]
    ]
  ],
  "_tryconvertpyarg": [
    [
      "src/_pytest/main.py",
      [
        "Session",
        "_tryconvertpyarg"
      ]
    ]
  ],
  "_parsearg": [
    [
      "src/_pytest/main.py",
      [
        "Session",
        "_parsearg"
      ]
    ]
  ],
  "matchnodes": [
    [
      "src/_pytest/main.py",
      [
        "Session",
        "matchnodes"
      ]
    ]
  ],
  "_matchnodes": [
    [
      "src/_pytest/main.py",
      [
        "Session",
        "_matchnodes"
      ]
    ]
  ],
  "genitems": [
    [
      "src/_pytest/main.py",
      [
        "Session",
        "genitems"
      ]
    ],
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "genitems"
      ]
    ]
  ],
  "param": [
    [
      "src/_pytest/mark/__init__.py",
      [
        "param"
      ]
    ],
    [
      "src/_pytest/mark/structures.py",
      [
        "ParameterSet",
        "param"
      ]
    ]
  ],
  "deselect_by_keyword": [
    [
      "src/_pytest/mark/__init__.py",
      [
        "deselect_by_keyword"
      ]
    ]
  ],
  "deselect_by_mark": [
    [
      "src/_pytest/mark/__init__.py",
      [
        "deselect_by_mark"
      ]
    ]
  ],
  "cached_eval": [
    [
      "src/_pytest/mark/evaluate.py",
      [
        "cached_eval"
      ]
    ]
  ],
  "__bool__": [
    [
      "src/_pytest/mark/evaluate.py",
      [
        "MarkEvaluator",
        "__bool__"
      ]
    ]
  ],
  "wasvalid": [
    [
      "src/_pytest/mark/evaluate.py",
      [
        "MarkEvaluator",
        "wasvalid"
      ]
    ]
  ],
  "_get_marks": [
    [
      "src/_pytest/mark/evaluate.py",
      [
        "MarkEvaluator",
        "_get_marks"
      ]
    ]
  ],
  "invalidraise": [
    [
      "src/_pytest/mark/evaluate.py",
      [
        "MarkEvaluator",
        "invalidraise"
      ]
    ]
  ],
  "istrue": [
    [
      "src/_pytest/mark/evaluate.py",
      [
        "MarkEvaluator",
        "istrue"
      ]
    ]
  ],
  "_getglobals": [
    [
      "src/_pytest/mark/evaluate.py",
      [
        "MarkEvaluator",
        "_getglobals"
      ]
    ]
  ],
  "_istrue": [
    [
      "src/_pytest/mark/evaluate.py",
      [
        "MarkEvaluator",
        "_istrue"
      ]
    ]
  ],
  "getexplanation": [
    [
      "src/_pytest/mark/evaluate.py",
      [
        "MarkEvaluator",
        "getexplanation"
      ]
    ]
  ],
  "from_item": [
    [
      "src/_pytest/mark/legacy.py",
      [
        "MarkMapping",
        "from_item"
      ]
    ],
    [
      "src/_pytest/mark/legacy.py",
      [
        "KeywordMapping",
        "from_item"
      ]
    ]
  ],
  "matchmark": [
    [
      "src/_pytest/mark/legacy.py",
      [
        "matchmark"
      ]
    ]
  ],
  "matchkeyword": [
    [
      "src/_pytest/mark/legacy.py",
      [
        "matchkeyword"
      ]
    ]
  ],
  "alias": [
    [
      "src/_pytest/mark/structures.py",
      [
        "alias"
      ]
    ]
  ],
  "istestfunc": [
    [
      "src/_pytest/mark/structures.py",
      [
        "istestfunc"
      ]
    ]
  ],
  "get_empty_parameterset_mark": [
    [
      "src/_pytest/mark/structures.py",
      [
        "get_empty_parameterset_mark"
      ]
    ]
  ],
  "extract_from": [
    [
      "src/_pytest/mark/structures.py",
      [
        "ParameterSet",
        "extract_from"
      ]
    ]
  ],
  "_parse_parametrize_args": [
    [
      "src/_pytest/mark/structures.py",
      [
        "ParameterSet",
        "_parse_parametrize_args"
      ]
    ]
  ],
  "_parse_parametrize_parameters": [
    [
      "src/_pytest/mark/structures.py",
      [
        "ParameterSet",
        "_parse_parametrize_parameters"
      ]
    ]
  ],
  "_for_parametrize": [
    [
      "src/_pytest/mark/structures.py",
      [
        "ParameterSet",
        "_for_parametrize"
      ]
    ]
  ],
  "combined_with": [
    [
      "src/_pytest/mark/structures.py",
      [
        "Mark",
        "combined_with"
      ]
    ]
  ],
  "markname": [
    [
      "src/_pytest/mark/structures.py",
      [
        "MarkDecorator",
        "markname"
      ]
    ]
  ],
  "with_args": [
    [
      "src/_pytest/mark/structures.py",
      [
        "MarkDecorator",
        "with_args"
      ]
    ]
  ],
  "get_unpacked_marks": [
    [
      "src/_pytest/mark/structures.py",
      [
        "get_unpacked_marks"
      ]
    ]
  ],
  "normalize_mark_list": [
    [
      "src/_pytest/mark/structures.py",
      [
        "normalize_mark_list"
      ]
    ]
  ],
  "store_mark": [
    [
      "src/_pytest/mark/structures.py",
      [
        "store_mark"
      ]
    ]
  ],
  "__setitem__": [
    [
      "src/_pytest/mark/structures.py",
      [
        "NodeKeywords",
        "__setitem__"
      ]
    ],
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_Sequence",
        "TestSequence",
        "__setitem__"
      ]
    ]
  ],
  "__delitem__": [
    [
      "src/_pytest/mark/structures.py",
      [
        "NodeKeywords",
        "__delitem__"
      ]
    ],
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_Sequence",
        "TestSequence",
        "__delitem__"
      ]
    ]
  ],
  "_seen": [
    [
      "src/_pytest/mark/structures.py",
      [
        "NodeKeywords",
        "_seen"
      ]
    ]
  ],
  "update": [
    [
      "src/_pytest/mark/structures.py",
      [
        "NodeMarkers",
        "update"
      ]
    ]
  ],
  "find": [
    [
      "src/_pytest/mark/structures.py",
      [
        "NodeMarkers",
        "find"
      ]
    ]
  ],
  "monkeypatch": [
    [
      "src/_pytest/monkeypatch.py",
      [
        "monkeypatch"
      ]
    ]
  ],
  "resolve": [
    [
      "src/_pytest/monkeypatch.py",
      [
        "resolve"
      ]
    ]
  ],
  "annotated_getattr": [
    [
      "src/_pytest/monkeypatch.py",
      [
        "annotated_getattr"
      ]
    ]
  ],
  "derive_importpath": [
    [
      "src/_pytest/monkeypatch.py",
      [
        "derive_importpath"
      ]
    ]
  ],
  "context": [
    [
      "src/_pytest/monkeypatch.py",
      [
        "MonkeyPatch",
        "context"
      ]
    ]
  ],
  "setattr": [
    [
      "src/_pytest/monkeypatch.py",
      [
        "MonkeyPatch",
        "setattr"
      ]
    ]
  ],
  "delattr": [
    [
      "src/_pytest/monkeypatch.py",
      [
        "MonkeyPatch",
        "delattr"
      ]
    ]
  ],
  "setitem": [
    [
      "src/_pytest/monkeypatch.py",
      [
        "MonkeyPatch",
        "setitem"
      ]
    ]
  ],
  "delitem": [
    [
      "src/_pytest/monkeypatch.py",
      [
        "MonkeyPatch",
        "delitem"
      ]
    ]
  ],
  "setenv": [
    [
      "src/_pytest/monkeypatch.py",
      [
        "MonkeyPatch",
        "setenv"
      ]
    ]
  ],
  "delenv": [
    [
      "src/_pytest/monkeypatch.py",
      [
        "MonkeyPatch",
        "delenv"
      ]
    ]
  ],
  "syspath_prepend": [
    [
      "src/_pytest/monkeypatch.py",
      [
        "MonkeyPatch",
        "syspath_prepend"
      ]
    ]
  ],
  "chdir": [
    [
      "src/_pytest/monkeypatch.py",
      [
        "MonkeyPatch",
        "chdir"
      ]
    ],
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "chdir"
      ]
    ]
  ],
  "undo": [
    [
      "src/_pytest/monkeypatch.py",
      [
        "MonkeyPatch",
        "undo"
      ]
    ]
  ],
  "_splitnode": [
    [
      "src/_pytest/nodes.py",
      [
        "_splitnode"
      ]
    ]
  ],
  "ischildnode": [
    [
      "src/_pytest/nodes.py",
      [
        "ischildnode"
      ]
    ]
  ],
  "ihook": [
    [
      "src/_pytest/nodes.py",
      [
        "Node",
        "ihook"
      ]
    ]
  ],
  "nodeid": [
    [
      "src/_pytest/nodes.py",
      [
        "Node",
        "nodeid"
      ]
    ]
  ],
  "__hash__": [
    [
      "src/_pytest/nodes.py",
      [
        "Node",
        "__hash__"
      ]
    ]
  ],
  "teardown": [
    [
      "src/_pytest/nodes.py",
      [
        "Node",
        "teardown"
      ]
    ],
    [
      "src/_pytest/unittest.py",
      [
        "TestCaseFunction",
        "teardown"
      ]
    ]
  ],
  "listchain": [
    [
      "src/_pytest/nodes.py",
      [
        "Node",
        "listchain"
      ]
    ]
  ],
  "add_marker": [
    [
      "src/_pytest/nodes.py",
      [
        "Node",
        "add_marker"
      ]
    ]
  ],
  "iter_markers": [
    [
      "src/_pytest/nodes.py",
      [
        "Node",
        "iter_markers"
      ]
    ]
  ],
  "iter_markers_with_node": [
    [
      "src/_pytest/nodes.py",
      [
        "Node",
        "iter_markers_with_node"
      ]
    ]
  ],
  "get_closest_marker": [
    [
      "src/_pytest/nodes.py",
      [
        "Node",
        "get_closest_marker"
      ]
    ]
  ],
  "listextrakeywords": [
    [
      "src/_pytest/nodes.py",
      [
        "Node",
        "listextrakeywords"
      ]
    ]
  ],
  "listnames": [
    [
      "src/_pytest/nodes.py",
      [
        "Node",
        "listnames"
      ]
    ]
  ],
  "getparent": [
    [
      "src/_pytest/nodes.py",
      [
        "Node",
        "getparent"
      ]
    ]
  ],
  "_prunetraceback": [
    [
      "src/_pytest/nodes.py",
      [
        "Node",
        "_prunetraceback"
      ]
    ],
    [
      "src/_pytest/nodes.py",
      [
        "Collector",
        "_prunetraceback"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "FunctionMixin",
        "_prunetraceback"
      ]
    ],
    [
      "src/_pytest/unittest.py",
      [
        "TestCaseFunction",
        "_prunetraceback"
      ]
    ]
  ],
  "_repr_failure_py": [
    [
      "src/_pytest/nodes.py",
      [
        "Node",
        "_repr_failure_py"
      ]
    ]
  ],
  "get_fslocation_from_item": [
    [
      "src/_pytest/nodes.py",
      [
        "get_fslocation_from_item"
      ]
    ]
  ],
  "_check_initialpaths_for_relpath": [
    [
      "src/_pytest/nodes.py",
      [
        "_check_initialpaths_for_relpath"
      ]
    ]
  ],
  "add_report_section": [
    [
      "src/_pytest/nodes.py",
      [
        "Item",
        "add_report_section"
      ]
    ]
  ],
  "location": [
    [
      "src/_pytest/nodes.py",
      [
        "Item",
        "location"
      ]
    ],
    [
      "src/_pytest/reports.py",
      [
        "CollectReport",
        "location"
      ]
    ]
  ],
  "teardown_nose": [
    [
      "src/_pytest/nose.py",
      [
        "teardown_nose"
      ]
    ]
  ],
  "is_potential_nosetest": [
    [
      "src/_pytest/nose.py",
      [
        "is_potential_nosetest"
      ]
    ]
  ],
  "call_optional": [
    [
      "src/_pytest/nose.py",
      [
        "call_optional"
      ]
    ]
  ],
  "exit": [
    [
      "src/_pytest/outcomes.py",
      [
        "exit"
      ]
    ]
  ],
  "skip": [
    [
      "src/_pytest/outcomes.py",
      [
        "skip"
      ]
    ]
  ],
  "fail": [
    [
      "src/_pytest/outcomes.py",
      [
        "fail"
      ]
    ]
  ],
  "xfail": [
    [
      "src/_pytest/outcomes.py",
      [
        "xfail"
      ]
    ]
  ],
  "importorskip": [
    [
      "src/_pytest/outcomes.py",
      [
        "importorskip"
      ]
    ]
  ],
  "create_new_paste": [
    [
      "src/_pytest/pastebin.py",
      [
        "create_new_paste"
      ]
    ]
  ],
  "ensure_reset_dir": [
    [
      "src/_pytest/pathlib.py",
      [
        "ensure_reset_dir"
      ]
    ]
  ],
  "chmod_rw": [
    [
      "src/_pytest/pathlib.py",
      [
        "on_rm_rf_error",
        "chmod_rw"
      ]
    ]
  ],
  "on_rm_rf_error": [
    [
      "src/_pytest/pathlib.py",
      [
        "on_rm_rf_error"
      ]
    ]
  ],
  "rm_rf": [
    [
      "src/_pytest/pathlib.py",
      [
        "rm_rf"
      ]
    ]
  ],
  "find_prefixed": [
    [
      "src/_pytest/pathlib.py",
      [
        "find_prefixed"
      ]
    ]
  ],
  "extract_suffixes": [
    [
      "src/_pytest/pathlib.py",
      [
        "extract_suffixes"
      ]
    ]
  ],
  "find_suffixes": [
    [
      "src/_pytest/pathlib.py",
      [
        "find_suffixes"
      ]
    ]
  ],
  "parse_num": [
    [
      "src/_pytest/pathlib.py",
      [
        "parse_num"
      ]
    ]
  ],
  "_force_symlink": [
    [
      "src/_pytest/pathlib.py",
      [
        "_force_symlink"
      ]
    ]
  ],
  "make_numbered_dir": [
    [
      "src/_pytest/pathlib.py",
      [
        "make_numbered_dir"
      ]
    ]
  ],
  "create_cleanup_lock": [
    [
      "src/_pytest/pathlib.py",
      [
        "create_cleanup_lock"
      ]
    ]
  ],
  "register_cleanup_lock_removal": [
    [
      "src/_pytest/pathlib.py",
      [
        "register_cleanup_lock_removal"
      ]
    ]
  ],
  "maybe_delete_a_numbered_dir": [
    [
      "src/_pytest/pathlib.py",
      [
        "maybe_delete_a_numbered_dir"
      ]
    ]
  ],
  "ensure_deletable": [
    [
      "src/_pytest/pathlib.py",
      [
        "ensure_deletable"
      ]
    ]
  ],
  "try_cleanup": [
    [
      "src/_pytest/pathlib.py",
      [
        "try_cleanup"
      ]
    ]
  ],
  "cleanup_candidates": [
    [
      "src/_pytest/pathlib.py",
      [
        "cleanup_candidates"
      ]
    ]
  ],
  "cleanup_numbered_dir": [
    [
      "src/_pytest/pathlib.py",
      [
        "cleanup_numbered_dir"
      ]
    ]
  ],
  "make_numbered_dir_with_cleanup": [
    [
      "src/_pytest/pathlib.py",
      [
        "make_numbered_dir_with_cleanup"
      ]
    ]
  ],
  "resolve_from_str": [
    [
      "src/_pytest/pathlib.py",
      [
        "resolve_from_str"
      ]
    ]
  ],
  "fnmatch_ex": [
    [
      "src/_pytest/pathlib.py",
      [
        "fnmatch_ex"
      ]
    ]
  ],
  "parts": [
    [
      "src/_pytest/pathlib.py",
      [
        "parts"
      ]
    ]
  ],
  "get_open_files": [
    [
      "src/_pytest/pytester.py",
      [
        "LsofFdLeakChecker",
        "get_open_files"
      ]
    ]
  ],
  "_exec_lsof": [
    [
      "src/_pytest/pytester.py",
      [
        "LsofFdLeakChecker",
        "_exec_lsof"
      ]
    ]
  ],
  "_parse_lsof_output": [
    [
      "src/_pytest/pytester.py",
      [
        "LsofFdLeakChecker",
        "_parse_lsof_output"
      ]
    ]
  ],
  "matching_platform": [
    [
      "src/_pytest/pytester.py",
      [
        "LsofFdLeakChecker",
        "matching_platform"
      ]
    ]
  ],
  "_pytest": [
    [
      "src/_pytest/pytester.py",
      [
        "_pytest"
      ]
    ]
  ],
  "gethookrecorder": [
    [
      "src/_pytest/pytester.py",
      [
        "PytestArg",
        "gethookrecorder"
      ]
    ]
  ],
  "get_public_names": [
    [
      "src/_pytest/pytester.py",
      [
        "get_public_names"
      ]
    ]
  ],
  "finish_recording": [
    [
      "src/_pytest/pytester.py",
      [
        "HookRecorder",
        "finish_recording"
      ]
    ]
  ],
  "getcalls": [
    [
      "src/_pytest/pytester.py",
      [
        "HookRecorder",
        "getcalls"
      ]
    ]
  ],
  "assert_contains": [
    [
      "src/_pytest/pytester.py",
      [
        "HookRecorder",
        "assert_contains"
      ]
    ]
  ],
  "popcall": [
    [
      "src/_pytest/pytester.py",
      [
        "HookRecorder",
        "popcall"
      ]
    ]
  ],
  "getcall": [
    [
      "src/_pytest/pytester.py",
      [
        "HookRecorder",
        "getcall"
      ]
    ]
  ],
  "getreports": [
    [
      "src/_pytest/pytester.py",
      [
        "HookRecorder",
        "getreports"
      ]
    ],
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "getreports"
      ]
    ]
  ],
  "matchreport": [
    [
      "src/_pytest/pytester.py",
      [
        "HookRecorder",
        "matchreport"
      ]
    ]
  ],
  "getfailures": [
    [
      "src/_pytest/pytester.py",
      [
        "HookRecorder",
        "getfailures"
      ]
    ]
  ],
  "getfailedcollections": [
    [
      "src/_pytest/pytester.py",
      [
        "HookRecorder",
        "getfailedcollections"
      ]
    ]
  ],
  "listoutcomes": [
    [
      "src/_pytest/pytester.py",
      [
        "HookRecorder",
        "listoutcomes"
      ]
    ]
  ],
  "countoutcomes": [
    [
      "src/_pytest/pytester.py",
      [
        "HookRecorder",
        "countoutcomes"
      ]
    ]
  ],
  "assertoutcome": [
    [
      "src/_pytest/pytester.py",
      [
        "HookRecorder",
        "assertoutcome"
      ]
    ]
  ],
  "linecomp": [
    [
      "src/_pytest/pytester.py",
      [
        "linecomp"
      ]
    ]
  ],
  "LineMatcher_fixture": [
    [
      "src/_pytest/pytester.py",
      [
        "LineMatcher_fixture"
      ]
    ]
  ],
  "testdir": [
    [
      "src/_pytest/pytester.py",
      [
        "testdir"
      ]
    ],
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureManagerParseFactories",
        "testdir"
      ]
    ],
    [
      "testing/python/fixtures.py",
      [
        "TestAutouseDiscovery",
        "testdir"
      ]
    ]
  ],
  "_sys_snapshot": [
    [
      "src/_pytest/pytester.py",
      [
        "_sys_snapshot"
      ]
    ]
  ],
  "_config_for_test": [
    [
      "src/_pytest/pytester.py",
      [
        "_config_for_test"
      ]
    ]
  ],
  "parseoutcomes": [
    [
      "src/_pytest/pytester.py",
      [
        "RunResult",
        "parseoutcomes"
      ]
    ]
  ],
  "assert_outcomes": [
    [
      "src/_pytest/pytester.py",
      [
        "RunResult",
        "assert_outcomes"
      ]
    ]
  ],
  "restore": [
    [
      "src/_pytest/pytester.py",
      [
        "CwdSnapshot",
        "restore"
      ]
    ],
    [
      "src/_pytest/pytester.py",
      [
        "SysModulesSnapshot",
        "restore"
      ]
    ],
    [
      "src/_pytest/pytester.py",
      [
        "SysPathsSnapshot",
        "restore"
      ]
    ]
  ],
  "__take_sys_modules_snapshot": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "__take_sys_modules_snapshot"
      ]
    ]
  ],
  "make_hook_recorder": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "make_hook_recorder"
      ]
    ]
  ],
  "_makefile": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "_makefile"
      ]
    ]
  ],
  "makefile": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "makefile"
      ]
    ]
  ],
  "makeconftest": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "makeconftest"
      ]
    ]
  ],
  "makeini": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "makeini"
      ]
    ]
  ],
  "getinicfg": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "getinicfg"
      ]
    ]
  ],
  "makepyfile": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "makepyfile"
      ]
    ]
  ],
  "maketxtfile": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "maketxtfile"
      ]
    ]
  ],
  "syspathinsert": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "syspathinsert"
      ]
    ]
  ],
  "mkdir": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "mkdir"
      ]
    ]
  ],
  "mkpydir": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "mkpydir"
      ]
    ]
  ],
  "copy_example": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "copy_example"
      ]
    ]
  ],
  "getnode": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "getnode"
      ]
    ]
  ],
  "getpathnode": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "getpathnode"
      ]
    ]
  ],
  "runitem": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "runitem"
      ]
    ]
  ],
  "inline_runsource": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "inline_runsource"
      ]
    ]
  ],
  "inline_genitems": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "inline_genitems"
      ]
    ]
  ],
  "inline_run": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "inline_run"
      ]
    ]
  ],
  "runpytest_inprocess": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "runpytest_inprocess"
      ]
    ]
  ],
  "runpytest": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "runpytest"
      ]
    ]
  ],
  "_ensure_basetemp": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "_ensure_basetemp"
      ]
    ]
  ],
  "parseconfig": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "parseconfig"
      ]
    ]
  ],
  "parseconfigure": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "parseconfigure"
      ]
    ]
  ],
  "getitem": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "getitem"
      ]
    ]
  ],
  "getitems": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "getitems"
      ]
    ]
  ],
  "getmodulecol": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "getmodulecol"
      ]
    ]
  ],
  "collect_by_name": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "collect_by_name"
      ]
    ]
  ],
  "popen": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "popen"
      ]
    ]
  ],
  "handle_timeout": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "run",
        "try_",
        "handle_timeout"
      ]
    ]
  ],
  "_dump_lines": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "_dump_lines"
      ]
    ]
  ],
  "_getpytestargs": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "_getpytestargs"
      ]
    ]
  ],
  "runpython": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "runpython"
      ]
    ]
  ],
  "runpython_c": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "runpython_c"
      ]
    ]
  ],
  "runpytest_subprocess": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "runpytest_subprocess"
      ]
    ]
  ],
  "spawn_pytest": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "spawn_pytest"
      ]
    ]
  ],
  "spawn": [
    [
      "src/_pytest/pytester.py",
      [
        "Testdir",
        "spawn"
      ]
    ]
  ],
  "getdecoded": [
    [
      "src/_pytest/pytester.py",
      [
        "getdecoded"
      ]
    ]
  ],
  "assert_contains_lines": [
    [
      "src/_pytest/pytester.py",
      [
        "LineComp",
        "assert_contains_lines"
      ]
    ]
  ],
  "str": [
    [
      "src/_pytest/pytester.py",
      [
        "LineMatcher",
        "str"
      ]
    ]
  ],
  "_getlines": [
    [
      "src/_pytest/pytester.py",
      [
        "LineMatcher",
        "_getlines"
      ]
    ]
  ],
  "fnmatch_lines_random": [
    [
      "src/_pytest/pytester.py",
      [
        "LineMatcher",
        "fnmatch_lines_random"
      ]
    ]
  ],
  "re_match_lines_random": [
    [
      "src/_pytest/pytester.py",
      [
        "LineMatcher",
        "re_match_lines_random"
      ]
    ]
  ],
  "_match_lines_random": [
    [
      "src/_pytest/pytester.py",
      [
        "LineMatcher",
        "_match_lines_random"
      ]
    ]
  ],
  "get_lines_after": [
    [
      "src/_pytest/pytester.py",
      [
        "LineMatcher",
        "get_lines_after"
      ]
    ]
  ],
  "_log": [
    [
      "src/_pytest/pytester.py",
      [
        "LineMatcher",
        "_log"
      ]
    ]
  ],
  "_log_text": [
    [
      "src/_pytest/pytester.py",
      [
        "LineMatcher",
        "_log_text"
      ]
    ]
  ],
  "fnmatch_lines": [
    [
      "src/_pytest/pytester.py",
      [
        "LineMatcher",
        "fnmatch_lines"
      ]
    ]
  ],
  "re_match_lines": [
    [
      "src/_pytest/pytester.py",
      [
        "LineMatcher",
        "re_match_lines"
      ]
    ]
  ],
  "_match_lines": [
    [
      "src/_pytest/pytester.py",
      [
        "LineMatcher",
        "_match_lines"
      ]
    ]
  ],
  "pyobj_property": [
    [
      "src/_pytest/python.py",
      [
        "pyobj_property"
      ]
    ]
  ],
  "path_matches_patterns": [
    [
      "src/_pytest/python.py",
      [
        "path_matches_patterns"
      ]
    ]
  ],
  "obj": [
    [
      "src/_pytest/python.py",
      [
        "PyobjMixin",
        "obj"
      ]
    ]
  ],
  "obj_1": [
    [
      "src/_pytest/python.py",
      [
        "PyobjMixin",
        "obj_1"
      ]
    ]
  ],
  "_getobj": [
    [
      "src/_pytest/python.py",
      [
        "PyobjMixin",
        "_getobj"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "Module",
        "_getobj"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "Instance",
        "_getobj"
      ]
    ],
    [
      "src/_pytest/python.py",
      [
        "Function",
        "_getobj"
      ]
    ]
  ],
  "getmodpath": [
    [
      "src/_pytest/python.py",
      [
        "PyobjMixin",
        "getmodpath"
      ]
    ]
  ],
  "funcnamefilter": [
    [
      "src/_pytest/python.py",
      [
        "PyCollector",
        "funcnamefilter"
      ]
    ]
  ],
  "isnosetest": [
    [
      "src/_pytest/python.py",
      [
        "PyCollector",
        "isnosetest"
      ]
    ]
  ],
  "classnamefilter": [
    [
      "src/_pytest/python.py",
      [
        "PyCollector",
        "classnamefilter"
      ]
    ]
  ],
  "istestfunction": [
    [
      "src/_pytest/python.py",
      [
        "PyCollector",
        "istestfunction"
      ]
    ]
  ],
  "istestclass": [
    [
      "src/_pytest/python.py",
      [
        "PyCollector",
        "istestclass"
      ]
    ]
  ],
  "_matches_prefix_or_glob_option": [
    [
      "src/_pytest/python.py",
      [
        "PyCollector",
        "_matches_prefix_or_glob_option"
      ]
    ]
  ],
  "_makeitem": [
    [
      "src/_pytest/python.py",
      [
        "PyCollector",
        "_makeitem"
      ]
    ]
  ],
  "_genfunctions": [
    [
      "src/_pytest/python.py",
      [
        "PyCollector",
        "_genfunctions"
      ]
    ]
  ],
  "xunit_setup_module_fixture": [
    [
      "src/_pytest/python.py",
      [
        "Module",
        "_inject_setup_module_fixture",
        "xunit_setup_module_fixture"
      ]
    ]
  ],
  "_inject_setup_module_fixture": [
    [
      "src/_pytest/python.py",
      [
        "Module",
        "_inject_setup_module_fixture"
      ]
    ]
  ],
  "xunit_setup_function_fixture": [
    [
      "src/_pytest/python.py",
      [
        "Module",
        "_inject_setup_function_fixture",
        "xunit_setup_function_fixture"
      ]
    ]
  ],
  "_inject_setup_function_fixture": [
    [
      "src/_pytest/python.py",
      [
        "Module",
        "_inject_setup_function_fixture"
      ]
    ]
  ],
  "_importtestmodule": [
    [
      "src/_pytest/python.py",
      [
        "Module",
        "_importtestmodule"
      ]
    ]
  ],
  "_call_with_optional_argument": [
    [
      "src/_pytest/python.py",
      [
        "_call_with_optional_argument"
      ]
    ]
  ],
  "_get_first_non_fixture_func": [
    [
      "src/_pytest/python.py",
      [
        "_get_first_non_fixture_func"
      ]
    ]
  ],
  "_inject_setup_class_fixture": [
    [
      "src/_pytest/python.py",
      [
        "Class",
        "_inject_setup_class_fixture"
      ]
    ]
  ],
  "_inject_setup_method_fixture": [
    [
      "src/_pytest/python.py",
      [
        "Class",
        "_inject_setup_method_fixture"
      ]
    ]
  ],
  "newinstance": [
    [
      "src/_pytest/python.py",
      [
        "Instance",
        "newinstance"
      ]
    ]
  ],
  "hasinit": [
    [
      "src/_pytest/python.py",
      [
        "hasinit"
      ]
    ]
  ],
  "hasnew": [
    [
      "src/_pytest/python.py",
      [
        "hasnew"
      ]
    ]
  ],
  "copy": [
    [
      "src/_pytest/python.py",
      [
        "CallSpec2",
        "copy"
      ]
    ]
  ],
  "_checkargnotcontained": [
    [
      "src/_pytest/python.py",
      [
        "CallSpec2",
        "_checkargnotcontained"
      ]
    ]
  ],
  "getparam": [
    [
      "src/_pytest/python.py",
      [
        "CallSpec2",
        "getparam"
      ]
    ]
  ],
  "id": [
    [
      "src/_pytest/python.py",
      [
        "CallSpec2",
        "id"
      ]
    ]
  ],
  "setmulti2": [
    [
      "src/_pytest/python.py",
      [
        "CallSpec2",
        "setmulti2"
      ]
    ]
  ],
  "parametrize": [
    [
      "src/_pytest/python.py",
      [
        "Metafunc",
        "parametrize"
      ]
    ]
  ],
  "_resolve_arg_ids": [
    [
      "src/_pytest/python.py",
      [
        "Metafunc",
        "_resolve_arg_ids"
      ]
    ]
  ],
  "_resolve_arg_value_types": [
    [
      "src/_pytest/python.py",
      [
        "Metafunc",
        "_resolve_arg_value_types"
      ]
    ]
  ],
  "_validate_if_using_arg_names": [
    [
      "src/_pytest/python.py",
      [
        "Metafunc",
        "_validate_if_using_arg_names"
      ]
    ]
  ],
  "_find_parametrized_scope": [
    [
      "src/_pytest/python.py",
      [
        "_find_parametrized_scope"
      ]
    ]
  ],
  "_ascii_escaped_by_config": [
    [
      "src/_pytest/python.py",
      [
        "_ascii_escaped_by_config"
      ]
    ]
  ],
  "_idval": [
    [
      "src/_pytest/python.py",
      [
        "_idval"
      ]
    ]
  ],
  "_idvalset": [
    [
      "src/_pytest/python.py",
      [
        "_idvalset"
      ]
    ]
  ],
  "idmaker": [
    [
      "src/_pytest/python.py",
      [
        "idmaker"
      ]
    ]
  ],
  "show_fixtures_per_test": [
    [
      "src/_pytest/python.py",
      [
        "show_fixtures_per_test"
      ]
    ]
  ],
  "get_best_relpath": [
    [
      "src/_pytest/python.py",
      [
        "_show_fixtures_per_test",
        "get_best_relpath"
      ]
    ]
  ],
  "write_fixture": [
    [
      "src/_pytest/python.py",
      [
        "_show_fixtures_per_test",
        "write_fixture"
      ]
    ]
  ],
  "write_item": [
    [
      "src/_pytest/python.py",
      [
        "_show_fixtures_per_test",
        "write_item"
      ]
    ]
  ],
  "_show_fixtures_per_test": [
    [
      "src/_pytest/python.py",
      [
        "_show_fixtures_per_test"
      ]
    ]
  ],
  "showfixtures": [
    [
      "src/_pytest/python.py",
      [
        "showfixtures"
      ]
    ]
  ],
  "_showfixtures_main": [
    [
      "src/_pytest/python.py",
      [
        "_showfixtures_main"
      ]
    ]
  ],
  "write_docstring": [
    [
      "src/_pytest/python.py",
      [
        "write_docstring"
      ]
    ]
  ],
  "_initrequest": [
    [
      "src/_pytest/python.py",
      [
        "Function",
        "_initrequest"
      ]
    ]
  ],
  "_pyfuncitem": [
    [
      "src/_pytest/python.py",
      [
        "Function",
        "_pyfuncitem"
      ]
    ]
  ],
  "_non_numeric_type_error": [
    [
      "src/_pytest/python_api.py",
      [
        "_non_numeric_type_error"
      ]
    ]
  ],
  "_approx_scalar": [
    [
      "src/_pytest/python_api.py",
      [
        "ApproxBase",
        "_approx_scalar"
      ]
    ]
  ],
  "_yield_comparisons": [
    [
      "src/_pytest/python_api.py",
      [
        "ApproxBase",
        "_yield_comparisons"
      ]
    ],
    [
      "src/_pytest/python_api.py",
      [
        "ApproxNumpy",
        "_yield_comparisons"
      ]
    ],
    [
      "src/_pytest/python_api.py",
      [
        "ApproxMapping",
        "_yield_comparisons"
      ]
    ],
    [
      "src/_pytest/python_api.py",
      [
        "ApproxSequencelike",
        "_yield_comparisons"
      ]
    ]
  ],
  "_check_type": [
    [
      "src/_pytest/python_api.py",
      [
        "ApproxBase",
        "_check_type"
      ]
    ],
    [
      "src/_pytest/python_api.py",
      [
        "ApproxMapping",
        "_check_type"
      ]
    ],
    [
      "src/_pytest/python_api.py",
      [
        "ApproxSequencelike",
        "_check_type"
      ]
    ]
  ],
  "_recursive_list_map": [
    [
      "src/_pytest/python_api.py",
      [
        "_recursive_list_map"
      ]
    ]
  ],
  "set_default": [
    [
      "src/_pytest/python_api.py",
      [
        "ApproxScalar",
        "tolerance",
        "set_default"
      ]
    ]
  ],
  "tolerance": [
    [
      "src/_pytest/python_api.py",
      [
        "ApproxScalar",
        "tolerance"
      ]
    ]
  ],
  "approx": [
    [
      "src/_pytest/python_api.py",
      [
        "approx"
      ]
    ]
  ],
  "_is_numpy_array": [
    [
      "src/_pytest/python_api.py",
      [
        "_is_numpy_array"
      ]
    ]
  ],
  "raises": [
    [
      "src/_pytest/python_api.py",
      [
        "raises"
      ]
    ]
  ],
  "raises_5": [
    [
      "src/_pytest/python_api.py",
      [
        "raises_5"
      ]
    ]
  ],
  "raises_6": [
    [
      "src/_pytest/python_api.py",
      [
        "raises_6"
      ]
    ]
  ],
  "__enter__": [
    [
      "src/_pytest/python_api.py",
      [
        "RaisesContext",
        "__enter__"
      ]
    ],
    [
      "src/_pytest/recwarn.py",
      [
        "WarningsRecorder",
        "__enter__"
      ]
    ]
  ],
  "__exit__": [
    [
      "src/_pytest/python_api.py",
      [
        "RaisesContext",
        "__exit__"
      ]
    ],
    [
      "src/_pytest/recwarn.py",
      [
        "WarningsRecorder",
        "__exit__"
      ]
    ],
    [
      "src/_pytest/recwarn.py",
      [
        "WarningsChecker",
        "__exit__"
      ]
    ]
  ],
  "recwarn": [
    [
      "src/_pytest/recwarn.py",
      [
        "recwarn"
      ]
    ]
  ],
  "deprecated_call": [
    [
      "src/_pytest/recwarn.py",
      [
        "deprecated_call"
      ]
    ]
  ],
  "warns": [
    [
      "src/_pytest/recwarn.py",
      [
        "warns"
      ]
    ]
  ],
  "warns_3": [
    [
      "src/_pytest/recwarn.py",
      [
        "warns_3"
      ]
    ]
  ],
  "warns_4": [
    [
      "src/_pytest/recwarn.py",
      [
        "warns_4"
      ]
    ]
  ],
  "list": [
    [
      "src/_pytest/recwarn.py",
      [
        "WarningsRecorder",
        "list"
      ]
    ]
  ],
  "pop": [
    [
      "src/_pytest/recwarn.py",
      [
        "WarningsRecorder",
        "pop"
      ]
    ]
  ],
  "getslaveinfoline": [
    [
      "src/_pytest/reports.py",
      [
        "getslaveinfoline"
      ]
    ]
  ],
  "get_sections": [
    [
      "src/_pytest/reports.py",
      [
        "BaseReport",
        "get_sections"
      ]
    ]
  ],
  "longreprtext": [
    [
      "src/_pytest/reports.py",
      [
        "BaseReport",
        "longreprtext"
      ]
    ]
  ],
  "capstdout": [
    [
      "src/_pytest/reports.py",
      [
        "BaseReport",
        "capstdout"
      ]
    ]
  ],
  "capstderr": [
    [
      "src/_pytest/reports.py",
      [
        "BaseReport",
        "capstderr"
      ]
    ]
  ],
  "count_towards_summary": [
    [
      "src/_pytest/reports.py",
      [
        "BaseReport",
        "count_towards_summary"
      ]
    ]
  ],
  "head_line": [
    [
      "src/_pytest/reports.py",
      [
        "BaseReport",
        "head_line"
      ]
    ]
  ],
  "_get_verbose_word": [
    [
      "src/_pytest/reports.py",
      [
        "BaseReport",
        "_get_verbose_word"
      ]
    ],
    [
      "testing/test_terminal.py",
      [
        "test_line_with_reprcrash",
        "rep",
        "_get_verbose_word"
      ]
    ]
  ],
  "_to_json": [
    [
      "src/_pytest/reports.py",
      [
        "BaseReport",
        "_to_json"
      ]
    ]
  ],
  "_from_json": [
    [
      "src/_pytest/reports.py",
      [
        "BaseReport",
        "_from_json"
      ]
    ]
  ],
  "_report_unserialization_failure": [
    [
      "src/_pytest/reports.py",
      [
        "_report_unserialization_failure"
      ]
    ]
  ],
  "from_item_and_call": [
    [
      "src/_pytest/reports.py",
      [
        "TestReport",
        "from_item_and_call"
      ]
    ]
  ],
  "serialize_repr_entry": [
    [
      "src/_pytest/reports.py",
      [
        "_report_to_json",
        "serialize_repr_entry"
      ]
    ]
  ],
  "serialize_repr_traceback": [
    [
      "src/_pytest/reports.py",
      [
        "_report_to_json",
        "serialize_repr_traceback"
      ]
    ]
  ],
  "serialize_repr_crash": [
    [
      "src/_pytest/reports.py",
      [
        "_report_to_json",
        "serialize_repr_crash"
      ]
    ]
  ],
  "serialize_longrepr": [
    [
      "src/_pytest/reports.py",
      [
        "_report_to_json",
        "serialize_longrepr"
      ]
    ]
  ],
  "_report_to_json": [
    [
      "src/_pytest/reports.py",
      [
        "_report_to_json"
      ]
    ]
  ],
  "deserialize_repr_entry": [
    [
      "src/_pytest/reports.py",
      [
        "_report_kwargs_from_json",
        "deserialize_repr_entry"
      ]
    ]
  ],
  "deserialize_repr_traceback": [
    [
      "src/_pytest/reports.py",
      [
        "_report_kwargs_from_json",
        "deserialize_repr_traceback"
      ]
    ]
  ],
  "deserialize_repr_crash": [
    [
      "src/_pytest/reports.py",
      [
        "_report_kwargs_from_json",
        "deserialize_repr_crash"
      ]
    ]
  ],
  "_report_kwargs_from_json": [
    [
      "src/_pytest/reports.py",
      [
        "_report_kwargs_from_json"
      ]
    ]
  ],
  "write_log_entry": [
    [
      "src/_pytest/resultlog.py",
      [
        "ResultLog",
        "write_log_entry"
      ]
    ]
  ],
  "log_outcome": [
    [
      "src/_pytest/resultlog.py",
      [
        "ResultLog",
        "log_outcome"
      ]
    ]
  ],
  "runtestprotocol": [
    [
      "src/_pytest/runner.py",
      [
        "runtestprotocol"
      ]
    ]
  ],
  "show_test_item": [
    [
      "src/_pytest/runner.py",
      [
        "show_test_item"
      ]
    ]
  ],
  "_update_current_test_var": [
    [
      "src/_pytest/runner.py",
      [
        "_update_current_test_var"
      ]
    ]
  ],
  "call_and_report": [
    [
      "src/_pytest/runner.py",
      [
        "call_and_report"
      ]
    ]
  ],
  "check_interactive_exception": [
    [
      "src/_pytest/runner.py",
      [
        "check_interactive_exception"
      ]
    ]
  ],
  "call_runtest_hook": [
    [
      "src/_pytest/runner.py",
      [
        "call_runtest_hook"
      ]
    ]
  ],
  "result": [
    [
      "src/_pytest/runner.py",
      [
        "CallInfo",
        "result"
      ]
    ]
  ],
  "from_call": [
    [
      "src/_pytest/runner.py",
      [
        "CallInfo",
        "from_call"
      ]
    ]
  ],
  "_pop_and_teardown": [
    [
      "src/_pytest/runner.py",
      [
        "SetupState",
        "_pop_and_teardown"
      ]
    ]
  ],
  "_callfinalizers": [
    [
      "src/_pytest/runner.py",
      [
        "SetupState",
        "_callfinalizers"
      ]
    ]
  ],
  "_teardown_with_finalization": [
    [
      "src/_pytest/runner.py",
      [
        "SetupState",
        "_teardown_with_finalization"
      ]
    ]
  ],
  "teardown_all": [
    [
      "src/_pytest/runner.py",
      [
        "SetupState",
        "teardown_all"
      ]
    ]
  ],
  "teardown_exact": [
    [
      "src/_pytest/runner.py",
      [
        "SetupState",
        "teardown_exact"
      ]
    ]
  ],
  "_teardown_towards": [
    [
      "src/_pytest/runner.py",
      [
        "SetupState",
        "_teardown_towards"
      ]
    ]
  ],
  "prepare": [
    [
      "src/_pytest/runner.py",
      [
        "SetupState",
        "prepare"
      ]
    ]
  ],
  "collect_one_node": [
    [
      "src/_pytest/runner.py",
      [
        "collect_one_node"
      ]
    ]
  ],
  "_show_fixture_action": [
    [
      "src/_pytest/setuponly.py",
      [
        "_show_fixture_action"
      ]
    ]
  ],
  "check_xfail_no_run": [
    [
      "src/_pytest/skipping.py",
      [
        "check_xfail_no_run"
      ]
    ]
  ],
  "check_strict_xfail": [
    [
      "src/_pytest/skipping.py",
      [
        "check_strict_xfail"
      ]
    ]
  ],
  "getreportopt": [
    [
      "src/_pytest/terminal.py",
      [
        "getreportopt"
      ]
    ]
  ],
  "get_location": [
    [
      "src/_pytest/terminal.py",
      [
        "WarningReport",
        "get_location"
      ]
    ]
  ],
  "_determine_show_progress_info": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "_determine_show_progress_info"
      ]
    ]
  ],
  "verbosity": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "verbosity"
      ]
    ]
  ],
  "showheader": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "showheader"
      ]
    ]
  ],
  "showfspath": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "showfspath"
      ]
    ]
  ],
  "showfspath_4": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "showfspath_4"
      ]
    ]
  ],
  "showlongtestinfo": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "showlongtestinfo"
      ]
    ]
  ],
  "hasopt": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "hasopt"
      ]
    ]
  ],
  "write_fspath_result": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "write_fspath_result"
      ]
    ]
  ],
  "write_ensure_prefix": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "write_ensure_prefix"
      ]
    ]
  ],
  "ensure_newline": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "ensure_newline"
      ]
    ]
  ],
  "write_line": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "write_line"
      ]
    ]
  ],
  "rewrite": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "rewrite"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "rewrite"
      ]
    ]
  ],
  "write_sep": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "write_sep"
      ]
    ]
  ],
  "section": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "section"
      ]
    ],
    [
      "testing/logging/test_reporting.py",
      [
        "test_live_logging_suspends_capture",
        "DummyTerminal",
        "section"
      ]
    ]
  ],
  "line": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "line"
      ]
    ],
    [
      "testing/conftest.py",
      [
        "tw_mock",
        "TWMock",
        "line"
      ]
    ]
  ],
  "_get_progress_information_message": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "_get_progress_information_message"
      ]
    ]
  ],
  "_write_progress_information_filling_space": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "_write_progress_information_filling_space"
      ]
    ]
  ],
  "_width_of_current_line": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "_width_of_current_line"
      ]
    ]
  ],
  "report_collect": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "report_collect"
      ]
    ]
  ],
  "_write_report_lines_from_hooks": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "_write_report_lines_from_hooks"
      ]
    ]
  ],
  "_printcollecteditems": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "_printcollecteditems"
      ]
    ]
  ],
  "_report_keyboardinterrupt": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "_report_keyboardinterrupt"
      ]
    ]
  ],
  "_locationline": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "_locationline"
      ]
    ]
  ],
  "_getfailureheadline": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "_getfailureheadline"
      ]
    ]
  ],
  "_getcrashline": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "_getcrashline"
      ]
    ]
  ],
  "summary_warnings": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "summary_warnings"
      ]
    ]
  ],
  "summary_passes": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "summary_passes"
      ]
    ]
  ],
  "print_teardown_sections": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "print_teardown_sections"
      ]
    ]
  ],
  "summary_failures": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "summary_failures"
      ]
    ]
  ],
  "summary_errors": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "summary_errors"
      ]
    ]
  ],
  "_outrep_summary": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "_outrep_summary"
      ]
    ]
  ],
  "summary_stats": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "summary_stats"
      ]
    ]
  ],
  "show_simple": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "short_test_summary",
        "show_simple"
      ]
    ]
  ],
  "show_xfailed": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "short_test_summary",
        "show_xfailed"
      ]
    ]
  ],
  "show_xpassed": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "short_test_summary",
        "show_xpassed"
      ]
    ]
  ],
  "show_skipped": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "short_test_summary",
        "show_skipped"
      ]
    ]
  ],
  "short_test_summary": [
    [
      "src/_pytest/terminal.py",
      [
        "TerminalReporter",
        "short_test_summary"
      ]
    ]
  ],
  "_get_pos": [
    [
      "src/_pytest/terminal.py",
      [
        "_get_pos"
      ]
    ]
  ],
  "_get_line_with_reprcrash_message": [
    [
      "src/_pytest/terminal.py",
      [
        "_get_line_with_reprcrash_message"
      ]
    ]
  ],
  "_folded_skips": [
    [
      "src/_pytest/terminal.py",
      [
        "_folded_skips"
      ]
    ]
  ],
  "build_summary_stats_line": [
    [
      "src/_pytest/terminal.py",
      [
        "build_summary_stats_line"
      ]
    ]
  ],
  "_plugin_nameversions": [
    [
      "src/_pytest/terminal.py",
      [
        "_plugin_nameversions"
      ]
    ]
  ],
  "format_session_duration": [
    [
      "src/_pytest/terminal.py",
      [
        "format_session_duration"
      ]
    ]
  ],
  "from_config": [
    [
      "src/_pytest/tmpdir.py",
      [
        "TempPathFactory",
        "from_config"
      ]
    ]
  ],
  "mktemp": [
    [
      "src/_pytest/tmpdir.py",
      [
        "TempPathFactory",
        "mktemp"
      ]
    ],
    [
      "src/_pytest/tmpdir.py",
      [
        "TempdirFactory",
        "mktemp"
      ]
    ]
  ],
  "getbasetemp": [
    [
      "src/_pytest/tmpdir.py",
      [
        "TempPathFactory",
        "getbasetemp"
      ]
    ],
    [
      "src/_pytest/tmpdir.py",
      [
        "TempdirFactory",
        "getbasetemp"
      ]
    ]
  ],
  "get_user": [
    [
      "src/_pytest/tmpdir.py",
      [
        "get_user"
      ]
    ]
  ],
  "tmpdir_factory": [
    [
      "src/_pytest/tmpdir.py",
      [
        "tmpdir_factory"
      ]
    ]
  ],
  "tmp_path_factory": [
    [
      "src/_pytest/tmpdir.py",
      [
        "tmp_path_factory"
      ]
    ]
  ],
  "_mk_tmp": [
    [
      "src/_pytest/tmpdir.py",
      [
        "_mk_tmp"
      ]
    ]
  ],
  "tmpdir": [
    [
      "src/_pytest/tmpdir.py",
      [
        "tmpdir"
      ]
    ]
  ],
  "tmp_path": [
    [
      "src/_pytest/tmpdir.py",
      [
        "tmp_path"
      ]
    ]
  ],
  "_inject_setup_teardown_fixtures": [
    [
      "src/_pytest/unittest.py",
      [
        "UnitTestCase",
        "_inject_setup_teardown_fixtures"
      ]
    ]
  ],
  "_make_xunit_fixture": [
    [
      "src/_pytest/unittest.py",
      [
        "_make_xunit_fixture"
      ]
    ]
  ],
  "startTest": [
    [
      "src/_pytest/unittest.py",
      [
        "TestCaseFunction",
        "startTest"
      ]
    ]
  ],
  "_addexcinfo": [
    [
      "src/_pytest/unittest.py",
      [
        "TestCaseFunction",
        "_addexcinfo"
      ]
    ]
  ],
  "addError": [
    [
      "src/_pytest/unittest.py",
      [
        "TestCaseFunction",
        "addError"
      ]
    ]
  ],
  "addFailure": [
    [
      "src/_pytest/unittest.py",
      [
        "TestCaseFunction",
        "addFailure"
      ]
    ]
  ],
  "addSkip": [
    [
      "src/_pytest/unittest.py",
      [
        "TestCaseFunction",
        "addSkip"
      ]
    ]
  ],
  "addExpectedFailure": [
    [
      "src/_pytest/unittest.py",
      [
        "TestCaseFunction",
        "addExpectedFailure"
      ]
    ]
  ],
  "addUnexpectedSuccess": [
    [
      "src/_pytest/unittest.py",
      [
        "TestCaseFunction",
        "addUnexpectedSuccess"
      ]
    ]
  ],
  "addSuccess": [
    [
      "src/_pytest/unittest.py",
      [
        "TestCaseFunction",
        "addSuccess"
      ]
    ]
  ],
  "stopTest": [
    [
      "src/_pytest/unittest.py",
      [
        "TestCaseFunction",
        "stopTest"
      ]
    ]
  ],
  "_handle_skip": [
    [
      "src/_pytest/unittest.py",
      [
        "TestCaseFunction",
        "_handle_skip"
      ]
    ]
  ],
  "excstore": [
    [
      "src/_pytest/unittest.py",
      [
        "pytest_runtest_protocol",
        "if_isinstance_item_TestC",
        "excstore"
      ]
    ]
  ],
  "check_testcase_implements_trial_reporter": [
    [
      "src/_pytest/unittest.py",
      [
        "check_testcase_implements_trial_reporter"
      ]
    ]
  ],
  "simple": [
    [
      "src/_pytest/warning_types.py",
      [
        "PytestExperimentalApiWarning",
        "simple"
      ]
    ]
  ],
  "_setoption": [
    [
      "src/_pytest/warnings.py",
      [
        "_setoption"
      ]
    ]
  ],
  "catch_warnings_for_item": [
    [
      "src/_pytest/warnings.py",
      [
        "catch_warnings_for_item"
      ]
    ]
  ],
  "warning_record_to_str": [
    [
      "src/_pytest/warnings.py",
      [
        "warning_record_to_str"
      ]
    ]
  ],
  "_issue_warning_captured": [
    [
      "src/_pytest/warnings.py",
      [
        "_issue_warning_captured"
      ]
    ]
  ],
  "prepend_pythonpath": [
    [
      "testing/acceptance_test.py",
      [
        "prepend_pythonpath"
      ]
    ]
  ],
  "test_config_error": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_config_error"
      ]
    ]
  ],
  "test_root_conftest_syntax_error": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_root_conftest_syntax_error"
      ]
    ]
  ],
  "test_early_hook_error_issue38_1": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_early_hook_error_issue38_1"
      ]
    ]
  ],
  "test_early_hook_configure_error_issue38": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_early_hook_configure_error_issue38"
      ]
    ]
  ],
  "test_file_not_found": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_file_not_found"
      ]
    ]
  ],
  "test_file_not_found_unconfigure_issue143": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_file_not_found_unconfigure_issue143"
      ]
    ]
  ],
  "test_config_preparse_plugin_option": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_config_preparse_plugin_option"
      ]
    ]
  ],
  "load": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_early_load_setuptools_name",
        "DummyEntryPoint",
        "load"
      ]
    ],
    [
      "testing/test_config.py",
      [
        "test_preparse_ordering_with_setuptools",
        "EntryPoint",
        "load"
      ]
    ],
    [
      "testing/test_config.py",
      [
        "test_plugin_preparse_prevents_setuptools_loading",
        "DummyEntryPoint",
        "load"
      ]
    ],
    [
      "testing/test_config.py",
      [
        "test_disable_plugin_autoload",
        "DummyEntryPoint",
        "load"
      ]
    ]
  ],
  "my_dists": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_early_load_setuptools_name",
        "my_dists"
      ]
    ],
    [
      "testing/test_config.py",
      [
        "test_preparse_ordering_with_setuptools",
        "my_dists"
      ]
    ]
  ],
  "test_early_load_setuptools_name": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_early_load_setuptools_name"
      ]
    ]
  ],
  "test_assertion_magic": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_assertion_magic"
      ]
    ]
  ],
  "test_nested_import_error": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_nested_import_error"
      ]
    ],
    [
      "testing/test_session.py",
      [
        "SessionTests",
        "test_nested_import_error"
      ]
    ]
  ],
  "test_not_collectable_arguments": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_not_collectable_arguments"
      ]
    ]
  ],
  "test_better_reporting_on_conftest_load_failure": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_better_reporting_on_conftest_load_failure"
      ]
    ]
  ],
  "test_early_skip": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_early_skip"
      ]
    ]
  ],
  "test_issue88_initial_file_multinodes": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_issue88_initial_file_multinodes"
      ]
    ]
  ],
  "test_issue93_initialnode_importing_capturing": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_issue93_initialnode_importing_capturing"
      ]
    ]
  ],
  "test_conftest_printing_shows_if_error": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_conftest_printing_shows_if_error"
      ]
    ]
  ],
  "test_chdir": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_chdir"
      ]
    ]
  ],
  "test_issue109_sibling_conftests_not_loaded": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_issue109_sibling_conftests_not_loaded"
      ]
    ]
  ],
  "test_directory_skipped": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_directory_skipped"
      ]
    ]
  ],
  "test_multiple_items_per_collector_byid": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_multiple_items_per_collector_byid"
      ]
    ]
  ],
  "test_skip_on_generated_funcarg_id": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_skip_on_generated_funcarg_id"
      ]
    ]
  ],
  "test_direct_addressing_selects": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_direct_addressing_selects"
      ]
    ]
  ],
  "test_direct_addressing_notfound": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_direct_addressing_notfound"
      ]
    ]
  ],
  "test_docstring_on_hookspec": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_docstring_on_hookspec"
      ]
    ]
  ],
  "test_initialization_error_issue49": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_initialization_error_issue49"
      ]
    ]
  ],
  "test_issue134_report_error_when_collecting_member": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_issue134_report_error_when_collecting_member"
      ]
    ]
  ],
  "test_report_all_failed_collections_initargs": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_report_all_failed_collections_initargs"
      ]
    ]
  ],
  "test_namespace_import_doesnt_confuse_import_hook": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_namespace_import_doesnt_confuse_import_hook"
      ]
    ]
  ],
  "test_unknown_option": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_unknown_option"
      ]
    ]
  ],
  "test_getsourcelines_error_issue553": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_getsourcelines_error_issue553"
      ]
    ]
  ],
  "test_plugins_given_as_strings": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_plugins_given_as_strings"
      ]
    ]
  ],
  "test_parametrized_with_bytes_regex": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_parametrized_with_bytes_regex"
      ]
    ]
  ],
  "test_parametrized_with_null_bytes": [
    [
      "testing/acceptance_test.py",
      [
        "TestGeneralUsage",
        "test_parametrized_with_null_bytes"
      ]
    ]
  ],
  "test_earlyinit": [
    [
      "testing/acceptance_test.py",
      [
        "TestInvocationVariants",
        "test_earlyinit"
      ]
    ]
  ],
  "test_pydoc": [
    [
      "testing/acceptance_test.py",
      [
        "TestInvocationVariants",
        "test_pydoc"
      ]
    ]
  ],
  "test_import_star_py_dot_test": [
    [
      "testing/acceptance_test.py",
      [
        "TestInvocationVariants",
        "test_import_star_py_dot_test"
      ]
    ]
  ],
  "test_import_star_pytest": [
    [
      "testing/acceptance_test.py",
      [
        "TestInvocationVariants",
        "test_import_star_pytest"
      ]
    ]
  ],
  "test_double_pytestcmdline": [
    [
      "testing/acceptance_test.py",
      [
        "TestInvocationVariants",
        "test_double_pytestcmdline"
      ]
    ]
  ],
  "test_python_minus_m_invocation_ok": [
    [
      "testing/acceptance_test.py",
      [
        "TestInvocationVariants",
        "test_python_minus_m_invocation_ok"
      ]
    ]
  ],
  "test_python_minus_m_invocation_fail": [
    [
      "testing/acceptance_test.py",
      [
        "TestInvocationVariants",
        "test_python_minus_m_invocation_fail"
      ]
    ]
  ],
  "test_python_pytest_package": [
    [
      "testing/acceptance_test.py",
      [
        "TestInvocationVariants",
        "test_python_pytest_package"
      ]
    ]
  ],
  "test_equivalence_pytest_pytest": [
    [
      "testing/acceptance_test.py",
      [
        "TestInvocationVariants",
        "test_equivalence_pytest_pytest"
      ]
    ]
  ],
  "test_invoke_with_invalid_type": [
    [
      "testing/acceptance_test.py",
      [
        "TestInvocationVariants",
        "test_invoke_with_invalid_type"
      ]
    ]
  ],
  "test_invoke_with_path": [
    [
      "testing/acceptance_test.py",
      [
        "TestInvocationVariants",
        "test_invoke_with_path"
      ]
    ]
  ],
  "test_invoke_plugin_api": [
    [
      "testing/acceptance_test.py",
      [
        "TestInvocationVariants",
        "test_invoke_plugin_api"
      ]
    ]
  ],
  "test_pyargs_importerror": [
    [
      "testing/acceptance_test.py",
      [
        "TestInvocationVariants",
        "test_pyargs_importerror"
      ]
    ]
  ],
  "test_pyargs_only_imported_once": [
    [
      "testing/acceptance_test.py",
      [
        "TestInvocationVariants",
        "test_pyargs_only_imported_once"
      ]
    ]
  ],
  "test_pyargs_filename_looks_like_module": [
    [
      "testing/acceptance_test.py",
      [
        "TestInvocationVariants",
        "test_pyargs_filename_looks_like_module"
      ]
    ]
  ],
  "test_cmdline_python_package": [
    [
      "testing/acceptance_test.py",
      [
        "TestInvocationVariants",
        "test_cmdline_python_package"
      ]
    ]
  ],
  "test_cmdline_python_namespace_package": [
    [
      "testing/acceptance_test.py",
      [
        "TestInvocationVariants",
        "test_cmdline_python_namespace_package"
      ]
    ]
  ],
  "test_invoke_test_and_doctestmodules": [
    [
      "testing/acceptance_test.py",
      [
        "TestInvocationVariants",
        "test_invoke_test_and_doctestmodules"
      ]
    ]
  ],
  "test_cmdline_python_package_symlink": [
    [
      "testing/acceptance_test.py",
      [
        "TestInvocationVariants",
        "test_cmdline_python_package_symlink"
      ]
    ]
  ],
  "test_cmdline_python_package_not_exists": [
    [
      "testing/acceptance_test.py",
      [
        "TestInvocationVariants",
        "test_cmdline_python_package_not_exists"
      ]
    ]
  ],
  "test_noclass_discovery_if_not_testcase": [
    [
      "testing/acceptance_test.py",
      [
        "TestInvocationVariants",
        "test_noclass_discovery_if_not_testcase"
      ]
    ]
  ],
  "test_doctest_id": [
    [
      "testing/acceptance_test.py",
      [
        "TestInvocationVariants",
        "test_doctest_id"
      ]
    ]
  ],
  "test_core_backward_compatibility": [
    [
      "testing/acceptance_test.py",
      [
        "TestInvocationVariants",
        "test_core_backward_compatibility"
      ]
    ]
  ],
  "test_has_plugin": [
    [
      "testing/acceptance_test.py",
      [
        "TestInvocationVariants",
        "test_has_plugin"
      ]
    ]
  ],
  "test_calls": [
    [
      "testing/acceptance_test.py",
      [
        "TestDurations",
        "test_calls"
      ]
    ]
  ],
  "test_calls_show_2": [
    [
      "testing/acceptance_test.py",
      [
        "TestDurations",
        "test_calls_show_2"
      ]
    ]
  ],
  "test_calls_showall": [
    [
      "testing/acceptance_test.py",
      [
        "TestDurations",
        "test_calls_showall"
      ]
    ]
  ],
  "test_calls_showall_verbose": [
    [
      "testing/acceptance_test.py",
      [
        "TestDurations",
        "test_calls_showall_verbose"
      ]
    ]
  ],
  "test_with_deselected": [
    [
      "testing/acceptance_test.py",
      [
        "TestDurations",
        "test_with_deselected"
      ]
    ]
  ],
  "test_with_failing_collection": [
    [
      "testing/acceptance_test.py",
      [
        "TestDurations",
        "test_with_failing_collection"
      ]
    ]
  ],
  "test_with_not": [
    [
      "testing/acceptance_test.py",
      [
        "TestDurations",
        "test_with_not"
      ]
    ]
  ],
  "test_setup_function": [
    [
      "testing/acceptance_test.py",
      [
        "TestDurationWithFixture",
        "test_setup_function"
      ]
    ]
  ],
  "test_zipimport_hook": [
    [
      "testing/acceptance_test.py",
      [
        "test_zipimport_hook"
      ]
    ]
  ],
  "test_import_plugin_unicode_name": [
    [
      "testing/acceptance_test.py",
      [
        "test_import_plugin_unicode_name"
      ]
    ]
  ],
  "test_pytest_plugins_as_module": [
    [
      "testing/acceptance_test.py",
      [
        "test_pytest_plugins_as_module"
      ]
    ]
  ],
  "test_deferred_hook_checking": [
    [
      "testing/acceptance_test.py",
      [
        "test_deferred_hook_checking"
      ]
    ]
  ],
  "test_fixture_values_leak": [
    [
      "testing/acceptance_test.py",
      [
        "test_fixture_values_leak"
      ]
    ]
  ],
  "test_fixture_order_respects_scope": [
    [
      "testing/acceptance_test.py",
      [
        "test_fixture_order_respects_scope"
      ]
    ]
  ],
  "test_frame_leak_on_failing_test": [
    [
      "testing/acceptance_test.py",
      [
        "test_frame_leak_on_failing_test"
      ]
    ]
  ],
  "test_fixture_mock_integration": [
    [
      "testing/acceptance_test.py",
      [
        "test_fixture_mock_integration"
      ]
    ]
  ],
  "test_usage_error_code": [
    [
      "testing/acceptance_test.py",
      [
        "test_usage_error_code"
      ]
    ]
  ],
  "test_warn_on_async_function": [
    [
      "testing/acceptance_test.py",
      [
        "test_warn_on_async_function"
      ]
    ]
  ],
  "test_warn_on_async_gen_function": [
    [
      "testing/acceptance_test.py",
      [
        "test_warn_on_async_gen_function"
      ]
    ]
  ],
  "test_ne": [
    [
      "testing/code/test_code.py",
      [
        "test_ne"
      ]
    ]
  ],
  "test_code_gives_back_name_for_not_existing_file": [
    [
      "testing/code/test_code.py",
      [
        "test_code_gives_back_name_for_not_existing_file"
      ]
    ]
  ],
  "test_code_with_class": [
    [
      "testing/code/test_code.py",
      [
        "test_code_with_class"
      ]
    ]
  ],
  "x": [
    [
      "testing/code/test_code.py",
      [
        "x"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_boolop",
        "x"
      ]
    ]
  ],
  "test_code_fullsource": [
    [
      "testing/code/test_code.py",
      [
        "test_code_fullsource"
      ]
    ]
  ],
  "test_code_source": [
    [
      "testing/code/test_code.py",
      [
        "test_code_source"
      ]
    ]
  ],
  "test_frame_getsourcelineno_myself": [
    [
      "testing/code/test_code.py",
      [
        "test_frame_getsourcelineno_myself"
      ]
    ]
  ],
  "test_getstatement_empty_fullsource": [
    [
      "testing/code/test_code.py",
      [
        "test_getstatement_empty_fullsource"
      ]
    ]
  ],
  "test_code_from_func": [
    [
      "testing/code/test_code.py",
      [
        "test_code_from_func"
      ]
    ]
  ],
  "test_unicode_handling": [
    [
      "testing/code/test_code.py",
      [
        "test_unicode_handling"
      ]
    ]
  ],
  "test_code_getargs": [
    [
      "testing/code/test_code.py",
      [
        "test_code_getargs"
      ]
    ]
  ],
  "test_frame_getargs": [
    [
      "testing/code/test_code.py",
      [
        "test_frame_getargs"
      ]
    ]
  ],
  "test_bad_getsource": [
    [
      "testing/code/test_code.py",
      [
        "TestExceptionInfo",
        "test_bad_getsource"
      ]
    ]
  ],
  "test_from_current_with_missing": [
    [
      "testing/code/test_code.py",
      [
        "TestExceptionInfo",
        "test_from_current_with_missing"
      ]
    ]
  ],
  "test_getsource": [
    [
      "testing/code/test_code.py",
      [
        "TestTracebackEntry",
        "test_getsource"
      ]
    ]
  ],
  "test_not_raise_exception_with_mixed_encoding": [
    [
      "testing/code/test_code.py",
      [
        "TestReprFuncArgs",
        "test_not_raise_exception_with_mixed_encoding"
      ]
    ]
  ],
  "limited_recursion_depth": [
    [
      "testing/code/test_excinfo.py",
      [
        "limited_recursion_depth"
      ]
    ]
  ],
  "test_excinfo_simple": [
    [
      "testing/code/test_excinfo.py",
      [
        "test_excinfo_simple"
      ]
    ]
  ],
  "test_excinfo_from_exc_info_simple": [
    [
      "testing/code/test_excinfo.py",
      [
        "test_excinfo_from_exc_info_simple"
      ]
    ]
  ],
  "test_excinfo_getstatement": [
    [
      "testing/code/test_excinfo.py",
      [
        "test_excinfo_getstatement"
      ]
    ]
  ],
  "f": [
    [
      "testing/code/test_excinfo.py",
      [
        "f"
      ]
    ],
    [
      "testing/code/test_excinfo.py",
      [
        "TestTraceback_f_g_h",
        "test_traceback_filter_selective",
        "f"
      ]
    ],
    [
      "testing/code/test_source.py",
      [
        "test_getfslineno",
        "f"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_name",
        "f"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_dont_rewrite_if_hasattr_fails",
        "f"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_boolop",
        "f"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_call",
        "f"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_comparisons",
        "f"
      ]
    ],
    [
      "testing/test_runner.py",
      [
        "test_importorskip",
        "f"
      ]
    ]
  ],
  "g": [
    [
      "testing/code/test_excinfo.py",
      [
        "g"
      ]
    ],
    [
      "testing/code/test_excinfo.py",
      [
        "TestTraceback_f_g_h",
        "test_traceback_filter_selective",
        "g"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_call",
        "g"
      ]
    ]
  ],
  "h": [
    [
      "testing/code/test_excinfo.py",
      [
        "h"
      ]
    ],
    [
      "testing/code/test_excinfo.py",
      [
        "TestTraceback_f_g_h",
        "test_traceback_filter_selective",
        "h"
      ]
    ]
  ],
  "test_traceback_entries": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestTraceback_f_g_h",
        "test_traceback_entries"
      ]
    ]
  ],
  "test_traceback_entry_getsource": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestTraceback_f_g_h",
        "test_traceback_entry_getsource"
      ]
    ]
  ],
  "test_traceback_entry_getsource_in_construct": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestTraceback_f_g_h",
        "test_traceback_entry_getsource_in_construct"
      ]
    ]
  ],
  "test_traceback_cut": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestTraceback_f_g_h",
        "test_traceback_cut"
      ]
    ]
  ],
  "test_traceback_cut_excludepath": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestTraceback_f_g_h",
        "test_traceback_cut_excludepath"
      ]
    ]
  ],
  "test_traceback_filter": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestTraceback_f_g_h",
        "test_traceback_filter"
      ]
    ]
  ],
  "test_traceback_filter_selective": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestTraceback_f_g_h",
        "test_traceback_filter_selective"
      ]
    ]
  ],
  "test_traceback_recursion_index": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestTraceback_f_g_h",
        "test_traceback_recursion_index"
      ]
    ]
  ],
  "test_traceback_only_specific_recursion_errors": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestTraceback_f_g_h",
        "test_traceback_only_specific_recursion_errors"
      ]
    ]
  ],
  "test_traceback_no_recursion_index": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestTraceback_f_g_h",
        "test_traceback_no_recursion_index"
      ]
    ]
  ],
  "test_traceback_messy_recursion": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestTraceback_f_g_h",
        "test_traceback_messy_recursion"
      ]
    ]
  ],
  "test_traceback_getcrashentry": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestTraceback_f_g_h",
        "test_traceback_getcrashentry"
      ]
    ]
  ],
  "test_traceback_getcrashentry_empty": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestTraceback_f_g_h",
        "test_traceback_getcrashentry_empty"
      ]
    ]
  ],
  "test_excinfo_exconly": [
    [
      "testing/code/test_excinfo.py",
      [
        "test_excinfo_exconly"
      ]
    ]
  ],
  "test_excinfo_repr_str": [
    [
      "testing/code/test_excinfo.py",
      [
        "test_excinfo_repr_str"
      ]
    ]
  ],
  "test_excinfo_for_later": [
    [
      "testing/code/test_excinfo.py",
      [
        "test_excinfo_for_later"
      ]
    ]
  ],
  "test_excinfo_errisinstance": [
    [
      "testing/code/test_excinfo.py",
      [
        "test_excinfo_errisinstance"
      ]
    ]
  ],
  "test_excinfo_no_sourcecode": [
    [
      "testing/code/test_excinfo.py",
      [
        "test_excinfo_no_sourcecode"
      ]
    ]
  ],
  "test_excinfo_no_python_sourcecode": [
    [
      "testing/code/test_excinfo.py",
      [
        "test_excinfo_no_python_sourcecode"
      ]
    ]
  ],
  "test_entrysource_Queue_example": [
    [
      "testing/code/test_excinfo.py",
      [
        "test_entrysource_Queue_example"
      ]
    ]
  ],
  "test_codepath_Queue_example": [
    [
      "testing/code/test_excinfo.py",
      [
        "test_codepath_Queue_example"
      ]
    ]
  ],
  "test_match_succeeds": [
    [
      "testing/code/test_excinfo.py",
      [
        "test_match_succeeds"
      ]
    ]
  ],
  "test_match_raises_error": [
    [
      "testing/code/test_excinfo.py",
      [
        "test_match_raises_error"
      ]
    ]
  ],
  "importasmod": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "importasmod"
      ]
    ]
  ],
  "excinfo_from_exec": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "excinfo_from_exec"
      ]
    ]
  ],
  "test_repr_source": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_repr_source"
      ]
    ]
  ],
  "test_repr_source_excinfo": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_repr_source_excinfo"
      ]
    ]
  ],
  "test_repr_source_not_existing": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_repr_source_not_existing"
      ]
    ]
  ],
  "test_repr_many_line_source_not_existing": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_repr_many_line_source_not_existing"
      ]
    ]
  ],
  "test_repr_source_failing_fullsource": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_repr_source_failing_fullsource"
      ]
    ]
  ],
  "test_repr_local": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_repr_local"
      ]
    ]
  ],
  "test_repr_local_with_error": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_repr_local_with_error"
      ]
    ]
  ],
  "test_repr_local_with_exception_in_class_property": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_repr_local_with_exception_in_class_property"
      ]
    ]
  ],
  "test_repr_local_truncated": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_repr_local_truncated"
      ]
    ]
  ],
  "test_repr_tracebackentry_lines": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_repr_tracebackentry_lines"
      ]
    ]
  ],
  "test_repr_tracebackentry_lines2": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_repr_tracebackentry_lines2"
      ]
    ]
  ],
  "test_repr_tracebackentry_lines_var_kw_args": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_repr_tracebackentry_lines_var_kw_args"
      ]
    ]
  ],
  "test_repr_tracebackentry_short": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_repr_tracebackentry_short"
      ]
    ]
  ],
  "test_repr_tracebackentry_no": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_repr_tracebackentry_no"
      ]
    ]
  ],
  "test_repr_traceback_tbfilter": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_repr_traceback_tbfilter"
      ]
    ]
  ],
  "test_traceback_short_no_source": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_traceback_short_no_source"
      ]
    ]
  ],
  "test_repr_traceback_and_excinfo": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_repr_traceback_and_excinfo"
      ]
    ]
  ],
  "test_repr_traceback_with_invalid_cwd": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_repr_traceback_with_invalid_cwd"
      ]
    ]
  ],
  "test_repr_excinfo_addouterr": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_repr_excinfo_addouterr"
      ]
    ]
  ],
  "test_repr_excinfo_reprcrash": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_repr_excinfo_reprcrash"
      ]
    ]
  ],
  "test_repr_traceback_recursion": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_repr_traceback_recursion"
      ]
    ]
  ],
  "test_reprexcinfo_getrepr": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_reprexcinfo_getrepr"
      ]
    ]
  ],
  "test_reprexcinfo_unicode": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_reprexcinfo_unicode"
      ]
    ]
  ],
  "test_toterminal_long": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_toterminal_long"
      ]
    ]
  ],
  "test_toterminal_long_missing_source": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_toterminal_long_missing_source"
      ]
    ]
  ],
  "test_toterminal_long_incomplete_source": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_toterminal_long_incomplete_source"
      ]
    ]
  ],
  "test_toterminal_long_filenames": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_toterminal_long_filenames"
      ]
    ]
  ],
  "test_format_excinfo": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_format_excinfo"
      ]
    ]
  ],
  "test_traceback_repr_style": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_traceback_repr_style"
      ]
    ]
  ],
  "test_exc_chain_repr": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_exc_chain_repr"
      ]
    ]
  ],
  "test_exc_repr_chain_suppression": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_exc_repr_chain_suppression"
      ]
    ]
  ],
  "test_exc_chain_repr_without_traceback": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_exc_chain_repr_without_traceback"
      ]
    ]
  ],
  "test_exc_chain_repr_cycle": [
    [
      "testing/code/test_excinfo.py",
      [
        "TestFormattedExcinfo",
        "test_exc_chain_repr_cycle"
      ]
    ]
  ],
  "test_repr_traceback_with_unicode": [
    [
      "testing/code/test_excinfo.py",
      [
        "test_repr_traceback_with_unicode"
      ]
    ]
  ],
  "test_cwd_deleted": [
    [
      "testing/code/test_excinfo.py",
      [
        "test_cwd_deleted"
      ]
    ]
  ],
  "a": [
    [
      "testing/code/test_excinfo.py",
      [
        "test_exception_repr_extraction_error_on_recursion",
        "a"
      ]
    ],
    [
      "testing/example_scripts/fixtures/test_getfixturevalue_dynamic.py",
      [
        "a"
      ]
    ]
  ],
  "b": [
    [
      "testing/code/test_excinfo.py",
      [
        "test_exception_repr_extraction_error_on_recursion",
        "b"
      ]
    ],
    [
      "testing/example_scripts/fixtures/test_getfixturevalue_dynamic.py",
      [
        "b"
      ]
    ]
  ],
  "test_exception_repr_extraction_error_on_recursion": [
    [
      "testing/code/test_excinfo.py",
      [
        "test_exception_repr_extraction_error_on_recursion"
      ]
    ]
  ],
  "test_no_recursion_index_on_recursion_error": [
    [
      "testing/code/test_excinfo.py",
      [
        "test_no_recursion_index_on_recursion_error"
      ]
    ]
  ],
  "test_source_str_function": [
    [
      "testing/code/test_source.py",
      [
        "test_source_str_function"
      ]
    ]
  ],
  "test_unicode": [
    [
      "testing/code/test_source.py",
      [
        "test_unicode"
      ]
    ],
    [
      "testing/io/test_saferepr.py",
      [
        "test_unicode"
      ]
    ],
    [
      "testing/logging/test_fixture.py",
      [
        "test_unicode"
      ]
    ],
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_unicode"
      ]
    ],
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_unicode"
      ]
    ],
    [
      "testing/test_warnings.py",
      [
        "test_unicode"
      ]
    ]
  ],
  "test_source_from_function": [
    [
      "testing/code/test_source.py",
      [
        "test_source_from_function"
      ]
    ]
  ],
  "test_source_from_method": [
    [
      "testing/code/test_source.py",
      [
        "test_source_from_method"
      ]
    ]
  ],
  "test_source_from_lines": [
    [
      "testing/code/test_source.py",
      [
        "test_source_from_lines"
      ]
    ]
  ],
  "test_source_from_inner_function": [
    [
      "testing/code/test_source.py",
      [
        "test_source_from_inner_function"
      ]
    ]
  ],
  "test_source_putaround_simple": [
    [
      "testing/code/test_source.py",
      [
        "test_source_putaround_simple"
      ]
    ]
  ],
  "test_source_putaround": [
    [
      "testing/code/test_source.py",
      [
        "test_source_putaround"
      ]
    ]
  ],
  "test_source_strips": [
    [
      "testing/code/test_source.py",
      [
        "test_source_strips"
      ]
    ]
  ],
  "test_source_strip_multiline": [
    [
      "testing/code/test_source.py",
      [
        "test_source_strip_multiline"
      ]
    ]
  ],
  "test_syntaxerror_rerepresentation": [
    [
      "testing/code/test_source.py",
      [
        "test_syntaxerror_rerepresentation"
      ]
    ]
  ],
  "test_isparseable": [
    [
      "testing/code/test_source.py",
      [
        "test_isparseable"
      ]
    ]
  ],
  "test_getrange": [
    [
      "testing/code/test_source.py",
      [
        "TestAccesses",
        "test_getrange"
      ]
    ]
  ],
  "test_getline": [
    [
      "testing/code/test_source.py",
      [
        "TestAccesses",
        "test_getline"
      ]
    ]
  ],
  "test_len": [
    [
      "testing/code/test_source.py",
      [
        "TestAccesses",
        "test_len"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_len"
      ]
    ]
  ],
  "test_iter": [
    [
      "testing/code/test_source.py",
      [
        "TestAccesses",
        "test_iter"
      ]
    ]
  ],
  "test_compile": [
    [
      "testing/code/test_source.py",
      [
        "TestSourceParsingAndCompiling",
        "test_compile"
      ]
    ]
  ],
  "test_compile_and_getsource_simple": [
    [
      "testing/code/test_source.py",
      [
        "TestSourceParsingAndCompiling",
        "test_compile_and_getsource_simple"
      ]
    ]
  ],
  "test_compile_and_getsource_through_same_function": [
    [
      "testing/code/test_source.py",
      [
        "TestSourceParsingAndCompiling",
        "test_compile_and_getsource_through_same_function"
      ]
    ]
  ],
  "test_getstatement": [
    [
      "testing/code/test_source.py",
      [
        "TestSourceParsingAndCompiling",
        "test_getstatement"
      ]
    ]
  ],
  "test_getstatementrange_triple_quoted": [
    [
      "testing/code/test_source.py",
      [
        "TestSourceParsingAndCompiling",
        "test_getstatementrange_triple_quoted"
      ]
    ]
  ],
  "test_getstatementrange_within_constructs": [
    [
      "testing/code/test_source.py",
      [
        "TestSourceParsingAndCompiling",
        "test_getstatementrange_within_constructs"
      ]
    ]
  ],
  "test_getstatementrange_bug": [
    [
      "testing/code/test_source.py",
      [
        "TestSourceParsingAndCompiling",
        "test_getstatementrange_bug"
      ]
    ]
  ],
  "test_getstatementrange_bug2": [
    [
      "testing/code/test_source.py",
      [
        "TestSourceParsingAndCompiling",
        "test_getstatementrange_bug2"
      ]
    ]
  ],
  "test_getstatementrange_ast_issue58": [
    [
      "testing/code/test_source.py",
      [
        "TestSourceParsingAndCompiling",
        "test_getstatementrange_ast_issue58"
      ]
    ]
  ],
  "test_getstatementrange_out_of_bounds_py3": [
    [
      "testing/code/test_source.py",
      [
        "TestSourceParsingAndCompiling",
        "test_getstatementrange_out_of_bounds_py3"
      ]
    ]
  ],
  "test_getstatementrange_with_syntaxerror_issue7": [
    [
      "testing/code/test_source.py",
      [
        "TestSourceParsingAndCompiling",
        "test_getstatementrange_with_syntaxerror_issue7"
      ]
    ]
  ],
  "test_compile_to_ast": [
    [
      "testing/code/test_source.py",
      [
        "TestSourceParsingAndCompiling",
        "test_compile_to_ast"
      ]
    ]
  ],
  "test_compile_and_getsource": [
    [
      "testing/code/test_source.py",
      [
        "TestSourceParsingAndCompiling",
        "test_compile_and_getsource"
      ]
    ]
  ],
  "test_compilefuncs_and_path_sanity": [
    [
      "testing/code/test_source.py",
      [
        "TestSourceParsingAndCompiling",
        "test_compilefuncs_and_path_sanity"
      ]
    ]
  ],
  "test_offsetless_synerr": [
    [
      "testing/code/test_source.py",
      [
        "TestSourceParsingAndCompiling",
        "test_offsetless_synerr"
      ]
    ]
  ],
  "test_getstartingblock_singleline": [
    [
      "testing/code/test_source.py",
      [
        "test_getstartingblock_singleline"
      ]
    ]
  ],
  "test_getline_finally": [
    [
      "testing/code/test_source.py",
      [
        "test_getline_finally"
      ]
    ]
  ],
  "test_getfuncsource_dynamic": [
    [
      "testing/code/test_source.py",
      [
        "test_getfuncsource_dynamic"
      ]
    ]
  ],
  "test_getfuncsource_with_multine_string": [
    [
      "testing/code/test_source.py",
      [
        "test_getfuncsource_with_multine_string"
      ]
    ]
  ],
  "test_deindent": [
    [
      "testing/code/test_source.py",
      [
        "test_deindent"
      ]
    ]
  ],
  "test_source_of_class_at_eof_without_newline": [
    [
      "testing/code/test_source.py",
      [
        "test_source_of_class_at_eof_without_newline"
      ]
    ]
  ],
  "test_getsource_fallback": [
    [
      "testing/code/test_source.py",
      [
        "test_getsource_fallback"
      ]
    ]
  ],
  "test_idem_compile_and_getsource": [
    [
      "testing/code/test_source.py",
      [
        "test_idem_compile_and_getsource"
      ]
    ]
  ],
  "test_findsource_fallback": [
    [
      "testing/code/test_source.py",
      [
        "test_findsource_fallback"
      ]
    ]
  ],
  "test_findsource": [
    [
      "testing/code/test_source.py",
      [
        "test_findsource"
      ]
    ]
  ],
  "test_getfslineno": [
    [
      "testing/code/test_source.py",
      [
        "test_getfslineno"
      ]
    ]
  ],
  "test_code_of_object_instance_with_call": [
    [
      "testing/code/test_source.py",
      [
        "test_code_of_object_instance_with_call"
      ]
    ]
  ],
  "test_oneline": [
    [
      "testing/code/test_source.py",
      [
        "test_oneline"
      ]
    ]
  ],
  "test_comment_and_no_newline_at_end": [
    [
      "testing/code/test_source.py",
      [
        "test_comment_and_no_newline_at_end"
      ]
    ]
  ],
  "test_oneline_and_comment": [
    [
      "testing/code/test_source.py",
      [
        "test_oneline_and_comment"
      ]
    ]
  ],
  "test_comments": [
    [
      "testing/code/test_source.py",
      [
        "test_comments"
      ]
    ]
  ],
  "test_comment_in_statement": [
    [
      "testing/code/test_source.py",
      [
        "test_comment_in_statement"
      ]
    ]
  ],
  "test_single_line_else": [
    [
      "testing/code/test_source.py",
      [
        "test_single_line_else"
      ]
    ]
  ],
  "test_single_line_finally": [
    [
      "testing/code/test_source.py",
      [
        "test_single_line_finally"
      ]
    ]
  ],
  "test_issue55": [
    [
      "testing/code/test_source.py",
      [
        "test_issue55"
      ]
    ]
  ],
  "test_body": [
    [
      "testing/code/test_source.py",
      [
        "TestTry",
        "test_body"
      ]
    ],
    [
      "testing/code/test_source.py",
      [
        "TestTryFinally",
        "test_body"
      ]
    ],
    [
      "testing/code/test_source.py",
      [
        "TestIf",
        "test_body"
      ]
    ]
  ],
  "test_except_line": [
    [
      "testing/code/test_source.py",
      [
        "TestTry",
        "test_except_line"
      ]
    ]
  ],
  "test_except_body": [
    [
      "testing/code/test_source.py",
      [
        "TestTry",
        "test_except_body"
      ]
    ]
  ],
  "test_else": [
    [
      "testing/code/test_source.py",
      [
        "TestTry",
        "test_else"
      ]
    ],
    [
      "testing/code/test_source.py",
      [
        "TestIf",
        "test_else"
      ]
    ]
  ],
  "test_finally": [
    [
      "testing/code/test_source.py",
      [
        "TestTryFinally",
        "test_finally"
      ]
    ]
  ],
  "test_elif_clause": [
    [
      "testing/code/test_source.py",
      [
        "TestIf",
        "test_elif_clause"
      ]
    ]
  ],
  "test_elif": [
    [
      "testing/code/test_source.py",
      [
        "TestIf",
        "test_elif"
      ]
    ]
  ],
  "test_semicolon": [
    [
      "testing/code/test_source.py",
      [
        "test_semicolon"
      ]
    ]
  ],
  "test_def_online": [
    [
      "testing/code/test_source.py",
      [
        "test_def_online"
      ]
    ]
  ],
  "XXX_test_expression_multiline": [
    [
      "testing/code/test_source.py",
      [
        "XXX_test_expression_multiline"
      ]
    ]
  ],
  "test_getstartingblock_multiline": [
    [
      "testing/code/test_source.py",
      [
        "test_getstartingblock_multiline"
      ]
    ]
  ],
  "sep": [
    [
      "testing/conftest.py",
      [
        "tw_mock",
        "TWMock",
        "sep"
      ]
    ]
  ],
  "markup": [
    [
      "testing/conftest.py",
      [
        "tw_mock",
        "TWMock",
        "markup"
      ]
    ]
  ],
  "get_write_msg": [
    [
      "testing/conftest.py",
      [
        "tw_mock",
        "TWMock",
        "get_write_msg"
      ]
    ]
  ],
  "tw_mock": [
    [
      "testing/conftest.py",
      [
        "tw_mock"
      ]
    ]
  ],
  "dummy_yaml_custom_test": [
    [
      "testing/conftest.py",
      [
        "dummy_yaml_custom_test"
      ]
    ]
  ],
  "test_resultlog_is_deprecated": [
    [
      "testing/deprecated_test.py",
      [
        "test_resultlog_is_deprecated"
      ]
    ]
  ],
  "test_terminal_reporter_writer_attr": [
    [
      "testing/deprecated_test.py",
      [
        "test_terminal_reporter_writer_attr"
      ]
    ]
  ],
  "test_external_plugins_integrated": [
    [
      "testing/deprecated_test.py",
      [
        "test_external_plugins_integrated"
      ]
    ]
  ],
  "my_fixture": [
    [
      "testing/example_scripts/acceptance/fixture_mock_integration.py",
      [
        "my_fixture"
      ]
    ]
  ],
  "test_foobar": [
    [
      "testing/example_scripts/acceptance/fixture_mock_integration.py",
      [
        "test_foobar"
      ]
    ]
  ],
  "test_init": [
    [
      "testing/example_scripts/collect/collect_init_tests/tests/__init__.py",
      [
        "test_init"
      ]
    ]
  ],
  "test": [
    [
      "testing/example_scripts/collect/package_infinite_recursion/tests/test_basic.py",
      [
        "test"
      ]
    ],
    [
      "testing/example_scripts/collect/package_init_given_as_arg/pkg/test_foo.py",
      [
        "test"
      ]
    ],
    [
      "testing/example_scripts/fixtures/custom_item/foo/test_foo.py",
      [
        "test"
      ]
    ],
    [
      "testing/example_scripts/fixtures/fill_fixtures/test_detect_recursive_dependency_error.py",
      [
        "test"
      ]
    ],
    [
      "testing/example_scripts/fixtures/test_fixture_named_request.py",
      [
        "test"
      ]
    ],
    [
      "testing/example_scripts/fixtures/test_getfixturevalue_dynamic.py",
      [
        "test"
      ]
    ],
    [
      "testing/example_scripts/unittest/test_setup_skip_module.py",
      [
        "Base",
        "test"
      ]
    ]
  ],
  "test_dataclasses": [
    [
      "testing/example_scripts/dataclasses/test_compare_dataclasses.py",
      [
        "test_dataclasses"
      ]
    ],
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare_dataclass",
        "test_dataclasses"
      ]
    ]
  ],
  "test_dataclasses_with_attribute_comparison_off": [
    [
      "testing/example_scripts/dataclasses/test_compare_dataclasses_field_comparison_off.py",
      [
        "test_dataclasses_with_attribute_comparison_off"
      ]
    ],
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare_dataclass",
        "test_dataclasses_with_attribute_comparison_off"
      ]
    ]
  ],
  "test_dataclasses_verbose": [
    [
      "testing/example_scripts/dataclasses/test_compare_dataclasses_verbose.py",
      [
        "test_dataclasses_verbose"
      ]
    ],
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare_dataclass",
        "test_dataclasses_verbose"
      ]
    ]
  ],
  "test_comparing_two_different_data_classes": [
    [
      "testing/example_scripts/dataclasses/test_compare_two_different_dataclasses.py",
      [
        "test_comparing_two_different_data_classes"
      ]
    ],
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare_dataclass",
        "test_comparing_two_different_data_classes"
      ]
    ]
  ],
  "arg1": [
    [
      "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub1/conftest.py",
      [
        "arg1"
      ]
    ]
  ],
  "test_1": [
    [
      "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub1/test_in_sub1.py",
      [
        "test_1"
      ]
    ]
  ],
  "arg2": [
    [
      "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub2/conftest.py",
      [
        "arg2"
      ]
    ]
  ],
  "test_2": [
    [
      "testing/example_scripts/fixtures/fill_fixtures/test_conftest_funcargs_only_available_in_subdir/sub2/test_in_sub2.py",
      [
        "test_2"
      ]
    ]
  ],
  "fix1": [
    [
      "testing/example_scripts/fixtures/fill_fixtures/test_detect_recursive_dependency_error.py",
      [
        "fix1"
      ]
    ],
    [
      "testing/example_scripts/issue_519.py",
      [
        "fix1"
      ]
    ]
  ],
  "fix2": [
    [
      "testing/example_scripts/fixtures/fill_fixtures/test_detect_recursive_dependency_error.py",
      [
        "fix2"
      ]
    ],
    [
      "testing/example_scripts/issue_519.py",
      [
        "fix2"
      ]
    ]
  ],
  "spam": [
    [
      "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/conftest.py",
      [
        "spam"
      ]
    ],
    [
      "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/pkg/conftest.py",
      [
        "spam"
      ]
    ],
    [
      "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_module/conftest.py",
      [
        "spam"
      ]
    ],
    [
      "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_module/test_extend_fixture_conftest_module.py",
      [
        "spam"
      ]
    ],
    [
      "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_module_class.py",
      [
        "spam"
      ]
    ],
    [
      "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_module_class.py",
      [
        "TestSpam",
        "spam"
      ]
    ]
  ],
  "test_spam": [
    [
      "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_conftest/pkg/test_spam.py",
      [
        "test_spam"
      ]
    ],
    [
      "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_conftest_module/test_extend_fixture_conftest_module.py",
      [
        "test_spam"
      ]
    ],
    [
      "testing/example_scripts/fixtures/fill_fixtures/test_extend_fixture_module_class.py",
      [
        "TestSpam",
        "test_spam"
      ]
    ]
  ],
  "some": [
    [
      "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_basic.py",
      [
        "some"
      ]
    ]
  ],
  "other": [
    [
      "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_basic.py",
      [
        "other"
      ]
    ]
  ],
  "something": [
    [
      "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_classlevel.py",
      [
        "TestClass",
        "something"
      ]
    ],
    [
      "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookup_modulelevel.py",
      [
        "something"
      ]
    ]
  ],
  "xyzsomething": [
    [
      "testing/example_scripts/fixtures/fill_fixtures/test_funcarg_lookupfails.py",
      [
        "xyzsomething"
      ]
    ]
  ],
  "request": [
    [
      "testing/example_scripts/fixtures/test_fixture_named_request.py",
      [
        "request"
      ]
    ]
  ],
  "dynamic": [
    [
      "testing/example_scripts/fixtures/test_getfixturevalue_dynamic.py",
      [
        "dynamic"
      ]
    ]
  ],
  "checked_order": [
    [
      "testing/example_scripts/issue_519.py",
      [
        "checked_order"
      ]
    ]
  ],
  "test_one": [
    [
      "testing/example_scripts/issue_519.py",
      [
        "test_one"
      ]
    ]
  ],
  "test_two": [
    [
      "testing/example_scripts/issue_519.py",
      [
        "test_two"
      ]
    ],
    [
      "testing/example_scripts/unittest/test_parametrized_fixture_error_message.py",
      [
        "TestSomethingElse",
        "test_two"
      ]
    ]
  ],
  "test_mark": [
    [
      "testing/example_scripts/marks/marks_considered_keywords/test_marks_as_keywords.py",
      [
        "test_mark"
      ]
    ]
  ],
  "generate_folders": [
    [
      "testing/example_scripts/perf_examples/collect_stats/generate_folders.py",
      [
        "generate_folders"
      ]
    ]
  ],
  "test_x": [
    [
      "testing/example_scripts/perf_examples/collect_stats/template_test.py",
      [
        "test_x"
      ]
    ]
  ],
  "test_fixture": [
    [
      "testing/example_scripts/tmpdir/tmpdir_fixture.py",
      [
        "test_fixture"
      ]
    ]
  ],
  "two": [
    [
      "testing/example_scripts/unittest/test_parametrized_fixture_error_message.py",
      [
        "two"
      ]
    ]
  ],
  "setUp": [
    [
      "testing/example_scripts/unittest/test_setup_skip.py",
      [
        "Base",
        "setUp"
      ]
    ]
  ],
  "setUpClass": [
    [
      "testing/example_scripts/unittest/test_setup_skip_class.py",
      [
        "Base",
        "setUpClass"
      ]
    ]
  ],
  "setUpModule": [
    [
      "testing/example_scripts/unittest/test_setup_skip_module.py",
      [
        "setUpModule"
      ]
    ]
  ],
  "func": [
    [
      "testing/example_scripts/warnings/test_group_warnings_by_message.py",
      [
        "func"
      ]
    ]
  ],
  "test_bar": [
    [
      "testing/example_scripts/warnings/test_group_warnings_by_message.py",
      [
        "test_bar"
      ]
    ]
  ],
  "test_510": [
    [
      "testing/examples/test_issue519.py",
      [
        "test_510"
      ]
    ]
  ],
  "test_upper": [
    [
      "testing/freeze/tests/test_trivial.py",
      [
        "test_upper"
      ]
    ]
  ],
  "test_lower": [
    [
      "testing/freeze/tests/test_trivial.py",
      [
        "test_lower"
      ]
    ]
  ],
  "test_simple_repr": [
    [
      "testing/io/test_saferepr.py",
      [
        "test_simple_repr"
      ]
    ]
  ],
  "test_maxsize": [
    [
      "testing/io/test_saferepr.py",
      [
        "test_maxsize"
      ]
    ]
  ],
  "test_maxsize_error_on_instance": [
    [
      "testing/io/test_saferepr.py",
      [
        "test_maxsize_error_on_instance"
      ]
    ]
  ],
  "test_exceptions": [
    [
      "testing/io/test_saferepr.py",
      [
        "test_exceptions"
      ]
    ]
  ],
  "test_buggy_builtin_repr": [
    [
      "testing/io/test_saferepr.py",
      [
        "test_buggy_builtin_repr"
      ]
    ]
  ],
  "test_big_repr": [
    [
      "testing/io/test_saferepr.py",
      [
        "test_big_repr"
      ]
    ]
  ],
  "test_repr_on_newstyle": [
    [
      "testing/io/test_saferepr.py",
      [
        "test_repr_on_newstyle"
      ]
    ]
  ],
  "test_fixture_help": [
    [
      "testing/logging/test_fixture.py",
      [
        "test_fixture_help"
      ]
    ]
  ],
  "test_change_level": [
    [
      "testing/logging/test_fixture.py",
      [
        "test_change_level"
      ]
    ]
  ],
  "test_change_level_undo": [
    [
      "testing/logging/test_fixture.py",
      [
        "test_change_level_undo"
      ]
    ]
  ],
  "test_with_statement": [
    [
      "testing/logging/test_fixture.py",
      [
        "test_with_statement"
      ]
    ]
  ],
  "test_log_access": [
    [
      "testing/logging/test_fixture.py",
      [
        "test_log_access"
      ]
    ]
  ],
  "test_messages": [
    [
      "testing/logging/test_fixture.py",
      [
        "test_messages"
      ]
    ]
  ],
  "test_record_tuples": [
    [
      "testing/logging/test_fixture.py",
      [
        "test_record_tuples"
      ]
    ]
  ],
  "test_clear": [
    [
      "testing/logging/test_fixture.py",
      [
        "test_clear"
      ]
    ]
  ],
  "logging_during_setup_and_teardown": [
    [
      "testing/logging/test_fixture.py",
      [
        "logging_during_setup_and_teardown"
      ]
    ]
  ],
  "test_caplog_captures_for_all_stages": [
    [
      "testing/logging/test_fixture.py",
      [
        "test_caplog_captures_for_all_stages"
      ]
    ]
  ],
  "test_coloredlogformatter": [
    [
      "testing/logging/test_formatter.py",
      [
        "test_coloredlogformatter"
      ]
    ]
  ],
  "test_multiline_message": [
    [
      "testing/logging/test_formatter.py",
      [
        "test_multiline_message"
      ]
    ]
  ],
  "test_colored_short_level": [
    [
      "testing/logging/test_formatter.py",
      [
        "test_colored_short_level"
      ]
    ]
  ],
  "test_nothing_logged": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_nothing_logged"
      ]
    ]
  ],
  "test_messages_logged": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_messages_logged"
      ]
    ]
  ],
  "test_root_logger_affected": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_root_logger_affected"
      ]
    ]
  ],
  "test_log_cli_level_log_level_interaction": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_log_cli_level_log_level_interaction"
      ]
    ]
  ],
  "test_setup_logging": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_setup_logging"
      ]
    ]
  ],
  "test_teardown_logging": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_teardown_logging"
      ]
    ]
  ],
  "test_disable_log_capturing": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_disable_log_capturing"
      ]
    ]
  ],
  "test_disable_log_capturing_ini": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_disable_log_capturing_ini"
      ]
    ]
  ],
  "test_log_cli_enabled_disabled": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_log_cli_enabled_disabled"
      ]
    ]
  ],
  "test_log_cli_default_level": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_log_cli_default_level"
      ]
    ]
  ],
  "test_log_cli_default_level_multiple_tests": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_log_cli_default_level_multiple_tests"
      ]
    ]
  ],
  "test_log_cli_default_level_sections": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_log_cli_default_level_sections"
      ]
    ]
  ],
  "test_live_logs_unknown_sections": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_live_logs_unknown_sections"
      ]
    ]
  ],
  "test_sections_single_new_line_after_test_outcome": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_sections_single_new_line_after_test_outcome"
      ]
    ]
  ],
  "test_log_cli_level": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_log_cli_level"
      ]
    ]
  ],
  "test_log_cli_ini_level": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_log_cli_ini_level"
      ]
    ]
  ],
  "test_log_cli_auto_enable": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_log_cli_auto_enable"
      ]
    ]
  ],
  "test_log_file_cli": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_log_file_cli"
      ]
    ]
  ],
  "test_log_file_cli_level": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_log_file_cli_level"
      ]
    ]
  ],
  "test_log_level_not_changed_by_default": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_log_level_not_changed_by_default"
      ]
    ]
  ],
  "test_log_file_ini": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_log_file_ini"
      ]
    ]
  ],
  "test_log_file_ini_level": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_log_file_ini_level"
      ]
    ]
  ],
  "test_log_file_unicode": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_log_file_unicode"
      ]
    ]
  ],
  "test_live_logging_suspends_capture": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_live_logging_suspends_capture"
      ]
    ]
  ],
  "test_collection_live_logging": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_collection_live_logging"
      ]
    ]
  ],
  "test_collection_collect_only_live_logging": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_collection_collect_only_live_logging"
      ]
    ]
  ],
  "test_collection_logging_to_file": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_collection_logging_to_file"
      ]
    ]
  ],
  "test_log_in_hooks": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_log_in_hooks"
      ]
    ]
  ],
  "test_log_in_runtest_logreport": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_log_in_runtest_logreport"
      ]
    ]
  ],
  "test_log_set_path": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_log_set_path"
      ]
    ]
  ],
  "test_colored_captured_log": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_colored_captured_log"
      ]
    ]
  ],
  "test_colored_ansi_esc_caplogtext": [
    [
      "testing/logging/test_reporting.py",
      [
        "test_colored_ansi_esc_caplogtext"
      ]
    ]
  ],
  "plus_minus": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "plus_minus"
      ]
    ]
  ],
  "test_repr_string": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_repr_string"
      ]
    ]
  ],
  "test_repr_nd_array": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_repr_nd_array"
      ]
    ]
  ],
  "test_operator_overloading": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_operator_overloading"
      ]
    ]
  ],
  "test_exactly_equal": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_exactly_equal"
      ]
    ]
  ],
  "test_opposite_sign": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_opposite_sign"
      ]
    ]
  ],
  "test_zero_tolerance": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_zero_tolerance"
      ]
    ]
  ],
  "test_negative_tolerance": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_negative_tolerance"
      ]
    ]
  ],
  "test_inf_tolerance": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_inf_tolerance"
      ]
    ]
  ],
  "test_inf_tolerance_expecting_zero": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_inf_tolerance_expecting_zero"
      ]
    ]
  ],
  "test_nan_tolerance": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_nan_tolerance"
      ]
    ]
  ],
  "test_reasonable_defaults": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_reasonable_defaults"
      ]
    ]
  ],
  "test_default_tolerances": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_default_tolerances"
      ]
    ]
  ],
  "test_custom_tolerances": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_custom_tolerances"
      ]
    ]
  ],
  "test_relative_tolerance": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_relative_tolerance"
      ]
    ]
  ],
  "test_absolute_tolerance": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_absolute_tolerance"
      ]
    ]
  ],
  "test_expecting_zero": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_expecting_zero"
      ]
    ]
  ],
  "test_expecting_inf": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_expecting_inf"
      ]
    ]
  ],
  "test_expecting_nan": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_expecting_nan"
      ]
    ]
  ],
  "test_int": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_int"
      ]
    ]
  ],
  "test_decimal": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_decimal"
      ]
    ]
  ],
  "test_fraction": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_fraction"
      ]
    ]
  ],
  "test_complex": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_complex"
      ]
    ]
  ],
  "test_list": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_list"
      ]
    ],
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_list"
      ]
    ]
  ],
  "test_list_wrong_len": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_list_wrong_len"
      ]
    ]
  ],
  "test_tuple": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_tuple"
      ]
    ],
    [
      "testing/python/raises.py",
      [
        "TestRaises",
        "test_tuple"
      ]
    ]
  ],
  "test_tuple_wrong_len": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_tuple_wrong_len"
      ]
    ]
  ],
  "test_dict": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_dict"
      ]
    ],
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_dict"
      ]
    ]
  ],
  "test_dict_wrong_len": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_dict_wrong_len"
      ]
    ]
  ],
  "test_numpy_array": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_numpy_array"
      ]
    ]
  ],
  "test_numpy_tolerance_args": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_numpy_tolerance_args"
      ]
    ]
  ],
  "test_numpy_expecting_nan": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_numpy_expecting_nan"
      ]
    ]
  ],
  "test_numpy_expecting_inf": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_numpy_expecting_inf"
      ]
    ]
  ],
  "test_numpy_array_wrong_shape": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_numpy_array_wrong_shape"
      ]
    ]
  ],
  "test_doctests": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_doctests"
      ]
    ]
  ],
  "test_unicode_plus_minus": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_unicode_plus_minus"
      ]
    ]
  ],
  "test_expected_value_type_error": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_expected_value_type_error"
      ]
    ]
  ],
  "test_comparison_operator_type_error": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_comparison_operator_type_error"
      ]
    ]
  ],
  "test_numpy_array_with_scalar": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_numpy_array_with_scalar"
      ]
    ]
  ],
  "test_numpy_scalar_with_array": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_numpy_scalar_with_array"
      ]
    ]
  ],
  "test_generic_sized_iterable_object": [
    [
      "testing/python/approx.py",
      [
        "TestApprox",
        "test_generic_sized_iterable_object"
      ]
    ]
  ],
  "test_failing_import": [
    [
      "testing/python/collect.py",
      [
        "TestModule",
        "test_failing_import"
      ]
    ]
  ],
  "test_import_duplicate": [
    [
      "testing/python/collect.py",
      [
        "TestModule",
        "test_import_duplicate"
      ]
    ]
  ],
  "test_import_prepend_append": [
    [
      "testing/python/collect.py",
      [
        "TestModule",
        "test_import_prepend_append"
      ]
    ]
  ],
  "test_syntax_error_in_module": [
    [
      "testing/python/collect.py",
      [
        "TestModule",
        "test_syntax_error_in_module"
      ]
    ]
  ],
  "test_module_considers_pluginmanager_at_import": [
    [
      "testing/python/collect.py",
      [
        "TestModule",
        "test_module_considers_pluginmanager_at_import"
      ]
    ]
  ],
  "test_invalid_test_module_name": [
    [
      "testing/python/collect.py",
      [
        "TestModule",
        "test_invalid_test_module_name"
      ]
    ]
  ],
  "test_show_traceback_import_error": [
    [
      "testing/python/collect.py",
      [
        "TestModule",
        "test_show_traceback_import_error"
      ]
    ]
  ],
  "test_show_traceback_import_error_unicode": [
    [
      "testing/python/collect.py",
      [
        "TestModule",
        "test_show_traceback_import_error_unicode"
      ]
    ]
  ],
  "test_class_with_init_warning": [
    [
      "testing/python/collect.py",
      [
        "TestClass",
        "test_class_with_init_warning"
      ]
    ]
  ],
  "test_class_with_new_warning": [
    [
      "testing/python/collect.py",
      [
        "TestClass",
        "test_class_with_new_warning"
      ]
    ]
  ],
  "test_class_subclassobject": [
    [
      "testing/python/collect.py",
      [
        "TestClass",
        "test_class_subclassobject"
      ]
    ]
  ],
  "test_static_method": [
    [
      "testing/python/collect.py",
      [
        "TestClass",
        "test_static_method"
      ]
    ]
  ],
  "test_setup_teardown_class_as_classmethod": [
    [
      "testing/python/collect.py",
      [
        "TestClass",
        "test_setup_teardown_class_as_classmethod"
      ]
    ]
  ],
  "test_issue1035_obj_has_getattr": [
    [
      "testing/python/collect.py",
      [
        "TestClass",
        "test_issue1035_obj_has_getattr"
      ]
    ]
  ],
  "test_issue1579_namedtuple": [
    [
      "testing/python/collect.py",
      [
        "TestClass",
        "test_issue1579_namedtuple"
      ]
    ]
  ],
  "test_issue2234_property": [
    [
      "testing/python/collect.py",
      [
        "TestClass",
        "test_issue2234_property"
      ]
    ]
  ],
  "test_getmodulecollector": [
    [
      "testing/python/collect.py",
      [
        "TestFunction",
        "test_getmodulecollector"
      ]
    ]
  ],
  "test_function_as_object_instance_ignored": [
    [
      "testing/python/collect.py",
      [
        "TestFunction",
        "test_function_as_object_instance_ignored"
      ]
    ]
  ],
  "make_function": [
    [
      "testing/python/collect.py",
      [
        "TestFunction",
        "make_function"
      ]
    ]
  ],
  "test_function_equality": [
    [
      "testing/python/collect.py",
      [
        "TestFunction",
        "test_function_equality"
      ]
    ]
  ],
  "test_repr_produces_actual_test_id": [
    [
      "testing/python/collect.py",
      [
        "TestFunction",
        "test_repr_produces_actual_test_id"
      ]
    ]
  ],
  "test_issue197_parametrize_emptyset": [
    [
      "testing/python/collect.py",
      [
        "TestFunction",
        "test_issue197_parametrize_emptyset"
      ]
    ]
  ],
  "test_single_tuple_unwraps_values": [
    [
      "testing/python/collect.py",
      [
        "TestFunction",
        "test_single_tuple_unwraps_values"
      ]
    ]
  ],
  "test_issue213_parametrize_value_no_equal": [
    [
      "testing/python/collect.py",
      [
        "TestFunction",
        "test_issue213_parametrize_value_no_equal"
      ]
    ]
  ],
  "test_parametrize_with_non_hashable_values": [
    [
      "testing/python/collect.py",
      [
        "TestFunction",
        "test_parametrize_with_non_hashable_values"
      ]
    ]
  ],
  "test_parametrize_with_non_hashable_values_indirect": [
    [
      "testing/python/collect.py",
      [
        "TestFunction",
        "test_parametrize_with_non_hashable_values_indirect"
      ]
    ]
  ],
  "test_parametrize_overrides_fixture": [
    [
      "testing/python/collect.py",
      [
        "TestFunction",
        "test_parametrize_overrides_fixture"
      ]
    ]
  ],
  "test_parametrize_overrides_parametrized_fixture": [
    [
      "testing/python/collect.py",
      [
        "TestFunction",
        "test_parametrize_overrides_parametrized_fixture"
      ]
    ]
  ],
  "test_parametrize_overrides_indirect_dependency_fixture": [
    [
      "testing/python/collect.py",
      [
        "TestFunction",
        "test_parametrize_overrides_indirect_dependency_fixture"
      ]
    ]
  ],
  "test_parametrize_with_mark": [
    [
      "testing/python/collect.py",
      [
        "TestFunction",
        "test_parametrize_with_mark"
      ]
    ]
  ],
  "test_function_equality_with_callspec": [
    [
      "testing/python/collect.py",
      [
        "TestFunction",
        "test_function_equality_with_callspec"
      ]
    ]
  ],
  "test_pyfunc_call": [
    [
      "testing/python/collect.py",
      [
        "TestFunction",
        "test_pyfunc_call"
      ]
    ]
  ],
  "test_multiple_parametrize": [
    [
      "testing/python/collect.py",
      [
        "TestFunction",
        "test_multiple_parametrize"
      ]
    ]
  ],
  "test_issue751_multiple_parametrize_with_ids": [
    [
      "testing/python/collect.py",
      [
        "TestFunction",
        "test_issue751_multiple_parametrize_with_ids"
      ]
    ]
  ],
  "test_parametrize_skipif": [
    [
      "testing/python/collect.py",
      [
        "TestFunction",
        "test_parametrize_skipif"
      ]
    ]
  ],
  "test_parametrize_skip": [
    [
      "testing/python/collect.py",
      [
        "TestFunction",
        "test_parametrize_skip"
      ]
    ]
  ],
  "test_parametrize_skipif_no_skip": [
    [
      "testing/python/collect.py",
      [
        "TestFunction",
        "test_parametrize_skipif_no_skip"
      ]
    ]
  ],
  "test_parametrize_xfail": [
    [
      "testing/python/collect.py",
      [
        "TestFunction",
        "test_parametrize_xfail"
      ]
    ]
  ],
  "test_parametrize_passed": [
    [
      "testing/python/collect.py",
      [
        "TestFunction",
        "test_parametrize_passed"
      ]
    ]
  ],
  "test_parametrize_xfail_passed": [
    [
      "testing/python/collect.py",
      [
        "TestFunction",
        "test_parametrize_xfail_passed"
      ]
    ]
  ],
  "test_function_original_name": [
    [
      "testing/python/collect.py",
      [
        "TestFunction",
        "test_function_original_name"
      ]
    ]
  ],
  "test_check_equality": [
    [
      "testing/python/collect.py",
      [
        "TestSorting",
        "test_check_equality"
      ]
    ],
    [
      "testing/test_collection.py",
      [
        "TestCollector",
        "test_check_equality"
      ]
    ]
  ],
  "test_allow_sane_sorting_for_decorators": [
    [
      "testing/python/collect.py",
      [
        "TestSorting",
        "test_allow_sane_sorting_for_decorators"
      ]
    ]
  ],
  "test_pytest_pycollect_module": [
    [
      "testing/python/collect.py",
      [
        "TestConftestCustomization",
        "test_pytest_pycollect_module"
      ]
    ]
  ],
  "test_customized_pymakemodule_issue205_subdir": [
    [
      "testing/python/collect.py",
      [
        "TestConftestCustomization",
        "test_customized_pymakemodule_issue205_subdir"
      ]
    ]
  ],
  "test_customized_pymakeitem": [
    [
      "testing/python/collect.py",
      [
        "TestConftestCustomization",
        "test_customized_pymakeitem"
      ]
    ]
  ],
  "test_pytest_pycollect_makeitem": [
    [
      "testing/python/collect.py",
      [
        "TestConftestCustomization",
        "test_pytest_pycollect_makeitem"
      ]
    ]
  ],
  "test_makeitem_non_underscore": [
    [
      "testing/python/collect.py",
      [
        "TestConftestCustomization",
        "test_makeitem_non_underscore"
      ]
    ]
  ],
  "test_issue2369_collect_module_fileext": [
    [
      "testing/python/collect.py",
      [
        "TestConftestCustomization",
        "test_issue2369_collect_module_fileext"
      ]
    ]
  ],
  "test_setup_only_available_in_subdir": [
    [
      "testing/python/collect.py",
      [
        "test_setup_only_available_in_subdir"
      ]
    ]
  ],
  "test_modulecol_roundtrip": [
    [
      "testing/python/collect.py",
      [
        "test_modulecol_roundtrip"
      ]
    ]
  ],
  "test_skip_simple": [
    [
      "testing/python/collect.py",
      [
        "TestTracebackCutting",
        "test_skip_simple"
      ]
    ]
  ],
  "test_traceback_argsetup": [
    [
      "testing/python/collect.py",
      [
        "TestTracebackCutting",
        "test_traceback_argsetup"
      ]
    ]
  ],
  "test_traceback_error_during_import": [
    [
      "testing/python/collect.py",
      [
        "TestTracebackCutting",
        "test_traceback_error_during_import"
      ]
    ]
  ],
  "test_traceback_filter_error_during_fixture_collection": [
    [
      "testing/python/collect.py",
      [
        "TestTracebackCutting",
        "test_traceback_filter_error_during_fixture_collection"
      ]
    ]
  ],
  "test_filter_traceback_generated_code": [
    [
      "testing/python/collect.py",
      [
        "TestTracebackCutting",
        "test_filter_traceback_generated_code"
      ]
    ]
  ],
  "test_filter_traceback_path_no_longer_valid": [
    [
      "testing/python/collect.py",
      [
        "TestTracebackCutting",
        "test_filter_traceback_path_no_longer_valid"
      ]
    ]
  ],
  "test_itemreport_reportinfo": [
    [
      "testing/python/collect.py",
      [
        "TestReportInfo",
        "test_itemreport_reportinfo"
      ]
    ]
  ],
  "test_func_reportinfo": [
    [
      "testing/python/collect.py",
      [
        "TestReportInfo",
        "test_func_reportinfo"
      ]
    ]
  ],
  "test_class_reportinfo": [
    [
      "testing/python/collect.py",
      [
        "TestReportInfo",
        "test_class_reportinfo"
      ]
    ]
  ],
  "test_reportinfo_with_nasty_getattr": [
    [
      "testing/python/collect.py",
      [
        "TestReportInfo",
        "test_reportinfo_with_nasty_getattr"
      ]
    ]
  ],
  "test_customized_python_discovery": [
    [
      "testing/python/collect.py",
      [
        "test_customized_python_discovery"
      ]
    ]
  ],
  "test_customized_python_discovery_functions": [
    [
      "testing/python/collect.py",
      [
        "test_customized_python_discovery_functions"
      ]
    ]
  ],
  "test_unorderable_types": [
    [
      "testing/python/collect.py",
      [
        "test_unorderable_types"
      ]
    ],
    [
      "testing/test_unittest.py",
      [
        "test_unorderable_types"
      ]
    ]
  ],
  "test_dont_collect_non_function_callable": [
    [
      "testing/python/collect.py",
      [
        "test_dont_collect_non_function_callable"
      ]
    ]
  ],
  "test_class_injection_does_not_break_collection": [
    [
      "testing/python/collect.py",
      [
        "test_class_injection_does_not_break_collection"
      ]
    ]
  ],
  "test_syntax_error_with_non_ascii_chars": [
    [
      "testing/python/collect.py",
      [
        "test_syntax_error_with_non_ascii_chars"
      ]
    ]
  ],
  "test_skip_duplicates_by_default": [
    [
      "testing/python/collect.py",
      [
        "test_skip_duplicates_by_default"
      ]
    ]
  ],
  "test_keep_duplicates": [
    [
      "testing/python/collect.py",
      [
        "test_keep_duplicates"
      ]
    ]
  ],
  "test_package_collection_infinite_recursion": [
    [
      "testing/python/collect.py",
      [
        "test_package_collection_infinite_recursion"
      ]
    ]
  ],
  "test_package_collection_init_given_as_argument": [
    [
      "testing/python/collect.py",
      [
        "test_package_collection_init_given_as_argument"
      ]
    ]
  ],
  "test_package_with_modules": [
    [
      "testing/python/collect.py",
      [
        "test_package_with_modules"
      ]
    ]
  ],
  "test_package_ordering": [
    [
      "testing/python/collect.py",
      [
        "test_package_ordering"
      ]
    ]
  ],
  "test_getfuncargnames_functions": [
    [
      "testing/python/fixtures.py",
      [
        "test_getfuncargnames_functions"
      ]
    ]
  ],
  "test_getfuncargnames_methods": [
    [
      "testing/python/fixtures.py",
      [
        "test_getfuncargnames_methods"
      ]
    ]
  ],
  "test_getfuncargnames_staticmethod": [
    [
      "testing/python/fixtures.py",
      [
        "test_getfuncargnames_staticmethod"
      ]
    ]
  ],
  "test_getfuncargnames_partial": [
    [
      "testing/python/fixtures.py",
      [
        "test_getfuncargnames_partial"
      ]
    ]
  ],
  "test_getfuncargnames_staticmethod_partial": [
    [
      "testing/python/fixtures.py",
      [
        "test_getfuncargnames_staticmethod_partial"
      ]
    ]
  ],
  "test_fillfuncargs_exposed": [
    [
      "testing/python/fixtures.py",
      [
        "TestFillFixtures",
        "test_fillfuncargs_exposed"
      ]
    ]
  ],
  "test_funcarg_lookupfails": [
    [
      "testing/python/fixtures.py",
      [
        "TestFillFixtures",
        "test_funcarg_lookupfails"
      ]
    ]
  ],
  "test_detect_recursive_dependency_error": [
    [
      "testing/python/fixtures.py",
      [
        "TestFillFixtures",
        "test_detect_recursive_dependency_error"
      ]
    ]
  ],
  "test_funcarg_basic": [
    [
      "testing/python/fixtures.py",
      [
        "TestFillFixtures",
        "test_funcarg_basic"
      ]
    ]
  ],
  "test_funcarg_lookup_modulelevel": [
    [
      "testing/python/fixtures.py",
      [
        "TestFillFixtures",
        "test_funcarg_lookup_modulelevel"
      ]
    ]
  ],
  "test_funcarg_lookup_classlevel": [
    [
      "testing/python/fixtures.py",
      [
        "TestFillFixtures",
        "test_funcarg_lookup_classlevel"
      ]
    ]
  ],
  "test_conftest_funcargs_only_available_in_subdir": [
    [
      "testing/python/fixtures.py",
      [
        "TestFillFixtures",
        "test_conftest_funcargs_only_available_in_subdir"
      ]
    ]
  ],
  "test_extend_fixture_module_class": [
    [
      "testing/python/fixtures.py",
      [
        "TestFillFixtures",
        "test_extend_fixture_module_class"
      ]
    ]
  ],
  "test_extend_fixture_conftest_module": [
    [
      "testing/python/fixtures.py",
      [
        "TestFillFixtures",
        "test_extend_fixture_conftest_module"
      ]
    ]
  ],
  "test_extend_fixture_conftest_conftest": [
    [
      "testing/python/fixtures.py",
      [
        "TestFillFixtures",
        "test_extend_fixture_conftest_conftest"
      ]
    ]
  ],
  "test_extend_fixture_conftest_plugin": [
    [
      "testing/python/fixtures.py",
      [
        "TestFillFixtures",
        "test_extend_fixture_conftest_plugin"
      ]
    ]
  ],
  "test_extend_fixture_plugin_plugin": [
    [
      "testing/python/fixtures.py",
      [
        "TestFillFixtures",
        "test_extend_fixture_plugin_plugin"
      ]
    ]
  ],
  "test_override_parametrized_fixture_conftest_module": [
    [
      "testing/python/fixtures.py",
      [
        "TestFillFixtures",
        "test_override_parametrized_fixture_conftest_module"
      ]
    ]
  ],
  "test_override_parametrized_fixture_conftest_conftest": [
    [
      "testing/python/fixtures.py",
      [
        "TestFillFixtures",
        "test_override_parametrized_fixture_conftest_conftest"
      ]
    ]
  ],
  "test_override_non_parametrized_fixture_conftest_module": [
    [
      "testing/python/fixtures.py",
      [
        "TestFillFixtures",
        "test_override_non_parametrized_fixture_conftest_module"
      ]
    ]
  ],
  "test_override_non_parametrized_fixture_conftest_conftest": [
    [
      "testing/python/fixtures.py",
      [
        "TestFillFixtures",
        "test_override_non_parametrized_fixture_conftest_conftest"
      ]
    ]
  ],
  "test_override_autouse_fixture_with_parametrized_fixture_conftest_conftest": [
    [
      "testing/python/fixtures.py",
      [
        "TestFillFixtures",
        "test_override_autouse_fixture_with_parametrized_fixture_conftest_conftest"
      ]
    ]
  ],
  "test_autouse_fixture_plugin": [
    [
      "testing/python/fixtures.py",
      [
        "TestFillFixtures",
        "test_autouse_fixture_plugin"
      ]
    ]
  ],
  "test_funcarg_lookup_error": [
    [
      "testing/python/fixtures.py",
      [
        "TestFillFixtures",
        "test_funcarg_lookup_error"
      ]
    ]
  ],
  "test_fixture_excinfo_leak": [
    [
      "testing/python/fixtures.py",
      [
        "TestFillFixtures",
        "test_fixture_excinfo_leak"
      ]
    ]
  ],
  "test_request_attributes": [
    [
      "testing/python/fixtures.py",
      [
        "TestRequestBasic",
        "test_request_attributes"
      ]
    ]
  ],
  "test_request_attributes_method": [
    [
      "testing/python/fixtures.py",
      [
        "TestRequestBasic",
        "test_request_attributes_method"
      ]
    ]
  ],
  "test_request_contains_funcarg_arg2fixturedefs": [
    [
      "testing/python/fixtures.py",
      [
        "TestRequestBasic",
        "test_request_contains_funcarg_arg2fixturedefs"
      ]
    ]
  ],
  "test_request_garbage": [
    [
      "testing/python/fixtures.py",
      [
        "TestRequestBasic",
        "test_request_garbage"
      ]
    ]
  ],
  "test_getfixturevalue_recursive": [
    [
      "testing/python/fixtures.py",
      [
        "TestRequestBasic",
        "test_getfixturevalue_recursive"
      ]
    ]
  ],
  "test_getfixturevalue_teardown": [
    [
      "testing/python/fixtures.py",
      [
        "TestRequestBasic",
        "test_getfixturevalue_teardown"
      ]
    ]
  ],
  "test_getfixturevalue": [
    [
      "testing/python/fixtures.py",
      [
        "TestRequestBasic",
        "test_getfixturevalue"
      ]
    ]
  ],
  "test_request_addfinalizer": [
    [
      "testing/python/fixtures.py",
      [
        "TestRequestBasic",
        "test_request_addfinalizer"
      ]
    ]
  ],
  "test_request_addfinalizer_failing_setup": [
    [
      "testing/python/fixtures.py",
      [
        "TestRequestBasic",
        "test_request_addfinalizer_failing_setup"
      ]
    ]
  ],
  "test_request_addfinalizer_failing_setup_module": [
    [
      "testing/python/fixtures.py",
      [
        "TestRequestBasic",
        "test_request_addfinalizer_failing_setup_module"
      ]
    ]
  ],
  "test_request_addfinalizer_partial_setup_failure": [
    [
      "testing/python/fixtures.py",
      [
        "TestRequestBasic",
        "test_request_addfinalizer_partial_setup_failure"
      ]
    ]
  ],
  "test_request_subrequest_addfinalizer_exceptions": [
    [
      "testing/python/fixtures.py",
      [
        "TestRequestBasic",
        "test_request_subrequest_addfinalizer_exceptions"
      ]
    ]
  ],
  "test_request_getmodulepath": [
    [
      "testing/python/fixtures.py",
      [
        "TestRequestBasic",
        "test_request_getmodulepath"
      ]
    ]
  ],
  "test_request_fixturenames": [
    [
      "testing/python/fixtures.py",
      [
        "TestRequestBasic",
        "test_request_fixturenames"
      ]
    ]
  ],
  "test_request_fixturenames_dynamic_fixture": [
    [
      "testing/python/fixtures.py",
      [
        "TestRequestBasic",
        "test_request_fixturenames_dynamic_fixture"
      ]
    ]
  ],
  "test_funcargnames_compatattr": [
    [
      "testing/python/fixtures.py",
      [
        "TestRequestBasic",
        "test_funcargnames_compatattr"
      ]
    ]
  ],
  "test_setupdecorator_and_xunit": [
    [
      "testing/python/fixtures.py",
      [
        "TestRequestBasic",
        "test_setupdecorator_and_xunit"
      ]
    ]
  ],
  "test_fixtures_sub_subdir_normalize_sep": [
    [
      "testing/python/fixtures.py",
      [
        "TestRequestBasic",
        "test_fixtures_sub_subdir_normalize_sep"
      ]
    ]
  ],
  "test_show_fixtures_color_yes": [
    [
      "testing/python/fixtures.py",
      [
        "TestRequestBasic",
        "test_show_fixtures_color_yes"
      ]
    ]
  ],
  "test_newstyle_with_request": [
    [
      "testing/python/fixtures.py",
      [
        "TestRequestBasic",
        "test_newstyle_with_request"
      ]
    ]
  ],
  "test_setupcontext_no_param": [
    [
      "testing/python/fixtures.py",
      [
        "TestRequestBasic",
        "test_setupcontext_no_param"
      ]
    ]
  ],
  "test_applymarker": [
    [
      "testing/python/fixtures.py",
      [
        "TestRequestMarking",
        "test_applymarker"
      ]
    ]
  ],
  "test_accesskeywords": [
    [
      "testing/python/fixtures.py",
      [
        "TestRequestMarking",
        "test_accesskeywords"
      ]
    ]
  ],
  "test_accessmarker_dynamic": [
    [
      "testing/python/fixtures.py",
      [
        "TestRequestMarking",
        "test_accessmarker_dynamic"
      ]
    ]
  ],
  "test_noargfixturedec": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureUsages",
        "test_noargfixturedec"
      ]
    ]
  ],
  "test_receives_funcargs": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureUsages",
        "test_receives_funcargs"
      ]
    ]
  ],
  "test_receives_funcargs_scope_mismatch": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureUsages",
        "test_receives_funcargs_scope_mismatch"
      ]
    ]
  ],
  "test_receives_funcargs_scope_mismatch_issue660": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureUsages",
        "test_receives_funcargs_scope_mismatch_issue660"
      ]
    ]
  ],
  "test_invalid_scope": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureUsages",
        "test_invalid_scope"
      ]
    ]
  ],
  "test_funcarg_parametrized_and_used_twice": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureUsages",
        "test_funcarg_parametrized_and_used_twice"
      ]
    ]
  ],
  "test_factory_uses_unknown_funcarg_as_dependency_error": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureUsages",
        "test_factory_uses_unknown_funcarg_as_dependency_error"
      ]
    ]
  ],
  "test_factory_setup_as_classes_fails": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureUsages",
        "test_factory_setup_as_classes_fails"
      ]
    ]
  ],
  "test_usefixtures_marker": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureUsages",
        "test_usefixtures_marker"
      ]
    ]
  ],
  "test_usefixtures_ini": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureUsages",
        "test_usefixtures_ini"
      ]
    ]
  ],
  "test_usefixtures_seen_in_showmarkers": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureUsages",
        "test_usefixtures_seen_in_showmarkers"
      ]
    ]
  ],
  "test_request_instance_issue203": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureUsages",
        "test_request_instance_issue203"
      ]
    ]
  ],
  "test_fixture_parametrized_with_iterator": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureUsages",
        "test_fixture_parametrized_with_iterator"
      ]
    ]
  ],
  "test_setup_functions_as_fixtures": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureUsages",
        "test_setup_functions_as_fixtures"
      ]
    ]
  ],
  "test_parsefactories_evil_objects_issue214": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureManagerParseFactories",
        "test_parsefactories_evil_objects_issue214"
      ]
    ]
  ],
  "test_parsefactories_conftest": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureManagerParseFactories",
        "test_parsefactories_conftest"
      ]
    ],
    [
      "testing/python/fixtures.py",
      [
        "TestAutouseDiscovery",
        "test_parsefactories_conftest"
      ]
    ]
  ],
  "test_parsefactories_conftest_and_module_and_class": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureManagerParseFactories",
        "test_parsefactories_conftest_and_module_and_class"
      ]
    ]
  ],
  "test_parsefactories_relative_node_ids": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureManagerParseFactories",
        "test_parsefactories_relative_node_ids"
      ]
    ],
    [
      "testing/test_conftest.py",
      [
        "TestConftestVisibility",
        "test_parsefactories_relative_node_ids"
      ]
    ]
  ],
  "test_package_xunit_fixture": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureManagerParseFactories",
        "test_package_xunit_fixture"
      ]
    ]
  ],
  "test_package_fixture_complex": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureManagerParseFactories",
        "test_package_fixture_complex"
      ]
    ]
  ],
  "test_collect_custom_items": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureManagerParseFactories",
        "test_collect_custom_items"
      ]
    ]
  ],
  "test_two_classes_separated_autouse": [
    [
      "testing/python/fixtures.py",
      [
        "TestAutouseDiscovery",
        "test_two_classes_separated_autouse"
      ]
    ]
  ],
  "test_setup_at_classlevel": [
    [
      "testing/python/fixtures.py",
      [
        "TestAutouseDiscovery",
        "test_setup_at_classlevel"
      ]
    ]
  ],
  "test_setup_enabled_functionnode": [
    [
      "testing/python/fixtures.py",
      [
        "TestAutouseDiscovery",
        "test_setup_enabled_functionnode"
      ]
    ]
  ],
  "test_callables_nocode": [
    [
      "testing/python/fixtures.py",
      [
        "TestAutouseDiscovery",
        "test_callables_nocode"
      ]
    ]
  ],
  "test_autouse_in_conftests": [
    [
      "testing/python/fixtures.py",
      [
        "TestAutouseDiscovery",
        "test_autouse_in_conftests"
      ]
    ]
  ],
  "test_autouse_in_module_and_two_classes": [
    [
      "testing/python/fixtures.py",
      [
        "TestAutouseDiscovery",
        "test_autouse_in_module_and_two_classes"
      ]
    ]
  ],
  "test_autouse_conftest_mid_directory": [
    [
      "testing/python/fixtures.py",
      [
        "TestAutouseManagement",
        "test_autouse_conftest_mid_directory"
      ]
    ]
  ],
  "test_funcarg_and_setup": [
    [
      "testing/python/fixtures.py",
      [
        "TestAutouseManagement",
        "test_funcarg_and_setup"
      ]
    ]
  ],
  "test_uses_parametrized_resource": [
    [
      "testing/python/fixtures.py",
      [
        "TestAutouseManagement",
        "test_uses_parametrized_resource"
      ]
    ]
  ],
  "test_session_parametrized_function": [
    [
      "testing/python/fixtures.py",
      [
        "TestAutouseManagement",
        "test_session_parametrized_function"
      ]
    ]
  ],
  "test_class_function_parametrization_finalization": [
    [
      "testing/python/fixtures.py",
      [
        "TestAutouseManagement",
        "test_class_function_parametrization_finalization"
      ]
    ]
  ],
  "test_scope_ordering": [
    [
      "testing/python/fixtures.py",
      [
        "TestAutouseManagement",
        "test_scope_ordering"
      ]
    ]
  ],
  "test_parametrization_setup_teardown_ordering": [
    [
      "testing/python/fixtures.py",
      [
        "TestAutouseManagement",
        "test_parametrization_setup_teardown_ordering"
      ]
    ]
  ],
  "test_ordering_autouse_before_explicit": [
    [
      "testing/python/fixtures.py",
      [
        "TestAutouseManagement",
        "test_ordering_autouse_before_explicit"
      ]
    ]
  ],
  "test_ordering_dependencies_torndown_first": [
    [
      "testing/python/fixtures.py",
      [
        "TestAutouseManagement",
        "test_ordering_dependencies_torndown_first"
      ]
    ]
  ],
  "test_parametrize": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_parametrize"
      ]
    ]
  ],
  "test_multiple_parametrization_issue_736": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_multiple_parametrization_issue_736"
      ]
    ]
  ],
  "test_override_parametrized_fixture_issue_979": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_override_parametrized_fixture_issue_979"
      ]
    ]
  ],
  "test_scope_session": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_scope_session"
      ]
    ]
  ],
  "test_scope_session_exc": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_scope_session_exc"
      ]
    ]
  ],
  "test_scope_session_exc_two_fix": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_scope_session_exc_two_fix"
      ]
    ]
  ],
  "test_scope_exc": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_scope_exc"
      ]
    ]
  ],
  "test_scope_module_uses_session": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_scope_module_uses_session"
      ]
    ]
  ],
  "test_scope_module_and_finalizer": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_scope_module_and_finalizer"
      ]
    ]
  ],
  "test_scope_mismatch_various": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_scope_mismatch_various"
      ]
    ]
  ],
  "test_dynamic_scope": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_dynamic_scope"
      ]
    ]
  ],
  "test_dynamic_scope_bad_return": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_dynamic_scope_bad_return"
      ]
    ]
  ],
  "test_register_only_with_mark": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_register_only_with_mark"
      ]
    ]
  ],
  "test_parametrize_and_scope": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_parametrize_and_scope"
      ]
    ]
  ],
  "test_scope_mismatch": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_scope_mismatch"
      ]
    ]
  ],
  "test_parametrize_separated_order": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_parametrize_separated_order"
      ]
    ]
  ],
  "test_module_parametrized_ordering": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_module_parametrized_ordering"
      ]
    ]
  ],
  "test_dynamic_parametrized_ordering": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_dynamic_parametrized_ordering"
      ]
    ]
  ],
  "test_class_ordering": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_class_ordering"
      ]
    ]
  ],
  "test_parametrize_separated_order_higher_scope_first": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_parametrize_separated_order_higher_scope_first"
      ]
    ]
  ],
  "test_parametrized_fixture_teardown_order": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_parametrized_fixture_teardown_order"
      ]
    ]
  ],
  "test_fixture_finalizer": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_fixture_finalizer"
      ]
    ]
  ],
  "test_class_scope_with_normal_tests": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_class_scope_with_normal_tests"
      ]
    ]
  ],
  "test_request_is_clean": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_request_is_clean"
      ]
    ]
  ],
  "test_parametrize_separated_lifecycle": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_parametrize_separated_lifecycle"
      ]
    ]
  ],
  "test_parametrize_function_scoped_finalizers_called": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_parametrize_function_scoped_finalizers_called"
      ]
    ]
  ],
  "test_finalizer_order_on_parametrization": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_finalizer_order_on_parametrization"
      ]
    ]
  ],
  "test_class_scope_parametrization_ordering": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_class_scope_parametrization_ordering"
      ]
    ]
  ],
  "test_parametrize_setup_function": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_parametrize_setup_function"
      ]
    ]
  ],
  "test_fixture_marked_function_not_collected_as_test": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_fixture_marked_function_not_collected_as_test"
      ]
    ]
  ],
  "test_params_and_ids": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_params_and_ids"
      ]
    ]
  ],
  "test_params_and_ids_yieldfixture": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_params_and_ids_yieldfixture"
      ]
    ]
  ],
  "test_deterministic_fixture_collection": [
    [
      "testing/python/fixtures.py",
      [
        "TestFixtureMarker",
        "test_deterministic_fixture_collection"
      ]
    ]
  ],
  "test_setup": [
    [
      "testing/python/fixtures.py",
      [
        "TestRequestScopeAccess",
        "test_setup"
      ]
    ],
    [
      "testing/test_runner.py",
      [
        "TestSetupState",
        "test_setup"
      ]
    ],
    [
      "testing/test_unittest.py",
      [
        "test_setup"
      ]
    ]
  ],
  "test_funcarg": [
    [
      "testing/python/fixtures.py",
      [
        "TestRequestScopeAccess",
        "test_funcarg"
      ]
    ]
  ],
  "test_subfactory_missing_funcarg": [
    [
      "testing/python/fixtures.py",
      [
        "TestErrors",
        "test_subfactory_missing_funcarg"
      ]
    ]
  ],
  "test_issue498_fixture_finalizer_failing": [
    [
      "testing/python/fixtures.py",
      [
        "TestErrors",
        "test_issue498_fixture_finalizer_failing"
      ]
    ]
  ],
  "test_setupfunc_missing_funcarg": [
    [
      "testing/python/fixtures.py",
      [
        "TestErrors",
        "test_setupfunc_missing_funcarg"
      ]
    ]
  ],
  "test_funcarg_compat": [
    [
      "testing/python/fixtures.py",
      [
        "TestShowFixtures",
        "test_funcarg_compat"
      ]
    ]
  ],
  "test_show_fixtures": [
    [
      "testing/python/fixtures.py",
      [
        "TestShowFixtures",
        "test_show_fixtures"
      ]
    ]
  ],
  "test_show_fixtures_verbose": [
    [
      "testing/python/fixtures.py",
      [
        "TestShowFixtures",
        "test_show_fixtures_verbose"
      ]
    ]
  ],
  "test_show_fixtures_testmodule": [
    [
      "testing/python/fixtures.py",
      [
        "TestShowFixtures",
        "test_show_fixtures_testmodule"
      ]
    ]
  ],
  "test_show_fixtures_conftest": [
    [
      "testing/python/fixtures.py",
      [
        "TestShowFixtures",
        "test_show_fixtures_conftest"
      ]
    ]
  ],
  "test_show_fixtures_trimmed_doc": [
    [
      "testing/python/fixtures.py",
      [
        "TestShowFixtures",
        "test_show_fixtures_trimmed_doc"
      ]
    ]
  ],
  "test_show_fixtures_indented_doc": [
    [
      "testing/python/fixtures.py",
      [
        "TestShowFixtures",
        "test_show_fixtures_indented_doc"
      ]
    ]
  ],
  "test_show_fixtures_indented_doc_first_line_unindented": [
    [
      "testing/python/fixtures.py",
      [
        "TestShowFixtures",
        "test_show_fixtures_indented_doc_first_line_unindented"
      ]
    ]
  ],
  "test_show_fixtures_indented_in_class": [
    [
      "testing/python/fixtures.py",
      [
        "TestShowFixtures",
        "test_show_fixtures_indented_in_class"
      ]
    ]
  ],
  "test_show_fixtures_different_files": [
    [
      "testing/python/fixtures.py",
      [
        "TestShowFixtures",
        "test_show_fixtures_different_files"
      ]
    ]
  ],
  "test_show_fixtures_with_same_name": [
    [
      "testing/python/fixtures.py",
      [
        "TestShowFixtures",
        "test_show_fixtures_with_same_name"
      ]
    ]
  ],
  "test_fixture_disallow_twice": [
    [
      "testing/python/fixtures.py",
      [
        "TestShowFixtures",
        "test_fixture_disallow_twice"
      ]
    ]
  ],
  "flavor": [
    [
      "testing/python/fixtures.py",
      [
        "TestContextManagerFixtureFuncs",
        "flavor"
      ]
    ]
  ],
  "test_scoped": [
    [
      "testing/python/fixtures.py",
      [
        "TestContextManagerFixtureFuncs",
        "test_scoped"
      ]
    ]
  ],
  "test_setup_exception": [
    [
      "testing/python/fixtures.py",
      [
        "TestContextManagerFixtureFuncs",
        "test_setup_exception"
      ]
    ]
  ],
  "test_teardown_exception": [
    [
      "testing/python/fixtures.py",
      [
        "TestContextManagerFixtureFuncs",
        "test_teardown_exception"
      ]
    ]
  ],
  "test_yields_more_than_one": [
    [
      "testing/python/fixtures.py",
      [
        "TestContextManagerFixtureFuncs",
        "test_yields_more_than_one"
      ]
    ]
  ],
  "test_custom_name": [
    [
      "testing/python/fixtures.py",
      [
        "TestContextManagerFixtureFuncs",
        "test_custom_name"
      ]
    ]
  ],
  "test_call_from_fixture": [
    [
      "testing/python/fixtures.py",
      [
        "TestParameterizedSubRequest",
        "test_call_from_fixture"
      ]
    ]
  ],
  "test_call_from_test": [
    [
      "testing/python/fixtures.py",
      [
        "TestParameterizedSubRequest",
        "test_call_from_test"
      ]
    ]
  ],
  "test_external_fixture": [
    [
      "testing/python/fixtures.py",
      [
        "TestParameterizedSubRequest",
        "test_external_fixture"
      ]
    ]
  ],
  "test_non_relative_path": [
    [
      "testing/python/fixtures.py",
      [
        "TestParameterizedSubRequest",
        "test_non_relative_path"
      ]
    ]
  ],
  "test_pytest_fixture_setup_and_post_finalizer_hook": [
    [
      "testing/python/fixtures.py",
      [
        "test_pytest_fixture_setup_and_post_finalizer_hook"
      ]
    ]
  ],
  "test_func_closure_module_auto": [
    [
      "testing/python/fixtures.py",
      [
        "TestScopeOrdering",
        "test_func_closure_module_auto"
      ]
    ]
  ],
  "test_func_closure_with_native_fixtures": [
    [
      "testing/python/fixtures.py",
      [
        "TestScopeOrdering",
        "test_func_closure_with_native_fixtures"
      ]
    ]
  ],
  "test_func_closure_module": [
    [
      "testing/python/fixtures.py",
      [
        "TestScopeOrdering",
        "test_func_closure_module"
      ]
    ]
  ],
  "test_func_closure_scopes_reordered": [
    [
      "testing/python/fixtures.py",
      [
        "TestScopeOrdering",
        "test_func_closure_scopes_reordered"
      ]
    ]
  ],
  "test_func_closure_same_scope_closer_root_first": [
    [
      "testing/python/fixtures.py",
      [
        "TestScopeOrdering",
        "test_func_closure_same_scope_closer_root_first"
      ]
    ]
  ],
  "test_func_closure_all_scopes_complex": [
    [
      "testing/python/fixtures.py",
      [
        "TestScopeOrdering",
        "test_func_closure_all_scopes_complex"
      ]
    ]
  ],
  "test_multiple_packages": [
    [
      "testing/python/fixtures.py",
      [
        "TestScopeOrdering",
        "test_multiple_packages"
      ]
    ]
  ],
  "test_class_fixture_self_instance": [
    [
      "testing/python/fixtures.py",
      [
        "TestScopeOrdering",
        "test_class_fixture_self_instance"
      ]
    ]
  ],
  "test_call_fixture_function_error": [
    [
      "testing/python/fixtures.py",
      [
        "test_call_fixture_function_error"
      ]
    ]
  ],
  "test_fixture_param_shadowing": [
    [
      "testing/python/fixtures.py",
      [
        "test_fixture_param_shadowing"
      ]
    ]
  ],
  "test_fixture_named_request": [
    [
      "testing/python/fixtures.py",
      [
        "test_fixture_named_request"
      ]
    ]
  ],
  "test_fixture_duplicated_arguments": [
    [
      "testing/python/fixtures.py",
      [
        "test_fixture_duplicated_arguments"
      ]
    ]
  ],
  "test_fixture_with_positionals": [
    [
      "testing/python/fixtures.py",
      [
        "test_fixture_with_positionals"
      ]
    ]
  ],
  "test_indirect_fixture_does_not_break_scope": [
    [
      "testing/python/fixtures.py",
      [
        "test_indirect_fixture_does_not_break_scope"
      ]
    ]
  ],
  "test_fixture_parametrization_nparray": [
    [
      "testing/python/fixtures.py",
      [
        "test_fixture_parametrization_nparray"
      ]
    ]
  ],
  "test_funcarg_non_pycollectobj": [
    [
      "testing/python/integration.py",
      [
        "TestOEJSKITSpecials",
        "test_funcarg_non_pycollectobj"
      ]
    ]
  ],
  "test_autouse_fixture": [
    [
      "testing/python/integration.py",
      [
        "TestOEJSKITSpecials",
        "test_autouse_fixture"
      ]
    ]
  ],
  "test_wrapped_getfslineno": [
    [
      "testing/python/integration.py",
      [
        "test_wrapped_getfslineno"
      ]
    ]
  ],
  "test_wrapped_getfuncargnames": [
    [
      "testing/python/integration.py",
      [
        "TestMockDecoration",
        "test_wrapped_getfuncargnames"
      ]
    ]
  ],
  "test_getfuncargnames_patching": [
    [
      "testing/python/integration.py",
      [
        "TestMockDecoration",
        "test_getfuncargnames_patching"
      ]
    ]
  ],
  "test_unittest_mock": [
    [
      "testing/python/integration.py",
      [
        "TestMockDecoration",
        "test_unittest_mock"
      ]
    ]
  ],
  "test_unittest_mock_and_fixture": [
    [
      "testing/python/integration.py",
      [
        "TestMockDecoration",
        "test_unittest_mock_and_fixture"
      ]
    ]
  ],
  "test_unittest_mock_and_pypi_mock": [
    [
      "testing/python/integration.py",
      [
        "TestMockDecoration",
        "test_unittest_mock_and_pypi_mock"
      ]
    ]
  ],
  "test_mock_sentinel_check_against_numpy_like": [
    [
      "testing/python/integration.py",
      [
        "TestMockDecoration",
        "test_mock_sentinel_check_against_numpy_like"
      ]
    ]
  ],
  "test_mock": [
    [
      "testing/python/integration.py",
      [
        "TestMockDecoration",
        "test_mock"
      ]
    ]
  ],
  "test_mock_sorting": [
    [
      "testing/python/integration.py",
      [
        "TestMockDecoration",
        "test_mock_sorting"
      ]
    ]
  ],
  "test_mock_double_patch_issue473": [
    [
      "testing/python/integration.py",
      [
        "TestMockDecoration",
        "test_mock_double_patch_issue473"
      ]
    ]
  ],
  "test_rerun": [
    [
      "testing/python/integration.py",
      [
        "TestReRunTests",
        "test_rerun"
      ]
    ]
  ],
  "test_pytestconfig_is_session_scoped": [
    [
      "testing/python/integration.py",
      [
        "test_pytestconfig_is_session_scoped"
      ]
    ]
  ],
  "test_module_with_global_test": [
    [
      "testing/python/integration.py",
      [
        "TestNoselikeTestAttribute",
        "test_module_with_global_test"
      ]
    ]
  ],
  "test_class_and_method": [
    [
      "testing/python/integration.py",
      [
        "TestNoselikeTestAttribute",
        "test_class_and_method"
      ]
    ]
  ],
  "test_unittest_class": [
    [
      "testing/python/integration.py",
      [
        "TestNoselikeTestAttribute",
        "test_unittest_class"
      ]
    ]
  ],
  "test_class_with_nasty_getattr": [
    [
      "testing/python/integration.py",
      [
        "TestNoselikeTestAttribute",
        "test_class_with_nasty_getattr"
      ]
    ]
  ],
  "test_idfn_marker": [
    [
      "testing/python/integration.py",
      [
        "TestParameterize",
        "test_idfn_marker"
      ]
    ]
  ],
  "test_idfn_fixture": [
    [
      "testing/python/integration.py",
      [
        "TestParameterize",
        "test_idfn_fixture"
      ]
    ]
  ],
  "Metafunc": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "Metafunc"
      ]
    ]
  ],
  "test_no_funcargs": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_no_funcargs"
      ]
    ]
  ],
  "test_function_basic": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_function_basic"
      ]
    ]
  ],
  "test_parametrize_error": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_error"
      ]
    ]
  ],
  "test_parametrize_bad_scope": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_bad_scope"
      ]
    ]
  ],
  "test_parametrize_request_name": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_request_name"
      ]
    ]
  ],
  "find_scope": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_find_parametrized_scope",
        "find_scope"
      ]
    ]
  ],
  "test_find_parametrized_scope": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_find_parametrized_scope"
      ]
    ]
  ],
  "test_parametrize_and_id": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_and_id"
      ]
    ]
  ],
  "test_parametrize_and_id_unicode": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_and_id_unicode"
      ]
    ]
  ],
  "test_parametrize_with_wrong_number_of_ids": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_with_wrong_number_of_ids"
      ]
    ]
  ],
  "test_parametrize_empty_list": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_empty_list"
      ]
    ]
  ],
  "test_parametrize_with_userobjects": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_with_userobjects"
      ]
    ]
  ],
  "test_idval_hypothesis": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_idval_hypothesis"
      ]
    ]
  ],
  "test_unicode_idval": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_unicode_idval"
      ]
    ]
  ],
  "hook": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_unicode_idval_with_config",
        "MockConfig",
        "hook"
      ]
    ],
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_idmaker_with_idfn_and_config",
        "MockConfig",
        "hook"
      ]
    ],
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_idmaker_with_ids_and_config",
        "MockConfig",
        "hook"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "TestEarlyRewriteBailout",
        "hook"
      ]
    ]
  ],
  "test_unicode_idval_with_config": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_unicode_idval_with_config"
      ]
    ]
  ],
  "test_bytes_idval": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_bytes_idval"
      ]
    ]
  ],
  "test_class_or_function_idval": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_class_or_function_idval"
      ]
    ]
  ],
  "test_idmaker_autoname": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_idmaker_autoname"
      ]
    ]
  ],
  "test_idmaker_with_bytes_regex": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_idmaker_with_bytes_regex"
      ]
    ]
  ],
  "test_idmaker_native_strings": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_idmaker_native_strings"
      ]
    ]
  ],
  "test_idmaker_non_printable_characters": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_idmaker_non_printable_characters"
      ]
    ]
  ],
  "test_idmaker_manual_ids_must_be_printable": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_idmaker_manual_ids_must_be_printable"
      ]
    ]
  ],
  "test_idmaker_enum": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_idmaker_enum"
      ]
    ]
  ],
  "test_idmaker_idfn": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_idmaker_idfn"
      ]
    ]
  ],
  "test_idmaker_idfn_unique_names": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_idmaker_idfn_unique_names"
      ]
    ]
  ],
  "test_idmaker_with_idfn_and_config": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_idmaker_with_idfn_and_config"
      ]
    ]
  ],
  "test_idmaker_with_ids_and_config": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_idmaker_with_ids_and_config"
      ]
    ]
  ],
  "test_parametrize_ids_exception": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_ids_exception"
      ]
    ]
  ],
  "test_parametrize_ids_returns_non_string": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_ids_returns_non_string"
      ]
    ]
  ],
  "test_idmaker_with_ids": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_idmaker_with_ids"
      ]
    ]
  ],
  "test_idmaker_with_paramset_id": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_idmaker_with_paramset_id"
      ]
    ]
  ],
  "test_idmaker_with_ids_unique_names": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_idmaker_with_ids_unique_names"
      ]
    ]
  ],
  "test_parametrize_indirect": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_indirect"
      ]
    ]
  ],
  "test_parametrize_indirect_list": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_indirect_list"
      ]
    ]
  ],
  "test_parametrize_indirect_list_all": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_indirect_list_all"
      ]
    ]
  ],
  "test_parametrize_indirect_list_empty": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_indirect_list_empty"
      ]
    ]
  ],
  "test_parametrize_indirect_wrong_type": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_indirect_wrong_type"
      ]
    ]
  ],
  "test_parametrize_indirect_list_functional": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_indirect_list_functional"
      ]
    ]
  ],
  "test_parametrize_indirect_list_error": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_indirect_list_error"
      ]
    ]
  ],
  "test_parametrize_uses_no_fixture_error_indirect_false": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_uses_no_fixture_error_indirect_false"
      ]
    ]
  ],
  "test_parametrize_uses_no_fixture_error_indirect_true": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_uses_no_fixture_error_indirect_true"
      ]
    ]
  ],
  "test_parametrize_indirect_uses_no_fixture_error_indirect_string": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_indirect_uses_no_fixture_error_indirect_string"
      ]
    ]
  ],
  "test_parametrize_indirect_uses_no_fixture_error_indirect_list": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_indirect_uses_no_fixture_error_indirect_list"
      ]
    ]
  ],
  "test_parametrize_argument_not_in_indirect_list": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_argument_not_in_indirect_list"
      ]
    ]
  ],
  "test_parametrize_gives_indicative_error_on_function_with_default_argument": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_gives_indicative_error_on_function_with_default_argument"
      ]
    ]
  ],
  "test_parametrize_functional": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_functional"
      ]
    ]
  ],
  "test_parametrize_onearg": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_onearg"
      ]
    ]
  ],
  "test_parametrize_onearg_indirect": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_onearg_indirect"
      ]
    ]
  ],
  "test_parametrize_twoargs": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_twoargs"
      ]
    ]
  ],
  "test_parametrize_multiple_times": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_multiple_times"
      ]
    ]
  ],
  "test_parametrize_CSV": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_CSV"
      ]
    ]
  ],
  "test_parametrize_class_scenarios": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_parametrize_class_scenarios"
      ]
    ]
  ],
  "test_format_args": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafunc",
        "test_format_args"
      ]
    ]
  ],
  "test_attributes": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafuncFunctional",
        "test_attributes"
      ]
    ]
  ],
  "test_two_functions": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafuncFunctional",
        "test_two_functions"
      ]
    ]
  ],
  "test_noself_in_method": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafuncFunctional",
        "test_noself_in_method"
      ]
    ]
  ],
  "test_generate_tests_in_class": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafuncFunctional",
        "test_generate_tests_in_class"
      ]
    ]
  ],
  "test_two_functions_not_same_instance": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafuncFunctional",
        "test_two_functions_not_same_instance"
      ]
    ]
  ],
  "test_issue28_setup_method_in_generate_tests": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafuncFunctional",
        "test_issue28_setup_method_in_generate_tests"
      ]
    ]
  ],
  "test_parametrize_functional2": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafuncFunctional",
        "test_parametrize_functional2"
      ]
    ]
  ],
  "test_parametrize_and_inner_getfixturevalue": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafuncFunctional",
        "test_parametrize_and_inner_getfixturevalue"
      ]
    ]
  ],
  "test_parametrize_on_setup_arg": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafuncFunctional",
        "test_parametrize_on_setup_arg"
      ]
    ]
  ],
  "test_parametrize_with_ids": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafuncFunctional",
        "test_parametrize_with_ids"
      ]
    ]
  ],
  "test_parametrize_without_ids": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafuncFunctional",
        "test_parametrize_without_ids"
      ]
    ]
  ],
  "test_parametrize_with_None_in_ids": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafuncFunctional",
        "test_parametrize_with_None_in_ids"
      ]
    ]
  ],
  "test_fixture_parametrized_empty_ids": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafuncFunctional",
        "test_fixture_parametrized_empty_ids"
      ]
    ]
  ],
  "test_parametrized_empty_ids": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafuncFunctional",
        "test_parametrized_empty_ids"
      ]
    ]
  ],
  "test_parametrized_ids_invalid_type": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafuncFunctional",
        "test_parametrized_ids_invalid_type"
      ]
    ]
  ],
  "test_parametrize_with_identical_ids_get_unique_names": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafuncFunctional",
        "test_parametrize_with_identical_ids_get_unique_names"
      ]
    ]
  ],
  "test_parametrize_scope_overrides": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafuncFunctional",
        "test_parametrize_scope_overrides"
      ]
    ]
  ],
  "test_parametrize_issue323": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafuncFunctional",
        "test_parametrize_issue323"
      ]
    ]
  ],
  "test_usefixtures_seen_in_generate_tests": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafuncFunctional",
        "test_usefixtures_seen_in_generate_tests"
      ]
    ]
  ],
  "test_generate_tests_only_done_in_subdir": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafuncFunctional",
        "test_generate_tests_only_done_in_subdir"
      ]
    ]
  ],
  "test_generate_same_function_names_issue403": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafuncFunctional",
        "test_generate_same_function_names_issue403"
      ]
    ]
  ],
  "test_parametrize_misspelling": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafuncFunctional",
        "test_parametrize_misspelling"
      ]
    ]
  ],
  "test_parametrize_auto_scope": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafuncFunctionalAuto",
        "test_parametrize_auto_scope"
      ]
    ]
  ],
  "test_parametrize_auto_scope_indirect": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafuncFunctionalAuto",
        "test_parametrize_auto_scope_indirect"
      ]
    ]
  ],
  "test_parametrize_auto_scope_override_fixture": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafuncFunctionalAuto",
        "test_parametrize_auto_scope_override_fixture"
      ]
    ]
  ],
  "test_parametrize_all_indirects": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafuncFunctionalAuto",
        "test_parametrize_all_indirects"
      ]
    ]
  ],
  "test_parametrize_some_arguments_auto_scope": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafuncFunctionalAuto",
        "test_parametrize_some_arguments_auto_scope"
      ]
    ]
  ],
  "test_parametrize_issue634": [
    [
      "testing/python/metafunc.py",
      [
        "TestMetafuncFunctionalAuto",
        "test_parametrize_issue634"
      ]
    ]
  ],
  "test_simple_mark": [
    [
      "testing/python/metafunc.py",
      [
        "TestMarkersWithParametrization",
        "test_simple_mark"
      ]
    ]
  ],
  "test_select_based_on_mark": [
    [
      "testing/python/metafunc.py",
      [
        "TestMarkersWithParametrization",
        "test_select_based_on_mark"
      ]
    ]
  ],
  "test_nested_marks": [
    [
      "testing/python/metafunc.py",
      [
        "TestMarkersWithParametrization",
        "test_nested_marks"
      ]
    ]
  ],
  "test_simple_xfail": [
    [
      "testing/python/metafunc.py",
      [
        "TestMarkersWithParametrization",
        "test_simple_xfail"
      ]
    ]
  ],
  "test_simple_xfail_single_argname": [
    [
      "testing/python/metafunc.py",
      [
        "TestMarkersWithParametrization",
        "test_simple_xfail_single_argname"
      ]
    ]
  ],
  "test_xfail_with_arg": [
    [
      "testing/python/metafunc.py",
      [
        "TestMarkersWithParametrization",
        "test_xfail_with_arg"
      ]
    ]
  ],
  "test_xfail_with_kwarg": [
    [
      "testing/python/metafunc.py",
      [
        "TestMarkersWithParametrization",
        "test_xfail_with_kwarg"
      ]
    ]
  ],
  "test_xfail_with_arg_and_kwarg": [
    [
      "testing/python/metafunc.py",
      [
        "TestMarkersWithParametrization",
        "test_xfail_with_arg_and_kwarg"
      ]
    ]
  ],
  "test_xfail_passing_is_xpass": [
    [
      "testing/python/metafunc.py",
      [
        "TestMarkersWithParametrization",
        "test_xfail_passing_is_xpass"
      ]
    ]
  ],
  "test_parametrize_called_in_generate_tests": [
    [
      "testing/python/metafunc.py",
      [
        "TestMarkersWithParametrization",
        "test_parametrize_called_in_generate_tests"
      ]
    ]
  ],
  "test_parametrize_ID_generation_string_int_works": [
    [
      "testing/python/metafunc.py",
      [
        "TestMarkersWithParametrization",
        "test_parametrize_ID_generation_string_int_works"
      ]
    ]
  ],
  "test_parametrize_marked_value": [
    [
      "testing/python/metafunc.py",
      [
        "TestMarkersWithParametrization",
        "test_parametrize_marked_value"
      ]
    ]
  ],
  "test_pytest_make_parametrize_id": [
    [
      "testing/python/metafunc.py",
      [
        "TestMarkersWithParametrization",
        "test_pytest_make_parametrize_id"
      ]
    ]
  ],
  "test_pytest_make_parametrize_id_with_argname": [
    [
      "testing/python/metafunc.py",
      [
        "TestMarkersWithParametrization",
        "test_pytest_make_parametrize_id_with_argname"
      ]
    ]
  ],
  "test_parametrize_positional_args": [
    [
      "testing/python/metafunc.py",
      [
        "TestMarkersWithParametrization",
        "test_parametrize_positional_args"
      ]
    ]
  ],
  "test_check_callable": [
    [
      "testing/python/raises.py",
      [
        "TestRaises",
        "test_check_callable"
      ]
    ],
    [
      "testing/test_recwarn.py",
      [
        "TestWarns",
        "test_check_callable"
      ]
    ]
  ],
  "test_raises_function": [
    [
      "testing/python/raises.py",
      [
        "TestRaises",
        "test_raises_function"
      ]
    ]
  ],
  "test_raises_callable_no_exception": [
    [
      "testing/python/raises.py",
      [
        "TestRaises",
        "test_raises_callable_no_exception"
      ]
    ]
  ],
  "test_raises_falsey_type_error": [
    [
      "testing/python/raises.py",
      [
        "TestRaises",
        "test_raises_falsey_type_error"
      ]
    ]
  ],
  "test_raises_repr_inflight": [
    [
      "testing/python/raises.py",
      [
        "TestRaises",
        "test_raises_repr_inflight"
      ]
    ]
  ],
  "test_raises_as_contextmanager": [
    [
      "testing/python/raises.py",
      [
        "TestRaises",
        "test_raises_as_contextmanager"
      ]
    ]
  ],
  "test_does_not_raise": [
    [
      "testing/python/raises.py",
      [
        "TestRaises",
        "test_does_not_raise"
      ]
    ]
  ],
  "test_does_not_raise_does_raise": [
    [
      "testing/python/raises.py",
      [
        "TestRaises",
        "test_does_not_raise_does_raise"
      ]
    ]
  ],
  "test_noclass": [
    [
      "testing/python/raises.py",
      [
        "TestRaises",
        "test_noclass"
      ]
    ]
  ],
  "test_invalid_arguments_to_raises": [
    [
      "testing/python/raises.py",
      [
        "TestRaises",
        "test_invalid_arguments_to_raises"
      ]
    ]
  ],
  "test_no_raise_message": [
    [
      "testing/python/raises.py",
      [
        "TestRaises",
        "test_no_raise_message"
      ]
    ]
  ],
  "test_raises_cyclic_reference": [
    [
      "testing/python/raises.py",
      [
        "TestRaises",
        "test_raises_cyclic_reference"
      ]
    ]
  ],
  "test_raises_match": [
    [
      "testing/python/raises.py",
      [
        "TestRaises",
        "test_raises_match"
      ]
    ]
  ],
  "test_match_failure_string_quoting": [
    [
      "testing/python/raises.py",
      [
        "TestRaises",
        "test_match_failure_string_quoting"
      ]
    ]
  ],
  "test_raises_match_wrong_type": [
    [
      "testing/python/raises.py",
      [
        "TestRaises",
        "test_raises_match_wrong_type"
      ]
    ]
  ],
  "test_raises_exception_looks_iterable": [
    [
      "testing/python/raises.py",
      [
        "TestRaises",
        "test_raises_exception_looks_iterable"
      ]
    ]
  ],
  "test_raises_with_raising_dunder_class": [
    [
      "testing/python/raises.py",
      [
        "TestRaises",
        "test_raises_with_raising_dunder_class"
      ]
    ]
  ],
  "test_raises_context_manager_with_kwargs": [
    [
      "testing/python/raises.py",
      [
        "TestRaises",
        "test_raises_context_manager_with_kwargs"
      ]
    ]
  ],
  "test_show_only_active_fixtures": [
    [
      "testing/python/setup_only.py",
      [
        "test_show_only_active_fixtures"
      ]
    ]
  ],
  "test_show_different_scopes": [
    [
      "testing/python/setup_only.py",
      [
        "test_show_different_scopes"
      ]
    ]
  ],
  "test_show_nested_fixtures": [
    [
      "testing/python/setup_only.py",
      [
        "test_show_nested_fixtures"
      ]
    ]
  ],
  "test_show_fixtures_with_autouse": [
    [
      "testing/python/setup_only.py",
      [
        "test_show_fixtures_with_autouse"
      ]
    ]
  ],
  "test_show_fixtures_with_parameters": [
    [
      "testing/python/setup_only.py",
      [
        "test_show_fixtures_with_parameters"
      ]
    ]
  ],
  "test_show_fixtures_with_parameter_ids": [
    [
      "testing/python/setup_only.py",
      [
        "test_show_fixtures_with_parameter_ids"
      ]
    ]
  ],
  "test_show_fixtures_with_parameter_ids_function": [
    [
      "testing/python/setup_only.py",
      [
        "test_show_fixtures_with_parameter_ids_function"
      ]
    ]
  ],
  "test_dynamic_fixture_request": [
    [
      "testing/python/setup_only.py",
      [
        "test_dynamic_fixture_request"
      ]
    ]
  ],
  "test_capturing": [
    [
      "testing/python/setup_only.py",
      [
        "test_capturing"
      ]
    ]
  ],
  "test_show_fixtures_and_execute_test": [
    [
      "testing/python/setup_only.py",
      [
        "test_show_fixtures_and_execute_test"
      ]
    ]
  ],
  "test_setup_show_with_KeyboardInterrupt_in_test": [
    [
      "testing/python/setup_only.py",
      [
        "test_setup_show_with_KeyboardInterrupt_in_test"
      ]
    ]
  ],
  "test_show_fixtures_and_test": [
    [
      "testing/python/setup_plan.py",
      [
        "test_show_fixtures_and_test"
      ]
    ]
  ],
  "test_no_items_should_not_show_output": [
    [
      "testing/python/show_fixtures_per_test.py",
      [
        "test_no_items_should_not_show_output"
      ]
    ]
  ],
  "test_fixtures_in_module": [
    [
      "testing/python/show_fixtures_per_test.py",
      [
        "test_fixtures_in_module"
      ]
    ]
  ],
  "test_fixtures_in_conftest": [
    [
      "testing/python/show_fixtures_per_test.py",
      [
        "test_fixtures_in_conftest"
      ]
    ]
  ],
  "test_should_show_fixtures_used_by_test": [
    [
      "testing/python/show_fixtures_per_test.py",
      [
        "test_should_show_fixtures_used_by_test"
      ]
    ]
  ],
  "test_verbose_include_private_fixtures_and_loc": [
    [
      "testing/python/show_fixtures_per_test.py",
      [
        "test_verbose_include_private_fixtures_and_loc"
      ]
    ]
  ],
  "test_doctest_items": [
    [
      "testing/python/show_fixtures_per_test.py",
      [
        "test_doctest_items"
      ]
    ]
  ],
  "equal_with_bash": [
    [
      "testing/test_argcomplete.py",
      [
        "equal_with_bash"
      ]
    ]
  ],
  "_wrapcall": [
    [
      "testing/test_argcomplete.py",
      [
        "_wrapcall"
      ]
    ]
  ],
  "test_compare_with_compgen": [
    [
      "testing/test_argcomplete.py",
      [
        "TestArgComplete",
        "test_compare_with_compgen"
      ]
    ]
  ],
  "test_remove_dir_prefix": [
    [
      "testing/test_argcomplete.py",
      [
        "TestArgComplete",
        "test_remove_dir_prefix"
      ]
    ]
  ],
  "mock_config": [
    [
      "testing/test_assertion.py",
      [
        "mock_config"
      ]
    ]
  ],
  "test_conftest_assertion_rewrite": [
    [
      "testing/test_assertion.py",
      [
        "TestImportHookInstallation",
        "test_conftest_assertion_rewrite"
      ]
    ]
  ],
  "test_rewrite_assertions_pytester_plugin": [
    [
      "testing/test_assertion.py",
      [
        "TestImportHookInstallation",
        "test_rewrite_assertions_pytester_plugin"
      ]
    ]
  ],
  "test_pytest_plugins_rewrite": [
    [
      "testing/test_assertion.py",
      [
        "TestImportHookInstallation",
        "test_pytest_plugins_rewrite"
      ]
    ]
  ],
  "test_pytest_plugins_rewrite_module_names": [
    [
      "testing/test_assertion.py",
      [
        "TestImportHookInstallation",
        "test_pytest_plugins_rewrite_module_names"
      ]
    ]
  ],
  "test_pytest_plugins_rewrite_module_names_correctly": [
    [
      "testing/test_assertion.py",
      [
        "TestImportHookInstallation",
        "test_pytest_plugins_rewrite_module_names_correctly"
      ]
    ]
  ],
  "test_installed_plugin_rewrite": [
    [
      "testing/test_assertion.py",
      [
        "TestImportHookInstallation",
        "test_installed_plugin_rewrite"
      ]
    ]
  ],
  "test_rewrite_ast": [
    [
      "testing/test_assertion.py",
      [
        "TestImportHookInstallation",
        "test_rewrite_ast"
      ]
    ]
  ],
  "test_register_assert_rewrite_checks_types": [
    [
      "testing/test_assertion.py",
      [
        "TestImportHookInstallation",
        "test_register_assert_rewrite_checks_types"
      ]
    ]
  ],
  "test_pytest_assertrepr_compare_called": [
    [
      "testing/test_assertion.py",
      [
        "TestBinReprIntegration",
        "test_pytest_assertrepr_compare_called"
      ]
    ]
  ],
  "callequal": [
    [
      "testing/test_assertion.py",
      [
        "callequal"
      ]
    ]
  ],
  "test_different_types": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_different_types"
      ]
    ]
  ],
  "test_summary": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_summary"
      ]
    ]
  ],
  "test_text_diff": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_text_diff"
      ]
    ]
  ],
  "test_text_skipping": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_text_skipping"
      ]
    ]
  ],
  "test_text_skipping_verbose": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_text_skipping_verbose"
      ]
    ]
  ],
  "test_multiline_text_diff": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_multiline_text_diff"
      ]
    ]
  ],
  "test_bytes_diff_normal": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_bytes_diff_normal"
      ]
    ]
  ],
  "test_bytes_diff_verbose": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_bytes_diff_verbose"
      ]
    ]
  ],
  "test_iterable_full_diff": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_iterable_full_diff"
      ]
    ]
  ],
  "test_list_different_lengths": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_list_different_lengths"
      ]
    ]
  ],
  "test_dict_omitting": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_dict_omitting"
      ]
    ]
  ],
  "test_dict_omitting_with_verbosity_1": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_dict_omitting_with_verbosity_1"
      ]
    ]
  ],
  "test_dict_omitting_with_verbosity_2": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_dict_omitting_with_verbosity_2"
      ]
    ]
  ],
  "test_dict_different_items": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_dict_different_items"
      ]
    ]
  ],
  "test_sequence_different_items": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_sequence_different_items"
      ]
    ]
  ],
  "test_set": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_set"
      ]
    ]
  ],
  "test_frozenzet": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_frozenzet"
      ]
    ]
  ],
  "insert": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_Sequence",
        "TestSequence",
        "insert"
      ]
    ]
  ],
  "test_Sequence": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_Sequence"
      ]
    ]
  ],
  "test_list_tuples": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_list_tuples"
      ]
    ]
  ],
  "test_repr_verbose": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_repr_verbose"
      ]
    ]
  ],
  "test_list_bad_repr": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_list_bad_repr"
      ]
    ]
  ],
  "test_one_repr_empty": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_one_repr_empty"
      ]
    ]
  ],
  "test_repr_no_exc": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_repr_no_exc"
      ]
    ]
  ],
  "test_nonascii_text": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_nonascii_text"
      ]
    ]
  ],
  "test_format_nonascii_explanation": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_format_nonascii_explanation"
      ]
    ]
  ],
  "test_mojibake": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare",
        "test_mojibake"
      ]
    ]
  ],
  "test_attrs": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare_attrsclass",
        "test_attrs"
      ]
    ]
  ],
  "test_attrs_verbose": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare_attrsclass",
        "test_attrs_verbose"
      ]
    ]
  ],
  "test_attrs_with_attribute_comparison_off": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare_attrsclass",
        "test_attrs_with_attribute_comparison_off"
      ]
    ]
  ],
  "test_comparing_two_different_attrs_classes": [
    [
      "testing/test_assertion.py",
      [
        "TestAssert_reprcompare_attrsclass",
        "test_comparing_two_different_attrs_classes"
      ]
    ]
  ],
  "test_special_chars_full": [
    [
      "testing/test_assertion.py",
      [
        "TestFormatExplanation",
        "test_special_chars_full"
      ]
    ]
  ],
  "test_fmt_simple": [
    [
      "testing/test_assertion.py",
      [
        "TestFormatExplanation",
        "test_fmt_simple"
      ]
    ]
  ],
  "test_fmt_where": [
    [
      "testing/test_assertion.py",
      [
        "TestFormatExplanation",
        "test_fmt_where"
      ]
    ]
  ],
  "test_fmt_and": [
    [
      "testing/test_assertion.py",
      [
        "TestFormatExplanation",
        "test_fmt_and"
      ]
    ]
  ],
  "test_fmt_where_nested": [
    [
      "testing/test_assertion.py",
      [
        "TestFormatExplanation",
        "test_fmt_where_nested"
      ]
    ]
  ],
  "test_fmt_newline": [
    [
      "testing/test_assertion.py",
      [
        "TestFormatExplanation",
        "test_fmt_newline"
      ]
    ]
  ],
  "test_fmt_newline_escaped": [
    [
      "testing/test_assertion.py",
      [
        "TestFormatExplanation",
        "test_fmt_newline_escaped"
      ]
    ]
  ],
  "test_fmt_newline_before_where": [
    [
      "testing/test_assertion.py",
      [
        "TestFormatExplanation",
        "test_fmt_newline_before_where"
      ]
    ]
  ],
  "test_fmt_multi_newline_before_where": [
    [
      "testing/test_assertion.py",
      [
        "TestFormatExplanation",
        "test_fmt_multi_newline_before_where"
      ]
    ]
  ],
  "test_doesnt_truncate_when_input_is_empty_list": [
    [
      "testing/test_assertion.py",
      [
        "TestTruncateExplanation",
        "test_doesnt_truncate_when_input_is_empty_list"
      ]
    ]
  ],
  "test_doesnt_truncate_at_when_input_is_5_lines_and_LT_max_chars": [
    [
      "testing/test_assertion.py",
      [
        "TestTruncateExplanation",
        "test_doesnt_truncate_at_when_input_is_5_lines_and_LT_max_chars"
      ]
    ]
  ],
  "test_truncates_at_8_lines_when_given_list_of_empty_strings": [
    [
      "testing/test_assertion.py",
      [
        "TestTruncateExplanation",
        "test_truncates_at_8_lines_when_given_list_of_empty_strings"
      ]
    ]
  ],
  "test_truncates_at_8_lines_when_first_8_lines_are_LT_max_chars": [
    [
      "testing/test_assertion.py",
      [
        "TestTruncateExplanation",
        "test_truncates_at_8_lines_when_first_8_lines_are_LT_max_chars"
      ]
    ]
  ],
  "test_truncates_at_8_lines_when_first_8_lines_are_EQ_max_chars": [
    [
      "testing/test_assertion.py",
      [
        "TestTruncateExplanation",
        "test_truncates_at_8_lines_when_first_8_lines_are_EQ_max_chars"
      ]
    ]
  ],
  "test_truncates_at_4_lines_when_first_4_lines_are_GT_max_chars": [
    [
      "testing/test_assertion.py",
      [
        "TestTruncateExplanation",
        "test_truncates_at_4_lines_when_first_4_lines_are_GT_max_chars"
      ]
    ]
  ],
  "test_truncates_at_1_line_when_first_line_is_GT_max_chars": [
    [
      "testing/test_assertion.py",
      [
        "TestTruncateExplanation",
        "test_truncates_at_1_line_when_first_line_is_GT_max_chars"
      ]
    ]
  ],
  "test_full_output_truncated": [
    [
      "testing/test_assertion.py",
      [
        "TestTruncateExplanation",
        "test_full_output_truncated"
      ]
    ]
  ],
  "test_python25_compile_issue257": [
    [
      "testing/test_assertion.py",
      [
        "test_python25_compile_issue257"
      ]
    ]
  ],
  "test_rewritten": [
    [
      "testing/test_assertion.py",
      [
        "test_rewritten"
      ]
    ]
  ],
  "test_reprcompare_notin": [
    [
      "testing/test_assertion.py",
      [
        "test_reprcompare_notin"
      ]
    ]
  ],
  "test_reprcompare_whitespaces": [
    [
      "testing/test_assertion.py",
      [
        "test_reprcompare_whitespaces"
      ]
    ]
  ],
  "test_pytest_assertrepr_compare_integration": [
    [
      "testing/test_assertion.py",
      [
        "test_pytest_assertrepr_compare_integration"
      ]
    ]
  ],
  "test_sequence_comparison_uses_repr": [
    [
      "testing/test_assertion.py",
      [
        "test_sequence_comparison_uses_repr"
      ]
    ]
  ],
  "test_assertrepr_loaded_per_dir": [
    [
      "testing/test_assertion.py",
      [
        "test_assertrepr_loaded_per_dir"
      ]
    ]
  ],
  "test_assertion_options": [
    [
      "testing/test_assertion.py",
      [
        "test_assertion_options"
      ]
    ]
  ],
  "test_triple_quoted_string_issue113": [
    [
      "testing/test_assertion.py",
      [
        "test_triple_quoted_string_issue113"
      ]
    ]
  ],
  "test_traceback_failure": [
    [
      "testing/test_assertion.py",
      [
        "test_traceback_failure"
      ]
    ]
  ],
  "test_exception_handling_no_traceback": [
    [
      "testing/test_assertion.py",
      [
        "test_exception_handling_no_traceback"
      ]
    ]
  ],
  "test_warn_missing": [
    [
      "testing/test_assertion.py",
      [
        "test_warn_missing"
      ]
    ]
  ],
  "test_recursion_source_decode": [
    [
      "testing/test_assertion.py",
      [
        "test_recursion_source_decode"
      ]
    ]
  ],
  "test_AssertionError_message": [
    [
      "testing/test_assertion.py",
      [
        "test_AssertionError_message"
      ]
    ]
  ],
  "test_diff_newline_at_end": [
    [
      "testing/test_assertion.py",
      [
        "test_diff_newline_at_end"
      ]
    ]
  ],
  "test_assert_tuple_warning": [
    [
      "testing/test_assertion.py",
      [
        "test_assert_tuple_warning"
      ]
    ]
  ],
  "test_assert_indirect_tuple_no_warning": [
    [
      "testing/test_assertion.py",
      [
        "test_assert_indirect_tuple_no_warning"
      ]
    ]
  ],
  "test_assert_with_unicode": [
    [
      "testing/test_assertion.py",
      [
        "test_assert_with_unicode"
      ]
    ]
  ],
  "test_raise_unprintable_assertion_error": [
    [
      "testing/test_assertion.py",
      [
        "test_raise_unprintable_assertion_error"
      ]
    ]
  ],
  "test_raise_assertion_error_raisin_repr": [
    [
      "testing/test_assertion.py",
      [
        "test_raise_assertion_error_raisin_repr"
      ]
    ]
  ],
  "test_issue_1944": [
    [
      "testing/test_assertion.py",
      [
        "test_issue_1944"
      ]
    ]
  ],
  "test_exit_from_assertrepr_compare": [
    [
      "testing/test_assertion.py",
      [
        "test_exit_from_assertrepr_compare"
      ]
    ]
  ],
  "test_assertion_location_with_coverage": [
    [
      "testing/test_assertion.py",
      [
        "test_assertion_location_with_coverage"
      ]
    ]
  ],
  "getmsg": [
    [
      "testing/test_assertrewrite.py",
      [
        "getmsg"
      ]
    ]
  ],
  "test_place_initial_imports": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_place_initial_imports"
      ]
    ]
  ],
  "test_dont_rewrite": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_dont_rewrite"
      ]
    ]
  ],
  "test_dont_rewrite_plugin": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_dont_rewrite_plugin"
      ]
    ]
  ],
  "test_rewrites_plugin_as_a_package": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_rewrites_plugin_as_a_package"
      ]
    ]
  ],
  "test_honors_pep_235": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_honors_pep_235"
      ]
    ]
  ],
  "f_1": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_name",
        "f_1"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_boolop",
        "f_1"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_comparisons",
        "f_1"
      ]
    ]
  ],
  "f_2": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_name",
        "f_2"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_boolop",
        "f_2"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_call",
        "f_2"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_comparisons",
        "f_2"
      ]
    ]
  ],
  "f_3": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_name",
        "f_3"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_boolop",
        "f_3"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_call",
        "f_3"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_comparisons",
        "f_3"
      ]
    ]
  ],
  "f_4": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_name",
        "f_4"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_boolop",
        "f_4"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_call",
        "f_4"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_comparisons",
        "f_4"
      ]
    ]
  ],
  "test_name": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_name"
      ]
    ]
  ],
  "test_assertrepr_compare_same_width": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_assertrepr_compare_same_width"
      ]
    ]
  ],
  "test_dont_rewrite_if_hasattr_fails": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_dont_rewrite_if_hasattr_fails"
      ]
    ]
  ],
  "test_assert_already_has_message": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_assert_already_has_message"
      ]
    ]
  ],
  "test_assertion_message": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_assertion_message"
      ]
    ]
  ],
  "test_assertion_message_multiline": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_assertion_message_multiline"
      ]
    ]
  ],
  "test_assertion_message_tuple": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_assertion_message_tuple"
      ]
    ]
  ],
  "test_assertion_message_expr": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_assertion_message_expr"
      ]
    ]
  ],
  "test_assertion_message_escape": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_assertion_message_escape"
      ]
    ]
  ],
  "test_assertion_messages_bytes": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_assertion_messages_bytes"
      ]
    ]
  ],
  "f_6": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_boolop",
        "f_6"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_call",
        "f_6"
      ]
    ]
  ],
  "f_7": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_boolop",
        "f_7"
      ]
    ],
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_call",
        "f_7"
      ]
    ]
  ],
  "f_8": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_boolop",
        "f_8"
      ]
    ]
  ],
  "f_9": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_boolop",
        "f_9"
      ]
    ]
  ],
  "f_10": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_boolop",
        "f_10"
      ]
    ]
  ],
  "f_11": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_boolop",
        "f_11"
      ]
    ]
  ],
  "test_boolop": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_boolop"
      ]
    ]
  ],
  "test_short_circuit_evaluation": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_short_circuit_evaluation"
      ]
    ]
  ],
  "test_unary_op": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_unary_op"
      ]
    ]
  ],
  "test_binary_op": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_binary_op"
      ]
    ]
  ],
  "test_boolop_percent": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_boolop_percent"
      ]
    ]
  ],
  "test_at_operator_issue1290": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_at_operator_issue1290"
      ]
    ]
  ],
  "test_starred_with_side_effect": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_starred_with_side_effect"
      ]
    ]
  ],
  "f_5": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_call",
        "f_5"
      ]
    ]
  ],
  "test_call": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_call"
      ]
    ]
  ],
  "test_comparisons": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_comparisons"
      ]
    ]
  ],
  "test_custom_reprcompare": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_custom_reprcompare"
      ]
    ]
  ],
  "test_assert_raising_nonzero_in_comparison": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_assert_raising_nonzero_in_comparison"
      ]
    ]
  ],
  "test_formatchar": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_formatchar"
      ]
    ]
  ],
  "test_custom_repr_non_ascii": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewrite",
        "test_custom_repr_non_ascii"
      ]
    ]
  ],
  "test_pycache_is_a_file": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestRewriteOnImport",
        "test_pycache_is_a_file"
      ]
    ]
  ],
  "test_pycache_is_readonly": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestRewriteOnImport",
        "test_pycache_is_readonly"
      ]
    ]
  ],
  "test_zipfile": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestRewriteOnImport",
        "test_zipfile"
      ]
    ]
  ],
  "test_readonly": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestRewriteOnImport",
        "test_readonly"
      ]
    ]
  ],
  "test_dont_write_bytecode": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestRewriteOnImport",
        "test_dont_write_bytecode"
      ]
    ]
  ],
  "test_orphaned_pyc_file": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestRewriteOnImport",
        "test_orphaned_pyc_file"
      ]
    ]
  ],
  "test_cached_pyc_includes_pytest_version": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestRewriteOnImport",
        "test_cached_pyc_includes_pytest_version"
      ]
    ]
  ],
  "test_pyc_vs_pyo": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestRewriteOnImport",
        "test_pyc_vs_pyo"
      ]
    ]
  ],
  "test_package": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestRewriteOnImport",
        "test_package"
      ]
    ]
  ],
  "test_translate_newlines": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestRewriteOnImport",
        "test_translate_newlines"
      ]
    ]
  ],
  "test_package_without__init__py": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestRewriteOnImport",
        "test_package_without__init__py"
      ]
    ]
  ],
  "test_rewrite_warning": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestRewriteOnImport",
        "test_rewrite_warning"
      ]
    ]
  ],
  "test_rewrite_module_imported_from_conftest": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestRewriteOnImport",
        "test_rewrite_module_imported_from_conftest"
      ]
    ]
  ],
  "test_remember_rewritten_modules": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestRewriteOnImport",
        "test_remember_rewritten_modules"
      ]
    ]
  ],
  "test_rewrite_warning_using_pytest_plugins": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestRewriteOnImport",
        "test_rewrite_warning_using_pytest_plugins"
      ]
    ]
  ],
  "test_rewrite_warning_using_pytest_plugins_env_var": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestRewriteOnImport",
        "test_rewrite_warning_using_pytest_plugins_env_var"
      ]
    ]
  ],
  "test_sys_meta_path_munged": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewriteHookDetails",
        "test_sys_meta_path_munged"
      ]
    ]
  ],
  "test_write_pyc": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewriteHookDetails",
        "test_write_pyc"
      ]
    ]
  ],
  "test_resources_provider_for_loader": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewriteHookDetails",
        "test_resources_provider_for_loader"
      ]
    ]
  ],
  "test_read_pyc": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewriteHookDetails",
        "test_read_pyc"
      ]
    ]
  ],
  "test_reload_is_same": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewriteHookDetails",
        "test_reload_is_same"
      ]
    ]
  ],
  "test_reload_reloads": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewriteHookDetails",
        "test_reload_reloads"
      ]
    ]
  ],
  "test_get_data_support": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionRewriteHookDetails",
        "test_get_data_support"
      ]
    ]
  ],
  "test_issue731": [
    [
      "testing/test_assertrewrite.py",
      [
        "test_issue731"
      ]
    ]
  ],
  "test_simple_case": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestIssue925",
        "test_simple_case"
      ]
    ]
  ],
  "test_long_case": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestIssue925",
        "test_long_case"
      ]
    ]
  ],
  "test_many_brackets": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestIssue925",
        "test_many_brackets"
      ]
    ]
  ],
  "test_rewrite_python_files_contain_subdirs": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestIssue2121",
        "test_rewrite_python_files_contain_subdirs"
      ]
    ]
  ],
  "test_source_mtime_long_long": [
    [
      "testing/test_assertrewrite.py",
      [
        "test_source_mtime_long_long"
      ]
    ]
  ],
  "spy_write_pyc": [
    [
      "testing/test_assertrewrite.py",
      [
        "test_rewrite_infinite_recursion",
        "spy_write_pyc"
      ]
    ]
  ],
  "test_rewrite_infinite_recursion": [
    [
      "testing/test_assertrewrite.py",
      [
        "test_rewrite_infinite_recursion"
      ]
    ]
  ],
  "spy_find_spec": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestEarlyRewriteBailout",
        "hook",
        "spy_find_spec"
      ]
    ]
  ],
  "test_basic": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestEarlyRewriteBailout",
        "test_basic"
      ]
    ]
  ],
  "test_pattern_contains_subdirectories": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestEarlyRewriteBailout",
        "test_pattern_contains_subdirectories"
      ]
    ]
  ],
  "test_cwd_changed": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestEarlyRewriteBailout",
        "test_cwd_changed"
      ]
    ]
  ],
  "test_option_default": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionPass",
        "test_option_default"
      ]
    ]
  ],
  "flag_on": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionPass",
        "flag_on"
      ]
    ]
  ],
  "hook_on": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionPass",
        "hook_on"
      ]
    ]
  ],
  "test_hook_call": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionPass",
        "test_hook_call"
      ]
    ]
  ],
  "test_hook_call_with_parens": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionPass",
        "test_hook_call_with_parens"
      ]
    ]
  ],
  "test_hook_not_called_without_hookimpl": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionPass",
        "test_hook_not_called_without_hookimpl"
      ]
    ]
  ],
  "raise_on_assertionpass": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionPass",
        "test_hook_not_called_without_cmd_option",
        "raise_on_assertionpass"
      ]
    ]
  ],
  "test_hook_not_called_without_cmd_option": [
    [
      "testing/test_assertrewrite.py",
      [
        "TestAssertionPass",
        "test_hook_not_called_without_cmd_option"
      ]
    ]
  ],
  "test_get_assertion_exprs": [
    [
      "testing/test_assertrewrite.py",
      [
        "test_get_assertion_exprs"
      ]
    ]
  ],
  "fake_mkdir": [
    [
      "testing/test_assertrewrite.py",
      [
        "test_try_mkdir",
        "fake_mkdir"
      ]
    ]
  ],
  "test_try_mkdir": [
    [
      "testing/test_assertrewrite.py",
      [
        "test_try_mkdir"
      ]
    ]
  ],
  "test_config_cache_makedir": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestNewAPI",
        "test_config_cache_makedir"
      ]
    ]
  ],
  "test_config_cache_dataerror": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestNewAPI",
        "test_config_cache_dataerror"
      ]
    ]
  ],
  "test_cache_writefail_cachfile_silent": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestNewAPI",
        "test_cache_writefail_cachfile_silent"
      ]
    ]
  ],
  "test_cache_writefail_permissions": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestNewAPI",
        "test_cache_writefail_permissions"
      ]
    ]
  ],
  "test_cache_failure_warns": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestNewAPI",
        "test_cache_failure_warns"
      ]
    ]
  ],
  "test_config_cache": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestNewAPI",
        "test_config_cache"
      ]
    ]
  ],
  "test_cachefuncarg": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestNewAPI",
        "test_cachefuncarg"
      ]
    ]
  ],
  "test_custom_rel_cache_dir": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestNewAPI",
        "test_custom_rel_cache_dir"
      ]
    ]
  ],
  "test_custom_abs_cache_dir": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestNewAPI",
        "test_custom_abs_cache_dir"
      ]
    ]
  ],
  "test_custom_cache_dir_with_env_var": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestNewAPI",
        "test_custom_cache_dir_with_env_var"
      ]
    ]
  ],
  "test_cache_reportheader": [
    [
      "testing/test_cacheprovider.py",
      [
        "test_cache_reportheader"
      ]
    ]
  ],
  "test_cache_reportheader_external_abspath": [
    [
      "testing/test_cacheprovider.py",
      [
        "test_cache_reportheader_external_abspath"
      ]
    ]
  ],
  "test_cache_show": [
    [
      "testing/test_cacheprovider.py",
      [
        "test_cache_show"
      ]
    ]
  ],
  "test_lastfailed_usecase": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestLastFailed",
        "test_lastfailed_usecase"
      ]
    ]
  ],
  "test_failedfirst_order": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestLastFailed",
        "test_failedfirst_order"
      ]
    ]
  ],
  "test_lastfailed_failedfirst_order": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestLastFailed",
        "test_lastfailed_failedfirst_order"
      ]
    ]
  ],
  "test_lastfailed_difference_invocations": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestLastFailed",
        "test_lastfailed_difference_invocations"
      ]
    ]
  ],
  "test_lastfailed_usecase_splice": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestLastFailed",
        "test_lastfailed_usecase_splice"
      ]
    ]
  ],
  "test_lastfailed_xpass": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestLastFailed",
        "test_lastfailed_xpass"
      ]
    ]
  ],
  "test_non_serializable_parametrize": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestLastFailed",
        "test_non_serializable_parametrize"
      ]
    ]
  ],
  "test_terminal_report_lastfailed": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestLastFailed",
        "test_terminal_report_lastfailed"
      ]
    ]
  ],
  "test_terminal_report_failedfirst": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestLastFailed",
        "test_terminal_report_failedfirst"
      ]
    ]
  ],
  "rlf": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestLastFailed",
        "test_lastfailed_collectfailure",
        "rlf"
      ]
    ],
    [
      "testing/test_cacheprovider.py",
      [
        "TestLastFailed",
        "test_lastfailed_failure_subset",
        "rlf"
      ]
    ]
  ],
  "test_lastfailed_collectfailure": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestLastFailed",
        "test_lastfailed_collectfailure"
      ]
    ]
  ],
  "test_lastfailed_failure_subset": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestLastFailed",
        "test_lastfailed_failure_subset"
      ]
    ]
  ],
  "test_lastfailed_creates_cache_when_needed": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestLastFailed",
        "test_lastfailed_creates_cache_when_needed"
      ]
    ]
  ],
  "test_xfail_not_considered_failure": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestLastFailed",
        "test_xfail_not_considered_failure"
      ]
    ]
  ],
  "test_xfail_strict_considered_failure": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestLastFailed",
        "test_xfail_strict_considered_failure"
      ]
    ]
  ],
  "test_failed_changed_to_xfail_or_skip": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestLastFailed",
        "test_failed_changed_to_xfail_or_skip"
      ]
    ]
  ],
  "test_lf_and_ff_prints_no_needless_message": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestLastFailed",
        "test_lf_and_ff_prints_no_needless_message"
      ]
    ]
  ],
  "get_cached_last_failed": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestLastFailed",
        "get_cached_last_failed"
      ]
    ]
  ],
  "test_cache_cumulative": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestLastFailed",
        "test_cache_cumulative"
      ]
    ]
  ],
  "test_lastfailed_no_failures_behavior_all_passed": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestLastFailed",
        "test_lastfailed_no_failures_behavior_all_passed"
      ]
    ]
  ],
  "test_lastfailed_no_failures_behavior_empty_cache": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestLastFailed",
        "test_lastfailed_no_failures_behavior_empty_cache"
      ]
    ]
  ],
  "test_lastfailed_skip_collection": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestLastFailed",
        "test_lastfailed_skip_collection"
      ]
    ]
  ],
  "test_lastfailed_with_known_failures_not_being_selected": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestLastFailed",
        "test_lastfailed_with_known_failures_not_being_selected"
      ]
    ]
  ],
  "test_newfirst_usecase": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestNewFirst",
        "test_newfirst_usecase"
      ]
    ]
  ],
  "test_newfirst_parametrize": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestNewFirst",
        "test_newfirst_parametrize"
      ]
    ]
  ],
  "check_readme": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestReadme",
        "check_readme"
      ]
    ]
  ],
  "test_readme_passed": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestReadme",
        "test_readme_passed"
      ]
    ]
  ],
  "test_readme_failed": [
    [
      "testing/test_cacheprovider.py",
      [
        "TestReadme",
        "test_readme_failed"
      ]
    ]
  ],
  "test_gitignore": [
    [
      "testing/test_cacheprovider.py",
      [
        "test_gitignore"
      ]
    ]
  ],
  "test_does_not_create_boilerplate_in_existing_dirs": [
    [
      "testing/test_cacheprovider.py",
      [
        "test_does_not_create_boilerplate_in_existing_dirs"
      ]
    ]
  ],
  "test_cachedir_tag": [
    [
      "testing/test_cacheprovider.py",
      [
        "test_cachedir_tag"
      ]
    ]
  ],
  "StdCaptureFD": [
    [
      "testing/test_capture.py",
      [
        "StdCaptureFD"
      ]
    ]
  ],
  "StdCapture": [
    [
      "testing/test_capture.py",
      [
        "StdCapture"
      ]
    ]
  ],
  "test_getmethod_default_no_fd": [
    [
      "testing/test_capture.py",
      [
        "TestCaptureManager",
        "test_getmethod_default_no_fd"
      ]
    ]
  ],
  "test_capturing_basic_api": [
    [
      "testing/test_capture.py",
      [
        "TestCaptureManager",
        "test_capturing_basic_api"
      ]
    ]
  ],
  "test_init_capturing": [
    [
      "testing/test_capture.py",
      [
        "TestCaptureManager",
        "test_init_capturing"
      ]
    ]
  ],
  "test_capturing_unicode": [
    [
      "testing/test_capture.py",
      [
        "test_capturing_unicode"
      ]
    ]
  ],
  "test_capturing_bytes_in_utf8_encoding": [
    [
      "testing/test_capture.py",
      [
        "test_capturing_bytes_in_utf8_encoding"
      ]
    ]
  ],
  "test_collect_capturing": [
    [
      "testing/test_capture.py",
      [
        "test_collect_capturing"
      ]
    ]
  ],
  "test_capture_and_fixtures": [
    [
      "testing/test_capture.py",
      [
        "TestPerTestCapturing",
        "test_capture_and_fixtures"
      ]
    ]
  ],
  "test_capture_scope_cache": [
    [
      "testing/test_capture.py",
      [
        "TestPerTestCapturing",
        "test_capture_scope_cache"
      ]
    ]
  ],
  "test_no_carry_over": [
    [
      "testing/test_capture.py",
      [
        "TestPerTestCapturing",
        "test_no_carry_over"
      ]
    ]
  ],
  "test_teardown_capturing": [
    [
      "testing/test_capture.py",
      [
        "TestPerTestCapturing",
        "test_teardown_capturing"
      ]
    ]
  ],
  "test_teardown_capturing_final": [
    [
      "testing/test_capture.py",
      [
        "TestPerTestCapturing",
        "test_teardown_capturing_final"
      ]
    ]
  ],
  "test_capturing_outerr": [
    [
      "testing/test_capture.py",
      [
        "TestPerTestCapturing",
        "test_capturing_outerr"
      ]
    ]
  ],
  "test_logging_stream_ownership": [
    [
      "testing/test_capture.py",
      [
        "TestLoggingInteraction",
        "test_logging_stream_ownership"
      ]
    ]
  ],
  "test_logging_and_immediate_setupteardown": [
    [
      "testing/test_capture.py",
      [
        "TestLoggingInteraction",
        "test_logging_and_immediate_setupteardown"
      ]
    ]
  ],
  "test_logging_and_crossscope_fixtures": [
    [
      "testing/test_capture.py",
      [
        "TestLoggingInteraction",
        "test_logging_and_crossscope_fixtures"
      ]
    ]
  ],
  "test_conftestlogging_is_shown": [
    [
      "testing/test_capture.py",
      [
        "TestLoggingInteraction",
        "test_conftestlogging_is_shown"
      ]
    ]
  ],
  "test_conftestlogging_and_test_logging": [
    [
      "testing/test_capture.py",
      [
        "TestLoggingInteraction",
        "test_conftestlogging_and_test_logging"
      ]
    ]
  ],
  "test_logging_after_cap_stopped": [
    [
      "testing/test_capture.py",
      [
        "TestLoggingInteraction",
        "test_logging_after_cap_stopped"
      ]
    ]
  ],
  "test_std_functional": [
    [
      "testing/test_capture.py",
      [
        "TestCaptureFixture",
        "test_std_functional"
      ]
    ]
  ],
  "test_capsyscapfd": [
    [
      "testing/test_capture.py",
      [
        "TestCaptureFixture",
        "test_capsyscapfd"
      ]
    ]
  ],
  "test_capturing_getfixturevalue": [
    [
      "testing/test_capture.py",
      [
        "TestCaptureFixture",
        "test_capturing_getfixturevalue"
      ]
    ]
  ],
  "test_capsyscapfdbinary": [
    [
      "testing/test_capture.py",
      [
        "TestCaptureFixture",
        "test_capsyscapfdbinary"
      ]
    ]
  ],
  "test_capture_is_represented_on_failure_issue128": [
    [
      "testing/test_capture.py",
      [
        "TestCaptureFixture",
        "test_capture_is_represented_on_failure_issue128"
      ]
    ]
  ],
  "test_stdfd_functional": [
    [
      "testing/test_capture.py",
      [
        "TestCaptureFixture",
        "test_stdfd_functional"
      ]
    ]
  ],
  "test_capfdbinary": [
    [
      "testing/test_capture.py",
      [
        "TestCaptureFixture",
        "test_capfdbinary"
      ]
    ]
  ],
  "test_capsysbinary": [
    [
      "testing/test_capture.py",
      [
        "TestCaptureFixture",
        "test_capsysbinary"
      ]
    ]
  ],
  "test_partial_setup_failure": [
    [
      "testing/test_capture.py",
      [
        "TestCaptureFixture",
        "test_partial_setup_failure"
      ]
    ]
  ],
  "test_keyboardinterrupt_disables_capturing": [
    [
      "testing/test_capture.py",
      [
        "TestCaptureFixture",
        "test_keyboardinterrupt_disables_capturing"
      ]
    ]
  ],
  "test_capture_and_logging": [
    [
      "testing/test_capture.py",
      [
        "TestCaptureFixture",
        "test_capture_and_logging"
      ]
    ]
  ],
  "test_disabled_capture_fixture": [
    [
      "testing/test_capture.py",
      [
        "TestCaptureFixture",
        "test_disabled_capture_fixture"
      ]
    ]
  ],
  "test_fixture_use_by_other_fixtures": [
    [
      "testing/test_capture.py",
      [
        "TestCaptureFixture",
        "test_fixture_use_by_other_fixtures"
      ]
    ]
  ],
  "test_fixture_use_by_other_fixtures_teardown": [
    [
      "testing/test_capture.py",
      [
        "TestCaptureFixture",
        "test_fixture_use_by_other_fixtures_teardown"
      ]
    ]
  ],
  "test_setup_failure_does_not_kill_capturing": [
    [
      "testing/test_capture.py",
      [
        "test_setup_failure_does_not_kill_capturing"
      ]
    ]
  ],
  "test_fdfuncarg_skips_on_no_osdup": [
    [
      "testing/test_capture.py",
      [
        "test_fdfuncarg_skips_on_no_osdup"
      ]
    ]
  ],
  "test_capture_conftest_runtest_setup": [
    [
      "testing/test_capture.py",
      [
        "test_capture_conftest_runtest_setup"
      ]
    ]
  ],
  "test_capture_badoutput_issue412": [
    [
      "testing/test_capture.py",
      [
        "test_capture_badoutput_issue412"
      ]
    ]
  ],
  "test_capture_early_option_parsing": [
    [
      "testing/test_capture.py",
      [
        "test_capture_early_option_parsing"
      ]
    ]
  ],
  "test_capture_binary_output": [
    [
      "testing/test_capture.py",
      [
        "test_capture_binary_output"
      ]
    ]
  ],
  "test_error_during_readouterr": [
    [
      "testing/test_capture.py",
      [
        "test_error_during_readouterr"
      ]
    ]
  ],
  "test_text": [
    [
      "testing/test_capture.py",
      [
        "TestCaptureIO",
        "test_text"
      ]
    ]
  ],
  "test_unicode_and_str_mixture": [
    [
      "testing/test_capture.py",
      [
        "TestCaptureIO",
        "test_unicode_and_str_mixture"
      ]
    ]
  ],
  "test_write_bytes_to_buffer": [
    [
      "testing/test_capture.py",
      [
        "TestCaptureIO",
        "test_write_bytes_to_buffer"
      ]
    ]
  ],
  "test_dontreadfrominput": [
    [
      "testing/test_capture.py",
      [
        "test_dontreadfrominput"
      ]
    ]
  ],
  "test_dontreadfrominput_buffer_python3": [
    [
      "testing/test_capture.py",
      [
        "test_dontreadfrominput_buffer_python3"
      ]
    ]
  ],
  "tmpfile": [
    [
      "testing/test_capture.py",
      [
        "tmpfile"
      ]
    ]
  ],
  "test_dupfile": [
    [
      "testing/test_capture.py",
      [
        "test_dupfile"
      ]
    ]
  ],
  "test_dupfile_on_bytesio": [
    [
      "testing/test_capture.py",
      [
        "test_dupfile_on_bytesio"
      ]
    ]
  ],
  "test_dupfile_on_textio": [
    [
      "testing/test_capture.py",
      [
        "test_dupfile_on_textio"
      ]
    ]
  ],
  "lsof_check": [
    [
      "testing/test_capture.py",
      [
        "lsof_check"
      ]
    ]
  ],
  "test_simple_many": [
    [
      "testing/test_capture.py",
      [
        "TestFDCapture",
        "test_simple_many"
      ]
    ]
  ],
  "test_simple_many_check_open_files": [
    [
      "testing/test_capture.py",
      [
        "TestFDCapture",
        "test_simple_many_check_open_files"
      ]
    ]
  ],
  "test_simple_fail_second_start": [
    [
      "testing/test_capture.py",
      [
        "TestFDCapture",
        "test_simple_fail_second_start"
      ]
    ]
  ],
  "test_stderr": [
    [
      "testing/test_capture.py",
      [
        "TestFDCapture",
        "test_stderr"
      ]
    ]
  ],
  "test_stdin": [
    [
      "testing/test_capture.py",
      [
        "TestFDCapture",
        "test_stdin"
      ]
    ]
  ],
  "test_writeorg": [
    [
      "testing/test_capture.py",
      [
        "TestFDCapture",
        "test_writeorg"
      ]
    ]
  ],
  "test_simple_resume_suspend": [
    [
      "testing/test_capture.py",
      [
        "TestFDCapture",
        "test_simple_resume_suspend"
      ]
    ]
  ],
  "test_capfd_sys_stdout_mode": [
    [
      "testing/test_capture.py",
      [
        "TestFDCapture",
        "test_capfd_sys_stdout_mode"
      ]
    ]
  ],
  "saved_fd": [
    [
      "testing/test_capture.py",
      [
        "saved_fd"
      ]
    ]
  ],
  "getcapture": [
    [
      "testing/test_capture.py",
      [
        "TestStdCapture",
        "getcapture"
      ]
    ]
  ],
  "test_capturing_done_simple": [
    [
      "testing/test_capture.py",
      [
        "TestStdCapture",
        "test_capturing_done_simple"
      ]
    ]
  ],
  "test_capturing_reset_simple": [
    [
      "testing/test_capture.py",
      [
        "TestStdCapture",
        "test_capturing_reset_simple"
      ]
    ]
  ],
  "test_capturing_readouterr": [
    [
      "testing/test_capture.py",
      [
        "TestStdCapture",
        "test_capturing_readouterr"
      ]
    ]
  ],
  "test_capture_results_accessible_by_attribute": [
    [
      "testing/test_capture.py",
      [
        "TestStdCapture",
        "test_capture_results_accessible_by_attribute"
      ]
    ]
  ],
  "test_capturing_readouterr_unicode": [
    [
      "testing/test_capture.py",
      [
        "TestStdCapture",
        "test_capturing_readouterr_unicode"
      ]
    ]
  ],
  "test_reset_twice_error": [
    [
      "testing/test_capture.py",
      [
        "TestStdCapture",
        "test_reset_twice_error"
      ]
    ]
  ],
  "test_capturing_modify_sysouterr_in_between": [
    [
      "testing/test_capture.py",
      [
        "TestStdCapture",
        "test_capturing_modify_sysouterr_in_between"
      ]
    ]
  ],
  "test_capturing_error_recursive": [
    [
      "testing/test_capture.py",
      [
        "TestStdCapture",
        "test_capturing_error_recursive"
      ]
    ]
  ],
  "test_just_out_capture": [
    [
      "testing/test_capture.py",
      [
        "TestStdCapture",
        "test_just_out_capture"
      ]
    ]
  ],
  "test_just_err_capture": [
    [
      "testing/test_capture.py",
      [
        "TestStdCapture",
        "test_just_err_capture"
      ]
    ]
  ],
  "test_stdin_restored": [
    [
      "testing/test_capture.py",
      [
        "TestStdCapture",
        "test_stdin_restored"
      ]
    ]
  ],
  "test_stdin_nulled_by_default": [
    [
      "testing/test_capture.py",
      [
        "TestStdCapture",
        "test_stdin_nulled_by_default"
      ]
    ]
  ],
  "test_simple_only_fd": [
    [
      "testing/test_capture.py",
      [
        "TestStdCaptureFD",
        "test_simple_only_fd"
      ]
    ]
  ],
  "test_intermingling": [
    [
      "testing/test_capture.py",
      [
        "TestStdCaptureFD",
        "test_intermingling"
      ]
    ]
  ],
  "test_many": [
    [
      "testing/test_capture.py",
      [
        "TestStdCaptureFD",
        "test_many"
      ]
    ]
  ],
  "test_stdcapture_fd_invalid_fd": [
    [
      "testing/test_capture.py",
      [
        "TestStdCaptureFDinvalidFD",
        "test_stdcapture_fd_invalid_fd"
      ]
    ]
  ],
  "test_capture_not_started_but_reset": [
    [
      "testing/test_capture.py",
      [
        "test_capture_not_started_but_reset"
      ]
    ]
  ],
  "test_using_capsys_fixture_works_with_sys_stdout_encoding": [
    [
      "testing/test_capture.py",
      [
        "test_using_capsys_fixture_works_with_sys_stdout_encoding"
      ]
    ]
  ],
  "test_capsys_results_accessible_by_attribute": [
    [
      "testing/test_capture.py",
      [
        "test_capsys_results_accessible_by_attribute"
      ]
    ]
  ],
  "test_fdcapture_tmpfile_remains_the_same": [
    [
      "testing/test_capture.py",
      [
        "test_fdcapture_tmpfile_remains_the_same"
      ]
    ]
  ],
  "test_close_and_capture_again": [
    [
      "testing/test_capture.py",
      [
        "test_close_and_capture_again"
      ]
    ]
  ],
  "test_capturing_and_logging_fundamentals": [
    [
      "testing/test_capture.py",
      [
        "test_capturing_and_logging_fundamentals"
      ]
    ]
  ],
  "test_error_attribute_issue555": [
    [
      "testing/test_capture.py",
      [
        "test_error_attribute_issue555"
      ]
    ]
  ],
  "test_py36_windowsconsoleio_workaround_non_standard_streams": [
    [
      "testing/test_capture.py",
      [
        "test_py36_windowsconsoleio_workaround_non_standard_streams"
      ]
    ]
  ],
  "test_dontreadfrominput_has_encoding": [
    [
      "testing/test_capture.py",
      [
        "test_dontreadfrominput_has_encoding"
      ]
    ]
  ],
  "test_crash_on_closing_tmpfile_py27": [
    [
      "testing/test_capture.py",
      [
        "test_crash_on_closing_tmpfile_py27"
      ]
    ]
  ],
  "test_pickling_and_unpickling_encoded_file": [
    [
      "testing/test_capture.py",
      [
        "test_pickling_and_unpickling_encoded_file"
      ]
    ]
  ],
  "test_global_capture_with_live_logging": [
    [
      "testing/test_capture.py",
      [
        "test_global_capture_with_live_logging"
      ]
    ]
  ],
  "test_capture_with_live_logging": [
    [
      "testing/test_capture.py",
      [
        "test_capture_with_live_logging"
      ]
    ]
  ],
  "test_typeerror_encodedfile_write": [
    [
      "testing/test_capture.py",
      [
        "test_typeerror_encodedfile_write"
      ]
    ]
  ],
  "test_collect_versus_item": [
    [
      "testing/test_collection.py",
      [
        "TestCollector",
        "test_collect_versus_item"
      ]
    ]
  ],
  "test_getparent": [
    [
      "testing/test_collection.py",
      [
        "TestCollector",
        "test_getparent"
      ]
    ]
  ],
  "test_getcustomfile_roundtrip": [
    [
      "testing/test_collection.py",
      [
        "TestCollector",
        "test_getcustomfile_roundtrip"
      ]
    ]
  ],
  "test_can_skip_class_with_test_attr": [
    [
      "testing/test_collection.py",
      [
        "TestCollector",
        "test_can_skip_class_with_test_attr"
      ]
    ]
  ],
  "test_ignored_certain_directories": [
    [
      "testing/test_collection.py",
      [
        "TestCollectFS",
        "test_ignored_certain_directories"
      ]
    ]
  ],
  "test_ignored_virtualenvs": [
    [
      "testing/test_collection.py",
      [
        "TestCollectFS",
        "test_ignored_virtualenvs"
      ]
    ]
  ],
  "test_ignored_virtualenvs_norecursedirs_precedence": [
    [
      "testing/test_collection.py",
      [
        "TestCollectFS",
        "test_ignored_virtualenvs_norecursedirs_precedence"
      ]
    ]
  ],
  "test__in_venv": [
    [
      "testing/test_collection.py",
      [
        "TestCollectFS",
        "test__in_venv"
      ]
    ]
  ],
  "test_custom_norecursedirs": [
    [
      "testing/test_collection.py",
      [
        "TestCollectFS",
        "test_custom_norecursedirs"
      ]
    ]
  ],
  "test_testpaths_ini": [
    [
      "testing/test_collection.py",
      [
        "TestCollectFS",
        "test_testpaths_ini"
      ]
    ]
  ],
  "test_pytest_collect_file": [
    [
      "testing/test_collection.py",
      [
        "TestCollectPluginHookRelay",
        "test_pytest_collect_file"
      ]
    ]
  ],
  "test_pytest_collect_directory": [
    [
      "testing/test_collection.py",
      [
        "TestCollectPluginHookRelay",
        "test_pytest_collect_directory"
      ]
    ]
  ],
  "test_custom_repr_failure": [
    [
      "testing/test_collection.py",
      [
        "TestPrunetraceback",
        "test_custom_repr_failure"
      ]
    ]
  ],
  "test_collect_report_postprocessing": [
    [
      "testing/test_collection.py",
      [
        "TestPrunetraceback",
        "test_collect_report_postprocessing"
      ]
    ]
  ],
  "test_ignore_collect_path": [
    [
      "testing/test_collection.py",
      [
        "TestCustomConftests",
        "test_ignore_collect_path"
      ]
    ]
  ],
  "test_ignore_collect_not_called_on_argument": [
    [
      "testing/test_collection.py",
      [
        "TestCustomConftests",
        "test_ignore_collect_not_called_on_argument"
      ]
    ]
  ],
  "test_collectignore_exclude_on_option": [
    [
      "testing/test_collection.py",
      [
        "TestCustomConftests",
        "test_collectignore_exclude_on_option"
      ]
    ]
  ],
  "test_collectignoreglob_exclude_on_option": [
    [
      "testing/test_collection.py",
      [
        "TestCustomConftests",
        "test_collectignoreglob_exclude_on_option"
      ]
    ]
  ],
  "test_pytest_fs_collect_hooks_are_seen": [
    [
      "testing/test_collection.py",
      [
        "TestCustomConftests",
        "test_pytest_fs_collect_hooks_are_seen"
      ]
    ]
  ],
  "test_pytest_collect_file_from_sister_dir": [
    [
      "testing/test_collection.py",
      [
        "TestCustomConftests",
        "test_pytest_collect_file_from_sister_dir"
      ]
    ]
  ],
  "test_parsearg": [
    [
      "testing/test_collection.py",
      [
        "TestSession",
        "test_parsearg"
      ]
    ]
  ],
  "test_collect_topdir": [
    [
      "testing/test_collection.py",
      [
        "TestSession",
        "test_collect_topdir"
      ]
    ]
  ],
  "get_reported_items": [
    [
      "testing/test_collection.py",
      [
        "TestSession",
        "get_reported_items"
      ]
    ]
  ],
  "test_collect_protocol_single_function": [
    [
      "testing/test_collection.py",
      [
        "TestSession",
        "test_collect_protocol_single_function"
      ]
    ]
  ],
  "test_collect_protocol_method": [
    [
      "testing/test_collection.py",
      [
        "TestSession",
        "test_collect_protocol_method"
      ]
    ]
  ],
  "test_collect_custom_nodes_multi_id": [
    [
      "testing/test_collection.py",
      [
        "TestSession",
        "test_collect_custom_nodes_multi_id"
      ]
    ]
  ],
  "test_collect_subdir_event_ordering": [
    [
      "testing/test_collection.py",
      [
        "TestSession",
        "test_collect_subdir_event_ordering"
      ]
    ]
  ],
  "test_collect_two_commandline_args": [
    [
      "testing/test_collection.py",
      [
        "TestSession",
        "test_collect_two_commandline_args"
      ]
    ]
  ],
  "test_serialization_byid": [
    [
      "testing/test_collection.py",
      [
        "TestSession",
        "test_serialization_byid"
      ]
    ]
  ],
  "test_find_byid_without_instance_parents": [
    [
      "testing/test_collection.py",
      [
        "TestSession",
        "test_find_byid_without_instance_parents"
      ]
    ]
  ],
  "test_global_file": [
    [
      "testing/test_collection.py",
      [
        "Test_getinitialnodes",
        "test_global_file"
      ]
    ]
  ],
  "test_pkgfile": [
    [
      "testing/test_collection.py",
      [
        "Test_getinitialnodes",
        "test_pkgfile"
      ]
    ]
  ],
  "test_check_collect_hashes": [
    [
      "testing/test_collection.py",
      [
        "Test_genitems",
        "test_check_collect_hashes"
      ]
    ]
  ],
  "test_example_items1": [
    [
      "testing/test_collection.py",
      [
        "Test_genitems",
        "test_example_items1"
      ]
    ]
  ],
  "test_class_and_functions_discovery_using_glob": [
    [
      "testing/test_collection.py",
      [
        "Test_genitems",
        "test_class_and_functions_discovery_using_glob"
      ]
    ]
  ],
  "test_matchnodes_two_collections_same_file": [
    [
      "testing/test_collection.py",
      [
        "test_matchnodes_two_collections_same_file"
      ]
    ]
  ],
  "test_no_under": [
    [
      "testing/test_collection.py",
      [
        "TestNodekeywords",
        "test_no_under"
      ]
    ]
  ],
  "test_issue345": [
    [
      "testing/test_collection.py",
      [
        "TestNodekeywords",
        "test_issue345"
      ]
    ]
  ],
  "test_exit_on_collection_error": [
    [
      "testing/test_collection.py",
      [
        "test_exit_on_collection_error"
      ]
    ]
  ],
  "test_exit_on_collection_with_maxfail_smaller_than_n_errors": [
    [
      "testing/test_collection.py",
      [
        "test_exit_on_collection_with_maxfail_smaller_than_n_errors"
      ]
    ]
  ],
  "test_exit_on_collection_with_maxfail_bigger_than_n_errors": [
    [
      "testing/test_collection.py",
      [
        "test_exit_on_collection_with_maxfail_bigger_than_n_errors"
      ]
    ]
  ],
  "test_continue_on_collection_errors": [
    [
      "testing/test_collection.py",
      [
        "test_continue_on_collection_errors"
      ]
    ]
  ],
  "test_continue_on_collection_errors_maxfail": [
    [
      "testing/test_collection.py",
      [
        "test_continue_on_collection_errors_maxfail"
      ]
    ]
  ],
  "test_fixture_scope_sibling_conftests": [
    [
      "testing/test_collection.py",
      [
        "test_fixture_scope_sibling_conftests"
      ]
    ]
  ],
  "test_collect_init_tests": [
    [
      "testing/test_collection.py",
      [
        "test_collect_init_tests"
      ]
    ]
  ],
  "test_collect_invalid_signature_message": [
    [
      "testing/test_collection.py",
      [
        "test_collect_invalid_signature_message"
      ]
    ]
  ],
  "test_collect_handles_raising_on_dunder_class": [
    [
      "testing/test_collection.py",
      [
        "test_collect_handles_raising_on_dunder_class"
      ]
    ]
  ],
  "test_collect_with_chdir_during_import": [
    [
      "testing/test_collection.py",
      [
        "test_collect_with_chdir_during_import"
      ]
    ]
  ],
  "test_collect_pyargs_with_testpaths": [
    [
      "testing/test_collection.py",
      [
        "test_collect_pyargs_with_testpaths"
      ]
    ]
  ],
  "test_collect_symlink_file_arg": [
    [
      "testing/test_collection.py",
      [
        "test_collect_symlink_file_arg"
      ]
    ]
  ],
  "test_collect_symlink_out_of_tree": [
    [
      "testing/test_collection.py",
      [
        "test_collect_symlink_out_of_tree"
      ]
    ]
  ],
  "test_collectignore_via_conftest": [
    [
      "testing/test_collection.py",
      [
        "test_collectignore_via_conftest"
      ]
    ]
  ],
  "test_collect_pkg_init_and_file_in_args": [
    [
      "testing/test_collection.py",
      [
        "test_collect_pkg_init_and_file_in_args"
      ]
    ]
  ],
  "test_collect_pkg_init_only": [
    [
      "testing/test_collection.py",
      [
        "test_collect_pkg_init_only"
      ]
    ]
  ],
  "test_collect_sub_with_symlinks": [
    [
      "testing/test_collection.py",
      [
        "test_collect_sub_with_symlinks"
      ]
    ]
  ],
  "test_collector_respects_tbstyle": [
    [
      "testing/test_collection.py",
      [
        "test_collector_respects_tbstyle"
      ]
    ]
  ],
  "test_does_not_eagerly_collect_packages": [
    [
      "testing/test_collection.py",
      [
        "test_does_not_eagerly_collect_packages"
      ]
    ]
  ],
  "test_does_not_put_src_on_path": [
    [
      "testing/test_collection.py",
      [
        "test_does_not_put_src_on_path"
      ]
    ]
  ],
  "test_is_generator": [
    [
      "testing/test_compat.py",
      [
        "test_is_generator"
      ]
    ]
  ],
  "test_real_func_loop_limit": [
    [
      "testing/test_compat.py",
      [
        "test_real_func_loop_limit"
      ]
    ]
  ],
  "test_get_real_func": [
    [
      "testing/test_compat.py",
      [
        "test_get_real_func"
      ]
    ]
  ],
  "test_get_real_func_partial": [
    [
      "testing/test_compat.py",
      [
        "test_get_real_func_partial"
      ]
    ]
  ],
  "test_is_generator_asyncio": [
    [
      "testing/test_compat.py",
      [
        "test_is_generator_asyncio"
      ]
    ]
  ],
  "test_is_generator_async_syntax": [
    [
      "testing/test_compat.py",
      [
        "test_is_generator_async_syntax"
      ]
    ]
  ],
  "test_is_generator_async_gen_syntax": [
    [
      "testing/test_compat.py",
      [
        "test_is_generator_async_gen_syntax"
      ]
    ]
  ],
  "raise_exception": [
    [
      "testing/test_compat.py",
      [
        "ErrorsHelper",
        "raise_exception"
      ]
    ]
  ],
  "raise_fail": [
    [
      "testing/test_compat.py",
      [
        "ErrorsHelper",
        "raise_fail"
      ]
    ]
  ],
  "test_helper_failures": [
    [
      "testing/test_compat.py",
      [
        "test_helper_failures"
      ]
    ]
  ],
  "test_safe_getattr": [
    [
      "testing/test_compat.py",
      [
        "test_safe_getattr"
      ]
    ]
  ],
  "test_safe_isclass": [
    [
      "testing/test_compat.py",
      [
        "test_safe_isclass"
      ]
    ]
  ],
  "test_getcfg_and_config": [
    [
      "testing/test_config.py",
      [
        "TestParseIni",
        "test_getcfg_and_config"
      ]
    ]
  ],
  "test_getcfg_empty_path": [
    [
      "testing/test_config.py",
      [
        "TestParseIni",
        "test_getcfg_empty_path"
      ]
    ]
  ],
  "test_setupcfg_uses_toolpytest_with_pytest": [
    [
      "testing/test_config.py",
      [
        "TestParseIni",
        "test_setupcfg_uses_toolpytest_with_pytest"
      ]
    ]
  ],
  "test_append_parse_args": [
    [
      "testing/test_config.py",
      [
        "TestParseIni",
        "test_append_parse_args"
      ]
    ]
  ],
  "test_tox_ini_wrong_version": [
    [
      "testing/test_config.py",
      [
        "TestParseIni",
        "test_tox_ini_wrong_version"
      ]
    ]
  ],
  "test_ini_names": [
    [
      "testing/test_config.py",
      [
        "TestParseIni",
        "test_ini_names"
      ]
    ]
  ],
  "test_toxini_before_lower_pytestini": [
    [
      "testing/test_config.py",
      [
        "TestParseIni",
        "test_toxini_before_lower_pytestini"
      ]
    ]
  ],
  "test_ini_parse_error": [
    [
      "testing/test_config.py",
      [
        "TestParseIni",
        "test_ini_parse_error"
      ]
    ]
  ],
  "test_confcutdir": [
    [
      "testing/test_config.py",
      [
        "TestParseIni",
        "test_confcutdir"
      ]
    ]
  ],
  "test_parsing_again_fails": [
    [
      "testing/test_config.py",
      [
        "TestConfigCmdlineParsing",
        "test_parsing_again_fails"
      ]
    ]
  ],
  "test_explicitly_specified_config_file_is_loaded": [
    [
      "testing/test_config.py",
      [
        "TestConfigCmdlineParsing",
        "test_explicitly_specified_config_file_is_loaded"
      ]
    ]
  ],
  "test_absolute_win32_path": [
    [
      "testing/test_config.py",
      [
        "TestConfigCmdlineParsing",
        "test_absolute_win32_path"
      ]
    ]
  ],
  "test_config_trace": [
    [
      "testing/test_config.py",
      [
        "TestConfigAPI",
        "test_config_trace"
      ]
    ]
  ],
  "test_config_getoption": [
    [
      "testing/test_config.py",
      [
        "TestConfigAPI",
        "test_config_getoption"
      ]
    ]
  ],
  "test_config_getoption_unicode": [
    [
      "testing/test_config.py",
      [
        "TestConfigAPI",
        "test_config_getoption_unicode"
      ]
    ]
  ],
  "test_config_getvalueorskip": [
    [
      "testing/test_config.py",
      [
        "TestConfigAPI",
        "test_config_getvalueorskip"
      ]
    ]
  ],
  "test_config_getvalueorskip_None": [
    [
      "testing/test_config.py",
      [
        "TestConfigAPI",
        "test_config_getvalueorskip_None"
      ]
    ]
  ],
  "test_getoption": [
    [
      "testing/test_config.py",
      [
        "TestConfigAPI",
        "test_getoption"
      ]
    ]
  ],
  "test_getconftest_pathlist": [
    [
      "testing/test_config.py",
      [
        "TestConfigAPI",
        "test_getconftest_pathlist"
      ]
    ]
  ],
  "test_addini": [
    [
      "testing/test_config.py",
      [
        "TestConfigAPI",
        "test_addini"
      ]
    ]
  ],
  "test_addini_pathlist": [
    [
      "testing/test_config.py",
      [
        "TestConfigAPI",
        "test_addini_pathlist"
      ]
    ]
  ],
  "test_addini_args": [
    [
      "testing/test_config.py",
      [
        "TestConfigAPI",
        "test_addini_args"
      ]
    ]
  ],
  "test_addini_linelist": [
    [
      "testing/test_config.py",
      [
        "TestConfigAPI",
        "test_addini_linelist"
      ]
    ]
  ],
  "test_addini_bool": [
    [
      "testing/test_config.py",
      [
        "TestConfigAPI",
        "test_addini_bool"
      ]
    ]
  ],
  "test_addinivalue_line_existing": [
    [
      "testing/test_config.py",
      [
        "TestConfigAPI",
        "test_addinivalue_line_existing"
      ]
    ]
  ],
  "test_addinivalue_line_new": [
    [
      "testing/test_config.py",
      [
        "TestConfigAPI",
        "test_addinivalue_line_new"
      ]
    ]
  ],
  "test_confcutdir_check_isdir": [
    [
      "testing/test_config.py",
      [
        "TestConfigAPI",
        "test_confcutdir_check_isdir"
      ]
    ]
  ],
  "test_iter_rewritable_modules": [
    [
      "testing/test_config.py",
      [
        "TestConfigAPI",
        "test_iter_rewritable_modules"
      ]
    ]
  ],
  "test_basic_behavior": [
    [
      "testing/test_config.py",
      [
        "TestConfigFromdictargs",
        "test_basic_behavior"
      ]
    ]
  ],
  "test_invocation_params_args": [
    [
      "testing/test_config.py",
      [
        "TestConfigFromdictargs",
        "test_invocation_params_args"
      ]
    ]
  ],
  "test_inifilename": [
    [
      "testing/test_config.py",
      [
        "TestConfigFromdictargs",
        "test_inifilename"
      ]
    ]
  ],
  "runfiletest": [
    [
      "testing/test_config.py",
      [
        "test_options_on_small_file_do_not_blow_up",
        "runfiletest"
      ]
    ]
  ],
  "test_options_on_small_file_do_not_blow_up": [
    [
      "testing/test_config.py",
      [
        "test_options_on_small_file_do_not_blow_up"
      ]
    ]
  ],
  "test_preparse_ordering_with_setuptools": [
    [
      "testing/test_config.py",
      [
        "test_preparse_ordering_with_setuptools"
      ]
    ]
  ],
  "test_setuptools_importerror_issue1479": [
    [
      "testing/test_config.py",
      [
        "test_setuptools_importerror_issue1479"
      ]
    ]
  ],
  "test_importlib_metadata_broken_distribution": [
    [
      "testing/test_config.py",
      [
        "test_importlib_metadata_broken_distribution"
      ]
    ]
  ],
  "distributions": [
    [
      "testing/test_config.py",
      [
        "test_plugin_preparse_prevents_setuptools_loading",
        "distributions"
      ]
    ],
    [
      "testing/test_config.py",
      [
        "test_disable_plugin_autoload",
        "distributions"
      ]
    ]
  ],
  "test_plugin_preparse_prevents_setuptools_loading": [
    [
      "testing/test_config.py",
      [
        "test_plugin_preparse_prevents_setuptools_loading"
      ]
    ]
  ],
  "test_disable_plugin_autoload": [
    [
      "testing/test_config.py",
      [
        "test_disable_plugin_autoload"
      ]
    ]
  ],
  "test_cmdline_processargs_simple": [
    [
      "testing/test_config.py",
      [
        "test_cmdline_processargs_simple"
      ]
    ]
  ],
  "test_invalid_options_show_extra_information": [
    [
      "testing/test_config.py",
      [
        "test_invalid_options_show_extra_information"
      ]
    ]
  ],
  "test_consider_args_after_options_for_rootdir": [
    [
      "testing/test_config.py",
      [
        "test_consider_args_after_options_for_rootdir"
      ]
    ]
  ],
  "test_toolongargs_issue224": [
    [
      "testing/test_config.py",
      [
        "test_toolongargs_issue224"
      ]
    ]
  ],
  "test_config_in_subdirectory_colon_command_line_issue2148": [
    [
      "testing/test_config.py",
      [
        "test_config_in_subdirectory_colon_command_line_issue2148"
      ]
    ]
  ],
  "test_notify_exception": [
    [
      "testing/test_config.py",
      [
        "test_notify_exception"
      ]
    ]
  ],
  "test_no_terminal_discovery_error": [
    [
      "testing/test_config.py",
      [
        "test_no_terminal_discovery_error"
      ]
    ]
  ],
  "test_load_initial_conftest_last_ordering": [
    [
      "testing/test_config.py",
      [
        "test_load_initial_conftest_last_ordering"
      ]
    ]
  ],
  "test_get_plugin_specs_as_list": [
    [
      "testing/test_config.py",
      [
        "test_get_plugin_specs_as_list"
      ]
    ]
  ],
  "test_collect_pytest_prefix_bug_integration": [
    [
      "testing/test_config.py",
      [
        "test_collect_pytest_prefix_bug_integration"
      ]
    ]
  ],
  "test_collect_pytest_prefix_bug": [
    [
      "testing/test_config.py",
      [
        "test_collect_pytest_prefix_bug"
      ]
    ]
  ],
  "test_simple_noini": [
    [
      "testing/test_config.py",
      [
        "TestRootdir",
        "test_simple_noini"
      ]
    ]
  ],
  "test_with_ini": [
    [
      "testing/test_config.py",
      [
        "TestRootdir",
        "test_with_ini"
      ]
    ]
  ],
  "test_pytestini_overrides_empty_other": [
    [
      "testing/test_config.py",
      [
        "TestRootdir",
        "test_pytestini_overrides_empty_other"
      ]
    ]
  ],
  "test_setuppy_fallback": [
    [
      "testing/test_config.py",
      [
        "TestRootdir",
        "test_setuppy_fallback"
      ]
    ]
  ],
  "test_nothing": [
    [
      "testing/test_config.py",
      [
        "TestRootdir",
        "test_nothing"
      ]
    ]
  ],
  "test_with_specific_inifile": [
    [
      "testing/test_config.py",
      [
        "TestRootdir",
        "test_with_specific_inifile"
      ]
    ]
  ],
  "test_override_ini_names": [
    [
      "testing/test_config.py",
      [
        "TestOverrideIniArgs",
        "test_override_ini_names"
      ]
    ]
  ],
  "test_override_ini_pathlist": [
    [
      "testing/test_config.py",
      [
        "TestOverrideIniArgs",
        "test_override_ini_pathlist"
      ]
    ]
  ],
  "test_override_multiple_and_default": [
    [
      "testing/test_config.py",
      [
        "TestOverrideIniArgs",
        "test_override_multiple_and_default"
      ]
    ]
  ],
  "test_override_ini_usage_error_bad_style": [
    [
      "testing/test_config.py",
      [
        "TestOverrideIniArgs",
        "test_override_ini_usage_error_bad_style"
      ]
    ]
  ],
  "test_override_ini_handled_asap": [
    [
      "testing/test_config.py",
      [
        "TestOverrideIniArgs",
        "test_override_ini_handled_asap"
      ]
    ]
  ],
  "test_with_arg_outside_cwd_without_inifile": [
    [
      "testing/test_config.py",
      [
        "TestOverrideIniArgs",
        "test_with_arg_outside_cwd_without_inifile"
      ]
    ]
  ],
  "test_with_arg_outside_cwd_with_inifile": [
    [
      "testing/test_config.py",
      [
        "TestOverrideIniArgs",
        "test_with_arg_outside_cwd_with_inifile"
      ]
    ]
  ],
  "test_with_non_dir_arg": [
    [
      "testing/test_config.py",
      [
        "TestOverrideIniArgs",
        "test_with_non_dir_arg"
      ]
    ]
  ],
  "test_with_existing_file_in_subdir": [
    [
      "testing/test_config.py",
      [
        "TestOverrideIniArgs",
        "test_with_existing_file_in_subdir"
      ]
    ]
  ],
  "test_addopts_before_initini": [
    [
      "testing/test_config.py",
      [
        "TestOverrideIniArgs",
        "test_addopts_before_initini"
      ]
    ]
  ],
  "test_addopts_from_env_not_concatenated": [
    [
      "testing/test_config.py",
      [
        "TestOverrideIniArgs",
        "test_addopts_from_env_not_concatenated"
      ]
    ]
  ],
  "test_addopts_from_ini_not_concatenated": [
    [
      "testing/test_config.py",
      [
        "TestOverrideIniArgs",
        "test_addopts_from_ini_not_concatenated"
      ]
    ]
  ],
  "test_override_ini_does_not_contain_paths": [
    [
      "testing/test_config.py",
      [
        "TestOverrideIniArgs",
        "test_override_ini_does_not_contain_paths"
      ]
    ]
  ],
  "test_multiple_override_ini_options": [
    [
      "testing/test_config.py",
      [
        "TestOverrideIniArgs",
        "test_multiple_override_ini_options"
      ]
    ]
  ],
  "test_help_via_addopts": [
    [
      "testing/test_config.py",
      [
        "test_help_via_addopts"
      ]
    ]
  ],
  "test_help_and_version_after_argument_error": [
    [
      "testing/test_config.py",
      [
        "test_help_and_version_after_argument_error"
      ]
    ]
  ],
  "test_help_formatter_uses_py_get_terminal_width": [
    [
      "testing/test_config.py",
      [
        "test_help_formatter_uses_py_get_terminal_width"
      ]
    ]
  ],
  "test_config_does_not_load_blocked_plugin_from_args": [
    [
      "testing/test_config.py",
      [
        "test_config_does_not_load_blocked_plugin_from_args"
      ]
    ]
  ],
  "test_invocation_args": [
    [
      "testing/test_config.py",
      [
        "test_invocation_args"
      ]
    ]
  ],
  "test_config_blocked_default_plugins": [
    [
      "testing/test_config.py",
      [
        "test_config_blocked_default_plugins"
      ]
    ]
  ],
  "test_pytest_setup_cfg_unsupported": [
    [
      "testing/test_config.py",
      [
        "TestSetupCfg",
        "test_pytest_setup_cfg_unsupported"
      ]
    ]
  ],
  "test_pytest_custom_cfg_unsupported": [
    [
      "testing/test_config.py",
      [
        "TestSetupCfg",
        "test_pytest_custom_cfg_unsupported"
      ]
    ]
  ],
  "test_pytest_plugins_in_non_top_level_conftest_unsupported": [
    [
      "testing/test_config.py",
      [
        "TestPytestPluginsVariable",
        "test_pytest_plugins_in_non_top_level_conftest_unsupported"
      ]
    ]
  ],
  "test_pytest_plugins_in_non_top_level_conftest_unsupported_pyargs": [
    [
      "testing/test_config.py",
      [
        "TestPytestPluginsVariable",
        "test_pytest_plugins_in_non_top_level_conftest_unsupported_pyargs"
      ]
    ]
  ],
  "test_pytest_plugins_in_non_top_level_conftest_unsupported_no_top_level_conftest": [
    [
      "testing/test_config.py",
      [
        "TestPytestPluginsVariable",
        "test_pytest_plugins_in_non_top_level_conftest_unsupported_no_top_level_conftest"
      ]
    ]
  ],
  "test_pytest_plugins_in_non_top_level_conftest_unsupported_no_false_positives": [
    [
      "testing/test_config.py",
      [
        "TestPytestPluginsVariable",
        "test_pytest_plugins_in_non_top_level_conftest_unsupported_no_false_positives"
      ]
    ]
  ],
  "ConftestWithSetinitial": [
    [
      "testing/test_conftest.py",
      [
        "ConftestWithSetinitial"
      ]
    ]
  ],
  "conftest_setinitial": [
    [
      "testing/test_conftest.py",
      [
        "conftest_setinitial"
      ]
    ]
  ],
  "basedir": [
    [
      "testing/test_conftest.py",
      [
        "TestConftestValueAccessGlobal",
        "basedir"
      ]
    ]
  ],
  "test_basic_init": [
    [
      "testing/test_conftest.py",
      [
        "TestConftestValueAccessGlobal",
        "test_basic_init"
      ]
    ]
  ],
  "test_immediate_initialiation_and_incremental_are_the_same": [
    [
      "testing/test_conftest.py",
      [
        "TestConftestValueAccessGlobal",
        "test_immediate_initialiation_and_incremental_are_the_same"
      ]
    ]
  ],
  "test_value_access_not_existing": [
    [
      "testing/test_conftest.py",
      [
        "TestConftestValueAccessGlobal",
        "test_value_access_not_existing"
      ]
    ]
  ],
  "test_value_access_by_path": [
    [
      "testing/test_conftest.py",
      [
        "TestConftestValueAccessGlobal",
        "test_value_access_by_path"
      ]
    ]
  ],
  "test_value_access_with_confmod": [
    [
      "testing/test_conftest.py",
      [
        "TestConftestValueAccessGlobal",
        "test_value_access_with_confmod"
      ]
    ]
  ],
  "test_conftest_in_nonpkg_with_init": [
    [
      "testing/test_conftest.py",
      [
        "test_conftest_in_nonpkg_with_init"
      ]
    ]
  ],
  "test_doubledash_considered": [
    [
      "testing/test_conftest.py",
      [
        "test_doubledash_considered"
      ]
    ]
  ],
  "test_issue151_load_all_conftests": [
    [
      "testing/test_conftest.py",
      [
        "test_issue151_load_all_conftests"
      ]
    ]
  ],
  "test_conftest_global_import": [
    [
      "testing/test_conftest.py",
      [
        "test_conftest_global_import"
      ]
    ]
  ],
  "test_conftestcutdir": [
    [
      "testing/test_conftest.py",
      [
        "test_conftestcutdir"
      ]
    ]
  ],
  "test_conftestcutdir_inplace_considered": [
    [
      "testing/test_conftest.py",
      [
        "test_conftestcutdir_inplace_considered"
      ]
    ]
  ],
  "test_setinitial_conftest_subdirs": [
    [
      "testing/test_conftest.py",
      [
        "test_setinitial_conftest_subdirs"
      ]
    ]
  ],
  "test_conftest_confcutdir": [
    [
      "testing/test_conftest.py",
      [
        "test_conftest_confcutdir"
      ]
    ]
  ],
  "test_conftest_symlink": [
    [
      "testing/test_conftest.py",
      [
        "test_conftest_symlink"
      ]
    ]
  ],
  "test_conftest_symlink_files": [
    [
      "testing/test_conftest.py",
      [
        "test_conftest_symlink_files"
      ]
    ]
  ],
  "test_conftest_badcase": [
    [
      "testing/test_conftest.py",
      [
        "test_conftest_badcase"
      ]
    ]
  ],
  "test_conftest_uppercase": [
    [
      "testing/test_conftest.py",
      [
        "test_conftest_uppercase"
      ]
    ]
  ],
  "test_no_conftest": [
    [
      "testing/test_conftest.py",
      [
        "test_no_conftest"
      ]
    ]
  ],
  "test_conftest_existing_resultlog": [
    [
      "testing/test_conftest.py",
      [
        "test_conftest_existing_resultlog"
      ]
    ]
  ],
  "test_conftest_existing_junitxml": [
    [
      "testing/test_conftest.py",
      [
        "test_conftest_existing_junitxml"
      ]
    ]
  ],
  "test_conftest_import_order": [
    [
      "testing/test_conftest.py",
      [
        "test_conftest_import_order"
      ]
    ]
  ],
  "test_fixture_dependency": [
    [
      "testing/test_conftest.py",
      [
        "test_fixture_dependency"
      ]
    ]
  ],
  "test_conftest_found_with_double_dash": [
    [
      "testing/test_conftest.py",
      [
        "test_conftest_found_with_double_dash"
      ]
    ]
  ],
  "_setup_tree": [
    [
      "testing/test_conftest.py",
      [
        "TestConftestVisibility",
        "_setup_tree"
      ]
    ]
  ],
  "test_search_conftest_up_to_inifile": [
    [
      "testing/test_conftest.py",
      [
        "test_search_conftest_up_to_inifile"
      ]
    ]
  ],
  "test_issue1073_conftest_special_objects": [
    [
      "testing/test_conftest.py",
      [
        "test_issue1073_conftest_special_objects"
      ]
    ]
  ],
  "test_conftest_exception_handling": [
    [
      "testing/test_conftest.py",
      [
        "test_conftest_exception_handling"
      ]
    ]
  ],
  "test_hook_proxy": [
    [
      "testing/test_conftest.py",
      [
        "test_hook_proxy"
      ]
    ],
    [
      "testing/test_pluginmanager.py",
      [
        "TestPytestPluginInteractions",
        "test_hook_proxy"
      ]
    ]
  ],
  "test_required_option_help": [
    [
      "testing/test_conftest.py",
      [
        "test_required_option_help"
      ]
    ]
  ],
  "test_collect_testtextfile": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_collect_testtextfile"
      ]
    ]
  ],
  "test_collect_module_empty": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_collect_module_empty"
      ]
    ]
  ],
  "test_collect_module_single_modulelevel_doctest": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_collect_module_single_modulelevel_doctest"
      ]
    ]
  ],
  "test_collect_module_two_doctest_one_modulelevel": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_collect_module_two_doctest_one_modulelevel"
      ]
    ]
  ],
  "test_collect_module_two_doctest_no_modulelevel": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_collect_module_two_doctest_no_modulelevel"
      ]
    ]
  ],
  "test_simple_doctestfile": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_simple_doctestfile"
      ]
    ]
  ],
  "test_new_pattern": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_new_pattern"
      ]
    ]
  ],
  "test_multiple_patterns": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_multiple_patterns"
      ]
    ]
  ],
  "test_encoding": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_encoding"
      ]
    ]
  ],
  "test_doctest_unexpected_exception": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_doctest_unexpected_exception"
      ]
    ]
  ],
  "test_doctest_skip": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_doctest_skip"
      ]
    ]
  ],
  "test_docstring_partial_context_around_error": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_docstring_partial_context_around_error"
      ]
    ]
  ],
  "test_docstring_full_context_around_error": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_docstring_full_context_around_error"
      ]
    ]
  ],
  "test_doctest_linedata_missing": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_doctest_linedata_missing"
      ]
    ]
  ],
  "test_doctest_unex_importerror_only_txt": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_doctest_unex_importerror_only_txt"
      ]
    ]
  ],
  "test_doctest_unex_importerror_with_module": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_doctest_unex_importerror_with_module"
      ]
    ]
  ],
  "test_doctestmodule": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_doctestmodule"
      ]
    ]
  ],
  "test_doctestmodule_external_and_issue116": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_doctestmodule_external_and_issue116"
      ]
    ]
  ],
  "test_txtfile_failing": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_txtfile_failing"
      ]
    ]
  ],
  "test_txtfile_with_fixtures": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_txtfile_with_fixtures"
      ]
    ]
  ],
  "test_txtfile_with_usefixtures_in_ini": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_txtfile_with_usefixtures_in_ini"
      ]
    ]
  ],
  "test_doctestmodule_with_fixtures": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_doctestmodule_with_fixtures"
      ]
    ]
  ],
  "test_doctestmodule_three_tests": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_doctestmodule_three_tests"
      ]
    ]
  ],
  "test_doctestmodule_two_tests_one_fail": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_doctestmodule_two_tests_one_fail"
      ]
    ]
  ],
  "test_ignored_whitespace": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_ignored_whitespace"
      ]
    ]
  ],
  "test_non_ignored_whitespace": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_non_ignored_whitespace"
      ]
    ]
  ],
  "test_ignored_whitespace_glob": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_ignored_whitespace_glob"
      ]
    ]
  ],
  "test_non_ignored_whitespace_glob": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_non_ignored_whitespace_glob"
      ]
    ]
  ],
  "test_contains_unicode": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_contains_unicode"
      ]
    ]
  ],
  "test_ignore_import_errors_on_doctest": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_ignore_import_errors_on_doctest"
      ]
    ]
  ],
  "test_junit_report_for_doctest": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_junit_report_for_doctest"
      ]
    ]
  ],
  "test_unicode_doctest": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_unicode_doctest"
      ]
    ]
  ],
  "test_unicode_doctest_module": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_unicode_doctest_module"
      ]
    ]
  ],
  "test_print_unicode_value": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_print_unicode_value"
      ]
    ]
  ],
  "test_reportinfo": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_reportinfo"
      ]
    ]
  ],
  "test_valid_setup_py": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_valid_setup_py"
      ]
    ]
  ],
  "test_invalid_setup_py": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctests",
        "test_invalid_setup_py"
      ]
    ]
  ],
  "test_allow_unicode": [
    [
      "testing/test_doctest.py",
      [
        "TestLiterals",
        "test_allow_unicode"
      ]
    ]
  ],
  "test_allow_bytes": [
    [
      "testing/test_doctest.py",
      [
        "TestLiterals",
        "test_allow_bytes"
      ]
    ]
  ],
  "test_unicode_string": [
    [
      "testing/test_doctest.py",
      [
        "TestLiterals",
        "test_unicode_string"
      ]
    ],
    [
      "testing/test_monkeypatch.py",
      [
        "TestSetattrWithImportPath",
        "test_unicode_string"
      ]
    ]
  ],
  "test_bytes_literal": [
    [
      "testing/test_doctest.py",
      [
        "TestLiterals",
        "test_bytes_literal"
      ]
    ]
  ],
  "test_number_re": [
    [
      "testing/test_doctest.py",
      [
        "TestLiterals",
        "test_number_re"
      ]
    ]
  ],
  "test_number_precision": [
    [
      "testing/test_doctest.py",
      [
        "TestLiterals",
        "test_number_precision"
      ]
    ]
  ],
  "test_number_non_matches": [
    [
      "testing/test_doctest.py",
      [
        "TestLiterals",
        "test_number_non_matches"
      ]
    ]
  ],
  "test_number_and_allow_unicode": [
    [
      "testing/test_doctest.py",
      [
        "TestLiterals",
        "test_number_and_allow_unicode"
      ]
    ]
  ],
  "makedoctest": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctestSkips",
        "makedoctest"
      ]
    ]
  ],
  "test_one_skipped": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctestSkips",
        "test_one_skipped"
      ]
    ]
  ],
  "test_one_skipped_failed": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctestSkips",
        "test_one_skipped_failed"
      ]
    ]
  ],
  "test_all_skipped": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctestSkips",
        "test_all_skipped"
      ]
    ]
  ],
  "test_vacuous_all_skipped": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctestSkips",
        "test_vacuous_all_skipped"
      ]
    ]
  ],
  "test_continue_on_failure": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctestSkips",
        "test_continue_on_failure"
      ]
    ]
  ],
  "test_doctest_module_session_fixture": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctestAutoUseFixtures",
        "test_doctest_module_session_fixture"
      ]
    ]
  ],
  "test_fixture_scopes": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctestAutoUseFixtures",
        "test_fixture_scopes"
      ]
    ]
  ],
  "test_fixture_module_doctest_scopes": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctestAutoUseFixtures",
        "test_fixture_module_doctest_scopes"
      ]
    ]
  ],
  "test_auto_use_request_attributes": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctestAutoUseFixtures",
        "test_auto_use_request_attributes"
      ]
    ]
  ],
  "test_namespace_doctestfile": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctestNamespaceFixture",
        "test_namespace_doctestfile"
      ]
    ]
  ],
  "test_namespace_pyfile": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctestNamespaceFixture",
        "test_namespace_pyfile"
      ]
    ]
  ],
  "_run_doctest_report": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctestReportingOption",
        "_run_doctest_report"
      ]
    ]
  ],
  "test_doctest_report_udiff": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctestReportingOption",
        "test_doctest_report_udiff"
      ]
    ]
  ],
  "test_doctest_report_cdiff": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctestReportingOption",
        "test_doctest_report_cdiff"
      ]
    ]
  ],
  "test_doctest_report_ndiff": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctestReportingOption",
        "test_doctest_report_ndiff"
      ]
    ]
  ],
  "test_doctest_report_none_or_only_first_failure": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctestReportingOption",
        "test_doctest_report_none_or_only_first_failure"
      ]
    ]
  ],
  "test_doctest_report_invalid": [
    [
      "testing/test_doctest.py",
      [
        "TestDoctestReportingOption",
        "test_doctest_report_invalid"
      ]
    ]
  ],
  "test_doctest_mock_objects_dont_recurse_missbehaved": [
    [
      "testing/test_doctest.py",
      [
        "test_doctest_mock_objects_dont_recurse_missbehaved"
      ]
    ]
  ],
  "test_warning_on_unwrap_of_broken_object": [
    [
      "testing/test_doctest.py",
      [
        "test_warning_on_unwrap_of_broken_object"
      ]
    ]
  ],
  "test_pytest_entry_points_are_identical": [
    [
      "testing/test_entry_points.py",
      [
        "test_pytest_entry_points_are_identical"
      ]
    ]
  ],
  "test_enabled": [
    [
      "testing/test_faulthandler.py",
      [
        "test_enabled"
      ]
    ]
  ],
  "test_crash_near_exit": [
    [
      "testing/test_faulthandler.py",
      [
        "test_crash_near_exit"
      ]
    ]
  ],
  "test_disabled": [
    [
      "testing/test_faulthandler.py",
      [
        "test_disabled"
      ]
    ]
  ],
  "test_timeout": [
    [
      "testing/test_faulthandler.py",
      [
        "test_timeout"
      ]
    ]
  ],
  "test_cancel_timeout_on_hook": [
    [
      "testing/test_faulthandler.py",
      [
        "test_cancel_timeout_on_hook"
      ]
    ]
  ],
  "test_version": [
    [
      "testing/test_helpconfig.py",
      [
        "test_version"
      ]
    ]
  ],
  "test_help": [
    [
      "testing/test_helpconfig.py",
      [
        "test_help"
      ]
    ]
  ],
  "test_hookvalidation_unknown": [
    [
      "testing/test_helpconfig.py",
      [
        "test_hookvalidation_unknown"
      ]
    ]
  ],
  "test_hookvalidation_optional": [
    [
      "testing/test_helpconfig.py",
      [
        "test_hookvalidation_optional"
      ]
    ]
  ],
  "test_traceconfig": [
    [
      "testing/test_helpconfig.py",
      [
        "test_traceconfig"
      ]
    ],
    [
      "testing/test_terminal.py",
      [
        "test_traceconfig"
      ]
    ]
  ],
  "test_debug": [
    [
      "testing/test_helpconfig.py",
      [
        "test_debug"
      ]
    ]
  ],
  "test_PYTEST_DEBUG": [
    [
      "testing/test_helpconfig.py",
      [
        "test_PYTEST_DEBUG"
      ]
    ]
  ],
  "schema": [
    [
      "testing/test_junitxml.py",
      [
        "schema"
      ]
    ]
  ],
  "run_and_parse": [
    [
      "testing/test_junitxml.py",
      [
        "run_and_parse"
      ]
    ]
  ],
  "assert_attr": [
    [
      "testing/test_junitxml.py",
      [
        "assert_attr"
      ]
    ],
    [
      "testing/test_junitxml.py",
      [
        "DomNode",
        "assert_attr"
      ]
    ]
  ],
  "find_first_by_tag": [
    [
      "testing/test_junitxml.py",
      [
        "DomNode",
        "find_first_by_tag"
      ]
    ]
  ],
  "_by_tag": [
    [
      "testing/test_junitxml.py",
      [
        "DomNode",
        "_by_tag"
      ]
    ]
  ],
  "children": [
    [
      "testing/test_junitxml.py",
      [
        "DomNode",
        "children"
      ]
    ]
  ],
  "get_unique_child": [
    [
      "testing/test_junitxml.py",
      [
        "DomNode",
        "get_unique_child"
      ]
    ]
  ],
  "find_nth_by_tag": [
    [
      "testing/test_junitxml.py",
      [
        "DomNode",
        "find_nth_by_tag"
      ]
    ]
  ],
  "find_by_tag": [
    [
      "testing/test_junitxml.py",
      [
        "DomNode",
        "find_by_tag"
      ]
    ]
  ],
  "toxml": [
    [
      "testing/test_junitxml.py",
      [
        "DomNode",
        "toxml"
      ]
    ]
  ],
  "tag": [
    [
      "testing/test_junitxml.py",
      [
        "DomNode",
        "tag"
      ]
    ]
  ],
  "next_sibling": [
    [
      "testing/test_junitxml.py",
      [
        "DomNode",
        "next_sibling"
      ]
    ]
  ],
  "test_summing_simple": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_summing_simple"
      ]
    ],
    [
      "testing/test_junitxml.py",
      [
        "TestNonPython",
        "test_summing_simple"
      ]
    ]
  ],
  "test_summing_simple_with_errors": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_summing_simple_with_errors"
      ]
    ]
  ],
  "test_hostname_in_xml": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_hostname_in_xml"
      ]
    ]
  ],
  "test_timestamp_in_xml": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_timestamp_in_xml"
      ]
    ]
  ],
  "test_timing_function": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_timing_function"
      ]
    ]
  ],
  "node_reporter_wrapper": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_junit_duration_report",
        "node_reporter_wrapper"
      ]
    ]
  ],
  "test_junit_duration_report": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_junit_duration_report"
      ]
    ]
  ],
  "test_setup_error": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_setup_error"
      ]
    ]
  ],
  "test_teardown_error": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_teardown_error"
      ]
    ]
  ],
  "test_call_failure_teardown_error": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_call_failure_teardown_error"
      ]
    ]
  ],
  "test_skip_contains_name_reason": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_skip_contains_name_reason"
      ]
    ]
  ],
  "test_mark_skip_contains_name_reason": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_mark_skip_contains_name_reason"
      ]
    ]
  ],
  "test_mark_skipif_contains_name_reason": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_mark_skipif_contains_name_reason"
      ]
    ]
  ],
  "test_mark_skip_doesnt_capture_output": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_mark_skip_doesnt_capture_output"
      ]
    ]
  ],
  "test_classname_instance": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_classname_instance"
      ]
    ]
  ],
  "test_classname_nested_dir": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_classname_nested_dir"
      ]
    ]
  ],
  "test_internal_error": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_internal_error"
      ]
    ]
  ],
  "test_failure_function": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_failure_function"
      ]
    ]
  ],
  "test_failure_verbose_message": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_failure_verbose_message"
      ]
    ]
  ],
  "test_failure_escape": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_failure_escape"
      ]
    ]
  ],
  "test_junit_prefixing": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_junit_prefixing"
      ]
    ]
  ],
  "test_xfailure_function": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_xfailure_function"
      ]
    ]
  ],
  "test_xfailure_marker": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_xfailure_marker"
      ]
    ]
  ],
  "test_xfail_captures_output_once": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_xfail_captures_output_once"
      ]
    ]
  ],
  "test_xfailure_xpass": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_xfailure_xpass"
      ]
    ]
  ],
  "test_xfailure_xpass_strict": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_xfailure_xpass_strict"
      ]
    ]
  ],
  "test_collect_error": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_collect_error"
      ]
    ]
  ],
  "test_assertion_binchars": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_assertion_binchars"
      ]
    ]
  ],
  "test_pass_captures_stdout": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_pass_captures_stdout"
      ]
    ]
  ],
  "test_pass_captures_stderr": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_pass_captures_stderr"
      ]
    ]
  ],
  "test_setup_error_captures_stdout": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_setup_error_captures_stdout"
      ]
    ]
  ],
  "test_setup_error_captures_stderr": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_setup_error_captures_stderr"
      ]
    ]
  ],
  "test_avoid_double_stdout": [
    [
      "testing/test_junitxml.py",
      [
        "TestPython",
        "test_avoid_double_stdout"
      ]
    ]
  ],
  "test_mangle_test_address": [
    [
      "testing/test_junitxml.py",
      [
        "test_mangle_test_address"
      ]
    ]
  ],
  "test_dont_configure_on_slaves": [
    [
      "testing/test_junitxml.py",
      [
        "test_dont_configure_on_slaves"
      ]
    ]
  ],
  "test_nullbyte": [
    [
      "testing/test_junitxml.py",
      [
        "test_nullbyte"
      ]
    ]
  ],
  "test_nullbyte_replace": [
    [
      "testing/test_junitxml.py",
      [
        "test_nullbyte_replace"
      ]
    ]
  ],
  "test_invalid_xml_escape": [
    [
      "testing/test_junitxml.py",
      [
        "test_invalid_xml_escape"
      ]
    ]
  ],
  "test_logxml_path_expansion": [
    [
      "testing/test_junitxml.py",
      [
        "test_logxml_path_expansion"
      ]
    ]
  ],
  "test_logxml_changingdir": [
    [
      "testing/test_junitxml.py",
      [
        "test_logxml_changingdir"
      ]
    ]
  ],
  "test_logxml_makedir": [
    [
      "testing/test_junitxml.py",
      [
        "test_logxml_makedir"
      ]
    ]
  ],
  "test_logxml_check_isdir": [
    [
      "testing/test_junitxml.py",
      [
        "test_logxml_check_isdir"
      ]
    ]
  ],
  "test_escaped_parametrized_names_xml": [
    [
      "testing/test_junitxml.py",
      [
        "test_escaped_parametrized_names_xml"
      ]
    ]
  ],
  "test_double_colon_split_function_issue469": [
    [
      "testing/test_junitxml.py",
      [
        "test_double_colon_split_function_issue469"
      ]
    ]
  ],
  "test_double_colon_split_method_issue469": [
    [
      "testing/test_junitxml.py",
      [
        "test_double_colon_split_method_issue469"
      ]
    ]
  ],
  "test_unicode_issue368": [
    [
      "testing/test_junitxml.py",
      [
        "test_unicode_issue368"
      ]
    ]
  ],
  "test_record_property": [
    [
      "testing/test_junitxml.py",
      [
        "test_record_property"
      ]
    ]
  ],
  "test_record_property_same_name": [
    [
      "testing/test_junitxml.py",
      [
        "test_record_property_same_name"
      ]
    ]
  ],
  "test_record_fixtures_without_junitxml": [
    [
      "testing/test_junitxml.py",
      [
        "test_record_fixtures_without_junitxml"
      ]
    ]
  ],
  "test_record_attribute": [
    [
      "testing/test_junitxml.py",
      [
        "test_record_attribute"
      ]
    ]
  ],
  "test_record_fixtures_xunit2": [
    [
      "testing/test_junitxml.py",
      [
        "test_record_fixtures_xunit2"
      ]
    ]
  ],
  "test_random_report_log_xdist": [
    [
      "testing/test_junitxml.py",
      [
        "test_random_report_log_xdist"
      ]
    ]
  ],
  "test_root_testsuites_tag": [
    [
      "testing/test_junitxml.py",
      [
        "test_root_testsuites_tag"
      ]
    ]
  ],
  "test_runs_twice": [
    [
      "testing/test_junitxml.py",
      [
        "test_runs_twice"
      ]
    ]
  ],
  "test_runs_twice_xdist": [
    [
      "testing/test_junitxml.py",
      [
        "test_runs_twice_xdist"
      ]
    ]
  ],
  "test_fancy_items_regression": [
    [
      "testing/test_junitxml.py",
      [
        "test_fancy_items_regression"
      ]
    ]
  ],
  "test_global_properties": [
    [
      "testing/test_junitxml.py",
      [
        "test_global_properties"
      ]
    ]
  ],
  "test_url_property": [
    [
      "testing/test_junitxml.py",
      [
        "test_url_property"
      ]
    ]
  ],
  "test_record_testsuite_property": [
    [
      "testing/test_junitxml.py",
      [
        "test_record_testsuite_property"
      ]
    ]
  ],
  "test_record_testsuite_property_junit_disabled": [
    [
      "testing/test_junitxml.py",
      [
        "test_record_testsuite_property_junit_disabled"
      ]
    ]
  ],
  "test_record_testsuite_property_type_checking": [
    [
      "testing/test_junitxml.py",
      [
        "test_record_testsuite_property_type_checking"
      ]
    ]
  ],
  "test_set_suite_name": [
    [
      "testing/test_junitxml.py",
      [
        "test_set_suite_name"
      ]
    ]
  ],
  "test_escaped_skipreason_issue3533": [
    [
      "testing/test_junitxml.py",
      [
        "test_escaped_skipreason_issue3533"
      ]
    ]
  ],
  "test_logging_passing_tests_disabled_does_not_log_test_output": [
    [
      "testing/test_junitxml.py",
      [
        "test_logging_passing_tests_disabled_does_not_log_test_output"
      ]
    ]
  ],
  "test_pytest_exists_in_namespace_all": [
    [
      "testing/test_mark.py",
      [
        "TestMark",
        "test_pytest_exists_in_namespace_all"
      ]
    ]
  ],
  "test_pytest_mark_notcallable": [
    [
      "testing/test_mark.py",
      [
        "TestMark",
        "test_pytest_mark_notcallable"
      ]
    ]
  ],
  "test_mark_with_param": [
    [
      "testing/test_mark.py",
      [
        "TestMark",
        "test_mark_with_param"
      ]
    ]
  ],
  "test_pytest_mark_name_starts_with_underscore": [
    [
      "testing/test_mark.py",
      [
        "TestMark",
        "test_pytest_mark_name_starts_with_underscore"
      ]
    ]
  ],
  "test_marked_class_run_twice": [
    [
      "testing/test_mark.py",
      [
        "test_marked_class_run_twice"
      ]
    ]
  ],
  "test_ini_markers": [
    [
      "testing/test_mark.py",
      [
        "test_ini_markers"
      ]
    ]
  ],
  "test_markers_option": [
    [
      "testing/test_mark.py",
      [
        "test_markers_option"
      ]
    ]
  ],
  "test_ini_markers_whitespace": [
    [
      "testing/test_mark.py",
      [
        "test_ini_markers_whitespace"
      ]
    ]
  ],
  "test_marker_without_description": [
    [
      "testing/test_mark.py",
      [
        "test_marker_without_description"
      ]
    ]
  ],
  "test_markers_option_with_plugin_in_current_dir": [
    [
      "testing/test_mark.py",
      [
        "test_markers_option_with_plugin_in_current_dir"
      ]
    ]
  ],
  "test_mark_on_pseudo_function": [
    [
      "testing/test_mark.py",
      [
        "test_mark_on_pseudo_function"
      ]
    ]
  ],
  "test_strict_prohibits_unregistered_markers": [
    [
      "testing/test_mark.py",
      [
        "test_strict_prohibits_unregistered_markers"
      ]
    ]
  ],
  "test_mark_option": [
    [
      "testing/test_mark.py",
      [
        "test_mark_option"
      ]
    ]
  ],
  "test_mark_option_custom": [
    [
      "testing/test_mark.py",
      [
        "test_mark_option_custom"
      ]
    ]
  ],
  "test_keyword_option_custom": [
    [
      "testing/test_mark.py",
      [
        "test_keyword_option_custom"
      ]
    ]
  ],
  "test_keyword_option_considers_mark": [
    [
      "testing/test_mark.py",
      [
        "test_keyword_option_considers_mark"
      ]
    ]
  ],
  "test_keyword_option_parametrize": [
    [
      "testing/test_mark.py",
      [
        "test_keyword_option_parametrize"
      ]
    ]
  ],
  "test_keyword_option_wrong_arguments": [
    [
      "testing/test_mark.py",
      [
        "test_keyword_option_wrong_arguments"
      ]
    ]
  ],
  "test_parametrized_collected_from_command_line": [
    [
      "testing/test_mark.py",
      [
        "test_parametrized_collected_from_command_line"
      ]
    ]
  ],
  "test_parametrized_collect_with_wrong_args": [
    [
      "testing/test_mark.py",
      [
        "test_parametrized_collect_with_wrong_args"
      ]
    ]
  ],
  "test_parametrized_with_kwargs": [
    [
      "testing/test_mark.py",
      [
        "test_parametrized_with_kwargs"
      ]
    ]
  ],
  "test_parametrize_iterator": [
    [
      "testing/test_mark.py",
      [
        "test_parametrize_iterator"
      ]
    ]
  ],
  "test_merging_markers_deep": [
    [
      "testing/test_mark.py",
      [
        "TestFunctional",
        "test_merging_markers_deep"
      ]
    ]
  ],
  "test_mark_decorator_subclass_does_not_propagate_to_base": [
    [
      "testing/test_mark.py",
      [
        "TestFunctional",
        "test_mark_decorator_subclass_does_not_propagate_to_base"
      ]
    ]
  ],
  "test_mark_should_not_pass_to_siebling_class": [
    [
      "testing/test_mark.py",
      [
        "TestFunctional",
        "test_mark_should_not_pass_to_siebling_class"
      ]
    ]
  ],
  "test_mark_decorator_baseclasses_merged": [
    [
      "testing/test_mark.py",
      [
        "TestFunctional",
        "test_mark_decorator_baseclasses_merged"
      ]
    ]
  ],
  "test_mark_closest": [
    [
      "testing/test_mark.py",
      [
        "TestFunctional",
        "test_mark_closest"
      ]
    ]
  ],
  "test_mark_with_wrong_marker": [
    [
      "testing/test_mark.py",
      [
        "TestFunctional",
        "test_mark_with_wrong_marker"
      ]
    ]
  ],
  "test_mark_dynamically_in_funcarg": [
    [
      "testing/test_mark.py",
      [
        "TestFunctional",
        "test_mark_dynamically_in_funcarg"
      ]
    ]
  ],
  "test_no_marker_match_on_unmarked_names": [
    [
      "testing/test_mark.py",
      [
        "TestFunctional",
        "test_no_marker_match_on_unmarked_names"
      ]
    ]
  ],
  "test_invalid_m_option": [
    [
      "testing/test_mark.py",
      [
        "TestFunctional",
        "test_invalid_m_option"
      ]
    ]
  ],
  "test_keywords_at_node_level": [
    [
      "testing/test_mark.py",
      [
        "TestFunctional",
        "test_keywords_at_node_level"
      ]
    ]
  ],
  "test_keyword_added_for_session": [
    [
      "testing/test_mark.py",
      [
        "TestFunctional",
        "test_keyword_added_for_session"
      ]
    ]
  ],
  "assert_markers": [
    [
      "testing/test_mark.py",
      [
        "TestFunctional",
        "assert_markers"
      ]
    ]
  ],
  "test_mark_from_parameters": [
    [
      "testing/test_mark.py",
      [
        "TestFunctional",
        "test_mark_from_parameters"
      ]
    ]
  ],
  "test_select_simple": [
    [
      "testing/test_mark.py",
      [
        "TestKeywordSelection",
        "test_select_simple"
      ]
    ]
  ],
  "test_select_extra_keywords": [
    [
      "testing/test_mark.py",
      [
        "TestKeywordSelection",
        "test_select_extra_keywords"
      ]
    ]
  ],
  "test_select_starton": [
    [
      "testing/test_mark.py",
      [
        "TestKeywordSelection",
        "test_select_starton"
      ]
    ]
  ],
  "test_keyword_extra": [
    [
      "testing/test_mark.py",
      [
        "TestKeywordSelection",
        "test_keyword_extra"
      ]
    ]
  ],
  "test_keyword_extra_dash": [
    [
      "testing/test_mark.py",
      [
        "TestKeywordSelection",
        "test_keyword_extra_dash"
      ]
    ]
  ],
  "test_no_magic_values": [
    [
      "testing/test_mark.py",
      [
        "TestKeywordSelection",
        "test_no_magic_values"
      ]
    ]
  ],
  "test__eq__": [
    [
      "testing/test_mark.py",
      [
        "TestMarkDecorator",
        "test__eq__"
      ]
    ]
  ],
  "test_parameterset_for_parametrize_marks": [
    [
      "testing/test_mark.py",
      [
        "test_parameterset_for_parametrize_marks"
      ]
    ]
  ],
  "test_parameterset_for_fail_at_collect": [
    [
      "testing/test_mark.py",
      [
        "test_parameterset_for_fail_at_collect"
      ]
    ]
  ],
  "test_parameterset_for_parametrize_bad_markname": [
    [
      "testing/test_mark.py",
      [
        "test_parameterset_for_parametrize_bad_markname"
      ]
    ]
  ],
  "test_mark_expressions_no_smear": [
    [
      "testing/test_mark.py",
      [
        "test_mark_expressions_no_smear"
      ]
    ]
  ],
  "test_addmarker_order": [
    [
      "testing/test_mark.py",
      [
        "test_addmarker_order"
      ]
    ]
  ],
  "test_markers_from_parametrize": [
    [
      "testing/test_mark.py",
      [
        "test_markers_from_parametrize"
      ]
    ]
  ],
  "test_pytest_param_id_requires_string": [
    [
      "testing/test_mark.py",
      [
        "test_pytest_param_id_requires_string"
      ]
    ]
  ],
  "test_pytest_param_id_allows_none_or_string": [
    [
      "testing/test_mark.py",
      [
        "test_pytest_param_id_allows_none_or_string"
      ]
    ]
  ],
  "_modules": [
    [
      "testing/test_meta.py",
      [
        "_modules"
      ]
    ]
  ],
  "test_no_warnings": [
    [
      "testing/test_meta.py",
      [
        "test_no_warnings"
      ]
    ]
  ],
  "test_fileimport": [
    [
      "testing/test_modimport.py",
      [
        "test_fileimport"
      ]
    ]
  ],
  "mp": [
    [
      "testing/test_monkeypatch.py",
      [
        "mp"
      ]
    ]
  ],
  "test_setattr": [
    [
      "testing/test_monkeypatch.py",
      [
        "test_setattr"
      ]
    ]
  ],
  "test_string_expression": [
    [
      "testing/test_monkeypatch.py",
      [
        "TestSetattrWithImportPath",
        "test_string_expression"
      ]
    ]
  ],
  "test_string_expression_class": [
    [
      "testing/test_monkeypatch.py",
      [
        "TestSetattrWithImportPath",
        "test_string_expression_class"
      ]
    ]
  ],
  "test_wrong_target": [
    [
      "testing/test_monkeypatch.py",
      [
        "TestSetattrWithImportPath",
        "test_wrong_target"
      ]
    ]
  ],
  "test_unknown_import": [
    [
      "testing/test_monkeypatch.py",
      [
        "TestSetattrWithImportPath",
        "test_unknown_import"
      ]
    ]
  ],
  "test_unknown_attr": [
    [
      "testing/test_monkeypatch.py",
      [
        "TestSetattrWithImportPath",
        "test_unknown_attr"
      ]
    ]
  ],
  "test_unknown_attr_non_raising": [
    [
      "testing/test_monkeypatch.py",
      [
        "TestSetattrWithImportPath",
        "test_unknown_attr_non_raising"
      ]
    ]
  ],
  "test_delattr": [
    [
      "testing/test_monkeypatch.py",
      [
        "TestSetattrWithImportPath",
        "test_delattr"
      ]
    ],
    [
      "testing/test_monkeypatch.py",
      [
        "test_delattr"
      ]
    ]
  ],
  "test_setitem": [
    [
      "testing/test_monkeypatch.py",
      [
        "test_setitem"
      ]
    ]
  ],
  "test_setitem_deleted_meanwhile": [
    [
      "testing/test_monkeypatch.py",
      [
        "test_setitem_deleted_meanwhile"
      ]
    ]
  ],
  "test_setenv_deleted_meanwhile": [
    [
      "testing/test_monkeypatch.py",
      [
        "test_setenv_deleted_meanwhile"
      ]
    ]
  ],
  "test_delitem": [
    [
      "testing/test_monkeypatch.py",
      [
        "test_delitem"
      ]
    ]
  ],
  "test_setenv": [
    [
      "testing/test_monkeypatch.py",
      [
        "test_setenv"
      ]
    ]
  ],
  "test_delenv": [
    [
      "testing/test_monkeypatch.py",
      [
        "test_delenv"
      ]
    ]
  ],
  "test_setenv_non_str_warning": [
    [
      "testing/test_monkeypatch.py",
      [
        "TestEnvironWarnings",
        "test_setenv_non_str_warning"
      ]
    ]
  ],
  "test_setenv_prepend": [
    [
      "testing/test_monkeypatch.py",
      [
        "test_setenv_prepend"
      ]
    ]
  ],
  "test_monkeypatch_plugin": [
    [
      "testing/test_monkeypatch.py",
      [
        "test_monkeypatch_plugin"
      ]
    ]
  ],
  "test_syspath_prepend": [
    [
      "testing/test_monkeypatch.py",
      [
        "test_syspath_prepend"
      ]
    ]
  ],
  "test_syspath_prepend_double_undo": [
    [
      "testing/test_monkeypatch.py",
      [
        "test_syspath_prepend_double_undo"
      ]
    ]
  ],
  "test_chdir_with_path_local": [
    [
      "testing/test_monkeypatch.py",
      [
        "test_chdir_with_path_local"
      ]
    ]
  ],
  "test_chdir_with_str": [
    [
      "testing/test_monkeypatch.py",
      [
        "test_chdir_with_str"
      ]
    ]
  ],
  "test_chdir_undo": [
    [
      "testing/test_monkeypatch.py",
      [
        "test_chdir_undo"
      ]
    ]
  ],
  "test_chdir_double_undo": [
    [
      "testing/test_monkeypatch.py",
      [
        "test_chdir_double_undo"
      ]
    ]
  ],
  "test_issue185_time_breaks": [
    [
      "testing/test_monkeypatch.py",
      [
        "test_issue185_time_breaks"
      ]
    ]
  ],
  "test_importerror": [
    [
      "testing/test_monkeypatch.py",
      [
        "test_importerror"
      ]
    ]
  ],
  "hello": [
    [
      "testing/test_monkeypatch.py",
      [
        "SampleNew",
        "hello"
      ]
    ],
    [
      "testing/test_monkeypatch.py",
      [
        "SampleOld",
        "hello"
      ]
    ]
  ],
  "test_issue156_undo_staticmethod": [
    [
      "testing/test_monkeypatch.py",
      [
        "test_issue156_undo_staticmethod"
      ]
    ]
  ],
  "test_undo_class_descriptors_delattr": [
    [
      "testing/test_monkeypatch.py",
      [
        "test_undo_class_descriptors_delattr"
      ]
    ]
  ],
  "test_issue1338_name_resolving": [
    [
      "testing/test_monkeypatch.py",
      [
        "test_issue1338_name_resolving"
      ]
    ]
  ],
  "test_context": [
    [
      "testing/test_monkeypatch.py",
      [
        "test_context"
      ]
    ]
  ],
  "test_syspath_prepend_with_namespace_packages": [
    [
      "testing/test_monkeypatch.py",
      [
        "test_syspath_prepend_with_namespace_packages"
      ]
    ]
  ],
  "test_ischildnode": [
    [
      "testing/test_nodes.py",
      [
        "test_ischildnode"
      ]
    ]
  ],
  "test_std_warn_not_pytestwarning": [
    [
      "testing/test_nodes.py",
      [
        "test_std_warn_not_pytestwarning"
      ]
    ]
  ],
  "test__check_initialpaths_for_relpath": [
    [
      "testing/test_nodes.py",
      [
        "test__check_initialpaths_for_relpath"
      ]
    ]
  ],
  "test_nose_setup": [
    [
      "testing/test_nose.py",
      [
        "test_nose_setup"
      ]
    ]
  ],
  "test_setup_func_with_setup_decorator": [
    [
      "testing/test_nose.py",
      [
        "test_setup_func_with_setup_decorator"
      ]
    ]
  ],
  "test_setup_func_not_callable": [
    [
      "testing/test_nose.py",
      [
        "test_setup_func_not_callable"
      ]
    ]
  ],
  "test_nose_setup_func": [
    [
      "testing/test_nose.py",
      [
        "test_nose_setup_func"
      ]
    ]
  ],
  "test_nose_setup_func_failure": [
    [
      "testing/test_nose.py",
      [
        "test_nose_setup_func_failure"
      ]
    ]
  ],
  "test_nose_setup_func_failure_2": [
    [
      "testing/test_nose.py",
      [
        "test_nose_setup_func_failure_2"
      ]
    ]
  ],
  "test_nose_setup_partial": [
    [
      "testing/test_nose.py",
      [
        "test_nose_setup_partial"
      ]
    ]
  ],
  "test_module_level_setup": [
    [
      "testing/test_nose.py",
      [
        "test_module_level_setup"
      ]
    ]
  ],
  "test_nose_style_setup_teardown": [
    [
      "testing/test_nose.py",
      [
        "test_nose_style_setup_teardown"
      ]
    ]
  ],
  "test_nose_setup_ordering": [
    [
      "testing/test_nose.py",
      [
        "test_nose_setup_ordering"
      ]
    ]
  ],
  "test_apiwrapper_problem_issue260": [
    [
      "testing/test_nose.py",
      [
        "test_apiwrapper_problem_issue260"
      ]
    ]
  ],
  "test_setup_teardown_linking_issue265": [
    [
      "testing/test_nose.py",
      [
        "test_setup_teardown_linking_issue265"
      ]
    ]
  ],
  "test_SkipTest_during_collection": [
    [
      "testing/test_nose.py",
      [
        "test_SkipTest_during_collection"
      ]
    ]
  ],
  "test_SkipTest_in_test": [
    [
      "testing/test_nose.py",
      [
        "test_SkipTest_in_test"
      ]
    ]
  ],
  "test_istest_function_decorator": [
    [
      "testing/test_nose.py",
      [
        "test_istest_function_decorator"
      ]
    ]
  ],
  "test_nottest_function_decorator": [
    [
      "testing/test_nose.py",
      [
        "test_nottest_function_decorator"
      ]
    ]
  ],
  "test_istest_class_decorator": [
    [
      "testing/test_nose.py",
      [
        "test_istest_class_decorator"
      ]
    ]
  ],
  "test_nottest_class_decorator": [
    [
      "testing/test_nose.py",
      [
        "test_nottest_class_decorator"
      ]
    ]
  ],
  "test_skip_test_with_unicode": [
    [
      "testing/test_nose.py",
      [
        "test_skip_test_with_unicode"
      ]
    ]
  ],
  "parser": [
    [
      "testing/test_parseopt.py",
      [
        "parser"
      ]
    ]
  ],
  "test_no_help_by_default": [
    [
      "testing/test_parseopt.py",
      [
        "TestParser",
        "test_no_help_by_default"
      ]
    ]
  ],
  "test_custom_prog": [
    [
      "testing/test_parseopt.py",
      [
        "TestParser",
        "test_custom_prog"
      ]
    ]
  ],
  "test_argument": [
    [
      "testing/test_parseopt.py",
      [
        "TestParser",
        "test_argument"
      ]
    ]
  ],
  "test_argument_type": [
    [
      "testing/test_parseopt.py",
      [
        "TestParser",
        "test_argument_type"
      ]
    ]
  ],
  "test_argument_processopt": [
    [
      "testing/test_parseopt.py",
      [
        "TestParser",
        "test_argument_processopt"
      ]
    ]
  ],
  "test_group_add_and_get": [
    [
      "testing/test_parseopt.py",
      [
        "TestParser",
        "test_group_add_and_get"
      ]
    ]
  ],
  "test_getgroup_simple": [
    [
      "testing/test_parseopt.py",
      [
        "TestParser",
        "test_getgroup_simple"
      ]
    ]
  ],
  "test_group_ordering": [
    [
      "testing/test_parseopt.py",
      [
        "TestParser",
        "test_group_ordering"
      ]
    ]
  ],
  "test_group_addoption": [
    [
      "testing/test_parseopt.py",
      [
        "TestParser",
        "test_group_addoption"
      ]
    ]
  ],
  "test_group_addoption_conflict": [
    [
      "testing/test_parseopt.py",
      [
        "TestParser",
        "test_group_addoption_conflict"
      ]
    ]
  ],
  "test_group_shortopt_lowercase": [
    [
      "testing/test_parseopt.py",
      [
        "TestParser",
        "test_group_shortopt_lowercase"
      ]
    ]
  ],
  "test_parser_addoption": [
    [
      "testing/test_parseopt.py",
      [
        "TestParser",
        "test_parser_addoption"
      ]
    ]
  ],
  "test_parse": [
    [
      "testing/test_parseopt.py",
      [
        "TestParser",
        "test_parse"
      ]
    ]
  ],
  "test_parse2": [
    [
      "testing/test_parseopt.py",
      [
        "TestParser",
        "test_parse2"
      ]
    ]
  ],
  "test_parse_known_args": [
    [
      "testing/test_parseopt.py",
      [
        "TestParser",
        "test_parse_known_args"
      ]
    ]
  ],
  "test_parse_known_and_unknown_args": [
    [
      "testing/test_parseopt.py",
      [
        "TestParser",
        "test_parse_known_and_unknown_args"
      ]
    ]
  ],
  "test_parse_will_set_default": [
    [
      "testing/test_parseopt.py",
      [
        "TestParser",
        "test_parse_will_set_default"
      ]
    ]
  ],
  "test_parse_setoption": [
    [
      "testing/test_parseopt.py",
      [
        "TestParser",
        "test_parse_setoption"
      ]
    ]
  ],
  "test_parse_special_destination": [
    [
      "testing/test_parseopt.py",
      [
        "TestParser",
        "test_parse_special_destination"
      ]
    ]
  ],
  "test_parse_split_positional_arguments": [
    [
      "testing/test_parseopt.py",
      [
        "TestParser",
        "test_parse_split_positional_arguments"
      ]
    ]
  ],
  "test_parse_defaultgetter": [
    [
      "testing/test_parseopt.py",
      [
        "TestParser",
        "test_parse_defaultgetter"
      ]
    ]
  ],
  "test_drop_short_helper": [
    [
      "testing/test_parseopt.py",
      [
        "TestParser",
        "test_drop_short_helper"
      ]
    ]
  ],
  "test_drop_short_0": [
    [
      "testing/test_parseopt.py",
      [
        "TestParser",
        "test_drop_short_0"
      ]
    ]
  ],
  "test_drop_short_2": [
    [
      "testing/test_parseopt.py",
      [
        "TestParser",
        "test_drop_short_2"
      ]
    ]
  ],
  "test_drop_short_3": [
    [
      "testing/test_parseopt.py",
      [
        "TestParser",
        "test_drop_short_3"
      ]
    ]
  ],
  "test_drop_short_help0": [
    [
      "testing/test_parseopt.py",
      [
        "TestParser",
        "test_drop_short_help0"
      ]
    ]
  ],
  "test_drop_short_help1": [
    [
      "testing/test_parseopt.py",
      [
        "TestParser",
        "test_drop_short_help1"
      ]
    ]
  ],
  "test_multiple_metavar_help": [
    [
      "testing/test_parseopt.py",
      [
        "TestParser",
        "test_multiple_metavar_help"
      ]
    ]
  ],
  "test_argcomplete": [
    [
      "testing/test_parseopt.py",
      [
        "test_argcomplete"
      ]
    ]
  ],
  "pastebinlist": [
    [
      "testing/test_pastebin.py",
      [
        "TestPasteCapture",
        "pastebinlist"
      ]
    ]
  ],
  "test_failed": [
    [
      "testing/test_pastebin.py",
      [
        "TestPasteCapture",
        "test_failed"
      ]
    ]
  ],
  "test_all": [
    [
      "testing/test_pastebin.py",
      [
        "TestPasteCapture",
        "test_all"
      ]
    ]
  ],
  "test_non_ascii_paste_text": [
    [
      "testing/test_pastebin.py",
      [
        "TestPasteCapture",
        "test_non_ascii_paste_text"
      ]
    ]
  ],
  "pastebin": [
    [
      "testing/test_pastebin.py",
      [
        "TestPaste",
        "pastebin"
      ]
    ]
  ],
  "mocked_urlopen_fail": [
    [
      "testing/test_pastebin.py",
      [
        "TestPaste",
        "mocked_urlopen_fail"
      ]
    ]
  ],
  "mocked_urlopen_invalid": [
    [
      "testing/test_pastebin.py",
      [
        "TestPaste",
        "mocked_urlopen_invalid"
      ]
    ]
  ],
  "mocked_urlopen": [
    [
      "testing/test_pastebin.py",
      [
        "TestPaste",
        "mocked_urlopen"
      ]
    ]
  ],
  "test_pastebin_invalid_url": [
    [
      "testing/test_pastebin.py",
      [
        "TestPaste",
        "test_pastebin_invalid_url"
      ]
    ]
  ],
  "test_pastebin_http_error": [
    [
      "testing/test_pastebin.py",
      [
        "TestPaste",
        "test_pastebin_http_error"
      ]
    ]
  ],
  "test_create_new_paste": [
    [
      "testing/test_pastebin.py",
      [
        "TestPaste",
        "test_create_new_paste"
      ]
    ]
  ],
  "test_create_new_paste_failure": [
    [
      "testing/test_pastebin.py",
      [
        "TestPaste",
        "test_create_new_paste_failure"
      ]
    ]
  ],
  "test_matching": [
    [
      "testing/test_pathlib.py",
      [
        "TestPort",
        "test_matching"
      ]
    ]
  ],
  "test_matching_abspath": [
    [
      "testing/test_pathlib.py",
      [
        "TestPort",
        "test_matching_abspath"
      ]
    ]
  ],
  "test_not_matching": [
    [
      "testing/test_pathlib.py",
      [
        "TestPort",
        "test_not_matching"
      ]
    ]
  ],
  "test_access_denied_during_cleanup": [
    [
      "testing/test_pathlib.py",
      [
        "test_access_denied_during_cleanup"
      ]
    ]
  ],
  "pdb_env": [
    [
      "testing/test_pdb.py",
      [
        "pdb_env"
      ]
    ]
  ],
  "runpdb_and_get_report": [
    [
      "testing/test_pdb.py",
      [
        "runpdb_and_get_report"
      ]
    ]
  ],
  "custom_pdb_calls": [
    [
      "testing/test_pdb.py",
      [
        "custom_pdb_calls"
      ]
    ]
  ],
  "custom_debugger_hook": [
    [
      "testing/test_pdb.py",
      [
        "custom_debugger_hook"
      ]
    ]
  ],
  "pdblist": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "pdblist"
      ]
    ]
  ],
  "test_pdb_on_fail": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_on_fail"
      ]
    ]
  ],
  "test_pdb_on_xfail": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_on_xfail"
      ]
    ]
  ],
  "test_pdb_on_skip": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_on_skip"
      ]
    ]
  ],
  "test_pdb_on_BdbQuit": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_on_BdbQuit"
      ]
    ]
  ],
  "test_pdb_on_KeyboardInterrupt": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_on_KeyboardInterrupt"
      ]
    ]
  ],
  "flush": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "flush"
      ]
    ]
  ],
  "test_pdb_unittest_postmortem": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_unittest_postmortem"
      ]
    ]
  ],
  "test_pdb_unittest_skip": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_unittest_skip"
      ]
    ]
  ],
  "test_pdb_print_captured_stdout_and_stderr": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_print_captured_stdout_and_stderr"
      ]
    ]
  ],
  "test_pdb_dont_print_empty_captured_stdout_and_stderr": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_dont_print_empty_captured_stdout_and_stderr"
      ]
    ]
  ],
  "test_pdb_print_captured_logs": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_print_captured_logs"
      ]
    ]
  ],
  "test_pdb_print_captured_logs_nologging": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_print_captured_logs_nologging"
      ]
    ]
  ],
  "test_pdb_interaction_exception": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_interaction_exception"
      ]
    ]
  ],
  "test_pdb_interaction_on_collection_issue181": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_interaction_on_collection_issue181"
      ]
    ]
  ],
  "test_pdb_interaction_on_internal_error": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_interaction_on_internal_error"
      ]
    ]
  ],
  "test_pdb_interaction_capturing_simple": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_interaction_capturing_simple"
      ]
    ]
  ],
  "test_pdb_set_trace_kwargs": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_set_trace_kwargs"
      ]
    ]
  ],
  "test_pdb_set_trace_interception": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_set_trace_interception"
      ]
    ]
  ],
  "test_pdb_and_capsys": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_and_capsys"
      ]
    ]
  ],
  "test_pdb_with_caplog_on_pdb_invocation": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_with_caplog_on_pdb_invocation"
      ]
    ]
  ],
  "test_set_trace_capturing_afterwards": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_set_trace_capturing_afterwards"
      ]
    ]
  ],
  "test_pdb_interaction_doctest": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_interaction_doctest"
      ]
    ]
  ],
  "test_pdb_interaction_capturing_twice": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_interaction_capturing_twice"
      ]
    ]
  ],
  "test_pdb_with_injected_do_debug": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_with_injected_do_debug"
      ]
    ]
  ],
  "test_pdb_without_capture": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_without_capture"
      ]
    ]
  ],
  "test_pdb_continue_with_recursive_debug": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_continue_with_recursive_debug"
      ]
    ]
  ],
  "test_pdb_used_outside_test": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_used_outside_test"
      ]
    ]
  ],
  "test_pdb_used_in_generate_tests": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_used_in_generate_tests"
      ]
    ]
  ],
  "test_pdb_collection_failure_is_shown": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_collection_failure_is_shown"
      ]
    ]
  ],
  "test_enter_leave_pdb_hooks_are_called": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_enter_leave_pdb_hooks_are_called"
      ]
    ]
  ],
  "test_pdb_custom_cls": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_custom_cls"
      ]
    ],
    [
      "testing/test_pdb.py",
      [
        "TestDebuggingBreakpoints",
        "test_pdb_custom_cls"
      ]
    ]
  ],
  "test_pdb_custom_cls_invalid": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_custom_cls_invalid"
      ]
    ]
  ],
  "test_pdb_validate_usepdb_cls": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_validate_usepdb_cls"
      ]
    ]
  ],
  "test_pdb_custom_cls_without_pdb": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_custom_cls_without_pdb"
      ]
    ]
  ],
  "test_pdb_custom_cls_with_set_trace": [
    [
      "testing/test_pdb.py",
      [
        "TestPDB",
        "test_pdb_custom_cls_with_set_trace"
      ]
    ]
  ],
  "test_supports_breakpoint_module_global": [
    [
      "testing/test_pdb.py",
      [
        "TestDebuggingBreakpoints",
        "test_supports_breakpoint_module_global"
      ]
    ]
  ],
  "test_sys_breakpointhook_configure_and_unconfigure": [
    [
      "testing/test_pdb.py",
      [
        "TestDebuggingBreakpoints",
        "test_sys_breakpointhook_configure_and_unconfigure"
      ]
    ]
  ],
  "test_environ_custom_class": [
    [
      "testing/test_pdb.py",
      [
        "TestDebuggingBreakpoints",
        "test_environ_custom_class"
      ]
    ]
  ],
  "test_sys_breakpoint_interception": [
    [
      "testing/test_pdb.py",
      [
        "TestDebuggingBreakpoints",
        "test_sys_breakpoint_interception"
      ]
    ]
  ],
  "test_pdb_not_altered": [
    [
      "testing/test_pdb.py",
      [
        "TestDebuggingBreakpoints",
        "test_pdb_not_altered"
      ]
    ]
  ],
  "test_trace_sets_breakpoint": [
    [
      "testing/test_pdb.py",
      [
        "TestTraceOption",
        "test_trace_sets_breakpoint"
      ]
    ]
  ],
  "test_trace_with_parametrize_handles_shared_fixtureinfo": [
    [
      "testing/test_pdb.py",
      [
        "TestTraceOption",
        "test_trace_with_parametrize_handles_shared_fixtureinfo"
      ]
    ]
  ],
  "test_trace_after_runpytest": [
    [
      "testing/test_pdb.py",
      [
        "test_trace_after_runpytest"
      ]
    ]
  ],
  "test_quit_with_swallowed_SystemExit": [
    [
      "testing/test_pdb.py",
      [
        "test_quit_with_swallowed_SystemExit"
      ]
    ]
  ],
  "test_pdb_suspends_fixture_capturing": [
    [
      "testing/test_pdb.py",
      [
        "test_pdb_suspends_fixture_capturing"
      ]
    ]
  ],
  "test_pdbcls_via_local_module": [
    [
      "testing/test_pdb.py",
      [
        "test_pdbcls_via_local_module"
      ]
    ]
  ],
  "test_raises_bdbquit_with_eoferror": [
    [
      "testing/test_pdb.py",
      [
        "test_raises_bdbquit_with_eoferror"
      ]
    ]
  ],
  "test_pdb_wrapper_class_is_reused": [
    [
      "testing/test_pdb.py",
      [
        "test_pdb_wrapper_class_is_reused"
      ]
    ]
  ],
  "pytestpm": [
    [
      "testing/test_pluginmanager.py",
      [
        "pytestpm"
      ]
    ]
  ],
  "test_addhooks_conftestplugin": [
    [
      "testing/test_pluginmanager.py",
      [
        "TestPytestPluginInteractions",
        "test_addhooks_conftestplugin"
      ]
    ]
  ],
  "test_addhooks_nohooks": [
    [
      "testing/test_pluginmanager.py",
      [
        "TestPytestPluginInteractions",
        "test_addhooks_nohooks"
      ]
    ]
  ],
  "test_do_option_postinitialize": [
    [
      "testing/test_pluginmanager.py",
      [
        "TestPytestPluginInteractions",
        "test_do_option_postinitialize"
      ]
    ]
  ],
  "test_configure": [
    [
      "testing/test_pluginmanager.py",
      [
        "TestPytestPluginInteractions",
        "test_configure"
      ]
    ]
  ],
  "test_hook_tracing": [
    [
      "testing/test_pluginmanager.py",
      [
        "TestPytestPluginInteractions",
        "test_hook_tracing"
      ]
    ]
  ],
  "test_default_markers": [
    [
      "testing/test_pluginmanager.py",
      [
        "test_default_markers"
      ]
    ],
    [
      "testing/test_skipping.py",
      [
        "test_default_markers"
      ]
    ]
  ],
  "test_importplugin_error_message": [
    [
      "testing/test_pluginmanager.py",
      [
        "test_importplugin_error_message"
      ]
    ]
  ],
  "test_register_imported_modules": [
    [
      "testing/test_pluginmanager.py",
      [
        "TestPytestPluginManager",
        "test_register_imported_modules"
      ]
    ]
  ],
  "test_canonical_import": [
    [
      "testing/test_pluginmanager.py",
      [
        "TestPytestPluginManager",
        "test_canonical_import"
      ]
    ]
  ],
  "test_consider_module": [
    [
      "testing/test_pluginmanager.py",
      [
        "TestPytestPluginManager",
        "test_consider_module"
      ]
    ]
  ],
  "test_consider_module_import_module": [
    [
      "testing/test_pluginmanager.py",
      [
        "TestPytestPluginManager",
        "test_consider_module_import_module"
      ]
    ]
  ],
  "test_consider_env_fails_to_import": [
    [
      "testing/test_pluginmanager.py",
      [
        "TestPytestPluginManager",
        "test_consider_env_fails_to_import"
      ]
    ]
  ],
  "test_plugin_skip": [
    [
      "testing/test_pluginmanager.py",
      [
        "TestPytestPluginManager",
        "test_plugin_skip"
      ]
    ]
  ],
  "test_consider_env_plugin_instantiation": [
    [
      "testing/test_pluginmanager.py",
      [
        "TestPytestPluginManager",
        "test_consider_env_plugin_instantiation"
      ]
    ]
  ],
  "test_pluginmanager_ENV_startup": [
    [
      "testing/test_pluginmanager.py",
      [
        "TestPytestPluginManager",
        "test_pluginmanager_ENV_startup"
      ]
    ]
  ],
  "test_import_plugin_importname": [
    [
      "testing/test_pluginmanager.py",
      [
        "TestPytestPluginManager",
        "test_import_plugin_importname"
      ]
    ]
  ],
  "test_import_plugin_dotted_name": [
    [
      "testing/test_pluginmanager.py",
      [
        "TestPytestPluginManager",
        "test_import_plugin_dotted_name"
      ]
    ]
  ],
  "test_consider_conftest_deps": [
    [
      "testing/test_pluginmanager.py",
      [
        "TestPytestPluginManager",
        "test_consider_conftest_deps"
      ]
    ]
  ],
  "test_preparse_args": [
    [
      "testing/test_pluginmanager.py",
      [
        "TestPytestPluginManagerBootstrapming",
        "test_preparse_args"
      ]
    ]
  ],
  "test_plugin_prevent_register": [
    [
      "testing/test_pluginmanager.py",
      [
        "TestPytestPluginManagerBootstrapming",
        "test_plugin_prevent_register"
      ]
    ]
  ],
  "test_plugin_prevent_register_unregistered_alredy_registered": [
    [
      "testing/test_pluginmanager.py",
      [
        "TestPytestPluginManagerBootstrapming",
        "test_plugin_prevent_register_unregistered_alredy_registered"
      ]
    ]
  ],
  "test_plugin_prevent_register_stepwise_on_cacheprovider_unregister": [
    [
      "testing/test_pluginmanager.py",
      [
        "TestPytestPluginManagerBootstrapming",
        "test_plugin_prevent_register_stepwise_on_cacheprovider_unregister"
      ]
    ]
  ],
  "test_blocked_plugin_can_be_used": [
    [
      "testing/test_pluginmanager.py",
      [
        "TestPytestPluginManagerBootstrapming",
        "test_blocked_plugin_can_be_used"
      ]
    ]
  ],
  "test_make_hook_recorder": [
    [
      "testing/test_pytester.py",
      [
        "test_make_hook_recorder"
      ]
    ]
  ],
  "test_parseconfig": [
    [
      "testing/test_pytester.py",
      [
        "test_parseconfig"
      ]
    ]
  ],
  "test_testdir_runs_with_plugin": [
    [
      "testing/test_pytester.py",
      [
        "test_testdir_runs_with_plugin"
      ]
    ]
  ],
  "test_runresult_assertion_on_xfail": [
    [
      "testing/test_pytester.py",
      [
        "test_runresult_assertion_on_xfail"
      ]
    ]
  ],
  "test_runresult_assertion_on_xpassed": [
    [
      "testing/test_pytester.py",
      [
        "test_runresult_assertion_on_xpassed"
      ]
    ]
  ],
  "test_runresult_repr": [
    [
      "testing/test_pytester.py",
      [
        "test_runresult_repr"
      ]
    ]
  ],
  "test_xpassed_with_strict_is_considered_a_failure": [
    [
      "testing/test_pytester.py",
      [
        "test_xpassed_with_strict_is_considered_a_failure"
      ]
    ]
  ],
  "make_holder": [
    [
      "testing/test_pytester.py",
      [
        "make_holder"
      ]
    ]
  ],
  "test_hookrecorder_basic": [
    [
      "testing/test_pytester.py",
      [
        "test_hookrecorder_basic"
      ]
    ]
  ],
  "test_makepyfile_unicode": [
    [
      "testing/test_pytester.py",
      [
        "test_makepyfile_unicode"
      ]
    ]
  ],
  "test_makepyfile_utf8": [
    [
      "testing/test_pytester.py",
      [
        "test_makepyfile_utf8"
      ]
    ]
  ],
  "test_inline_run_test_module_not_cleaned_up": [
    [
      "testing/test_pytester.py",
      [
        "TestInlineRunModulesCleanup",
        "test_inline_run_test_module_not_cleaned_up"
      ]
    ]
  ],
  "spy_factory": [
    [
      "testing/test_pytester.py",
      [
        "TestInlineRunModulesCleanup",
        "spy_factory"
      ]
    ]
  ],
  "test_inline_run_taking_and_restoring_a_sys_modules_snapshot": [
    [
      "testing/test_pytester.py",
      [
        "TestInlineRunModulesCleanup",
        "test_inline_run_taking_and_restoring_a_sys_modules_snapshot"
      ]
    ]
  ],
  "test_inline_run_sys_modules_snapshot_restore_preserving_modules": [
    [
      "testing/test_pytester.py",
      [
        "TestInlineRunModulesCleanup",
        "test_inline_run_sys_modules_snapshot_restore_preserving_modules"
      ]
    ]
  ],
  "test_external_test_module_imports_not_cleaned_up": [
    [
      "testing/test_pytester.py",
      [
        "TestInlineRunModulesCleanup",
        "test_external_test_module_imports_not_cleaned_up"
      ]
    ]
  ],
  "test_assert_outcomes_after_pytest_error": [
    [
      "testing/test_pytester.py",
      [
        "test_assert_outcomes_after_pytest_error"
      ]
    ]
  ],
  "test_cwd_snapshot": [
    [
      "testing/test_pytester.py",
      [
        "test_cwd_snapshot"
      ]
    ]
  ],
  "test_remove_added": [
    [
      "testing/test_pytester.py",
      [
        "TestSysModulesSnapshot",
        "test_remove_added"
      ]
    ]
  ],
  "test_add_removed": [
    [
      "testing/test_pytester.py",
      [
        "TestSysModulesSnapshot",
        "test_add_removed"
      ]
    ]
  ],
  "test_restore_reloaded": [
    [
      "testing/test_pytester.py",
      [
        "TestSysModulesSnapshot",
        "test_restore_reloaded"
      ]
    ]
  ],
  "test_preserve_modules": [
    [
      "testing/test_pytester.py",
      [
        "TestSysModulesSnapshot",
        "test_preserve_modules"
      ]
    ]
  ],
  "test_preserve_container": [
    [
      "testing/test_pytester.py",
      [
        "TestSysModulesSnapshot",
        "test_preserve_container"
      ]
    ],
    [
      "testing/test_pytester.py",
      [
        "TestSysPathsSnapshot",
        "test_preserve_container"
      ]
    ]
  ],
  "test_restore": [
    [
      "testing/test_pytester.py",
      [
        "TestSysPathsSnapshot",
        "test_restore"
      ]
    ]
  ],
  "test_testdir_subprocess": [
    [
      "testing/test_pytester.py",
      [
        "test_testdir_subprocess"
      ]
    ]
  ],
  "test_unicode_args": [
    [
      "testing/test_pytester.py",
      [
        "test_unicode_args"
      ]
    ]
  ],
  "test_testdir_run_no_timeout": [
    [
      "testing/test_pytester.py",
      [
        "test_testdir_run_no_timeout"
      ]
    ]
  ],
  "test_testdir_run_with_timeout": [
    [
      "testing/test_pytester.py",
      [
        "test_testdir_run_with_timeout"
      ]
    ]
  ],
  "test_testdir_run_timeout_expires": [
    [
      "testing/test_pytester.py",
      [
        "test_testdir_run_timeout_expires"
      ]
    ]
  ],
  "test_linematcher_with_nonlist": [
    [
      "testing/test_pytester.py",
      [
        "test_linematcher_with_nonlist"
      ]
    ]
  ],
  "test_pytester_addopts": [
    [
      "testing/test_pytester.py",
      [
        "test_pytester_addopts"
      ]
    ]
  ],
  "test_run_stdin": [
    [
      "testing/test_pytester.py",
      [
        "test_run_stdin"
      ]
    ]
  ],
  "test_popen_stdin_pipe": [
    [
      "testing/test_pytester.py",
      [
        "test_popen_stdin_pipe"
      ]
    ]
  ],
  "test_popen_stdin_bytes": [
    [
      "testing/test_pytester.py",
      [
        "test_popen_stdin_bytes"
      ]
    ]
  ],
  "test_popen_default_stdin_stderr_and_stdin_None": [
    [
      "testing/test_pytester.py",
      [
        "test_popen_default_stdin_stderr_and_stdin_None"
      ]
    ]
  ],
  "test_spawn_uses_tmphome": [
    [
      "testing/test_pytester.py",
      [
        "test_spawn_uses_tmphome"
      ]
    ]
  ],
  "test_recwarn_stacklevel": [
    [
      "testing/test_recwarn.py",
      [
        "test_recwarn_stacklevel"
      ]
    ]
  ],
  "test_recwarn_functional": [
    [
      "testing/test_recwarn.py",
      [
        "test_recwarn_functional"
      ]
    ]
  ],
  "test_recording": [
    [
      "testing/test_recwarn.py",
      [
        "TestWarningsRecorderChecker",
        "test_recording"
      ]
    ]
  ],
  "test_warn_stacklevel": [
    [
      "testing/test_recwarn.py",
      [
        "TestWarningsRecorderChecker",
        "test_warn_stacklevel"
      ]
    ]
  ],
  "test_typechecking": [
    [
      "testing/test_recwarn.py",
      [
        "TestWarningsRecorderChecker",
        "test_typechecking"
      ]
    ]
  ],
  "test_invalid_enter_exit": [
    [
      "testing/test_recwarn.py",
      [
        "TestWarningsRecorderChecker",
        "test_invalid_enter_exit"
      ]
    ]
  ],
  "dep": [
    [
      "testing/test_recwarn.py",
      [
        "TestDeprecatedCall",
        "dep"
      ]
    ]
  ],
  "dep_explicit": [
    [
      "testing/test_recwarn.py",
      [
        "TestDeprecatedCall",
        "dep_explicit"
      ]
    ]
  ],
  "test_deprecated_call_raises": [
    [
      "testing/test_recwarn.py",
      [
        "TestDeprecatedCall",
        "test_deprecated_call_raises"
      ]
    ]
  ],
  "test_deprecated_call": [
    [
      "testing/test_recwarn.py",
      [
        "TestDeprecatedCall",
        "test_deprecated_call"
      ]
    ]
  ],
  "test_deprecated_call_ret": [
    [
      "testing/test_recwarn.py",
      [
        "TestDeprecatedCall",
        "test_deprecated_call_ret"
      ]
    ]
  ],
  "test_deprecated_call_preserves": [
    [
      "testing/test_recwarn.py",
      [
        "TestDeprecatedCall",
        "test_deprecated_call_preserves"
      ]
    ]
  ],
  "test_deprecated_explicit_call_raises": [
    [
      "testing/test_recwarn.py",
      [
        "TestDeprecatedCall",
        "test_deprecated_explicit_call_raises"
      ]
    ]
  ],
  "test_deprecated_explicit_call": [
    [
      "testing/test_recwarn.py",
      [
        "TestDeprecatedCall",
        "test_deprecated_explicit_call"
      ]
    ]
  ],
  "test_deprecated_call_no_warning": [
    [
      "testing/test_recwarn.py",
      [
        "TestDeprecatedCall",
        "test_deprecated_call_no_warning"
      ]
    ]
  ],
  "test_deprecated_call_modes": [
    [
      "testing/test_recwarn.py",
      [
        "TestDeprecatedCall",
        "test_deprecated_call_modes"
      ]
    ]
  ],
  "test_deprecated_call_exception_is_raised": [
    [
      "testing/test_recwarn.py",
      [
        "TestDeprecatedCall",
        "test_deprecated_call_exception_is_raised"
      ]
    ]
  ],
  "test_deprecated_call_specificity": [
    [
      "testing/test_recwarn.py",
      [
        "TestDeprecatedCall",
        "test_deprecated_call_specificity"
      ]
    ]
  ],
  "test_deprecated_call_supports_match": [
    [
      "testing/test_recwarn.py",
      [
        "TestDeprecatedCall",
        "test_deprecated_call_supports_match"
      ]
    ]
  ],
  "test_several_messages": [
    [
      "testing/test_recwarn.py",
      [
        "TestWarns",
        "test_several_messages"
      ]
    ]
  ],
  "test_warning_tuple": [
    [
      "testing/test_recwarn.py",
      [
        "TestWarns",
        "test_warning_tuple"
      ]
    ]
  ],
  "test_as_contextmanager": [
    [
      "testing/test_recwarn.py",
      [
        "TestWarns",
        "test_as_contextmanager"
      ]
    ]
  ],
  "test_record": [
    [
      "testing/test_recwarn.py",
      [
        "TestWarns",
        "test_record"
      ]
    ]
  ],
  "test_record_only": [
    [
      "testing/test_recwarn.py",
      [
        "TestWarns",
        "test_record_only"
      ]
    ]
  ],
  "test_record_by_subclass": [
    [
      "testing/test_recwarn.py",
      [
        "TestWarns",
        "test_record_by_subclass"
      ]
    ]
  ],
  "test_double_test": [
    [
      "testing/test_recwarn.py",
      [
        "TestWarns",
        "test_double_test"
      ]
    ]
  ],
  "test_match_regex": [
    [
      "testing/test_recwarn.py",
      [
        "TestWarns",
        "test_match_regex"
      ]
    ]
  ],
  "test_one_from_multiple_warns": [
    [
      "testing/test_recwarn.py",
      [
        "TestWarns",
        "test_one_from_multiple_warns"
      ]
    ]
  ],
  "test_none_of_multiple_warns": [
    [
      "testing/test_recwarn.py",
      [
        "TestWarns",
        "test_none_of_multiple_warns"
      ]
    ]
  ],
  "test_can_capture_previously_warned": [
    [
      "testing/test_recwarn.py",
      [
        "TestWarns",
        "test_can_capture_previously_warned"
      ]
    ]
  ],
  "test_warns_context_manager_with_kwargs": [
    [
      "testing/test_recwarn.py",
      [
        "TestWarns",
        "test_warns_context_manager_with_kwargs"
      ]
    ]
  ],
  "test_xdist_longrepr_to_str_issue_241": [
    [
      "testing/test_reports.py",
      [
        "TestReportSerialization",
        "test_xdist_longrepr_to_str_issue_241"
      ]
    ]
  ],
  "test_xdist_report_longrepr_reprcrash_130": [
    [
      "testing/test_reports.py",
      [
        "TestReportSerialization",
        "test_xdist_report_longrepr_reprcrash_130"
      ]
    ]
  ],
  "test_reprentries_serialization_170": [
    [
      "testing/test_reports.py",
      [
        "TestReportSerialization",
        "test_reprentries_serialization_170"
      ]
    ]
  ],
  "test_reprentries_serialization_196": [
    [
      "testing/test_reports.py",
      [
        "TestReportSerialization",
        "test_reprentries_serialization_196"
      ]
    ]
  ],
  "test_itemreport_outcomes": [
    [
      "testing/test_reports.py",
      [
        "TestReportSerialization",
        "test_itemreport_outcomes"
      ]
    ]
  ],
  "test_collectreport_passed": [
    [
      "testing/test_reports.py",
      [
        "TestReportSerialization",
        "test_collectreport_passed"
      ]
    ]
  ],
  "test_collectreport_fail": [
    [
      "testing/test_reports.py",
      [
        "TestReportSerialization",
        "test_collectreport_fail"
      ]
    ]
  ],
  "test_extended_report_deserialization": [
    [
      "testing/test_reports.py",
      [
        "TestReportSerialization",
        "test_extended_report_deserialization"
      ]
    ]
  ],
  "test_paths_support": [
    [
      "testing/test_reports.py",
      [
        "TestReportSerialization",
        "test_paths_support"
      ]
    ]
  ],
  "test_deserialization_failure": [
    [
      "testing/test_reports.py",
      [
        "TestReportSerialization",
        "test_deserialization_failure"
      ]
    ]
  ],
  "check_longrepr": [
    [
      "testing/test_reports.py",
      [
        "TestReportSerialization",
        "test_chained_exceptions",
        "check_longrepr"
      ]
    ]
  ],
  "test_chained_exceptions": [
    [
      "testing/test_reports.py",
      [
        "TestReportSerialization",
        "test_chained_exceptions"
      ]
    ]
  ],
  "test_test_report": [
    [
      "testing/test_reports.py",
      [
        "TestHooks",
        "test_test_report"
      ]
    ]
  ],
  "test_collect_report": [
    [
      "testing/test_reports.py",
      [
        "TestHooks",
        "test_collect_report"
      ]
    ]
  ],
  "test_invalid_report_types": [
    [
      "testing/test_reports.py",
      [
        "TestHooks",
        "test_invalid_report_types"
      ]
    ]
  ],
  "test_write_log_entry": [
    [
      "testing/test_resultlog.py",
      [
        "test_write_log_entry"
      ]
    ]
  ],
  "getresultlog": [
    [
      "testing/test_resultlog.py",
      [
        "TestWithFunctionIntegration",
        "getresultlog"
      ]
    ]
  ],
  "test_collection_report": [
    [
      "testing/test_resultlog.py",
      [
        "TestWithFunctionIntegration",
        "test_collection_report"
      ]
    ]
  ],
  "test_log_test_outcomes": [
    [
      "testing/test_resultlog.py",
      [
        "TestWithFunctionIntegration",
        "test_log_test_outcomes"
      ]
    ]
  ],
  "test_internal_exception": [
    [
      "testing/test_resultlog.py",
      [
        "TestWithFunctionIntegration",
        "test_internal_exception"
      ]
    ]
  ],
  "test_generic": [
    [
      "testing/test_resultlog.py",
      [
        "test_generic"
      ]
    ]
  ],
  "test_makedir_for_resultlog": [
    [
      "testing/test_resultlog.py",
      [
        "test_makedir_for_resultlog"
      ]
    ]
  ],
  "test_no_resultlog_on_slaves": [
    [
      "testing/test_resultlog.py",
      [
        "test_no_resultlog_on_slaves"
      ]
    ]
  ],
  "test_failure_issue380": [
    [
      "testing/test_resultlog.py",
      [
        "test_failure_issue380"
      ]
    ]
  ],
  "test_teardown_exact_stack_empty": [
    [
      "testing/test_runner.py",
      [
        "TestSetupState",
        "test_teardown_exact_stack_empty"
      ]
    ]
  ],
  "test_setup_fails_and_failure_is_cached": [
    [
      "testing/test_runner.py",
      [
        "TestSetupState",
        "test_setup_fails_and_failure_is_cached"
      ]
    ]
  ],
  "test_teardown_multiple_one_fails": [
    [
      "testing/test_runner.py",
      [
        "TestSetupState",
        "test_teardown_multiple_one_fails"
      ]
    ]
  ],
  "test_teardown_multiple_fail": [
    [
      "testing/test_runner.py",
      [
        "TestSetupState",
        "test_teardown_multiple_fail"
      ]
    ]
  ],
  "test_teardown_multiple_scopes_one_fails": [
    [
      "testing/test_runner.py",
      [
        "TestSetupState",
        "test_teardown_multiple_scopes_one_fails"
      ]
    ]
  ],
  "test_passfunction": [
    [
      "testing/test_runner.py",
      [
        "BaseFunctionalTests",
        "test_passfunction"
      ]
    ]
  ],
  "test_failfunction": [
    [
      "testing/test_runner.py",
      [
        "BaseFunctionalTests",
        "test_failfunction"
      ]
    ]
  ],
  "test_skipfunction": [
    [
      "testing/test_runner.py",
      [
        "BaseFunctionalTests",
        "test_skipfunction"
      ]
    ]
  ],
  "test_skip_in_setup_function": [
    [
      "testing/test_runner.py",
      [
        "BaseFunctionalTests",
        "test_skip_in_setup_function"
      ]
    ]
  ],
  "test_failure_in_setup_function": [
    [
      "testing/test_runner.py",
      [
        "BaseFunctionalTests",
        "test_failure_in_setup_function"
      ]
    ]
  ],
  "test_failure_in_teardown_function": [
    [
      "testing/test_runner.py",
      [
        "BaseFunctionalTests",
        "test_failure_in_teardown_function"
      ]
    ]
  ],
  "test_custom_failure_repr": [
    [
      "testing/test_runner.py",
      [
        "BaseFunctionalTests",
        "test_custom_failure_repr"
      ]
    ]
  ],
  "test_teardown_final_returncode": [
    [
      "testing/test_runner.py",
      [
        "BaseFunctionalTests",
        "test_teardown_final_returncode"
      ]
    ]
  ],
  "test_logstart_logfinish_hooks": [
    [
      "testing/test_runner.py",
      [
        "BaseFunctionalTests",
        "test_logstart_logfinish_hooks"
      ]
    ]
  ],
  "test_exact_teardown_issue90": [
    [
      "testing/test_runner.py",
      [
        "BaseFunctionalTests",
        "test_exact_teardown_issue90"
      ]
    ]
  ],
  "test_exact_teardown_issue1206": [
    [
      "testing/test_runner.py",
      [
        "BaseFunctionalTests",
        "test_exact_teardown_issue1206"
      ]
    ]
  ],
  "test_failure_in_setup_function_ignores_custom_repr": [
    [
      "testing/test_runner.py",
      [
        "BaseFunctionalTests",
        "test_failure_in_setup_function_ignores_custom_repr"
      ]
    ]
  ],
  "test_systemexit_does_not_bail_out": [
    [
      "testing/test_runner.py",
      [
        "BaseFunctionalTests",
        "test_systemexit_does_not_bail_out"
      ]
    ]
  ],
  "test_exit_propagates": [
    [
      "testing/test_runner.py",
      [
        "BaseFunctionalTests",
        "test_exit_propagates"
      ]
    ]
  ],
  "getrunner": [
    [
      "testing/test_runner.py",
      [
        "TestExecutionNonForked",
        "getrunner"
      ]
    ],
    [
      "testing/test_runner.py",
      [
        "TestExecutionForked",
        "getrunner"
      ]
    ],
    [
      "testing/test_runner.py",
      [
        "TestReportContents",
        "getrunner"
      ]
    ]
  ],
  "test_keyboardinterrupt_propagates": [
    [
      "testing/test_runner.py",
      [
        "TestExecutionNonForked",
        "test_keyboardinterrupt_propagates"
      ]
    ]
  ],
  "test_suicide": [
    [
      "testing/test_runner.py",
      [
        "TestExecutionForked",
        "test_suicide"
      ]
    ]
  ],
  "test_collect_result": [
    [
      "testing/test_runner.py",
      [
        "TestSessionReports",
        "test_collect_result"
      ]
    ]
  ],
  "test_report_extra_parameters": [
    [
      "testing/test_runner.py",
      [
        "test_report_extra_parameters"
      ]
    ]
  ],
  "test_callinfo": [
    [
      "testing/test_runner.py",
      [
        "test_callinfo"
      ]
    ]
  ],
  "test_runtest_in_module_ordering": [
    [
      "testing/test_runner.py",
      [
        "test_runtest_in_module_ordering"
      ]
    ]
  ],
  "test_outcomeexception_exceptionattributes": [
    [
      "testing/test_runner.py",
      [
        "test_outcomeexception_exceptionattributes"
      ]
    ]
  ],
  "test_outcomeexception_passes_except_Exception": [
    [
      "testing/test_runner.py",
      [
        "test_outcomeexception_passes_except_Exception"
      ]
    ]
  ],
  "test_pytest_exit": [
    [
      "testing/test_runner.py",
      [
        "test_pytest_exit"
      ]
    ]
  ],
  "test_pytest_fail": [
    [
      "testing/test_runner.py",
      [
        "test_pytest_fail"
      ]
    ]
  ],
  "test_pytest_exit_msg": [
    [
      "testing/test_runner.py",
      [
        "test_pytest_exit_msg"
      ]
    ]
  ],
  "_strip_resource_warnings": [
    [
      "testing/test_runner.py",
      [
        "_strip_resource_warnings"
      ]
    ]
  ],
  "test_pytest_exit_returncode": [
    [
      "testing/test_runner.py",
      [
        "test_pytest_exit_returncode"
      ]
    ]
  ],
  "test_pytest_fail_notrace_runtest": [
    [
      "testing/test_runner.py",
      [
        "test_pytest_fail_notrace_runtest"
      ]
    ]
  ],
  "test_pytest_fail_notrace_collection": [
    [
      "testing/test_runner.py",
      [
        "test_pytest_fail_notrace_collection"
      ]
    ]
  ],
  "test_pytest_fail_notrace_non_ascii": [
    [
      "testing/test_runner.py",
      [
        "test_pytest_fail_notrace_non_ascii"
      ]
    ]
  ],
  "test_pytest_no_tests_collected_exit_status": [
    [
      "testing/test_runner.py",
      [
        "test_pytest_no_tests_collected_exit_status"
      ]
    ]
  ],
  "test_exception_printing_skip": [
    [
      "testing/test_runner.py",
      [
        "test_exception_printing_skip"
      ]
    ]
  ],
  "test_importorskip": [
    [
      "testing/test_runner.py",
      [
        "test_importorskip"
      ]
    ],
    [
      "testing/test_skipping.py",
      [
        "test_importorskip"
      ]
    ]
  ],
  "test_importorskip_imports_last_module_part": [
    [
      "testing/test_runner.py",
      [
        "test_importorskip_imports_last_module_part"
      ]
    ]
  ],
  "test_importorskip_dev_module": [
    [
      "testing/test_runner.py",
      [
        "test_importorskip_dev_module"
      ]
    ]
  ],
  "test_importorskip_module_level": [
    [
      "testing/test_runner.py",
      [
        "test_importorskip_module_level"
      ]
    ]
  ],
  "test_importorskip_custom_reason": [
    [
      "testing/test_runner.py",
      [
        "test_importorskip_custom_reason"
      ]
    ]
  ],
  "test_pytest_cmdline_main": [
    [
      "testing/test_runner.py",
      [
        "test_pytest_cmdline_main"
      ]
    ]
  ],
  "test_unicode_in_longrepr": [
    [
      "testing/test_runner.py",
      [
        "test_unicode_in_longrepr"
      ]
    ]
  ],
  "test_failure_in_setup": [
    [
      "testing/test_runner.py",
      [
        "test_failure_in_setup"
      ]
    ]
  ],
  "test_makereport_getsource": [
    [
      "testing/test_runner.py",
      [
        "test_makereport_getsource"
      ]
    ]
  ],
  "test_makereport_getsource_dynamic_code": [
    [
      "testing/test_runner.py",
      [
        "test_makereport_getsource_dynamic_code"
      ]
    ]
  ],
  "test_store_except_info_on_error": [
    [
      "testing/test_runner.py",
      [
        "test_store_except_info_on_error"
      ]
    ]
  ],
  "test_current_test_env_var": [
    [
      "testing/test_runner.py",
      [
        "test_current_test_env_var"
      ]
    ]
  ],
  "test_longreprtext_pass": [
    [
      "testing/test_runner.py",
      [
        "TestReportContents",
        "test_longreprtext_pass"
      ]
    ]
  ],
  "test_longreprtext_failure": [
    [
      "testing/test_runner.py",
      [
        "TestReportContents",
        "test_longreprtext_failure"
      ]
    ]
  ],
  "test_captured_text": [
    [
      "testing/test_runner.py",
      [
        "TestReportContents",
        "test_captured_text"
      ]
    ]
  ],
  "test_no_captured_text": [
    [
      "testing/test_runner.py",
      [
        "TestReportContents",
        "test_no_captured_text"
      ]
    ]
  ],
  "test_outcome_exception_bad_msg": [
    [
      "testing/test_runner.py",
      [
        "test_outcome_exception_bad_msg"
      ]
    ]
  ],
  "test_module_and_function_setup": [
    [
      "testing/test_runner_xunit.py",
      [
        "test_module_and_function_setup"
      ]
    ]
  ],
  "test_module_setup_failure_no_teardown": [
    [
      "testing/test_runner_xunit.py",
      [
        "test_module_setup_failure_no_teardown"
      ]
    ]
  ],
  "test_setup_function_failure_no_teardown": [
    [
      "testing/test_runner_xunit.py",
      [
        "test_setup_function_failure_no_teardown"
      ]
    ]
  ],
  "test_class_setup": [
    [
      "testing/test_runner_xunit.py",
      [
        "test_class_setup"
      ]
    ]
  ],
  "test_class_setup_failure_no_teardown": [
    [
      "testing/test_runner_xunit.py",
      [
        "test_class_setup_failure_no_teardown"
      ]
    ]
  ],
  "test_method_setup": [
    [
      "testing/test_runner_xunit.py",
      [
        "test_method_setup"
      ]
    ]
  ],
  "test_method_setup_failure_no_teardown": [
    [
      "testing/test_runner_xunit.py",
      [
        "test_method_setup_failure_no_teardown"
      ]
    ]
  ],
  "test_method_setup_uses_fresh_instances": [
    [
      "testing/test_runner_xunit.py",
      [
        "test_method_setup_uses_fresh_instances"
      ]
    ]
  ],
  "test_setup_that_skips_calledagain": [
    [
      "testing/test_runner_xunit.py",
      [
        "test_setup_that_skips_calledagain"
      ]
    ]
  ],
  "test_setup_fails_again_on_all_tests": [
    [
      "testing/test_runner_xunit.py",
      [
        "test_setup_fails_again_on_all_tests"
      ]
    ]
  ],
  "test_setup_funcarg_setup_when_outer_scope_fails": [
    [
      "testing/test_runner_xunit.py",
      [
        "test_setup_funcarg_setup_when_outer_scope_fails"
      ]
    ]
  ],
  "test_setup_teardown_function_level_with_optional_argument": [
    [
      "testing/test_runner_xunit.py",
      [
        "test_setup_teardown_function_level_with_optional_argument"
      ]
    ]
  ],
  "end": [
    [
      "testing/test_session.py",
      [
        "SessionTests",
        "test_basic_testitem_events",
        "end"
      ]
    ]
  ],
  "test_basic_testitem_events": [
    [
      "testing/test_session.py",
      [
        "SessionTests",
        "test_basic_testitem_events"
      ]
    ]
  ],
  "test_raises_output": [
    [
      "testing/test_session.py",
      [
        "SessionTests",
        "test_raises_output"
      ]
    ]
  ],
  "test_syntax_error_module": [
    [
      "testing/test_session.py",
      [
        "SessionTests",
        "test_syntax_error_module"
      ]
    ]
  ],
  "test_exit_first_problem": [
    [
      "testing/test_session.py",
      [
        "SessionTests",
        "test_exit_first_problem"
      ]
    ]
  ],
  "test_maxfail": [
    [
      "testing/test_session.py",
      [
        "SessionTests",
        "test_maxfail"
      ]
    ]
  ],
  "test_broken_repr": [
    [
      "testing/test_session.py",
      [
        "SessionTests",
        "test_broken_repr"
      ]
    ]
  ],
  "test_broken_repr_with_showlocals_verbose": [
    [
      "testing/test_session.py",
      [
        "SessionTests",
        "test_broken_repr_with_showlocals_verbose"
      ]
    ]
  ],
  "test_skip_file_by_conftest": [
    [
      "testing/test_session.py",
      [
        "SessionTests",
        "test_skip_file_by_conftest"
      ]
    ]
  ],
  "test_order_of_execution": [
    [
      "testing/test_session.py",
      [
        "TestNewSession",
        "test_order_of_execution"
      ]
    ]
  ],
  "test_collect_only_with_various_situations": [
    [
      "testing/test_session.py",
      [
        "TestNewSession",
        "test_collect_only_with_various_situations"
      ]
    ]
  ],
  "test_minus_x_import_error": [
    [
      "testing/test_session.py",
      [
        "TestNewSession",
        "test_minus_x_import_error"
      ]
    ]
  ],
  "test_minus_x_overridden_by_maxfail": [
    [
      "testing/test_session.py",
      [
        "TestNewSession",
        "test_minus_x_overridden_by_maxfail"
      ]
    ]
  ],
  "test_plugin_specify": [
    [
      "testing/test_session.py",
      [
        "test_plugin_specify"
      ]
    ]
  ],
  "test_plugin_already_exists": [
    [
      "testing/test_session.py",
      [
        "test_plugin_already_exists"
      ]
    ]
  ],
  "test_exclude": [
    [
      "testing/test_session.py",
      [
        "test_exclude"
      ]
    ]
  ],
  "test_exclude_glob": [
    [
      "testing/test_session.py",
      [
        "test_exclude_glob"
      ]
    ]
  ],
  "test_deselect": [
    [
      "testing/test_session.py",
      [
        "test_deselect"
      ]
    ]
  ],
  "test_sessionfinish_with_start": [
    [
      "testing/test_session.py",
      [
        "test_sessionfinish_with_start"
      ]
    ]
  ],
  "test_rootdir_option_arg": [
    [
      "testing/test_session.py",
      [
        "test_rootdir_option_arg"
      ]
    ]
  ],
  "test_rootdir_wrong_option_arg": [
    [
      "testing/test_session.py",
      [
        "test_rootdir_wrong_option_arg"
      ]
    ]
  ],
  "test_no_marker": [
    [
      "testing/test_skipping.py",
      [
        "TestEvaluator",
        "test_no_marker"
      ]
    ]
  ],
  "test_marked_no_args": [
    [
      "testing/test_skipping.py",
      [
        "TestEvaluator",
        "test_marked_no_args"
      ]
    ]
  ],
  "test_marked_one_arg": [
    [
      "testing/test_skipping.py",
      [
        "TestEvaluator",
        "test_marked_one_arg"
      ]
    ]
  ],
  "test_marked_one_arg_with_reason": [
    [
      "testing/test_skipping.py",
      [
        "TestEvaluator",
        "test_marked_one_arg_with_reason"
      ]
    ]
  ],
  "test_marked_one_arg_twice": [
    [
      "testing/test_skipping.py",
      [
        "TestEvaluator",
        "test_marked_one_arg_twice"
      ]
    ]
  ],
  "test_marked_one_arg_twice2": [
    [
      "testing/test_skipping.py",
      [
        "TestEvaluator",
        "test_marked_one_arg_twice2"
      ]
    ]
  ],
  "test_marked_skip_with_not_string": [
    [
      "testing/test_skipping.py",
      [
        "TestEvaluator",
        "test_marked_skip_with_not_string"
      ]
    ]
  ],
  "test_skipif_class": [
    [
      "testing/test_skipping.py",
      [
        "TestEvaluator",
        "test_skipif_class"
      ]
    ],
    [
      "testing/test_skipping.py",
      [
        "test_skipif_class"
      ]
    ]
  ],
  "test_xfail_simple": [
    [
      "testing/test_skipping.py",
      [
        "TestXFail",
        "test_xfail_simple"
      ]
    ]
  ],
  "test_xfail_xpassed": [
    [
      "testing/test_skipping.py",
      [
        "TestXFail",
        "test_xfail_xpassed"
      ]
    ]
  ],
  "test_xfail_using_platform": [
    [
      "testing/test_skipping.py",
      [
        "TestXFail",
        "test_xfail_using_platform"
      ]
    ]
  ],
  "test_xfail_xpassed_strict": [
    [
      "testing/test_skipping.py",
      [
        "TestXFail",
        "test_xfail_xpassed_strict"
      ]
    ]
  ],
  "test_xfail_run_anyway": [
    [
      "testing/test_skipping.py",
      [
        "TestXFail",
        "test_xfail_run_anyway"
      ]
    ]
  ],
  "test_xfail_evalfalse_but_fails": [
    [
      "testing/test_skipping.py",
      [
        "TestXFail",
        "test_xfail_evalfalse_but_fails"
      ]
    ]
  ],
  "test_xfail_not_report_default": [
    [
      "testing/test_skipping.py",
      [
        "TestXFail",
        "test_xfail_not_report_default"
      ]
    ]
  ],
  "test_xfail_not_run_xfail_reporting": [
    [
      "testing/test_skipping.py",
      [
        "TestXFail",
        "test_xfail_not_run_xfail_reporting"
      ]
    ]
  ],
  "test_xfail_not_run_no_setup_run": [
    [
      "testing/test_skipping.py",
      [
        "TestXFail",
        "test_xfail_not_run_no_setup_run"
      ]
    ]
  ],
  "test_xfail_xpass": [
    [
      "testing/test_skipping.py",
      [
        "TestXFail",
        "test_xfail_xpass"
      ]
    ]
  ],
  "test_xfail_imperative": [
    [
      "testing/test_skipping.py",
      [
        "TestXFail",
        "test_xfail_imperative"
      ]
    ]
  ],
  "test_xfail_imperative_in_setup_function": [
    [
      "testing/test_skipping.py",
      [
        "TestXFail",
        "test_xfail_imperative_in_setup_function"
      ]
    ]
  ],
  "xtest_dynamic_xfail_set_during_setup": [
    [
      "testing/test_skipping.py",
      [
        "TestXFail",
        "xtest_dynamic_xfail_set_during_setup"
      ]
    ]
  ],
  "test_dynamic_xfail_no_run": [
    [
      "testing/test_skipping.py",
      [
        "TestXFail",
        "test_dynamic_xfail_no_run"
      ]
    ]
  ],
  "test_dynamic_xfail_set_during_funcarg_setup": [
    [
      "testing/test_skipping.py",
      [
        "TestXFail",
        "test_dynamic_xfail_set_during_funcarg_setup"
      ]
    ]
  ],
  "test_xfail_raises": [
    [
      "testing/test_skipping.py",
      [
        "TestXFail",
        "test_xfail_raises"
      ]
    ]
  ],
  "test_strict_sanity": [
    [
      "testing/test_skipping.py",
      [
        "TestXFail",
        "test_strict_sanity"
      ]
    ]
  ],
  "test_strict_xfail": [
    [
      "testing/test_skipping.py",
      [
        "TestXFail",
        "test_strict_xfail"
      ]
    ]
  ],
  "test_strict_xfail_condition": [
    [
      "testing/test_skipping.py",
      [
        "TestXFail",
        "test_strict_xfail_condition"
      ]
    ]
  ],
  "test_xfail_condition_keyword": [
    [
      "testing/test_skipping.py",
      [
        "TestXFail",
        "test_xfail_condition_keyword"
      ]
    ]
  ],
  "test_strict_xfail_default_from_file": [
    [
      "testing/test_skipping.py",
      [
        "TestXFail",
        "test_strict_xfail_default_from_file"
      ]
    ]
  ],
  "test_failing_setup_issue9": [
    [
      "testing/test_skipping.py",
      [
        "TestXFailwithSetupTeardown",
        "test_failing_setup_issue9"
      ]
    ]
  ],
  "test_failing_teardown_issue9": [
    [
      "testing/test_skipping.py",
      [
        "TestXFailwithSetupTeardown",
        "test_failing_teardown_issue9"
      ]
    ]
  ],
  "test_skip_class": [
    [
      "testing/test_skipping.py",
      [
        "TestSkip",
        "test_skip_class"
      ]
    ]
  ],
  "test_skips_on_false_string": [
    [
      "testing/test_skipping.py",
      [
        "TestSkip",
        "test_skips_on_false_string"
      ]
    ]
  ],
  "test_arg_as_reason": [
    [
      "testing/test_skipping.py",
      [
        "TestSkip",
        "test_arg_as_reason"
      ]
    ]
  ],
  "test_skip_no_reason": [
    [
      "testing/test_skipping.py",
      [
        "TestSkip",
        "test_skip_no_reason"
      ]
    ]
  ],
  "test_skip_with_reason": [
    [
      "testing/test_skipping.py",
      [
        "TestSkip",
        "test_skip_with_reason"
      ]
    ]
  ],
  "test_only_skips_marked_test": [
    [
      "testing/test_skipping.py",
      [
        "TestSkip",
        "test_only_skips_marked_test"
      ]
    ]
  ],
  "test_strict_and_skip": [
    [
      "testing/test_skipping.py",
      [
        "TestSkip",
        "test_strict_and_skip"
      ]
    ]
  ],
  "test_skipif_conditional": [
    [
      "testing/test_skipping.py",
      [
        "TestSkipif",
        "test_skipif_conditional"
      ]
    ]
  ],
  "test_skipif_reporting": [
    [
      "testing/test_skipping.py",
      [
        "TestSkipif",
        "test_skipif_reporting"
      ]
    ]
  ],
  "test_skipif_using_platform": [
    [
      "testing/test_skipping.py",
      [
        "TestSkipif",
        "test_skipif_using_platform"
      ]
    ]
  ],
  "test_skipif_reporting_multiple": [
    [
      "testing/test_skipping.py",
      [
        "TestSkipif",
        "test_skipif_reporting_multiple"
      ]
    ]
  ],
  "test_skip_not_report_default": [
    [
      "testing/test_skipping.py",
      [
        "test_skip_not_report_default"
      ]
    ]
  ],
  "test_skipped_reasons_functional": [
    [
      "testing/test_skipping.py",
      [
        "test_skipped_reasons_functional"
      ]
    ]
  ],
  "test_skipped_folding": [
    [
      "testing/test_skipping.py",
      [
        "test_skipped_folding"
      ]
    ]
  ],
  "test_reportchars": [
    [
      "testing/test_skipping.py",
      [
        "test_reportchars"
      ]
    ]
  ],
  "test_reportchars_error": [
    [
      "testing/test_skipping.py",
      [
        "test_reportchars_error"
      ]
    ]
  ],
  "test_reportchars_all": [
    [
      "testing/test_skipping.py",
      [
        "test_reportchars_all"
      ]
    ]
  ],
  "test_reportchars_all_error": [
    [
      "testing/test_skipping.py",
      [
        "test_reportchars_all_error"
      ]
    ]
  ],
  "test_errors_in_xfail_skip_expressions": [
    [
      "testing/test_skipping.py",
      [
        "test_errors_in_xfail_skip_expressions"
      ]
    ]
  ],
  "test_xfail_skipif_with_globals": [
    [
      "testing/test_skipping.py",
      [
        "test_xfail_skipif_with_globals"
      ]
    ]
  ],
  "test_direct_gives_error": [
    [
      "testing/test_skipping.py",
      [
        "test_direct_gives_error"
      ]
    ]
  ],
  "test_xfail_test_setup_exception": [
    [
      "testing/test_skipping.py",
      [
        "test_xfail_test_setup_exception"
      ]
    ]
  ],
  "test_imperativeskip_on_xfail_test": [
    [
      "testing/test_skipping.py",
      [
        "test_imperativeskip_on_xfail_test"
      ]
    ]
  ],
  "test_skipif": [
    [
      "testing/test_skipping.py",
      [
        "TestBooleanCondition",
        "test_skipif"
      ]
    ]
  ],
  "test_skipif_noreason": [
    [
      "testing/test_skipping.py",
      [
        "TestBooleanCondition",
        "test_skipif_noreason"
      ]
    ]
  ],
  "test_xfail": [
    [
      "testing/test_skipping.py",
      [
        "TestBooleanCondition",
        "test_xfail"
      ]
    ]
  ],
  "test_xfail_item": [
    [
      "testing/test_skipping.py",
      [
        "test_xfail_item"
      ]
    ]
  ],
  "test_module_level_skip_error": [
    [
      "testing/test_skipping.py",
      [
        "test_module_level_skip_error"
      ]
    ]
  ],
  "test_module_level_skip_with_allow_module_level": [
    [
      "testing/test_skipping.py",
      [
        "test_module_level_skip_with_allow_module_level"
      ]
    ]
  ],
  "test_invalid_skip_keyword_parameter": [
    [
      "testing/test_skipping.py",
      [
        "test_invalid_skip_keyword_parameter"
      ]
    ]
  ],
  "test_mark_xfail_item": [
    [
      "testing/test_skipping.py",
      [
        "test_mark_xfail_item"
      ]
    ]
  ],
  "test_summary_list_after_errors": [
    [
      "testing/test_skipping.py",
      [
        "test_summary_list_after_errors"
      ]
    ]
  ],
  "stepwise_testdir": [
    [
      "testing/test_stepwise.py",
      [
        "stepwise_testdir"
      ]
    ]
  ],
  "error_testdir": [
    [
      "testing/test_stepwise.py",
      [
        "error_testdir"
      ]
    ]
  ],
  "broken_testdir": [
    [
      "testing/test_stepwise.py",
      [
        "broken_testdir"
      ]
    ]
  ],
  "test_run_without_stepwise": [
    [
      "testing/test_stepwise.py",
      [
        "test_run_without_stepwise"
      ]
    ]
  ],
  "test_fail_and_continue_with_stepwise": [
    [
      "testing/test_stepwise.py",
      [
        "test_fail_and_continue_with_stepwise"
      ]
    ]
  ],
  "test_run_with_skip_option": [
    [
      "testing/test_stepwise.py",
      [
        "test_run_with_skip_option"
      ]
    ]
  ],
  "test_fail_on_errors": [
    [
      "testing/test_stepwise.py",
      [
        "test_fail_on_errors"
      ]
    ]
  ],
  "test_change_testfile": [
    [
      "testing/test_stepwise.py",
      [
        "test_change_testfile"
      ]
    ]
  ],
  "test_stop_on_collection_errors": [
    [
      "testing/test_stepwise.py",
      [
        "test_stop_on_collection_errors"
      ]
    ]
  ],
  "test_xfail_handling": [
    [
      "testing/test_stepwise.py",
      [
        "test_xfail_handling"
      ]
    ]
  ],
  "args": [
    [
      "testing/test_terminal.py",
      [
        "Option",
        "args"
      ]
    ]
  ],
  "option": [
    [
      "testing/test_terminal.py",
      [
        "option"
      ]
    ],
    [
      "testing/test_tmpdir.py",
      [
        "FakeConfig",
        "option"
      ]
    ]
  ],
  "test_plugin_nameversion": [
    [
      "testing/test_terminal.py",
      [
        "test_plugin_nameversion"
      ]
    ]
  ],
  "test_pass_skip_fail": [
    [
      "testing/test_terminal.py",
      [
        "TestTerminal",
        "test_pass_skip_fail"
      ]
    ]
  ],
  "test_internalerror": [
    [
      "testing/test_terminal.py",
      [
        "TestTerminal",
        "test_internalerror"
      ]
    ]
  ],
  "test_writeline": [
    [
      "testing/test_terminal.py",
      [
        "TestTerminal",
        "test_writeline"
      ]
    ]
  ],
  "test_show_runtest_logstart": [
    [
      "testing/test_terminal.py",
      [
        "TestTerminal",
        "test_show_runtest_logstart"
      ]
    ]
  ],
  "test_runtest_location_shown_before_test_starts": [
    [
      "testing/test_terminal.py",
      [
        "TestTerminal",
        "test_runtest_location_shown_before_test_starts"
      ]
    ]
  ],
  "test_report_collect_after_half_a_second": [
    [
      "testing/test_terminal.py",
      [
        "TestTerminal",
        "test_report_collect_after_half_a_second"
      ]
    ]
  ],
  "test_itemreport_subclasses_show_subclassed_file": [
    [
      "testing/test_terminal.py",
      [
        "TestTerminal",
        "test_itemreport_subclasses_show_subclassed_file"
      ]
    ]
  ],
  "test_itemreport_directclasses_not_shown_as_subclasses": [
    [
      "testing/test_terminal.py",
      [
        "TestTerminal",
        "test_itemreport_directclasses_not_shown_as_subclasses"
      ]
    ]
  ],
  "test_keyboard_interrupt": [
    [
      "testing/test_terminal.py",
      [
        "TestTerminal",
        "test_keyboard_interrupt"
      ]
    ]
  ],
  "test_keyboard_in_sessionstart": [
    [
      "testing/test_terminal.py",
      [
        "TestTerminal",
        "test_keyboard_in_sessionstart"
      ]
    ]
  ],
  "test_collect_single_item": [
    [
      "testing/test_terminal.py",
      [
        "TestTerminal",
        "test_collect_single_item"
      ]
    ]
  ],
  "test_rewrite": [
    [
      "testing/test_terminal.py",
      [
        "TestTerminal",
        "test_rewrite"
      ]
    ]
  ],
  "test_collectonly_basic": [
    [
      "testing/test_terminal.py",
      [
        "TestCollectonly",
        "test_collectonly_basic"
      ]
    ]
  ],
  "test_collectonly_skipped_module": [
    [
      "testing/test_terminal.py",
      [
        "TestCollectonly",
        "test_collectonly_skipped_module"
      ]
    ]
  ],
  "test_collectonly_display_test_description": [
    [
      "testing/test_terminal.py",
      [
        "TestCollectonly",
        "test_collectonly_display_test_description"
      ]
    ]
  ],
  "test_collectonly_failed_module": [
    [
      "testing/test_terminal.py",
      [
        "TestCollectonly",
        "test_collectonly_failed_module"
      ]
    ]
  ],
  "test_collectonly_fatal": [
    [
      "testing/test_terminal.py",
      [
        "TestCollectonly",
        "test_collectonly_fatal"
      ]
    ]
  ],
  "test_collectonly_simple": [
    [
      "testing/test_terminal.py",
      [
        "TestCollectonly",
        "test_collectonly_simple"
      ]
    ]
  ],
  "test_collectonly_error": [
    [
      "testing/test_terminal.py",
      [
        "TestCollectonly",
        "test_collectonly_error"
      ]
    ]
  ],
  "test_collectonly_missing_path": [
    [
      "testing/test_terminal.py",
      [
        "TestCollectonly",
        "test_collectonly_missing_path"
      ]
    ]
  ],
  "test_collectonly_quiet": [
    [
      "testing/test_terminal.py",
      [
        "TestCollectonly",
        "test_collectonly_quiet"
      ]
    ]
  ],
  "test_collectonly_more_quiet": [
    [
      "testing/test_terminal.py",
      [
        "TestCollectonly",
        "test_collectonly_more_quiet"
      ]
    ]
  ],
  "test_setup_fixture_error": [
    [
      "testing/test_terminal.py",
      [
        "TestFixtureReporting",
        "test_setup_fixture_error"
      ]
    ]
  ],
  "test_teardown_fixture_error": [
    [
      "testing/test_terminal.py",
      [
        "TestFixtureReporting",
        "test_teardown_fixture_error"
      ]
    ]
  ],
  "test_teardown_fixture_error_and_test_failure": [
    [
      "testing/test_terminal.py",
      [
        "TestFixtureReporting",
        "test_teardown_fixture_error_and_test_failure"
      ]
    ]
  ],
  "test_setup_teardown_output_and_test_failure": [
    [
      "testing/test_terminal.py",
      [
        "TestFixtureReporting",
        "test_setup_teardown_output_and_test_failure"
      ]
    ]
  ],
  "test_deselected": [
    [
      "testing/test_terminal.py",
      [
        "TestTerminalFunctional",
        "test_deselected"
      ]
    ]
  ],
  "test_deselected_with_hookwrapper": [
    [
      "testing/test_terminal.py",
      [
        "TestTerminalFunctional",
        "test_deselected_with_hookwrapper"
      ]
    ]
  ],
  "test_show_deselected_items_using_markexpr_before_test_execution": [
    [
      "testing/test_terminal.py",
      [
        "TestTerminalFunctional",
        "test_show_deselected_items_using_markexpr_before_test_execution"
      ]
    ]
  ],
  "test_no_skip_summary_if_failure": [
    [
      "testing/test_terminal.py",
      [
        "TestTerminalFunctional",
        "test_no_skip_summary_if_failure"
      ]
    ]
  ],
  "test_passes": [
    [
      "testing/test_terminal.py",
      [
        "TestTerminalFunctional",
        "test_passes"
      ]
    ]
  ],
  "test_header_trailer_info": [
    [
      "testing/test_terminal.py",
      [
        "TestTerminalFunctional",
        "test_header_trailer_info"
      ]
    ]
  ],
  "test_header": [
    [
      "testing/test_terminal.py",
      [
        "TestTerminalFunctional",
        "test_header"
      ]
    ]
  ],
  "test_showlocals": [
    [
      "testing/test_terminal.py",
      [
        "TestTerminalFunctional",
        "test_showlocals"
      ]
    ]
  ],
  "verbose_testfile": [
    [
      "testing/test_terminal.py",
      [
        "TestTerminalFunctional",
        "verbose_testfile"
      ]
    ]
  ],
  "test_verbose_reporting": [
    [
      "testing/test_terminal.py",
      [
        "TestTerminalFunctional",
        "test_verbose_reporting"
      ]
    ]
  ],
  "test_verbose_reporting_xdist": [
    [
      "testing/test_terminal.py",
      [
        "TestTerminalFunctional",
        "test_verbose_reporting_xdist"
      ]
    ]
  ],
  "test_quiet_reporting": [
    [
      "testing/test_terminal.py",
      [
        "TestTerminalFunctional",
        "test_quiet_reporting"
      ]
    ]
  ],
  "test_more_quiet_reporting": [
    [
      "testing/test_terminal.py",
      [
        "TestTerminalFunctional",
        "test_more_quiet_reporting"
      ]
    ]
  ],
  "test_report_collectionfinish_hook": [
    [
      "testing/test_terminal.py",
      [
        "TestTerminalFunctional",
        "test_report_collectionfinish_hook"
      ]
    ]
  ],
  "test_fail_extra_reporting": [
    [
      "testing/test_terminal.py",
      [
        "test_fail_extra_reporting"
      ]
    ]
  ],
  "test_fail_reporting_on_pass": [
    [
      "testing/test_terminal.py",
      [
        "test_fail_reporting_on_pass"
      ]
    ]
  ],
  "test_pass_extra_reporting": [
    [
      "testing/test_terminal.py",
      [
        "test_pass_extra_reporting"
      ]
    ]
  ],
  "test_pass_reporting_on_fail": [
    [
      "testing/test_terminal.py",
      [
        "test_pass_reporting_on_fail"
      ]
    ]
  ],
  "test_pass_output_reporting": [
    [
      "testing/test_terminal.py",
      [
        "test_pass_output_reporting"
      ]
    ]
  ],
  "test_color_yes": [
    [
      "testing/test_terminal.py",
      [
        "test_color_yes"
      ]
    ]
  ],
  "test_color_no": [
    [
      "testing/test_terminal.py",
      [
        "test_color_no"
      ]
    ]
  ],
  "test_color_yes_collection_on_non_atty": [
    [
      "testing/test_terminal.py",
      [
        "test_color_yes_collection_on_non_atty"
      ]
    ]
  ],
  "test_getreportopt": [
    [
      "testing/test_terminal.py",
      [
        "test_getreportopt"
      ]
    ]
  ],
  "test_terminalreporter_reportopt_addopts": [
    [
      "testing/test_terminal.py",
      [
        "test_terminalreporter_reportopt_addopts"
      ]
    ]
  ],
  "test_tbstyle_short": [
    [
      "testing/test_terminal.py",
      [
        "test_tbstyle_short"
      ]
    ]
  ],
  "test_collect_fail": [
    [
      "testing/test_terminal.py",
      [
        "TestGenericReporting",
        "test_collect_fail"
      ]
    ]
  ],
  "test_maxfailures": [
    [
      "testing/test_terminal.py",
      [
        "TestGenericReporting",
        "test_maxfailures"
      ]
    ]
  ],
  "test_tb_option": [
    [
      "testing/test_terminal.py",
      [
        "TestGenericReporting",
        "test_tb_option"
      ]
    ]
  ],
  "test_tb_crashline": [
    [
      "testing/test_terminal.py",
      [
        "TestGenericReporting",
        "test_tb_crashline"
      ]
    ]
  ],
  "test_pytest_report_header": [
    [
      "testing/test_terminal.py",
      [
        "TestGenericReporting",
        "test_pytest_report_header"
      ]
    ]
  ],
  "test_show_capture": [
    [
      "testing/test_terminal.py",
      [
        "TestGenericReporting",
        "test_show_capture"
      ]
    ]
  ],
  "test_show_capture_with_teardown_logs": [
    [
      "testing/test_terminal.py",
      [
        "TestGenericReporting",
        "test_show_capture_with_teardown_logs"
      ]
    ]
  ],
  "test_fdopen_kept_alive_issue124": [
    [
      "testing/test_terminal.py",
      [
        "test_fdopen_kept_alive_issue124"
      ]
    ]
  ],
  "test_tbstyle_native_setup_error": [
    [
      "testing/test_terminal.py",
      [
        "test_tbstyle_native_setup_error"
      ]
    ]
  ],
  "test_terminal_summary": [
    [
      "testing/test_terminal.py",
      [
        "test_terminal_summary"
      ]
    ]
  ],
  "test_terminal_summary_warnings_are_displayed": [
    [
      "testing/test_terminal.py",
      [
        "test_terminal_summary_warnings_are_displayed"
      ]
    ]
  ],
  "test_terminal_summary_warnings_header_once": [
    [
      "testing/test_terminal.py",
      [
        "test_terminal_summary_warnings_header_once"
      ]
    ]
  ],
  "test_summary_stats": [
    [
      "testing/test_terminal.py",
      [
        "test_summary_stats"
      ]
    ]
  ],
  "test_skip_counting_towards_summary": [
    [
      "testing/test_terminal.py",
      [
        "test_skip_counting_towards_summary"
      ]
    ]
  ],
  "test_files": [
    [
      "testing/test_terminal.py",
      [
        "TestClassicOutputStyle",
        "test_files"
      ]
    ]
  ],
  "test_normal_verbosity": [
    [
      "testing/test_terminal.py",
      [
        "TestClassicOutputStyle",
        "test_normal_verbosity"
      ]
    ]
  ],
  "test_verbose": [
    [
      "testing/test_terminal.py",
      [
        "TestClassicOutputStyle",
        "test_verbose"
      ]
    ],
    [
      "testing/test_terminal.py",
      [
        "TestProgressOutputStyle",
        "test_verbose"
      ]
    ]
  ],
  "test_quiet": [
    [
      "testing/test_terminal.py",
      [
        "TestClassicOutputStyle",
        "test_quiet"
      ]
    ]
  ],
  "many_tests_files": [
    [
      "testing/test_terminal.py",
      [
        "TestProgressOutputStyle",
        "many_tests_files"
      ]
    ]
  ],
  "test_zero_tests_collected": [
    [
      "testing/test_terminal.py",
      [
        "TestProgressOutputStyle",
        "test_zero_tests_collected"
      ]
    ]
  ],
  "test_normal": [
    [
      "testing/test_terminal.py",
      [
        "TestProgressOutputStyle",
        "test_normal"
      ]
    ]
  ],
  "test_count": [
    [
      "testing/test_terminal.py",
      [
        "TestProgressOutputStyle",
        "test_count"
      ]
    ]
  ],
  "test_verbose_count": [
    [
      "testing/test_terminal.py",
      [
        "TestProgressOutputStyle",
        "test_verbose_count"
      ]
    ]
  ],
  "test_xdist_normal": [
    [
      "testing/test_terminal.py",
      [
        "TestProgressOutputStyle",
        "test_xdist_normal"
      ]
    ],
    [
      "testing/test_terminal.py",
      [
        "TestProgressWithTeardown",
        "test_xdist_normal"
      ]
    ]
  ],
  "test_xdist_normal_count": [
    [
      "testing/test_terminal.py",
      [
        "TestProgressOutputStyle",
        "test_xdist_normal_count"
      ]
    ]
  ],
  "test_xdist_verbose": [
    [
      "testing/test_terminal.py",
      [
        "TestProgressOutputStyle",
        "test_xdist_verbose"
      ]
    ]
  ],
  "test_capture_no": [
    [
      "testing/test_terminal.py",
      [
        "TestProgressOutputStyle",
        "test_capture_no"
      ]
    ]
  ],
  "contest_with_teardown_fixture": [
    [
      "testing/test_terminal.py",
      [
        "TestProgressWithTeardown",
        "contest_with_teardown_fixture"
      ]
    ]
  ],
  "many_files": [
    [
      "testing/test_terminal.py",
      [
        "TestProgressWithTeardown",
        "many_files"
      ]
    ]
  ],
  "test_teardown_simple": [
    [
      "testing/test_terminal.py",
      [
        "TestProgressWithTeardown",
        "test_teardown_simple"
      ]
    ]
  ],
  "test_teardown_with_test_also_failing": [
    [
      "testing/test_terminal.py",
      [
        "TestProgressWithTeardown",
        "test_teardown_with_test_also_failing"
      ]
    ]
  ],
  "test_teardown_many": [
    [
      "testing/test_terminal.py",
      [
        "TestProgressWithTeardown",
        "test_teardown_many"
      ]
    ]
  ],
  "test_teardown_many_verbose": [
    [
      "testing/test_terminal.py",
      [
        "TestProgressWithTeardown",
        "test_teardown_many_verbose"
      ]
    ]
  ],
  "test_skip_reasons_folding": [
    [
      "testing/test_terminal.py",
      [
        "test_skip_reasons_folding"
      ]
    ]
  ],
  "mock_get_pos": [
    [
      "testing/test_terminal.py",
      [
        "test_line_with_reprcrash",
        "mock_get_pos"
      ]
    ]
  ],
  "check": [
    [
      "testing/test_terminal.py",
      [
        "test_line_with_reprcrash",
        "check"
      ]
    ]
  ],
  "test_line_with_reprcrash": [
    [
      "testing/test_terminal.py",
      [
        "test_line_with_reprcrash"
      ]
    ]
  ],
  "test_format_session_duration": [
    [
      "testing/test_terminal.py",
      [
        "test_format_session_duration"
      ]
    ]
  ],
  "test_tmpdir_fixture": [
    [
      "testing/test_tmpdir.py",
      [
        "test_tmpdir_fixture"
      ]
    ]
  ],
  "trace": [
    [
      "testing/test_tmpdir.py",
      [
        "FakeConfig",
        "trace"
      ]
    ]
  ],
  "test_mktemp": [
    [
      "testing/test_tmpdir.py",
      [
        "TestTempdirHandler",
        "test_mktemp"
      ]
    ]
  ],
  "test_tmppath_relative_basetemp_absolute": [
    [
      "testing/test_tmpdir.py",
      [
        "TestTempdirHandler",
        "test_tmppath_relative_basetemp_absolute"
      ]
    ]
  ],
  "test_getbasetemp_custom_removes_old": [
    [
      "testing/test_tmpdir.py",
      [
        "TestConfigTmpdir",
        "test_getbasetemp_custom_removes_old"
      ]
    ]
  ],
  "test_basetemp": [
    [
      "testing/test_tmpdir.py",
      [
        "test_basetemp"
      ]
    ]
  ],
  "test_tmpdir_always_is_realpath": [
    [
      "testing/test_tmpdir.py",
      [
        "test_tmpdir_always_is_realpath"
      ]
    ]
  ],
  "test_tmp_path_always_is_realpath": [
    [
      "testing/test_tmpdir.py",
      [
        "test_tmp_path_always_is_realpath"
      ]
    ]
  ],
  "test_tmpdir_too_long_on_parametrization": [
    [
      "testing/test_tmpdir.py",
      [
        "test_tmpdir_too_long_on_parametrization"
      ]
    ]
  ],
  "test_tmpdir_factory": [
    [
      "testing/test_tmpdir.py",
      [
        "test_tmpdir_factory"
      ]
    ]
  ],
  "test_tmpdir_fallback_tox_env": [
    [
      "testing/test_tmpdir.py",
      [
        "test_tmpdir_fallback_tox_env"
      ]
    ]
  ],
  "break_getuser": [
    [
      "testing/test_tmpdir.py",
      [
        "break_getuser"
      ]
    ]
  ],
  "test_tmpdir_fallback_uid_not_found": [
    [
      "testing/test_tmpdir.py",
      [
        "test_tmpdir_fallback_uid_not_found"
      ]
    ]
  ],
  "test_get_user_uid_not_found": [
    [
      "testing/test_tmpdir.py",
      [
        "test_get_user_uid_not_found"
      ]
    ]
  ],
  "test_get_user": [
    [
      "testing/test_tmpdir.py",
      [
        "test_get_user"
      ]
    ]
  ],
  "test_make": [
    [
      "testing/test_tmpdir.py",
      [
        "TestNumberedDir",
        "test_make"
      ]
    ]
  ],
  "test_cleanup_lock_create": [
    [
      "testing/test_tmpdir.py",
      [
        "TestNumberedDir",
        "test_cleanup_lock_create"
      ]
    ]
  ],
  "test_lock_register_cleanup_removal": [
    [
      "testing/test_tmpdir.py",
      [
        "TestNumberedDir",
        "test_lock_register_cleanup_removal"
      ]
    ]
  ],
  "_do_cleanup": [
    [
      "testing/test_tmpdir.py",
      [
        "TestNumberedDir",
        "_do_cleanup"
      ]
    ]
  ],
  "test_cleanup_keep": [
    [
      "testing/test_tmpdir.py",
      [
        "TestNumberedDir",
        "test_cleanup_keep"
      ]
    ]
  ],
  "test_cleanup_locked": [
    [
      "testing/test_tmpdir.py",
      [
        "TestNumberedDir",
        "test_cleanup_locked"
      ]
    ]
  ],
  "test_cleanup_ignores_symlink": [
    [
      "testing/test_tmpdir.py",
      [
        "TestNumberedDir",
        "test_cleanup_ignores_symlink"
      ]
    ]
  ],
  "test_removal_accepts_lock": [
    [
      "testing/test_tmpdir.py",
      [
        "TestNumberedDir",
        "test_removal_accepts_lock"
      ]
    ]
  ],
  "test_rm_rf": [
    [
      "testing/test_tmpdir.py",
      [
        "TestRmRf",
        "test_rm_rf"
      ]
    ]
  ],
  "test_rm_rf_with_read_only_file": [
    [
      "testing/test_tmpdir.py",
      [
        "TestRmRf",
        "test_rm_rf_with_read_only_file"
      ]
    ]
  ],
  "chmod_r": [
    [
      "testing/test_tmpdir.py",
      [
        "TestRmRf",
        "chmod_r"
      ]
    ]
  ],
  "test_rm_rf_with_read_only_directory": [
    [
      "testing/test_tmpdir.py",
      [
        "TestRmRf",
        "test_rm_rf_with_read_only_directory"
      ]
    ]
  ],
  "test_on_rm_rf_error": [
    [
      "testing/test_tmpdir.py",
      [
        "TestRmRf",
        "test_on_rm_rf_error"
      ]
    ]
  ],
  "attempt_symlink_to": [
    [
      "testing/test_tmpdir.py",
      [
        "attempt_symlink_to"
      ]
    ]
  ],
  "test_tmpdir_equals_tmp_path": [
    [
      "testing/test_tmpdir.py",
      [
        "test_tmpdir_equals_tmp_path"
      ]
    ]
  ],
  "test_basetemp_with_read_only_files": [
    [
      "testing/test_tmpdir.py",
      [
        "test_basetemp_with_read_only_files"
      ]
    ]
  ],
  "test_simple_unittest": [
    [
      "testing/test_unittest.py",
      [
        "test_simple_unittest"
      ]
    ]
  ],
  "test_runTest_method": [
    [
      "testing/test_unittest.py",
      [
        "test_runTest_method"
      ]
    ]
  ],
  "test_isclasscheck_issue53": [
    [
      "testing/test_unittest.py",
      [
        "test_isclasscheck_issue53"
      ]
    ]
  ],
  "test_setUpModule": [
    [
      "testing/test_unittest.py",
      [
        "test_setUpModule"
      ]
    ]
  ],
  "test_setUpModule_failing_no_teardown": [
    [
      "testing/test_unittest.py",
      [
        "test_setUpModule_failing_no_teardown"
      ]
    ]
  ],
  "test_new_instances": [
    [
      "testing/test_unittest.py",
      [
        "test_new_instances"
      ]
    ]
  ],
  "test_function_item_obj_is_instance": [
    [
      "testing/test_unittest.py",
      [
        "test_function_item_obj_is_instance"
      ]
    ]
  ],
  "test_teardown": [
    [
      "testing/test_unittest.py",
      [
        "test_teardown"
      ]
    ]
  ],
  "test_teardown_issue1649": [
    [
      "testing/test_unittest.py",
      [
        "test_teardown_issue1649"
      ]
    ]
  ],
  "test_unittest_skip_issue148": [
    [
      "testing/test_unittest.py",
      [
        "test_unittest_skip_issue148"
      ]
    ]
  ],
  "test_method_and_teardown_failing_reporting": [
    [
      "testing/test_unittest.py",
      [
        "test_method_and_teardown_failing_reporting"
      ]
    ]
  ],
  "test_setup_failure_is_shown": [
    [
      "testing/test_unittest.py",
      [
        "test_setup_failure_is_shown"
      ]
    ]
  ],
  "test_setup_setUpClass": [
    [
      "testing/test_unittest.py",
      [
        "test_setup_setUpClass"
      ]
    ]
  ],
  "test_setup_class": [
    [
      "testing/test_unittest.py",
      [
        "test_setup_class"
      ]
    ]
  ],
  "test_testcase_adderrorandfailure_defers": [
    [
      "testing/test_unittest.py",
      [
        "test_testcase_adderrorandfailure_defers"
      ]
    ]
  ],
  "test_testcase_custom_exception_info": [
    [
      "testing/test_unittest.py",
      [
        "test_testcase_custom_exception_info"
      ]
    ]
  ],
  "test_testcase_totally_incompatible_exception_info": [
    [
      "testing/test_unittest.py",
      [
        "test_testcase_totally_incompatible_exception_info"
      ]
    ]
  ],
  "test_module_level_pytestmark": [
    [
      "testing/test_unittest.py",
      [
        "test_module_level_pytestmark"
      ]
    ]
  ],
  "test_trial_testcase_runtest_not_collected": [
    [
      "testing/test_unittest.py",
      [
        "TestTrialUnittest",
        "test_trial_testcase_runtest_not_collected"
      ]
    ]
  ],
  "test_trial_exceptions_with_skips": [
    [
      "testing/test_unittest.py",
      [
        "TestTrialUnittest",
        "test_trial_exceptions_with_skips"
      ]
    ]
  ],
  "test_trial_error": [
    [
      "testing/test_unittest.py",
      [
        "TestTrialUnittest",
        "test_trial_error"
      ]
    ]
  ],
  "test_trial_pdb": [
    [
      "testing/test_unittest.py",
      [
        "TestTrialUnittest",
        "test_trial_pdb"
      ]
    ]
  ],
  "test_trial_testcase_skip_property": [
    [
      "testing/test_unittest.py",
      [
        "TestTrialUnittest",
        "test_trial_testcase_skip_property"
      ]
    ]
  ],
  "test_trial_testfunction_skip_property": [
    [
      "testing/test_unittest.py",
      [
        "TestTrialUnittest",
        "test_trial_testfunction_skip_property"
      ]
    ]
  ],
  "test_trial_testcase_todo_property": [
    [
      "testing/test_unittest.py",
      [
        "TestTrialUnittest",
        "test_trial_testcase_todo_property"
      ]
    ]
  ],
  "test_trial_testfunction_todo_property": [
    [
      "testing/test_unittest.py",
      [
        "TestTrialUnittest",
        "test_trial_testfunction_todo_property"
      ]
    ]
  ],
  "test_djangolike_testcase": [
    [
      "testing/test_unittest.py",
      [
        "test_djangolike_testcase"
      ]
    ]
  ],
  "test_unittest_not_shown_in_traceback": [
    [
      "testing/test_unittest.py",
      [
        "test_unittest_not_shown_in_traceback"
      ]
    ]
  ],
  "test_unittest_typerror_traceback": [
    [
      "testing/test_unittest.py",
      [
        "test_unittest_typerror_traceback"
      ]
    ]
  ],
  "test_unittest_expected_failure_for_failing_test_is_xfail": [
    [
      "testing/test_unittest.py",
      [
        "test_unittest_expected_failure_for_failing_test_is_xfail"
      ]
    ]
  ],
  "test_unittest_expected_failure_for_passing_test_is_fail": [
    [
      "testing/test_unittest.py",
      [
        "test_unittest_expected_failure_for_passing_test_is_fail"
      ]
    ]
  ],
  "test_unittest_setup_interaction": [
    [
      "testing/test_unittest.py",
      [
        "test_unittest_setup_interaction"
      ]
    ]
  ],
  "test_non_unittest_no_setupclass_support": [
    [
      "testing/test_unittest.py",
      [
        "test_non_unittest_no_setupclass_support"
      ]
    ]
  ],
  "test_no_teardown_if_setupclass_failed": [
    [
      "testing/test_unittest.py",
      [
        "test_no_teardown_if_setupclass_failed"
      ]
    ]
  ],
  "test_issue333_result_clearing": [
    [
      "testing/test_unittest.py",
      [
        "test_issue333_result_clearing"
      ]
    ]
  ],
  "test_unittest_raise_skip_issue748": [
    [
      "testing/test_unittest.py",
      [
        "test_unittest_raise_skip_issue748"
      ]
    ]
  ],
  "test_unittest_skip_issue1169": [
    [
      "testing/test_unittest.py",
      [
        "test_unittest_skip_issue1169"
      ]
    ]
  ],
  "test_class_method_containing_test_issue1558": [
    [
      "testing/test_unittest.py",
      [
        "test_class_method_containing_test_issue1558"
      ]
    ]
  ],
  "test_usefixtures_marker_on_unittest": [
    [
      "testing/test_unittest.py",
      [
        "test_usefixtures_marker_on_unittest"
      ]
    ]
  ],
  "test_testcase_handles_init_exceptions": [
    [
      "testing/test_unittest.py",
      [
        "test_testcase_handles_init_exceptions"
      ]
    ]
  ],
  "test_error_message_with_parametrized_fixtures": [
    [
      "testing/test_unittest.py",
      [
        "test_error_message_with_parametrized_fixtures"
      ]
    ]
  ],
  "test_setup_inheritance_skipping": [
    [
      "testing/test_unittest.py",
      [
        "test_setup_inheritance_skipping"
      ]
    ]
  ],
  "test_BdbQuit": [
    [
      "testing/test_unittest.py",
      [
        "test_BdbQuit"
      ]
    ]
  ],
  "test_exit_outcome": [
    [
      "testing/test_unittest.py",
      [
        "test_exit_outcome"
      ]
    ]
  ],
  "test_warning_types": [
    [
      "testing/test_warning_types.py",
      [
        "test_warning_types"
      ]
    ]
  ],
  "test_pytest_warnings_repr_integration_test": [
    [
      "testing/test_warning_types.py",
      [
        "test_pytest_warnings_repr_integration_test"
      ]
    ]
  ],
  "pyfile_with_warnings": [
    [
      "testing/test_warnings.py",
      [
        "pyfile_with_warnings"
      ]
    ]
  ],
  "test_normal_flow": [
    [
      "testing/test_warnings.py",
      [
        "test_normal_flow"
      ]
    ]
  ],
  "test_setup_teardown_warnings": [
    [
      "testing/test_warnings.py",
      [
        "test_setup_teardown_warnings"
      ]
    ]
  ],
  "test_as_errors": [
    [
      "testing/test_warnings.py",
      [
        "test_as_errors"
      ]
    ]
  ],
  "test_ignore": [
    [
      "testing/test_warnings.py",
      [
        "test_ignore"
      ]
    ]
  ],
  "test_works_with_filterwarnings": [
    [
      "testing/test_warnings.py",
      [
        "test_works_with_filterwarnings"
      ]
    ]
  ],
  "test_filterwarnings_mark": [
    [
      "testing/test_warnings.py",
      [
        "test_filterwarnings_mark"
      ]
    ]
  ],
  "test_non_string_warning_argument": [
    [
      "testing/test_warnings.py",
      [
        "test_non_string_warning_argument"
      ]
    ]
  ],
  "test_filterwarnings_mark_registration": [
    [
      "testing/test_warnings.py",
      [
        "test_filterwarnings_mark_registration"
      ]
    ]
  ],
  "test_warning_captured_hook": [
    [
      "testing/test_warnings.py",
      [
        "test_warning_captured_hook"
      ]
    ]
  ],
  "test_collection_warnings": [
    [
      "testing/test_warnings.py",
      [
        "test_collection_warnings"
      ]
    ]
  ],
  "test_mark_regex_escape": [
    [
      "testing/test_warnings.py",
      [
        "test_mark_regex_escape"
      ]
    ]
  ],
  "test_hide_pytest_internal_warnings": [
    [
      "testing/test_warnings.py",
      [
        "test_hide_pytest_internal_warnings"
      ]
    ]
  ],
  "test_option_precedence_cmdline_over_ini": [
    [
      "testing/test_warnings.py",
      [
        "test_option_precedence_cmdline_over_ini"
      ]
    ]
  ],
  "test_option_precedence_mark": [
    [
      "testing/test_warnings.py",
      [
        "test_option_precedence_mark"
      ]
    ]
  ],
  "create_file": [
    [
      "testing/test_warnings.py",
      [
        "TestDeprecationWarningsByDefault",
        "create_file"
      ]
    ],
    [
      "testing/test_warnings.py",
      [
        "TestAssertionWarnings",
        "create_file"
      ]
    ]
  ],
  "test_shown_by_default": [
    [
      "testing/test_warnings.py",
      [
        "TestDeprecationWarningsByDefault",
        "test_shown_by_default"
      ]
    ]
  ],
  "test_hidden_by_ini": [
    [
      "testing/test_warnings.py",
      [
        "TestDeprecationWarningsByDefault",
        "test_hidden_by_ini"
      ]
    ]
  ],
  "test_hidden_by_mark": [
    [
      "testing/test_warnings.py",
      [
        "TestDeprecationWarningsByDefault",
        "test_hidden_by_mark"
      ]
    ]
  ],
  "test_hidden_by_cmdline": [
    [
      "testing/test_warnings.py",
      [
        "TestDeprecationWarningsByDefault",
        "test_hidden_by_cmdline"
      ]
    ]
  ],
  "test_hidden_by_system": [
    [
      "testing/test_warnings.py",
      [
        "TestDeprecationWarningsByDefault",
        "test_hidden_by_system"
      ]
    ]
  ],
  "test_deprecation_warning_as_error": [
    [
      "testing/test_warnings.py",
      [
        "test_deprecation_warning_as_error"
      ]
    ]
  ],
  "assert_result_warns": [
    [
      "testing/test_warnings.py",
      [
        "TestAssertionWarnings",
        "assert_result_warns"
      ]
    ]
  ],
  "test_tuple_warning": [
    [
      "testing/test_warnings.py",
      [
        "TestAssertionWarnings",
        "test_tuple_warning"
      ]
    ]
  ],
  "test_none_function_warns": [
    [
      "testing/test_warnings.py",
      [
        "TestAssertionWarnings",
        "test_none_function_warns"
      ]
    ]
  ],
  "test_assert_is_none_no_warn": [
    [
      "testing/test_warnings.py",
      [
        "TestAssertionWarnings",
        "test_assert_is_none_no_warn"
      ]
    ]
  ],
  "test_false_function_no_warn": [
    [
      "testing/test_warnings.py",
      [
        "TestAssertionWarnings",
        "test_false_function_no_warn"
      ]
    ]
  ],
  "test_warnings_checker_twice": [
    [
      "testing/test_warnings.py",
      [
        "test_warnings_checker_twice"
      ]
    ]
  ],
  "test_group_warnings_by_message": [
    [
      "testing/test_warnings.py",
      [
        "test_group_warnings_by_message"
      ]
    ]
  ],
  "test_pytest_configure_warning": [
    [
      "testing/test_warnings.py",
      [
        "test_pytest_configure_warning"
      ]
    ]
  ]
}