{
  "setup": [
    [
      "django/__init__.py",
      [
        "setup"
      ]
    ],
    [
      "django/views/generic/base.py",
      [
        "View",
        "setup"
      ]
    ],
    [
      "docs/_ext/djangodocs.py",
      [
        "setup"
      ]
    ],
    [
      "tests/runtests.py",
      [
        "setup"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "setup"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/i18n/test_translate.py",
      [
        "setup"
      ]
    ],
    [
      "tests/template_tests/utils.py",
      [
        "setup"
      ]
    ]
  ],
  "__repr__": [
    [
      "django/apps/config.py",
      [
        "AppConfig",
        "__repr__"
      ]
    ],
    [
      "django/conf/__init__.py",
      [
        "LazySettings",
        "__repr__"
      ]
    ],
    [
      "django/conf/__init__.py",
      [
        "Settings",
        "__repr__"
      ]
    ],
    [
      "django/conf/__init__.py",
      [
        "UserSettingsHolder",
        "__repr__"
      ]
    ],
    [
      "django/contrib/admin/models.py",
      [
        "LogEntry",
        "__repr__"
      ]
    ],
    [
      "django/contrib/admin/templatetags/log.py",
      [
        "AdminLogNode",
        "__repr__"
      ]
    ],
    [
      "django/contrib/auth/context_processors.py",
      [
        "PermLookupDict",
        "__repr__"
      ]
    ],
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "GDALRaster",
        "__repr__"
      ]
    ],
    [
      "django/contrib/gis/geoip2/base.py",
      [
        "GeoIP2",
        "__repr__"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "__repr__"
      ]
    ],
    [
      "django/contrib/gis/measure.py",
      [
        "MeasureBase",
        "__repr__"
      ]
    ],
    [
      "django/contrib/postgres/constraints.py",
      [
        "ExclusionConstraint",
        "__repr__"
      ]
    ],
    [
      "django/core/checks/messages.py",
      [
        "CheckMessage",
        "__repr__"
      ]
    ],
    [
      "django/core/exceptions.py",
      [
        "ValidationError",
        "__repr__"
      ]
    ],
    [
      "django/core/files/base.py",
      [
        "File",
        "__repr__"
      ]
    ],
    [
      "django/core/files/uploadedfile.py",
      [
        "UploadedFile",
        "__repr__"
      ]
    ],
    [
      "django/core/management/commands/makemessages.py",
      [
        "TranslatableFile",
        "__repr__"
      ]
    ],
    [
      "django/core/paginator.py",
      [
        "Page",
        "__repr__"
      ]
    ],
    [
      "django/core/serializers/base.py",
      [
        "DeserializedObject",
        "__repr__"
      ]
    ],
    [
      "django/core/serializers/xml_serializer.py",
      [
        "DefusedXmlException",
        "__repr__"
      ]
    ],
    [
      "django/db/backends/ddl_references.py",
      [
        "Reference",
        "__repr__"
      ]
    ],
    [
      "django/db/migrations/exceptions.py",
      [
        "NodeNotFoundError",
        "__repr__"
      ]
    ],
    [
      "django/db/migrations/graph.py",
      [
        "Node",
        "__repr__"
      ]
    ],
    [
      "django/db/migrations/graph.py",
      [
        "MigrationGraph",
        "__repr__"
      ]
    ],
    [
      "django/db/migrations/migration.py",
      [
        "Migration",
        "__repr__"
      ]
    ],
    [
      "django/db/migrations/operations/base.py",
      [
        "Operation",
        "__repr__"
      ]
    ],
    [
      "django/db/migrations/state.py",
      [
        "ModelState",
        "__repr__"
      ]
    ],
    [
      "django/db/models/base.py",
      [
        "Deferred",
        "__repr__"
      ]
    ],
    [
      "django/db/models/base.py",
      [
        "Model",
        "__repr__"
      ]
    ],
    [
      "django/db/models/constraints.py",
      [
        "CheckConstraint",
        "__repr__"
      ]
    ],
    [
      "django/db/models/constraints.py",
      [
        "UniqueConstraint",
        "__repr__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "CombinedExpression",
        "__repr__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "F",
        "__repr__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Func",
        "__repr__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Value",
        "__repr__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "RawSQL",
        "__repr__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Star",
        "__repr__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Random",
        "__repr__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Col",
        "__repr__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Ref",
        "__repr__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "ExpressionWrapper",
        "__repr__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "When",
        "__repr__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Case",
        "__repr__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "OrderBy",
        "__repr__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Window",
        "__repr__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "WindowFrame",
        "__repr__"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "__repr__"
      ]
    ],
    [
      "django/db/models/fields/related_lookups.py",
      [
        "MultiColSource",
        "__repr__"
      ]
    ],
    [
      "django/db/models/fields/reverse_related.py",
      [
        "ForeignObjectRel",
        "__repr__"
      ]
    ],
    [
      "django/db/models/indexes.py",
      [
        "Index",
        "__repr__"
      ]
    ],
    [
      "django/db/models/options.py",
      [
        "Options",
        "__repr__"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "__repr__"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "RawQuerySet",
        "__repr__"
      ]
    ],
    [
      "django/db/models/sql/query.py",
      [
        "RawQuery",
        "__repr__"
      ]
    ],
    [
      "django/forms/forms.py",
      [
        "BaseForm",
        "__repr__"
      ]
    ],
    [
      "django/forms/utils.py",
      [
        "ErrorList",
        "__repr__"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "Media",
        "__repr__"
      ]
    ],
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "__repr__"
      ]
    ],
    [
      "django/http/request.py",
      [
        "MediaType",
        "__repr__"
      ]
    ],
    [
      "django/http/response.py",
      [
        "HttpResponse",
        "__repr__"
      ]
    ],
    [
      "django/http/response.py",
      [
        "HttpResponseRedirectBase",
        "__repr__"
      ]
    ],
    [
      "django/http/response.py",
      [
        "HttpResponseNotAllowed",
        "__repr__"
      ]
    ],
    [
      "django/template/base.py",
      [
        "Variable",
        "__repr__"
      ]
    ],
    [
      "django/template/base.py",
      [
        "TextNode",
        "__repr__"
      ]
    ],
    [
      "django/template/base.py",
      [
        "VariableNode",
        "__repr__"
      ]
    ],
    [
      "django/template/context.py",
      [
        "BaseContext",
        "__repr__"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "ForNode",
        "__repr__"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "IfEqualNode",
        "__repr__"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "IfNode",
        "__repr__"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "WithNode",
        "__repr__"
      ]
    ],
    [
      "django/template/loader_tags.py",
      [
        "BlockNode",
        "__repr__"
      ]
    ],
    [
      "django/template/loader_tags.py",
      [
        "ExtendsNode",
        "__repr__"
      ]
    ],
    [
      "django/template/smartif.py",
      [
        "TokenBase",
        "__repr__"
      ]
    ],
    [
      "django/template/smartif.py",
      [
        "Literal",
        "__repr__"
      ]
    ],
    [
      "django/templatetags/l10n.py",
      [
        "LocalizeNode",
        "__repr__"
      ]
    ],
    [
      "django/templatetags/static.py",
      [
        "PrefixNode",
        "__repr__"
      ]
    ],
    [
      "django/test/html.py",
      [
        "Element",
        "__repr__"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "Approximate",
        "__repr__"
      ]
    ],
    [
      "django/urls/resolvers.py",
      [
        "ResolverMatch",
        "__repr__"
      ]
    ],
    [
      "django/urls/resolvers.py",
      [
        "URLPattern",
        "__repr__"
      ]
    ],
    [
      "django/urls/resolvers.py",
      [
        "URLResolver",
        "__repr__"
      ]
    ],
    [
      "django/utils/baseconv.py",
      [
        "BaseConverter",
        "__repr__"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "MultiValueDict",
        "__repr__"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "CaseInsensitiveMapping",
        "__repr__"
      ]
    ],
    [
      "django/utils/functional.py",
      [
        "lazy",
        "__proxy__",
        "__repr__"
      ]
    ],
    [
      "django/utils/functional.py",
      [
        "SimpleLazyObject",
        "__repr__"
      ]
    ],
    [
      "django/utils/translation/trans_real.py",
      [
        "DjangoTranslation",
        "__repr__"
      ]
    ],
    [
      "django/utils/tree.py",
      [
        "Node",
        "__repr__"
      ]
    ],
    [
      "django/views/debug.py",
      [
        "CallableSettingWrapper",
        "__repr__"
      ]
    ],
    [
      "tests/check_framework/tests.py",
      [
        "DummyObj",
        "__repr__"
      ]
    ],
    [
      "tests/custom_pk/fields.py",
      [
        "MyWrapper",
        "__repr__"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "UserListA",
        "__repr__"
      ]
    ],
    [
      "tests/migrations/test_executor.py",
      [
        "FakeMigration",
        "__repr__"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Category",
        "__repr__"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Inventory",
        "__repr__"
      ]
    ]
  ],
  "_path_from_module": [
    [
      "django/apps/config.py",
      [
        "AppConfig",
        "_path_from_module"
      ]
    ]
  ],
  "create": [
    [
      "django/apps/config.py",
      [
        "AppConfig",
        "create"
      ]
    ],
    [
      "django/contrib/admin/filters.py",
      [
        "FieldListFilter",
        "create"
      ]
    ],
    [
      "django/contrib/contenttypes/fields.py",
      [
        "create_generic_related_manager",
        "GenericRelatedObjectManager",
        "create"
      ]
    ],
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "create"
      ]
    ],
    [
      "django/contrib/sessions/backends/cache.py",
      [
        "SessionStore",
        "create"
      ]
    ],
    [
      "django/contrib/sessions/backends/db.py",
      [
        "SessionStore",
        "create"
      ]
    ],
    [
      "django/contrib/sessions/backends/file.py",
      [
        "SessionStore",
        "create"
      ]
    ],
    [
      "django/contrib/sessions/backends/signed_cookies.py",
      [
        "SessionStore",
        "create"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_reverse_many_to_one_manager",
        "RelatedManager",
        "create"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_forward_many_to_many_manager",
        "ManyRelatedManager",
        "create"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "create"
      ]
    ],
    [
      "tests/multiple_database/models.py",
      [
        "BookManager",
        "create"
      ]
    ],
    [
      "tests/test_client_regress/session.py",
      [
        "SessionStore",
        "create"
      ]
    ]
  ],
  "get_model": [
    [
      "django/apps/config.py",
      [
        "AppConfig",
        "get_model"
      ]
    ],
    [
      "django/apps/registry.py",
      [
        "Apps",
        "get_model"
      ]
    ]
  ],
  "get_models": [
    [
      "django/apps/config.py",
      [
        "AppConfig",
        "get_models"
      ]
    ],
    [
      "django/apps/registry.py",
      [
        "Apps",
        "get_models"
      ]
    ]
  ],
  "import_models": [
    [
      "django/apps/config.py",
      [
        "AppConfig",
        "import_models"
      ]
    ],
    [
      "django/db/migrations/state.py",
      [
        "AppConfigStub",
        "import_models"
      ]
    ]
  ],
  "ready": [
    [
      "django/apps/config.py",
      [
        "AppConfig",
        "ready"
      ]
    ],
    [
      "django/contrib/admin/apps.py",
      [
        "SimpleAdminConfig",
        "ready"
      ]
    ],
    [
      "django/contrib/admin/apps.py",
      [
        "AdminConfig",
        "ready"
      ]
    ],
    [
      "django/contrib/auth/apps.py",
      [
        "AuthConfig",
        "ready"
      ]
    ],
    [
      "django/contrib/contenttypes/apps.py",
      [
        "ContentTypesConfig",
        "ready"
      ]
    ],
    [
      "django/contrib/gis/apps.py",
      [
        "GISConfig",
        "ready"
      ]
    ],
    [
      "django/contrib/postgres/apps.py",
      [
        "PostgresConfig",
        "ready"
      ]
    ],
    [
      "django/contrib/sites/apps.py",
      [
        "SitesConfig",
        "ready"
      ]
    ],
    [
      "django/contrib/staticfiles/apps.py",
      [
        "StaticFilesConfig",
        "ready"
      ]
    ]
  ],
  "populate": [
    [
      "django/apps/registry.py",
      [
        "Apps",
        "populate"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "RelatedPopulator",
        "populate"
      ]
    ]
  ],
  "check_apps_ready": [
    [
      "django/apps/registry.py",
      [
        "Apps",
        "check_apps_ready"
      ]
    ]
  ],
  "check_models_ready": [
    [
      "django/apps/registry.py",
      [
        "Apps",
        "check_models_ready"
      ]
    ]
  ],
  "get_app_configs": [
    [
      "django/apps/registry.py",
      [
        "Apps",
        "get_app_configs"
      ]
    ]
  ],
  "get_app_config": [
    [
      "django/apps/registry.py",
      [
        "Apps",
        "get_app_config"
      ]
    ]
  ],
  "register_model": [
    [
      "django/apps/registry.py",
      [
        "Apps",
        "register_model"
      ]
    ],
    [
      "django/db/migrations/state.py",
      [
        "StateApps",
        "register_model"
      ]
    ]
  ],
  "is_installed": [
    [
      "django/apps/registry.py",
      [
        "Apps",
        "is_installed"
      ]
    ]
  ],
  "get_containing_app_config": [
    [
      "django/apps/registry.py",
      [
        "Apps",
        "get_containing_app_config"
      ]
    ]
  ],
  "get_registered_model": [
    [
      "django/apps/registry.py",
      [
        "Apps",
        "get_registered_model"
      ]
    ]
  ],
  "get_swappable_settings_name": [
    [
      "django/apps/registry.py",
      [
        "Apps",
        "get_swappable_settings_name"
      ]
    ]
  ],
  "set_available_apps": [
    [
      "django/apps/registry.py",
      [
        "Apps",
        "set_available_apps"
      ]
    ]
  ],
  "unset_available_apps": [
    [
      "django/apps/registry.py",
      [
        "Apps",
        "unset_available_apps"
      ]
    ]
  ],
  "set_installed_apps": [
    [
      "django/apps/registry.py",
      [
        "Apps",
        "set_installed_apps"
      ]
    ]
  ],
  "unset_installed_apps": [
    [
      "django/apps/registry.py",
      [
        "Apps",
        "unset_installed_apps"
      ]
    ]
  ],
  "clear_cache": [
    [
      "django/apps/registry.py",
      [
        "Apps",
        "clear_cache"
      ]
    ],
    [
      "django/contrib/contenttypes/models.py",
      [
        "ContentTypeManager",
        "clear_cache"
      ]
    ],
    [
      "django/contrib/sites/models.py",
      [
        "SiteManager",
        "clear_cache"
      ]
    ]
  ],
  "lazy_model_operation": [
    [
      "django/apps/registry.py",
      [
        "Apps",
        "lazy_model_operation"
      ]
    ]
  ],
  "do_pending_operations": [
    [
      "django/apps/registry.py",
      [
        "Apps",
        "do_pending_operations"
      ]
    ]
  ],
  "__new__": [
    [
      "django/conf/__init__.py",
      [
        "SettingsReference",
        "__new__"
      ]
    ],
    [
      "django/db/migrations/migration.py",
      [
        "SwappableTuple",
        "__new__"
      ]
    ],
    [
      "django/db/migrations/operations/base.py",
      [
        "Operation",
        "__new__"
      ]
    ],
    [
      "django/db/models/base.py",
      [
        "ModelBase",
        "__new__"
      ]
    ],
    [
      "django/db/models/enums.py",
      [
        "ChoicesMeta",
        "__new__"
      ]
    ],
    [
      "django/db/models/manager.py",
      [
        "BaseManager",
        "__new__"
      ]
    ],
    [
      "django/forms/forms.py",
      [
        "DeclarativeFieldsMetaclass",
        "__new__"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "ModelFormMetaclass",
        "__new__"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "MediaDefiningClass",
        "__new__"
      ]
    ],
    [
      "django/test/selenium.py",
      [
        "SeleniumTestCaseBase",
        "__new__"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "ImmutableList",
        "__new__"
      ]
    ],
    [
      "django/utils/deconstruct.py",
      [
        "deconstructible",
        "decorator",
        "__new__"
      ]
    ],
    [
      "django/utils/deprecation.py",
      [
        "RenameMethodsBase",
        "__new__"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "CustomMetaclass",
        "__new__"
      ]
    ]
  ],
  "_setup": [
    [
      "django/conf/__init__.py",
      [
        "LazySettings",
        "_setup"
      ]
    ],
    [
      "django/contrib/admin/sites.py",
      [
        "DefaultAdminSite",
        "_setup"
      ]
    ],
    [
      "django/contrib/staticfiles/storage.py",
      [
        "ConfiguredStorage",
        "_setup"
      ]
    ],
    [
      "django/core/files/storage.py",
      [
        "DefaultStorage",
        "_setup"
      ]
    ],
    [
      "django/utils/functional.py",
      [
        "LazyObject",
        "_setup"
      ]
    ],
    [
      "django/utils/functional.py",
      [
        "SimpleLazyObject",
        "_setup"
      ]
    ]
  ],
  "__getattr__": [
    [
      "django/conf/__init__.py",
      [
        "LazySettings",
        "__getattr__"
      ]
    ],
    [
      "django/conf/__init__.py",
      [
        "UserSettingsHolder",
        "__getattr__"
      ]
    ],
    [
      "django/contrib/gis/db/backends/base/features.py",
      [
        "BaseSpatialFeatures",
        "__getattr__"
      ]
    ],
    [
      "django/contrib/gis/measure.py",
      [
        "MeasureBase",
        "__getattr__"
      ]
    ],
    [
      "django/core/cache/__init__.py",
      [
        "DefaultCacheProxy",
        "__getattr__"
      ]
    ],
    [
      "django/core/management/base.py",
      [
        "OutputWrapper",
        "__getattr__"
      ]
    ],
    [
      "django/db/__init__.py",
      [
        "DefaultConnectionProxy",
        "__getattr__"
      ]
    ],
    [
      "django/db/backends/mysql/base.py",
      [
        "CursorWrapper",
        "__getattr__"
      ]
    ],
    [
      "django/db/backends/oracle/base.py",
      [
        "VariableWrapper",
        "__getattr__"
      ]
    ],
    [
      "django/db/backends/oracle/base.py",
      [
        "FormatStylePlaceholderCursor",
        "__getattr__"
      ]
    ],
    [
      "django/db/backends/utils.py",
      [
        "CursorWrapper",
        "__getattr__"
      ]
    ],
    [
      "django/utils/translation/__init__.py",
      [
        "Trans",
        "__getattr__"
      ]
    ],
    [
      "docs/_ext/djangodocs.py",
      [
        "ConsoleNode",
        "__getattr__"
      ]
    ],
    [
      "tests/admin_scripts/configured_dynamic_settings_manage.py",
      [
        "Settings",
        "__getattr__"
      ]
    ],
    [
      "tests/files/tests.py",
      [
        "DimensionClosingBug",
        "test_closing_of_filenames",
        "FileWrapper",
        "__getattr__"
      ]
    ]
  ],
  "__setattr__": [
    [
      "django/conf/__init__.py",
      [
        "LazySettings",
        "__setattr__"
      ]
    ],
    [
      "django/conf/__init__.py",
      [
        "UserSettingsHolder",
        "__setattr__"
      ]
    ],
    [
      "django/core/cache/__init__.py",
      [
        "DefaultCacheProxy",
        "__setattr__"
      ]
    ],
    [
      "django/db/__init__.py",
      [
        "DefaultConnectionProxy",
        "__setattr__"
      ]
    ],
    [
      "django/db/backends/oracle/base.py",
      [
        "VariableWrapper",
        "__setattr__"
      ]
    ],
    [
      "django/utils/functional.py",
      [
        "LazyObject",
        "__setattr__"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "StrictAssignmentFieldSpecific",
        "__setattr__"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "StrictAssignmentAll",
        "__setattr__"
      ]
    ]
  ],
  "__delattr__": [
    [
      "django/conf/__init__.py",
      [
        "LazySettings",
        "__delattr__"
      ]
    ],
    [
      "django/conf/__init__.py",
      [
        "UserSettingsHolder",
        "__delattr__"
      ]
    ],
    [
      "django/core/cache/__init__.py",
      [
        "DefaultCacheProxy",
        "__delattr__"
      ]
    ],
    [
      "django/db/__init__.py",
      [
        "DefaultConnectionProxy",
        "__delattr__"
      ]
    ],
    [
      "django/utils/functional.py",
      [
        "LazyObject",
        "__delattr__"
      ]
    ]
  ],
  "configure": [
    [
      "django/conf/__init__.py",
      [
        "LazySettings",
        "configure"
      ]
    ]
  ],
  "_add_script_prefix": [
    [
      "django/conf/__init__.py",
      [
        "LazySettings",
        "_add_script_prefix"
      ]
    ]
  ],
  "configured": [
    [
      "django/conf/__init__.py",
      [
        "LazySettings",
        "configured"
      ]
    ]
  ],
  "PASSWORD_RESET_TIMEOUT_DAYS": [
    [
      "django/conf/__init__.py",
      [
        "LazySettings",
        "PASSWORD_RESET_TIMEOUT_DAYS"
      ]
    ]
  ],
  "STATIC_URL": [
    [
      "django/conf/__init__.py",
      [
        "LazySettings",
        "STATIC_URL"
      ]
    ]
  ],
  "MEDIA_URL": [
    [
      "django/conf/__init__.py",
      [
        "LazySettings",
        "MEDIA_URL"
      ]
    ]
  ],
  "is_overridden": [
    [
      "django/conf/__init__.py",
      [
        "Settings",
        "is_overridden"
      ]
    ],
    [
      "django/conf/__init__.py",
      [
        "UserSettingsHolder",
        "is_overridden"
      ]
    ]
  ],
  "__dir__": [
    [
      "django/conf/__init__.py",
      [
        "UserSettingsHolder",
        "__dir__"
      ]
    ],
    [
      "tests/admin_scripts/configured_dynamic_settings_manage.py",
      [
        "Settings",
        "__dir__"
      ]
    ]
  ],
  "gettext_noop": [
    [
      "django/conf/global_settings.py",
      [
        "gettext_noop"
      ]
    ],
    [
      "django/utils/translation/__init__.py",
      [
        "gettext_noop"
      ]
    ],
    [
      "django/utils/translation/trans_real.py",
      [
        "gettext_noop"
      ]
    ]
  ],
  "url": [
    [
      "django/conf/urls/__init__.py",
      [
        "url"
      ]
    ],
    [
      "django/contrib/staticfiles/storage.py",
      [
        "HashedFilesMixin",
        "url"
      ]
    ],
    [
      "django/core/files/storage.py",
      [
        "Storage",
        "url"
      ]
    ],
    [
      "django/core/files/storage.py",
      [
        "FileSystemStorage",
        "url"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "FieldFile",
        "url"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "url"
      ]
    ],
    [
      "django/templatetags/static.py",
      [
        "StaticNode",
        "url"
      ]
    ],
    [
      "tests/staticfiles_tests/storage.py",
      [
        "QueryStringStorage",
        "url"
      ]
    ],
    [
      "tests/staticfiles_tests/test_forms.py",
      [
        "StaticTestStorage",
        "url"
      ]
    ]
  ],
  "i18n_patterns": [
    [
      "django/conf/urls/i18n.py",
      [
        "i18n_patterns"
      ]
    ]
  ],
  "is_language_prefix_patterns_used": [
    [
      "django/conf/urls/i18n.py",
      [
        "is_language_prefix_patterns_used"
      ]
    ]
  ],
  "static": [
    [
      "django/conf/urls/static.py",
      [
        "static"
      ]
    ],
    [
      "django/template/context_processors.py",
      [
        "static"
      ]
    ],
    [
      "django/templatetags/static.py",
      [
        "static"
      ]
    ]
  ],
  "autodiscover": [
    [
      "django/contrib/admin/__init__.py",
      [
        "autodiscover"
      ]
    ]
  ],
  "delete_selected": [
    [
      "django/contrib/admin/actions.py",
      [
        "delete_selected"
      ]
    ]
  ],
  "main": [
    [
      "django/contrib/admin/bin/compress.py",
      [
        "main"
      ]
    ]
  ],
  "_issubclass": [
    [
      "django/contrib/admin/checks.py",
      [
        "_issubclass"
      ]
    ]
  ],
  "_contains_subclass": [
    [
      "django/contrib/admin/checks.py",
      [
        "_contains_subclass"
      ]
    ]
  ],
  "check_admin_app": [
    [
      "django/contrib/admin/checks.py",
      [
        "check_admin_app"
      ]
    ]
  ],
  "check_dependencies": [
    [
      "django/contrib/admin/checks.py",
      [
        "check_dependencies"
      ]
    ]
  ],
  "check": [
    [
      "django/contrib/admin/checks.py",
      [
        "BaseModelAdminChecks",
        "check"
      ]
    ],
    [
      "django/contrib/admin/checks.py",
      [
        "ModelAdminChecks",
        "check"
      ]
    ],
    [
      "django/contrib/admin/checks.py",
      [
        "InlineModelAdminChecks",
        "check"
      ]
    ],
    [
      "django/contrib/admin/options.py",
      [
        "BaseModelAdmin",
        "check"
      ]
    ],
    [
      "django/contrib/admin/sites.py",
      [
        "AdminSite",
        "check"
      ]
    ],
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericForeignKey",
        "check"
      ]
    ],
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericRelation",
        "check"
      ]
    ],
    [
      "django/contrib/postgres/fields/array.py",
      [
        "ArrayField",
        "check"
      ]
    ],
    [
      "django/contrib/sites/managers.py",
      [
        "CurrentSiteManager",
        "check"
      ]
    ],
    [
      "django/contrib/staticfiles/finders.py",
      [
        "BaseFinder",
        "check"
      ]
    ],
    [
      "django/contrib/staticfiles/finders.py",
      [
        "FileSystemFinder",
        "check"
      ]
    ],
    [
      "django/core/management/base.py",
      [
        "BaseCommand",
        "check"
      ]
    ],
    [
      "django/db/backends/base/validation.py",
      [
        "BaseDatabaseValidation",
        "check"
      ]
    ],
    [
      "django/db/backends/mysql/validation.py",
      [
        "DatabaseValidation",
        "check"
      ]
    ],
    [
      "django/db/models/base.py",
      [
        "Model",
        "check"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "check"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "CharField",
        "check"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DateTimeCheckMixin",
        "check"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DecimalField",
        "check"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "FilePathField",
        "check"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "IntegerField",
        "check"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "GenericIPAddressField",
        "check"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "BinaryField",
        "check"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "AutoFieldMixin",
        "check"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "FileField",
        "check"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "ImageField",
        "check"
      ]
    ],
    [
      "django/db/models/fields/mixins.py",
      [
        "CheckFieldDefaultMixin",
        "check"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "RelatedField",
        "check"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ForeignObject",
        "check"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ForeignKey",
        "check"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ManyToManyField",
        "check"
      ]
    ],
    [
      "django/db/models/manager.py",
      [
        "BaseManager",
        "check"
      ]
    ],
    [
      "django/db/models/query_utils.py",
      [
        "check_rel_lookup_compatibility",
        "check"
      ]
    ],
    [
      "django/urls/resolvers.py",
      [
        "RegexPattern",
        "check"
      ]
    ],
    [
      "django/urls/resolvers.py",
      [
        "RoutePattern",
        "check"
      ]
    ],
    [
      "django/urls/resolvers.py",
      [
        "LocalePrefixPattern",
        "check"
      ]
    ],
    [
      "django/urls/resolvers.py",
      [
        "URLPattern",
        "check"
      ]
    ],
    [
      "django/urls/resolvers.py",
      [
        "URLResolver",
        "check"
      ]
    ],
    [
      "tests/admin_checks/tests.py",
      [
        "MyAdmin",
        "check"
      ]
    ],
    [
      "tests/admin_scripts/app_raising_messages/models.py",
      [
        "ModelRaisingMessages",
        "check"
      ]
    ],
    [
      "tests/admin_scripts/app_raising_warning/models.py",
      [
        "ModelRaisingMessages",
        "check"
      ]
    ],
    [
      "tests/gis_tests/gdal_tests/test_driver.py",
      [
        "DriverTest",
        "test_registered",
        "check"
      ]
    ]
  ],
  "_check_autocomplete_fields": [
    [
      "django/contrib/admin/checks.py",
      [
        "BaseModelAdminChecks",
        "_check_autocomplete_fields"
      ]
    ]
  ],
  "_check_autocomplete_fields_item": [
    [
      "django/contrib/admin/checks.py",
      [
        "BaseModelAdminChecks",
        "_check_autocomplete_fields_item"
      ]
    ]
  ],
  "_check_raw_id_fields": [
    [
      "django/contrib/admin/checks.py",
      [
        "BaseModelAdminChecks",
        "_check_raw_id_fields"
      ]
    ]
  ],
  "_check_raw_id_fields_item": [
    [
      "django/contrib/admin/checks.py",
      [
        "BaseModelAdminChecks",
        "_check_raw_id_fields_item"
      ]
    ]
  ],
  "_check_fields": [
    [
      "django/contrib/admin/checks.py",
      [
        "BaseModelAdminChecks",
        "_check_fields"
      ]
    ],
    [
      "django/db/models/base.py",
      [
        "Model",
        "_check_fields"
      ]
    ]
  ],
  "_check_fieldsets": [
    [
      "django/contrib/admin/checks.py",
      [
        "BaseModelAdminChecks",
        "_check_fieldsets"
      ]
    ]
  ],
  "_check_fieldsets_item": [
    [
      "django/contrib/admin/checks.py",
      [
        "BaseModelAdminChecks",
        "_check_fieldsets_item"
      ]
    ]
  ],
  "_check_field_spec": [
    [
      "django/contrib/admin/checks.py",
      [
        "BaseModelAdminChecks",
        "_check_field_spec"
      ]
    ]
  ],
  "_check_field_spec_item": [
    [
      "django/contrib/admin/checks.py",
      [
        "BaseModelAdminChecks",
        "_check_field_spec_item"
      ]
    ]
  ],
  "_check_exclude": [
    [
      "django/contrib/admin/checks.py",
      [
        "BaseModelAdminChecks",
        "_check_exclude"
      ]
    ]
  ],
  "_check_form": [
    [
      "django/contrib/admin/checks.py",
      [
        "BaseModelAdminChecks",
        "_check_form"
      ]
    ]
  ],
  "_check_filter_vertical": [
    [
      "django/contrib/admin/checks.py",
      [
        "BaseModelAdminChecks",
        "_check_filter_vertical"
      ]
    ]
  ],
  "_check_filter_horizontal": [
    [
      "django/contrib/admin/checks.py",
      [
        "BaseModelAdminChecks",
        "_check_filter_horizontal"
      ]
    ]
  ],
  "_check_filter_item": [
    [
      "django/contrib/admin/checks.py",
      [
        "BaseModelAdminChecks",
        "_check_filter_item"
      ]
    ]
  ],
  "_check_radio_fields": [
    [
      "django/contrib/admin/checks.py",
      [
        "BaseModelAdminChecks",
        "_check_radio_fields"
      ]
    ]
  ],
  "_check_radio_fields_key": [
    [
      "django/contrib/admin/checks.py",
      [
        "BaseModelAdminChecks",
        "_check_radio_fields_key"
      ]
    ]
  ],
  "_check_radio_fields_value": [
    [
      "django/contrib/admin/checks.py",
      [
        "BaseModelAdminChecks",
        "_check_radio_fields_value"
      ]
    ]
  ],
  "_check_view_on_site_url": [
    [
      "django/contrib/admin/checks.py",
      [
        "BaseModelAdminChecks",
        "_check_view_on_site_url"
      ]
    ]
  ],
  "_check_prepopulated_fields": [
    [
      "django/contrib/admin/checks.py",
      [
        "BaseModelAdminChecks",
        "_check_prepopulated_fields"
      ]
    ]
  ],
  "_check_prepopulated_fields_key": [
    [
      "django/contrib/admin/checks.py",
      [
        "BaseModelAdminChecks",
        "_check_prepopulated_fields_key"
      ]
    ]
  ],
  "_check_prepopulated_fields_value": [
    [
      "django/contrib/admin/checks.py",
      [
        "BaseModelAdminChecks",
        "_check_prepopulated_fields_value"
      ]
    ]
  ],
  "_check_prepopulated_fields_value_item": [
    [
      "django/contrib/admin/checks.py",
      [
        "BaseModelAdminChecks",
        "_check_prepopulated_fields_value_item"
      ]
    ]
  ],
  "_check_ordering": [
    [
      "django/contrib/admin/checks.py",
      [
        "BaseModelAdminChecks",
        "_check_ordering"
      ]
    ],
    [
      "django/db/models/base.py",
      [
        "Model",
        "_check_ordering"
      ]
    ]
  ],
  "_check_ordering_item": [
    [
      "django/contrib/admin/checks.py",
      [
        "BaseModelAdminChecks",
        "_check_ordering_item"
      ]
    ]
  ],
  "_check_readonly_fields": [
    [
      "django/contrib/admin/checks.py",
      [
        "BaseModelAdminChecks",
        "_check_readonly_fields"
      ]
    ]
  ],
  "_check_readonly_fields_item": [
    [
      "django/contrib/admin/checks.py",
      [
        "BaseModelAdminChecks",
        "_check_readonly_fields_item"
      ]
    ]
  ],
  "_check_save_as": [
    [
      "django/contrib/admin/checks.py",
      [
        "ModelAdminChecks",
        "_check_save_as"
      ]
    ]
  ],
  "_check_save_on_top": [
    [
      "django/contrib/admin/checks.py",
      [
        "ModelAdminChecks",
        "_check_save_on_top"
      ]
    ]
  ],
  "_check_inlines": [
    [
      "django/contrib/admin/checks.py",
      [
        "ModelAdminChecks",
        "_check_inlines"
      ]
    ]
  ],
  "_check_inlines_item": [
    [
      "django/contrib/admin/checks.py",
      [
        "ModelAdminChecks",
        "_check_inlines_item"
      ]
    ]
  ],
  "_check_list_display": [
    [
      "django/contrib/admin/checks.py",
      [
        "ModelAdminChecks",
        "_check_list_display"
      ]
    ]
  ],
  "_check_list_display_item": [
    [
      "django/contrib/admin/checks.py",
      [
        "ModelAdminChecks",
        "_check_list_display_item"
      ]
    ]
  ],
  "_check_list_display_links": [
    [
      "django/contrib/admin/checks.py",
      [
        "ModelAdminChecks",
        "_check_list_display_links"
      ]
    ]
  ],
  "_check_list_display_links_item": [
    [
      "django/contrib/admin/checks.py",
      [
        "ModelAdminChecks",
        "_check_list_display_links_item"
      ]
    ]
  ],
  "_check_list_filter": [
    [
      "django/contrib/admin/checks.py",
      [
        "ModelAdminChecks",
        "_check_list_filter"
      ]
    ]
  ],
  "_check_list_filter_item": [
    [
      "django/contrib/admin/checks.py",
      [
        "ModelAdminChecks",
        "_check_list_filter_item"
      ]
    ]
  ],
  "_check_list_select_related": [
    [
      "django/contrib/admin/checks.py",
      [
        "ModelAdminChecks",
        "_check_list_select_related"
      ]
    ]
  ],
  "_check_list_per_page": [
    [
      "django/contrib/admin/checks.py",
      [
        "ModelAdminChecks",
        "_check_list_per_page"
      ]
    ]
  ],
  "_check_list_max_show_all": [
    [
      "django/contrib/admin/checks.py",
      [
        "ModelAdminChecks",
        "_check_list_max_show_all"
      ]
    ]
  ],
  "_check_list_editable": [
    [
      "django/contrib/admin/checks.py",
      [
        "ModelAdminChecks",
        "_check_list_editable"
      ]
    ]
  ],
  "_check_list_editable_item": [
    [
      "django/contrib/admin/checks.py",
      [
        "ModelAdminChecks",
        "_check_list_editable_item"
      ]
    ]
  ],
  "_check_search_fields": [
    [
      "django/contrib/admin/checks.py",
      [
        "ModelAdminChecks",
        "_check_search_fields"
      ]
    ]
  ],
  "_check_date_hierarchy": [
    [
      "django/contrib/admin/checks.py",
      [
        "ModelAdminChecks",
        "_check_date_hierarchy"
      ]
    ]
  ],
  "_check_action_permission_methods": [
    [
      "django/contrib/admin/checks.py",
      [
        "ModelAdminChecks",
        "_check_action_permission_methods"
      ]
    ]
  ],
  "_check_actions_uniqueness": [
    [
      "django/contrib/admin/checks.py",
      [
        "ModelAdminChecks",
        "_check_actions_uniqueness"
      ]
    ]
  ],
  "_check_exclude_of_parent_model": [
    [
      "django/contrib/admin/checks.py",
      [
        "InlineModelAdminChecks",
        "_check_exclude_of_parent_model"
      ]
    ],
    [
      "django/contrib/contenttypes/admin.py",
      [
        "GenericInlineModelAdminChecks",
        "_check_exclude_of_parent_model"
      ]
    ]
  ],
  "_check_relation": [
    [
      "django/contrib/admin/checks.py",
      [
        "InlineModelAdminChecks",
        "_check_relation"
      ]
    ],
    [
      "django/contrib/contenttypes/admin.py",
      [
        "GenericInlineModelAdminChecks",
        "_check_relation"
      ]
    ]
  ],
  "_check_extra": [
    [
      "django/contrib/admin/checks.py",
      [
        "InlineModelAdminChecks",
        "_check_extra"
      ]
    ]
  ],
  "_check_max_num": [
    [
      "django/contrib/admin/checks.py",
      [
        "InlineModelAdminChecks",
        "_check_max_num"
      ]
    ]
  ],
  "_check_min_num": [
    [
      "django/contrib/admin/checks.py",
      [
        "InlineModelAdminChecks",
        "_check_min_num"
      ]
    ]
  ],
  "_check_formset": [
    [
      "django/contrib/admin/checks.py",
      [
        "InlineModelAdminChecks",
        "_check_formset"
      ]
    ]
  ],
  "must_be": [
    [
      "django/contrib/admin/checks.py",
      [
        "must_be"
      ]
    ]
  ],
  "must_inherit_from": [
    [
      "django/contrib/admin/checks.py",
      [
        "must_inherit_from"
      ]
    ]
  ],
  "refer_to_missing_field": [
    [
      "django/contrib/admin/checks.py",
      [
        "refer_to_missing_field"
      ]
    ]
  ],
  "_model_admin_wrapper": [
    [
      "django/contrib/admin/decorators.py",
      [
        "register",
        "_model_admin_wrapper"
      ]
    ]
  ],
  "register": [
    [
      "django/contrib/admin/decorators.py",
      [
        "register"
      ]
    ],
    [
      "django/contrib/admin/filters.py",
      [
        "FieldListFilter",
        "register"
      ]
    ],
    [
      "django/contrib/admin/sites.py",
      [
        "AdminSite",
        "register"
      ]
    ],
    [
      "django/core/checks/registry.py",
      [
        "CheckRegistry",
        "register"
      ]
    ],
    [
      "django/db/migrations/serializer.py",
      [
        "Serializer",
        "register"
      ]
    ]
  ],
  "has_output": [
    [
      "django/contrib/admin/filters.py",
      [
        "ListFilter",
        "has_output"
      ]
    ],
    [
      "django/contrib/admin/filters.py",
      [
        "SimpleListFilter",
        "has_output"
      ]
    ],
    [
      "django/contrib/admin/filters.py",
      [
        "FieldListFilter",
        "has_output"
      ]
    ],
    [
      "django/contrib/admin/filters.py",
      [
        "RelatedFieldListFilter",
        "has_output"
      ]
    ]
  ],
  "choices": [
    [
      "django/contrib/admin/filters.py",
      [
        "ListFilter",
        "choices"
      ]
    ],
    [
      "django/contrib/admin/filters.py",
      [
        "SimpleListFilter",
        "choices"
      ]
    ],
    [
      "django/contrib/admin/filters.py",
      [
        "RelatedFieldListFilter",
        "choices"
      ]
    ],
    [
      "django/contrib/admin/filters.py",
      [
        "BooleanFieldListFilter",
        "choices"
      ]
    ],
    [
      "django/contrib/admin/filters.py",
      [
        "ChoicesFieldListFilter",
        "choices"
      ]
    ],
    [
      "django/contrib/admin/filters.py",
      [
        "DateFieldListFilter",
        "choices"
      ]
    ],
    [
      "django/contrib/admin/filters.py",
      [
        "AllValuesFieldListFilter",
        "choices"
      ]
    ],
    [
      "django/contrib/admin/filters.py",
      [
        "EmptyFieldListFilter",
        "choices"
      ]
    ],
    [
      "django/db/models/enums.py",
      [
        "ChoicesMeta",
        "choices"
      ]
    ]
  ],
  "queryset": [
    [
      "django/contrib/admin/filters.py",
      [
        "ListFilter",
        "queryset"
      ]
    ],
    [
      "django/contrib/admin/filters.py",
      [
        "FieldListFilter",
        "queryset"
      ]
    ],
    [
      "django/contrib/admin/filters.py",
      [
        "EmptyFieldListFilter",
        "queryset"
      ]
    ],
    [
      "tests/admin_filters/tests.py",
      [
        "DecadeListFilter",
        "queryset"
      ]
    ],
    [
      "tests/admin_filters/tests.py",
      [
        "NotNinetiesListFilter",
        "queryset"
      ]
    ],
    [
      "tests/admin_filters/tests.py",
      [
        "DecadeListFilterWithFailingQueryset",
        "queryset"
      ]
    ],
    [
      "tests/admin_filters/tests.py",
      [
        "DepartmentListFilterLookupWithNonStringValue",
        "queryset"
      ]
    ]
  ],
  "expected_parameters": [
    [
      "django/contrib/admin/filters.py",
      [
        "ListFilter",
        "expected_parameters"
      ]
    ],
    [
      "django/contrib/admin/filters.py",
      [
        "SimpleListFilter",
        "expected_parameters"
      ]
    ],
    [
      "django/contrib/admin/filters.py",
      [
        "RelatedFieldListFilter",
        "expected_parameters"
      ]
    ],
    [
      "django/contrib/admin/filters.py",
      [
        "BooleanFieldListFilter",
        "expected_parameters"
      ]
    ],
    [
      "django/contrib/admin/filters.py",
      [
        "ChoicesFieldListFilter",
        "expected_parameters"
      ]
    ],
    [
      "django/contrib/admin/filters.py",
      [
        "DateFieldListFilter",
        "expected_parameters"
      ]
    ],
    [
      "django/contrib/admin/filters.py",
      [
        "AllValuesFieldListFilter",
        "expected_parameters"
      ]
    ],
    [
      "django/contrib/admin/filters.py",
      [
        "EmptyFieldListFilter",
        "expected_parameters"
      ]
    ]
  ],
  "value": [
    [
      "django/contrib/admin/filters.py",
      [
        "SimpleListFilter",
        "value"
      ]
    ],
    [
      "django/contrib/gis/gdal/field.py",
      [
        "Field",
        "value"
      ]
    ],
    [
      "django/contrib/gis/gdal/field.py",
      [
        "OFTInteger",
        "value"
      ]
    ],
    [
      "django/contrib/gis/gdal/field.py",
      [
        "OFTReal",
        "value"
      ]
    ],
    [
      "django/contrib/gis/gdal/field.py",
      [
        "OFTDate",
        "value"
      ]
    ],
    [
      "django/contrib/gis/gdal/field.py",
      [
        "OFTDateTime",
        "value"
      ]
    ],
    [
      "django/contrib/gis/gdal/field.py",
      [
        "OFTTime",
        "value"
      ]
    ],
    [
      "django/forms/boundfield.py",
      [
        "BoundField",
        "value"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "PostAdmin",
        "value"
      ]
    ]
  ],
  "lookups": [
    [
      "django/contrib/admin/filters.py",
      [
        "SimpleListFilter",
        "lookups"
      ]
    ],
    [
      "tests/admin_filters/tests.py",
      [
        "DecadeListFilter",
        "lookups"
      ]
    ],
    [
      "tests/admin_filters/tests.py",
      [
        "NotNinetiesListFilter",
        "lookups"
      ]
    ],
    [
      "tests/admin_filters/tests.py",
      [
        "DecadeListFilterWithNoneReturningLookups",
        "lookups"
      ]
    ],
    [
      "tests/admin_filters/tests.py",
      [
        "DecadeListFilterWithQuerysetBasedLookups",
        "lookups"
      ]
    ],
    [
      "tests/admin_filters/tests.py",
      [
        "DepartmentListFilterLookupWithNonStringValue",
        "lookups"
      ]
    ],
    [
      "tests/admin_filters/tests.py",
      [
        "DepartmentListFilterLookupWithDynamicValue",
        "lookups"
      ]
    ]
  ],
  "include_empty_choice": [
    [
      "django/contrib/admin/filters.py",
      [
        "RelatedFieldListFilter",
        "include_empty_choice"
      ]
    ]
  ],
  "field_admin_ordering": [
    [
      "django/contrib/admin/filters.py",
      [
        "RelatedFieldListFilter",
        "field_admin_ordering"
      ]
    ]
  ],
  "field_choices": [
    [
      "django/contrib/admin/filters.py",
      [
        "RelatedFieldListFilter",
        "field_choices"
      ]
    ],
    [
      "django/contrib/admin/filters.py",
      [
        "RelatedOnlyFieldListFilter",
        "field_choices"
      ]
    ]
  ],
  "confirm_login_allowed": [
    [
      "django/contrib/admin/forms.py",
      [
        "AdminAuthenticationForm",
        "confirm_login_allowed"
      ]
    ],
    [
      "django/contrib/auth/forms.py",
      [
        "AuthenticationForm",
        "confirm_login_allowed"
      ]
    ],
    [
      "tests/admin_views/custom_has_permission_admin.py",
      [
        "PermissionAdminAuthenticationForm",
        "confirm_login_allowed"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "AuthenticationFormTest",
        "test_custom_login_allowed_policy",
        "AuthenticationFormWithInactiveUsersOkay",
        "confirm_login_allowed"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "AuthenticationFormTest",
        "test_custom_login_allowed_policy",
        "PickyAuthenticationForm",
        "confirm_login_allowed"
      ]
    ]
  ],
  "__iter__": [
    [
      "django/contrib/admin/helpers.py",
      [
        "AdminForm",
        "__iter__"
      ]
    ],
    [
      "django/contrib/admin/helpers.py",
      [
        "Fieldset",
        "__iter__"
      ]
    ],
    [
      "django/contrib/admin/helpers.py",
      [
        "Fieldline",
        "__iter__"
      ]
    ],
    [
      "django/contrib/admin/helpers.py",
      [
        "InlineAdminFormSet",
        "__iter__"
      ]
    ],
    [
      "django/contrib/admin/helpers.py",
      [
        "InlineAdminForm",
        "__iter__"
      ]
    ],
    [
      "django/contrib/admin/helpers.py",
      [
        "InlineFieldset",
        "__iter__"
      ]
    ],
    [
      "django/contrib/auth/context_processors.py",
      [
        "PermLookupDict",
        "__iter__"
      ]
    ],
    [
      "django/contrib/auth/context_processors.py",
      [
        "PermWrapper",
        "__iter__"
      ]
    ],
    [
      "django/contrib/gis/gdal/layer.py",
      [
        "Layer",
        "__iter__"
      ]
    ],
    [
      "django/contrib/gis/gdal/raster/band.py",
      [
        "BandList",
        "__iter__"
      ]
    ],
    [
      "django/contrib/gis/geos/collections.py",
      [
        "GeometryCollection",
        "__iter__"
      ]
    ],
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "__iter__"
      ]
    ],
    [
      "django/contrib/gis/geos/linestring.py",
      [
        "LineString",
        "__iter__"
      ]
    ],
    [
      "django/contrib/gis/geos/point.py",
      [
        "Point",
        "__iter__"
      ]
    ],
    [
      "django/contrib/gis/geos/polygon.py",
      [
        "Polygon",
        "__iter__"
      ]
    ],
    [
      "django/contrib/messages/storage/base.py",
      [
        "BaseStorage",
        "__iter__"
      ]
    ],
    [
      "django/core/exceptions.py",
      [
        "ValidationError",
        "__iter__"
      ]
    ],
    [
      "django/core/files/base.py",
      [
        "File",
        "__iter__"
      ]
    ],
    [
      "django/core/files/utils.py",
      [
        "FileProxyMixin",
        "__iter__"
      ]
    ],
    [
      "django/core/paginator.py",
      [
        "Paginator",
        "__iter__"
      ]
    ],
    [
      "django/core/serializers/base.py",
      [
        "Deserializer",
        "__iter__"
      ]
    ],
    [
      "django/db/backends/mysql/base.py",
      [
        "CursorWrapper",
        "__iter__"
      ]
    ],
    [
      "django/db/backends/oracle/base.py",
      [
        "FormatStylePlaceholderCursor",
        "__iter__"
      ]
    ],
    [
      "django/db/backends/utils.py",
      [
        "CursorWrapper",
        "__iter__"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "ModelIterable",
        "__iter__"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "ValuesIterable",
        "__iter__"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "ValuesListIterable",
        "__iter__"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "NamedValuesListIterable",
        "__iter__"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "FlatValuesListIterable",
        "__iter__"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "__iter__"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "RawQuerySet",
        "__iter__"
      ]
    ],
    [
      "django/db/models/sql/query.py",
      [
        "RawQuery",
        "__iter__"
      ]
    ],
    [
      "django/db/utils.py",
      [
        "ConnectionHandler",
        "__iter__"
      ]
    ],
    [
      "django/forms/boundfield.py",
      [
        "BoundField",
        "__iter__"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "DateTimeFormatsIterator",
        "__iter__"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "CallableChoiceIterator",
        "__iter__"
      ]
    ],
    [
      "django/forms/forms.py",
      [
        "BaseForm",
        "__iter__"
      ]
    ],
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "__iter__"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "ModelChoiceIterator",
        "__iter__"
      ]
    ],
    [
      "django/http/multipartparser.py",
      [
        "LazyStream",
        "__iter__"
      ]
    ],
    [
      "django/http/multipartparser.py",
      [
        "ChunkIter",
        "__iter__"
      ]
    ],
    [
      "django/http/multipartparser.py",
      [
        "InterBoundaryIter",
        "__iter__"
      ]
    ],
    [
      "django/http/multipartparser.py",
      [
        "BoundaryIter",
        "__iter__"
      ]
    ],
    [
      "django/http/multipartparser.py",
      [
        "Parser",
        "__iter__"
      ]
    ],
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "__iter__"
      ]
    ],
    [
      "django/http/response.py",
      [
        "HttpResponse",
        "__iter__"
      ]
    ],
    [
      "django/http/response.py",
      [
        "StreamingHttpResponse",
        "__iter__"
      ]
    ],
    [
      "django/template/base.py",
      [
        "Template",
        "__iter__"
      ]
    ],
    [
      "django/template/base.py",
      [
        "Node",
        "__iter__"
      ]
    ],
    [
      "django/template/context.py",
      [
        "BaseContext",
        "__iter__"
      ]
    ],
    [
      "django/template/context.py",
      [
        "RenderContext",
        "__iter__"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "IfNode",
        "__iter__"
      ]
    ],
    [
      "django/template/response.py",
      [
        "SimpleTemplateResponse",
        "__iter__"
      ]
    ],
    [
      "django/template/utils.py",
      [
        "EngineHandler",
        "__iter__"
      ]
    ],
    [
      "django/test/runner.py",
      [
        "ParallelTestSuite",
        "__iter__"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "CaptureQueriesContext",
        "__iter__"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "OrderedSet",
        "__iter__"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "CaseInsensitiveMapping",
        "__iter__"
      ]
    ],
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_formset_iteration",
        "BaseReverseFormSet",
        "__iter__"
      ]
    ],
    [
      "tests/get_earliest_or_latest/models.py",
      [
        "IndexErrorQuerySet",
        "__iter__"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Colour",
        "__iter__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "ObjectA",
        "__iter__"
      ]
    ],
    [
      "tests/template_tests/test_logging.py",
      [
        "VariableResolveLoggingTests",
        "test_log_on_variable_does_not_exist_silent",
        "TestObject",
        "__iter__"
      ]
    ]
  ],
  "errors": [
    [
      "django/contrib/admin/helpers.py",
      [
        "AdminForm",
        "errors"
      ]
    ],
    [
      "django/contrib/admin/helpers.py",
      [
        "Fieldline",
        "errors"
      ]
    ],
    [
      "django/contrib/admin/helpers.py",
      [
        "AdminField",
        "errors"
      ]
    ],
    [
      "django/forms/boundfield.py",
      [
        "BoundField",
        "errors"
      ]
    ],
    [
      "django/forms/forms.py",
      [
        "BaseForm",
        "errors"
      ]
    ],
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "errors"
      ]
    ]
  ],
  "non_field_errors": [
    [
      "django/contrib/admin/helpers.py",
      [
        "AdminForm",
        "non_field_errors"
      ]
    ],
    [
      "django/forms/forms.py",
      [
        "BaseForm",
        "non_field_errors"
      ]
    ]
  ],
  "media": [
    [
      "django/contrib/admin/helpers.py",
      [
        "AdminForm",
        "media"
      ]
    ],
    [
      "django/contrib/admin/helpers.py",
      [
        "Fieldset",
        "media"
      ]
    ],
    [
      "django/contrib/admin/helpers.py",
      [
        "InlineAdminFormSet",
        "media"
      ]
    ],
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "media"
      ]
    ],
    [
      "django/contrib/admin/options.py",
      [
        "InlineModelAdmin",
        "media"
      ]
    ],
    [
      "django/contrib/admin/widgets.py",
      [
        "RelatedFieldWidgetWrapper",
        "media"
      ]
    ],
    [
      "django/contrib/admin/widgets.py",
      [
        "AutocompleteMixin",
        "media"
      ]
    ],
    [
      "django/contrib/gis/admin/options.py",
      [
        "GeoModelAdmin",
        "media"
      ]
    ],
    [
      "django/contrib/postgres/forms/array.py",
      [
        "SplitArrayWidget",
        "media"
      ]
    ],
    [
      "django/forms/forms.py",
      [
        "BaseForm",
        "media"
      ]
    ],
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "media"
      ]
    ],
    [
      "django/template/context_processors.py",
      [
        "media"
      ]
    ]
  ],
  "label_tag": [
    [
      "django/contrib/admin/helpers.py",
      [
        "AdminField",
        "label_tag"
      ]
    ],
    [
      "django/contrib/admin/helpers.py",
      [
        "AdminReadonlyField",
        "label_tag"
      ]
    ],
    [
      "django/forms/boundfield.py",
      [
        "BoundField",
        "label_tag"
      ]
    ]
  ],
  "contents": [
    [
      "django/contrib/admin/helpers.py",
      [
        "AdminReadonlyField",
        "contents"
      ]
    ]
  ],
  "fields": [
    [
      "django/contrib/admin/helpers.py",
      [
        "InlineAdminFormSet",
        "fields"
      ]
    ],
    [
      "django/contrib/gis/gdal/feature.py",
      [
        "Feature",
        "fields"
      ]
    ],
    [
      "django/contrib/gis/gdal/layer.py",
      [
        "Layer",
        "fields"
      ]
    ],
    [
      "django/db/models/options.py",
      [
        "Options",
        "fields"
      ]
    ],
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_abstract_model_with_regular_python_mixin_mro",
        "fields"
      ]
    ]
  ],
  "inline_formset_data": [
    [
      "django/contrib/admin/helpers.py",
      [
        "InlineAdminFormSet",
        "inline_formset_data"
      ]
    ]
  ],
  "forms": [
    [
      "django/contrib/admin/helpers.py",
      [
        "InlineAdminFormSet",
        "forms"
      ]
    ],
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "forms"
      ]
    ]
  ],
  "non_form_errors": [
    [
      "django/contrib/admin/helpers.py",
      [
        "InlineAdminFormSet",
        "non_form_errors"
      ]
    ],
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "non_form_errors"
      ]
    ]
  ],
  "needs_explicit_pk_field": [
    [
      "django/contrib/admin/helpers.py",
      [
        "InlineAdminForm",
        "needs_explicit_pk_field"
      ]
    ]
  ],
  "pk_field": [
    [
      "django/contrib/admin/helpers.py",
      [
        "InlineAdminForm",
        "pk_field"
      ]
    ]
  ],
  "fk_field": [
    [
      "django/contrib/admin/helpers.py",
      [
        "InlineAdminForm",
        "fk_field"
      ]
    ]
  ],
  "deletion_field": [
    [
      "django/contrib/admin/helpers.py",
      [
        "InlineAdminForm",
        "deletion_field"
      ]
    ]
  ],
  "ordering_field": [
    [
      "django/contrib/admin/helpers.py",
      [
        "InlineAdminForm",
        "ordering_field"
      ]
    ]
  ],
  "log_action": [
    [
      "django/contrib/admin/models.py",
      [
        "LogEntryManager",
        "log_action"
      ]
    ]
  ],
  "__str__": [
    [
      "django/contrib/admin/models.py",
      [
        "LogEntry",
        "__str__"
      ]
    ],
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "__str__"
      ]
    ],
    [
      "django/contrib/auth/base_user.py",
      [
        "AbstractBaseUser",
        "__str__"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "Permission",
        "__str__"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "Group",
        "__str__"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "AnonymousUser",
        "__str__"
      ]
    ],
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericForeignKey",
        "__str__"
      ]
    ],
    [
      "django/contrib/contenttypes/fields.py",
      [
        "create_generic_related_manager",
        "GenericRelatedObjectManager",
        "__str__"
      ]
    ],
    [
      "django/contrib/contenttypes/models.py",
      [
        "ContentType",
        "__str__"
      ]
    ],
    [
      "django/contrib/flatpages/models.py",
      [
        "FlatPage",
        "__str__"
      ]
    ],
    [
      "django/contrib/gis/db/backends/base/adapter.py",
      [
        "WKTAdapter",
        "__str__"
      ]
    ],
    [
      "django/contrib/gis/db/backends/base/models.py",
      [
        "SpatialRefSysMixin",
        "__str__"
      ]
    ],
    [
      "django/contrib/gis/db/backends/oracle/models.py",
      [
        "OracleGeometryColumns",
        "__str__"
      ]
    ],
    [
      "django/contrib/gis/db/backends/postgis/adapter.py",
      [
        "PostGISAdapter",
        "__str__"
      ]
    ],
    [
      "django/contrib/gis/db/backends/postgis/models.py",
      [
        "PostGISGeometryColumns",
        "__str__"
      ]
    ],
    [
      "django/contrib/gis/db/backends/spatialite/models.py",
      [
        "SpatialiteGeometryColumns",
        "__str__"
      ]
    ],
    [
      "django/contrib/gis/gdal/datasource.py",
      [
        "DataSource",
        "__str__"
      ]
    ],
    [
      "django/contrib/gis/gdal/driver.py",
      [
        "Driver",
        "__str__"
      ]
    ],
    [
      "django/contrib/gis/gdal/envelope.py",
      [
        "Envelope",
        "__str__"
      ]
    ],
    [
      "django/contrib/gis/gdal/feature.py",
      [
        "Feature",
        "__str__"
      ]
    ],
    [
      "django/contrib/gis/gdal/field.py",
      [
        "Field",
        "__str__"
      ]
    ],
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "__str__"
      ]
    ],
    [
      "django/contrib/gis/gdal/geomtype.py",
      [
        "OGRGeomType",
        "__str__"
      ]
    ],
    [
      "django/contrib/gis/gdal/layer.py",
      [
        "Layer",
        "__str__"
      ]
    ],
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "GDALRaster",
        "__str__"
      ]
    ],
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "__str__"
      ]
    ],
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "CoordTransform",
        "__str__"
      ]
    ],
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "__str__"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "__str__"
      ]
    ],
    [
      "django/contrib/gis/geos/prototypes/threadsafe.py",
      [
        "GEOSFunc",
        "__str__"
      ]
    ],
    [
      "django/contrib/gis/measure.py",
      [
        "MeasureBase",
        "__str__"
      ]
    ],
    [
      "django/contrib/messages/storage/base.py",
      [
        "Message",
        "__str__"
      ]
    ],
    [
      "django/contrib/postgres/search.py",
      [
        "SearchQuery",
        "__str__"
      ]
    ],
    [
      "django/contrib/postgres/search.py",
      [
        "CombinedSearchQuery",
        "__str__"
      ]
    ],
    [
      "django/contrib/redirects/models.py",
      [
        "Redirect",
        "__str__"
      ]
    ],
    [
      "django/contrib/sessions/base_session.py",
      [
        "AbstractBaseSession",
        "__str__"
      ]
    ],
    [
      "django/contrib/sites/models.py",
      [
        "Site",
        "__str__"
      ]
    ],
    [
      "django/contrib/sites/requests.py",
      [
        "RequestSite",
        "__str__"
      ]
    ],
    [
      "django/core/checks/messages.py",
      [
        "CheckMessage",
        "__str__"
      ]
    ],
    [
      "django/core/exceptions.py",
      [
        "ValidationError",
        "__str__"
      ]
    ],
    [
      "django/core/files/base.py",
      [
        "File",
        "__str__"
      ]
    ],
    [
      "django/core/files/base.py",
      [
        "ContentFile",
        "__str__"
      ]
    ],
    [
      "django/core/files/uploadhandler.py",
      [
        "StopUpload",
        "__str__"
      ]
    ],
    [
      "django/core/mail/utils.py",
      [
        "CachedDnsName",
        "__str__"
      ]
    ],
    [
      "django/core/serializers/xml_serializer.py",
      [
        "DTDForbidden",
        "__str__"
      ]
    ],
    [
      "django/core/serializers/xml_serializer.py",
      [
        "EntitiesForbidden",
        "__str__"
      ]
    ],
    [
      "django/core/serializers/xml_serializer.py",
      [
        "ExternalReferenceForbidden",
        "__str__"
      ]
    ],
    [
      "django/db/backends/ddl_references.py",
      [
        "Reference",
        "__str__"
      ]
    ],
    [
      "django/db/backends/ddl_references.py",
      [
        "Table",
        "__str__"
      ]
    ],
    [
      "django/db/backends/ddl_references.py",
      [
        "Columns",
        "__str__"
      ]
    ],
    [
      "django/db/backends/ddl_references.py",
      [
        "IndexName",
        "__str__"
      ]
    ],
    [
      "django/db/backends/ddl_references.py",
      [
        "IndexColumns",
        "__str__"
      ]
    ],
    [
      "django/db/backends/ddl_references.py",
      [
        "ForeignKeyName",
        "__str__"
      ]
    ],
    [
      "django/db/backends/ddl_references.py",
      [
        "Statement",
        "__str__"
      ]
    ],
    [
      "django/db/migrations/exceptions.py",
      [
        "NodeNotFoundError",
        "__str__"
      ]
    ],
    [
      "django/db/migrations/graph.py",
      [
        "Node",
        "__str__"
      ]
    ],
    [
      "django/db/migrations/graph.py",
      [
        "MigrationGraph",
        "__str__"
      ]
    ],
    [
      "django/db/migrations/migration.py",
      [
        "Migration",
        "__str__"
      ]
    ],
    [
      "django/db/models/base.py",
      [
        "Deferred",
        "__str__"
      ]
    ],
    [
      "django/db/models/base.py",
      [
        "Model",
        "__str__"
      ]
    ],
    [
      "django/db/models/enums.py",
      [
        "Choices",
        "__str__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "CombinedExpression",
        "__str__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "ExpressionList",
        "__str__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "When",
        "__str__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Case",
        "__str__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Window",
        "__str__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "WindowFrame",
        "__str__"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "__str__"
      ]
    ],
    [
      "django/db/models/manager.py",
      [
        "BaseManager",
        "__str__"
      ]
    ],
    [
      "django/db/models/options.py",
      [
        "Options",
        "__str__"
      ]
    ],
    [
      "django/db/models/sql/query.py",
      [
        "RawQuery",
        "__str__"
      ]
    ],
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "__str__"
      ]
    ],
    [
      "django/forms/boundfield.py",
      [
        "BoundField",
        "__str__"
      ]
    ],
    [
      "django/forms/boundfield.py",
      [
        "BoundWidget",
        "__str__"
      ]
    ],
    [
      "django/forms/forms.py",
      [
        "BaseForm",
        "__str__"
      ]
    ],
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "__str__"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "ModelChoiceIteratorValue",
        "__str__"
      ]
    ],
    [
      "django/forms/utils.py",
      [
        "ErrorDict",
        "__str__"
      ]
    ],
    [
      "django/forms/utils.py",
      [
        "ErrorList",
        "__str__"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "Media",
        "__str__"
      ]
    ],
    [
      "django/http/request.py",
      [
        "MediaType",
        "__str__"
      ]
    ],
    [
      "django/template/base.py",
      [
        "VariableDoesNotExist",
        "__str__"
      ]
    ],
    [
      "django/template/base.py",
      [
        "Origin",
        "__str__"
      ]
    ],
    [
      "django/template/base.py",
      [
        "Token",
        "__str__"
      ]
    ],
    [
      "django/template/base.py",
      [
        "FilterExpression",
        "__str__"
      ]
    ],
    [
      "django/template/base.py",
      [
        "Variable",
        "__str__"
      ]
    ],
    [
      "django/test/html.py",
      [
        "Element",
        "__str__"
      ]
    ],
    [
      "django/test/html.py",
      [
        "RootElement",
        "__str__"
      ]
    ],
    [
      "django/urls/resolvers.py",
      [
        "RegexPattern",
        "__str__"
      ]
    ],
    [
      "django/urls/resolvers.py",
      [
        "RoutePattern",
        "__str__"
      ]
    ],
    [
      "django/urls/resolvers.py",
      [
        "LocalePrefixPattern",
        "__str__"
      ]
    ],
    [
      "django/utils/encoding.py",
      [
        "DjangoUnicodeDecodeError",
        "__str__"
      ]
    ],
    [
      "django/utils/functional.py",
      [
        "lazy",
        "__proxy__",
        "__str__"
      ]
    ],
    [
      "django/utils/safestring.py",
      [
        "SafeString",
        "__str__"
      ]
    ],
    [
      "django/utils/tree.py",
      [
        "Node",
        "__str__"
      ]
    ],
    [
      "tests/admin_changelist/models.py",
      [
        "Musician",
        "__str__"
      ]
    ],
    [
      "tests/admin_changelist/models.py",
      [
        "Group",
        "__str__"
      ]
    ],
    [
      "tests/admin_checks/models.py",
      [
        "Song",
        "__str__"
      ]
    ],
    [
      "tests/admin_custom_urls/models.py",
      [
        "Action",
        "__str__"
      ]
    ],
    [
      "tests/admin_filters/models.py",
      [
        "Book",
        "__str__"
      ]
    ],
    [
      "tests/admin_filters/models.py",
      [
        "Department",
        "__str__"
      ]
    ],
    [
      "tests/admin_filters/models.py",
      [
        "Employee",
        "__str__"
      ]
    ],
    [
      "tests/admin_filters/models.py",
      [
        "TaggedItem",
        "__str__"
      ]
    ],
    [
      "tests/admin_filters/models.py",
      [
        "Bookmark",
        "__str__"
      ]
    ],
    [
      "tests/admin_inlines/models.py",
      [
        "Parent",
        "__str__"
      ]
    ],
    [
      "tests/admin_inlines/models.py",
      [
        "Teacher",
        "__str__"
      ]
    ],
    [
      "tests/admin_inlines/models.py",
      [
        "Child",
        "__str__"
      ]
    ],
    [
      "tests/admin_inlines/models.py",
      [
        "Book",
        "__str__"
      ]
    ],
    [
      "tests/admin_utils/models.py",
      [
        "Site",
        "__str__"
      ]
    ],
    [
      "tests/admin_utils/models.py",
      [
        "Article",
        "__str__"
      ]
    ],
    [
      "tests/admin_utils/models.py",
      [
        "Count",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Section",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Article",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Book",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Promo",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Chapter",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "ChapterXtra1",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "ChapterXtra2",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "ModelWithStringPrimaryKey",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Color",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Thing",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Actor",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Inquisition",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Sketch",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Character",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "StumpJoke",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Person",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Persona",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Account",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Subscriber",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "EmptyModel",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Category",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Gadget",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Villain",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "FunkyTag",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Plot",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "PlotDetails",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "SecretHideout",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "SuperSecretHideout",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Bookmark",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "CyclicOne",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "CyclicTwo",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Topping",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Song",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Question",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Answer",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "CoverLetter",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Telegram",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Report",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "FilteredManager",
        "__str__"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "ParentWithUUIDPK",
        "__str__"
      ]
    ],
    [
      "tests/admin_widgets/models.py",
      [
        "Member",
        "__str__"
      ]
    ],
    [
      "tests/admin_widgets/models.py",
      [
        "Band",
        "__str__"
      ]
    ],
    [
      "tests/admin_widgets/models.py",
      [
        "Album",
        "__str__"
      ]
    ],
    [
      "tests/admin_widgets/models.py",
      [
        "Inventory",
        "__str__"
      ]
    ],
    [
      "tests/admin_widgets/models.py",
      [
        "Car",
        "__str__"
      ]
    ],
    [
      "tests/admin_widgets/models.py",
      [
        "Student",
        "__str__"
      ]
    ],
    [
      "tests/admin_widgets/models.py",
      [
        "School",
        "__str__"
      ]
    ],
    [
      "tests/admin_widgets/models.py",
      [
        "Profile",
        "__str__"
      ]
    ],
    [
      "tests/aggregation/models.py",
      [
        "Author",
        "__str__"
      ]
    ],
    [
      "tests/aggregation/models.py",
      [
        "Publisher",
        "__str__"
      ]
    ],
    [
      "tests/aggregation/models.py",
      [
        "Book",
        "__str__"
      ]
    ],
    [
      "tests/aggregation/models.py",
      [
        "Store",
        "__str__"
      ]
    ],
    [
      "tests/aggregation_regress/models.py",
      [
        "Author",
        "__str__"
      ]
    ],
    [
      "tests/aggregation_regress/models.py",
      [
        "Publisher",
        "__str__"
      ]
    ],
    [
      "tests/aggregation_regress/models.py",
      [
        "Book",
        "__str__"
      ]
    ],
    [
      "tests/aggregation_regress/models.py",
      [
        "Store",
        "__str__"
      ]
    ],
    [
      "tests/aggregation_regress/models.py",
      [
        "HardbackBook",
        "__str__"
      ]
    ],
    [
      "tests/annotations/models.py",
      [
        "Company",
        "__str__"
      ]
    ],
    [
      "tests/auth_tests/models/custom_user.py",
      [
        "CustomUser",
        "__str__"
      ]
    ],
    [
      "tests/backends/models.py",
      [
        "Square",
        "__str__"
      ]
    ],
    [
      "tests/backends/models.py",
      [
        "Person",
        "__str__"
      ]
    ],
    [
      "tests/backends/models.py",
      [
        "Reporter",
        "__str__"
      ]
    ],
    [
      "tests/backends/models.py",
      [
        "Article",
        "__str__"
      ]
    ],
    [
      "tests/backends/models.py",
      [
        "Item",
        "__str__"
      ]
    ],
    [
      "tests/backends/models.py",
      [
        "Object",
        "__str__"
      ]
    ],
    [
      "tests/backends/models.py",
      [
        "ObjectReference",
        "__str__"
      ]
    ],
    [
      "tests/backends/test_ddl_references.py",
      [
        "MockReference",
        "__str__"
      ]
    ],
    [
      "tests/basic/models.py",
      [
        "Article",
        "__str__"
      ]
    ],
    [
      "tests/basic/models.py",
      [
        "SelfRef",
        "__str__"
      ]
    ],
    [
      "tests/contenttypes_tests/models.py",
      [
        "Site",
        "__str__"
      ]
    ],
    [
      "tests/contenttypes_tests/models.py",
      [
        "Author",
        "__str__"
      ]
    ],
    [
      "tests/contenttypes_tests/models.py",
      [
        "Article",
        "__str__"
      ]
    ],
    [
      "tests/contenttypes_tests/models.py",
      [
        "SchemeIncludedURL",
        "__str__"
      ]
    ],
    [
      "tests/contenttypes_tests/models.py",
      [
        "FooWithoutUrl",
        "__str__"
      ]
    ],
    [
      "tests/contenttypes_tests/models.py",
      [
        "Answer",
        "__str__"
      ]
    ],
    [
      "tests/contenttypes_tests/models.py",
      [
        "Post",
        "__str__"
      ]
    ],
    [
      "tests/contenttypes_tests/models.py",
      [
        "ModelWithNullFKToSite",
        "__str__"
      ]
    ],
    [
      "tests/custom_columns/models.py",
      [
        "Author",
        "__str__"
      ]
    ],
    [
      "tests/custom_columns/models.py",
      [
        "Article",
        "__str__"
      ]
    ],
    [
      "tests/custom_lookups/models.py",
      [
        "Author",
        "__str__"
      ]
    ],
    [
      "tests/custom_managers/models.py",
      [
        "Person",
        "__str__"
      ]
    ],
    [
      "tests/custom_managers/models.py",
      [
        "FunPerson",
        "__str__"
      ]
    ],
    [
      "tests/custom_managers/models.py",
      [
        "Book",
        "__str__"
      ]
    ],
    [
      "tests/custom_managers/models.py",
      [
        "Car",
        "__str__"
      ]
    ],
    [
      "tests/custom_managers/models.py",
      [
        "RelatedModel",
        "__str__"
      ]
    ],
    [
      "tests/custom_managers/models.py",
      [
        "RestrictedModel",
        "__str__"
      ]
    ],
    [
      "tests/custom_managers/models.py",
      [
        "OneToOneRestrictedModel",
        "__str__"
      ]
    ],
    [
      "tests/custom_methods/models.py",
      [
        "Article",
        "__str__"
      ]
    ],
    [
      "tests/custom_pk/fields.py",
      [
        "MyWrapper",
        "__str__"
      ]
    ],
    [
      "tests/custom_pk/models.py",
      [
        "Employee",
        "__str__"
      ]
    ],
    [
      "tests/custom_pk/models.py",
      [
        "Business",
        "__str__"
      ]
    ],
    [
      "tests/custom_pk/models.py",
      [
        "Bar",
        "__str__"
      ]
    ],
    [
      "tests/datetimes/models.py",
      [
        "Article",
        "__str__"
      ]
    ],
    [
      "tests/datetimes/models.py",
      [
        "Comment",
        "__str__"
      ]
    ],
    [
      "tests/db_functions/models.py",
      [
        "Author",
        "__str__"
      ]
    ],
    [
      "tests/db_functions/models.py",
      [
        "Article",
        "__str__"
      ]
    ],
    [
      "tests/db_functions/models.py",
      [
        "Fan",
        "__str__"
      ]
    ],
    [
      "tests/db_functions/models.py",
      [
        "DTModel",
        "__str__"
      ]
    ],
    [
      "tests/defer/models.py",
      [
        "Primary",
        "__str__"
      ]
    ],
    [
      "tests/defer_regress/models.py",
      [
        "Item",
        "__str__"
      ]
    ],
    [
      "tests/defer_regress/models.py",
      [
        "Leaf",
        "__str__"
      ]
    ],
    [
      "tests/defer_regress/models.py",
      [
        "SimpleItem",
        "__str__"
      ]
    ],
    [
      "tests/delete/models.py",
      [
        "R",
        "__str__"
      ]
    ],
    [
      "tests/distinct_on_fields/models.py",
      [
        "Tag",
        "__str__"
      ]
    ],
    [
      "tests/distinct_on_fields/models.py",
      [
        "Celebrity",
        "__str__"
      ]
    ],
    [
      "tests/distinct_on_fields/models.py",
      [
        "Staff",
        "__str__"
      ]
    ],
    [
      "tests/distinct_on_fields/models.py",
      [
        "StaffTag",
        "__str__"
      ]
    ],
    [
      "tests/expressions/models.py",
      [
        "Employee",
        "__str__"
      ]
    ],
    [
      "tests/expressions/models.py",
      [
        "Company",
        "__str__"
      ]
    ],
    [
      "tests/expressions/models.py",
      [
        "Number",
        "__str__"
      ]
    ],
    [
      "tests/expressions/models.py",
      [
        "Result",
        "__str__"
      ]
    ],
    [
      "tests/expressions/models.py",
      [
        "Time",
        "__str__"
      ]
    ],
    [
      "tests/expressions/models.py",
      [
        "SimulationRun",
        "__str__"
      ]
    ],
    [
      "tests/expressions/models.py",
      [
        "UUID",
        "__str__"
      ]
    ],
    [
      "tests/expressions_case/models.py",
      [
        "CaseTestModel",
        "__str__"
      ]
    ],
    [
      "tests/expressions_case/models.py",
      [
        "O2OCaseTestModel",
        "__str__"
      ]
    ],
    [
      "tests/expressions_case/models.py",
      [
        "FKCaseTestModel",
        "__str__"
      ]
    ],
    [
      "tests/expressions_case/models.py",
      [
        "Client",
        "__str__"
      ]
    ],
    [
      "tests/expressions_window/models.py",
      [
        "Employee",
        "__str__"
      ]
    ],
    [
      "tests/extra_regress/models.py",
      [
        "RevisionableModel",
        "__str__"
      ]
    ],
    [
      "tests/extra_regress/models.py",
      [
        "TestObject",
        "__str__"
      ]
    ],
    [
      "tests/field_defaults/models.py",
      [
        "Article",
        "__str__"
      ]
    ],
    [
      "tests/filtered_relation/models.py",
      [
        "Author",
        "__str__"
      ]
    ],
    [
      "tests/filtered_relation/models.py",
      [
        "Editor",
        "__str__"
      ]
    ],
    [
      "tests/filtered_relation/models.py",
      [
        "Book",
        "__str__"
      ]
    ],
    [
      "tests/filtered_relation/models.py",
      [
        "Borrower",
        "__str__"
      ]
    ],
    [
      "tests/filtered_relation/models.py",
      [
        "Reservation",
        "__str__"
      ]
    ],
    [
      "tests/filtered_relation/models.py",
      [
        "RentalSession",
        "__str__"
      ]
    ],
    [
      "tests/fixtures/models.py",
      [
        "Category",
        "__str__"
      ]
    ],
    [
      "tests/fixtures/models.py",
      [
        "Article",
        "__str__"
      ]
    ],
    [
      "tests/fixtures/models.py",
      [
        "Blog",
        "__str__"
      ]
    ],
    [
      "tests/fixtures/models.py",
      [
        "Tag",
        "__str__"
      ]
    ],
    [
      "tests/fixtures/models.py",
      [
        "Person",
        "__str__"
      ]
    ],
    [
      "tests/fixtures/models.py",
      [
        "Visa",
        "__str__"
      ]
    ],
    [
      "tests/fixtures/models.py",
      [
        "Book",
        "__str__"
      ]
    ],
    [
      "tests/fixtures/models.py",
      [
        "NaturalKeyThing",
        "__str__"
      ]
    ],
    [
      "tests/fixtures_model_package/models/__init__.py",
      [
        "Article",
        "__str__"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "Animal",
        "__str__"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "Stuff",
        "__str__"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "Widget",
        "__str__"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "Store",
        "__str__"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "Person",
        "__str__"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "Book",
        "__str__"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "NKChild",
        "__str__"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "RefToNKChild",
        "__str__"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "BaseNKModel",
        "__str__"
      ]
    ],
    [
      "tests/foreign_object/models/article.py",
      [
        "Article",
        "__str__"
      ]
    ],
    [
      "tests/foreign_object/models/empty_join.py",
      [
        "SlugPage",
        "__str__"
      ]
    ],
    [
      "tests/foreign_object/models/person.py",
      [
        "Country",
        "__str__"
      ]
    ],
    [
      "tests/foreign_object/models/person.py",
      [
        "Person",
        "__str__"
      ]
    ],
    [
      "tests/foreign_object/models/person.py",
      [
        "Group",
        "__str__"
      ]
    ],
    [
      "tests/foreign_object/models/person.py",
      [
        "Membership",
        "__str__"
      ]
    ],
    [
      "tests/forms_tests/models.py",
      [
        "ChoiceOptionModel",
        "__str__"
      ]
    ],
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "FormsErrorMessagesTestCase",
        "test_subclassing_errorlist",
        "CustomErrorList",
        "__str__"
      ]
    ],
    [
      "tests/forms_tests/tests/test_utils.py",
      [
        "FormsUtilsTestCase",
        "test_validation_error",
        "VeryBadError",
        "__str__"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_clearablefileinput.py",
      [
        "FakeFieldFile",
        "__str__"
      ]
    ],
    [
      "tests/generic_inline_admin/models.py",
      [
        "Media",
        "__str__"
      ]
    ],
    [
      "tests/generic_relations/models.py",
      [
        "TaggedItem",
        "__str__"
      ]
    ],
    [
      "tests/generic_relations/models.py",
      [
        "Comparison",
        "__str__"
      ]
    ],
    [
      "tests/generic_relations/models.py",
      [
        "Animal",
        "__str__"
      ]
    ],
    [
      "tests/generic_relations/models.py",
      [
        "Vegetable",
        "__str__"
      ]
    ],
    [
      "tests/generic_relations/models.py",
      [
        "Mineral",
        "__str__"
      ]
    ],
    [
      "tests/generic_relations_regress/models.py",
      [
        "Link",
        "__str__"
      ]
    ],
    [
      "tests/generic_relations_regress/models.py",
      [
        "Place",
        "__str__"
      ]
    ],
    [
      "tests/generic_relations_regress/models.py",
      [
        "Restaurant",
        "__str__"
      ]
    ],
    [
      "tests/generic_relations_regress/models.py",
      [
        "Cafe",
        "__str__"
      ]
    ],
    [
      "tests/generic_relations_regress/models.py",
      [
        "Address",
        "__str__"
      ]
    ],
    [
      "tests/generic_relations_regress/models.py",
      [
        "Person",
        "__str__"
      ]
    ],
    [
      "tests/generic_relations_regress/models.py",
      [
        "Company",
        "__str__"
      ]
    ],
    [
      "tests/generic_relations_regress/models.py",
      [
        "Team",
        "__str__"
      ]
    ],
    [
      "tests/generic_views/models.py",
      [
        "Artist",
        "__str__"
      ]
    ],
    [
      "tests/generic_views/models.py",
      [
        "Author",
        "__str__"
      ]
    ],
    [
      "tests/generic_views/models.py",
      [
        "Book",
        "__str__"
      ]
    ],
    [
      "tests/get_or_create/models.py",
      [
        "Person",
        "__str__"
      ]
    ],
    [
      "tests/gis_tests/distapp/models.py",
      [
        "NamedModel",
        "__str__"
      ]
    ],
    [
      "tests/gis_tests/geo3d/models.py",
      [
        "NamedModel",
        "__str__"
      ]
    ],
    [
      "tests/gis_tests/geoadmin/models.py",
      [
        "City",
        "__str__"
      ]
    ],
    [
      "tests/gis_tests/geoapp/models.py",
      [
        "NamedModel",
        "__str__"
      ]
    ],
    [
      "tests/gis_tests/geogapp/models.py",
      [
        "NamedModel",
        "__str__"
      ]
    ],
    [
      "tests/gis_tests/geogapp/models.py",
      [
        "County",
        "__str__"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "UserListA",
        "__str__"
      ]
    ],
    [
      "tests/gis_tests/layermap/models.py",
      [
        "NamedModel",
        "__str__"
      ]
    ],
    [
      "tests/gis_tests/rasterapp/models.py",
      [
        "RasterModel",
        "__str__"
      ]
    ],
    [
      "tests/gis_tests/rasterapp/models.py",
      [
        "RasterRelatedModel",
        "__str__"
      ]
    ],
    [
      "tests/gis_tests/relatedapp/models.py",
      [
        "Location",
        "__str__"
      ]
    ],
    [
      "tests/gis_tests/relatedapp/models.py",
      [
        "City",
        "__str__"
      ]
    ],
    [
      "tests/gis_tests/relatedapp/models.py",
      [
        "Parcel",
        "__str__"
      ]
    ],
    [
      "tests/inline_formsets/models.py",
      [
        "Poet",
        "__str__"
      ]
    ],
    [
      "tests/inline_formsets/models.py",
      [
        "Poem",
        "__str__"
      ]
    ],
    [
      "tests/lookup/models.py",
      [
        "Alarm",
        "__str__"
      ]
    ],
    [
      "tests/lookup/models.py",
      [
        "Article",
        "__str__"
      ]
    ],
    [
      "tests/lookup/models.py",
      [
        "Season",
        "__str__"
      ]
    ],
    [
      "tests/lookup/models.py",
      [
        "Game",
        "__str__"
      ]
    ],
    [
      "tests/lookup/models.py",
      [
        "Player",
        "__str__"
      ]
    ],
    [
      "tests/m2m_and_m2o/models.py",
      [
        "Issue",
        "__str__"
      ]
    ],
    [
      "tests/m2m_intermediary/models.py",
      [
        "Reporter",
        "__str__"
      ]
    ],
    [
      "tests/m2m_intermediary/models.py",
      [
        "Article",
        "__str__"
      ]
    ],
    [
      "tests/m2m_intermediary/models.py",
      [
        "Writer",
        "__str__"
      ]
    ],
    [
      "tests/m2m_multiple/models.py",
      [
        "Category",
        "__str__"
      ]
    ],
    [
      "tests/m2m_multiple/models.py",
      [
        "Article",
        "__str__"
      ]
    ],
    [
      "tests/m2m_recursive/models.py",
      [
        "Person",
        "__str__"
      ]
    ],
    [
      "tests/m2m_regress/models.py",
      [
        "SelfRefer",
        "__str__"
      ]
    ],
    [
      "tests/m2m_regress/models.py",
      [
        "Tag",
        "__str__"
      ]
    ],
    [
      "tests/m2m_regress/models.py",
      [
        "TagCollection",
        "__str__"
      ]
    ],
    [
      "tests/m2m_regress/models.py",
      [
        "Entry",
        "__str__"
      ]
    ],
    [
      "tests/m2m_regress/models.py",
      [
        "Line",
        "__str__"
      ]
    ],
    [
      "tests/m2m_signals/models.py",
      [
        "Part",
        "__str__"
      ]
    ],
    [
      "tests/m2m_signals/models.py",
      [
        "Car",
        "__str__"
      ]
    ],
    [
      "tests/m2m_signals/models.py",
      [
        "Person",
        "__str__"
      ]
    ],
    [
      "tests/m2m_through/models.py",
      [
        "Person",
        "__str__"
      ]
    ],
    [
      "tests/m2m_through/models.py",
      [
        "Group",
        "__str__"
      ]
    ],
    [
      "tests/m2m_through/models.py",
      [
        "Membership",
        "__str__"
      ]
    ],
    [
      "tests/m2m_through/models.py",
      [
        "CustomMembership",
        "__str__"
      ]
    ],
    [
      "tests/m2m_through/models.py",
      [
        "PersonSelfRefM2M",
        "__str__"
      ]
    ],
    [
      "tests/m2m_through/models.py",
      [
        "Event",
        "__str__"
      ]
    ],
    [
      "tests/m2m_through/models.py",
      [
        "Employee",
        "__str__"
      ]
    ],
    [
      "tests/m2m_through_regress/models.py",
      [
        "Membership",
        "__str__"
      ]
    ],
    [
      "tests/m2m_through_regress/models.py",
      [
        "UserMembership",
        "__str__"
      ]
    ],
    [
      "tests/m2m_through_regress/models.py",
      [
        "Person",
        "__str__"
      ]
    ],
    [
      "tests/m2m_through_regress/models.py",
      [
        "Group",
        "__str__"
      ]
    ],
    [
      "tests/m2m_through_regress/models.py",
      [
        "Car",
        "__str__"
      ]
    ],
    [
      "tests/m2m_through_regress/models.py",
      [
        "Driver",
        "__str__"
      ]
    ],
    [
      "tests/m2m_through_regress/models.py",
      [
        "CarDriver",
        "__str__"
      ]
    ],
    [
      "tests/m2o_recursive/models.py",
      [
        "Category",
        "__str__"
      ]
    ],
    [
      "tests/m2o_recursive/models.py",
      [
        "Person",
        "__str__"
      ]
    ],
    [
      "tests/managers_regress/models.py",
      [
        "Parent",
        "__str__"
      ]
    ],
    [
      "tests/managers_regress/models.py",
      [
        "Child1",
        "__str__"
      ]
    ],
    [
      "tests/managers_regress/models.py",
      [
        "Child2",
        "__str__"
      ]
    ],
    [
      "tests/managers_regress/models.py",
      [
        "Child3",
        "__str__"
      ]
    ],
    [
      "tests/managers_regress/models.py",
      [
        "Child4",
        "__str__"
      ]
    ],
    [
      "tests/managers_regress/models.py",
      [
        "Child5",
        "__str__"
      ]
    ],
    [
      "tests/managers_regress/models.py",
      [
        "RelatedModel",
        "__str__"
      ]
    ],
    [
      "tests/managers_regress/models.py",
      [
        "RelationModel",
        "__str__"
      ]
    ],
    [
      "tests/many_to_many/models.py",
      [
        "Publication",
        "__str__"
      ]
    ],
    [
      "tests/many_to_many/models.py",
      [
        "Tag",
        "__str__"
      ]
    ],
    [
      "tests/many_to_many/models.py",
      [
        "Article",
        "__str__"
      ]
    ],
    [
      "tests/many_to_many/models.py",
      [
        "User",
        "__str__"
      ]
    ],
    [
      "tests/many_to_one/models.py",
      [
        "Reporter",
        "__str__"
      ]
    ],
    [
      "tests/many_to_one/models.py",
      [
        "Article",
        "__str__"
      ]
    ],
    [
      "tests/many_to_one/models.py",
      [
        "City",
        "__str__"
      ]
    ],
    [
      "tests/many_to_one/models.py",
      [
        "District",
        "__str__"
      ]
    ],
    [
      "tests/many_to_one/models.py",
      [
        "Category",
        "__str__"
      ]
    ],
    [
      "tests/many_to_one/models.py",
      [
        "Relation",
        "__str__"
      ]
    ],
    [
      "tests/many_to_one_null/models.py",
      [
        "Reporter",
        "__str__"
      ]
    ],
    [
      "tests/many_to_one_null/models.py",
      [
        "Article",
        "__str__"
      ]
    ],
    [
      "tests/migrations/models.py",
      [
        "UnicodeModel",
        "__str__"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Category",
        "__str__"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Writer",
        "__str__"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Article",
        "__str__"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Publication",
        "__str__"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "WriterProfile",
        "__str__"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "TextFile",
        "__str__"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "try_",
        "ImageFile",
        "__str__"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "try_",
        "OptionalImageFile",
        "__str__"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "try_",
        "NoExtensionImageFile",
        "__str__"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Product",
        "__str__"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Price",
        "__str__"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Inventory",
        "__str__"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "ExplicitPK",
        "__str__"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Post",
        "__str__"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "DateTimePost",
        "__str__"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "BigInt",
        "__str__"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Colour",
        "__str__"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Character",
        "__str__"
      ]
    ],
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_custom_choice_iterator_passes_model_to_widget",
        "CustomModelChoiceValue",
        "__str__"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Author",
        "__str__"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Book",
        "__str__"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "BookWithCustomPK",
        "__str__"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "BookWithOptionalAltEditor",
        "__str__"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "AlternateBook",
        "__str__"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "AuthorMeeting",
        "__str__"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Place",
        "__str__"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Owner",
        "__str__"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "OwnerProfile",
        "__str__"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Product",
        "__str__"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Price",
        "__str__"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Repository",
        "__str__"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Revision",
        "__str__"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Player",
        "__str__"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Poet",
        "__str__"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Poem",
        "__str__"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Post",
        "__str__"
      ]
    ],
    [
      "tests/model_formsets_regress/models.py",
      [
        "Host",
        "__str__"
      ]
    ],
    [
      "tests/model_inheritance/models.py",
      [
        "CommonInfo",
        "__str__"
      ]
    ],
    [
      "tests/model_inheritance/models.py",
      [
        "Attachment",
        "__str__"
      ]
    ],
    [
      "tests/model_inheritance/models.py",
      [
        "Chef",
        "__str__"
      ]
    ],
    [
      "tests/model_inheritance/models.py",
      [
        "Place",
        "__str__"
      ]
    ],
    [
      "tests/model_inheritance/models.py",
      [
        "Restaurant",
        "__str__"
      ]
    ],
    [
      "tests/model_inheritance/models.py",
      [
        "ItalianRestaurant",
        "__str__"
      ]
    ],
    [
      "tests/model_inheritance/models.py",
      [
        "Supplier",
        "__str__"
      ]
    ],
    [
      "tests/model_inheritance/models.py",
      [
        "ParkingLot",
        "__str__"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "Place",
        "__str__"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "Restaurant",
        "__str__"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "ItalianRestaurant",
        "__str__"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "ParkingLot",
        "__str__"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "Supplier",
        "__str__"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "Article",
        "__str__"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "BaseM",
        "__str__"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "DerivedM",
        "__str__"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "Person",
        "__str__"
      ]
    ],
    [
      "tests/model_inheritance_regress/models.py",
      [
        "AbstractEvent",
        "__str__"
      ]
    ],
    [
      "tests/model_regress/models.py",
      [
        "Article",
        "__str__"
      ]
    ],
    [
      "tests/model_regress/models.py",
      [
        "Department",
        "__str__"
      ]
    ],
    [
      "tests/model_regress/models.py",
      [
        "Worker",
        "__str__"
      ]
    ],
    [
      "tests/modeladmin/models.py",
      [
        "Band",
        "__str__"
      ]
    ],
    [
      "tests/modeladmin/models.py",
      [
        "Song",
        "__str__"
      ]
    ],
    [
      "tests/multiple_database/models.py",
      [
        "Review",
        "__str__"
      ]
    ],
    [
      "tests/multiple_database/models.py",
      [
        "Person",
        "__str__"
      ]
    ],
    [
      "tests/multiple_database/models.py",
      [
        "Book",
        "__str__"
      ]
    ],
    [
      "tests/multiple_database/models.py",
      [
        "Pet",
        "__str__"
      ]
    ],
    [
      "tests/null_fk/models.py",
      [
        "Post",
        "__str__"
      ]
    ],
    [
      "tests/null_fk_ordering/models.py",
      [
        "Article",
        "__str__"
      ]
    ],
    [
      "tests/null_fk_ordering/models.py",
      [
        "Post",
        "__str__"
      ]
    ],
    [
      "tests/null_fk_ordering/models.py",
      [
        "Comment",
        "__str__"
      ]
    ],
    [
      "tests/null_queries/models.py",
      [
        "Poll",
        "__str__"
      ]
    ],
    [
      "tests/null_queries/models.py",
      [
        "Choice",
        "__str__"
      ]
    ],
    [
      "tests/one_to_one/models.py",
      [
        "Place",
        "__str__"
      ]
    ],
    [
      "tests/one_to_one/models.py",
      [
        "Restaurant",
        "__str__"
      ]
    ],
    [
      "tests/one_to_one/models.py",
      [
        "Bar",
        "__str__"
      ]
    ],
    [
      "tests/one_to_one/models.py",
      [
        "Waiter",
        "__str__"
      ]
    ],
    [
      "tests/one_to_one/models.py",
      [
        "Favorites",
        "__str__"
      ]
    ],
    [
      "tests/one_to_one/models.py",
      [
        "MultiModel",
        "__str__"
      ]
    ],
    [
      "tests/or_lookups/models.py",
      [
        "Article",
        "__str__"
      ]
    ],
    [
      "tests/order_with_respect_to/models.py",
      [
        "Answer",
        "__str__"
      ]
    ],
    [
      "tests/order_with_respect_to/models.py",
      [
        "Post",
        "__str__"
      ]
    ],
    [
      "tests/ordering/models.py",
      [
        "Article",
        "__str__"
      ]
    ],
    [
      "tests/pagination/models.py",
      [
        "Article",
        "__str__"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "Author",
        "__str__"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "AuthorAddress",
        "__str__"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "Book",
        "__str__"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "Reader",
        "__str__"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "Teacher",
        "__str__"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "TaggedItem",
        "__str__"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "Employee",
        "__str__"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "LessonEntry",
        "__str__"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "WordEntry",
        "__str__"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "Author2",
        "__str__"
      ]
    ],
    [
      "tests/proxy_models/models.py",
      [
        "Person",
        "__str__"
      ]
    ],
    [
      "tests/proxy_models/models.py",
      [
        "User",
        "__str__"
      ]
    ],
    [
      "tests/proxy_models/models.py",
      [
        "State",
        "__str__"
      ]
    ],
    [
      "tests/proxy_models/models.py",
      [
        "BaseUser",
        "__str__"
      ]
    ],
    [
      "tests/proxy_models/models.py",
      [
        "Issue",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "NamedCategory",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Tag",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Note",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Annotation",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "ExtraInfo",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Author",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Item",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Report",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Ranking",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Cover",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Number",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "ManagedModel",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Celebrity",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "LeafA",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "ReservedName",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "SharedConnection",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "SingleObject",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Plaything",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Article",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Food",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Eaten",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Node",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "ObjectA",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "ObjectB",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "ObjectC",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "SimpleCategory",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "SpecialCategory",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "CategoryItem",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "OneToOneCategory",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Job",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Responsibility",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Identifier",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Order",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "OrderItem",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Task",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Staff",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "StaffUser",
        "__str__"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "Company",
        "__str__"
      ]
    ],
    [
      "tests/reserved_names/models.py",
      [
        "Thing",
        "__str__"
      ]
    ],
    [
      "tests/reverse_lookup/models.py",
      [
        "User",
        "__str__"
      ]
    ],
    [
      "tests/reverse_lookup/models.py",
      [
        "Poll",
        "__str__"
      ]
    ],
    [
      "tests/reverse_lookup/models.py",
      [
        "Choice",
        "__str__"
      ]
    ],
    [
      "tests/save_delete_hooks/models.py",
      [
        "Person",
        "__str__"
      ]
    ],
    [
      "tests/schema/models.py",
      [
        "Thing",
        "__str__"
      ]
    ],
    [
      "tests/select_related/models.py",
      [
        "Domain",
        "__str__"
      ]
    ],
    [
      "tests/select_related/models.py",
      [
        "Kingdom",
        "__str__"
      ]
    ],
    [
      "tests/select_related/models.py",
      [
        "Phylum",
        "__str__"
      ]
    ],
    [
      "tests/select_related/models.py",
      [
        "Klass",
        "__str__"
      ]
    ],
    [
      "tests/select_related/models.py",
      [
        "Order",
        "__str__"
      ]
    ],
    [
      "tests/select_related/models.py",
      [
        "Family",
        "__str__"
      ]
    ],
    [
      "tests/select_related/models.py",
      [
        "Genus",
        "__str__"
      ]
    ],
    [
      "tests/select_related/models.py",
      [
        "Species",
        "__str__"
      ]
    ],
    [
      "tests/select_related/models.py",
      [
        "HybridSpecies",
        "__str__"
      ]
    ],
    [
      "tests/select_related/models.py",
      [
        "Topping",
        "__str__"
      ]
    ],
    [
      "tests/select_related/models.py",
      [
        "Pizza",
        "__str__"
      ]
    ],
    [
      "tests/select_related/models.py",
      [
        "TaggedItem",
        "__str__"
      ]
    ],
    [
      "tests/select_related/models.py",
      [
        "Bookmark",
        "__str__"
      ]
    ],
    [
      "tests/select_related_onetoone/models.py",
      [
        "User",
        "__str__"
      ]
    ],
    [
      "tests/select_related_onetoone/models.py",
      [
        "UserProfile",
        "__str__"
      ]
    ],
    [
      "tests/select_related_onetoone/models.py",
      [
        "UserStatResult",
        "__str__"
      ]
    ],
    [
      "tests/select_related_onetoone/models.py",
      [
        "UserStat",
        "__str__"
      ]
    ],
    [
      "tests/select_related_onetoone/models.py",
      [
        "StatDetails",
        "__str__"
      ]
    ],
    [
      "tests/select_related_onetoone/models.py",
      [
        "Parent1",
        "__str__"
      ]
    ],
    [
      "tests/select_related_onetoone/models.py",
      [
        "Parent2",
        "__str__"
      ]
    ],
    [
      "tests/select_related_onetoone/models.py",
      [
        "Child1",
        "__str__"
      ]
    ],
    [
      "tests/select_related_onetoone/models.py",
      [
        "Child2",
        "__str__"
      ]
    ],
    [
      "tests/select_related_regress/models.py",
      [
        "Building",
        "__str__"
      ]
    ],
    [
      "tests/select_related_regress/models.py",
      [
        "Device",
        "__str__"
      ]
    ],
    [
      "tests/select_related_regress/models.py",
      [
        "Port",
        "__str__"
      ]
    ],
    [
      "tests/select_related_regress/models.py",
      [
        "Connection",
        "__str__"
      ]
    ],
    [
      "tests/select_related_regress/models.py",
      [
        "Parent",
        "__str__"
      ]
    ],
    [
      "tests/select_related_regress/models.py",
      [
        "Item",
        "__str__"
      ]
    ],
    [
      "tests/select_related_regress/models.py",
      [
        "Fowl",
        "__str__"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "CategoryMetaData",
        "__str__"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "Category",
        "__str__"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "Author",
        "__str__"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "Article",
        "__str__"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "AuthorProfile",
        "__str__"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "Actor",
        "__str__"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "Movie",
        "__str__"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "Team",
        "__str__"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "Player",
        "__str__"
      ]
    ],
    [
      "tests/serializers/models/natural.py",
      [
        "NaturalKeyThing",
        "__str__"
      ]
    ],
    [
      "tests/signals/models.py",
      [
        "Person",
        "__str__"
      ]
    ],
    [
      "tests/signals/models.py",
      [
        "Author",
        "__str__"
      ]
    ],
    [
      "tests/signals/models.py",
      [
        "Book",
        "__str__"
      ]
    ],
    [
      "tests/str/models.py",
      [
        "InternationalArticle",
        "__str__"
      ]
    ],
    [
      "tests/syndication_tests/models.py",
      [
        "Entry",
        "__str__"
      ]
    ],
    [
      "tests/template_tests/utils.py",
      [
        "UTF8Class",
        "__str__"
      ]
    ],
    [
      "tests/template_tests/utils.py",
      [
        "UnsafeClass",
        "__str__"
      ]
    ],
    [
      "tests/template_tests/utils.py",
      [
        "SafeClass",
        "__str__"
      ]
    ],
    [
      "tests/transactions/models.py",
      [
        "Reporter",
        "__str__"
      ]
    ],
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "User",
        "__str__"
      ]
    ],
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterTests",
        "test_exception_fetching_user",
        "ExceptionUser",
        "__str__"
      ]
    ]
  ],
  "is_addition": [
    [
      "django/contrib/admin/models.py",
      [
        "LogEntry",
        "is_addition"
      ]
    ]
  ],
  "is_change": [
    [
      "django/contrib/admin/models.py",
      [
        "LogEntry",
        "is_change"
      ]
    ]
  ],
  "is_deletion": [
    [
      "django/contrib/admin/models.py",
      [
        "LogEntry",
        "is_deletion"
      ]
    ]
  ],
  "get_change_message": [
    [
      "django/contrib/admin/models.py",
      [
        "LogEntry",
        "get_change_message"
      ]
    ]
  ],
  "get_edited_object": [
    [
      "django/contrib/admin/models.py",
      [
        "LogEntry",
        "get_edited_object"
      ]
    ]
  ],
  "get_admin_url": [
    [
      "django/contrib/admin/models.py",
      [
        "LogEntry",
        "get_admin_url"
      ]
    ]
  ],
  "get_content_type_for_model": [
    [
      "django/contrib/admin/options.py",
      [
        "get_content_type_for_model"
      ]
    ]
  ],
  "get_ul_class": [
    [
      "django/contrib/admin/options.py",
      [
        "get_ul_class"
      ]
    ]
  ],
  "formfield_for_dbfield": [
    [
      "django/contrib/admin/options.py",
      [
        "BaseModelAdmin",
        "formfield_for_dbfield"
      ]
    ],
    [
      "django/contrib/gis/admin/options.py",
      [
        "GeoModelAdmin",
        "formfield_for_dbfield"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBasicTests",
        "test_m2m_initial_callable",
        "formfield_for_dbfield"
      ]
    ]
  ],
  "formfield_for_choice_field": [
    [
      "django/contrib/admin/options.py",
      [
        "BaseModelAdmin",
        "formfield_for_choice_field"
      ]
    ]
  ],
  "get_field_queryset": [
    [
      "django/contrib/admin/options.py",
      [
        "BaseModelAdmin",
        "get_field_queryset"
      ]
    ]
  ],
  "formfield_for_foreignkey": [
    [
      "django/contrib/admin/options.py",
      [
        "BaseModelAdmin",
        "formfield_for_foreignkey"
      ]
    ],
    [
      "tests/admin_widgets/widgetadmin.py",
      [
        "CarTireAdmin",
        "formfield_for_foreignkey"
      ]
    ]
  ],
  "formfield_for_manytomany": [
    [
      "django/contrib/admin/options.py",
      [
        "BaseModelAdmin",
        "formfield_for_manytomany"
      ]
    ],
    [
      "django/contrib/auth/admin.py",
      [
        "GroupAdmin",
        "formfield_for_manytomany"
      ]
    ]
  ],
  "get_autocomplete_fields": [
    [
      "django/contrib/admin/options.py",
      [
        "BaseModelAdmin",
        "get_autocomplete_fields"
      ]
    ]
  ],
  "get_view_on_site_url": [
    [
      "django/contrib/admin/options.py",
      [
        "BaseModelAdmin",
        "get_view_on_site_url"
      ]
    ]
  ],
  "get_empty_value_display": [
    [
      "django/contrib/admin/options.py",
      [
        "BaseModelAdmin",
        "get_empty_value_display"
      ]
    ]
  ],
  "get_exclude": [
    [
      "django/contrib/admin/options.py",
      [
        "BaseModelAdmin",
        "get_exclude"
      ]
    ]
  ],
  "get_fields": [
    [
      "django/contrib/admin/options.py",
      [
        "BaseModelAdmin",
        "get_fields"
      ]
    ],
    [
      "django/contrib/gis/gdal/layer.py",
      [
        "Layer",
        "get_fields"
      ]
    ],
    [
      "django/db/models/options.py",
      [
        "Options",
        "get_fields"
      ]
    ]
  ],
  "get_fieldsets": [
    [
      "django/contrib/admin/options.py",
      [
        "BaseModelAdmin",
        "get_fieldsets"
      ]
    ],
    [
      "django/contrib/auth/admin.py",
      [
        "UserAdmin",
        "get_fieldsets"
      ]
    ]
  ],
  "get_inlines": [
    [
      "django/contrib/admin/options.py",
      [
        "BaseModelAdmin",
        "get_inlines"
      ]
    ]
  ],
  "get_ordering": [
    [
      "django/contrib/admin/options.py",
      [
        "BaseModelAdmin",
        "get_ordering"
      ]
    ],
    [
      "django/contrib/admin/views/main.py",
      [
        "ChangeList",
        "get_ordering"
      ]
    ],
    [
      "django/views/generic/dates.py",
      [
        "BaseDateListView",
        "get_ordering"
      ]
    ],
    [
      "django/views/generic/list.py",
      [
        "MultipleObjectMixin",
        "get_ordering"
      ]
    ],
    [
      "tests/admin_ordering/models.py",
      [
        "DynOrderingBandAdmin",
        "get_ordering"
      ]
    ]
  ],
  "get_readonly_fields": [
    [
      "django/contrib/admin/options.py",
      [
        "BaseModelAdmin",
        "get_readonly_fields"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "SubPostInline",
        "get_readonly_fields"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "PrePopulatedPostAdmin",
        "get_readonly_fields"
      ]
    ]
  ],
  "get_prepopulated_fields": [
    [
      "django/contrib/admin/options.py",
      [
        "BaseModelAdmin",
        "get_prepopulated_fields"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "SubPostInline",
        "get_prepopulated_fields"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "PrePopulatedPostAdmin",
        "get_prepopulated_fields"
      ]
    ]
  ],
  "get_queryset": [
    [
      "django/contrib/admin/options.py",
      [
        "BaseModelAdmin",
        "get_queryset"
      ]
    ],
    [
      "django/contrib/admin/options.py",
      [
        "InlineModelAdmin",
        "get_queryset"
      ]
    ],
    [
      "django/contrib/admin/views/autocomplete.py",
      [
        "AutocompleteJsonView",
        "get_queryset"
      ]
    ],
    [
      "django/contrib/admin/views/main.py",
      [
        "ChangeList",
        "get_queryset"
      ]
    ],
    [
      "django/contrib/contenttypes/fields.py",
      [
        "create_generic_related_manager",
        "GenericRelatedObjectManager",
        "get_queryset"
      ]
    ],
    [
      "django/contrib/sites/managers.py",
      [
        "CurrentSiteManager",
        "get_queryset"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ForwardManyToOneDescriptor",
        "get_queryset"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ReverseOneToOneDescriptor",
        "get_queryset"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_reverse_many_to_one_manager",
        "RelatedManager",
        "get_queryset"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_forward_many_to_many_manager",
        "ManyRelatedManager",
        "get_queryset"
      ]
    ],
    [
      "django/db/models/manager.py",
      [
        "BaseManager",
        "get_queryset"
      ]
    ],
    [
      "django/db/models/manager.py",
      [
        "EmptyManager",
        "get_queryset"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "BaseModelFormSet",
        "get_queryset"
      ]
    ],
    [
      "django/views/generic/detail.py",
      [
        "SingleObjectMixin",
        "get_queryset"
      ]
    ],
    [
      "django/views/generic/list.py",
      [
        "MultipleObjectMixin",
        "get_queryset"
      ]
    ],
    [
      "tests/admin_changelist/admin.py",
      [
        "ChildAdmin",
        "get_queryset"
      ]
    ],
    [
      "tests/admin_changelist/admin.py",
      [
        "FilteredChildAdmin",
        "get_queryset"
      ]
    ],
    [
      "tests/admin_changelist/models.py",
      [
        "OrderedObjectManager",
        "get_queryset"
      ]
    ],
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_total_ordering_optimization",
        "ModelAdmin",
        "get_queryset"
      ]
    ],
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_total_ordering_optimization_meta_constraints",
        "ModelAdmin",
        "get_queryset"
      ]
    ],
    [
      "tests/admin_filters/tests.py",
      [
        "BookAdminWithCustomQueryset",
        "get_queryset"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "PersonAdmin",
        "get_queryset"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "EmptyModelAdmin",
        "get_queryset"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "CustomChangeList",
        "get_queryset"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "CoverLetterAdmin",
        "get_queryset"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "PaperAdmin",
        "get_queryset"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "ShortMessageAdmin",
        "get_queryset"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "TelegramAdmin",
        "get_queryset"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "CustomManagerAdmin",
        "get_queryset"
      ]
    ],
    [
      "tests/admin_views/customadmin.py",
      [
        "UserLimitedAdmin",
        "get_queryset"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "_Manager",
        "get_queryset"
      ]
    ],
    [
      "tests/admin_widgets/models.py",
      [
        "HiddenInventoryManager",
        "get_queryset"
      ]
    ],
    [
      "tests/custom_managers/models.py",
      [
        "PublishedBookManager",
        "get_queryset"
      ]
    ],
    [
      "tests/custom_managers/models.py",
      [
        "AnnotatedBookManager",
        "get_queryset"
      ]
    ],
    [
      "tests/custom_managers/models.py",
      [
        "FunPeopleManager",
        "get_queryset"
      ]
    ],
    [
      "tests/custom_managers/models.py",
      [
        "BoringPeopleManager",
        "get_queryset"
      ]
    ],
    [
      "tests/custom_managers/models.py",
      [
        "FastCarManager",
        "get_queryset"
      ]
    ],
    [
      "tests/custom_managers/models.py",
      [
        "RestrictedManager",
        "get_queryset"
      ]
    ],
    [
      "tests/fixtures/models.py",
      [
        "SpyManager",
        "get_queryset"
      ]
    ],
    [
      "tests/generic_relations/models.py",
      [
        "GeckoManager",
        "get_queryset"
      ]
    ],
    [
      "tests/generic_views/views.py",
      [
        "AuthorListGetQuerysetReturnsNone",
        "get_queryset"
      ]
    ],
    [
      "tests/generic_views/views.py",
      [
        "AuthorGetQuerySetFormView",
        "get_queryset"
      ]
    ],
    [
      "tests/generic_views/views.py",
      [
        "ObjectDoesNotExistDetail",
        "get_queryset"
      ]
    ],
    [
      "tests/get_object_or_404/models.py",
      [
        "ArticleManager",
        "get_queryset"
      ]
    ],
    [
      "tests/get_object_or_404/models.py",
      [
        "AttributeErrorManager",
        "get_queryset"
      ]
    ],
    [
      "tests/managers_regress/models.py",
      [
        "OnlyFred",
        "get_queryset"
      ]
    ],
    [
      "tests/managers_regress/models.py",
      [
        "OnlyBarney",
        "get_queryset"
      ]
    ],
    [
      "tests/managers_regress/models.py",
      [
        "Value42",
        "get_queryset"
      ]
    ],
    [
      "tests/many_to_many/models.py",
      [
        "NoDeletedArticleManager",
        "get_queryset"
      ]
    ],
    [
      "tests/many_to_one/models.py",
      [
        "SchoolManager",
        "get_queryset"
      ]
    ],
    [
      "tests/one_to_one/models.py",
      [
        "SchoolManager",
        "get_queryset"
      ]
    ],
    [
      "tests/one_to_one/models.py",
      [
        "DirectorManager",
        "get_queryset"
      ]
    ],
    [
      "tests/prefetch_related/models.py",
      [
        "TeacherManager",
        "get_queryset"
      ]
    ],
    [
      "tests/proxy_models/models.py",
      [
        "PersonManager",
        "get_queryset"
      ]
    ],
    [
      "tests/proxy_models/models.py",
      [
        "SubManager",
        "get_queryset"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "CustomManager",
        "get_queryset"
      ]
    ],
    [
      "tests/queries/models.py",
      [
        "MemberManager",
        "get_queryset"
      ]
    ]
  ],
  "get_sortable_by": [
    [
      "django/contrib/admin/options.py",
      [
        "BaseModelAdmin",
        "get_sortable_by"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "ActorAdmin6",
        "get_sortable_by"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "ColorAdmin6",
        "get_sortable_by"
      ]
    ]
  ],
  "lookup_allowed": [
    [
      "django/contrib/admin/options.py",
      [
        "BaseModelAdmin",
        "lookup_allowed"
      ]
    ],
    [
      "django/contrib/auth/admin.py",
      [
        "UserAdmin",
        "lookup_allowed"
      ]
    ]
  ],
  "to_field_allowed": [
    [
      "django/contrib/admin/options.py",
      [
        "BaseModelAdmin",
        "to_field_allowed"
      ]
    ]
  ],
  "has_add_permission": [
    [
      "django/contrib/admin/options.py",
      [
        "BaseModelAdmin",
        "has_add_permission"
      ]
    ],
    [
      "django/contrib/admin/options.py",
      [
        "InlineModelAdmin",
        "has_add_permission"
      ]
    ],
    [
      "tests/admin_changelist/admin.py",
      [
        "EventAdmin",
        "has_add_permission"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "ReadOnlyPizzaAdmin",
        "has_add_permission"
      ]
    ]
  ],
  "has_change_permission": [
    [
      "django/contrib/admin/options.py",
      [
        "BaseModelAdmin",
        "has_change_permission"
      ]
    ],
    [
      "django/contrib/admin/options.py",
      [
        "InlineModelAdmin",
        "has_change_permission"
      ]
    ],
    [
      "tests/admin_inlines/admin.py",
      [
        "FootNoteNonEditableInlineCustomForm",
        "has_change_permission"
      ]
    ],
    [
      "tests/admin_inlines/admin.py",
      [
        "ReadOnlyChapterInline",
        "has_change_permission"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "RowLevelChangePermissionModelAdmin",
        "has_change_permission"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "PrePopulatedPostReadOnlyAdmin",
        "has_change_permission"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "ReadOnlyPizzaAdmin",
        "has_change_permission"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "ArticleAdmin9",
        "has_change_permission"
      ]
    ]
  ],
  "has_delete_permission": [
    [
      "django/contrib/admin/options.py",
      [
        "BaseModelAdmin",
        "has_delete_permission"
      ]
    ],
    [
      "django/contrib/admin/options.py",
      [
        "InlineModelAdmin",
        "has_delete_permission"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "ReadOnlyPizzaAdmin",
        "has_delete_permission"
      ]
    ]
  ],
  "has_view_permission": [
    [
      "django/contrib/admin/options.py",
      [
        "BaseModelAdmin",
        "has_view_permission"
      ]
    ],
    [
      "django/contrib/admin/options.py",
      [
        "InlineModelAdmin",
        "has_view_permission"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "RowLevelChangePermissionModelAdmin",
        "has_view_permission"
      ]
    ]
  ],
  "has_view_or_change_permission": [
    [
      "django/contrib/admin/options.py",
      [
        "BaseModelAdmin",
        "has_view_or_change_permission"
      ]
    ]
  ],
  "has_module_permission": [
    [
      "django/contrib/admin/options.py",
      [
        "BaseModelAdmin",
        "has_module_permission"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "ArticleAdmin2",
        "has_module_permission"
      ]
    ]
  ],
  "get_inline_instances": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "get_inline_instances"
      ]
    ]
  ],
  "get_urls": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "get_urls"
      ]
    ],
    [
      "django/contrib/admin/sites.py",
      [
        "AdminSite",
        "get_urls"
      ]
    ],
    [
      "django/contrib/auth/admin.py",
      [
        "UserAdmin",
        "get_urls"
      ]
    ],
    [
      "django/contrib/gis/sitemaps/kml.py",
      [
        "KMLSitemap",
        "get_urls"
      ]
    ],
    [
      "django/contrib/sitemaps/__init__.py",
      [
        "Sitemap",
        "get_urls"
      ]
    ],
    [
      "tests/admin_custom_urls/models.py",
      [
        "ActionAdmin",
        "get_urls"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "ReportAdmin",
        "get_urls"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "UnchangeableObjectAdmin",
        "get_urls"
      ]
    ],
    [
      "tests/admin_views/customadmin.py",
      [
        "Admin2",
        "get_urls"
      ]
    ]
  ],
  "urls": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "urls"
      ]
    ],
    [
      "django/contrib/admin/sites.py",
      [
        "AdminSite",
        "urls"
      ]
    ],
    [
      "tests/urlpatterns_reverse/utils.py",
      [
        "URLObject",
        "urls"
      ]
    ]
  ],
  "get_model_perms": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "get_model_perms"
      ]
    ]
  ],
  "_get_form_for_get_fields": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "_get_form_for_get_fields"
      ]
    ],
    [
      "django/contrib/admin/options.py",
      [
        "InlineModelAdmin",
        "_get_form_for_get_fields"
      ]
    ]
  ],
  "get_form": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "get_form"
      ]
    ],
    [
      "django/contrib/auth/admin.py",
      [
        "UserAdmin",
        "get_form"
      ]
    ],
    [
      "django/views/generic/edit.py",
      [
        "FormMixin",
        "get_form"
      ]
    ],
    [
      "tests/admin_checks/tests.py",
      [
        "ValidFormFieldsets",
        "get_form"
      ]
    ],
    [
      "tests/generic_views/views.py",
      [
        "AuthorUpdate",
        "get_form"
      ]
    ]
  ],
  "get_changelist": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "get_changelist"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "GadgetAdmin",
        "get_changelist"
      ]
    ]
  ],
  "get_changelist_instance": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "get_changelist_instance"
      ]
    ]
  ],
  "get_object": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "get_object"
      ]
    ],
    [
      "django/contrib/syndication/views.py",
      [
        "Feed",
        "get_object"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ForwardManyToOneDescriptor",
        "get_object"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ForwardOneToOneDescriptor",
        "get_object"
      ]
    ],
    [
      "django/views/generic/dates.py",
      [
        "BaseDateDetailView",
        "get_object"
      ]
    ],
    [
      "django/views/generic/detail.py",
      [
        "SingleObjectMixin",
        "get_object"
      ]
    ],
    [
      "tests/generic_views/views.py",
      [
        "ObjectDetail",
        "get_object"
      ]
    ],
    [
      "tests/generic_views/views.py",
      [
        "OneAuthorUpdate",
        "get_object"
      ]
    ],
    [
      "tests/generic_views/views.py",
      [
        "BookDetailGetObjectCustomQueryset",
        "get_object"
      ]
    ],
    [
      "tests/generic_views/views.py",
      [
        "CustomContextView",
        "get_object"
      ]
    ],
    [
      "tests/generic_views/views.py",
      [
        "NonModelDetail",
        "get_object"
      ]
    ]
  ],
  "get_changelist_form": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "get_changelist_form"
      ]
    ]
  ],
  "get_changelist_formset": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "get_changelist_formset"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "PersonAdmin",
        "get_changelist_formset"
      ]
    ]
  ],
  "get_formsets_with_inlines": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "get_formsets_with_inlines"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "GetFormsetsArgumentCheckingAdmin",
        "get_formsets_with_inlines"
      ]
    ]
  ],
  "get_paginator": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "get_paginator"
      ]
    ],
    [
      "django/contrib/admin/views/autocomplete.py",
      [
        "AutocompleteJsonView",
        "get_paginator"
      ]
    ],
    [
      "django/views/generic/list.py",
      [
        "MultipleObjectMixin",
        "get_paginator"
      ]
    ],
    [
      "tests/generic_views/views.py",
      [
        "AuthorListCustomPaginator",
        "get_paginator"
      ]
    ]
  ],
  "log_addition": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "log_addition"
      ]
    ]
  ],
  "log_change": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "log_change"
      ]
    ],
    [
      "tests/auth_tests/urls_custom_user_admin.py",
      [
        "CustomUserAdmin",
        "log_change"
      ]
    ]
  ],
  "log_deletion": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "log_deletion"
      ]
    ]
  ],
  "action_checkbox": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "action_checkbox"
      ]
    ]
  ],
  "_get_base_actions": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "_get_base_actions"
      ]
    ]
  ],
  "_filter_actions_by_permissions": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "_filter_actions_by_permissions"
      ]
    ]
  ],
  "get_actions": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "get_actions"
      ]
    ],
    [
      "django/core/management/__init__.py",
      [
        "call_command",
        "get_actions"
      ]
    ]
  ],
  "get_action_choices": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "get_action_choices"
      ]
    ]
  ],
  "get_action": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "get_action"
      ]
    ],
    [
      "django/contrib/admin/sites.py",
      [
        "AdminSite",
        "get_action"
      ]
    ]
  ],
  "get_list_display": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "get_list_display"
      ]
    ],
    [
      "tests/admin_changelist/admin.py",
      [
        "DynamicListDisplayChildAdmin",
        "get_list_display"
      ]
    ]
  ],
  "get_list_display_links": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "get_list_display_links"
      ]
    ],
    [
      "tests/admin_changelist/admin.py",
      [
        "DynamicListDisplayLinksChildAdmin",
        "get_list_display_links"
      ]
    ]
  ],
  "get_list_filter": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "get_list_filter"
      ]
    ],
    [
      "tests/admin_changelist/admin.py",
      [
        "DynamicListFilterChildAdmin",
        "get_list_filter"
      ]
    ]
  ],
  "get_list_select_related": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "get_list_select_related"
      ]
    ]
  ],
  "get_search_fields": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "get_search_fields"
      ]
    ],
    [
      "tests/admin_changelist/admin.py",
      [
        "DynamicSearchFieldsChildAdmin",
        "get_search_fields"
      ]
    ]
  ],
  "construct_search": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "get_search_results",
        "construct_search"
      ]
    ]
  ],
  "get_search_results": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "get_search_results"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "PluggableSearchPersonAdmin",
        "get_search_results"
      ]
    ]
  ],
  "get_preserved_filters": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "get_preserved_filters"
      ]
    ]
  ],
  "construct_change_message": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "construct_change_message"
      ]
    ],
    [
      "django/contrib/admin/utils.py",
      [
        "construct_change_message"
      ]
    ]
  ],
  "message_user": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "message_user"
      ]
    ]
  ],
  "save_form": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "save_form"
      ]
    ]
  ],
  "save_model": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "save_model"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "ArticleAdmin",
        "save_model"
      ]
    ]
  ],
  "delete_model": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "delete_model"
      ]
    ],
    [
      "django/contrib/gis/db/backends/oracle/schema.py",
      [
        "OracleGISSchemaEditor",
        "delete_model"
      ]
    ],
    [
      "django/contrib/gis/db/backends/spatialite/schema.py",
      [
        "SpatialiteSchemaEditor",
        "delete_model"
      ]
    ],
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "delete_model"
      ]
    ],
    [
      "django/db/backends/oracle/schema.py",
      [
        "DatabaseSchemaEditor",
        "delete_model"
      ]
    ],
    [
      "django/db/backends/sqlite3/schema.py",
      [
        "DatabaseSchemaEditor",
        "delete_model"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "ArticleAdmin",
        "delete_model"
      ]
    ]
  ],
  "delete_queryset": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "delete_queryset"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "SubscriberAdmin",
        "delete_queryset"
      ]
    ]
  ],
  "save_formset": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "save_formset"
      ]
    ]
  ],
  "save_related": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "save_related"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "ParentAdmin",
        "save_related"
      ]
    ]
  ],
  "render_change_form": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "render_change_form"
      ]
    ]
  ],
  "response_add": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "response_add"
      ]
    ],
    [
      "django/contrib/auth/admin.py",
      [
        "UserAdmin",
        "response_add"
      ]
    ],
    [
      "tests/admin_custom_urls/models.py",
      [
        "CarAdmin",
        "response_add"
      ]
    ]
  ],
  "response_change": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "response_change"
      ]
    ]
  ],
  "_response_post_save": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "_response_post_save"
      ]
    ]
  ],
  "response_post_save_add": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "response_post_save_add"
      ]
    ],
    [
      "tests/admin_custom_urls/models.py",
      [
        "PersonAdmin",
        "response_post_save_add"
      ]
    ]
  ],
  "response_post_save_change": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "response_post_save_change"
      ]
    ],
    [
      "tests/admin_custom_urls/models.py",
      [
        "PersonAdmin",
        "response_post_save_change"
      ]
    ]
  ],
  "response_action": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "response_action"
      ]
    ]
  ],
  "response_delete": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "response_delete"
      ]
    ]
  ],
  "render_delete_form": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "render_delete_form"
      ]
    ]
  ],
  "get_inline_formsets": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "get_inline_formsets"
      ]
    ]
  ],
  "get_changeform_initial_data": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "get_changeform_initial_data"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "RestaurantAdmin",
        "get_changeform_initial_data"
      ]
    ]
  ],
  "_get_obj_does_not_exist_redirect": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "_get_obj_does_not_exist_redirect"
      ]
    ]
  ],
  "changeform_view": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "changeform_view"
      ]
    ]
  ],
  "_changeform_view": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "_changeform_view"
      ]
    ]
  ],
  "autocomplete_view": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "autocomplete_view"
      ]
    ]
  ],
  "add_view": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "add_view"
      ]
    ],
    [
      "django/contrib/auth/admin.py",
      [
        "UserAdmin",
        "add_view"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "GetFormsetsArgumentCheckingAdmin",
        "add_view"
      ]
    ]
  ],
  "change_view": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "change_view"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "UndeletableObjectAdmin",
        "change_view"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "GetFormsetsArgumentCheckingAdmin",
        "change_view"
      ]
    ]
  ],
  "_get_edited_object_pks": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "_get_edited_object_pks"
      ]
    ]
  ],
  "_get_list_editable_queryset": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "_get_list_editable_queryset"
      ]
    ]
  ],
  "changelist_view": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "changelist_view"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "ArticleAdmin",
        "changelist_view"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "CustomArticleAdmin",
        "changelist_view"
      ]
    ]
  ],
  "get_deleted_objects": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "get_deleted_objects"
      ]
    ],
    [
      "django/contrib/admin/utils.py",
      [
        "get_deleted_objects"
      ]
    ],
    [
      "tests/admin_views/customadmin.py",
      [
        "BookAdmin",
        "get_deleted_objects"
      ]
    ]
  ],
  "delete_view": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "delete_view"
      ]
    ]
  ],
  "_delete_view": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "_delete_view"
      ]
    ]
  ],
  "history_view": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "history_view"
      ]
    ]
  ],
  "user_deleted_form": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "_create_formsets",
        "for_FormSet_inline_in_se",
        "user_deleted_form"
      ]
    ]
  ],
  "_create_formsets": [
    [
      "django/contrib/admin/options.py",
      [
        "ModelAdmin",
        "_create_formsets"
      ]
    ]
  ],
  "get_extra": [
    [
      "django/contrib/admin/options.py",
      [
        "InlineModelAdmin",
        "get_extra"
      ]
    ],
    [
      "tests/admin_inlines/admin.py",
      [
        "BinaryTreeAdmin",
        "get_extra"
      ]
    ]
  ],
  "get_min_num": [
    [
      "django/contrib/admin/options.py",
      [
        "InlineModelAdmin",
        "get_min_num"
      ]
    ],
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_custom_min_num",
        "MinNumInline",
        "get_min_num"
      ]
    ]
  ],
  "get_max_num": [
    [
      "django/contrib/admin/options.py",
      [
        "InlineModelAdmin",
        "get_max_num"
      ]
    ],
    [
      "tests/admin_inlines/admin.py",
      [
        "BinaryTreeAdmin",
        "get_max_num"
      ]
    ]
  ],
  "hand_clean_DELETE": [
    [
      "django/contrib/admin/options.py",
      [
        "InlineModelAdmin",
        "get_formset",
        "DeleteProtectedModelForm",
        "hand_clean_DELETE"
      ]
    ]
  ],
  "is_valid": [
    [
      "django/contrib/admin/options.py",
      [
        "InlineModelAdmin",
        "get_formset",
        "DeleteProtectedModelForm",
        "is_valid"
      ]
    ],
    [
      "django/forms/forms.py",
      [
        "BaseForm",
        "is_valid"
      ]
    ],
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "is_valid"
      ]
    ]
  ],
  "has_changed": [
    [
      "django/contrib/admin/options.py",
      [
        "InlineModelAdmin",
        "get_formset",
        "DeleteProtectedModelForm",
        "has_changed"
      ]
    ],
    [
      "django/contrib/auth/forms.py",
      [
        "ReadOnlyPasswordHashField",
        "has_changed"
      ]
    ],
    [
      "django/contrib/gis/forms/fields.py",
      [
        "GeometryField",
        "has_changed"
      ]
    ],
    [
      "django/contrib/postgres/forms/array.py",
      [
        "SimpleArrayField",
        "has_changed"
      ]
    ],
    [
      "django/contrib/postgres/forms/array.py",
      [
        "SplitArrayField",
        "has_changed"
      ]
    ],
    [
      "django/contrib/postgres/forms/hstore.py",
      [
        "HStoreField",
        "has_changed"
      ]
    ],
    [
      "django/contrib/postgres/forms/jsonb.py",
      [
        "JSONField",
        "has_changed"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "Field",
        "has_changed"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "FileField",
        "has_changed"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "BooleanField",
        "has_changed"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "MultipleChoiceField",
        "has_changed"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "MultiValueField",
        "has_changed"
      ]
    ],
    [
      "django/forms/forms.py",
      [
        "BaseForm",
        "has_changed"
      ]
    ],
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "has_changed"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "InlineForeignKeyField",
        "has_changed"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "ModelChoiceField",
        "has_changed"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "ModelMultipleChoiceField",
        "has_changed"
      ]
    ]
  ],
  "get_formset": [
    [
      "django/contrib/admin/options.py",
      [
        "InlineModelAdmin",
        "get_formset"
      ]
    ],
    [
      "django/contrib/contenttypes/admin.py",
      [
        "GenericInlineModelAdmin",
        "get_formset"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_formset_exclude_kwarg_override",
        "ConcertInline",
        "get_formset"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_regression_for_ticket_15820",
        "ConcertInline",
        "get_formset"
      ]
    ]
  ],
  "_has_any_perms_for_target_model": [
    [
      "django/contrib/admin/options.py",
      [
        "InlineModelAdmin",
        "_has_any_perms_for_target_model"
      ]
    ]
  ],
  "unregister": [
    [
      "django/contrib/admin/sites.py",
      [
        "AdminSite",
        "unregister"
      ]
    ],
    [
      "django/db/migrations/serializer.py",
      [
        "Serializer",
        "unregister"
      ]
    ]
  ],
  "is_registered": [
    [
      "django/contrib/admin/sites.py",
      [
        "AdminSite",
        "is_registered"
      ]
    ]
  ],
  "add_action": [
    [
      "django/contrib/admin/sites.py",
      [
        "AdminSite",
        "add_action"
      ]
    ]
  ],
  "disable_action": [
    [
      "django/contrib/admin/sites.py",
      [
        "AdminSite",
        "disable_action"
      ]
    ]
  ],
  "actions": [
    [
      "django/contrib/admin/sites.py",
      [
        "AdminSite",
        "actions"
      ]
    ]
  ],
  "empty_value_display": [
    [
      "django/contrib/admin/sites.py",
      [
        "AdminSite",
        "empty_value_display"
      ]
    ]
  ],
  "empty_value_display_9": [
    [
      "django/contrib/admin/sites.py",
      [
        "AdminSite",
        "empty_value_display_9"
      ]
    ]
  ],
  "has_permission": [
    [
      "django/contrib/admin/sites.py",
      [
        "AdminSite",
        "has_permission"
      ]
    ],
    [
      "django/contrib/auth/mixins.py",
      [
        "PermissionRequiredMixin",
        "has_permission"
      ]
    ],
    [
      "tests/admin_views/custom_has_permission_admin.py",
      [
        "HasPermissionAdmin",
        "has_permission"
      ]
    ]
  ],
  "inner": [
    [
      "django/contrib/admin/sites.py",
      [
        "AdminSite",
        "admin_view",
        "inner"
      ]
    ],
    [
      "django/core/checks/registry.py",
      [
        "CheckRegistry",
        "register",
        "inner"
      ]
    ],
    [
      "django/views/decorators/http.py",
      [
        "condition",
        "decorator",
        "inner"
      ]
    ],
    [
      "tests/auth_tests/test_management.py",
      [
        "mock_inputs",
        "inner"
      ]
    ],
    [
      "tests/template_tests/utils.py",
      [
        "setup",
        "decorator",
        "inner"
      ]
    ]
  ],
  "admin_view": [
    [
      "django/contrib/admin/sites.py",
      [
        "AdminSite",
        "admin_view"
      ]
    ]
  ],
  "wrap": [
    [
      "django/contrib/admin/sites.py",
      [
        "AdminSite",
        "get_urls",
        "wrap"
      ]
    ],
    [
      "django/utils/text.py",
      [
        "wrap"
      ]
    ]
  ],
  "each_context": [
    [
      "django/contrib/admin/sites.py",
      [
        "AdminSite",
        "each_context"
      ]
    ]
  ],
  "password_change": [
    [
      "django/contrib/admin/sites.py",
      [
        "AdminSite",
        "password_change"
      ]
    ],
    [
      "tests/admin_views/customadmin.py",
      [
        "Admin2",
        "password_change"
      ]
    ]
  ],
  "password_change_done": [
    [
      "django/contrib/admin/sites.py",
      [
        "AdminSite",
        "password_change_done"
      ]
    ]
  ],
  "i18n_javascript": [
    [
      "django/contrib/admin/sites.py",
      [
        "AdminSite",
        "i18n_javascript"
      ]
    ]
  ],
  "logout": [
    [
      "django/contrib/admin/sites.py",
      [
        "AdminSite",
        "logout"
      ]
    ],
    [
      "django/contrib/auth/__init__.py",
      [
        "logout"
      ]
    ],
    [
      "django/test/client.py",
      [
        "ClientMixin",
        "logout"
      ]
    ],
    [
      "tests/auth_tests/test_views.py",
      [
        "AuthViewsTestCase",
        "logout"
      ]
    ],
    [
      "tests/auth_tests/test_views.py",
      [
        "ChangePasswordTest",
        "logout"
      ]
    ]
  ],
  "login": [
    [
      "django/contrib/admin/sites.py",
      [
        "AdminSite",
        "login"
      ]
    ],
    [
      "django/contrib/auth/__init__.py",
      [
        "login"
      ]
    ],
    [
      "django/test/client.py",
      [
        "ClientMixin",
        "login"
      ]
    ],
    [
      "tests/auth_tests/test_views.py",
      [
        "AuthViewsTestCase",
        "login"
      ]
    ]
  ],
  "_build_app_dict": [
    [
      "django/contrib/admin/sites.py",
      [
        "AdminSite",
        "_build_app_dict"
      ]
    ]
  ],
  "get_app_list": [
    [
      "django/contrib/admin/sites.py",
      [
        "AdminSite",
        "get_app_list"
      ]
    ]
  ],
  "index": [
    [
      "django/contrib/admin/sites.py",
      [
        "AdminSite",
        "index"
      ]
    ],
    [
      "django/contrib/gis/gdal/feature.py",
      [
        "Feature",
        "index"
      ]
    ],
    [
      "django/contrib/gis/geos/mutable_list.py",
      [
        "ListMixin",
        "index"
      ]
    ],
    [
      "django/contrib/sitemaps/views.py",
      [
        "index"
      ]
    ],
    [
      "tests/admin_views/customadmin.py",
      [
        "Admin2",
        "index"
      ]
    ],
    [
      "tests/conditional_processing/views.py",
      [
        "index"
      ]
    ],
    [
      "tests/template_tests/views.py",
      [
        "index"
      ]
    ]
  ],
  "app_index": [
    [
      "django/contrib/admin/sites.py",
      [
        "AdminSite",
        "app_index"
      ]
    ]
  ],
  "paginator_number": [
    [
      "django/contrib/admin/templatetags/admin_list.py",
      [
        "paginator_number"
      ]
    ]
  ],
  "pagination": [
    [
      "django/contrib/admin/templatetags/admin_list.py",
      [
        "pagination"
      ]
    ]
  ],
  "pagination_tag": [
    [
      "django/contrib/admin/templatetags/admin_list.py",
      [
        "pagination_tag"
      ]
    ]
  ],
  "make_qs_param": [
    [
      "django/contrib/admin/templatetags/admin_list.py",
      [
        "result_headers",
        "for_i_field_name_in_enum",
        "make_qs_param"
      ]
    ]
  ],
  "result_headers": [
    [
      "django/contrib/admin/templatetags/admin_list.py",
      [
        "result_headers"
      ]
    ]
  ],
  "_boolean_icon": [
    [
      "django/contrib/admin/templatetags/admin_list.py",
      [
        "_boolean_icon"
      ]
    ]
  ],
  "_coerce_field_name": [
    [
      "django/contrib/admin/templatetags/admin_list.py",
      [
        "_coerce_field_name"
      ]
    ]
  ],
  "link_in_col": [
    [
      "django/contrib/admin/templatetags/admin_list.py",
      [
        "items_for_result",
        "link_in_col"
      ]
    ]
  ],
  "items_for_result": [
    [
      "django/contrib/admin/templatetags/admin_list.py",
      [
        "items_for_result"
      ]
    ]
  ],
  "results": [
    [
      "django/contrib/admin/templatetags/admin_list.py",
      [
        "results"
      ]
    ]
  ],
  "result_hidden_fields": [
    [
      "django/contrib/admin/templatetags/admin_list.py",
      [
        "result_hidden_fields"
      ]
    ]
  ],
  "result_list": [
    [
      "django/contrib/admin/templatetags/admin_list.py",
      [
        "result_list"
      ]
    ]
  ],
  "result_list_tag": [
    [
      "django/contrib/admin/templatetags/admin_list.py",
      [
        "result_list_tag"
      ]
    ]
  ],
  "link": [
    [
      "django/contrib/admin/templatetags/admin_list.py",
      [
        "date_hierarchy",
        "if_cl_date_hierarchy_",
        "link"
      ]
    ]
  ],
  "date_hierarchy": [
    [
      "django/contrib/admin/templatetags/admin_list.py",
      [
        "date_hierarchy"
      ]
    ]
  ],
  "date_hierarchy_tag": [
    [
      "django/contrib/admin/templatetags/admin_list.py",
      [
        "date_hierarchy_tag"
      ]
    ]
  ],
  "search_form": [
    [
      "django/contrib/admin/templatetags/admin_list.py",
      [
        "search_form"
      ]
    ]
  ],
  "search_form_tag": [
    [
      "django/contrib/admin/templatetags/admin_list.py",
      [
        "search_form_tag"
      ]
    ]
  ],
  "admin_list_filter": [
    [
      "django/contrib/admin/templatetags/admin_list.py",
      [
        "admin_list_filter"
      ]
    ]
  ],
  "admin_actions": [
    [
      "django/contrib/admin/templatetags/admin_list.py",
      [
        "admin_actions"
      ]
    ]
  ],
  "admin_actions_tag": [
    [
      "django/contrib/admin/templatetags/admin_list.py",
      [
        "admin_actions_tag"
      ]
    ]
  ],
  "change_list_object_tools_tag": [
    [
      "django/contrib/admin/templatetags/admin_list.py",
      [
        "change_list_object_tools_tag"
      ]
    ]
  ],
  "prepopulated_fields_js": [
    [
      "django/contrib/admin/templatetags/admin_modify.py",
      [
        "prepopulated_fields_js"
      ]
    ]
  ],
  "prepopulated_fields_js_tag": [
    [
      "django/contrib/admin/templatetags/admin_modify.py",
      [
        "prepopulated_fields_js_tag"
      ]
    ]
  ],
  "submit_row": [
    [
      "django/contrib/admin/templatetags/admin_modify.py",
      [
        "submit_row"
      ]
    ]
  ],
  "submit_row_tag": [
    [
      "django/contrib/admin/templatetags/admin_modify.py",
      [
        "submit_row_tag"
      ]
    ]
  ],
  "change_form_object_tools_tag": [
    [
      "django/contrib/admin/templatetags/admin_modify.py",
      [
        "change_form_object_tools_tag"
      ]
    ]
  ],
  "cell_count": [
    [
      "django/contrib/admin/templatetags/admin_modify.py",
      [
        "cell_count"
      ]
    ]
  ],
  "admin_urlname": [
    [
      "django/contrib/admin/templatetags/admin_urls.py",
      [
        "admin_urlname"
      ]
    ]
  ],
  "admin_urlquote": [
    [
      "django/contrib/admin/templatetags/admin_urls.py",
      [
        "admin_urlquote"
      ]
    ]
  ],
  "add_preserved_filters": [
    [
      "django/contrib/admin/templatetags/admin_urls.py",
      [
        "add_preserved_filters"
      ]
    ]
  ],
  "render": [
    [
      "django/contrib/admin/templatetags/base.py",
      [
        "InclusionAdminNode",
        "render"
      ]
    ],
    [
      "django/contrib/admin/templatetags/log.py",
      [
        "AdminLogNode",
        "render"
      ]
    ],
    [
      "django/contrib/flatpages/templatetags/flatpages.py",
      [
        "FlatpageNode",
        "render"
      ]
    ],
    [
      "django/db/migrations/state.py",
      [
        "ModelState",
        "render"
      ]
    ],
    [
      "django/db/migrations/writer.py",
      [
        "OperationWriter",
        "render"
      ]
    ],
    [
      "django/forms/renderers.py",
      [
        "BaseRenderer",
        "render"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "Media",
        "render"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "Widget",
        "render"
      ]
    ],
    [
      "django/shortcuts.py",
      [
        "render"
      ]
    ],
    [
      "django/template/backends/django.py",
      [
        "Template",
        "render"
      ]
    ],
    [
      "django/template/backends/dummy.py",
      [
        "Template",
        "render"
      ]
    ],
    [
      "django/template/backends/jinja2.py",
      [
        "Template",
        "render"
      ]
    ],
    [
      "django/template/base.py",
      [
        "Template",
        "render"
      ]
    ],
    [
      "django/template/base.py",
      [
        "Node",
        "render"
      ]
    ],
    [
      "django/template/base.py",
      [
        "NodeList",
        "render"
      ]
    ],
    [
      "django/template/base.py",
      [
        "TextNode",
        "render"
      ]
    ],
    [
      "django/template/base.py",
      [
        "VariableNode",
        "render"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "AutoEscapeControlNode",
        "render"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "CommentNode",
        "render"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "CsrfTokenNode",
        "render"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "CycleNode",
        "render"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "DebugNode",
        "render"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "FilterNode",
        "render"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "FirstOfNode",
        "render"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "ForNode",
        "render"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "IfChangedNode",
        "render"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "IfEqualNode",
        "render"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "IfNode",
        "render"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "LoremNode",
        "render"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "RegroupNode",
        "render"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "LoadNode",
        "render"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "NowNode",
        "render"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "ResetCycleNode",
        "render"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "SpacelessNode",
        "render"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "TemplateTagNode",
        "render"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "URLNode",
        "render"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "VerbatimNode",
        "render"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "WidthRatioNode",
        "render"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "WithNode",
        "render"
      ]
    ],
    [
      "django/template/library.py",
      [
        "SimpleNode",
        "render"
      ]
    ],
    [
      "django/template/library.py",
      [
        "InclusionNode",
        "render"
      ]
    ],
    [
      "django/template/loader_tags.py",
      [
        "BlockNode",
        "render"
      ]
    ],
    [
      "django/template/loader_tags.py",
      [
        "ExtendsNode",
        "render"
      ]
    ],
    [
      "django/template/loader_tags.py",
      [
        "IncludeNode",
        "render"
      ]
    ],
    [
      "django/template/response.py",
      [
        "SimpleTemplateResponse",
        "render"
      ]
    ],
    [
      "django/templatetags/cache.py",
      [
        "CacheNode",
        "render"
      ]
    ],
    [
      "django/templatetags/i18n.py",
      [
        "GetAvailableLanguagesNode",
        "render"
      ]
    ],
    [
      "django/templatetags/i18n.py",
      [
        "GetLanguageInfoNode",
        "render"
      ]
    ],
    [
      "django/templatetags/i18n.py",
      [
        "GetLanguageInfoListNode",
        "render"
      ]
    ],
    [
      "django/templatetags/i18n.py",
      [
        "GetCurrentLanguageNode",
        "render"
      ]
    ],
    [
      "django/templatetags/i18n.py",
      [
        "GetCurrentLanguageBidiNode",
        "render"
      ]
    ],
    [
      "django/templatetags/i18n.py",
      [
        "TranslateNode",
        "render"
      ]
    ],
    [
      "django/templatetags/i18n.py",
      [
        "BlockTranslateNode",
        "render"
      ]
    ],
    [
      "django/templatetags/i18n.py",
      [
        "LanguageNode",
        "render"
      ]
    ],
    [
      "django/templatetags/l10n.py",
      [
        "LocalizeNode",
        "render"
      ]
    ],
    [
      "django/templatetags/static.py",
      [
        "PrefixNode",
        "render"
      ]
    ],
    [
      "django/templatetags/static.py",
      [
        "StaticNode",
        "render"
      ]
    ],
    [
      "django/templatetags/tz.py",
      [
        "LocalTimeNode",
        "render"
      ]
    ],
    [
      "django/templatetags/tz.py",
      [
        "TimezoneNode",
        "render"
      ]
    ],
    [
      "django/templatetags/tz.py",
      [
        "GetCurrentTimezoneNode",
        "render"
      ]
    ],
    [
      "tests/template_tests/templatetags/custom.py",
      [
        "CounterNode",
        "render"
      ]
    ],
    [
      "tests/template_tests/templatetags/tag_27584.py",
      [
        "BadNode",
        "render"
      ]
    ],
    [
      "tests/template_tests/templatetags/testtags.py",
      [
        "EchoNode",
        "render"
      ]
    ]
  ],
  "get_admin_log": [
    [
      "django/contrib/admin/templatetags/log.py",
      [
        "get_admin_log"
      ]
    ]
  ],
  "process_response": [
    [
      "django/contrib/admin/tests.py",
      [
        "CSPMiddleware",
        "process_response"
      ]
    ],
    [
      "django/contrib/flatpages/middleware.py",
      [
        "FlatpageFallbackMiddleware",
        "process_response"
      ]
    ],
    [
      "django/contrib/messages/middleware.py",
      [
        "MessageMiddleware",
        "process_response"
      ]
    ],
    [
      "django/contrib/redirects/middleware.py",
      [
        "RedirectFallbackMiddleware",
        "process_response"
      ]
    ],
    [
      "django/contrib/sessions/middleware.py",
      [
        "SessionMiddleware",
        "process_response"
      ]
    ],
    [
      "django/middleware/cache.py",
      [
        "UpdateCacheMiddleware",
        "process_response"
      ]
    ],
    [
      "django/middleware/clickjacking.py",
      [
        "XFrameOptionsMiddleware",
        "process_response"
      ]
    ],
    [
      "django/middleware/common.py",
      [
        "CommonMiddleware",
        "process_response"
      ]
    ],
    [
      "django/middleware/common.py",
      [
        "BrokenLinkEmailsMiddleware",
        "process_response"
      ]
    ],
    [
      "django/middleware/csrf.py",
      [
        "CsrfViewMiddleware",
        "process_response"
      ]
    ],
    [
      "django/middleware/gzip.py",
      [
        "GZipMiddleware",
        "process_response"
      ]
    ],
    [
      "django/middleware/http.py",
      [
        "ConditionalGetMiddleware",
        "process_response"
      ]
    ],
    [
      "django/middleware/locale.py",
      [
        "LocaleMiddleware",
        "process_response"
      ]
    ],
    [
      "django/middleware/security.py",
      [
        "SecurityMiddleware",
        "process_response"
      ]
    ],
    [
      "tests/middleware/test_security.py",
      [
        "SecurityMiddlewareTest",
        "process_response"
      ]
    ],
    [
      "tests/urlpatterns_reverse/middleware.py",
      [
        "ReverseInnerInResponseMiddleware",
        "process_response"
      ]
    ],
    [
      "tests/urlpatterns_reverse/middleware.py",
      [
        "ReverseOuterInResponseMiddleware",
        "process_response"
      ]
    ],
    [
      "tests/utils_tests/test_decorators.py",
      [
        "FullMiddleware",
        "process_response"
      ]
    ]
  ],
  "wait_until": [
    [
      "django/contrib/admin/tests.py",
      [
        "AdminSeleniumTestCase",
        "wait_until"
      ]
    ]
  ],
  "wait_for_and_switch_to_popup": [
    [
      "django/contrib/admin/tests.py",
      [
        "AdminSeleniumTestCase",
        "wait_for_and_switch_to_popup"
      ]
    ]
  ],
  "wait_for": [
    [
      "django/contrib/admin/tests.py",
      [
        "AdminSeleniumTestCase",
        "wait_for"
      ]
    ]
  ],
  "wait_for_text": [
    [
      "django/contrib/admin/tests.py",
      [
        "AdminSeleniumTestCase",
        "wait_for_text"
      ]
    ]
  ],
  "wait_for_value": [
    [
      "django/contrib/admin/tests.py",
      [
        "AdminSeleniumTestCase",
        "wait_for_value"
      ]
    ]
  ],
  "wait_until_visible": [
    [
      "django/contrib/admin/tests.py",
      [
        "AdminSeleniumTestCase",
        "wait_until_visible"
      ]
    ]
  ],
  "wait_until_invisible": [
    [
      "django/contrib/admin/tests.py",
      [
        "AdminSeleniumTestCase",
        "wait_until_invisible"
      ]
    ]
  ],
  "wait_page_ready": [
    [
      "django/contrib/admin/tests.py",
      [
        "AdminSeleniumTestCase",
        "wait_page_ready"
      ]
    ]
  ],
  "wait_page_loaded": [
    [
      "django/contrib/admin/tests.py",
      [
        "AdminSeleniumTestCase",
        "wait_page_loaded"
      ]
    ]
  ],
  "admin_login": [
    [
      "django/contrib/admin/tests.py",
      [
        "AdminSeleniumTestCase",
        "admin_login"
      ]
    ]
  ],
  "select_option": [
    [
      "django/contrib/admin/tests.py",
      [
        "AdminSeleniumTestCase",
        "select_option"
      ]
    ]
  ],
  "deselect_option": [
    [
      "django/contrib/admin/tests.py",
      [
        "AdminSeleniumTestCase",
        "deselect_option"
      ]
    ]
  ],
  "_assertOptionsValues": [
    [
      "django/contrib/admin/tests.py",
      [
        "AdminSeleniumTestCase",
        "_assertOptionsValues"
      ]
    ]
  ],
  "assertSelectOptions": [
    [
      "django/contrib/admin/tests.py",
      [
        "AdminSeleniumTestCase",
        "assertSelectOptions"
      ]
    ]
  ],
  "assertSelectedOptions": [
    [
      "django/contrib/admin/tests.py",
      [
        "AdminSeleniumTestCase",
        "assertSelectedOptions"
      ]
    ]
  ],
  "has_css_class": [
    [
      "django/contrib/admin/tests.py",
      [
        "AdminSeleniumTestCase",
        "has_css_class"
      ]
    ]
  ],
  "lookup_needs_distinct": [
    [
      "django/contrib/admin/utils.py",
      [
        "lookup_needs_distinct"
      ]
    ]
  ],
  "prepare_lookup_value": [
    [
      "django/contrib/admin/utils.py",
      [
        "prepare_lookup_value"
      ]
    ]
  ],
  "quote": [
    [
      "django/contrib/admin/utils.py",
      [
        "quote"
      ]
    ]
  ],
  "unquote": [
    [
      "django/contrib/admin/utils.py",
      [
        "unquote"
      ]
    ]
  ],
  "flatten": [
    [
      "django/contrib/admin/utils.py",
      [
        "flatten"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "flatten"
      ]
    ],
    [
      "django/template/context.py",
      [
        "BaseContext",
        "flatten"
      ]
    ]
  ],
  "flatten_fieldsets": [
    [
      "django/contrib/admin/utils.py",
      [
        "flatten_fieldsets"
      ]
    ]
  ],
  "format_callback": [
    [
      "django/contrib/admin/utils.py",
      [
        "get_deleted_objects",
        "format_callback"
      ]
    ]
  ],
  "add_edge": [
    [
      "django/contrib/admin/utils.py",
      [
        "NestedObjects",
        "add_edge"
      ]
    ]
  ],
  "collect": [
    [
      "django/contrib/admin/utils.py",
      [
        "NestedObjects",
        "collect"
      ]
    ],
    [
      "django/contrib/staticfiles/management/commands/collectstatic.py",
      [
        "Command",
        "collect"
      ]
    ],
    [
      "django/db/models/deletion.py",
      [
        "Collector",
        "collect"
      ]
    ]
  ],
  "related_objects": [
    [
      "django/contrib/admin/utils.py",
      [
        "NestedObjects",
        "related_objects"
      ]
    ],
    [
      "django/db/models/deletion.py",
      [
        "Collector",
        "related_objects"
      ]
    ],
    [
      "django/db/models/options.py",
      [
        "Options",
        "related_objects"
      ]
    ]
  ],
  "_nested": [
    [
      "django/contrib/admin/utils.py",
      [
        "NestedObjects",
        "_nested"
      ]
    ]
  ],
  "nested": [
    [
      "django/contrib/admin/utils.py",
      [
        "NestedObjects",
        "nested"
      ]
    ]
  ],
  "can_fast_delete": [
    [
      "django/contrib/admin/utils.py",
      [
        "NestedObjects",
        "can_fast_delete"
      ]
    ],
    [
      "django/contrib/contenttypes/management/commands/remove_stale_contenttypes.py",
      [
        "NoFastDeleteCollector",
        "can_fast_delete"
      ]
    ],
    [
      "django/db/models/deletion.py",
      [
        "Collector",
        "can_fast_delete"
      ]
    ]
  ],
  "model_format_dict": [
    [
      "django/contrib/admin/utils.py",
      [
        "model_format_dict"
      ]
    ]
  ],
  "model_ngettext": [
    [
      "django/contrib/admin/utils.py",
      [
        "model_ngettext"
      ]
    ]
  ],
  "lookup_field": [
    [
      "django/contrib/admin/utils.py",
      [
        "lookup_field"
      ]
    ]
  ],
  "_get_non_gfk_field": [
    [
      "django/contrib/admin/utils.py",
      [
        "_get_non_gfk_field"
      ]
    ]
  ],
  "label_for_field": [
    [
      "django/contrib/admin/utils.py",
      [
        "label_for_field"
      ]
    ]
  ],
  "help_text_for_field": [
    [
      "django/contrib/admin/utils.py",
      [
        "help_text_for_field"
      ]
    ]
  ],
  "display_for_field": [
    [
      "django/contrib/admin/utils.py",
      [
        "display_for_field"
      ]
    ]
  ],
  "display_for_value": [
    [
      "django/contrib/admin/utils.py",
      [
        "display_for_value"
      ]
    ]
  ],
  "get_model_from_relation": [
    [
      "django/contrib/admin/utils.py",
      [
        "get_model_from_relation"
      ]
    ]
  ],
  "reverse_field_path": [
    [
      "django/contrib/admin/utils.py",
      [
        "reverse_field_path"
      ]
    ]
  ],
  "get_fields_from_path": [
    [
      "django/contrib/admin/utils.py",
      [
        "get_fields_from_path"
      ]
    ]
  ],
  "_get_changed_field_labels_from_form": [
    [
      "django/contrib/admin/utils.py",
      [
        "_get_changed_field_labels_from_form"
      ]
    ]
  ],
  "get": [
    [
      "django/contrib/admin/views/autocomplete.py",
      [
        "AutocompleteJsonView",
        "get"
      ]
    ],
    [
      "django/contrib/gis/gdal/feature.py",
      [
        "Feature",
        "get"
      ]
    ],
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "get"
      ]
    ],
    [
      "django/core/cache/backends/base.py",
      [
        "BaseCache",
        "get"
      ]
    ],
    [
      "django/core/cache/backends/db.py",
      [
        "DatabaseCache",
        "get"
      ]
    ],
    [
      "django/core/cache/backends/dummy.py",
      [
        "DummyCache",
        "get"
      ]
    ],
    [
      "django/core/cache/backends/filebased.py",
      [
        "FileBasedCache",
        "get"
      ]
    ],
    [
      "django/core/cache/backends/locmem.py",
      [
        "LocMemCache",
        "get"
      ]
    ],
    [
      "django/core/cache/backends/memcached.py",
      [
        "BaseMemcachedCache",
        "get"
      ]
    ],
    [
      "django/core/cache/backends/memcached.py",
      [
        "MemcachedCache",
        "get"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "get"
      ]
    ],
    [
      "django/http/response.py",
      [
        "HttpResponseBase",
        "get"
      ]
    ],
    [
      "django/template/context.py",
      [
        "BaseContext",
        "get"
      ]
    ],
    [
      "django/template/context.py",
      [
        "RenderContext",
        "get"
      ]
    ],
    [
      "django/test/client.py",
      [
        "RequestFactory",
        "get"
      ]
    ],
    [
      "django/test/client.py",
      [
        "Client",
        "get"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "ContextList",
        "get"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "MultiValueDict",
        "get"
      ]
    ],
    [
      "django/utils/translation/trans_real.py",
      [
        "TranslationCatalog",
        "get"
      ]
    ],
    [
      "django/views/generic/base.py",
      [
        "TemplateView",
        "get"
      ]
    ],
    [
      "django/views/generic/base.py",
      [
        "RedirectView",
        "get"
      ]
    ],
    [
      "django/views/generic/dates.py",
      [
        "BaseDateListView",
        "get"
      ]
    ],
    [
      "django/views/generic/detail.py",
      [
        "BaseDetailView",
        "get"
      ]
    ],
    [
      "django/views/generic/edit.py",
      [
        "ProcessFormView",
        "get"
      ]
    ],
    [
      "django/views/generic/edit.py",
      [
        "BaseCreateView",
        "get"
      ]
    ],
    [
      "django/views/generic/edit.py",
      [
        "BaseUpdateView",
        "get"
      ]
    ],
    [
      "django/views/generic/list.py",
      [
        "BaseListView",
        "get"
      ]
    ],
    [
      "django/views/i18n.py",
      [
        "JavaScriptCatalog",
        "get"
      ]
    ],
    [
      "tests/admin_docs/views.py",
      [
        "XViewClass",
        "get"
      ]
    ],
    [
      "tests/auth_tests/client.py",
      [
        "PasswordResetConfirmClient",
        "get"
      ]
    ],
    [
      "tests/auth_tests/test_mixins.py",
      [
        "EmptyResponseView",
        "get"
      ]
    ],
    [
      "tests/generic_views/models.py",
      [
        "DoesNotExistQuerySet",
        "get"
      ]
    ],
    [
      "tests/generic_views/test_base.py",
      [
        "SimpleView",
        "get"
      ]
    ],
    [
      "tests/generic_views/test_base.py",
      [
        "AboutTemplateView",
        "get"
      ]
    ],
    [
      "tests/generic_views/test_base.py",
      [
        "AboutTemplateAttributeView",
        "get"
      ]
    ],
    [
      "tests/generic_views/test_base.py",
      [
        "InstanceView",
        "get"
      ]
    ],
    [
      "tests/generic_views/views.py",
      [
        "AuthorCustomDetail",
        "get"
      ]
    ],
    [
      "tests/generic_views/views.py",
      [
        "CustomMultipleObjectMixinView",
        "get"
      ]
    ],
    [
      "tests/utils_tests/test_functional.py",
      [
        "FunctionalTests",
        "assertCachedPropertyWorks",
        "with_self_subTest_attr_at",
        "get"
      ]
    ],
    [
      "tests/view_tests/views.py",
      [
        "Http404View",
        "get"
      ]
    ]
  ],
  "has_perm": [
    [
      "django/contrib/admin/views/autocomplete.py",
      [
        "AutocompleteJsonView",
        "has_perm"
      ]
    ],
    [
      "django/contrib/auth/backends.py",
      [
        "BaseBackend",
        "has_perm"
      ]
    ],
    [
      "django/contrib/auth/backends.py",
      [
        "ModelBackend",
        "has_perm"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "PermissionsMixin",
        "has_perm"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "AnonymousUser",
        "has_perm"
      ]
    ],
    [
      "tests/admin_ordering/tests.py",
      [
        "MockSuperUser",
        "has_perm"
      ]
    ],
    [
      "tests/auth_tests/models/custom_user.py",
      [
        "CustomUser",
        "has_perm"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "SimpleRowlevelBackend",
        "has_perm"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "PermissionDeniedBackend",
        "has_perm"
      ]
    ],
    [
      "tests/auth_tests/test_context_processors.py",
      [
        "MockUser",
        "has_perm"
      ]
    ],
    [
      "tests/generic_inline_admin/tests.py",
      [
        "MockSuperUser",
        "has_perm"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "MockSuperUser",
        "has_perm"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminPermissionTests",
        "MockViewUser",
        "has_perm"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminPermissionTests",
        "MockAddUser",
        "has_perm"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminPermissionTests",
        "MockChangeUser",
        "has_perm"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminPermissionTests",
        "MockDeleteUser",
        "has_perm"
      ]
    ]
  ],
  "staff_member_required": [
    [
      "django/contrib/admin/views/decorators.py",
      [
        "staff_member_required"
      ]
    ]
  ],
  "get_filters_params": [
    [
      "django/contrib/admin/views/main.py",
      [
        "ChangeList",
        "get_filters_params"
      ]
    ]
  ],
  "get_filters": [
    [
      "django/contrib/admin/views/main.py",
      [
        "ChangeList",
        "get_filters"
      ]
    ]
  ],
  "get_query_string": [
    [
      "django/contrib/admin/views/main.py",
      [
        "ChangeList",
        "get_query_string"
      ]
    ]
  ],
  "get_results": [
    [
      "django/contrib/admin/views/main.py",
      [
        "ChangeList",
        "get_results"
      ]
    ]
  ],
  "_get_default_ordering": [
    [
      "django/contrib/admin/views/main.py",
      [
        "ChangeList",
        "_get_default_ordering"
      ]
    ]
  ],
  "get_ordering_field": [
    [
      "django/contrib/admin/views/main.py",
      [
        "ChangeList",
        "get_ordering_field"
      ]
    ]
  ],
  "_get_deterministic_ordering": [
    [
      "django/contrib/admin/views/main.py",
      [
        "ChangeList",
        "_get_deterministic_ordering"
      ]
    ]
  ],
  "get_ordering_field_columns": [
    [
      "django/contrib/admin/views/main.py",
      [
        "ChangeList",
        "get_ordering_field_columns"
      ]
    ]
  ],
  "apply_select_related": [
    [
      "django/contrib/admin/views/main.py",
      [
        "ChangeList",
        "apply_select_related"
      ]
    ]
  ],
  "has_related_field_in_list_display": [
    [
      "django/contrib/admin/views/main.py",
      [
        "ChangeList",
        "has_related_field_in_list_display"
      ]
    ]
  ],
  "url_for_result": [
    [
      "django/contrib/admin/views/main.py",
      [
        "ChangeList",
        "url_for_result"
      ]
    ]
  ],
  "get_context": [
    [
      "django/contrib/admin/widgets.py",
      [
        "FilteredSelectMultiple",
        "get_context"
      ]
    ],
    [
      "django/contrib/admin/widgets.py",
      [
        "AdminSplitDateTime",
        "get_context"
      ]
    ],
    [
      "django/contrib/admin/widgets.py",
      [
        "ForeignKeyRawIdWidget",
        "get_context"
      ]
    ],
    [
      "django/contrib/admin/widgets.py",
      [
        "ManyToManyRawIdWidget",
        "get_context"
      ]
    ],
    [
      "django/contrib/admin/widgets.py",
      [
        "RelatedFieldWidgetWrapper",
        "get_context"
      ]
    ],
    [
      "django/contrib/admin/widgets.py",
      [
        "AdminURLFieldWidget",
        "get_context"
      ]
    ],
    [
      "django/contrib/auth/forms.py",
      [
        "ReadOnlyPasswordHashWidget",
        "get_context"
      ]
    ],
    [
      "django/contrib/gis/admin/widgets.py",
      [
        "OpenLayersWidget",
        "get_context"
      ]
    ],
    [
      "django/contrib/gis/forms/widgets.py",
      [
        "BaseGeometryWidget",
        "get_context"
      ]
    ],
    [
      "django/contrib/postgres/forms/array.py",
      [
        "SplitArrayWidget",
        "get_context"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "Widget",
        "get_context"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "Input",
        "get_context"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "PasswordInput",
        "get_context"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "MultipleHiddenInput",
        "get_context"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "ClearableFileInput",
        "get_context"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "CheckboxInput",
        "get_context"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "ChoiceWidget",
        "get_context"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "Select",
        "get_context"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "MultiWidget",
        "get_context"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "SelectDateWidget",
        "get_context"
      ]
    ]
  ],
  "url_params_from_lookup_dict": [
    [
      "django/contrib/admin/widgets.py",
      [
        "url_params_from_lookup_dict"
      ]
    ]
  ],
  "base_url_parameters": [
    [
      "django/contrib/admin/widgets.py",
      [
        "ForeignKeyRawIdWidget",
        "base_url_parameters"
      ]
    ]
  ],
  "url_parameters": [
    [
      "django/contrib/admin/widgets.py",
      [
        "ForeignKeyRawIdWidget",
        "url_parameters"
      ]
    ],
    [
      "django/contrib/admin/widgets.py",
      [
        "ManyToManyRawIdWidget",
        "url_parameters"
      ]
    ]
  ],
  "label_and_url_for_value": [
    [
      "django/contrib/admin/widgets.py",
      [
        "ForeignKeyRawIdWidget",
        "label_and_url_for_value"
      ]
    ],
    [
      "django/contrib/admin/widgets.py",
      [
        "ManyToManyRawIdWidget",
        "label_and_url_for_value"
      ]
    ]
  ],
  "value_from_datadict": [
    [
      "django/contrib/admin/widgets.py",
      [
        "ManyToManyRawIdWidget",
        "value_from_datadict"
      ]
    ],
    [
      "django/contrib/admin/widgets.py",
      [
        "RelatedFieldWidgetWrapper",
        "value_from_datadict"
      ]
    ],
    [
      "django/contrib/postgres/forms/array.py",
      [
        "SplitArrayWidget",
        "value_from_datadict"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "Widget",
        "value_from_datadict"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "MultipleHiddenInput",
        "value_from_datadict"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "FileInput",
        "value_from_datadict"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "ClearableFileInput",
        "value_from_datadict"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "CheckboxInput",
        "value_from_datadict"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "ChoiceWidget",
        "value_from_datadict"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "NullBooleanSelect",
        "value_from_datadict"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "SelectMultiple",
        "value_from_datadict"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "MultiWidget",
        "value_from_datadict"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "SelectDateWidget",
        "value_from_datadict"
      ]
    ]
  ],
  "format_value": [
    [
      "django/contrib/admin/widgets.py",
      [
        "ManyToManyRawIdWidget",
        "format_value"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "Widget",
        "format_value"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "MultipleHiddenInput",
        "format_value"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "FileInput",
        "format_value"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "ClearableFileInput",
        "format_value"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "DateTimeBaseInput",
        "format_value"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "CheckboxInput",
        "format_value"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "ChoiceWidget",
        "format_value"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "NullBooleanSelect",
        "format_value"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "SelectDateWidget",
        "format_value"
      ]
    ]
  ],
  "__deepcopy__": [
    [
      "django/contrib/admin/widgets.py",
      [
        "RelatedFieldWidgetWrapper",
        "__deepcopy__"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "__deepcopy__"
      ]
    ],
    [
      "django/contrib/postgres/forms/array.py",
      [
        "SplitArrayWidget",
        "__deepcopy__"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "__deepcopy__"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "__deepcopy__"
      ]
    ],
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "__deepcopy__"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "Field",
        "__deepcopy__"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "ChoiceField",
        "__deepcopy__"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "MultiValueField",
        "__deepcopy__"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "ModelChoiceField",
        "__deepcopy__"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "Widget",
        "__deepcopy__"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "ChoiceWidget",
        "__deepcopy__"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "MultiWidget",
        "__deepcopy__"
      ]
    ],
    [
      "django/http/request.py",
      [
        "QueryDict",
        "__deepcopy__"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "MultiValueDict",
        "__deepcopy__"
      ]
    ],
    [
      "django/utils/functional.py",
      [
        "lazy",
        "__proxy__",
        "__deepcopy__"
      ]
    ],
    [
      "django/utils/functional.py",
      [
        "LazyObject",
        "__deepcopy__"
      ]
    ],
    [
      "django/utils/functional.py",
      [
        "SimpleLazyObject",
        "__deepcopy__"
      ]
    ],
    [
      "django/utils/tree.py",
      [
        "Node",
        "__deepcopy__"
      ]
    ]
  ],
  "is_hidden": [
    [
      "django/contrib/admin/widgets.py",
      [
        "RelatedFieldWidgetWrapper",
        "is_hidden"
      ]
    ],
    [
      "django/contrib/postgres/forms/array.py",
      [
        "SplitArrayWidget",
        "is_hidden"
      ]
    ],
    [
      "django/db/models/fields/reverse_related.py",
      [
        "ForeignObjectRel",
        "is_hidden"
      ]
    ],
    [
      "django/forms/boundfield.py",
      [
        "BoundField",
        "is_hidden"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "Widget",
        "is_hidden"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "MultiWidget",
        "is_hidden"
      ]
    ]
  ],
  "get_related_url": [
    [
      "django/contrib/admin/widgets.py",
      [
        "RelatedFieldWidgetWrapper",
        "get_related_url"
      ]
    ]
  ],
  "value_omitted_from_data": [
    [
      "django/contrib/admin/widgets.py",
      [
        "RelatedFieldWidgetWrapper",
        "value_omitted_from_data"
      ]
    ],
    [
      "django/contrib/postgres/forms/array.py",
      [
        "SplitArrayWidget",
        "value_omitted_from_data"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "Widget",
        "value_omitted_from_data"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "FileInput",
        "value_omitted_from_data"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "ClearableFileInput",
        "value_omitted_from_data"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "CheckboxInput",
        "value_omitted_from_data"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "SelectMultiple",
        "value_omitted_from_data"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "CheckboxSelectMultiple",
        "value_omitted_from_data"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "MultiWidget",
        "value_omitted_from_data"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "SelectDateWidget",
        "value_omitted_from_data"
      ]
    ]
  ],
  "id_for_label": [
    [
      "django/contrib/admin/widgets.py",
      [
        "RelatedFieldWidgetWrapper",
        "id_for_label"
      ]
    ],
    [
      "django/contrib/postgres/forms/array.py",
      [
        "SplitArrayWidget",
        "id_for_label"
      ]
    ],
    [
      "django/forms/boundfield.py",
      [
        "BoundField",
        "id_for_label"
      ]
    ],
    [
      "django/forms/boundfield.py",
      [
        "BoundWidget",
        "id_for_label"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "Widget",
        "id_for_label"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "ChoiceWidget",
        "id_for_label"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "CheckboxSelectMultiple",
        "id_for_label"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "MultiWidget",
        "id_for_label"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "SelectDateWidget",
        "id_for_label"
      ]
    ]
  ],
  "get_url": [
    [
      "django/contrib/admin/widgets.py",
      [
        "AutocompleteMixin",
        "get_url"
      ]
    ]
  ],
  "build_attrs": [
    [
      "django/contrib/admin/widgets.py",
      [
        "AutocompleteMixin",
        "build_attrs"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "Widget",
        "build_attrs"
      ]
    ]
  ],
  "optgroups": [
    [
      "django/contrib/admin/widgets.py",
      [
        "AutocompleteMixin",
        "optgroups"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "ChoiceWidget",
        "optgroups"
      ]
    ]
  ],
  "process_view": [
    [
      "django/contrib/admindocs/middleware.py",
      [
        "XViewMiddleware",
        "process_view"
      ]
    ],
    [
      "django/middleware/csrf.py",
      [
        "CsrfViewMiddleware",
        "process_view"
      ]
    ],
    [
      "django/views/decorators/csrf.py",
      [
        "_EnsureCsrfCookie",
        "process_view"
      ]
    ],
    [
      "tests/middleware_exceptions/middleware.py",
      [
        "ProcessViewMiddleware",
        "process_view"
      ]
    ],
    [
      "tests/middleware_exceptions/middleware.py",
      [
        "AsyncProcessViewMiddleware",
        "process_view"
      ]
    ],
    [
      "tests/middleware_exceptions/middleware.py",
      [
        "ProcessViewNoneMiddleware",
        "process_view"
      ]
    ],
    [
      "tests/middleware_exceptions/middleware.py",
      [
        "ProcessViewTemplateResponseMiddleware",
        "process_view"
      ]
    ],
    [
      "tests/urlpatterns_reverse/middleware.py",
      [
        "ReverseInnerInStreaming",
        "process_view"
      ]
    ],
    [
      "tests/urlpatterns_reverse/middleware.py",
      [
        "ReverseOuterInStreaming",
        "process_view"
      ]
    ],
    [
      "tests/utils_tests/test_decorators.py",
      [
        "ProcessViewMiddleware",
        "process_view"
      ]
    ],
    [
      "tests/utils_tests/test_decorators.py",
      [
        "process_view"
      ]
    ],
    [
      "tests/utils_tests/test_decorators.py",
      [
        "FullMiddleware",
        "process_view"
      ]
    ]
  ],
  "get_view_name": [
    [
      "django/contrib/admindocs/utils.py",
      [
        "get_view_name"
      ]
    ]
  ],
  "parse_docstring": [
    [
      "django/contrib/admindocs/utils.py",
      [
        "parse_docstring"
      ]
    ]
  ],
  "parse_rst": [
    [
      "django/contrib/admindocs/utils.py",
      [
        "parse_rst"
      ]
    ]
  ],
  "create_reference_role": [
    [
      "django/contrib/admindocs/utils.py",
      [
        "create_reference_role"
      ]
    ]
  ],
  "default_reference_role": [
    [
      "django/contrib/admindocs/utils.py",
      [
        "default_reference_role"
      ]
    ]
  ],
  "replace_named_groups": [
    [
      "django/contrib/admindocs/utils.py",
      [
        "replace_named_groups"
      ]
    ]
  ],
  "replace_unnamed_groups": [
    [
      "django/contrib/admindocs/utils.py",
      [
        "replace_unnamed_groups"
      ]
    ]
  ],
  "dispatch": [
    [
      "django/contrib/admindocs/views.py",
      [
        "BaseAdminDocsView",
        "dispatch"
      ]
    ],
    [
      "django/contrib/auth/mixins.py",
      [
        "LoginRequiredMixin",
        "dispatch"
      ]
    ],
    [
      "django/contrib/auth/mixins.py",
      [
        "PermissionRequiredMixin",
        "dispatch"
      ]
    ],
    [
      "django/contrib/auth/mixins.py",
      [
        "UserPassesTestMixin",
        "dispatch"
      ]
    ],
    [
      "django/contrib/auth/views.py",
      [
        "LoginView",
        "dispatch"
      ]
    ],
    [
      "django/contrib/auth/views.py",
      [
        "LogoutView",
        "dispatch"
      ]
    ],
    [
      "django/contrib/auth/views.py",
      [
        "PasswordResetView",
        "dispatch"
      ]
    ],
    [
      "django/contrib/auth/views.py",
      [
        "PasswordResetConfirmView",
        "dispatch"
      ]
    ],
    [
      "django/contrib/auth/views.py",
      [
        "PasswordChangeView",
        "dispatch"
      ]
    ],
    [
      "django/contrib/auth/views.py",
      [
        "PasswordChangeDoneView",
        "dispatch"
      ]
    ],
    [
      "django/views/generic/base.py",
      [
        "View",
        "dispatch"
      ]
    ],
    [
      "tests/generic_views/test_base.py",
      [
        "DecoratedDispatchView",
        "dispatch"
      ]
    ]
  ],
  "get_context_data": [
    [
      "django/contrib/admindocs/views.py",
      [
        "BaseAdminDocsView",
        "get_context_data"
      ]
    ],
    [
      "django/contrib/admindocs/views.py",
      [
        "TemplateTagIndexView",
        "get_context_data"
      ]
    ],
    [
      "django/contrib/admindocs/views.py",
      [
        "TemplateFilterIndexView",
        "get_context_data"
      ]
    ],
    [
      "django/contrib/admindocs/views.py",
      [
        "ViewIndexView",
        "get_context_data"
      ]
    ],
    [
      "django/contrib/admindocs/views.py",
      [
        "ViewDetailView",
        "get_context_data"
      ]
    ],
    [
      "django/contrib/admindocs/views.py",
      [
        "ModelIndexView",
        "get_context_data"
      ]
    ],
    [
      "django/contrib/admindocs/views.py",
      [
        "ModelDetailView",
        "get_context_data"
      ]
    ],
    [
      "django/contrib/admindocs/views.py",
      [
        "TemplateDetailView",
        "get_context_data"
      ]
    ],
    [
      "django/contrib/auth/views.py",
      [
        "LoginView",
        "get_context_data"
      ]
    ],
    [
      "django/contrib/auth/views.py",
      [
        "LogoutView",
        "get_context_data"
      ]
    ],
    [
      "django/contrib/auth/views.py",
      [
        "PasswordContextMixin",
        "get_context_data"
      ]
    ],
    [
      "django/contrib/auth/views.py",
      [
        "PasswordResetConfirmView",
        "get_context_data"
      ]
    ],
    [
      "django/contrib/auth/views.py",
      [
        "PasswordResetCompleteView",
        "get_context_data"
      ]
    ],
    [
      "django/contrib/syndication/views.py",
      [
        "Feed",
        "get_context_data"
      ]
    ],
    [
      "django/views/generic/base.py",
      [
        "ContextMixin",
        "get_context_data"
      ]
    ],
    [
      "django/views/generic/detail.py",
      [
        "SingleObjectMixin",
        "get_context_data"
      ]
    ],
    [
      "django/views/generic/edit.py",
      [
        "FormMixin",
        "get_context_data"
      ]
    ],
    [
      "django/views/generic/list.py",
      [
        "MultipleObjectMixin",
        "get_context_data"
      ]
    ],
    [
      "django/views/i18n.py",
      [
        "JavaScriptCatalog",
        "get_context_data"
      ]
    ],
    [
      "tests/generic_views/views.py",
      [
        "CustomTemplateView",
        "get_context_data"
      ]
    ],
    [
      "tests/generic_views/views.py",
      [
        "CustomContextView",
        "get_context_data"
      ]
    ],
    [
      "tests/syndication_tests/feeds.py",
      [
        "TemplateContextFeed",
        "get_context_data"
      ]
    ]
  ],
  "_get_view_func": [
    [
      "django/contrib/admindocs/views.py",
      [
        "ViewDetailView",
        "_get_view_func"
      ]
    ]
  ],
  "get_return_data_type": [
    [
      "django/contrib/admindocs/views.py",
      [
        "get_return_data_type"
      ]
    ]
  ],
  "get_readable_field_data_type": [
    [
      "django/contrib/admindocs/views.py",
      [
        "get_readable_field_data_type"
      ]
    ]
  ],
  "extract_views_from_urlpatterns": [
    [
      "django/contrib/admindocs/views.py",
      [
        "extract_views_from_urlpatterns"
      ]
    ]
  ],
  "simplify_regex": [
    [
      "django/contrib/admindocs/views.py",
      [
        "simplify_regex"
      ]
    ]
  ],
  "load_backend": [
    [
      "django/contrib/auth/__init__.py",
      [
        "load_backend"
      ]
    ],
    [
      "django/db/utils.py",
      [
        "load_backend"
      ]
    ]
  ],
  "_get_backends": [
    [
      "django/contrib/auth/__init__.py",
      [
        "_get_backends"
      ]
    ]
  ],
  "get_backends": [
    [
      "django/contrib/auth/__init__.py",
      [
        "get_backends"
      ]
    ]
  ],
  "_clean_credentials": [
    [
      "django/contrib/auth/__init__.py",
      [
        "_clean_credentials"
      ]
    ]
  ],
  "_get_user_session_key": [
    [
      "django/contrib/auth/__init__.py",
      [
        "_get_user_session_key"
      ]
    ]
  ],
  "authenticate": [
    [
      "django/contrib/auth/__init__.py",
      [
        "authenticate"
      ]
    ],
    [
      "django/contrib/auth/backends.py",
      [
        "BaseBackend",
        "authenticate"
      ]
    ],
    [
      "django/contrib/auth/backends.py",
      [
        "ModelBackend",
        "authenticate"
      ]
    ],
    [
      "django/contrib/auth/backends.py",
      [
        "RemoteUserBackend",
        "authenticate"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "PermissionDeniedBackend",
        "authenticate"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "TypeErrorBackend",
        "authenticate"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "SkippedBackend",
        "authenticate"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "SkippedBackendWithDecoratedMethod",
        "authenticate"
      ]
    ],
    [
      "tests/test_client_regress/auth_backends.py",
      [
        "CustomUserBackend",
        "authenticate"
      ]
    ]
  ],
  "get_user_model": [
    [
      "django/contrib/auth/__init__.py",
      [
        "get_user_model"
      ]
    ]
  ],
  "get_user": [
    [
      "django/contrib/auth/__init__.py",
      [
        "get_user"
      ]
    ],
    [
      "django/contrib/auth/backends.py",
      [
        "BaseBackend",
        "get_user"
      ]
    ],
    [
      "django/contrib/auth/backends.py",
      [
        "ModelBackend",
        "get_user"
      ]
    ],
    [
      "django/contrib/auth/forms.py",
      [
        "AuthenticationForm",
        "get_user"
      ]
    ],
    [
      "django/contrib/auth/middleware.py",
      [
        "get_user"
      ]
    ],
    [
      "django/contrib/auth/views.py",
      [
        "PasswordResetConfirmView",
        "get_user"
      ]
    ],
    [
      "tests/test_client_regress/auth_backends.py",
      [
        "CustomUserBackend",
        "get_user"
      ]
    ]
  ],
  "get_permission_codename": [
    [
      "django/contrib/auth/__init__.py",
      [
        "get_permission_codename"
      ]
    ]
  ],
  "update_session_auth_hash": [
    [
      "django/contrib/auth/__init__.py",
      [
        "update_session_auth_hash"
      ]
    ]
  ],
  "_add_view": [
    [
      "django/contrib/auth/admin.py",
      [
        "UserAdmin",
        "_add_view"
      ]
    ]
  ],
  "user_change_password": [
    [
      "django/contrib/auth/admin.py",
      [
        "UserAdmin",
        "user_change_password"
      ]
    ]
  ],
  "get_user_permissions": [
    [
      "django/contrib/auth/backends.py",
      [
        "BaseBackend",
        "get_user_permissions"
      ]
    ],
    [
      "django/contrib/auth/backends.py",
      [
        "ModelBackend",
        "get_user_permissions"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "PermissionsMixin",
        "get_user_permissions"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "AnonymousUser",
        "get_user_permissions"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "SimpleBackend",
        "get_user_permissions"
      ]
    ]
  ],
  "get_group_permissions": [
    [
      "django/contrib/auth/backends.py",
      [
        "BaseBackend",
        "get_group_permissions"
      ]
    ],
    [
      "django/contrib/auth/backends.py",
      [
        "ModelBackend",
        "get_group_permissions"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "PermissionsMixin",
        "get_group_permissions"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "AnonymousUser",
        "get_group_permissions"
      ]
    ],
    [
      "tests/auth_tests/models/custom_user.py",
      [
        "CustomUser",
        "get_group_permissions"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "SimpleBackend",
        "get_group_permissions"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "SimpleRowlevelBackend",
        "get_group_permissions"
      ]
    ]
  ],
  "get_all_permissions": [
    [
      "django/contrib/auth/backends.py",
      [
        "BaseBackend",
        "get_all_permissions"
      ]
    ],
    [
      "django/contrib/auth/backends.py",
      [
        "ModelBackend",
        "get_all_permissions"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "PermissionsMixin",
        "get_all_permissions"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "AnonymousUser",
        "get_all_permissions"
      ]
    ],
    [
      "tests/auth_tests/models/custom_user.py",
      [
        "CustomUser",
        "get_all_permissions"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "SimpleRowlevelBackend",
        "get_all_permissions"
      ]
    ]
  ],
  "user_can_authenticate": [
    [
      "django/contrib/auth/backends.py",
      [
        "ModelBackend",
        "user_can_authenticate"
      ]
    ],
    [
      "django/contrib/auth/backends.py",
      [
        "AllowAllUsersModelBackend",
        "user_can_authenticate"
      ]
    ],
    [
      "django/contrib/auth/backends.py",
      [
        "AllowAllUsersRemoteUserBackend",
        "user_can_authenticate"
      ]
    ]
  ],
  "_get_user_permissions": [
    [
      "django/contrib/auth/backends.py",
      [
        "ModelBackend",
        "_get_user_permissions"
      ]
    ]
  ],
  "_get_group_permissions": [
    [
      "django/contrib/auth/backends.py",
      [
        "ModelBackend",
        "_get_group_permissions"
      ]
    ]
  ],
  "_get_permissions": [
    [
      "django/contrib/auth/backends.py",
      [
        "ModelBackend",
        "_get_permissions"
      ]
    ]
  ],
  "has_module_perms": [
    [
      "django/contrib/auth/backends.py",
      [
        "ModelBackend",
        "has_module_perms"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "PermissionsMixin",
        "has_module_perms"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "AnonymousUser",
        "has_module_perms"
      ]
    ],
    [
      "tests/admin_ordering/tests.py",
      [
        "MockSuperUser",
        "has_module_perms"
      ]
    ],
    [
      "tests/auth_tests/models/custom_user.py",
      [
        "CustomUser",
        "has_module_perms"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "SimpleRowlevelBackend",
        "has_module_perms"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "PermissionDeniedBackend",
        "has_module_perms"
      ]
    ],
    [
      "tests/auth_tests/test_context_processors.py",
      [
        "MockUser",
        "has_module_perms"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminPermissionTests",
        "MockUser",
        "has_module_perms"
      ]
    ]
  ],
  "with_perm": [
    [
      "django/contrib/auth/backends.py",
      [
        "ModelBackend",
        "with_perm"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "UserManager",
        "with_perm"
      ]
    ],
    [
      "tests/auth_tests/test_models.py",
      [
        "CustomModelBackend",
        "with_perm"
      ]
    ]
  ],
  "clean_username": [
    [
      "django/contrib/auth/backends.py",
      [
        "RemoteUserBackend",
        "clean_username"
      ]
    ],
    [
      "django/contrib/auth/middleware.py",
      [
        "RemoteUserMiddleware",
        "clean_username"
      ]
    ],
    [
      "tests/admin_views/forms.py",
      [
        "CustomAdminAuthenticationForm",
        "clean_username"
      ]
    ],
    [
      "tests/auth_tests/test_remote_user.py",
      [
        "CustomRemoteUserBackend",
        "clean_username"
      ]
    ]
  ],
  "configure_user": [
    [
      "django/contrib/auth/backends.py",
      [
        "RemoteUserBackend",
        "configure_user"
      ]
    ],
    [
      "tests/auth_tests/test_remote_user.py",
      [
        "CustomRemoteUserBackend",
        "configure_user"
      ]
    ]
  ],
  "normalize_email": [
    [
      "django/contrib/auth/base_user.py",
      [
        "BaseUserManager",
        "normalize_email"
      ]
    ]
  ],
  "make_random_password": [
    [
      "django/contrib/auth/base_user.py",
      [
        "BaseUserManager",
        "make_random_password"
      ]
    ]
  ],
  "get_by_natural_key": [
    [
      "django/contrib/auth/base_user.py",
      [
        "BaseUserManager",
        "get_by_natural_key"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "PermissionManager",
        "get_by_natural_key"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "GroupManager",
        "get_by_natural_key"
      ]
    ],
    [
      "django/contrib/contenttypes/models.py",
      [
        "ContentTypeManager",
        "get_by_natural_key"
      ]
    ],
    [
      "django/contrib/sites/models.py",
      [
        "SiteManager",
        "get_by_natural_key"
      ]
    ],
    [
      "tests/auth_tests/models/with_integer_username.py",
      [
        "IntegerUsernameUserManager",
        "get_by_natural_key"
      ]
    ],
    [
      "tests/fixtures/models.py",
      [
        "PersonManager",
        "get_by_natural_key"
      ]
    ],
    [
      "tests/fixtures/models.py",
      [
        "NaturalKeyManager",
        "get_by_natural_key"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "TestManager",
        "get_by_natural_key"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "NKManager",
        "get_by_natural_key"
      ]
    ],
    [
      "tests/multiple_database/models.py",
      [
        "PersonManager",
        "get_by_natural_key"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "CategoryMetaDataManager",
        "get_by_natural_key"
      ]
    ],
    [
      "tests/serializers/models/multi_table.py",
      [
        "ParentManager",
        "get_by_natural_key"
      ]
    ],
    [
      "tests/serializers/models/natural.py",
      [
        "NaturalKeyAnchorManager",
        "get_by_natural_key"
      ]
    ],
    [
      "tests/serializers/models/natural.py",
      [
        "NaturalKeyThing",
        "Manager",
        "get_by_natural_key"
      ]
    ],
    [
      "tests/serializers/models/natural.py",
      [
        "NaturalPKWithDefault",
        "Manager",
        "get_by_natural_key"
      ]
    ]
  ],
  "save": [
    [
      "django/contrib/auth/base_user.py",
      [
        "AbstractBaseUser",
        "save"
      ]
    ],
    [
      "django/contrib/auth/forms.py",
      [
        "UserCreationForm",
        "save"
      ]
    ],
    [
      "django/contrib/auth/forms.py",
      [
        "PasswordResetForm",
        "save"
      ]
    ],
    [
      "django/contrib/auth/forms.py",
      [
        "SetPasswordForm",
        "save"
      ]
    ],
    [
      "django/contrib/auth/forms.py",
      [
        "AdminPasswordChangeForm",
        "save"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "AnonymousUser",
        "save"
      ]
    ],
    [
      "django/contrib/gis/utils/layermapping.py",
      [
        "LayerMapping",
        "save"
      ]
    ],
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "save"
      ]
    ],
    [
      "django/contrib/sessions/backends/cache.py",
      [
        "SessionStore",
        "save"
      ]
    ],
    [
      "django/contrib/sessions/backends/cached_db.py",
      [
        "SessionStore",
        "save"
      ]
    ],
    [
      "django/contrib/sessions/backends/db.py",
      [
        "SessionStore",
        "save"
      ]
    ],
    [
      "django/contrib/sessions/backends/file.py",
      [
        "SessionStore",
        "save"
      ]
    ],
    [
      "django/contrib/sessions/backends/signed_cookies.py",
      [
        "SessionStore",
        "save"
      ]
    ],
    [
      "django/contrib/sessions/base_session.py",
      [
        "BaseSessionManager",
        "save"
      ]
    ],
    [
      "django/contrib/sites/requests.py",
      [
        "RequestSite",
        "save"
      ]
    ],
    [
      "django/core/files/storage.py",
      [
        "Storage",
        "save"
      ]
    ],
    [
      "django/core/serializers/base.py",
      [
        "DeserializedObject",
        "save"
      ]
    ],
    [
      "django/db/models/base.py",
      [
        "Model",
        "save"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "FieldFile",
        "save"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "BaseModelForm",
        "save"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "BaseModelFormSet",
        "save"
      ]
    ],
    [
      "tests/admin_inlines/models.py",
      [
        "NonAutoPKBook",
        "save"
      ]
    ],
    [
      "tests/extra_regress/models.py",
      [
        "RevisionableModel",
        "save"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Article",
        "save"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "Photo",
        "save"
      ]
    ],
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_custom_save_method",
        "PoetForm",
        "save"
      ]
    ],
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_inline_formsets_with_custom_save_method",
        "PoemForm",
        "save"
      ]
    ],
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_inline_formsets_with_custom_save_method_related_instance",
        "PoemForm2",
        "save"
      ]
    ],
    [
      "tests/save_delete_hooks/models.py",
      [
        "Person",
        "save"
      ]
    ],
    [
      "tests/serializers/models/data.py",
      [
        "ModifyingSaveData",
        "save"
      ]
    ],
    [
      "tests/test_client_regress/session.py",
      [
        "SessionStore",
        "save"
      ]
    ]
  ],
  "get_username": [
    [
      "django/contrib/auth/base_user.py",
      [
        "AbstractBaseUser",
        "get_username"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "AnonymousUser",
        "get_username"
      ]
    ]
  ],
  "clean": [
    [
      "django/contrib/auth/base_user.py",
      [
        "AbstractBaseUser",
        "clean"
      ]
    ],
    [
      "django/contrib/auth/forms.py",
      [
        "AuthenticationForm",
        "clean"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "AbstractUser",
        "clean"
      ]
    ],
    [
      "django/contrib/flatpages/forms.py",
      [
        "FlatpageForm",
        "clean"
      ]
    ],
    [
      "django/contrib/gis/forms/fields.py",
      [
        "GeometryField",
        "clean"
      ]
    ],
    [
      "django/contrib/postgres/forms/array.py",
      [
        "SimpleArrayField",
        "clean"
      ]
    ],
    [
      "django/contrib/postgres/forms/array.py",
      [
        "SplitArrayField",
        "clean"
      ]
    ],
    [
      "django/contrib/sessions/backends/file.py",
      [
        "SessionStore",
        "clean"
      ]
    ],
    [
      "django/core/validators.py",
      [
        "BaseValidator",
        "clean"
      ]
    ],
    [
      "django/core/validators.py",
      [
        "MinLengthValidator",
        "clean"
      ]
    ],
    [
      "django/core/validators.py",
      [
        "MaxLengthValidator",
        "clean"
      ]
    ],
    [
      "django/db/models/base.py",
      [
        "Model",
        "clean"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "clean"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "Field",
        "clean"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "FileField",
        "clean"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "TypedChoiceField",
        "clean"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "TypedMultipleChoiceField",
        "clean"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "ComboField",
        "clean"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "MultiValueField",
        "clean"
      ]
    ],
    [
      "django/forms/forms.py",
      [
        "BaseForm",
        "clean"
      ]
    ],
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "clean"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "BaseModelForm",
        "clean"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "BaseModelFormSet",
        "clean"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "InlineForeignKeyField",
        "clean"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "ModelMultipleChoiceField",
        "clean"
      ]
    ],
    [
      "tests/admin_inlines/admin.py",
      [
        "TitleForm",
        "clean"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "BasePersonModelFormSet",
        "clean"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "DependentChildAdminForm",
        "clean"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Parent",
        "clean"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Child",
        "clean"
      ]
    ],
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "FormsErrorMessagesTestCase",
        "test_subclassing_errorlist",
        "TestForm",
        "clean"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_validating_multiple_fields",
        "UserRegistration_1",
        "clean"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_update_error_dict",
        "CodeForm",
        "clean"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_has_error",
        "UserRegistration",
        "clean"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_basic_processing_in_view",
        "UserRegistration",
        "clean"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_templates_with_forms",
        "UserRegistration",
        "clean"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_error_dict",
        "MyForm",
        "clean"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_error_dict_as_json_escape_html",
        "MyForm",
        "clean"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_error_list_with_non_field_errors_has_correct_class",
        "Person",
        "clean"
      ]
    ],
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "BaseFavoriteDrinksFormSet",
        "clean"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "CustomErrorMessage",
        "clean"
      ]
    ],
    [
      "tests/model_formsets/models.py",
      [
        "Book",
        "clean"
      ]
    ],
    [
      "tests/test_client/views.py",
      [
        "TestForm",
        "clean"
      ]
    ],
    [
      "tests/test_client/views.py",
      [
        "BaseTestFormSet",
        "clean"
      ]
    ],
    [
      "tests/validation/models.py",
      [
        "ModelToValidate",
        "clean"
      ]
    ],
    [
      "tests/validation/models.py",
      [
        "Article",
        "clean"
      ]
    ]
  ],
  "natural_key": [
    [
      "django/contrib/auth/base_user.py",
      [
        "AbstractBaseUser",
        "natural_key"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "Permission",
        "natural_key"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "Group",
        "natural_key"
      ]
    ],
    [
      "django/contrib/contenttypes/models.py",
      [
        "ContentType",
        "natural_key"
      ]
    ],
    [
      "django/contrib/sites/models.py",
      [
        "Site",
        "natural_key"
      ]
    ],
    [
      "tests/backends/models.py",
      [
        "CircularA",
        "natural_key"
      ]
    ],
    [
      "tests/backends/models.py",
      [
        "CircularB",
        "natural_key"
      ]
    ],
    [
      "tests/fixtures/models.py",
      [
        "Person",
        "natural_key"
      ]
    ],
    [
      "tests/fixtures/models.py",
      [
        "NaturalKeyThing",
        "natural_key"
      ]
    ],
    [
      "tests/fixtures/models.py",
      [
        "CircularA",
        "natural_key"
      ]
    ],
    [
      "tests/fixtures/models.py",
      [
        "CircularB",
        "natural_key"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "Store",
        "natural_key"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "Person",
        "natural_key"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "NKChild",
        "natural_key"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "Circle1",
        "natural_key"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "Circle2",
        "natural_key"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "Circle3",
        "natural_key"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "Circle4",
        "natural_key"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "Circle5",
        "natural_key"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "Circle6",
        "natural_key"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "ExternalDependency",
        "natural_key"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "BaseNKModel",
        "natural_key"
      ]
    ],
    [
      "tests/fixtures_regress/models.py",
      [
        "M2MComplexCircular2B",
        "natural_key"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "CategoryMetaData",
        "natural_key"
      ]
    ],
    [
      "tests/serializers/models/multi_table.py",
      [
        "Parent",
        "natural_key"
      ]
    ],
    [
      "tests/serializers/models/natural.py",
      [
        "NaturalKeyAnchor",
        "natural_key"
      ]
    ],
    [
      "tests/serializers/models/natural.py",
      [
        "NaturalKeyThing",
        "natural_key"
      ]
    ],
    [
      "tests/serializers/models/natural.py",
      [
        "NaturalPKWithDefault",
        "natural_key"
      ]
    ]
  ],
  "is_anonymous": [
    [
      "django/contrib/auth/base_user.py",
      [
        "AbstractBaseUser",
        "is_anonymous"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "AnonymousUser",
        "is_anonymous"
      ]
    ],
    [
      "tests/auth_tests/test_checks.py",
      [
        "UserModelChecksTests",
        "test_is_anonymous_authenticated_methods",
        "BadUser",
        "is_anonymous"
      ]
    ]
  ],
  "is_authenticated": [
    [
      "django/contrib/auth/base_user.py",
      [
        "AbstractBaseUser",
        "is_authenticated"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "AnonymousUser",
        "is_authenticated"
      ]
    ],
    [
      "tests/auth_tests/test_checks.py",
      [
        "UserModelChecksTests",
        "test_is_anonymous_authenticated_methods",
        "BadUser",
        "is_authenticated"
      ]
    ]
  ],
  "set_password": [
    [
      "django/contrib/auth/base_user.py",
      [
        "AbstractBaseUser",
        "set_password"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "AnonymousUser",
        "set_password"
      ]
    ]
  ],
  "check_password": [
    [
      "django/contrib/auth/base_user.py",
      [
        "AbstractBaseUser",
        "check_password"
      ]
    ],
    [
      "django/contrib/auth/handlers/modwsgi.py",
      [
        "check_password"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "check_password"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "AnonymousUser",
        "check_password"
      ]
    ]
  ],
  "set_unusable_password": [
    [
      "django/contrib/auth/base_user.py",
      [
        "AbstractBaseUser",
        "set_unusable_password"
      ]
    ]
  ],
  "has_usable_password": [
    [
      "django/contrib/auth/base_user.py",
      [
        "AbstractBaseUser",
        "has_usable_password"
      ]
    ]
  ],
  "get_session_auth_hash": [
    [
      "django/contrib/auth/base_user.py",
      [
        "AbstractBaseUser",
        "get_session_auth_hash"
      ]
    ]
  ],
  "get_email_field_name": [
    [
      "django/contrib/auth/base_user.py",
      [
        "AbstractBaseUser",
        "get_email_field_name"
      ]
    ]
  ],
  "normalize_username": [
    [
      "django/contrib/auth/base_user.py",
      [
        "AbstractBaseUser",
        "normalize_username"
      ]
    ]
  ],
  "check_user_model": [
    [
      "django/contrib/auth/checks.py",
      [
        "check_user_model"
      ]
    ]
  ],
  "check_models_permissions": [
    [
      "django/contrib/auth/checks.py",
      [
        "check_models_permissions"
      ]
    ]
  ],
  "__getitem__": [
    [
      "django/contrib/auth/context_processors.py",
      [
        "PermLookupDict",
        "__getitem__"
      ]
    ],
    [
      "django/contrib/auth/context_processors.py",
      [
        "PermWrapper",
        "__getitem__"
      ]
    ],
    [
      "django/contrib/gis/gdal/datasource.py",
      [
        "DataSource",
        "__getitem__"
      ]
    ],
    [
      "django/contrib/gis/gdal/feature.py",
      [
        "Feature",
        "__getitem__"
      ]
    ],
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "LineString",
        "__getitem__"
      ]
    ],
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "Polygon",
        "__getitem__"
      ]
    ],
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "GeometryCollection",
        "__getitem__"
      ]
    ],
    [
      "django/contrib/gis/gdal/layer.py",
      [
        "Layer",
        "__getitem__"
      ]
    ],
    [
      "django/contrib/gis/gdal/raster/band.py",
      [
        "BandList",
        "__getitem__"
      ]
    ],
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "__getitem__"
      ]
    ],
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "__getitem__"
      ]
    ],
    [
      "django/contrib/gis/geos/mutable_list.py",
      [
        "ListMixin",
        "__getitem__"
      ]
    ],
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "__getitem__"
      ]
    ],
    [
      "django/core/cache/__init__.py",
      [
        "CacheHandler",
        "__getitem__"
      ]
    ],
    [
      "django/core/paginator.py",
      [
        "Page",
        "__getitem__"
      ]
    ],
    [
      "django/db/backends/sqlite3/introspection.py",
      [
        "FlexibleFieldLookupDict",
        "__getitem__"
      ]
    ],
    [
      "django/db/migrations/graph.py",
      [
        "Node",
        "__getitem__"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "__getitem__"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "RawQuerySet",
        "__getitem__"
      ]
    ],
    [
      "django/db/utils.py",
      [
        "ConnectionHandler",
        "__getitem__"
      ]
    ],
    [
      "django/forms/boundfield.py",
      [
        "BoundField",
        "__getitem__"
      ]
    ],
    [
      "django/forms/forms.py",
      [
        "BaseForm",
        "__getitem__"
      ]
    ],
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "__getitem__"
      ]
    ],
    [
      "django/forms/utils.py",
      [
        "ErrorList",
        "__getitem__"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "Media",
        "__getitem__"
      ]
    ],
    [
      "django/http/request.py",
      [
        "HttpHeaders",
        "__getitem__"
      ]
    ],
    [
      "django/http/response.py",
      [
        "HttpResponseBase",
        "__getitem__"
      ]
    ],
    [
      "django/template/context.py",
      [
        "BaseContext",
        "__getitem__"
      ]
    ],
    [
      "django/template/context.py",
      [
        "RenderContext",
        "__getitem__"
      ]
    ],
    [
      "django/template/utils.py",
      [
        "EngineHandler",
        "__getitem__"
      ]
    ],
    [
      "django/test/html.py",
      [
        "Element",
        "__getitem__"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "ContextList",
        "__getitem__"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "CaptureQueriesContext",
        "__getitem__"
      ]
    ],
    [
      "django/urls/resolvers.py",
      [
        "ResolverMatch",
        "__getitem__"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "MultiValueDict",
        "__getitem__"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "DictWrapper",
        "__getitem__"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "CaseInsensitiveMapping",
        "__getitem__"
      ]
    ],
    [
      "django/utils/translation/trans_real.py",
      [
        "TranslationCatalog",
        "__getitem__"
      ]
    ],
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_formset_iteration",
        "BaseReverseFormSet",
        "__getitem__"
      ]
    ],
    [
      "tests/template_tests/test_logging.py",
      [
        "VariableResolveLoggingTests",
        "test_log_on_variable_does_not_exist_silent",
        "TestObject",
        "__getitem__"
      ]
    ],
    [
      "tests/template_tests/utils.py",
      [
        "SomeClass",
        "__getitem__"
      ]
    ],
    [
      "tests/template_tests/utils.py",
      [
        "SilentGetItemClass",
        "__getitem__"
      ]
    ]
  ],
  "__bool__": [
    [
      "django/contrib/auth/context_processors.py",
      [
        "PermLookupDict",
        "__bool__"
      ]
    ],
    [
      "django/contrib/gis/measure.py",
      [
        "MeasureBase",
        "__bool__"
      ]
    ],
    [
      "django/core/files/base.py",
      [
        "File",
        "__bool__"
      ]
    ],
    [
      "django/core/files/base.py",
      [
        "ContentFile",
        "__bool__"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "__bool__"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "RawQuerySet",
        "__bool__"
      ]
    ],
    [
      "django/forms/boundfield.py",
      [
        "BoundField",
        "__bool__"
      ]
    ],
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "__bool__"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "ModelChoiceIterator",
        "__bool__"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "OrderedSet",
        "__bool__"
      ]
    ],
    [
      "django/utils/translation/__init__.py",
      [
        "lazy_number",
        "if_isinstance_number_int",
        "else_",
        "NumberAwareString",
        "__bool__"
      ]
    ],
    [
      "django/utils/tree.py",
      [
        "Node",
        "__bool__"
      ]
    ],
    [
      "tests/generic_relations_regress/models.py",
      [
        "Guild",
        "__bool__"
      ]
    ]
  ],
  "__contains__": [
    [
      "django/contrib/auth/context_processors.py",
      [
        "PermWrapper",
        "__contains__"
      ]
    ],
    [
      "django/contrib/messages/storage/base.py",
      [
        "BaseStorage",
        "__contains__"
      ]
    ],
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "__contains__"
      ]
    ],
    [
      "django/core/cache/__init__.py",
      [
        "DefaultCacheProxy",
        "__contains__"
      ]
    ],
    [
      "django/core/cache/backends/base.py",
      [
        "BaseCache",
        "__contains__"
      ]
    ],
    [
      "django/db/migrations/graph.py",
      [
        "MigrationGraph",
        "__contains__"
      ]
    ],
    [
      "django/db/models/enums.py",
      [
        "ChoicesMeta",
        "__contains__"
      ]
    ],
    [
      "django/forms/utils.py",
      [
        "ErrorList",
        "__contains__"
      ]
    ],
    [
      "django/template/context.py",
      [
        "BaseContext",
        "__contains__"
      ]
    ],
    [
      "django/template/context.py",
      [
        "RenderContext",
        "__contains__"
      ]
    ],
    [
      "django/test/html.py",
      [
        "Element",
        "__contains__"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "ContextList",
        "__contains__"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "OrderedSet",
        "__contains__"
      ]
    ],
    [
      "django/utils/translation/trans_real.py",
      [
        "TranslationCatalog",
        "__contains__"
      ]
    ],
    [
      "django/utils/tree.py",
      [
        "Node",
        "__contains__"
      ]
    ]
  ],
  "auth": [
    [
      "django/contrib/auth/context_processors.py",
      [
        "auth"
      ]
    ]
  ],
  "decorator": [
    [
      "django/contrib/auth/decorators.py",
      [
        "user_passes_test",
        "decorator"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "_deferredSkip",
        "decorator"
      ]
    ],
    [
      "django/utils/asyncio.py",
      [
        "async_unsafe",
        "decorator"
      ]
    ],
    [
      "django/utils/deconstruct.py",
      [
        "deconstructible",
        "decorator"
      ]
    ],
    [
      "django/views/decorators/debug.py",
      [
        "sensitive_variables",
        "decorator"
      ]
    ],
    [
      "django/views/decorators/debug.py",
      [
        "sensitive_post_parameters",
        "decorator"
      ]
    ],
    [
      "django/views/decorators/http.py",
      [
        "condition",
        "decorator"
      ]
    ],
    [
      "tests/generic_views/test_base.py",
      [
        "decorator"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "setup",
        "decorator"
      ]
    ],
    [
      "tests/template_tests/utils.py",
      [
        "setup",
        "decorator"
      ]
    ]
  ],
  "user_passes_test": [
    [
      "django/contrib/auth/decorators.py",
      [
        "user_passes_test"
      ]
    ]
  ],
  "login_required": [
    [
      "django/contrib/auth/decorators.py",
      [
        "login_required"
      ]
    ]
  ],
  "permission_required": [
    [
      "django/contrib/auth/decorators.py",
      [
        "permission_required"
      ]
    ]
  ],
  "_unicode_ci_compare": [
    [
      "django/contrib/auth/forms.py",
      [
        "_unicode_ci_compare"
      ]
    ]
  ],
  "bound_data": [
    [
      "django/contrib/auth/forms.py",
      [
        "ReadOnlyPasswordHashField",
        "bound_data"
      ]
    ],
    [
      "django/contrib/postgres/forms/jsonb.py",
      [
        "JSONField",
        "bound_data"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "Field",
        "bound_data"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "FileField",
        "bound_data"
      ]
    ]
  ],
  "to_python": [
    [
      "django/contrib/auth/forms.py",
      [
        "UsernameField",
        "to_python"
      ]
    ],
    [
      "django/contrib/gis/forms/fields.py",
      [
        "GeometryField",
        "to_python"
      ]
    ],
    [
      "django/contrib/postgres/fields/array.py",
      [
        "ArrayField",
        "to_python"
      ]
    ],
    [
      "django/contrib/postgres/fields/hstore.py",
      [
        "HStoreField",
        "to_python"
      ]
    ],
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "RangeField",
        "to_python"
      ]
    ],
    [
      "django/contrib/postgres/forms/array.py",
      [
        "SimpleArrayField",
        "to_python"
      ]
    ],
    [
      "django/contrib/postgres/forms/array.py",
      [
        "SplitArrayField",
        "to_python"
      ]
    ],
    [
      "django/contrib/postgres/forms/hstore.py",
      [
        "HStoreField",
        "to_python"
      ]
    ],
    [
      "django/contrib/postgres/forms/jsonb.py",
      [
        "JSONField",
        "to_python"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "to_python"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "BooleanField",
        "to_python"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "CharField",
        "to_python"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DateField",
        "to_python"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DateTimeField",
        "to_python"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DecimalField",
        "to_python"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DurationField",
        "to_python"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "FloatField",
        "to_python"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "IntegerField",
        "to_python"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "GenericIPAddressField",
        "to_python"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "TextField",
        "to_python"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "TimeField",
        "to_python"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "BinaryField",
        "to_python"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "UUIDField",
        "to_python"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ForeignKey",
        "to_python"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "Field",
        "to_python"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "CharField",
        "to_python"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "IntegerField",
        "to_python"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "FloatField",
        "to_python"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "DecimalField",
        "to_python"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "BaseTemporalField",
        "to_python"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "DateField",
        "to_python"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "TimeField",
        "to_python"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "DateTimeField",
        "to_python"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "DurationField",
        "to_python"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "FileField",
        "to_python"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "ImageField",
        "to_python"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "URLField",
        "to_python"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "BooleanField",
        "to_python"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "NullBooleanField",
        "to_python"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "ChoiceField",
        "to_python"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "MultipleChoiceField",
        "to_python"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "GenericIPAddressField",
        "to_python"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "UUIDField",
        "to_python"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "ModelChoiceField",
        "to_python"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "ModelMultipleChoiceField",
        "to_python"
      ]
    ],
    [
      "django/urls/converters.py",
      [
        "IntConverter",
        "to_python"
      ]
    ],
    [
      "django/urls/converters.py",
      [
        "StringConverter",
        "to_python"
      ]
    ],
    [
      "django/urls/converters.py",
      [
        "UUIDConverter",
        "to_python"
      ]
    ],
    [
      "tests/custom_pk/fields.py",
      [
        "MyAutoField",
        "to_python"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_changed_data",
        "PedanticField",
        "to_python"
      ]
    ],
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_inlineformset_with_arrayfield",
        "SimpleArrayField",
        "to_python"
      ]
    ],
    [
      "tests/postgres_tests/models.py",
      [
        "TagField",
        "to_python"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "TeamField",
        "to_python"
      ]
    ],
    [
      "tests/urlpatterns/converters.py",
      [
        "Base64Converter",
        "to_python"
      ]
    ],
    [
      "tests/urlpatterns/converters.py",
      [
        "DynamicConverter",
        "to_python"
      ]
    ]
  ],
  "widget_attrs": [
    [
      "django/contrib/auth/forms.py",
      [
        "UsernameField",
        "widget_attrs"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "Field",
        "widget_attrs"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "CharField",
        "widget_attrs"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "IntegerField",
        "widget_attrs"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "FloatField",
        "widget_attrs"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "DecimalField",
        "widget_attrs"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "ImageField",
        "widget_attrs"
      ]
    ]
  ],
  "clean_password2": [
    [
      "django/contrib/auth/forms.py",
      [
        "UserCreationForm",
        "clean_password2"
      ]
    ],
    [
      "django/contrib/auth/forms.py",
      [
        "AdminPasswordChangeForm",
        "clean_password2"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_validating_multiple_fields",
        "UserRegistration",
        "clean_password2"
      ]
    ]
  ],
  "_post_clean": [
    [
      "django/contrib/auth/forms.py",
      [
        "UserCreationForm",
        "_post_clean"
      ]
    ],
    [
      "django/forms/forms.py",
      [
        "BaseForm",
        "_post_clean"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "BaseModelForm",
        "_post_clean"
      ]
    ]
  ],
  "clean_password": [
    [
      "django/contrib/auth/forms.py",
      [
        "UserChangeForm",
        "clean_password"
      ]
    ]
  ],
  "get_invalid_login_error": [
    [
      "django/contrib/auth/forms.py",
      [
        "AuthenticationForm",
        "get_invalid_login_error"
      ]
    ]
  ],
  "send_mail": [
    [
      "django/contrib/auth/forms.py",
      [
        "PasswordResetForm",
        "send_mail"
      ]
    ],
    [
      "django/core/mail/__init__.py",
      [
        "send_mail"
      ]
    ],
    [
      "django/utils/log.py",
      [
        "AdminEmailHandler",
        "send_mail"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "PasswordResetFormTest",
        "test_custom_email_constructor",
        "CustomEmailPasswordResetForm",
        "send_mail"
      ]
    ]
  ],
  "get_users": [
    [
      "django/contrib/auth/forms.py",
      [
        "PasswordResetForm",
        "get_users"
      ]
    ]
  ],
  "clean_new_password2": [
    [
      "django/contrib/auth/forms.py",
      [
        "SetPasswordForm",
        "clean_new_password2"
      ]
    ]
  ],
  "clean_old_password": [
    [
      "django/contrib/auth/forms.py",
      [
        "PasswordChangeForm",
        "clean_old_password"
      ]
    ]
  ],
  "changed_data": [
    [
      "django/contrib/auth/forms.py",
      [
        "AdminPasswordChangeForm",
        "changed_data"
      ]
    ],
    [
      "django/forms/forms.py",
      [
        "BaseForm",
        "changed_data"
      ]
    ],
    [
      "tests/admin_utils/admin.py",
      [
        "ArticleAdminForm",
        "changed_data"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "StateAdminForm",
        "changed_data"
      ]
    ]
  ],
  "groups_for_user": [
    [
      "django/contrib/auth/handlers/modwsgi.py",
      [
        "groups_for_user"
      ]
    ]
  ],
  "is_password_usable": [
    [
      "django/contrib/auth/hashers.py",
      [
        "is_password_usable"
      ]
    ]
  ],
  "make_password": [
    [
      "django/contrib/auth/hashers.py",
      [
        "make_password"
      ]
    ]
  ],
  "get_hashers": [
    [
      "django/contrib/auth/hashers.py",
      [
        "get_hashers"
      ]
    ]
  ],
  "get_hashers_by_algorithm": [
    [
      "django/contrib/auth/hashers.py",
      [
        "get_hashers_by_algorithm"
      ]
    ]
  ],
  "reset_hashers": [
    [
      "django/contrib/auth/hashers.py",
      [
        "reset_hashers"
      ]
    ]
  ],
  "get_hasher": [
    [
      "django/contrib/auth/hashers.py",
      [
        "get_hasher"
      ]
    ]
  ],
  "identify_hasher": [
    [
      "django/contrib/auth/hashers.py",
      [
        "identify_hasher"
      ]
    ]
  ],
  "mask_hash": [
    [
      "django/contrib/auth/hashers.py",
      [
        "mask_hash"
      ]
    ]
  ],
  "_load_library": [
    [
      "django/contrib/auth/hashers.py",
      [
        "BasePasswordHasher",
        "_load_library"
      ]
    ]
  ],
  "salt": [
    [
      "django/contrib/auth/hashers.py",
      [
        "BasePasswordHasher",
        "salt"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "BCryptSHA256PasswordHasher",
        "salt"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "UnsaltedSHA1PasswordHasher",
        "salt"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "UnsaltedMD5PasswordHasher",
        "salt"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "CryptPasswordHasher",
        "salt"
      ]
    ]
  ],
  "verify": [
    [
      "django/contrib/auth/hashers.py",
      [
        "BasePasswordHasher",
        "verify"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "PBKDF2PasswordHasher",
        "verify"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "Argon2PasswordHasher",
        "verify"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "BCryptSHA256PasswordHasher",
        "verify"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "SHA1PasswordHasher",
        "verify"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "MD5PasswordHasher",
        "verify"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "UnsaltedSHA1PasswordHasher",
        "verify"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "UnsaltedMD5PasswordHasher",
        "verify"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "CryptPasswordHasher",
        "verify"
      ]
    ]
  ],
  "encode": [
    [
      "django/contrib/auth/hashers.py",
      [
        "BasePasswordHasher",
        "encode"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "PBKDF2PasswordHasher",
        "encode"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "Argon2PasswordHasher",
        "encode"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "BCryptSHA256PasswordHasher",
        "encode"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "SHA1PasswordHasher",
        "encode"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "MD5PasswordHasher",
        "encode"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "UnsaltedSHA1PasswordHasher",
        "encode"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "UnsaltedMD5PasswordHasher",
        "encode"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "CryptPasswordHasher",
        "encode"
      ]
    ],
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "encode"
      ]
    ],
    [
      "django/contrib/sessions/base_session.py",
      [
        "BaseSessionManager",
        "encode"
      ]
    ],
    [
      "django/utils/baseconv.py",
      [
        "BaseConverter",
        "encode"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "CountingMD5PasswordHasher",
        "encode"
      ]
    ]
  ],
  "safe_summary": [
    [
      "django/contrib/auth/hashers.py",
      [
        "BasePasswordHasher",
        "safe_summary"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "PBKDF2PasswordHasher",
        "safe_summary"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "Argon2PasswordHasher",
        "safe_summary"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "BCryptSHA256PasswordHasher",
        "safe_summary"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "SHA1PasswordHasher",
        "safe_summary"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "MD5PasswordHasher",
        "safe_summary"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "UnsaltedSHA1PasswordHasher",
        "safe_summary"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "UnsaltedMD5PasswordHasher",
        "safe_summary"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "CryptPasswordHasher",
        "safe_summary"
      ]
    ]
  ],
  "must_update": [
    [
      "django/contrib/auth/hashers.py",
      [
        "BasePasswordHasher",
        "must_update"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "PBKDF2PasswordHasher",
        "must_update"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "Argon2PasswordHasher",
        "must_update"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "BCryptSHA256PasswordHasher",
        "must_update"
      ]
    ]
  ],
  "harden_runtime": [
    [
      "django/contrib/auth/hashers.py",
      [
        "BasePasswordHasher",
        "harden_runtime"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "PBKDF2PasswordHasher",
        "harden_runtime"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "Argon2PasswordHasher",
        "harden_runtime"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "BCryptSHA256PasswordHasher",
        "harden_runtime"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "SHA1PasswordHasher",
        "harden_runtime"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "MD5PasswordHasher",
        "harden_runtime"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "UnsaltedSHA1PasswordHasher",
        "harden_runtime"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "UnsaltedMD5PasswordHasher",
        "harden_runtime"
      ]
    ],
    [
      "django/contrib/auth/hashers.py",
      [
        "CryptPasswordHasher",
        "harden_runtime"
      ]
    ]
  ],
  "_decode": [
    [
      "django/contrib/auth/hashers.py",
      [
        "Argon2PasswordHasher",
        "_decode"
      ]
    ],
    [
      "django/contrib/messages/storage/cookie.py",
      [
        "CookieStorage",
        "_decode"
      ]
    ]
  ],
  "_get_all_permissions": [
    [
      "django/contrib/auth/management/__init__.py",
      [
        "_get_all_permissions"
      ]
    ]
  ],
  "_get_builtin_permissions": [
    [
      "django/contrib/auth/management/__init__.py",
      [
        "_get_builtin_permissions"
      ]
    ]
  ],
  "create_permissions": [
    [
      "django/contrib/auth/management/__init__.py",
      [
        "create_permissions"
      ]
    ]
  ],
  "get_system_username": [
    [
      "django/contrib/auth/management/__init__.py",
      [
        "get_system_username"
      ]
    ]
  ],
  "get_default_username": [
    [
      "django/contrib/auth/management/__init__.py",
      [
        "get_default_username"
      ]
    ]
  ],
  "_get_pass": [
    [
      "django/contrib/auth/management/commands/changepassword.py",
      [
        "Command",
        "_get_pass"
      ]
    ]
  ],
  "add_arguments": [
    [
      "django/contrib/auth/management/commands/changepassword.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/contrib/auth/management/commands/createsuperuser.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/contrib/contenttypes/management/commands/remove_stale_contenttypes.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/contrib/gis/management/commands/ogrinspect.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/contrib/sitemaps/management/commands/ping_google.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/contrib/staticfiles/management/commands/collectstatic.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/contrib/staticfiles/management/commands/findstatic.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/contrib/staticfiles/management/commands/runserver.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/core/management/base.py",
      [
        "DjangoHelpFormatter",
        "add_arguments"
      ]
    ],
    [
      "django/core/management/base.py",
      [
        "BaseCommand",
        "add_arguments"
      ]
    ],
    [
      "django/core/management/base.py",
      [
        "AppCommand",
        "add_arguments"
      ]
    ],
    [
      "django/core/management/base.py",
      [
        "LabelCommand",
        "add_arguments"
      ]
    ],
    [
      "django/core/management/commands/check.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/core/management/commands/compilemessages.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/core/management/commands/createcachetable.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/core/management/commands/dbshell.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/core/management/commands/diffsettings.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/core/management/commands/dumpdata.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/core/management/commands/flush.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/core/management/commands/inspectdb.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/core/management/commands/loaddata.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/core/management/commands/makemessages.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/core/management/commands/makemigrations.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/core/management/commands/migrate.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/core/management/commands/runserver.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/core/management/commands/sendtestemail.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/core/management/commands/shell.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/core/management/commands/showmigrations.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/core/management/commands/sqlflush.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/core/management/commands/sqlmigrate.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/core/management/commands/sqlsequencereset.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/core/management/commands/squashmigrations.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/core/management/commands/test.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/core/management/commands/testserver.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "django/core/management/templates.py",
      [
        "TemplateCommand",
        "add_arguments"
      ]
    ],
    [
      "django/test/runner.py",
      [
        "DiscoverRunner",
        "add_arguments"
      ]
    ],
    [
      "tests/admin_scripts/management/commands/base_command.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "tests/admin_scripts/management/commands/custom_startproject.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "tests/bash_completion/management/commands/test_command.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "tests/test_runner/runner.py",
      [
        "CustomOptionsTestRunner",
        "add_arguments"
      ]
    ],
    [
      "tests/user_commands/management/commands/common_args.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "tests/user_commands/management/commands/dance.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "tests/user_commands/management/commands/hal.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "tests/user_commands/management/commands/mutually_exclusive_required.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "tests/user_commands/management/commands/required_option.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "tests/user_commands/management/commands/set_option.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "tests/user_commands/management/commands/subparser.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "tests/user_commands/management/commands/subparser_dest.py",
      [
        "Command",
        "add_arguments"
      ]
    ],
    [
      "tests/user_commands/management/commands/subparser_required.py",
      [
        "Command",
        "add_arguments"
      ]
    ]
  ],
  "handle": [
    [
      "django/contrib/auth/management/commands/changepassword.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/contrib/auth/management/commands/createsuperuser.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/contrib/contenttypes/management/commands/remove_stale_contenttypes.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/contrib/gis/management/commands/ogrinspect.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/contrib/sessions/management/commands/clearsessions.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/contrib/sitemaps/management/commands/ping_google.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/contrib/staticfiles/management/commands/collectstatic.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/core/management/base.py",
      [
        "BaseCommand",
        "handle"
      ]
    ],
    [
      "django/core/management/base.py",
      [
        "AppCommand",
        "handle"
      ]
    ],
    [
      "django/core/management/base.py",
      [
        "LabelCommand",
        "handle"
      ]
    ],
    [
      "django/core/management/commands/check.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/core/management/commands/compilemessages.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/core/management/commands/createcachetable.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/core/management/commands/dbshell.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/core/management/commands/diffsettings.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/core/management/commands/dumpdata.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/core/management/commands/flush.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/core/management/commands/inspectdb.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/core/management/commands/loaddata.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/core/management/commands/makemessages.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/core/management/commands/makemigrations.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/core/management/commands/migrate.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/core/management/commands/runserver.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/core/management/commands/sendtestemail.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/core/management/commands/shell.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/core/management/commands/showmigrations.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/core/management/commands/sqlflush.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/core/management/commands/sqlmigrate.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/core/management/commands/squashmigrations.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/core/management/commands/startapp.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/core/management/commands/startproject.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/core/management/commands/test.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/core/management/commands/testserver.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "django/core/management/templates.py",
      [
        "TemplateCommand",
        "handle"
      ]
    ],
    [
      "django/core/servers/basehttp.py",
      [
        "WSGIRequestHandler",
        "handle"
      ]
    ],
    [
      "tests/admin_scripts/complex_app/management/commands/duplicate.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "tests/admin_scripts/management/commands/base_command.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "tests/admin_scripts/management/commands/noargs_command.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "tests/admin_scripts/simple_app/management/commands/duplicate.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ColorCommand",
        "handle"
      ]
    ],
    [
      "tests/bash_completion/management/commands/test_command.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "tests/user_commands/management/commands/common_args.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "tests/user_commands/management/commands/dance.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "tests/user_commands/management/commands/hal.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "tests/user_commands/management/commands/mutually_exclusive_required.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "tests/user_commands/management/commands/no_translations.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "tests/user_commands/management/commands/required_option.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "tests/user_commands/management/commands/reverse_url.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "tests/user_commands/management/commands/set_option.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "tests/user_commands/management/commands/subparser.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "tests/user_commands/management/commands/subparser_dest.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "tests/user_commands/management/commands/subparser_required.py",
      [
        "Command",
        "handle"
      ]
    ],
    [
      "tests/user_commands/management/commands/transaction.py",
      [
        "Command",
        "handle"
      ]
    ]
  ],
  "execute": [
    [
      "django/contrib/auth/management/commands/createsuperuser.py",
      [
        "Command",
        "execute"
      ]
    ],
    [
      "django/core/management/__init__.py",
      [
        "ManagementUtility",
        "execute"
      ]
    ],
    [
      "django/core/management/base.py",
      [
        "BaseCommand",
        "execute"
      ]
    ],
    [
      "django/core/management/commands/runserver.py",
      [
        "Command",
        "execute"
      ]
    ],
    [
      "django/core/management/commands/sqlmigrate.py",
      [
        "Command",
        "execute"
      ]
    ],
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "execute"
      ]
    ],
    [
      "django/db/backends/mysql/base.py",
      [
        "CursorWrapper",
        "execute"
      ]
    ],
    [
      "django/db/backends/oracle/base.py",
      [
        "FormatStylePlaceholderCursor",
        "execute"
      ]
    ],
    [
      "django/db/backends/sqlite3/base.py",
      [
        "SQLiteCursorWrapper",
        "execute"
      ]
    ],
    [
      "django/db/backends/utils.py",
      [
        "CursorWrapper",
        "execute"
      ]
    ],
    [
      "django/db/backends/utils.py",
      [
        "CursorDebugWrapper",
        "execute"
      ]
    ]
  ],
  "get_input_data": [
    [
      "django/contrib/auth/management/commands/createsuperuser.py",
      [
        "Command",
        "get_input_data"
      ]
    ]
  ],
  "_get_input_message": [
    [
      "django/contrib/auth/management/commands/createsuperuser.py",
      [
        "Command",
        "_get_input_message"
      ]
    ]
  ],
  "_validate_username": [
    [
      "django/contrib/auth/management/commands/createsuperuser.py",
      [
        "Command",
        "_validate_username"
      ]
    ]
  ],
  "process_request": [
    [
      "django/contrib/auth/middleware.py",
      [
        "AuthenticationMiddleware",
        "process_request"
      ]
    ],
    [
      "django/contrib/auth/middleware.py",
      [
        "RemoteUserMiddleware",
        "process_request"
      ]
    ],
    [
      "django/contrib/messages/middleware.py",
      [
        "MessageMiddleware",
        "process_request"
      ]
    ],
    [
      "django/contrib/sessions/middleware.py",
      [
        "SessionMiddleware",
        "process_request"
      ]
    ],
    [
      "django/contrib/sites/middleware.py",
      [
        "CurrentSiteMiddleware",
        "process_request"
      ]
    ],
    [
      "django/middleware/cache.py",
      [
        "FetchFromCacheMiddleware",
        "process_request"
      ]
    ],
    [
      "django/middleware/common.py",
      [
        "CommonMiddleware",
        "process_request"
      ]
    ],
    [
      "django/middleware/csrf.py",
      [
        "CsrfViewMiddleware",
        "process_request"
      ]
    ],
    [
      "django/middleware/locale.py",
      [
        "LocaleMiddleware",
        "process_request"
      ]
    ],
    [
      "django/middleware/security.py",
      [
        "SecurityMiddleware",
        "process_request"
      ]
    ],
    [
      "tests/middleware/test_security.py",
      [
        "SecurityMiddlewareTest",
        "process_request"
      ]
    ],
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MyMiddleware",
        "process_request"
      ]
    ],
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MyMiddlewareWithExceptionMessage",
        "process_request"
      ]
    ],
    [
      "tests/urlpatterns_reverse/middleware.py",
      [
        "ChangeURLconfMiddleware",
        "process_request"
      ]
    ],
    [
      "tests/urlpatterns_reverse/middleware.py",
      [
        "NullChangeURLconfMiddleware",
        "process_request"
      ]
    ],
    [
      "tests/utils_tests/test_decorators.py",
      [
        "FullMiddleware",
        "process_request"
      ]
    ]
  ],
  "_remove_invalid_user": [
    [
      "django/contrib/auth/middleware.py",
      [
        "RemoteUserMiddleware",
        "_remove_invalid_user"
      ]
    ]
  ],
  "update_proxy_model_permissions": [
    [
      "django/contrib/auth/migrations/0011_update_proxy_permissions.py",
      [
        "update_proxy_model_permissions"
      ]
    ]
  ],
  "revert_proxy_model_permissions": [
    [
      "django/contrib/auth/migrations/0011_update_proxy_permissions.py",
      [
        "revert_proxy_model_permissions"
      ]
    ]
  ],
  "get_login_url": [
    [
      "django/contrib/auth/mixins.py",
      [
        "AccessMixin",
        "get_login_url"
      ]
    ]
  ],
  "get_permission_denied_message": [
    [
      "django/contrib/auth/mixins.py",
      [
        "AccessMixin",
        "get_permission_denied_message"
      ]
    ]
  ],
  "get_redirect_field_name": [
    [
      "django/contrib/auth/mixins.py",
      [
        "AccessMixin",
        "get_redirect_field_name"
      ]
    ]
  ],
  "handle_no_permission": [
    [
      "django/contrib/auth/mixins.py",
      [
        "AccessMixin",
        "handle_no_permission"
      ]
    ]
  ],
  "get_permission_required": [
    [
      "django/contrib/auth/mixins.py",
      [
        "PermissionRequiredMixin",
        "get_permission_required"
      ]
    ]
  ],
  "test_func": [
    [
      "django/contrib/auth/mixins.py",
      [
        "UserPassesTestMixin",
        "test_func"
      ]
    ],
    [
      "tests/apps/tests.py",
      [
        "AppsTests",
        "test_lazy_model_operation",
        "test_func"
      ]
    ],
    [
      "tests/auth_tests/test_mixins.py",
      [
        "AlwaysTrueMixin",
        "test_func"
      ]
    ],
    [
      "tests/auth_tests/test_mixins.py",
      [
        "AlwaysFalseMixin",
        "test_func"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "SkippingTestCase",
        "test_skip_unless_db_feature",
        "test_func"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "SkippingTestCase",
        "test_skip_if_db_feature",
        "test_func"
      ]
    ]
  ],
  "get_test_func": [
    [
      "django/contrib/auth/mixins.py",
      [
        "UserPassesTestMixin",
        "get_test_func"
      ]
    ]
  ],
  "update_last_login": [
    [
      "django/contrib/auth/models.py",
      [
        "update_last_login"
      ]
    ]
  ],
  "_create_user": [
    [
      "django/contrib/auth/models.py",
      [
        "UserManager",
        "_create_user"
      ]
    ],
    [
      "tests/auth_tests/models/no_password.py",
      [
        "UserManager",
        "_create_user"
      ]
    ]
  ],
  "create_user": [
    [
      "django/contrib/auth/models.py",
      [
        "UserManager",
        "create_user"
      ]
    ],
    [
      "tests/auth_tests/models/custom_user.py",
      [
        "CustomUserManager",
        "create_user"
      ]
    ],
    [
      "tests/auth_tests/models/with_custom_email_field.py",
      [
        "CustomEmailFieldUserManager",
        "create_user"
      ]
    ],
    [
      "tests/auth_tests/models/with_integer_username.py",
      [
        "IntegerUsernameUserManager",
        "create_user"
      ]
    ]
  ],
  "create_superuser": [
    [
      "django/contrib/auth/models.py",
      [
        "UserManager",
        "create_superuser"
      ]
    ],
    [
      "tests/auth_tests/models/custom_permissions.py",
      [
        "CustomPermissionsUserManager",
        "create_superuser"
      ]
    ],
    [
      "tests/auth_tests/models/custom_user.py",
      [
        "CustomUserManager",
        "create_superuser"
      ]
    ],
    [
      "tests/auth_tests/models/no_password.py",
      [
        "UserManager",
        "create_superuser"
      ]
    ],
    [
      "tests/auth_tests/models/with_foreign_key.py",
      [
        "CustomUserWithFKManager",
        "create_superuser"
      ]
    ],
    [
      "tests/auth_tests/models/with_many_to_many.py",
      [
        "CustomUserWithM2MManager",
        "create_superuser"
      ]
    ]
  ],
  "_user_get_permissions": [
    [
      "django/contrib/auth/models.py",
      [
        "_user_get_permissions"
      ]
    ]
  ],
  "_user_has_perm": [
    [
      "django/contrib/auth/models.py",
      [
        "_user_has_perm"
      ]
    ]
  ],
  "_user_has_module_perms": [
    [
      "django/contrib/auth/models.py",
      [
        "_user_has_module_perms"
      ]
    ]
  ],
  "has_perms": [
    [
      "django/contrib/auth/models.py",
      [
        "PermissionsMixin",
        "has_perms"
      ]
    ],
    [
      "django/contrib/auth/models.py",
      [
        "AnonymousUser",
        "has_perms"
      ]
    ],
    [
      "tests/auth_tests/models/custom_user.py",
      [
        "CustomUser",
        "has_perms"
      ]
    ]
  ],
  "get_full_name": [
    [
      "django/contrib/auth/models.py",
      [
        "AbstractUser",
        "get_full_name"
      ]
    ],
    [
      "tests/admin_docs/models.py",
      [
        "Person",
        "get_full_name"
      ]
    ]
  ],
  "get_short_name": [
    [
      "django/contrib/auth/models.py",
      [
        "AbstractUser",
        "get_short_name"
      ]
    ]
  ],
  "email_user": [
    [
      "django/contrib/auth/models.py",
      [
        "AbstractUser",
        "email_user"
      ]
    ]
  ],
  "__eq__": [
    [
      "django/contrib/auth/models.py",
      [
        "AnonymousUser",
        "__eq__"
      ]
    ],
    [
      "django/contrib/gis/db/backends/base/adapter.py",
      [
        "WKTAdapter",
        "__eq__"
      ]
    ],
    [
      "django/contrib/gis/db/backends/postgis/adapter.py",
      [
        "PostGISAdapter",
        "__eq__"
      ]
    ],
    [
      "django/contrib/gis/gdal/envelope.py",
      [
        "Envelope",
        "__eq__"
      ]
    ],
    [
      "django/contrib/gis/gdal/feature.py",
      [
        "Feature",
        "__eq__"
      ]
    ],
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "__eq__"
      ]
    ],
    [
      "django/contrib/gis/gdal/geomtype.py",
      [
        "OGRGeomType",
        "__eq__"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "__eq__"
      ]
    ],
    [
      "django/contrib/gis/geos/mutable_list.py",
      [
        "ListMixin",
        "__eq__"
      ]
    ],
    [
      "django/contrib/gis/measure.py",
      [
        "MeasureBase",
        "__eq__"
      ]
    ],
    [
      "django/contrib/messages/storage/base.py",
      [
        "Message",
        "__eq__"
      ]
    ],
    [
      "django/contrib/postgres/constraints.py",
      [
        "ExclusionConstraint",
        "__eq__"
      ]
    ],
    [
      "django/contrib/postgres/validators.py",
      [
        "KeysValidator",
        "__eq__"
      ]
    ],
    [
      "django/core/cache/__init__.py",
      [
        "DefaultCacheProxy",
        "__eq__"
      ]
    ],
    [
      "django/core/checks/messages.py",
      [
        "CheckMessage",
        "__eq__"
      ]
    ],
    [
      "django/core/management/commands/makemessages.py",
      [
        "TranslatableFile",
        "__eq__"
      ]
    ],
    [
      "django/core/validators.py",
      [
        "RegexValidator",
        "__eq__"
      ]
    ],
    [
      "django/core/validators.py",
      [
        "EmailValidator",
        "__eq__"
      ]
    ],
    [
      "django/core/validators.py",
      [
        "BaseValidator",
        "__eq__"
      ]
    ],
    [
      "django/core/validators.py",
      [
        "DecimalValidator",
        "__eq__"
      ]
    ],
    [
      "django/core/validators.py",
      [
        "FileExtensionValidator",
        "__eq__"
      ]
    ],
    [
      "django/core/validators.py",
      [
        "ProhibitNullCharactersValidator",
        "__eq__"
      ]
    ],
    [
      "django/db/__init__.py",
      [
        "DefaultConnectionProxy",
        "__eq__"
      ]
    ],
    [
      "django/db/migrations/graph.py",
      [
        "Node",
        "__eq__"
      ]
    ],
    [
      "django/db/migrations/migration.py",
      [
        "Migration",
        "__eq__"
      ]
    ],
    [
      "django/db/migrations/state.py",
      [
        "ProjectState",
        "__eq__"
      ]
    ],
    [
      "django/db/migrations/state.py",
      [
        "ModelState",
        "__eq__"
      ]
    ],
    [
      "django/db/migrations/utils.py",
      [
        "RegexObject",
        "__eq__"
      ]
    ],
    [
      "django/db/models/base.py",
      [
        "Model",
        "__eq__"
      ]
    ],
    [
      "django/db/models/constraints.py",
      [
        "CheckConstraint",
        "__eq__"
      ]
    ],
    [
      "django/db/models/constraints.py",
      [
        "UniqueConstraint",
        "__eq__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "__eq__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "F",
        "__eq__"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "__eq__"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "FieldFile",
        "__eq__"
      ]
    ],
    [
      "django/db/models/indexes.py",
      [
        "Index",
        "__eq__"
      ]
    ],
    [
      "django/db/models/manager.py",
      [
        "BaseManager",
        "__eq__"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "Prefetch",
        "__eq__"
      ]
    ],
    [
      "django/db/models/query_utils.py",
      [
        "FilteredRelation",
        "__eq__"
      ]
    ],
    [
      "django/db/models/sql/datastructures.py",
      [
        "Join",
        "__eq__"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "ModelChoiceIteratorValue",
        "__eq__"
      ]
    ],
    [
      "django/forms/utils.py",
      [
        "ErrorList",
        "__eq__"
      ]
    ],
    [
      "django/template/base.py",
      [
        "Origin",
        "__eq__"
      ]
    ],
    [
      "django/template/context.py",
      [
        "BaseContext",
        "__eq__"
      ]
    ],
    [
      "django/test/html.py",
      [
        "Element",
        "__eq__"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "Approximate",
        "__eq__"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "CaseInsensitiveMapping",
        "__eq__"
      ]
    ],
    [
      "django/utils/functional.py",
      [
        "lazy",
        "__proxy__",
        "__eq__"
      ]
    ],
    [
      "django/utils/tree.py",
      [
        "Node",
        "__eq__"
      ]
    ],
    [
      "tests/auth_tests/test_context_processors.py",
      [
        "PermWrapperTests",
        "EQLimiterObject",
        "__eq__"
      ]
    ],
    [
      "tests/custom_pk/fields.py",
      [
        "MyWrapper",
        "__eq__"
      ]
    ],
    [
      "tests/postgres_tests/models.py",
      [
        "Tag",
        "__eq__"
      ]
    ],
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "Foo",
        "__eq__"
      ]
    ],
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "BaseBaz",
        "__eq__"
      ]
    ]
  ],
  "__hash__": [
    [
      "django/contrib/auth/models.py",
      [
        "AnonymousUser",
        "__hash__"
      ]
    ],
    [
      "django/contrib/gis/db/backends/base/adapter.py",
      [
        "WKTAdapter",
        "__hash__"
      ]
    ],
    [
      "django/contrib/gis/db/backends/postgis/adapter.py",
      [
        "PostGISAdapter",
        "__hash__"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "__hash__"
      ]
    ],
    [
      "django/db/migrations/graph.py",
      [
        "Node",
        "__hash__"
      ]
    ],
    [
      "django/db/migrations/migration.py",
      [
        "Migration",
        "__hash__"
      ]
    ],
    [
      "django/db/models/base.py",
      [
        "Model",
        "__hash__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "__hash__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "F",
        "__hash__"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "__hash__"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "FieldFile",
        "__hash__"
      ]
    ],
    [
      "django/db/models/manager.py",
      [
        "BaseManager",
        "__hash__"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "Prefetch",
        "__hash__"
      ]
    ],
    [
      "django/test/html.py",
      [
        "Element",
        "__hash__"
      ]
    ],
    [
      "django/utils/functional.py",
      [
        "lazy",
        "__proxy__",
        "__hash__"
      ]
    ],
    [
      "django/utils/tree.py",
      [
        "Node",
        "__hash__"
      ]
    ]
  ],
  "__int__": [
    [
      "django/contrib/auth/models.py",
      [
        "AnonymousUser",
        "__int__"
      ]
    ]
  ],
  "delete": [
    [
      "django/contrib/auth/models.py",
      [
        "AnonymousUser",
        "delete"
      ]
    ],
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "delete"
      ]
    ],
    [
      "django/contrib/sessions/backends/cache.py",
      [
        "SessionStore",
        "delete"
      ]
    ],
    [
      "django/contrib/sessions/backends/cached_db.py",
      [
        "SessionStore",
        "delete"
      ]
    ],
    [
      "django/contrib/sessions/backends/db.py",
      [
        "SessionStore",
        "delete"
      ]
    ],
    [
      "django/contrib/sessions/backends/file.py",
      [
        "SessionStore",
        "delete"
      ]
    ],
    [
      "django/contrib/sessions/backends/signed_cookies.py",
      [
        "SessionStore",
        "delete"
      ]
    ],
    [
      "django/contrib/sites/requests.py",
      [
        "RequestSite",
        "delete"
      ]
    ],
    [
      "django/core/cache/backends/base.py",
      [
        "BaseCache",
        "delete"
      ]
    ],
    [
      "django/core/cache/backends/db.py",
      [
        "DatabaseCache",
        "delete"
      ]
    ],
    [
      "django/core/cache/backends/dummy.py",
      [
        "DummyCache",
        "delete"
      ]
    ],
    [
      "django/core/cache/backends/filebased.py",
      [
        "FileBasedCache",
        "delete"
      ]
    ],
    [
      "django/core/cache/backends/locmem.py",
      [
        "LocMemCache",
        "delete"
      ]
    ],
    [
      "django/core/cache/backends/memcached.py",
      [
        "BaseMemcachedCache",
        "delete"
      ]
    ],
    [
      "django/core/cache/backends/memcached.py",
      [
        "MemcachedCache",
        "delete"
      ]
    ],
    [
      "django/core/files/storage.py",
      [
        "Storage",
        "delete"
      ]
    ],
    [
      "django/core/files/storage.py",
      [
        "FileSystemStorage",
        "delete"
      ]
    ],
    [
      "django/db/models/base.py",
      [
        "Model",
        "delete"
      ]
    ],
    [
      "django/db/models/deletion.py",
      [
        "Collector",
        "delete"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "FieldFile",
        "delete"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "ImageFieldFile",
        "delete"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "delete"
      ]
    ],
    [
      "django/test/client.py",
      [
        "RequestFactory",
        "delete"
      ]
    ],
    [
      "django/test/client.py",
      [
        "Client",
        "delete"
      ]
    ],
    [
      "django/views/generic/base.py",
      [
        "RedirectView",
        "delete"
      ]
    ],
    [
      "django/views/generic/edit.py",
      [
        "DeletionMixin",
        "delete"
      ]
    ],
    [
      "tests/save_delete_hooks/models.py",
      [
        "Person",
        "delete"
      ]
    ],
    [
      "tests/staticfiles_tests/storage.py",
      [
        "DummyStorage",
        "delete"
      ]
    ],
    [
      "tests/staticfiles_tests/storage.py",
      [
        "PathNotImplementedStorage",
        "delete"
      ]
    ],
    [
      "tests/test_client_regress/session.py",
      [
        "SessionStore",
        "delete"
      ]
    ]
  ],
  "groups": [
    [
      "django/contrib/auth/models.py",
      [
        "AnonymousUser",
        "groups"
      ]
    ]
  ],
  "user_permissions": [
    [
      "django/contrib/auth/models.py",
      [
        "AnonymousUser",
        "user_permissions"
      ]
    ]
  ],
  "get_default_password_validators": [
    [
      "django/contrib/auth/password_validation.py",
      [
        "get_default_password_validators"
      ]
    ]
  ],
  "get_password_validators": [
    [
      "django/contrib/auth/password_validation.py",
      [
        "get_password_validators"
      ]
    ]
  ],
  "validate_password": [
    [
      "django/contrib/auth/password_validation.py",
      [
        "validate_password"
      ]
    ]
  ],
  "password_changed": [
    [
      "django/contrib/auth/password_validation.py",
      [
        "password_changed"
      ]
    ]
  ],
  "password_validators_help_texts": [
    [
      "django/contrib/auth/password_validation.py",
      [
        "password_validators_help_texts"
      ]
    ]
  ],
  "_password_validators_help_text_html": [
    [
      "django/contrib/auth/password_validation.py",
      [
        "_password_validators_help_text_html"
      ]
    ]
  ],
  "validate": [
    [
      "django/contrib/auth/password_validation.py",
      [
        "MinimumLengthValidator",
        "validate"
      ]
    ],
    [
      "django/contrib/auth/password_validation.py",
      [
        "UserAttributeSimilarityValidator",
        "validate"
      ]
    ],
    [
      "django/contrib/auth/password_validation.py",
      [
        "CommonPasswordValidator",
        "validate"
      ]
    ],
    [
      "django/contrib/auth/password_validation.py",
      [
        "NumericPasswordValidator",
        "validate"
      ]
    ],
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "validate"
      ]
    ],
    [
      "django/contrib/postgres/fields/array.py",
      [
        "ArrayField",
        "validate"
      ]
    ],
    [
      "django/contrib/postgres/fields/hstore.py",
      [
        "HStoreField",
        "validate"
      ]
    ],
    [
      "django/contrib/postgres/fields/jsonb.py",
      [
        "JSONField",
        "validate"
      ]
    ],
    [
      "django/contrib/postgres/forms/array.py",
      [
        "SimpleArrayField",
        "validate"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "validate"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "AutoFieldMixin",
        "validate"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ForeignKey",
        "validate"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "Field",
        "validate"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "FloatField",
        "validate"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "DecimalField",
        "validate"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "BooleanField",
        "validate"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "NullBooleanField",
        "validate"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "ChoiceField",
        "validate"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "MultipleChoiceField",
        "validate"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "TypedMultipleChoiceField",
        "validate"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "MultiValueField",
        "validate"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "ModelChoiceField",
        "validate"
      ]
    ]
  ],
  "get_help_text": [
    [
      "django/contrib/auth/password_validation.py",
      [
        "MinimumLengthValidator",
        "get_help_text"
      ]
    ],
    [
      "django/contrib/auth/password_validation.py",
      [
        "UserAttributeSimilarityValidator",
        "get_help_text"
      ]
    ],
    [
      "django/contrib/auth/password_validation.py",
      [
        "CommonPasswordValidator",
        "get_help_text"
      ]
    ],
    [
      "django/contrib/auth/password_validation.py",
      [
        "NumericPasswordValidator",
        "get_help_text"
      ]
    ]
  ],
  "make_token": [
    [
      "django/contrib/auth/tokens.py",
      [
        "PasswordResetTokenGenerator",
        "make_token"
      ]
    ]
  ],
  "check_token": [
    [
      "django/contrib/auth/tokens.py",
      [
        "PasswordResetTokenGenerator",
        "check_token"
      ]
    ]
  ],
  "_make_token_with_timestamp": [
    [
      "django/contrib/auth/tokens.py",
      [
        "PasswordResetTokenGenerator",
        "_make_token_with_timestamp"
      ]
    ]
  ],
  "_make_hash_value": [
    [
      "django/contrib/auth/tokens.py",
      [
        "PasswordResetTokenGenerator",
        "_make_hash_value"
      ]
    ]
  ],
  "_num_seconds": [
    [
      "django/contrib/auth/tokens.py",
      [
        "PasswordResetTokenGenerator",
        "_num_seconds"
      ]
    ]
  ],
  "_now": [
    [
      "django/contrib/auth/tokens.py",
      [
        "PasswordResetTokenGenerator",
        "_now"
      ]
    ],
    [
      "tests/auth_tests/test_tokens.py",
      [
        "MockedPasswordResetTokenGenerator",
        "_now"
      ]
    ]
  ],
  "get_success_url_allowed_hosts": [
    [
      "django/contrib/auth/views.py",
      [
        "SuccessURLAllowedHostsMixin",
        "get_success_url_allowed_hosts"
      ]
    ]
  ],
  "get_success_url": [
    [
      "django/contrib/auth/views.py",
      [
        "LoginView",
        "get_success_url"
      ]
    ],
    [
      "django/views/generic/edit.py",
      [
        "FormMixin",
        "get_success_url"
      ]
    ],
    [
      "django/views/generic/edit.py",
      [
        "ModelFormMixin",
        "get_success_url"
      ]
    ],
    [
      "django/views/generic/edit.py",
      [
        "DeletionMixin",
        "get_success_url"
      ]
    ],
    [
      "tests/generic_views/views.py",
      [
        "SpecializedAuthorCreate",
        "get_success_url"
      ]
    ],
    [
      "tests/generic_views/views.py",
      [
        "SpecializedAuthorUpdate",
        "get_success_url"
      ]
    ]
  ],
  "get_redirect_url": [
    [
      "django/contrib/auth/views.py",
      [
        "LoginView",
        "get_redirect_url"
      ]
    ],
    [
      "django/views/generic/base.py",
      [
        "RedirectView",
        "get_redirect_url"
      ]
    ]
  ],
  "get_form_class": [
    [
      "django/contrib/auth/views.py",
      [
        "LoginView",
        "get_form_class"
      ]
    ],
    [
      "django/views/generic/edit.py",
      [
        "FormMixin",
        "get_form_class"
      ]
    ],
    [
      "django/views/generic/edit.py",
      [
        "ModelFormMixin",
        "get_form_class"
      ]
    ]
  ],
  "get_form_kwargs": [
    [
      "django/contrib/auth/views.py",
      [
        "LoginView",
        "get_form_kwargs"
      ]
    ],
    [
      "django/contrib/auth/views.py",
      [
        "PasswordResetConfirmView",
        "get_form_kwargs"
      ]
    ],
    [
      "django/contrib/auth/views.py",
      [
        "PasswordChangeView",
        "get_form_kwargs"
      ]
    ],
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "get_form_kwargs"
      ]
    ],
    [
      "django/views/generic/edit.py",
      [
        "FormMixin",
        "get_form_kwargs"
      ]
    ],
    [
      "django/views/generic/edit.py",
      [
        "ModelFormMixin",
        "get_form_kwargs"
      ]
    ]
  ],
  "form_valid": [
    [
      "django/contrib/auth/views.py",
      [
        "LoginView",
        "form_valid"
      ]
    ],
    [
      "django/contrib/auth/views.py",
      [
        "PasswordResetView",
        "form_valid"
      ]
    ],
    [
      "django/contrib/auth/views.py",
      [
        "PasswordResetConfirmView",
        "form_valid"
      ]
    ],
    [
      "django/contrib/auth/views.py",
      [
        "PasswordChangeView",
        "form_valid"
      ]
    ],
    [
      "django/contrib/messages/views.py",
      [
        "SuccessMessageMixin",
        "form_valid"
      ]
    ],
    [
      "django/views/generic/edit.py",
      [
        "FormMixin",
        "form_valid"
      ]
    ],
    [
      "django/views/generic/edit.py",
      [
        "ModelFormMixin",
        "form_valid"
      ]
    ],
    [
      "tests/generic_views/views.py",
      [
        "LateValidationView",
        "form_valid"
      ]
    ]
  ],
  "post": [
    [
      "django/contrib/auth/views.py",
      [
        "LogoutView",
        "post"
      ]
    ],
    [
      "django/test/client.py",
      [
        "RequestFactory",
        "post"
      ]
    ],
    [
      "django/test/client.py",
      [
        "Client",
        "post"
      ]
    ],
    [
      "django/views/generic/base.py",
      [
        "RedirectView",
        "post"
      ]
    ],
    [
      "django/views/generic/edit.py",
      [
        "ProcessFormView",
        "post"
      ]
    ],
    [
      "django/views/generic/edit.py",
      [
        "BaseCreateView",
        "post"
      ]
    ],
    [
      "django/views/generic/edit.py",
      [
        "BaseUpdateView",
        "post"
      ]
    ],
    [
      "django/views/generic/edit.py",
      [
        "DeletionMixin",
        "post"
      ]
    ],
    [
      "tests/auth_tests/client.py",
      [
        "PasswordResetConfirmClient",
        "post"
      ]
    ],
    [
      "tests/generic_views/test_base.py",
      [
        "PostOnlyView",
        "post"
      ]
    ]
  ],
  "get_next_page": [
    [
      "django/contrib/auth/views.py",
      [
        "LogoutView",
        "get_next_page"
      ]
    ]
  ],
  "logout_then_login": [
    [
      "django/contrib/auth/views.py",
      [
        "logout_then_login"
      ]
    ]
  ],
  "redirect_to_login": [
    [
      "django/contrib/auth/views.py",
      [
        "redirect_to_login"
      ]
    ]
  ],
  "check_generic_foreign_keys": [
    [
      "django/contrib/contenttypes/checks.py",
      [
        "check_generic_foreign_keys"
      ]
    ]
  ],
  "check_model_name_lengths": [
    [
      "django/contrib/contenttypes/checks.py",
      [
        "check_model_name_lengths"
      ]
    ]
  ],
  "contribute_to_class": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericForeignKey",
        "contribute_to_class"
      ]
    ],
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericRelation",
        "contribute_to_class"
      ]
    ],
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "GeometryField",
        "contribute_to_class"
      ]
    ],
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "RasterField",
        "contribute_to_class"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "contribute_to_class"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DateField",
        "contribute_to_class"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "AutoFieldMixin",
        "contribute_to_class"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "FileField",
        "contribute_to_class"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "ImageField",
        "contribute_to_class"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "RelatedField",
        "contribute_to_class"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ForeignObject",
        "contribute_to_class"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ManyToManyField",
        "contribute_to_class"
      ]
    ],
    [
      "django/db/models/manager.py",
      [
        "BaseManager",
        "contribute_to_class"
      ]
    ],
    [
      "django/db/models/options.py",
      [
        "Options",
        "contribute_to_class"
      ]
    ],
    [
      "tests/foreign_object/models/article.py",
      [
        "ActiveTranslationField",
        "contribute_to_class"
      ]
    ],
    [
      "tests/foreign_object/models/empty_join.py",
      [
        "StartsWithRelation",
        "contribute_to_class"
      ]
    ],
    [
      "tests/schema/fields.py",
      [
        "CustomManyToManyField",
        "contribute_to_class"
      ]
    ]
  ],
  "get_filter_kwargs_for_object": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericForeignKey",
        "get_filter_kwargs_for_object"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "get_filter_kwargs_for_object"
      ]
    ]
  ],
  "get_forward_related_filter": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericForeignKey",
        "get_forward_related_filter"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "RelatedField",
        "get_forward_related_filter"
      ]
    ]
  ],
  "_check_field_name": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericForeignKey",
        "_check_field_name"
      ]
    ],
    [
      "django/contrib/sites/managers.py",
      [
        "CurrentSiteManager",
        "_check_field_name"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "_check_field_name"
      ]
    ]
  ],
  "_check_object_id_field": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericForeignKey",
        "_check_object_id_field"
      ]
    ]
  ],
  "_check_content_type_field": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericForeignKey",
        "_check_content_type_field"
      ]
    ]
  ],
  "get_cache_name": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericForeignKey",
        "get_cache_name"
      ]
    ],
    [
      "django/db/models/fields/mixins.py",
      [
        "FieldCacheMixin",
        "get_cache_name"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "RelatedField",
        "get_cache_name"
      ]
    ],
    [
      "django/db/models/fields/reverse_related.py",
      [
        "ForeignObjectRel",
        "get_cache_name"
      ]
    ]
  ],
  "get_content_type": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericForeignKey",
        "get_content_type"
      ]
    ],
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericRelation",
        "get_content_type"
      ]
    ]
  ],
  "gfk_key": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericForeignKey",
        "get_prefetch_queryset",
        "gfk_key"
      ]
    ]
  ],
  "get_prefetch_queryset": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericForeignKey",
        "get_prefetch_queryset"
      ]
    ],
    [
      "django/contrib/contenttypes/fields.py",
      [
        "create_generic_related_manager",
        "GenericRelatedObjectManager",
        "get_prefetch_queryset"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ForwardManyToOneDescriptor",
        "get_prefetch_queryset"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ReverseOneToOneDescriptor",
        "get_prefetch_queryset"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_reverse_many_to_one_manager",
        "RelatedManager",
        "get_prefetch_queryset"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_forward_many_to_many_manager",
        "ManyRelatedManager",
        "get_prefetch_queryset"
      ]
    ]
  ],
  "__get__": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericForeignKey",
        "__get__"
      ]
    ],
    [
      "django/contrib/gis/db/models/proxy.py",
      [
        "SpatialProxy",
        "__get__"
      ]
    ],
    [
      "django/db/backends/oracle/base.py",
      [
        "_UninitializedOperatorsDescriptor",
        "__get__"
      ]
    ],
    [
      "django/db/models/base.py",
      [
        "ModelStateFieldsCacheDescriptor",
        "__get__"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "FileDescriptor",
        "__get__"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ForwardManyToOneDescriptor",
        "__get__"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ReverseOneToOneDescriptor",
        "__get__"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ReverseManyToOneDescriptor",
        "__get__"
      ]
    ],
    [
      "django/db/models/manager.py",
      [
        "ManagerDescriptor",
        "__get__"
      ]
    ],
    [
      "django/db/models/query_utils.py",
      [
        "DeferredAttribute",
        "__get__"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "CheckCondition",
        "__get__"
      ]
    ],
    [
      "django/urls/resolvers.py",
      [
        "LocaleRegexDescriptor",
        "__get__"
      ]
    ],
    [
      "django/utils/decorators.py",
      [
        "classonlymethod",
        "__get__"
      ]
    ],
    [
      "django/utils/functional.py",
      [
        "cached_property",
        "__get__"
      ]
    ],
    [
      "django/utils/functional.py",
      [
        "classproperty",
        "__get__"
      ]
    ],
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_descriptors",
        "bound_wrapper",
        "__get__"
      ]
    ],
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_descriptors",
        "descriptor_wrapper",
        "__get__"
      ]
    ],
    [
      "tests/field_subclassing/fields.py",
      [
        "CustomDeferredAttribute",
        "__get__"
      ]
    ],
    [
      "tests/model_meta/models.py",
      [
        "InstanceOnlyDescriptor",
        "__get__"
      ]
    ]
  ],
  "__set__": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericForeignKey",
        "__set__"
      ]
    ],
    [
      "django/contrib/gis/db/models/proxy.py",
      [
        "SpatialProxy",
        "__set__"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "FileDescriptor",
        "__set__"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "ImageFileDescriptor",
        "__set__"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ForeignKeyDeferredAttribute",
        "__set__"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ForwardManyToOneDescriptor",
        "__set__"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ForwardOneToOneDescriptor",
        "__set__"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ReverseOneToOneDescriptor",
        "__set__"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ReverseManyToOneDescriptor",
        "__set__"
      ]
    ],
    [
      "tests/field_subclassing/fields.py",
      [
        "CustomDeferredAttribute",
        "__set__"
      ]
    ],
    [
      "tests/foreign_object/models/article.py",
      [
        "ArticleTranslationDescriptor",
        "__set__"
      ]
    ]
  ],
  "_is_matching_generic_foreign_key": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericRelation",
        "_is_matching_generic_foreign_key"
      ]
    ]
  ],
  "_check_generic_foreign_key_existence": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericRelation",
        "_check_generic_foreign_key_existence"
      ]
    ]
  ],
  "resolve_related_fields": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericRelation",
        "resolve_related_fields"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ForeignObject",
        "resolve_related_fields"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ForeignKey",
        "resolve_related_fields"
      ]
    ]
  ],
  "_get_path_info_with_parent": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericRelation",
        "_get_path_info_with_parent"
      ]
    ]
  ],
  "get_path_info": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericRelation",
        "get_path_info"
      ]
    ],
    [
      "django/core/handlers/wsgi.py",
      [
        "get_path_info"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ForeignObject",
        "get_path_info"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ManyToManyField",
        "get_path_info"
      ]
    ],
    [
      "django/db/models/fields/reverse_related.py",
      [
        "ForeignObjectRel",
        "get_path_info"
      ]
    ],
    [
      "tests/foreign_object/models/empty_join.py",
      [
        "StartsWithRelation",
        "get_path_info"
      ]
    ]
  ],
  "get_reverse_path_info": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericRelation",
        "get_reverse_path_info"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ForeignObject",
        "get_reverse_path_info"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ForeignKey",
        "get_reverse_path_info"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ManyToManyField",
        "get_reverse_path_info"
      ]
    ],
    [
      "tests/foreign_object/models/empty_join.py",
      [
        "StartsWithRelation",
        "get_reverse_path_info"
      ]
    ]
  ],
  "value_to_string": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericRelation",
        "value_to_string"
      ]
    ],
    [
      "django/contrib/postgres/fields/array.py",
      [
        "ArrayField",
        "value_to_string"
      ]
    ],
    [
      "django/contrib/postgres/fields/hstore.py",
      [
        "HStoreField",
        "value_to_string"
      ]
    ],
    [
      "django/contrib/postgres/fields/jsonb.py",
      [
        "JSONField",
        "value_to_string"
      ]
    ],
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "RangeField",
        "value_to_string"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "value_to_string"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DateField",
        "value_to_string"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DateTimeField",
        "value_to_string"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DurationField",
        "value_to_string"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "TimeField",
        "value_to_string"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "BinaryField",
        "value_to_string"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "TeamField",
        "value_to_string"
      ]
    ]
  ],
  "set_attributes_from_rel": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericRelation",
        "set_attributes_from_rel"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "RelatedField",
        "set_attributes_from_rel"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ManyToManyField",
        "set_attributes_from_rel"
      ]
    ]
  ],
  "get_internal_type": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericRelation",
        "get_internal_type"
      ]
    ],
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "ExtentField",
        "get_internal_type"
      ]
    ],
    [
      "django/contrib/gis/db/models/sql/conversion.py",
      [
        "AreaField",
        "get_internal_type"
      ]
    ],
    [
      "django/contrib/gis/db/models/sql/conversion.py",
      [
        "DistanceField",
        "get_internal_type"
      ]
    ],
    [
      "django/contrib/postgres/fields/citext.py",
      [
        "CIText",
        "get_internal_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "get_internal_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "BooleanField",
        "get_internal_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "CharField",
        "get_internal_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DateField",
        "get_internal_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DateTimeField",
        "get_internal_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DecimalField",
        "get_internal_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DurationField",
        "get_internal_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "FilePathField",
        "get_internal_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "FloatField",
        "get_internal_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "IntegerField",
        "get_internal_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "BigIntegerField",
        "get_internal_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "IPAddressField",
        "get_internal_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "GenericIPAddressField",
        "get_internal_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "NullBooleanField",
        "get_internal_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "PositiveBigIntegerField",
        "get_internal_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "PositiveIntegerField",
        "get_internal_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "PositiveSmallIntegerField",
        "get_internal_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "SlugField",
        "get_internal_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "SmallIntegerField",
        "get_internal_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "TextField",
        "get_internal_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "TimeField",
        "get_internal_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "BinaryField",
        "get_internal_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "UUIDField",
        "get_internal_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "AutoField",
        "get_internal_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "BigAutoField",
        "get_internal_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "SmallAutoField",
        "get_internal_type"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "FileField",
        "get_internal_type"
      ]
    ],
    [
      "django/db/models/fields/reverse_related.py",
      [
        "ForeignObjectRel",
        "get_internal_type"
      ]
    ],
    [
      "tests/schema/fields.py",
      [
        "CustomManyToManyField",
        "get_internal_type"
      ]
    ]
  ],
  "get_extra_restriction": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericRelation",
        "get_extra_restriction"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ForeignObject",
        "get_extra_restriction"
      ]
    ],
    [
      "django/db/models/fields/reverse_related.py",
      [
        "ForeignObjectRel",
        "get_extra_restriction"
      ]
    ],
    [
      "tests/foreign_object/models/article.py",
      [
        "ActiveTranslationField",
        "get_extra_restriction"
      ]
    ],
    [
      "tests/foreign_object/models/empty_join.py",
      [
        "StartsWithRelation",
        "get_extra_restriction"
      ]
    ],
    [
      "tests/foreign_object/models/empty_join.py",
      [
        "BrokenContainsRelation",
        "get_extra_restriction"
      ]
    ]
  ],
  "bulk_related_objects": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "GenericRelation",
        "bulk_related_objects"
      ]
    ]
  ],
  "related_manager_cls": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "ReverseGenericManyToOneDescriptor",
        "related_manager_cls"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ReverseManyToOneDescriptor",
        "related_manager_cls"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ManyToManyDescriptor",
        "related_manager_cls"
      ]
    ]
  ],
  "__call__": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "create_generic_related_manager",
        "GenericRelatedObjectManager",
        "__call__"
      ]
    ],
    [
      "django/contrib/gis/geos/libgeos.py",
      [
        "GEOSFuncFactory",
        "__call__"
      ]
    ],
    [
      "django/contrib/gis/geos/prototypes/threadsafe.py",
      [
        "GEOSFunc",
        "__call__"
      ]
    ],
    [
      "django/contrib/gis/management/commands/ogrinspect.py",
      [
        "LayerOptionAction",
        "__call__"
      ]
    ],
    [
      "django/contrib/gis/management/commands/ogrinspect.py",
      [
        "ListOptionAction",
        "__call__"
      ]
    ],
    [
      "django/contrib/postgres/fields/array.py",
      [
        "IndexTransformFactory",
        "__call__"
      ]
    ],
    [
      "django/contrib/postgres/fields/array.py",
      [
        "SliceTransformFactory",
        "__call__"
      ]
    ],
    [
      "django/contrib/postgres/fields/hstore.py",
      [
        "KeyTransformFactory",
        "__call__"
      ]
    ],
    [
      "django/contrib/postgres/fields/jsonb.py",
      [
        "KeyTransformFactory",
        "__call__"
      ]
    ],
    [
      "django/contrib/postgres/validators.py",
      [
        "KeysValidator",
        "__call__"
      ]
    ],
    [
      "django/contrib/staticfiles/handlers.py",
      [
        "StaticFilesHandler",
        "__call__"
      ]
    ],
    [
      "django/contrib/staticfiles/handlers.py",
      [
        "ASGIStaticFilesHandler",
        "__call__"
      ]
    ],
    [
      "django/contrib/syndication/views.py",
      [
        "Feed",
        "__call__"
      ]
    ],
    [
      "django/core/handlers/asgi.py",
      [
        "ASGIHandler",
        "__call__"
      ]
    ],
    [
      "django/core/handlers/wsgi.py",
      [
        "WSGIHandler",
        "__call__"
      ]
    ],
    [
      "django/core/serializers/__init__.py",
      [
        "BadSerializer",
        "__call__"
      ]
    ],
    [
      "django/core/validators.py",
      [
        "RegexValidator",
        "__call__"
      ]
    ],
    [
      "django/core/validators.py",
      [
        "URLValidator",
        "__call__"
      ]
    ],
    [
      "django/core/validators.py",
      [
        "EmailValidator",
        "__call__"
      ]
    ],
    [
      "django/core/validators.py",
      [
        "BaseValidator",
        "__call__"
      ]
    ],
    [
      "django/core/validators.py",
      [
        "DecimalValidator",
        "__call__"
      ]
    ],
    [
      "django/core/validators.py",
      [
        "FileExtensionValidator",
        "__call__"
      ]
    ],
    [
      "django/core/validators.py",
      [
        "ProhibitNullCharactersValidator",
        "__call__"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_reverse_many_to_one_manager",
        "RelatedManager",
        "__call__"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_forward_many_to_many_manager",
        "ManyRelatedManager",
        "__call__"
      ]
    ],
    [
      "django/db/utils.py",
      [
        "DatabaseErrorWrapper",
        "__call__"
      ]
    ],
    [
      "django/test/client.py",
      [
        "ClientHandler",
        "__call__"
      ]
    ],
    [
      "django/test/client.py",
      [
        "AsyncClientHandler",
        "__call__"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "_DatabaseFailure",
        "__call__"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "__call__"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "FSFilesHandler",
        "__call__"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "TestContextDecorator",
        "__call__"
      ]
    ],
    [
      "django/utils/deprecation.py",
      [
        "warn_about_renamed_method",
        "__call__"
      ]
    ],
    [
      "django/utils/deprecation.py",
      [
        "MiddlewareMixin",
        "__call__"
      ]
    ],
    [
      "tests/admin_docs/views.py",
      [
        "XViewCallableObject",
        "__call__"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "SQLFuncFactory",
        "__call__"
      ]
    ],
    [
      "tests/decorators/tests.py",
      [
        "ClsDec",
        "__call__"
      ]
    ],
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_descriptors",
        "bound_wrapper",
        "__call__"
      ]
    ],
    [
      "tests/dispatch/tests.py",
      [
        "Callable",
        "__call__"
      ]
    ],
    [
      "tests/file_storage/models.py",
      [
        "CallableStorage",
        "__call__"
      ]
    ],
    [
      "tests/handlers/tests_custom_error_handlers.py",
      [
        "MiddlewareAccessingContent",
        "__call__"
      ]
    ],
    [
      "tests/handlers/views.py",
      [
        "NoResponse",
        "__call__"
      ]
    ],
    [
      "tests/handlers/views.py",
      [
        "CoroutineClearingView",
        "__call__"
      ]
    ],
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_lazy_reference_checks",
        "DummyClass",
        "__call__"
      ]
    ],
    [
      "tests/middleware_exceptions/middleware.py",
      [
        "BaseMiddleware",
        "__call__"
      ]
    ],
    [
      "tests/middleware_exceptions/middleware.py",
      [
        "LogMiddleware",
        "__call__"
      ]
    ],
    [
      "tests/middleware_exceptions/middleware.py",
      [
        "NotFoundMiddleware",
        "__call__"
      ]
    ],
    [
      "tests/middleware_exceptions/middleware.py",
      [
        "PaymentMiddleware",
        "__call__"
      ]
    ],
    [
      "tests/middleware_exceptions/middleware.py",
      [
        "NotSyncOrAsyncMiddleware",
        "__call__"
      ]
    ],
    [
      "tests/migrate_signals/tests.py",
      [
        "Receiver",
        "__call__"
      ]
    ],
    [
      "tests/migrate_signals/tests.py",
      [
        "OneTimeReceiver",
        "__call__"
      ]
    ],
    [
      "tests/model_formsets_regress/tests.py",
      [
        "Callback",
        "__call__"
      ]
    ],
    [
      "tests/multiple_database/tests.py",
      [
        "DatabaseReceiver",
        "__call__"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "WhereNodeTest",
        "MockCompiler",
        "__call__"
      ]
    ],
    [
      "tests/runtests.py",
      [
        "ActionSelenium",
        "__call__"
      ]
    ],
    [
      "tests/signals/tests.py",
      [
        "SignalTests",
        "test_delete_signals",
        "PostDeleteHandler",
        "__call__"
      ]
    ],
    [
      "tests/template_tests/test_callables.py",
      [
        "CallableVariablesTests",
        "test_callable",
        "Doodad",
        "__call__"
      ]
    ],
    [
      "tests/template_tests/test_callables.py",
      [
        "CallableVariablesTests",
        "test_alters_data",
        "Doodad",
        "__call__"
      ]
    ],
    [
      "tests/template_tests/test_callables.py",
      [
        "CallableVariablesTests",
        "test_do_not_call",
        "Doodad",
        "__call__"
      ]
    ],
    [
      "tests/template_tests/test_callables.py",
      [
        "CallableVariablesTests",
        "test_do_not_call_and_alters_data",
        "Doodad",
        "__call__"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "SkippingExtraTests",
        "__call__"
      ]
    ],
    [
      "tests/urlpatterns_reverse/views.py",
      [
        "ViewClass",
        "__call__"
      ]
    ],
    [
      "tests/utils_tests/test_decorators.py",
      [
        "ClassProcessView",
        "__call__"
      ]
    ]
  ],
  "_apply_rel_filters": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "create_generic_related_manager",
        "GenericRelatedObjectManager",
        "_apply_rel_filters"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_reverse_many_to_one_manager",
        "RelatedManager",
        "_apply_rel_filters"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_forward_many_to_many_manager",
        "ManyRelatedManager",
        "_apply_rel_filters"
      ]
    ]
  ],
  "_remove_prefetched_objects": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "create_generic_related_manager",
        "GenericRelatedObjectManager",
        "_remove_prefetched_objects"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_reverse_many_to_one_manager",
        "RelatedManager",
        "_remove_prefetched_objects"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_forward_many_to_many_manager",
        "ManyRelatedManager",
        "_remove_prefetched_objects"
      ]
    ]
  ],
  "check_and_update_obj": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "create_generic_related_manager",
        "GenericRelatedObjectManager",
        "add",
        "check_and_update_obj"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_reverse_many_to_one_manager",
        "RelatedManager",
        "add",
        "check_and_update_obj"
      ]
    ]
  ],
  "add": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "create_generic_related_manager",
        "GenericRelatedObjectManager",
        "add"
      ]
    ],
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "GeometryCollection",
        "add"
      ]
    ],
    [
      "django/contrib/messages/storage/base.py",
      [
        "BaseStorage",
        "add"
      ]
    ],
    [
      "django/core/cache/backends/base.py",
      [
        "BaseCache",
        "add"
      ]
    ],
    [
      "django/core/cache/backends/db.py",
      [
        "DatabaseCache",
        "add"
      ]
    ],
    [
      "django/core/cache/backends/dummy.py",
      [
        "DummyCache",
        "add"
      ]
    ],
    [
      "django/core/cache/backends/filebased.py",
      [
        "FileBasedCache",
        "add"
      ]
    ],
    [
      "django/core/cache/backends/locmem.py",
      [
        "LocMemCache",
        "add"
      ]
    ],
    [
      "django/core/cache/backends/memcached.py",
      [
        "BaseMemcachedCache",
        "add"
      ]
    ],
    [
      "django/db/models/deletion.py",
      [
        "Collector",
        "add"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_reverse_many_to_one_manager",
        "RelatedManager",
        "add"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_forward_many_to_many_manager",
        "ManyRelatedManager",
        "add"
      ]
    ],
    [
      "django/template/defaultfilters.py",
      [
        "add"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "OrderedSet",
        "add"
      ]
    ],
    [
      "django/utils/tree.py",
      [
        "Node",
        "add"
      ]
    ],
    [
      "tests/gis_tests/inspectapp/tests.py",
      [
        "get_ogr_db_string",
        "add"
      ]
    ],
    [
      "tests/messages_tests/test_api.py",
      [
        "DummyStorage",
        "add"
      ]
    ],
    [
      "tests/messages_tests/urls.py",
      [
        "add"
      ]
    ]
  ],
  "remove": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "create_generic_related_manager",
        "GenericRelatedObjectManager",
        "remove"
      ]
    ],
    [
      "django/contrib/gis/geos/mutable_list.py",
      [
        "ListMixin",
        "remove"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_reverse_many_to_one_manager",
        "RelatedManager",
        "if_rel_field_null_",
        "remove"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_forward_many_to_many_manager",
        "ManyRelatedManager",
        "remove"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "OrderedSet",
        "remove"
      ]
    ]
  ],
  "clear": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "create_generic_related_manager",
        "GenericRelatedObjectManager",
        "clear"
      ]
    ],
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "clear"
      ]
    ],
    [
      "django/core/cache/backends/base.py",
      [
        "BaseCache",
        "clear"
      ]
    ],
    [
      "django/core/cache/backends/db.py",
      [
        "DatabaseCache",
        "clear"
      ]
    ],
    [
      "django/core/cache/backends/dummy.py",
      [
        "DummyCache",
        "clear"
      ]
    ],
    [
      "django/core/cache/backends/filebased.py",
      [
        "FileBasedCache",
        "clear"
      ]
    ],
    [
      "django/core/cache/backends/locmem.py",
      [
        "LocMemCache",
        "clear"
      ]
    ],
    [
      "django/core/cache/backends/memcached.py",
      [
        "BaseMemcachedCache",
        "clear"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_reverse_many_to_one_manager",
        "RelatedManager",
        "if_rel_field_null_",
        "clear"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_forward_many_to_many_manager",
        "ManyRelatedManager",
        "clear"
      ]
    ],
    [
      "django/http/request.py",
      [
        "QueryDict",
        "clear"
      ]
    ]
  ],
  "_clear": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "create_generic_related_manager",
        "GenericRelatedObjectManager",
        "_clear"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_reverse_many_to_one_manager",
        "RelatedManager",
        "if_rel_field_null_",
        "_clear"
      ]
    ]
  ],
  "set": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "create_generic_related_manager",
        "GenericRelatedObjectManager",
        "set"
      ]
    ],
    [
      "django/core/cache/backends/base.py",
      [
        "BaseCache",
        "set"
      ]
    ],
    [
      "django/core/cache/backends/db.py",
      [
        "DatabaseCache",
        "set"
      ]
    ],
    [
      "django/core/cache/backends/dummy.py",
      [
        "DummyCache",
        "set"
      ]
    ],
    [
      "django/core/cache/backends/filebased.py",
      [
        "FileBasedCache",
        "set"
      ]
    ],
    [
      "django/core/cache/backends/locmem.py",
      [
        "LocMemCache",
        "set"
      ]
    ],
    [
      "django/core/cache/backends/memcached.py",
      [
        "BaseMemcachedCache",
        "set"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_reverse_many_to_one_manager",
        "RelatedManager",
        "set"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_forward_many_to_many_manager",
        "ManyRelatedManager",
        "set"
      ]
    ]
  ],
  "get_or_create": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "create_generic_related_manager",
        "GenericRelatedObjectManager",
        "get_or_create"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_reverse_many_to_one_manager",
        "RelatedManager",
        "get_or_create"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_forward_many_to_many_manager",
        "ManyRelatedManager",
        "get_or_create"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "get_or_create"
      ]
    ],
    [
      "tests/multiple_database/models.py",
      [
        "BookManager",
        "get_or_create"
      ]
    ]
  ],
  "update_or_create": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "create_generic_related_manager",
        "GenericRelatedObjectManager",
        "update_or_create"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_reverse_many_to_one_manager",
        "RelatedManager",
        "update_or_create"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_forward_many_to_many_manager",
        "ManyRelatedManager",
        "update_or_create"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "update_or_create"
      ]
    ]
  ],
  "create_generic_related_manager": [
    [
      "django/contrib/contenttypes/fields.py",
      [
        "create_generic_related_manager"
      ]
    ]
  ],
  "initial_form_count": [
    [
      "django/contrib/contenttypes/forms.py",
      [
        "BaseGenericInlineFormSet",
        "initial_form_count"
      ]
    ],
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "initial_form_count"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "BaseModelFormSet",
        "initial_form_count"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "BaseInlineFormSet",
        "initial_form_count"
      ]
    ]
  ],
  "get_default_prefix": [
    [
      "django/contrib/contenttypes/forms.py",
      [
        "BaseGenericInlineFormSet",
        "get_default_prefix"
      ]
    ],
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "get_default_prefix"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "BaseInlineFormSet",
        "get_default_prefix"
      ]
    ]
  ],
  "save_new": [
    [
      "django/contrib/contenttypes/forms.py",
      [
        "BaseGenericInlineFormSet",
        "save_new"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "BaseModelFormSet",
        "save_new"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "BaseInlineFormSet",
        "save_new"
      ]
    ]
  ],
  "generic_inlineformset_factory": [
    [
      "django/contrib/contenttypes/forms.py",
      [
        "generic_inlineformset_factory"
      ]
    ]
  ],
  "_rename": [
    [
      "django/contrib/contenttypes/management/__init__.py",
      [
        "RenameContentType",
        "_rename"
      ]
    ]
  ],
  "rename_forward": [
    [
      "django/contrib/contenttypes/management/__init__.py",
      [
        "RenameContentType",
        "rename_forward"
      ]
    ]
  ],
  "rename_backward": [
    [
      "django/contrib/contenttypes/management/__init__.py",
      [
        "RenameContentType",
        "rename_backward"
      ]
    ]
  ],
  "inject_rename_contenttypes_operations": [
    [
      "django/contrib/contenttypes/management/__init__.py",
      [
        "inject_rename_contenttypes_operations"
      ]
    ]
  ],
  "get_contenttypes_and_models": [
    [
      "django/contrib/contenttypes/management/__init__.py",
      [
        "get_contenttypes_and_models"
      ]
    ]
  ],
  "create_contenttypes": [
    [
      "django/contrib/contenttypes/management/__init__.py",
      [
        "create_contenttypes"
      ]
    ]
  ],
  "add_legacy_name": [
    [
      "django/contrib/contenttypes/migrations/0002_remove_content_type_name.py",
      [
        "add_legacy_name"
      ]
    ]
  ],
  "_get_opts": [
    [
      "django/contrib/contenttypes/models.py",
      [
        "ContentTypeManager",
        "_get_opts"
      ]
    ]
  ],
  "_get_from_cache": [
    [
      "django/contrib/contenttypes/models.py",
      [
        "ContentTypeManager",
        "_get_from_cache"
      ]
    ]
  ],
  "get_for_model": [
    [
      "django/contrib/contenttypes/models.py",
      [
        "ContentTypeManager",
        "get_for_model"
      ]
    ]
  ],
  "get_for_models": [
    [
      "django/contrib/contenttypes/models.py",
      [
        "ContentTypeManager",
        "get_for_models"
      ]
    ]
  ],
  "get_for_id": [
    [
      "django/contrib/contenttypes/models.py",
      [
        "ContentTypeManager",
        "get_for_id"
      ]
    ]
  ],
  "_add_to_cache": [
    [
      "django/contrib/contenttypes/models.py",
      [
        "ContentTypeManager",
        "_add_to_cache"
      ]
    ]
  ],
  "name": [
    [
      "django/contrib/contenttypes/models.py",
      [
        "ContentType",
        "name"
      ]
    ],
    [
      "django/contrib/gis/db/backends/base/models.py",
      [
        "SpatialRefSysMixin",
        "name"
      ]
    ],
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "GeoFuncMixin",
        "name"
      ]
    ],
    [
      "django/contrib/gis/gdal/datasource.py",
      [
        "DataSource",
        "name"
      ]
    ],
    [
      "django/contrib/gis/gdal/driver.py",
      [
        "Driver",
        "name"
      ]
    ],
    [
      "django/contrib/gis/gdal/field.py",
      [
        "Field",
        "name"
      ]
    ],
    [
      "django/contrib/gis/gdal/geomtype.py",
      [
        "OGRGeomType",
        "name"
      ]
    ],
    [
      "django/contrib/gis/gdal/layer.py",
      [
        "Layer",
        "name"
      ]
    ],
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "GDALRaster",
        "name"
      ]
    ],
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "name"
      ]
    ],
    [
      "django/db/models/fields/reverse_related.py",
      [
        "ForeignObjectRel",
        "name"
      ]
    ]
  ],
  "app_labeled_name": [
    [
      "django/contrib/contenttypes/models.py",
      [
        "ContentType",
        "app_labeled_name"
      ]
    ]
  ],
  "model_class": [
    [
      "django/contrib/contenttypes/models.py",
      [
        "ContentType",
        "model_class"
      ]
    ]
  ],
  "get_object_for_this_type": [
    [
      "django/contrib/contenttypes/models.py",
      [
        "ContentType",
        "get_object_for_this_type"
      ]
    ]
  ],
  "get_all_objects_for_this_type": [
    [
      "django/contrib/contenttypes/models.py",
      [
        "ContentType",
        "get_all_objects_for_this_type"
      ]
    ]
  ],
  "shortcut": [
    [
      "django/contrib/contenttypes/views.py",
      [
        "shortcut"
      ]
    ]
  ],
  "_trailing_slash_required": [
    [
      "django/contrib/flatpages/forms.py",
      [
        "FlatpageForm",
        "_trailing_slash_required"
      ]
    ]
  ],
  "clean_url": [
    [
      "django/contrib/flatpages/forms.py",
      [
        "FlatpageForm",
        "clean_url"
      ]
    ]
  ],
  "get_absolute_url": [
    [
      "django/contrib/flatpages/models.py",
      [
        "FlatPage",
        "get_absolute_url"
      ]
    ],
    [
      "tests/admin_inlines/models.py",
      [
        "Inner",
        "get_absolute_url"
      ]
    ],
    [
      "tests/admin_inlines/models.py",
      [
        "ChildModel1",
        "get_absolute_url"
      ]
    ],
    [
      "tests/admin_inlines/models.py",
      [
        "ChildModel2",
        "get_absolute_url"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "ModelWithStringPrimaryKey",
        "get_absolute_url"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "City",
        "get_absolute_url"
      ]
    ],
    [
      "tests/admin_views/models.py",
      [
        "Restaurant",
        "get_absolute_url"
      ]
    ],
    [
      "tests/contenttypes_tests/models.py",
      [
        "Author",
        "get_absolute_url"
      ]
    ],
    [
      "tests/contenttypes_tests/models.py",
      [
        "SchemeIncludedURL",
        "get_absolute_url"
      ]
    ],
    [
      "tests/contenttypes_tests/models.py",
      [
        "FooWithUrl",
        "get_absolute_url"
      ]
    ],
    [
      "tests/contenttypes_tests/models.py",
      [
        "FooWithBrokenAbsoluteUrl",
        "get_absolute_url"
      ]
    ],
    [
      "tests/contenttypes_tests/models.py",
      [
        "ModelWithNullFKToSite",
        "get_absolute_url"
      ]
    ],
    [
      "tests/contenttypes_tests/models.py",
      [
        "ModelWithM2MToSite",
        "get_absolute_url"
      ]
    ],
    [
      "tests/generic_views/models.py",
      [
        "Artist",
        "get_absolute_url"
      ]
    ],
    [
      "tests/resolve_url/models.py",
      [
        "UnimportantThing",
        "get_absolute_url"
      ]
    ],
    [
      "tests/sitemaps_tests/models.py",
      [
        "TestModel",
        "get_absolute_url"
      ]
    ],
    [
      "tests/sitemaps_tests/models.py",
      [
        "I18nTestModel",
        "get_absolute_url"
      ]
    ],
    [
      "tests/syndication_tests/models.py",
      [
        "Entry",
        "get_absolute_url"
      ]
    ],
    [
      "tests/view_tests/models.py",
      [
        "Author",
        "get_absolute_url"
      ]
    ],
    [
      "tests/view_tests/models.py",
      [
        "UrlArticle",
        "get_absolute_url"
      ]
    ]
  ],
  "items": [
    [
      "django/contrib/flatpages/sitemaps.py",
      [
        "FlatPageSitemap",
        "items"
      ]
    ],
    [
      "django/contrib/gis/sitemaps/kml.py",
      [
        "KMLSitemap",
        "items"
      ]
    ],
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "items"
      ]
    ],
    [
      "django/contrib/sitemaps/__init__.py",
      [
        "Sitemap",
        "items"
      ]
    ],
    [
      "django/contrib/sitemaps/__init__.py",
      [
        "GenericSitemap",
        "items"
      ]
    ],
    [
      "django/http/response.py",
      [
        "HttpResponseBase",
        "items"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "MultiValueDict",
        "items"
      ]
    ],
    [
      "django/utils/translation/trans_real.py",
      [
        "TranslationCatalog",
        "items"
      ]
    ],
    [
      "tests/gis_tests/geoapp/feeds.py",
      [
        "TestGeoRSS1",
        "items"
      ]
    ],
    [
      "tests/sitemaps_tests/urls/http.py",
      [
        "SimpleSitemap",
        "items"
      ]
    ],
    [
      "tests/sitemaps_tests/urls/http.py",
      [
        "SimplePagedSitemap",
        "items"
      ]
    ],
    [
      "tests/sitemaps_tests/urls/http.py",
      [
        "SimpleI18nSitemap",
        "items"
      ]
    ],
    [
      "tests/sitemaps_tests/urls/http.py",
      [
        "FixedLastmodMixedSitemap",
        "items"
      ]
    ],
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestRss2Feed",
        "items"
      ]
    ],
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestNoPubdateFeed",
        "items"
      ]
    ],
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestLatestFeed",
        "items"
      ]
    ],
    [
      "tests/syndication_tests/feeds.py",
      [
        "ArticlesFeed",
        "items"
      ]
    ]
  ],
  "get_flatpages": [
    [
      "django/contrib/flatpages/templatetags/flatpages.py",
      [
        "get_flatpages"
      ]
    ]
  ],
  "flatpage": [
    [
      "django/contrib/flatpages/views.py",
      [
        "flatpage"
      ]
    ]
  ],
  "render_flatpage": [
    [
      "django/contrib/flatpages/views.py",
      [
        "render_flatpage"
      ]
    ]
  ],
  "get_map_widget": [
    [
      "django/contrib/gis/admin/options.py",
      [
        "GeoModelAdmin",
        "get_map_widget"
      ]
    ]
  ],
  "ol_bounds": [
    [
      "django/contrib/gis/admin/widgets.py",
      [
        "OpenLayersWidget",
        "map_options",
        "ol_bounds"
      ]
    ]
  ],
  "ol_projection": [
    [
      "django/contrib/gis/admin/widgets.py",
      [
        "OpenLayersWidget",
        "map_options",
        "ol_projection"
      ]
    ]
  ],
  "map_options": [
    [
      "django/contrib/gis/admin/widgets.py",
      [
        "OpenLayersWidget",
        "map_options"
      ]
    ]
  ],
  "supports_bbcontains_lookup": [
    [
      "django/contrib/gis/db/backends/base/features.py",
      [
        "BaseSpatialFeatures",
        "supports_bbcontains_lookup"
      ]
    ]
  ],
  "supports_contained_lookup": [
    [
      "django/contrib/gis/db/backends/base/features.py",
      [
        "BaseSpatialFeatures",
        "supports_contained_lookup"
      ]
    ]
  ],
  "supports_crosses_lookup": [
    [
      "django/contrib/gis/db/backends/base/features.py",
      [
        "BaseSpatialFeatures",
        "supports_crosses_lookup"
      ]
    ]
  ],
  "supports_distances_lookups": [
    [
      "django/contrib/gis/db/backends/base/features.py",
      [
        "BaseSpatialFeatures",
        "supports_distances_lookups"
      ]
    ]
  ],
  "supports_dwithin_lookup": [
    [
      "django/contrib/gis/db/backends/base/features.py",
      [
        "BaseSpatialFeatures",
        "supports_dwithin_lookup"
      ]
    ]
  ],
  "supports_relate_lookup": [
    [
      "django/contrib/gis/db/backends/base/features.py",
      [
        "BaseSpatialFeatures",
        "supports_relate_lookup"
      ]
    ]
  ],
  "supports_isvalid_lookup": [
    [
      "django/contrib/gis/db/backends/base/features.py",
      [
        "BaseSpatialFeatures",
        "supports_isvalid_lookup"
      ]
    ]
  ],
  "supports_collect_aggr": [
    [
      "django/contrib/gis/db/backends/base/features.py",
      [
        "BaseSpatialFeatures",
        "supports_collect_aggr"
      ]
    ]
  ],
  "supports_extent_aggr": [
    [
      "django/contrib/gis/db/backends/base/features.py",
      [
        "BaseSpatialFeatures",
        "supports_extent_aggr"
      ]
    ]
  ],
  "supports_make_line_aggr": [
    [
      "django/contrib/gis/db/backends/base/features.py",
      [
        "BaseSpatialFeatures",
        "supports_make_line_aggr"
      ]
    ]
  ],
  "supports_union_aggr": [
    [
      "django/contrib/gis/db/backends/base/features.py",
      [
        "BaseSpatialFeatures",
        "supports_union_aggr"
      ]
    ]
  ],
  "srs": [
    [
      "django/contrib/gis/db/backends/base/models.py",
      [
        "SpatialRefSysMixin",
        "srs"
      ]
    ],
    [
      "django/contrib/gis/gdal/layer.py",
      [
        "Layer",
        "srs"
      ]
    ],
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "GDALRaster",
        "srs"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "srs"
      ]
    ]
  ],
  "ellipsoid": [
    [
      "django/contrib/gis/db/backends/base/models.py",
      [
        "SpatialRefSysMixin",
        "ellipsoid"
      ]
    ],
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "ellipsoid"
      ]
    ]
  ],
  "spheroid": [
    [
      "django/contrib/gis/db/backends/base/models.py",
      [
        "SpatialRefSysMixin",
        "spheroid"
      ]
    ],
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "BaseSpatialField",
        "spheroid"
      ]
    ]
  ],
  "datum": [
    [
      "django/contrib/gis/db/backends/base/models.py",
      [
        "SpatialRefSysMixin",
        "datum"
      ]
    ]
  ],
  "projected": [
    [
      "django/contrib/gis/db/backends/base/models.py",
      [
        "SpatialRefSysMixin",
        "projected"
      ]
    ],
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "projected"
      ]
    ]
  ],
  "local": [
    [
      "django/contrib/gis/db/backends/base/models.py",
      [
        "SpatialRefSysMixin",
        "local"
      ]
    ],
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "local"
      ]
    ],
    [
      "django/contrib/staticfiles/management/commands/collectstatic.py",
      [
        "Command",
        "local"
      ]
    ]
  ],
  "geographic": [
    [
      "django/contrib/gis/db/backends/base/models.py",
      [
        "SpatialRefSysMixin",
        "geographic"
      ]
    ],
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "geographic"
      ]
    ]
  ],
  "linear_name": [
    [
      "django/contrib/gis/db/backends/base/models.py",
      [
        "SpatialRefSysMixin",
        "linear_name"
      ]
    ],
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "linear_name"
      ]
    ]
  ],
  "linear_units": [
    [
      "django/contrib/gis/db/backends/base/models.py",
      [
        "SpatialRefSysMixin",
        "linear_units"
      ]
    ],
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "linear_units"
      ]
    ]
  ],
  "angular_name": [
    [
      "django/contrib/gis/db/backends/base/models.py",
      [
        "SpatialRefSysMixin",
        "angular_name"
      ]
    ],
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "angular_name"
      ]
    ]
  ],
  "angular_units": [
    [
      "django/contrib/gis/db/backends/base/models.py",
      [
        "SpatialRefSysMixin",
        "angular_units"
      ]
    ],
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "angular_units"
      ]
    ]
  ],
  "units": [
    [
      "django/contrib/gis/db/backends/base/models.py",
      [
        "SpatialRefSysMixin",
        "units"
      ]
    ],
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "BaseSpatialField",
        "units"
      ]
    ],
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "units"
      ]
    ]
  ],
  "get_units": [
    [
      "django/contrib/gis/db/backends/base/models.py",
      [
        "SpatialRefSysMixin",
        "get_units"
      ]
    ]
  ],
  "get_spheroid": [
    [
      "django/contrib/gis/db/backends/base/models.py",
      [
        "SpatialRefSysMixin",
        "get_spheroid"
      ]
    ]
  ],
  "select_extent": [
    [
      "django/contrib/gis/db/backends/base/operations.py",
      [
        "BaseSpatialOperations",
        "select_extent"
      ]
    ]
  ],
  "convert_extent": [
    [
      "django/contrib/gis/db/backends/base/operations.py",
      [
        "BaseSpatialOperations",
        "convert_extent"
      ]
    ],
    [
      "django/contrib/gis/db/backends/oracle/operations.py",
      [
        "OracleOperations",
        "convert_extent"
      ]
    ],
    [
      "django/contrib/gis/db/backends/postgis/operations.py",
      [
        "PostGISOperations",
        "convert_extent"
      ]
    ],
    [
      "django/contrib/gis/db/backends/spatialite/operations.py",
      [
        "SpatiaLiteOperations",
        "convert_extent"
      ]
    ]
  ],
  "convert_extent3d": [
    [
      "django/contrib/gis/db/backends/base/operations.py",
      [
        "BaseSpatialOperations",
        "convert_extent3d"
      ]
    ],
    [
      "django/contrib/gis/db/backends/postgis/operations.py",
      [
        "PostGISOperations",
        "convert_extent3d"
      ]
    ]
  ],
  "geo_quote_name": [
    [
      "django/contrib/gis/db/backends/base/operations.py",
      [
        "BaseSpatialOperations",
        "geo_quote_name"
      ]
    ],
    [
      "django/contrib/gis/db/backends/oracle/operations.py",
      [
        "OracleOperations",
        "geo_quote_name"
      ]
    ],
    [
      "django/contrib/gis/db/backends/oracle/schema.py",
      [
        "OracleGISSchemaEditor",
        "geo_quote_name"
      ]
    ],
    [
      "django/contrib/gis/db/backends/postgis/schema.py",
      [
        "PostGISSchemaEditor",
        "geo_quote_name"
      ]
    ],
    [
      "django/contrib/gis/db/backends/spatialite/schema.py",
      [
        "SpatialiteSchemaEditor",
        "geo_quote_name"
      ]
    ]
  ],
  "geo_db_type": [
    [
      "django/contrib/gis/db/backends/base/operations.py",
      [
        "BaseSpatialOperations",
        "geo_db_type"
      ]
    ],
    [
      "django/contrib/gis/db/backends/mysql/operations.py",
      [
        "MySQLOperations",
        "geo_db_type"
      ]
    ],
    [
      "django/contrib/gis/db/backends/oracle/operations.py",
      [
        "OracleOperations",
        "geo_db_type"
      ]
    ],
    [
      "django/contrib/gis/db/backends/postgis/operations.py",
      [
        "PostGISOperations",
        "geo_db_type"
      ]
    ],
    [
      "django/contrib/gis/db/backends/spatialite/operations.py",
      [
        "SpatiaLiteOperations",
        "geo_db_type"
      ]
    ]
  ],
  "get_distance": [
    [
      "django/contrib/gis/db/backends/base/operations.py",
      [
        "BaseSpatialOperations",
        "get_distance"
      ]
    ],
    [
      "django/contrib/gis/db/backends/mysql/operations.py",
      [
        "MySQLOperations",
        "get_distance"
      ]
    ],
    [
      "django/contrib/gis/db/backends/oracle/operations.py",
      [
        "OracleOperations",
        "get_distance"
      ]
    ],
    [
      "django/contrib/gis/db/backends/postgis/operations.py",
      [
        "PostGISOperations",
        "get_distance"
      ]
    ],
    [
      "django/contrib/gis/db/backends/spatialite/operations.py",
      [
        "SpatiaLiteOperations",
        "get_distance"
      ]
    ]
  ],
  "transform_value": [
    [
      "django/contrib/gis/db/backends/base/operations.py",
      [
        "BaseSpatialOperations",
        "get_geom_placeholder",
        "transform_value"
      ]
    ]
  ],
  "get_geom_placeholder": [
    [
      "django/contrib/gis/db/backends/base/operations.py",
      [
        "BaseSpatialOperations",
        "get_geom_placeholder"
      ]
    ],
    [
      "django/contrib/gis/db/backends/oracle/operations.py",
      [
        "OracleOperations",
        "get_geom_placeholder"
      ]
    ],
    [
      "django/contrib/gis/db/backends/postgis/operations.py",
      [
        "PostGISOperations",
        "get_geom_placeholder"
      ]
    ]
  ],
  "check_expression_support": [
    [
      "django/contrib/gis/db/backends/base/operations.py",
      [
        "BaseSpatialOperations",
        "check_expression_support"
      ]
    ],
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "check_expression_support"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "check_expression_support"
      ]
    ]
  ],
  "spatial_aggregate_name": [
    [
      "django/contrib/gis/db/backends/base/operations.py",
      [
        "BaseSpatialOperations",
        "spatial_aggregate_name"
      ]
    ],
    [
      "django/contrib/gis/db/backends/oracle/operations.py",
      [
        "OracleOperations",
        "spatial_aggregate_name"
      ]
    ],
    [
      "django/contrib/gis/db/backends/postgis/operations.py",
      [
        "PostGISOperations",
        "spatial_aggregate_name"
      ]
    ],
    [
      "django/contrib/gis/db/backends/spatialite/operations.py",
      [
        "SpatiaLiteOperations",
        "spatial_aggregate_name"
      ]
    ]
  ],
  "spatial_function_name": [
    [
      "django/contrib/gis/db/backends/base/operations.py",
      [
        "BaseSpatialOperations",
        "spatial_function_name"
      ]
    ]
  ],
  "geometry_columns": [
    [
      "django/contrib/gis/db/backends/base/operations.py",
      [
        "BaseSpatialOperations",
        "geometry_columns"
      ]
    ],
    [
      "django/contrib/gis/db/backends/oracle/operations.py",
      [
        "OracleOperations",
        "geometry_columns"
      ]
    ],
    [
      "django/contrib/gis/db/backends/postgis/operations.py",
      [
        "PostGISOperations",
        "geometry_columns"
      ]
    ],
    [
      "django/contrib/gis/db/backends/spatialite/operations.py",
      [
        "SpatiaLiteOperations",
        "geometry_columns"
      ]
    ]
  ],
  "spatial_ref_sys": [
    [
      "django/contrib/gis/db/backends/base/operations.py",
      [
        "BaseSpatialOperations",
        "spatial_ref_sys"
      ]
    ],
    [
      "django/contrib/gis/db/backends/oracle/operations.py",
      [
        "OracleOperations",
        "spatial_ref_sys"
      ]
    ],
    [
      "django/contrib/gis/db/backends/postgis/operations.py",
      [
        "PostGISOperations",
        "spatial_ref_sys"
      ]
    ],
    [
      "django/contrib/gis/db/backends/spatialite/operations.py",
      [
        "SpatiaLiteOperations",
        "spatial_ref_sys"
      ]
    ]
  ],
  "get_db_converters": [
    [
      "django/contrib/gis/db/backends/base/operations.py",
      [
        "BaseSpatialOperations",
        "get_db_converters"
      ]
    ],
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "get_db_converters"
      ]
    ],
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "get_db_converters"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "get_db_converters"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "get_db_converters"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "get_db_converters"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Col",
        "get_db_converters"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "get_db_converters"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DurationField",
        "get_db_converters"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ForeignKey",
        "get_db_converters"
      ]
    ]
  ],
  "get_geometry_converter": [
    [
      "django/contrib/gis/db/backends/base/operations.py",
      [
        "BaseSpatialOperations",
        "get_geometry_converter"
      ]
    ],
    [
      "django/contrib/gis/db/backends/mysql/operations.py",
      [
        "MySQLOperations",
        "get_geometry_converter"
      ]
    ],
    [
      "django/contrib/gis/db/backends/oracle/operations.py",
      [
        "OracleOperations",
        "get_geometry_converter"
      ]
    ],
    [
      "django/contrib/gis/db/backends/postgis/operations.py",
      [
        "PostGISOperations",
        "get_geometry_converter"
      ]
    ],
    [
      "django/contrib/gis/db/backends/spatialite/operations.py",
      [
        "SpatiaLiteOperations",
        "get_geometry_converter"
      ]
    ]
  ],
  "get_area_att_for_field": [
    [
      "django/contrib/gis/db/backends/base/operations.py",
      [
        "BaseSpatialOperations",
        "get_area_att_for_field"
      ]
    ],
    [
      "django/contrib/gis/db/backends/oracle/operations.py",
      [
        "OracleOperations",
        "get_area_att_for_field"
      ]
    ],
    [
      "django/contrib/gis/db/backends/postgis/operations.py",
      [
        "PostGISOperations",
        "get_area_att_for_field"
      ]
    ]
  ],
  "get_distance_att_for_field": [
    [
      "django/contrib/gis/db/backends/base/operations.py",
      [
        "BaseSpatialOperations",
        "get_distance_att_for_field"
      ]
    ]
  ],
  "supports_empty_geometry_collection": [
    [
      "django/contrib/gis/db/backends/mysql/features.py",
      [
        "DatabaseFeatures",
        "supports_empty_geometry_collection"
      ]
    ]
  ],
  "supports_geometry_field_unique_index": [
    [
      "django/contrib/gis/db/backends/mysql/features.py",
      [
        "DatabaseFeatures",
        "supports_geometry_field_unique_index"
      ]
    ]
  ],
  "get_geometry_type": [
    [
      "django/contrib/gis/db/backends/mysql/introspection.py",
      [
        "MySQLIntrospection",
        "get_geometry_type"
      ]
    ],
    [
      "django/contrib/gis/db/backends/oracle/introspection.py",
      [
        "OracleIntrospection",
        "get_geometry_type"
      ]
    ],
    [
      "django/contrib/gis/db/backends/postgis/introspection.py",
      [
        "PostGISIntrospection",
        "get_geometry_type"
      ]
    ],
    [
      "django/contrib/gis/db/backends/spatialite/introspection.py",
      [
        "SpatiaLiteIntrospection",
        "get_geometry_type"
      ]
    ]
  ],
  "supports_spatial_index": [
    [
      "django/contrib/gis/db/backends/mysql/introspection.py",
      [
        "MySQLIntrospection",
        "supports_spatial_index"
      ]
    ]
  ],
  "select": [
    [
      "django/contrib/gis/db/backends/mysql/operations.py",
      [
        "MySQLOperations",
        "select"
      ]
    ]
  ],
  "from_text": [
    [
      "django/contrib/gis/db/backends/mysql/operations.py",
      [
        "MySQLOperations",
        "from_text"
      ]
    ]
  ],
  "gis_operators": [
    [
      "django/contrib/gis/db/backends/mysql/operations.py",
      [
        "MySQLOperations",
        "gis_operators"
      ]
    ]
  ],
  "unsupported_functions": [
    [
      "django/contrib/gis/db/backends/mysql/operations.py",
      [
        "MySQLOperations",
        "unsupported_functions"
      ]
    ],
    [
      "django/contrib/gis/db/backends/spatialite/operations.py",
      [
        "SpatiaLiteOperations",
        "unsupported_functions"
      ]
    ]
  ],
  "skip_default": [
    [
      "django/contrib/gis/db/backends/mysql/schema.py",
      [
        "MySQLGISSchemaEditor",
        "skip_default"
      ]
    ],
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "skip_default"
      ]
    ],
    [
      "django/db/backends/mysql/schema.py",
      [
        "DatabaseSchemaEditor",
        "skip_default"
      ]
    ]
  ],
  "column_sql": [
    [
      "django/contrib/gis/db/backends/mysql/schema.py",
      [
        "MySQLGISSchemaEditor",
        "column_sql"
      ]
    ],
    [
      "django/contrib/gis/db/backends/oracle/schema.py",
      [
        "OracleGISSchemaEditor",
        "column_sql"
      ]
    ],
    [
      "django/contrib/gis/db/backends/spatialite/schema.py",
      [
        "SpatialiteSchemaEditor",
        "column_sql"
      ]
    ],
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "column_sql"
      ]
    ]
  ],
  "create_model": [
    [
      "django/contrib/gis/db/backends/mysql/schema.py",
      [
        "MySQLGISSchemaEditor",
        "create_model"
      ]
    ],
    [
      "django/contrib/gis/db/backends/oracle/schema.py",
      [
        "OracleGISSchemaEditor",
        "create_model"
      ]
    ],
    [
      "django/contrib/gis/db/backends/spatialite/schema.py",
      [
        "SpatialiteSchemaEditor",
        "create_model"
      ]
    ],
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "create_model"
      ]
    ],
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "create_model"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "RelatedModelsTests",
        "create_model"
      ]
    ]
  ],
  "add_field": [
    [
      "django/contrib/gis/db/backends/mysql/schema.py",
      [
        "MySQLGISSchemaEditor",
        "add_field"
      ]
    ],
    [
      "django/contrib/gis/db/backends/oracle/schema.py",
      [
        "OracleGISSchemaEditor",
        "add_field"
      ]
    ],
    [
      "django/contrib/gis/db/backends/spatialite/schema.py",
      [
        "SpatialiteSchemaEditor",
        "add_field"
      ]
    ],
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "add_field"
      ]
    ],
    [
      "django/db/backends/mysql/schema.py",
      [
        "DatabaseSchemaEditor",
        "add_field"
      ]
    ],
    [
      "django/db/backends/sqlite3/schema.py",
      [
        "DatabaseSchemaEditor",
        "add_field"
      ]
    ],
    [
      "django/db/models/options.py",
      [
        "Options",
        "add_field"
      ]
    ]
  ],
  "remove_field": [
    [
      "django/contrib/gis/db/backends/mysql/schema.py",
      [
        "MySQLGISSchemaEditor",
        "remove_field"
      ]
    ],
    [
      "django/contrib/gis/db/backends/oracle/schema.py",
      [
        "OracleGISSchemaEditor",
        "remove_field"
      ]
    ],
    [
      "django/contrib/gis/db/backends/spatialite/schema.py",
      [
        "SpatialiteSchemaEditor",
        "remove_field"
      ]
    ],
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "remove_field"
      ]
    ],
    [
      "django/db/backends/oracle/schema.py",
      [
        "DatabaseSchemaEditor",
        "remove_field"
      ]
    ],
    [
      "django/db/backends/sqlite3/schema.py",
      [
        "DatabaseSchemaEditor",
        "remove_field"
      ]
    ]
  ],
  "_create_spatial_index_name": [
    [
      "django/contrib/gis/db/backends/mysql/schema.py",
      [
        "MySQLGISSchemaEditor",
        "_create_spatial_index_name"
      ]
    ],
    [
      "django/contrib/gis/db/backends/oracle/schema.py",
      [
        "OracleGISSchemaEditor",
        "_create_spatial_index_name"
      ]
    ]
  ],
  "create_spatial_indexes": [
    [
      "django/contrib/gis/db/backends/mysql/schema.py",
      [
        "MySQLGISSchemaEditor",
        "create_spatial_indexes"
      ]
    ]
  ],
  "_fix_polygon": [
    [
      "django/contrib/gis/db/backends/oracle/adapter.py",
      [
        "OracleSpatialAdapter",
        "_fix_polygon"
      ]
    ]
  ],
  "_fix_geometry_collection": [
    [
      "django/contrib/gis/db/backends/oracle/adapter.py",
      [
        "OracleSpatialAdapter",
        "_fix_geometry_collection"
      ]
    ]
  ],
  "table_name_col": [
    [
      "django/contrib/gis/db/backends/oracle/models.py",
      [
        "OracleGeometryColumns",
        "table_name_col"
      ]
    ],
    [
      "django/contrib/gis/db/backends/postgis/models.py",
      [
        "PostGISGeometryColumns",
        "table_name_col"
      ]
    ],
    [
      "django/contrib/gis/db/backends/spatialite/models.py",
      [
        "SpatialiteGeometryColumns",
        "table_name_col"
      ]
    ]
  ],
  "geom_col_name": [
    [
      "django/contrib/gis/db/backends/oracle/models.py",
      [
        "OracleGeometryColumns",
        "geom_col_name"
      ]
    ],
    [
      "django/contrib/gis/db/backends/postgis/models.py",
      [
        "PostGISGeometryColumns",
        "geom_col_name"
      ]
    ],
    [
      "django/contrib/gis/db/backends/spatialite/models.py",
      [
        "SpatialiteGeometryColumns",
        "geom_col_name"
      ]
    ]
  ],
  "wkt": [
    [
      "django/contrib/gis/db/backends/oracle/models.py",
      [
        "OracleSpatialRefSys",
        "wkt"
      ]
    ],
    [
      "django/contrib/gis/db/backends/postgis/models.py",
      [
        "PostGISSpatialRefSys",
        "wkt"
      ]
    ],
    [
      "django/contrib/gis/db/backends/spatialite/models.py",
      [
        "SpatialiteSpatialRefSys",
        "wkt"
      ]
    ],
    [
      "django/contrib/gis/gdal/envelope.py",
      [
        "Envelope",
        "wkt"
      ]
    ],
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "wkt"
      ]
    ],
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "wkt"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "wkt"
      ]
    ]
  ],
  "check_relate_argument": [
    [
      "django/contrib/gis/db/backends/oracle/operations.py",
      [
        "SDORelate",
        "check_relate_argument"
      ]
    ]
  ],
  "as_sql": [
    [
      "django/contrib/gis/db/backends/oracle/operations.py",
      [
        "SDORelate",
        "as_sql"
      ]
    ],
    [
      "django/contrib/gis/db/backends/postgis/operations.py",
      [
        "PostGISOperator",
        "as_sql"
      ]
    ],
    [
      "django/contrib/gis/db/backends/spatialite/operations.py",
      [
        "SpatialiteNullCheckOperator",
        "as_sql"
      ]
    ],
    [
      "django/contrib/gis/db/backends/utils.py",
      [
        "SpatialOperator",
        "as_sql"
      ]
    ],
    [
      "django/contrib/gis/db/models/aggregates.py",
      [
        "GeoAggregate",
        "as_sql"
      ]
    ],
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "GeoFuncMixin",
        "as_sql"
      ]
    ],
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "Area",
        "as_sql"
      ]
    ],
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "Length",
        "as_sql"
      ]
    ],
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "RasterBandTransform",
        "as_sql"
      ]
    ],
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "GISLookup",
        "as_sql"
      ]
    ],
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "DistanceLookupFromFunction",
        "as_sql"
      ]
    ],
    [
      "django/contrib/postgres/aggregates/mixins.py",
      [
        "OrderableAggMixin",
        "as_sql"
      ]
    ],
    [
      "django/contrib/postgres/fields/array.py",
      [
        "ArrayLenTransform",
        "as_sql"
      ]
    ],
    [
      "django/contrib/postgres/fields/array.py",
      [
        "IndexTransform",
        "as_sql"
      ]
    ],
    [
      "django/contrib/postgres/fields/array.py",
      [
        "SliceTransform",
        "as_sql"
      ]
    ],
    [
      "django/contrib/postgres/fields/hstore.py",
      [
        "KeyTransform",
        "as_sql"
      ]
    ],
    [
      "django/contrib/postgres/fields/jsonb.py",
      [
        "KeyTransform",
        "as_sql"
      ]
    ],
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "RangeBoundary",
        "as_sql"
      ]
    ],
    [
      "django/contrib/postgres/search.py",
      [
        "SearchVectorExact",
        "as_sql"
      ]
    ],
    [
      "django/contrib/postgres/search.py",
      [
        "SearchConfig",
        "as_sql"
      ]
    ],
    [
      "django/contrib/postgres/search.py",
      [
        "SearchVector",
        "as_sql"
      ]
    ],
    [
      "django/contrib/postgres/search.py",
      [
        "SearchQuery",
        "as_sql"
      ]
    ],
    [
      "django/contrib/postgres/search.py",
      [
        "SearchHeadline",
        "as_sql"
      ]
    ],
    [
      "django/db/backends/mysql/compiler.py",
      [
        "SQLDeleteCompiler",
        "as_sql"
      ]
    ],
    [
      "django/db/models/aggregates.py",
      [
        "Aggregate",
        "as_sql"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "as_sql"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "CombinedExpression",
        "as_sql"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "DurationExpression",
        "as_sql"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "TemporalSubtraction",
        "as_sql"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "ResolvedOuterRef",
        "as_sql"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Func",
        "as_sql"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Value",
        "as_sql"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "DurationValue",
        "as_sql"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "RawSQL",
        "as_sql"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Star",
        "as_sql"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Random",
        "as_sql"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Col",
        "as_sql"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Ref",
        "as_sql"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "ExpressionWrapper",
        "as_sql"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "When",
        "as_sql"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Case",
        "as_sql"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Subquery",
        "as_sql"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Exists",
        "as_sql"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "OrderBy",
        "as_sql"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Window",
        "as_sql"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "WindowFrame",
        "as_sql"
      ]
    ],
    [
      "django/db/models/fields/related_lookups.py",
      [
        "RelatedIn",
        "as_sql"
      ]
    ],
    [
      "django/db/models/fields/related_lookups.py",
      [
        "RelatedLookupMixin",
        "as_sql"
      ]
    ],
    [
      "django/db/models/functions/comparison.py",
      [
        "Cast",
        "as_sql"
      ]
    ],
    [
      "django/db/models/functions/datetime.py",
      [
        "Extract",
        "as_sql"
      ]
    ],
    [
      "django/db/models/functions/datetime.py",
      [
        "TruncBase",
        "as_sql"
      ]
    ],
    [
      "django/db/models/functions/datetime.py",
      [
        "TruncDate",
        "as_sql"
      ]
    ],
    [
      "django/db/models/functions/datetime.py",
      [
        "TruncTime",
        "as_sql"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "Lookup",
        "as_sql"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "BuiltinLookup",
        "as_sql"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "Exact",
        "as_sql"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "In",
        "as_sql"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "IsNull",
        "as_sql"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "Regex",
        "as_sql"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "YearLookup",
        "as_sql"
      ]
    ],
    [
      "django/db/models/query_utils.py",
      [
        "FilteredRelation",
        "as_sql"
      ]
    ],
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "as_sql"
      ]
    ],
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLInsertCompiler",
        "as_sql"
      ]
    ],
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLDeleteCompiler",
        "as_sql"
      ]
    ],
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLUpdateCompiler",
        "as_sql"
      ]
    ],
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLAggregateCompiler",
        "as_sql"
      ]
    ],
    [
      "django/db/models/sql/datastructures.py",
      [
        "Join",
        "as_sql"
      ]
    ],
    [
      "django/db/models/sql/datastructures.py",
      [
        "BaseTable",
        "as_sql"
      ]
    ],
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "as_sql"
      ]
    ],
    [
      "django/db/models/sql/where.py",
      [
        "WhereNode",
        "as_sql"
      ]
    ],
    [
      "django/db/models/sql/where.py",
      [
        "NothingNode",
        "as_sql"
      ]
    ],
    [
      "django/db/models/sql/where.py",
      [
        "ExtraWhere",
        "as_sql"
      ]
    ],
    [
      "django/db/models/sql/where.py",
      [
        "SubqueryConstraint",
        "as_sql"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "Div3Lookup",
        "as_sql"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "Div3Transform",
        "as_sql"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "Mult3BilateralTransform",
        "as_sql"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "LastDigitTransform",
        "as_sql"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "UpperBilateralTransform",
        "as_sql"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "YearTransform",
        "as_sql"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "YearExact",
        "as_sql"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "YearLte",
        "as_sql"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "SQLFuncMixin",
        "as_sql"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "InMonth",
        "as_sql"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "DateTimeTransform",
        "as_sql"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "TrackCallsYearTransform",
        "as_sql"
      ]
    ],
    [
      "tests/foreign_object/models/article.py",
      [
        "ColConstraint",
        "as_sql"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "WhereNodeTest",
        "DummyNode",
        "as_sql"
      ]
    ]
  ],
  "modify_insert_params": [
    [
      "django/contrib/gis/db/backends/oracle/operations.py",
      [
        "OracleOperations",
        "modify_insert_params"
      ]
    ],
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "modify_insert_params"
      ]
    ]
  ],
  "run_geometry_sql": [
    [
      "django/contrib/gis/db/backends/oracle/schema.py",
      [
        "OracleGISSchemaEditor",
        "run_geometry_sql"
      ]
    ]
  ],
  "__conform__": [
    [
      "django/contrib/gis/db/backends/postgis/adapter.py",
      [
        "PostGISAdapter",
        "__conform__"
      ]
    ],
    [
      "django/contrib/gis/db/backends/spatialite/adapter.py",
      [
        "SpatiaLiteAdapter",
        "__conform__"
      ]
    ]
  ],
  "prepare": [
    [
      "django/contrib/gis/db/backends/postgis/adapter.py",
      [
        "PostGISAdapter",
        "prepare"
      ]
    ]
  ],
  "getquoted": [
    [
      "django/contrib/gis/db/backends/postgis/adapter.py",
      [
        "PostGISAdapter",
        "getquoted"
      ]
    ]
  ],
  "prepare_database": [
    [
      "django/contrib/gis/db/backends/postgis/base.py",
      [
        "DatabaseWrapper",
        "prepare_database"
      ]
    ],
    [
      "django/contrib/gis/db/backends/spatialite/base.py",
      [
        "DatabaseWrapper",
        "prepare_database"
      ]
    ],
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "prepare_database"
      ]
    ]
  ],
  "get_field_type": [
    [
      "django/contrib/gis/db/backends/postgis/introspection.py",
      [
        "PostGISIntrospection",
        "get_field_type"
      ]
    ],
    [
      "django/contrib/gis/management/commands/inspectdb.py",
      [
        "Command",
        "get_field_type"
      ]
    ],
    [
      "django/core/management/commands/inspectdb.py",
      [
        "Command",
        "get_field_type"
      ]
    ],
    [
      "django/db/backends/base/introspection.py",
      [
        "BaseDatabaseIntrospection",
        "get_field_type"
      ]
    ],
    [
      "django/db/backends/mysql/introspection.py",
      [
        "DatabaseIntrospection",
        "get_field_type"
      ]
    ],
    [
      "django/db/backends/oracle/introspection.py",
      [
        "DatabaseIntrospection",
        "get_field_type"
      ]
    ],
    [
      "django/db/backends/postgresql/introspection.py",
      [
        "DatabaseIntrospection",
        "get_field_type"
      ]
    ],
    [
      "django/db/backends/sqlite3/introspection.py",
      [
        "DatabaseIntrospection",
        "get_field_type"
      ]
    ]
  ],
  "check_raster": [
    [
      "django/contrib/gis/db/backends/postgis/operations.py",
      [
        "PostGISOperator",
        "check_raster"
      ]
    ]
  ],
  "output_field": [
    [
      "django/contrib/gis/db/backends/postgis/operations.py",
      [
        "ST_Polygon",
        "output_field"
      ]
    ],
    [
      "django/contrib/gis/db/models/aggregates.py",
      [
        "GeoAggregate",
        "output_field"
      ]
    ],
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "GeomOutputGeoFunc",
        "output_field"
      ]
    ],
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "Area",
        "output_field"
      ]
    ],
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "DistanceResultMixin",
        "output_field"
      ]
    ],
    [
      "django/contrib/postgres/aggregates/general.py",
      [
        "ArrayAgg",
        "output_field"
      ]
    ],
    [
      "django/contrib/postgres/fields/array.py",
      [
        "IndexTransform",
        "output_field"
      ]
    ],
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "RangeStartsWith",
        "output_field"
      ]
    ],
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "RangeEndsWith",
        "output_field"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "output_field"
      ]
    ],
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "output_field"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "YearTransform",
        "output_field"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "SQLFuncMixin",
        "output_field"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "DateTimeTransform",
        "output_field"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "TrackCallsYearTransform",
        "output_field"
      ]
    ]
  ],
  "function_names": [
    [
      "django/contrib/gis/db/backends/postgis/operations.py",
      [
        "PostGISOperations",
        "function_names"
      ]
    ]
  ],
  "spatial_version": [
    [
      "django/contrib/gis/db/backends/postgis/operations.py",
      [
        "PostGISOperations",
        "spatial_version"
      ]
    ],
    [
      "django/contrib/gis/db/backends/spatialite/operations.py",
      [
        "SpatiaLiteOperations",
        "spatial_version"
      ]
    ]
  ],
  "_get_postgis_func": [
    [
      "django/contrib/gis/db/backends/postgis/operations.py",
      [
        "PostGISOperations",
        "_get_postgis_func"
      ]
    ]
  ],
  "postgis_geos_version": [
    [
      "django/contrib/gis/db/backends/postgis/operations.py",
      [
        "PostGISOperations",
        "postgis_geos_version"
      ]
    ]
  ],
  "postgis_lib_version": [
    [
      "django/contrib/gis/db/backends/postgis/operations.py",
      [
        "PostGISOperations",
        "postgis_lib_version"
      ]
    ]
  ],
  "postgis_proj_version": [
    [
      "django/contrib/gis/db/backends/postgis/operations.py",
      [
        "PostGISOperations",
        "postgis_proj_version"
      ]
    ]
  ],
  "postgis_version": [
    [
      "django/contrib/gis/db/backends/postgis/operations.py",
      [
        "PostGISOperations",
        "postgis_version"
      ]
    ]
  ],
  "postgis_full_version": [
    [
      "django/contrib/gis/db/backends/postgis/operations.py",
      [
        "PostGISOperations",
        "postgis_full_version"
      ]
    ]
  ],
  "postgis_version_tuple": [
    [
      "django/contrib/gis/db/backends/postgis/operations.py",
      [
        "PostGISOperations",
        "postgis_version_tuple"
      ]
    ]
  ],
  "proj_version_tuple": [
    [
      "django/contrib/gis/db/backends/postgis/operations.py",
      [
        "PostGISOperations",
        "proj_version_tuple"
      ]
    ]
  ],
  "parse_raster": [
    [
      "django/contrib/gis/db/backends/postgis/operations.py",
      [
        "PostGISOperations",
        "parse_raster"
      ]
    ]
  ],
  "distance_expr_for_lookup": [
    [
      "django/contrib/gis/db/backends/postgis/operations.py",
      [
        "PostGISOperations",
        "distance_expr_for_lookup"
      ]
    ]
  ],
  "_normalize_distance_lookup_arg": [
    [
      "django/contrib/gis/db/backends/postgis/operations.py",
      [
        "PostGISOperations",
        "_normalize_distance_lookup_arg"
      ]
    ]
  ],
  "pack": [
    [
      "django/contrib/gis/db/backends/postgis/pgraster.py",
      [
        "pack"
      ]
    ]
  ],
  "unpack": [
    [
      "django/contrib/gis/db/backends/postgis/pgraster.py",
      [
        "unpack"
      ]
    ]
  ],
  "chunk": [
    [
      "django/contrib/gis/db/backends/postgis/pgraster.py",
      [
        "chunk"
      ]
    ]
  ],
  "from_pgraster": [
    [
      "django/contrib/gis/db/backends/postgis/pgraster.py",
      [
        "from_pgraster"
      ]
    ]
  ],
  "to_pgraster": [
    [
      "django/contrib/gis/db/backends/postgis/pgraster.py",
      [
        "to_pgraster"
      ]
    ]
  ],
  "_field_should_be_indexed": [
    [
      "django/contrib/gis/db/backends/postgis/schema.py",
      [
        "PostGISSchemaEditor",
        "_field_should_be_indexed"
      ]
    ],
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_field_should_be_indexed"
      ]
    ],
    [
      "django/db/backends/mysql/schema.py",
      [
        "DatabaseSchemaEditor",
        "_field_should_be_indexed"
      ]
    ],
    [
      "django/db/backends/oracle/schema.py",
      [
        "DatabaseSchemaEditor",
        "_field_should_be_indexed"
      ]
    ]
  ],
  "_create_index_sql": [
    [
      "django/contrib/gis/db/backends/postgis/schema.py",
      [
        "PostGISSchemaEditor",
        "_create_index_sql"
      ]
    ],
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_create_index_sql"
      ]
    ],
    [
      "django/db/backends/postgresql/schema.py",
      [
        "DatabaseSchemaEditor",
        "_create_index_sql"
      ]
    ]
  ],
  "_alter_column_type_sql": [
    [
      "django/contrib/gis/db/backends/postgis/schema.py",
      [
        "PostGISSchemaEditor",
        "_alter_column_type_sql"
      ]
    ],
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_alter_column_type_sql"
      ]
    ],
    [
      "django/db/backends/mysql/schema.py",
      [
        "DatabaseSchemaEditor",
        "_alter_column_type_sql"
      ]
    ],
    [
      "django/db/backends/postgresql/schema.py",
      [
        "DatabaseSchemaEditor",
        "_alter_column_type_sql"
      ]
    ]
  ],
  "get_new_connection": [
    [
      "django/contrib/gis/db/backends/spatialite/base.py",
      [
        "DatabaseWrapper",
        "get_new_connection"
      ]
    ],
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "get_new_connection"
      ]
    ],
    [
      "django/db/backends/mysql/base.py",
      [
        "DatabaseWrapper",
        "get_new_connection"
      ]
    ],
    [
      "django/db/backends/oracle/base.py",
      [
        "DatabaseWrapper",
        "get_new_connection"
      ]
    ],
    [
      "django/db/backends/postgresql/base.py",
      [
        "DatabaseWrapper",
        "get_new_connection"
      ]
    ],
    [
      "django/db/backends/sqlite3/base.py",
      [
        "DatabaseWrapper",
        "get_new_connection"
      ]
    ]
  ],
  "supports_area_geodetic": [
    [
      "django/contrib/gis/db/backends/spatialite/features.py",
      [
        "DatabaseFeatures",
        "supports_area_geodetic"
      ]
    ]
  ],
  "get_constraints": [
    [
      "django/contrib/gis/db/backends/spatialite/introspection.py",
      [
        "SpatiaLiteIntrospection",
        "get_constraints"
      ]
    ],
    [
      "django/db/backends/base/introspection.py",
      [
        "BaseDatabaseIntrospection",
        "get_constraints"
      ]
    ],
    [
      "django/db/backends/mysql/introspection.py",
      [
        "DatabaseIntrospection",
        "get_constraints"
      ]
    ],
    [
      "django/db/backends/oracle/introspection.py",
      [
        "DatabaseIntrospection",
        "get_constraints"
      ]
    ],
    [
      "django/db/backends/postgresql/introspection.py",
      [
        "DatabaseIntrospection",
        "get_constraints"
      ]
    ],
    [
      "django/db/backends/sqlite3/introspection.py",
      [
        "DatabaseIntrospection",
        "get_constraints"
      ]
    ],
    [
      "tests/constraints/tests.py",
      [
        "get_constraints"
      ]
    ],
    [
      "tests/postgres_tests/test_constraints.py",
      [
        "SchemaTests",
        "get_constraints"
      ]
    ],
    [
      "tests/postgres_tests/test_constraints.py",
      [
        "ExclusionConstraintTests",
        "get_constraints"
      ]
    ],
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "SchemaTests",
        "get_constraints"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "get_constraints"
      ]
    ]
  ],
  "_get_spatialite_func": [
    [
      "django/contrib/gis/db/backends/spatialite/operations.py",
      [
        "SpatiaLiteOperations",
        "_get_spatialite_func"
      ]
    ]
  ],
  "geos_version": [
    [
      "django/contrib/gis/db/backends/spatialite/operations.py",
      [
        "SpatiaLiteOperations",
        "geos_version"
      ]
    ],
    [
      "django/contrib/gis/geos/libgeos.py",
      [
        "geos_version"
      ]
    ]
  ],
  "proj4_version": [
    [
      "django/contrib/gis/db/backends/spatialite/operations.py",
      [
        "SpatiaLiteOperations",
        "proj4_version"
      ]
    ]
  ],
  "lwgeom_version": [
    [
      "django/contrib/gis/db/backends/spatialite/operations.py",
      [
        "SpatiaLiteOperations",
        "lwgeom_version"
      ]
    ]
  ],
  "spatialite_version": [
    [
      "django/contrib/gis/db/backends/spatialite/operations.py",
      [
        "SpatiaLiteOperations",
        "spatialite_version"
      ]
    ]
  ],
  "spatialite_version_tuple": [
    [
      "django/contrib/gis/db/backends/spatialite/operations.py",
      [
        "SpatiaLiteOperations",
        "spatialite_version_tuple"
      ]
    ]
  ],
  "remove_geometry_metadata": [
    [
      "django/contrib/gis/db/backends/spatialite/schema.py",
      [
        "SpatialiteSchemaEditor",
        "remove_geometry_metadata"
      ]
    ]
  ],
  "alter_db_table": [
    [
      "django/contrib/gis/db/backends/spatialite/schema.py",
      [
        "SpatialiteSchemaEditor",
        "alter_db_table"
      ]
    ],
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "alter_db_table"
      ]
    ],
    [
      "django/db/backends/sqlite3/schema.py",
      [
        "DatabaseSchemaEditor",
        "alter_db_table"
      ]
    ]
  ],
  "default_template": [
    [
      "django/contrib/gis/db/backends/utils.py",
      [
        "SpatialOperator",
        "default_template"
      ]
    ]
  ],
  "as_oracle": [
    [
      "django/contrib/gis/db/models/aggregates.py",
      [
        "GeoAggregate",
        "as_oracle"
      ]
    ],
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "OracleToleranceMixin",
        "as_oracle"
      ]
    ],
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "AsGeoJSON",
        "as_oracle"
      ]
    ],
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "AsGML",
        "as_oracle"
      ]
    ],
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "BoundingCircle",
        "as_oracle"
      ]
    ],
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "IsValid",
        "as_oracle"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "OrderBy",
        "as_oracle"
      ]
    ],
    [
      "django/db/models/functions/comparison.py",
      [
        "Coalesce",
        "as_oracle"
      ]
    ],
    [
      "django/db/models/functions/comparison.py",
      [
        "NullIf",
        "as_oracle"
      ]
    ],
    [
      "django/db/models/functions/math.py",
      [
        "Ceil",
        "as_oracle"
      ]
    ],
    [
      "django/db/models/functions/math.py",
      [
        "Cot",
        "as_oracle"
      ]
    ],
    [
      "django/db/models/functions/math.py",
      [
        "Degrees",
        "as_oracle"
      ]
    ],
    [
      "django/db/models/functions/math.py",
      [
        "Pi",
        "as_oracle"
      ]
    ],
    [
      "django/db/models/functions/math.py",
      [
        "Radians",
        "as_oracle"
      ]
    ],
    [
      "django/db/models/functions/mixins.py",
      [
        "FixDurationInputMixin",
        "as_oracle"
      ]
    ],
    [
      "django/db/models/functions/text.py",
      [
        "OracleHashMixin",
        "as_oracle"
      ]
    ],
    [
      "django/db/models/functions/text.py",
      [
        "Chr",
        "as_oracle"
      ]
    ],
    [
      "django/db/models/functions/text.py",
      [
        "Left",
        "as_oracle"
      ]
    ],
    [
      "django/db/models/functions/text.py",
      [
        "Repeat",
        "as_oracle"
      ]
    ],
    [
      "django/db/models/functions/text.py",
      [
        "Reverse",
        "as_oracle"
      ]
    ],
    [
      "django/db/models/functions/text.py",
      [
        "SHA224",
        "as_oracle"
      ]
    ],
    [
      "django/db/models/functions/text.py",
      [
        "Substr",
        "as_oracle"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "Lookup",
        "as_oracle"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "Div3Lookup",
        "as_oracle"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "Div3Transform",
        "as_oracle"
      ]
    ]
  ],
  "resolve_expression": [
    [
      "django/contrib/gis/db/models/aggregates.py",
      [
        "GeoAggregate",
        "resolve_expression"
      ]
    ],
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "GeoFuncMixin",
        "resolve_expression"
      ]
    ],
    [
      "django/contrib/postgres/aggregates/mixins.py",
      [
        "OrderableAggMixin",
        "resolve_expression"
      ]
    ],
    [
      "django/contrib/postgres/search.py",
      [
        "SearchVector",
        "resolve_expression"
      ]
    ],
    [
      "django/db/models/aggregates.py",
      [
        "Aggregate",
        "resolve_expression"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "resolve_expression"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "CombinedExpression",
        "resolve_expression"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "F",
        "resolve_expression"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "ResolvedOuterRef",
        "resolve_expression"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "OuterRef",
        "resolve_expression"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Func",
        "resolve_expression"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Value",
        "resolve_expression"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "RawSQL",
        "resolve_expression"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Ref",
        "resolve_expression"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "When",
        "resolve_expression"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Case",
        "resolve_expression"
      ]
    ],
    [
      "django/db/models/functions/datetime.py",
      [
        "Extract",
        "resolve_expression"
      ]
    ],
    [
      "django/db/models/functions/datetime.py",
      [
        "TruncBase",
        "resolve_expression"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "resolve_expression"
      ]
    ],
    [
      "django/db/models/query_utils.py",
      [
        "Q",
        "resolve_expression"
      ]
    ],
    [
      "django/db/models/query_utils.py",
      [
        "FilteredRelation",
        "resolve_expression"
      ]
    ],
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "resolve_expression"
      ]
    ],
    [
      "django/db/models/sql/where.py",
      [
        "WhereNode",
        "resolve_expression"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "RegroupNode",
        "resolve_expression"
      ]
    ]
  ],
  "convert_value": [
    [
      "django/contrib/gis/db/models/aggregates.py",
      [
        "Extent",
        "convert_value"
      ]
    ],
    [
      "django/contrib/gis/db/models/aggregates.py",
      [
        "Extent3D",
        "convert_value"
      ]
    ],
    [
      "django/contrib/postgres/aggregates/general.py",
      [
        "ArrayAgg",
        "convert_value"
      ]
    ],
    [
      "django/contrib/postgres/aggregates/general.py",
      [
        "JSONBAgg",
        "convert_value"
      ]
    ],
    [
      "django/contrib/postgres/aggregates/general.py",
      [
        "StringAgg",
        "convert_value"
      ]
    ],
    [
      "django/contrib/postgres/aggregates/statistics.py",
      [
        "RegrCount",
        "convert_value"
      ]
    ],
    [
      "django/db/models/aggregates.py",
      [
        "Count",
        "convert_value"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "convert_value"
      ]
    ],
    [
      "django/db/models/functions/datetime.py",
      [
        "TruncBase",
        "convert_value"
      ]
    ],
    [
      "django/db/models/functions/text.py",
      [
        "BytesToCharFieldConversionMixin",
        "convert_value"
      ]
    ]
  ],
  "get_srid_info": [
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "get_srid_info"
      ]
    ]
  ],
  "deconstruct": [
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "BaseSpatialField",
        "deconstruct"
      ]
    ],
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "GeometryField",
        "deconstruct"
      ]
    ],
    [
      "django/contrib/postgres/constraints.py",
      [
        "ExclusionConstraint",
        "deconstruct"
      ]
    ],
    [
      "django/contrib/postgres/fields/array.py",
      [
        "ArrayField",
        "deconstruct"
      ]
    ],
    [
      "django/contrib/postgres/fields/jsonb.py",
      [
        "JSONField",
        "deconstruct"
      ]
    ],
    [
      "django/contrib/postgres/indexes.py",
      [
        "BloomIndex",
        "deconstruct"
      ]
    ],
    [
      "django/contrib/postgres/indexes.py",
      [
        "BrinIndex",
        "deconstruct"
      ]
    ],
    [
      "django/contrib/postgres/indexes.py",
      [
        "BTreeIndex",
        "deconstruct"
      ]
    ],
    [
      "django/contrib/postgres/indexes.py",
      [
        "GinIndex",
        "deconstruct"
      ]
    ],
    [
      "django/contrib/postgres/indexes.py",
      [
        "GistIndex",
        "deconstruct"
      ]
    ],
    [
      "django/contrib/postgres/indexes.py",
      [
        "HashIndex",
        "deconstruct"
      ]
    ],
    [
      "django/contrib/postgres/indexes.py",
      [
        "SpGistIndex",
        "deconstruct"
      ]
    ],
    [
      "django/db/migrations/operations/base.py",
      [
        "Operation",
        "deconstruct"
      ]
    ],
    [
      "django/db/migrations/operations/fields.py",
      [
        "AddField",
        "deconstruct"
      ]
    ],
    [
      "django/db/migrations/operations/fields.py",
      [
        "RemoveField",
        "deconstruct"
      ]
    ],
    [
      "django/db/migrations/operations/fields.py",
      [
        "AlterField",
        "deconstruct"
      ]
    ],
    [
      "django/db/migrations/operations/fields.py",
      [
        "RenameField",
        "deconstruct"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "CreateModel",
        "deconstruct"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "DeleteModel",
        "deconstruct"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "RenameModel",
        "deconstruct"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterModelTable",
        "deconstruct"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterTogetherOptionOperation",
        "deconstruct"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterOrderWithRespectTo",
        "deconstruct"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterModelOptions",
        "deconstruct"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterModelManagers",
        "deconstruct"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AddIndex",
        "deconstruct"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "RemoveIndex",
        "deconstruct"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AddConstraint",
        "deconstruct"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "RemoveConstraint",
        "deconstruct"
      ]
    ],
    [
      "django/db/migrations/operations/special.py",
      [
        "SeparateDatabaseAndState",
        "deconstruct"
      ]
    ],
    [
      "django/db/migrations/operations/special.py",
      [
        "RunSQL",
        "deconstruct"
      ]
    ],
    [
      "django/db/migrations/operations/special.py",
      [
        "RunPython",
        "deconstruct"
      ]
    ],
    [
      "django/db/models/constraints.py",
      [
        "BaseConstraint",
        "deconstruct"
      ]
    ],
    [
      "django/db/models/constraints.py",
      [
        "CheckConstraint",
        "deconstruct"
      ]
    ],
    [
      "django/db/models/constraints.py",
      [
        "UniqueConstraint",
        "deconstruct"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "deconstruct"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DateField",
        "deconstruct"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DecimalField",
        "deconstruct"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "EmailField",
        "deconstruct"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "FilePathField",
        "deconstruct"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "IPAddressField",
        "deconstruct"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "GenericIPAddressField",
        "deconstruct"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "NullBooleanField",
        "deconstruct"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "SlugField",
        "deconstruct"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "TimeField",
        "deconstruct"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "URLField",
        "deconstruct"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "BinaryField",
        "deconstruct"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "UUIDField",
        "deconstruct"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "AutoFieldMixin",
        "deconstruct"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "FileField",
        "deconstruct"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "ImageField",
        "deconstruct"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "RelatedField",
        "deconstruct"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ForeignObject",
        "deconstruct"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ForeignKey",
        "deconstruct"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "OneToOneField",
        "deconstruct"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ManyToManyField",
        "deconstruct"
      ]
    ],
    [
      "django/db/models/indexes.py",
      [
        "Index",
        "deconstruct"
      ]
    ],
    [
      "django/db/models/manager.py",
      [
        "BaseManager",
        "deconstruct"
      ]
    ],
    [
      "django/db/models/query_utils.py",
      [
        "Q",
        "deconstruct"
      ]
    ],
    [
      "django/utils/deconstruct.py",
      [
        "deconstructible",
        "decorator",
        "deconstruct"
      ]
    ],
    [
      "tests/custom_migration_operations/more_operations.py",
      [
        "TestOperation",
        "deconstruct"
      ]
    ],
    [
      "tests/custom_migration_operations/operations.py",
      [
        "TestOperation",
        "deconstruct"
      ]
    ],
    [
      "tests/custom_migration_operations/operations.py",
      [
        "ArgsOperation",
        "deconstruct"
      ]
    ],
    [
      "tests/custom_migration_operations/operations.py",
      [
        "KwargsOperation",
        "deconstruct"
      ]
    ],
    [
      "tests/custom_migration_operations/operations.py",
      [
        "ArgsKwargsOperation",
        "deconstruct"
      ]
    ],
    [
      "tests/custom_migration_operations/operations.py",
      [
        "ExpandArgsOperation",
        "deconstruct"
      ]
    ],
    [
      "tests/migrations/test_autodetector.py",
      [
        "DeconstructibleObject",
        "deconstruct"
      ]
    ],
    [
      "tests/migrations/test_writer.py",
      [
        "DeconstructibleInstances",
        "deconstruct"
      ]
    ],
    [
      "tests/migrations/test_writer.py",
      [
        "Money",
        "deconstruct"
      ]
    ],
    [
      "tests/postgres_tests/fields.py",
      [
        "try_",
        "except_ImportError_",
        "DummyArrayField",
        "deconstruct"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "TeamField",
        "deconstruct"
      ]
    ]
  ],
  "db_type": [
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "BaseSpatialField",
        "db_type"
      ]
    ],
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "RasterField",
        "db_type"
      ]
    ],
    [
      "django/contrib/postgres/fields/array.py",
      [
        "ArrayField",
        "db_type"
      ]
    ],
    [
      "django/contrib/postgres/fields/citext.py",
      [
        "CIText",
        "db_type"
      ]
    ],
    [
      "django/contrib/postgres/fields/hstore.py",
      [
        "HStoreField",
        "db_type"
      ]
    ],
    [
      "django/contrib/postgres/fields/jsonb.py",
      [
        "JSONField",
        "db_type"
      ]
    ],
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "IntegerRangeField",
        "db_type"
      ]
    ],
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "BigIntegerRangeField",
        "db_type"
      ]
    ],
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "DecimalRangeField",
        "db_type"
      ]
    ],
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "DateTimeRangeField",
        "db_type"
      ]
    ],
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "DateRangeField",
        "db_type"
      ]
    ],
    [
      "django/contrib/postgres/search.py",
      [
        "SearchVectorField",
        "db_type"
      ]
    ],
    [
      "django/contrib/postgres/search.py",
      [
        "SearchQueryField",
        "db_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "db_type"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "RelatedField",
        "db_type"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ForeignKey",
        "db_type"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ManyToManyField",
        "db_type"
      ]
    ],
    [
      "django/db/models/fields/reverse_related.py",
      [
        "ForeignObjectRel",
        "db_type"
      ]
    ],
    [
      "tests/field_subclassing/fields.py",
      [
        "CustomTypedField",
        "db_type"
      ]
    ],
    [
      "tests/gis_tests/geoapp/models.py",
      [
        "NonConcreteField",
        "db_type"
      ]
    ],
    [
      "tests/schema/fields.py",
      [
        "MediumBlobField",
        "db_type"
      ]
    ]
  ],
  "units_name": [
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "BaseSpatialField",
        "units_name"
      ]
    ]
  ],
  "geodetic": [
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "BaseSpatialField",
        "geodetic"
      ]
    ]
  ],
  "get_placeholder": [
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "BaseSpatialField",
        "get_placeholder"
      ]
    ],
    [
      "django/contrib/postgres/fields/array.py",
      [
        "ArrayField",
        "get_placeholder"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "BinaryField",
        "get_placeholder"
      ]
    ]
  ],
  "get_srid": [
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "BaseSpatialField",
        "get_srid"
      ]
    ]
  ],
  "get_db_prep_value": [
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "BaseSpatialField",
        "get_db_prep_value"
      ]
    ],
    [
      "django/contrib/gis/db/models/sql/conversion.py",
      [
        "AreaField",
        "get_db_prep_value"
      ]
    ],
    [
      "django/contrib/gis/db/models/sql/conversion.py",
      [
        "DistanceField",
        "get_db_prep_value"
      ]
    ],
    [
      "django/contrib/postgres/fields/array.py",
      [
        "ArrayField",
        "get_db_prep_value"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "get_db_prep_value"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DateField",
        "get_db_prep_value"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DateTimeField",
        "get_db_prep_value"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DurationField",
        "get_db_prep_value"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "GenericIPAddressField",
        "get_db_prep_value"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "TimeField",
        "get_db_prep_value"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "BinaryField",
        "get_db_prep_value"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "UUIDField",
        "get_db_prep_value"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "AutoFieldMixin",
        "get_db_prep_value"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ForeignKey",
        "get_db_prep_value"
      ]
    ],
    [
      "tests/custom_pk/fields.py",
      [
        "MyAutoField",
        "get_db_prep_value"
      ]
    ]
  ],
  "get_raster_prep_value": [
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "BaseSpatialField",
        "get_raster_prep_value"
      ]
    ]
  ],
  "get_prep_value": [
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "BaseSpatialField",
        "get_prep_value"
      ]
    ],
    [
      "django/contrib/gis/db/models/sql/conversion.py",
      [
        "AreaField",
        "get_prep_value"
      ]
    ],
    [
      "django/contrib/gis/db/models/sql/conversion.py",
      [
        "DistanceField",
        "get_prep_value"
      ]
    ],
    [
      "django/contrib/postgres/fields/hstore.py",
      [
        "HStoreField",
        "get_prep_value"
      ]
    ],
    [
      "django/contrib/postgres/fields/jsonb.py",
      [
        "JSONField",
        "get_prep_value"
      ]
    ],
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "RangeField",
        "get_prep_value"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "get_prep_value"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "BooleanField",
        "get_prep_value"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "CharField",
        "get_prep_value"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DateField",
        "get_prep_value"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DateTimeField",
        "get_prep_value"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DecimalField",
        "get_prep_value"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "FilePathField",
        "get_prep_value"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "FloatField",
        "get_prep_value"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "IntegerField",
        "get_prep_value"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "IPAddressField",
        "get_prep_value"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "GenericIPAddressField",
        "get_prep_value"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "TextField",
        "get_prep_value"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "TimeField",
        "get_prep_value"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "UUIDField",
        "get_prep_value"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "FileField",
        "get_prep_value"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ForeignKey",
        "get_prep_value"
      ]
    ],
    [
      "tests/lookup/models.py",
      [
        "NulledTextField",
        "get_prep_value"
      ]
    ],
    [
      "tests/postgres_tests/fields.py",
      [
        "EnumField",
        "get_prep_value"
      ]
    ],
    [
      "tests/postgres_tests/models.py",
      [
        "TagField",
        "get_prep_value"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_add_field_default_transform",
        "TestTransformField",
        "get_prep_value"
      ]
    ]
  ],
  "formfield": [
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "GeometryField",
        "formfield"
      ]
    ],
    [
      "django/contrib/postgres/fields/array.py",
      [
        "ArrayField",
        "formfield"
      ]
    ],
    [
      "django/contrib/postgres/fields/hstore.py",
      [
        "HStoreField",
        "formfield"
      ]
    ],
    [
      "django/contrib/postgres/fields/jsonb.py",
      [
        "JSONField",
        "formfield"
      ]
    ],
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "RangeField",
        "formfield"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "formfield"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "BooleanField",
        "formfield"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "CharField",
        "formfield"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DateField",
        "formfield"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DateTimeField",
        "formfield"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DecimalField",
        "formfield"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DurationField",
        "formfield"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "EmailField",
        "formfield"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "FilePathField",
        "formfield"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "FloatField",
        "formfield"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "IntegerField",
        "formfield"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "BigIntegerField",
        "formfield"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "GenericIPAddressField",
        "formfield"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "PositiveBigIntegerField",
        "formfield"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "PositiveIntegerField",
        "formfield"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "PositiveSmallIntegerField",
        "formfield"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "SlugField",
        "formfield"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "TextField",
        "formfield"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "TimeField",
        "formfield"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "URLField",
        "formfield"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "UUIDField",
        "formfield"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "AutoFieldMixin",
        "formfield"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "FileField",
        "formfield"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "ImageField",
        "formfield"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "RelatedField",
        "formfield"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ForeignKey",
        "formfield"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "OneToOneField",
        "formfield"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ManyToManyField",
        "formfield"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "MarkupField",
        "formfield"
      ]
    ]
  ],
  "select_format": [
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "GeometryField",
        "select_format"
      ]
    ],
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "ExtentField",
        "select_format"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "select_format"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Exists",
        "select_format"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "select_format"
      ]
    ]
  ],
  "_check_connection": [
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "RasterField",
        "_check_connection"
      ]
    ]
  ],
  "from_db_value": [
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "RasterField",
        "from_db_value"
      ]
    ],
    [
      "django/contrib/gis/db/models/sql/conversion.py",
      [
        "AreaField",
        "from_db_value"
      ]
    ],
    [
      "django/contrib/gis/db/models/sql/conversion.py",
      [
        "DistanceField",
        "from_db_value"
      ]
    ],
    [
      "tests/custom_pk/fields.py",
      [
        "MyAutoField",
        "from_db_value"
      ]
    ],
    [
      "tests/from_db_value/models.py",
      [
        "CashField",
        "from_db_value"
      ]
    ],
    [
      "tests/postgres_tests/models.py",
      [
        "TagField",
        "from_db_value"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "TeamField",
        "from_db_value"
      ]
    ]
  ],
  "get_transform": [
    [
      "django/contrib/gis/db/models/fields.py",
      [
        "RasterField",
        "get_transform"
      ]
    ],
    [
      "django/contrib/postgres/fields/array.py",
      [
        "ArrayField",
        "get_transform"
      ]
    ],
    [
      "django/contrib/postgres/fields/hstore.py",
      [
        "HStoreField",
        "get_transform"
      ]
    ],
    [
      "django/contrib/postgres/fields/jsonb.py",
      [
        "JSONField",
        "get_transform"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "get_transform"
      ]
    ],
    [
      "django/db/models/query_utils.py",
      [
        "RegisterLookupMixin",
        "get_transform"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "CustomField",
        "get_transform"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "TrackCallsYearTransform",
        "get_transform"
      ]
    ]
  ],
  "geo_field": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "GeoFuncMixin",
        "geo_field"
      ]
    ]
  ],
  "_handle_param": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "GeoFuncMixin",
        "_handle_param"
      ]
    ]
  ],
  "as_sqlite": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "SQLiteDecimalToFloatMixin",
        "as_sqlite"
      ]
    ],
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "Area",
        "as_sqlite"
      ]
    ],
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "Distance",
        "as_sqlite"
      ]
    ],
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "Length",
        "as_sqlite"
      ]
    ],
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "Perimeter",
        "as_sqlite"
      ]
    ],
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "Translate",
        "as_sqlite"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "SQLiteNumericMixin",
        "as_sqlite"
      ]
    ],
    [
      "django/db/models/functions/comparison.py",
      [
        "Cast",
        "as_sqlite"
      ]
    ],
    [
      "django/db/models/functions/comparison.py",
      [
        "Greatest",
        "as_sqlite"
      ]
    ],
    [
      "django/db/models/functions/comparison.py",
      [
        "Least",
        "as_sqlite"
      ]
    ],
    [
      "django/db/models/functions/math.py",
      [
        "ATan2",
        "as_sqlite"
      ]
    ],
    [
      "django/db/models/functions/math.py",
      [
        "Log",
        "as_sqlite"
      ]
    ],
    [
      "django/db/models/functions/text.py",
      [
        "Chr",
        "as_sqlite"
      ]
    ],
    [
      "django/db/models/functions/text.py",
      [
        "ConcatPair",
        "as_sqlite"
      ]
    ],
    [
      "django/db/models/functions/text.py",
      [
        "Left",
        "as_sqlite"
      ]
    ],
    [
      "django/db/models/functions/text.py",
      [
        "Ord",
        "as_sqlite"
      ]
    ],
    [
      "django/db/models/functions/text.py",
      [
        "Substr",
        "as_sqlite"
      ]
    ]
  ],
  "source_is_geography": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "DistanceResultMixin",
        "source_is_geography"
      ]
    ]
  ],
  "as_postgresql": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "Distance",
        "as_postgresql"
      ]
    ],
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "Length",
        "as_postgresql"
      ]
    ],
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "Perimeter",
        "as_postgresql"
      ]
    ],
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "DateTimeRangeContains",
        "as_postgresql"
      ]
    ],
    [
      "django/db/models/functions/comparison.py",
      [
        "Cast",
        "as_postgresql"
      ]
    ],
    [
      "django/db/models/functions/datetime.py",
      [
        "Now",
        "as_postgresql"
      ]
    ],
    [
      "django/db/models/functions/mixins.py",
      [
        "FixDecimalInputMixin",
        "as_postgresql"
      ]
    ],
    [
      "django/db/models/functions/text.py",
      [
        "PostgreSQLSHAMixin",
        "as_postgresql"
      ]
    ],
    [
      "django/db/models/functions/text.py",
      [
        "StrIndex",
        "as_postgresql"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "PostgresOperatorLookup",
        "as_postgresql"
      ]
    ]
  ],
  "as_mysql": [
    [
      "django/contrib/gis/db/models/functions.py",
      [
        "GeoHash",
        "as_mysql"
      ]
    ],
    [
      "django/db/models/functions/comparison.py",
      [
        "Cast",
        "as_mysql"
      ]
    ],
    [
      "django/db/models/functions/mixins.py",
      [
        "FixDurationInputMixin",
        "as_mysql"
      ]
    ],
    [
      "django/db/models/functions/text.py",
      [
        "MySQLSHA2Mixin",
        "as_mysql"
      ]
    ],
    [
      "django/db/models/functions/text.py",
      [
        "Chr",
        "as_mysql"
      ]
    ],
    [
      "django/db/models/functions/text.py",
      [
        "ConcatPair",
        "as_mysql"
      ]
    ],
    [
      "django/db/models/functions/text.py",
      [
        "Length",
        "as_mysql"
      ]
    ],
    [
      "django/db/models/functions/text.py",
      [
        "Ord",
        "as_mysql"
      ]
    ]
  ],
  "process_rhs_params": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "GISLookup",
        "process_rhs_params"
      ]
    ],
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "DistanceLookupBase",
        "process_rhs_params"
      ]
    ]
  ],
  "process_band_indices": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "GISLookup",
        "process_band_indices"
      ]
    ]
  ],
  "get_db_prep_lookup": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "GISLookup",
        "get_db_prep_lookup"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "Lookup",
        "get_db_prep_lookup"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "FieldGetDbPrepValueMixin",
        "get_db_prep_lookup"
      ]
    ]
  ],
  "process_rhs": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "GISLookup",
        "process_rhs"
      ]
    ],
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "RelateLookup",
        "process_rhs"
      ]
    ],
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "DWithinLookup",
        "process_rhs"
      ]
    ],
    [
      "django/contrib/postgres/fields/array.py",
      [
        "ArrayCastRHSMixin",
        "process_rhs"
      ]
    ],
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "DateTimeRangeContains",
        "process_rhs"
      ]
    ],
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "RangeContainedBy",
        "process_rhs"
      ]
    ],
    [
      "django/contrib/postgres/lookups.py",
      [
        "JSONExact",
        "process_rhs"
      ]
    ],
    [
      "django/contrib/postgres/search.py",
      [
        "SearchVectorExact",
        "process_rhs"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "Lookup",
        "process_rhs"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "FieldGetDbPrepValueIterableMixin",
        "process_rhs"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "Exact",
        "process_rhs"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "IExact",
        "process_rhs"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "In",
        "process_rhs"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "PatternLookup",
        "process_rhs"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "UUIDTextMixin",
        "process_rhs"
      ]
    ]
  ],
  "get_rhs_op": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "GISLookup",
        "get_rhs_op"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "BuiltinLookup",
        "get_rhs_op"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "In",
        "get_rhs_op"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "PatternLookup",
        "get_rhs_op"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "Range",
        "get_rhs_op"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "Exactly",
        "get_rhs_op"
      ]
    ]
  ],
  "process_distance": [
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "DistanceLookupBase",
        "process_distance"
      ]
    ],
    [
      "django/contrib/gis/db/models/lookups.py",
      [
        "DWithinLookup",
        "process_distance"
      ]
    ]
  ],
  "georss_coords": [
    [
      "django/contrib/gis/feeds.py",
      [
        "GeoFeedMixin",
        "georss_coords"
      ]
    ]
  ],
  "add_georss_point": [
    [
      "django/contrib/gis/feeds.py",
      [
        "GeoFeedMixin",
        "add_georss_point"
      ]
    ]
  ],
  "add_georss_element": [
    [
      "django/contrib/gis/feeds.py",
      [
        "GeoFeedMixin",
        "add_georss_element"
      ]
    ]
  ],
  "rss_attributes": [
    [
      "django/contrib/gis/feeds.py",
      [
        "GeoRSSFeed",
        "rss_attributes"
      ]
    ],
    [
      "django/contrib/gis/feeds.py",
      [
        "W3CGeoFeed",
        "rss_attributes"
      ]
    ],
    [
      "django/utils/feedgenerator.py",
      [
        "RssFeed",
        "rss_attributes"
      ]
    ]
  ],
  "add_item_elements": [
    [
      "django/contrib/gis/feeds.py",
      [
        "GeoRSSFeed",
        "add_item_elements"
      ]
    ],
    [
      "django/contrib/gis/feeds.py",
      [
        "GeoAtom1Feed",
        "add_item_elements"
      ]
    ],
    [
      "django/contrib/gis/feeds.py",
      [
        "W3CGeoFeed",
        "add_item_elements"
      ]
    ],
    [
      "django/utils/feedgenerator.py",
      [
        "SyndicationFeed",
        "add_item_elements"
      ]
    ],
    [
      "django/utils/feedgenerator.py",
      [
        "RssUserland091Feed",
        "add_item_elements"
      ]
    ],
    [
      "django/utils/feedgenerator.py",
      [
        "Rss201rev2Feed",
        "add_item_elements"
      ]
    ],
    [
      "django/utils/feedgenerator.py",
      [
        "Atom1Feed",
        "add_item_elements"
      ]
    ],
    [
      "tests/syndication_tests/feeds.py",
      [
        "MyCustomAtom1Feed",
        "add_item_elements"
      ]
    ]
  ],
  "add_root_elements": [
    [
      "django/contrib/gis/feeds.py",
      [
        "GeoRSSFeed",
        "add_root_elements"
      ]
    ],
    [
      "django/contrib/gis/feeds.py",
      [
        "GeoAtom1Feed",
        "add_root_elements"
      ]
    ],
    [
      "django/contrib/gis/feeds.py",
      [
        "W3CGeoFeed",
        "add_root_elements"
      ]
    ],
    [
      "django/utils/feedgenerator.py",
      [
        "SyndicationFeed",
        "add_root_elements"
      ]
    ],
    [
      "django/utils/feedgenerator.py",
      [
        "RssFeed",
        "add_root_elements"
      ]
    ],
    [
      "django/utils/feedgenerator.py",
      [
        "Atom1Feed",
        "add_root_elements"
      ]
    ],
    [
      "tests/syndication_tests/feeds.py",
      [
        "MyCustomAtom1Feed",
        "add_root_elements"
      ]
    ]
  ],
  "root_attributes": [
    [
      "django/contrib/gis/feeds.py",
      [
        "GeoAtom1Feed",
        "root_attributes"
      ]
    ],
    [
      "django/utils/feedgenerator.py",
      [
        "SyndicationFeed",
        "root_attributes"
      ]
    ],
    [
      "django/utils/feedgenerator.py",
      [
        "Atom1Feed",
        "root_attributes"
      ]
    ],
    [
      "tests/syndication_tests/feeds.py",
      [
        "MyCustomAtom1Feed",
        "root_attributes"
      ]
    ]
  ],
  "feed_extra_kwargs": [
    [
      "django/contrib/gis/feeds.py",
      [
        "Feed",
        "feed_extra_kwargs"
      ]
    ],
    [
      "django/contrib/syndication/views.py",
      [
        "Feed",
        "feed_extra_kwargs"
      ]
    ]
  ],
  "item_extra_kwargs": [
    [
      "django/contrib/gis/feeds.py",
      [
        "Feed",
        "item_extra_kwargs"
      ]
    ],
    [
      "django/contrib/syndication/views.py",
      [
        "Feed",
        "item_extra_kwargs"
      ]
    ]
  ],
  "serialize": [
    [
      "django/contrib/gis/forms/widgets.py",
      [
        "BaseGeometryWidget",
        "serialize"
      ]
    ],
    [
      "django/contrib/gis/forms/widgets.py",
      [
        "OpenLayersWidget",
        "serialize"
      ]
    ],
    [
      "django/contrib/postgres/serializers.py",
      [
        "RangeSerializer",
        "serialize"
      ]
    ],
    [
      "django/core/serializers/__init__.py",
      [
        "serialize"
      ]
    ],
    [
      "django/core/serializers/base.py",
      [
        "Serializer",
        "serialize"
      ]
    ],
    [
      "django/db/migrations/serializer.py",
      [
        "BaseSerializer",
        "serialize"
      ]
    ],
    [
      "django/db/migrations/serializer.py",
      [
        "BaseSequenceSerializer",
        "serialize"
      ]
    ],
    [
      "django/db/migrations/serializer.py",
      [
        "BaseSimpleSerializer",
        "serialize"
      ]
    ],
    [
      "django/db/migrations/serializer.py",
      [
        "ChoicesSerializer",
        "serialize"
      ]
    ],
    [
      "django/db/migrations/serializer.py",
      [
        "DateTimeSerializer",
        "serialize"
      ]
    ],
    [
      "django/db/migrations/serializer.py",
      [
        "DatetimeDatetimeSerializer",
        "serialize"
      ]
    ],
    [
      "django/db/migrations/serializer.py",
      [
        "DecimalSerializer",
        "serialize"
      ]
    ],
    [
      "django/db/migrations/serializer.py",
      [
        "DeconstructableSerializer",
        "serialize"
      ]
    ],
    [
      "django/db/migrations/serializer.py",
      [
        "DictionarySerializer",
        "serialize"
      ]
    ],
    [
      "django/db/migrations/serializer.py",
      [
        "EnumSerializer",
        "serialize"
      ]
    ],
    [
      "django/db/migrations/serializer.py",
      [
        "FloatSerializer",
        "serialize"
      ]
    ],
    [
      "django/db/migrations/serializer.py",
      [
        "FunctionTypeSerializer",
        "serialize"
      ]
    ],
    [
      "django/db/migrations/serializer.py",
      [
        "FunctoolsPartialSerializer",
        "serialize"
      ]
    ],
    [
      "django/db/migrations/serializer.py",
      [
        "IterableSerializer",
        "serialize"
      ]
    ],
    [
      "django/db/migrations/serializer.py",
      [
        "ModelFieldSerializer",
        "serialize"
      ]
    ],
    [
      "django/db/migrations/serializer.py",
      [
        "ModelManagerSerializer",
        "serialize"
      ]
    ],
    [
      "django/db/migrations/serializer.py",
      [
        "OperationSerializer",
        "serialize"
      ]
    ],
    [
      "django/db/migrations/serializer.py",
      [
        "RegexSerializer",
        "serialize"
      ]
    ],
    [
      "django/db/migrations/serializer.py",
      [
        "SettingsReferenceSerializer",
        "serialize"
      ]
    ],
    [
      "django/db/migrations/serializer.py",
      [
        "TypeSerializer",
        "serialize"
      ]
    ],
    [
      "django/db/migrations/serializer.py",
      [
        "UUIDSerializer",
        "serialize"
      ]
    ],
    [
      "django/db/migrations/writer.py",
      [
        "OperationWriter",
        "serialize"
      ]
    ],
    [
      "django/db/migrations/writer.py",
      [
        "MigrationWriter",
        "serialize"
      ]
    ],
    [
      "django/http/response.py",
      [
        "HttpResponse",
        "serialize"
      ]
    ],
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "GeometryWidgetTests",
        "test_custom_serialization_widget",
        "CustomGeometryWidget",
        "serialize"
      ]
    ],
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "serialize"
      ]
    ]
  ],
  "deserialize": [
    [
      "django/contrib/gis/forms/widgets.py",
      [
        "BaseGeometryWidget",
        "deserialize"
      ]
    ],
    [
      "django/contrib/gis/forms/widgets.py",
      [
        "OpenLayersWidget",
        "deserialize"
      ]
    ],
    [
      "django/core/serializers/__init__.py",
      [
        "deserialize"
      ]
    ],
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "GeometryWidgetTests",
        "test_custom_serialization_widget",
        "CustomGeometryWidget",
        "deserialize"
      ]
    ]
  ],
  "__len__": [
    [
      "django/contrib/gis/gdal/datasource.py",
      [
        "DataSource",
        "__len__"
      ]
    ],
    [
      "django/contrib/gis/gdal/feature.py",
      [
        "Feature",
        "__len__"
      ]
    ],
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "LineString",
        "__len__"
      ]
    ],
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "Polygon",
        "__len__"
      ]
    ],
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "GeometryCollection",
        "__len__"
      ]
    ],
    [
      "django/contrib/gis/gdal/layer.py",
      [
        "Layer",
        "__len__"
      ]
    ],
    [
      "django/contrib/gis/gdal/raster/band.py",
      [
        "BandList",
        "__len__"
      ]
    ],
    [
      "django/contrib/gis/geos/collections.py",
      [
        "GeometryCollection",
        "__len__"
      ]
    ],
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "__len__"
      ]
    ],
    [
      "django/contrib/gis/geos/linestring.py",
      [
        "LineString",
        "__len__"
      ]
    ],
    [
      "django/contrib/gis/geos/point.py",
      [
        "Point",
        "__len__"
      ]
    ],
    [
      "django/contrib/gis/geos/polygon.py",
      [
        "Polygon",
        "__len__"
      ]
    ],
    [
      "django/contrib/messages/storage/base.py",
      [
        "BaseStorage",
        "__len__"
      ]
    ],
    [
      "django/core/files/base.py",
      [
        "File",
        "__len__"
      ]
    ],
    [
      "django/core/paginator.py",
      [
        "Page",
        "__len__"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "__len__"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "RawQuerySet",
        "__len__"
      ]
    ],
    [
      "django/forms/boundfield.py",
      [
        "BoundField",
        "__len__"
      ]
    ],
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "__len__"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "ModelChoiceIterator",
        "__len__"
      ]
    ],
    [
      "django/test/client.py",
      [
        "FakePayload",
        "__len__"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "CaptureQueriesContext",
        "__len__"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "OrderedSet",
        "__len__"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "CaseInsensitiveMapping",
        "__len__"
      ]
    ],
    [
      "django/utils/tree.py",
      [
        "Node",
        "__len__"
      ]
    ],
    [
      "tests/generic_relations_regress/models.py",
      [
        "Team",
        "__len__"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "UserListA",
        "__len__"
      ]
    ],
    [
      "tests/serializers/models/data.py",
      [
        "LengthModel",
        "__len__"
      ]
    ]
  ],
  "layer_count": [
    [
      "django/contrib/gis/gdal/datasource.py",
      [
        "DataSource",
        "layer_count"
      ]
    ]
  ],
  "ensure_registered": [
    [
      "django/contrib/gis/gdal/driver.py",
      [
        "Driver",
        "ensure_registered"
      ]
    ]
  ],
  "driver_count": [
    [
      "django/contrib/gis/gdal/driver.py",
      [
        "Driver",
        "driver_count"
      ]
    ]
  ],
  "_from_sequence": [
    [
      "django/contrib/gis/gdal/envelope.py",
      [
        "Envelope",
        "_from_sequence"
      ]
    ]
  ],
  "expand_to_include": [
    [
      "django/contrib/gis/gdal/envelope.py",
      [
        "Envelope",
        "expand_to_include"
      ]
    ]
  ],
  "min_x": [
    [
      "django/contrib/gis/gdal/envelope.py",
      [
        "Envelope",
        "min_x"
      ]
    ]
  ],
  "min_y": [
    [
      "django/contrib/gis/gdal/envelope.py",
      [
        "Envelope",
        "min_y"
      ]
    ]
  ],
  "max_x": [
    [
      "django/contrib/gis/gdal/envelope.py",
      [
        "Envelope",
        "max_x"
      ]
    ]
  ],
  "max_y": [
    [
      "django/contrib/gis/gdal/envelope.py",
      [
        "Envelope",
        "max_y"
      ]
    ]
  ],
  "ur": [
    [
      "django/contrib/gis/gdal/envelope.py",
      [
        "Envelope",
        "ur"
      ]
    ]
  ],
  "ll": [
    [
      "django/contrib/gis/gdal/envelope.py",
      [
        "Envelope",
        "ll"
      ]
    ]
  ],
  "tuple": [
    [
      "django/contrib/gis/gdal/envelope.py",
      [
        "Envelope",
        "tuple"
      ]
    ],
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "Point",
        "tuple"
      ]
    ],
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "LineString",
        "tuple"
      ]
    ],
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "Polygon",
        "tuple"
      ]
    ],
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "GeometryCollection",
        "tuple"
      ]
    ],
    [
      "django/contrib/gis/geos/collections.py",
      [
        "GeometryCollection",
        "tuple"
      ]
    ],
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "tuple"
      ]
    ],
    [
      "django/contrib/gis/geos/linestring.py",
      [
        "LineString",
        "tuple"
      ]
    ],
    [
      "django/contrib/gis/geos/point.py",
      [
        "Point",
        "tuple"
      ]
    ],
    [
      "django/contrib/gis/geos/polygon.py",
      [
        "Polygon",
        "tuple"
      ]
    ]
  ],
  "check_err": [
    [
      "django/contrib/gis/gdal/error.py",
      [
        "check_err"
      ]
    ]
  ],
  "encoding": [
    [
      "django/contrib/gis/gdal/feature.py",
      [
        "Feature",
        "encoding"
      ]
    ],
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "encoding"
      ]
    ],
    [
      "django/http/request.py",
      [
        "QueryDict",
        "encoding"
      ]
    ]
  ],
  "fid": [
    [
      "django/contrib/gis/gdal/feature.py",
      [
        "Feature",
        "fid"
      ]
    ]
  ],
  "layer_name": [
    [
      "django/contrib/gis/gdal/feature.py",
      [
        "Feature",
        "layer_name"
      ]
    ]
  ],
  "num_fields": [
    [
      "django/contrib/gis/gdal/feature.py",
      [
        "Feature",
        "num_fields"
      ]
    ],
    [
      "django/contrib/gis/gdal/layer.py",
      [
        "Layer",
        "num_fields"
      ]
    ]
  ],
  "geom": [
    [
      "django/contrib/gis/gdal/feature.py",
      [
        "Feature",
        "geom"
      ]
    ]
  ],
  "geom_type": [
    [
      "django/contrib/gis/gdal/feature.py",
      [
        "Feature",
        "geom_type"
      ]
    ],
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "geom_type"
      ]
    ],
    [
      "django/contrib/gis/gdal/layer.py",
      [
        "Layer",
        "geom_type"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "geom_type"
      ]
    ]
  ],
  "as_double": [
    [
      "django/contrib/gis/gdal/field.py",
      [
        "Field",
        "as_double"
      ]
    ]
  ],
  "as_int": [
    [
      "django/contrib/gis/gdal/field.py",
      [
        "Field",
        "as_int"
      ]
    ]
  ],
  "as_string": [
    [
      "django/contrib/gis/gdal/field.py",
      [
        "Field",
        "as_string"
      ]
    ],
    [
      "django/core/mail/message.py",
      [
        "MIMEMixin",
        "as_string"
      ]
    ],
    [
      "django/db/migrations/writer.py",
      [
        "MigrationWriter",
        "as_string"
      ]
    ]
  ],
  "as_datetime": [
    [
      "django/contrib/gis/gdal/field.py",
      [
        "Field",
        "as_datetime"
      ]
    ]
  ],
  "is_set": [
    [
      "django/contrib/gis/gdal/field.py",
      [
        "Field",
        "is_set"
      ]
    ]
  ],
  "precision": [
    [
      "django/contrib/gis/gdal/field.py",
      [
        "Field",
        "precision"
      ]
    ],
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "WKTWriter",
        "precision"
      ]
    ]
  ],
  "type": [
    [
      "django/contrib/gis/gdal/field.py",
      [
        "Field",
        "type"
      ]
    ],
    [
      "django/contrib/gis/gdal/field.py",
      [
        "OFTInteger",
        "type"
      ]
    ]
  ],
  "type_name": [
    [
      "django/contrib/gis/gdal/field.py",
      [
        "Field",
        "type_name"
      ]
    ]
  ],
  "width": [
    [
      "django/contrib/gis/gdal/field.py",
      [
        "Field",
        "width"
      ]
    ],
    [
      "django/contrib/gis/gdal/raster/band.py",
      [
        "GDALBand",
        "width"
      ]
    ],
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "GDALRaster",
        "width"
      ]
    ],
    [
      "django/core/files/images.py",
      [
        "ImageFile",
        "width"
      ]
    ]
  ],
  "__getstate__": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "__getstate__"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "__getstate__"
      ]
    ],
    [
      "django/db/models/base.py",
      [
        "Model",
        "__getstate__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "__getstate__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Subquery",
        "__getstate__"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "FieldFile",
        "__getstate__"
      ]
    ],
    [
      "django/db/models/fields/reverse_related.py",
      [
        "ManyToOneRel",
        "__getstate__"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "__getstate__"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "Prefetch",
        "__getstate__"
      ]
    ],
    [
      "django/template/response.py",
      [
        "SimpleTemplateResponse",
        "__getstate__"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "MultiValueDict",
        "__getstate__"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "Unpicklable",
        "__getstate__"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "PicklingSideEffect",
        "__getstate__"
      ]
    ],
    [
      "tests/queryset_pickle/models.py",
      [
        "PreviousDjangoVersionQuerySet",
        "__getstate__"
      ]
    ],
    [
      "tests/queryset_pickle/models.py",
      [
        "MissingDjangoVersionQuerySet",
        "__getstate__"
      ]
    ]
  ],
  "__setstate__": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "__setstate__"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "__setstate__"
      ]
    ],
    [
      "django/db/models/base.py",
      [
        "Model",
        "__setstate__"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "FieldFile",
        "__setstate__"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "__setstate__"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "MultiValueDict",
        "__setstate__"
      ]
    ]
  ],
  "_from_wkb": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "_from_wkb"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "_from_wkb"
      ]
    ]
  ],
  "_from_json": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "_from_json"
      ]
    ]
  ],
  "from_bbox": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "from_bbox"
      ]
    ],
    [
      "django/contrib/gis/geos/polygon.py",
      [
        "Polygon",
        "from_bbox"
      ]
    ]
  ],
  "from_json": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "from_json"
      ]
    ]
  ],
  "from_gml": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "from_gml"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "from_gml"
      ]
    ]
  ],
  "__or__": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "__or__"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "__or__"
      ]
    ],
    [
      "django/contrib/postgres/search.py",
      [
        "SearchQueryCombinable",
        "__or__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Combinable",
        "__or__"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "__or__"
      ]
    ],
    [
      "django/db/models/query_utils.py",
      [
        "Q",
        "__or__"
      ]
    ]
  ],
  "__and__": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "__and__"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "__and__"
      ]
    ],
    [
      "django/contrib/postgres/search.py",
      [
        "SearchQueryCombinable",
        "__and__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Combinable",
        "__and__"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "__and__"
      ]
    ],
    [
      "django/db/models/query_utils.py",
      [
        "Q",
        "__and__"
      ]
    ]
  ],
  "__sub__": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "__sub__"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "__sub__"
      ]
    ],
    [
      "django/contrib/gis/measure.py",
      [
        "MeasureBase",
        "__sub__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Combinable",
        "__sub__"
      ]
    ]
  ],
  "__xor__": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "__xor__"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "__xor__"
      ]
    ]
  ],
  "dimension": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "dimension"
      ]
    ]
  ],
  "_get_coord_dim": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "_get_coord_dim"
      ]
    ]
  ],
  "_set_coord_dim": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "_set_coord_dim"
      ]
    ]
  ],
  "geom_count": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "geom_count"
      ]
    ]
  ],
  "point_count": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "point_count"
      ]
    ],
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "Polygon",
        "point_count"
      ]
    ],
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "GeometryCollection",
        "point_count"
      ]
    ]
  ],
  "num_points": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "num_points"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "num_points"
      ]
    ]
  ],
  "num_coords": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "num_coords"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "num_coords"
      ]
    ]
  ],
  "geom_name": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "geom_name"
      ]
    ]
  ],
  "area": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "area"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "area"
      ]
    ]
  ],
  "envelope": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "envelope"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "envelope"
      ]
    ]
  ],
  "empty": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "empty"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "empty"
      ]
    ]
  ],
  "extent": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "extent"
      ]
    ],
    [
      "django/contrib/gis/gdal/layer.py",
      [
        "Layer",
        "extent"
      ]
    ],
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "GDALRaster",
        "extent"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "extent"
      ]
    ]
  ],
  "_get_srs": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "_get_srs"
      ]
    ]
  ],
  "_set_srs": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "_set_srs"
      ]
    ]
  ],
  "_get_srid": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "_get_srid"
      ]
    ]
  ],
  "_set_srid": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "_set_srid"
      ]
    ]
  ],
  "_geos_ptr": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "_geos_ptr"
      ]
    ],
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "Point",
        "_geos_ptr"
      ]
    ]
  ],
  "geos": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "geos"
      ]
    ],
    [
      "django/contrib/gis/geoip2/base.py",
      [
        "GeoIP2",
        "geos"
      ]
    ]
  ],
  "gml": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "gml"
      ]
    ]
  ],
  "hex": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "hex"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "hex"
      ]
    ]
  ],
  "json": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "json"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "json"
      ]
    ]
  ],
  "kml": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "kml"
      ]
    ],
    [
      "django/contrib/gis/geos/collections.py",
      [
        "GeometryCollection",
        "kml"
      ]
    ],
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "kml"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "kml"
      ]
    ],
    [
      "django/contrib/gis/geos/polygon.py",
      [
        "Polygon",
        "kml"
      ]
    ],
    [
      "django/contrib/gis/sitemaps/views.py",
      [
        "kml"
      ]
    ]
  ],
  "wkb_size": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "wkb_size"
      ]
    ]
  ],
  "wkb": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "wkb"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "wkb"
      ]
    ]
  ],
  "ewkt": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "ewkt"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "ewkt"
      ]
    ]
  ],
  "clone": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "clone"
      ]
    ],
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "clone"
      ]
    ],
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "clone"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "clone"
      ]
    ],
    [
      "django/db/migrations/state.py",
      [
        "ProjectState",
        "clone"
      ]
    ],
    [
      "django/db/migrations/state.py",
      [
        "StateApps",
        "clone"
      ]
    ],
    [
      "django/db/migrations/state.py",
      [
        "ModelState",
        "clone"
      ]
    ],
    [
      "django/db/models/constraints.py",
      [
        "BaseConstraint",
        "clone"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "clone"
      ]
    ],
    [
      "django/db/models/indexes.py",
      [
        "Index",
        "clone"
      ]
    ],
    [
      "django/db/models/query_utils.py",
      [
        "FilteredRelation",
        "clone"
      ]
    ],
    [
      "django/db/models/sql/query.py",
      [
        "RawQuery",
        "clone"
      ]
    ],
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "clone"
      ]
    ],
    [
      "django/db/models/sql/subqueries.py",
      [
        "UpdateQuery",
        "clone"
      ]
    ],
    [
      "django/db/models/sql/where.py",
      [
        "WhereNode",
        "clone"
      ]
    ]
  ],
  "close_rings": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "close_rings"
      ]
    ]
  ],
  "transform": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "transform"
      ]
    ],
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "GDALRaster",
        "transform"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "transform"
      ]
    ]
  ],
  "_topology": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "_topology"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "_topology"
      ]
    ]
  ],
  "intersects": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "intersects"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "intersects"
      ]
    ],
    [
      "django/contrib/gis/geos/prepared.py",
      [
        "PreparedGeometry",
        "intersects"
      ]
    ]
  ],
  "equals": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "equals"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "equals"
      ]
    ],
    [
      "django/db/models/sql/datastructures.py",
      [
        "Join",
        "equals"
      ]
    ],
    [
      "django/db/models/sql/datastructures.py",
      [
        "BaseTable",
        "equals"
      ]
    ]
  ],
  "disjoint": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "disjoint"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "disjoint"
      ]
    ],
    [
      "django/contrib/gis/geos/prepared.py",
      [
        "PreparedGeometry",
        "disjoint"
      ]
    ]
  ],
  "touches": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "touches"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "touches"
      ]
    ],
    [
      "django/contrib/gis/geos/prepared.py",
      [
        "PreparedGeometry",
        "touches"
      ]
    ]
  ],
  "crosses": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "crosses"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "crosses"
      ]
    ],
    [
      "django/contrib/gis/geos/prepared.py",
      [
        "PreparedGeometry",
        "crosses"
      ]
    ]
  ],
  "within": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "within"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "within"
      ]
    ],
    [
      "django/contrib/gis/geos/prepared.py",
      [
        "PreparedGeometry",
        "within"
      ]
    ]
  ],
  "contains": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "contains"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "contains"
      ]
    ],
    [
      "django/contrib/gis/geos/prepared.py",
      [
        "PreparedGeometry",
        "contains"
      ]
    ],
    [
      "django/utils/regex_helper.py",
      [
        "contains"
      ]
    ]
  ],
  "overlaps": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "overlaps"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "overlaps"
      ]
    ],
    [
      "django/contrib/gis/geos/prepared.py",
      [
        "PreparedGeometry",
        "overlaps"
      ]
    ]
  ],
  "_geomgen": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "_geomgen"
      ]
    ]
  ],
  "boundary": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "boundary"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "boundary"
      ]
    ]
  ],
  "convex_hull": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "convex_hull"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "convex_hull"
      ]
    ]
  ],
  "difference": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "difference"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "difference"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "difference"
      ]
    ]
  ],
  "intersection": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "intersection"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "intersection"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "intersection"
      ]
    ]
  ],
  "sym_difference": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "sym_difference"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "sym_difference"
      ]
    ]
  ],
  "union": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "OGRGeometry",
        "union"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "union"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "union"
      ]
    ]
  ],
  "_create_empty": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "Point",
        "_create_empty"
      ]
    ],
    [
      "django/contrib/gis/geos/point.py",
      [
        "Point",
        "_create_empty"
      ]
    ]
  ],
  "x": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "Point",
        "x"
      ]
    ],
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "LineString",
        "x"
      ]
    ],
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "TransformPoint",
        "x"
      ]
    ],
    [
      "django/contrib/gis/geos/linestring.py",
      [
        "LineString",
        "x"
      ]
    ],
    [
      "django/contrib/gis/geos/point.py",
      [
        "Point",
        "x"
      ]
    ]
  ],
  "y": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "Point",
        "y"
      ]
    ],
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "LineString",
        "y"
      ]
    ],
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "TransformPoint",
        "y"
      ]
    ],
    [
      "django/contrib/gis/geos/linestring.py",
      [
        "LineString",
        "y"
      ]
    ],
    [
      "django/contrib/gis/geos/point.py",
      [
        "Point",
        "y"
      ]
    ],
    [
      "django/utils/dateformat.py",
      [
        "DateFormat",
        "y"
      ]
    ]
  ],
  "z": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "Point",
        "z"
      ]
    ],
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "LineString",
        "z"
      ]
    ],
    [
      "django/contrib/gis/geos/linestring.py",
      [
        "LineString",
        "z"
      ]
    ],
    [
      "django/contrib/gis/geos/point.py",
      [
        "Point",
        "z"
      ]
    ],
    [
      "django/utils/dateformat.py",
      [
        "DateFormat",
        "z"
      ]
    ]
  ],
  "_listarr": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "LineString",
        "_listarr"
      ]
    ],
    [
      "django/contrib/gis/geos/linestring.py",
      [
        "LineString",
        "_listarr"
      ]
    ]
  ],
  "shell": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "Polygon",
        "shell"
      ]
    ]
  ],
  "centroid": [
    [
      "django/contrib/gis/gdal/geometries.py",
      [
        "Polygon",
        "centroid"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "centroid"
      ]
    ]
  ],
  "django": [
    [
      "django/contrib/gis/gdal/geomtype.py",
      [
        "OGRGeomType",
        "django"
      ]
    ]
  ],
  "to_multi": [
    [
      "django/contrib/gis/gdal/geomtype.py",
      [
        "OGRGeomType",
        "to_multi"
      ]
    ]
  ],
  "_make_feature": [
    [
      "django/contrib/gis/gdal/layer.py",
      [
        "Layer",
        "_make_feature"
      ]
    ]
  ],
  "num_feat": [
    [
      "django/contrib/gis/gdal/layer.py",
      [
        "Layer",
        "num_feat"
      ]
    ]
  ],
  "field_types": [
    [
      "django/contrib/gis/gdal/layer.py",
      [
        "Layer",
        "field_types"
      ]
    ]
  ],
  "field_widths": [
    [
      "django/contrib/gis/gdal/layer.py",
      [
        "Layer",
        "field_widths"
      ]
    ]
  ],
  "field_precisions": [
    [
      "django/contrib/gis/gdal/layer.py",
      [
        "Layer",
        "field_precisions"
      ]
    ]
  ],
  "_get_spatial_filter": [
    [
      "django/contrib/gis/gdal/layer.py",
      [
        "Layer",
        "_get_spatial_filter"
      ]
    ]
  ],
  "_set_spatial_filter": [
    [
      "django/contrib/gis/gdal/layer.py",
      [
        "Layer",
        "_set_spatial_filter"
      ]
    ]
  ],
  "get_geoms": [
    [
      "django/contrib/gis/gdal/layer.py",
      [
        "Layer",
        "get_geoms"
      ]
    ]
  ],
  "test_capability": [
    [
      "django/contrib/gis/gdal/layer.py",
      [
        "Layer",
        "test_capability"
      ]
    ]
  ],
  "std_call": [
    [
      "django/contrib/gis/gdal/libgdal.py",
      [
        "std_call"
      ]
    ]
  ],
  "gdal_version": [
    [
      "django/contrib/gis/gdal/libgdal.py",
      [
        "gdal_version"
      ]
    ]
  ],
  "gdal_full_version": [
    [
      "django/contrib/gis/gdal/libgdal.py",
      [
        "gdal_full_version"
      ]
    ]
  ],
  "gdal_version_info": [
    [
      "django/contrib/gis/gdal/libgdal.py",
      [
        "gdal_version_info"
      ]
    ]
  ],
  "err_handler": [
    [
      "django/contrib/gis/gdal/libgdal.py",
      [
        "err_handler"
      ]
    ]
  ],
  "function": [
    [
      "django/contrib/gis/gdal/libgdal.py",
      [
        "function"
      ]
    ]
  ],
  "arg_byref": [
    [
      "django/contrib/gis/gdal/prototypes/errcheck.py",
      [
        "arg_byref"
      ]
    ]
  ],
  "ptr_byref": [
    [
      "django/contrib/gis/gdal/prototypes/errcheck.py",
      [
        "ptr_byref"
      ]
    ]
  ],
  "check_const_string": [
    [
      "django/contrib/gis/gdal/prototypes/errcheck.py",
      [
        "check_const_string"
      ]
    ]
  ],
  "check_string": [
    [
      "django/contrib/gis/gdal/prototypes/errcheck.py",
      [
        "check_string"
      ]
    ],
    [
      "django/contrib/gis/geos/prototypes/errcheck.py",
      [
        "check_string"
      ]
    ]
  ],
  "check_envelope": [
    [
      "django/contrib/gis/gdal/prototypes/errcheck.py",
      [
        "check_envelope"
      ]
    ]
  ],
  "check_geom": [
    [
      "django/contrib/gis/gdal/prototypes/errcheck.py",
      [
        "check_geom"
      ]
    ],
    [
      "django/contrib/gis/geos/prototypes/errcheck.py",
      [
        "check_geom"
      ]
    ]
  ],
  "check_geom_offset": [
    [
      "django/contrib/gis/gdal/prototypes/errcheck.py",
      [
        "check_geom_offset"
      ]
    ]
  ],
  "check_srs": [
    [
      "django/contrib/gis/gdal/prototypes/errcheck.py",
      [
        "check_srs"
      ]
    ],
    [
      "django/contrib/gis/utils/layermapping.py",
      [
        "LayerMapping",
        "check_srs"
      ]
    ]
  ],
  "check_arg_errcode": [
    [
      "django/contrib/gis/gdal/prototypes/errcheck.py",
      [
        "check_arg_errcode"
      ]
    ]
  ],
  "check_errcode": [
    [
      "django/contrib/gis/gdal/prototypes/errcheck.py",
      [
        "check_errcode"
      ]
    ]
  ],
  "check_pointer": [
    [
      "django/contrib/gis/gdal/prototypes/errcheck.py",
      [
        "check_pointer"
      ]
    ]
  ],
  "check_str_arg": [
    [
      "django/contrib/gis/gdal/prototypes/errcheck.py",
      [
        "check_str_arg"
      ]
    ]
  ],
  "bool_output": [
    [
      "django/contrib/gis/gdal/prototypes/generation.py",
      [
        "bool_output"
      ]
    ]
  ],
  "double_output": [
    [
      "django/contrib/gis/gdal/prototypes/generation.py",
      [
        "double_output"
      ]
    ]
  ],
  "geom_output": [
    [
      "django/contrib/gis/gdal/prototypes/generation.py",
      [
        "geom_output"
      ]
    ]
  ],
  "int_output": [
    [
      "django/contrib/gis/gdal/prototypes/generation.py",
      [
        "int_output"
      ]
    ]
  ],
  "int64_output": [
    [
      "django/contrib/gis/gdal/prototypes/generation.py",
      [
        "int64_output"
      ]
    ]
  ],
  "srs_output": [
    [
      "django/contrib/gis/gdal/prototypes/generation.py",
      [
        "srs_output"
      ]
    ]
  ],
  "const_string_output": [
    [
      "django/contrib/gis/gdal/prototypes/generation.py",
      [
        "const_string_output"
      ]
    ]
  ],
  "_check_str": [
    [
      "django/contrib/gis/gdal/prototypes/generation.py",
      [
        "string_output",
        "_check_str"
      ]
    ]
  ],
  "string_output": [
    [
      "django/contrib/gis/gdal/prototypes/generation.py",
      [
        "string_output"
      ]
    ]
  ],
  "void_output": [
    [
      "django/contrib/gis/gdal/prototypes/generation.py",
      [
        "void_output"
      ]
    ]
  ],
  "voidptr_output": [
    [
      "django/contrib/gis/gdal/prototypes/generation.py",
      [
        "voidptr_output"
      ]
    ]
  ],
  "chararray_output": [
    [
      "django/contrib/gis/gdal/prototypes/generation.py",
      [
        "chararray_output"
      ]
    ]
  ],
  "env_func": [
    [
      "django/contrib/gis/gdal/prototypes/geom.py",
      [
        "env_func"
      ]
    ]
  ],
  "pnt_func": [
    [
      "django/contrib/gis/gdal/prototypes/geom.py",
      [
        "pnt_func"
      ]
    ]
  ],
  "topology_func": [
    [
      "django/contrib/gis/gdal/prototypes/geom.py",
      [
        "topology_func"
      ]
    ]
  ],
  "srs_double": [
    [
      "django/contrib/gis/gdal/prototypes/srs.py",
      [
        "srs_double"
      ]
    ]
  ],
  "units_func": [
    [
      "django/contrib/gis/gdal/prototypes/srs.py",
      [
        "units_func"
      ]
    ]
  ],
  "_flush": [
    [
      "django/contrib/gis/gdal/raster/band.py",
      [
        "GDALBand",
        "_flush"
      ]
    ],
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "GDALRaster",
        "_flush"
      ]
    ]
  ],
  "description": [
    [
      "django/contrib/gis/gdal/raster/band.py",
      [
        "GDALBand",
        "description"
      ]
    ],
    [
      "django/contrib/postgres/fields/array.py",
      [
        "ArrayField",
        "description"
      ]
    ]
  ],
  "height": [
    [
      "django/contrib/gis/gdal/raster/band.py",
      [
        "GDALBand",
        "height"
      ]
    ],
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "GDALRaster",
        "height"
      ]
    ],
    [
      "django/core/files/images.py",
      [
        "ImageFile",
        "height"
      ]
    ]
  ],
  "pixel_count": [
    [
      "django/contrib/gis/gdal/raster/band.py",
      [
        "GDALBand",
        "pixel_count"
      ]
    ]
  ],
  "statistics": [
    [
      "django/contrib/gis/gdal/raster/band.py",
      [
        "GDALBand",
        "statistics"
      ]
    ]
  ],
  "min": [
    [
      "django/contrib/gis/gdal/raster/band.py",
      [
        "GDALBand",
        "min"
      ]
    ]
  ],
  "max": [
    [
      "django/contrib/gis/gdal/raster/band.py",
      [
        "GDALBand",
        "max"
      ]
    ]
  ],
  "mean": [
    [
      "django/contrib/gis/gdal/raster/band.py",
      [
        "GDALBand",
        "mean"
      ]
    ]
  ],
  "std": [
    [
      "django/contrib/gis/gdal/raster/band.py",
      [
        "GDALBand",
        "std"
      ]
    ]
  ],
  "nodata_value": [
    [
      "django/contrib/gis/gdal/raster/band.py",
      [
        "GDALBand",
        "nodata_value"
      ]
    ]
  ],
  "nodata_value_11": [
    [
      "django/contrib/gis/gdal/raster/band.py",
      [
        "GDALBand",
        "nodata_value_11"
      ]
    ]
  ],
  "datatype": [
    [
      "django/contrib/gis/gdal/raster/band.py",
      [
        "GDALBand",
        "datatype"
      ]
    ]
  ],
  "color_interp": [
    [
      "django/contrib/gis/gdal/raster/band.py",
      [
        "GDALBand",
        "color_interp"
      ]
    ]
  ],
  "data": [
    [
      "django/contrib/gis/gdal/raster/band.py",
      [
        "GDALBand",
        "data"
      ]
    ],
    [
      "django/forms/boundfield.py",
      [
        "BoundField",
        "data"
      ]
    ]
  ],
  "metadata": [
    [
      "django/contrib/gis/gdal/raster/base.py",
      [
        "GDALRasterBase",
        "metadata"
      ]
    ]
  ],
  "metadata_1": [
    [
      "django/contrib/gis/gdal/raster/base.py",
      [
        "GDALRasterBase",
        "metadata_1"
      ]
    ]
  ],
  "x_1": [
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "TransformPoint",
        "x_1"
      ]
    ]
  ],
  "y_3": [
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "TransformPoint",
        "y_3"
      ]
    ]
  ],
  "__del__": [
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "GDALRaster",
        "__del__"
      ]
    ],
    [
      "django/contrib/gis/geoip2/base.py",
      [
        "GeoIP2",
        "__del__"
      ]
    ],
    [
      "django/contrib/gis/ptr.py",
      [
        "CPointerBase",
        "__del__"
      ]
    ],
    [
      "django/core/files/temp.py",
      [
        "if_os_name_nt_",
        "TemporaryFile",
        "__del__"
      ]
    ],
    [
      "tests/handlers/views.py",
      [
        "CoroutineClearingView",
        "__del__"
      ]
    ]
  ],
  "vsi_buffer": [
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "GDALRaster",
        "vsi_buffer"
      ]
    ]
  ],
  "is_vsi_based": [
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "GDALRaster",
        "is_vsi_based"
      ]
    ]
  ],
  "driver": [
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "GDALRaster",
        "driver"
      ]
    ]
  ],
  "srs_11": [
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "GDALRaster",
        "srs_11"
      ]
    ]
  ],
  "srid": [
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "GDALRaster",
        "srid"
      ]
    ],
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "srid"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "srid"
      ]
    ],
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "WKBWriter",
        "srid"
      ]
    ]
  ],
  "srid_13": [
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "GDALRaster",
        "srid_13"
      ]
    ]
  ],
  "geotransform": [
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "GDALRaster",
        "geotransform"
      ]
    ]
  ],
  "geotransform_15": [
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "GDALRaster",
        "geotransform_15"
      ]
    ]
  ],
  "origin": [
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "GDALRaster",
        "origin"
      ]
    ],
    [
      "django/template/backends/django.py",
      [
        "Template",
        "origin"
      ]
    ]
  ],
  "scale": [
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "GDALRaster",
        "scale"
      ]
    ]
  ],
  "skew": [
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "GDALRaster",
        "skew"
      ]
    ]
  ],
  "bands": [
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "GDALRaster",
        "bands"
      ]
    ]
  ],
  "warp": [
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "GDALRaster",
        "warp"
      ]
    ]
  ],
  "info": [
    [
      "django/contrib/gis/gdal/raster/source.py",
      [
        "GDALRaster",
        "info"
      ]
    ],
    [
      "django/contrib/gis/geoip2/base.py",
      [
        "GeoIP2",
        "info"
      ]
    ],
    [
      "django/contrib/messages/api.py",
      [
        "info"
      ]
    ]
  ],
  "attr_value": [
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "attr_value"
      ]
    ]
  ],
  "auth_name": [
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "auth_name"
      ]
    ]
  ],
  "auth_code": [
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "auth_code"
      ]
    ]
  ],
  "from_esri": [
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "from_esri"
      ]
    ]
  ],
  "identify_epsg": [
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "identify_epsg"
      ]
    ]
  ],
  "to_esri": [
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "to_esri"
      ]
    ]
  ],
  "semi_major": [
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "semi_major"
      ]
    ]
  ],
  "semi_minor": [
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "semi_minor"
      ]
    ]
  ],
  "inverse_flattening": [
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "inverse_flattening"
      ]
    ]
  ],
  "import_epsg": [
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "import_epsg"
      ]
    ]
  ],
  "import_proj": [
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "import_proj"
      ]
    ]
  ],
  "import_user_input": [
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "import_user_input"
      ]
    ]
  ],
  "import_wkt": [
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "import_wkt"
      ]
    ]
  ],
  "import_xml": [
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "import_xml"
      ]
    ]
  ],
  "pretty_wkt": [
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "pretty_wkt"
      ]
    ]
  ],
  "proj": [
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "proj"
      ]
    ]
  ],
  "proj4": [
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "proj4"
      ]
    ]
  ],
  "xml": [
    [
      "django/contrib/gis/gdal/srs.py",
      [
        "SpatialReference",
        "xml"
      ]
    ]
  ],
  "_reader": [
    [
      "django/contrib/gis/geoip2/base.py",
      [
        "GeoIP2",
        "_reader"
      ]
    ]
  ],
  "_country_or_city": [
    [
      "django/contrib/gis/geoip2/base.py",
      [
        "GeoIP2",
        "_country_or_city"
      ]
    ]
  ],
  "_check_query": [
    [
      "django/contrib/gis/geoip2/base.py",
      [
        "GeoIP2",
        "_check_query"
      ]
    ]
  ],
  "city": [
    [
      "django/contrib/gis/geoip2/base.py",
      [
        "GeoIP2",
        "city"
      ]
    ]
  ],
  "country_code": [
    [
      "django/contrib/gis/geoip2/base.py",
      [
        "GeoIP2",
        "country_code"
      ]
    ]
  ],
  "country_name": [
    [
      "django/contrib/gis/geoip2/base.py",
      [
        "GeoIP2",
        "country_name"
      ]
    ]
  ],
  "country": [
    [
      "django/contrib/gis/geoip2/base.py",
      [
        "GeoIP2",
        "country"
      ]
    ]
  ],
  "coords": [
    [
      "django/contrib/gis/geoip2/base.py",
      [
        "GeoIP2",
        "coords"
      ]
    ]
  ],
  "lon_lat": [
    [
      "django/contrib/gis/geoip2/base.py",
      [
        "GeoIP2",
        "lon_lat"
      ]
    ]
  ],
  "lat_lon": [
    [
      "django/contrib/gis/geoip2/base.py",
      [
        "GeoIP2",
        "lat_lon"
      ]
    ]
  ],
  "open": [
    [
      "django/contrib/gis/geoip2/base.py",
      [
        "GeoIP2",
        "open"
      ]
    ],
    [
      "django/core/files/base.py",
      [
        "File",
        "open"
      ]
    ],
    [
      "django/core/files/base.py",
      [
        "ContentFile",
        "open"
      ]
    ],
    [
      "django/core/files/storage.py",
      [
        "Storage",
        "open"
      ]
    ],
    [
      "django/core/files/uploadedfile.py",
      [
        "InMemoryUploadedFile",
        "open"
      ]
    ],
    [
      "django/core/mail/backends/base.py",
      [
        "BaseEmailBackend",
        "open"
      ]
    ],
    [
      "django/core/mail/backends/filebased.py",
      [
        "EmailBackend",
        "open"
      ]
    ],
    [
      "django/core/mail/backends/smtp.py",
      [
        "EmailBackend",
        "open"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "FieldFile",
        "open"
      ]
    ],
    [
      "tests/model_fields/models.py",
      [
        "if_Image_",
        "TestImageFieldFile",
        "open"
      ]
    ]
  ],
  "City": [
    [
      "django/contrib/gis/geoip2/resources.py",
      [
        "City"
      ]
    ]
  ],
  "Country": [
    [
      "django/contrib/gis/geoip2/resources.py",
      [
        "Country"
      ]
    ]
  ],
  "_create_collection": [
    [
      "django/contrib/gis/geos/collections.py",
      [
        "GeometryCollection",
        "_create_collection"
      ]
    ]
  ],
  "_get_single_internal": [
    [
      "django/contrib/gis/geos/collections.py",
      [
        "GeometryCollection",
        "_get_single_internal"
      ]
    ],
    [
      "django/contrib/gis/geos/polygon.py",
      [
        "Polygon",
        "_get_single_internal"
      ]
    ]
  ],
  "_get_single_external": [
    [
      "django/contrib/gis/geos/collections.py",
      [
        "GeometryCollection",
        "_get_single_external"
      ]
    ],
    [
      "django/contrib/gis/geos/linestring.py",
      [
        "LineString",
        "_get_single_external"
      ]
    ],
    [
      "django/contrib/gis/geos/point.py",
      [
        "Point",
        "_get_single_external"
      ]
    ],
    [
      "django/contrib/gis/geos/polygon.py",
      [
        "Polygon",
        "_get_single_external"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "UserListA",
        "_get_single_external"
      ]
    ]
  ],
  "_set_list": [
    [
      "django/contrib/gis/geos/collections.py",
      [
        "GeometryCollection",
        "_set_list"
      ]
    ],
    [
      "django/contrib/gis/geos/linestring.py",
      [
        "LineString",
        "_set_list"
      ]
    ],
    [
      "django/contrib/gis/geos/point.py",
      [
        "Point",
        "_set_list"
      ]
    ],
    [
      "django/contrib/gis/geos/polygon.py",
      [
        "Polygon",
        "_set_list"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "UserListA",
        "_set_list"
      ]
    ]
  ],
  "__setitem__": [
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "__setitem__"
      ]
    ],
    [
      "django/contrib/gis/geos/mutable_list.py",
      [
        "ListMixin",
        "__setitem__"
      ]
    ],
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "__setitem__"
      ]
    ],
    [
      "django/core/mail/message.py",
      [
        "SafeMIMEMessage",
        "__setitem__"
      ]
    ],
    [
      "django/core/mail/message.py",
      [
        "SafeMIMEText",
        "__setitem__"
      ]
    ],
    [
      "django/core/mail/message.py",
      [
        "SafeMIMEMultipart",
        "__setitem__"
      ]
    ],
    [
      "django/db/utils.py",
      [
        "ConnectionHandler",
        "__setitem__"
      ]
    ],
    [
      "django/http/request.py",
      [
        "QueryDict",
        "__setitem__"
      ]
    ],
    [
      "django/http/response.py",
      [
        "HttpResponseBase",
        "__setitem__"
      ]
    ],
    [
      "django/template/context.py",
      [
        "BaseContext",
        "__setitem__"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "MultiValueDict",
        "__setitem__"
      ]
    ],
    [
      "django/utils/translation/trans_real.py",
      [
        "TranslationCatalog",
        "__setitem__"
      ]
    ]
  ],
  "_checkindex": [
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "_checkindex"
      ]
    ],
    [
      "django/contrib/gis/geos/mutable_list.py",
      [
        "ListMixin",
        "_checkindex"
      ]
    ]
  ],
  "_checkdim": [
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "_checkdim"
      ]
    ],
    [
      "django/contrib/gis/geos/linestring.py",
      [
        "LineString",
        "_checkdim"
      ]
    ]
  ],
  "_get_x": [
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "_get_x"
      ]
    ]
  ],
  "_get_y": [
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "_get_y"
      ]
    ]
  ],
  "_get_z": [
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "_get_z"
      ]
    ]
  ],
  "_set_x": [
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "_set_x"
      ]
    ]
  ],
  "_set_y": [
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "_set_y"
      ]
    ]
  ],
  "_set_z": [
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "_set_z"
      ]
    ]
  ],
  "_point_getter": [
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "_point_getter"
      ]
    ]
  ],
  "_get_point_2d": [
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "_get_point_2d"
      ]
    ]
  ],
  "_get_point_3d": [
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "_get_point_3d"
      ]
    ]
  ],
  "_set_point_2d": [
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "_set_point_2d"
      ]
    ]
  ],
  "_set_point_3d": [
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "_set_point_3d"
      ]
    ]
  ],
  "getOrdinate": [
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "getOrdinate"
      ]
    ]
  ],
  "setOrdinate": [
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "setOrdinate"
      ]
    ]
  ],
  "getX": [
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "getX"
      ]
    ]
  ],
  "setX": [
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "setX"
      ]
    ]
  ],
  "getY": [
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "getY"
      ]
    ]
  ],
  "setY": [
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "setY"
      ]
    ]
  ],
  "getZ": [
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "getZ"
      ]
    ]
  ],
  "setZ": [
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "setZ"
      ]
    ]
  ],
  "size": [
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "size"
      ]
    ],
    [
      "django/core/files/base.py",
      [
        "File",
        "size"
      ]
    ],
    [
      "django/core/files/storage.py",
      [
        "Storage",
        "size"
      ]
    ],
    [
      "django/core/files/storage.py",
      [
        "FileSystemStorage",
        "size"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "FieldFile",
        "size"
      ]
    ]
  ],
  "dims": [
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "dims"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "dims"
      ]
    ]
  ],
  "hasz": [
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "hasz"
      ]
    ],
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "hasz"
      ]
    ]
  ],
  "is_counterclockwise": [
    [
      "django/contrib/gis/geos/coordseq.py",
      [
        "GEOSCoordSeq",
        "is_counterclockwise"
      ]
    ],
    [
      "django/contrib/gis/geos/linestring.py",
      [
        "LinearRing",
        "is_counterclockwise"
      ]
    ]
  ],
  "fromfile": [
    [
      "django/contrib/gis/geos/factory.py",
      [
        "fromfile"
      ]
    ]
  ],
  "fromstr": [
    [
      "django/contrib/gis/geos/factory.py",
      [
        "fromstr"
      ]
    ]
  ],
  "_post_init": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "_post_init"
      ]
    ]
  ],
  "__copy__": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "__copy__"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "__copy__"
      ]
    ],
    [
      "django/http/request.py",
      [
        "QueryDict",
        "__copy__"
      ]
    ],
    [
      "django/template/context.py",
      [
        "BaseContext",
        "__copy__"
      ]
    ],
    [
      "django/template/context.py",
      [
        "Context",
        "__copy__"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "MultiValueDict",
        "__copy__"
      ]
    ],
    [
      "django/utils/functional.py",
      [
        "LazyObject",
        "__copy__"
      ]
    ],
    [
      "django/utils/functional.py",
      [
        "SimpleLazyObject",
        "__copy__"
      ]
    ]
  ],
  "_to_pickle_wkb": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "_to_pickle_wkb"
      ]
    ],
    [
      "django/contrib/gis/geos/point.py",
      [
        "Point",
        "_to_pickle_wkb"
      ]
    ]
  ],
  "_from_pickle_wkb": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "_from_pickle_wkb"
      ]
    ],
    [
      "django/contrib/gis/geos/point.py",
      [
        "Point",
        "_from_pickle_wkb"
      ]
    ]
  ],
  "from_ewkt": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "from_ewkt"
      ]
    ]
  ],
  "_from_wkt": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "_from_wkt"
      ]
    ]
  ],
  "coord_seq": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "coord_seq"
      ]
    ]
  ],
  "geom_typeid": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "geom_typeid"
      ]
    ]
  ],
  "num_geom": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "num_geom"
      ]
    ]
  ],
  "normalize": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "normalize"
      ]
    ],
    [
      "django/utils/regex_helper.py",
      [
        "normalize"
      ]
    ]
  ],
  "ring": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "ring"
      ]
    ]
  ],
  "simple": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "simple"
      ]
    ]
  ],
  "valid": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "valid"
      ]
    ]
  ],
  "valid_reason": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "valid_reason"
      ]
    ]
  ],
  "covers": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "covers"
      ]
    ],
    [
      "django/contrib/gis/geos/prepared.py",
      [
        "PreparedGeometry",
        "covers"
      ]
    ]
  ],
  "equals_exact": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "equals_exact"
      ]
    ]
  ],
  "relate_pattern": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "relate_pattern"
      ]
    ]
  ],
  "srid_45": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "srid_45"
      ]
    ]
  ],
  "hexewkb": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "hexewkb"
      ]
    ]
  ],
  "ewkb": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "ewkb"
      ]
    ]
  ],
  "prepared": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "prepared"
      ]
    ]
  ],
  "_ogr_ptr": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "_ogr_ptr"
      ]
    ],
    [
      "django/contrib/gis/geos/point.py",
      [
        "Point",
        "_ogr_ptr"
      ]
    ]
  ],
  "ogr": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "ogr"
      ]
    ]
  ],
  "crs": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "crs"
      ]
    ]
  ],
  "buffer": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "buffer"
      ]
    ]
  ],
  "buffer_with_style": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "buffer_with_style"
      ]
    ]
  ],
  "point_on_surface": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "point_on_surface"
      ]
    ]
  ],
  "relate": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "relate"
      ]
    ]
  ],
  "simplify": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "simplify"
      ]
    ]
  ],
  "unary_union": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "unary_union"
      ]
    ]
  ],
  "distance": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "distance"
      ]
    ]
  ],
  "length": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "GEOSGeometryBase",
        "length"
      ]
    ],
    [
      "django/template/defaultfilters.py",
      [
        "length"
      ]
    ]
  ],
  "interpolate": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "LinearGeometryMixin",
        "interpolate"
      ]
    ]
  ],
  "interpolate_normalized": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "LinearGeometryMixin",
        "interpolate_normalized"
      ]
    ]
  ],
  "project": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "LinearGeometryMixin",
        "project"
      ]
    ]
  ],
  "project_normalized": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "LinearGeometryMixin",
        "project_normalized"
      ]
    ]
  ],
  "merged": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "LinearGeometryMixin",
        "merged"
      ]
    ]
  ],
  "closed": [
    [
      "django/contrib/gis/geos/geometry.py",
      [
        "LinearGeometryMixin",
        "closed"
      ]
    ],
    [
      "django/core/files/utils.py",
      [
        "FileProxyMixin",
        "closed"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "FieldFile",
        "closed"
      ]
    ]
  ],
  "read": [
    [
      "django/contrib/gis/geos/io.py",
      [
        "WKBReader",
        "read"
      ]
    ],
    [
      "django/contrib/gis/geos/io.py",
      [
        "WKTReader",
        "read"
      ]
    ],
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "_WKTReader",
        "read"
      ]
    ],
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "_WKBReader",
        "read"
      ]
    ],
    [
      "django/core/handlers/wsgi.py",
      [
        "LimitedStream",
        "read"
      ]
    ],
    [
      "django/core/management/commands/loaddata.py",
      [
        "SingleZipReader",
        "read"
      ]
    ],
    [
      "django/http/multipartparser.py",
      [
        "LazyStream",
        "read"
      ]
    ],
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "read"
      ]
    ],
    [
      "django/test/client.py",
      [
        "FakePayload",
        "read"
      ]
    ],
    [
      "django/utils/text.py",
      [
        "StreamingBuffer",
        "read"
      ]
    ],
    [
      "tests/test_client_regress/tests.py",
      [
        "DummyFile",
        "read"
      ]
    ]
  ],
  "load_geos": [
    [
      "django/contrib/gis/geos/libgeos.py",
      [
        "load_geos"
      ]
    ]
  ],
  "notice_h": [
    [
      "django/contrib/gis/geos/libgeos.py",
      [
        "notice_h"
      ]
    ]
  ],
  "error_h": [
    [
      "django/contrib/gis/geos/libgeos.py",
      [
        "error_h"
      ]
    ]
  ],
  "func": [
    [
      "django/contrib/gis/geos/libgeos.py",
      [
        "GEOSFuncFactory",
        "func"
      ]
    ],
    [
      "django/utils/functional.py",
      [
        "cached_property",
        "func"
      ]
    ],
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_preserve_attributes",
        "func"
      ]
    ]
  ],
  "geos_version_tuple": [
    [
      "django/contrib/gis/geos/libgeos.py",
      [
        "geos_version_tuple"
      ]
    ]
  ],
  "_set_single": [
    [
      "django/contrib/gis/geos/linestring.py",
      [
        "LineString",
        "_set_single"
      ]
    ],
    [
      "django/contrib/gis/geos/point.py",
      [
        "Point",
        "_set_single"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "UserListB",
        "_set_single"
      ]
    ]
  ],
  "array": [
    [
      "django/contrib/gis/geos/linestring.py",
      [
        "LineString",
        "array"
      ]
    ]
  ],
  "__delitem__": [
    [
      "django/contrib/gis/geos/mutable_list.py",
      [
        "ListMixin",
        "__delitem__"
      ]
    ],
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "__delitem__"
      ]
    ],
    [
      "django/db/utils.py",
      [
        "ConnectionHandler",
        "__delitem__"
      ]
    ],
    [
      "django/http/request.py",
      [
        "QueryDict",
        "__delitem__"
      ]
    ],
    [
      "django/http/response.py",
      [
        "HttpResponseBase",
        "__delitem__"
      ]
    ],
    [
      "django/template/context.py",
      [
        "BaseContext",
        "__delitem__"
      ]
    ]
  ],
  "__add__": [
    [
      "django/contrib/gis/geos/mutable_list.py",
      [
        "ListMixin",
        "__add__"
      ]
    ],
    [
      "django/contrib/gis/measure.py",
      [
        "MeasureBase",
        "__add__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Combinable",
        "__add__"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "Media",
        "__add__"
      ]
    ],
    [
      "django/utils/safestring.py",
      [
        "SafeString",
        "__add__"
      ]
    ]
  ],
  "__radd__": [
    [
      "django/contrib/gis/geos/mutable_list.py",
      [
        "ListMixin",
        "__radd__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Combinable",
        "__radd__"
      ]
    ]
  ],
  "__iadd__": [
    [
      "django/contrib/gis/geos/mutable_list.py",
      [
        "ListMixin",
        "__iadd__"
      ]
    ],
    [
      "django/contrib/gis/measure.py",
      [
        "MeasureBase",
        "__iadd__"
      ]
    ]
  ],
  "__mul__": [
    [
      "django/contrib/gis/geos/mutable_list.py",
      [
        "ListMixin",
        "__mul__"
      ]
    ],
    [
      "django/contrib/gis/measure.py",
      [
        "MeasureBase",
        "__mul__"
      ]
    ],
    [
      "django/contrib/gis/measure.py",
      [
        "Distance",
        "__mul__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Combinable",
        "__mul__"
      ]
    ]
  ],
  "__rmul__": [
    [
      "django/contrib/gis/geos/mutable_list.py",
      [
        "ListMixin",
        "__rmul__"
      ]
    ],
    [
      "django/contrib/gis/measure.py",
      [
        "MeasureBase",
        "__rmul__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Combinable",
        "__rmul__"
      ]
    ]
  ],
  "__imul__": [
    [
      "django/contrib/gis/geos/mutable_list.py",
      [
        "ListMixin",
        "__imul__"
      ]
    ],
    [
      "django/contrib/gis/measure.py",
      [
        "MeasureBase",
        "__imul__"
      ]
    ]
  ],
  "__lt__": [
    [
      "django/contrib/gis/geos/mutable_list.py",
      [
        "ListMixin",
        "__lt__"
      ]
    ],
    [
      "django/contrib/gis/measure.py",
      [
        "MeasureBase",
        "__lt__"
      ]
    ],
    [
      "django/core/management/commands/makemessages.py",
      [
        "TranslatableFile",
        "__lt__"
      ]
    ],
    [
      "django/db/migrations/graph.py",
      [
        "Node",
        "__lt__"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "__lt__"
      ]
    ],
    [
      "django/utils/functional.py",
      [
        "lazy",
        "__proxy__",
        "__lt__"
      ]
    ]
  ],
  "count": [
    [
      "django/contrib/gis/geos/mutable_list.py",
      [
        "ListMixin",
        "count"
      ]
    ],
    [
      "django/core/paginator.py",
      [
        "Paginator",
        "count"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "count"
      ]
    ],
    [
      "django/test/html.py",
      [
        "Element",
        "count"
      ]
    ]
  ],
  "append": [
    [
      "django/contrib/gis/geos/mutable_list.py",
      [
        "ListMixin",
        "append"
      ]
    ],
    [
      "django/test/html.py",
      [
        "Element",
        "append"
      ]
    ]
  ],
  "extend": [
    [
      "django/contrib/gis/geos/mutable_list.py",
      [
        "ListMixin",
        "extend"
      ]
    ]
  ],
  "insert": [
    [
      "django/contrib/gis/geos/mutable_list.py",
      [
        "ListMixin",
        "insert"
      ]
    ]
  ],
  "pop": [
    [
      "django/contrib/gis/geos/mutable_list.py",
      [
        "ListMixin",
        "pop"
      ]
    ],
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "pop"
      ]
    ],
    [
      "django/http/request.py",
      [
        "QueryDict",
        "pop"
      ]
    ],
    [
      "django/template/context.py",
      [
        "BaseContext",
        "pop"
      ]
    ],
    [
      "django/template/loader_tags.py",
      [
        "BlockContext",
        "pop"
      ]
    ]
  ],
  "reverse": [
    [
      "django/contrib/gis/geos/mutable_list.py",
      [
        "ListMixin",
        "reverse"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "reverse"
      ]
    ],
    [
      "django/urls/base.py",
      [
        "reverse"
      ]
    ],
    [
      "django/urls/resolvers.py",
      [
        "URLResolver",
        "reverse"
      ]
    ]
  ],
  "sort": [
    [
      "django/contrib/gis/geos/mutable_list.py",
      [
        "ListMixin",
        "sort"
      ]
    ],
    [
      "django/db/models/deletion.py",
      [
        "Collector",
        "sort"
      ]
    ]
  ],
  "_rebuild": [
    [
      "django/contrib/gis/geos/mutable_list.py",
      [
        "ListMixin",
        "_rebuild"
      ]
    ]
  ],
  "_set_single_rebuild": [
    [
      "django/contrib/gis/geos/mutable_list.py",
      [
        "ListMixin",
        "_set_single_rebuild"
      ]
    ]
  ],
  "_check_allowed": [
    [
      "django/contrib/gis/geos/mutable_list.py",
      [
        "ListMixin",
        "_check_allowed"
      ]
    ]
  ],
  "_set_slice": [
    [
      "django/contrib/gis/geos/mutable_list.py",
      [
        "ListMixin",
        "_set_slice"
      ]
    ]
  ],
  "_assign_extended_slice_rebuild": [
    [
      "django/contrib/gis/geos/mutable_list.py",
      [
        "ListMixin",
        "_assign_extended_slice_rebuild"
      ]
    ]
  ],
  "_assign_extended_slice": [
    [
      "django/contrib/gis/geos/mutable_list.py",
      [
        "ListMixin",
        "_assign_extended_slice"
      ]
    ]
  ],
  "_assign_simple_slice": [
    [
      "django/contrib/gis/geos/mutable_list.py",
      [
        "ListMixin",
        "_assign_simple_slice"
      ]
    ]
  ],
  "_create_point": [
    [
      "django/contrib/gis/geos/point.py",
      [
        "Point",
        "_create_point"
      ]
    ]
  ],
  "x_11": [
    [
      "django/contrib/gis/geos/point.py",
      [
        "Point",
        "x_11"
      ]
    ]
  ],
  "y_13": [
    [
      "django/contrib/gis/geos/point.py",
      [
        "Point",
        "y_13"
      ]
    ]
  ],
  "z_15": [
    [
      "django/contrib/gis/geos/point.py",
      [
        "Point",
        "z_15"
      ]
    ]
  ],
  "tuple_17": [
    [
      "django/contrib/gis/geos/point.py",
      [
        "Point",
        "tuple_17"
      ]
    ]
  ],
  "_create_polygon": [
    [
      "django/contrib/gis/geos/polygon.py",
      [
        "Polygon",
        "_create_polygon"
      ]
    ]
  ],
  "_clone": [
    [
      "django/contrib/gis/geos/polygon.py",
      [
        "Polygon",
        "_clone"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "_clone"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "RawQuerySet",
        "_clone"
      ]
    ]
  ],
  "_construct_ring": [
    [
      "django/contrib/gis/geos/polygon.py",
      [
        "Polygon",
        "_construct_ring"
      ]
    ]
  ],
  "num_interior_rings": [
    [
      "django/contrib/gis/geos/polygon.py",
      [
        "Polygon",
        "num_interior_rings"
      ]
    ]
  ],
  "_get_ext_ring": [
    [
      "django/contrib/gis/geos/polygon.py",
      [
        "Polygon",
        "_get_ext_ring"
      ]
    ]
  ],
  "_set_ext_ring": [
    [
      "django/contrib/gis/geos/polygon.py",
      [
        "Polygon",
        "_set_ext_ring"
      ]
    ]
  ],
  "contains_properly": [
    [
      "django/contrib/gis/geos/prepared.py",
      [
        "PreparedGeometry",
        "contains_properly"
      ]
    ]
  ],
  "check_cs_op": [
    [
      "django/contrib/gis/geos/prototypes/coordseq.py",
      [
        "check_cs_op"
      ]
    ]
  ],
  "check_cs_get": [
    [
      "django/contrib/gis/geos/prototypes/coordseq.py",
      [
        "check_cs_get"
      ]
    ]
  ],
  "errcheck": [
    [
      "django/contrib/gis/geos/prototypes/coordseq.py",
      [
        "CsOutput",
        "errcheck"
      ]
    ]
  ],
  "last_arg_byref": [
    [
      "django/contrib/gis/geos/prototypes/errcheck.py",
      [
        "last_arg_byref"
      ]
    ]
  ],
  "check_dbl": [
    [
      "django/contrib/gis/geos/prototypes/errcheck.py",
      [
        "check_dbl"
      ]
    ]
  ],
  "check_minus_one": [
    [
      "django/contrib/gis/geos/prototypes/errcheck.py",
      [
        "check_minus_one"
      ]
    ]
  ],
  "check_predicate": [
    [
      "django/contrib/gis/geos/prototypes/errcheck.py",
      [
        "check_predicate"
      ]
    ]
  ],
  "check_sized_string": [
    [
      "django/contrib/gis/geos/prototypes/errcheck.py",
      [
        "check_sized_string"
      ]
    ]
  ],
  "write": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "WKTWriter",
        "write"
      ]
    ],
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "WKBWriter",
        "write"
      ]
    ],
    [
      "django/core/files/base.py",
      [
        "ContentFile",
        "write"
      ]
    ],
    [
      "django/core/management/base.py",
      [
        "OutputWrapper",
        "write"
      ]
    ],
    [
      "django/http/response.py",
      [
        "HttpResponseBase",
        "write"
      ]
    ],
    [
      "django/http/response.py",
      [
        "HttpResponse",
        "write"
      ]
    ],
    [
      "django/test/client.py",
      [
        "FakePayload",
        "write"
      ]
    ],
    [
      "django/utils/feedgenerator.py",
      [
        "SyndicationFeed",
        "write"
      ]
    ],
    [
      "django/utils/feedgenerator.py",
      [
        "RssFeed",
        "write"
      ]
    ],
    [
      "django/utils/feedgenerator.py",
      [
        "Atom1Feed",
        "write"
      ]
    ],
    [
      "tests/builtin_server/tests.py",
      [
        "ServerHandler",
        "write"
      ]
    ]
  ],
  "outdim": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "WKTWriter",
        "outdim"
      ]
    ],
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "WKBWriter",
        "outdim"
      ]
    ]
  ],
  "outdim_2": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "WKTWriter",
        "outdim_2"
      ]
    ]
  ],
  "trim": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "WKTWriter",
        "trim"
      ]
    ],
    [
      "tests/template_tests/templatetags/custom.py",
      [
        "trim"
      ]
    ]
  ],
  "trim_4": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "WKTWriter",
        "trim_4"
      ]
    ]
  ],
  "precision_6": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "WKTWriter",
        "precision_6"
      ]
    ]
  ],
  "_handle_empty_point": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "WKBWriter",
        "_handle_empty_point"
      ]
    ]
  ],
  "write_hex": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "WKBWriter",
        "write_hex"
      ]
    ]
  ],
  "_get_byteorder": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "WKBWriter",
        "_get_byteorder"
      ]
    ]
  ],
  "_set_byteorder": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "WKBWriter",
        "_set_byteorder"
      ]
    ]
  ],
  "outdim_6": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "WKBWriter",
        "outdim_6"
      ]
    ]
  ],
  "srid_8": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "WKBWriter",
        "srid_8"
      ]
    ]
  ],
  "wkt_r": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "wkt_r"
      ]
    ]
  ],
  "wkt_w": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "wkt_w"
      ]
    ]
  ],
  "wkb_r": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "wkb_r"
      ]
    ]
  ],
  "wkb_w": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "wkb_w"
      ]
    ]
  ],
  "ewkb_w": [
    [
      "django/contrib/gis/geos/prototypes/io.py",
      [
        "ewkb_w"
      ]
    ]
  ],
  "_get_argtypes": [
    [
      "django/contrib/gis/geos/prototypes/threadsafe.py",
      [
        "GEOSFunc",
        "_get_argtypes"
      ]
    ]
  ],
  "_set_argtypes": [
    [
      "django/contrib/gis/geos/prototypes/threadsafe.py",
      [
        "GEOSFunc",
        "_set_argtypes"
      ]
    ]
  ],
  "_get_restype": [
    [
      "django/contrib/gis/geos/prototypes/threadsafe.py",
      [
        "GEOSFunc",
        "_get_restype"
      ]
    ]
  ],
  "_set_restype": [
    [
      "django/contrib/gis/geos/prototypes/threadsafe.py",
      [
        "GEOSFunc",
        "_set_restype"
      ]
    ]
  ],
  "_get_errcheck": [
    [
      "django/contrib/gis/geos/prototypes/threadsafe.py",
      [
        "GEOSFunc",
        "_get_errcheck"
      ]
    ]
  ],
  "_set_errcheck": [
    [
      "django/contrib/gis/geos/prototypes/threadsafe.py",
      [
        "GEOSFunc",
        "_set_errcheck"
      ]
    ]
  ],
  "pretty_name": [
    [
      "django/contrib/gis/measure.py",
      [
        "pretty_name"
      ]
    ],
    [
      "django/forms/utils.py",
      [
        "pretty_name"
      ]
    ]
  ],
  "_get_standard": [
    [
      "django/contrib/gis/measure.py",
      [
        "MeasureBase",
        "_get_standard"
      ]
    ]
  ],
  "_set_standard": [
    [
      "django/contrib/gis/measure.py",
      [
        "MeasureBase",
        "_set_standard"
      ]
    ]
  ],
  "__isub__": [
    [
      "django/contrib/gis/measure.py",
      [
        "MeasureBase",
        "__isub__"
      ]
    ]
  ],
  "__truediv__": [
    [
      "django/contrib/gis/measure.py",
      [
        "MeasureBase",
        "__truediv__"
      ]
    ],
    [
      "django/contrib/gis/measure.py",
      [
        "Area",
        "__truediv__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Combinable",
        "__truediv__"
      ]
    ]
  ],
  "__itruediv__": [
    [
      "django/contrib/gis/measure.py",
      [
        "MeasureBase",
        "__itruediv__"
      ]
    ]
  ],
  "default_units": [
    [
      "django/contrib/gis/measure.py",
      [
        "MeasureBase",
        "default_units"
      ]
    ]
  ],
  "unit_attname": [
    [
      "django/contrib/gis/measure.py",
      [
        "MeasureBase",
        "unit_attname"
      ]
    ]
  ],
  "ptr": [
    [
      "django/contrib/gis/ptr.py",
      [
        "CPointerBase",
        "ptr"
      ]
    ]
  ],
  "ptr_1": [
    [
      "django/contrib/gis/ptr.py",
      [
        "CPointerBase",
        "ptr_1"
      ]
    ]
  ],
  "_init_options": [
    [
      "django/contrib/gis/serializers/geojson.py",
      [
        "Serializer",
        "_init_options"
      ]
    ],
    [
      "django/core/serializers/json.py",
      [
        "Serializer",
        "_init_options"
      ]
    ]
  ],
  "start_serialization": [
    [
      "django/contrib/gis/serializers/geojson.py",
      [
        "Serializer",
        "start_serialization"
      ]
    ],
    [
      "django/core/serializers/base.py",
      [
        "Serializer",
        "start_serialization"
      ]
    ],
    [
      "django/core/serializers/json.py",
      [
        "Serializer",
        "start_serialization"
      ]
    ],
    [
      "django/core/serializers/python.py",
      [
        "Serializer",
        "start_serialization"
      ]
    ],
    [
      "django/core/serializers/xml_serializer.py",
      [
        "Serializer",
        "start_serialization"
      ]
    ]
  ],
  "end_serialization": [
    [
      "django/contrib/gis/serializers/geojson.py",
      [
        "Serializer",
        "end_serialization"
      ]
    ],
    [
      "django/core/serializers/base.py",
      [
        "Serializer",
        "end_serialization"
      ]
    ],
    [
      "django/core/serializers/json.py",
      [
        "Serializer",
        "end_serialization"
      ]
    ],
    [
      "django/core/serializers/python.py",
      [
        "Serializer",
        "end_serialization"
      ]
    ],
    [
      "django/core/serializers/pyyaml.py",
      [
        "Serializer",
        "end_serialization"
      ]
    ],
    [
      "django/core/serializers/xml_serializer.py",
      [
        "Serializer",
        "end_serialization"
      ]
    ]
  ],
  "start_object": [
    [
      "django/contrib/gis/serializers/geojson.py",
      [
        "Serializer",
        "start_object"
      ]
    ],
    [
      "django/core/serializers/base.py",
      [
        "Serializer",
        "start_object"
      ]
    ],
    [
      "django/core/serializers/python.py",
      [
        "Serializer",
        "start_object"
      ]
    ],
    [
      "django/core/serializers/xml_serializer.py",
      [
        "Serializer",
        "start_object"
      ]
    ]
  ],
  "get_dump_object": [
    [
      "django/contrib/gis/serializers/geojson.py",
      [
        "Serializer",
        "get_dump_object"
      ]
    ],
    [
      "django/core/serializers/python.py",
      [
        "Serializer",
        "get_dump_object"
      ]
    ]
  ],
  "handle_field": [
    [
      "django/contrib/gis/serializers/geojson.py",
      [
        "Serializer",
        "handle_field"
      ]
    ],
    [
      "django/core/serializers/base.py",
      [
        "Serializer",
        "handle_field"
      ]
    ],
    [
      "django/core/serializers/python.py",
      [
        "Serializer",
        "handle_field"
      ]
    ],
    [
      "django/core/serializers/pyyaml.py",
      [
        "Serializer",
        "handle_field"
      ]
    ],
    [
      "django/core/serializers/xml_serializer.py",
      [
        "Serializer",
        "handle_field"
      ]
    ]
  ],
  "compress_kml": [
    [
      "django/contrib/gis/shortcuts.py",
      [
        "compress_kml"
      ]
    ]
  ],
  "render_to_kml": [
    [
      "django/contrib/gis/shortcuts.py",
      [
        "render_to_kml"
      ]
    ]
  ],
  "render_to_kmz": [
    [
      "django/contrib/gis/shortcuts.py",
      [
        "render_to_kmz"
      ]
    ]
  ],
  "_build_kml_sources": [
    [
      "django/contrib/gis/sitemaps/kml.py",
      [
        "KMLSitemap",
        "_build_kml_sources"
      ]
    ]
  ],
  "location": [
    [
      "django/contrib/gis/sitemaps/kml.py",
      [
        "KMLSitemap",
        "location"
      ]
    ],
    [
      "django/contrib/sitemaps/__init__.py",
      [
        "Sitemap",
        "location"
      ]
    ],
    [
      "django/core/files/storage.py",
      [
        "FileSystemStorage",
        "location"
      ]
    ]
  ],
  "kmz": [
    [
      "django/contrib/gis/sitemaps/views.py",
      [
        "kmz"
      ]
    ]
  ],
  "check_fid_range": [
    [
      "django/contrib/gis/utils/layermapping.py",
      [
        "LayerMapping",
        "check_fid_range"
      ]
    ]
  ],
  "check_ogr_fld": [
    [
      "django/contrib/gis/utils/layermapping.py",
      [
        "LayerMapping",
        "check_layer",
        "check_ogr_fld"
      ]
    ]
  ],
  "check_layer": [
    [
      "django/contrib/gis/utils/layermapping.py",
      [
        "LayerMapping",
        "check_layer"
      ]
    ]
  ],
  "check_unique": [
    [
      "django/contrib/gis/utils/layermapping.py",
      [
        "LayerMapping",
        "check_unique"
      ]
    ]
  ],
  "feature_kwargs": [
    [
      "django/contrib/gis/utils/layermapping.py",
      [
        "LayerMapping",
        "feature_kwargs"
      ]
    ]
  ],
  "unique_kwargs": [
    [
      "django/contrib/gis/utils/layermapping.py",
      [
        "LayerMapping",
        "unique_kwargs"
      ]
    ]
  ],
  "verify_ogr_field": [
    [
      "django/contrib/gis/utils/layermapping.py",
      [
        "LayerMapping",
        "verify_ogr_field"
      ]
    ]
  ],
  "verify_fk": [
    [
      "django/contrib/gis/utils/layermapping.py",
      [
        "LayerMapping",
        "verify_fk"
      ]
    ]
  ],
  "verify_geom": [
    [
      "django/contrib/gis/utils/layermapping.py",
      [
        "LayerMapping",
        "verify_geom"
      ]
    ]
  ],
  "coord_transform": [
    [
      "django/contrib/gis/utils/layermapping.py",
      [
        "LayerMapping",
        "coord_transform"
      ]
    ]
  ],
  "geometry_field": [
    [
      "django/contrib/gis/utils/layermapping.py",
      [
        "LayerMapping",
        "geometry_field"
      ]
    ]
  ],
  "make_multi": [
    [
      "django/contrib/gis/utils/layermapping.py",
      [
        "LayerMapping",
        "make_multi"
      ]
    ]
  ],
  "_save": [
    [
      "django/contrib/gis/utils/layermapping.py",
      [
        "LayerMapping",
        "save",
        "_save"
      ]
    ],
    [
      "django/core/files/storage.py",
      [
        "FileSystemStorage",
        "_save"
      ]
    ],
    [
      "tests/file_storage/test_generate_filename.py",
      [
        "AWSS3Storage",
        "_save"
      ]
    ],
    [
      "tests/file_storage/tests.py",
      [
        "DiscardingFalseContentStorage",
        "_save"
      ]
    ],
    [
      "tests/staticfiles_tests/storage.py",
      [
        "DummyStorage",
        "_save"
      ]
    ],
    [
      "tests/staticfiles_tests/storage.py",
      [
        "PathNotImplementedStorage",
        "_save"
      ]
    ]
  ],
  "ogrinfo": [
    [
      "django/contrib/gis/utils/ogrinfo.py",
      [
        "ogrinfo"
      ]
    ]
  ],
  "mapping": [
    [
      "django/contrib/gis/utils/ogrinspect.py",
      [
        "mapping"
      ]
    ]
  ],
  "ogrinspect": [
    [
      "django/contrib/gis/utils/ogrinspect.py",
      [
        "ogrinspect"
      ]
    ]
  ],
  "process_kwarg": [
    [
      "django/contrib/gis/utils/ogrinspect.py",
      [
        "_ogrinspect",
        "process_kwarg"
      ]
    ]
  ],
  "get_kwargs_str": [
    [
      "django/contrib/gis/utils/ogrinspect.py",
      [
        "_ogrinspect",
        "get_kwargs_str"
      ]
    ]
  ],
  "_ogrinspect": [
    [
      "django/contrib/gis/utils/ogrinspect.py",
      [
        "_ogrinspect"
      ]
    ]
  ],
  "add_srs_entry": [
    [
      "django/contrib/gis/utils/srs.py",
      [
        "add_srs_entry"
      ]
    ]
  ],
  "feed": [
    [
      "django/contrib/gis/views.py",
      [
        "feed"
      ]
    ],
    [
      "django/db/migrations/writer.py",
      [
        "OperationWriter",
        "feed"
      ]
    ],
    [
      "tests/migrations/test_migrations_plan/0005_fifth.py",
      [
        "feed"
      ]
    ]
  ],
  "ordinal": [
    [
      "django/contrib/humanize/templatetags/humanize.py",
      [
        "ordinal"
      ]
    ]
  ],
  "intcomma": [
    [
      "django/contrib/humanize/templatetags/humanize.py",
      [
        "intcomma"
      ]
    ]
  ],
  "_check_for_i18n": [
    [
      "django/contrib/humanize/templatetags/humanize.py",
      [
        "intword",
        "_check_for_i18n"
      ]
    ]
  ],
  "intword": [
    [
      "django/contrib/humanize/templatetags/humanize.py",
      [
        "intword"
      ]
    ]
  ],
  "apnumber": [
    [
      "django/contrib/humanize/templatetags/humanize.py",
      [
        "apnumber"
      ]
    ]
  ],
  "naturalday": [
    [
      "django/contrib/humanize/templatetags/humanize.py",
      [
        "naturalday"
      ]
    ]
  ],
  "naturaltime": [
    [
      "django/contrib/humanize/templatetags/humanize.py",
      [
        "naturaltime"
      ]
    ]
  ],
  "string_for": [
    [
      "django/contrib/humanize/templatetags/humanize.py",
      [
        "NaturalTimeFormatter",
        "string_for"
      ]
    ]
  ],
  "add_message": [
    [
      "django/contrib/messages/api.py",
      [
        "add_message"
      ]
    ]
  ],
  "get_messages": [
    [
      "django/contrib/messages/api.py",
      [
        "get_messages"
      ]
    ]
  ],
  "get_level": [
    [
      "django/contrib/messages/api.py",
      [
        "get_level"
      ]
    ]
  ],
  "set_level": [
    [
      "django/contrib/messages/api.py",
      [
        "set_level"
      ]
    ]
  ],
  "debug": [
    [
      "django/contrib/messages/api.py",
      [
        "debug"
      ]
    ],
    [
      "django/template/context_processors.py",
      [
        "debug"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "debug"
      ]
    ],
    [
      "django/test/runner.py",
      [
        "PDBDebugResult",
        "debug"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "debug"
      ]
    ]
  ],
  "success": [
    [
      "django/contrib/messages/api.py",
      [
        "success"
      ]
    ]
  ],
  "warning": [
    [
      "django/contrib/messages/api.py",
      [
        "warning"
      ]
    ]
  ],
  "error": [
    [
      "django/contrib/messages/api.py",
      [
        "error"
      ]
    ],
    [
      "django/core/management/base.py",
      [
        "CommandParser",
        "error"
      ]
    ],
    [
      "django/template/base.py",
      [
        "Parser",
        "error"
      ]
    ],
    [
      "django/test/html.py",
      [
        "Parser",
        "error"
      ]
    ]
  ],
  "messages": [
    [
      "django/contrib/messages/context_processors.py",
      [
        "messages"
      ]
    ],
    [
      "django/core/exceptions.py",
      [
        "ValidationError",
        "messages"
      ]
    ]
  ],
  "default_storage": [
    [
      "django/contrib/messages/storage/__init__.py",
      [
        "default_storage"
      ]
    ]
  ],
  "_prepare": [
    [
      "django/contrib/messages/storage/base.py",
      [
        "Message",
        "_prepare"
      ]
    ],
    [
      "django/db/models/base.py",
      [
        "ModelBase",
        "_prepare"
      ]
    ],
    [
      "django/db/models/options.py",
      [
        "Options",
        "_prepare"
      ]
    ]
  ],
  "tags": [
    [
      "django/contrib/messages/storage/base.py",
      [
        "Message",
        "tags"
      ]
    ]
  ],
  "level_tag": [
    [
      "django/contrib/messages/storage/base.py",
      [
        "Message",
        "level_tag"
      ]
    ]
  ],
  "_loaded_messages": [
    [
      "django/contrib/messages/storage/base.py",
      [
        "BaseStorage",
        "_loaded_messages"
      ]
    ]
  ],
  "_get": [
    [
      "django/contrib/messages/storage/base.py",
      [
        "BaseStorage",
        "_get"
      ]
    ],
    [
      "django/contrib/messages/storage/cookie.py",
      [
        "CookieStorage",
        "_get"
      ]
    ],
    [
      "django/contrib/messages/storage/fallback.py",
      [
        "FallbackStorage",
        "_get"
      ]
    ],
    [
      "django/contrib/messages/storage/session.py",
      [
        "SessionStorage",
        "_get"
      ]
    ]
  ],
  "_store": [
    [
      "django/contrib/messages/storage/base.py",
      [
        "BaseStorage",
        "_store"
      ]
    ],
    [
      "django/contrib/messages/storage/cookie.py",
      [
        "CookieStorage",
        "_store"
      ]
    ],
    [
      "django/contrib/messages/storage/fallback.py",
      [
        "FallbackStorage",
        "_store"
      ]
    ],
    [
      "django/contrib/messages/storage/session.py",
      [
        "SessionStorage",
        "_store"
      ]
    ]
  ],
  "_prepare_messages": [
    [
      "django/contrib/messages/storage/base.py",
      [
        "BaseStorage",
        "_prepare_messages"
      ]
    ]
  ],
  "update": [
    [
      "django/contrib/messages/storage/base.py",
      [
        "BaseStorage",
        "update"
      ]
    ],
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "update"
      ]
    ],
    [
      "django/core/serializers/base.py",
      [
        "ProgressBar",
        "update"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "update"
      ]
    ],
    [
      "django/template/context.py",
      [
        "Context",
        "update"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "MultiValueDict",
        "update"
      ]
    ],
    [
      "django/utils/translation/trans_real.py",
      [
        "TranslationCatalog",
        "update"
      ]
    ]
  ],
  "_get_level": [
    [
      "django/contrib/messages/storage/base.py",
      [
        "BaseStorage",
        "_get_level"
      ]
    ]
  ],
  "_set_level": [
    [
      "django/contrib/messages/storage/base.py",
      [
        "BaseStorage",
        "_set_level"
      ]
    ]
  ],
  "default": [
    [
      "django/contrib/messages/storage/cookie.py",
      [
        "MessageEncoder",
        "default"
      ]
    ],
    [
      "django/core/serializers/json.py",
      [
        "DjangoJSONEncoder",
        "default"
      ]
    ],
    [
      "django/template/defaultfilters.py",
      [
        "default"
      ]
    ]
  ],
  "process_messages": [
    [
      "django/contrib/messages/storage/cookie.py",
      [
        "MessageDecoder",
        "process_messages"
      ]
    ]
  ],
  "decode": [
    [
      "django/contrib/messages/storage/cookie.py",
      [
        "MessageDecoder",
        "decode"
      ]
    ],
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "decode"
      ]
    ],
    [
      "django/utils/baseconv.py",
      [
        "BaseConverter",
        "decode"
      ]
    ]
  ],
  "_update_cookie": [
    [
      "django/contrib/messages/storage/cookie.py",
      [
        "CookieStorage",
        "_update_cookie"
      ]
    ]
  ],
  "_legacy_hash": [
    [
      "django/contrib/messages/storage/cookie.py",
      [
        "CookieStorage",
        "_legacy_hash"
      ]
    ]
  ],
  "_encode": [
    [
      "django/contrib/messages/storage/cookie.py",
      [
        "CookieStorage",
        "_encode"
      ]
    ]
  ],
  "_legacy_decode": [
    [
      "django/contrib/messages/storage/cookie.py",
      [
        "CookieStorage",
        "_legacy_decode"
      ]
    ],
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "_legacy_decode"
      ]
    ]
  ],
  "serialize_messages": [
    [
      "django/contrib/messages/storage/session.py",
      [
        "SessionStorage",
        "serialize_messages"
      ]
    ]
  ],
  "deserialize_messages": [
    [
      "django/contrib/messages/storage/session.py",
      [
        "SessionStorage",
        "deserialize_messages"
      ]
    ]
  ],
  "get_level_tags": [
    [
      "django/contrib/messages/utils.py",
      [
        "get_level_tags"
      ]
    ]
  ],
  "get_success_message": [
    [
      "django/contrib/messages/views.py",
      [
        "SuccessMessageMixin",
        "get_success_message"
      ]
    ]
  ],
  "set_source_expressions": [
    [
      "django/contrib/postgres/aggregates/mixins.py",
      [
        "OrderableAggMixin",
        "set_source_expressions"
      ]
    ],
    [
      "django/contrib/postgres/search.py",
      [
        "SearchConfig",
        "set_source_expressions"
      ]
    ],
    [
      "django/db/models/aggregates.py",
      [
        "Aggregate",
        "set_source_expressions"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "set_source_expressions"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "CombinedExpression",
        "set_source_expressions"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Func",
        "set_source_expressions"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Ref",
        "set_source_expressions"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "ExpressionWrapper",
        "set_source_expressions"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "When",
        "set_source_expressions"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Case",
        "set_source_expressions"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Subquery",
        "set_source_expressions"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "OrderBy",
        "set_source_expressions"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Window",
        "set_source_expressions"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "WindowFrame",
        "set_source_expressions"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "Lookup",
        "set_source_expressions"
      ]
    ],
    [
      "django/db/models/sql/where.py",
      [
        "WhereNode",
        "set_source_expressions"
      ]
    ]
  ],
  "get_source_expressions": [
    [
      "django/contrib/postgres/aggregates/mixins.py",
      [
        "OrderableAggMixin",
        "get_source_expressions"
      ]
    ],
    [
      "django/contrib/postgres/search.py",
      [
        "SearchConfig",
        "get_source_expressions"
      ]
    ],
    [
      "django/db/models/aggregates.py",
      [
        "Aggregate",
        "get_source_expressions"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "get_source_expressions"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "CombinedExpression",
        "get_source_expressions"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Func",
        "get_source_expressions"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Ref",
        "get_source_expressions"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "ExpressionWrapper",
        "get_source_expressions"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "When",
        "get_source_expressions"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Case",
        "get_source_expressions"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Subquery",
        "get_source_expressions"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "OrderBy",
        "get_source_expressions"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Window",
        "get_source_expressions"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "WindowFrame",
        "get_source_expressions"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "Lookup",
        "get_source_expressions"
      ]
    ],
    [
      "django/db/models/sql/where.py",
      [
        "WhereNode",
        "get_source_expressions"
      ]
    ]
  ],
  "_get_ordering_expressions_index": [
    [
      "django/contrib/postgres/aggregates/mixins.py",
      [
        "OrderableAggMixin",
        "_get_ordering_expressions_index"
      ]
    ]
  ],
  "uninstall_if_needed": [
    [
      "django/contrib/postgres/apps.py",
      [
        "uninstall_if_needed"
      ]
    ]
  ],
  "_get_expression_sql": [
    [
      "django/contrib/postgres/constraints.py",
      [
        "ExclusionConstraint",
        "_get_expression_sql"
      ]
    ]
  ],
  "_get_condition_sql": [
    [
      "django/contrib/postgres/constraints.py",
      [
        "ExclusionConstraint",
        "_get_condition_sql"
      ]
    ],
    [
      "django/db/models/constraints.py",
      [
        "UniqueConstraint",
        "_get_condition_sql"
      ]
    ],
    [
      "django/db/models/indexes.py",
      [
        "Index",
        "_get_condition_sql"
      ]
    ]
  ],
  "constraint_sql": [
    [
      "django/contrib/postgres/constraints.py",
      [
        "ExclusionConstraint",
        "constraint_sql"
      ]
    ],
    [
      "django/db/models/constraints.py",
      [
        "BaseConstraint",
        "constraint_sql"
      ]
    ],
    [
      "django/db/models/constraints.py",
      [
        "CheckConstraint",
        "constraint_sql"
      ]
    ],
    [
      "django/db/models/constraints.py",
      [
        "UniqueConstraint",
        "constraint_sql"
      ]
    ]
  ],
  "create_sql": [
    [
      "django/contrib/postgres/constraints.py",
      [
        "ExclusionConstraint",
        "create_sql"
      ]
    ],
    [
      "django/contrib/postgres/indexes.py",
      [
        "PostgresIndex",
        "create_sql"
      ]
    ],
    [
      "django/db/models/constraints.py",
      [
        "BaseConstraint",
        "create_sql"
      ]
    ],
    [
      "django/db/models/constraints.py",
      [
        "CheckConstraint",
        "create_sql"
      ]
    ],
    [
      "django/db/models/constraints.py",
      [
        "UniqueConstraint",
        "create_sql"
      ]
    ],
    [
      "django/db/models/indexes.py",
      [
        "Index",
        "create_sql"
      ]
    ]
  ],
  "remove_sql": [
    [
      "django/contrib/postgres/constraints.py",
      [
        "ExclusionConstraint",
        "remove_sql"
      ]
    ],
    [
      "django/db/models/constraints.py",
      [
        "BaseConstraint",
        "remove_sql"
      ]
    ],
    [
      "django/db/models/constraints.py",
      [
        "CheckConstraint",
        "remove_sql"
      ]
    ],
    [
      "django/db/models/constraints.py",
      [
        "UniqueConstraint",
        "remove_sql"
      ]
    ],
    [
      "django/db/models/indexes.py",
      [
        "Index",
        "remove_sql"
      ]
    ]
  ],
  "model": [
    [
      "django/contrib/postgres/fields/array.py",
      [
        "ArrayField",
        "model"
      ]
    ],
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "RangeField",
        "model"
      ]
    ],
    [
      "django/contrib/sessions/backends/db.py",
      [
        "SessionStore",
        "model"
      ]
    ],
    [
      "tests/sessions_tests/tests.py",
      [
        "DatabaseSessionTests",
        "model"
      ]
    ]
  ],
  "model_1": [
    [
      "django/contrib/postgres/fields/array.py",
      [
        "ArrayField",
        "model_1"
      ]
    ],
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "RangeField",
        "model_1"
      ]
    ]
  ],
  "_choices_is_value": [
    [
      "django/contrib/postgres/fields/array.py",
      [
        "ArrayField",
        "_choices_is_value"
      ]
    ],
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "RangeField",
        "_choices_is_value"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "_choices_is_value"
      ]
    ]
  ],
  "set_attributes_from_name": [
    [
      "django/contrib/postgres/fields/array.py",
      [
        "ArrayField",
        "set_attributes_from_name"
      ]
    ],
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "RangeField",
        "set_attributes_from_name"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "set_attributes_from_name"
      ]
    ]
  ],
  "cast_db_type": [
    [
      "django/contrib/postgres/fields/array.py",
      [
        "ArrayField",
        "cast_db_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "cast_db_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "CharField",
        "cast_db_type"
      ]
    ]
  ],
  "_from_db_value": [
    [
      "django/contrib/postgres/fields/array.py",
      [
        "ArrayField",
        "_from_db_value"
      ]
    ]
  ],
  "run_validators": [
    [
      "django/contrib/postgres/fields/array.py",
      [
        "ArrayField",
        "run_validators"
      ]
    ],
    [
      "django/contrib/postgres/forms/array.py",
      [
        "SimpleArrayField",
        "run_validators"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "run_validators"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "Field",
        "run_validators"
      ]
    ]
  ],
  "get_prep_lookup": [
    [
      "django/contrib/postgres/fields/array.py",
      [
        "ArrayInLookup",
        "get_prep_lookup"
      ]
    ],
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "RangeContainedBy",
        "get_prep_lookup"
      ]
    ],
    [
      "django/contrib/postgres/lookups.py",
      [
        "HasKeys",
        "get_prep_lookup"
      ]
    ],
    [
      "django/db/models/fields/related_lookups.py",
      [
        "RelatedIn",
        "get_prep_lookup"
      ]
    ],
    [
      "django/db/models/fields/related_lookups.py",
      [
        "RelatedLookupMixin",
        "get_prep_lookup"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "Lookup",
        "get_prep_lookup"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "FieldGetDbPrepValueIterableMixin",
        "get_prep_lookup"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "IntegerFieldFloatRounding",
        "get_prep_lookup"
      ]
    ]
  ],
  "dumps": [
    [
      "django/contrib/postgres/fields/jsonb.py",
      [
        "JsonAdapter",
        "dumps"
      ]
    ],
    [
      "django/contrib/sessions/serializers.py",
      [
        "PickleSerializer",
        "dumps"
      ]
    ],
    [
      "django/core/signing.py",
      [
        "JSONSerializer",
        "dumps"
      ]
    ],
    [
      "django/core/signing.py",
      [
        "dumps"
      ]
    ]
  ],
  "process_lhs": [
    [
      "django/contrib/postgres/fields/ranges.py",
      [
        "RangeContainedBy",
        "process_lhs"
      ]
    ],
    [
      "django/contrib/postgres/lookups.py",
      [
        "SearchLookup",
        "process_lhs"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "Lookup",
        "process_lhs"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "BuiltinLookup",
        "process_lhs"
      ]
    ]
  ],
  "prepare_value": [
    [
      "django/contrib/postgres/forms/array.py",
      [
        "SimpleArrayField",
        "prepare_value"
      ]
    ],
    [
      "django/contrib/postgres/forms/hstore.py",
      [
        "HStoreField",
        "prepare_value"
      ]
    ],
    [
      "django/contrib/postgres/forms/jsonb.py",
      [
        "JSONField",
        "prepare_value"
      ]
    ],
    [
      "django/contrib/postgres/forms/ranges.py",
      [
        "BaseRangeField",
        "prepare_value"
      ]
    ],
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLInsertCompiler",
        "prepare_value"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "Field",
        "prepare_value"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "DateTimeField",
        "prepare_value"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "DurationField",
        "prepare_value"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "UUIDField",
        "prepare_value"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "ModelChoiceField",
        "prepare_value"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "ModelMultipleChoiceField",
        "prepare_value"
      ]
    ]
  ],
  "needs_multipart_form": [
    [
      "django/contrib/postgres/forms/array.py",
      [
        "SplitArrayWidget",
        "needs_multipart_form"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "MultiWidget",
        "needs_multipart_form"
      ]
    ]
  ],
  "_remove_trailing_nulls": [
    [
      "django/contrib/postgres/forms/array.py",
      [
        "SplitArrayField",
        "_remove_trailing_nulls"
      ]
    ]
  ],
  "decompress": [
    [
      "django/contrib/postgres/forms/ranges.py",
      [
        "RangeWidget",
        "decompress"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "MultiWidget",
        "decompress"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "SplitDateTimeWidget",
        "decompress"
      ]
    ],
    [
      "tests/forms_tests/field_tests/test_multivaluefield.py",
      [
        "ComplexMultiWidget",
        "decompress"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_multiwidget.py",
      [
        "MyMultiWidget",
        "decompress"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_multiwidget.py",
      [
        "ComplexMultiWidget",
        "decompress"
      ]
    ],
    [
      "tests/middleware/tests.py",
      [
        "GZipMiddlewareTest",
        "decompress"
      ]
    ]
  ],
  "compress": [
    [
      "django/contrib/postgres/forms/ranges.py",
      [
        "BaseRangeField",
        "compress"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "MultiValueField",
        "compress"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "SplitDateTimeField",
        "compress"
      ]
    ],
    [
      "tests/forms_tests/field_tests/test_multivaluefield.py",
      [
        "ComplexField",
        "compress"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_multivalue_field_validation",
        "NameField",
        "compress"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_multivalue_optional_subfields",
        "PhoneField",
        "compress"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_multiwidget.py",
      [
        "ComplexField",
        "compress"
      ]
    ]
  ],
  "max_name_length": [
    [
      "django/contrib/postgres/indexes.py",
      [
        "PostgresIndex",
        "max_name_length"
      ]
    ],
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "max_name_length"
      ]
    ],
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "max_name_length"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "max_name_length"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "max_name_length"
      ]
    ]
  ],
  "check_supported": [
    [
      "django/contrib/postgres/indexes.py",
      [
        "PostgresIndex",
        "check_supported"
      ]
    ],
    [
      "django/contrib/postgres/indexes.py",
      [
        "BloomIndex",
        "check_supported"
      ]
    ],
    [
      "django/contrib/postgres/indexes.py",
      [
        "BrinIndex",
        "check_supported"
      ]
    ]
  ],
  "get_with_params": [
    [
      "django/contrib/postgres/indexes.py",
      [
        "PostgresIndex",
        "get_with_params"
      ]
    ],
    [
      "django/contrib/postgres/indexes.py",
      [
        "BloomIndex",
        "get_with_params"
      ]
    ],
    [
      "django/contrib/postgres/indexes.py",
      [
        "BrinIndex",
        "get_with_params"
      ]
    ],
    [
      "django/contrib/postgres/indexes.py",
      [
        "BTreeIndex",
        "get_with_params"
      ]
    ],
    [
      "django/contrib/postgres/indexes.py",
      [
        "GinIndex",
        "get_with_params"
      ]
    ],
    [
      "django/contrib/postgres/indexes.py",
      [
        "GistIndex",
        "get_with_params"
      ]
    ],
    [
      "django/contrib/postgres/indexes.py",
      [
        "HashIndex",
        "get_with_params"
      ]
    ],
    [
      "django/contrib/postgres/indexes.py",
      [
        "SpGistIndex",
        "get_with_params"
      ]
    ]
  ],
  "state_forwards": [
    [
      "django/contrib/postgres/operations.py",
      [
        "CreateExtension",
        "state_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/base.py",
      [
        "Operation",
        "state_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/fields.py",
      [
        "AddField",
        "state_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/fields.py",
      [
        "RemoveField",
        "state_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/fields.py",
      [
        "AlterField",
        "state_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/fields.py",
      [
        "RenameField",
        "state_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "CreateModel",
        "state_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "DeleteModel",
        "state_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "RenameModel",
        "state_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterModelTable",
        "state_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterTogetherOptionOperation",
        "state_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterOrderWithRespectTo",
        "state_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterModelOptions",
        "state_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterModelManagers",
        "state_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AddIndex",
        "state_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "RemoveIndex",
        "state_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AddConstraint",
        "state_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "RemoveConstraint",
        "state_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/special.py",
      [
        "SeparateDatabaseAndState",
        "state_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/special.py",
      [
        "RunSQL",
        "state_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/special.py",
      [
        "RunPython",
        "state_forwards"
      ]
    ],
    [
      "tests/custom_migration_operations/more_operations.py",
      [
        "TestOperation",
        "state_forwards"
      ]
    ],
    [
      "tests/custom_migration_operations/operations.py",
      [
        "TestOperation",
        "state_forwards"
      ]
    ]
  ],
  "database_forwards": [
    [
      "django/contrib/postgres/operations.py",
      [
        "CreateExtension",
        "database_forwards"
      ]
    ],
    [
      "django/contrib/postgres/operations.py",
      [
        "AddIndexConcurrently",
        "database_forwards"
      ]
    ],
    [
      "django/contrib/postgres/operations.py",
      [
        "RemoveIndexConcurrently",
        "database_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/base.py",
      [
        "Operation",
        "database_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/fields.py",
      [
        "AddField",
        "database_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/fields.py",
      [
        "RemoveField",
        "database_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/fields.py",
      [
        "AlterField",
        "database_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/fields.py",
      [
        "RenameField",
        "database_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "CreateModel",
        "database_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "DeleteModel",
        "database_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "RenameModel",
        "database_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterModelTable",
        "database_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterTogetherOptionOperation",
        "database_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterOrderWithRespectTo",
        "database_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterModelOptions",
        "database_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterModelManagers",
        "database_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AddIndex",
        "database_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "RemoveIndex",
        "database_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AddConstraint",
        "database_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "RemoveConstraint",
        "database_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/special.py",
      [
        "SeparateDatabaseAndState",
        "database_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/special.py",
      [
        "RunSQL",
        "database_forwards"
      ]
    ],
    [
      "django/db/migrations/operations/special.py",
      [
        "RunPython",
        "database_forwards"
      ]
    ],
    [
      "tests/custom_migration_operations/more_operations.py",
      [
        "TestOperation",
        "database_forwards"
      ]
    ],
    [
      "tests/custom_migration_operations/operations.py",
      [
        "TestOperation",
        "database_forwards"
      ]
    ]
  ],
  "database_backwards": [
    [
      "django/contrib/postgres/operations.py",
      [
        "CreateExtension",
        "database_backwards"
      ]
    ],
    [
      "django/contrib/postgres/operations.py",
      [
        "AddIndexConcurrently",
        "database_backwards"
      ]
    ],
    [
      "django/contrib/postgres/operations.py",
      [
        "RemoveIndexConcurrently",
        "database_backwards"
      ]
    ],
    [
      "django/db/migrations/operations/base.py",
      [
        "Operation",
        "database_backwards"
      ]
    ],
    [
      "django/db/migrations/operations/fields.py",
      [
        "AddField",
        "database_backwards"
      ]
    ],
    [
      "django/db/migrations/operations/fields.py",
      [
        "RemoveField",
        "database_backwards"
      ]
    ],
    [
      "django/db/migrations/operations/fields.py",
      [
        "AlterField",
        "database_backwards"
      ]
    ],
    [
      "django/db/migrations/operations/fields.py",
      [
        "RenameField",
        "database_backwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "CreateModel",
        "database_backwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "DeleteModel",
        "database_backwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "RenameModel",
        "database_backwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterModelTable",
        "database_backwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterTogetherOptionOperation",
        "database_backwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterOrderWithRespectTo",
        "database_backwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterModelOptions",
        "database_backwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterModelManagers",
        "database_backwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AddIndex",
        "database_backwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "RemoveIndex",
        "database_backwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AddConstraint",
        "database_backwards"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "RemoveConstraint",
        "database_backwards"
      ]
    ],
    [
      "django/db/migrations/operations/special.py",
      [
        "SeparateDatabaseAndState",
        "database_backwards"
      ]
    ],
    [
      "django/db/migrations/operations/special.py",
      [
        "RunSQL",
        "database_backwards"
      ]
    ],
    [
      "django/db/migrations/operations/special.py",
      [
        "RunPython",
        "database_backwards"
      ]
    ],
    [
      "tests/custom_migration_operations/more_operations.py",
      [
        "TestOperation",
        "database_backwards"
      ]
    ],
    [
      "tests/custom_migration_operations/operations.py",
      [
        "TestOperation",
        "database_backwards"
      ]
    ]
  ],
  "describe": [
    [
      "django/contrib/postgres/operations.py",
      [
        "CreateExtension",
        "describe"
      ]
    ],
    [
      "django/contrib/postgres/operations.py",
      [
        "AddIndexConcurrently",
        "describe"
      ]
    ],
    [
      "django/contrib/postgres/operations.py",
      [
        "RemoveIndexConcurrently",
        "describe"
      ]
    ],
    [
      "django/db/migrations/operations/base.py",
      [
        "Operation",
        "describe"
      ]
    ],
    [
      "django/db/migrations/operations/fields.py",
      [
        "AddField",
        "describe"
      ]
    ],
    [
      "django/db/migrations/operations/fields.py",
      [
        "RemoveField",
        "describe"
      ]
    ],
    [
      "django/db/migrations/operations/fields.py",
      [
        "AlterField",
        "describe"
      ]
    ],
    [
      "django/db/migrations/operations/fields.py",
      [
        "RenameField",
        "describe"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "CreateModel",
        "describe"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "DeleteModel",
        "describe"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "RenameModel",
        "describe"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterModelTable",
        "describe"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterTogetherOptionOperation",
        "describe"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterOrderWithRespectTo",
        "describe"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterModelOptions",
        "describe"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterModelManagers",
        "describe"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AddIndex",
        "describe"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "RemoveIndex",
        "describe"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AddConstraint",
        "describe"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "RemoveConstraint",
        "describe"
      ]
    ],
    [
      "django/db/migrations/operations/special.py",
      [
        "SeparateDatabaseAndState",
        "describe"
      ]
    ],
    [
      "django/db/migrations/operations/special.py",
      [
        "RunSQL",
        "describe"
      ]
    ],
    [
      "django/db/migrations/operations/special.py",
      [
        "RunPython",
        "describe"
      ]
    ],
    [
      "django/urls/resolvers.py",
      [
        "CheckURLMixin",
        "describe"
      ]
    ],
    [
      "django/urls/resolvers.py",
      [
        "LocalePrefixPattern",
        "describe"
      ]
    ]
  ],
  "_ensure_not_in_transaction": [
    [
      "django/contrib/postgres/operations.py",
      [
        "NotInTransactionMixin",
        "_ensure_not_in_transaction"
      ]
    ]
  ],
  "from_parameter": [
    [
      "django/contrib/postgres/search.py",
      [
        "SearchConfig",
        "from_parameter"
      ]
    ]
  ],
  "_combine": [
    [
      "django/contrib/postgres/search.py",
      [
        "SearchVectorCombinable",
        "_combine"
      ]
    ],
    [
      "django/contrib/postgres/search.py",
      [
        "SearchQueryCombinable",
        "_combine"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Combinable",
        "_combine"
      ]
    ],
    [
      "django/db/models/query_utils.py",
      [
        "Q",
        "_combine"
      ]
    ]
  ],
  "__ror__": [
    [
      "django/contrib/postgres/search.py",
      [
        "SearchQueryCombinable",
        "__ror__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Combinable",
        "__ror__"
      ]
    ]
  ],
  "__rand__": [
    [
      "django/contrib/postgres/search.py",
      [
        "SearchQueryCombinable",
        "__rand__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Combinable",
        "__rand__"
      ]
    ]
  ],
  "__invert__": [
    [
      "django/contrib/postgres/search.py",
      [
        "SearchQuery",
        "__invert__"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Exists",
        "__invert__"
      ]
    ],
    [
      "django/db/models/query_utils.py",
      [
        "Q",
        "__invert__"
      ]
    ]
  ],
  "get_hstore_oids": [
    [
      "django/contrib/postgres/signals.py",
      [
        "get_hstore_oids"
      ]
    ]
  ],
  "get_citext_oids": [
    [
      "django/contrib/postgres/signals.py",
      [
        "get_citext_oids"
      ]
    ]
  ],
  "register_type_handlers": [
    [
      "django/contrib/postgres/signals.py",
      [
        "register_type_handlers"
      ]
    ]
  ],
  "prefix_validation_error": [
    [
      "django/contrib/postgres/utils.py",
      [
        "prefix_validation_error"
      ]
    ]
  ],
  "compare": [
    [
      "django/contrib/postgres/validators.py",
      [
        "RangeMaxValueValidator",
        "compare"
      ]
    ],
    [
      "django/contrib/postgres/validators.py",
      [
        "RangeMinValueValidator",
        "compare"
      ]
    ],
    [
      "django/core/validators.py",
      [
        "BaseValidator",
        "compare"
      ]
    ],
    [
      "django/core/validators.py",
      [
        "MaxValueValidator",
        "compare"
      ]
    ],
    [
      "django/core/validators.py",
      [
        "MinValueValidator",
        "compare"
      ]
    ],
    [
      "django/core/validators.py",
      [
        "MinLengthValidator",
        "compare"
      ]
    ],
    [
      "django/core/validators.py",
      [
        "MaxLengthValidator",
        "compare"
      ]
    ]
  ],
  "key_salt": [
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "key_salt"
      ]
    ]
  ],
  "setdefault": [
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "setdefault"
      ]
    ],
    [
      "django/http/request.py",
      [
        "QueryDict",
        "setdefault"
      ]
    ],
    [
      "django/http/response.py",
      [
        "HttpResponseBase",
        "setdefault"
      ]
    ],
    [
      "django/template/context.py",
      [
        "BaseContext",
        "setdefault"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "MultiValueDict",
        "setdefault"
      ]
    ]
  ],
  "set_test_cookie": [
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "set_test_cookie"
      ]
    ]
  ],
  "test_cookie_worked": [
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "test_cookie_worked"
      ]
    ]
  ],
  "delete_test_cookie": [
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "delete_test_cookie"
      ]
    ]
  ],
  "_hash": [
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "_hash"
      ]
    ]
  ],
  "has_key": [
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "has_key"
      ]
    ],
    [
      "django/core/cache/backends/base.py",
      [
        "BaseCache",
        "has_key"
      ]
    ],
    [
      "django/core/cache/backends/db.py",
      [
        "DatabaseCache",
        "has_key"
      ]
    ],
    [
      "django/core/cache/backends/dummy.py",
      [
        "DummyCache",
        "has_key"
      ]
    ],
    [
      "django/core/cache/backends/filebased.py",
      [
        "FileBasedCache",
        "has_key"
      ]
    ],
    [
      "django/core/cache/backends/locmem.py",
      [
        "LocMemCache",
        "has_key"
      ]
    ]
  ],
  "keys": [
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "keys"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "ContextList",
        "keys"
      ]
    ],
    [
      "django/utils/translation/trans_real.py",
      [
        "TranslationCatalog",
        "keys"
      ]
    ]
  ],
  "values": [
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "values"
      ]
    ],
    [
      "django/db/models/enums.py",
      [
        "ChoicesMeta",
        "values"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "values"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "MultiValueDict",
        "values"
      ]
    ]
  ],
  "is_empty": [
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "is_empty"
      ]
    ],
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "is_empty"
      ]
    ]
  ],
  "_get_new_session_key": [
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "_get_new_session_key"
      ]
    ]
  ],
  "_get_or_create_session_key": [
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "_get_or_create_session_key"
      ]
    ]
  ],
  "_validate_session_key": [
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "_validate_session_key"
      ]
    ]
  ],
  "_get_session_key": [
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "_get_session_key"
      ]
    ],
    [
      "django/contrib/sessions/backends/signed_cookies.py",
      [
        "SessionStore",
        "_get_session_key"
      ]
    ]
  ],
  "_set_session_key": [
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "_set_session_key"
      ]
    ]
  ],
  "_get_session": [
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "_get_session"
      ]
    ]
  ],
  "get_session_cookie_age": [
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "get_session_cookie_age"
      ]
    ],
    [
      "tests/sessions_tests/models.py",
      [
        "SessionStore",
        "get_session_cookie_age"
      ]
    ]
  ],
  "get_expiry_age": [
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "get_expiry_age"
      ]
    ]
  ],
  "get_expiry_date": [
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "get_expiry_date"
      ]
    ]
  ],
  "set_expiry": [
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "set_expiry"
      ]
    ]
  ],
  "get_expire_at_browser_close": [
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "get_expire_at_browser_close"
      ]
    ]
  ],
  "flush": [
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "flush"
      ]
    ],
    [
      "django/contrib/sessions/backends/cached_db.py",
      [
        "SessionStore",
        "flush"
      ]
    ],
    [
      "django/db/migrations/recorder.py",
      [
        "MigrationRecorder",
        "flush"
      ]
    ],
    [
      "django/http/response.py",
      [
        "HttpResponseBase",
        "flush"
      ]
    ]
  ],
  "cycle_key": [
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "cycle_key"
      ]
    ],
    [
      "django/contrib/sessions/backends/signed_cookies.py",
      [
        "SessionStore",
        "cycle_key"
      ]
    ]
  ],
  "exists": [
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "exists"
      ]
    ],
    [
      "django/contrib/sessions/backends/cache.py",
      [
        "SessionStore",
        "exists"
      ]
    ],
    [
      "django/contrib/sessions/backends/cached_db.py",
      [
        "SessionStore",
        "exists"
      ]
    ],
    [
      "django/contrib/sessions/backends/db.py",
      [
        "SessionStore",
        "exists"
      ]
    ],
    [
      "django/contrib/sessions/backends/file.py",
      [
        "SessionStore",
        "exists"
      ]
    ],
    [
      "django/contrib/sessions/backends/signed_cookies.py",
      [
        "SessionStore",
        "exists"
      ]
    ],
    [
      "django/core/files/storage.py",
      [
        "Storage",
        "exists"
      ]
    ],
    [
      "django/core/files/storage.py",
      [
        "FileSystemStorage",
        "exists"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "exists"
      ]
    ],
    [
      "tests/staticfiles_tests/storage.py",
      [
        "DummyStorage",
        "exists"
      ]
    ],
    [
      "tests/staticfiles_tests/storage.py",
      [
        "PathNotImplementedStorage",
        "exists"
      ]
    ],
    [
      "tests/test_client_regress/session.py",
      [
        "SessionStore",
        "exists"
      ]
    ]
  ],
  "load": [
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "load"
      ]
    ],
    [
      "django/contrib/sessions/backends/cache.py",
      [
        "SessionStore",
        "load"
      ]
    ],
    [
      "django/contrib/sessions/backends/cached_db.py",
      [
        "SessionStore",
        "load"
      ]
    ],
    [
      "django/contrib/sessions/backends/db.py",
      [
        "SessionStore",
        "load"
      ]
    ],
    [
      "django/contrib/sessions/backends/file.py",
      [
        "SessionStore",
        "load"
      ]
    ],
    [
      "django/contrib/sessions/backends/signed_cookies.py",
      [
        "SessionStore",
        "load"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "load"
      ]
    ],
    [
      "tests/test_client_regress/session.py",
      [
        "SessionStore",
        "load"
      ]
    ]
  ],
  "clear_expired": [
    [
      "django/contrib/sessions/backends/base.py",
      [
        "SessionBase",
        "clear_expired"
      ]
    ],
    [
      "django/contrib/sessions/backends/cache.py",
      [
        "SessionStore",
        "clear_expired"
      ]
    ],
    [
      "django/contrib/sessions/backends/db.py",
      [
        "SessionStore",
        "clear_expired"
      ]
    ],
    [
      "django/contrib/sessions/backends/file.py",
      [
        "SessionStore",
        "clear_expired"
      ]
    ],
    [
      "django/contrib/sessions/backends/signed_cookies.py",
      [
        "SessionStore",
        "clear_expired"
      ]
    ]
  ],
  "cache_key": [
    [
      "django/contrib/sessions/backends/cache.py",
      [
        "SessionStore",
        "cache_key"
      ]
    ],
    [
      "django/contrib/sessions/backends/cached_db.py",
      [
        "SessionStore",
        "cache_key"
      ]
    ],
    [
      "django/template/loaders/cached.py",
      [
        "Loader",
        "cache_key"
      ]
    ]
  ],
  "get_model_class": [
    [
      "django/contrib/sessions/backends/db.py",
      [
        "SessionStore",
        "get_model_class"
      ]
    ],
    [
      "tests/sessions_tests/models.py",
      [
        "SessionStore",
        "get_model_class"
      ]
    ]
  ],
  "_get_session_from_db": [
    [
      "django/contrib/sessions/backends/db.py",
      [
        "SessionStore",
        "_get_session_from_db"
      ]
    ]
  ],
  "create_model_instance": [
    [
      "django/contrib/sessions/backends/db.py",
      [
        "SessionStore",
        "create_model_instance"
      ]
    ],
    [
      "tests/servers/views.py",
      [
        "create_model_instance"
      ]
    ],
    [
      "tests/sessions_tests/models.py",
      [
        "SessionStore",
        "create_model_instance"
      ]
    ]
  ],
  "_get_storage_path": [
    [
      "django/contrib/sessions/backends/file.py",
      [
        "SessionStore",
        "_get_storage_path"
      ]
    ]
  ],
  "_key_to_file": [
    [
      "django/contrib/sessions/backends/file.py",
      [
        "SessionStore",
        "_key_to_file"
      ]
    ],
    [
      "django/core/cache/backends/filebased.py",
      [
        "FileBasedCache",
        "_key_to_file"
      ]
    ]
  ],
  "_last_modification": [
    [
      "django/contrib/sessions/backends/file.py",
      [
        "SessionStore",
        "_last_modification"
      ]
    ]
  ],
  "_expiry_date": [
    [
      "django/contrib/sessions/backends/file.py",
      [
        "SessionStore",
        "_expiry_date"
      ]
    ]
  ],
  "get_session_store_class": [
    [
      "django/contrib/sessions/base_session.py",
      [
        "AbstractBaseSession",
        "get_session_store_class"
      ]
    ],
    [
      "django/contrib/sessions/models.py",
      [
        "Session",
        "get_session_store_class"
      ]
    ],
    [
      "tests/sessions_tests/models.py",
      [
        "CustomSession",
        "get_session_store_class"
      ]
    ]
  ],
  "get_decoded": [
    [
      "django/contrib/sessions/base_session.py",
      [
        "AbstractBaseSession",
        "get_decoded"
      ]
    ]
  ],
  "loads": [
    [
      "django/contrib/sessions/serializers.py",
      [
        "PickleSerializer",
        "loads"
      ]
    ],
    [
      "django/core/signing.py",
      [
        "JSONSerializer",
        "loads"
      ]
    ],
    [
      "django/core/signing.py",
      [
        "loads"
      ]
    ]
  ],
  "ping_google": [
    [
      "django/contrib/sitemaps/__init__.py",
      [
        "ping_google"
      ]
    ]
  ],
  "_get_sitemap_full_url": [
    [
      "django/contrib/sitemaps/__init__.py",
      [
        "_get_sitemap_full_url"
      ]
    ]
  ],
  "__get": [
    [
      "django/contrib/sitemaps/__init__.py",
      [
        "Sitemap",
        "__get"
      ]
    ]
  ],
  "paginator": [
    [
      "django/contrib/sitemaps/__init__.py",
      [
        "Sitemap",
        "paginator"
      ]
    ]
  ],
  "_urls": [
    [
      "django/contrib/sitemaps/__init__.py",
      [
        "Sitemap",
        "_urls"
      ]
    ]
  ],
  "lastmod": [
    [
      "django/contrib/sitemaps/__init__.py",
      [
        "GenericSitemap",
        "lastmod"
      ]
    ]
  ],
  "x_robots_tag": [
    [
      "django/contrib/sitemaps/views.py",
      [
        "x_robots_tag"
      ]
    ]
  ],
  "sitemap": [
    [
      "django/contrib/sitemaps/views.py",
      [
        "sitemap"
      ]
    ]
  ],
  "create_default_site": [
    [
      "django/contrib/sites/management.py",
      [
        "create_default_site"
      ]
    ]
  ],
  "_get_field_name": [
    [
      "django/contrib/sites/managers.py",
      [
        "CurrentSiteManager",
        "_get_field_name"
      ]
    ]
  ],
  "_simple_domain_name_validator": [
    [
      "django/contrib/sites/models.py",
      [
        "_simple_domain_name_validator"
      ]
    ]
  ],
  "_get_site_by_id": [
    [
      "django/contrib/sites/models.py",
      [
        "SiteManager",
        "_get_site_by_id"
      ]
    ]
  ],
  "_get_site_by_request": [
    [
      "django/contrib/sites/models.py",
      [
        "SiteManager",
        "_get_site_by_request"
      ]
    ]
  ],
  "get_current": [
    [
      "django/contrib/sites/models.py",
      [
        "SiteManager",
        "get_current"
      ]
    ]
  ],
  "clear_site_cache": [
    [
      "django/contrib/sites/models.py",
      [
        "clear_site_cache"
      ]
    ]
  ],
  "get_current_site": [
    [
      "django/contrib/sites/shortcuts.py",
      [
        "get_current_site"
      ]
    ]
  ],
  "check_finders": [
    [
      "django/contrib/staticfiles/checks.py",
      [
        "check_finders"
      ]
    ]
  ],
  "find": [
    [
      "django/contrib/staticfiles/finders.py",
      [
        "BaseFinder",
        "find"
      ]
    ],
    [
      "django/contrib/staticfiles/finders.py",
      [
        "FileSystemFinder",
        "find"
      ]
    ],
    [
      "django/contrib/staticfiles/finders.py",
      [
        "AppDirectoriesFinder",
        "find"
      ]
    ],
    [
      "django/contrib/staticfiles/finders.py",
      [
        "BaseStorageFinder",
        "find"
      ]
    ],
    [
      "django/contrib/staticfiles/finders.py",
      [
        "find"
      ]
    ]
  ],
  "list": [
    [
      "django/contrib/staticfiles/finders.py",
      [
        "BaseFinder",
        "list"
      ]
    ],
    [
      "django/contrib/staticfiles/finders.py",
      [
        "FileSystemFinder",
        "list"
      ]
    ],
    [
      "django/contrib/staticfiles/finders.py",
      [
        "AppDirectoriesFinder",
        "list"
      ]
    ],
    [
      "django/contrib/staticfiles/finders.py",
      [
        "BaseStorageFinder",
        "list"
      ]
    ],
    [
      "django/utils/archive.py",
      [
        "Archive",
        "list"
      ]
    ],
    [
      "django/utils/archive.py",
      [
        "BaseArchive",
        "list"
      ]
    ],
    [
      "django/utils/archive.py",
      [
        "TarArchive",
        "list"
      ]
    ],
    [
      "django/utils/archive.py",
      [
        "ZipArchive",
        "list"
      ]
    ]
  ],
  "find_location": [
    [
      "django/contrib/staticfiles/finders.py",
      [
        "FileSystemFinder",
        "find_location"
      ]
    ]
  ],
  "find_in_app": [
    [
      "django/contrib/staticfiles/finders.py",
      [
        "AppDirectoriesFinder",
        "find_in_app"
      ]
    ]
  ],
  "get_finders": [
    [
      "django/contrib/staticfiles/finders.py",
      [
        "get_finders"
      ]
    ],
    [
      "tests/staticfiles_tests/test_checks.py",
      [
        "FindersCheckTests",
        "test_check_finders",
        "get_finders"
      ]
    ]
  ],
  "get_finder": [
    [
      "django/contrib/staticfiles/finders.py",
      [
        "get_finder"
      ]
    ]
  ],
  "load_middleware": [
    [
      "django/contrib/staticfiles/handlers.py",
      [
        "StaticFilesHandlerMixin",
        "load_middleware"
      ]
    ],
    [
      "django/core/handlers/base.py",
      [
        "BaseHandler",
        "load_middleware"
      ]
    ]
  ],
  "get_base_url": [
    [
      "django/contrib/staticfiles/handlers.py",
      [
        "StaticFilesHandlerMixin",
        "get_base_url"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "_StaticFilesHandler",
        "get_base_url"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "_MediaFilesHandler",
        "get_base_url"
      ]
    ]
  ],
  "_should_handle": [
    [
      "django/contrib/staticfiles/handlers.py",
      [
        "StaticFilesHandlerMixin",
        "_should_handle"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "FSFilesHandler",
        "_should_handle"
      ]
    ]
  ],
  "file_path": [
    [
      "django/contrib/staticfiles/handlers.py",
      [
        "StaticFilesHandlerMixin",
        "file_path"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "FSFilesHandler",
        "file_path"
      ]
    ]
  ],
  "serve": [
    [
      "django/contrib/staticfiles/handlers.py",
      [
        "StaticFilesHandlerMixin",
        "serve"
      ]
    ],
    [
      "django/contrib/staticfiles/views.py",
      [
        "serve"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "FSFilesHandler",
        "serve"
      ]
    ],
    [
      "django/views/static.py",
      [
        "serve"
      ]
    ]
  ],
  "get_response": [
    [
      "django/contrib/staticfiles/handlers.py",
      [
        "StaticFilesHandlerMixin",
        "get_response"
      ]
    ],
    [
      "django/core/handlers/base.py",
      [
        "BaseHandler",
        "get_response"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "FSFilesHandler",
        "get_response"
      ]
    ],
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginTest",
        "test_login_csrf_rotate",
        "get_response"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_cache_write_unpicklable_object",
        "get_response"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "CacheI18nTest",
        "test_middleware",
        "get_response"
      ]
    ],
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests",
        "get_response"
      ]
    ],
    [
      "tests/middleware/tests.py",
      [
        "BrokenLinkEmailsMiddlewareTest",
        "get_response"
      ]
    ],
    [
      "tests/middleware/tests.py",
      [
        "ConditionalGetMiddlewareTest",
        "get_response"
      ]
    ],
    [
      "tests/middleware/tests.py",
      [
        "ConditionalGetMiddlewareTest",
        "test_not_modified_headers",
        "get_response"
      ]
    ],
    [
      "tests/middleware/tests.py",
      [
        "GZipMiddlewareTest",
        "get_response"
      ]
    ]
  ],
  "set_options": [
    [
      "django/contrib/staticfiles/management/commands/collectstatic.py",
      [
        "Command",
        "set_options"
      ]
    ]
  ],
  "log": [
    [
      "django/contrib/staticfiles/management/commands/collectstatic.py",
      [
        "Command",
        "log"
      ]
    ],
    [
      "django/db/backends/base/creation.py",
      [
        "BaseDatabaseCreation",
        "log"
      ]
    ]
  ],
  "is_local_storage": [
    [
      "django/contrib/staticfiles/management/commands/collectstatic.py",
      [
        "Command",
        "is_local_storage"
      ]
    ]
  ],
  "clear_dir": [
    [
      "django/contrib/staticfiles/management/commands/collectstatic.py",
      [
        "Command",
        "clear_dir"
      ]
    ]
  ],
  "delete_file": [
    [
      "django/contrib/staticfiles/management/commands/collectstatic.py",
      [
        "Command",
        "delete_file"
      ]
    ]
  ],
  "link_file": [
    [
      "django/contrib/staticfiles/management/commands/collectstatic.py",
      [
        "Command",
        "link_file"
      ]
    ]
  ],
  "copy_file": [
    [
      "django/contrib/staticfiles/management/commands/collectstatic.py",
      [
        "Command",
        "copy_file"
      ]
    ]
  ],
  "handle_label": [
    [
      "django/contrib/staticfiles/management/commands/findstatic.py",
      [
        "Command",
        "handle_label"
      ]
    ],
    [
      "django/core/management/base.py",
      [
        "LabelCommand",
        "handle_label"
      ]
    ],
    [
      "tests/admin_scripts/management/commands/label_command.py",
      [
        "Command",
        "handle_label"
      ]
    ]
  ],
  "get_handler": [
    [
      "django/contrib/staticfiles/management/commands/runserver.py",
      [
        "Command",
        "get_handler"
      ]
    ],
    [
      "django/core/management/commands/runserver.py",
      [
        "Command",
        "get_handler"
      ]
    ]
  ],
  "path": [
    [
      "django/contrib/staticfiles/storage.py",
      [
        "StaticFilesStorage",
        "path"
      ]
    ],
    [
      "django/core/files/storage.py",
      [
        "Storage",
        "path"
      ]
    ],
    [
      "django/core/files/storage.py",
      [
        "FileSystemStorage",
        "path"
      ]
    ],
    [
      "django/core/management/commands/makemessages.py",
      [
        "TranslatableFile",
        "path"
      ]
    ],
    [
      "django/core/management/commands/makemessages.py",
      [
        "BuildFile",
        "path"
      ]
    ],
    [
      "django/db/migrations/writer.py",
      [
        "MigrationWriter",
        "path"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "FieldFile",
        "path"
      ]
    ],
    [
      "tests/staticfiles_tests/storage.py",
      [
        "PathNotImplementedStorage",
        "path"
      ]
    ]
  ],
  "file_hash": [
    [
      "django/contrib/staticfiles/storage.py",
      [
        "HashedFilesMixin",
        "file_hash"
      ]
    ],
    [
      "tests/staticfiles_tests/storage.py",
      [
        "SimpleStorage",
        "file_hash"
      ]
    ]
  ],
  "hashed_name": [
    [
      "django/contrib/staticfiles/storage.py",
      [
        "HashedFilesMixin",
        "hashed_name"
      ]
    ]
  ],
  "_url": [
    [
      "django/contrib/staticfiles/storage.py",
      [
        "HashedFilesMixin",
        "_url"
      ]
    ]
  ],
  "converter": [
    [
      "django/contrib/staticfiles/storage.py",
      [
        "HashedFilesMixin",
        "url_converter",
        "converter"
      ]
    ]
  ],
  "url_converter": [
    [
      "django/contrib/staticfiles/storage.py",
      [
        "HashedFilesMixin",
        "url_converter"
      ]
    ]
  ],
  "post_process": [
    [
      "django/contrib/staticfiles/storage.py",
      [
        "HashedFilesMixin",
        "post_process"
      ]
    ],
    [
      "django/contrib/staticfiles/storage.py",
      [
        "ManifestFilesMixin",
        "post_process"
      ]
    ]
  ],
  "path_level": [
    [
      "django/contrib/staticfiles/storage.py",
      [
        "HashedFilesMixin",
        "_post_process",
        "path_level"
      ]
    ]
  ],
  "_post_process": [
    [
      "django/contrib/staticfiles/storage.py",
      [
        "HashedFilesMixin",
        "_post_process"
      ]
    ]
  ],
  "clean_name": [
    [
      "django/contrib/staticfiles/storage.py",
      [
        "HashedFilesMixin",
        "clean_name"
      ]
    ]
  ],
  "hash_key": [
    [
      "django/contrib/staticfiles/storage.py",
      [
        "HashedFilesMixin",
        "hash_key"
      ]
    ]
  ],
  "_stored_name": [
    [
      "django/contrib/staticfiles/storage.py",
      [
        "HashedFilesMixin",
        "_stored_name"
      ]
    ]
  ],
  "stored_name": [
    [
      "django/contrib/staticfiles/storage.py",
      [
        "HashedFilesMixin",
        "stored_name"
      ]
    ],
    [
      "django/contrib/staticfiles/storage.py",
      [
        "ManifestFilesMixin",
        "stored_name"
      ]
    ]
  ],
  "read_manifest": [
    [
      "django/contrib/staticfiles/storage.py",
      [
        "ManifestFilesMixin",
        "read_manifest"
      ]
    ]
  ],
  "load_manifest": [
    [
      "django/contrib/staticfiles/storage.py",
      [
        "ManifestFilesMixin",
        "load_manifest"
      ]
    ]
  ],
  "save_manifest": [
    [
      "django/contrib/staticfiles/storage.py",
      [
        "ManifestFilesMixin",
        "save_manifest"
      ]
    ]
  ],
  "staticfiles_urlpatterns": [
    [
      "django/contrib/staticfiles/urls.py",
      [
        "staticfiles_urlpatterns"
      ]
    ]
  ],
  "matches_patterns": [
    [
      "django/contrib/staticfiles/utils.py",
      [
        "matches_patterns"
      ]
    ]
  ],
  "get_files": [
    [
      "django/contrib/staticfiles/utils.py",
      [
        "get_files"
      ]
    ]
  ],
  "check_settings": [
    [
      "django/contrib/staticfiles/utils.py",
      [
        "check_settings"
      ]
    ],
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "check_settings"
      ]
    ],
    [
      "tests/settings_tests/tests.py",
      [
        "OverrideSettingsIsolationOnExceptionTests",
        "check_settings"
      ]
    ]
  ],
  "add_domain": [
    [
      "django/contrib/syndication/views.py",
      [
        "add_domain"
      ]
    ]
  ],
  "item_title": [
    [
      "django/contrib/syndication/views.py",
      [
        "Feed",
        "item_title"
      ]
    ],
    [
      "tests/syndication_tests/feeds.py",
      [
        "TemplateFeed",
        "item_title"
      ]
    ]
  ],
  "item_description": [
    [
      "django/contrib/syndication/views.py",
      [
        "Feed",
        "item_description"
      ]
    ],
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestRss2Feed",
        "item_description"
      ]
    ]
  ],
  "item_link": [
    [
      "django/contrib/syndication/views.py",
      [
        "Feed",
        "item_link"
      ]
    ],
    [
      "tests/gis_tests/geoapp/feeds.py",
      [
        "TestGeoRSS1",
        "item_link"
      ]
    ]
  ],
  "item_enclosures": [
    [
      "django/contrib/syndication/views.py",
      [
        "Feed",
        "item_enclosures"
      ]
    ],
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestMultipleEnclosureRSSFeed",
        "item_enclosures"
      ]
    ],
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestMultipleEnclosureAtomFeed",
        "item_enclosures"
      ]
    ]
  ],
  "_get_dynamic_attr": [
    [
      "django/contrib/syndication/views.py",
      [
        "Feed",
        "_get_dynamic_attr"
      ]
    ]
  ],
  "get_feed": [
    [
      "django/contrib/syndication/views.py",
      [
        "Feed",
        "get_feed"
      ]
    ]
  ],
  "get_asgi_application": [
    [
      "django/core/asgi.py",
      [
        "get_asgi_application"
      ]
    ]
  ],
  "_create_cache": [
    [
      "django/core/cache/__init__.py",
      [
        "_create_cache"
      ]
    ]
  ],
  "all": [
    [
      "django/core/cache/__init__.py",
      [
        "CacheHandler",
        "all"
      ]
    ],
    [
      "django/db/models/manager.py",
      [
        "BaseManager",
        "all"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "all"
      ]
    ],
    [
      "django/db/utils.py",
      [
        "ConnectionHandler",
        "all"
      ]
    ],
    [
      "django/template/utils.py",
      [
        "EngineHandler",
        "all"
      ]
    ]
  ],
  "close_caches": [
    [
      "django/core/cache/__init__.py",
      [
        "close_caches"
      ]
    ]
  ],
  "default_key_func": [
    [
      "django/core/cache/backends/base.py",
      [
        "default_key_func"
      ]
    ]
  ],
  "get_key_func": [
    [
      "django/core/cache/backends/base.py",
      [
        "get_key_func"
      ]
    ]
  ],
  "get_backend_timeout": [
    [
      "django/core/cache/backends/base.py",
      [
        "BaseCache",
        "get_backend_timeout"
      ]
    ],
    [
      "django/core/cache/backends/memcached.py",
      [
        "BaseMemcachedCache",
        "get_backend_timeout"
      ]
    ]
  ],
  "make_key": [
    [
      "django/core/cache/backends/base.py",
      [
        "BaseCache",
        "make_key"
      ]
    ]
  ],
  "touch": [
    [
      "django/core/cache/backends/base.py",
      [
        "BaseCache",
        "touch"
      ]
    ],
    [
      "django/core/cache/backends/db.py",
      [
        "DatabaseCache",
        "touch"
      ]
    ],
    [
      "django/core/cache/backends/dummy.py",
      [
        "DummyCache",
        "touch"
      ]
    ],
    [
      "django/core/cache/backends/filebased.py",
      [
        "FileBasedCache",
        "touch"
      ]
    ],
    [
      "django/core/cache/backends/locmem.py",
      [
        "LocMemCache",
        "touch"
      ]
    ],
    [
      "django/core/cache/backends/memcached.py",
      [
        "MemcachedCache",
        "touch"
      ]
    ],
    [
      "django/core/cache/backends/memcached.py",
      [
        "PyLibMCCache",
        "touch"
      ]
    ]
  ],
  "get_many": [
    [
      "django/core/cache/backends/base.py",
      [
        "BaseCache",
        "get_many"
      ]
    ],
    [
      "django/core/cache/backends/db.py",
      [
        "DatabaseCache",
        "get_many"
      ]
    ],
    [
      "django/core/cache/backends/memcached.py",
      [
        "BaseMemcachedCache",
        "get_many"
      ]
    ]
  ],
  "get_or_set": [
    [
      "django/core/cache/backends/base.py",
      [
        "BaseCache",
        "get_or_set"
      ]
    ]
  ],
  "incr": [
    [
      "django/core/cache/backends/base.py",
      [
        "BaseCache",
        "incr"
      ]
    ],
    [
      "django/core/cache/backends/locmem.py",
      [
        "LocMemCache",
        "incr"
      ]
    ],
    [
      "django/core/cache/backends/memcached.py",
      [
        "BaseMemcachedCache",
        "incr"
      ]
    ]
  ],
  "decr": [
    [
      "django/core/cache/backends/base.py",
      [
        "BaseCache",
        "decr"
      ]
    ],
    [
      "django/core/cache/backends/memcached.py",
      [
        "BaseMemcachedCache",
        "decr"
      ]
    ]
  ],
  "set_many": [
    [
      "django/core/cache/backends/base.py",
      [
        "BaseCache",
        "set_many"
      ]
    ],
    [
      "django/core/cache/backends/memcached.py",
      [
        "BaseMemcachedCache",
        "set_many"
      ]
    ]
  ],
  "delete_many": [
    [
      "django/core/cache/backends/base.py",
      [
        "BaseCache",
        "delete_many"
      ]
    ],
    [
      "django/core/cache/backends/db.py",
      [
        "DatabaseCache",
        "delete_many"
      ]
    ],
    [
      "django/core/cache/backends/memcached.py",
      [
        "BaseMemcachedCache",
        "delete_many"
      ]
    ]
  ],
  "validate_key": [
    [
      "django/core/cache/backends/base.py",
      [
        "BaseCache",
        "validate_key"
      ]
    ],
    [
      "tests/cache/liberal_backend.py",
      [
        "LiberalKeyValidationMixin",
        "validate_key"
      ]
    ]
  ],
  "incr_version": [
    [
      "django/core/cache/backends/base.py",
      [
        "BaseCache",
        "incr_version"
      ]
    ]
  ],
  "decr_version": [
    [
      "django/core/cache/backends/base.py",
      [
        "BaseCache",
        "decr_version"
      ]
    ]
  ],
  "close": [
    [
      "django/core/cache/backends/base.py",
      [
        "BaseCache",
        "close"
      ]
    ],
    [
      "django/core/cache/backends/memcached.py",
      [
        "BaseMemcachedCache",
        "close"
      ]
    ],
    [
      "django/core/cache/backends/memcached.py",
      [
        "PyLibMCCache",
        "close"
      ]
    ],
    [
      "django/core/files/base.py",
      [
        "File",
        "close"
      ]
    ],
    [
      "django/core/files/base.py",
      [
        "ContentFile",
        "close"
      ]
    ],
    [
      "django/core/files/temp.py",
      [
        "if_os_name_nt_",
        "TemporaryFile",
        "close"
      ]
    ],
    [
      "django/core/files/uploadedfile.py",
      [
        "TemporaryUploadedFile",
        "close"
      ]
    ],
    [
      "django/core/mail/backends/base.py",
      [
        "BaseEmailBackend",
        "close"
      ]
    ],
    [
      "django/core/mail/backends/filebased.py",
      [
        "EmailBackend",
        "close"
      ]
    ],
    [
      "django/core/mail/backends/smtp.py",
      [
        "EmailBackend",
        "close"
      ]
    ],
    [
      "django/core/servers/basehttp.py",
      [
        "ServerHandler",
        "close"
      ]
    ],
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "close"
      ]
    ],
    [
      "django/db/backends/oracle/base.py",
      [
        "FormatStylePlaceholderCursor",
        "close"
      ]
    ],
    [
      "django/db/backends/sqlite3/base.py",
      [
        "DatabaseWrapper",
        "close"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "FieldFile",
        "close"
      ]
    ],
    [
      "django/http/multipartparser.py",
      [
        "LazyStream",
        "close"
      ]
    ],
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "close"
      ]
    ],
    [
      "django/http/response.py",
      [
        "HttpResponseBase",
        "close"
      ]
    ],
    [
      "django/utils/archive.py",
      [
        "Archive",
        "close"
      ]
    ],
    [
      "django/utils/archive.py",
      [
        "TarArchive",
        "close"
      ]
    ],
    [
      "django/utils/archive.py",
      [
        "ZipArchive",
        "close"
      ]
    ],
    [
      "tests/cache/closeable_cache.py",
      [
        "CloseHookMixin",
        "close"
      ]
    ],
    [
      "tests/files/tests.py",
      [
        "DimensionClosingBug",
        "test_closing_of_filenames",
        "FileWrapper",
        "close"
      ]
    ],
    [
      "tests/servers/test_basehttp.py",
      [
        "WSGIRequestHandlerTestCase",
        "test_strips_underscore_headers",
        "UnclosableBytesIO",
        "close"
      ]
    ]
  ],
  "_base_set": [
    [
      "django/core/cache/backends/db.py",
      [
        "DatabaseCache",
        "_base_set"
      ]
    ]
  ],
  "_base_delete_many": [
    [
      "django/core/cache/backends/db.py",
      [
        "DatabaseCache",
        "_base_delete_many"
      ]
    ]
  ],
  "_cull": [
    [
      "django/core/cache/backends/db.py",
      [
        "DatabaseCache",
        "_cull"
      ]
    ],
    [
      "django/core/cache/backends/filebased.py",
      [
        "FileBasedCache",
        "_cull"
      ]
    ],
    [
      "django/core/cache/backends/locmem.py",
      [
        "LocMemCache",
        "_cull"
      ]
    ]
  ],
  "_write_content": [
    [
      "django/core/cache/backends/filebased.py",
      [
        "FileBasedCache",
        "_write_content"
      ]
    ]
  ],
  "_delete": [
    [
      "django/core/cache/backends/filebased.py",
      [
        "FileBasedCache",
        "_delete"
      ]
    ],
    [
      "django/core/cache/backends/locmem.py",
      [
        "LocMemCache",
        "_delete"
      ]
    ]
  ],
  "_createdir": [
    [
      "django/core/cache/backends/filebased.py",
      [
        "FileBasedCache",
        "_createdir"
      ]
    ]
  ],
  "_is_expired": [
    [
      "django/core/cache/backends/filebased.py",
      [
        "FileBasedCache",
        "_is_expired"
      ]
    ]
  ],
  "_list_cache_files": [
    [
      "django/core/cache/backends/filebased.py",
      [
        "FileBasedCache",
        "_list_cache_files"
      ]
    ]
  ],
  "_set": [
    [
      "django/core/cache/backends/locmem.py",
      [
        "LocMemCache",
        "_set"
      ]
    ]
  ],
  "_has_expired": [
    [
      "django/core/cache/backends/locmem.py",
      [
        "LocMemCache",
        "_has_expired"
      ]
    ]
  ],
  "_cache": [
    [
      "django/core/cache/backends/memcached.py",
      [
        "BaseMemcachedCache",
        "_cache"
      ]
    ],
    [
      "django/core/cache/backends/memcached.py",
      [
        "MemcachedCache",
        "_cache"
      ]
    ],
    [
      "django/core/cache/backends/memcached.py",
      [
        "PyLibMCCache",
        "_cache"
      ]
    ]
  ],
  "make_template_fragment_key": [
    [
      "django/core/cache/utils.py",
      [
        "make_template_fragment_key"
      ]
    ]
  ],
  "check_async_unsafe": [
    [
      "django/core/checks/async_checks.py",
      [
        "check_async_unsafe"
      ]
    ]
  ],
  "check_default_cache_is_configured": [
    [
      "django/core/checks/caches.py",
      [
        "check_default_cache_is_configured"
      ]
    ]
  ],
  "check_database_backends": [
    [
      "django/core/checks/database.py",
      [
        "check_database_backends"
      ]
    ]
  ],
  "is_serious": [
    [
      "django/core/checks/messages.py",
      [
        "CheckMessage",
        "is_serious"
      ]
    ]
  ],
  "is_silenced": [
    [
      "django/core/checks/messages.py",
      [
        "CheckMessage",
        "is_silenced"
      ]
    ]
  ],
  "check_all_models": [
    [
      "django/core/checks/model_checks.py",
      [
        "check_all_models"
      ]
    ]
  ],
  "extract_operation": [
    [
      "django/core/checks/model_checks.py",
      [
        "_check_lazy_references",
        "extract_operation"
      ]
    ]
  ],
  "app_model_error": [
    [
      "django/core/checks/model_checks.py",
      [
        "_check_lazy_references",
        "app_model_error"
      ]
    ]
  ],
  "field_error": [
    [
      "django/core/checks/model_checks.py",
      [
        "_check_lazy_references",
        "field_error"
      ]
    ]
  ],
  "signal_connect_error": [
    [
      "django/core/checks/model_checks.py",
      [
        "_check_lazy_references",
        "signal_connect_error"
      ]
    ]
  ],
  "default_error": [
    [
      "django/core/checks/model_checks.py",
      [
        "_check_lazy_references",
        "default_error"
      ]
    ]
  ],
  "build_error": [
    [
      "django/core/checks/model_checks.py",
      [
        "_check_lazy_references",
        "build_error"
      ]
    ]
  ],
  "_check_lazy_references": [
    [
      "django/core/checks/model_checks.py",
      [
        "_check_lazy_references"
      ]
    ]
  ],
  "check_lazy_references": [
    [
      "django/core/checks/model_checks.py",
      [
        "check_lazy_references"
      ]
    ]
  ],
  "run_checks": [
    [
      "django/core/checks/registry.py",
      [
        "CheckRegistry",
        "run_checks"
      ]
    ],
    [
      "django/test/runner.py",
      [
        "DiscoverRunner",
        "run_checks"
      ]
    ]
  ],
  "tag_exists": [
    [
      "django/core/checks/registry.py",
      [
        "CheckRegistry",
        "tag_exists"
      ]
    ]
  ],
  "tags_available": [
    [
      "django/core/checks/registry.py",
      [
        "CheckRegistry",
        "tags_available"
      ]
    ]
  ],
  "get_checks": [
    [
      "django/core/checks/registry.py",
      [
        "CheckRegistry",
        "get_checks"
      ]
    ]
  ],
  "_security_middleware": [
    [
      "django/core/checks/security/base.py",
      [
        "_security_middleware"
      ]
    ]
  ],
  "_xframe_middleware": [
    [
      "django/core/checks/security/base.py",
      [
        "_xframe_middleware"
      ]
    ]
  ],
  "check_security_middleware": [
    [
      "django/core/checks/security/base.py",
      [
        "check_security_middleware"
      ]
    ]
  ],
  "check_xframe_options_middleware": [
    [
      "django/core/checks/security/base.py",
      [
        "check_xframe_options_middleware"
      ]
    ]
  ],
  "check_sts": [
    [
      "django/core/checks/security/base.py",
      [
        "check_sts"
      ]
    ]
  ],
  "check_sts_include_subdomains": [
    [
      "django/core/checks/security/base.py",
      [
        "check_sts_include_subdomains"
      ]
    ]
  ],
  "check_sts_preload": [
    [
      "django/core/checks/security/base.py",
      [
        "check_sts_preload"
      ]
    ]
  ],
  "check_content_type_nosniff": [
    [
      "django/core/checks/security/base.py",
      [
        "check_content_type_nosniff"
      ]
    ]
  ],
  "check_ssl_redirect": [
    [
      "django/core/checks/security/base.py",
      [
        "check_ssl_redirect"
      ]
    ]
  ],
  "check_secret_key": [
    [
      "django/core/checks/security/base.py",
      [
        "check_secret_key"
      ]
    ]
  ],
  "check_debug": [
    [
      "django/core/checks/security/base.py",
      [
        "check_debug"
      ]
    ]
  ],
  "check_xframe_deny": [
    [
      "django/core/checks/security/base.py",
      [
        "check_xframe_deny"
      ]
    ]
  ],
  "check_allowed_hosts": [
    [
      "django/core/checks/security/base.py",
      [
        "check_allowed_hosts"
      ]
    ]
  ],
  "check_referrer_policy": [
    [
      "django/core/checks/security/base.py",
      [
        "check_referrer_policy"
      ]
    ]
  ],
  "_csrf_middleware": [
    [
      "django/core/checks/security/csrf.py",
      [
        "_csrf_middleware"
      ]
    ]
  ],
  "check_csrf_middleware": [
    [
      "django/core/checks/security/csrf.py",
      [
        "check_csrf_middleware"
      ]
    ]
  ],
  "check_csrf_cookie_secure": [
    [
      "django/core/checks/security/csrf.py",
      [
        "check_csrf_cookie_secure"
      ]
    ]
  ],
  "add_session_cookie_message": [
    [
      "django/core/checks/security/sessions.py",
      [
        "add_session_cookie_message"
      ]
    ]
  ],
  "add_httponly_message": [
    [
      "django/core/checks/security/sessions.py",
      [
        "add_httponly_message"
      ]
    ]
  ],
  "check_session_cookie_secure": [
    [
      "django/core/checks/security/sessions.py",
      [
        "check_session_cookie_secure"
      ]
    ]
  ],
  "check_session_cookie_httponly": [
    [
      "django/core/checks/security/sessions.py",
      [
        "check_session_cookie_httponly"
      ]
    ]
  ],
  "_session_middleware": [
    [
      "django/core/checks/security/sessions.py",
      [
        "_session_middleware"
      ]
    ]
  ],
  "_session_app": [
    [
      "django/core/checks/security/sessions.py",
      [
        "_session_app"
      ]
    ]
  ],
  "check_setting_app_dirs_loaders": [
    [
      "django/core/checks/templates.py",
      [
        "check_setting_app_dirs_loaders"
      ]
    ]
  ],
  "check_string_if_invalid_is_string": [
    [
      "django/core/checks/templates.py",
      [
        "check_string_if_invalid_is_string"
      ]
    ]
  ],
  "check_setting_language_code": [
    [
      "django/core/checks/translation.py",
      [
        "check_setting_language_code"
      ]
    ]
  ],
  "check_setting_languages": [
    [
      "django/core/checks/translation.py",
      [
        "check_setting_languages"
      ]
    ]
  ],
  "check_setting_languages_bidi": [
    [
      "django/core/checks/translation.py",
      [
        "check_setting_languages_bidi"
      ]
    ]
  ],
  "check_language_settings_consistent": [
    [
      "django/core/checks/translation.py",
      [
        "check_language_settings_consistent"
      ]
    ]
  ],
  "check_url_config": [
    [
      "django/core/checks/urls.py",
      [
        "check_url_config"
      ]
    ]
  ],
  "check_resolver": [
    [
      "django/core/checks/urls.py",
      [
        "check_resolver"
      ]
    ]
  ],
  "check_url_namespaces_unique": [
    [
      "django/core/checks/urls.py",
      [
        "check_url_namespaces_unique"
      ]
    ]
  ],
  "_load_all_namespaces": [
    [
      "django/core/checks/urls.py",
      [
        "_load_all_namespaces"
      ]
    ]
  ],
  "get_warning_for_invalid_pattern": [
    [
      "django/core/checks/urls.py",
      [
        "get_warning_for_invalid_pattern"
      ]
    ]
  ],
  "check_url_settings": [
    [
      "django/core/checks/urls.py",
      [
        "check_url_settings"
      ]
    ]
  ],
  "E006": [
    [
      "django/core/checks/urls.py",
      [
        "E006"
      ]
    ]
  ],
  "message_dict": [
    [
      "django/core/exceptions.py",
      [
        "ValidationError",
        "message_dict"
      ]
    ]
  ],
  "update_error_dict": [
    [
      "django/core/exceptions.py",
      [
        "ValidationError",
        "update_error_dict"
      ]
    ]
  ],
  "chunks": [
    [
      "django/core/files/base.py",
      [
        "File",
        "chunks"
      ]
    ],
    [
      "django/core/files/uploadedfile.py",
      [
        "InMemoryUploadedFile",
        "chunks"
      ]
    ],
    [
      "tests/file_storage/tests.py",
      [
        "SlowFile",
        "chunks"
      ]
    ]
  ],
  "multiple_chunks": [
    [
      "django/core/files/base.py",
      [
        "File",
        "multiple_chunks"
      ]
    ],
    [
      "django/core/files/uploadedfile.py",
      [
        "InMemoryUploadedFile",
        "multiple_chunks"
      ]
    ]
  ],
  "__enter__": [
    [
      "django/core/files/base.py",
      [
        "File",
        "__enter__"
      ]
    ],
    [
      "django/core/files/temp.py",
      [
        "if_os_name_nt_",
        "TemporaryFile",
        "__enter__"
      ]
    ],
    [
      "django/core/mail/backends/base.py",
      [
        "BaseEmailBackend",
        "__enter__"
      ]
    ],
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "__enter__"
      ]
    ],
    [
      "django/db/backends/sqlite3/schema.py",
      [
        "DatabaseSchemaEditor",
        "__enter__"
      ]
    ],
    [
      "django/db/backends/utils.py",
      [
        "CursorWrapper",
        "__enter__"
      ]
    ],
    [
      "django/db/transaction.py",
      [
        "Atomic",
        "__enter__"
      ]
    ],
    [
      "django/db/utils.py",
      [
        "DatabaseErrorWrapper",
        "__enter__"
      ]
    ],
    [
      "django/template/context.py",
      [
        "ContextDict",
        "__enter__"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "_AssertTemplateUsedContext",
        "__enter__"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "TestContextDecorator",
        "__enter__"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "CaptureQueriesContext",
        "__enter__"
      ]
    ],
    [
      "django/utils/archive.py",
      [
        "Archive",
        "__enter__"
      ]
    ],
    [
      "django/utils/timezone.py",
      [
        "override",
        "__enter__"
      ]
    ],
    [
      "django/utils/translation/__init__.py",
      [
        "override",
        "__enter__"
      ]
    ],
    [
      "tests/auth_tests/models/custom_user.py",
      [
        "RemoveGroupsAndPermissions",
        "__enter__"
      ]
    ]
  ],
  "__exit__": [
    [
      "django/core/files/base.py",
      [
        "File",
        "__exit__"
      ]
    ],
    [
      "django/core/files/temp.py",
      [
        "if_os_name_nt_",
        "TemporaryFile",
        "__exit__"
      ]
    ],
    [
      "django/core/mail/backends/base.py",
      [
        "BaseEmailBackend",
        "__exit__"
      ]
    ],
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "__exit__"
      ]
    ],
    [
      "django/db/backends/sqlite3/schema.py",
      [
        "DatabaseSchemaEditor",
        "__exit__"
      ]
    ],
    [
      "django/db/backends/utils.py",
      [
        "CursorWrapper",
        "__exit__"
      ]
    ],
    [
      "django/db/transaction.py",
      [
        "Atomic",
        "__exit__"
      ]
    ],
    [
      "django/db/utils.py",
      [
        "DatabaseErrorWrapper",
        "__exit__"
      ]
    ],
    [
      "django/template/context.py",
      [
        "ContextDict",
        "__exit__"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "_AssertNumQueriesContext",
        "__exit__"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "_AssertTemplateUsedContext",
        "__exit__"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "TestContextDecorator",
        "__exit__"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "CaptureQueriesContext",
        "__exit__"
      ]
    ],
    [
      "django/utils/archive.py",
      [
        "Archive",
        "__exit__"
      ]
    ],
    [
      "django/utils/timezone.py",
      [
        "override",
        "__exit__"
      ]
    ],
    [
      "django/utils/translation/__init__.py",
      [
        "override",
        "__exit__"
      ]
    ],
    [
      "tests/auth_tests/models/custom_user.py",
      [
        "RemoveGroupsAndPermissions",
        "__exit__"
      ]
    ]
  ],
  "endswith_cr": [
    [
      "django/core/files/base.py",
      [
        "endswith_cr"
      ]
    ]
  ],
  "endswith_lf": [
    [
      "django/core/files/base.py",
      [
        "endswith_lf"
      ]
    ]
  ],
  "equals_lf": [
    [
      "django/core/files/base.py",
      [
        "equals_lf"
      ]
    ]
  ],
  "_get_image_dimensions": [
    [
      "django/core/files/images.py",
      [
        "ImageFile",
        "_get_image_dimensions"
      ]
    ]
  ],
  "get_image_dimensions": [
    [
      "django/core/files/images.py",
      [
        "get_image_dimensions"
      ]
    ]
  ],
  "_fd": [
    [
      "django/core/files/locks.py",
      [
        "_fd"
      ]
    ]
  ],
  "lock": [
    [
      "django/core/files/locks.py",
      [
        "if_os_name_nt_",
        "lock"
      ]
    ]
  ],
  "unlock": [
    [
      "django/core/files/locks.py",
      [
        "if_os_name_nt_",
        "unlock"
      ]
    ]
  ],
  "_samefile": [
    [
      "django/core/files/move.py",
      [
        "_samefile"
      ]
    ]
  ],
  "file_move_safe": [
    [
      "django/core/files/move.py",
      [
        "file_move_safe"
      ]
    ]
  ],
  "get_valid_name": [
    [
      "django/core/files/storage.py",
      [
        "Storage",
        "get_valid_name"
      ]
    ],
    [
      "tests/file_storage/models.py",
      [
        "CustomValidNameStorage",
        "get_valid_name"
      ]
    ],
    [
      "tests/file_storage/test_generate_filename.py",
      [
        "AWSS3Storage",
        "get_valid_name"
      ]
    ]
  ],
  "get_alternative_name": [
    [
      "django/core/files/storage.py",
      [
        "Storage",
        "get_alternative_name"
      ]
    ]
  ],
  "get_available_name": [
    [
      "django/core/files/storage.py",
      [
        "Storage",
        "get_available_name"
      ]
    ],
    [
      "tests/file_storage/test_generate_filename.py",
      [
        "AWSS3Storage",
        "get_available_name"
      ]
    ],
    [
      "tests/file_storage/tests.py",
      [
        "CustomStorage",
        "get_available_name"
      ]
    ],
    [
      "tests/file_storage/tests.py",
      [
        "OverwritingStorage",
        "get_available_name"
      ]
    ]
  ],
  "generate_filename": [
    [
      "django/core/files/storage.py",
      [
        "Storage",
        "generate_filename"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "FileField",
        "generate_filename"
      ]
    ],
    [
      "tests/file_storage/test_generate_filename.py",
      [
        "AWSS3Storage",
        "generate_filename"
      ]
    ]
  ],
  "listdir": [
    [
      "django/core/files/storage.py",
      [
        "Storage",
        "listdir"
      ]
    ],
    [
      "django/core/files/storage.py",
      [
        "FileSystemStorage",
        "listdir"
      ]
    ],
    [
      "tests/staticfiles_tests/storage.py",
      [
        "PathNotImplementedStorage",
        "listdir"
      ]
    ]
  ],
  "get_accessed_time": [
    [
      "django/core/files/storage.py",
      [
        "Storage",
        "get_accessed_time"
      ]
    ],
    [
      "django/core/files/storage.py",
      [
        "FileSystemStorage",
        "get_accessed_time"
      ]
    ]
  ],
  "get_created_time": [
    [
      "django/core/files/storage.py",
      [
        "Storage",
        "get_created_time"
      ]
    ],
    [
      "django/core/files/storage.py",
      [
        "FileSystemStorage",
        "get_created_time"
      ]
    ]
  ],
  "get_modified_time": [
    [
      "django/core/files/storage.py",
      [
        "Storage",
        "get_modified_time"
      ]
    ],
    [
      "django/core/files/storage.py",
      [
        "FileSystemStorage",
        "get_modified_time"
      ]
    ],
    [
      "tests/staticfiles_tests/storage.py",
      [
        "DummyStorage",
        "get_modified_time"
      ]
    ],
    [
      "tests/staticfiles_tests/storage.py",
      [
        "NeverCopyRemoteStorage",
        "get_modified_time"
      ]
    ]
  ],
  "_clear_cached_properties": [
    [
      "django/core/files/storage.py",
      [
        "FileSystemStorage",
        "_clear_cached_properties"
      ]
    ]
  ],
  "_value_or_setting": [
    [
      "django/core/files/storage.py",
      [
        "FileSystemStorage",
        "_value_or_setting"
      ]
    ]
  ],
  "base_location": [
    [
      "django/core/files/storage.py",
      [
        "FileSystemStorage",
        "base_location"
      ]
    ]
  ],
  "base_url": [
    [
      "django/core/files/storage.py",
      [
        "FileSystemStorage",
        "base_url"
      ]
    ]
  ],
  "file_permissions_mode": [
    [
      "django/core/files/storage.py",
      [
        "FileSystemStorage",
        "file_permissions_mode"
      ]
    ]
  ],
  "directory_permissions_mode": [
    [
      "django/core/files/storage.py",
      [
        "FileSystemStorage",
        "directory_permissions_mode"
      ]
    ]
  ],
  "_open": [
    [
      "django/core/files/storage.py",
      [
        "FileSystemStorage",
        "_open"
      ]
    ]
  ],
  "_datetime_from_timestamp": [
    [
      "django/core/files/storage.py",
      [
        "FileSystemStorage",
        "_datetime_from_timestamp"
      ]
    ]
  ],
  "get_storage_class": [
    [
      "django/core/files/storage.py",
      [
        "get_storage_class"
      ]
    ]
  ],
  "_get_name": [
    [
      "django/core/files/uploadedfile.py",
      [
        "UploadedFile",
        "_get_name"
      ]
    ]
  ],
  "_set_name": [
    [
      "django/core/files/uploadedfile.py",
      [
        "UploadedFile",
        "_set_name"
      ]
    ]
  ],
  "temporary_file_path": [
    [
      "django/core/files/uploadedfile.py",
      [
        "TemporaryUploadedFile",
        "temporary_file_path"
      ]
    ]
  ],
  "from_dict": [
    [
      "django/core/files/uploadedfile.py",
      [
        "SimpleUploadedFile",
        "from_dict"
      ]
    ]
  ],
  "handle_raw_input": [
    [
      "django/core/files/uploadhandler.py",
      [
        "FileUploadHandler",
        "handle_raw_input"
      ]
    ],
    [
      "django/core/files/uploadhandler.py",
      [
        "MemoryFileUploadHandler",
        "handle_raw_input"
      ]
    ]
  ],
  "new_file": [
    [
      "django/core/files/uploadhandler.py",
      [
        "FileUploadHandler",
        "new_file"
      ]
    ],
    [
      "django/core/files/uploadhandler.py",
      [
        "TemporaryFileUploadHandler",
        "new_file"
      ]
    ],
    [
      "django/core/files/uploadhandler.py",
      [
        "MemoryFileUploadHandler",
        "new_file"
      ]
    ]
  ],
  "receive_data_chunk": [
    [
      "django/core/files/uploadhandler.py",
      [
        "FileUploadHandler",
        "receive_data_chunk"
      ]
    ],
    [
      "django/core/files/uploadhandler.py",
      [
        "TemporaryFileUploadHandler",
        "receive_data_chunk"
      ]
    ],
    [
      "django/core/files/uploadhandler.py",
      [
        "MemoryFileUploadHandler",
        "receive_data_chunk"
      ]
    ],
    [
      "tests/file_uploads/uploadhandler.py",
      [
        "QuotaUploadHandler",
        "receive_data_chunk"
      ]
    ],
    [
      "tests/file_uploads/uploadhandler.py",
      [
        "ErroringUploadHandler",
        "receive_data_chunk"
      ]
    ]
  ],
  "file_complete": [
    [
      "django/core/files/uploadhandler.py",
      [
        "FileUploadHandler",
        "file_complete"
      ]
    ],
    [
      "django/core/files/uploadhandler.py",
      [
        "TemporaryFileUploadHandler",
        "file_complete"
      ]
    ],
    [
      "django/core/files/uploadhandler.py",
      [
        "MemoryFileUploadHandler",
        "file_complete"
      ]
    ],
    [
      "tests/file_uploads/uploadhandler.py",
      [
        "QuotaUploadHandler",
        "file_complete"
      ]
    ]
  ],
  "upload_complete": [
    [
      "django/core/files/uploadhandler.py",
      [
        "FileUploadHandler",
        "upload_complete"
      ]
    ]
  ],
  "load_handler": [
    [
      "django/core/files/uploadhandler.py",
      [
        "load_handler"
      ]
    ]
  ],
  "readable": [
    [
      "django/core/files/utils.py",
      [
        "FileProxyMixin",
        "readable"
      ]
    ],
    [
      "django/http/response.py",
      [
        "HttpResponseBase",
        "readable"
      ]
    ]
  ],
  "writable": [
    [
      "django/core/files/utils.py",
      [
        "FileProxyMixin",
        "writable"
      ]
    ],
    [
      "django/http/response.py",
      [
        "HttpResponseBase",
        "writable"
      ]
    ],
    [
      "django/http/response.py",
      [
        "HttpResponse",
        "writable"
      ]
    ]
  ],
  "seekable": [
    [
      "django/core/files/utils.py",
      [
        "FileProxyMixin",
        "seekable"
      ]
    ],
    [
      "django/http/response.py",
      [
        "HttpResponseBase",
        "seekable"
      ]
    ]
  ],
  "GET": [
    [
      "django/core/handlers/asgi.py",
      [
        "ASGIRequest",
        "GET"
      ]
    ],
    [
      "django/core/handlers/wsgi.py",
      [
        "WSGIRequest",
        "GET"
      ]
    ]
  ],
  "_get_scheme": [
    [
      "django/core/handlers/asgi.py",
      [
        "ASGIRequest",
        "_get_scheme"
      ]
    ],
    [
      "django/core/handlers/wsgi.py",
      [
        "WSGIRequest",
        "_get_scheme"
      ]
    ],
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "_get_scheme"
      ]
    ]
  ],
  "_get_post": [
    [
      "django/core/handlers/asgi.py",
      [
        "ASGIRequest",
        "_get_post"
      ]
    ],
    [
      "django/core/handlers/wsgi.py",
      [
        "WSGIRequest",
        "_get_post"
      ]
    ],
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "test_post_data_read_failure",
        "CsrfPostRequest",
        "_get_post"
      ]
    ]
  ],
  "_set_post": [
    [
      "django/core/handlers/asgi.py",
      [
        "ASGIRequest",
        "_set_post"
      ]
    ],
    [
      "django/core/handlers/wsgi.py",
      [
        "WSGIRequest",
        "_set_post"
      ]
    ],
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "test_post_data_read_failure",
        "CsrfPostRequest",
        "_set_post"
      ]
    ]
  ],
  "_get_files": [
    [
      "django/core/handlers/asgi.py",
      [
        "ASGIRequest",
        "_get_files"
      ]
    ]
  ],
  "COOKIES": [
    [
      "django/core/handlers/asgi.py",
      [
        "ASGIRequest",
        "COOKIES"
      ]
    ],
    [
      "django/core/handlers/wsgi.py",
      [
        "WSGIRequest",
        "COOKIES"
      ]
    ]
  ],
  "read_body": [
    [
      "django/core/handlers/asgi.py",
      [
        "ASGIHandler",
        "read_body"
      ]
    ]
  ],
  "create_request": [
    [
      "django/core/handlers/asgi.py",
      [
        "ASGIHandler",
        "create_request"
      ]
    ]
  ],
  "handle_uncaught_exception": [
    [
      "django/core/handlers/asgi.py",
      [
        "ASGIHandler",
        "handle_uncaught_exception"
      ]
    ],
    [
      "django/core/handlers/exception.py",
      [
        "handle_uncaught_exception"
      ]
    ],
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests",
        "test_file_error_blocking",
        "POSTAccessingHandler",
        "handle_uncaught_exception"
      ]
    ]
  ],
  "send_response": [
    [
      "django/core/handlers/asgi.py",
      [
        "ASGIHandler",
        "send_response"
      ]
    ]
  ],
  "chunk_bytes": [
    [
      "django/core/handlers/asgi.py",
      [
        "ASGIHandler",
        "chunk_bytes"
      ]
    ]
  ],
  "get_script_prefix": [
    [
      "django/core/handlers/asgi.py",
      [
        "ASGIHandler",
        "get_script_prefix"
      ]
    ],
    [
      "django/urls/base.py",
      [
        "get_script_prefix"
      ]
    ]
  ],
  "adapt_method_mode": [
    [
      "django/core/handlers/base.py",
      [
        "BaseHandler",
        "adapt_method_mode"
      ]
    ]
  ],
  "get_response_async": [
    [
      "django/core/handlers/base.py",
      [
        "BaseHandler",
        "get_response_async"
      ]
    ]
  ],
  "_get_response": [
    [
      "django/core/handlers/base.py",
      [
        "BaseHandler",
        "_get_response"
      ]
    ]
  ],
  "_get_response_async": [
    [
      "django/core/handlers/base.py",
      [
        "BaseHandler",
        "_get_response_async"
      ]
    ]
  ],
  "resolve_request": [
    [
      "django/core/handlers/base.py",
      [
        "BaseHandler",
        "resolve_request"
      ]
    ]
  ],
  "check_response": [
    [
      "django/core/handlers/base.py",
      [
        "BaseHandler",
        "check_response"
      ]
    ]
  ],
  "make_view_atomic": [
    [
      "django/core/handlers/base.py",
      [
        "BaseHandler",
        "make_view_atomic"
      ]
    ]
  ],
  "process_exception_by_middleware": [
    [
      "django/core/handlers/base.py",
      [
        "BaseHandler",
        "process_exception_by_middleware"
      ]
    ]
  ],
  "reset_urlconf": [
    [
      "django/core/handlers/base.py",
      [
        "reset_urlconf"
      ]
    ]
  ],
  "convert_exception_to_response": [
    [
      "django/core/handlers/exception.py",
      [
        "convert_exception_to_response"
      ]
    ]
  ],
  "response_for_exception": [
    [
      "django/core/handlers/exception.py",
      [
        "response_for_exception"
      ]
    ]
  ],
  "get_exception_response": [
    [
      "django/core/handlers/exception.py",
      [
        "get_exception_response"
      ]
    ]
  ],
  "_read_limited": [
    [
      "django/core/handlers/wsgi.py",
      [
        "LimitedStream",
        "_read_limited"
      ]
    ]
  ],
  "readline": [
    [
      "django/core/handlers/wsgi.py",
      [
        "LimitedStream",
        "readline"
      ]
    ],
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "readline"
      ]
    ]
  ],
  "FILES": [
    [
      "django/core/handlers/wsgi.py",
      [
        "WSGIRequest",
        "FILES"
      ]
    ]
  ],
  "get_script_name": [
    [
      "django/core/handlers/wsgi.py",
      [
        "get_script_name"
      ]
    ]
  ],
  "get_bytes_from_wsgi": [
    [
      "django/core/handlers/wsgi.py",
      [
        "get_bytes_from_wsgi"
      ]
    ]
  ],
  "get_str_from_wsgi": [
    [
      "django/core/handlers/wsgi.py",
      [
        "get_str_from_wsgi"
      ]
    ]
  ],
  "get_connection": [
    [
      "django/core/mail/__init__.py",
      [
        "get_connection"
      ]
    ],
    [
      "django/core/mail/message.py",
      [
        "EmailMessage",
        "get_connection"
      ]
    ],
    [
      "django/db/transaction.py",
      [
        "get_connection"
      ]
    ],
    [
      "tests/backends/mysql/tests.py",
      [
        "get_connection"
      ]
    ]
  ],
  "send_mass_mail": [
    [
      "django/core/mail/__init__.py",
      [
        "send_mass_mail"
      ]
    ]
  ],
  "mail_admins": [
    [
      "django/core/mail/__init__.py",
      [
        "mail_admins"
      ]
    ]
  ],
  "mail_managers": [
    [
      "django/core/mail/__init__.py",
      [
        "mail_managers"
      ]
    ]
  ],
  "send_messages": [
    [
      "django/core/mail/backends/base.py",
      [
        "BaseEmailBackend",
        "send_messages"
      ]
    ],
    [
      "django/core/mail/backends/console.py",
      [
        "EmailBackend",
        "send_messages"
      ]
    ],
    [
      "django/core/mail/backends/dummy.py",
      [
        "EmailBackend",
        "send_messages"
      ]
    ],
    [
      "django/core/mail/backends/locmem.py",
      [
        "EmailBackend",
        "send_messages"
      ]
    ],
    [
      "django/core/mail/backends/smtp.py",
      [
        "EmailBackend",
        "send_messages"
      ]
    ],
    [
      "tests/logging_tests/logconfig.py",
      [
        "MyEmailBackend",
        "send_messages"
      ]
    ],
    [
      "tests/mail/custombackend.py",
      [
        "EmailBackend",
        "send_messages"
      ]
    ]
  ],
  "write_message": [
    [
      "django/core/mail/backends/console.py",
      [
        "EmailBackend",
        "write_message"
      ]
    ],
    [
      "django/core/mail/backends/filebased.py",
      [
        "EmailBackend",
        "write_message"
      ]
    ]
  ],
  "_get_filename": [
    [
      "django/core/mail/backends/filebased.py",
      [
        "EmailBackend",
        "_get_filename"
      ]
    ]
  ],
  "connection_class": [
    [
      "django/core/mail/backends/smtp.py",
      [
        "EmailBackend",
        "connection_class"
      ]
    ]
  ],
  "_send": [
    [
      "django/core/mail/backends/smtp.py",
      [
        "EmailBackend",
        "_send"
      ]
    ]
  ],
  "forbid_multi_line_headers": [
    [
      "django/core/mail/message.py",
      [
        "forbid_multi_line_headers"
      ]
    ]
  ],
  "sanitize_address": [
    [
      "django/core/mail/message.py",
      [
        "sanitize_address"
      ]
    ]
  ],
  "as_bytes": [
    [
      "django/core/mail/message.py",
      [
        "MIMEMixin",
        "as_bytes"
      ]
    ]
  ],
  "set_payload": [
    [
      "django/core/mail/message.py",
      [
        "SafeMIMEText",
        "set_payload"
      ]
    ]
  ],
  "message": [
    [
      "django/core/mail/message.py",
      [
        "EmailMessage",
        "message"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "_AssertTemplateUsedContext",
        "message"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "_AssertTemplateNotUsedContext",
        "message"
      ]
    ]
  ],
  "recipients": [
    [
      "django/core/mail/message.py",
      [
        "EmailMessage",
        "recipients"
      ]
    ]
  ],
  "send": [
    [
      "django/core/mail/message.py",
      [
        "EmailMessage",
        "send"
      ]
    ],
    [
      "django/dispatch/dispatcher.py",
      [
        "Signal",
        "send"
      ]
    ]
  ],
  "attach": [
    [
      "django/core/mail/message.py",
      [
        "EmailMessage",
        "attach"
      ]
    ]
  ],
  "attach_file": [
    [
      "django/core/mail/message.py",
      [
        "EmailMessage",
        "attach_file"
      ]
    ]
  ],
  "_create_message": [
    [
      "django/core/mail/message.py",
      [
        "EmailMessage",
        "_create_message"
      ]
    ],
    [
      "django/core/mail/message.py",
      [
        "EmailMultiAlternatives",
        "_create_message"
      ]
    ]
  ],
  "_create_attachments": [
    [
      "django/core/mail/message.py",
      [
        "EmailMessage",
        "_create_attachments"
      ]
    ]
  ],
  "_create_mime_attachment": [
    [
      "django/core/mail/message.py",
      [
        "EmailMessage",
        "_create_mime_attachment"
      ]
    ]
  ],
  "_create_attachment": [
    [
      "django/core/mail/message.py",
      [
        "EmailMessage",
        "_create_attachment"
      ]
    ]
  ],
  "_set_list_header_if_not_empty": [
    [
      "django/core/mail/message.py",
      [
        "EmailMessage",
        "_set_list_header_if_not_empty"
      ]
    ]
  ],
  "attach_alternative": [
    [
      "django/core/mail/message.py",
      [
        "EmailMultiAlternatives",
        "attach_alternative"
      ]
    ]
  ],
  "_create_alternatives": [
    [
      "django/core/mail/message.py",
      [
        "EmailMultiAlternatives",
        "_create_alternatives"
      ]
    ]
  ],
  "get_fqdn": [
    [
      "django/core/mail/utils.py",
      [
        "CachedDnsName",
        "get_fqdn"
      ]
    ]
  ],
  "find_commands": [
    [
      "django/core/management/__init__.py",
      [
        "find_commands"
      ]
    ]
  ],
  "load_command_class": [
    [
      "django/core/management/__init__.py",
      [
        "load_command_class"
      ]
    ]
  ],
  "get_commands": [
    [
      "django/core/management/__init__.py",
      [
        "get_commands"
      ]
    ]
  ],
  "call_command": [
    [
      "django/core/management/__init__.py",
      [
        "call_command"
      ]
    ]
  ],
  "main_help_text": [
    [
      "django/core/management/__init__.py",
      [
        "ManagementUtility",
        "main_help_text"
      ]
    ]
  ],
  "fetch_command": [
    [
      "django/core/management/__init__.py",
      [
        "ManagementUtility",
        "fetch_command"
      ]
    ]
  ],
  "autocomplete": [
    [
      "django/core/management/__init__.py",
      [
        "ManagementUtility",
        "autocomplete"
      ]
    ]
  ],
  "execute_from_command_line": [
    [
      "django/core/management/__init__.py",
      [
        "execute_from_command_line"
      ]
    ]
  ],
  "parse_args": [
    [
      "django/core/management/base.py",
      [
        "CommandParser",
        "parse_args"
      ]
    ]
  ],
  "handle_default_options": [
    [
      "django/core/management/base.py",
      [
        "handle_default_options"
      ]
    ]
  ],
  "no_translations": [
    [
      "django/core/management/base.py",
      [
        "no_translations"
      ]
    ]
  ],
  "_reordered_actions": [
    [
      "django/core/management/base.py",
      [
        "DjangoHelpFormatter",
        "_reordered_actions"
      ]
    ]
  ],
  "add_usage": [
    [
      "django/core/management/base.py",
      [
        "DjangoHelpFormatter",
        "add_usage"
      ]
    ]
  ],
  "style_func": [
    [
      "django/core/management/base.py",
      [
        "OutputWrapper",
        "style_func"
      ]
    ]
  ],
  "style_func_1": [
    [
      "django/core/management/base.py",
      [
        "OutputWrapper",
        "style_func_1"
      ]
    ]
  ],
  "isatty": [
    [
      "django/core/management/base.py",
      [
        "OutputWrapper",
        "isatty"
      ]
    ],
    [
      "tests/auth_tests/test_management.py",
      [
        "MockTTY",
        "isatty"
      ]
    ]
  ],
  "get_version": [
    [
      "django/core/management/base.py",
      [
        "BaseCommand",
        "get_version"
      ]
    ],
    [
      "django/utils/version.py",
      [
        "get_version"
      ]
    ]
  ],
  "create_parser": [
    [
      "django/core/management/base.py",
      [
        "BaseCommand",
        "create_parser"
      ]
    ]
  ],
  "print_help": [
    [
      "django/core/management/base.py",
      [
        "BaseCommand",
        "print_help"
      ]
    ]
  ],
  "run_from_argv": [
    [
      "django/core/management/base.py",
      [
        "BaseCommand",
        "run_from_argv"
      ]
    ],
    [
      "django/core/management/commands/test.py",
      [
        "Command",
        "run_from_argv"
      ]
    ]
  ],
  "check_migrations": [
    [
      "django/core/management/base.py",
      [
        "BaseCommand",
        "check_migrations"
      ]
    ]
  ],
  "handle_app_config": [
    [
      "django/core/management/base.py",
      [
        "AppCommand",
        "handle_app_config"
      ]
    ],
    [
      "django/core/management/commands/sqlsequencereset.py",
      [
        "Command",
        "handle_app_config"
      ]
    ],
    [
      "tests/admin_scripts/management/commands/app_command.py",
      [
        "Command",
        "handle_app_config"
      ]
    ]
  ],
  "supports_color": [
    [
      "django/core/management/color.py",
      [
        "supports_color"
      ]
    ]
  ],
  "make_style": [
    [
      "django/core/management/color.py",
      [
        "make_style"
      ]
    ],
    [
      "django/utils/termcolors.py",
      [
        "make_style"
      ]
    ]
  ],
  "no_style": [
    [
      "django/core/management/color.py",
      [
        "no_style"
      ]
    ]
  ],
  "color_style": [
    [
      "django/core/management/color.py",
      [
        "color_style"
      ]
    ]
  ],
  "has_bom": [
    [
      "django/core/management/commands/compilemessages.py",
      [
        "has_bom"
      ]
    ]
  ],
  "is_writable": [
    [
      "django/core/management/commands/compilemessages.py",
      [
        "is_writable"
      ]
    ]
  ],
  "compile_messages": [
    [
      "django/core/management/commands/compilemessages.py",
      [
        "Command",
        "compile_messages"
      ]
    ]
  ],
  "create_table": [
    [
      "django/core/management/commands/createcachetable.py",
      [
        "Command",
        "create_table"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "DBCacheTests",
        "create_table"
      ]
    ]
  ],
  "module_to_dict": [
    [
      "django/core/management/commands/diffsettings.py",
      [
        "module_to_dict"
      ]
    ]
  ],
  "output_hash": [
    [
      "django/core/management/commands/diffsettings.py",
      [
        "Command",
        "output_hash"
      ]
    ]
  ],
  "output_unified": [
    [
      "django/core/management/commands/diffsettings.py",
      [
        "Command",
        "output_unified"
      ]
    ]
  ],
  "get_objects": [
    [
      "django/core/management/commands/dumpdata.py",
      [
        "Command",
        "handle",
        "get_objects"
      ]
    ],
    [
      "django/db/backends/base/creation.py",
      [
        "BaseDatabaseCreation",
        "serialize_db_to_string",
        "get_objects"
      ]
    ]
  ],
  "table2model": [
    [
      "django/core/management/commands/inspectdb.py",
      [
        "Command",
        "handle_inspection",
        "table2model"
      ]
    ]
  ],
  "handle_inspection": [
    [
      "django/core/management/commands/inspectdb.py",
      [
        "Command",
        "handle_inspection"
      ]
    ]
  ],
  "normalize_col_name": [
    [
      "django/core/management/commands/inspectdb.py",
      [
        "Command",
        "normalize_col_name"
      ]
    ]
  ],
  "get_meta": [
    [
      "django/core/management/commands/inspectdb.py",
      [
        "Command",
        "get_meta"
      ]
    ],
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "get_meta"
      ]
    ]
  ],
  "loaddata": [
    [
      "django/core/management/commands/loaddata.py",
      [
        "Command",
        "loaddata"
      ]
    ]
  ],
  "load_label": [
    [
      "django/core/management/commands/loaddata.py",
      [
        "Command",
        "load_label"
      ]
    ]
  ],
  "find_fixtures": [
    [
      "django/core/management/commands/loaddata.py",
      [
        "Command",
        "find_fixtures"
      ]
    ]
  ],
  "fixture_dirs": [
    [
      "django/core/management/commands/loaddata.py",
      [
        "Command",
        "fixture_dirs"
      ]
    ]
  ],
  "parse_name": [
    [
      "django/core/management/commands/loaddata.py",
      [
        "Command",
        "parse_name"
      ]
    ]
  ],
  "humanize": [
    [
      "django/core/management/commands/loaddata.py",
      [
        "humanize"
      ]
    ]
  ],
  "check_programs": [
    [
      "django/core/management/commands/makemessages.py",
      [
        "check_programs"
      ]
    ]
  ],
  "is_templatized": [
    [
      "django/core/management/commands/makemessages.py",
      [
        "BuildFile",
        "is_templatized"
      ]
    ]
  ],
  "work_path": [
    [
      "django/core/management/commands/makemessages.py",
      [
        "BuildFile",
        "work_path"
      ]
    ]
  ],
  "preprocess": [
    [
      "django/core/management/commands/makemessages.py",
      [
        "BuildFile",
        "preprocess"
      ]
    ]
  ],
  "postprocess_messages": [
    [
      "django/core/management/commands/makemessages.py",
      [
        "BuildFile",
        "postprocess_messages"
      ]
    ]
  ],
  "cleanup": [
    [
      "django/core/management/commands/makemessages.py",
      [
        "BuildFile",
        "cleanup"
      ]
    ]
  ],
  "normalize_eols": [
    [
      "django/core/management/commands/makemessages.py",
      [
        "normalize_eols"
      ]
    ]
  ],
  "write_pot_file": [
    [
      "django/core/management/commands/makemessages.py",
      [
        "write_pot_file"
      ]
    ]
  ],
  "gettext_version": [
    [
      "django/core/management/commands/makemessages.py",
      [
        "Command",
        "gettext_version"
      ]
    ]
  ],
  "settings_available": [
    [
      "django/core/management/commands/makemessages.py",
      [
        "Command",
        "settings_available"
      ]
    ]
  ],
  "build_potfiles": [
    [
      "django/core/management/commands/makemessages.py",
      [
        "Command",
        "build_potfiles"
      ]
    ]
  ],
  "remove_potfiles": [
    [
      "django/core/management/commands/makemessages.py",
      [
        "Command",
        "remove_potfiles"
      ]
    ]
  ],
  "find_files": [
    [
      "django/core/management/commands/makemessages.py",
      [
        "Command",
        "find_files"
      ]
    ]
  ],
  "process_files": [
    [
      "django/core/management/commands/makemessages.py",
      [
        "Command",
        "process_files"
      ]
    ]
  ],
  "process_locale_dir": [
    [
      "django/core/management/commands/makemessages.py",
      [
        "Command",
        "process_locale_dir"
      ]
    ]
  ],
  "write_po_file": [
    [
      "django/core/management/commands/makemessages.py",
      [
        "Command",
        "write_po_file"
      ]
    ]
  ],
  "copy_plural_forms": [
    [
      "django/core/management/commands/makemessages.py",
      [
        "Command",
        "copy_plural_forms"
      ]
    ]
  ],
  "write_migration_files": [
    [
      "django/core/management/commands/makemigrations.py",
      [
        "Command",
        "write_migration_files"
      ]
    ]
  ],
  "all_items_equal": [
    [
      "django/core/management/commands/makemigrations.py",
      [
        "Command",
        "handle_merge",
        "for_app_label_migration_",
        "all_items_equal"
      ]
    ]
  ],
  "handle_merge": [
    [
      "django/core/management/commands/makemigrations.py",
      [
        "Command",
        "handle_merge"
      ]
    ]
  ],
  "migration_progress_callback": [
    [
      "django/core/management/commands/migrate.py",
      [
        "Command",
        "migration_progress_callback"
      ]
    ]
  ],
  "model_installed": [
    [
      "django/core/management/commands/migrate.py",
      [
        "Command",
        "sync_apps",
        "model_installed"
      ]
    ]
  ],
  "sync_apps": [
    [
      "django/core/management/commands/migrate.py",
      [
        "Command",
        "sync_apps"
      ]
    ]
  ],
  "describe_operation": [
    [
      "django/core/management/commands/migrate.py",
      [
        "Command",
        "describe_operation"
      ]
    ]
  ],
  "run": [
    [
      "django/core/management/commands/runserver.py",
      [
        "Command",
        "run"
      ]
    ],
    [
      "django/core/servers/basehttp.py",
      [
        "run"
      ]
    ],
    [
      "django/test/runner.py",
      [
        "RemoteTestRunner",
        "run"
      ]
    ],
    [
      "django/test/runner.py",
      [
        "ParallelTestSuite",
        "run"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "LiveServerThread",
        "run"
      ]
    ],
    [
      "django/utils/autoreload.py",
      [
        "BaseReloader",
        "run"
      ]
    ],
    [
      "docs/_ext/djangodocs.py",
      [
        "VersionDirective",
        "run"
      ]
    ],
    [
      "docs/_ext/djangodocs.py",
      [
        "ConsoleDirective",
        "run"
      ]
    ],
    [
      "tests/gis_tests/test_measure.py",
      [
        "run"
      ]
    ],
    [
      "tests/mail/tests.py",
      [
        "FakeSMTPServer",
        "run"
      ]
    ]
  ],
  "inner_run": [
    [
      "django/core/management/commands/runserver.py",
      [
        "Command",
        "inner_run"
      ]
    ]
  ],
  "ipython": [
    [
      "django/core/management/commands/shell.py",
      [
        "Command",
        "ipython"
      ]
    ]
  ],
  "bpython": [
    [
      "django/core/management/commands/shell.py",
      [
        "Command",
        "bpython"
      ]
    ]
  ],
  "python": [
    [
      "django/core/management/commands/shell.py",
      [
        "Command",
        "python"
      ]
    ]
  ],
  "_validate_app_names": [
    [
      "django/core/management/commands/showmigrations.py",
      [
        "Command",
        "_validate_app_names"
      ]
    ]
  ],
  "show_list": [
    [
      "django/core/management/commands/showmigrations.py",
      [
        "Command",
        "show_list"
      ]
    ]
  ],
  "print_deps": [
    [
      "django/core/management/commands/showmigrations.py",
      [
        "Command",
        "show_plan",
        "print_deps"
      ]
    ]
  ],
  "show_plan": [
    [
      "django/core/management/commands/showmigrations.py",
      [
        "Command",
        "show_plan"
      ]
    ]
  ],
  "find_migration": [
    [
      "django/core/management/commands/squashmigrations.py",
      [
        "Command",
        "find_migration"
      ]
    ]
  ],
  "sql_flush": [
    [
      "django/core/management/sql.py",
      [
        "sql_flush"
      ]
    ],
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "sql_flush"
      ]
    ],
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "sql_flush"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "sql_flush"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "sql_flush"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "sql_flush"
      ]
    ]
  ],
  "emit_pre_migrate_signal": [
    [
      "django/core/management/sql.py",
      [
        "emit_pre_migrate_signal"
      ]
    ]
  ],
  "emit_post_migrate_signal": [
    [
      "django/core/management/sql.py",
      [
        "emit_post_migrate_signal"
      ]
    ]
  ],
  "handle_template": [
    [
      "django/core/management/templates.py",
      [
        "TemplateCommand",
        "handle_template"
      ]
    ]
  ],
  "validate_name": [
    [
      "django/core/management/templates.py",
      [
        "TemplateCommand",
        "validate_name"
      ]
    ]
  ],
  "cleanup_url": [
    [
      "django/core/management/templates.py",
      [
        "TemplateCommand",
        "download",
        "cleanup_url"
      ]
    ]
  ],
  "download": [
    [
      "django/core/management/templates.py",
      [
        "TemplateCommand",
        "download"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "download"
      ]
    ]
  ],
  "splitext": [
    [
      "django/core/management/templates.py",
      [
        "TemplateCommand",
        "splitext"
      ]
    ]
  ],
  "extract": [
    [
      "django/core/management/templates.py",
      [
        "TemplateCommand",
        "extract"
      ]
    ],
    [
      "django/utils/archive.py",
      [
        "extract"
      ]
    ],
    [
      "django/utils/archive.py",
      [
        "Archive",
        "extract"
      ]
    ],
    [
      "django/utils/archive.py",
      [
        "BaseArchive",
        "extract"
      ]
    ],
    [
      "django/utils/archive.py",
      [
        "TarArchive",
        "extract"
      ]
    ],
    [
      "django/utils/archive.py",
      [
        "ZipArchive",
        "extract"
      ]
    ]
  ],
  "is_url": [
    [
      "django/core/management/templates.py",
      [
        "TemplateCommand",
        "is_url"
      ]
    ]
  ],
  "make_writeable": [
    [
      "django/core/management/templates.py",
      [
        "TemplateCommand",
        "make_writeable"
      ]
    ]
  ],
  "popen_wrapper": [
    [
      "django/core/management/utils.py",
      [
        "popen_wrapper"
      ]
    ]
  ],
  "handle_extensions": [
    [
      "django/core/management/utils.py",
      [
        "handle_extensions"
      ]
    ]
  ],
  "find_command": [
    [
      "django/core/management/utils.py",
      [
        "find_command"
      ]
    ]
  ],
  "get_random_secret_key": [
    [
      "django/core/management/utils.py",
      [
        "get_random_secret_key"
      ]
    ]
  ],
  "parse_apps_and_model_labels": [
    [
      "django/core/management/utils.py",
      [
        "parse_apps_and_model_labels"
      ]
    ]
  ],
  "get_command_line_option": [
    [
      "django/core/management/utils.py",
      [
        "get_command_line_option"
      ]
    ]
  ],
  "normalize_path_patterns": [
    [
      "django/core/management/utils.py",
      [
        "normalize_path_patterns"
      ]
    ]
  ],
  "is_ignored_path": [
    [
      "django/core/management/utils.py",
      [
        "is_ignored_path"
      ]
    ]
  ],
  "validate_number": [
    [
      "django/core/paginator.py",
      [
        "Paginator",
        "validate_number"
      ]
    ]
  ],
  "get_page": [
    [
      "django/core/paginator.py",
      [
        "Paginator",
        "get_page"
      ]
    ]
  ],
  "page": [
    [
      "django/core/paginator.py",
      [
        "Paginator",
        "page"
      ]
    ]
  ],
  "_get_page": [
    [
      "django/core/paginator.py",
      [
        "Paginator",
        "_get_page"
      ]
    ],
    [
      "tests/pagination/custom.py",
      [
        "ValidAdjacentNumsPaginator",
        "_get_page"
      ]
    ]
  ],
  "num_pages": [
    [
      "django/core/paginator.py",
      [
        "Paginator",
        "num_pages"
      ]
    ]
  ],
  "page_range": [
    [
      "django/core/paginator.py",
      [
        "Paginator",
        "page_range"
      ]
    ]
  ],
  "_check_object_list_is_ordered": [
    [
      "django/core/paginator.py",
      [
        "Paginator",
        "_check_object_list_is_ordered"
      ]
    ]
  ],
  "has_next": [
    [
      "django/core/paginator.py",
      [
        "Page",
        "has_next"
      ]
    ]
  ],
  "has_previous": [
    [
      "django/core/paginator.py",
      [
        "Page",
        "has_previous"
      ]
    ]
  ],
  "has_other_pages": [
    [
      "django/core/paginator.py",
      [
        "Page",
        "has_other_pages"
      ]
    ]
  ],
  "next_page_number": [
    [
      "django/core/paginator.py",
      [
        "Page",
        "next_page_number"
      ]
    ],
    [
      "tests/pagination/custom.py",
      [
        "ValidAdjacentNumsPage",
        "next_page_number"
      ]
    ]
  ],
  "previous_page_number": [
    [
      "django/core/paginator.py",
      [
        "Page",
        "previous_page_number"
      ]
    ],
    [
      "tests/pagination/custom.py",
      [
        "ValidAdjacentNumsPage",
        "previous_page_number"
      ]
    ]
  ],
  "start_index": [
    [
      "django/core/paginator.py",
      [
        "Page",
        "start_index"
      ]
    ]
  ],
  "end_index": [
    [
      "django/core/paginator.py",
      [
        "Page",
        "end_index"
      ]
    ]
  ],
  "register_serializer": [
    [
      "django/core/serializers/__init__.py",
      [
        "register_serializer"
      ]
    ],
    [
      "django/db/migrations/writer.py",
      [
        "MigrationWriter",
        "register_serializer"
      ]
    ]
  ],
  "unregister_serializer": [
    [
      "django/core/serializers/__init__.py",
      [
        "unregister_serializer"
      ]
    ],
    [
      "django/db/migrations/writer.py",
      [
        "MigrationWriter",
        "unregister_serializer"
      ]
    ]
  ],
  "get_serializer": [
    [
      "django/core/serializers/__init__.py",
      [
        "get_serializer"
      ]
    ]
  ],
  "get_serializer_formats": [
    [
      "django/core/serializers/__init__.py",
      [
        "get_serializer_formats"
      ]
    ]
  ],
  "get_public_serializer_formats": [
    [
      "django/core/serializers/__init__.py",
      [
        "get_public_serializer_formats"
      ]
    ]
  ],
  "get_deserializer": [
    [
      "django/core/serializers/__init__.py",
      [
        "get_deserializer"
      ]
    ]
  ],
  "_load_serializers": [
    [
      "django/core/serializers/__init__.py",
      [
        "_load_serializers"
      ]
    ]
  ],
  "sort_dependencies": [
    [
      "django/core/serializers/__init__.py",
      [
        "sort_dependencies"
      ]
    ]
  ],
  "WithData": [
    [
      "django/core/serializers/base.py",
      [
        "DeserializationError",
        "WithData"
      ]
    ]
  ],
  "end_object": [
    [
      "django/core/serializers/base.py",
      [
        "Serializer",
        "end_object"
      ]
    ],
    [
      "django/core/serializers/json.py",
      [
        "Serializer",
        "end_object"
      ]
    ],
    [
      "django/core/serializers/python.py",
      [
        "Serializer",
        "end_object"
      ]
    ],
    [
      "django/core/serializers/xml_serializer.py",
      [
        "Serializer",
        "end_object"
      ]
    ]
  ],
  "handle_fk_field": [
    [
      "django/core/serializers/base.py",
      [
        "Serializer",
        "handle_fk_field"
      ]
    ],
    [
      "django/core/serializers/python.py",
      [
        "Serializer",
        "handle_fk_field"
      ]
    ],
    [
      "django/core/serializers/xml_serializer.py",
      [
        "Serializer",
        "handle_fk_field"
      ]
    ]
  ],
  "handle_m2m_field": [
    [
      "django/core/serializers/base.py",
      [
        "Serializer",
        "handle_m2m_field"
      ]
    ],
    [
      "django/core/serializers/python.py",
      [
        "Serializer",
        "handle_m2m_field"
      ]
    ],
    [
      "django/core/serializers/xml_serializer.py",
      [
        "Serializer",
        "handle_m2m_field"
      ]
    ]
  ],
  "getvalue": [
    [
      "django/core/serializers/base.py",
      [
        "Serializer",
        "getvalue"
      ]
    ],
    [
      "django/core/serializers/json.py",
      [
        "Serializer",
        "getvalue"
      ]
    ],
    [
      "django/core/serializers/python.py",
      [
        "Serializer",
        "getvalue"
      ]
    ],
    [
      "django/core/serializers/pyyaml.py",
      [
        "Serializer",
        "getvalue"
      ]
    ],
    [
      "django/http/response.py",
      [
        "HttpResponse",
        "getvalue"
      ]
    ],
    [
      "django/http/response.py",
      [
        "StreamingHttpResponse",
        "getvalue"
      ]
    ]
  ],
  "__next__": [
    [
      "django/core/serializers/base.py",
      [
        "Deserializer",
        "__next__"
      ]
    ],
    [
      "django/core/serializers/xml_serializer.py",
      [
        "Deserializer",
        "__next__"
      ]
    ],
    [
      "django/http/multipartparser.py",
      [
        "LazyStream",
        "__next__"
      ]
    ],
    [
      "django/http/multipartparser.py",
      [
        "ChunkIter",
        "__next__"
      ]
    ],
    [
      "django/http/multipartparser.py",
      [
        "InterBoundaryIter",
        "__next__"
      ]
    ],
    [
      "django/http/multipartparser.py",
      [
        "BoundaryIter",
        "__next__"
      ]
    ]
  ],
  "save_deferred_fields": [
    [
      "django/core/serializers/base.py",
      [
        "DeserializedObject",
        "save_deferred_fields"
      ]
    ]
  ],
  "build_instance": [
    [
      "django/core/serializers/base.py",
      [
        "build_instance"
      ]
    ]
  ],
  "deserialize_m2m_values": [
    [
      "django/core/serializers/base.py",
      [
        "deserialize_m2m_values"
      ]
    ]
  ],
  "deserialize_fk_value": [
    [
      "django/core/serializers/base.py",
      [
        "deserialize_fk_value"
      ]
    ]
  ],
  "Deserializer": [
    [
      "django/core/serializers/json.py",
      [
        "Deserializer"
      ]
    ],
    [
      "django/core/serializers/python.py",
      [
        "Deserializer"
      ]
    ],
    [
      "django/core/serializers/pyyaml.py",
      [
        "Deserializer"
      ]
    ]
  ],
  "_value_from_field": [
    [
      "django/core/serializers/python.py",
      [
        "Serializer",
        "_value_from_field"
      ]
    ]
  ],
  "_get_model": [
    [
      "django/core/serializers/python.py",
      [
        "_get_model"
      ]
    ]
  ],
  "represent_decimal": [
    [
      "django/core/serializers/pyyaml.py",
      [
        "DjangoSafeDumper",
        "represent_decimal"
      ]
    ]
  ],
  "represent_ordered_dict": [
    [
      "django/core/serializers/pyyaml.py",
      [
        "DjangoSafeDumper",
        "represent_ordered_dict"
      ]
    ]
  ],
  "indent": [
    [
      "django/core/serializers/xml_serializer.py",
      [
        "Serializer",
        "indent"
      ]
    ],
    [
      "django/db/migrations/writer.py",
      [
        "OperationWriter",
        "indent"
      ]
    ]
  ],
  "_start_relational_field": [
    [
      "django/core/serializers/xml_serializer.py",
      [
        "Serializer",
        "_start_relational_field"
      ]
    ]
  ],
  "_make_parser": [
    [
      "django/core/serializers/xml_serializer.py",
      [
        "Deserializer",
        "_make_parser"
      ]
    ]
  ],
  "_handle_object": [
    [
      "django/core/serializers/xml_serializer.py",
      [
        "Deserializer",
        "_handle_object"
      ]
    ]
  ],
  "_handle_fk_field_node": [
    [
      "django/core/serializers/xml_serializer.py",
      [
        "Deserializer",
        "_handle_fk_field_node"
      ]
    ]
  ],
  "_handle_m2m_field_node": [
    [
      "django/core/serializers/xml_serializer.py",
      [
        "Deserializer",
        "_handle_m2m_field_node"
      ]
    ]
  ],
  "_get_model_from_node": [
    [
      "django/core/serializers/xml_serializer.py",
      [
        "Deserializer",
        "_get_model_from_node"
      ]
    ]
  ],
  "getInnerText": [
    [
      "django/core/serializers/xml_serializer.py",
      [
        "getInnerText"
      ]
    ]
  ],
  "start_doctype_decl": [
    [
      "django/core/serializers/xml_serializer.py",
      [
        "DefusedExpatParser",
        "start_doctype_decl"
      ]
    ]
  ],
  "entity_decl": [
    [
      "django/core/serializers/xml_serializer.py",
      [
        "DefusedExpatParser",
        "entity_decl"
      ]
    ]
  ],
  "unparsed_entity_decl": [
    [
      "django/core/serializers/xml_serializer.py",
      [
        "DefusedExpatParser",
        "unparsed_entity_decl"
      ]
    ]
  ],
  "external_entity_ref_handler": [
    [
      "django/core/serializers/xml_serializer.py",
      [
        "DefusedExpatParser",
        "external_entity_ref_handler"
      ]
    ]
  ],
  "reset": [
    [
      "django/core/serializers/xml_serializer.py",
      [
        "DefusedExpatParser",
        "reset"
      ]
    ],
    [
      "django/template/defaulttags.py",
      [
        "CycleNode",
        "reset"
      ]
    ],
    [
      "django/template/loaders/base.py",
      [
        "Loader",
        "reset"
      ]
    ],
    [
      "django/template/loaders/cached.py",
      [
        "Loader",
        "reset"
      ]
    ]
  ],
  "get_internal_wsgi_application": [
    [
      "django/core/servers/basehttp.py",
      [
        "get_internal_wsgi_application"
      ]
    ]
  ],
  "is_broken_pipe_error": [
    [
      "django/core/servers/basehttp.py",
      [
        "is_broken_pipe_error"
      ]
    ]
  ],
  "handle_error": [
    [
      "django/core/servers/basehttp.py",
      [
        "WSGIServer",
        "handle_error"
      ]
    ],
    [
      "django/core/servers/basehttp.py",
      [
        "ServerHandler",
        "handle_error"
      ]
    ]
  ],
  "cleanup_headers": [
    [
      "django/core/servers/basehttp.py",
      [
        "ServerHandler",
        "cleanup_headers"
      ]
    ]
  ],
  "address_string": [
    [
      "django/core/servers/basehttp.py",
      [
        "WSGIRequestHandler",
        "address_string"
      ]
    ]
  ],
  "log_message": [
    [
      "django/core/servers/basehttp.py",
      [
        "WSGIRequestHandler",
        "log_message"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "QuietWSGIRequestHandler",
        "log_message"
      ]
    ]
  ],
  "get_environ": [
    [
      "django/core/servers/basehttp.py",
      [
        "WSGIRequestHandler",
        "get_environ"
      ]
    ]
  ],
  "handle_one_request": [
    [
      "django/core/servers/basehttp.py",
      [
        "WSGIRequestHandler",
        "handle_one_request"
      ]
    ]
  ],
  "b64_encode": [
    [
      "django/core/signing.py",
      [
        "b64_encode"
      ]
    ]
  ],
  "b64_decode": [
    [
      "django/core/signing.py",
      [
        "b64_decode"
      ]
    ]
  ],
  "base64_hmac": [
    [
      "django/core/signing.py",
      [
        "base64_hmac"
      ]
    ]
  ],
  "get_cookie_signer": [
    [
      "django/core/signing.py",
      [
        "get_cookie_signer"
      ]
    ]
  ],
  "signature": [
    [
      "django/core/signing.py",
      [
        "Signer",
        "signature"
      ]
    ]
  ],
  "_legacy_signature": [
    [
      "django/core/signing.py",
      [
        "Signer",
        "_legacy_signature"
      ]
    ]
  ],
  "sign": [
    [
      "django/core/signing.py",
      [
        "Signer",
        "sign"
      ]
    ],
    [
      "django/core/signing.py",
      [
        "TimestampSigner",
        "sign"
      ]
    ]
  ],
  "unsign": [
    [
      "django/core/signing.py",
      [
        "Signer",
        "unsign"
      ]
    ],
    [
      "django/core/signing.py",
      [
        "TimestampSigner",
        "unsign"
      ]
    ]
  ],
  "timestamp": [
    [
      "django/core/signing.py",
      [
        "TimestampSigner",
        "timestamp"
      ]
    ]
  ],
  "validate_integer": [
    [
      "django/core/validators.py",
      [
        "validate_integer"
      ]
    ]
  ],
  "validate_domain_part": [
    [
      "django/core/validators.py",
      [
        "EmailValidator",
        "validate_domain_part"
      ]
    ]
  ],
  "validate_ipv4_address": [
    [
      "django/core/validators.py",
      [
        "validate_ipv4_address"
      ]
    ]
  ],
  "validate_ipv6_address": [
    [
      "django/core/validators.py",
      [
        "validate_ipv6_address"
      ]
    ]
  ],
  "validate_ipv46_address": [
    [
      "django/core/validators.py",
      [
        "validate_ipv46_address"
      ]
    ]
  ],
  "ip_address_validators": [
    [
      "django/core/validators.py",
      [
        "ip_address_validators"
      ]
    ]
  ],
  "int_list_validator": [
    [
      "django/core/validators.py",
      [
        "int_list_validator"
      ]
    ]
  ],
  "get_available_image_extensions": [
    [
      "django/core/validators.py",
      [
        "get_available_image_extensions"
      ]
    ]
  ],
  "validate_image_file_extension": [
    [
      "django/core/validators.py",
      [
        "validate_image_file_extension"
      ]
    ]
  ],
  "get_wsgi_application": [
    [
      "django/core/wsgi.py",
      [
        "get_wsgi_application"
      ]
    ]
  ],
  "reset_queries": [
    [
      "django/db/__init__.py",
      [
        "reset_queries"
      ]
    ]
  ],
  "close_old_connections": [
    [
      "django/db/__init__.py",
      [
        "close_old_connections"
      ]
    ]
  ],
  "ensure_timezone": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "ensure_timezone"
      ]
    ],
    [
      "django/db/backends/postgresql/base.py",
      [
        "DatabaseWrapper",
        "ensure_timezone"
      ]
    ]
  ],
  "timezone": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "timezone"
      ]
    ]
  ],
  "timezone_name": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "timezone_name"
      ]
    ]
  ],
  "queries_logged": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "queries_logged"
      ]
    ]
  ],
  "queries": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "queries"
      ]
    ]
  ],
  "get_connection_params": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "get_connection_params"
      ]
    ],
    [
      "django/db/backends/mysql/base.py",
      [
        "DatabaseWrapper",
        "get_connection_params"
      ]
    ],
    [
      "django/db/backends/oracle/base.py",
      [
        "DatabaseWrapper",
        "get_connection_params"
      ]
    ],
    [
      "django/db/backends/postgresql/base.py",
      [
        "DatabaseWrapper",
        "get_connection_params"
      ]
    ],
    [
      "django/db/backends/sqlite3/base.py",
      [
        "DatabaseWrapper",
        "get_connection_params"
      ]
    ]
  ],
  "init_connection_state": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "init_connection_state"
      ]
    ],
    [
      "django/db/backends/mysql/base.py",
      [
        "DatabaseWrapper",
        "init_connection_state"
      ]
    ],
    [
      "django/db/backends/oracle/base.py",
      [
        "DatabaseWrapper",
        "init_connection_state"
      ]
    ],
    [
      "django/db/backends/postgresql/base.py",
      [
        "DatabaseWrapper",
        "init_connection_state"
      ]
    ],
    [
      "django/db/backends/sqlite3/base.py",
      [
        "DatabaseWrapper",
        "init_connection_state"
      ]
    ]
  ],
  "create_cursor": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "create_cursor"
      ]
    ],
    [
      "django/db/backends/mysql/base.py",
      [
        "DatabaseWrapper",
        "create_cursor"
      ]
    ],
    [
      "django/db/backends/oracle/base.py",
      [
        "DatabaseWrapper",
        "create_cursor"
      ]
    ],
    [
      "django/db/backends/postgresql/base.py",
      [
        "DatabaseWrapper",
        "create_cursor"
      ]
    ],
    [
      "django/db/backends/sqlite3/base.py",
      [
        "DatabaseWrapper",
        "create_cursor"
      ]
    ]
  ],
  "connect": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "connect"
      ]
    ],
    [
      "django/db/models/signals.py",
      [
        "ModelSignal",
        "connect"
      ]
    ],
    [
      "django/dispatch/dispatcher.py",
      [
        "Signal",
        "connect"
      ]
    ]
  ],
  "ensure_connection": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "ensure_connection"
      ]
    ]
  ],
  "_prepare_cursor": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "_prepare_cursor"
      ]
    ]
  ],
  "_cursor": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "_cursor"
      ]
    ]
  ],
  "_commit": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "_commit"
      ]
    ],
    [
      "django/db/backends/oracle/base.py",
      [
        "DatabaseWrapper",
        "_commit"
      ]
    ]
  ],
  "_rollback": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "_rollback"
      ]
    ],
    [
      "django/db/backends/mysql/base.py",
      [
        "DatabaseWrapper",
        "_rollback"
      ]
    ]
  ],
  "_close": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "_close"
      ]
    ]
  ],
  "cursor": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "cursor"
      ]
    ]
  ],
  "commit": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "commit"
      ]
    ],
    [
      "django/db/transaction.py",
      [
        "commit"
      ]
    ]
  ],
  "rollback": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "rollback"
      ]
    ],
    [
      "django/db/transaction.py",
      [
        "rollback"
      ]
    ]
  ],
  "_savepoint": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "_savepoint"
      ]
    ]
  ],
  "_savepoint_rollback": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "_savepoint_rollback"
      ]
    ]
  ],
  "_savepoint_commit": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "_savepoint_commit"
      ]
    ],
    [
      "django/db/backends/oracle/base.py",
      [
        "DatabaseWrapper",
        "_savepoint_commit"
      ]
    ]
  ],
  "_savepoint_allowed": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "_savepoint_allowed"
      ]
    ],
    [
      "django/db/backends/sqlite3/base.py",
      [
        "DatabaseWrapper",
        "_savepoint_allowed"
      ]
    ]
  ],
  "savepoint": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "savepoint"
      ]
    ],
    [
      "django/db/transaction.py",
      [
        "savepoint"
      ]
    ]
  ],
  "savepoint_rollback": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "savepoint_rollback"
      ]
    ],
    [
      "django/db/transaction.py",
      [
        "savepoint_rollback"
      ]
    ]
  ],
  "savepoint_commit": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "savepoint_commit"
      ]
    ],
    [
      "django/db/transaction.py",
      [
        "savepoint_commit"
      ]
    ]
  ],
  "clean_savepoints": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "clean_savepoints"
      ]
    ],
    [
      "django/db/transaction.py",
      [
        "clean_savepoints"
      ]
    ]
  ],
  "_set_autocommit": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "_set_autocommit"
      ]
    ],
    [
      "django/db/backends/mysql/base.py",
      [
        "DatabaseWrapper",
        "_set_autocommit"
      ]
    ],
    [
      "django/db/backends/oracle/base.py",
      [
        "DatabaseWrapper",
        "_set_autocommit"
      ]
    ],
    [
      "django/db/backends/postgresql/base.py",
      [
        "DatabaseWrapper",
        "_set_autocommit"
      ]
    ],
    [
      "django/db/backends/sqlite3/base.py",
      [
        "DatabaseWrapper",
        "_set_autocommit"
      ]
    ]
  ],
  "get_autocommit": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "get_autocommit"
      ]
    ],
    [
      "django/db/transaction.py",
      [
        "get_autocommit"
      ]
    ]
  ],
  "set_autocommit": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "set_autocommit"
      ]
    ],
    [
      "django/db/transaction.py",
      [
        "set_autocommit"
      ]
    ]
  ],
  "get_rollback": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "get_rollback"
      ]
    ],
    [
      "django/db/transaction.py",
      [
        "get_rollback"
      ]
    ]
  ],
  "set_rollback": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "set_rollback"
      ]
    ],
    [
      "django/db/transaction.py",
      [
        "set_rollback"
      ]
    ]
  ],
  "validate_no_atomic_block": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "validate_no_atomic_block"
      ]
    ]
  ],
  "validate_no_broken_transaction": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "validate_no_broken_transaction"
      ]
    ]
  ],
  "constraint_checks_disabled": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "constraint_checks_disabled"
      ]
    ]
  ],
  "disable_constraint_checking": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "disable_constraint_checking"
      ]
    ],
    [
      "django/db/backends/mysql/base.py",
      [
        "DatabaseWrapper",
        "disable_constraint_checking"
      ]
    ],
    [
      "django/db/backends/sqlite3/base.py",
      [
        "DatabaseWrapper",
        "disable_constraint_checking"
      ]
    ]
  ],
  "enable_constraint_checking": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "enable_constraint_checking"
      ]
    ],
    [
      "django/db/backends/mysql/base.py",
      [
        "DatabaseWrapper",
        "enable_constraint_checking"
      ]
    ],
    [
      "django/db/backends/sqlite3/base.py",
      [
        "DatabaseWrapper",
        "enable_constraint_checking"
      ]
    ]
  ],
  "check_constraints": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "check_constraints"
      ]
    ],
    [
      "django/db/backends/mysql/base.py",
      [
        "DatabaseWrapper",
        "check_constraints"
      ]
    ],
    [
      "django/db/backends/oracle/base.py",
      [
        "DatabaseWrapper",
        "check_constraints"
      ]
    ],
    [
      "django/db/backends/postgresql/base.py",
      [
        "DatabaseWrapper",
        "check_constraints"
      ]
    ],
    [
      "django/db/backends/sqlite3/base.py",
      [
        "DatabaseWrapper",
        "check_constraints"
      ]
    ]
  ],
  "is_usable": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "is_usable"
      ]
    ],
    [
      "django/db/backends/dummy/base.py",
      [
        "DatabaseWrapper",
        "is_usable"
      ]
    ],
    [
      "django/db/backends/mysql/base.py",
      [
        "DatabaseWrapper",
        "is_usable"
      ]
    ],
    [
      "django/db/backends/oracle/base.py",
      [
        "DatabaseWrapper",
        "is_usable"
      ]
    ],
    [
      "django/db/backends/postgresql/base.py",
      [
        "DatabaseWrapper",
        "is_usable"
      ]
    ],
    [
      "django/db/backends/sqlite3/base.py",
      [
        "DatabaseWrapper",
        "is_usable"
      ]
    ]
  ],
  "close_if_unusable_or_obsolete": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "close_if_unusable_or_obsolete"
      ]
    ]
  ],
  "allow_thread_sharing": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "allow_thread_sharing"
      ]
    ]
  ],
  "inc_thread_sharing": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "inc_thread_sharing"
      ]
    ]
  ],
  "dec_thread_sharing": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "dec_thread_sharing"
      ]
    ]
  ],
  "validate_thread_sharing": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "validate_thread_sharing"
      ]
    ]
  ],
  "wrap_database_errors": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "wrap_database_errors"
      ]
    ]
  ],
  "chunked_cursor": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "chunked_cursor"
      ]
    ],
    [
      "django/db/backends/postgresql/base.py",
      [
        "DatabaseWrapper",
        "chunked_cursor"
      ]
    ]
  ],
  "make_debug_cursor": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "make_debug_cursor"
      ]
    ],
    [
      "django/db/backends/postgresql/base.py",
      [
        "DatabaseWrapper",
        "make_debug_cursor"
      ]
    ]
  ],
  "make_cursor": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "make_cursor"
      ]
    ]
  ],
  "temporary_connection": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "temporary_connection"
      ]
    ]
  ],
  "_nodb_cursor": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "_nodb_cursor"
      ]
    ],
    [
      "django/db/backends/base/creation.py",
      [
        "BaseDatabaseCreation",
        "_nodb_cursor"
      ]
    ],
    [
      "django/db/backends/postgresql/base.py",
      [
        "DatabaseWrapper",
        "_nodb_cursor"
      ]
    ]
  ],
  "schema_editor": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "schema_editor"
      ]
    ]
  ],
  "on_commit": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "on_commit"
      ]
    ],
    [
      "django/db/transaction.py",
      [
        "on_commit"
      ]
    ]
  ],
  "run_and_clear_commit_hooks": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "run_and_clear_commit_hooks"
      ]
    ]
  ],
  "execute_wrapper": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "execute_wrapper"
      ]
    ]
  ],
  "copy": [
    [
      "django/db/backends/base/base.py",
      [
        "BaseDatabaseWrapper",
        "copy"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "copy"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Func",
        "copy"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Case",
        "copy"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Subquery",
        "copy"
      ]
    ],
    [
      "django/forms/utils.py",
      [
        "ErrorList",
        "copy"
      ]
    ],
    [
      "django/http/request.py",
      [
        "QueryDict",
        "copy"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "MultiValueDict",
        "copy"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "CaseInsensitiveMapping",
        "copy"
      ]
    ]
  ],
  "runshell": [
    [
      "django/db/backends/base/client.py",
      [
        "BaseDatabaseClient",
        "runshell"
      ]
    ],
    [
      "django/db/backends/mysql/client.py",
      [
        "DatabaseClient",
        "runshell"
      ]
    ],
    [
      "django/db/backends/oracle/client.py",
      [
        "DatabaseClient",
        "runshell"
      ]
    ],
    [
      "django/db/backends/postgresql/client.py",
      [
        "DatabaseClient",
        "runshell"
      ]
    ],
    [
      "django/db/backends/sqlite3/client.py",
      [
        "DatabaseClient",
        "runshell"
      ]
    ]
  ],
  "create_test_db": [
    [
      "django/db/backends/base/creation.py",
      [
        "BaseDatabaseCreation",
        "create_test_db"
      ]
    ]
  ],
  "set_as_test_mirror": [
    [
      "django/db/backends/base/creation.py",
      [
        "BaseDatabaseCreation",
        "set_as_test_mirror"
      ]
    ],
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "set_as_test_mirror"
      ]
    ]
  ],
  "serialize_db_to_string": [
    [
      "django/db/backends/base/creation.py",
      [
        "BaseDatabaseCreation",
        "serialize_db_to_string"
      ]
    ]
  ],
  "deserialize_db_from_string": [
    [
      "django/db/backends/base/creation.py",
      [
        "BaseDatabaseCreation",
        "deserialize_db_from_string"
      ]
    ]
  ],
  "_get_database_display_str": [
    [
      "django/db/backends/base/creation.py",
      [
        "BaseDatabaseCreation",
        "_get_database_display_str"
      ]
    ]
  ],
  "_get_test_db_name": [
    [
      "django/db/backends/base/creation.py",
      [
        "BaseDatabaseCreation",
        "_get_test_db_name"
      ]
    ],
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_get_test_db_name"
      ]
    ],
    [
      "django/db/backends/sqlite3/creation.py",
      [
        "DatabaseCreation",
        "_get_test_db_name"
      ]
    ]
  ],
  "_execute_create_test_db": [
    [
      "django/db/backends/base/creation.py",
      [
        "BaseDatabaseCreation",
        "_execute_create_test_db"
      ]
    ],
    [
      "django/db/backends/mysql/creation.py",
      [
        "DatabaseCreation",
        "_execute_create_test_db"
      ]
    ],
    [
      "django/db/backends/postgresql/creation.py",
      [
        "DatabaseCreation",
        "_execute_create_test_db"
      ]
    ]
  ],
  "_create_test_db": [
    [
      "django/db/backends/base/creation.py",
      [
        "BaseDatabaseCreation",
        "_create_test_db"
      ]
    ],
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_create_test_db"
      ]
    ],
    [
      "django/db/backends/sqlite3/creation.py",
      [
        "DatabaseCreation",
        "_create_test_db"
      ]
    ]
  ],
  "clone_test_db": [
    [
      "django/db/backends/base/creation.py",
      [
        "BaseDatabaseCreation",
        "clone_test_db"
      ]
    ]
  ],
  "get_test_db_clone_settings": [
    [
      "django/db/backends/base/creation.py",
      [
        "BaseDatabaseCreation",
        "get_test_db_clone_settings"
      ]
    ],
    [
      "django/db/backends/sqlite3/creation.py",
      [
        "DatabaseCreation",
        "get_test_db_clone_settings"
      ]
    ]
  ],
  "_clone_test_db": [
    [
      "django/db/backends/base/creation.py",
      [
        "BaseDatabaseCreation",
        "_clone_test_db"
      ]
    ],
    [
      "django/db/backends/mysql/creation.py",
      [
        "DatabaseCreation",
        "_clone_test_db"
      ]
    ],
    [
      "django/db/backends/postgresql/creation.py",
      [
        "DatabaseCreation",
        "_clone_test_db"
      ]
    ],
    [
      "django/db/backends/sqlite3/creation.py",
      [
        "DatabaseCreation",
        "_clone_test_db"
      ]
    ]
  ],
  "destroy_test_db": [
    [
      "django/db/backends/base/creation.py",
      [
        "BaseDatabaseCreation",
        "destroy_test_db"
      ]
    ]
  ],
  "_destroy_test_db": [
    [
      "django/db/backends/base/creation.py",
      [
        "BaseDatabaseCreation",
        "_destroy_test_db"
      ]
    ],
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_destroy_test_db"
      ]
    ],
    [
      "django/db/backends/sqlite3/creation.py",
      [
        "DatabaseCreation",
        "_destroy_test_db"
      ]
    ]
  ],
  "sql_table_creation_suffix": [
    [
      "django/db/backends/base/creation.py",
      [
        "BaseDatabaseCreation",
        "sql_table_creation_suffix"
      ]
    ],
    [
      "django/db/backends/mysql/creation.py",
      [
        "DatabaseCreation",
        "sql_table_creation_suffix"
      ]
    ],
    [
      "django/db/backends/postgresql/creation.py",
      [
        "DatabaseCreation",
        "sql_table_creation_suffix"
      ]
    ]
  ],
  "test_db_signature": [
    [
      "django/db/backends/base/creation.py",
      [
        "BaseDatabaseCreation",
        "test_db_signature"
      ]
    ],
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "test_db_signature"
      ]
    ],
    [
      "django/db/backends/sqlite3/creation.py",
      [
        "DatabaseCreation",
        "test_db_signature"
      ]
    ]
  ],
  "supports_explaining_query_execution": [
    [
      "django/db/backends/base/features.py",
      [
        "BaseDatabaseFeatures",
        "supports_explaining_query_execution"
      ]
    ]
  ],
  "supports_transactions": [
    [
      "django/db/backends/base/features.py",
      [
        "BaseDatabaseFeatures",
        "supports_transactions"
      ]
    ],
    [
      "django/db/backends/mysql/features.py",
      [
        "DatabaseFeatures",
        "supports_transactions"
      ]
    ]
  ],
  "allows_group_by_selected_pks_on_model": [
    [
      "django/db/backends/base/features.py",
      [
        "BaseDatabaseFeatures",
        "allows_group_by_selected_pks_on_model"
      ]
    ]
  ],
  "identifier_converter": [
    [
      "django/db/backends/base/introspection.py",
      [
        "BaseDatabaseIntrospection",
        "identifier_converter"
      ]
    ],
    [
      "django/db/backends/oracle/introspection.py",
      [
        "DatabaseIntrospection",
        "identifier_converter"
      ]
    ]
  ],
  "table_names": [
    [
      "django/db/backends/base/introspection.py",
      [
        "BaseDatabaseIntrospection",
        "table_names"
      ]
    ]
  ],
  "get_table_list": [
    [
      "django/db/backends/base/introspection.py",
      [
        "BaseDatabaseIntrospection",
        "get_table_list"
      ]
    ],
    [
      "django/db/backends/mysql/introspection.py",
      [
        "DatabaseIntrospection",
        "get_table_list"
      ]
    ],
    [
      "django/db/backends/oracle/introspection.py",
      [
        "DatabaseIntrospection",
        "get_table_list"
      ]
    ],
    [
      "django/db/backends/postgresql/introspection.py",
      [
        "DatabaseIntrospection",
        "get_table_list"
      ]
    ],
    [
      "django/db/backends/sqlite3/introspection.py",
      [
        "DatabaseIntrospection",
        "get_table_list"
      ]
    ]
  ],
  "get_table_description": [
    [
      "django/db/backends/base/introspection.py",
      [
        "BaseDatabaseIntrospection",
        "get_table_description"
      ]
    ],
    [
      "django/db/backends/mysql/introspection.py",
      [
        "DatabaseIntrospection",
        "get_table_description"
      ]
    ],
    [
      "django/db/backends/oracle/introspection.py",
      [
        "DatabaseIntrospection",
        "get_table_description"
      ]
    ],
    [
      "django/db/backends/postgresql/introspection.py",
      [
        "DatabaseIntrospection",
        "get_table_description"
      ]
    ],
    [
      "django/db/backends/sqlite3/introspection.py",
      [
        "DatabaseIntrospection",
        "get_table_description"
      ]
    ],
    [
      "tests/gis_tests/gis_migrations/test_commands.py",
      [
        "MigrateTests",
        "get_table_description"
      ]
    ],
    [
      "tests/gis_tests/gis_migrations/test_operations.py",
      [
        "OperationTestCase",
        "get_table_description"
      ]
    ],
    [
      "tests/migrations/test_base.py",
      [
        "MigrationTestBase",
        "get_table_description"
      ]
    ]
  ],
  "get_migratable_models": [
    [
      "django/db/backends/base/introspection.py",
      [
        "BaseDatabaseIntrospection",
        "get_migratable_models"
      ]
    ],
    [
      "django/db/utils.py",
      [
        "ConnectionRouter",
        "get_migratable_models"
      ]
    ]
  ],
  "django_table_names": [
    [
      "django/db/backends/base/introspection.py",
      [
        "BaseDatabaseIntrospection",
        "django_table_names"
      ]
    ]
  ],
  "installed_models": [
    [
      "django/db/backends/base/introspection.py",
      [
        "BaseDatabaseIntrospection",
        "installed_models"
      ]
    ]
  ],
  "sequence_list": [
    [
      "django/db/backends/base/introspection.py",
      [
        "BaseDatabaseIntrospection",
        "sequence_list"
      ]
    ]
  ],
  "get_sequences": [
    [
      "django/db/backends/base/introspection.py",
      [
        "BaseDatabaseIntrospection",
        "get_sequences"
      ]
    ],
    [
      "django/db/backends/mysql/introspection.py",
      [
        "DatabaseIntrospection",
        "get_sequences"
      ]
    ],
    [
      "django/db/backends/oracle/introspection.py",
      [
        "DatabaseIntrospection",
        "get_sequences"
      ]
    ],
    [
      "django/db/backends/postgresql/introspection.py",
      [
        "DatabaseIntrospection",
        "get_sequences"
      ]
    ],
    [
      "django/db/backends/sqlite3/introspection.py",
      [
        "DatabaseIntrospection",
        "get_sequences"
      ]
    ]
  ],
  "get_relations": [
    [
      "django/db/backends/base/introspection.py",
      [
        "BaseDatabaseIntrospection",
        "get_relations"
      ]
    ],
    [
      "django/db/backends/mysql/introspection.py",
      [
        "DatabaseIntrospection",
        "get_relations"
      ]
    ],
    [
      "django/db/backends/oracle/introspection.py",
      [
        "DatabaseIntrospection",
        "get_relations"
      ]
    ],
    [
      "django/db/backends/postgresql/introspection.py",
      [
        "DatabaseIntrospection",
        "get_relations"
      ]
    ],
    [
      "django/db/backends/sqlite3/introspection.py",
      [
        "DatabaseIntrospection",
        "get_relations"
      ]
    ]
  ],
  "get_key_columns": [
    [
      "django/db/backends/base/introspection.py",
      [
        "BaseDatabaseIntrospection",
        "get_key_columns"
      ]
    ],
    [
      "django/db/backends/mysql/introspection.py",
      [
        "DatabaseIntrospection",
        "get_key_columns"
      ]
    ],
    [
      "django/db/backends/oracle/introspection.py",
      [
        "DatabaseIntrospection",
        "get_key_columns"
      ]
    ],
    [
      "django/db/backends/postgresql/introspection.py",
      [
        "DatabaseIntrospection",
        "get_key_columns"
      ]
    ],
    [
      "django/db/backends/sqlite3/introspection.py",
      [
        "DatabaseIntrospection",
        "get_key_columns"
      ]
    ]
  ],
  "get_primary_key_column": [
    [
      "django/db/backends/base/introspection.py",
      [
        "BaseDatabaseIntrospection",
        "get_primary_key_column"
      ]
    ],
    [
      "django/db/backends/oracle/introspection.py",
      [
        "DatabaseIntrospection",
        "get_primary_key_column"
      ]
    ],
    [
      "django/db/backends/sqlite3/introspection.py",
      [
        "DatabaseIntrospection",
        "get_primary_key_column"
      ]
    ]
  ],
  "autoinc_sql": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "autoinc_sql"
      ]
    ]
  ],
  "bulk_batch_size": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "bulk_batch_size"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "bulk_batch_size"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "bulk_batch_size"
      ]
    ]
  ],
  "cache_key_culling_sql": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "cache_key_culling_sql"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "cache_key_culling_sql"
      ]
    ]
  ],
  "unification_cast_sql": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "unification_cast_sql"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "unification_cast_sql"
      ]
    ]
  ],
  "date_extract_sql": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "date_extract_sql"
      ]
    ],
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "date_extract_sql"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "date_extract_sql"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "date_extract_sql"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "date_extract_sql"
      ]
    ]
  ],
  "date_interval_sql": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "date_interval_sql"
      ]
    ],
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "date_interval_sql"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "date_interval_sql"
      ]
    ]
  ],
  "date_trunc_sql": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "date_trunc_sql"
      ]
    ],
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "date_trunc_sql"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "date_trunc_sql"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "date_trunc_sql"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "date_trunc_sql"
      ]
    ]
  ],
  "datetime_cast_date_sql": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "datetime_cast_date_sql"
      ]
    ],
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "datetime_cast_date_sql"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "datetime_cast_date_sql"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "datetime_cast_date_sql"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "datetime_cast_date_sql"
      ]
    ]
  ],
  "datetime_cast_time_sql": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "datetime_cast_time_sql"
      ]
    ],
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "datetime_cast_time_sql"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "datetime_cast_time_sql"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "datetime_cast_time_sql"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "datetime_cast_time_sql"
      ]
    ]
  ],
  "datetime_extract_sql": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "datetime_extract_sql"
      ]
    ],
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "datetime_extract_sql"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "datetime_extract_sql"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "datetime_extract_sql"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "datetime_extract_sql"
      ]
    ]
  ],
  "datetime_trunc_sql": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "datetime_trunc_sql"
      ]
    ],
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "datetime_trunc_sql"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "datetime_trunc_sql"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "datetime_trunc_sql"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "datetime_trunc_sql"
      ]
    ]
  ],
  "time_trunc_sql": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "time_trunc_sql"
      ]
    ],
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "time_trunc_sql"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "time_trunc_sql"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "time_trunc_sql"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "time_trunc_sql"
      ]
    ]
  ],
  "time_extract_sql": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "time_extract_sql"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "time_extract_sql"
      ]
    ]
  ],
  "deferrable_sql": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "deferrable_sql"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "deferrable_sql"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "deferrable_sql"
      ]
    ]
  ],
  "distinct_sql": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "distinct_sql"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "distinct_sql"
      ]
    ]
  ],
  "fetch_returned_insert_columns": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "fetch_returned_insert_columns"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "fetch_returned_insert_columns"
      ]
    ]
  ],
  "field_cast_sql": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "field_cast_sql"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "field_cast_sql"
      ]
    ]
  ],
  "force_no_ordering": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "force_no_ordering"
      ]
    ],
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "force_no_ordering"
      ]
    ]
  ],
  "for_update_sql": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "for_update_sql"
      ]
    ]
  ],
  "_get_limit_offset_params": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "_get_limit_offset_params"
      ]
    ]
  ],
  "limit_offset_sql": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "limit_offset_sql"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "limit_offset_sql"
      ]
    ]
  ],
  "last_executed_query": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "last_executed_query"
      ]
    ],
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "last_executed_query"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "last_executed_query"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "last_executed_query"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "last_executed_query"
      ]
    ]
  ],
  "last_insert_id": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "last_insert_id"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "last_insert_id"
      ]
    ]
  ],
  "lookup_cast": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "lookup_cast"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "lookup_cast"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "lookup_cast"
      ]
    ]
  ],
  "max_in_list_size": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "max_in_list_size"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "max_in_list_size"
      ]
    ]
  ],
  "no_limit_value": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "no_limit_value"
      ]
    ],
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "no_limit_value"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "no_limit_value"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "no_limit_value"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "no_limit_value"
      ]
    ]
  ],
  "pk_default_value": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "pk_default_value"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "pk_default_value"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "pk_default_value"
      ]
    ]
  ],
  "prepare_sql_script": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "prepare_sql_script"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "prepare_sql_script"
      ]
    ]
  ],
  "process_clob": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "process_clob"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "process_clob"
      ]
    ]
  ],
  "return_insert_columns": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "return_insert_columns"
      ]
    ],
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "return_insert_columns"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "return_insert_columns"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "return_insert_columns"
      ]
    ]
  ],
  "compiler": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "compiler"
      ]
    ]
  ],
  "quote_name": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "quote_name"
      ]
    ],
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "quote_name"
      ]
    ],
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "quote_name"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "quote_name"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "quote_name"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "quote_name"
      ]
    ]
  ],
  "random_function_sql": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "random_function_sql"
      ]
    ],
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "random_function_sql"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "random_function_sql"
      ]
    ]
  ],
  "regex_lookup": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "regex_lookup"
      ]
    ],
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "regex_lookup"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "regex_lookup"
      ]
    ]
  ],
  "savepoint_create_sql": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "savepoint_create_sql"
      ]
    ]
  ],
  "savepoint_commit_sql": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "savepoint_commit_sql"
      ]
    ]
  ],
  "savepoint_rollback_sql": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "savepoint_rollback_sql"
      ]
    ]
  ],
  "set_time_zone_sql": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "set_time_zone_sql"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "set_time_zone_sql"
      ]
    ]
  ],
  "execute_sql_flush": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "execute_sql_flush"
      ]
    ]
  ],
  "sequence_reset_by_name_sql": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "sequence_reset_by_name_sql"
      ]
    ],
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "sequence_reset_by_name_sql"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "sequence_reset_by_name_sql"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "sequence_reset_by_name_sql"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "sequence_reset_by_name_sql"
      ]
    ]
  ],
  "sequence_reset_sql": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "sequence_reset_sql"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "sequence_reset_sql"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "sequence_reset_sql"
      ]
    ]
  ],
  "start_transaction_sql": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "start_transaction_sql"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "start_transaction_sql"
      ]
    ]
  ],
  "end_transaction_sql": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "end_transaction_sql"
      ]
    ]
  ],
  "tablespace_sql": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "tablespace_sql"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "tablespace_sql"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "tablespace_sql"
      ]
    ]
  ],
  "prep_for_like_query": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "prep_for_like_query"
      ]
    ]
  ],
  "validate_autopk_value": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "validate_autopk_value"
      ]
    ],
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "validate_autopk_value"
      ]
    ]
  ],
  "adapt_unknown_value": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "adapt_unknown_value"
      ]
    ]
  ],
  "adapt_datefield_value": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "adapt_datefield_value"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "adapt_datefield_value"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "adapt_datefield_value"
      ]
    ]
  ],
  "adapt_datetimefield_value": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "adapt_datetimefield_value"
      ]
    ],
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "adapt_datetimefield_value"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "adapt_datetimefield_value"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "adapt_datetimefield_value"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "adapt_datetimefield_value"
      ]
    ]
  ],
  "adapt_timefield_value": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "adapt_timefield_value"
      ]
    ],
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "adapt_timefield_value"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "adapt_timefield_value"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "adapt_timefield_value"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "adapt_timefield_value"
      ]
    ]
  ],
  "adapt_decimalfield_value": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "adapt_decimalfield_value"
      ]
    ]
  ],
  "adapt_ipaddressfield_value": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "adapt_ipaddressfield_value"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "adapt_ipaddressfield_value"
      ]
    ]
  ],
  "year_lookup_bounds_for_date_field": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "year_lookup_bounds_for_date_field"
      ]
    ]
  ],
  "year_lookup_bounds_for_datetime_field": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "year_lookup_bounds_for_datetime_field"
      ]
    ]
  ],
  "convert_durationfield_value": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "convert_durationfield_value"
      ]
    ]
  ],
  "conditional_expression_supported_in_where_clause": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "conditional_expression_supported_in_where_clause"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "conditional_expression_supported_in_where_clause"
      ]
    ]
  ],
  "combine_expression": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "combine_expression"
      ]
    ],
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "combine_expression"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "combine_expression"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "combine_expression"
      ]
    ]
  ],
  "combine_duration_expression": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "combine_duration_expression"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "combine_duration_expression"
      ]
    ]
  ],
  "binary_placeholder_sql": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "binary_placeholder_sql"
      ]
    ],
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "binary_placeholder_sql"
      ]
    ]
  ],
  "integer_field_range": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "integer_field_range"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "integer_field_range"
      ]
    ]
  ],
  "subtract_temporals": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "subtract_temporals"
      ]
    ],
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "subtract_temporals"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "subtract_temporals"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "subtract_temporals"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "subtract_temporals"
      ]
    ]
  ],
  "window_frame_start": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "window_frame_start"
      ]
    ]
  ],
  "window_frame_end": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "window_frame_end"
      ]
    ]
  ],
  "window_frame_rows_start_end": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "window_frame_rows_start_end"
      ]
    ]
  ],
  "window_frame_range_start_end": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "window_frame_range_start_end"
      ]
    ]
  ],
  "explain_query_prefix": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "explain_query_prefix"
      ]
    ],
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "explain_query_prefix"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "explain_query_prefix"
      ]
    ]
  ],
  "insert_statement": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "insert_statement"
      ]
    ],
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "insert_statement"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "insert_statement"
      ]
    ]
  ],
  "ignore_conflicts_suffix_sql": [
    [
      "django/db/backends/base/operations.py",
      [
        "BaseDatabaseOperations",
        "ignore_conflicts_suffix_sql"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "ignore_conflicts_suffix_sql"
      ]
    ]
  ],
  "_is_relevant_relation": [
    [
      "django/db/backends/base/schema.py",
      [
        "_is_relevant_relation"
      ]
    ]
  ],
  "_all_related_fields": [
    [
      "django/db/backends/base/schema.py",
      [
        "_all_related_fields"
      ]
    ]
  ],
  "_related_non_m2m_objects": [
    [
      "django/db/backends/base/schema.py",
      [
        "_related_non_m2m_objects"
      ]
    ]
  ],
  "table_sql": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "table_sql"
      ]
    ]
  ],
  "prepare_default": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "prepare_default"
      ]
    ],
    [
      "django/db/backends/oracle/schema.py",
      [
        "DatabaseSchemaEditor",
        "prepare_default"
      ]
    ]
  ],
  "_column_default_sql": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_column_default_sql"
      ]
    ],
    [
      "django/db/backends/mysql/schema.py",
      [
        "DatabaseSchemaEditor",
        "_column_default_sql"
      ]
    ]
  ],
  "_effective_default": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_effective_default"
      ]
    ]
  ],
  "effective_default": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "effective_default"
      ]
    ]
  ],
  "quote_value": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "quote_value"
      ]
    ],
    [
      "django/db/backends/mysql/schema.py",
      [
        "DatabaseSchemaEditor",
        "quote_value"
      ]
    ],
    [
      "django/db/backends/oracle/schema.py",
      [
        "DatabaseSchemaEditor",
        "quote_value"
      ]
    ],
    [
      "django/db/backends/postgresql/schema.py",
      [
        "DatabaseSchemaEditor",
        "quote_value"
      ]
    ],
    [
      "django/db/backends/sqlite3/schema.py",
      [
        "DatabaseSchemaEditor",
        "quote_value"
      ]
    ]
  ],
  "add_index": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "add_index"
      ]
    ],
    [
      "django/db/backends/postgresql/schema.py",
      [
        "DatabaseSchemaEditor",
        "add_index"
      ]
    ]
  ],
  "remove_index": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "remove_index"
      ]
    ],
    [
      "django/db/backends/postgresql/schema.py",
      [
        "DatabaseSchemaEditor",
        "remove_index"
      ]
    ]
  ],
  "add_constraint": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "add_constraint"
      ]
    ],
    [
      "django/db/backends/sqlite3/schema.py",
      [
        "DatabaseSchemaEditor",
        "add_constraint"
      ]
    ]
  ],
  "remove_constraint": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "remove_constraint"
      ]
    ],
    [
      "django/db/backends/sqlite3/schema.py",
      [
        "DatabaseSchemaEditor",
        "remove_constraint"
      ]
    ]
  ],
  "alter_unique_together": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "alter_unique_together"
      ]
    ]
  ],
  "alter_index_together": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "alter_index_together"
      ]
    ]
  ],
  "_delete_composed_index": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_delete_composed_index"
      ]
    ],
    [
      "django/db/backends/mysql/schema.py",
      [
        "DatabaseSchemaEditor",
        "_delete_composed_index"
      ]
    ]
  ],
  "alter_db_tablespace": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "alter_db_tablespace"
      ]
    ]
  ],
  "alter_field": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "alter_field"
      ]
    ],
    [
      "django/db/backends/oracle/schema.py",
      [
        "DatabaseSchemaEditor",
        "alter_field"
      ]
    ],
    [
      "django/db/backends/sqlite3/schema.py",
      [
        "DatabaseSchemaEditor",
        "alter_field"
      ]
    ]
  ],
  "_alter_field": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_alter_field"
      ]
    ],
    [
      "django/db/backends/postgresql/schema.py",
      [
        "DatabaseSchemaEditor",
        "_alter_field"
      ]
    ],
    [
      "django/db/backends/sqlite3/schema.py",
      [
        "DatabaseSchemaEditor",
        "_alter_field"
      ]
    ]
  ],
  "_alter_column_null_sql": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_alter_column_null_sql"
      ]
    ]
  ],
  "_alter_column_default_sql": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_alter_column_default_sql"
      ]
    ]
  ],
  "_alter_many_to_many": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_alter_many_to_many"
      ]
    ],
    [
      "django/db/backends/sqlite3/schema.py",
      [
        "DatabaseSchemaEditor",
        "_alter_many_to_many"
      ]
    ]
  ],
  "_create_index_name": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_create_index_name"
      ]
    ]
  ],
  "_get_index_tablespace_sql": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_get_index_tablespace_sql"
      ]
    ]
  ],
  "create_index_name": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_create_index_sql",
        "create_index_name"
      ]
    ]
  ],
  "_delete_index_sql": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_delete_index_sql"
      ]
    ],
    [
      "django/db/backends/postgresql/schema.py",
      [
        "DatabaseSchemaEditor",
        "_delete_index_sql"
      ]
    ]
  ],
  "_index_columns": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_index_columns"
      ]
    ],
    [
      "django/db/backends/postgresql/schema.py",
      [
        "DatabaseSchemaEditor",
        "_index_columns"
      ]
    ]
  ],
  "_model_indexes_sql": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_model_indexes_sql"
      ]
    ]
  ],
  "_field_indexes_sql": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_field_indexes_sql"
      ]
    ],
    [
      "django/db/backends/postgresql/schema.py",
      [
        "DatabaseSchemaEditor",
        "_field_indexes_sql"
      ]
    ]
  ],
  "_field_became_primary_key": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_field_became_primary_key"
      ]
    ]
  ],
  "_unique_should_be_added": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_unique_should_be_added"
      ]
    ],
    [
      "django/db/backends/oracle/schema.py",
      [
        "DatabaseSchemaEditor",
        "_unique_should_be_added"
      ]
    ]
  ],
  "_rename_field_sql": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_rename_field_sql"
      ]
    ],
    [
      "django/db/backends/mysql/schema.py",
      [
        "DatabaseSchemaEditor",
        "_rename_field_sql"
      ]
    ]
  ],
  "_create_fk_sql": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_create_fk_sql"
      ]
    ]
  ],
  "_fk_constraint_name": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_fk_constraint_name"
      ]
    ]
  ],
  "_delete_fk_sql": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_delete_fk_sql"
      ]
    ]
  ],
  "_unique_sql": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_unique_sql"
      ]
    ]
  ],
  "_create_unique_sql": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_create_unique_sql"
      ]
    ]
  ],
  "_delete_unique_sql": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_delete_unique_sql"
      ]
    ]
  ],
  "_check_sql": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_check_sql"
      ]
    ]
  ],
  "_create_check_sql": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_create_check_sql"
      ]
    ]
  ],
  "_delete_check_sql": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_delete_check_sql"
      ]
    ]
  ],
  "_delete_constraint_sql": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_delete_constraint_sql"
      ]
    ]
  ],
  "_constraint_names": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_constraint_names"
      ]
    ]
  ],
  "_delete_primary_key": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_delete_primary_key"
      ]
    ]
  ],
  "_create_primary_key_sql": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_create_primary_key_sql"
      ]
    ]
  ],
  "_delete_primary_key_sql": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "_delete_primary_key_sql"
      ]
    ]
  ],
  "remove_procedure": [
    [
      "django/db/backends/base/schema.py",
      [
        "BaseDatabaseSchemaEditor",
        "remove_procedure"
      ]
    ]
  ],
  "check_field": [
    [
      "django/db/backends/base/validation.py",
      [
        "BaseDatabaseValidation",
        "check_field"
      ]
    ]
  ],
  "references_table": [
    [
      "django/db/backends/ddl_references.py",
      [
        "Reference",
        "references_table"
      ]
    ],
    [
      "django/db/backends/ddl_references.py",
      [
        "Table",
        "references_table"
      ]
    ],
    [
      "django/db/backends/ddl_references.py",
      [
        "ForeignKeyName",
        "references_table"
      ]
    ],
    [
      "django/db/backends/ddl_references.py",
      [
        "Statement",
        "references_table"
      ]
    ],
    [
      "tests/backends/test_ddl_references.py",
      [
        "MockReference",
        "references_table"
      ]
    ]
  ],
  "references_column": [
    [
      "django/db/backends/ddl_references.py",
      [
        "Reference",
        "references_column"
      ]
    ],
    [
      "django/db/backends/ddl_references.py",
      [
        "TableColumns",
        "references_column"
      ]
    ],
    [
      "django/db/backends/ddl_references.py",
      [
        "ForeignKeyName",
        "references_column"
      ]
    ],
    [
      "django/db/backends/ddl_references.py",
      [
        "Statement",
        "references_column"
      ]
    ],
    [
      "tests/backends/test_ddl_references.py",
      [
        "MockReference",
        "references_column"
      ]
    ]
  ],
  "rename_table_references": [
    [
      "django/db/backends/ddl_references.py",
      [
        "Reference",
        "rename_table_references"
      ]
    ],
    [
      "django/db/backends/ddl_references.py",
      [
        "Table",
        "rename_table_references"
      ]
    ],
    [
      "django/db/backends/ddl_references.py",
      [
        "ForeignKeyName",
        "rename_table_references"
      ]
    ],
    [
      "django/db/backends/ddl_references.py",
      [
        "Statement",
        "rename_table_references"
      ]
    ],
    [
      "tests/backends/test_ddl_references.py",
      [
        "MockReference",
        "rename_table_references"
      ]
    ]
  ],
  "rename_column_references": [
    [
      "django/db/backends/ddl_references.py",
      [
        "Reference",
        "rename_column_references"
      ]
    ],
    [
      "django/db/backends/ddl_references.py",
      [
        "TableColumns",
        "rename_column_references"
      ]
    ],
    [
      "django/db/backends/ddl_references.py",
      [
        "ForeignKeyName",
        "rename_column_references"
      ]
    ],
    [
      "django/db/backends/ddl_references.py",
      [
        "Statement",
        "rename_column_references"
      ]
    ],
    [
      "tests/backends/test_ddl_references.py",
      [
        "MockReference",
        "rename_column_references"
      ]
    ]
  ],
  "complain": [
    [
      "django/db/backends/dummy/base.py",
      [
        "complain"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "ImmutableList",
        "complain"
      ]
    ]
  ],
  "ignore": [
    [
      "django/db/backends/dummy/base.py",
      [
        "ignore"
      ]
    ]
  ],
  "executemany": [
    [
      "django/db/backends/mysql/base.py",
      [
        "CursorWrapper",
        "executemany"
      ]
    ],
    [
      "django/db/backends/oracle/base.py",
      [
        "FormatStylePlaceholderCursor",
        "executemany"
      ]
    ],
    [
      "django/db/backends/sqlite3/base.py",
      [
        "SQLiteCursorWrapper",
        "executemany"
      ]
    ],
    [
      "django/db/backends/utils.py",
      [
        "CursorWrapper",
        "executemany"
      ]
    ],
    [
      "django/db/backends/utils.py",
      [
        "CursorDebugWrapper",
        "executemany"
      ]
    ]
  ],
  "display_name": [
    [
      "django/db/backends/mysql/base.py",
      [
        "DatabaseWrapper",
        "display_name"
      ]
    ]
  ],
  "data_type_check_constraints": [
    [
      "django/db/backends/mysql/base.py",
      [
        "DatabaseWrapper",
        "data_type_check_constraints"
      ]
    ]
  ],
  "mysql_server_info": [
    [
      "django/db/backends/mysql/base.py",
      [
        "DatabaseWrapper",
        "mysql_server_info"
      ]
    ]
  ],
  "mysql_version": [
    [
      "django/db/backends/mysql/base.py",
      [
        "DatabaseWrapper",
        "mysql_version"
      ]
    ]
  ],
  "mysql_is_mariadb": [
    [
      "django/db/backends/mysql/base.py",
      [
        "DatabaseWrapper",
        "mysql_is_mariadb"
      ]
    ]
  ],
  "sql_mode": [
    [
      "django/db/backends/mysql/base.py",
      [
        "DatabaseWrapper",
        "sql_mode"
      ]
    ]
  ],
  "settings_to_cmd_args": [
    [
      "django/db/backends/mysql/client.py",
      [
        "DatabaseClient",
        "settings_to_cmd_args"
      ]
    ]
  ],
  "as_subquery_condition": [
    [
      "django/db/backends/mysql/compiler.py",
      [
        "SQLCompiler",
        "as_subquery_condition"
      ]
    ],
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "as_subquery_condition"
      ]
    ]
  ],
  "_clone_db": [
    [
      "django/db/backends/mysql/creation.py",
      [
        "DatabaseCreation",
        "_clone_db"
      ]
    ]
  ],
  "_mysql_storage_engine": [
    [
      "django/db/backends/mysql/features.py",
      [
        "DatabaseFeatures",
        "_mysql_storage_engine"
      ]
    ]
  ],
  "update_can_self_select": [
    [
      "django/db/backends/mysql/features.py",
      [
        "DatabaseFeatures",
        "update_can_self_select"
      ]
    ]
  ],
  "can_introspect_foreign_keys": [
    [
      "django/db/backends/mysql/features.py",
      [
        "DatabaseFeatures",
        "can_introspect_foreign_keys"
      ]
    ]
  ],
  "can_return_columns_from_insert": [
    [
      "django/db/backends/mysql/features.py",
      [
        "DatabaseFeatures",
        "can_return_columns_from_insert"
      ]
    ]
  ],
  "has_zoneinfo_database": [
    [
      "django/db/backends/mysql/features.py",
      [
        "DatabaseFeatures",
        "has_zoneinfo_database"
      ]
    ]
  ],
  "is_sql_auto_is_null_enabled": [
    [
      "django/db/backends/mysql/features.py",
      [
        "DatabaseFeatures",
        "is_sql_auto_is_null_enabled"
      ]
    ]
  ],
  "supports_over_clause": [
    [
      "django/db/backends/mysql/features.py",
      [
        "DatabaseFeatures",
        "supports_over_clause"
      ]
    ]
  ],
  "supports_column_check_constraints": [
    [
      "django/db/backends/mysql/features.py",
      [
        "DatabaseFeatures",
        "supports_column_check_constraints"
      ]
    ]
  ],
  "can_introspect_check_constraints": [
    [
      "django/db/backends/mysql/features.py",
      [
        "DatabaseFeatures",
        "can_introspect_check_constraints"
      ]
    ]
  ],
  "has_select_for_update_skip_locked": [
    [
      "django/db/backends/mysql/features.py",
      [
        "DatabaseFeatures",
        "has_select_for_update_skip_locked"
      ]
    ]
  ],
  "has_select_for_update_nowait": [
    [
      "django/db/backends/mysql/features.py",
      [
        "DatabaseFeatures",
        "has_select_for_update_nowait"
      ]
    ]
  ],
  "needs_explain_extended": [
    [
      "django/db/backends/mysql/features.py",
      [
        "DatabaseFeatures",
        "needs_explain_extended"
      ]
    ]
  ],
  "supports_explain_analyze": [
    [
      "django/db/backends/mysql/features.py",
      [
        "DatabaseFeatures",
        "supports_explain_analyze"
      ]
    ]
  ],
  "supported_explain_formats": [
    [
      "django/db/backends/mysql/features.py",
      [
        "DatabaseFeatures",
        "supported_explain_formats"
      ]
    ]
  ],
  "ignores_table_name_case": [
    [
      "django/db/backends/mysql/features.py",
      [
        "DatabaseFeatures",
        "ignores_table_name_case"
      ]
    ]
  ],
  "supports_default_in_lead_lag": [
    [
      "django/db/backends/mysql/features.py",
      [
        "DatabaseFeatures",
        "supports_default_in_lead_lag"
      ]
    ]
  ],
  "to_int": [
    [
      "django/db/backends/mysql/introspection.py",
      [
        "DatabaseIntrospection",
        "get_table_description",
        "to_int"
      ]
    ]
  ],
  "get_storage_engine": [
    [
      "django/db/backends/mysql/introspection.py",
      [
        "DatabaseIntrospection",
        "get_storage_engine"
      ]
    ]
  ],
  "_parse_constraint_columns": [
    [
      "django/db/backends/mysql/introspection.py",
      [
        "DatabaseIntrospection",
        "_parse_constraint_columns"
      ]
    ]
  ],
  "_prepare_tzname_delta": [
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "_prepare_tzname_delta"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "_prepare_tzname_delta"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "_prepare_tzname_delta"
      ]
    ]
  ],
  "_convert_field_to_tz": [
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "_convert_field_to_tz"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "_convert_field_to_tz"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "_convert_field_to_tz"
      ]
    ]
  ],
  "fetch_returned_insert_rows": [
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "fetch_returned_insert_rows"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "fetch_returned_insert_rows"
      ]
    ]
  ],
  "format_for_duration_arithmetic": [
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "format_for_duration_arithmetic"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "format_for_duration_arithmetic"
      ]
    ]
  ],
  "bulk_insert_sql": [
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "bulk_insert_sql"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "bulk_insert_sql"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "bulk_insert_sql"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "bulk_insert_sql"
      ]
    ]
  ],
  "convert_booleanfield_value": [
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "convert_booleanfield_value"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "convert_booleanfield_value"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "convert_booleanfield_value"
      ]
    ]
  ],
  "convert_datetimefield_value": [
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "convert_datetimefield_value"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "convert_datetimefield_value"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "convert_datetimefield_value"
      ]
    ]
  ],
  "convert_uuidfield_value": [
    [
      "django/db/backends/mysql/operations.py",
      [
        "DatabaseOperations",
        "convert_uuidfield_value"
      ]
    ],
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "convert_uuidfield_value"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "convert_uuidfield_value"
      ]
    ]
  ],
  "sql_delete_check": [
    [
      "django/db/backends/mysql/schema.py",
      [
        "DatabaseSchemaEditor",
        "sql_delete_check"
      ]
    ]
  ],
  "sql_rename_column": [
    [
      "django/db/backends/mysql/schema.py",
      [
        "DatabaseSchemaEditor",
        "sql_rename_column"
      ]
    ]
  ],
  "_is_limited_data_type": [
    [
      "django/db/backends/mysql/schema.py",
      [
        "DatabaseSchemaEditor",
        "_is_limited_data_type"
      ]
    ]
  ],
  "_supports_limited_data_type_defaults": [
    [
      "django/db/backends/mysql/schema.py",
      [
        "DatabaseSchemaEditor",
        "_supports_limited_data_type_defaults"
      ]
    ]
  ],
  "_set_field_new_type_null_status": [
    [
      "django/db/backends/mysql/schema.py",
      [
        "DatabaseSchemaEditor",
        "_set_field_new_type_null_status"
      ]
    ]
  ],
  "_check_sql_mode": [
    [
      "django/db/backends/mysql/validation.py",
      [
        "DatabaseValidation",
        "_check_sql_mode"
      ]
    ]
  ],
  "check_field_type": [
    [
      "django/db/backends/mysql/validation.py",
      [
        "DatabaseValidation",
        "check_field_type"
      ]
    ],
    [
      "django/db/backends/oracle/validation.py",
      [
        "DatabaseValidation",
        "check_field_type"
      ]
    ]
  ],
  "_setup_environment": [
    [
      "django/db/backends/oracle/base.py",
      [
        "_setup_environment"
      ]
    ]
  ],
  "wrap_oracle_errors": [
    [
      "django/db/backends/oracle/base.py",
      [
        "wrap_oracle_errors"
      ]
    ]
  ],
  "_dsn": [
    [
      "django/db/backends/oracle/base.py",
      [
        "DatabaseWrapper",
        "_dsn"
      ]
    ]
  ],
  "_connect_string": [
    [
      "django/db/backends/oracle/base.py",
      [
        "DatabaseWrapper",
        "_connect_string"
      ]
    ]
  ],
  "oracle_version": [
    [
      "django/db/backends/oracle/base.py",
      [
        "DatabaseWrapper",
        "oracle_version"
      ]
    ]
  ],
  "bind_parameter": [
    [
      "django/db/backends/oracle/base.py",
      [
        "VariableWrapper",
        "bind_parameter"
      ]
    ],
    [
      "django/db/backends/oracle/utils.py",
      [
        "InsertVar",
        "bind_parameter"
      ]
    ]
  ],
  "_output_number_converter": [
    [
      "django/db/backends/oracle/base.py",
      [
        "FormatStylePlaceholderCursor",
        "_output_number_converter"
      ]
    ]
  ],
  "_get_decimal_converter": [
    [
      "django/db/backends/oracle/base.py",
      [
        "FormatStylePlaceholderCursor",
        "_get_decimal_converter"
      ]
    ]
  ],
  "_output_type_handler": [
    [
      "django/db/backends/oracle/base.py",
      [
        "FormatStylePlaceholderCursor",
        "_output_type_handler"
      ]
    ]
  ],
  "_format_params": [
    [
      "django/db/backends/oracle/base.py",
      [
        "FormatStylePlaceholderCursor",
        "_format_params"
      ]
    ]
  ],
  "_guess_input_sizes": [
    [
      "django/db/backends/oracle/base.py",
      [
        "FormatStylePlaceholderCursor",
        "_guess_input_sizes"
      ]
    ]
  ],
  "_param_generator": [
    [
      "django/db/backends/oracle/base.py",
      [
        "FormatStylePlaceholderCursor",
        "_param_generator"
      ]
    ]
  ],
  "_fix_for_params": [
    [
      "django/db/backends/oracle/base.py",
      [
        "FormatStylePlaceholderCursor",
        "_fix_for_params"
      ]
    ]
  ],
  "var": [
    [
      "django/db/backends/oracle/base.py",
      [
        "FormatStylePlaceholderCursor",
        "var"
      ]
    ]
  ],
  "arrayvar": [
    [
      "django/db/backends/oracle/base.py",
      [
        "FormatStylePlaceholderCursor",
        "arrayvar"
      ]
    ]
  ],
  "_maindb_connection": [
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_maindb_connection"
      ]
    ]
  ],
  "_switch_to_test_user": [
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_switch_to_test_user"
      ]
    ]
  ],
  "_handle_objects_preventing_db_destruction": [
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_handle_objects_preventing_db_destruction"
      ]
    ]
  ],
  "_execute_test_db_creation": [
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_execute_test_db_creation"
      ]
    ]
  ],
  "_create_test_user": [
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_create_test_user"
      ]
    ]
  ],
  "_execute_test_db_destruction": [
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_execute_test_db_destruction"
      ]
    ]
  ],
  "_destroy_test_user": [
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_destroy_test_user"
      ]
    ]
  ],
  "_execute_statements": [
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_execute_statements"
      ]
    ]
  ],
  "_execute_allow_fail_statements": [
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_execute_allow_fail_statements"
      ]
    ]
  ],
  "_get_test_db_params": [
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_get_test_db_params"
      ]
    ]
  ],
  "_test_settings_get": [
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_test_settings_get"
      ]
    ]
  ],
  "_test_database_name": [
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_test_database_name"
      ]
    ]
  ],
  "_test_database_create": [
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_test_database_create"
      ]
    ]
  ],
  "_test_user_create": [
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_test_user_create"
      ]
    ]
  ],
  "_test_database_user": [
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_test_database_user"
      ]
    ]
  ],
  "_test_database_passwd": [
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_test_database_passwd"
      ]
    ],
    [
      "tests/backends/oracle/test_creation.py",
      [
        "DatabaseCreationTests",
        "_test_database_passwd"
      ]
    ]
  ],
  "_test_database_tblspace": [
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_test_database_tblspace"
      ]
    ]
  ],
  "_test_database_tblspace_tmp": [
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_test_database_tblspace_tmp"
      ]
    ]
  ],
  "_test_database_tblspace_datafile": [
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_test_database_tblspace_datafile"
      ]
    ]
  ],
  "_test_database_tblspace_tmp_datafile": [
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_test_database_tblspace_tmp_datafile"
      ]
    ]
  ],
  "_test_database_tblspace_maxsize": [
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_test_database_tblspace_maxsize"
      ]
    ]
  ],
  "_test_database_tblspace_tmp_maxsize": [
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_test_database_tblspace_tmp_maxsize"
      ]
    ]
  ],
  "_test_database_tblspace_size": [
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_test_database_tblspace_size"
      ]
    ]
  ],
  "_test_database_tblspace_tmp_size": [
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_test_database_tblspace_tmp_size"
      ]
    ]
  ],
  "_test_database_tblspace_extsize": [
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_test_database_tblspace_extsize"
      ]
    ]
  ],
  "_test_database_tblspace_tmp_extsize": [
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_test_database_tblspace_tmp_extsize"
      ]
    ]
  ],
  "_test_database_oracle_managed_files": [
    [
      "django/db/backends/oracle/creation.py",
      [
        "DatabaseCreation",
        "_test_database_oracle_managed_files"
      ]
    ]
  ],
  "convert_textfield_value": [
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "convert_textfield_value"
      ]
    ]
  ],
  "convert_binaryfield_value": [
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "convert_binaryfield_value"
      ]
    ]
  ],
  "convert_datefield_value": [
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "convert_datefield_value"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "convert_datefield_value"
      ]
    ]
  ],
  "convert_timefield_value": [
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "convert_timefield_value"
      ]
    ],
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "convert_timefield_value"
      ]
    ]
  ],
  "convert_empty_string": [
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "convert_empty_string"
      ]
    ]
  ],
  "convert_empty_bytes": [
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "convert_empty_bytes"
      ]
    ]
  ],
  "prep_for_iexact_query": [
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "prep_for_iexact_query"
      ]
    ],
    [
      "django/db/backends/postgresql/operations.py",
      [
        "DatabaseOperations",
        "prep_for_iexact_query"
      ]
    ]
  ],
  "__foreign_key_constraints": [
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "__foreign_key_constraints"
      ]
    ]
  ],
  "_foreign_key_constraints": [
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "_foreign_key_constraints"
      ]
    ]
  ],
  "_get_no_autofield_sequence_name": [
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "_get_no_autofield_sequence_name"
      ]
    ]
  ],
  "_get_sequence_name": [
    [
      "django/db/backends/oracle/operations.py",
      [
        "DatabaseOperations",
        "_get_sequence_name"
      ]
    ]
  ],
  "_alter_field_type_workaround": [
    [
      "django/db/backends/oracle/schema.py",
      [
        "DatabaseSchemaEditor",
        "_alter_field_type_workaround"
      ]
    ]
  ],
  "normalize_name": [
    [
      "django/db/backends/oracle/schema.py",
      [
        "DatabaseSchemaEditor",
        "normalize_name"
      ]
    ]
  ],
  "_generate_temp_name": [
    [
      "django/db/backends/oracle/schema.py",
      [
        "DatabaseSchemaEditor",
        "_generate_temp_name"
      ]
    ]
  ],
  "_is_identity_column": [
    [
      "django/db/backends/oracle/schema.py",
      [
        "DatabaseSchemaEditor",
        "_is_identity_column"
      ]
    ]
  ],
  "_drop_identity": [
    [
      "django/db/backends/oracle/schema.py",
      [
        "DatabaseSchemaEditor",
        "_drop_identity"
      ]
    ]
  ],
  "get_value": [
    [
      "django/db/backends/oracle/utils.py",
      [
        "InsertVar",
        "get_value"
      ]
    ]
  ],
  "from_datetime": [
    [
      "django/db/backends/oracle/utils.py",
      [
        "Oracle_datetime",
        "from_datetime"
      ]
    ]
  ],
  "psycopg2_version": [
    [
      "django/db/backends/postgresql/base.py",
      [
        "psycopg2_version"
      ]
    ]
  ],
  "tzinfo_factory": [
    [
      "django/db/backends/postgresql/base.py",
      [
        "DatabaseWrapper",
        "tzinfo_factory"
      ]
    ]
  ],
  "pg_version": [
    [
      "django/db/backends/postgresql/base.py",
      [
        "DatabaseWrapper",
        "pg_version"
      ]
    ]
  ],
  "copy_expert": [
    [
      "django/db/backends/postgresql/base.py",
      [
        "CursorDebugWrapper",
        "copy_expert"
      ]
    ]
  ],
  "copy_to": [
    [
      "django/db/backends/postgresql/base.py",
      [
        "CursorDebugWrapper",
        "copy_to"
      ]
    ]
  ],
  "runshell_db": [
    [
      "django/db/backends/postgresql/client.py",
      [
        "DatabaseClient",
        "runshell_db"
      ]
    ]
  ],
  "_quote_name": [
    [
      "django/db/backends/postgresql/creation.py",
      [
        "DatabaseCreation",
        "_quote_name"
      ]
    ]
  ],
  "_get_database_create_suffix": [
    [
      "django/db/backends/postgresql/creation.py",
      [
        "DatabaseCreation",
        "_get_database_create_suffix"
      ]
    ]
  ],
  "_database_exists": [
    [
      "django/db/backends/postgresql/creation.py",
      [
        "DatabaseCreation",
        "_database_exists"
      ]
    ]
  ],
  "is_postgresql_9_6": [
    [
      "django/db/backends/postgresql/features.py",
      [
        "DatabaseFeatures",
        "is_postgresql_9_6"
      ]
    ]
  ],
  "is_postgresql_10": [
    [
      "django/db/backends/postgresql/features.py",
      [
        "DatabaseFeatures",
        "is_postgresql_10"
      ]
    ]
  ],
  "is_postgresql_11": [
    [
      "django/db/backends/postgresql/features.py",
      [
        "DatabaseFeatures",
        "is_postgresql_11"
      ]
    ]
  ],
  "is_postgresql_12": [
    [
      "django/db/backends/postgresql/features.py",
      [
        "DatabaseFeatures",
        "is_postgresql_12"
      ]
    ]
  ],
  "_field_data_type": [
    [
      "django/db/backends/postgresql/schema.py",
      [
        "DatabaseSchemaEditor",
        "_field_data_type"
      ]
    ]
  ],
  "_field_base_data_types": [
    [
      "django/db/backends/postgresql/schema.py",
      [
        "DatabaseSchemaEditor",
        "_field_base_data_types"
      ]
    ]
  ],
  "_create_like_index_sql": [
    [
      "django/db/backends/postgresql/schema.py",
      [
        "DatabaseSchemaEditor",
        "_create_like_index_sql"
      ]
    ]
  ],
  "decoder": [
    [
      "django/db/backends/sqlite3/base.py",
      [
        "decoder"
      ]
    ]
  ],
  "none_guard": [
    [
      "django/db/backends/sqlite3/base.py",
      [
        "none_guard"
      ]
    ]
  ],
  "list_aggregate": [
    [
      "django/db/backends/sqlite3/base.py",
      [
        "list_aggregate"
      ]
    ]
  ],
  "check_sqlite_version": [
    [
      "django/db/backends/sqlite3/base.py",
      [
        "check_sqlite_version"
      ]
    ]
  ],
  "_start_transaction_under_autocommit": [
    [
      "django/db/backends/sqlite3/base.py",
      [
        "DatabaseWrapper",
        "_start_transaction_under_autocommit"
      ]
    ]
  ],
  "is_in_memory_db": [
    [
      "django/db/backends/sqlite3/base.py",
      [
        "DatabaseWrapper",
        "is_in_memory_db"
      ]
    ],
    [
      "django/db/backends/sqlite3/creation.py",
      [
        "DatabaseCreation",
        "is_in_memory_db"
      ]
    ]
  ],
  "convert_query": [
    [
      "django/db/backends/sqlite3/base.py",
      [
        "SQLiteCursorWrapper",
        "convert_query"
      ]
    ]
  ],
  "_sqlite_datetime_parse": [
    [
      "django/db/backends/sqlite3/base.py",
      [
        "_sqlite_datetime_parse"
      ]
    ]
  ],
  "_sqlite_date_trunc": [
    [
      "django/db/backends/sqlite3/base.py",
      [
        "_sqlite_date_trunc"
      ]
    ]
  ],
  "_sqlite_time_trunc": [
    [
      "django/db/backends/sqlite3/base.py",
      [
        "_sqlite_time_trunc"
      ]
    ]
  ],
  "_sqlite_datetime_cast_date": [
    [
      "django/db/backends/sqlite3/base.py",
      [
        "_sqlite_datetime_cast_date"
      ]
    ]
  ],
  "_sqlite_datetime_cast_time": [
    [
      "django/db/backends/sqlite3/base.py",
      [
        "_sqlite_datetime_cast_time"
      ]
    ]
  ],
  "_sqlite_datetime_extract": [
    [
      "django/db/backends/sqlite3/base.py",
      [
        "_sqlite_datetime_extract"
      ]
    ]
  ],
  "_sqlite_datetime_trunc": [
    [
      "django/db/backends/sqlite3/base.py",
      [
        "_sqlite_datetime_trunc"
      ]
    ]
  ],
  "_sqlite_time_extract": [
    [
      "django/db/backends/sqlite3/base.py",
      [
        "_sqlite_time_extract"
      ]
    ]
  ],
  "_sqlite_format_dtdelta": [
    [
      "django/db/backends/sqlite3/base.py",
      [
        "_sqlite_format_dtdelta"
      ]
    ]
  ],
  "_sqlite_time_diff": [
    [
      "django/db/backends/sqlite3/base.py",
      [
        "_sqlite_time_diff"
      ]
    ]
  ],
  "_sqlite_timestamp_diff": [
    [
      "django/db/backends/sqlite3/base.py",
      [
        "_sqlite_timestamp_diff"
      ]
    ]
  ],
  "_sqlite_regexp": [
    [
      "django/db/backends/sqlite3/base.py",
      [
        "_sqlite_regexp"
      ]
    ]
  ],
  "_sqlite_lpad": [
    [
      "django/db/backends/sqlite3/base.py",
      [
        "_sqlite_lpad"
      ]
    ]
  ],
  "_sqlite_rpad": [
    [
      "django/db/backends/sqlite3/base.py",
      [
        "_sqlite_rpad"
      ]
    ]
  ],
  "get_field_size": [
    [
      "django/db/backends/sqlite3/introspection.py",
      [
        "get_field_size"
      ]
    ]
  ],
  "_get_foreign_key_constraints": [
    [
      "django/db/backends/sqlite3/introspection.py",
      [
        "DatabaseIntrospection",
        "_get_foreign_key_constraints"
      ]
    ]
  ],
  "_parse_column_or_constraint_definition": [
    [
      "django/db/backends/sqlite3/introspection.py",
      [
        "DatabaseIntrospection",
        "_parse_column_or_constraint_definition"
      ]
    ]
  ],
  "_parse_table_constraints": [
    [
      "django/db/backends/sqlite3/introspection.py",
      [
        "DatabaseIntrospection",
        "_parse_table_constraints"
      ]
    ]
  ],
  "_convert_tznames_to_sql": [
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "_convert_tznames_to_sql"
      ]
    ]
  ],
  "_quote_params_for_last_executed_query": [
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "_quote_params_for_last_executed_query"
      ]
    ]
  ],
  "__references_graph": [
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "__references_graph"
      ]
    ]
  ],
  "_references_graph": [
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "_references_graph"
      ]
    ]
  ],
  "get_decimalfield_converter": [
    [
      "django/db/backends/sqlite3/operations.py",
      [
        "DatabaseOperations",
        "get_decimalfield_converter"
      ]
    ]
  ],
  "_is_referenced_by_fk_constraint": [
    [
      "django/db/backends/sqlite3/schema.py",
      [
        "DatabaseSchemaEditor",
        "_is_referenced_by_fk_constraint"
      ]
    ]
  ],
  "is_self_referential": [
    [
      "django/db/backends/sqlite3/schema.py",
      [
        "DatabaseSchemaEditor",
        "_remake_table",
        "is_self_referential"
      ]
    ]
  ],
  "_remake_table": [
    [
      "django/db/backends/sqlite3/schema.py",
      [
        "DatabaseSchemaEditor",
        "_remake_table"
      ]
    ]
  ],
  "callproc": [
    [
      "django/db/backends/utils.py",
      [
        "CursorWrapper",
        "callproc"
      ]
    ]
  ],
  "_execute_with_wrappers": [
    [
      "django/db/backends/utils.py",
      [
        "CursorWrapper",
        "_execute_with_wrappers"
      ]
    ]
  ],
  "_execute": [
    [
      "django/db/backends/utils.py",
      [
        "CursorWrapper",
        "_execute"
      ]
    ]
  ],
  "_executemany": [
    [
      "django/db/backends/utils.py",
      [
        "CursorWrapper",
        "_executemany"
      ]
    ]
  ],
  "debug_sql": [
    [
      "django/db/backends/utils.py",
      [
        "CursorDebugWrapper",
        "debug_sql"
      ]
    ]
  ],
  "typecast_date": [
    [
      "django/db/backends/utils.py",
      [
        "typecast_date"
      ]
    ]
  ],
  "typecast_time": [
    [
      "django/db/backends/utils.py",
      [
        "typecast_time"
      ]
    ]
  ],
  "typecast_timestamp": [
    [
      "django/db/backends/utils.py",
      [
        "typecast_timestamp"
      ]
    ]
  ],
  "split_identifier": [
    [
      "django/db/backends/utils.py",
      [
        "split_identifier"
      ]
    ]
  ],
  "truncate_name": [
    [
      "django/db/backends/utils.py",
      [
        "truncate_name"
      ]
    ]
  ],
  "names_digest": [
    [
      "django/db/backends/utils.py",
      [
        "names_digest"
      ]
    ]
  ],
  "format_number": [
    [
      "django/db/backends/utils.py",
      [
        "format_number"
      ]
    ]
  ],
  "strip_quotes": [
    [
      "django/db/backends/utils.py",
      [
        "strip_quotes"
      ]
    ]
  ],
  "changes": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "changes"
      ]
    ]
  ],
  "deep_deconstruct": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "deep_deconstruct"
      ]
    ]
  ],
  "only_relation_agnostic_fields": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "only_relation_agnostic_fields"
      ]
    ]
  ],
  "_detect_changes": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "_detect_changes"
      ]
    ]
  ],
  "_prepare_field_lists": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "_prepare_field_lists"
      ]
    ]
  ],
  "_generate_through_model_map": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "_generate_through_model_map"
      ]
    ]
  ],
  "_resolve_dependency": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "_resolve_dependency"
      ]
    ]
  ],
  "_build_migration_list": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "_build_migration_list"
      ]
    ]
  ],
  "_sort_migrations": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "_sort_migrations"
      ]
    ]
  ],
  "_optimize_migrations": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "_optimize_migrations"
      ]
    ]
  ],
  "check_dependency": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "check_dependency"
      ]
    ]
  ],
  "add_operation": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "add_operation"
      ]
    ]
  ],
  "swappable_first_key": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "swappable_first_key"
      ]
    ]
  ],
  "generate_renamed_models": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "generate_renamed_models"
      ]
    ]
  ],
  "generate_created_models": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "generate_created_models"
      ]
    ]
  ],
  "generate_created_proxies": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "generate_created_proxies"
      ]
    ]
  ],
  "generate_deleted_models": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "generate_deleted_models"
      ]
    ]
  ],
  "generate_deleted_proxies": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "generate_deleted_proxies"
      ]
    ]
  ],
  "generate_renamed_fields": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "generate_renamed_fields"
      ]
    ]
  ],
  "generate_added_fields": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "generate_added_fields"
      ]
    ]
  ],
  "_generate_added_field": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "_generate_added_field"
      ]
    ]
  ],
  "generate_removed_fields": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "generate_removed_fields"
      ]
    ]
  ],
  "_generate_removed_field": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "_generate_removed_field"
      ]
    ]
  ],
  "generate_altered_fields": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "generate_altered_fields"
      ]
    ]
  ],
  "create_altered_indexes": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "create_altered_indexes"
      ]
    ]
  ],
  "generate_added_indexes": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "generate_added_indexes"
      ]
    ]
  ],
  "generate_removed_indexes": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "generate_removed_indexes"
      ]
    ]
  ],
  "create_altered_constraints": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "create_altered_constraints"
      ]
    ]
  ],
  "generate_added_constraints": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "generate_added_constraints"
      ]
    ]
  ],
  "generate_removed_constraints": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "generate_removed_constraints"
      ]
    ]
  ],
  "_get_dependencies_for_foreign_key": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "_get_dependencies_for_foreign_key"
      ]
    ]
  ],
  "_generate_altered_foo_together": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "_generate_altered_foo_together"
      ]
    ]
  ],
  "generate_altered_unique_together": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "generate_altered_unique_together"
      ]
    ]
  ],
  "generate_altered_index_together": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "generate_altered_index_together"
      ]
    ]
  ],
  "generate_altered_db_table": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "generate_altered_db_table"
      ]
    ]
  ],
  "generate_altered_options": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "generate_altered_options"
      ]
    ]
  ],
  "generate_altered_order_with_respect_to": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "generate_altered_order_with_respect_to"
      ]
    ]
  ],
  "generate_altered_managers": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "generate_altered_managers"
      ]
    ]
  ],
  "arrange_for_graph": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "arrange_for_graph"
      ]
    ]
  ],
  "_trim_to_apps": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "_trim_to_apps"
      ]
    ]
  ],
  "suggest_name": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "suggest_name"
      ]
    ]
  ],
  "parse_number": [
    [
      "django/db/migrations/autodetector.py",
      [
        "MigrationAutodetector",
        "parse_number"
      ]
    ]
  ],
  "migration_plan": [
    [
      "django/db/migrations/executor.py",
      [
        "MigrationExecutor",
        "migration_plan"
      ]
    ]
  ],
  "_create_project_state": [
    [
      "django/db/migrations/executor.py",
      [
        "MigrationExecutor",
        "_create_project_state"
      ]
    ]
  ],
  "migrate": [
    [
      "django/db/migrations/executor.py",
      [
        "MigrationExecutor",
        "migrate"
      ]
    ]
  ],
  "_migrate_all_forwards": [
    [
      "django/db/migrations/executor.py",
      [
        "MigrationExecutor",
        "_migrate_all_forwards"
      ]
    ]
  ],
  "_migrate_all_backwards": [
    [
      "django/db/migrations/executor.py",
      [
        "MigrationExecutor",
        "_migrate_all_backwards"
      ]
    ]
  ],
  "apply_migration": [
    [
      "django/db/migrations/executor.py",
      [
        "MigrationExecutor",
        "apply_migration"
      ]
    ]
  ],
  "record_migration": [
    [
      "django/db/migrations/executor.py",
      [
        "MigrationExecutor",
        "record_migration"
      ]
    ]
  ],
  "unapply_migration": [
    [
      "django/db/migrations/executor.py",
      [
        "MigrationExecutor",
        "unapply_migration"
      ]
    ]
  ],
  "check_replacements": [
    [
      "django/db/migrations/executor.py",
      [
        "MigrationExecutor",
        "check_replacements"
      ]
    ]
  ],
  "should_skip_detecting_model": [
    [
      "django/db/migrations/executor.py",
      [
        "MigrationExecutor",
        "detect_soft_applied",
        "should_skip_detecting_model"
      ]
    ]
  ],
  "detect_soft_applied": [
    [
      "django/db/migrations/executor.py",
      [
        "MigrationExecutor",
        "detect_soft_applied"
      ]
    ]
  ],
  "add_child": [
    [
      "django/db/migrations/graph.py",
      [
        "Node",
        "add_child"
      ]
    ]
  ],
  "add_parent": [
    [
      "django/db/migrations/graph.py",
      [
        "Node",
        "add_parent"
      ]
    ]
  ],
  "raise_error": [
    [
      "django/db/migrations/graph.py",
      [
        "DummyNode",
        "raise_error"
      ]
    ],
    [
      "tests/migrations/test_migrations_atomic_operation/0001_initial.py",
      [
        "raise_error"
      ]
    ],
    [
      "tests/migrations/test_migrations_non_atomic/0001_initial.py",
      [
        "raise_error"
      ]
    ]
  ],
  "add_node": [
    [
      "django/db/migrations/graph.py",
      [
        "MigrationGraph",
        "add_node"
      ]
    ]
  ],
  "add_dummy_node": [
    [
      "django/db/migrations/graph.py",
      [
        "MigrationGraph",
        "add_dummy_node"
      ]
    ]
  ],
  "add_dependency": [
    [
      "django/db/migrations/graph.py",
      [
        "MigrationGraph",
        "add_dependency"
      ]
    ],
    [
      "django/db/models/deletion.py",
      [
        "Collector",
        "add_dependency"
      ]
    ]
  ],
  "remove_replaced_nodes": [
    [
      "django/db/migrations/graph.py",
      [
        "MigrationGraph",
        "remove_replaced_nodes"
      ]
    ]
  ],
  "remove_replacement_node": [
    [
      "django/db/migrations/graph.py",
      [
        "MigrationGraph",
        "remove_replacement_node"
      ]
    ]
  ],
  "validate_consistency": [
    [
      "django/db/migrations/graph.py",
      [
        "MigrationGraph",
        "validate_consistency"
      ]
    ]
  ],
  "forwards_plan": [
    [
      "django/db/migrations/graph.py",
      [
        "MigrationGraph",
        "forwards_plan"
      ]
    ]
  ],
  "backwards_plan": [
    [
      "django/db/migrations/graph.py",
      [
        "MigrationGraph",
        "backwards_plan"
      ]
    ]
  ],
  "iterative_dfs": [
    [
      "django/db/migrations/graph.py",
      [
        "MigrationGraph",
        "iterative_dfs"
      ]
    ]
  ],
  "root_nodes": [
    [
      "django/db/migrations/graph.py",
      [
        "MigrationGraph",
        "root_nodes"
      ]
    ]
  ],
  "leaf_nodes": [
    [
      "django/db/migrations/graph.py",
      [
        "MigrationGraph",
        "leaf_nodes"
      ]
    ]
  ],
  "ensure_not_cyclic": [
    [
      "django/db/migrations/graph.py",
      [
        "MigrationGraph",
        "ensure_not_cyclic"
      ]
    ]
  ],
  "_nodes_and_edges": [
    [
      "django/db/migrations/graph.py",
      [
        "MigrationGraph",
        "_nodes_and_edges"
      ]
    ]
  ],
  "_generate_plan": [
    [
      "django/db/migrations/graph.py",
      [
        "MigrationGraph",
        "_generate_plan"
      ]
    ]
  ],
  "make_state": [
    [
      "django/db/migrations/graph.py",
      [
        "MigrationGraph",
        "make_state"
      ]
    ]
  ],
  "migrations_module": [
    [
      "django/db/migrations/loader.py",
      [
        "MigrationLoader",
        "migrations_module"
      ]
    ]
  ],
  "load_disk": [
    [
      "django/db/migrations/loader.py",
      [
        "MigrationLoader",
        "load_disk"
      ]
    ]
  ],
  "get_migration": [
    [
      "django/db/migrations/loader.py",
      [
        "MigrationLoader",
        "get_migration"
      ]
    ]
  ],
  "get_migration_by_prefix": [
    [
      "django/db/migrations/loader.py",
      [
        "MigrationLoader",
        "get_migration_by_prefix"
      ]
    ]
  ],
  "check_key": [
    [
      "django/db/migrations/loader.py",
      [
        "MigrationLoader",
        "check_key"
      ]
    ]
  ],
  "add_internal_dependencies": [
    [
      "django/db/migrations/loader.py",
      [
        "MigrationLoader",
        "add_internal_dependencies"
      ]
    ]
  ],
  "add_external_dependencies": [
    [
      "django/db/migrations/loader.py",
      [
        "MigrationLoader",
        "add_external_dependencies"
      ]
    ]
  ],
  "build_graph": [
    [
      "django/db/migrations/loader.py",
      [
        "MigrationLoader",
        "build_graph"
      ]
    ]
  ],
  "check_consistent_history": [
    [
      "django/db/migrations/loader.py",
      [
        "MigrationLoader",
        "check_consistent_history"
      ]
    ]
  ],
  "detect_conflicts": [
    [
      "django/db/migrations/loader.py",
      [
        "MigrationLoader",
        "detect_conflicts"
      ]
    ]
  ],
  "project_state": [
    [
      "django/db/migrations/loader.py",
      [
        "MigrationLoader",
        "project_state"
      ]
    ]
  ],
  "collect_sql": [
    [
      "django/db/migrations/loader.py",
      [
        "MigrationLoader",
        "collect_sql"
      ]
    ]
  ],
  "mutate_state": [
    [
      "django/db/migrations/migration.py",
      [
        "Migration",
        "mutate_state"
      ]
    ]
  ],
  "apply": [
    [
      "django/db/migrations/migration.py",
      [
        "Migration",
        "apply"
      ]
    ]
  ],
  "unapply": [
    [
      "django/db/migrations/migration.py",
      [
        "Migration",
        "unapply"
      ]
    ]
  ],
  "swappable_dependency": [
    [
      "django/db/migrations/migration.py",
      [
        "swappable_dependency"
      ]
    ]
  ],
  "references_model": [
    [
      "django/db/migrations/operations/base.py",
      [
        "Operation",
        "references_model"
      ]
    ],
    [
      "django/db/migrations/operations/fields.py",
      [
        "FieldOperation",
        "references_model"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "ModelOperation",
        "references_model"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "CreateModel",
        "references_model"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "DeleteModel",
        "references_model"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "RenameModel",
        "references_model"
      ]
    ]
  ],
  "references_field": [
    [
      "django/db/migrations/operations/base.py",
      [
        "Operation",
        "references_field"
      ]
    ],
    [
      "django/db/migrations/operations/fields.py",
      [
        "FieldOperation",
        "references_field"
      ]
    ],
    [
      "django/db/migrations/operations/fields.py",
      [
        "RenameField",
        "references_field"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterTogetherOptionOperation",
        "references_field"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterOrderWithRespectTo",
        "references_field"
      ]
    ]
  ],
  "allow_migrate_model": [
    [
      "django/db/migrations/operations/base.py",
      [
        "Operation",
        "allow_migrate_model"
      ]
    ],
    [
      "django/db/utils.py",
      [
        "ConnectionRouter",
        "allow_migrate_model"
      ]
    ]
  ],
  "reduce": [
    [
      "django/db/migrations/operations/base.py",
      [
        "Operation",
        "reduce"
      ]
    ],
    [
      "django/db/migrations/operations/fields.py",
      [
        "FieldOperation",
        "reduce"
      ]
    ],
    [
      "django/db/migrations/operations/fields.py",
      [
        "AddField",
        "reduce"
      ]
    ],
    [
      "django/db/migrations/operations/fields.py",
      [
        "RemoveField",
        "reduce"
      ]
    ],
    [
      "django/db/migrations/operations/fields.py",
      [
        "AlterField",
        "reduce"
      ]
    ],
    [
      "django/db/migrations/operations/fields.py",
      [
        "RenameField",
        "reduce"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "ModelOperation",
        "reduce"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "CreateModel",
        "reduce"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "RenameModel",
        "reduce"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "ModelOptionOperation",
        "reduce"
      ]
    ]
  ],
  "model_name_lower": [
    [
      "django/db/migrations/operations/fields.py",
      [
        "FieldOperation",
        "model_name_lower"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "IndexOperation",
        "model_name_lower"
      ]
    ]
  ],
  "name_lower": [
    [
      "django/db/migrations/operations/fields.py",
      [
        "FieldOperation",
        "name_lower"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "ModelOperation",
        "name_lower"
      ]
    ],
    [
      "django/db/migrations/state.py",
      [
        "ModelState",
        "name_lower"
      ]
    ]
  ],
  "is_same_model_operation": [
    [
      "django/db/migrations/operations/fields.py",
      [
        "FieldOperation",
        "is_same_model_operation"
      ]
    ]
  ],
  "is_same_field_operation": [
    [
      "django/db/migrations/operations/fields.py",
      [
        "FieldOperation",
        "is_same_field_operation"
      ]
    ]
  ],
  "old_name_lower": [
    [
      "django/db/migrations/operations/fields.py",
      [
        "RenameField",
        "old_name_lower"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "RenameModel",
        "old_name_lower"
      ]
    ]
  ],
  "new_name_lower": [
    [
      "django/db/migrations/operations/fields.py",
      [
        "RenameField",
        "new_name_lower"
      ]
    ],
    [
      "django/db/migrations/operations/models.py",
      [
        "RenameModel",
        "new_name_lower"
      ]
    ]
  ],
  "_check_for_duplicates": [
    [
      "django/db/migrations/operations/models.py",
      [
        "_check_for_duplicates"
      ]
    ]
  ],
  "option_value": [
    [
      "django/db/migrations/operations/models.py",
      [
        "AlterTogetherOptionOperation",
        "option_value"
      ]
    ]
  ],
  "reversible": [
    [
      "django/db/migrations/operations/special.py",
      [
        "RunSQL",
        "reversible"
      ]
    ],
    [
      "django/db/migrations/operations/special.py",
      [
        "RunPython",
        "reversible"
      ]
    ],
    [
      "tests/custom_migration_operations/more_operations.py",
      [
        "TestOperation",
        "reversible"
      ]
    ],
    [
      "tests/custom_migration_operations/operations.py",
      [
        "TestOperation",
        "reversible"
      ]
    ]
  ],
  "_run_sql": [
    [
      "django/db/migrations/operations/special.py",
      [
        "RunSQL",
        "_run_sql"
      ]
    ]
  ],
  "noop": [
    [
      "django/db/migrations/operations/special.py",
      [
        "RunPython",
        "noop"
      ]
    ],
    [
      "tests/template_tests/templatetags/custom.py",
      [
        "noop"
      ]
    ]
  ],
  "resolve_relation": [
    [
      "django/db/migrations/operations/utils.py",
      [
        "resolve_relation"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "resolve_relation"
      ]
    ]
  ],
  "field_references": [
    [
      "django/db/migrations/operations/utils.py",
      [
        "field_references"
      ]
    ]
  ],
  "get_references": [
    [
      "django/db/migrations/operations/utils.py",
      [
        "get_references"
      ]
    ]
  ],
  "field_is_referenced": [
    [
      "django/db/migrations/operations/utils.py",
      [
        "field_is_referenced"
      ]
    ]
  ],
  "optimize": [
    [
      "django/db/migrations/optimizer.py",
      [
        "MigrationOptimizer",
        "optimize"
      ]
    ],
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "optimize"
      ]
    ]
  ],
  "optimize_inner": [
    [
      "django/db/migrations/optimizer.py",
      [
        "MigrationOptimizer",
        "optimize_inner"
      ]
    ]
  ],
  "ask_initial": [
    [
      "django/db/migrations/questioner.py",
      [
        "MigrationQuestioner",
        "ask_initial"
      ]
    ]
  ],
  "ask_not_null_addition": [
    [
      "django/db/migrations/questioner.py",
      [
        "MigrationQuestioner",
        "ask_not_null_addition"
      ]
    ],
    [
      "django/db/migrations/questioner.py",
      [
        "InteractiveMigrationQuestioner",
        "ask_not_null_addition"
      ]
    ],
    [
      "django/db/migrations/questioner.py",
      [
        "NonInteractiveMigrationQuestioner",
        "ask_not_null_addition"
      ]
    ]
  ],
  "ask_not_null_alteration": [
    [
      "django/db/migrations/questioner.py",
      [
        "MigrationQuestioner",
        "ask_not_null_alteration"
      ]
    ],
    [
      "django/db/migrations/questioner.py",
      [
        "InteractiveMigrationQuestioner",
        "ask_not_null_alteration"
      ]
    ],
    [
      "django/db/migrations/questioner.py",
      [
        "NonInteractiveMigrationQuestioner",
        "ask_not_null_alteration"
      ]
    ]
  ],
  "ask_rename": [
    [
      "django/db/migrations/questioner.py",
      [
        "MigrationQuestioner",
        "ask_rename"
      ]
    ],
    [
      "django/db/migrations/questioner.py",
      [
        "InteractiveMigrationQuestioner",
        "ask_rename"
      ]
    ]
  ],
  "ask_rename_model": [
    [
      "django/db/migrations/questioner.py",
      [
        "MigrationQuestioner",
        "ask_rename_model"
      ]
    ],
    [
      "django/db/migrations/questioner.py",
      [
        "InteractiveMigrationQuestioner",
        "ask_rename_model"
      ]
    ]
  ],
  "ask_merge": [
    [
      "django/db/migrations/questioner.py",
      [
        "MigrationQuestioner",
        "ask_merge"
      ]
    ],
    [
      "django/db/migrations/questioner.py",
      [
        "InteractiveMigrationQuestioner",
        "ask_merge"
      ]
    ]
  ],
  "ask_auto_now_add_addition": [
    [
      "django/db/migrations/questioner.py",
      [
        "MigrationQuestioner",
        "ask_auto_now_add_addition"
      ]
    ],
    [
      "django/db/migrations/questioner.py",
      [
        "InteractiveMigrationQuestioner",
        "ask_auto_now_add_addition"
      ]
    ],
    [
      "django/db/migrations/questioner.py",
      [
        "NonInteractiveMigrationQuestioner",
        "ask_auto_now_add_addition"
      ]
    ]
  ],
  "_boolean_input": [
    [
      "django/db/migrations/questioner.py",
      [
        "InteractiveMigrationQuestioner",
        "_boolean_input"
      ]
    ]
  ],
  "_choice_input": [
    [
      "django/db/migrations/questioner.py",
      [
        "InteractiveMigrationQuestioner",
        "_choice_input"
      ]
    ]
  ],
  "_ask_default": [
    [
      "django/db/migrations/questioner.py",
      [
        "InteractiveMigrationQuestioner",
        "_ask_default"
      ]
    ]
  ],
  "Migration": [
    [
      "django/db/migrations/recorder.py",
      [
        "MigrationRecorder",
        "Migration"
      ]
    ]
  ],
  "migration_qs": [
    [
      "django/db/migrations/recorder.py",
      [
        "MigrationRecorder",
        "migration_qs"
      ]
    ]
  ],
  "has_table": [
    [
      "django/db/migrations/recorder.py",
      [
        "MigrationRecorder",
        "has_table"
      ]
    ]
  ],
  "ensure_schema": [
    [
      "django/db/migrations/recorder.py",
      [
        "MigrationRecorder",
        "ensure_schema"
      ]
    ]
  ],
  "applied_migrations": [
    [
      "django/db/migrations/recorder.py",
      [
        "MigrationRecorder",
        "applied_migrations"
      ]
    ]
  ],
  "record_applied": [
    [
      "django/db/migrations/recorder.py",
      [
        "MigrationRecorder",
        "record_applied"
      ]
    ]
  ],
  "record_unapplied": [
    [
      "django/db/migrations/recorder.py",
      [
        "MigrationRecorder",
        "record_unapplied"
      ]
    ]
  ],
  "_format": [
    [
      "django/db/migrations/serializer.py",
      [
        "BaseSequenceSerializer",
        "_format"
      ]
    ],
    [
      "django/db/migrations/serializer.py",
      [
        "FrozensetSerializer",
        "_format"
      ]
    ],
    [
      "django/db/migrations/serializer.py",
      [
        "SequenceSerializer",
        "_format"
      ]
    ],
    [
      "django/db/migrations/serializer.py",
      [
        "SetSerializer",
        "_format"
      ]
    ],
    [
      "django/db/migrations/serializer.py",
      [
        "TupleSerializer",
        "_format"
      ]
    ]
  ],
  "serialize_deconstructed": [
    [
      "django/db/migrations/serializer.py",
      [
        "DeconstructableSerializer",
        "serialize_deconstructed"
      ]
    ]
  ],
  "_serialize_path": [
    [
      "django/db/migrations/serializer.py",
      [
        "DeconstructableSerializer",
        "_serialize_path"
      ]
    ]
  ],
  "serializer_factory": [
    [
      "django/db/migrations/serializer.py",
      [
        "serializer_factory"
      ]
    ]
  ],
  "_get_app_label_and_model_name": [
    [
      "django/db/migrations/state.py",
      [
        "_get_app_label_and_model_name"
      ]
    ]
  ],
  "_get_related_models": [
    [
      "django/db/migrations/state.py",
      [
        "_get_related_models"
      ]
    ]
  ],
  "get_related_models_tuples": [
    [
      "django/db/migrations/state.py",
      [
        "get_related_models_tuples"
      ]
    ]
  ],
  "get_related_models_recursive": [
    [
      "django/db/migrations/state.py",
      [
        "get_related_models_recursive"
      ]
    ]
  ],
  "add_model": [
    [
      "django/db/migrations/state.py",
      [
        "ProjectState",
        "add_model"
      ]
    ]
  ],
  "remove_model": [
    [
      "django/db/migrations/state.py",
      [
        "ProjectState",
        "remove_model"
      ]
    ]
  ],
  "_find_reload_model": [
    [
      "django/db/migrations/state.py",
      [
        "ProjectState",
        "_find_reload_model"
      ]
    ]
  ],
  "reload_model": [
    [
      "django/db/migrations/state.py",
      [
        "ProjectState",
        "reload_model"
      ]
    ]
  ],
  "reload_models": [
    [
      "django/db/migrations/state.py",
      [
        "ProjectState",
        "reload_models"
      ]
    ]
  ],
  "_reload": [
    [
      "django/db/migrations/state.py",
      [
        "ProjectState",
        "_reload"
      ]
    ]
  ],
  "clear_delayed_apps_cache": [
    [
      "django/db/migrations/state.py",
      [
        "ProjectState",
        "clear_delayed_apps_cache"
      ]
    ]
  ],
  "apps": [
    [
      "django/db/migrations/state.py",
      [
        "ProjectState",
        "apps"
      ]
    ]
  ],
  "concrete_apps": [
    [
      "django/db/migrations/state.py",
      [
        "ProjectState",
        "concrete_apps"
      ]
    ]
  ],
  "from_apps": [
    [
      "django/db/migrations/state.py",
      [
        "ProjectState",
        "from_apps"
      ]
    ]
  ],
  "bulk_update": [
    [
      "django/db/migrations/state.py",
      [
        "StateApps",
        "bulk_update"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "bulk_update"
      ]
    ]
  ],
  "render_multiple": [
    [
      "django/db/migrations/state.py",
      [
        "StateApps",
        "render_multiple"
      ]
    ]
  ],
  "unregister_model": [
    [
      "django/db/migrations/state.py",
      [
        "StateApps",
        "unregister_model"
      ]
    ]
  ],
  "flatten_bases": [
    [
      "django/db/migrations/state.py",
      [
        "ModelState",
        "from_model",
        "flatten_bases"
      ]
    ]
  ],
  "from_model": [
    [
      "django/db/migrations/state.py",
      [
        "ModelState",
        "from_model"
      ]
    ]
  ],
  "construct_managers": [
    [
      "django/db/migrations/state.py",
      [
        "ModelState",
        "construct_managers"
      ]
    ]
  ],
  "get_index_by_name": [
    [
      "django/db/migrations/state.py",
      [
        "ModelState",
        "get_index_by_name"
      ]
    ]
  ],
  "get_constraint_by_name": [
    [
      "django/db/migrations/state.py",
      [
        "ModelState",
        "get_constraint_by_name"
      ]
    ]
  ],
  "get_migration_name_timestamp": [
    [
      "django/db/migrations/utils.py",
      [
        "get_migration_name_timestamp"
      ]
    ]
  ],
  "_write": [
    [
      "django/db/migrations/writer.py",
      [
        "OperationWriter",
        "serialize",
        "_write"
      ]
    ],
    [
      "tests/builtin_server/tests.py",
      [
        "WriteChunkCounterHandler",
        "_write"
      ]
    ]
  ],
  "unindent": [
    [
      "django/db/migrations/writer.py",
      [
        "OperationWriter",
        "unindent"
      ]
    ]
  ],
  "basedir": [
    [
      "django/db/migrations/writer.py",
      [
        "MigrationWriter",
        "basedir"
      ]
    ]
  ],
  "filename": [
    [
      "django/db/migrations/writer.py",
      [
        "MigrationWriter",
        "filename"
      ]
    ]
  ],
  "get_source_fields": [
    [
      "django/db/models/aggregates.py",
      [
        "Aggregate",
        "get_source_fields"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "get_source_fields"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "When",
        "get_source_fields"
      ]
    ]
  ],
  "default_alias": [
    [
      "django/db/models/aggregates.py",
      [
        "Aggregate",
        "default_alias"
      ]
    ]
  ],
  "get_group_by_cols": [
    [
      "django/db/models/aggregates.py",
      [
        "Aggregate",
        "get_group_by_cols"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "get_group_by_cols"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "ResolvedOuterRef",
        "get_group_by_cols"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Value",
        "get_group_by_cols"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "RawSQL",
        "get_group_by_cols"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Col",
        "get_group_by_cols"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Ref",
        "get_group_by_cols"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "When",
        "get_group_by_cols"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Subquery",
        "get_group_by_cols"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "OrderBy",
        "get_group_by_cols"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Window",
        "get_group_by_cols"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "WindowFrame",
        "get_group_by_cols"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "Lookup",
        "get_group_by_cols"
      ]
    ],
    [
      "django/db/models/sql/where.py",
      [
        "WhereNode",
        "get_group_by_cols"
      ]
    ],
    [
      "tests/expressions/test_deprecation.py",
      [
        "MissingAliasFunc",
        "get_group_by_cols"
      ]
    ]
  ],
  "_get_repr_options": [
    [
      "django/db/models/aggregates.py",
      [
        "Aggregate",
        "_get_repr_options"
      ]
    ],
    [
      "django/db/models/aggregates.py",
      [
        "StdDev",
        "_get_repr_options"
      ]
    ],
    [
      "django/db/models/aggregates.py",
      [
        "Variance",
        "_get_repr_options"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Func",
        "_get_repr_options"
      ]
    ]
  ],
  "subclass_exception": [
    [
      "django/db/models/base.py",
      [
        "subclass_exception"
      ]
    ]
  ],
  "_has_contribute_to_class": [
    [
      "django/db/models/base.py",
      [
        "_has_contribute_to_class"
      ]
    ]
  ],
  "add_to_class": [
    [
      "django/db/models/base.py",
      [
        "ModelBase",
        "add_to_class"
      ]
    ]
  ],
  "_base_manager": [
    [
      "django/db/models/base.py",
      [
        "ModelBase",
        "_base_manager"
      ]
    ]
  ],
  "_default_manager": [
    [
      "django/db/models/base.py",
      [
        "ModelBase",
        "_default_manager"
      ]
    ]
  ],
  "from_db": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "from_db"
      ]
    ]
  ],
  "__reduce__": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "__reduce__"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "__reduce__"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ForwardManyToOneDescriptor",
        "__reduce__"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ReverseOneToOneDescriptor",
        "__reduce__"
      ]
    ],
    [
      "django/utils/functional.py",
      [
        "lazy",
        "__proxy__",
        "__reduce__"
      ]
    ],
    [
      "django/utils/functional.py",
      [
        "LazyObject",
        "__reduce__"
      ]
    ],
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "BaseBaz",
        "__reduce__"
      ]
    ]
  ],
  "_get_pk_val": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "_get_pk_val"
      ]
    ]
  ],
  "_set_pk_val": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "_set_pk_val"
      ]
    ]
  ],
  "get_deferred_fields": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "get_deferred_fields"
      ]
    ]
  ],
  "refresh_from_db": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "refresh_from_db"
      ]
    ],
    [
      "tests/defer/models.py",
      [
        "RefreshPrimaryProxy",
        "refresh_from_db"
      ]
    ]
  ],
  "serializable_value": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "serializable_value"
      ]
    ]
  ],
  "save_base": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "save_base"
      ]
    ]
  ],
  "_save_parents": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "_save_parents"
      ]
    ]
  ],
  "_save_table": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "_save_table"
      ]
    ]
  ],
  "_do_update": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "_do_update"
      ]
    ]
  ],
  "_do_insert": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "_do_insert"
      ]
    ]
  ],
  "_get_FIELD_display": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "_get_FIELD_display"
      ]
    ]
  ],
  "_get_next_or_previous_by_FIELD": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "_get_next_or_previous_by_FIELD"
      ]
    ]
  ],
  "_get_next_or_previous_in_order": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "_get_next_or_previous_in_order"
      ]
    ]
  ],
  "prepare_database_save": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "prepare_database_save"
      ]
    ]
  ],
  "validate_unique": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "validate_unique"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "BaseModelForm",
        "validate_unique"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "BaseModelFormSet",
        "validate_unique"
      ]
    ]
  ],
  "_get_unique_checks": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "_get_unique_checks"
      ]
    ]
  ],
  "_perform_unique_checks": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "_perform_unique_checks"
      ]
    ]
  ],
  "_perform_date_checks": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "_perform_date_checks"
      ]
    ]
  ],
  "date_error_message": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "date_error_message"
      ]
    ]
  ],
  "unique_error_message": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "unique_error_message"
      ]
    ]
  ],
  "full_clean": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "full_clean"
      ]
    ],
    [
      "django/forms/forms.py",
      [
        "BaseForm",
        "full_clean"
      ]
    ],
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "full_clean"
      ]
    ]
  ],
  "clean_fields": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "clean_fields"
      ]
    ]
  ],
  "_check_swappable": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "_check_swappable"
      ]
    ]
  ],
  "_check_model": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "_check_model"
      ]
    ]
  ],
  "_check_managers": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "_check_managers"
      ]
    ]
  ],
  "_check_m2m_through_same_relationship": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "_check_m2m_through_same_relationship"
      ]
    ]
  ],
  "_check_id_field": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "_check_id_field"
      ]
    ]
  ],
  "_check_field_name_clashes": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "_check_field_name_clashes"
      ]
    ]
  ],
  "_check_column_name_clashes": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "_check_column_name_clashes"
      ]
    ]
  ],
  "_check_model_name_db_lookup_clashes": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "_check_model_name_db_lookup_clashes"
      ]
    ]
  ],
  "_check_property_name_related_field_accessor_clashes": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "_check_property_name_related_field_accessor_clashes"
      ]
    ]
  ],
  "_check_single_primary_key": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "_check_single_primary_key"
      ]
    ]
  ],
  "_check_index_together": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "_check_index_together"
      ]
    ]
  ],
  "_check_unique_together": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "_check_unique_together"
      ]
    ]
  ],
  "_check_indexes": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "_check_indexes"
      ]
    ]
  ],
  "_check_local_fields": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "_check_local_fields"
      ]
    ]
  ],
  "_check_long_column_names": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "_check_long_column_names"
      ]
    ]
  ],
  "_check_constraints": [
    [
      "django/db/models/base.py",
      [
        "Model",
        "_check_constraints"
      ]
    ]
  ],
  "method_set_order": [
    [
      "django/db/models/base.py",
      [
        "method_set_order"
      ]
    ]
  ],
  "method_get_order": [
    [
      "django/db/models/base.py",
      [
        "method_get_order"
      ]
    ]
  ],
  "make_foreign_order_accessors": [
    [
      "django/db/models/base.py",
      [
        "make_foreign_order_accessors"
      ]
    ]
  ],
  "model_unpickle": [
    [
      "django/db/models/base.py",
      [
        "model_unpickle"
      ]
    ]
  ],
  "_get_check_sql": [
    [
      "django/db/models/constraints.py",
      [
        "CheckConstraint",
        "_get_check_sql"
      ]
    ]
  ],
  "CASCADE": [
    [
      "django/db/models/deletion.py",
      [
        "CASCADE"
      ]
    ]
  ],
  "PROTECT": [
    [
      "django/db/models/deletion.py",
      [
        "PROTECT"
      ]
    ]
  ],
  "RESTRICT": [
    [
      "django/db/models/deletion.py",
      [
        "RESTRICT"
      ]
    ]
  ],
  "SET": [
    [
      "django/db/models/deletion.py",
      [
        "SET"
      ]
    ]
  ],
  "SET_NULL": [
    [
      "django/db/models/deletion.py",
      [
        "SET_NULL"
      ]
    ]
  ],
  "SET_DEFAULT": [
    [
      "django/db/models/deletion.py",
      [
        "SET_DEFAULT"
      ]
    ]
  ],
  "DO_NOTHING": [
    [
      "django/db/models/deletion.py",
      [
        "DO_NOTHING"
      ]
    ]
  ],
  "get_candidate_relations_to_delete": [
    [
      "django/db/models/deletion.py",
      [
        "get_candidate_relations_to_delete"
      ]
    ]
  ],
  "add_field_update": [
    [
      "django/db/models/deletion.py",
      [
        "Collector",
        "add_field_update"
      ]
    ]
  ],
  "add_restricted_objects": [
    [
      "django/db/models/deletion.py",
      [
        "Collector",
        "add_restricted_objects"
      ]
    ]
  ],
  "clear_restricted_objects_from_set": [
    [
      "django/db/models/deletion.py",
      [
        "Collector",
        "clear_restricted_objects_from_set"
      ]
    ]
  ],
  "clear_restricted_objects_from_queryset": [
    [
      "django/db/models/deletion.py",
      [
        "Collector",
        "clear_restricted_objects_from_queryset"
      ]
    ]
  ],
  "_has_signal_listeners": [
    [
      "django/db/models/deletion.py",
      [
        "Collector",
        "_has_signal_listeners"
      ]
    ]
  ],
  "get_del_batches": [
    [
      "django/db/models/deletion.py",
      [
        "Collector",
        "get_del_batches"
      ]
    ]
  ],
  "instances_with_model": [
    [
      "django/db/models/deletion.py",
      [
        "Collector",
        "instances_with_model"
      ]
    ]
  ],
  "names": [
    [
      "django/db/models/enums.py",
      [
        "ChoicesMeta",
        "names"
      ]
    ]
  ],
  "labels": [
    [
      "django/db/models/enums.py",
      [
        "ChoicesMeta",
        "labels"
      ]
    ]
  ],
  "_generate_next_value_": [
    [
      "django/db/models/enums.py",
      [
        "TextChoices",
        "_generate_next_value_"
      ]
    ]
  ],
  "__neg__": [
    [
      "django/db/models/expressions.py",
      [
        "Combinable",
        "__neg__"
      ]
    ]
  ],
  "__mod__": [
    [
      "django/db/models/expressions.py",
      [
        "Combinable",
        "__mod__"
      ]
    ],
    [
      "django/utils/functional.py",
      [
        "lazy",
        "__proxy__",
        "__mod__"
      ]
    ],
    [
      "django/utils/translation/__init__.py",
      [
        "lazy_number",
        "if_isinstance_number_int",
        "else_",
        "NumberAwareString",
        "__mod__"
      ]
    ]
  ],
  "__pow__": [
    [
      "django/db/models/expressions.py",
      [
        "Combinable",
        "__pow__"
      ]
    ]
  ],
  "bitand": [
    [
      "django/db/models/expressions.py",
      [
        "Combinable",
        "bitand"
      ]
    ]
  ],
  "bitleftshift": [
    [
      "django/db/models/expressions.py",
      [
        "Combinable",
        "bitleftshift"
      ]
    ]
  ],
  "bitrightshift": [
    [
      "django/db/models/expressions.py",
      [
        "Combinable",
        "bitrightshift"
      ]
    ]
  ],
  "bitxor": [
    [
      "django/db/models/expressions.py",
      [
        "Combinable",
        "bitxor"
      ]
    ]
  ],
  "bitor": [
    [
      "django/db/models/expressions.py",
      [
        "Combinable",
        "bitor"
      ]
    ]
  ],
  "__rsub__": [
    [
      "django/db/models/expressions.py",
      [
        "Combinable",
        "__rsub__"
      ]
    ]
  ],
  "__rtruediv__": [
    [
      "django/db/models/expressions.py",
      [
        "Combinable",
        "__rtruediv__"
      ]
    ]
  ],
  "__rmod__": [
    [
      "django/db/models/expressions.py",
      [
        "Combinable",
        "__rmod__"
      ]
    ]
  ],
  "__rpow__": [
    [
      "django/db/models/expressions.py",
      [
        "Combinable",
        "__rpow__"
      ]
    ]
  ],
  "_parse_expressions": [
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "_parse_expressions"
      ]
    ]
  ],
  "contains_aggregate": [
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "contains_aggregate"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "Lookup",
        "contains_aggregate"
      ]
    ],
    [
      "django/db/models/sql/where.py",
      [
        "WhereNode",
        "contains_aggregate"
      ]
    ]
  ],
  "contains_over_clause": [
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "contains_over_clause"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "Lookup",
        "contains_over_clause"
      ]
    ],
    [
      "django/db/models/sql/where.py",
      [
        "WhereNode",
        "contains_over_clause"
      ]
    ]
  ],
  "contains_column_references": [
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "contains_column_references"
      ]
    ]
  ],
  "conditional": [
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "conditional"
      ]
    ]
  ],
  "field": [
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "field"
      ]
    ],
    [
      "tests/foreign_object/models/empty_join.py",
      [
        "StartsWithRelation",
        "field"
      ]
    ]
  ],
  "_output_field_or_none": [
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "_output_field_or_none"
      ]
    ]
  ],
  "_resolve_output_field": [
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "_resolve_output_field"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Subquery",
        "_resolve_output_field"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Window",
        "_resolve_output_field"
      ]
    ],
    [
      "django/db/models/functions/mixins.py",
      [
        "NumericOutputFieldMixin",
        "_resolve_output_field"
      ]
    ],
    [
      "django/db/models/functions/window.py",
      [
        "LagLeadFunction",
        "_resolve_output_field"
      ]
    ],
    [
      "django/db/models/functions/window.py",
      [
        "NthValue",
        "_resolve_output_field"
      ]
    ]
  ],
  "_convert_value_noop": [
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "_convert_value_noop"
      ]
    ]
  ],
  "get_lookup": [
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "get_lookup"
      ]
    ],
    [
      "django/db/models/fields/related_lookups.py",
      [
        "MultiColSource",
        "get_lookup"
      ]
    ],
    [
      "django/db/models/fields/reverse_related.py",
      [
        "ForeignObjectRel",
        "get_lookup"
      ]
    ],
    [
      "django/db/models/query_utils.py",
      [
        "RegisterLookupMixin",
        "get_lookup"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "CustomField",
        "get_lookup"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "TrackCallsYearTransform",
        "get_lookup"
      ]
    ]
  ],
  "relabeled_clone": [
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "relabeled_clone"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "ResolvedOuterRef",
        "relabeled_clone"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "OuterRef",
        "relabeled_clone"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Col",
        "relabeled_clone"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "Ref",
        "relabeled_clone"
      ]
    ],
    [
      "django/db/models/fields/related_lookups.py",
      [
        "MultiColSource",
        "relabeled_clone"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "Lookup",
        "relabeled_clone"
      ]
    ],
    [
      "django/db/models/sql/datastructures.py",
      [
        "Join",
        "relabeled_clone"
      ]
    ],
    [
      "django/db/models/sql/datastructures.py",
      [
        "BaseTable",
        "relabeled_clone"
      ]
    ],
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "relabeled_clone"
      ]
    ],
    [
      "django/db/models/sql/where.py",
      [
        "WhereNode",
        "relabeled_clone"
      ]
    ]
  ],
  "asc": [
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "asc"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "F",
        "asc"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "OrderBy",
        "asc"
      ]
    ]
  ],
  "desc": [
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "desc"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "F",
        "desc"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "OrderBy",
        "desc"
      ]
    ]
  ],
  "reverse_ordering": [
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "reverse_ordering"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "OrderBy",
        "reverse_ordering"
      ]
    ]
  ],
  "identity": [
    [
      "django/db/models/expressions.py",
      [
        "BaseExpression",
        "identity"
      ]
    ]
  ],
  "compile": [
    [
      "django/db/models/expressions.py",
      [
        "DurationExpression",
        "compile"
      ]
    ],
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "compile"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "WhereNodeTest",
        "MockCompiler",
        "compile"
      ]
    ]
  ],
  "external_aliases": [
    [
      "django/db/models/expressions.py",
      [
        "Subquery",
        "external_aliases"
      ]
    ]
  ],
  "window_frame_start_end": [
    [
      "django/db/models/expressions.py",
      [
        "WindowFrame",
        "window_frame_start_end"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "RowRange",
        "window_frame_start_end"
      ]
    ],
    [
      "django/db/models/expressions.py",
      [
        "ValueRange",
        "window_frame_start_end"
      ]
    ]
  ],
  "_load_field": [
    [
      "django/db/models/fields/__init__.py",
      [
        "_load_field"
      ]
    ]
  ],
  "_empty": [
    [
      "django/db/models/fields/__init__.py",
      [
        "_empty"
      ]
    ]
  ],
  "return_None": [
    [
      "django/db/models/fields/__init__.py",
      [
        "return_None"
      ]
    ]
  ],
  "_description": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "_description"
      ]
    ]
  ],
  "_check_choices": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "_check_choices"
      ]
    ]
  ],
  "_check_db_index": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "_check_db_index"
      ]
    ]
  ],
  "_check_null_allowed_for_primary_keys": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "_check_null_allowed_for_primary_keys"
      ]
    ]
  ],
  "_check_backend_specific_checks": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "_check_backend_specific_checks"
      ]
    ]
  ],
  "_check_validators": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "_check_validators"
      ]
    ]
  ],
  "_check_deprecation_details": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "_check_deprecation_details"
      ]
    ]
  ],
  "get_col": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "get_col"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ForeignKey",
        "get_col"
      ]
    ]
  ],
  "cached_col": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "cached_col"
      ]
    ]
  ],
  "get_pk_value_on_save": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "get_pk_value_on_save"
      ]
    ]
  ],
  "validators": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "validators"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DecimalField",
        "validators"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "IntegerField",
        "validators"
      ]
    ]
  ],
  "db_type_parameters": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "db_type_parameters"
      ]
    ]
  ],
  "db_check": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "db_check"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ForeignKey",
        "db_check"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ManyToManyField",
        "db_check"
      ]
    ]
  ],
  "rel_db_type": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "rel_db_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "PositiveIntegerRelDbTypeMixin",
        "rel_db_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "AutoField",
        "rel_db_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "BigAutoField",
        "rel_db_type"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "SmallAutoField",
        "rel_db_type"
      ]
    ]
  ],
  "db_parameters": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "db_parameters"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ForeignKey",
        "db_parameters"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ManyToManyField",
        "db_parameters"
      ]
    ]
  ],
  "db_type_suffix": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "db_type_suffix"
      ]
    ]
  ],
  "unique": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "unique"
      ]
    ]
  ],
  "db_tablespace": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "db_tablespace"
      ]
    ]
  ],
  "db_returning": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "db_returning"
      ]
    ]
  ],
  "get_attname": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "get_attname"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ForeignKey",
        "get_attname"
      ]
    ],
    [
      "tests/foreign_object/models/empty_join.py",
      [
        "CustomForeignObjectRel",
        "get_attname"
      ]
    ]
  ],
  "get_attname_column": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "get_attname_column"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ForeignObject",
        "get_attname_column"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ForeignKey",
        "get_attname_column"
      ]
    ],
    [
      "tests/gis_tests/geoapp/models.py",
      [
        "NonConcreteField",
        "get_attname_column"
      ]
    ]
  ],
  "pre_save": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "pre_save"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DateField",
        "pre_save"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DateTimeField",
        "pre_save"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "TimeField",
        "pre_save"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "FileField",
        "pre_save"
      ]
    ],
    [
      "tests/custom_pk/fields.py",
      [
        "MyAutoField",
        "pre_save"
      ]
    ]
  ],
  "get_db_prep_save": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "get_db_prep_save"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DecimalField",
        "get_db_prep_save"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ForeignKey",
        "get_db_prep_save"
      ]
    ],
    [
      "tests/custom_pk/fields.py",
      [
        "MyAutoField",
        "get_db_prep_save"
      ]
    ],
    [
      "tests/serializers/models/base.py",
      [
        "TeamField",
        "get_db_prep_save"
      ]
    ]
  ],
  "has_default": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "has_default"
      ]
    ]
  ],
  "get_default": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "get_default"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "BinaryField",
        "get_default"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ForeignKey",
        "get_default"
      ]
    ],
    [
      "django/template/engine.py",
      [
        "Engine",
        "get_default"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_add_field_default_transform",
        "TestTransformField",
        "get_default"
      ]
    ]
  ],
  "_get_default": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "_get_default"
      ]
    ]
  ],
  "get_choices": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "get_choices"
      ]
    ],
    [
      "django/db/models/fields/reverse_related.py",
      [
        "ForeignObjectRel",
        "get_choices"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_select.py",
      [
        "SelectTest",
        "test_choices_constructor_generator",
        "get_choices"
      ]
    ]
  ],
  "_get_flatchoices": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "_get_flatchoices"
      ]
    ]
  ],
  "save_form_data": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "save_form_data"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "FileField",
        "save_form_data"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "OneToOneField",
        "save_form_data"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ManyToManyField",
        "save_form_data"
      ]
    ],
    [
      "tests/generic_relations_regress/models.py",
      [
        "SpecialGenericRelation",
        "save_form_data"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "CustomFileField",
        "save_form_data"
      ]
    ]
  ],
  "value_from_object": [
    [
      "django/db/models/fields/__init__.py",
      [
        "Field",
        "value_from_object"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ManyToManyField",
        "value_from_object"
      ]
    ]
  ],
  "_check_max_length_attribute": [
    [
      "django/db/models/fields/__init__.py",
      [
        "CharField",
        "_check_max_length_attribute"
      ]
    ]
  ],
  "_check_mutually_exclusive_options": [
    [
      "django/db/models/fields/__init__.py",
      [
        "DateTimeCheckMixin",
        "_check_mutually_exclusive_options"
      ]
    ]
  ],
  "_check_fix_default_value": [
    [
      "django/db/models/fields/__init__.py",
      [
        "DateTimeCheckMixin",
        "_check_fix_default_value"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DateField",
        "_check_fix_default_value"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "DateTimeField",
        "_check_fix_default_value"
      ]
    ],
    [
      "django/db/models/fields/__init__.py",
      [
        "TimeField",
        "_check_fix_default_value"
      ]
    ]
  ],
  "_check_decimal_places": [
    [
      "django/db/models/fields/__init__.py",
      [
        "DecimalField",
        "_check_decimal_places"
      ]
    ]
  ],
  "_check_max_digits": [
    [
      "django/db/models/fields/__init__.py",
      [
        "DecimalField",
        "_check_max_digits"
      ]
    ]
  ],
  "_check_decimal_places_and_max_digits": [
    [
      "django/db/models/fields/__init__.py",
      [
        "DecimalField",
        "_check_decimal_places_and_max_digits"
      ]
    ]
  ],
  "context": [
    [
      "django/db/models/fields/__init__.py",
      [
        "DecimalField",
        "context"
      ]
    ]
  ],
  "_check_allowing_files_or_folders": [
    [
      "django/db/models/fields/__init__.py",
      [
        "FilePathField",
        "_check_allowing_files_or_folders"
      ]
    ]
  ],
  "_check_max_length_warning": [
    [
      "django/db/models/fields/__init__.py",
      [
        "IntegerField",
        "_check_max_length_warning"
      ]
    ]
  ],
  "_check_blank_and_null_values": [
    [
      "django/db/models/fields/__init__.py",
      [
        "GenericIPAddressField",
        "_check_blank_and_null_values"
      ]
    ]
  ],
  "_check_str_default_value": [
    [
      "django/db/models/fields/__init__.py",
      [
        "BinaryField",
        "_check_str_default_value"
      ]
    ]
  ],
  "_check_primary_key": [
    [
      "django/db/models/fields/__init__.py",
      [
        "AutoFieldMixin",
        "_check_primary_key"
      ]
    ],
    [
      "django/db/models/fields/files.py",
      [
        "FileField",
        "_check_primary_key"
      ]
    ]
  ],
  "_subclasses": [
    [
      "django/db/models/fields/__init__.py",
      [
        "AutoFieldMeta",
        "_subclasses"
      ]
    ],
    [
      "django/db/models/query_utils.py",
      [
        "InvalidQueryType",
        "_subclasses"
      ]
    ]
  ],
  "__instancecheck__": [
    [
      "django/db/models/fields/__init__.py",
      [
        "AutoFieldMeta",
        "__instancecheck__"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "InstanceCheckMeta",
        "__instancecheck__"
      ]
    ],
    [
      "django/db/models/query_utils.py",
      [
        "InvalidQueryType",
        "__instancecheck__"
      ]
    ],
    [
      "django/utils/deprecation.py",
      [
        "DeprecationInstanceCheck",
        "__instancecheck__"
      ]
    ]
  ],
  "__subclasscheck__": [
    [
      "django/db/models/fields/__init__.py",
      [
        "AutoFieldMeta",
        "__subclasscheck__"
      ]
    ],
    [
      "django/db/models/query_utils.py",
      [
        "InvalidQueryType",
        "__subclasscheck__"
      ]
    ]
  ],
  "_require_file": [
    [
      "django/db/models/fields/files.py",
      [
        "FieldFile",
        "_require_file"
      ]
    ]
  ],
  "_get_file": [
    [
      "django/db/models/fields/files.py",
      [
        "FieldFile",
        "_get_file"
      ]
    ],
    [
      "tests/staticfiles_tests/cases.py",
      [
        "CollectionTestCase",
        "_get_file"
      ]
    ],
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestFindStatic",
        "_get_file"
      ]
    ]
  ],
  "_set_file": [
    [
      "django/db/models/fields/files.py",
      [
        "FieldFile",
        "_set_file"
      ]
    ]
  ],
  "_del_file": [
    [
      "django/db/models/fields/files.py",
      [
        "FieldFile",
        "_del_file"
      ]
    ]
  ],
  "_check_upload_to": [
    [
      "django/db/models/fields/files.py",
      [
        "FileField",
        "_check_upload_to"
      ]
    ]
  ],
  "_check_image_library_installed": [
    [
      "django/db/models/fields/files.py",
      [
        "ImageField",
        "_check_image_library_installed"
      ]
    ]
  ],
  "update_dimension_fields": [
    [
      "django/db/models/fields/files.py",
      [
        "ImageField",
        "update_dimension_fields"
      ]
    ]
  ],
  "get_cached_value": [
    [
      "django/db/models/fields/mixins.py",
      [
        "FieldCacheMixin",
        "get_cached_value"
      ]
    ]
  ],
  "is_cached": [
    [
      "django/db/models/fields/mixins.py",
      [
        "FieldCacheMixin",
        "is_cached"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ForwardManyToOneDescriptor",
        "is_cached"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ReverseOneToOneDescriptor",
        "is_cached"
      ]
    ]
  ],
  "set_cached_value": [
    [
      "django/db/models/fields/mixins.py",
      [
        "FieldCacheMixin",
        "set_cached_value"
      ]
    ]
  ],
  "delete_cached_value": [
    [
      "django/db/models/fields/mixins.py",
      [
        "FieldCacheMixin",
        "delete_cached_value"
      ]
    ]
  ],
  "_check_default": [
    [
      "django/db/models/fields/mixins.py",
      [
        "CheckFieldDefaultMixin",
        "_check_default"
      ]
    ]
  ],
  "lazy_related_operation": [
    [
      "django/db/models/fields/related.py",
      [
        "lazy_related_operation"
      ]
    ]
  ],
  "related_model": [
    [
      "django/db/models/fields/related.py",
      [
        "RelatedField",
        "related_model"
      ]
    ],
    [
      "django/db/models/fields/reverse_related.py",
      [
        "ForeignObjectRel",
        "related_model"
      ]
    ]
  ],
  "_check_related_name_is_valid": [
    [
      "django/db/models/fields/related.py",
      [
        "RelatedField",
        "_check_related_name_is_valid"
      ]
    ]
  ],
  "_check_related_query_name_is_valid": [
    [
      "django/db/models/fields/related.py",
      [
        "RelatedField",
        "_check_related_query_name_is_valid"
      ]
    ]
  ],
  "_check_relation_model_exists": [
    [
      "django/db/models/fields/related.py",
      [
        "RelatedField",
        "_check_relation_model_exists"
      ]
    ]
  ],
  "_check_referencing_to_swapped_model": [
    [
      "django/db/models/fields/related.py",
      [
        "RelatedField",
        "_check_referencing_to_swapped_model"
      ]
    ]
  ],
  "_check_clashes": [
    [
      "django/db/models/fields/related.py",
      [
        "RelatedField",
        "_check_clashes"
      ]
    ]
  ],
  "get_reverse_related_filter": [
    [
      "django/db/models/fields/related.py",
      [
        "RelatedField",
        "get_reverse_related_filter"
      ]
    ]
  ],
  "swappable_setting": [
    [
      "django/db/models/fields/related.py",
      [
        "RelatedField",
        "swappable_setting"
      ]
    ]
  ],
  "do_related_class": [
    [
      "django/db/models/fields/related.py",
      [
        "RelatedField",
        "do_related_class"
      ]
    ]
  ],
  "get_limit_choices_to": [
    [
      "django/db/models/fields/related.py",
      [
        "RelatedField",
        "get_limit_choices_to"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "ModelChoiceField",
        "get_limit_choices_to"
      ]
    ]
  ],
  "related_query_name": [
    [
      "django/db/models/fields/related.py",
      [
        "RelatedField",
        "related_query_name"
      ]
    ]
  ],
  "target_field": [
    [
      "django/db/models/fields/related.py",
      [
        "RelatedField",
        "target_field"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ForeignKey",
        "target_field"
      ]
    ],
    [
      "django/db/models/fields/reverse_related.py",
      [
        "ForeignObjectRel",
        "target_field"
      ]
    ]
  ],
  "_check_to_fields_exist": [
    [
      "django/db/models/fields/related.py",
      [
        "ForeignObject",
        "_check_to_fields_exist"
      ]
    ]
  ],
  "_check_unique_target": [
    [
      "django/db/models/fields/related.py",
      [
        "ForeignObject",
        "_check_unique_target"
      ]
    ]
  ],
  "related_fields": [
    [
      "django/db/models/fields/related.py",
      [
        "ForeignObject",
        "related_fields"
      ]
    ]
  ],
  "reverse_related_fields": [
    [
      "django/db/models/fields/related.py",
      [
        "ForeignObject",
        "reverse_related_fields"
      ]
    ]
  ],
  "local_related_fields": [
    [
      "django/db/models/fields/related.py",
      [
        "ForeignObject",
        "local_related_fields"
      ]
    ]
  ],
  "foreign_related_fields": [
    [
      "django/db/models/fields/related.py",
      [
        "ForeignObject",
        "foreign_related_fields"
      ]
    ],
    [
      "tests/foreign_object/models/empty_join.py",
      [
        "CustomForeignObjectRel",
        "foreign_related_fields"
      ]
    ]
  ],
  "get_local_related_value": [
    [
      "django/db/models/fields/related.py",
      [
        "ForeignObject",
        "get_local_related_value"
      ]
    ]
  ],
  "get_foreign_related_value": [
    [
      "django/db/models/fields/related.py",
      [
        "ForeignObject",
        "get_foreign_related_value"
      ]
    ]
  ],
  "get_instance_value_for_fields": [
    [
      "django/db/models/fields/related.py",
      [
        "ForeignObject",
        "get_instance_value_for_fields"
      ]
    ]
  ],
  "get_joining_columns": [
    [
      "django/db/models/fields/related.py",
      [
        "ForeignObject",
        "get_joining_columns"
      ]
    ],
    [
      "django/db/models/fields/reverse_related.py",
      [
        "ForeignObjectRel",
        "get_joining_columns"
      ]
    ],
    [
      "tests/foreign_object/models/empty_join.py",
      [
        "StartsWithRelation",
        "get_joining_columns"
      ]
    ]
  ],
  "get_reverse_joining_columns": [
    [
      "django/db/models/fields/related.py",
      [
        "ForeignObject",
        "get_reverse_joining_columns"
      ]
    ]
  ],
  "get_extra_descriptor_filter": [
    [
      "django/db/models/fields/related.py",
      [
        "ForeignObject",
        "get_extra_descriptor_filter"
      ]
    ],
    [
      "tests/foreign_object/models/article.py",
      [
        "ActiveTranslationField",
        "get_extra_descriptor_filter"
      ]
    ],
    [
      "tests/foreign_object/models/article.py",
      [
        "ActiveTranslationFieldWithQ",
        "get_extra_descriptor_filter"
      ]
    ]
  ],
  "get_lookups": [
    [
      "django/db/models/fields/related.py",
      [
        "ForeignObject",
        "get_lookups"
      ]
    ],
    [
      "django/db/models/query_utils.py",
      [
        "RegisterLookupMixin",
        "get_lookups"
      ]
    ]
  ],
  "contribute_to_related_class": [
    [
      "django/db/models/fields/related.py",
      [
        "ForeignObject",
        "contribute_to_related_class"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ForeignKey",
        "contribute_to_related_class"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ManyToManyField",
        "contribute_to_related_class"
      ]
    ]
  ],
  "_check_on_delete": [
    [
      "django/db/models/fields/related.py",
      [
        "ForeignKey",
        "_check_on_delete"
      ]
    ]
  ],
  "_check_unique": [
    [
      "django/db/models/fields/related.py",
      [
        "ForeignKey",
        "_check_unique"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "OneToOneField",
        "_check_unique"
      ]
    ],
    [
      "django/db/models/fields/related.py",
      [
        "ManyToManyField",
        "_check_unique"
      ]
    ]
  ],
  "convert_empty_strings": [
    [
      "django/db/models/fields/related.py",
      [
        "ForeignKey",
        "convert_empty_strings"
      ]
    ]
  ],
  "set_managed": [
    [
      "django/db/models/fields/related.py",
      [
        "create_many_to_many_intermediary_model",
        "set_managed"
      ]
    ]
  ],
  "create_many_to_many_intermediary_model": [
    [
      "django/db/models/fields/related.py",
      [
        "create_many_to_many_intermediary_model"
      ]
    ]
  ],
  "_check_ignored_options": [
    [
      "django/db/models/fields/related.py",
      [
        "ManyToManyField",
        "_check_ignored_options"
      ]
    ]
  ],
  "_check_relationship_model": [
    [
      "django/db/models/fields/related.py",
      [
        "ManyToManyField",
        "_check_relationship_model"
      ]
    ]
  ],
  "_check_table_uniqueness": [
    [
      "django/db/models/fields/related.py",
      [
        "ManyToManyField",
        "_check_table_uniqueness"
      ]
    ]
  ],
  "_get_path_info": [
    [
      "django/db/models/fields/related.py",
      [
        "ManyToManyField",
        "_get_path_info"
      ]
    ]
  ],
  "_get_m2m_db_table": [
    [
      "django/db/models/fields/related.py",
      [
        "ManyToManyField",
        "_get_m2m_db_table"
      ]
    ]
  ],
  "_get_m2m_attr": [
    [
      "django/db/models/fields/related.py",
      [
        "ManyToManyField",
        "_get_m2m_attr"
      ]
    ]
  ],
  "_get_m2m_reverse_attr": [
    [
      "django/db/models/fields/related.py",
      [
        "ManyToManyField",
        "_get_m2m_reverse_attr"
      ]
    ]
  ],
  "RelatedObjectDoesNotExist": [
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ForwardManyToOneDescriptor",
        "RelatedObjectDoesNotExist"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ReverseOneToOneDescriptor",
        "RelatedObjectDoesNotExist"
      ]
    ]
  ],
  "_get_set_deprecation_msg_params": [
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ReverseManyToOneDescriptor",
        "_get_set_deprecation_msg_params"
      ]
    ],
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ManyToManyDescriptor",
        "_get_set_deprecation_msg_params"
      ]
    ]
  ],
  "create_reverse_many_to_one_manager": [
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_reverse_many_to_one_manager"
      ]
    ]
  ],
  "through": [
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "ManyToManyDescriptor",
        "through"
      ]
    ]
  ],
  "_build_remove_filters": [
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_forward_many_to_many_manager",
        "ManyRelatedManager",
        "_build_remove_filters"
      ]
    ]
  ],
  "_get_target_ids": [
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_forward_many_to_many_manager",
        "ManyRelatedManager",
        "_get_target_ids"
      ]
    ]
  ],
  "_get_missing_target_ids": [
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_forward_many_to_many_manager",
        "ManyRelatedManager",
        "_get_missing_target_ids"
      ]
    ]
  ],
  "_get_add_plan": [
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_forward_many_to_many_manager",
        "ManyRelatedManager",
        "_get_add_plan"
      ]
    ]
  ],
  "_add_items": [
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_forward_many_to_many_manager",
        "ManyRelatedManager",
        "_add_items"
      ]
    ]
  ],
  "_remove_items": [
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_forward_many_to_many_manager",
        "ManyRelatedManager",
        "_remove_items"
      ]
    ]
  ],
  "create_forward_many_to_many_manager": [
    [
      "django/db/models/fields/related_descriptors.py",
      [
        "create_forward_many_to_many_manager"
      ]
    ]
  ],
  "get_normalized_value": [
    [
      "django/db/models/fields/related_lookups.py",
      [
        "get_normalized_value"
      ]
    ]
  ],
  "hidden": [
    [
      "django/db/models/fields/reverse_related.py",
      [
        "ForeignObjectRel",
        "hidden"
      ]
    ]
  ],
  "remote_field": [
    [
      "django/db/models/fields/reverse_related.py",
      [
        "ForeignObjectRel",
        "remote_field"
      ]
    ]
  ],
  "many_to_many": [
    [
      "django/db/models/fields/reverse_related.py",
      [
        "ForeignObjectRel",
        "many_to_many"
      ]
    ],
    [
      "django/db/models/options.py",
      [
        "Options",
        "many_to_many"
      ]
    ]
  ],
  "many_to_one": [
    [
      "django/db/models/fields/reverse_related.py",
      [
        "ForeignObjectRel",
        "many_to_one"
      ]
    ]
  ],
  "one_to_many": [
    [
      "django/db/models/fields/reverse_related.py",
      [
        "ForeignObjectRel",
        "one_to_many"
      ]
    ]
  ],
  "one_to_one": [
    [
      "django/db/models/fields/reverse_related.py",
      [
        "ForeignObjectRel",
        "one_to_one"
      ]
    ]
  ],
  "set_field_name": [
    [
      "django/db/models/fields/reverse_related.py",
      [
        "ForeignObjectRel",
        "set_field_name"
      ]
    ],
    [
      "django/db/models/fields/reverse_related.py",
      [
        "ManyToOneRel",
        "set_field_name"
      ]
    ]
  ],
  "get_accessor_name": [
    [
      "django/db/models/fields/reverse_related.py",
      [
        "ForeignObjectRel",
        "get_accessor_name"
      ]
    ]
  ],
  "get_related_field": [
    [
      "django/db/models/fields/reverse_related.py",
      [
        "ManyToOneRel",
        "get_related_field"
      ]
    ],
    [
      "django/db/models/fields/reverse_related.py",
      [
        "ManyToManyRel",
        "get_related_field"
      ]
    ]
  ],
  "get_tzname": [
    [
      "django/db/models/functions/datetime.py",
      [
        "TimezoneMixin",
        "get_tzname"
      ]
    ]
  ],
  "coalesce": [
    [
      "django/db/models/functions/text.py",
      [
        "ConcatPair",
        "coalesce"
      ]
    ]
  ],
  "_paired": [
    [
      "django/db/models/functions/text.py",
      [
        "Concat",
        "_paired"
      ]
    ]
  ],
  "get_substr": [
    [
      "django/db/models/functions/text.py",
      [
        "Left",
        "get_substr"
      ]
    ],
    [
      "django/db/models/functions/text.py",
      [
        "Right",
        "get_substr"
      ]
    ]
  ],
  "set_name_with_model": [
    [
      "django/db/models/indexes.py",
      [
        "Index",
        "set_name_with_model"
      ]
    ]
  ],
  "apply_bilateral_transforms": [
    [
      "django/db/models/lookups.py",
      [
        "Lookup",
        "apply_bilateral_transforms"
      ]
    ]
  ],
  "batch_process_rhs": [
    [
      "django/db/models/lookups.py",
      [
        "Lookup",
        "batch_process_rhs"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "FieldGetDbPrepValueIterableMixin",
        "batch_process_rhs"
      ]
    ]
  ],
  "rhs_is_direct_value": [
    [
      "django/db/models/lookups.py",
      [
        "Lookup",
        "rhs_is_direct_value"
      ]
    ]
  ],
  "is_summary": [
    [
      "django/db/models/lookups.py",
      [
        "Lookup",
        "is_summary"
      ]
    ],
    [
      "django/db/models/sql/where.py",
      [
        "WhereNode",
        "is_summary"
      ]
    ]
  ],
  "lhs": [
    [
      "django/db/models/lookups.py",
      [
        "Transform",
        "lhs"
      ]
    ]
  ],
  "get_bilateral_transforms": [
    [
      "django/db/models/lookups.py",
      [
        "Transform",
        "get_bilateral_transforms"
      ]
    ]
  ],
  "resolve_expression_parameter": [
    [
      "django/db/models/lookups.py",
      [
        "FieldGetDbPrepValueIterableMixin",
        "resolve_expression_parameter"
      ]
    ]
  ],
  "split_parameter_list_as_sql": [
    [
      "django/db/models/lookups.py",
      [
        "In",
        "split_parameter_list_as_sql"
      ]
    ]
  ],
  "year_lookup_bounds": [
    [
      "django/db/models/lookups.py",
      [
        "YearLookup",
        "year_lookup_bounds"
      ]
    ]
  ],
  "get_direct_rhs_sql": [
    [
      "django/db/models/lookups.py",
      [
        "YearLookup",
        "get_direct_rhs_sql"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "YearExact",
        "get_direct_rhs_sql"
      ]
    ]
  ],
  "get_bound_params": [
    [
      "django/db/models/lookups.py",
      [
        "YearLookup",
        "get_bound_params"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "YearExact",
        "get_bound_params"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "YearGt",
        "get_bound_params"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "YearGte",
        "get_bound_params"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "YearLt",
        "get_bound_params"
      ]
    ],
    [
      "django/db/models/lookups.py",
      [
        "YearLte",
        "get_bound_params"
      ]
    ]
  ],
  "__class_getitem__": [
    [
      "django/db/models/manager.py",
      [
        "BaseManager",
        "__class_getitem__"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "__class_getitem__"
      ]
    ]
  ],
  "_get_queryset_methods": [
    [
      "django/db/models/manager.py",
      [
        "BaseManager",
        "_get_queryset_methods"
      ]
    ]
  ],
  "from_queryset": [
    [
      "django/db/models/manager.py",
      [
        "BaseManager",
        "from_queryset"
      ]
    ]
  ],
  "_set_creation_counter": [
    [
      "django/db/models/manager.py",
      [
        "BaseManager",
        "_set_creation_counter"
      ]
    ]
  ],
  "db_manager": [
    [
      "django/db/models/manager.py",
      [
        "BaseManager",
        "db_manager"
      ]
    ]
  ],
  "db": [
    [
      "django/db/models/manager.py",
      [
        "BaseManager",
        "db"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "db"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "RawQuerySet",
        "db"
      ]
    ]
  ],
  "normalize_together": [
    [
      "django/db/models/options.py",
      [
        "normalize_together"
      ]
    ]
  ],
  "make_immutable_fields_list": [
    [
      "django/db/models/options.py",
      [
        "make_immutable_fields_list"
      ]
    ]
  ],
  "label": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "label"
      ]
    ]
  ],
  "label_lower": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "label_lower"
      ]
    ]
  ],
  "app_config": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "app_config"
      ]
    ]
  ],
  "installed": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "installed"
      ]
    ]
  ],
  "_format_names_with_class": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "_format_names_with_class"
      ]
    ]
  ],
  "add_manager": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "add_manager"
      ]
    ]
  ],
  "setup_pk": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "setup_pk"
      ]
    ]
  ],
  "setup_proxy": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "setup_proxy"
      ]
    ]
  ],
  "can_migrate": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "can_migrate"
      ]
    ]
  ],
  "verbose_name_raw": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "verbose_name_raw"
      ]
    ]
  ],
  "swapped": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "swapped"
      ]
    ]
  ],
  "managers": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "managers"
      ]
    ]
  ],
  "managers_map": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "managers_map"
      ]
    ]
  ],
  "base_manager": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "base_manager"
      ]
    ]
  ],
  "default_manager": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "default_manager"
      ]
    ]
  ],
  "is_not_an_m2m_field": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "fields",
        "is_not_an_m2m_field"
      ]
    ]
  ],
  "is_not_a_generic_relation": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "fields",
        "is_not_a_generic_relation"
      ]
    ]
  ],
  "is_not_a_generic_foreign_key": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "fields",
        "is_not_a_generic_foreign_key"
      ]
    ]
  ],
  "concrete_fields": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "concrete_fields"
      ]
    ]
  ],
  "local_concrete_fields": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "local_concrete_fields"
      ]
    ]
  ],
  "_forward_fields_map": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "_forward_fields_map"
      ]
    ]
  ],
  "fields_map": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "fields_map"
      ]
    ]
  ],
  "get_field": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "get_field"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_remove_constraints_capital_letters",
        "get_field"
      ]
    ]
  ],
  "get_base_chain": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "get_base_chain"
      ]
    ]
  ],
  "get_parent_list": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "get_parent_list"
      ]
    ]
  ],
  "get_ancestor_link": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "get_ancestor_link"
      ]
    ]
  ],
  "get_path_to_parent": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "get_path_to_parent"
      ]
    ]
  ],
  "get_path_from_parent": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "get_path_from_parent"
      ]
    ]
  ],
  "_populate_directed_relation_graph": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "_populate_directed_relation_graph"
      ]
    ]
  ],
  "_relation_tree": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "_relation_tree"
      ]
    ]
  ],
  "_expire_cache": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "_expire_cache"
      ]
    ]
  ],
  "_get_fields": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "_get_fields"
      ]
    ]
  ],
  "total_unique_constraints": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "total_unique_constraints"
      ]
    ]
  ],
  "_property_names": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "_property_names"
      ]
    ]
  ],
  "db_returning_fields": [
    [
      "django/db/models/options.py",
      [
        "Options",
        "db_returning_fields"
      ]
    ]
  ],
  "create_namedtuple_class": [
    [
      "django/db/models/query.py",
      [
        "NamedValuesListIterable",
        "create_namedtuple_class"
      ]
    ]
  ],
  "query": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "query"
      ]
    ]
  ],
  "query_1": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "query_1"
      ]
    ]
  ],
  "as_manager": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "as_manager"
      ]
    ]
  ],
  "_iterator": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "_iterator"
      ]
    ]
  ],
  "iterator": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "iterator"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "RawQuerySet",
        "iterator"
      ]
    ]
  ],
  "aggregate": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "aggregate"
      ]
    ]
  ],
  "_populate_pk_values": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "_populate_pk_values"
      ]
    ]
  ],
  "bulk_create": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "bulk_create"
      ]
    ]
  ],
  "_create_object_from_params": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "_create_object_from_params"
      ]
    ]
  ],
  "_extract_model_params": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "_extract_model_params"
      ]
    ]
  ],
  "_earliest": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "_earliest"
      ]
    ]
  ],
  "earliest": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "earliest"
      ]
    ]
  ],
  "latest": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "latest"
      ]
    ]
  ],
  "first": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "first"
      ]
    ],
    [
      "django/template/defaultfilters.py",
      [
        "first"
      ]
    ]
  ],
  "last": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "last"
      ]
    ],
    [
      "django/template/defaultfilters.py",
      [
        "last"
      ]
    ]
  ],
  "in_bulk": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "in_bulk"
      ]
    ]
  ],
  "_raw_delete": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "_raw_delete"
      ]
    ]
  ],
  "_update": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "_update"
      ]
    ],
    [
      "tests/basic/tests.py",
      [
        "SelectOnSaveTests",
        "test_select_on_save_lying_update",
        "FakeQuerySet",
        "_update"
      ]
    ]
  ],
  "_prefetch_related_objects": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "_prefetch_related_objects"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "RawQuerySet",
        "_prefetch_related_objects"
      ]
    ]
  ],
  "explain": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "explain"
      ]
    ],
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "explain"
      ]
    ]
  ],
  "raw": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "raw"
      ]
    ],
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_raw_lock_not_available",
        "raw"
      ]
    ]
  ],
  "_values": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "_values"
      ]
    ]
  ],
  "values_list": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "values_list"
      ]
    ]
  ],
  "dates": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "dates"
      ]
    ]
  ],
  "datetimes": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "datetimes"
      ]
    ]
  ],
  "none": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "none"
      ]
    ]
  ],
  "filter": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "filter"
      ]
    ],
    [
      "django/template/library.py",
      [
        "Library",
        "filter"
      ]
    ],
    [
      "django/utils/log.py",
      [
        "CallbackFilter",
        "filter"
      ]
    ],
    [
      "django/utils/log.py",
      [
        "RequireDebugFalse",
        "filter"
      ]
    ],
    [
      "django/utils/log.py",
      [
        "RequireDebugTrue",
        "filter"
      ]
    ],
    [
      "tests/custom_managers/models.py",
      [
        "CustomQuerySet",
        "filter"
      ]
    ],
    [
      "tests/custom_managers/models.py",
      [
        "BaseCustomManager",
        "filter"
      ]
    ]
  ],
  "exclude": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "exclude"
      ]
    ]
  ],
  "_filter_or_exclude": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "_filter_or_exclude"
      ]
    ]
  ],
  "_filter_or_exclude_inplace": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "_filter_or_exclude_inplace"
      ]
    ]
  ],
  "complex_filter": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "complex_filter"
      ]
    ]
  ],
  "_combinator_query": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "_combinator_query"
      ]
    ]
  ],
  "select_for_update": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "select_for_update"
      ]
    ]
  ],
  "select_related": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "select_related"
      ]
    ]
  ],
  "prefetch_related": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "prefetch_related"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "RawQuerySet",
        "prefetch_related"
      ]
    ]
  ],
  "annotate": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "annotate"
      ]
    ]
  ],
  "order_by": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "order_by"
      ]
    ]
  ],
  "distinct": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "distinct"
      ]
    ]
  ],
  "extra": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "extra"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "ReportAdmin",
        "extra"
      ]
    ]
  ],
  "defer": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "defer"
      ]
    ]
  ],
  "only": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "only"
      ]
    ]
  ],
  "using": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "using"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "RawQuerySet",
        "using"
      ]
    ]
  ],
  "ordered": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "ordered"
      ]
    ]
  ],
  "_insert": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "_insert"
      ]
    ]
  ],
  "_batched_insert": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "_batched_insert"
      ]
    ]
  ],
  "_chain": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "_chain"
      ]
    ]
  ],
  "_fetch_all": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "_fetch_all"
      ]
    ],
    [
      "django/db/models/query.py",
      [
        "RawQuerySet",
        "_fetch_all"
      ]
    ]
  ],
  "_next_is_sticky": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "_next_is_sticky"
      ]
    ]
  ],
  "_merge_sanity_check": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "_merge_sanity_check"
      ]
    ]
  ],
  "_merge_known_related_objects": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "_merge_known_related_objects"
      ]
    ]
  ],
  "_add_hints": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "_add_hints"
      ]
    ]
  ],
  "_has_filters": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "_has_filters"
      ]
    ]
  ],
  "_validate_values_are_expressions": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "_validate_values_are_expressions"
      ]
    ]
  ],
  "_not_support_combined_queries": [
    [
      "django/db/models/query.py",
      [
        "QuerySet",
        "_not_support_combined_queries"
      ]
    ]
  ],
  "resolve_model_init_order": [
    [
      "django/db/models/query.py",
      [
        "RawQuerySet",
        "resolve_model_init_order"
      ]
    ]
  ],
  "columns": [
    [
      "django/db/models/query.py",
      [
        "RawQuerySet",
        "columns"
      ]
    ]
  ],
  "model_fields": [
    [
      "django/db/models/query.py",
      [
        "RawQuerySet",
        "model_fields"
      ]
    ]
  ],
  "add_prefix": [
    [
      "django/db/models/query.py",
      [
        "Prefetch",
        "add_prefix"
      ]
    ],
    [
      "django/forms/forms.py",
      [
        "BaseForm",
        "add_prefix"
      ]
    ],
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "add_prefix"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_forms_with_prefixes",
        "Person_1",
        "add_prefix"
      ]
    ]
  ],
  "get_current_prefetch_to": [
    [
      "django/db/models/query.py",
      [
        "Prefetch",
        "get_current_prefetch_to"
      ]
    ]
  ],
  "get_current_to_attr": [
    [
      "django/db/models/query.py",
      [
        "Prefetch",
        "get_current_to_attr"
      ]
    ]
  ],
  "get_current_queryset": [
    [
      "django/db/models/query.py",
      [
        "Prefetch",
        "get_current_queryset"
      ]
    ]
  ],
  "normalize_prefetch_lookups": [
    [
      "django/db/models/query.py",
      [
        "normalize_prefetch_lookups"
      ]
    ]
  ],
  "prefetch_related_objects": [
    [
      "django/db/models/query.py",
      [
        "prefetch_related_objects"
      ]
    ]
  ],
  "get_prefetcher": [
    [
      "django/db/models/query.py",
      [
        "get_prefetcher"
      ]
    ]
  ],
  "prefetch_one_level": [
    [
      "django/db/models/query.py",
      [
        "prefetch_one_level"
      ]
    ]
  ],
  "get_related_populators": [
    [
      "django/db/models/query.py",
      [
        "get_related_populators"
      ]
    ]
  ],
  "__warn": [
    [
      "django/db/models/query_utils.py",
      [
        "InvalidQueryType",
        "__warn"
      ]
    ]
  ],
  "subclasses": [
    [
      "django/db/models/query_utils.py",
      [
        "subclasses"
      ]
    ]
  ],
  "_check_parent_chain": [
    [
      "django/db/models/query_utils.py",
      [
        "DeferredAttribute",
        "_check_parent_chain"
      ]
    ]
  ],
  "_get_lookup": [
    [
      "django/db/models/query_utils.py",
      [
        "RegisterLookupMixin",
        "_get_lookup"
      ]
    ]
  ],
  "merge_dicts": [
    [
      "django/db/models/query_utils.py",
      [
        "RegisterLookupMixin",
        "merge_dicts"
      ]
    ]
  ],
  "_clear_cached_lookups": [
    [
      "django/db/models/query_utils.py",
      [
        "RegisterLookupMixin",
        "_clear_cached_lookups"
      ]
    ]
  ],
  "register_lookup": [
    [
      "django/db/models/query_utils.py",
      [
        "RegisterLookupMixin",
        "register_lookup"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "register_lookup"
      ]
    ]
  ],
  "_unregister_lookup": [
    [
      "django/db/models/query_utils.py",
      [
        "RegisterLookupMixin",
        "_unregister_lookup"
      ]
    ]
  ],
  "select_related_descend": [
    [
      "django/db/models/query_utils.py",
      [
        "select_related_descend"
      ]
    ]
  ],
  "refs_expression": [
    [
      "django/db/models/query_utils.py",
      [
        "refs_expression"
      ]
    ]
  ],
  "check_rel_lookup_compatibility": [
    [
      "django/db/models/query_utils.py",
      [
        "check_rel_lookup_compatibility"
      ]
    ]
  ],
  "_lazy_method": [
    [
      "django/db/models/signals.py",
      [
        "ModelSignal",
        "_lazy_method"
      ]
    ]
  ],
  "disconnect": [
    [
      "django/db/models/signals.py",
      [
        "ModelSignal",
        "disconnect"
      ]
    ],
    [
      "django/dispatch/dispatcher.py",
      [
        "Signal",
        "disconnect"
      ]
    ]
  ],
  "setup_query": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "setup_query"
      ]
    ]
  ],
  "pre_sql_setup": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "pre_sql_setup"
      ]
    ],
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLUpdateCompiler",
        "pre_sql_setup"
      ]
    ]
  ],
  "get_group_by": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "get_group_by"
      ]
    ]
  ],
  "collapse_group_by": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "collapse_group_by"
      ]
    ]
  ],
  "get_select": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "get_select"
      ]
    ]
  ],
  "get_order_by": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "get_order_by"
      ]
    ]
  ],
  "get_extra_select": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "get_extra_select"
      ]
    ]
  ],
  "quote_name_unless_alias": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "quote_name_unless_alias"
      ]
    ]
  ],
  "get_combinator_sql": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "get_combinator_sql"
      ]
    ]
  ],
  "get_default_columns": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "get_default_columns"
      ]
    ]
  ],
  "get_distinct": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "get_distinct"
      ]
    ]
  ],
  "find_ordering_name": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "find_ordering_name"
      ]
    ]
  ],
  "_setup_joins": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "_setup_joins"
      ]
    ]
  ],
  "get_from_clause": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "get_from_clause"
      ]
    ]
  ],
  "_get_field_choices": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "get_related_selections",
        "_get_field_choices"
      ]
    ],
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "get_select_for_update_of_arguments",
        "_get_field_choices"
      ]
    ]
  ],
  "get_related_klass_infos": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "get_related_selections",
        "get_related_klass_infos"
      ]
    ]
  ],
  "local_setter": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "get_related_selections",
        "if_restricted_",
        "local_setter"
      ]
    ]
  ],
  "remote_setter": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "get_related_selections",
        "if_restricted_",
        "remote_setter"
      ]
    ]
  ],
  "get_related_selections": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "get_related_selections"
      ]
    ]
  ],
  "_get_parent_klass_info": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "get_select_for_update_of_arguments",
        "_get_parent_klass_info"
      ]
    ]
  ],
  "_get_first_selected_col_from_model": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "get_select_for_update_of_arguments",
        "_get_first_selected_col_from_model"
      ]
    ]
  ],
  "get_select_for_update_of_arguments": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "get_select_for_update_of_arguments"
      ]
    ]
  ],
  "deferred_to_columns": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "deferred_to_columns"
      ]
    ]
  ],
  "get_converters": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "get_converters"
      ]
    ],
    [
      "django/urls/converters.py",
      [
        "get_converters"
      ]
    ]
  ],
  "apply_converters": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "apply_converters"
      ]
    ]
  ],
  "results_iter": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "results_iter"
      ]
    ]
  ],
  "has_results": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "has_results"
      ]
    ],
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "has_results"
      ]
    ]
  ],
  "execute_sql": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "execute_sql"
      ]
    ],
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLInsertCompiler",
        "execute_sql"
      ]
    ],
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLUpdateCompiler",
        "execute_sql"
      ]
    ]
  ],
  "explain_query": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLCompiler",
        "explain_query"
      ]
    ]
  ],
  "field_as_sql": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLInsertCompiler",
        "field_as_sql"
      ]
    ]
  ],
  "pre_save_val": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLInsertCompiler",
        "pre_save_val"
      ]
    ]
  ],
  "assemble_as_sql": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLInsertCompiler",
        "assemble_as_sql"
      ]
    ]
  ],
  "single_alias": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLDeleteCompiler",
        "single_alias"
      ]
    ]
  ],
  "_as_sql": [
    [
      "django/db/models/sql/compiler.py",
      [
        "SQLDeleteCompiler",
        "_as_sql"
      ]
    ]
  ],
  "cursor_iter": [
    [
      "django/db/models/sql/compiler.py",
      [
        "cursor_iter"
      ]
    ]
  ],
  "demote": [
    [
      "django/db/models/sql/datastructures.py",
      [
        "Join",
        "demote"
      ]
    ]
  ],
  "promote": [
    [
      "django/db/models/sql/datastructures.py",
      [
        "Join",
        "promote"
      ]
    ]
  ],
  "get_field_names_from_opts": [
    [
      "django/db/models/sql/query.py",
      [
        "get_field_names_from_opts"
      ]
    ]
  ],
  "get_children_from_q": [
    [
      "django/db/models/sql/query.py",
      [
        "get_children_from_q"
      ]
    ]
  ],
  "chain": [
    [
      "django/db/models/sql/query.py",
      [
        "RawQuery",
        "chain"
      ]
    ],
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "chain"
      ]
    ]
  ],
  "get_columns": [
    [
      "django/db/models/sql/query.py",
      [
        "RawQuery",
        "get_columns"
      ]
    ]
  ],
  "params_type": [
    [
      "django/db/models/sql/query.py",
      [
        "RawQuery",
        "params_type"
      ]
    ]
  ],
  "_execute_query": [
    [
      "django/db/models/sql/query.py",
      [
        "RawQuery",
        "_execute_query"
      ]
    ]
  ],
  "has_select_fields": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "has_select_fields"
      ]
    ]
  ],
  "base_table": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "base_table"
      ]
    ]
  ],
  "sql_with_params": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "sql_with_params"
      ]
    ]
  ],
  "get_compiler": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "get_compiler"
      ]
    ]
  ],
  "_get_col": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "_get_col"
      ]
    ]
  ],
  "rewrite_cols": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "rewrite_cols"
      ]
    ]
  ],
  "get_aggregation": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "get_aggregation"
      ]
    ]
  ],
  "get_count": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "get_count"
      ]
    ]
  ],
  "has_filters": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "has_filters"
      ]
    ]
  ],
  "combine": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "combine"
      ]
    ],
    [
      "django/utils/datetime_safe.py",
      [
        "datetime",
        "combine"
      ]
    ]
  ],
  "deferred_to_data": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "deferred_to_data"
      ]
    ]
  ],
  "table_alias": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "table_alias"
      ]
    ]
  ],
  "ref_alias": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "ref_alias"
      ]
    ]
  ],
  "unref_alias": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "unref_alias"
      ]
    ]
  ],
  "promote_joins": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "promote_joins"
      ]
    ]
  ],
  "demote_joins": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "demote_joins"
      ]
    ]
  ],
  "reset_refcounts": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "reset_refcounts"
      ]
    ]
  ],
  "change_aliases": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "change_aliases"
      ]
    ]
  ],
  "prefix_gen": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "bump_prefix",
        "prefix_gen"
      ]
    ]
  ],
  "bump_prefix": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "bump_prefix"
      ]
    ]
  ],
  "get_initial_alias": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "get_initial_alias"
      ]
    ]
  ],
  "count_active_tables": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "count_active_tables"
      ]
    ]
  ],
  "join": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "join"
      ]
    ],
    [
      "django/template/defaultfilters.py",
      [
        "join"
      ]
    ]
  ],
  "join_parent_model": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "join_parent_model"
      ]
    ]
  ],
  "add_annotation": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "add_annotation"
      ]
    ]
  ],
  "get_external_cols": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "get_external_cols"
      ]
    ]
  ],
  "resolve_lookup_value": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "resolve_lookup_value"
      ]
    ]
  ],
  "solve_lookup_type": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "solve_lookup_type"
      ]
    ]
  ],
  "check_query_object_type": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "check_query_object_type"
      ]
    ]
  ],
  "check_related_objects": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "check_related_objects"
      ]
    ]
  ],
  "check_filterable": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "check_filterable"
      ]
    ]
  ],
  "build_lookup": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "build_lookup"
      ]
    ]
  ],
  "try_transform": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "try_transform"
      ]
    ]
  ],
  "build_filter": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "build_filter"
      ]
    ]
  ],
  "add_filter": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "add_filter"
      ]
    ]
  ],
  "add_q": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "add_q"
      ]
    ]
  ],
  "build_where": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "build_where"
      ]
    ]
  ],
  "_add_q": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "_add_q"
      ]
    ]
  ],
  "build_filtered_relation_q": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "build_filtered_relation_q"
      ]
    ]
  ],
  "add_filtered_relation": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "add_filtered_relation"
      ]
    ]
  ],
  "names_to_path": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "names_to_path"
      ]
    ]
  ],
  "final_transformer": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "setup_joins",
        "final_transformer"
      ]
    ]
  ],
  "setup_joins": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "setup_joins"
      ]
    ]
  ],
  "trim_joins": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "trim_joins"
      ]
    ]
  ],
  "_gen_cols": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "_gen_cols"
      ]
    ]
  ],
  "_gen_col_aliases": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "_gen_col_aliases"
      ]
    ]
  ],
  "resolve_ref": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "resolve_ref"
      ]
    ]
  ],
  "split_exclude": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "split_exclude"
      ]
    ]
  ],
  "set_empty": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "set_empty"
      ]
    ]
  ],
  "set_limits": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "set_limits"
      ]
    ]
  ],
  "clear_limits": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "clear_limits"
      ]
    ]
  ],
  "is_sliced": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "is_sliced"
      ]
    ]
  ],
  "has_limit_one": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "has_limit_one"
      ]
    ]
  ],
  "can_filter": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "can_filter"
      ]
    ]
  ],
  "clear_select_clause": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "clear_select_clause"
      ]
    ]
  ],
  "clear_select_fields": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "clear_select_fields"
      ]
    ]
  ],
  "add_select_col": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "add_select_col"
      ]
    ]
  ],
  "set_select": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "set_select"
      ]
    ]
  ],
  "add_distinct_fields": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "add_distinct_fields"
      ]
    ]
  ],
  "add_fields": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "add_fields"
      ]
    ],
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "add_fields"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "BaseModelFormSet",
        "add_fields"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "BaseInlineFormSet",
        "add_fields"
      ]
    ],
    [
      "tests/model_formsets_regress/tests.py",
      [
        "BaseCustomDeleteFormSet",
        "add_fields"
      ]
    ]
  ],
  "add_ordering": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "add_ordering"
      ]
    ]
  ],
  "clear_ordering": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "clear_ordering"
      ]
    ]
  ],
  "set_group_by": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "set_group_by"
      ]
    ]
  ],
  "add_select_related": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "add_select_related"
      ]
    ]
  ],
  "add_extra": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "add_extra"
      ]
    ]
  ],
  "clear_deferred_loading": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "clear_deferred_loading"
      ]
    ]
  ],
  "add_deferred_loading": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "add_deferred_loading"
      ]
    ]
  ],
  "add_immediate_loading": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "add_immediate_loading"
      ]
    ]
  ],
  "get_loaded_field_names": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "get_loaded_field_names"
      ]
    ]
  ],
  "get_loaded_field_names_cb": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "get_loaded_field_names_cb"
      ]
    ]
  ],
  "set_annotation_mask": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "set_annotation_mask"
      ]
    ]
  ],
  "append_annotation_mask": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "append_annotation_mask"
      ]
    ]
  ],
  "set_extra_mask": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "set_extra_mask"
      ]
    ]
  ],
  "set_values": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "set_values"
      ]
    ]
  ],
  "annotation_select": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "annotation_select"
      ]
    ]
  ],
  "extra_select": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "extra_select"
      ]
    ]
  ],
  "trim_start": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "trim_start"
      ]
    ]
  ],
  "is_nullable": [
    [
      "django/db/models/sql/query.py",
      [
        "Query",
        "is_nullable"
      ]
    ]
  ],
  "get_order_dir": [
    [
      "django/db/models/sql/query.py",
      [
        "get_order_dir"
      ]
    ]
  ],
  "add_to_dict": [
    [
      "django/db/models/sql/query.py",
      [
        "add_to_dict"
      ]
    ]
  ],
  "is_reverse_o2o": [
    [
      "django/db/models/sql/query.py",
      [
        "is_reverse_o2o"
      ]
    ]
  ],
  "add_votes": [
    [
      "django/db/models/sql/query.py",
      [
        "JoinPromoter",
        "add_votes"
      ]
    ]
  ],
  "update_join_types": [
    [
      "django/db/models/sql/query.py",
      [
        "JoinPromoter",
        "update_join_types"
      ]
    ]
  ],
  "do_query": [
    [
      "django/db/models/sql/subqueries.py",
      [
        "DeleteQuery",
        "do_query"
      ]
    ]
  ],
  "delete_batch": [
    [
      "django/db/models/sql/subqueries.py",
      [
        "DeleteQuery",
        "delete_batch"
      ]
    ]
  ],
  "_setup_query": [
    [
      "django/db/models/sql/subqueries.py",
      [
        "UpdateQuery",
        "_setup_query"
      ]
    ]
  ],
  "update_batch": [
    [
      "django/db/models/sql/subqueries.py",
      [
        "UpdateQuery",
        "update_batch"
      ]
    ]
  ],
  "add_update_values": [
    [
      "django/db/models/sql/subqueries.py",
      [
        "UpdateQuery",
        "add_update_values"
      ]
    ]
  ],
  "add_update_fields": [
    [
      "django/db/models/sql/subqueries.py",
      [
        "UpdateQuery",
        "add_update_fields"
      ]
    ]
  ],
  "add_related_update": [
    [
      "django/db/models/sql/subqueries.py",
      [
        "UpdateQuery",
        "add_related_update"
      ]
    ]
  ],
  "get_related_updates": [
    [
      "django/db/models/sql/subqueries.py",
      [
        "UpdateQuery",
        "get_related_updates"
      ]
    ]
  ],
  "insert_values": [
    [
      "django/db/models/sql/subqueries.py",
      [
        "InsertQuery",
        "insert_values"
      ]
    ]
  ],
  "add_subquery": [
    [
      "django/db/models/sql/subqueries.py",
      [
        "AggregateQuery",
        "add_subquery"
      ]
    ]
  ],
  "split_having": [
    [
      "django/db/models/sql/where.py",
      [
        "WhereNode",
        "split_having"
      ]
    ]
  ],
  "relabel_aliases": [
    [
      "django/db/models/sql/where.py",
      [
        "WhereNode",
        "relabel_aliases"
      ]
    ]
  ],
  "_contains_aggregate": [
    [
      "django/db/models/sql/where.py",
      [
        "WhereNode",
        "_contains_aggregate"
      ]
    ]
  ],
  "_contains_over_clause": [
    [
      "django/db/models/sql/where.py",
      [
        "WhereNode",
        "_contains_over_clause"
      ]
    ]
  ],
  "_resolve_leaf": [
    [
      "django/db/models/sql/where.py",
      [
        "WhereNode",
        "_resolve_leaf"
      ]
    ]
  ],
  "_resolve_node": [
    [
      "django/db/models/sql/where.py",
      [
        "WhereNode",
        "_resolve_node"
      ]
    ]
  ],
  "make_model_tuple": [
    [
      "django/db/models/utils.py",
      [
        "make_model_tuple"
      ]
    ]
  ],
  "resolve_callables": [
    [
      "django/db/models/utils.py",
      [
        "resolve_callables"
      ]
    ]
  ],
  "mark_for_rollback_on_error": [
    [
      "django/db/transaction.py",
      [
        "mark_for_rollback_on_error"
      ]
    ]
  ],
  "atomic": [
    [
      "django/db/transaction.py",
      [
        "atomic"
      ]
    ]
  ],
  "_non_atomic_requests": [
    [
      "django/db/transaction.py",
      [
        "_non_atomic_requests"
      ]
    ]
  ],
  "non_atomic_requests": [
    [
      "django/db/transaction.py",
      [
        "non_atomic_requests"
      ]
    ]
  ],
  "databases": [
    [
      "django/db/utils.py",
      [
        "ConnectionHandler",
        "databases"
      ]
    ]
  ],
  "ensure_defaults": [
    [
      "django/db/utils.py",
      [
        "ConnectionHandler",
        "ensure_defaults"
      ]
    ]
  ],
  "prepare_test_settings": [
    [
      "django/db/utils.py",
      [
        "ConnectionHandler",
        "prepare_test_settings"
      ]
    ]
  ],
  "close_all": [
    [
      "django/db/utils.py",
      [
        "ConnectionHandler",
        "close_all"
      ]
    ]
  ],
  "routers": [
    [
      "django/db/utils.py",
      [
        "ConnectionRouter",
        "routers"
      ]
    ]
  ],
  "_router_func": [
    [
      "django/db/utils.py",
      [
        "ConnectionRouter",
        "_router_func"
      ]
    ]
  ],
  "allow_relation": [
    [
      "django/db/utils.py",
      [
        "ConnectionRouter",
        "allow_relation"
      ]
    ],
    [
      "tests/gis_tests/layermap/tests.py",
      [
        "OtherRouter",
        "allow_relation"
      ]
    ],
    [
      "tests/multiple_database/routers.py",
      [
        "TestRouter",
        "allow_relation"
      ]
    ],
    [
      "tests/multiple_database/routers.py",
      [
        "AuthRouter",
        "allow_relation"
      ]
    ],
    [
      "tests/multiple_database/tests.py",
      [
        "NoRelationRouter",
        "allow_relation"
      ]
    ]
  ],
  "allow_migrate": [
    [
      "django/db/utils.py",
      [
        "ConnectionRouter",
        "allow_migrate"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "DBCacheRouter",
        "allow_migrate"
      ]
    ],
    [
      "tests/check_framework/test_multi_db.py",
      [
        "TestRouter",
        "allow_migrate"
      ]
    ],
    [
      "tests/gis_tests/layermap/tests.py",
      [
        "OtherRouter",
        "allow_migrate"
      ]
    ],
    [
      "tests/migrations/routers.py",
      [
        "DefaultOtherRouter",
        "allow_migrate"
      ]
    ],
    [
      "tests/migrations/routers.py",
      [
        "TestRouter",
        "allow_migrate"
      ]
    ],
    [
      "tests/migrations/test_multidb.py",
      [
        "AgnosticRouter",
        "allow_migrate"
      ]
    ],
    [
      "tests/migrations/test_multidb.py",
      [
        "MigrateNothingRouter",
        "allow_migrate"
      ]
    ],
    [
      "tests/migrations/test_multidb.py",
      [
        "MigrateEverythingRouter",
        "allow_migrate"
      ]
    ],
    [
      "tests/migrations/test_multidb.py",
      [
        "MigrateWhenFooRouter",
        "allow_migrate"
      ]
    ],
    [
      "tests/multiple_database/routers.py",
      [
        "TestRouter",
        "allow_migrate"
      ]
    ],
    [
      "tests/multiple_database/routers.py",
      [
        "AuthRouter",
        "allow_migrate"
      ]
    ],
    [
      "tests/multiple_database/tests.py",
      [
        "AntiPetRouter",
        "allow_migrate"
      ]
    ],
    [
      "tests/multiple_database/tests.py",
      [
        "SyncOnlyDefaultDatabaseRouter",
        "allow_migrate"
      ]
    ],
    [
      "tests/postgres_tests/test_operations.py",
      [
        "NoExtensionRouter",
        "allow_migrate"
      ]
    ],
    [
      "tests/sites_tests/tests.py",
      [
        "JustOtherRouter",
        "allow_migrate"
      ]
    ]
  ],
  "_make_id": [
    [
      "django/dispatch/dispatcher.py",
      [
        "_make_id"
      ]
    ]
  ],
  "has_listeners": [
    [
      "django/dispatch/dispatcher.py",
      [
        "Signal",
        "has_listeners"
      ]
    ]
  ],
  "send_robust": [
    [
      "django/dispatch/dispatcher.py",
      [
        "Signal",
        "send_robust"
      ]
    ]
  ],
  "_clear_dead_receivers": [
    [
      "django/dispatch/dispatcher.py",
      [
        "Signal",
        "_clear_dead_receivers"
      ]
    ]
  ],
  "_live_receivers": [
    [
      "django/dispatch/dispatcher.py",
      [
        "Signal",
        "_live_receivers"
      ]
    ]
  ],
  "_remove_receiver": [
    [
      "django/dispatch/dispatcher.py",
      [
        "Signal",
        "_remove_receiver"
      ]
    ]
  ],
  "receiver": [
    [
      "django/dispatch/dispatcher.py",
      [
        "receiver"
      ]
    ],
    [
      "tests/delete/tests.py",
      [
        "DeletionTests",
        "test_only_referenced_fields_selected",
        "receiver"
      ]
    ],
    [
      "tests/settings_tests/tests.py",
      [
        "OverrideSettingsIsolationOnExceptionTests",
        "receiver"
      ]
    ],
    [
      "tests/signals/tests.py",
      [
        "LazyModelRefTests",
        "receiver"
      ]
    ]
  ],
  "subwidgets": [
    [
      "django/forms/boundfield.py",
      [
        "BoundField",
        "subwidgets"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "Widget",
        "subwidgets"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "ChoiceWidget",
        "subwidgets"
      ]
    ]
  ],
  "as_widget": [
    [
      "django/forms/boundfield.py",
      [
        "BoundField",
        "as_widget"
      ]
    ]
  ],
  "as_text": [
    [
      "django/forms/boundfield.py",
      [
        "BoundField",
        "as_text"
      ]
    ],
    [
      "django/forms/utils.py",
      [
        "ErrorDict",
        "as_text"
      ]
    ],
    [
      "django/forms/utils.py",
      [
        "ErrorList",
        "as_text"
      ]
    ]
  ],
  "as_textarea": [
    [
      "django/forms/boundfield.py",
      [
        "BoundField",
        "as_textarea"
      ]
    ]
  ],
  "as_hidden": [
    [
      "django/forms/boundfield.py",
      [
        "BoundField",
        "as_hidden"
      ]
    ]
  ],
  "css_classes": [
    [
      "django/forms/boundfield.py",
      [
        "BoundField",
        "css_classes"
      ]
    ]
  ],
  "auto_id": [
    [
      "django/forms/boundfield.py",
      [
        "BoundField",
        "auto_id"
      ]
    ]
  ],
  "initial": [
    [
      "django/forms/boundfield.py",
      [
        "BoundField",
        "initial"
      ]
    ]
  ],
  "build_widget_attrs": [
    [
      "django/forms/boundfield.py",
      [
        "BoundField",
        "build_widget_attrs"
      ]
    ]
  ],
  "widget_type": [
    [
      "django/forms/boundfield.py",
      [
        "BoundField",
        "widget_type"
      ]
    ]
  ],
  "tag": [
    [
      "django/forms/boundfield.py",
      [
        "BoundWidget",
        "tag"
      ]
    ],
    [
      "django/template/library.py",
      [
        "Library",
        "tag"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "tag"
      ]
    ]
  ],
  "template_name": [
    [
      "django/forms/boundfield.py",
      [
        "BoundWidget",
        "template_name"
      ]
    ],
    [
      "tests/template_tests/test_logging.py",
      [
        "VariableResolveLoggingTests",
        "test_log_on_variable_does_not_exist_silent",
        "TestObject",
        "template_name"
      ]
    ]
  ],
  "choice_label": [
    [
      "django/forms/boundfield.py",
      [
        "BoundWidget",
        "choice_label"
      ]
    ]
  ],
  "get_bound_field": [
    [
      "django/forms/fields.py",
      [
        "Field",
        "get_bound_field"
      ]
    ]
  ],
  "strptime": [
    [
      "django/forms/fields.py",
      [
        "BaseTemporalField",
        "strptime"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "DateField",
        "strptime"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "TimeField",
        "strptime"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "DateTimeField",
        "strptime"
      ]
    ]
  ],
  "_get_regex": [
    [
      "django/forms/fields.py",
      [
        "RegexField",
        "_get_regex"
      ]
    ]
  ],
  "_set_regex": [
    [
      "django/forms/fields.py",
      [
        "RegexField",
        "_set_regex"
      ]
    ]
  ],
  "split_url": [
    [
      "django/forms/fields.py",
      [
        "URLField",
        "to_python",
        "split_url"
      ]
    ]
  ],
  "_get_choices": [
    [
      "django/forms/fields.py",
      [
        "ChoiceField",
        "_get_choices"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "ModelChoiceField",
        "_get_choices"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_multiwidget.py",
      [
        "DeepCopyWidget",
        "_get_choices"
      ]
    ]
  ],
  "_set_choices": [
    [
      "django/forms/fields.py",
      [
        "ChoiceField",
        "_set_choices"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_multiwidget.py",
      [
        "DeepCopyWidget",
        "_set_choices"
      ]
    ]
  ],
  "valid_value": [
    [
      "django/forms/fields.py",
      [
        "ChoiceField",
        "valid_value"
      ]
    ]
  ],
  "_coerce": [
    [
      "django/forms/fields.py",
      [
        "TypedChoiceField",
        "_coerce"
      ]
    ],
    [
      "django/forms/fields.py",
      [
        "TypedMultipleChoiceField",
        "_coerce"
      ]
    ]
  ],
  "order_fields": [
    [
      "django/forms/forms.py",
      [
        "BaseForm",
        "order_fields"
      ]
    ]
  ],
  "add_initial_prefix": [
    [
      "django/forms/forms.py",
      [
        "BaseForm",
        "add_initial_prefix"
      ]
    ]
  ],
  "_html_output": [
    [
      "django/forms/forms.py",
      [
        "BaseForm",
        "_html_output"
      ]
    ]
  ],
  "as_table": [
    [
      "django/forms/forms.py",
      [
        "BaseForm",
        "as_table"
      ]
    ],
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "as_table"
      ]
    ]
  ],
  "as_ul": [
    [
      "django/forms/forms.py",
      [
        "BaseForm",
        "as_ul"
      ]
    ],
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "as_ul"
      ]
    ],
    [
      "django/forms/utils.py",
      [
        "ErrorDict",
        "as_ul"
      ]
    ],
    [
      "django/forms/utils.py",
      [
        "ErrorList",
        "as_ul"
      ]
    ]
  ],
  "as_p": [
    [
      "django/forms/forms.py",
      [
        "BaseForm",
        "as_p"
      ]
    ],
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "as_p"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_field_name_with_hidden_input",
        "SomeForm",
        "as_p"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_field_name_with_hidden_input_and_non_matching_row_ender",
        "SomeForm",
        "as_p"
      ]
    ]
  ],
  "add_error": [
    [
      "django/forms/forms.py",
      [
        "BaseForm",
        "add_error"
      ]
    ]
  ],
  "has_error": [
    [
      "django/forms/forms.py",
      [
        "BaseForm",
        "has_error"
      ]
    ]
  ],
  "_clean_fields": [
    [
      "django/forms/forms.py",
      [
        "BaseForm",
        "_clean_fields"
      ]
    ]
  ],
  "_clean_form": [
    [
      "django/forms/forms.py",
      [
        "BaseForm",
        "_clean_form"
      ]
    ]
  ],
  "is_multipart": [
    [
      "django/forms/forms.py",
      [
        "BaseForm",
        "is_multipart"
      ]
    ],
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "is_multipart"
      ]
    ]
  ],
  "hidden_fields": [
    [
      "django/forms/forms.py",
      [
        "BaseForm",
        "hidden_fields"
      ]
    ]
  ],
  "visible_fields": [
    [
      "django/forms/forms.py",
      [
        "BaseForm",
        "visible_fields"
      ]
    ]
  ],
  "get_initial_for_field": [
    [
      "django/forms/forms.py",
      [
        "BaseForm",
        "get_initial_for_field"
      ]
    ]
  ],
  "management_form": [
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "management_form"
      ]
    ]
  ],
  "total_form_count": [
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "total_form_count"
      ]
    ]
  ],
  "_construct_form": [
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "_construct_form"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "BaseModelFormSet",
        "_construct_form"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "BaseInlineFormSet",
        "_construct_form"
      ]
    ]
  ],
  "initial_forms": [
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "initial_forms"
      ]
    ]
  ],
  "extra_forms": [
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "extra_forms"
      ]
    ]
  ],
  "empty_form": [
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "empty_form"
      ]
    ]
  ],
  "cleaned_data": [
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "cleaned_data"
      ]
    ]
  ],
  "deleted_forms": [
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "deleted_forms"
      ]
    ]
  ],
  "ordered_forms": [
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "ordered_forms"
      ]
    ]
  ],
  "get_ordering_widget": [
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "get_ordering_widget"
      ]
    ]
  ],
  "total_error_count": [
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "total_error_count"
      ]
    ]
  ],
  "_should_delete_form": [
    [
      "django/forms/formsets.py",
      [
        "BaseFormSet",
        "_should_delete_form"
      ]
    ],
    [
      "tests/model_formsets_regress/tests.py",
      [
        "BaseCustomDeleteFormSet",
        "_should_delete_form"
      ]
    ]
  ],
  "formset_factory": [
    [
      "django/forms/formsets.py",
      [
        "formset_factory"
      ]
    ]
  ],
  "all_valid": [
    [
      "django/forms/formsets.py",
      [
        "all_valid"
      ]
    ]
  ],
  "construct_instance": [
    [
      "django/forms/models.py",
      [
        "construct_instance"
      ]
    ]
  ],
  "model_to_dict": [
    [
      "django/forms/models.py",
      [
        "model_to_dict"
      ]
    ]
  ],
  "apply_limit_choices_to_to_formfield": [
    [
      "django/forms/models.py",
      [
        "apply_limit_choices_to_to_formfield"
      ]
    ]
  ],
  "fields_for_model": [
    [
      "django/forms/models.py",
      [
        "fields_for_model"
      ]
    ]
  ],
  "_get_validation_exclusions": [
    [
      "django/forms/models.py",
      [
        "BaseModelForm",
        "_get_validation_exclusions"
      ]
    ]
  ],
  "_update_errors": [
    [
      "django/forms/models.py",
      [
        "BaseModelForm",
        "_update_errors"
      ]
    ]
  ],
  "_save_m2m": [
    [
      "django/forms/models.py",
      [
        "BaseModelForm",
        "_save_m2m"
      ]
    ]
  ],
  "modelform_factory": [
    [
      "django/forms/models.py",
      [
        "modelform_factory"
      ]
    ]
  ],
  "_existing_object": [
    [
      "django/forms/models.py",
      [
        "BaseModelFormSet",
        "_existing_object"
      ]
    ]
  ],
  "_get_to_python": [
    [
      "django/forms/models.py",
      [
        "BaseModelFormSet",
        "_get_to_python"
      ]
    ]
  ],
  "save_existing": [
    [
      "django/forms/models.py",
      [
        "BaseModelFormSet",
        "save_existing"
      ]
    ]
  ],
  "delete_existing": [
    [
      "django/forms/models.py",
      [
        "BaseModelFormSet",
        "delete_existing"
      ]
    ]
  ],
  "get_unique_error_message": [
    [
      "django/forms/models.py",
      [
        "BaseModelFormSet",
        "get_unique_error_message"
      ]
    ],
    [
      "django/forms/models.py",
      [
        "BaseInlineFormSet",
        "get_unique_error_message"
      ]
    ]
  ],
  "get_date_error_message": [
    [
      "django/forms/models.py",
      [
        "BaseModelFormSet",
        "get_date_error_message"
      ]
    ]
  ],
  "get_form_error": [
    [
      "django/forms/models.py",
      [
        "BaseModelFormSet",
        "get_form_error"
      ]
    ]
  ],
  "save_existing_objects": [
    [
      "django/forms/models.py",
      [
        "BaseModelFormSet",
        "save_existing_objects"
      ]
    ]
  ],
  "save_new_objects": [
    [
      "django/forms/models.py",
      [
        "BaseModelFormSet",
        "save_new_objects"
      ]
    ]
  ],
  "pk_is_not_editable": [
    [
      "django/forms/models.py",
      [
        "BaseModelFormSet",
        "add_fields",
        "pk_is_not_editable"
      ]
    ]
  ],
  "modelformset_factory": [
    [
      "django/forms/models.py",
      [
        "modelformset_factory"
      ]
    ]
  ],
  "_get_foreign_key": [
    [
      "django/forms/models.py",
      [
        "_get_foreign_key"
      ]
    ]
  ],
  "inlineformset_factory": [
    [
      "django/forms/models.py",
      [
        "inlineformset_factory"
      ]
    ]
  ],
  "choice": [
    [
      "django/forms/models.py",
      [
        "ModelChoiceIterator",
        "choice"
      ]
    ],
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_custom_choice_iterator_passes_model_to_widget",
        "CustomModelChoiceIterator",
        "choice"
      ]
    ]
  ],
  "_get_queryset": [
    [
      "django/forms/models.py",
      [
        "ModelChoiceField",
        "_get_queryset"
      ]
    ],
    [
      "django/shortcuts.py",
      [
        "_get_queryset"
      ]
    ]
  ],
  "_set_queryset": [
    [
      "django/forms/models.py",
      [
        "ModelChoiceField",
        "_set_queryset"
      ]
    ]
  ],
  "label_from_instance": [
    [
      "django/forms/models.py",
      [
        "ModelChoiceField",
        "label_from_instance"
      ]
    ]
  ],
  "_check_values": [
    [
      "django/forms/models.py",
      [
        "ModelMultipleChoiceField",
        "_check_values"
      ]
    ]
  ],
  "modelform_defines_fields": [
    [
      "django/forms/models.py",
      [
        "modelform_defines_fields"
      ]
    ]
  ],
  "get_default_renderer": [
    [
      "django/forms/renderers.py",
      [
        "get_default_renderer"
      ]
    ]
  ],
  "get_template": [
    [
      "django/forms/renderers.py",
      [
        "BaseRenderer",
        "get_template"
      ]
    ],
    [
      "django/forms/renderers.py",
      [
        "EngineMixin",
        "get_template"
      ]
    ],
    [
      "django/forms/renderers.py",
      [
        "TemplatesSetting",
        "get_template"
      ]
    ],
    [
      "django/template/backends/base.py",
      [
        "BaseEngine",
        "get_template"
      ]
    ],
    [
      "django/template/backends/django.py",
      [
        "DjangoTemplates",
        "get_template"
      ]
    ],
    [
      "django/template/backends/dummy.py",
      [
        "TemplateStrings",
        "get_template"
      ]
    ],
    [
      "django/template/backends/jinja2.py",
      [
        "Jinja2",
        "get_template"
      ]
    ],
    [
      "django/template/engine.py",
      [
        "Engine",
        "get_template"
      ]
    ],
    [
      "django/template/loader.py",
      [
        "get_template"
      ]
    ],
    [
      "django/template/loaders/base.py",
      [
        "Loader",
        "get_template"
      ]
    ],
    [
      "django/template/loaders/cached.py",
      [
        "Loader",
        "get_template"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "TranslationBlockTranslateTagTests",
        "get_template"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "MultipleLocaleActivationBlockTranslateTests",
        "get_template"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "MiscTests",
        "get_template"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/i18n/test_translate.py",
      [
        "TranslationTransTagTests",
        "get_template"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/i18n/test_translate.py",
      [
        "MultipleLocaleActivationTransTagTests",
        "get_template"
      ]
    ]
  ],
  "engine": [
    [
      "django/forms/renderers.py",
      [
        "EngineMixin",
        "engine"
      ]
    ]
  ],
  "flatatt": [
    [
      "django/forms/utils.py",
      [
        "flatatt"
      ]
    ]
  ],
  "as_data": [
    [
      "django/forms/utils.py",
      [
        "ErrorDict",
        "as_data"
      ]
    ],
    [
      "django/forms/utils.py",
      [
        "ErrorList",
        "as_data"
      ]
    ]
  ],
  "get_json_data": [
    [
      "django/forms/utils.py",
      [
        "ErrorDict",
        "get_json_data"
      ]
    ],
    [
      "django/forms/utils.py",
      [
        "ErrorList",
        "get_json_data"
      ]
    ]
  ],
  "as_json": [
    [
      "django/forms/utils.py",
      [
        "ErrorDict",
        "as_json"
      ]
    ],
    [
      "django/forms/utils.py",
      [
        "ErrorList",
        "as_json"
      ]
    ]
  ],
  "__reduce_ex__": [
    [
      "django/forms/utils.py",
      [
        "ErrorList",
        "__reduce_ex__"
      ]
    ],
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "Baz",
        "__reduce_ex__"
      ]
    ]
  ],
  "from_current_timezone": [
    [
      "django/forms/utils.py",
      [
        "from_current_timezone"
      ]
    ]
  ],
  "to_current_timezone": [
    [
      "django/forms/utils.py",
      [
        "to_current_timezone"
      ]
    ]
  ],
  "_css": [
    [
      "django/forms/widgets.py",
      [
        "Media",
        "_css"
      ]
    ]
  ],
  "_js": [
    [
      "django/forms/widgets.py",
      [
        "Media",
        "_js"
      ]
    ]
  ],
  "render_js": [
    [
      "django/forms/widgets.py",
      [
        "Media",
        "render_js"
      ]
    ]
  ],
  "render_css": [
    [
      "django/forms/widgets.py",
      [
        "Media",
        "render_css"
      ]
    ]
  ],
  "absolute_path": [
    [
      "django/forms/widgets.py",
      [
        "Media",
        "absolute_path"
      ]
    ]
  ],
  "merge": [
    [
      "django/forms/widgets.py",
      [
        "Media",
        "merge"
      ]
    ],
    [
      "django/utils/translation/trans_real.py",
      [
        "DjangoTranslation",
        "merge"
      ]
    ]
  ],
  "media_property": [
    [
      "django/forms/widgets.py",
      [
        "media_property"
      ]
    ]
  ],
  "_render": [
    [
      "django/forms/widgets.py",
      [
        "Widget",
        "_render"
      ]
    ],
    [
      "django/template/base.py",
      [
        "Template",
        "_render"
      ]
    ]
  ],
  "use_required_attribute": [
    [
      "django/forms/widgets.py",
      [
        "Widget",
        "use_required_attribute"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "FileInput",
        "use_required_attribute"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "Select",
        "use_required_attribute"
      ]
    ],
    [
      "django/forms/widgets.py",
      [
        "CheckboxSelectMultiple",
        "use_required_attribute"
      ]
    ]
  ],
  "clear_checkbox_name": [
    [
      "django/forms/widgets.py",
      [
        "ClearableFileInput",
        "clear_checkbox_name"
      ]
    ]
  ],
  "clear_checkbox_id": [
    [
      "django/forms/widgets.py",
      [
        "ClearableFileInput",
        "clear_checkbox_id"
      ]
    ]
  ],
  "is_initial": [
    [
      "django/forms/widgets.py",
      [
        "ClearableFileInput",
        "is_initial"
      ]
    ]
  ],
  "boolean_check": [
    [
      "django/forms/widgets.py",
      [
        "boolean_check"
      ]
    ]
  ],
  "options": [
    [
      "django/forms/widgets.py",
      [
        "ChoiceWidget",
        "options"
      ]
    ],
    [
      "django/test/client.py",
      [
        "RequestFactory",
        "options"
      ]
    ],
    [
      "django/test/client.py",
      [
        "Client",
        "options"
      ]
    ],
    [
      "django/views/generic/base.py",
      [
        "View",
        "options"
      ]
    ],
    [
      "django/views/generic/base.py",
      [
        "RedirectView",
        "options"
      ]
    ]
  ],
  "create_option": [
    [
      "django/forms/widgets.py",
      [
        "ChoiceWidget",
        "create_option"
      ]
    ],
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_custom_choice_iterator_passes_model_to_widget",
        "CustomCheckboxSelectMultiple",
        "create_option"
      ]
    ]
  ],
  "_choice_has_empty_value": [
    [
      "django/forms/widgets.py",
      [
        "Select",
        "_choice_has_empty_value"
      ]
    ]
  ],
  "_get_media": [
    [
      "django/forms/widgets.py",
      [
        "MultiWidget",
        "_get_media"
      ]
    ]
  ],
  "_parse_date_fmt": [
    [
      "django/forms/widgets.py",
      [
        "SelectDateWidget",
        "_parse_date_fmt"
      ]
    ]
  ],
  "parse_cookie": [
    [
      "django/http/cookie.py",
      [
        "parse_cookie"
      ]
    ]
  ],
  "parse": [
    [
      "django/http/multipartparser.py",
      [
        "MultiPartParser",
        "parse"
      ]
    ],
    [
      "django/template/base.py",
      [
        "Parser",
        "parse"
      ]
    ],
    [
      "django/template/smartif.py",
      [
        "IfParser",
        "parse"
      ]
    ]
  ],
  "handle_file_complete": [
    [
      "django/http/multipartparser.py",
      [
        "MultiPartParser",
        "handle_file_complete"
      ]
    ]
  ],
  "IE_sanitize": [
    [
      "django/http/multipartparser.py",
      [
        "MultiPartParser",
        "IE_sanitize"
      ]
    ]
  ],
  "_close_files": [
    [
      "django/http/multipartparser.py",
      [
        "MultiPartParser",
        "_close_files"
      ]
    ]
  ],
  "tell": [
    [
      "django/http/multipartparser.py",
      [
        "LazyStream",
        "tell"
      ]
    ],
    [
      "django/http/response.py",
      [
        "HttpResponseBase",
        "tell"
      ]
    ],
    [
      "django/http/response.py",
      [
        "HttpResponse",
        "tell"
      ]
    ]
  ],
  "unget": [
    [
      "django/http/multipartparser.py",
      [
        "LazyStream",
        "unget"
      ]
    ]
  ],
  "_update_unget_history": [
    [
      "django/http/multipartparser.py",
      [
        "LazyStream",
        "_update_unget_history"
      ]
    ]
  ],
  "_find_boundary": [
    [
      "django/http/multipartparser.py",
      [
        "BoundaryIter",
        "_find_boundary"
      ]
    ]
  ],
  "exhaust": [
    [
      "django/http/multipartparser.py",
      [
        "exhaust"
      ]
    ]
  ],
  "_parse_header": [
    [
      "django/http/multipartparser.py",
      [
        "parse_boundary_stream",
        "_parse_header"
      ]
    ]
  ],
  "parse_boundary_stream": [
    [
      "django/http/multipartparser.py",
      [
        "parse_boundary_stream"
      ]
    ]
  ],
  "parse_header": [
    [
      "django/http/multipartparser.py",
      [
        "parse_header"
      ]
    ]
  ],
  "_parse_header_params": [
    [
      "django/http/multipartparser.py",
      [
        "_parse_header_params"
      ]
    ]
  ],
  "headers": [
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "headers"
      ]
    ]
  ],
  "accepted_types": [
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "accepted_types"
      ]
    ]
  ],
  "accepts": [
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "accepts"
      ]
    ]
  ],
  "_set_content_type_params": [
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "_set_content_type_params"
      ]
    ]
  ],
  "_get_raw_host": [
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "_get_raw_host"
      ]
    ]
  ],
  "get_host": [
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "get_host"
      ]
    ]
  ],
  "get_port": [
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "get_port"
      ]
    ]
  ],
  "get_full_path": [
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "get_full_path"
      ]
    ]
  ],
  "get_full_path_info": [
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "get_full_path_info"
      ]
    ]
  ],
  "_get_full_path": [
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "_get_full_path"
      ]
    ]
  ],
  "get_signed_cookie": [
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "get_signed_cookie"
      ]
    ]
  ],
  "get_raw_uri": [
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "get_raw_uri"
      ]
    ]
  ],
  "build_absolute_uri": [
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "build_absolute_uri"
      ]
    ]
  ],
  "_current_scheme_host": [
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "_current_scheme_host"
      ]
    ]
  ],
  "scheme": [
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "scheme"
      ]
    ]
  ],
  "is_secure": [
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "is_secure"
      ]
    ],
    [
      "tests/csrf_tests/tests.py",
      [
        "TestingHttpRequest",
        "is_secure"
      ]
    ]
  ],
  "is_ajax": [
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "is_ajax"
      ]
    ]
  ],
  "encoding_20": [
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "encoding_20"
      ]
    ]
  ],
  "_initialize_handlers": [
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "_initialize_handlers"
      ]
    ]
  ],
  "upload_handlers": [
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "upload_handlers"
      ]
    ]
  ],
  "upload_handlers_23": [
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "upload_handlers_23"
      ]
    ]
  ],
  "parse_file_upload": [
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "parse_file_upload"
      ]
    ]
  ],
  "body": [
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "body"
      ]
    ],
    [
      "tests/test_client_regress/views.py",
      [
        "body"
      ]
    ]
  ],
  "_mark_post_parse_error": [
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "_mark_post_parse_error"
      ]
    ]
  ],
  "_load_post_and_files": [
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "_load_post_and_files"
      ]
    ],
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "test_post_data_read_failure",
        "CsrfPostRequest",
        "_load_post_and_files"
      ]
    ]
  ],
  "readlines": [
    [
      "django/http/request.py",
      [
        "HttpRequest",
        "readlines"
      ]
    ]
  ],
  "parse_header_name": [
    [
      "django/http/request.py",
      [
        "HttpHeaders",
        "parse_header_name"
      ]
    ]
  ],
  "fromkeys": [
    [
      "django/http/request.py",
      [
        "QueryDict",
        "fromkeys"
      ]
    ]
  ],
  "encoding_2": [
    [
      "django/http/request.py",
      [
        "QueryDict",
        "encoding_2"
      ]
    ]
  ],
  "_assert_mutable": [
    [
      "django/http/request.py",
      [
        "QueryDict",
        "_assert_mutable"
      ]
    ]
  ],
  "setlist": [
    [
      "django/http/request.py",
      [
        "QueryDict",
        "setlist"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "MultiValueDict",
        "setlist"
      ]
    ]
  ],
  "setlistdefault": [
    [
      "django/http/request.py",
      [
        "QueryDict",
        "setlistdefault"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "MultiValueDict",
        "setlistdefault"
      ]
    ]
  ],
  "appendlist": [
    [
      "django/http/request.py",
      [
        "QueryDict",
        "appendlist"
      ]
    ],
    [
      "django/utils/datastructures.py",
      [
        "MultiValueDict",
        "appendlist"
      ]
    ]
  ],
  "popitem": [
    [
      "django/http/request.py",
      [
        "QueryDict",
        "popitem"
      ]
    ]
  ],
  "urlencode": [
    [
      "django/http/request.py",
      [
        "QueryDict",
        "urlencode"
      ]
    ],
    [
      "django/template/defaultfilters.py",
      [
        "urlencode"
      ]
    ],
    [
      "django/utils/http.py",
      [
        "urlencode"
      ]
    ]
  ],
  "is_all_types": [
    [
      "django/http/request.py",
      [
        "MediaType",
        "is_all_types"
      ]
    ]
  ],
  "match": [
    [
      "django/http/request.py",
      [
        "MediaType",
        "match"
      ]
    ],
    [
      "django/urls/resolvers.py",
      [
        "RegexPattern",
        "match"
      ]
    ],
    [
      "django/urls/resolvers.py",
      [
        "RoutePattern",
        "match"
      ]
    ],
    [
      "django/urls/resolvers.py",
      [
        "LocalePrefixPattern",
        "match"
      ]
    ]
  ],
  "bytes_to_text": [
    [
      "django/http/request.py",
      [
        "bytes_to_text"
      ]
    ]
  ],
  "split_domain_port": [
    [
      "django/http/request.py",
      [
        "split_domain_port"
      ]
    ]
  ],
  "validate_host": [
    [
      "django/http/request.py",
      [
        "validate_host"
      ]
    ]
  ],
  "parse_accept_header": [
    [
      "django/http/request.py",
      [
        "parse_accept_header"
      ]
    ]
  ],
  "reason_phrase": [
    [
      "django/http/response.py",
      [
        "HttpResponseBase",
        "reason_phrase"
      ]
    ]
  ],
  "reason_phrase_1": [
    [
      "django/http/response.py",
      [
        "HttpResponseBase",
        "reason_phrase_1"
      ]
    ]
  ],
  "charset": [
    [
      "django/http/response.py",
      [
        "HttpResponseBase",
        "charset"
      ]
    ]
  ],
  "charset_3": [
    [
      "django/http/response.py",
      [
        "HttpResponseBase",
        "charset_3"
      ]
    ]
  ],
  "serialize_headers": [
    [
      "django/http/response.py",
      [
        "HttpResponseBase",
        "serialize_headers"
      ]
    ]
  ],
  "_content_type_for_repr": [
    [
      "django/http/response.py",
      [
        "HttpResponseBase",
        "_content_type_for_repr"
      ]
    ]
  ],
  "_convert_to_charset": [
    [
      "django/http/response.py",
      [
        "HttpResponseBase",
        "_convert_to_charset"
      ]
    ]
  ],
  "has_header": [
    [
      "django/http/response.py",
      [
        "HttpResponseBase",
        "has_header"
      ]
    ]
  ],
  "set_cookie": [
    [
      "django/http/response.py",
      [
        "HttpResponseBase",
        "set_cookie"
      ]
    ]
  ],
  "set_signed_cookie": [
    [
      "django/http/response.py",
      [
        "HttpResponseBase",
        "set_signed_cookie"
      ]
    ]
  ],
  "delete_cookie": [
    [
      "django/http/response.py",
      [
        "HttpResponseBase",
        "delete_cookie"
      ]
    ]
  ],
  "make_bytes": [
    [
      "django/http/response.py",
      [
        "HttpResponseBase",
        "make_bytes"
      ]
    ]
  ],
  "writelines": [
    [
      "django/http/response.py",
      [
        "HttpResponseBase",
        "writelines"
      ]
    ],
    [
      "django/http/response.py",
      [
        "HttpResponse",
        "writelines"
      ]
    ]
  ],
  "content": [
    [
      "django/http/response.py",
      [
        "HttpResponse",
        "content"
      ]
    ],
    [
      "django/http/response.py",
      [
        "StreamingHttpResponse",
        "content"
      ]
    ],
    [
      "django/http/response.py",
      [
        "HttpResponseNotModified",
        "content"
      ]
    ],
    [
      "django/template/response.py",
      [
        "SimpleTemplateResponse",
        "content"
      ]
    ]
  ],
  "content_3": [
    [
      "django/http/response.py",
      [
        "HttpResponse",
        "content_3"
      ]
    ]
  ],
  "streaming_content": [
    [
      "django/http/response.py",
      [
        "StreamingHttpResponse",
        "streaming_content"
      ]
    ]
  ],
  "streaming_content_2": [
    [
      "django/http/response.py",
      [
        "StreamingHttpResponse",
        "streaming_content_2"
      ]
    ]
  ],
  "_set_streaming_content": [
    [
      "django/http/response.py",
      [
        "StreamingHttpResponse",
        "_set_streaming_content"
      ]
    ],
    [
      "django/http/response.py",
      [
        "FileResponse",
        "_set_streaming_content"
      ]
    ]
  ],
  "set_headers": [
    [
      "django/http/response.py",
      [
        "FileResponse",
        "set_headers"
      ]
    ]
  ],
  "_should_update_cache": [
    [
      "django/middleware/cache.py",
      [
        "UpdateCacheMiddleware",
        "_should_update_cache"
      ]
    ]
  ],
  "get_xframe_options_value": [
    [
      "django/middleware/clickjacking.py",
      [
        "XFrameOptionsMiddleware",
        "get_xframe_options_value"
      ]
    ],
    [
      "tests/middleware/tests.py",
      [
        "XFrameOptionsMiddlewareTest",
        "test_is_extendable",
        "OtherXFrameOptionsMiddleware",
        "get_xframe_options_value"
      ]
    ]
  ],
  "should_redirect_with_slash": [
    [
      "django/middleware/common.py",
      [
        "CommonMiddleware",
        "should_redirect_with_slash"
      ]
    ]
  ],
  "get_full_path_with_slash": [
    [
      "django/middleware/common.py",
      [
        "CommonMiddleware",
        "get_full_path_with_slash"
      ]
    ]
  ],
  "is_internal_request": [
    [
      "django/middleware/common.py",
      [
        "BrokenLinkEmailsMiddleware",
        "is_internal_request"
      ]
    ]
  ],
  "is_ignorable_request": [
    [
      "django/middleware/common.py",
      [
        "BrokenLinkEmailsMiddleware",
        "is_ignorable_request"
      ]
    ]
  ],
  "_get_failure_view": [
    [
      "django/middleware/csrf.py",
      [
        "_get_failure_view"
      ]
    ]
  ],
  "_get_new_csrf_string": [
    [
      "django/middleware/csrf.py",
      [
        "_get_new_csrf_string"
      ]
    ]
  ],
  "_mask_cipher_secret": [
    [
      "django/middleware/csrf.py",
      [
        "_mask_cipher_secret"
      ]
    ]
  ],
  "_unmask_cipher_token": [
    [
      "django/middleware/csrf.py",
      [
        "_unmask_cipher_token"
      ]
    ]
  ],
  "_get_new_csrf_token": [
    [
      "django/middleware/csrf.py",
      [
        "_get_new_csrf_token"
      ]
    ]
  ],
  "get_token": [
    [
      "django/middleware/csrf.py",
      [
        "get_token"
      ]
    ]
  ],
  "rotate_token": [
    [
      "django/middleware/csrf.py",
      [
        "rotate_token"
      ]
    ]
  ],
  "_sanitize_token": [
    [
      "django/middleware/csrf.py",
      [
        "_sanitize_token"
      ]
    ]
  ],
  "_compare_masked_tokens": [
    [
      "django/middleware/csrf.py",
      [
        "_compare_masked_tokens"
      ]
    ]
  ],
  "_accept": [
    [
      "django/middleware/csrf.py",
      [
        "CsrfViewMiddleware",
        "_accept"
      ]
    ]
  ],
  "_reject": [
    [
      "django/middleware/csrf.py",
      [
        "CsrfViewMiddleware",
        "_reject"
      ]
    ],
    [
      "django/views/decorators/csrf.py",
      [
        "_EnsureCsrfToken",
        "_reject"
      ]
    ],
    [
      "django/views/decorators/csrf.py",
      [
        "_EnsureCsrfCookie",
        "_reject"
      ]
    ]
  ],
  "_get_token": [
    [
      "django/middleware/csrf.py",
      [
        "CsrfViewMiddleware",
        "_get_token"
      ]
    ]
  ],
  "_set_token": [
    [
      "django/middleware/csrf.py",
      [
        "CsrfViewMiddleware",
        "_set_token"
      ]
    ]
  ],
  "needs_etag": [
    [
      "django/middleware/http.py",
      [
        "ConditionalGetMiddleware",
        "needs_etag"
      ]
    ]
  ],
  "redirect": [
    [
      "django/shortcuts.py",
      [
        "redirect"
      ]
    ],
    [
      "tests/logging_tests/views.py",
      [
        "redirect"
      ]
    ]
  ],
  "get_object_or_404": [
    [
      "django/shortcuts.py",
      [
        "get_object_or_404"
      ]
    ]
  ],
  "get_list_or_404": [
    [
      "django/shortcuts.py",
      [
        "get_list_or_404"
      ]
    ]
  ],
  "resolve_url": [
    [
      "django/shortcuts.py",
      [
        "resolve_url"
      ]
    ]
  ],
  "app_dirname": [
    [
      "django/template/backends/base.py",
      [
        "BaseEngine",
        "app_dirname"
      ]
    ]
  ],
  "from_string": [
    [
      "django/template/backends/base.py",
      [
        "BaseEngine",
        "from_string"
      ]
    ],
    [
      "django/template/backends/django.py",
      [
        "DjangoTemplates",
        "from_string"
      ]
    ],
    [
      "django/template/backends/dummy.py",
      [
        "TemplateStrings",
        "from_string"
      ]
    ],
    [
      "django/template/backends/jinja2.py",
      [
        "Jinja2",
        "from_string"
      ]
    ],
    [
      "django/template/engine.py",
      [
        "Engine",
        "from_string"
      ]
    ]
  ],
  "template_dirs": [
    [
      "django/template/backends/base.py",
      [
        "BaseEngine",
        "template_dirs"
      ]
    ]
  ],
  "iter_template_filenames": [
    [
      "django/template/backends/base.py",
      [
        "BaseEngine",
        "iter_template_filenames"
      ]
    ]
  ],
  "get_templatetag_libraries": [
    [
      "django/template/backends/django.py",
      [
        "DjangoTemplates",
        "get_templatetag_libraries"
      ]
    ]
  ],
  "copy_exception": [
    [
      "django/template/backends/django.py",
      [
        "copy_exception"
      ]
    ]
  ],
  "reraise": [
    [
      "django/template/backends/django.py",
      [
        "reraise"
      ]
    ]
  ],
  "get_installed_libraries": [
    [
      "django/template/backends/django.py",
      [
        "get_installed_libraries"
      ]
    ]
  ],
  "get_package_libraries": [
    [
      "django/template/backends/django.py",
      [
        "get_package_libraries"
      ]
    ]
  ],
  "template_context_processors": [
    [
      "django/template/backends/jinja2.py",
      [
        "Jinja2",
        "template_context_processors"
      ]
    ],
    [
      "django/template/engine.py",
      [
        "Engine",
        "template_context_processors"
      ]
    ]
  ],
  "get_exception_info": [
    [
      "django/template/backends/jinja2.py",
      [
        "get_exception_info"
      ]
    ],
    [
      "django/template/base.py",
      [
        "Template",
        "get_exception_info"
      ]
    ]
  ],
  "csrf_input": [
    [
      "django/template/backends/utils.py",
      [
        "csrf_input"
      ]
    ]
  ],
  "loader_name": [
    [
      "django/template/base.py",
      [
        "Origin",
        "loader_name"
      ]
    ]
  ],
  "compile_nodelist": [
    [
      "django/template/base.py",
      [
        "Template",
        "compile_nodelist"
      ]
    ]
  ],
  "linebreak_iter": [
    [
      "django/template/base.py",
      [
        "linebreak_iter"
      ]
    ]
  ],
  "split_contents": [
    [
      "django/template/base.py",
      [
        "Token",
        "split_contents"
      ]
    ]
  ],
  "tokenize": [
    [
      "django/template/base.py",
      [
        "Lexer",
        "tokenize"
      ]
    ],
    [
      "django/template/base.py",
      [
        "DebugLexer",
        "tokenize"
      ]
    ]
  ],
  "create_token": [
    [
      "django/template/base.py",
      [
        "Lexer",
        "create_token"
      ]
    ]
  ],
  "skip_past": [
    [
      "django/template/base.py",
      [
        "Parser",
        "skip_past"
      ]
    ]
  ],
  "extend_nodelist": [
    [
      "django/template/base.py",
      [
        "Parser",
        "extend_nodelist"
      ]
    ]
  ],
  "invalid_block_tag": [
    [
      "django/template/base.py",
      [
        "Parser",
        "invalid_block_tag"
      ]
    ]
  ],
  "unclosed_block_tag": [
    [
      "django/template/base.py",
      [
        "Parser",
        "unclosed_block_tag"
      ]
    ]
  ],
  "next_token": [
    [
      "django/template/base.py",
      [
        "Parser",
        "next_token"
      ]
    ],
    [
      "django/template/smartif.py",
      [
        "IfParser",
        "next_token"
      ]
    ]
  ],
  "prepend_token": [
    [
      "django/template/base.py",
      [
        "Parser",
        "prepend_token"
      ]
    ]
  ],
  "delete_first_token": [
    [
      "django/template/base.py",
      [
        "Parser",
        "delete_first_token"
      ]
    ]
  ],
  "add_library": [
    [
      "django/template/base.py",
      [
        "Parser",
        "add_library"
      ]
    ]
  ],
  "compile_filter": [
    [
      "django/template/base.py",
      [
        "Parser",
        "compile_filter"
      ]
    ]
  ],
  "find_filter": [
    [
      "django/template/base.py",
      [
        "Parser",
        "find_filter"
      ]
    ]
  ],
  "resolve": [
    [
      "django/template/base.py",
      [
        "FilterExpression",
        "resolve"
      ]
    ],
    [
      "django/template/base.py",
      [
        "Variable",
        "resolve"
      ]
    ],
    [
      "django/urls/base.py",
      [
        "resolve"
      ]
    ],
    [
      "django/urls/resolvers.py",
      [
        "URLPattern",
        "resolve"
      ]
    ],
    [
      "django/urls/resolvers.py",
      [
        "URLResolver",
        "resolve"
      ]
    ]
  ],
  "args_check": [
    [
      "django/template/base.py",
      [
        "FilterExpression",
        "args_check"
      ]
    ]
  ],
  "_resolve_lookup": [
    [
      "django/template/base.py",
      [
        "Variable",
        "_resolve_lookup"
      ]
    ]
  ],
  "render_annotated": [
    [
      "django/template/base.py",
      [
        "Node",
        "render_annotated"
      ]
    ]
  ],
  "get_nodes_by_type": [
    [
      "django/template/base.py",
      [
        "Node",
        "get_nodes_by_type"
      ]
    ],
    [
      "django/template/base.py",
      [
        "NodeList",
        "get_nodes_by_type"
      ]
    ]
  ],
  "render_value_in_context": [
    [
      "django/template/base.py",
      [
        "render_value_in_context"
      ]
    ]
  ],
  "token_kwargs": [
    [
      "django/template/base.py",
      [
        "token_kwargs"
      ]
    ]
  ],
  "_reset_dicts": [
    [
      "django/template/context.py",
      [
        "BaseContext",
        "_reset_dicts"
      ]
    ]
  ],
  "push": [
    [
      "django/template/context.py",
      [
        "BaseContext",
        "push"
      ]
    ],
    [
      "django/template/loader_tags.py",
      [
        "BlockContext",
        "push"
      ]
    ]
  ],
  "set_upward": [
    [
      "django/template/context.py",
      [
        "BaseContext",
        "set_upward"
      ]
    ]
  ],
  "new": [
    [
      "django/template/context.py",
      [
        "BaseContext",
        "new"
      ]
    ],
    [
      "django/template/context.py",
      [
        "RequestContext",
        "new"
      ]
    ],
    [
      "tests/deprecation/tests.py",
      [
        "RenameMethodsTests",
        "test_deprecated_subclass_renamed_and_mixins",
        "Renamed",
        "new"
      ]
    ],
    [
      "tests/deprecation/tests.py",
      [
        "RenameMethodsTests",
        "test_deprecated_subclass_renamed_and_mixins",
        "RenamedMixin",
        "new"
      ]
    ]
  ],
  "bind_template": [
    [
      "django/template/context.py",
      [
        "Context",
        "bind_template"
      ]
    ],
    [
      "django/template/context.py",
      [
        "RequestContext",
        "bind_template"
      ]
    ]
  ],
  "push_state": [
    [
      "django/template/context.py",
      [
        "RenderContext",
        "push_state"
      ]
    ]
  ],
  "make_context": [
    [
      "django/template/context.py",
      [
        "make_context"
      ]
    ]
  ],
  "csrf": [
    [
      "django/template/context_processors.py",
      [
        "csrf"
      ]
    ]
  ],
  "i18n": [
    [
      "django/template/context_processors.py",
      [
        "i18n"
      ]
    ]
  ],
  "tz": [
    [
      "django/template/context_processors.py",
      [
        "tz"
      ]
    ]
  ],
  "request": [
    [
      "django/template/context_processors.py",
      [
        "request"
      ]
    ],
    [
      "django/test/client.py",
      [
        "RequestFactory",
        "request"
      ]
    ],
    [
      "django/test/client.py",
      [
        "AsyncRequestFactory",
        "request"
      ]
    ],
    [
      "django/test/client.py",
      [
        "Client",
        "request"
      ]
    ],
    [
      "django/test/client.py",
      [
        "AsyncClient",
        "request"
      ]
    ]
  ],
  "stringfilter": [
    [
      "django/template/defaultfilters.py",
      [
        "stringfilter"
      ]
    ]
  ],
  "addslashes": [
    [
      "django/template/defaultfilters.py",
      [
        "addslashes"
      ]
    ]
  ],
  "capfirst": [
    [
      "django/template/defaultfilters.py",
      [
        "capfirst"
      ]
    ],
    [
      "django/utils/text.py",
      [
        "capfirst"
      ]
    ]
  ],
  "escapejs_filter": [
    [
      "django/template/defaultfilters.py",
      [
        "escapejs_filter"
      ]
    ]
  ],
  "json_script": [
    [
      "django/template/defaultfilters.py",
      [
        "json_script"
      ]
    ],
    [
      "django/utils/html.py",
      [
        "json_script"
      ]
    ]
  ],
  "floatformat": [
    [
      "django/template/defaultfilters.py",
      [
        "floatformat"
      ]
    ]
  ],
  "iriencode": [
    [
      "django/template/defaultfilters.py",
      [
        "iriencode"
      ]
    ]
  ],
  "linenumbers": [
    [
      "django/template/defaultfilters.py",
      [
        "linenumbers"
      ]
    ]
  ],
  "lower": [
    [
      "django/template/defaultfilters.py",
      [
        "lower"
      ]
    ]
  ],
  "make_list": [
    [
      "django/template/defaultfilters.py",
      [
        "make_list"
      ]
    ]
  ],
  "slugify": [
    [
      "django/template/defaultfilters.py",
      [
        "slugify"
      ]
    ],
    [
      "django/utils/text.py",
      [
        "slugify"
      ]
    ]
  ],
  "stringformat": [
    [
      "django/template/defaultfilters.py",
      [
        "stringformat"
      ]
    ]
  ],
  "title": [
    [
      "django/template/defaultfilters.py",
      [
        "title"
      ]
    ]
  ],
  "truncatechars": [
    [
      "django/template/defaultfilters.py",
      [
        "truncatechars"
      ]
    ]
  ],
  "truncatechars_html": [
    [
      "django/template/defaultfilters.py",
      [
        "truncatechars_html"
      ]
    ]
  ],
  "truncatewords": [
    [
      "django/template/defaultfilters.py",
      [
        "truncatewords"
      ]
    ]
  ],
  "truncatewords_html": [
    [
      "django/template/defaultfilters.py",
      [
        "truncatewords_html"
      ]
    ]
  ],
  "upper": [
    [
      "django/template/defaultfilters.py",
      [
        "upper"
      ]
    ],
    [
      "tests/template_tests/templatetags/testtags.py",
      [
        "upper"
      ]
    ]
  ],
  "urlize": [
    [
      "django/template/defaultfilters.py",
      [
        "urlize"
      ]
    ],
    [
      "django/utils/html.py",
      [
        "urlize"
      ]
    ]
  ],
  "urlizetrunc": [
    [
      "django/template/defaultfilters.py",
      [
        "urlizetrunc"
      ]
    ]
  ],
  "wordcount": [
    [
      "django/template/defaultfilters.py",
      [
        "wordcount"
      ]
    ]
  ],
  "wordwrap": [
    [
      "django/template/defaultfilters.py",
      [
        "wordwrap"
      ]
    ]
  ],
  "ljust": [
    [
      "django/template/defaultfilters.py",
      [
        "ljust"
      ]
    ]
  ],
  "rjust": [
    [
      "django/template/defaultfilters.py",
      [
        "rjust"
      ]
    ]
  ],
  "center": [
    [
      "django/template/defaultfilters.py",
      [
        "center"
      ]
    ]
  ],
  "cut": [
    [
      "django/template/defaultfilters.py",
      [
        "cut"
      ]
    ]
  ],
  "escape_filter": [
    [
      "django/template/defaultfilters.py",
      [
        "escape_filter"
      ]
    ]
  ],
  "force_escape": [
    [
      "django/template/defaultfilters.py",
      [
        "force_escape"
      ]
    ]
  ],
  "linebreaks_filter": [
    [
      "django/template/defaultfilters.py",
      [
        "linebreaks_filter"
      ]
    ]
  ],
  "linebreaksbr": [
    [
      "django/template/defaultfilters.py",
      [
        "linebreaksbr"
      ]
    ]
  ],
  "safe": [
    [
      "django/template/defaultfilters.py",
      [
        "safe"
      ]
    ]
  ],
  "safeseq": [
    [
      "django/template/defaultfilters.py",
      [
        "safeseq"
      ]
    ]
  ],
  "striptags": [
    [
      "django/template/defaultfilters.py",
      [
        "striptags"
      ]
    ]
  ],
  "_property_resolver": [
    [
      "django/template/defaultfilters.py",
      [
        "_property_resolver"
      ]
    ]
  ],
  "dictsort": [
    [
      "django/template/defaultfilters.py",
      [
        "dictsort"
      ]
    ]
  ],
  "dictsortreversed": [
    [
      "django/template/defaultfilters.py",
      [
        "dictsortreversed"
      ]
    ]
  ],
  "length_is": [
    [
      "django/template/defaultfilters.py",
      [
        "length_is"
      ]
    ]
  ],
  "random": [
    [
      "django/template/defaultfilters.py",
      [
        "random"
      ]
    ]
  ],
  "slice_filter": [
    [
      "django/template/defaultfilters.py",
      [
        "slice_filter"
      ]
    ]
  ],
  "walk_items": [
    [
      "django/template/defaultfilters.py",
      [
        "unordered_list",
        "walk_items"
      ]
    ]
  ],
  "list_formatter": [
    [
      "django/template/defaultfilters.py",
      [
        "unordered_list",
        "list_formatter"
      ]
    ]
  ],
  "unordered_list": [
    [
      "django/template/defaultfilters.py",
      [
        "unordered_list"
      ]
    ]
  ],
  "get_digit": [
    [
      "django/template/defaultfilters.py",
      [
        "get_digit"
      ]
    ]
  ],
  "date": [
    [
      "django/template/defaultfilters.py",
      [
        "date"
      ]
    ],
    [
      "django/utils/datetime_safe.py",
      [
        "datetime",
        "date"
      ]
    ]
  ],
  "time": [
    [
      "django/template/defaultfilters.py",
      [
        "time"
      ]
    ]
  ],
  "timesince_filter": [
    [
      "django/template/defaultfilters.py",
      [
        "timesince_filter"
      ]
    ]
  ],
  "timeuntil_filter": [
    [
      "django/template/defaultfilters.py",
      [
        "timeuntil_filter"
      ]
    ]
  ],
  "default_if_none": [
    [
      "django/template/defaultfilters.py",
      [
        "default_if_none"
      ]
    ]
  ],
  "divisibleby": [
    [
      "django/template/defaultfilters.py",
      [
        "divisibleby"
      ]
    ]
  ],
  "yesno": [
    [
      "django/template/defaultfilters.py",
      [
        "yesno"
      ]
    ]
  ],
  "filesize_number_format": [
    [
      "django/template/defaultfilters.py",
      [
        "filesizeformat",
        "filesize_number_format"
      ]
    ]
  ],
  "filesizeformat": [
    [
      "django/template/defaultfilters.py",
      [
        "filesizeformat"
      ]
    ]
  ],
  "pluralize": [
    [
      "django/template/defaultfilters.py",
      [
        "pluralize"
      ]
    ]
  ],
  "phone2numeric_filter": [
    [
      "django/template/defaultfilters.py",
      [
        "phone2numeric_filter"
      ]
    ]
  ],
  "pprint": [
    [
      "django/template/defaultfilters.py",
      [
        "pprint"
      ]
    ]
  ],
  "_get_context_stack_frame": [
    [
      "django/template/defaulttags.py",
      [
        "IfChangedNode",
        "_get_context_stack_frame"
      ]
    ]
  ],
  "nodelist": [
    [
      "django/template/defaulttags.py",
      [
        "IfNode",
        "nodelist"
      ]
    ]
  ],
  "autoescape": [
    [
      "django/template/defaulttags.py",
      [
        "autoescape"
      ]
    ]
  ],
  "comment": [
    [
      "django/template/defaulttags.py",
      [
        "comment"
      ]
    ]
  ],
  "cycle": [
    [
      "django/template/defaulttags.py",
      [
        "cycle"
      ]
    ]
  ],
  "csrf_token": [
    [
      "django/template/defaulttags.py",
      [
        "csrf_token"
      ]
    ]
  ],
  "do_filter": [
    [
      "django/template/defaulttags.py",
      [
        "do_filter"
      ]
    ]
  ],
  "firstof": [
    [
      "django/template/defaulttags.py",
      [
        "firstof"
      ]
    ]
  ],
  "do_for": [
    [
      "django/template/defaulttags.py",
      [
        "do_for"
      ]
    ]
  ],
  "do_ifequal": [
    [
      "django/template/defaulttags.py",
      [
        "do_ifequal"
      ]
    ]
  ],
  "ifequal": [
    [
      "django/template/defaulttags.py",
      [
        "ifequal"
      ]
    ]
  ],
  "ifnotequal": [
    [
      "django/template/defaulttags.py",
      [
        "ifnotequal"
      ]
    ]
  ],
  "display": [
    [
      "django/template/defaulttags.py",
      [
        "TemplateLiteral",
        "display"
      ]
    ],
    [
      "django/template/smartif.py",
      [
        "TokenBase",
        "display"
      ]
    ],
    [
      "django/template/smartif.py",
      [
        "Literal",
        "display"
      ]
    ]
  ],
  "eval": [
    [
      "django/template/defaulttags.py",
      [
        "TemplateLiteral",
        "eval"
      ]
    ],
    [
      "django/template/smartif.py",
      [
        "Literal",
        "eval"
      ]
    ]
  ],
  "create_var": [
    [
      "django/template/defaulttags.py",
      [
        "TemplateIfParser",
        "create_var"
      ]
    ],
    [
      "django/template/smartif.py",
      [
        "IfParser",
        "create_var"
      ]
    ]
  ],
  "do_if": [
    [
      "django/template/defaulttags.py",
      [
        "do_if"
      ]
    ]
  ],
  "ifchanged": [
    [
      "django/template/defaulttags.py",
      [
        "ifchanged"
      ]
    ]
  ],
  "find_library": [
    [
      "django/template/defaulttags.py",
      [
        "find_library"
      ]
    ]
  ],
  "load_from_library": [
    [
      "django/template/defaulttags.py",
      [
        "load_from_library"
      ]
    ]
  ],
  "lorem": [
    [
      "django/template/defaulttags.py",
      [
        "lorem"
      ]
    ]
  ],
  "now": [
    [
      "django/template/defaulttags.py",
      [
        "now"
      ]
    ],
    [
      "django/utils/timezone.py",
      [
        "now"
      ]
    ],
    [
      "tests/humanize_tests/tests.py",
      [
        "MockDateTime",
        "now"
      ]
    ],
    [
      "tests/humanize_tests/tests.py",
      [
        "HumanizeTests",
        "test_naturaltime_as_documented",
        "DocumentedMockDateTime",
        "now"
      ]
    ]
  ],
  "regroup": [
    [
      "django/template/defaulttags.py",
      [
        "regroup"
      ]
    ]
  ],
  "resetcycle": [
    [
      "django/template/defaulttags.py",
      [
        "resetcycle"
      ]
    ]
  ],
  "spaceless": [
    [
      "django/template/defaulttags.py",
      [
        "spaceless"
      ]
    ]
  ],
  "templatetag": [
    [
      "django/template/defaulttags.py",
      [
        "templatetag"
      ]
    ]
  ],
  "verbatim": [
    [
      "django/template/defaulttags.py",
      [
        "verbatim"
      ]
    ]
  ],
  "widthratio": [
    [
      "django/template/defaulttags.py",
      [
        "widthratio"
      ]
    ]
  ],
  "do_with": [
    [
      "django/template/defaulttags.py",
      [
        "do_with"
      ]
    ]
  ],
  "get_template_builtins": [
    [
      "django/template/engine.py",
      [
        "Engine",
        "get_template_builtins"
      ]
    ]
  ],
  "get_template_libraries": [
    [
      "django/template/engine.py",
      [
        "Engine",
        "get_template_libraries"
      ]
    ]
  ],
  "template_loaders": [
    [
      "django/template/engine.py",
      [
        "Engine",
        "template_loaders"
      ]
    ]
  ],
  "get_template_loaders": [
    [
      "django/template/engine.py",
      [
        "Engine",
        "get_template_loaders"
      ]
    ]
  ],
  "find_template_loader": [
    [
      "django/template/engine.py",
      [
        "Engine",
        "find_template_loader"
      ]
    ]
  ],
  "find_template": [
    [
      "django/template/engine.py",
      [
        "Engine",
        "find_template"
      ]
    ],
    [
      "django/template/loader_tags.py",
      [
        "ExtendsNode",
        "find_template"
      ]
    ]
  ],
  "render_to_string": [
    [
      "django/template/engine.py",
      [
        "Engine",
        "render_to_string"
      ]
    ],
    [
      "django/template/loader.py",
      [
        "render_to_string"
      ]
    ]
  ],
  "select_template": [
    [
      "django/template/engine.py",
      [
        "Engine",
        "select_template"
      ]
    ],
    [
      "django/template/loader.py",
      [
        "select_template"
      ]
    ]
  ],
  "tag_function": [
    [
      "django/template/library.py",
      [
        "Library",
        "tag_function"
      ]
    ]
  ],
  "dec": [
    [
      "django/template/library.py",
      [
        "Library",
        "filter",
        "if_name_is_None_and_filte",
        "dec"
      ]
    ],
    [
      "django/template/library.py",
      [
        "Library",
        "simple_tag",
        "dec"
      ]
    ],
    [
      "django/template/library.py",
      [
        "Library",
        "inclusion_tag",
        "dec"
      ]
    ]
  ],
  "filter_function": [
    [
      "django/template/library.py",
      [
        "Library",
        "filter_function"
      ]
    ]
  ],
  "simple_tag": [
    [
      "django/template/library.py",
      [
        "Library",
        "simple_tag"
      ]
    ]
  ],
  "inclusion_tag": [
    [
      "django/template/library.py",
      [
        "Library",
        "inclusion_tag"
      ]
    ]
  ],
  "get_resolved_arguments": [
    [
      "django/template/library.py",
      [
        "TagHelperNode",
        "get_resolved_arguments"
      ]
    ]
  ],
  "parse_bits": [
    [
      "django/template/library.py",
      [
        "parse_bits"
      ]
    ]
  ],
  "import_library": [
    [
      "django/template/library.py",
      [
        "import_library"
      ]
    ]
  ],
  "_engine_list": [
    [
      "django/template/loader.py",
      [
        "_engine_list"
      ]
    ]
  ],
  "add_blocks": [
    [
      "django/template/loader_tags.py",
      [
        "BlockContext",
        "add_blocks"
      ]
    ]
  ],
  "get_block": [
    [
      "django/template/loader_tags.py",
      [
        "BlockContext",
        "get_block"
      ]
    ]
  ],
  "super": [
    [
      "django/template/loader_tags.py",
      [
        "BlockNode",
        "super"
      ]
    ]
  ],
  "get_parent": [
    [
      "django/template/loader_tags.py",
      [
        "ExtendsNode",
        "get_parent"
      ]
    ]
  ],
  "do_block": [
    [
      "django/template/loader_tags.py",
      [
        "do_block"
      ]
    ]
  ],
  "construct_relative_path": [
    [
      "django/template/loader_tags.py",
      [
        "construct_relative_path"
      ]
    ]
  ],
  "do_extends": [
    [
      "django/template/loader_tags.py",
      [
        "do_extends"
      ]
    ]
  ],
  "do_include": [
    [
      "django/template/loader_tags.py",
      [
        "do_include"
      ]
    ]
  ],
  "get_dirs": [
    [
      "django/template/loaders/app_directories.py",
      [
        "Loader",
        "get_dirs"
      ]
    ],
    [
      "django/template/loaders/filesystem.py",
      [
        "Loader",
        "get_dirs"
      ]
    ]
  ],
  "get_template_sources": [
    [
      "django/template/loaders/base.py",
      [
        "Loader",
        "get_template_sources"
      ]
    ],
    [
      "django/template/loaders/cached.py",
      [
        "Loader",
        "get_template_sources"
      ]
    ],
    [
      "django/template/loaders/filesystem.py",
      [
        "Loader",
        "get_template_sources"
      ]
    ],
    [
      "django/template/loaders/locmem.py",
      [
        "Loader",
        "get_template_sources"
      ]
    ]
  ],
  "get_contents": [
    [
      "django/template/loaders/cached.py",
      [
        "Loader",
        "get_contents"
      ]
    ],
    [
      "django/template/loaders/filesystem.py",
      [
        "Loader",
        "get_contents"
      ]
    ],
    [
      "django/template/loaders/locmem.py",
      [
        "Loader",
        "get_contents"
      ]
    ]
  ],
  "generate_hash": [
    [
      "django/template/loaders/cached.py",
      [
        "Loader",
        "generate_hash"
      ]
    ]
  ],
  "resolve_template": [
    [
      "django/template/response.py",
      [
        "SimpleTemplateResponse",
        "resolve_template"
      ]
    ]
  ],
  "resolve_context": [
    [
      "django/template/response.py",
      [
        "SimpleTemplateResponse",
        "resolve_context"
      ]
    ]
  ],
  "rendered_content": [
    [
      "django/template/response.py",
      [
        "SimpleTemplateResponse",
        "rendered_content"
      ]
    ]
  ],
  "add_post_render_callback": [
    [
      "django/template/response.py",
      [
        "SimpleTemplateResponse",
        "add_post_render_callback"
      ]
    ]
  ],
  "is_rendered": [
    [
      "django/template/response.py",
      [
        "SimpleTemplateResponse",
        "is_rendered"
      ]
    ]
  ],
  "content_9": [
    [
      "django/template/response.py",
      [
        "SimpleTemplateResponse",
        "content_9"
      ]
    ]
  ],
  "nud": [
    [
      "django/template/smartif.py",
      [
        "TokenBase",
        "nud"
      ]
    ],
    [
      "django/template/smartif.py",
      [
        "Literal",
        "nud"
      ]
    ],
    [
      "django/template/smartif.py",
      [
        "EndToken",
        "nud"
      ]
    ]
  ],
  "led": [
    [
      "django/template/smartif.py",
      [
        "TokenBase",
        "led"
      ]
    ]
  ],
  "infix": [
    [
      "django/template/smartif.py",
      [
        "infix"
      ]
    ]
  ],
  "prefix": [
    [
      "django/template/smartif.py",
      [
        "prefix"
      ]
    ]
  ],
  "translate_token": [
    [
      "django/template/smartif.py",
      [
        "IfParser",
        "translate_token"
      ]
    ]
  ],
  "expression": [
    [
      "django/template/smartif.py",
      [
        "IfParser",
        "expression"
      ]
    ]
  ],
  "templates": [
    [
      "django/template/utils.py",
      [
        "EngineHandler",
        "templates"
      ]
    ]
  ],
  "get_app_template_dirs": [
    [
      "django/template/utils.py",
      [
        "get_app_template_dirs"
      ]
    ]
  ],
  "do_cache": [
    [
      "django/templatetags/cache.py",
      [
        "do_cache"
      ]
    ]
  ],
  "get_language_info": [
    [
      "django/templatetags/i18n.py",
      [
        "GetLanguageInfoListNode",
        "get_language_info"
      ]
    ],
    [
      "django/utils/translation/__init__.py",
      [
        "get_language_info"
      ]
    ]
  ],
  "render_token_list": [
    [
      "django/templatetags/i18n.py",
      [
        "BlockTranslateNode",
        "render_token_list"
      ]
    ]
  ],
  "render_value": [
    [
      "django/templatetags/i18n.py",
      [
        "BlockTranslateNode",
        "render",
        "render_value"
      ]
    ]
  ],
  "do_get_available_languages": [
    [
      "django/templatetags/i18n.py",
      [
        "do_get_available_languages"
      ]
    ]
  ],
  "do_get_language_info": [
    [
      "django/templatetags/i18n.py",
      [
        "do_get_language_info"
      ]
    ]
  ],
  "do_get_language_info_list": [
    [
      "django/templatetags/i18n.py",
      [
        "do_get_language_info_list"
      ]
    ]
  ],
  "language_name": [
    [
      "django/templatetags/i18n.py",
      [
        "language_name"
      ]
    ]
  ],
  "language_name_translated": [
    [
      "django/templatetags/i18n.py",
      [
        "language_name_translated"
      ]
    ]
  ],
  "language_name_local": [
    [
      "django/templatetags/i18n.py",
      [
        "language_name_local"
      ]
    ]
  ],
  "language_bidi": [
    [
      "django/templatetags/i18n.py",
      [
        "language_bidi"
      ]
    ]
  ],
  "do_get_current_language": [
    [
      "django/templatetags/i18n.py",
      [
        "do_get_current_language"
      ]
    ]
  ],
  "do_get_current_language_bidi": [
    [
      "django/templatetags/i18n.py",
      [
        "do_get_current_language_bidi"
      ]
    ]
  ],
  "do_translate": [
    [
      "django/templatetags/i18n.py",
      [
        "do_translate"
      ]
    ]
  ],
  "do_block_translate": [
    [
      "django/templatetags/i18n.py",
      [
        "do_block_translate"
      ]
    ]
  ],
  "language": [
    [
      "django/templatetags/i18n.py",
      [
        "language"
      ]
    ],
    [
      "django/utils/translation/trans_real.py",
      [
        "DjangoTranslation",
        "language"
      ]
    ]
  ],
  "localize": [
    [
      "django/templatetags/l10n.py",
      [
        "localize"
      ]
    ],
    [
      "django/utils/formats.py",
      [
        "localize"
      ]
    ]
  ],
  "unlocalize": [
    [
      "django/templatetags/l10n.py",
      [
        "unlocalize"
      ]
    ]
  ],
  "localize_tag": [
    [
      "django/templatetags/l10n.py",
      [
        "localize_tag"
      ]
    ]
  ],
  "handle_token": [
    [
      "django/templatetags/static.py",
      [
        "PrefixNode",
        "handle_token"
      ]
    ],
    [
      "django/templatetags/static.py",
      [
        "StaticNode",
        "handle_token"
      ]
    ]
  ],
  "handle_simple": [
    [
      "django/templatetags/static.py",
      [
        "PrefixNode",
        "handle_simple"
      ]
    ],
    [
      "django/templatetags/static.py",
      [
        "StaticNode",
        "handle_simple"
      ]
    ]
  ],
  "get_static_prefix": [
    [
      "django/templatetags/static.py",
      [
        "get_static_prefix"
      ]
    ]
  ],
  "get_media_prefix": [
    [
      "django/templatetags/static.py",
      [
        "get_media_prefix"
      ]
    ]
  ],
  "do_static": [
    [
      "django/templatetags/static.py",
      [
        "do_static"
      ]
    ]
  ],
  "localtime": [
    [
      "django/templatetags/tz.py",
      [
        "localtime"
      ]
    ],
    [
      "django/utils/timezone.py",
      [
        "localtime"
      ]
    ]
  ],
  "utc": [
    [
      "django/templatetags/tz.py",
      [
        "utc"
      ]
    ]
  ],
  "do_timezone": [
    [
      "django/templatetags/tz.py",
      [
        "do_timezone"
      ]
    ]
  ],
  "localtime_tag": [
    [
      "django/templatetags/tz.py",
      [
        "localtime_tag"
      ]
    ]
  ],
  "timezone_tag": [
    [
      "django/templatetags/tz.py",
      [
        "timezone_tag"
      ]
    ]
  ],
  "get_current_timezone_tag": [
    [
      "django/templatetags/tz.py",
      [
        "get_current_timezone_tag"
      ]
    ]
  ],
  "closing_iterator_wrapper": [
    [
      "django/test/client.py",
      [
        "closing_iterator_wrapper"
      ]
    ]
  ],
  "conditional_content_removal": [
    [
      "django/test/client.py",
      [
        "conditional_content_removal"
      ]
    ]
  ],
  "store_rendered_templates": [
    [
      "django/test/client.py",
      [
        "store_rendered_templates"
      ]
    ]
  ],
  "to_bytes": [
    [
      "django/test/client.py",
      [
        "encode_multipart",
        "to_bytes"
      ]
    ],
    [
      "django/test/client.py",
      [
        "encode_file",
        "to_bytes"
      ]
    ]
  ],
  "is_file": [
    [
      "django/test/client.py",
      [
        "encode_multipart",
        "is_file"
      ]
    ]
  ],
  "encode_multipart": [
    [
      "django/test/client.py",
      [
        "encode_multipart"
      ]
    ]
  ],
  "encode_file": [
    [
      "django/test/client.py",
      [
        "encode_file"
      ]
    ]
  ],
  "_base_environ": [
    [
      "django/test/client.py",
      [
        "RequestFactory",
        "_base_environ"
      ]
    ]
  ],
  "_encode_data": [
    [
      "django/test/client.py",
      [
        "RequestFactory",
        "_encode_data"
      ]
    ]
  ],
  "_encode_json": [
    [
      "django/test/client.py",
      [
        "RequestFactory",
        "_encode_json"
      ]
    ]
  ],
  "_get_path": [
    [
      "django/test/client.py",
      [
        "RequestFactory",
        "_get_path"
      ]
    ]
  ],
  "head": [
    [
      "django/test/client.py",
      [
        "RequestFactory",
        "head"
      ]
    ],
    [
      "django/test/client.py",
      [
        "Client",
        "head"
      ]
    ],
    [
      "django/views/generic/base.py",
      [
        "RedirectView",
        "head"
      ]
    ]
  ],
  "trace": [
    [
      "django/test/client.py",
      [
        "RequestFactory",
        "trace"
      ]
    ],
    [
      "django/test/client.py",
      [
        "Client",
        "trace"
      ]
    ]
  ],
  "put": [
    [
      "django/test/client.py",
      [
        "RequestFactory",
        "put"
      ]
    ],
    [
      "django/test/client.py",
      [
        "Client",
        "put"
      ]
    ],
    [
      "django/views/generic/base.py",
      [
        "RedirectView",
        "put"
      ]
    ],
    [
      "django/views/generic/edit.py",
      [
        "ProcessFormView",
        "put"
      ]
    ]
  ],
  "patch": [
    [
      "django/test/client.py",
      [
        "RequestFactory",
        "patch"
      ]
    ],
    [
      "django/test/client.py",
      [
        "Client",
        "patch"
      ]
    ],
    [
      "django/views/generic/base.py",
      [
        "RedirectView",
        "patch"
      ]
    ]
  ],
  "generic": [
    [
      "django/test/client.py",
      [
        "RequestFactory",
        "generic"
      ]
    ],
    [
      "django/test/client.py",
      [
        "AsyncRequestFactory",
        "generic"
      ]
    ]
  ],
  "_base_scope": [
    [
      "django/test/client.py",
      [
        "AsyncRequestFactory",
        "_base_scope"
      ]
    ]
  ],
  "store_exc_info": [
    [
      "django/test/client.py",
      [
        "ClientMixin",
        "store_exc_info"
      ]
    ]
  ],
  "check_exception": [
    [
      "django/test/client.py",
      [
        "ClientMixin",
        "check_exception"
      ]
    ]
  ],
  "session": [
    [
      "django/test/client.py",
      [
        "ClientMixin",
        "session"
      ]
    ]
  ],
  "force_login": [
    [
      "django/test/client.py",
      [
        "ClientMixin",
        "force_login"
      ]
    ]
  ],
  "_login": [
    [
      "django/test/client.py",
      [
        "ClientMixin",
        "_login"
      ]
    ]
  ],
  "_parse_json": [
    [
      "django/test/client.py",
      [
        "ClientMixin",
        "_parse_json"
      ]
    ]
  ],
  "_handle_redirects": [
    [
      "django/test/client.py",
      [
        "Client",
        "_handle_redirects"
      ]
    ]
  ],
  "normalize_whitespace": [
    [
      "django/test/html.py",
      [
        "normalize_whitespace"
      ]
    ]
  ],
  "finalize": [
    [
      "django/test/html.py",
      [
        "Element",
        "finalize"
      ]
    ]
  ],
  "_count": [
    [
      "django/test/html.py",
      [
        "Element",
        "_count"
      ]
    ]
  ],
  "format_position": [
    [
      "django/test/html.py",
      [
        "Parser",
        "format_position"
      ]
    ]
  ],
  "current": [
    [
      "django/test/html.py",
      [
        "Parser",
        "current"
      ]
    ]
  ],
  "handle_startendtag": [
    [
      "django/test/html.py",
      [
        "Parser",
        "handle_startendtag"
      ]
    ]
  ],
  "handle_starttag": [
    [
      "django/test/html.py",
      [
        "Parser",
        "handle_starttag"
      ]
    ]
  ],
  "handle_endtag": [
    [
      "django/test/html.py",
      [
        "Parser",
        "handle_endtag"
      ]
    ]
  ],
  "handle_data": [
    [
      "django/test/html.py",
      [
        "Parser",
        "handle_data"
      ]
    ],
    [
      "django/utils/html.py",
      [
        "MLStripper",
        "handle_data"
      ]
    ]
  ],
  "parse_html": [
    [
      "django/test/html.py",
      [
        "parse_html"
      ]
    ]
  ],
  "startTest": [
    [
      "django/test/runner.py",
      [
        "DebugSQLTextTestResult",
        "startTest"
      ]
    ],
    [
      "django/test/runner.py",
      [
        "RemoteTestResult",
        "startTest"
      ]
    ]
  ],
  "stopTest": [
    [
      "django/test/runner.py",
      [
        "DebugSQLTextTestResult",
        "stopTest"
      ]
    ],
    [
      "django/test/runner.py",
      [
        "RemoteTestResult",
        "stopTest"
      ]
    ]
  ],
  "addError": [
    [
      "django/test/runner.py",
      [
        "DebugSQLTextTestResult",
        "addError"
      ]
    ],
    [
      "django/test/runner.py",
      [
        "PDBDebugResult",
        "addError"
      ]
    ],
    [
      "django/test/runner.py",
      [
        "RemoteTestResult",
        "addError"
      ]
    ]
  ],
  "addFailure": [
    [
      "django/test/runner.py",
      [
        "DebugSQLTextTestResult",
        "addFailure"
      ]
    ],
    [
      "django/test/runner.py",
      [
        "PDBDebugResult",
        "addFailure"
      ]
    ],
    [
      "django/test/runner.py",
      [
        "RemoteTestResult",
        "addFailure"
      ]
    ]
  ],
  "addSubTest": [
    [
      "django/test/runner.py",
      [
        "DebugSQLTextTestResult",
        "addSubTest"
      ]
    ],
    [
      "django/test/runner.py",
      [
        "RemoteTestResult",
        "addSubTest"
      ]
    ]
  ],
  "printErrorList": [
    [
      "django/test/runner.py",
      [
        "DebugSQLTextTestResult",
        "printErrorList"
      ]
    ]
  ],
  "test_index": [
    [
      "django/test/runner.py",
      [
        "RemoteTestResult",
        "test_index"
      ]
    ],
    [
      "tests/admin_docs/test_views.py",
      [
        "AdminDocViewTests",
        "test_index"
      ]
    ],
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_index"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_slice.py",
      [
        "FunctionTests",
        "test_index"
      ]
    ],
    [
      "tests/view_tests/tests/test_static.py",
      [
        "StaticTests",
        "test_index"
      ]
    ]
  ],
  "_confirm_picklable": [
    [
      "django/test/runner.py",
      [
        "RemoteTestResult",
        "_confirm_picklable"
      ]
    ]
  ],
  "_print_unpicklable_subtest": [
    [
      "django/test/runner.py",
      [
        "RemoteTestResult",
        "_print_unpicklable_subtest"
      ]
    ]
  ],
  "check_picklable": [
    [
      "django/test/runner.py",
      [
        "RemoteTestResult",
        "check_picklable"
      ]
    ]
  ],
  "check_subtest_picklable": [
    [
      "django/test/runner.py",
      [
        "RemoteTestResult",
        "check_subtest_picklable"
      ]
    ]
  ],
  "stop_if_failfast": [
    [
      "django/test/runner.py",
      [
        "RemoteTestResult",
        "stop_if_failfast"
      ]
    ]
  ],
  "stop": [
    [
      "django/test/runner.py",
      [
        "RemoteTestResult",
        "stop"
      ]
    ],
    [
      "django/utils/autoreload.py",
      [
        "BaseReloader",
        "stop"
      ]
    ],
    [
      "django/utils/autoreload.py",
      [
        "WatchmanReloader",
        "stop"
      ]
    ],
    [
      "tests/mail/tests.py",
      [
        "FakeSMTPServer",
        "stop"
      ]
    ]
  ],
  "startTestRun": [
    [
      "django/test/runner.py",
      [
        "RemoteTestResult",
        "startTestRun"
      ]
    ]
  ],
  "stopTestRun": [
    [
      "django/test/runner.py",
      [
        "RemoteTestResult",
        "stopTestRun"
      ]
    ]
  ],
  "addSuccess": [
    [
      "django/test/runner.py",
      [
        "RemoteTestResult",
        "addSuccess"
      ]
    ]
  ],
  "addSkip": [
    [
      "django/test/runner.py",
      [
        "RemoteTestResult",
        "addSkip"
      ]
    ]
  ],
  "addExpectedFailure": [
    [
      "django/test/runner.py",
      [
        "RemoteTestResult",
        "addExpectedFailure"
      ]
    ]
  ],
  "addUnexpectedSuccess": [
    [
      "django/test/runner.py",
      [
        "RemoteTestResult",
        "addUnexpectedSuccess"
      ]
    ]
  ],
  "default_test_processes": [
    [
      "django/test/runner.py",
      [
        "default_test_processes"
      ]
    ]
  ],
  "_init_worker": [
    [
      "django/test/runner.py",
      [
        "_init_worker"
      ]
    ]
  ],
  "_run_subsuite": [
    [
      "django/test/runner.py",
      [
        "_run_subsuite"
      ]
    ]
  ],
  "setup_test_environment": [
    [
      "django/test/runner.py",
      [
        "DiscoverRunner",
        "setup_test_environment"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "setup_test_environment"
      ]
    ]
  ],
  "build_suite": [
    [
      "django/test/runner.py",
      [
        "DiscoverRunner",
        "build_suite"
      ]
    ]
  ],
  "setup_databases": [
    [
      "django/test/runner.py",
      [
        "DiscoverRunner",
        "setup_databases"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "setup_databases"
      ]
    ]
  ],
  "get_resultclass": [
    [
      "django/test/runner.py",
      [
        "DiscoverRunner",
        "get_resultclass"
      ]
    ]
  ],
  "get_test_runner_kwargs": [
    [
      "django/test/runner.py",
      [
        "DiscoverRunner",
        "get_test_runner_kwargs"
      ]
    ]
  ],
  "run_suite": [
    [
      "django/test/runner.py",
      [
        "DiscoverRunner",
        "run_suite"
      ]
    ]
  ],
  "teardown_databases": [
    [
      "django/test/runner.py",
      [
        "DiscoverRunner",
        "teardown_databases"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "teardown_databases"
      ]
    ]
  ],
  "teardown_test_environment": [
    [
      "django/test/runner.py",
      [
        "DiscoverRunner",
        "teardown_test_environment"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "teardown_test_environment"
      ]
    ]
  ],
  "suite_result": [
    [
      "django/test/runner.py",
      [
        "DiscoverRunner",
        "suite_result"
      ]
    ]
  ],
  "_get_databases": [
    [
      "django/test/runner.py",
      [
        "DiscoverRunner",
        "_get_databases"
      ]
    ]
  ],
  "get_databases": [
    [
      "django/test/runner.py",
      [
        "DiscoverRunner",
        "get_databases"
      ]
    ],
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerGetDatabasesTests",
        "get_databases"
      ]
    ]
  ],
  "run_tests": [
    [
      "django/test/runner.py",
      [
        "DiscoverRunner",
        "run_tests"
      ]
    ],
    [
      "tests/test_runner/runner.py",
      [
        "CustomOptionsTestRunner",
        "run_tests"
      ]
    ]
  ],
  "is_discoverable": [
    [
      "django/test/runner.py",
      [
        "is_discoverable"
      ]
    ]
  ],
  "reorder_suite": [
    [
      "django/test/runner.py",
      [
        "reorder_suite"
      ]
    ]
  ],
  "partition_suite_by_type": [
    [
      "django/test/runner.py",
      [
        "partition_suite_by_type"
      ]
    ]
  ],
  "partition_suite_by_case": [
    [
      "django/test/runner.py",
      [
        "partition_suite_by_case"
      ]
    ]
  ],
  "filter_tests_by_tags": [
    [
      "django/test/runner.py",
      [
        "filter_tests_by_tags"
      ]
    ]
  ],
  "import_webdriver": [
    [
      "django/test/selenium.py",
      [
        "SeleniumTestCaseBase",
        "import_webdriver"
      ]
    ]
  ],
  "import_options": [
    [
      "django/test/selenium.py",
      [
        "SeleniumTestCaseBase",
        "import_options"
      ]
    ]
  ],
  "get_capability": [
    [
      "django/test/selenium.py",
      [
        "SeleniumTestCaseBase",
        "get_capability"
      ]
    ]
  ],
  "create_options": [
    [
      "django/test/selenium.py",
      [
        "SeleniumTestCaseBase",
        "create_options"
      ]
    ]
  ],
  "create_webdriver": [
    [
      "django/test/selenium.py",
      [
        "SeleniumTestCaseBase",
        "create_webdriver"
      ]
    ]
  ],
  "live_server_url": [
    [
      "django/test/selenium.py",
      [
        "SeleniumTestCase",
        "live_server_url"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "LiveServerTestCase",
        "live_server_url"
      ]
    ]
  ],
  "allowed_host": [
    [
      "django/test/selenium.py",
      [
        "SeleniumTestCase",
        "allowed_host"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "LiveServerTestCase",
        "allowed_host"
      ]
    ]
  ],
  "setUpClass": [
    [
      "django/test/selenium.py",
      [
        "SeleniumTestCase",
        "setUpClass"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "setUpClass"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "TestCase",
        "setUpClass"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "LiveServerTestCase",
        "setUpClass"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "SerializeMixin",
        "setUpClass"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "PasswordResetFormTest",
        "setUpClass"
      ]
    ],
    [
      "tests/backends/mysql/tests.py",
      [
        "IsolationLevelTests",
        "setUpClass"
      ]
    ],
    [
      "tests/check_framework/test_templates.py",
      [
        "CheckTemplateStringIfInvalidTest",
        "setUpClass"
      ]
    ],
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests",
        "setUpClass"
      ]
    ],
    [
      "tests/file_uploads/tests.py",
      [
        "DirectoryCreationTests",
        "setUpClass"
      ]
    ],
    [
      "tests/flatpages_tests/test_sitemaps.py",
      [
        "FlatpagesSitemapTests",
        "setUpClass"
      ]
    ],
    [
      "tests/forms_tests/field_tests/test_multivaluefield.py",
      [
        "MultiValueFieldTest",
        "setUpClass"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/base.py",
      [
        "WidgetTest",
        "setUpClass"
      ]
    ],
    [
      "tests/get_earliest_or_latest/tests.py",
      [
        "EarliestOrLatestTests",
        "setUpClass"
      ]
    ],
    [
      "tests/logging_tests/tests.py",
      [
        "SetupDefaultLoggingMixin",
        "setUpClass"
      ]
    ],
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTestsBase",
        "setUpClass"
      ]
    ],
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendStoppedServerTests",
        "setUpClass"
      ]
    ],
    [
      "tests/migrations/test_base.py",
      [
        "OperationTestBase",
        "setUpClass"
      ]
    ],
    [
      "tests/model_fields/test_field_flags.py",
      [
        "FieldFlagsTests",
        "setUpClass"
      ]
    ],
    [
      "tests/model_fields/tests.py",
      [
        "ChoicesTests",
        "setUpClass"
      ]
    ],
    [
      "tests/serializers/test_yaml.py",
      [
        "NoYamlSerializerTestCase",
        "setUpClass"
      ]
    ],
    [
      "tests/servers/tests.py",
      [
        "LiveServerAddress",
        "setUpClass"
      ]
    ],
    [
      "tests/settings_tests/tests.py",
      [
        "ClassDecoratedTestCase",
        "setUpClass"
      ]
    ],
    [
      "tests/sitemaps_tests/base.py",
      [
        "SitemapTestsBase",
        "setUpClass"
      ]
    ],
    [
      "tests/staticfiles_tests/test_liveserver.py",
      [
        "LiveServerBase",
        "setUpClass"
      ]
    ],
    [
      "tests/staticfiles_tests/test_liveserver.py",
      [
        "StaticLiveServerChecks",
        "setUpClass"
      ]
    ],
    [
      "tests/syndication_tests/tests.py",
      [
        "SyndicationFeedTest",
        "setUpClass"
      ]
    ],
    [
      "tests/template_backends/test_dummy.py",
      [
        "TemplateStringsTests",
        "setUpClass"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/test_cache.py",
      [
        "CacheTests",
        "setUpClass"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/test_if_changed.py",
      [
        "IfChangedTests",
        "setUpClass"
      ]
    ],
    [
      "tests/template_tests/test_callables.py",
      [
        "CallableVariablesTests",
        "setUpClass"
      ]
    ],
    [
      "tests/template_tests/test_custom.py",
      [
        "TagTestCase",
        "setUpClass"
      ]
    ],
    [
      "tests/template_tests/test_custom.py",
      [
        "TemplateTagLoadingTests",
        "setUpClass"
      ]
    ],
    [
      "tests/template_tests/test_loaders.py",
      [
        "FileSystemLoaderTests",
        "setUpClass"
      ]
    ],
    [
      "tests/template_tests/test_loaders.py",
      [
        "AppDirectoriesLoaderTests",
        "setUpClass"
      ]
    ],
    [
      "tests/template_tests/test_loaders.py",
      [
        "LocmemLoaderTests",
        "setUpClass"
      ]
    ],
    [
      "tests/template_tests/test_nodelist.py",
      [
        "NodelistTest",
        "setUpClass"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "TestBadSetUpTestData",
        "setUpClass"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "ForcedTimeZoneDatabaseTests",
        "setUpClass"
      ]
    ]
  ],
  "_tearDownClassInternal": [
    [
      "django/test/selenium.py",
      [
        "SeleniumTestCase",
        "_tearDownClassInternal"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "LiveServerTestCase",
        "_tearDownClassInternal"
      ]
    ]
  ],
  "disable_implicit_wait": [
    [
      "django/test/selenium.py",
      [
        "SeleniumTestCase",
        "disable_implicit_wait"
      ]
    ]
  ],
  "clear_cache_handlers": [
    [
      "django/test/signals.py",
      [
        "clear_cache_handlers"
      ]
    ]
  ],
  "update_installed_apps": [
    [
      "django/test/signals.py",
      [
        "update_installed_apps"
      ]
    ]
  ],
  "update_connections_time_zone": [
    [
      "django/test/signals.py",
      [
        "update_connections_time_zone"
      ]
    ]
  ],
  "clear_routers_cache": [
    [
      "django/test/signals.py",
      [
        "clear_routers_cache"
      ]
    ]
  ],
  "reset_template_engines": [
    [
      "django/test/signals.py",
      [
        "reset_template_engines"
      ]
    ]
  ],
  "clear_serializers_cache": [
    [
      "django/test/signals.py",
      [
        "clear_serializers_cache"
      ]
    ]
  ],
  "language_changed": [
    [
      "django/test/signals.py",
      [
        "language_changed"
      ]
    ]
  ],
  "localize_settings_changed": [
    [
      "django/test/signals.py",
      [
        "localize_settings_changed"
      ]
    ]
  ],
  "file_storage_changed": [
    [
      "django/test/signals.py",
      [
        "file_storage_changed"
      ]
    ]
  ],
  "complex_setting_changed": [
    [
      "django/test/signals.py",
      [
        "complex_setting_changed"
      ]
    ]
  ],
  "root_urlconf_changed": [
    [
      "django/test/signals.py",
      [
        "root_urlconf_changed"
      ]
    ]
  ],
  "static_storage_changed": [
    [
      "django/test/signals.py",
      [
        "static_storage_changed"
      ]
    ]
  ],
  "static_finders_changed": [
    [
      "django/test/signals.py",
      [
        "static_finders_changed"
      ]
    ]
  ],
  "auth_password_validators_changed": [
    [
      "django/test/signals.py",
      [
        "auth_password_validators_changed"
      ]
    ]
  ],
  "user_model_swapped": [
    [
      "django/test/signals.py",
      [
        "user_model_swapped"
      ]
    ]
  ],
  "to_list": [
    [
      "django/test/testcases.py",
      [
        "to_list"
      ]
    ]
  ],
  "assert_and_parse_html": [
    [
      "django/test/testcases.py",
      [
        "assert_and_parse_html"
      ]
    ]
  ],
  "on_template_render": [
    [
      "django/test/testcases.py",
      [
        "_AssertTemplateUsedContext",
        "on_template_render"
      ]
    ]
  ],
  "test": [
    [
      "django/test/testcases.py",
      [
        "_AssertTemplateUsedContext",
        "test"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "_AssertTemplateNotUsedContext",
        "test"
      ]
    ],
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_fields_with_fk_interactive",
        "test"
      ]
    ],
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_fields_with_m2m_interactive_blank",
        "test"
      ]
    ],
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_password_validation",
        "test"
      ]
    ],
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_validate_password_against_username",
        "test"
      ]
    ],
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_validate_password_against_required_fields",
        "test"
      ]
    ],
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_password_validation_bypass",
        "test"
      ]
    ],
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_invalid_username",
        "test"
      ]
    ],
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_existing_username",
        "test"
      ]
    ],
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_existing_username_provided_via_option_and_interactive",
        "test"
      ]
    ],
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_validation_mismatched_passwords",
        "test"
      ]
    ],
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_validation_blank_password_entered",
        "test"
      ]
    ],
    [
      "tests/db_functions/math/test_pi.py",
      [
        "PiTests",
        "test"
      ]
    ],
    [
      "tests/gis_tests/test_ptr.py",
      [
        "CPointerBaseTests",
        "test"
      ]
    ],
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_empty_foo_together",
        "test"
      ]
    ],
    [
      "tests/test_utils/test_transactiontestcase.py",
      [
        "TestSerializedRollbackInhibitsPostMigrate",
        "test"
      ]
    ],
    [
      "tests/utils_tests/test_duration.py",
      [
        "TestDurationMicroseconds",
        "test"
      ]
    ],
    [
      "tests/utils_tests/test_http.py",
      [
        "EscapeLeadingSlashesTests",
        "test"
      ]
    ]
  ],
  "_validate_databases": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "_validate_databases"
      ]
    ]
  ],
  "_add_databases_failures": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "_add_databases_failures"
      ]
    ]
  ],
  "_remove_databases_failures": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "_remove_databases_failures"
      ]
    ]
  ],
  "tearDownClass": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "tearDownClass"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "TestCase",
        "tearDownClass"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "LiveServerTestCase",
        "tearDownClass"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "SerializeMixin",
        "tearDownClass"
      ]
    ],
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests",
        "tearDownClass"
      ]
    ],
    [
      "tests/file_uploads/tests.py",
      [
        "DirectoryCreationTests",
        "tearDownClass"
      ]
    ],
    [
      "tests/logging_tests/tests.py",
      [
        "SetupDefaultLoggingMixin",
        "tearDownClass"
      ]
    ],
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTestsBase",
        "tearDownClass"
      ]
    ],
    [
      "tests/serializers/test_yaml.py",
      [
        "NoYamlSerializerTestCase",
        "tearDownClass"
      ]
    ],
    [
      "tests/staticfiles_tests/test_liveserver.py",
      [
        "LiveServerBase",
        "tearDownClass"
      ]
    ],
    [
      "tests/staticfiles_tests/test_liveserver.py",
      [
        "StaticLiveServerChecks",
        "tearDownClass"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "TestBadSetUpTestData",
        "tearDownClass"
      ]
    ]
  ],
  "_setup_and_call": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "_setup_and_call"
      ]
    ]
  ],
  "_pre_setup": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "_pre_setup"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "TransactionTestCase",
        "_pre_setup"
      ]
    ]
  ],
  "_post_teardown": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "_post_teardown"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "TransactionTestCase",
        "_post_teardown"
      ]
    ]
  ],
  "settings": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "settings"
      ]
    ]
  ],
  "modify_settings": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "modify_settings"
      ]
    ]
  ],
  "assertRedirects": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "assertRedirects"
      ]
    ]
  ],
  "assertURLEqual": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "assertURLEqual"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminKeepChangeListFiltersTests",
        "assertURLEqual"
      ]
    ]
  ],
  "_assert_contains": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "_assert_contains"
      ]
    ]
  ],
  "assertContains": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "assertContains"
      ]
    ]
  ],
  "assertNotContains": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "assertNotContains"
      ]
    ]
  ],
  "assertFormError": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "assertFormError"
      ]
    ],
    [
      "tests/auth_tests/test_views.py",
      [
        "AuthViewsTestCase",
        "assertFormError"
      ]
    ]
  ],
  "assertFormsetError": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "assertFormsetError"
      ]
    ]
  ],
  "_assert_template_used": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "_assert_template_used"
      ]
    ]
  ],
  "assertTemplateUsed": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "assertTemplateUsed"
      ]
    ]
  ],
  "assertTemplateNotUsed": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "assertTemplateNotUsed"
      ]
    ]
  ],
  "_assert_raises_or_warns_cm": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "_assert_raises_or_warns_cm"
      ]
    ]
  ],
  "_assertFooMessage": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "_assertFooMessage"
      ]
    ]
  ],
  "assertRaisesMessage": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "assertRaisesMessage"
      ]
    ]
  ],
  "assertWarnsMessage": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "assertWarnsMessage"
      ]
    ]
  ],
  "assertFieldOutput": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "assertFieldOutput"
      ]
    ]
  ],
  "assertHTMLEqual": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "assertHTMLEqual"
      ]
    ]
  ],
  "assertHTMLNotEqual": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "assertHTMLNotEqual"
      ]
    ]
  ],
  "assertInHTML": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "assertInHTML"
      ]
    ]
  ],
  "assertJSONEqual": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "assertJSONEqual"
      ]
    ]
  ],
  "assertJSONNotEqual": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "assertJSONNotEqual"
      ]
    ]
  ],
  "assertXMLEqual": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "assertXMLEqual"
      ]
    ]
  ],
  "assertXMLNotEqual": [
    [
      "django/test/testcases.py",
      [
        "SimpleTestCase",
        "assertXMLNotEqual"
      ]
    ]
  ],
  "_databases_names": [
    [
      "django/test/testcases.py",
      [
        "TransactionTestCase",
        "_databases_names"
      ]
    ]
  ],
  "_reset_sequences": [
    [
      "django/test/testcases.py",
      [
        "TransactionTestCase",
        "_reset_sequences"
      ]
    ]
  ],
  "_fixture_setup": [
    [
      "django/test/testcases.py",
      [
        "TransactionTestCase",
        "_fixture_setup"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "TestCase",
        "_fixture_setup"
      ]
    ]
  ],
  "_should_reload_connections": [
    [
      "django/test/testcases.py",
      [
        "TransactionTestCase",
        "_should_reload_connections"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "TestCase",
        "_should_reload_connections"
      ]
    ]
  ],
  "_fixture_teardown": [
    [
      "django/test/testcases.py",
      [
        "TransactionTestCase",
        "_fixture_teardown"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "TestCase",
        "_fixture_teardown"
      ]
    ]
  ],
  "assertQuerysetEqual": [
    [
      "django/test/testcases.py",
      [
        "TransactionTestCase",
        "assertQuerysetEqual"
      ]
    ]
  ],
  "assertNumQueries": [
    [
      "django/test/testcases.py",
      [
        "TransactionTestCase",
        "assertNumQueries"
      ]
    ]
  ],
  "connections_support_transactions": [
    [
      "django/test/testcases.py",
      [
        "connections_support_transactions"
      ]
    ]
  ],
  "_enter_atomics": [
    [
      "django/test/testcases.py",
      [
        "TestCase",
        "_enter_atomics"
      ]
    ]
  ],
  "_rollback_atomics": [
    [
      "django/test/testcases.py",
      [
        "TestCase",
        "_rollback_atomics"
      ]
    ]
  ],
  "_databases_support_transactions": [
    [
      "django/test/testcases.py",
      [
        "TestCase",
        "_databases_support_transactions"
      ]
    ]
  ],
  "setUpTestData": [
    [
      "django/test/testcases.py",
      [
        "TestCase",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_changelist/test_date_hierarchy.py",
      [
        "DateHierarchyTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_custom_urls/tests.py",
      [
        "AdminCustomUrlsTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_docs/tests.py",
      [
        "TestDataMixin",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_inlines/tests.py",
      [
        "TestDataMixin",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInlinePermissions",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_inlines/tests.py",
      [
        "TestReadOnlyChangeViewInlinePermissions",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_ordering/tests.py",
      [
        "TestAdminOrdering",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_ordering/tests.py",
      [
        "TestInlineModelAdminOrdering",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_ordering/tests.py",
      [
        "TestRelatedFieldsAdminOrdering",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsPermissionTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/test_adminsite.py",
      [
        "SiteEachContextTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/test_autocomplete_view.py",
      [
        "AutocompleteJsonViewTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/test_forms.py",
      [
        "AdminAuthenticationFormTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/test_history_view.py",
      [
        "AdminHistoryViewTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/test_multidb.py",
      [
        "MultiDatabaseTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/test_templatetags.py",
      [
        "DateHierarchyTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTestCase",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewFormUrlTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminJavaScriptTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "SaveAsTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewProxyModelPermissionsTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewsNoUrlTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewDeletedObjectsTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "TestGenericRelations",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewStringPrimaryKeyTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewUnicodeTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewListEditable",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminSearchTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminInheritedInlinesTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "TestCustomChangeList",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "TestInlineNotEditable",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminCustomQuerysetTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminInlineFileUploadTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminInlineTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "NeverCacheTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "PrePopulatedTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "ReadonlyTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "LimitChoicesToInAdminTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "RawIdFieldsTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "UserAdminTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "GroupAdminTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "CSSTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminDocsTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "ValidXHTMLTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "DateHierarchyTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminCustomSaveRelatedTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewLogoutTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminUserMessageTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminKeepChangeListFiltersTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "TestLabelVisibility",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewOnSiteTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "InlineAdminViewOnSiteTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "GetFormsetsWithInlinesArgumentTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_widgets/tests.py",
      [
        "TestDataMixin",
        "setUpTestData"
      ]
    ],
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFileWidgetTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/aggregation/test_filter_argument.py",
      [
        "FilteredAggregateTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "setUpTestData"
      ]
    ],
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "setUpTestData"
      ]
    ],
    [
      "tests/auth_tests/test_admin_multidb.py",
      [
        "MultiDatabaseTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "BaseBackendTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "RowlevelBackendTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "NoBackendsTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "InActiveUserBackendTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "PermissionDeniedBackendTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "ChangedBackendSettingsTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "AuthenticateTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "ImproperlyConfiguredUserModelTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "AllowAllUsersModelBackendTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/auth_tests/test_context_processors.py",
      [
        "AuthContextProcessorTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/auth_tests/test_decorators.py",
      [
        "PermissionsRequiredDecoratorTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "TestDataMixin",
        "setUpTestData"
      ]
    ],
    [
      "tests/auth_tests/test_management.py",
      [
        "ChangepasswordManagementCommandTestCase",
        "setUpTestData"
      ]
    ],
    [
      "tests/auth_tests/test_mixins.py",
      [
        "LoginRequiredMixinTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/auth_tests/test_mixins.py",
      [
        "PermissionsRequiredMixinTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/auth_tests/test_models.py",
      [
        "UserWithPermTestCase",
        "setUpTestData"
      ]
    ],
    [
      "tests/auth_tests/test_signals.py",
      [
        "SignalTestCase",
        "setUpTestData"
      ]
    ],
    [
      "tests/auth_tests/test_templates.py",
      [
        "AuthTemplateTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/auth_tests/test_views.py",
      [
        "AuthViewsTestCase",
        "setUpTestData"
      ]
    ],
    [
      "tests/auth_tests/test_views.py",
      [
        "CustomUserPasswordResetTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/auth_tests/test_views.py",
      [
        "ChangelistTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/backends/postgresql/test_server_side_cursors.py",
      [
        "ServerSideCursorsPostgres",
        "setUpTestData"
      ]
    ],
    [
      "tests/basic/tests.py",
      [
        "ModelLookupTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/constraints/tests.py",
      [
        "UniqueConstraintTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/contenttypes_tests/test_views.py",
      [
        "ContentTypesViewsTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/contenttypes_tests/test_views.py",
      [
        "ContentTypesViewsSiteRelTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/custom_columns/tests.py",
      [
        "CustomColumnsTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "YearLteTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/custom_pk/tests.py",
      [
        "BasicCustomPKTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/db_functions/comparison/test_cast.py",
      [
        "CastTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/db_functions/comparison/test_nullif.py",
      [
        "NullIfTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/db_functions/text/test_chr.py",
      [
        "ChrTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/db_functions/text/test_left.py",
      [
        "LeftTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/db_functions/text/test_md5.py",
      [
        "MD5Tests",
        "setUpTestData"
      ]
    ],
    [
      "tests/db_functions/text/test_ord.py",
      [
        "OrdTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/db_functions/text/test_replace.py",
      [
        "ReplaceTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/db_functions/text/test_reverse.py",
      [
        "ReverseTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/db_functions/text/test_right.py",
      [
        "RightTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/db_functions/text/test_sha1.py",
      [
        "SHA1Tests",
        "setUpTestData"
      ]
    ],
    [
      "tests/db_functions/text/test_sha224.py",
      [
        "SHA224Tests",
        "setUpTestData"
      ]
    ],
    [
      "tests/db_functions/text/test_sha256.py",
      [
        "SHA256Tests",
        "setUpTestData"
      ]
    ],
    [
      "tests/db_functions/text/test_sha384.py",
      [
        "SHA384Tests",
        "setUpTestData"
      ]
    ],
    [
      "tests/db_functions/text/test_sha512.py",
      [
        "SHA512Tests",
        "setUpTestData"
      ]
    ],
    [
      "tests/defer/tests.py",
      [
        "DeferTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/defer/tests.py",
      [
        "BigChildDeferTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/defer_regress/tests.py",
      [
        "DeferDeletionSignalsTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/delete_regress/tests.py",
      [
        "Ticket19102Tests",
        "setUpTestData"
      ]
    ],
    [
      "tests/distinct_on_fields/tests.py",
      [
        "DistinctOnTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/expressions/test_queryset_values.py",
      [
        "ValuesExpressionsTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/expressions/tests.py",
      [
        "IterableLookupInnerExpressionsTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/expressions/tests.py",
      [
        "ExpressionsNumericTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/expressions/tests.py",
      [
        "ExpressionOperatorTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/expressions/tests.py",
      [
        "FTimeDeltaTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/expressions/tests.py",
      [
        "FieldTransformTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/expressions_case/tests.py",
      [
        "CaseDocumentationExamples",
        "setUpTestData"
      ]
    ],
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/extra_regress/tests.py",
      [
        "ExtraRegressTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationAggregationTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/flatpages_tests/test_csrf.py",
      [
        "FlatpageCSRFTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/flatpages_tests/test_forms.py",
      [
        "FlatpageAdminFormTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/flatpages_tests/test_middleware.py",
      [
        "TestDataMixin",
        "setUpTestData"
      ]
    ],
    [
      "tests/flatpages_tests/test_sitemaps.py",
      [
        "FlatpagesSitemapTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/flatpages_tests/test_templatetags.py",
      [
        "FlatpageTemplateTagTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/flatpages_tests/test_views.py",
      [
        "TestDataMixin",
        "setUpTestData"
      ]
    ],
    [
      "tests/foreign_object/test_agnostic_order_trimjoin.py",
      [
        "TestLookupQuery",
        "setUpTestData"
      ]
    ],
    [
      "tests/foreign_object/test_empty_join.py",
      [
        "RestrictedConditionsTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/foreign_object/tests.py",
      [
        "MultiColumnFKTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/from_db_value/tests.py",
      [
        "FromDBValueTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/generic_inline_admin/tests.py",
      [
        "TestDataMixin",
        "setUpTestData"
      ]
    ],
    [
      "tests/generic_views/test_dates.py",
      [
        "TestDataMixin",
        "setUpTestData"
      ]
    ],
    [
      "tests/generic_views/test_detail.py",
      [
        "DetailViewTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/generic_views/test_edit.py",
      [
        "UpdateViewTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/generic_views/test_edit.py",
      [
        "DeleteViewTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/generic_views/test_list.py",
      [
        "ListViewTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/get_or_create/tests.py",
      [
        "GetOrCreateTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/get_or_create/tests.py",
      [
        "GetOrCreateTestsWithManualPKs",
        "setUpTestData"
      ]
    ],
    [
      "tests/gis_tests/geoapp/test_feeds.py",
      [
        "GeoFeedTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/gis_tests/geoapp/test_sitemaps.py",
      [
        "GeoSitemapTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/known_related_objects/tests.py",
      [
        "ExistingRelatedInstancesTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/lookup/test_decimalfield.py",
      [
        "DecimalFieldLookupTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/lookup/test_timefield.py",
      [
        "TimeFieldLookupTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/m2m_recursive/tests.py",
      [
        "RecursiveM2MTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/m2m_recursive/tests.py",
      [
        "RecursiveSymmetricalM2MThroughTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/m2m_signals/tests.py",
      [
        "ManyToManySignalsTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughToFieldsTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/m2m_through_regress/test_multitable.py",
      [
        "MultiTableTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/m2m_through_regress/tests.py",
      [
        "M2MThroughTestCase",
        "setUpTestData"
      ]
    ],
    [
      "tests/m2m_through_regress/tests.py",
      [
        "M2MThroughSerializationTestCase",
        "setUpTestData"
      ]
    ],
    [
      "tests/m2m_through_regress/tests.py",
      [
        "ToFieldThroughTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/m2o_recursive/tests.py",
      [
        "ManyToOneRecursiveTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/m2o_recursive/tests.py",
      [
        "MultipleManyToOneRecursiveTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/model_fields/test_durationfield.py",
      [
        "TestQuerying",
        "setUpTestData"
      ]
    ],
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestQuerying",
        "setUpTestData"
      ]
    ],
    [
      "tests/model_fields/tests.py",
      [
        "GetChoicesOrderingTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/model_fields/tests.py",
      [
        "GetChoicesLimitChoicesToTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "UniqueTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "ModelMultipleChoiceFieldTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "LimitChoicesToTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceDataTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/model_inheritance/tests.py",
      [
        "InheritanceUniqueTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/model_options/test_default_related_name.py",
      [
        "DefaultRelatedNameTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/modeladmin/test_actions.py",
      [
        "AdminActionsTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/nested_foreign_keys/tests.py",
      [
        "NestedForeignKeysTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/nested_foreign_keys/tests.py",
      [
        "DeeplyNestedForeignKeysTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/or_lookups/tests.py",
      [
        "OrLookupsTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/order_with_respect_to/base_tests.py",
      [
        "BaseOrderWithRespectToTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/ordering/tests.py",
      [
        "OrderingTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/pagination/tests.py",
      [
        "ModelPaginationTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "setUpTestData"
      ]
    ],
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestAggregateDistinct",
        "setUpTestData"
      ]
    ],
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate",
        "setUpTestData"
      ]
    ],
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "setUpTestData"
      ]
    ],
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestDateTimeExactQuerying",
        "setUpTestData"
      ]
    ],
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestOtherTypesExactQuerying",
        "setUpTestData"
      ]
    ],
    [
      "tests/postgres_tests/test_citext.py",
      [
        "CITextTestCase",
        "setUpTestData"
      ]
    ],
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestQuerying",
        "setUpTestData"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "setUpTestData"
      ]
    ],
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestRangeContainsLookup",
        "setUpTestData"
      ]
    ],
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQuerying",
        "setUpTestData"
      ]
    ],
    [
      "tests/postgres_tests/test_search.py",
      [
        "GrailTestData",
        "setUpTestData"
      ]
    ],
    [
      "tests/postgres_tests/test_trigram.py",
      [
        "TrigramTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/postgres_tests/test_unaccent.py",
      [
        "UnaccentTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/prefetch_related/test_prefetch_related_objects.py",
      [
        "PrefetchRelatedObjectsTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/prefetch_related/test_uuid.py",
      [
        "UUIDPrefetchRelatedLookups",
        "setUpTestData"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "TestDataMixin",
        "setUpTestData"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "CustomPrefetchTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "GenericRelationTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "MultiTableInheritanceTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "ForeignKeyToFieldTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "NullableTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "DirectPrefetchedObjectCacheReuseTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "ReadPrefetchedObjectsCacheTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/properties/tests.py",
      [
        "PropertyTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelAdminTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/queries/test_iterator.py",
      [
        "QuerySetIteratorTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "setUpTestData"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "Queries2Tests",
        "setUpTestData"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "Queries4Tests",
        "setUpTestData"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "Queries5Tests",
        "setUpTestData"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "DisjunctiveFilterTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "Queries6Tests",
        "setUpTestData"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "SubqueryTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "QuerySetBitwiseOperationTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "ValuesQuerysetTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "QuerySetSupportsPythonIdioms",
        "setUpTestData"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "WeirdQuerysetSlicingTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "ConditionalTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "UnionTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "ExcludeTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "ExcludeTest17600",
        "setUpTestData"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "NullInExcludeTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "EmptyStringsAsNullTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "NullJoinPromotionOrTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "RelatedLookupTypeTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "setUpTestData"
      ]
    ],
    [
      "tests/queryset_pickle/tests.py",
      [
        "InLookupTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/redirects_tests/tests.py",
      [
        "RedirectTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/redirects_tests/tests.py",
      [
        "OverriddenRedirectMiddlewareTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/reverse_lookup/tests.py",
      [
        "ReverseLookupTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/select_related/tests.py",
      [
        "SelectRelatedTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/select_related_onetoone/tests.py",
      [
        "ReverseSelectRelatedTestCase",
        "setUpTestData"
      ]
    ],
    [
      "tests/sitemaps_tests/base.py",
      [
        "SitemapTestsBase",
        "setUpTestData"
      ]
    ],
    [
      "tests/sites_framework/tests.py",
      [
        "SitesFrameworkTestCase",
        "setUpTestData"
      ]
    ],
    [
      "tests/sites_tests/tests.py",
      [
        "SitesFrameworkTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/sites_tests/tests.py",
      [
        "CreateDefaultSiteTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/syndication_tests/tests.py",
      [
        "FeedTestCase",
        "setUpTestData"
      ]
    ],
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/test_client_regress/tests.py",
      [
        "TestDataMixin",
        "setUpTestData"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "AssertQuerysetEqualTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "CaptureQueriesContextManagerTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "TestBadSetUpTestData",
        "setUpTestData"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "AdminTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/update/tests.py",
      [
        "SimpleTest",
        "setUpTestData"
      ]
    ],
    [
      "tests/update/tests.py",
      [
        "AdvancedTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/validation/tests.py",
      [
        "ModelFormsTests",
        "setUpTestData"
      ]
    ],
    [
      "tests/view_tests/tests/test_defaults.py",
      [
        "DefaultsTests",
        "setUpTestData"
      ]
    ]
  ],
  "_should_check_constraints": [
    [
      "django/test/testcases.py",
      [
        "TestCase",
        "_should_check_constraints"
      ]
    ]
  ],
  "add_condition": [
    [
      "django/test/testcases.py",
      [
        "CheckCondition",
        "add_condition"
      ]
    ]
  ],
  "skip_wrapper": [
    [
      "django/test/testcases.py",
      [
        "_deferredSkip",
        "decorator",
        "if_not_isinstance_test_f",
        "skip_wrapper"
      ]
    ]
  ],
  "_deferredSkip": [
    [
      "django/test/testcases.py",
      [
        "_deferredSkip"
      ]
    ]
  ],
  "skipIfDBFeature": [
    [
      "django/test/testcases.py",
      [
        "skipIfDBFeature"
      ]
    ]
  ],
  "skipUnlessDBFeature": [
    [
      "django/test/testcases.py",
      [
        "skipUnlessDBFeature"
      ]
    ]
  ],
  "skipUnlessAnyDBFeature": [
    [
      "django/test/testcases.py",
      [
        "skipUnlessAnyDBFeature"
      ]
    ]
  ],
  "get_base_dir": [
    [
      "django/test/testcases.py",
      [
        "_StaticFilesHandler",
        "get_base_dir"
      ]
    ],
    [
      "django/test/testcases.py",
      [
        "_MediaFilesHandler",
        "get_base_dir"
      ]
    ]
  ],
  "_create_server": [
    [
      "django/test/testcases.py",
      [
        "LiveServerThread",
        "_create_server"
      ]
    ],
    [
      "tests/servers/tests.py",
      [
        "LiveServerSingleThread",
        "_create_server"
      ]
    ]
  ],
  "terminate": [
    [
      "django/test/testcases.py",
      [
        "LiveServerThread",
        "terminate"
      ]
    ]
  ],
  "_create_server_thread": [
    [
      "django/test/testcases.py",
      [
        "LiveServerTestCase",
        "_create_server_thread"
      ]
    ]
  ],
  "instrumented_test_render": [
    [
      "django/test/utils.py",
      [
        "instrumented_test_render"
      ]
    ]
  ],
  "dependency_ordered": [
    [
      "django/test/utils.py",
      [
        "dependency_ordered"
      ]
    ]
  ],
  "get_unique_databases_and_mirrors": [
    [
      "django/test/utils.py",
      [
        "get_unique_databases_and_mirrors"
      ]
    ]
  ],
  "get_runner": [
    [
      "django/test/utils.py",
      [
        "get_runner"
      ]
    ],
    [
      "tests/test_utils/test_simpletestcase.py",
      [
        "DebugInvocationTests",
        "get_runner"
      ]
    ]
  ],
  "enable": [
    [
      "django/test/utils.py",
      [
        "TestContextDecorator",
        "enable"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "override_settings",
        "enable"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "modify_settings",
        "enable"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "override_system_checks",
        "enable"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "ignore_warnings",
        "enable"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "override_script_prefix",
        "enable"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "isolate_apps",
        "enable"
      ]
    ],
    [
      "tests/messages_tests/base.py",
      [
        "override_settings_tags",
        "enable"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "DoNothingDecorator",
        "enable"
      ]
    ]
  ],
  "disable": [
    [
      "django/test/utils.py",
      [
        "TestContextDecorator",
        "disable"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "override_settings",
        "disable"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "override_system_checks",
        "disable"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "ignore_warnings",
        "disable"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "override_script_prefix",
        "disable"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "isolate_apps",
        "disable"
      ]
    ],
    [
      "tests/messages_tests/base.py",
      [
        "override_settings_tags",
        "disable"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "DoNothingDecorator",
        "disable"
      ]
    ]
  ],
  "decorate_class": [
    [
      "django/test/utils.py",
      [
        "TestContextDecorator",
        "decorate_class"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "override_settings",
        "decorate_class"
      ]
    ]
  ],
  "decorate_callable": [
    [
      "django/test/utils.py",
      [
        "TestContextDecorator",
        "decorate_callable"
      ]
    ]
  ],
  "save_options": [
    [
      "django/test/utils.py",
      [
        "override_settings",
        "save_options"
      ]
    ],
    [
      "django/test/utils.py",
      [
        "modify_settings",
        "save_options"
      ]
    ]
  ],
  "norm_whitespace": [
    [
      "django/test/utils.py",
      [
        "compare_xml",
        "norm_whitespace"
      ]
    ]
  ],
  "child_text": [
    [
      "django/test/utils.py",
      [
        "compare_xml",
        "child_text"
      ]
    ]
  ],
  "children": [
    [
      "django/test/utils.py",
      [
        "compare_xml",
        "children"
      ]
    ]
  ],
  "norm_child_text": [
    [
      "django/test/utils.py",
      [
        "compare_xml",
        "norm_child_text"
      ]
    ]
  ],
  "attrs_dict": [
    [
      "django/test/utils.py",
      [
        "compare_xml",
        "attrs_dict"
      ]
    ]
  ],
  "check_element": [
    [
      "django/test/utils.py",
      [
        "compare_xml",
        "check_element"
      ]
    ]
  ],
  "first_node": [
    [
      "django/test/utils.py",
      [
        "compare_xml",
        "first_node"
      ]
    ]
  ],
  "compare_xml": [
    [
      "django/test/utils.py",
      [
        "compare_xml"
      ]
    ]
  ],
  "captured_queries": [
    [
      "django/test/utils.py",
      [
        "CaptureQueriesContext",
        "captured_queries"
      ]
    ]
  ],
  "extend_sys_path": [
    [
      "django/test/utils.py",
      [
        "extend_sys_path"
      ]
    ]
  ],
  "isolate_lru_cache": [
    [
      "django/test/utils.py",
      [
        "isolate_lru_cache"
      ]
    ]
  ],
  "captured_output": [
    [
      "django/test/utils.py",
      [
        "captured_output"
      ]
    ]
  ],
  "captured_stdout": [
    [
      "django/test/utils.py",
      [
        "captured_stdout"
      ]
    ]
  ],
  "captured_stderr": [
    [
      "django/test/utils.py",
      [
        "captured_stderr"
      ]
    ]
  ],
  "captured_stdin": [
    [
      "django/test/utils.py",
      [
        "captured_stdin"
      ]
    ]
  ],
  "freeze_time": [
    [
      "django/test/utils.py",
      [
        "freeze_time"
      ]
    ]
  ],
  "require_jinja2": [
    [
      "django/test/utils.py",
      [
        "require_jinja2"
      ]
    ]
  ],
  "setUp": [
    [
      "django/test/utils.py",
      [
        "LoggingCaptureMixin",
        "setUp"
      ]
    ],
    [
      "tests/admin_changelist/tests.py",
      [
        "SeleniumTests",
        "setUp"
      ]
    ],
    [
      "tests/admin_custom_urls/tests.py",
      [
        "AdminCustomUrlsTest",
        "setUp"
      ]
    ],
    [
      "tests/admin_default_site/tests.py",
      [
        "CustomAdminSiteTests",
        "setUp"
      ]
    ],
    [
      "tests/admin_docs/test_utils.py",
      [
        "TestUtils",
        "setUp"
      ]
    ],
    [
      "tests/admin_docs/test_views.py",
      [
        "AdminDocViewTests",
        "setUp"
      ]
    ],
    [
      "tests/admin_docs/test_views.py",
      [
        "TestModelDetailView",
        "setUp"
      ]
    ],
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "setUp"
      ]
    ],
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInlineMedia",
        "setUp"
      ]
    ],
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInlineProtectedOnDelete",
        "setUp"
      ]
    ],
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInlinePermissions",
        "setUp"
      ]
    ],
    [
      "tests/admin_inlines/tests.py",
      [
        "TestReadOnlyChangeViewInlinePermissions",
        "setUp"
      ]
    ],
    [
      "tests/admin_inlines/tests.py",
      [
        "SeleniumTests",
        "setUp"
      ]
    ],
    [
      "tests/admin_ordering/tests.py",
      [
        "TestRelatedFieldsAdminOrdering",
        "setUp"
      ]
    ],
    [
      "tests/admin_registration/tests.py",
      [
        "TestRegistration",
        "setUp"
      ]
    ],
    [
      "tests/admin_registration/tests.py",
      [
        "TestRegistrationDecorator",
        "setUp"
      ]
    ],
    [
      "tests/admin_scripts/test_django_admin_py.py",
      [
        "DeprecationTests",
        "setUp"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "AdminScriptTestCase",
        "setUp"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminDefaultSettings",
        "setUp"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminFullPathDefaultSettings",
        "setUp"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminMinimalSettings",
        "setUp"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminAlternateSettings",
        "setUp"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminMultipleSettings",
        "setUp"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminSettingsDirectory",
        "setUp"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageDefaultSettings",
        "setUp"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageFullPathDefaultSettings",
        "setUp"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageMinimalSettings",
        "setUp"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageAlternateSettings",
        "setUp"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageMultipleSettings",
        "setUp"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageRunserver",
        "setUp"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageRunserverMigrationWarning",
        "setUp"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageRunserverEmptyAllowedHosts",
        "setUp"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "setUp"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ArgumentOrder",
        "setUp"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "Dumpdata",
        "setUp"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminSuggestions",
        "setUp"
      ]
    ],
    [
      "tests/admin_utils/test_logentry.py",
      [
        "LogEntryTests",
        "setUp"
      ]
    ],
    [
      "tests/admin_utils/tests.py",
      [
        "NestedObjectsTests",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsPermissionTests",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/test_adminsite.py",
      [
        "SiteEachContextTest",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/test_adminsite.py",
      [
        "SiteActionsTests",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/test_autocomplete_view.py",
      [
        "SeleniumTests",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/test_history_view.py",
      [
        "AdminHistoryViewTests",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTestCase",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewFormUrlTest",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminJavaScriptTest",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "SaveAsTests",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewDeletedObjectsTest",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "TestGenericRelations",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewStringPrimaryKeyTest",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewUnicodeTest",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewListEditable",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminSearchTest",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminInheritedInlinesTest",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "TestCustomChangeList",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "TestInlineNotEditable",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminCustomQuerysetTest",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminInlineFileUploadTest",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminInlineTests",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "NeverCacheTests",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "PrePopulatedTest",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "SeleniumTests",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "ReadonlyTest",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "LimitChoicesToInAdminTest",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "RawIdFieldsTest",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "UserAdminTest",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "GroupAdminTest",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "CSSTest",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminDocsTest",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "ValidXHTMLTests",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "DateHierarchyTests",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminCustomSaveRelatedTests",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminUserMessageTest",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminKeepChangeListFiltersTests",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "TestLabelVisibility",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewOnSiteTests",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "InlineAdminViewOnSiteTest",
        "setUp"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "GetFormsetsWithInlinesArgumentTest",
        "setUp"
      ]
    ],
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminForeignKeyWidgetChangeList",
        "setUp"
      ]
    ],
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminForeignKeyRawIdWidget",
        "setUp"
      ]
    ],
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminWidgetSeleniumTestCase",
        "setUp"
      ]
    ],
    [
      "tests/admin_widgets/tests.py",
      [
        "HorizontalVerticalFilterSeleniumTests",
        "setUp"
      ]
    ],
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminRawIdWidgetSeleniumTests",
        "setUp"
      ]
    ],
    [
      "tests/app_loading/tests.py",
      [
        "EggLoadingTest",
        "setUp"
      ]
    ],
    [
      "tests/app_loading/tests.py",
      [
        "GetModelsTest",
        "setUp"
      ]
    ],
    [
      "tests/asgi/tests.py",
      [
        "ASGITest",
        "setUp"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "BaseModelBackendTest",
        "setUp"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "AnonymousUserBackendTest",
        "setUp"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "PermissionDeniedBackendTest",
        "setUp"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "ImproperlyConfiguredUserModelTest",
        "setUp"
      ]
    ],
    [
      "tests/auth_tests/test_hashers.py",
      [
        "BasePasswordHasherTests",
        "setUp"
      ]
    ],
    [
      "tests/auth_tests/test_management.py",
      [
        "GetDefaultUsernameTestCase",
        "setUp"
      ]
    ],
    [
      "tests/auth_tests/test_management.py",
      [
        "ChangepasswordManagementCommandTestCase",
        "setUp"
      ]
    ],
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatePermissionsTests",
        "setUp"
      ]
    ],
    [
      "tests/auth_tests/test_middleware.py",
      [
        "TestAuthenticationMiddleware",
        "setUp"
      ]
    ],
    [
      "tests/auth_tests/test_migrations.py",
      [
        "ProxyModelWithDifferentAppLabelTests",
        "setUp"
      ]
    ],
    [
      "tests/auth_tests/test_migrations.py",
      [
        "ProxyModelWithSameAppLabelTests",
        "setUp"
      ]
    ],
    [
      "tests/auth_tests/test_migrations.py",
      [
        "MultiDBProxyModelAppLabelTests",
        "setUp"
      ]
    ],
    [
      "tests/auth_tests/test_models.py",
      [
        "TestCreateSuperUserSignals",
        "setUp"
      ]
    ],
    [
      "tests/auth_tests/test_models.py",
      [
        "AnonymousUserTests",
        "setUp"
      ]
    ],
    [
      "tests/auth_tests/test_remote_user.py",
      [
        "RemoteUserTest",
        "setUp"
      ]
    ],
    [
      "tests/auth_tests/test_signals.py",
      [
        "SignalTestCase",
        "setUp"
      ]
    ],
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "setUp"
      ]
    ],
    [
      "tests/auth_tests/test_views.py",
      [
        "CustomUserPasswordResetTest",
        "setUp"
      ]
    ],
    [
      "tests/auth_tests/test_views.py",
      [
        "ChangelistTests",
        "setUp"
      ]
    ],
    [
      "tests/backends/base/test_introspection.py",
      [
        "SimpleDatabaseIntrospectionTests",
        "setUp"
      ]
    ],
    [
      "tests/backends/base/test_operations.py",
      [
        "SimpleDatabaseOperationTests",
        "setUp"
      ]
    ],
    [
      "tests/backends/base/test_operations.py",
      [
        "DatabaseOperationTests",
        "setUp"
      ]
    ],
    [
      "tests/backends/test_ddl_references.py",
      [
        "TableTests",
        "setUp"
      ]
    ],
    [
      "tests/backends/test_ddl_references.py",
      [
        "ColumnsTests",
        "setUp"
      ]
    ],
    [
      "tests/backends/test_ddl_references.py",
      [
        "IndexNameTests",
        "setUp"
      ]
    ],
    [
      "tests/backends/test_ddl_references.py",
      [
        "ForeignKeyNameTests",
        "setUp"
      ]
    ],
    [
      "tests/backends/tests.py",
      [
        "FkConstraintsTests",
        "setUp"
      ]
    ],
    [
      "tests/bash_completion/tests.py",
      [
        "BashCompletionTests",
        "setUp"
      ]
    ],
    [
      "tests/bulk_create/tests.py",
      [
        "BulkCreateTests",
        "setUp"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "DBCacheTests",
        "setUp"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "LocMemCacheTests",
        "setUp"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "FileBasedCacheTests",
        "setUp"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "DefaultNonExpiringCacheKeyTests",
        "setUp"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "CacheMiddlewareTest",
        "setUp"
      ]
    ],
    [
      "tests/check_framework/test_translation.py",
      [
        "TranslationCheckTests",
        "setUp"
      ]
    ],
    [
      "tests/check_framework/tests.py",
      [
        "CheckCommandTests",
        "setUp"
      ]
    ],
    [
      "tests/check_framework/tests.py",
      [
        "SilencingCheckTests",
        "setUp"
      ]
    ],
    [
      "tests/contenttypes_tests/test_management.py",
      [
        "RemoveStaleContentTypesTests",
        "setUp"
      ]
    ],
    [
      "tests/contenttypes_tests/test_models.py",
      [
        "ContentTypesTests",
        "setUp"
      ]
    ],
    [
      "tests/contenttypes_tests/test_operations.py",
      [
        "ContentTypeOperationsTests",
        "setUp"
      ]
    ],
    [
      "tests/contenttypes_tests/test_views.py",
      [
        "ContentTypesViewsTests",
        "setUp"
      ]
    ],
    [
      "tests/contenttypes_tests/test_views.py",
      [
        "ContentTypesViewsSiteRelTests",
        "setUp"
      ]
    ],
    [
      "tests/contenttypes_tests/test_views.py",
      [
        "ShortcutViewTests",
        "setUp"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "YearLteTests",
        "setUp"
      ]
    ],
    [
      "tests/defer_regress/tests.py",
      [
        "DeferDeletionSignalsTests",
        "setUp"
      ]
    ],
    [
      "tests/delete/tests.py",
      [
        "OnDeleteTests",
        "setUp"
      ]
    ],
    [
      "tests/delete_regress/tests.py",
      [
        "DeleteLockingTest",
        "setUp"
      ]
    ],
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "setUp"
      ]
    ],
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "setUp"
      ]
    ],
    [
      "tests/file_storage/tests.py",
      [
        "FieldCallableFileStorageTests",
        "setUp"
      ]
    ],
    [
      "tests/file_storage/tests.py",
      [
        "FileSaveRaceConditionTest",
        "setUp"
      ]
    ],
    [
      "tests/file_storage/tests.py",
      [
        "FileStoragePermissions",
        "setUp"
      ]
    ],
    [
      "tests/file_storage/tests.py",
      [
        "FileStoragePathParsing",
        "setUp"
      ]
    ],
    [
      "tests/file_storage/tests.py",
      [
        "ContentFileStorageTestCase",
        "setUp"
      ]
    ],
    [
      "tests/file_storage/tests.py",
      [
        "FileLikeObjectTestCase",
        "setUp"
      ]
    ],
    [
      "tests/file_uploads/tests.py",
      [
        "DirectoryCreationTests",
        "setUp"
      ]
    ],
    [
      "tests/flatpages_tests/test_csrf.py",
      [
        "FlatpageCSRFTests",
        "setUp"
      ]
    ],
    [
      "tests/flatpages_tests/test_forms.py",
      [
        "FlatpageAdminFormTests",
        "setUp"
      ]
    ],
    [
      "tests/flatpages_tests/test_models.py",
      [
        "FlatpageModelTests",
        "setUp"
      ]
    ],
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsetAsTagTests",
        "setUp"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "LocalizedTimeTests",
        "setUp"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "LocalizedDateTests",
        "setUp"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "LocalizedDateTimeTests",
        "setUp"
      ]
    ],
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericAdminViewTest",
        "setUp"
      ]
    ],
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineAdminParametersTest",
        "setUp"
      ]
    ],
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineAdminWithUniqueTogetherTest",
        "setUp"
      ]
    ],
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineModelAdminTest",
        "setUp"
      ]
    ],
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "setUp"
      ]
    ],
    [
      "tests/gis_tests/distapp/tests.py",
      [
        "DistanceTest",
        "setUp"
      ]
    ],
    [
      "tests/gis_tests/gdal_tests/test_envelope.py",
      [
        "EnvelopeTest",
        "setUp"
      ]
    ],
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALRasterTests",
        "setUp"
      ]
    ],
    [
      "tests/gis_tests/gis_migrations/test_operations.py",
      [
        "OperationTests",
        "setUp"
      ]
    ],
    [
      "tests/gis_tests/rasterapp/test_rasterfield.py",
      [
        "RasterFieldTest",
        "setUp"
      ]
    ],
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "SpecializedFieldTest",
        "setUp"
      ]
    ],
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "OSMWidgetTest",
        "setUp"
      ]
    ],
    [
      "tests/gis_tests/utils.py",
      [
        "FuncTestMixin",
        "setUp"
      ]
    ],
    [
      "tests/handlers/tests.py",
      [
        "HandlerTests",
        "setUp"
      ]
    ],
    [
      "tests/handlers/tests.py",
      [
        "SignalsTests",
        "setUp"
      ]
    ],
    [
      "tests/httpwrappers/tests.py",
      [
        "FileCloseTests",
        "setUp"
      ]
    ],
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLTestCaseBase",
        "setUp"
      ]
    ],
    [
      "tests/i18n/test_compilation.py",
      [
        "MultipleLocaleCompilationTests",
        "setUp"
      ]
    ],
    [
      "tests/i18n/test_compilation.py",
      [
        "ExcludedLocaleCompilationTests",
        "setUp"
      ]
    ],
    [
      "tests/i18n/test_compilation.py",
      [
        "IgnoreDirectoryCompilationTests",
        "setUp"
      ]
    ],
    [
      "tests/i18n/test_compilation.py",
      [
        "FuzzyTranslationTest",
        "setUp"
      ]
    ],
    [
      "tests/i18n/test_extraction.py",
      [
        "SymlinkExtractorTests",
        "setUp"
      ]
    ],
    [
      "tests/i18n/test_extraction.py",
      [
        "ExcludedLocaleExtractionTests",
        "setUp"
      ]
    ],
    [
      "tests/i18n/test_percents.py",
      [
        "FrenchTestCase",
        "setUp"
      ]
    ],
    [
      "tests/i18n/test_percents.py",
      [
        "ExtractingStringsWithPercentSigns",
        "setUp"
      ]
    ],
    [
      "tests/i18n/tests.py",
      [
        "TranslationThreadSafetyTests",
        "setUp"
      ]
    ],
    [
      "tests/i18n/tests.py",
      [
        "FormattingTests",
        "setUp"
      ]
    ],
    [
      "tests/i18n/tests.py",
      [
        "ResolutionOrderI18NTests",
        "setUp"
      ]
    ],
    [
      "tests/i18n/tests.py",
      [
        "TranslationFilesMissing",
        "setUp"
      ]
    ],
    [
      "tests/i18n/tests.py",
      [
        "TranslationFileChangedTests",
        "setUp"
      ]
    ],
    [
      "tests/i18n/utils.py",
      [
        "RunInTmpDirMixin",
        "setUp"
      ]
    ],
    [
      "tests/logging_tests/tests.py",
      [
        "SettingsConfigTest",
        "setUp"
      ]
    ],
    [
      "tests/logging_tests/tests.py",
      [
        "SettingsCustomLoggingTest",
        "setUp"
      ]
    ],
    [
      "tests/m2m_signals/tests.py",
      [
        "ManyToManySignalsTest",
        "setUp"
      ]
    ],
    [
      "tests/mail/tests.py",
      [
        "BaseEmailBackendTests",
        "setUp"
      ]
    ],
    [
      "tests/mail/tests.py",
      [
        "FileBackendTests",
        "setUp"
      ]
    ],
    [
      "tests/mail/tests.py",
      [
        "ConsoleBackendTests",
        "setUp"
      ]
    ],
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "setUp"
      ]
    ],
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "setUp"
      ]
    ],
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "setUp"
      ]
    ],
    [
      "tests/many_to_one_null/tests.py",
      [
        "ManyToOneNullTests",
        "setUp"
      ]
    ],
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests",
        "setUp"
      ]
    ],
    [
      "tests/messages_tests/test_api.py",
      [
        "ApiTests",
        "setUp"
      ]
    ],
    [
      "tests/messages_tests/test_api.py",
      [
        "CustomRequestApiTests",
        "setUp"
      ]
    ],
    [
      "tests/middleware/tests.py",
      [
        "BrokenLinkEmailsMiddlewareTest",
        "setUp"
      ]
    ],
    [
      "tests/middleware/tests.py",
      [
        "ConditionalGetMiddlewareTest",
        "setUp"
      ]
    ],
    [
      "tests/middleware/tests.py",
      [
        "GZipMiddlewareTest",
        "setUp"
      ]
    ],
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "setUp"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "RelatedModelsTests",
        "setUp"
      ]
    ],
    [
      "tests/model_fields/test_imagefield.py",
      [
        "ImageFieldTestMixin",
        "setUp"
      ]
    ],
    [
      "tests/model_meta/tests.py",
      [
        "RelationTreeTests",
        "setUp"
      ]
    ],
    [
      "tests/model_options/test_tablespaces.py",
      [
        "TablespacesTests",
        "setUp"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "setUp"
      ]
    ],
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "setUp"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "DefaultManagerTests",
        "setUp"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "LookupOrderingTest",
        "setUp"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "Ticket19607Tests",
        "setUp"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "Ticket21410Tests",
        "setUp"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "Ticket21760Tests",
        "setUp"
      ]
    ],
    [
      "tests/project_template/test_settings.py",
      [
        "TestStartProjectSettings",
        "setUp"
      ]
    ],
    [
      "tests/queries/test_bulk_update.py",
      [
        "BulkUpdateNoteTests",
        "setUp"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "RawQueriesTests",
        "setUp"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "ComparisonTests",
        "setUp"
      ]
    ],
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxMemorySizeFormPostTests",
        "setUp"
      ]
    ],
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxMemorySizeMultipartPostTests",
        "setUp"
      ]
    ],
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxMemorySizeGetTests",
        "setUp"
      ]
    ],
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxNumberOfFieldsMultipartPost",
        "setUp"
      ]
    ],
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxNumberOfFieldsFormPost",
        "setUp"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "setUp"
      ]
    ],
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "setUp"
      ]
    ],
    [
      "tests/serializers/tests.py",
      [
        "SerializerRegistrationTests",
        "setUp"
      ]
    ],
    [
      "tests/serializers/tests.py",
      [
        "SerializersTestBase",
        "setUp"
      ]
    ],
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "setUp"
      ]
    ],
    [
      "tests/sessions_tests/tests.py",
      [
        "FileSessionTests",
        "setUp"
      ]
    ],
    [
      "tests/settings_tests/tests.py",
      [
        "SettingsTests",
        "setUp"
      ]
    ],
    [
      "tests/settings_tests/tests.py",
      [
        "TestComplexSettingOverride",
        "setUp"
      ]
    ],
    [
      "tests/settings_tests/tests.py",
      [
        "OverrideSettingsIsolationOnExceptionTests",
        "setUp"
      ]
    ],
    [
      "tests/signals/tests.py",
      [
        "BaseSignalSetup",
        "setUp"
      ]
    ],
    [
      "tests/signals/tests.py",
      [
        "LazyModelRefTests",
        "setUp"
      ]
    ],
    [
      "tests/sitemaps_tests/base.py",
      [
        "SitemapTestsBase",
        "setUp"
      ]
    ],
    [
      "tests/sites_tests/tests.py",
      [
        "SitesFrameworkTests",
        "setUp"
      ]
    ],
    [
      "tests/sites_tests/tests.py",
      [
        "RequestSiteTests",
        "setUp"
      ]
    ],
    [
      "tests/sites_tests/tests.py",
      [
        "CreateDefaultSiteTests",
        "setUp"
      ]
    ],
    [
      "tests/staticfiles_tests/cases.py",
      [
        "CollectionTestCase",
        "setUp"
      ]
    ],
    [
      "tests/staticfiles_tests/test_finders.py",
      [
        "TestFileSystemFinder",
        "setUp"
      ]
    ],
    [
      "tests/staticfiles_tests/test_finders.py",
      [
        "TestAppDirectoriesFinder",
        "setUp"
      ]
    ],
    [
      "tests/staticfiles_tests/test_finders.py",
      [
        "TestDefaultStorageFinder",
        "setUp"
      ]
    ],
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionFilesOverride",
        "setUp"
      ]
    ],
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestHashedFiles",
        "setUp"
      ]
    ],
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestExtraPatternsStorage",
        "setUp"
      ]
    ],
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestCollectionManifestStorage",
        "setUp"
      ]
    ],
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestCollectionSimpleStorage",
        "setUp"
      ]
    ],
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestStaticFilePermissions",
        "setUp"
      ]
    ],
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestCollectionHashedFilesCache",
        "setUp"
      ]
    ],
    [
      "tests/template_tests/filter_tests/timezone_utils.py",
      [
        "TimezoneTestCase",
        "setUp"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/i18n/base.py",
      [
        "MultipleLocaleActivationTestCase",
        "setUp"
      ]
    ],
    [
      "tests/template_tests/test_engine.py",
      [
        "RenderToStringTest",
        "setUp"
      ]
    ],
    [
      "tests/template_tests/test_library.py",
      [
        "FilterRegistrationTests",
        "setUp"
      ]
    ],
    [
      "tests/template_tests/test_library.py",
      [
        "InclusionTagRegistrationTests",
        "setUp"
      ]
    ],
    [
      "tests/template_tests/test_library.py",
      [
        "SimpleTagRegistrationTests",
        "setUp"
      ]
    ],
    [
      "tests/template_tests/test_library.py",
      [
        "TagRegistrationTests",
        "setUp"
      ]
    ],
    [
      "tests/template_tests/test_loaders.py",
      [
        "CachedLoaderTests",
        "setUp"
      ]
    ],
    [
      "tests/template_tests/test_origin.py",
      [
        "OriginTestCase",
        "setUp"
      ]
    ],
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertFormsetErrorTests",
        "setUp"
      ]
    ],
    [
      "tests/test_runner/tests.py",
      [
        "CustomTestRunnerOptionsSettingsTests",
        "setUp"
      ]
    ],
    [
      "tests/test_runner/tests.py",
      [
        "CustomTestRunnerOptionsCmdlineTests",
        "setUp"
      ]
    ],
    [
      "tests/test_runner/tests.py",
      [
        "Ticket17477RegressionTests",
        "setUp"
      ]
    ],
    [
      "tests/test_runner/tests.py",
      [
        "SetupDatabasesTests",
        "setUp"
      ]
    ],
    [
      "tests/test_utils/test_transactiontestcase.py",
      [
        "TestSerializedRollbackInhibitsPostMigrate",
        "setUp"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "DatabaseAliasTests",
        "setUp"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "AdminTests",
        "setUp"
      ]
    ],
    [
      "tests/transaction_hooks/tests.py",
      [
        "TestConnectionOnCommit",
        "setUp"
      ]
    ],
    [
      "tests/transactions/tests.py",
      [
        "AtomicInsideTransactionTests",
        "setUp"
      ]
    ],
    [
      "tests/transactions/tests.py",
      [
        "AtomicWithoutAutocommitTests",
        "setUp"
      ]
    ],
    [
      "tests/urlpatterns_reverse/test_localeregexdescriptor.py",
      [
        "LocaleRegexDescriptorTests",
        "setUp"
      ]
    ],
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ReverseLazySettingsTest",
        "setUp"
      ]
    ],
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ErrorHandlerResolutionTests",
        "setUp"
      ]
    ],
    [
      "tests/utils_tests/test_archive.py",
      [
        "TestArchive",
        "setUp"
      ]
    ],
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestSysPathDirectories",
        "setUp"
      ]
    ],
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "ReloaderTests",
        "setUp"
      ]
    ],
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "WatchmanReloaderTests",
        "setUp"
      ]
    ],
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "StatReloaderTests",
        "setUp"
      ]
    ],
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "CaseInsensitiveMappingTests",
        "setUp"
      ]
    ],
    [
      "tests/utils_tests/test_dateformat.py",
      [
        "DateFormatTests",
        "setUp"
      ]
    ],
    [
      "tests/utils_tests/test_datetime_safe.py",
      [
        "DatetimeTests",
        "setUp"
      ]
    ],
    [
      "tests/utils_tests/test_module_loading.py",
      [
        "EggLoader",
        "setUp"
      ]
    ],
    [
      "tests/utils_tests/test_module_loading.py",
      [
        "CustomLoader",
        "setUp"
      ]
    ],
    [
      "tests/utils_tests/test_timesince.py",
      [
        "TimesinceTests",
        "setUp"
      ]
    ],
    [
      "tests/utils_tests/test_tree.py",
      [
        "NodeTests",
        "setUp"
      ]
    ],
    [
      "tests/view_tests/tests/test_csrf.py",
      [
        "CsrfViewTests",
        "setUp"
      ]
    ],
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "CustomExceptionReporterFilterTests",
        "setUp"
      ]
    ],
    [
      "tests/view_tests/tests/test_static.py",
      [
        "StaticHelperTest",
        "setUp"
      ]
    ],
    [
      "tests/wsgi/tests.py",
      [
        "WSGITest",
        "setUp"
      ]
    ]
  ],
  "tearDown": [
    [
      "django/test/utils.py",
      [
        "LoggingCaptureMixin",
        "tearDown"
      ]
    ],
    [
      "tests/admin_default_site/tests.py",
      [
        "CustomAdminSiteTests",
        "tearDown"
      ]
    ],
    [
      "tests/admin_ordering/tests.py",
      [
        "TestRelatedFieldsAdminOrdering",
        "tearDown"
      ]
    ],
    [
      "tests/app_loading/tests.py",
      [
        "EggLoadingTest",
        "tearDown"
      ]
    ],
    [
      "tests/asgi/tests.py",
      [
        "ASGITest",
        "tearDown"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "BaseModelBackendTest",
        "tearDown"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "RowlevelBackendTest",
        "tearDown"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "PermissionDeniedBackendTest",
        "tearDown"
      ]
    ],
    [
      "tests/auth_tests/test_management.py",
      [
        "GetDefaultUsernameTestCase",
        "tearDown"
      ]
    ],
    [
      "tests/auth_tests/test_management.py",
      [
        "ChangepasswordManagementCommandTestCase",
        "tearDown"
      ]
    ],
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatePermissionsTests",
        "tearDown"
      ]
    ],
    [
      "tests/auth_tests/test_models.py",
      [
        "TestCreateSuperUserSignals",
        "tearDown"
      ]
    ],
    [
      "tests/auth_tests/test_remote_user.py",
      [
        "RemoteUserTest",
        "tearDown"
      ]
    ],
    [
      "tests/auth_tests/test_signals.py",
      [
        "SignalTestCase",
        "tearDown"
      ]
    ],
    [
      "tests/bash_completion/tests.py",
      [
        "BashCompletionTests",
        "tearDown"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "tearDown"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "DBCacheTests",
        "tearDown"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "FileBasedCacheTests",
        "tearDown"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "DefaultNonExpiringCacheKeyTests",
        "tearDown"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "CacheUtils",
        "tearDown"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "CacheHEADTest",
        "tearDown"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "CacheI18nTest",
        "tearDown"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "CacheMiddlewareTest",
        "tearDown"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "TestWithTemplateResponse",
        "tearDown"
      ]
    ],
    [
      "tests/check_framework/tests.py",
      [
        "CheckCommandTests",
        "tearDown"
      ]
    ],
    [
      "tests/check_framework/tests.py",
      [
        "SilencingCheckTests",
        "tearDown"
      ]
    ],
    [
      "tests/contenttypes_tests/test_models.py",
      [
        "ContentTypesTests",
        "tearDown"
      ]
    ],
    [
      "tests/contenttypes_tests/test_operations.py",
      [
        "ContentTypeOperationsTests",
        "tearDown"
      ]
    ],
    [
      "tests/custom_lookups/tests.py",
      [
        "YearLteTests",
        "tearDown"
      ]
    ],
    [
      "tests/defer_regress/tests.py",
      [
        "DeferDeletionSignalsTests",
        "tearDown"
      ]
    ],
    [
      "tests/delete_regress/tests.py",
      [
        "DeleteLockingTest",
        "tearDown"
      ]
    ],
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "tearDown"
      ]
    ],
    [
      "tests/file_storage/tests.py",
      [
        "FileFieldStorageTests",
        "tearDown"
      ]
    ],
    [
      "tests/file_storage/tests.py",
      [
        "FieldCallableFileStorageTests",
        "tearDown"
      ]
    ],
    [
      "tests/file_storage/tests.py",
      [
        "FileSaveRaceConditionTest",
        "tearDown"
      ]
    ],
    [
      "tests/file_storage/tests.py",
      [
        "FileStoragePermissions",
        "tearDown"
      ]
    ],
    [
      "tests/file_storage/tests.py",
      [
        "FileStoragePathParsing",
        "tearDown"
      ]
    ],
    [
      "tests/file_storage/tests.py",
      [
        "ContentFileStorageTestCase",
        "tearDown"
      ]
    ],
    [
      "tests/file_storage/tests.py",
      [
        "FileLikeObjectTestCase",
        "tearDown"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "LocalizedTimeTests",
        "tearDown"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "LocalizedDateTests",
        "tearDown"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "LocalizedDateTimeTests",
        "tearDown"
      ]
    ],
    [
      "tests/get_earliest_or_latest/tests.py",
      [
        "EarliestOrLatestTests",
        "tearDown"
      ]
    ],
    [
      "tests/gis_tests/gis_migrations/test_operations.py",
      [
        "OperationTestCase",
        "tearDown"
      ]
    ],
    [
      "tests/gis_tests/utils.py",
      [
        "FuncTestMixin",
        "tearDown"
      ]
    ],
    [
      "tests/handlers/tests.py",
      [
        "HandlerTests",
        "tearDown"
      ]
    ],
    [
      "tests/handlers/tests.py",
      [
        "SignalsTests",
        "tearDown"
      ]
    ],
    [
      "tests/httpwrappers/tests.py",
      [
        "FileCloseTests",
        "tearDown"
      ]
    ],
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLTestCaseBase",
        "tearDown"
      ]
    ],
    [
      "tests/i18n/test_percents.py",
      [
        "FrenchTestCase",
        "tearDown"
      ]
    ],
    [
      "tests/i18n/tests.py",
      [
        "TranslationThreadSafetyTests",
        "tearDown"
      ]
    ],
    [
      "tests/i18n/tests.py",
      [
        "ResolutionOrderI18NTests",
        "tearDown"
      ]
    ],
    [
      "tests/i18n/tests.py",
      [
        "TranslationFilesMissing",
        "tearDown"
      ]
    ],
    [
      "tests/i18n/tests.py",
      [
        "TranslationFileChangedTests",
        "tearDown"
      ]
    ],
    [
      "tests/logging_tests/tests.py",
      [
        "SettingsCustomLoggingTest",
        "tearDown"
      ]
    ],
    [
      "tests/m2m_signals/tests.py",
      [
        "ManyToManySignalsTest",
        "tearDown"
      ]
    ],
    [
      "tests/mail/tests.py",
      [
        "BaseEmailBackendTests",
        "tearDown"
      ]
    ],
    [
      "tests/mail/tests.py",
      [
        "LocmemBackendTests",
        "tearDown"
      ]
    ],
    [
      "tests/mail/tests.py",
      [
        "FileBackendTests",
        "tearDown"
      ]
    ],
    [
      "tests/mail/tests.py",
      [
        "ConsoleBackendTests",
        "tearDown"
      ]
    ],
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "tearDown"
      ]
    ],
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests",
        "tearDown"
      ]
    ],
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MiddlewareTests",
        "tearDown"
      ]
    ],
    [
      "tests/migrations/test_base.py",
      [
        "MigrationTestBase",
        "tearDown"
      ]
    ],
    [
      "tests/migrations/test_base.py",
      [
        "OperationTestBase",
        "tearDown"
      ]
    ],
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "tearDown"
      ]
    ],
    [
      "tests/model_fields/test_imagefield.py",
      [
        "ImageFieldTestMixin",
        "tearDown"
      ]
    ],
    [
      "tests/model_options/test_tablespaces.py",
      [
        "TablespacesTests",
        "tearDown"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "tearDown"
      ]
    ],
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "tearDown"
      ]
    ],
    [
      "tests/serializers/tests.py",
      [
        "SerializerRegistrationTests",
        "tearDown"
      ]
    ],
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "tearDown"
      ]
    ],
    [
      "tests/sessions_tests/tests.py",
      [
        "FileSessionTests",
        "tearDown"
      ]
    ],
    [
      "tests/settings_tests/tests.py",
      [
        "SettingsTests",
        "tearDown"
      ]
    ],
    [
      "tests/settings_tests/tests.py",
      [
        "TestComplexSettingOverride",
        "tearDown"
      ]
    ],
    [
      "tests/signals/tests.py",
      [
        "BaseSignalSetup",
        "tearDown"
      ]
    ],
    [
      "tests/sites_tests/tests.py",
      [
        "SitesFrameworkTests",
        "tearDown"
      ]
    ],
    [
      "tests/staticfiles_tests/cases.py",
      [
        "CollectionTestCase",
        "tearDown"
      ]
    ],
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionFilesOverride",
        "tearDown"
      ]
    ],
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestHashedFiles",
        "tearDown"
      ]
    ],
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestCollectionManifestStorage",
        "tearDown"
      ]
    ],
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestStaticFilePermissions",
        "tearDown"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/i18n/base.py",
      [
        "MultipleLocaleActivationTestCase",
        "tearDown"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/test_cache.py",
      [
        "CacheTagTests",
        "tearDown"
      ]
    ],
    [
      "tests/test_utils/test_transactiontestcase.py",
      [
        "TestSerializedRollbackInhibitsPostMigrate",
        "tearDown"
      ]
    ],
    [
      "tests/transactions/tests.py",
      [
        "AtomicInsideTransactionTests",
        "tearDown"
      ]
    ],
    [
      "tests/transactions/tests.py",
      [
        "AtomicWithoutAutocommitTests",
        "tearDown"
      ]
    ],
    [
      "tests/urlpatterns_reverse/test_localeregexdescriptor.py",
      [
        "LocaleRegexDescriptorTests",
        "tearDown"
      ]
    ],
    [
      "tests/utils_tests/test_archive.py",
      [
        "TestArchive",
        "tearDown"
      ]
    ],
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestSysPathDirectories",
        "tearDown"
      ]
    ],
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "ReloaderTests",
        "tearDown"
      ]
    ],
    [
      "tests/utils_tests/test_dateformat.py",
      [
        "DateFormatTests",
        "tearDown"
      ]
    ],
    [
      "tests/utils_tests/test_module_loading.py",
      [
        "EggLoader",
        "tearDown"
      ]
    ],
    [
      "tests/utils_tests/test_module_loading.py",
      [
        "AutodiscoverModulesTestCase",
        "tearDown"
      ]
    ],
    [
      "tests/utils_tests/test_module_loading.py",
      [
        "CustomLoader",
        "tearDown"
      ]
    ],
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "CustomExceptionReporterFilterTests",
        "tearDown"
      ]
    ],
    [
      "tests/view_tests/tests/test_static.py",
      [
        "StaticHelperTest",
        "tearDown"
      ]
    ],
    [
      "tests/wsgi/tests.py",
      [
        "WSGITest",
        "tearDown"
      ]
    ]
  ],
  "clear_url_caches": [
    [
      "django/urls/base.py",
      [
        "clear_url_caches"
      ]
    ]
  ],
  "set_script_prefix": [
    [
      "django/urls/base.py",
      [
        "set_script_prefix"
      ]
    ]
  ],
  "clear_script_prefix": [
    [
      "django/urls/base.py",
      [
        "clear_script_prefix"
      ]
    ]
  ],
  "set_urlconf": [
    [
      "django/urls/base.py",
      [
        "set_urlconf"
      ]
    ]
  ],
  "get_urlconf": [
    [
      "django/urls/base.py",
      [
        "get_urlconf"
      ]
    ]
  ],
  "is_valid_path": [
    [
      "django/urls/base.py",
      [
        "is_valid_path"
      ]
    ]
  ],
  "translate_url": [
    [
      "django/urls/base.py",
      [
        "translate_url"
      ]
    ]
  ],
  "include": [
    [
      "django/urls/conf.py",
      [
        "include"
      ]
    ]
  ],
  "_path": [
    [
      "django/urls/conf.py",
      [
        "_path"
      ]
    ],
    [
      "tests/staticfiles_tests/storage.py",
      [
        "PathNotImplementedStorage",
        "_path"
      ]
    ]
  ],
  "to_url": [
    [
      "django/urls/converters.py",
      [
        "IntConverter",
        "to_url"
      ]
    ],
    [
      "django/urls/converters.py",
      [
        "StringConverter",
        "to_url"
      ]
    ],
    [
      "django/urls/converters.py",
      [
        "UUIDConverter",
        "to_url"
      ]
    ],
    [
      "tests/urlpatterns/converters.py",
      [
        "Base64Converter",
        "to_url"
      ]
    ],
    [
      "tests/urlpatterns/converters.py",
      [
        "DynamicConverter",
        "to_url"
      ]
    ]
  ],
  "register_converter": [
    [
      "django/urls/converters.py",
      [
        "register_converter"
      ]
    ]
  ],
  "get_converter": [
    [
      "django/urls/converters.py",
      [
        "get_converter"
      ]
    ]
  ],
  "get_resolver": [
    [
      "django/urls/resolvers.py",
      [
        "get_resolver"
      ]
    ]
  ],
  "_get_cached_resolver": [
    [
      "django/urls/resolvers.py",
      [
        "_get_cached_resolver"
      ]
    ]
  ],
  "get_ns_resolver": [
    [
      "django/urls/resolvers.py",
      [
        "get_ns_resolver"
      ]
    ]
  ],
  "_check_pattern_startswith_slash": [
    [
      "django/urls/resolvers.py",
      [
        "CheckURLMixin",
        "_check_pattern_startswith_slash"
      ]
    ]
  ],
  "_check_include_trailing_dollar": [
    [
      "django/urls/resolvers.py",
      [
        "RegexPattern",
        "_check_include_trailing_dollar"
      ]
    ]
  ],
  "_compile": [
    [
      "django/urls/resolvers.py",
      [
        "RegexPattern",
        "_compile"
      ]
    ],
    [
      "django/urls/resolvers.py",
      [
        "RoutePattern",
        "_compile"
      ]
    ]
  ],
  "_route_to_regex": [
    [
      "django/urls/resolvers.py",
      [
        "_route_to_regex"
      ]
    ]
  ],
  "regex": [
    [
      "django/urls/resolvers.py",
      [
        "LocalePrefixPattern",
        "regex"
      ]
    ],
    [
      "tests/urlpatterns/converters.py",
      [
        "DynamicConverter",
        "regex"
      ]
    ]
  ],
  "language_prefix": [
    [
      "django/urls/resolvers.py",
      [
        "LocalePrefixPattern",
        "language_prefix"
      ]
    ]
  ],
  "_check_pattern_name": [
    [
      "django/urls/resolvers.py",
      [
        "URLPattern",
        "_check_pattern_name"
      ]
    ]
  ],
  "lookup_str": [
    [
      "django/urls/resolvers.py",
      [
        "URLPattern",
        "lookup_str"
      ]
    ]
  ],
  "_check_custom_error_handlers": [
    [
      "django/urls/resolvers.py",
      [
        "URLResolver",
        "_check_custom_error_handlers"
      ]
    ]
  ],
  "_populate": [
    [
      "django/urls/resolvers.py",
      [
        "URLResolver",
        "_populate"
      ]
    ]
  ],
  "reverse_dict": [
    [
      "django/urls/resolvers.py",
      [
        "URLResolver",
        "reverse_dict"
      ]
    ]
  ],
  "namespace_dict": [
    [
      "django/urls/resolvers.py",
      [
        "URLResolver",
        "namespace_dict"
      ]
    ]
  ],
  "app_dict": [
    [
      "django/urls/resolvers.py",
      [
        "URLResolver",
        "app_dict"
      ]
    ]
  ],
  "_join_route": [
    [
      "django/urls/resolvers.py",
      [
        "URLResolver",
        "_join_route"
      ]
    ]
  ],
  "_is_callback": [
    [
      "django/urls/resolvers.py",
      [
        "URLResolver",
        "_is_callback"
      ]
    ]
  ],
  "urlconf_module": [
    [
      "django/urls/resolvers.py",
      [
        "URLResolver",
        "urlconf_module"
      ]
    ]
  ],
  "url_patterns": [
    [
      "django/urls/resolvers.py",
      [
        "URLResolver",
        "url_patterns"
      ]
    ]
  ],
  "resolve_error_handler": [
    [
      "django/urls/resolvers.py",
      [
        "URLResolver",
        "resolve_error_handler"
      ]
    ]
  ],
  "_reverse_with_prefix": [
    [
      "django/urls/resolvers.py",
      [
        "URLResolver",
        "_reverse_with_prefix"
      ]
    ]
  ],
  "get_callable": [
    [
      "django/urls/utils.py",
      [
        "get_callable"
      ]
    ]
  ],
  "get_mod_func": [
    [
      "django/urls/utils.py",
      [
        "get_mod_func"
      ]
    ]
  ],
  "safe_join": [
    [
      "django/utils/_os.py",
      [
        "safe_join"
      ]
    ]
  ],
  "symlinks_supported": [
    [
      "django/utils/_os.py",
      [
        "symlinks_supported"
      ]
    ]
  ],
  "to_path": [
    [
      "django/utils/_os.py",
      [
        "to_path"
      ]
    ]
  ],
  "_archive_cls": [
    [
      "django/utils/archive.py",
      [
        "Archive",
        "_archive_cls"
      ]
    ]
  ],
  "_copy_permissions": [
    [
      "django/utils/archive.py",
      [
        "BaseArchive",
        "_copy_permissions"
      ]
    ]
  ],
  "split_leading_dir": [
    [
      "django/utils/archive.py",
      [
        "BaseArchive",
        "split_leading_dir"
      ]
    ]
  ],
  "has_leading_dir": [
    [
      "django/utils/archive.py",
      [
        "BaseArchive",
        "has_leading_dir"
      ]
    ]
  ],
  "async_unsafe": [
    [
      "django/utils/asyncio.py",
      [
        "async_unsafe"
      ]
    ]
  ],
  "check_errors": [
    [
      "django/utils/autoreload.py",
      [
        "check_errors"
      ]
    ]
  ],
  "raise_last_exception": [
    [
      "django/utils/autoreload.py",
      [
        "raise_last_exception"
      ]
    ]
  ],
  "ensure_echo_on": [
    [
      "django/utils/autoreload.py",
      [
        "ensure_echo_on"
      ]
    ]
  ],
  "iter_all_python_module_files": [
    [
      "django/utils/autoreload.py",
      [
        "iter_all_python_module_files"
      ]
    ]
  ],
  "iter_modules_and_files": [
    [
      "django/utils/autoreload.py",
      [
        "iter_modules_and_files"
      ]
    ]
  ],
  "_walk": [
    [
      "django/utils/autoreload.py",
      [
        "common_roots",
        "_walk"
      ]
    ]
  ],
  "common_roots": [
    [
      "django/utils/autoreload.py",
      [
        "common_roots"
      ]
    ]
  ],
  "sys_path_directories": [
    [
      "django/utils/autoreload.py",
      [
        "sys_path_directories"
      ]
    ]
  ],
  "get_child_arguments": [
    [
      "django/utils/autoreload.py",
      [
        "get_child_arguments"
      ]
    ]
  ],
  "trigger_reload": [
    [
      "django/utils/autoreload.py",
      [
        "trigger_reload"
      ]
    ]
  ],
  "restart_with_reloader": [
    [
      "django/utils/autoreload.py",
      [
        "restart_with_reloader"
      ]
    ]
  ],
  "watch_dir": [
    [
      "django/utils/autoreload.py",
      [
        "BaseReloader",
        "watch_dir"
      ]
    ]
  ],
  "watched_files": [
    [
      "django/utils/autoreload.py",
      [
        "BaseReloader",
        "watched_files"
      ]
    ]
  ],
  "wait_for_apps_ready": [
    [
      "django/utils/autoreload.py",
      [
        "BaseReloader",
        "wait_for_apps_ready"
      ]
    ]
  ],
  "run_loop": [
    [
      "django/utils/autoreload.py",
      [
        "BaseReloader",
        "run_loop"
      ]
    ]
  ],
  "tick": [
    [
      "django/utils/autoreload.py",
      [
        "BaseReloader",
        "tick"
      ]
    ],
    [
      "django/utils/autoreload.py",
      [
        "StatReloader",
        "tick"
      ]
    ],
    [
      "django/utils/autoreload.py",
      [
        "WatchmanReloader",
        "tick"
      ]
    ]
  ],
  "check_availability": [
    [
      "django/utils/autoreload.py",
      [
        "BaseReloader",
        "check_availability"
      ]
    ],
    [
      "django/utils/autoreload.py",
      [
        "StatReloader",
        "check_availability"
      ]
    ],
    [
      "django/utils/autoreload.py",
      [
        "WatchmanReloader",
        "check_availability"
      ]
    ]
  ],
  "notify_file_changed": [
    [
      "django/utils/autoreload.py",
      [
        "BaseReloader",
        "notify_file_changed"
      ]
    ]
  ],
  "should_stop": [
    [
      "django/utils/autoreload.py",
      [
        "BaseReloader",
        "should_stop"
      ]
    ]
  ],
  "snapshot_files": [
    [
      "django/utils/autoreload.py",
      [
        "StatReloader",
        "snapshot_files"
      ]
    ]
  ],
  "client": [
    [
      "django/utils/autoreload.py",
      [
        "WatchmanReloader",
        "client"
      ]
    ],
    [
      "tests/template_tests/views.py",
      [
        "client"
      ]
    ]
  ],
  "_watch_root": [
    [
      "django/utils/autoreload.py",
      [
        "WatchmanReloader",
        "_watch_root"
      ]
    ]
  ],
  "_get_clock": [
    [
      "django/utils/autoreload.py",
      [
        "WatchmanReloader",
        "_get_clock"
      ]
    ]
  ],
  "_subscribe": [
    [
      "django/utils/autoreload.py",
      [
        "WatchmanReloader",
        "_subscribe"
      ]
    ]
  ],
  "_subscribe_dir": [
    [
      "django/utils/autoreload.py",
      [
        "WatchmanReloader",
        "_subscribe_dir"
      ]
    ]
  ],
  "_watch_glob": [
    [
      "django/utils/autoreload.py",
      [
        "WatchmanReloader",
        "_watch_glob"
      ]
    ]
  ],
  "watched_roots": [
    [
      "django/utils/autoreload.py",
      [
        "WatchmanReloader",
        "watched_roots"
      ]
    ]
  ],
  "_update_watches": [
    [
      "django/utils/autoreload.py",
      [
        "WatchmanReloader",
        "_update_watches"
      ]
    ]
  ],
  "update_watches": [
    [
      "django/utils/autoreload.py",
      [
        "WatchmanReloader",
        "update_watches"
      ]
    ]
  ],
  "_check_subscription": [
    [
      "django/utils/autoreload.py",
      [
        "WatchmanReloader",
        "_check_subscription"
      ]
    ]
  ],
  "request_processed": [
    [
      "django/utils/autoreload.py",
      [
        "WatchmanReloader",
        "request_processed"
      ]
    ]
  ],
  "check_server_status": [
    [
      "django/utils/autoreload.py",
      [
        "WatchmanReloader",
        "check_server_status"
      ]
    ]
  ],
  "get_reloader": [
    [
      "django/utils/autoreload.py",
      [
        "get_reloader"
      ]
    ]
  ],
  "start_django": [
    [
      "django/utils/autoreload.py",
      [
        "start_django"
      ]
    ]
  ],
  "run_with_reloader": [
    [
      "django/utils/autoreload.py",
      [
        "run_with_reloader"
      ]
    ]
  ],
  "convert": [
    [
      "django/utils/baseconv.py",
      [
        "BaseConverter",
        "convert"
      ]
    ]
  ],
  "dictitem": [
    [
      "django/utils/cache.py",
      [
        "patch_cache_control",
        "dictitem"
      ]
    ]
  ],
  "dictvalue": [
    [
      "django/utils/cache.py",
      [
        "patch_cache_control",
        "dictvalue"
      ]
    ]
  ],
  "patch_cache_control": [
    [
      "django/utils/cache.py",
      [
        "patch_cache_control"
      ]
    ]
  ],
  "get_max_age": [
    [
      "django/utils/cache.py",
      [
        "get_max_age"
      ]
    ]
  ],
  "set_response_etag": [
    [
      "django/utils/cache.py",
      [
        "set_response_etag"
      ]
    ]
  ],
  "_precondition_failed": [
    [
      "django/utils/cache.py",
      [
        "_precondition_failed"
      ]
    ]
  ],
  "_not_modified": [
    [
      "django/utils/cache.py",
      [
        "_not_modified"
      ]
    ]
  ],
  "get_conditional_response": [
    [
      "django/utils/cache.py",
      [
        "get_conditional_response"
      ]
    ]
  ],
  "_if_match_passes": [
    [
      "django/utils/cache.py",
      [
        "_if_match_passes"
      ]
    ]
  ],
  "_if_unmodified_since_passes": [
    [
      "django/utils/cache.py",
      [
        "_if_unmodified_since_passes"
      ]
    ]
  ],
  "_if_none_match_passes": [
    [
      "django/utils/cache.py",
      [
        "_if_none_match_passes"
      ]
    ]
  ],
  "_if_modified_since_passes": [
    [
      "django/utils/cache.py",
      [
        "_if_modified_since_passes"
      ]
    ]
  ],
  "patch_response_headers": [
    [
      "django/utils/cache.py",
      [
        "patch_response_headers"
      ]
    ]
  ],
  "add_never_cache_headers": [
    [
      "django/utils/cache.py",
      [
        "add_never_cache_headers"
      ]
    ]
  ],
  "patch_vary_headers": [
    [
      "django/utils/cache.py",
      [
        "patch_vary_headers"
      ]
    ]
  ],
  "has_vary_header": [
    [
      "django/utils/cache.py",
      [
        "has_vary_header"
      ]
    ]
  ],
  "_i18n_cache_key_suffix": [
    [
      "django/utils/cache.py",
      [
        "_i18n_cache_key_suffix"
      ]
    ]
  ],
  "_generate_cache_key": [
    [
      "django/utils/cache.py",
      [
        "_generate_cache_key"
      ]
    ]
  ],
  "_generate_cache_header_key": [
    [
      "django/utils/cache.py",
      [
        "_generate_cache_header_key"
      ]
    ]
  ],
  "get_cache_key": [
    [
      "django/utils/cache.py",
      [
        "get_cache_key"
      ]
    ]
  ],
  "learn_cache_key": [
    [
      "django/utils/cache.py",
      [
        "learn_cache_key"
      ]
    ]
  ],
  "_to_tuple": [
    [
      "django/utils/cache.py",
      [
        "_to_tuple"
      ]
    ]
  ],
  "salted_hmac": [
    [
      "django/utils/crypto.py",
      [
        "salted_hmac"
      ]
    ]
  ],
  "get_random_string": [
    [
      "django/utils/crypto.py",
      [
        "get_random_string"
      ]
    ]
  ],
  "constant_time_compare": [
    [
      "django/utils/crypto.py",
      [
        "constant_time_compare"
      ]
    ]
  ],
  "pbkdf2": [
    [
      "django/utils/crypto.py",
      [
        "pbkdf2"
      ]
    ]
  ],
  "discard": [
    [
      "django/utils/datastructures.py",
      [
        "OrderedSet",
        "discard"
      ]
    ]
  ],
  "_getlist": [
    [
      "django/utils/datastructures.py",
      [
        "MultiValueDict",
        "_getlist"
      ]
    ]
  ],
  "getlist": [
    [
      "django/utils/datastructures.py",
      [
        "MultiValueDict",
        "getlist"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "MultiValueDictLike",
        "getlist"
      ]
    ]
  ],
  "lists": [
    [
      "django/utils/datastructures.py",
      [
        "MultiValueDict",
        "lists"
      ]
    ]
  ],
  "dict": [
    [
      "django/utils/datastructures.py",
      [
        "MultiValueDict",
        "dict"
      ]
    ]
  ],
  "_destruct_iterable_mapping_values": [
    [
      "django/utils/datastructures.py",
      [
        "_destruct_iterable_mapping_values"
      ]
    ]
  ],
  "format": [
    [
      "django/utils/dateformat.py",
      [
        "Formatter",
        "format"
      ]
    ],
    [
      "django/utils/dateformat.py",
      [
        "format"
      ]
    ],
    [
      "django/utils/log.py",
      [
        "ServerFormatter",
        "format"
      ]
    ],
    [
      "django/utils/numberformat.py",
      [
        "format"
      ]
    ],
    [
      "django/utils/translation/__init__.py",
      [
        "lazy_number",
        "if_isinstance_number_int",
        "else_",
        "NumberAwareString",
        "format"
      ]
    ]
  ],
  "a": [
    [
      "django/utils/dateformat.py",
      [
        "TimeFormat",
        "a"
      ]
    ],
    [
      "tests/dispatch/tests.py",
      [
        "Callable",
        "a"
      ]
    ]
  ],
  "A": [
    [
      "django/utils/dateformat.py",
      [
        "TimeFormat",
        "A"
      ]
    ]
  ],
  "e": [
    [
      "django/utils/dateformat.py",
      [
        "TimeFormat",
        "e"
      ]
    ]
  ],
  "f": [
    [
      "django/utils/dateformat.py",
      [
        "TimeFormat",
        "f"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "f"
      ]
    ],
    [
      "tests/check_framework/tests.py",
      [
        "SystemCheckFrameworkTests",
        "test_register_and_run_checks",
        "f"
      ]
    ]
  ],
  "g": [
    [
      "django/utils/dateformat.py",
      [
        "TimeFormat",
        "g"
      ]
    ]
  ],
  "G": [
    [
      "django/utils/dateformat.py",
      [
        "TimeFormat",
        "G"
      ]
    ]
  ],
  "h": [
    [
      "django/utils/dateformat.py",
      [
        "TimeFormat",
        "h"
      ]
    ]
  ],
  "H": [
    [
      "django/utils/dateformat.py",
      [
        "TimeFormat",
        "H"
      ]
    ]
  ],
  "i": [
    [
      "django/utils/dateformat.py",
      [
        "TimeFormat",
        "i"
      ]
    ]
  ],
  "O": [
    [
      "django/utils/dateformat.py",
      [
        "TimeFormat",
        "O"
      ]
    ]
  ],
  "P": [
    [
      "django/utils/dateformat.py",
      [
        "TimeFormat",
        "P"
      ]
    ]
  ],
  "s": [
    [
      "django/utils/dateformat.py",
      [
        "TimeFormat",
        "s"
      ]
    ]
  ],
  "T": [
    [
      "django/utils/dateformat.py",
      [
        "TimeFormat",
        "T"
      ]
    ]
  ],
  "u": [
    [
      "django/utils/dateformat.py",
      [
        "TimeFormat",
        "u"
      ]
    ]
  ],
  "Z": [
    [
      "django/utils/dateformat.py",
      [
        "TimeFormat",
        "Z"
      ]
    ]
  ],
  "b": [
    [
      "django/utils/dateformat.py",
      [
        "DateFormat",
        "b"
      ]
    ],
    [
      "tests/template_tests/utils.py",
      [
        "SilentAttrClass",
        "b"
      ]
    ]
  ],
  "c": [
    [
      "django/utils/dateformat.py",
      [
        "DateFormat",
        "c"
      ]
    ]
  ],
  "d": [
    [
      "django/utils/dateformat.py",
      [
        "DateFormat",
        "d"
      ]
    ]
  ],
  "D": [
    [
      "django/utils/dateformat.py",
      [
        "DateFormat",
        "D"
      ]
    ]
  ],
  "E": [
    [
      "django/utils/dateformat.py",
      [
        "DateFormat",
        "E"
      ]
    ]
  ],
  "F": [
    [
      "django/utils/dateformat.py",
      [
        "DateFormat",
        "F"
      ]
    ]
  ],
  "I": [
    [
      "django/utils/dateformat.py",
      [
        "DateFormat",
        "I"
      ]
    ]
  ],
  "j": [
    [
      "django/utils/dateformat.py",
      [
        "DateFormat",
        "j"
      ]
    ]
  ],
  "l": [
    [
      "django/utils/dateformat.py",
      [
        "DateFormat",
        "l"
      ]
    ]
  ],
  "L": [
    [
      "django/utils/dateformat.py",
      [
        "DateFormat",
        "L"
      ]
    ]
  ],
  "m": [
    [
      "django/utils/dateformat.py",
      [
        "DateFormat",
        "m"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "C",
        "m"
      ]
    ]
  ],
  "M": [
    [
      "django/utils/dateformat.py",
      [
        "DateFormat",
        "M"
      ]
    ]
  ],
  "n": [
    [
      "django/utils/dateformat.py",
      [
        "DateFormat",
        "n"
      ]
    ]
  ],
  "N": [
    [
      "django/utils/dateformat.py",
      [
        "DateFormat",
        "N"
      ]
    ]
  ],
  "o": [
    [
      "django/utils/dateformat.py",
      [
        "DateFormat",
        "o"
      ]
    ]
  ],
  "r": [
    [
      "django/utils/dateformat.py",
      [
        "DateFormat",
        "r"
      ]
    ]
  ],
  "S": [
    [
      "django/utils/dateformat.py",
      [
        "DateFormat",
        "S"
      ]
    ]
  ],
  "t": [
    [
      "django/utils/dateformat.py",
      [
        "DateFormat",
        "t"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "TemplateTests",
        "test_localtime_templatetag_and_filters",
        "t"
      ]
    ]
  ],
  "U": [
    [
      "django/utils/dateformat.py",
      [
        "DateFormat",
        "U"
      ]
    ]
  ],
  "w": [
    [
      "django/utils/dateformat.py",
      [
        "DateFormat",
        "w"
      ]
    ]
  ],
  "W": [
    [
      "django/utils/dateformat.py",
      [
        "DateFormat",
        "W"
      ]
    ]
  ],
  "Y": [
    [
      "django/utils/dateformat.py",
      [
        "DateFormat",
        "Y"
      ]
    ]
  ],
  "time_format": [
    [
      "django/utils/dateformat.py",
      [
        "time_format"
      ]
    ],
    [
      "django/utils/formats.py",
      [
        "time_format"
      ]
    ]
  ],
  "parse_date": [
    [
      "django/utils/dateparse.py",
      [
        "parse_date"
      ]
    ]
  ],
  "parse_time": [
    [
      "django/utils/dateparse.py",
      [
        "parse_time"
      ]
    ]
  ],
  "parse_datetime": [
    [
      "django/utils/dateparse.py",
      [
        "parse_datetime"
      ]
    ]
  ],
  "parse_duration": [
    [
      "django/utils/dateparse.py",
      [
        "parse_duration"
      ]
    ]
  ],
  "strftime": [
    [
      "django/utils/datetime_safe.py",
      [
        "date",
        "strftime"
      ]
    ],
    [
      "django/utils/datetime_safe.py",
      [
        "datetime",
        "strftime"
      ]
    ],
    [
      "django/utils/datetime_safe.py",
      [
        "strftime"
      ]
    ]
  ],
  "new_date": [
    [
      "django/utils/datetime_safe.py",
      [
        "new_date"
      ]
    ]
  ],
  "new_datetime": [
    [
      "django/utils/datetime_safe.py",
      [
        "new_datetime"
      ]
    ]
  ],
  "_findall": [
    [
      "django/utils/datetime_safe.py",
      [
        "_findall"
      ]
    ]
  ],
  "deconstructible": [
    [
      "django/utils/deconstruct.py",
      [
        "deconstructible"
      ]
    ]
  ],
  "_update_method_wrapper": [
    [
      "django/utils/decorators.py",
      [
        "_update_method_wrapper"
      ]
    ]
  ],
  "_wrapper": [
    [
      "django/utils/decorators.py",
      [
        "_multi_decorate",
        "_wrapper"
      ]
    ]
  ],
  "_multi_decorate": [
    [
      "django/utils/decorators.py",
      [
        "_multi_decorate"
      ]
    ]
  ],
  "_dec": [
    [
      "django/utils/decorators.py",
      [
        "method_decorator",
        "_dec"
      ]
    ]
  ],
  "method_decorator": [
    [
      "django/utils/decorators.py",
      [
        "method_decorator"
      ]
    ]
  ],
  "decorator_from_middleware_with_args": [
    [
      "django/utils/decorators.py",
      [
        "decorator_from_middleware_with_args"
      ]
    ]
  ],
  "decorator_from_middleware": [
    [
      "django/utils/decorators.py",
      [
        "decorator_from_middleware"
      ]
    ]
  ],
  "_wrapped_view": [
    [
      "django/utils/decorators.py",
      [
        "make_middleware_decorator",
        "_make_decorator",
        "_decorator",
        "_wrapped_view"
      ]
    ]
  ],
  "_decorator": [
    [
      "django/utils/decorators.py",
      [
        "make_middleware_decorator",
        "_make_decorator",
        "_decorator"
      ]
    ]
  ],
  "_make_decorator": [
    [
      "django/utils/decorators.py",
      [
        "make_middleware_decorator",
        "_make_decorator"
      ]
    ]
  ],
  "make_middleware_decorator": [
    [
      "django/utils/decorators.py",
      [
        "make_middleware_decorator"
      ]
    ]
  ],
  "sync_and_async_middleware": [
    [
      "django/utils/decorators.py",
      [
        "sync_and_async_middleware"
      ]
    ]
  ],
  "sync_only_middleware": [
    [
      "django/utils/decorators.py",
      [
        "sync_only_middleware"
      ]
    ]
  ],
  "async_only_middleware": [
    [
      "django/utils/decorators.py",
      [
        "async_only_middleware"
      ]
    ]
  ],
  "_async_check": [
    [
      "django/utils/deprecation.py",
      [
        "MiddlewareMixin",
        "_async_check"
      ]
    ]
  ],
  "__acall__": [
    [
      "django/utils/deprecation.py",
      [
        "MiddlewareMixin",
        "__acall__"
      ]
    ]
  ],
  "_get_response_none_deprecation": [
    [
      "django/utils/deprecation.py",
      [
        "MiddlewareMixin",
        "_get_response_none_deprecation"
      ]
    ]
  ],
  "_get_duration_components": [
    [
      "django/utils/duration.py",
      [
        "_get_duration_components"
      ]
    ]
  ],
  "duration_string": [
    [
      "django/utils/duration.py",
      [
        "duration_string"
      ]
    ]
  ],
  "duration_iso_string": [
    [
      "django/utils/duration.py",
      [
        "duration_iso_string"
      ]
    ]
  ],
  "duration_microseconds": [
    [
      "django/utils/duration.py",
      [
        "duration_microseconds"
      ]
    ]
  ],
  "smart_str": [
    [
      "django/utils/encoding.py",
      [
        "smart_str"
      ]
    ]
  ],
  "is_protected_type": [
    [
      "django/utils/encoding.py",
      [
        "is_protected_type"
      ]
    ]
  ],
  "force_str": [
    [
      "django/utils/encoding.py",
      [
        "force_str"
      ]
    ]
  ],
  "smart_bytes": [
    [
      "django/utils/encoding.py",
      [
        "smart_bytes"
      ]
    ]
  ],
  "force_bytes": [
    [
      "django/utils/encoding.py",
      [
        "force_bytes"
      ]
    ]
  ],
  "smart_text": [
    [
      "django/utils/encoding.py",
      [
        "smart_text"
      ]
    ]
  ],
  "force_text": [
    [
      "django/utils/encoding.py",
      [
        "force_text"
      ]
    ]
  ],
  "iri_to_uri": [
    [
      "django/utils/encoding.py",
      [
        "iri_to_uri"
      ]
    ]
  ],
  "uri_to_iri": [
    [
      "django/utils/encoding.py",
      [
        "uri_to_iri"
      ]
    ]
  ],
  "escape_uri_path": [
    [
      "django/utils/encoding.py",
      [
        "escape_uri_path"
      ]
    ]
  ],
  "punycode": [
    [
      "django/utils/encoding.py",
      [
        "punycode"
      ]
    ]
  ],
  "repercent_broken_unicode": [
    [
      "django/utils/encoding.py",
      [
        "repercent_broken_unicode"
      ]
    ]
  ],
  "filepath_to_uri": [
    [
      "django/utils/encoding.py",
      [
        "filepath_to_uri"
      ]
    ]
  ],
  "get_system_encoding": [
    [
      "django/utils/encoding.py",
      [
        "get_system_encoding"
      ]
    ]
  ],
  "rfc2822_date": [
    [
      "django/utils/feedgenerator.py",
      [
        "rfc2822_date"
      ]
    ]
  ],
  "rfc3339_date": [
    [
      "django/utils/feedgenerator.py",
      [
        "rfc3339_date"
      ]
    ]
  ],
  "get_tag_uri": [
    [
      "django/utils/feedgenerator.py",
      [
        "get_tag_uri"
      ]
    ]
  ],
  "to_str": [
    [
      "django/utils/feedgenerator.py",
      [
        "SyndicationFeed",
        "add_item",
        "to_str"
      ]
    ]
  ],
  "add_item": [
    [
      "django/utils/feedgenerator.py",
      [
        "SyndicationFeed",
        "add_item"
      ]
    ]
  ],
  "num_items": [
    [
      "django/utils/feedgenerator.py",
      [
        "SyndicationFeed",
        "num_items"
      ]
    ]
  ],
  "item_attributes": [
    [
      "django/utils/feedgenerator.py",
      [
        "SyndicationFeed",
        "item_attributes"
      ]
    ],
    [
      "tests/syndication_tests/feeds.py",
      [
        "MyCustomAtom1Feed",
        "item_attributes"
      ]
    ]
  ],
  "writeString": [
    [
      "django/utils/feedgenerator.py",
      [
        "SyndicationFeed",
        "writeString"
      ]
    ]
  ],
  "latest_post_date": [
    [
      "django/utils/feedgenerator.py",
      [
        "SyndicationFeed",
        "latest_post_date"
      ]
    ]
  ],
  "write_items": [
    [
      "django/utils/feedgenerator.py",
      [
        "RssFeed",
        "write_items"
      ]
    ],
    [
      "django/utils/feedgenerator.py",
      [
        "Atom1Feed",
        "write_items"
      ]
    ]
  ],
  "endChannelElement": [
    [
      "django/utils/feedgenerator.py",
      [
        "RssFeed",
        "endChannelElement"
      ]
    ]
  ],
  "reset_format_cache": [
    [
      "django/utils/formats.py",
      [
        "reset_format_cache"
      ]
    ]
  ],
  "iter_format_modules": [
    [
      "django/utils/formats.py",
      [
        "iter_format_modules"
      ]
    ]
  ],
  "get_format_modules": [
    [
      "django/utils/formats.py",
      [
        "get_format_modules"
      ]
    ]
  ],
  "get_format": [
    [
      "django/utils/formats.py",
      [
        "get_format"
      ]
    ]
  ],
  "date_format": [
    [
      "django/utils/formats.py",
      [
        "date_format"
      ]
    ]
  ],
  "number_format": [
    [
      "django/utils/formats.py",
      [
        "number_format"
      ]
    ]
  ],
  "localize_input": [
    [
      "django/utils/formats.py",
      [
        "localize_input"
      ]
    ]
  ],
  "sanitize_separators": [
    [
      "django/utils/formats.py",
      [
        "sanitize_separators"
      ]
    ]
  ],
  "__set_name__": [
    [
      "django/utils/functional.py",
      [
        "cached_property",
        "__set_name__"
      ]
    ]
  ],
  "getter": [
    [
      "django/utils/functional.py",
      [
        "classproperty",
        "getter"
      ]
    ]
  ],
  "__prepare_class__": [
    [
      "django/utils/functional.py",
      [
        "lazy",
        "__proxy__",
        "__prepare_class__"
      ]
    ]
  ],
  "__promise__": [
    [
      "django/utils/functional.py",
      [
        "lazy",
        "__proxy__",
        "__promise__"
      ]
    ]
  ],
  "__text_cast": [
    [
      "django/utils/functional.py",
      [
        "lazy",
        "__proxy__",
        "__text_cast"
      ]
    ]
  ],
  "__bytes_cast": [
    [
      "django/utils/functional.py",
      [
        "lazy",
        "__proxy__",
        "__bytes_cast"
      ]
    ]
  ],
  "__bytes_cast_encoded": [
    [
      "django/utils/functional.py",
      [
        "lazy",
        "__proxy__",
        "__bytes_cast_encoded"
      ]
    ]
  ],
  "__cast": [
    [
      "django/utils/functional.py",
      [
        "lazy",
        "__proxy__",
        "__cast"
      ]
    ]
  ],
  "__wrapper__": [
    [
      "django/utils/functional.py",
      [
        "lazy",
        "__wrapper__"
      ]
    ]
  ],
  "lazy": [
    [
      "django/utils/functional.py",
      [
        "lazy"
      ]
    ]
  ],
  "_lazy_proxy_unpickle": [
    [
      "django/utils/functional.py",
      [
        "_lazy_proxy_unpickle"
      ]
    ]
  ],
  "lazystr": [
    [
      "django/utils/functional.py",
      [
        "lazystr"
      ]
    ]
  ],
  "keep_lazy": [
    [
      "django/utils/functional.py",
      [
        "keep_lazy"
      ]
    ]
  ],
  "keep_lazy_text": [
    [
      "django/utils/functional.py",
      [
        "keep_lazy_text"
      ]
    ]
  ],
  "new_method_proxy": [
    [
      "django/utils/functional.py",
      [
        "new_method_proxy"
      ]
    ]
  ],
  "unpickle_lazyobject": [
    [
      "django/utils/functional.py",
      [
        "unpickle_lazyobject"
      ]
    ]
  ],
  "partition": [
    [
      "django/utils/functional.py",
      [
        "partition"
      ]
    ]
  ],
  "make_hashable": [
    [
      "django/utils/hashable.py",
      [
        "make_hashable"
      ]
    ]
  ],
  "escape": [
    [
      "django/utils/html.py",
      [
        "escape"
      ]
    ]
  ],
  "escapejs": [
    [
      "django/utils/html.py",
      [
        "escapejs"
      ]
    ]
  ],
  "conditional_escape": [
    [
      "django/utils/html.py",
      [
        "conditional_escape"
      ]
    ]
  ],
  "format_html": [
    [
      "django/utils/html.py",
      [
        "format_html"
      ]
    ]
  ],
  "format_html_join": [
    [
      "django/utils/html.py",
      [
        "format_html_join"
      ]
    ]
  ],
  "linebreaks": [
    [
      "django/utils/html.py",
      [
        "linebreaks"
      ]
    ]
  ],
  "handle_entityref": [
    [
      "django/utils/html.py",
      [
        "MLStripper",
        "handle_entityref"
      ]
    ]
  ],
  "handle_charref": [
    [
      "django/utils/html.py",
      [
        "MLStripper",
        "handle_charref"
      ]
    ]
  ],
  "get_data": [
    [
      "django/utils/html.py",
      [
        "MLStripper",
        "get_data"
      ]
    ]
  ],
  "_strip_once": [
    [
      "django/utils/html.py",
      [
        "_strip_once"
      ]
    ]
  ],
  "strip_tags": [
    [
      "django/utils/html.py",
      [
        "strip_tags"
      ]
    ]
  ],
  "strip_spaces_between_tags": [
    [
      "django/utils/html.py",
      [
        "strip_spaces_between_tags"
      ]
    ]
  ],
  "unquote_quote": [
    [
      "django/utils/html.py",
      [
        "smart_urlquote",
        "unquote_quote"
      ]
    ]
  ],
  "smart_urlquote": [
    [
      "django/utils/html.py",
      [
        "smart_urlquote"
      ]
    ]
  ],
  "trim_url": [
    [
      "django/utils/html.py",
      [
        "urlize",
        "trim_url"
      ]
    ]
  ],
  "trim_punctuation": [
    [
      "django/utils/html.py",
      [
        "urlize",
        "trim_punctuation"
      ]
    ]
  ],
  "is_email_simple": [
    [
      "django/utils/html.py",
      [
        "urlize",
        "is_email_simple"
      ]
    ]
  ],
  "avoid_wrapping": [
    [
      "django/utils/html.py",
      [
        "avoid_wrapping"
      ]
    ]
  ],
  "html_safe": [
    [
      "django/utils/html.py",
      [
        "html_safe"
      ]
    ]
  ],
  "urlquote": [
    [
      "django/utils/http.py",
      [
        "urlquote"
      ]
    ]
  ],
  "urlquote_plus": [
    [
      "django/utils/http.py",
      [
        "urlquote_plus"
      ]
    ]
  ],
  "urlunquote": [
    [
      "django/utils/http.py",
      [
        "urlunquote"
      ]
    ]
  ],
  "urlunquote_plus": [
    [
      "django/utils/http.py",
      [
        "urlunquote_plus"
      ]
    ]
  ],
  "http_date": [
    [
      "django/utils/http.py",
      [
        "http_date"
      ]
    ]
  ],
  "parse_http_date": [
    [
      "django/utils/http.py",
      [
        "parse_http_date"
      ]
    ]
  ],
  "parse_http_date_safe": [
    [
      "django/utils/http.py",
      [
        "parse_http_date_safe"
      ]
    ]
  ],
  "base36_to_int": [
    [
      "django/utils/http.py",
      [
        "base36_to_int"
      ]
    ]
  ],
  "int_to_base36": [
    [
      "django/utils/http.py",
      [
        "int_to_base36"
      ]
    ]
  ],
  "urlsafe_base64_encode": [
    [
      "django/utils/http.py",
      [
        "urlsafe_base64_encode"
      ]
    ]
  ],
  "urlsafe_base64_decode": [
    [
      "django/utils/http.py",
      [
        "urlsafe_base64_decode"
      ]
    ]
  ],
  "parse_etags": [
    [
      "django/utils/http.py",
      [
        "parse_etags"
      ]
    ]
  ],
  "quote_etag": [
    [
      "django/utils/http.py",
      [
        "quote_etag"
      ]
    ]
  ],
  "is_same_domain": [
    [
      "django/utils/http.py",
      [
        "is_same_domain"
      ]
    ]
  ],
  "url_has_allowed_host_and_scheme": [
    [
      "django/utils/http.py",
      [
        "url_has_allowed_host_and_scheme"
      ]
    ]
  ],
  "is_safe_url": [
    [
      "django/utils/http.py",
      [
        "is_safe_url"
      ]
    ]
  ],
  "_urlparse": [
    [
      "django/utils/http.py",
      [
        "_urlparse"
      ]
    ]
  ],
  "_urlsplit": [
    [
      "django/utils/http.py",
      [
        "_urlsplit"
      ]
    ]
  ],
  "_url_has_allowed_host_and_scheme": [
    [
      "django/utils/http.py",
      [
        "_url_has_allowed_host_and_scheme"
      ]
    ]
  ],
  "limited_parse_qsl": [
    [
      "django/utils/http.py",
      [
        "limited_parse_qsl"
      ]
    ]
  ],
  "escape_leading_slashes": [
    [
      "django/utils/http.py",
      [
        "escape_leading_slashes"
      ]
    ]
  ],
  "get_func_args": [
    [
      "django/utils/inspect.py",
      [
        "get_func_args"
      ]
    ]
  ],
  "get_func_full_args": [
    [
      "django/utils/inspect.py",
      [
        "get_func_full_args"
      ]
    ]
  ],
  "func_accepts_kwargs": [
    [
      "django/utils/inspect.py",
      [
        "func_accepts_kwargs"
      ]
    ]
  ],
  "func_accepts_var_args": [
    [
      "django/utils/inspect.py",
      [
        "func_accepts_var_args"
      ]
    ]
  ],
  "method_has_no_args": [
    [
      "django/utils/inspect.py",
      [
        "method_has_no_args"
      ]
    ]
  ],
  "func_supports_parameter": [
    [
      "django/utils/inspect.py",
      [
        "func_supports_parameter"
      ]
    ]
  ],
  "clean_ipv6_address": [
    [
      "django/utils/ipv6.py",
      [
        "clean_ipv6_address"
      ]
    ]
  ],
  "is_valid_ipv6_address": [
    [
      "django/utils/ipv6.py",
      [
        "is_valid_ipv6_address"
      ]
    ]
  ],
  "is_iterable": [
    [
      "django/utils/itercompat.py",
      [
        "is_iterable"
      ]
    ]
  ],
  "literals": [
    [
      "django/utils/jslex.py",
      [
        "literals"
      ]
    ]
  ],
  "lex": [
    [
      "django/utils/jslex.py",
      [
        "Lexer",
        "lex"
      ]
    ]
  ],
  "escape_quotes": [
    [
      "django/utils/jslex.py",
      [
        "prepare_js_for_gettext",
        "escape_quotes"
      ]
    ]
  ],
  "prepare_js_for_gettext": [
    [
      "django/utils/jslex.py",
      [
        "prepare_js_for_gettext"
      ]
    ]
  ],
  "configure_logging": [
    [
      "django/utils/log.py",
      [
        "configure_logging"
      ]
    ]
  ],
  "emit": [
    [
      "django/utils/log.py",
      [
        "AdminEmailHandler",
        "emit"
      ]
    ]
  ],
  "connection": [
    [
      "django/utils/log.py",
      [
        "AdminEmailHandler",
        "connection"
      ]
    ]
  ],
  "format_subject": [
    [
      "django/utils/log.py",
      [
        "AdminEmailHandler",
        "format_subject"
      ]
    ]
  ],
  "uses_server_time": [
    [
      "django/utils/log.py",
      [
        "ServerFormatter",
        "uses_server_time"
      ]
    ]
  ],
  "log_response": [
    [
      "django/utils/log.py",
      [
        "log_response"
      ]
    ]
  ],
  "sentence": [
    [
      "django/utils/lorem_ipsum.py",
      [
        "sentence"
      ]
    ]
  ],
  "paragraph": [
    [
      "django/utils/lorem_ipsum.py",
      [
        "paragraph"
      ]
    ]
  ],
  "paragraphs": [
    [
      "django/utils/lorem_ipsum.py",
      [
        "paragraphs"
      ]
    ]
  ],
  "words": [
    [
      "django/utils/lorem_ipsum.py",
      [
        "words"
      ]
    ],
    [
      "django/utils/text.py",
      [
        "Truncator",
        "words"
      ]
    ]
  ],
  "import_string": [
    [
      "django/utils/module_loading.py",
      [
        "import_string"
      ]
    ]
  ],
  "autodiscover_modules": [
    [
      "django/utils/module_loading.py",
      [
        "autodiscover_modules"
      ]
    ]
  ],
  "module_has_submodule": [
    [
      "django/utils/module_loading.py",
      [
        "module_has_submodule"
      ]
    ]
  ],
  "module_dir": [
    [
      "django/utils/module_loading.py",
      [
        "module_dir"
      ]
    ]
  ],
  "next_char": [
    [
      "django/utils/regex_helper.py",
      [
        "next_char"
      ]
    ]
  ],
  "walk_to_end": [
    [
      "django/utils/regex_helper.py",
      [
        "walk_to_end"
      ]
    ]
  ],
  "get_quantifier": [
    [
      "django/utils/regex_helper.py",
      [
        "get_quantifier"
      ]
    ]
  ],
  "flatten_result": [
    [
      "django/utils/regex_helper.py",
      [
        "flatten_result"
      ]
    ]
  ],
  "_lazy_re_compile": [
    [
      "django/utils/regex_helper.py",
      [
        "_lazy_re_compile"
      ]
    ]
  ],
  "__html__": [
    [
      "django/utils/safestring.py",
      [
        "SafeData",
        "__html__"
      ]
    ],
    [
      "tests/utils_tests/test_safestring.py",
      [
        "customescape",
        "__html__"
      ]
    ]
  ],
  "_safety_decorator": [
    [
      "django/utils/safestring.py",
      [
        "_safety_decorator"
      ]
    ]
  ],
  "mark_safe": [
    [
      "django/utils/safestring.py",
      [
        "mark_safe"
      ]
    ]
  ],
  "colorize": [
    [
      "django/utils/termcolors.py",
      [
        "colorize"
      ]
    ]
  ],
  "parse_color_setting": [
    [
      "django/utils/termcolors.py",
      [
        "parse_color_setting"
      ]
    ]
  ],
  "_generator": [
    [
      "django/utils/text.py",
      [
        "wrap",
        "_generator"
      ]
    ]
  ],
  "add_truncation_text": [
    [
      "django/utils/text.py",
      [
        "Truncator",
        "add_truncation_text"
      ]
    ]
  ],
  "chars": [
    [
      "django/utils/text.py",
      [
        "Truncator",
        "chars"
      ]
    ]
  ],
  "_text_chars": [
    [
      "django/utils/text.py",
      [
        "Truncator",
        "_text_chars"
      ]
    ]
  ],
  "_text_words": [
    [
      "django/utils/text.py",
      [
        "Truncator",
        "_text_words"
      ]
    ]
  ],
  "_truncate_html": [
    [
      "django/utils/text.py",
      [
        "Truncator",
        "_truncate_html"
      ]
    ]
  ],
  "get_valid_filename": [
    [
      "django/utils/text.py",
      [
        "get_valid_filename"
      ]
    ]
  ],
  "get_text_list": [
    [
      "django/utils/text.py",
      [
        "get_text_list"
      ]
    ]
  ],
  "normalize_newlines": [
    [
      "django/utils/text.py",
      [
        "normalize_newlines"
      ]
    ]
  ],
  "phone2numeric": [
    [
      "django/utils/text.py",
      [
        "phone2numeric"
      ]
    ]
  ],
  "compress_string": [
    [
      "django/utils/text.py",
      [
        "compress_string"
      ]
    ]
  ],
  "compress_sequence": [
    [
      "django/utils/text.py",
      [
        "compress_sequence"
      ]
    ]
  ],
  "smart_split": [
    [
      "django/utils/text.py",
      [
        "smart_split"
      ]
    ]
  ],
  "_replace_entity": [
    [
      "django/utils/text.py",
      [
        "_replace_entity"
      ]
    ]
  ],
  "unescape_entities": [
    [
      "django/utils/text.py",
      [
        "unescape_entities"
      ]
    ]
  ],
  "unescape_string_literal": [
    [
      "django/utils/text.py",
      [
        "unescape_string_literal"
      ]
    ]
  ],
  "camel_case_to_spaces": [
    [
      "django/utils/text.py",
      [
        "camel_case_to_spaces"
      ]
    ]
  ],
  "_format_lazy": [
    [
      "django/utils/text.py",
      [
        "_format_lazy"
      ]
    ]
  ],
  "timesince": [
    [
      "django/utils/timesince.py",
      [
        "timesince"
      ]
    ]
  ],
  "timeuntil": [
    [
      "django/utils/timesince.py",
      [
        "timeuntil"
      ]
    ]
  ],
  "get_fixed_timezone": [
    [
      "django/utils/timezone.py",
      [
        "get_fixed_timezone"
      ]
    ]
  ],
  "get_default_timezone": [
    [
      "django/utils/timezone.py",
      [
        "get_default_timezone"
      ]
    ]
  ],
  "get_default_timezone_name": [
    [
      "django/utils/timezone.py",
      [
        "get_default_timezone_name"
      ]
    ]
  ],
  "get_current_timezone": [
    [
      "django/utils/timezone.py",
      [
        "get_current_timezone"
      ]
    ]
  ],
  "get_current_timezone_name": [
    [
      "django/utils/timezone.py",
      [
        "get_current_timezone_name"
      ]
    ]
  ],
  "_get_timezone_name": [
    [
      "django/utils/timezone.py",
      [
        "_get_timezone_name"
      ]
    ]
  ],
  "activate": [
    [
      "django/utils/timezone.py",
      [
        "activate"
      ]
    ],
    [
      "django/utils/translation/__init__.py",
      [
        "activate"
      ]
    ],
    [
      "django/utils/translation/trans_null.py",
      [
        "activate"
      ]
    ],
    [
      "django/utils/translation/trans_real.py",
      [
        "activate"
      ]
    ]
  ],
  "deactivate": [
    [
      "django/utils/timezone.py",
      [
        "deactivate"
      ]
    ],
    [
      "django/utils/translation/__init__.py",
      [
        "deactivate"
      ]
    ],
    [
      "django/utils/translation/trans_null.py",
      [
        "deactivate"
      ]
    ],
    [
      "django/utils/translation/trans_real.py",
      [
        "deactivate"
      ]
    ]
  ],
  "template_localtime": [
    [
      "django/utils/timezone.py",
      [
        "template_localtime"
      ]
    ]
  ],
  "localdate": [
    [
      "django/utils/timezone.py",
      [
        "localdate"
      ]
    ]
  ],
  "is_aware": [
    [
      "django/utils/timezone.py",
      [
        "is_aware"
      ]
    ]
  ],
  "is_naive": [
    [
      "django/utils/timezone.py",
      [
        "is_naive"
      ]
    ]
  ],
  "make_aware": [
    [
      "django/utils/timezone.py",
      [
        "make_aware"
      ]
    ]
  ],
  "make_naive": [
    [
      "django/utils/timezone.py",
      [
        "make_naive"
      ]
    ]
  ],
  "topological_sort_as_sets": [
    [
      "django/utils/topological_sort.py",
      [
        "topological_sort_as_sets"
      ]
    ]
  ],
  "stable_topological_sort": [
    [
      "django/utils/topological_sort.py",
      [
        "stable_topological_sort"
      ]
    ]
  ],
  "ugettext_noop": [
    [
      "django/utils/translation/__init__.py",
      [
        "ugettext_noop"
      ]
    ]
  ],
  "gettext": [
    [
      "django/utils/translation/__init__.py",
      [
        "gettext"
      ]
    ],
    [
      "django/utils/translation/trans_null.py",
      [
        "gettext"
      ]
    ],
    [
      "django/utils/translation/trans_real.py",
      [
        "gettext"
      ]
    ]
  ],
  "ugettext": [
    [
      "django/utils/translation/__init__.py",
      [
        "ugettext"
      ]
    ]
  ],
  "ngettext": [
    [
      "django/utils/translation/__init__.py",
      [
        "ngettext"
      ]
    ],
    [
      "django/utils/translation/trans_null.py",
      [
        "ngettext"
      ]
    ],
    [
      "django/utils/translation/trans_real.py",
      [
        "DjangoTranslation",
        "ngettext"
      ]
    ],
    [
      "django/utils/translation/trans_real.py",
      [
        "ngettext"
      ]
    ]
  ],
  "ungettext": [
    [
      "django/utils/translation/__init__.py",
      [
        "ungettext"
      ]
    ]
  ],
  "pgettext": [
    [
      "django/utils/translation/__init__.py",
      [
        "pgettext"
      ]
    ],
    [
      "django/utils/translation/trans_null.py",
      [
        "pgettext"
      ]
    ],
    [
      "django/utils/translation/trans_real.py",
      [
        "pgettext"
      ]
    ]
  ],
  "npgettext": [
    [
      "django/utils/translation/__init__.py",
      [
        "npgettext"
      ]
    ],
    [
      "django/utils/translation/trans_null.py",
      [
        "npgettext"
      ]
    ],
    [
      "django/utils/translation/trans_real.py",
      [
        "npgettext"
      ]
    ]
  ],
  "ugettext_lazy": [
    [
      "django/utils/translation/__init__.py",
      [
        "ugettext_lazy"
      ]
    ]
  ],
  "_get_number_value": [
    [
      "django/utils/translation/__init__.py",
      [
        "lazy_number",
        "if_isinstance_number_int",
        "else_",
        "NumberAwareString",
        "_get_number_value"
      ]
    ]
  ],
  "_translate": [
    [
      "django/utils/translation/__init__.py",
      [
        "lazy_number",
        "if_isinstance_number_int",
        "else_",
        "NumberAwareString",
        "_translate"
      ]
    ]
  ],
  "lazy_number": [
    [
      "django/utils/translation/__init__.py",
      [
        "lazy_number"
      ]
    ]
  ],
  "_lazy_number_unpickle": [
    [
      "django/utils/translation/__init__.py",
      [
        "_lazy_number_unpickle"
      ]
    ]
  ],
  "ngettext_lazy": [
    [
      "django/utils/translation/__init__.py",
      [
        "ngettext_lazy"
      ]
    ]
  ],
  "ungettext_lazy": [
    [
      "django/utils/translation/__init__.py",
      [
        "ungettext_lazy"
      ]
    ]
  ],
  "npgettext_lazy": [
    [
      "django/utils/translation/__init__.py",
      [
        "npgettext_lazy"
      ]
    ]
  ],
  "get_language": [
    [
      "django/utils/translation/__init__.py",
      [
        "get_language"
      ]
    ],
    [
      "django/utils/translation/trans_null.py",
      [
        "get_language"
      ]
    ],
    [
      "django/utils/translation/trans_real.py",
      [
        "get_language"
      ]
    ]
  ],
  "get_language_bidi": [
    [
      "django/utils/translation/__init__.py",
      [
        "get_language_bidi"
      ]
    ],
    [
      "django/utils/translation/trans_null.py",
      [
        "get_language_bidi"
      ]
    ],
    [
      "django/utils/translation/trans_real.py",
      [
        "get_language_bidi"
      ]
    ]
  ],
  "check_for_language": [
    [
      "django/utils/translation/__init__.py",
      [
        "check_for_language"
      ]
    ],
    [
      "django/utils/translation/trans_null.py",
      [
        "check_for_language"
      ]
    ],
    [
      "django/utils/translation/trans_real.py",
      [
        "check_for_language"
      ]
    ]
  ],
  "to_language": [
    [
      "django/utils/translation/__init__.py",
      [
        "to_language"
      ]
    ],
    [
      "django/utils/translation/trans_real.py",
      [
        "DjangoTranslation",
        "to_language"
      ]
    ]
  ],
  "to_locale": [
    [
      "django/utils/translation/__init__.py",
      [
        "to_locale"
      ]
    ]
  ],
  "get_language_from_request": [
    [
      "django/utils/translation/__init__.py",
      [
        "get_language_from_request"
      ]
    ],
    [
      "django/utils/translation/trans_null.py",
      [
        "get_language_from_request"
      ]
    ],
    [
      "django/utils/translation/trans_real.py",
      [
        "get_language_from_request"
      ]
    ]
  ],
  "get_language_from_path": [
    [
      "django/utils/translation/__init__.py",
      [
        "get_language_from_path"
      ]
    ],
    [
      "django/utils/translation/trans_null.py",
      [
        "get_language_from_path"
      ]
    ],
    [
      "django/utils/translation/trans_real.py",
      [
        "get_language_from_path"
      ]
    ]
  ],
  "get_supported_language_variant": [
    [
      "django/utils/translation/__init__.py",
      [
        "get_supported_language_variant"
      ]
    ],
    [
      "django/utils/translation/trans_null.py",
      [
        "get_supported_language_variant"
      ]
    ],
    [
      "django/utils/translation/trans_real.py",
      [
        "get_supported_language_variant"
      ]
    ]
  ],
  "templatize": [
    [
      "django/utils/translation/__init__.py",
      [
        "templatize"
      ]
    ],
    [
      "django/utils/translation/template.py",
      [
        "templatize"
      ]
    ]
  ],
  "deactivate_all": [
    [
      "django/utils/translation/__init__.py",
      [
        "deactivate_all"
      ]
    ],
    [
      "django/utils/translation/trans_real.py",
      [
        "deactivate_all"
      ]
    ]
  ],
  "trim_whitespace": [
    [
      "django/utils/translation/__init__.py",
      [
        "trim_whitespace"
      ]
    ]
  ],
  "round_away_from_one": [
    [
      "django/utils/translation/__init__.py",
      [
        "round_away_from_one"
      ]
    ]
  ],
  "watch_for_translation_changes": [
    [
      "django/utils/translation/reloader.py",
      [
        "watch_for_translation_changes"
      ]
    ]
  ],
  "translation_file_changed": [
    [
      "django/utils/translation/reloader.py",
      [
        "translation_file_changed"
      ]
    ]
  ],
  "blankout": [
    [
      "django/utils/translation/template.py",
      [
        "blankout"
      ]
    ]
  ],
  "join_tokens": [
    [
      "django/utils/translation/template.py",
      [
        "templatize",
        "join_tokens"
      ]
    ]
  ],
  "reset_cache": [
    [
      "django/utils/translation/trans_real.py",
      [
        "reset_cache"
      ]
    ]
  ],
  "plural": [
    [
      "django/utils/translation/trans_real.py",
      [
        "TranslationCatalog",
        "plural"
      ]
    ]
  ],
  "_new_gnu_trans": [
    [
      "django/utils/translation/trans_real.py",
      [
        "DjangoTranslation",
        "_new_gnu_trans"
      ]
    ]
  ],
  "_init_translation_catalog": [
    [
      "django/utils/translation/trans_real.py",
      [
        "DjangoTranslation",
        "_init_translation_catalog"
      ]
    ]
  ],
  "_add_installed_apps_translations": [
    [
      "django/utils/translation/trans_real.py",
      [
        "DjangoTranslation",
        "_add_installed_apps_translations"
      ]
    ]
  ],
  "_add_local_translations": [
    [
      "django/utils/translation/trans_real.py",
      [
        "DjangoTranslation",
        "_add_local_translations"
      ]
    ]
  ],
  "_add_fallback": [
    [
      "django/utils/translation/trans_real.py",
      [
        "DjangoTranslation",
        "_add_fallback"
      ]
    ]
  ],
  "translation": [
    [
      "django/utils/translation/trans_real.py",
      [
        "translation"
      ]
    ]
  ],
  "catalog": [
    [
      "django/utils/translation/trans_real.py",
      [
        "catalog"
      ]
    ]
  ],
  "do_ntranslate": [
    [
      "django/utils/translation/trans_real.py",
      [
        "do_ntranslate"
      ]
    ]
  ],
  "all_locale_paths": [
    [
      "django/utils/translation/trans_real.py",
      [
        "all_locale_paths"
      ]
    ]
  ],
  "get_languages": [
    [
      "django/utils/translation/trans_real.py",
      [
        "get_languages"
      ]
    ]
  ],
  "parse_accept_lang_header": [
    [
      "django/utils/translation/trans_real.py",
      [
        "parse_accept_lang_header"
      ]
    ]
  ],
  "_new_instance": [
    [
      "django/utils/tree.py",
      [
        "Node",
        "_new_instance"
      ]
    ]
  ],
  "negate": [
    [
      "django/utils/tree.py",
      [
        "Node",
        "negate"
      ]
    ]
  ],
  "get_main_version": [
    [
      "django/utils/version.py",
      [
        "get_main_version"
      ]
    ]
  ],
  "get_complete_version": [
    [
      "django/utils/version.py",
      [
        "get_complete_version"
      ]
    ]
  ],
  "get_docs_version": [
    [
      "django/utils/version.py",
      [
        "get_docs_version"
      ]
    ]
  ],
  "get_git_changeset": [
    [
      "django/utils/version.py",
      [
        "get_git_changeset"
      ]
    ]
  ],
  "get_version_tuple": [
    [
      "django/utils/version.py",
      [
        "get_version_tuple"
      ]
    ]
  ],
  "addQuickElement": [
    [
      "django/utils/xmlutils.py",
      [
        "SimplerXMLGenerator",
        "addQuickElement"
      ]
    ]
  ],
  "characters": [
    [
      "django/utils/xmlutils.py",
      [
        "SimplerXMLGenerator",
        "characters"
      ]
    ]
  ],
  "startElement": [
    [
      "django/utils/xmlutils.py",
      [
        "SimplerXMLGenerator",
        "startElement"
      ]
    ]
  ],
  "csrf_failure": [
    [
      "django/views/csrf.py",
      [
        "csrf_failure"
      ]
    ]
  ],
  "technical_500_response": [
    [
      "django/views/debug.py",
      [
        "technical_500_response"
      ]
    ]
  ],
  "get_default_exception_reporter_filter": [
    [
      "django/views/debug.py",
      [
        "get_default_exception_reporter_filter"
      ]
    ]
  ],
  "get_exception_reporter_filter": [
    [
      "django/views/debug.py",
      [
        "get_exception_reporter_filter"
      ]
    ]
  ],
  "get_exception_reporter_class": [
    [
      "django/views/debug.py",
      [
        "get_exception_reporter_class"
      ]
    ]
  ],
  "cleanse_setting": [
    [
      "django/views/debug.py",
      [
        "SafeExceptionReporterFilter",
        "cleanse_setting"
      ]
    ]
  ],
  "get_safe_settings": [
    [
      "django/views/debug.py",
      [
        "SafeExceptionReporterFilter",
        "get_safe_settings"
      ]
    ]
  ],
  "get_safe_request_meta": [
    [
      "django/views/debug.py",
      [
        "SafeExceptionReporterFilter",
        "get_safe_request_meta"
      ]
    ]
  ],
  "is_active": [
    [
      "django/views/debug.py",
      [
        "SafeExceptionReporterFilter",
        "is_active"
      ]
    ]
  ],
  "get_cleansed_multivaluedict": [
    [
      "django/views/debug.py",
      [
        "SafeExceptionReporterFilter",
        "get_cleansed_multivaluedict"
      ]
    ]
  ],
  "get_post_parameters": [
    [
      "django/views/debug.py",
      [
        "SafeExceptionReporterFilter",
        "get_post_parameters"
      ]
    ],
    [
      "tests/view_tests/views.py",
      [
        "UnsafeExceptionReporterFilter",
        "get_post_parameters"
      ]
    ]
  ],
  "cleanse_special_types": [
    [
      "django/views/debug.py",
      [
        "SafeExceptionReporterFilter",
        "cleanse_special_types"
      ]
    ]
  ],
  "get_traceback_frame_variables": [
    [
      "django/views/debug.py",
      [
        "SafeExceptionReporterFilter",
        "get_traceback_frame_variables"
      ]
    ],
    [
      "tests/view_tests/views.py",
      [
        "UnsafeExceptionReporterFilter",
        "get_traceback_frame_variables"
      ]
    ]
  ],
  "get_traceback_data": [
    [
      "django/views/debug.py",
      [
        "ExceptionReporter",
        "get_traceback_data"
      ]
    ]
  ],
  "get_traceback_html": [
    [
      "django/views/debug.py",
      [
        "ExceptionReporter",
        "get_traceback_html"
      ]
    ],
    [
      "tests/view_tests/views.py",
      [
        "CustomExceptionReporter",
        "get_traceback_html"
      ]
    ]
  ],
  "get_traceback_text": [
    [
      "django/views/debug.py",
      [
        "ExceptionReporter",
        "get_traceback_text"
      ]
    ],
    [
      "tests/logging_tests/logconfig.py",
      [
        "CustomExceptionReporter",
        "get_traceback_text"
      ]
    ]
  ],
  "_get_source": [
    [
      "django/views/debug.py",
      [
        "ExceptionReporter",
        "_get_source"
      ]
    ]
  ],
  "_get_lines_from_file": [
    [
      "django/views/debug.py",
      [
        "ExceptionReporter",
        "_get_lines_from_file"
      ]
    ]
  ],
  "explicit_or_implicit_cause": [
    [
      "django/views/debug.py",
      [
        "ExceptionReporter",
        "get_traceback_frames",
        "explicit_or_implicit_cause"
      ]
    ]
  ],
  "get_traceback_frames": [
    [
      "django/views/debug.py",
      [
        "ExceptionReporter",
        "get_traceback_frames"
      ]
    ]
  ],
  "technical_404_response": [
    [
      "django/views/debug.py",
      [
        "technical_404_response"
      ]
    ]
  ],
  "default_urlconf": [
    [
      "django/views/debug.py",
      [
        "default_urlconf"
      ]
    ]
  ],
  "cache_page": [
    [
      "django/views/decorators/cache.py",
      [
        "cache_page"
      ]
    ]
  ],
  "cache_control": [
    [
      "django/views/decorators/cache.py",
      [
        "cache_control"
      ]
    ]
  ],
  "never_cache": [
    [
      "django/views/decorators/cache.py",
      [
        "never_cache"
      ]
    ]
  ],
  "xframe_options_deny": [
    [
      "django/views/decorators/clickjacking.py",
      [
        "xframe_options_deny"
      ]
    ]
  ],
  "xframe_options_sameorigin": [
    [
      "django/views/decorators/clickjacking.py",
      [
        "xframe_options_sameorigin"
      ]
    ]
  ],
  "xframe_options_exempt": [
    [
      "django/views/decorators/clickjacking.py",
      [
        "xframe_options_exempt"
      ]
    ]
  ],
  "csrf_exempt": [
    [
      "django/views/decorators/csrf.py",
      [
        "csrf_exempt"
      ]
    ]
  ],
  "sensitive_variables": [
    [
      "django/views/decorators/debug.py",
      [
        "sensitive_variables"
      ]
    ]
  ],
  "sensitive_post_parameters": [
    [
      "django/views/decorators/debug.py",
      [
        "sensitive_post_parameters"
      ]
    ]
  ],
  "require_http_methods": [
    [
      "django/views/decorators/http.py",
      [
        "require_http_methods"
      ]
    ]
  ],
  "get_last_modified": [
    [
      "django/views/decorators/http.py",
      [
        "condition",
        "decorator",
        "inner",
        "get_last_modified"
      ]
    ]
  ],
  "condition": [
    [
      "django/views/decorators/http.py",
      [
        "condition"
      ]
    ]
  ],
  "etag": [
    [
      "django/views/decorators/http.py",
      [
        "etag"
      ]
    ]
  ],
  "last_modified": [
    [
      "django/views/decorators/http.py",
      [
        "last_modified"
      ]
    ]
  ],
  "vary_on_headers": [
    [
      "django/views/decorators/vary.py",
      [
        "vary_on_headers"
      ]
    ]
  ],
  "vary_on_cookie": [
    [
      "django/views/decorators/vary.py",
      [
        "vary_on_cookie"
      ]
    ]
  ],
  "page_not_found": [
    [
      "django/views/defaults.py",
      [
        "page_not_found"
      ]
    ]
  ],
  "server_error": [
    [
      "django/views/defaults.py",
      [
        "server_error"
      ]
    ],
    [
      "tests/middleware_exceptions/views.py",
      [
        "server_error"
      ]
    ]
  ],
  "bad_request": [
    [
      "django/views/defaults.py",
      [
        "bad_request"
      ]
    ]
  ],
  "permission_denied": [
    [
      "django/views/defaults.py",
      [
        "permission_denied"
      ]
    ],
    [
      "tests/logging_tests/views.py",
      [
        "permission_denied"
      ]
    ],
    [
      "tests/middleware_exceptions/views.py",
      [
        "permission_denied"
      ]
    ]
  ],
  "view": [
    [
      "django/views/generic/base.py",
      [
        "View",
        "as_view",
        "view"
      ]
    ],
    [
      "tests/urlpatterns_reverse/nonimported_module.py",
      [
        "view"
      ]
    ]
  ],
  "as_view": [
    [
      "django/views/generic/base.py",
      [
        "View",
        "as_view"
      ]
    ]
  ],
  "http_method_not_allowed": [
    [
      "django/views/generic/base.py",
      [
        "View",
        "http_method_not_allowed"
      ]
    ]
  ],
  "_allowed_methods": [
    [
      "django/views/generic/base.py",
      [
        "View",
        "_allowed_methods"
      ]
    ]
  ],
  "render_to_response": [
    [
      "django/views/generic/base.py",
      [
        "TemplateResponseMixin",
        "render_to_response"
      ]
    ],
    [
      "django/views/i18n.py",
      [
        "JavaScriptCatalog",
        "render_to_response"
      ]
    ],
    [
      "django/views/i18n.py",
      [
        "JSONCatalog",
        "render_to_response"
      ]
    ]
  ],
  "get_template_names": [
    [
      "django/views/generic/base.py",
      [
        "TemplateResponseMixin",
        "get_template_names"
      ]
    ],
    [
      "django/views/generic/detail.py",
      [
        "SingleObjectTemplateResponseMixin",
        "get_template_names"
      ]
    ],
    [
      "django/views/generic/list.py",
      [
        "MultipleObjectTemplateResponseMixin",
        "get_template_names"
      ]
    ],
    [
      "tests/generic_views/test_base.py",
      [
        "AboutTemplateView",
        "get_template_names"
      ]
    ],
    [
      "tests/generic_views/views.py",
      [
        "BookSigningConfig",
        "get_template_names"
      ]
    ]
  ],
  "_wrap_url_kwargs_with_deprecation_warning": [
    [
      "django/views/generic/base.py",
      [
        "_wrap_url_kwargs_with_deprecation_warning"
      ]
    ]
  ],
  "get_year_format": [
    [
      "django/views/generic/dates.py",
      [
        "YearMixin",
        "get_year_format"
      ]
    ]
  ],
  "get_year": [
    [
      "django/views/generic/dates.py",
      [
        "YearMixin",
        "get_year"
      ]
    ]
  ],
  "get_next_year": [
    [
      "django/views/generic/dates.py",
      [
        "YearMixin",
        "get_next_year"
      ]
    ]
  ],
  "get_previous_year": [
    [
      "django/views/generic/dates.py",
      [
        "YearMixin",
        "get_previous_year"
      ]
    ]
  ],
  "_get_next_year": [
    [
      "django/views/generic/dates.py",
      [
        "YearMixin",
        "_get_next_year"
      ]
    ]
  ],
  "_get_current_year": [
    [
      "django/views/generic/dates.py",
      [
        "YearMixin",
        "_get_current_year"
      ]
    ]
  ],
  "get_month_format": [
    [
      "django/views/generic/dates.py",
      [
        "MonthMixin",
        "get_month_format"
      ]
    ]
  ],
  "get_month": [
    [
      "django/views/generic/dates.py",
      [
        "MonthMixin",
        "get_month"
      ]
    ]
  ],
  "get_next_month": [
    [
      "django/views/generic/dates.py",
      [
        "MonthMixin",
        "get_next_month"
      ]
    ]
  ],
  "get_previous_month": [
    [
      "django/views/generic/dates.py",
      [
        "MonthMixin",
        "get_previous_month"
      ]
    ]
  ],
  "_get_next_month": [
    [
      "django/views/generic/dates.py",
      [
        "MonthMixin",
        "_get_next_month"
      ]
    ]
  ],
  "_get_current_month": [
    [
      "django/views/generic/dates.py",
      [
        "MonthMixin",
        "_get_current_month"
      ]
    ]
  ],
  "get_day_format": [
    [
      "django/views/generic/dates.py",
      [
        "DayMixin",
        "get_day_format"
      ]
    ]
  ],
  "get_day": [
    [
      "django/views/generic/dates.py",
      [
        "DayMixin",
        "get_day"
      ]
    ]
  ],
  "get_next_day": [
    [
      "django/views/generic/dates.py",
      [
        "DayMixin",
        "get_next_day"
      ]
    ]
  ],
  "get_previous_day": [
    [
      "django/views/generic/dates.py",
      [
        "DayMixin",
        "get_previous_day"
      ]
    ]
  ],
  "_get_next_day": [
    [
      "django/views/generic/dates.py",
      [
        "DayMixin",
        "_get_next_day"
      ]
    ]
  ],
  "_get_current_day": [
    [
      "django/views/generic/dates.py",
      [
        "DayMixin",
        "_get_current_day"
      ]
    ]
  ],
  "get_week_format": [
    [
      "django/views/generic/dates.py",
      [
        "WeekMixin",
        "get_week_format"
      ]
    ]
  ],
  "get_week": [
    [
      "django/views/generic/dates.py",
      [
        "WeekMixin",
        "get_week"
      ]
    ]
  ],
  "get_next_week": [
    [
      "django/views/generic/dates.py",
      [
        "WeekMixin",
        "get_next_week"
      ]
    ]
  ],
  "get_previous_week": [
    [
      "django/views/generic/dates.py",
      [
        "WeekMixin",
        "get_previous_week"
      ]
    ]
  ],
  "_get_next_week": [
    [
      "django/views/generic/dates.py",
      [
        "WeekMixin",
        "_get_next_week"
      ]
    ]
  ],
  "_get_current_week": [
    [
      "django/views/generic/dates.py",
      [
        "WeekMixin",
        "_get_current_week"
      ]
    ]
  ],
  "_get_weekday": [
    [
      "django/views/generic/dates.py",
      [
        "WeekMixin",
        "_get_weekday"
      ]
    ]
  ],
  "get_date_field": [
    [
      "django/views/generic/dates.py",
      [
        "DateMixin",
        "get_date_field"
      ]
    ]
  ],
  "get_allow_future": [
    [
      "django/views/generic/dates.py",
      [
        "DateMixin",
        "get_allow_future"
      ]
    ]
  ],
  "uses_datetime_field": [
    [
      "django/views/generic/dates.py",
      [
        "DateMixin",
        "uses_datetime_field"
      ]
    ]
  ],
  "_make_date_lookup_arg": [
    [
      "django/views/generic/dates.py",
      [
        "DateMixin",
        "_make_date_lookup_arg"
      ]
    ]
  ],
  "_make_single_date_lookup": [
    [
      "django/views/generic/dates.py",
      [
        "DateMixin",
        "_make_single_date_lookup"
      ]
    ]
  ],
  "get_dated_items": [
    [
      "django/views/generic/dates.py",
      [
        "BaseDateListView",
        "get_dated_items"
      ]
    ],
    [
      "django/views/generic/dates.py",
      [
        "BaseArchiveIndexView",
        "get_dated_items"
      ]
    ],
    [
      "django/views/generic/dates.py",
      [
        "BaseYearArchiveView",
        "get_dated_items"
      ]
    ],
    [
      "django/views/generic/dates.py",
      [
        "BaseMonthArchiveView",
        "get_dated_items"
      ]
    ],
    [
      "django/views/generic/dates.py",
      [
        "BaseWeekArchiveView",
        "get_dated_items"
      ]
    ],
    [
      "django/views/generic/dates.py",
      [
        "BaseDayArchiveView",
        "get_dated_items"
      ]
    ],
    [
      "django/views/generic/dates.py",
      [
        "BaseTodayArchiveView",
        "get_dated_items"
      ]
    ]
  ],
  "get_dated_queryset": [
    [
      "django/views/generic/dates.py",
      [
        "BaseDateListView",
        "get_dated_queryset"
      ]
    ]
  ],
  "get_date_list_period": [
    [
      "django/views/generic/dates.py",
      [
        "BaseDateListView",
        "get_date_list_period"
      ]
    ]
  ],
  "get_date_list": [
    [
      "django/views/generic/dates.py",
      [
        "BaseDateListView",
        "get_date_list"
      ]
    ]
  ],
  "get_make_object_list": [
    [
      "django/views/generic/dates.py",
      [
        "BaseYearArchiveView",
        "get_make_object_list"
      ]
    ]
  ],
  "_get_dated_items": [
    [
      "django/views/generic/dates.py",
      [
        "BaseDayArchiveView",
        "_get_dated_items"
      ]
    ]
  ],
  "_date_from_string": [
    [
      "django/views/generic/dates.py",
      [
        "_date_from_string"
      ]
    ]
  ],
  "_get_next_prev": [
    [
      "django/views/generic/dates.py",
      [
        "_get_next_prev"
      ]
    ]
  ],
  "timezone_today": [
    [
      "django/views/generic/dates.py",
      [
        "timezone_today"
      ]
    ]
  ],
  "get_slug_field": [
    [
      "django/views/generic/detail.py",
      [
        "SingleObjectMixin",
        "get_slug_field"
      ]
    ]
  ],
  "get_context_object_name": [
    [
      "django/views/generic/detail.py",
      [
        "SingleObjectMixin",
        "get_context_object_name"
      ]
    ],
    [
      "django/views/generic/list.py",
      [
        "MultipleObjectMixin",
        "get_context_object_name"
      ]
    ],
    [
      "tests/generic_views/views.py",
      [
        "CustomContextView",
        "get_context_object_name"
      ]
    ]
  ],
  "get_initial": [
    [
      "django/views/generic/edit.py",
      [
        "FormMixin",
        "get_initial"
      ]
    ]
  ],
  "get_prefix": [
    [
      "django/views/generic/edit.py",
      [
        "FormMixin",
        "get_prefix"
      ]
    ]
  ],
  "form_invalid": [
    [
      "django/views/generic/edit.py",
      [
        "FormMixin",
        "form_invalid"
      ]
    ]
  ],
  "paginate_queryset": [
    [
      "django/views/generic/list.py",
      [
        "MultipleObjectMixin",
        "paginate_queryset"
      ]
    ]
  ],
  "get_paginate_by": [
    [
      "django/views/generic/list.py",
      [
        "MultipleObjectMixin",
        "get_paginate_by"
      ]
    ]
  ],
  "get_paginate_orphans": [
    [
      "django/views/generic/list.py",
      [
        "MultipleObjectMixin",
        "get_paginate_orphans"
      ]
    ]
  ],
  "get_allow_empty": [
    [
      "django/views/generic/list.py",
      [
        "MultipleObjectMixin",
        "get_allow_empty"
      ]
    ]
  ],
  "set_language": [
    [
      "django/views/i18n.py",
      [
        "set_language"
      ]
    ]
  ],
  "get_formats": [
    [
      "django/views/i18n.py",
      [
        "get_formats"
      ]
    ]
  ],
  "get_paths": [
    [
      "django/views/i18n.py",
      [
        "JavaScriptCatalog",
        "get_paths"
      ]
    ]
  ],
  "_num_plurals": [
    [
      "django/views/i18n.py",
      [
        "JavaScriptCatalog",
        "_num_plurals"
      ]
    ]
  ],
  "_plural_string": [
    [
      "django/views/i18n.py",
      [
        "JavaScriptCatalog",
        "_plural_string"
      ]
    ]
  ],
  "get_plural": [
    [
      "django/views/i18n.py",
      [
        "JavaScriptCatalog",
        "get_plural"
      ]
    ]
  ],
  "get_catalog": [
    [
      "django/views/i18n.py",
      [
        "JavaScriptCatalog",
        "get_catalog"
      ]
    ]
  ],
  "directory_index": [
    [
      "django/views/static.py",
      [
        "directory_index"
      ]
    ]
  ],
  "was_modified_since": [
    [
      "django/views/static.py",
      [
        "was_modified_since"
      ]
    ]
  ],
  "visit_table": [
    [
      "docs/_ext/djangodocs.py",
      [
        "DjangoHTMLTranslator",
        "visit_table"
      ]
    ]
  ],
  "depart_table": [
    [
      "docs/_ext/djangodocs.py",
      [
        "DjangoHTMLTranslator",
        "depart_table"
      ]
    ]
  ],
  "visit_desc_parameterlist": [
    [
      "docs/_ext/djangodocs.py",
      [
        "DjangoHTMLTranslator",
        "visit_desc_parameterlist"
      ]
    ]
  ],
  "depart_desc_parameterlist": [
    [
      "docs/_ext/djangodocs.py",
      [
        "DjangoHTMLTranslator",
        "depart_desc_parameterlist"
      ]
    ]
  ],
  "visit_versionmodified": [
    [
      "docs/_ext/djangodocs.py",
      [
        "DjangoHTMLTranslator",
        "visit_versionmodified"
      ]
    ]
  ],
  "depart_versionmodified": [
    [
      "docs/_ext/djangodocs.py",
      [
        "DjangoHTMLTranslator",
        "depart_versionmodified"
      ]
    ]
  ],
  "visit_section": [
    [
      "docs/_ext/djangodocs.py",
      [
        "DjangoHTMLTranslator",
        "visit_section"
      ]
    ]
  ],
  "parse_django_admin_node": [
    [
      "docs/_ext/djangodocs.py",
      [
        "parse_django_admin_node"
      ]
    ]
  ],
  "finish": [
    [
      "docs/_ext/djangodocs.py",
      [
        "DjangoStandaloneHTMLBuilder",
        "finish"
      ]
    ]
  ],
  "visit_console_dummy": [
    [
      "docs/_ext/djangodocs.py",
      [
        "visit_console_dummy"
      ]
    ]
  ],
  "depart_console_dummy": [
    [
      "docs/_ext/djangodocs.py",
      [
        "depart_console_dummy"
      ]
    ]
  ],
  "warner": [
    [
      "docs/_ext/djangodocs.py",
      [
        "visit_console_html",
        "if_self_builder_name_in_",
        "warner"
      ]
    ]
  ],
  "visit_console_html": [
    [
      "docs/_ext/djangodocs.py",
      [
        "visit_console_html"
      ]
    ]
  ],
  "args_to_win": [
    [
      "docs/_ext/djangodocs.py",
      [
        "ConsoleDirective",
        "run",
        "args_to_win"
      ]
    ]
  ],
  "cmdline_to_win": [
    [
      "docs/_ext/djangodocs.py",
      [
        "ConsoleDirective",
        "run",
        "cmdline_to_win"
      ]
    ]
  ],
  "code_block_to_win": [
    [
      "docs/_ext/djangodocs.py",
      [
        "ConsoleDirective",
        "run",
        "code_block_to_win"
      ]
    ]
  ],
  "html_page_context_hook": [
    [
      "docs/_ext/djangodocs.py",
      [
        "html_page_context_hook"
      ]
    ]
  ],
  "default_role_error": [
    [
      "docs/_ext/djangodocs.py",
      [
        "default_role_error"
      ]
    ]
  ],
  "_get_locale_dirs": [
    [
      "scripts/manage_translations.py",
      [
        "_get_locale_dirs"
      ]
    ]
  ],
  "_tx_resource_for_name": [
    [
      "scripts/manage_translations.py",
      [
        "_tx_resource_for_name"
      ]
    ]
  ],
  "_check_diff": [
    [
      "scripts/manage_translations.py",
      [
        "_check_diff"
      ]
    ]
  ],
  "update_catalogs": [
    [
      "scripts/manage_translations.py",
      [
        "update_catalogs"
      ]
    ]
  ],
  "lang_stats": [
    [
      "scripts/manage_translations.py",
      [
        "lang_stats"
      ]
    ]
  ],
  "fetch": [
    [
      "scripts/manage_translations.py",
      [
        "fetch"
      ]
    ]
  ],
  "test_get_absolute_url": [
    [
      "tests/absolute_url_overrides/tests.py",
      [
        "AbsoluteUrlOverrideTests",
        "test_get_absolute_url"
      ]
    ]
  ],
  "test_override_get_absolute_url": [
    [
      "tests/absolute_url_overrides/tests.py",
      [
        "AbsoluteUrlOverrideTests",
        "test_override_get_absolute_url"
      ]
    ]
  ],
  "test_insert_get_absolute_url": [
    [
      "tests/absolute_url_overrides/tests.py",
      [
        "AbsoluteUrlOverrideTests",
        "test_insert_get_absolute_url"
      ]
    ]
  ],
  "_create_model_class": [
    [
      "tests/absolute_url_overrides/tests.py",
      [
        "AbsoluteUrlOverrideTests",
        "_create_model_class"
      ]
    ]
  ],
  "test_double_call_autodiscover": [
    [
      "tests/admin_autodiscover/tests.py",
      [
        "AdminAutoDiscoverTests",
        "test_double_call_autodiscover"
      ]
    ]
  ],
  "event_date_func": [
    [
      "tests/admin_changelist/admin.py",
      [
        "EventAdmin",
        "event_date_func"
      ]
    ]
  ],
  "age_display": [
    [
      "tests/admin_changelist/admin.py",
      [
        "EmptyValueChildAdmin",
        "age_display"
      ]
    ]
  ],
  "assertDateParams": [
    [
      "tests/admin_changelist/test_date_hierarchy.py",
      [
        "DateHierarchyTests",
        "assertDateParams"
      ]
    ]
  ],
  "test_bounded_params": [
    [
      "tests/admin_changelist/test_date_hierarchy.py",
      [
        "DateHierarchyTests",
        "test_bounded_params"
      ]
    ]
  ],
  "test_bounded_params_with_time_zone": [
    [
      "tests/admin_changelist/test_date_hierarchy.py",
      [
        "DateHierarchyTests",
        "test_bounded_params_with_time_zone"
      ]
    ]
  ],
  "test_bounded_params_with_dst_time_zone": [
    [
      "tests/admin_changelist/test_date_hierarchy.py",
      [
        "DateHierarchyTests",
        "test_bounded_params_with_dst_time_zone"
      ]
    ]
  ],
  "test_invalid_params": [
    [
      "tests/admin_changelist/test_date_hierarchy.py",
      [
        "DateHierarchyTests",
        "test_invalid_params"
      ]
    ]
  ],
  "build_tbody_html": [
    [
      "tests/admin_changelist/tests.py",
      [
        "build_tbody_html"
      ]
    ]
  ],
  "_create_superuser": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "_create_superuser"
      ]
    ]
  ],
  "_mocked_authenticated_request": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "_mocked_authenticated_request"
      ]
    ]
  ],
  "test_specified_ordering_by_f_expression": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_specified_ordering_by_f_expression"
      ]
    ],
    [
      "tests/admin_ordering/tests.py",
      [
        "TestAdminOrdering",
        "test_specified_ordering_by_f_expression"
      ]
    ]
  ],
  "test_specified_ordering_by_f_expression_without_asc_desc": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_specified_ordering_by_f_expression_without_asc_desc"
      ]
    ]
  ],
  "test_select_related_preserved": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_select_related_preserved"
      ]
    ]
  ],
  "test_select_related_as_tuple": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_select_related_as_tuple"
      ]
    ]
  ],
  "test_select_related_as_empty_tuple": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_select_related_as_empty_tuple"
      ]
    ]
  ],
  "test_get_select_related_custom_method": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_get_select_related_custom_method"
      ]
    ]
  ],
  "test_result_list_empty_changelist_value": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_result_list_empty_changelist_value"
      ]
    ]
  ],
  "test_result_list_set_empty_value_display_on_admin_site": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_result_list_set_empty_value_display_on_admin_site"
      ]
    ]
  ],
  "test_result_list_set_empty_value_display_in_model_admin": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_result_list_set_empty_value_display_in_model_admin"
      ]
    ]
  ],
  "test_result_list_html": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_result_list_html"
      ]
    ]
  ],
  "test_result_list_editable_html": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_result_list_editable_html"
      ]
    ]
  ],
  "test_result_list_editable": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_result_list_editable"
      ]
    ]
  ],
  "test_custom_paginator": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_custom_paginator"
      ]
    ]
  ],
  "test_distinct_for_m2m_in_list_filter": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_distinct_for_m2m_in_list_filter"
      ]
    ]
  ],
  "test_distinct_for_through_m2m_in_list_filter": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_distinct_for_through_m2m_in_list_filter"
      ]
    ]
  ],
  "test_distinct_for_through_m2m_at_second_level_in_list_filter": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_distinct_for_through_m2m_at_second_level_in_list_filter"
      ]
    ]
  ],
  "test_distinct_for_inherited_m2m_in_list_filter": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_distinct_for_inherited_m2m_in_list_filter"
      ]
    ]
  ],
  "test_distinct_for_m2m_to_inherited_in_list_filter": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_distinct_for_m2m_to_inherited_in_list_filter"
      ]
    ]
  ],
  "test_distinct_for_non_unique_related_object_in_list_filter": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_distinct_for_non_unique_related_object_in_list_filter"
      ]
    ]
  ],
  "test_changelist_search_form_validation": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_changelist_search_form_validation"
      ]
    ]
  ],
  "test_distinct_for_non_unique_related_object_in_search_fields": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_distinct_for_non_unique_related_object_in_search_fields"
      ]
    ]
  ],
  "test_distinct_for_many_to_many_at_second_level_in_search_fields": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_distinct_for_many_to_many_at_second_level_in_search_fields"
      ]
    ]
  ],
  "test_pk_in_search_fields": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_pk_in_search_fields"
      ]
    ]
  ],
  "test_builtin_lookup_in_search_fields": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_builtin_lookup_in_search_fields"
      ]
    ]
  ],
  "test_custom_lookup_in_search_fields": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_custom_lookup_in_search_fields"
      ]
    ]
  ],
  "test_spanning_relations_with_custom_lookup_in_search_fields": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_spanning_relations_with_custom_lookup_in_search_fields"
      ]
    ]
  ],
  "test_custom_lookup_with_pk_shortcut": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_custom_lookup_with_pk_shortcut"
      ]
    ]
  ],
  "test_no_distinct_for_m2m_in_list_filter_without_params": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_no_distinct_for_m2m_in_list_filter_without_params"
      ]
    ]
  ],
  "test_pagination": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_pagination"
      ]
    ]
  ],
  "test_computed_list_display_localization": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_computed_list_display_localization"
      ]
    ]
  ],
  "test_dynamic_list_display": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_dynamic_list_display"
      ]
    ]
  ],
  "test_show_all": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_show_all"
      ]
    ]
  ],
  "test_dynamic_list_display_links": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_dynamic_list_display_links"
      ]
    ]
  ],
  "test_no_list_display_links": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_no_list_display_links"
      ]
    ]
  ],
  "test_clear_all_filters_link": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_clear_all_filters_link"
      ]
    ]
  ],
  "test_tuple_list_display": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_tuple_list_display"
      ]
    ]
  ],
  "test_multiuser_edit": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_multiuser_edit"
      ]
    ]
  ],
  "test_get_edited_object_ids": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_get_edited_object_ids"
      ]
    ]
  ],
  "test_get_list_editable_queryset": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_get_list_editable_queryset"
      ]
    ]
  ],
  "test_get_list_editable_queryset_with_regex_chars_in_prefix": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_get_list_editable_queryset_with_regex_chars_in_prefix"
      ]
    ]
  ],
  "test_changelist_view_list_editable_changed_objects_uses_filter": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_changelist_view_list_editable_changed_objects_uses_filter"
      ]
    ]
  ],
  "check_results_order": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_deterministic_order_for_unordered_model",
        "check_results_order"
      ]
    ],
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_deterministic_order_for_model_ordered_by_its_manager",
        "check_results_order"
      ]
    ]
  ],
  "test_deterministic_order_for_unordered_model": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_deterministic_order_for_unordered_model"
      ]
    ]
  ],
  "test_deterministic_order_for_model_ordered_by_its_manager": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_deterministic_order_for_model_ordered_by_its_manager"
      ]
    ]
  ],
  "test_total_ordering_optimization": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_total_ordering_optimization"
      ]
    ]
  ],
  "test_total_ordering_optimization_meta_constraints": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_total_ordering_optimization_meta_constraints"
      ]
    ]
  ],
  "test_dynamic_list_filter": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_dynamic_list_filter"
      ]
    ]
  ],
  "test_dynamic_search_fields": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_dynamic_search_fields"
      ]
    ]
  ],
  "test_pagination_page_range": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_pagination_page_range"
      ]
    ]
  ],
  "test_object_tools_displayed_no_add_permission": [
    [
      "tests/admin_changelist/tests.py",
      [
        "ChangeListTests",
        "test_object_tools_displayed_no_add_permission"
      ]
    ]
  ],
  "test_custom_user_pk_not_named_id": [
    [
      "tests/admin_changelist/tests.py",
      [
        "GetAdminLogTests",
        "test_custom_user_pk_not_named_id"
      ]
    ]
  ],
  "test_no_user": [
    [
      "tests/admin_changelist/tests.py",
      [
        "GetAdminLogTests",
        "test_no_user"
      ]
    ]
  ],
  "test_missing_args": [
    [
      "tests/admin_changelist/tests.py",
      [
        "GetAdminLogTests",
        "test_missing_args"
      ]
    ]
  ],
  "test_non_integer_limit": [
    [
      "tests/admin_changelist/tests.py",
      [
        "GetAdminLogTests",
        "test_non_integer_limit"
      ]
    ]
  ],
  "test_without_as": [
    [
      "tests/admin_changelist/tests.py",
      [
        "GetAdminLogTests",
        "test_without_as"
      ]
    ]
  ],
  "test_without_for_user": [
    [
      "tests/admin_changelist/tests.py",
      [
        "GetAdminLogTests",
        "test_without_for_user"
      ]
    ]
  ],
  "test_add_row_selection": [
    [
      "tests/admin_changelist/tests.py",
      [
        "SeleniumTests",
        "test_add_row_selection"
      ]
    ]
  ],
  "readonly_method_on_model": [
    [
      "tests/admin_checks/models.py",
      [
        "Song",
        "readonly_method_on_model"
      ]
    ]
  ],
  "test_checks_are_performed": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_checks_are_performed"
      ]
    ]
  ],
  "test_apps_dependencies": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_apps_dependencies"
      ]
    ]
  ],
  "test_no_template_engines": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_no_template_engines"
      ]
    ]
  ],
  "test_context_processor_dependencies": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_context_processor_dependencies"
      ]
    ]
  ],
  "test_context_processor_dependencies_model_backend_subclass": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_context_processor_dependencies_model_backend_subclass"
      ]
    ]
  ],
  "test_several_templates_backends": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_several_templates_backends"
      ]
    ]
  ],
  "test_middleware_dependencies": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_middleware_dependencies"
      ]
    ]
  ],
  "test_middleware_subclasses": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_middleware_subclasses"
      ]
    ]
  ],
  "test_admin_check_ignores_import_error_in_middleware": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_admin_check_ignores_import_error_in_middleware"
      ]
    ]
  ],
  "test_custom_adminsite": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_custom_adminsite"
      ]
    ]
  ],
  "test_allows_checks_relying_on_other_modeladmins": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_allows_checks_relying_on_other_modeladmins"
      ]
    ]
  ],
  "test_field_name_not_in_list_display": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_field_name_not_in_list_display"
      ]
    ]
  ],
  "test_list_editable_not_a_list_or_tuple": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_list_editable_not_a_list_or_tuple"
      ]
    ]
  ],
  "test_list_editable_missing_field": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_list_editable_missing_field"
      ]
    ]
  ],
  "test_readonly_and_editable": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_readonly_and_editable"
      ]
    ]
  ],
  "test_editable": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_editable"
      ]
    ],
    [
      "tests/model_fields/test_binaryfield.py",
      [
        "BinaryFieldTests",
        "test_editable"
      ]
    ]
  ],
  "test_custom_modelforms_with_fields_fieldsets": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_custom_modelforms_with_fields_fieldsets"
      ]
    ]
  ],
  "test_custom_get_form_with_fieldsets": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_custom_get_form_with_fieldsets"
      ]
    ]
  ],
  "test_fieldsets_fields_non_tuple": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_fieldsets_fields_non_tuple"
      ]
    ]
  ],
  "test_nonfirst_fieldset": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_nonfirst_fieldset"
      ]
    ]
  ],
  "test_exclude_values": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_exclude_values"
      ]
    ]
  ],
  "test_exclude_duplicate_values": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_exclude_duplicate_values"
      ]
    ]
  ],
  "test_exclude_in_inline": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_exclude_in_inline"
      ]
    ]
  ],
  "test_exclude_inline_model_admin": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_exclude_inline_model_admin"
      ]
    ]
  ],
  "test_valid_generic_inline_model_admin": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_valid_generic_inline_model_admin"
      ]
    ]
  ],
  "test_generic_inline_model_admin_non_generic_model": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_generic_inline_model_admin_non_generic_model"
      ]
    ]
  ],
  "test_generic_inline_model_admin_bad_ct_field": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_generic_inline_model_admin_bad_ct_field"
      ]
    ]
  ],
  "test_generic_inline_model_admin_bad_fk_field": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_generic_inline_model_admin_bad_fk_field"
      ]
    ]
  ],
  "test_generic_inline_model_admin_non_gfk_ct_field": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_generic_inline_model_admin_non_gfk_ct_field"
      ]
    ]
  ],
  "test_generic_inline_model_admin_non_gfk_fk_field": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_generic_inline_model_admin_non_gfk_fk_field"
      ]
    ]
  ],
  "test_app_label_in_admin_checks": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_app_label_in_admin_checks"
      ]
    ]
  ],
  "test_fk_exclusion": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_fk_exclusion"
      ]
    ]
  ],
  "test_inline_self_check": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_inline_self_check"
      ]
    ]
  ],
  "test_inline_with_specified": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_inline_with_specified"
      ]
    ]
  ],
  "test_inlines_property": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_inlines_property"
      ]
    ]
  ],
  "test_readonly": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_readonly"
      ]
    ]
  ],
  "test_readonly_on_method": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_readonly_on_method"
      ]
    ]
  ],
  "test_readonly_on_modeladmin": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_readonly_on_modeladmin"
      ]
    ]
  ],
  "test_readonly_dynamic_attribute_on_modeladmin": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_readonly_dynamic_attribute_on_modeladmin"
      ]
    ]
  ],
  "test_readonly_method_on_model": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_readonly_method_on_model"
      ]
    ]
  ],
  "test_nonexistent_field": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_nonexistent_field"
      ]
    ],
    [
      "tests/queries/test_bulk_update.py",
      [
        "BulkUpdateTests",
        "test_nonexistent_field"
      ]
    ]
  ],
  "test_nonexistent_field_on_inline": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_nonexistent_field_on_inline"
      ]
    ]
  ],
  "test_readonly_fields_not_list_or_tuple": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_readonly_fields_not_list_or_tuple"
      ]
    ]
  ],
  "test_extra": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_extra"
      ]
    ],
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_extra"
      ]
    ]
  ],
  "test_readonly_lambda": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_readonly_lambda"
      ]
    ]
  ],
  "test_graceful_m2m_fail": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_graceful_m2m_fail"
      ]
    ]
  ],
  "test_cannot_include_through": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_cannot_include_through"
      ]
    ]
  ],
  "test_nested_fields": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_nested_fields"
      ]
    ]
  ],
  "test_nested_fieldsets": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_nested_fieldsets"
      ]
    ]
  ],
  "test_explicit_through_override": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_explicit_through_override"
      ]
    ]
  ],
  "test_non_model_fields": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_non_model_fields"
      ]
    ]
  ],
  "test_non_model_first_field": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_non_model_first_field"
      ]
    ]
  ],
  "test_check_sublists_for_duplicates": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_check_sublists_for_duplicates"
      ]
    ]
  ],
  "test_check_fieldset_sublists_for_duplicates": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_check_fieldset_sublists_for_duplicates"
      ]
    ]
  ],
  "test_list_filter_works_on_through_field_even_when_apps_not_ready": [
    [
      "tests/admin_checks/tests.py",
      [
        "SystemChecksTestCase",
        "test_list_filter_works_on_through_field_even_when_apps_not_ready"
      ]
    ]
  ],
  "remove_url": [
    [
      "tests/admin_custom_urls/models.py",
      [
        "ActionAdmin",
        "remove_url"
      ]
    ]
  ],
  "test_basic_add_GET": [
    [
      "tests/admin_custom_urls/tests.py",
      [
        "AdminCustomUrlsTest",
        "test_basic_add_GET"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_basic_add_GET"
      ]
    ],
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericAdminViewTest",
        "test_basic_add_GET"
      ]
    ]
  ],
  "test_add_with_GET_args": [
    [
      "tests/admin_custom_urls/tests.py",
      [
        "AdminCustomUrlsTest",
        "test_add_with_GET_args"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_add_with_GET_args"
      ]
    ]
  ],
  "test_basic_add_POST": [
    [
      "tests/admin_custom_urls/tests.py",
      [
        "AdminCustomUrlsTest",
        "test_basic_add_POST"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_basic_add_POST"
      ]
    ],
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericAdminViewTest",
        "test_basic_add_POST"
      ]
    ]
  ],
  "test_admin_URLs_no_clash": [
    [
      "tests/admin_custom_urls/tests.py",
      [
        "AdminCustomUrlsTest",
        "test_admin_URLs_no_clash"
      ]
    ]
  ],
  "test_post_save_add_redirect": [
    [
      "tests/admin_custom_urls/tests.py",
      [
        "AdminCustomUrlsTest",
        "test_post_save_add_redirect"
      ]
    ]
  ],
  "test_post_save_change_redirect": [
    [
      "tests/admin_custom_urls/tests.py",
      [
        "AdminCustomUrlsTest",
        "test_post_save_change_redirect"
      ]
    ]
  ],
  "test_post_url_continue": [
    [
      "tests/admin_custom_urls/tests.py",
      [
        "AdminCustomUrlsTest",
        "test_post_url_continue"
      ]
    ]
  ],
  "test_use_custom_admin_site": [
    [
      "tests/admin_default_site/tests.py",
      [
        "CustomAdminSiteTests",
        "test_use_custom_admin_site"
      ]
    ]
  ],
  "test_use_default_admin_site": [
    [
      "tests/admin_default_site/tests.py",
      [
        "DefaultAdminSiteTests",
        "test_use_default_admin_site"
      ]
    ]
  ],
  "_get_full_name": [
    [
      "tests/admin_docs/models.py",
      [
        "Person",
        "_get_full_name"
      ]
    ],
    [
      "tests/properties/models.py",
      [
        "Person",
        "_get_full_name"
      ]
    ]
  ],
  "rename_company": [
    [
      "tests/admin_docs/models.py",
      [
        "Person",
        "rename_company"
      ]
    ]
  ],
  "dummy_function": [
    [
      "tests/admin_docs/models.py",
      [
        "Person",
        "dummy_function"
      ]
    ],
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_lazy_reference_checks",
        "dummy_function"
      ]
    ]
  ],
  "a_property": [
    [
      "tests/admin_docs/models.py",
      [
        "Person",
        "a_property"
      ]
    ]
  ],
  "suffix_company_name": [
    [
      "tests/admin_docs/models.py",
      [
        "Person",
        "suffix_company_name"
      ]
    ]
  ],
  "add_image": [
    [
      "tests/admin_docs/models.py",
      [
        "Person",
        "add_image"
      ]
    ]
  ],
  "delete_image": [
    [
      "tests/admin_docs/models.py",
      [
        "Person",
        "delete_image"
      ]
    ]
  ],
  "save_changes": [
    [
      "tests/admin_docs/models.py",
      [
        "Person",
        "save_changes"
      ]
    ]
  ],
  "set_status": [
    [
      "tests/admin_docs/models.py",
      [
        "Person",
        "set_status"
      ]
    ]
  ],
  "get_status_count": [
    [
      "tests/admin_docs/models.py",
      [
        "Person",
        "get_status_count"
      ]
    ]
  ],
  "get_groups_list": [
    [
      "tests/admin_docs/models.py",
      [
        "Person",
        "get_groups_list"
      ]
    ]
  ],
  "test_xview_func": [
    [
      "tests/admin_docs/test_middleware.py",
      [
        "XViewMiddlewareTest",
        "test_xview_func"
      ]
    ]
  ],
  "test_xview_class": [
    [
      "tests/admin_docs/test_middleware.py",
      [
        "XViewMiddlewareTest",
        "test_xview_class"
      ]
    ]
  ],
  "test_callable_object_view": [
    [
      "tests/admin_docs/test_middleware.py",
      [
        "XViewMiddlewareTest",
        "test_callable_object_view"
      ]
    ]
  ],
  "test_no_auth_middleware": [
    [
      "tests/admin_docs/test_middleware.py",
      [
        "XViewMiddlewareTest",
        "test_no_auth_middleware"
      ]
    ]
  ],
  "test_parse_docstring": [
    [
      "tests/admin_docs/test_utils.py",
      [
        "TestUtils",
        "test_parse_docstring"
      ]
    ]
  ],
  "test_title_output": [
    [
      "tests/admin_docs/test_utils.py",
      [
        "TestUtils",
        "test_title_output"
      ]
    ]
  ],
  "test_description_output": [
    [
      "tests/admin_docs/test_utils.py",
      [
        "TestUtils",
        "test_description_output"
      ]
    ]
  ],
  "test_initial_header_level": [
    [
      "tests/admin_docs/test_utils.py",
      [
        "TestUtils",
        "test_initial_header_level"
      ]
    ]
  ],
  "test_parse_rst": [
    [
      "tests/admin_docs/test_utils.py",
      [
        "TestUtils",
        "test_parse_rst"
      ]
    ]
  ],
  "test_parse_rst_with_docstring_no_leading_line_feed": [
    [
      "tests/admin_docs/test_utils.py",
      [
        "TestUtils",
        "test_parse_rst_with_docstring_no_leading_line_feed"
      ]
    ]
  ],
  "test_publish_parts": [
    [
      "tests/admin_docs/test_utils.py",
      [
        "TestUtils",
        "test_publish_parts"
      ]
    ]
  ],
  "test_bookmarklets": [
    [
      "tests/admin_docs/test_views.py",
      [
        "AdminDocViewTests",
        "test_bookmarklets"
      ]
    ]
  ],
  "test_templatetag_index": [
    [
      "tests/admin_docs/test_views.py",
      [
        "AdminDocViewTests",
        "test_templatetag_index"
      ]
    ],
    [
      "tests/admin_docs/test_views.py",
      [
        "AdminDocViewWithMultipleEngines",
        "test_templatetag_index"
      ]
    ]
  ],
  "test_templatefilter_index": [
    [
      "tests/admin_docs/test_views.py",
      [
        "AdminDocViewTests",
        "test_templatefilter_index"
      ]
    ],
    [
      "tests/admin_docs/test_views.py",
      [
        "AdminDocViewWithMultipleEngines",
        "test_templatefilter_index"
      ]
    ]
  ],
  "test_view_index": [
    [
      "tests/admin_docs/test_views.py",
      [
        "AdminDocViewTests",
        "test_view_index"
      ]
    ]
  ],
  "test_view_index_with_method": [
    [
      "tests/admin_docs/test_views.py",
      [
        "AdminDocViewTests",
        "test_view_index_with_method"
      ]
    ]
  ],
  "test_view_detail": [
    [
      "tests/admin_docs/test_views.py",
      [
        "AdminDocViewTests",
        "test_view_detail"
      ]
    ]
  ],
  "test_namespaced_view_detail": [
    [
      "tests/admin_docs/test_views.py",
      [
        "AdminDocViewTests",
        "test_namespaced_view_detail"
      ]
    ],
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ResolverTests",
        "test_namespaced_view_detail"
      ]
    ]
  ],
  "test_view_detail_illegal_import": [
    [
      "tests/admin_docs/test_views.py",
      [
        "AdminDocViewTests",
        "test_view_detail_illegal_import"
      ]
    ]
  ],
  "test_view_detail_as_method": [
    [
      "tests/admin_docs/test_views.py",
      [
        "AdminDocViewTests",
        "test_view_detail_as_method"
      ]
    ],
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ResolverTests",
        "test_view_detail_as_method"
      ]
    ]
  ],
  "test_model_index": [
    [
      "tests/admin_docs/test_views.py",
      [
        "AdminDocViewTests",
        "test_model_index"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "NeverCacheTests",
        "test_model_index"
      ]
    ]
  ],
  "test_template_detail": [
    [
      "tests/admin_docs/test_views.py",
      [
        "AdminDocViewTests",
        "test_template_detail"
      ]
    ]
  ],
  "test_missing_docutils": [
    [
      "tests/admin_docs/test_views.py",
      [
        "AdminDocViewTests",
        "test_missing_docutils"
      ]
    ]
  ],
  "test_no_sites_framework": [
    [
      "tests/admin_docs/test_views.py",
      [
        "AdminDocViewTests",
        "test_no_sites_framework"
      ]
    ]
  ],
  "test_method_excludes": [
    [
      "tests/admin_docs/test_views.py",
      [
        "TestModelDetailView",
        "test_method_excludes"
      ]
    ]
  ],
  "test_methods_with_arguments": [
    [
      "tests/admin_docs/test_views.py",
      [
        "TestModelDetailView",
        "test_methods_with_arguments"
      ]
    ]
  ],
  "test_methods_with_arguments_display_arguments": [
    [
      "tests/admin_docs/test_views.py",
      [
        "TestModelDetailView",
        "test_methods_with_arguments_display_arguments"
      ]
    ]
  ],
  "test_methods_with_arguments_display_arguments_default_value": [
    [
      "tests/admin_docs/test_views.py",
      [
        "TestModelDetailView",
        "test_methods_with_arguments_display_arguments_default_value"
      ]
    ]
  ],
  "test_methods_with_multiple_arguments_display_arguments": [
    [
      "tests/admin_docs/test_views.py",
      [
        "TestModelDetailView",
        "test_methods_with_multiple_arguments_display_arguments"
      ]
    ]
  ],
  "test_instance_of_property_methods_are_displayed": [
    [
      "tests/admin_docs/test_views.py",
      [
        "TestModelDetailView",
        "test_instance_of_property_methods_are_displayed"
      ]
    ]
  ],
  "test_method_data_types": [
    [
      "tests/admin_docs/test_views.py",
      [
        "TestModelDetailView",
        "test_method_data_types"
      ]
    ]
  ],
  "test_descriptions_render_correctly": [
    [
      "tests/admin_docs/test_views.py",
      [
        "TestModelDetailView",
        "test_descriptions_render_correctly"
      ]
    ]
  ],
  "test_model_with_many_to_one": [
    [
      "tests/admin_docs/test_views.py",
      [
        "TestModelDetailView",
        "test_model_with_many_to_one"
      ]
    ]
  ],
  "test_model_with_no_backward_relations_render_only_relevant_fields": [
    [
      "tests/admin_docs/test_views.py",
      [
        "TestModelDetailView",
        "test_model_with_no_backward_relations_render_only_relevant_fields"
      ]
    ]
  ],
  "test_model_docstring_renders_correctly": [
    [
      "tests/admin_docs/test_views.py",
      [
        "TestModelDetailView",
        "test_model_docstring_renders_correctly"
      ]
    ]
  ],
  "test_model_detail_title": [
    [
      "tests/admin_docs/test_views.py",
      [
        "TestModelDetailView",
        "test_model_detail_title"
      ]
    ]
  ],
  "test_app_not_found": [
    [
      "tests/admin_docs/test_views.py",
      [
        "TestModelDetailView",
        "test_app_not_found"
      ]
    ]
  ],
  "test_model_not_found": [
    [
      "tests/admin_docs/test_views.py",
      [
        "TestModelDetailView",
        "test_model_not_found"
      ]
    ]
  ],
  "test_field_name": [
    [
      "tests/admin_docs/test_views.py",
      [
        "TestFieldType",
        "test_field_name"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_field_name"
      ]
    ],
    [
      "tests/model_fields/tests.py",
      [
        "BasicFieldTests",
        "test_field_name"
      ]
    ]
  ],
  "test_builtin_fields": [
    [
      "tests/admin_docs/test_views.py",
      [
        "TestFieldType",
        "test_builtin_fields"
      ]
    ]
  ],
  "test_custom_fields": [
    [
      "tests/admin_docs/test_views.py",
      [
        "TestFieldType",
        "test_custom_fields"
      ]
    ],
    [
      "tests/inspectdb/tests.py",
      [
        "InspectDBTestCase",
        "test_custom_fields"
      ]
    ]
  ],
  "test_simplify_regex": [
    [
      "tests/admin_docs/test_views.py",
      [
        "AdminDocViewFunctionsTests",
        "test_simplify_regex"
      ]
    ]
  ],
  "xview": [
    [
      "tests/admin_docs/views.py",
      [
        "xview"
      ]
    ]
  ],
  "select_by": [
    [
      "tests/admin_filters/tests.py",
      [
        "select_by"
      ]
    ]
  ],
  "test_choicesfieldlistfilter_has_none_choice": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_choicesfieldlistfilter_has_none_choice"
      ]
    ]
  ],
  "test_datefieldlistfilter": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_datefieldlistfilter"
      ]
    ]
  ],
  "test_datefieldlistfilter_with_time_zone_support": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_datefieldlistfilter_with_time_zone_support"
      ]
    ]
  ],
  "test_allvaluesfieldlistfilter": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_allvaluesfieldlistfilter"
      ]
    ]
  ],
  "test_allvaluesfieldlistfilter_custom_qs": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_allvaluesfieldlistfilter_custom_qs"
      ]
    ]
  ],
  "test_relatedfieldlistfilter_foreignkey": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_relatedfieldlistfilter_foreignkey"
      ]
    ]
  ],
  "test_relatedfieldlistfilter_foreignkey_ordering": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_relatedfieldlistfilter_foreignkey_ordering"
      ]
    ]
  ],
  "test_relatedfieldlistfilter_foreignkey_ordering_reverse": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_relatedfieldlistfilter_foreignkey_ordering_reverse"
      ]
    ]
  ],
  "test_relatedfieldlistfilter_foreignkey_default_ordering": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_relatedfieldlistfilter_foreignkey_default_ordering"
      ]
    ]
  ],
  "test_relatedfieldlistfilter_manytomany": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_relatedfieldlistfilter_manytomany"
      ]
    ]
  ],
  "test_relatedfieldlistfilter_reverse_relationships": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_relatedfieldlistfilter_reverse_relationships"
      ]
    ]
  ],
  "test_relatedfieldlistfilter_reverse_relationships_default_ordering": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_relatedfieldlistfilter_reverse_relationships_default_ordering"
      ]
    ]
  ],
  "test_relatedonlyfieldlistfilter_foreignkey": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_relatedonlyfieldlistfilter_foreignkey"
      ]
    ]
  ],
  "test_relatedonlyfieldlistfilter_foreignkey_reverse_relationships": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_relatedonlyfieldlistfilter_foreignkey_reverse_relationships"
      ]
    ]
  ],
  "test_relatedonlyfieldlistfilter_manytomany_reverse_relationships": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_relatedonlyfieldlistfilter_manytomany_reverse_relationships"
      ]
    ]
  ],
  "test_relatedonlyfieldlistfilter_foreignkey_ordering": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_relatedonlyfieldlistfilter_foreignkey_ordering"
      ]
    ]
  ],
  "test_relatedonlyfieldlistfilter_foreignkey_default_ordering": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_relatedonlyfieldlistfilter_foreignkey_default_ordering"
      ]
    ]
  ],
  "test_relatedonlyfieldlistfilter_underscorelookup_foreignkey": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_relatedonlyfieldlistfilter_underscorelookup_foreignkey"
      ]
    ]
  ],
  "test_relatedonlyfieldlistfilter_manytomany": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_relatedonlyfieldlistfilter_manytomany"
      ]
    ]
  ],
  "test_listfilter_genericrelation": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_listfilter_genericrelation"
      ]
    ]
  ],
  "test_booleanfieldlistfilter": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_booleanfieldlistfilter"
      ]
    ]
  ],
  "test_booleanfieldlistfilter_tuple": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_booleanfieldlistfilter_tuple"
      ]
    ]
  ],
  "verify_booleanfieldlistfilter": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "verify_booleanfieldlistfilter"
      ]
    ]
  ],
  "test_booleanfieldlistfilter_nullbooleanfield": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_booleanfieldlistfilter_nullbooleanfield"
      ]
    ]
  ],
  "test_fieldlistfilter_underscorelookup_tuple": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_fieldlistfilter_underscorelookup_tuple"
      ]
    ]
  ],
  "test_fieldlistfilter_invalid_lookup_parameters": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_fieldlistfilter_invalid_lookup_parameters"
      ]
    ]
  ],
  "test_simplelistfilter": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_simplelistfilter"
      ]
    ]
  ],
  "test_listfilter_without_title": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_listfilter_without_title"
      ]
    ]
  ],
  "test_simplelistfilter_without_parameter": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_simplelistfilter_without_parameter"
      ]
    ]
  ],
  "test_simplelistfilter_with_none_returning_lookups": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_simplelistfilter_with_none_returning_lookups"
      ]
    ]
  ],
  "test_filter_with_failing_queryset": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_filter_with_failing_queryset"
      ]
    ]
  ],
  "test_simplelistfilter_with_queryset_based_lookups": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_simplelistfilter_with_queryset_based_lookups"
      ]
    ]
  ],
  "test_two_characters_long_field": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_two_characters_long_field"
      ]
    ]
  ],
  "test_parameter_ends_with__in__or__isnull": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_parameter_ends_with__in__or__isnull"
      ]
    ]
  ],
  "test_lookup_with_non_string_value": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_lookup_with_non_string_value"
      ]
    ]
  ],
  "test_lookup_with_non_string_value_underscored": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_lookup_with_non_string_value_underscored"
      ]
    ]
  ],
  "test_fk_with_to_field": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_fk_with_to_field"
      ]
    ]
  ],
  "test_lookup_with_dynamic_value": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_lookup_with_dynamic_value"
      ]
    ]
  ],
  "test_list_filter_queryset_filtered_by_default": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_list_filter_queryset_filtered_by_default"
      ]
    ]
  ],
  "test_emptylistfieldfilter": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_emptylistfieldfilter"
      ]
    ]
  ],
  "test_emptylistfieldfilter_choices": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_emptylistfieldfilter_choices"
      ]
    ]
  ],
  "test_emptylistfieldfilter_non_empty_field": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_emptylistfieldfilter_non_empty_field"
      ]
    ]
  ],
  "test_emptylistfieldfilter_invalid_lookup_parameters": [
    [
      "tests/admin_filters/tests.py",
      [
        "ListFiltersTests",
        "test_emptylistfieldfilter_invalid_lookup_parameters"
      ]
    ]
  ],
  "call_me": [
    [
      "tests/admin_inlines/admin.py",
      [
        "QuestionInline",
        "call_me"
      ]
    ],
    [
      "tests/admin_inlines/admin.py",
      [
        "PollAdmin",
        "call_me"
      ]
    ],
    [
      "tests/admin_inlines/admin.py",
      [
        "ChapterInline",
        "call_me"
      ]
    ]
  ],
  "test_javascript_escaping": [
    [
      "tests/admin_inlines/test_templates.py",
      [
        "TestTemplates",
        "test_javascript_escaping"
      ]
    ]
  ],
  "test_can_delete": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_can_delete"
      ]
    ]
  ],
  "test_readonly_stacked_inline_label": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_readonly_stacked_inline_label"
      ]
    ]
  ],
  "test_many_to_many_inlines": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_many_to_many_inlines"
      ]
    ]
  ],
  "test_inline_primary": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_inline_primary"
      ]
    ]
  ],
  "test_tabular_inline_column_css_class": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_tabular_inline_column_css_class"
      ]
    ]
  ],
  "test_custom_form_tabular_inline_label": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_custom_form_tabular_inline_label"
      ]
    ]
  ],
  "test_custom_form_tabular_inline_extra_field_label": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_custom_form_tabular_inline_extra_field_label"
      ]
    ]
  ],
  "test_non_editable_custom_form_tabular_inline_extra_field_label": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_non_editable_custom_form_tabular_inline_extra_field_label"
      ]
    ]
  ],
  "test_custom_form_tabular_inline_overridden_label": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_custom_form_tabular_inline_overridden_label"
      ]
    ]
  ],
  "test_tabular_non_field_errors": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_tabular_non_field_errors"
      ]
    ]
  ],
  "test_no_parent_callable_lookup": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_no_parent_callable_lookup"
      ]
    ]
  ],
  "test_callable_lookup": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_callable_lookup"
      ]
    ]
  ],
  "test_help_text": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_help_text"
      ]
    ],
    [
      "tests/auth_tests/test_validators.py",
      [
        "MinimumLengthValidatorTest",
        "test_help_text"
      ]
    ],
    [
      "tests/auth_tests/test_validators.py",
      [
        "UserAttributeSimilarityValidatorTest",
        "test_help_text"
      ]
    ],
    [
      "tests/auth_tests/test_validators.py",
      [
        "CommonPasswordValidatorTest",
        "test_help_text"
      ]
    ],
    [
      "tests/auth_tests/test_validators.py",
      [
        "NumericPasswordValidatorTest",
        "test_help_text"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_help_text"
      ]
    ]
  ],
  "test_tabular_model_form_meta_readonly_field": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_tabular_model_form_meta_readonly_field"
      ]
    ]
  ],
  "test_inline_hidden_field_no_column": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_inline_hidden_field_no_column"
      ]
    ]
  ],
  "test_non_related_name_inline": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_non_related_name_inline"
      ]
    ]
  ],
  "test_localize_pk_shortcut": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_localize_pk_shortcut"
      ]
    ]
  ],
  "test_custom_pk_shortcut": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_custom_pk_shortcut"
      ]
    ]
  ],
  "test_create_inlines_on_inherited_model": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_create_inlines_on_inherited_model"
      ]
    ]
  ],
  "test_custom_get_extra_form": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_custom_get_extra_form"
      ]
    ]
  ],
  "test_min_num": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_min_num"
      ]
    ],
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_min_num"
      ]
    ]
  ],
  "test_custom_min_num": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_custom_min_num"
      ]
    ]
  ],
  "test_inline_nonauto_noneditable_pk": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_inline_nonauto_noneditable_pk"
      ]
    ]
  ],
  "test_inline_nonauto_noneditable_inherited_pk": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_inline_nonauto_noneditable_inherited_pk"
      ]
    ]
  ],
  "test_inline_editable_pk": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_inline_editable_pk"
      ]
    ]
  ],
  "test_stacked_inline_edit_form_contains_has_original_class": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_stacked_inline_edit_form_contains_has_original_class"
      ]
    ]
  ],
  "test_inlines_show_change_link_registered": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_inlines_show_change_link_registered"
      ]
    ]
  ],
  "test_inlines_show_change_link_unregistered": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_inlines_show_change_link_unregistered"
      ]
    ]
  ],
  "test_tabular_inline_show_change_link_false_registered": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_tabular_inline_show_change_link_false_registered"
      ]
    ]
  ],
  "test_noneditable_inline_has_field_inputs": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInline",
        "test_noneditable_inline_has_field_inputs"
      ]
    ]
  ],
  "test_inline_media_only_base": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInlineMedia",
        "test_inline_media_only_base"
      ]
    ]
  ],
  "test_inline_media_only_inline": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInlineMedia",
        "test_inline_media_only_inline"
      ]
    ]
  ],
  "test_all_inline_media": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInlineMedia",
        "test_all_inline_media"
      ]
    ]
  ],
  "test_immutable_content_type": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInlineAdminForm",
        "test_immutable_content_type"
      ]
    ]
  ],
  "test_deleting_inline_with_protected_delete_does_not_validate": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInlineProtectedOnDelete",
        "test_deleting_inline_with_protected_delete_does_not_validate"
      ]
    ]
  ],
  "test_inline_add_m2m_noperm": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInlinePermissions",
        "test_inline_add_m2m_noperm"
      ]
    ]
  ],
  "test_inline_add_fk_noperm": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInlinePermissions",
        "test_inline_add_fk_noperm"
      ]
    ]
  ],
  "test_inline_change_m2m_noperm": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInlinePermissions",
        "test_inline_change_m2m_noperm"
      ]
    ]
  ],
  "test_inline_change_fk_noperm": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInlinePermissions",
        "test_inline_change_fk_noperm"
      ]
    ]
  ],
  "test_inline_add_m2m_view_only_perm": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInlinePermissions",
        "test_inline_add_m2m_view_only_perm"
      ]
    ]
  ],
  "test_inline_add_m2m_add_perm": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInlinePermissions",
        "test_inline_add_m2m_add_perm"
      ]
    ]
  ],
  "test_inline_add_fk_add_perm": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInlinePermissions",
        "test_inline_add_fk_add_perm"
      ]
    ]
  ],
  "test_inline_change_m2m_add_perm": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInlinePermissions",
        "test_inline_change_m2m_add_perm"
      ]
    ]
  ],
  "test_inline_change_m2m_view_only_perm": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInlinePermissions",
        "test_inline_change_m2m_view_only_perm"
      ]
    ]
  ],
  "test_inline_change_m2m_change_perm": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInlinePermissions",
        "test_inline_change_m2m_change_perm"
      ]
    ]
  ],
  "test_inline_change_fk_add_perm": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInlinePermissions",
        "test_inline_change_fk_add_perm"
      ]
    ]
  ],
  "test_inline_change_fk_change_perm": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInlinePermissions",
        "test_inline_change_fk_change_perm"
      ]
    ]
  ],
  "test_inline_change_fk_add_change_perm": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInlinePermissions",
        "test_inline_change_fk_add_change_perm"
      ]
    ]
  ],
  "test_inline_change_fk_change_del_perm": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInlinePermissions",
        "test_inline_change_fk_change_del_perm"
      ]
    ]
  ],
  "test_inline_change_fk_all_perms": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestInlinePermissions",
        "test_inline_change_fk_all_perms"
      ]
    ]
  ],
  "test_add_url_not_allowed": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestReadOnlyChangeViewInlinePermissions",
        "test_add_url_not_allowed"
      ]
    ]
  ],
  "test_post_to_change_url_not_allowed": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestReadOnlyChangeViewInlinePermissions",
        "test_post_to_change_url_not_allowed"
      ]
    ]
  ],
  "test_get_to_change_url_is_allowed": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestReadOnlyChangeViewInlinePermissions",
        "test_get_to_change_url_is_allowed"
      ]
    ]
  ],
  "test_main_model_is_rendered_as_read_only": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestReadOnlyChangeViewInlinePermissions",
        "test_main_model_is_rendered_as_read_only"
      ]
    ]
  ],
  "test_inlines_are_rendered_as_read_only": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestReadOnlyChangeViewInlinePermissions",
        "test_inlines_are_rendered_as_read_only"
      ]
    ]
  ],
  "test_submit_line_shows_only_close_button": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestReadOnlyChangeViewInlinePermissions",
        "test_submit_line_shows_only_close_button"
      ]
    ]
  ],
  "test_inline_delete_buttons_are_not_shown": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestReadOnlyChangeViewInlinePermissions",
        "test_inline_delete_buttons_are_not_shown"
      ]
    ]
  ],
  "test_extra_inlines_are_not_shown": [
    [
      "tests/admin_inlines/tests.py",
      [
        "TestReadOnlyChangeViewInlinePermissions",
        "test_extra_inlines_are_not_shown"
      ]
    ]
  ],
  "test_add_stackeds": [
    [
      "tests/admin_inlines/tests.py",
      [
        "SeleniumTests",
        "test_add_stackeds"
      ]
    ]
  ],
  "test_delete_stackeds": [
    [
      "tests/admin_inlines/tests.py",
      [
        "SeleniumTests",
        "test_delete_stackeds"
      ]
    ]
  ],
  "rows_length": [
    [
      "tests/admin_inlines/tests.py",
      [
        "SeleniumTests",
        "test_delete_invalid_stacked_inlines",
        "rows_length"
      ]
    ],
    [
      "tests/admin_inlines/tests.py",
      [
        "SeleniumTests",
        "test_delete_invalid_tabular_inlines",
        "rows_length"
      ]
    ]
  ],
  "test_delete_invalid_stacked_inlines": [
    [
      "tests/admin_inlines/tests.py",
      [
        "SeleniumTests",
        "test_delete_invalid_stacked_inlines"
      ]
    ]
  ],
  "test_delete_invalid_tabular_inlines": [
    [
      "tests/admin_inlines/tests.py",
      [
        "SeleniumTests",
        "test_delete_invalid_tabular_inlines"
      ]
    ]
  ],
  "test_add_inlines": [
    [
      "tests/admin_inlines/tests.py",
      [
        "SeleniumTests",
        "test_add_inlines"
      ]
    ]
  ],
  "test_add_inline_link_absent_for_view_only_parent_model": [
    [
      "tests/admin_inlines/tests.py",
      [
        "SeleniumTests",
        "test_add_inline_link_absent_for_view_only_parent_model"
      ]
    ]
  ],
  "test_delete_inlines": [
    [
      "tests/admin_inlines/tests.py",
      [
        "SeleniumTests",
        "test_delete_inlines"
      ]
    ]
  ],
  "test_collapsed_inlines": [
    [
      "tests/admin_inlines/tests.py",
      [
        "SeleniumTests",
        "test_collapsed_inlines"
      ]
    ]
  ],
  "test_added_stacked_inline_with_collapsed_fields": [
    [
      "tests/admin_inlines/tests.py",
      [
        "SeleniumTests",
        "test_added_stacked_inline_with_collapsed_fields"
      ]
    ]
  ],
  "assertBorder": [
    [
      "tests/admin_inlines/tests.py",
      [
        "SeleniumTests",
        "assertBorder"
      ]
    ]
  ],
  "test_inline_formset_error_input_border": [
    [
      "tests/admin_inlines/tests.py",
      [
        "SeleniumTests",
        "test_inline_formset_error_input_border"
      ]
    ]
  ],
  "test_inline_formset_error": [
    [
      "tests/admin_inlines/tests.py",
      [
        "SeleniumTests",
        "test_inline_formset_error"
      ]
    ]
  ],
  "test_default_ordering": [
    [
      "tests/admin_ordering/tests.py",
      [
        "TestAdminOrdering",
        "test_default_ordering"
      ]
    ],
    [
      "tests/admin_ordering/tests.py",
      [
        "TestInlineModelAdminOrdering",
        "test_default_ordering"
      ]
    ],
    [
      "tests/ordering/tests.py",
      [
        "OrderingTests",
        "test_default_ordering"
      ]
    ]
  ],
  "test_specified_ordering": [
    [
      "tests/admin_ordering/tests.py",
      [
        "TestAdminOrdering",
        "test_specified_ordering"
      ]
    ],
    [
      "tests/admin_ordering/tests.py",
      [
        "TestInlineModelAdminOrdering",
        "test_specified_ordering"
      ]
    ]
  ],
  "test_dynamic_ordering": [
    [
      "tests/admin_ordering/tests.py",
      [
        "TestAdminOrdering",
        "test_dynamic_ordering"
      ]
    ]
  ],
  "check_ordering_of_field_choices": [
    [
      "tests/admin_ordering/tests.py",
      [
        "TestRelatedFieldsAdminOrdering",
        "check_ordering_of_field_choices"
      ]
    ]
  ],
  "test_no_admin_fallback_to_model_ordering": [
    [
      "tests/admin_ordering/tests.py",
      [
        "TestRelatedFieldsAdminOrdering",
        "test_no_admin_fallback_to_model_ordering"
      ]
    ]
  ],
  "test_admin_with_no_ordering_fallback_to_model_ordering": [
    [
      "tests/admin_ordering/tests.py",
      [
        "TestRelatedFieldsAdminOrdering",
        "test_admin_with_no_ordering_fallback_to_model_ordering"
      ]
    ]
  ],
  "test_admin_ordering_beats_model_ordering": [
    [
      "tests/admin_ordering/tests.py",
      [
        "TestRelatedFieldsAdminOrdering",
        "test_admin_ordering_beats_model_ordering"
      ]
    ]
  ],
  "test_custom_queryset_still_wins": [
    [
      "tests/admin_ordering/tests.py",
      [
        "TestRelatedFieldsAdminOrdering",
        "test_custom_queryset_still_wins"
      ]
    ]
  ],
  "test_bare_registration": [
    [
      "tests/admin_registration/tests.py",
      [
        "TestRegistration",
        "test_bare_registration"
      ]
    ]
  ],
  "test_registration_with_model_admin": [
    [
      "tests/admin_registration/tests.py",
      [
        "TestRegistration",
        "test_registration_with_model_admin"
      ]
    ]
  ],
  "test_prevent_double_registration": [
    [
      "tests/admin_registration/tests.py",
      [
        "TestRegistration",
        "test_prevent_double_registration"
      ]
    ]
  ],
  "test_prevent_double_registration_for_custom_admin": [
    [
      "tests/admin_registration/tests.py",
      [
        "TestRegistration",
        "test_prevent_double_registration_for_custom_admin"
      ]
    ]
  ],
  "test_registration_with_star_star_options": [
    [
      "tests/admin_registration/tests.py",
      [
        "TestRegistration",
        "test_registration_with_star_star_options"
      ]
    ]
  ],
  "test_star_star_overrides": [
    [
      "tests/admin_registration/tests.py",
      [
        "TestRegistration",
        "test_star_star_overrides"
      ]
    ]
  ],
  "test_iterable_registration": [
    [
      "tests/admin_registration/tests.py",
      [
        "TestRegistration",
        "test_iterable_registration"
      ]
    ]
  ],
  "test_abstract_model": [
    [
      "tests/admin_registration/tests.py",
      [
        "TestRegistration",
        "test_abstract_model"
      ]
    ]
  ],
  "test_is_registered_model": [
    [
      "tests/admin_registration/tests.py",
      [
        "TestRegistration",
        "test_is_registered_model"
      ]
    ]
  ],
  "test_is_registered_not_registered_model": [
    [
      "tests/admin_registration/tests.py",
      [
        "TestRegistration",
        "test_is_registered_not_registered_model"
      ]
    ]
  ],
  "test_basic_registration": [
    [
      "tests/admin_registration/tests.py",
      [
        "TestRegistrationDecorator",
        "test_basic_registration"
      ]
    ]
  ],
  "test_custom_site_registration": [
    [
      "tests/admin_registration/tests.py",
      [
        "TestRegistrationDecorator",
        "test_custom_site_registration"
      ]
    ]
  ],
  "test_multiple_registration": [
    [
      "tests/admin_registration/tests.py",
      [
        "TestRegistrationDecorator",
        "test_multiple_registration"
      ]
    ],
    [
      "tests/dispatch/tests.py",
      [
        "DispatcherTests",
        "test_multiple_registration"
      ]
    ]
  ],
  "test_wrapped_class_not_a_model_admin": [
    [
      "tests/admin_registration/tests.py",
      [
        "TestRegistrationDecorator",
        "test_wrapped_class_not_a_model_admin"
      ]
    ]
  ],
  "test_custom_site_not_an_admin_site": [
    [
      "tests/admin_registration/tests.py",
      [
        "TestRegistrationDecorator",
        "test_custom_site_not_an_admin_site"
      ]
    ]
  ],
  "test_empty_models_list_registration_fails": [
    [
      "tests/admin_registration/tests.py",
      [
        "TestRegistrationDecorator",
        "test_empty_models_list_registration_fails"
      ]
    ]
  ],
  "_run_test": [
    [
      "tests/admin_scripts/test_django_admin_py.py",
      [
        "DeprecationTests",
        "_run_test"
      ]
    ]
  ],
  "test_django_admin_py_deprecated": [
    [
      "tests/admin_scripts/test_django_admin_py.py",
      [
        "DeprecationTests",
        "test_django_admin_py_deprecated"
      ]
    ]
  ],
  "test_main_not_deprecated": [
    [
      "tests/admin_scripts/test_django_admin_py.py",
      [
        "DeprecationTests",
        "test_main_not_deprecated"
      ]
    ]
  ],
  "test_django_admin_py_equivalent_main": [
    [
      "tests/admin_scripts/test_django_admin_py.py",
      [
        "DeprecationTests",
        "test_django_admin_py_equivalent_main"
      ]
    ]
  ],
  "write_settings": [
    [
      "tests/admin_scripts/tests.py",
      [
        "AdminScriptTestCase",
        "write_settings"
      ]
    ]
  ],
  "_ext_backend_paths": [
    [
      "tests/admin_scripts/tests.py",
      [
        "AdminScriptTestCase",
        "_ext_backend_paths"
      ]
    ]
  ],
  "run_test": [
    [
      "tests/admin_scripts/tests.py",
      [
        "AdminScriptTestCase",
        "run_test"
      ]
    ]
  ],
  "run_django_admin": [
    [
      "tests/admin_scripts/tests.py",
      [
        "AdminScriptTestCase",
        "run_django_admin"
      ]
    ]
  ],
  "run_manage": [
    [
      "tests/admin_scripts/tests.py",
      [
        "AdminScriptTestCase",
        "run_manage"
      ]
    ]
  ],
  "assertNoOutput": [
    [
      "tests/admin_scripts/tests.py",
      [
        "AdminScriptTestCase",
        "assertNoOutput"
      ]
    ]
  ],
  "assertOutput": [
    [
      "tests/admin_scripts/tests.py",
      [
        "AdminScriptTestCase",
        "assertOutput"
      ]
    ]
  ],
  "assertNotInOutput": [
    [
      "tests/admin_scripts/tests.py",
      [
        "AdminScriptTestCase",
        "assertNotInOutput"
      ]
    ]
  ],
  "test_builtin_command": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminNoSettings",
        "test_builtin_command"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminDefaultSettings",
        "test_builtin_command"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminFullPathDefaultSettings",
        "test_builtin_command"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminMinimalSettings",
        "test_builtin_command"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminAlternateSettings",
        "test_builtin_command"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminMultipleSettings",
        "test_builtin_command"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminSettingsDirectory",
        "test_builtin_command"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageNoSettings",
        "test_builtin_command"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageDefaultSettings",
        "test_builtin_command"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageFullPathDefaultSettings",
        "test_builtin_command"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageMinimalSettings",
        "test_builtin_command"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageAlternateSettings",
        "test_builtin_command"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageMultipleSettings",
        "test_builtin_command"
      ]
    ]
  ],
  "test_builtin_with_bad_settings": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminNoSettings",
        "test_builtin_with_bad_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminDefaultSettings",
        "test_builtin_with_bad_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminFullPathDefaultSettings",
        "test_builtin_with_bad_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminMinimalSettings",
        "test_builtin_with_bad_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminAlternateSettings",
        "test_builtin_with_bad_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminMultipleSettings",
        "test_builtin_with_bad_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminSettingsDirectory",
        "test_builtin_with_bad_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageNoSettings",
        "test_builtin_with_bad_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageDefaultSettings",
        "test_builtin_with_bad_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageFullPathDefaultSettings",
        "test_builtin_with_bad_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageMinimalSettings",
        "test_builtin_with_bad_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageAlternateSettings",
        "test_builtin_with_bad_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageMultipleSettings",
        "test_builtin_with_bad_settings"
      ]
    ]
  ],
  "test_builtin_with_bad_environment": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminNoSettings",
        "test_builtin_with_bad_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminDefaultSettings",
        "test_builtin_with_bad_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminFullPathDefaultSettings",
        "test_builtin_with_bad_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminMinimalSettings",
        "test_builtin_with_bad_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminAlternateSettings",
        "test_builtin_with_bad_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminMultipleSettings",
        "test_builtin_with_bad_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminSettingsDirectory",
        "test_builtin_with_bad_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageNoSettings",
        "test_builtin_with_bad_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageDefaultSettings",
        "test_builtin_with_bad_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageFullPathDefaultSettings",
        "test_builtin_with_bad_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageMinimalSettings",
        "test_builtin_with_bad_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageAlternateSettings",
        "test_builtin_with_bad_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageMultipleSettings",
        "test_builtin_with_bad_environment"
      ]
    ]
  ],
  "test_commands_with_invalid_settings": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminNoSettings",
        "test_commands_with_invalid_settings"
      ]
    ]
  ],
  "test_builtin_with_settings": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminDefaultSettings",
        "test_builtin_with_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminFullPathDefaultSettings",
        "test_builtin_with_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminMinimalSettings",
        "test_builtin_with_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminAlternateSettings",
        "test_builtin_with_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminMultipleSettings",
        "test_builtin_with_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminSettingsDirectory",
        "test_builtin_with_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageDefaultSettings",
        "test_builtin_with_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageFullPathDefaultSettings",
        "test_builtin_with_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageMinimalSettings",
        "test_builtin_with_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageAlternateSettings",
        "test_builtin_with_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageMultipleSettings",
        "test_builtin_with_settings"
      ]
    ]
  ],
  "test_builtin_with_environment": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminDefaultSettings",
        "test_builtin_with_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminFullPathDefaultSettings",
        "test_builtin_with_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminMinimalSettings",
        "test_builtin_with_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminAlternateSettings",
        "test_builtin_with_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminMultipleSettings",
        "test_builtin_with_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminSettingsDirectory",
        "test_builtin_with_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageDefaultSettings",
        "test_builtin_with_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageFullPathDefaultSettings",
        "test_builtin_with_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageMinimalSettings",
        "test_builtin_with_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageAlternateSettings",
        "test_builtin_with_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageMultipleSettings",
        "test_builtin_with_environment"
      ]
    ]
  ],
  "test_custom_command": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminDefaultSettings",
        "test_custom_command"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminFullPathDefaultSettings",
        "test_custom_command"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminMinimalSettings",
        "test_custom_command"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminAlternateSettings",
        "test_custom_command"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminMultipleSettings",
        "test_custom_command"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminSettingsDirectory",
        "test_custom_command"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageDefaultSettings",
        "test_custom_command"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageFullPathDefaultSettings",
        "test_custom_command"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageMinimalSettings",
        "test_custom_command"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageAlternateSettings",
        "test_custom_command"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageMultipleSettings",
        "test_custom_command"
      ]
    ],
    [
      "tests/bash_completion/tests.py",
      [
        "BashCompletionTests",
        "test_custom_command"
      ]
    ]
  ],
  "test_custom_command_with_settings": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminDefaultSettings",
        "test_custom_command_with_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminFullPathDefaultSettings",
        "test_custom_command_with_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminMinimalSettings",
        "test_custom_command_with_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminAlternateSettings",
        "test_custom_command_with_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminMultipleSettings",
        "test_custom_command_with_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageDefaultSettings",
        "test_custom_command_with_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageFullPathDefaultSettings",
        "test_custom_command_with_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageMinimalSettings",
        "test_custom_command_with_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageAlternateSettings",
        "test_custom_command_with_settings"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageMultipleSettings",
        "test_custom_command_with_settings"
      ]
    ]
  ],
  "test_custom_command_with_environment": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminDefaultSettings",
        "test_custom_command_with_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminFullPathDefaultSettings",
        "test_custom_command_with_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminMinimalSettings",
        "test_custom_command_with_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminAlternateSettings",
        "test_custom_command_with_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminMultipleSettings",
        "test_custom_command_with_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageDefaultSettings",
        "test_custom_command_with_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageFullPathDefaultSettings",
        "test_custom_command_with_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageMinimalSettings",
        "test_custom_command_with_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageAlternateSettings",
        "test_custom_command_with_environment"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageMultipleSettings",
        "test_custom_command_with_environment"
      ]
    ]
  ],
  "test_setup_environ": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminSettingsDirectory",
        "test_setup_environ"
      ]
    ]
  ],
  "test_setup_environ_custom_template": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminSettingsDirectory",
        "test_setup_environ_custom_template"
      ]
    ]
  ],
  "test_startapp_unicode_name": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminSettingsDirectory",
        "test_startapp_unicode_name"
      ]
    ]
  ],
  "test_non_existent_command_output": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageManuallyConfiguredSettings",
        "test_non_existent_command_output"
      ]
    ]
  ],
  "test_custom_command_output_color": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageAlternateSettings",
        "test_custom_command_output_color"
      ]
    ]
  ],
  "write_settings_with_import_error": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageSettingsWithSettingsErrors",
        "write_settings_with_import_error"
      ]
    ]
  ],
  "test_import_error": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageSettingsWithSettingsErrors",
        "test_import_error"
      ]
    ]
  ],
  "test_attribute_error": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageSettingsWithSettingsErrors",
        "test_attribute_error"
      ]
    ],
    [
      "tests/custom_columns/tests.py",
      [
        "CustomColumnsTests",
        "test_attribute_error"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "PrefetchRelatedTests",
        "test_attribute_error"
      ]
    ]
  ],
  "test_key_error": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageSettingsWithSettingsErrors",
        "test_key_error"
      ]
    ]
  ],
  "test_help": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageSettingsWithSettingsErrors",
        "test_help"
      ]
    ],
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_help"
      ]
    ],
    [
      "tests/bash_completion/tests.py",
      [
        "BashCompletionTests",
        "test_help"
      ]
    ]
  ],
  "test_nonexistent_app": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageCheck",
        "test_nonexistent_app"
      ]
    ]
  ],
  "test_broken_app": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageCheck",
        "test_broken_app"
      ]
    ]
  ],
  "test_complex_app": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageCheck",
        "test_complex_app"
      ]
    ]
  ],
  "test_app_with_import": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageCheck",
        "test_app_with_import"
      ]
    ]
  ],
  "test_output_format": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageCheck",
        "test_output_format"
      ]
    ]
  ],
  "test_warning_does_not_halt": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageCheck",
        "test_warning_does_not_halt"
      ]
    ]
  ],
  "assertServerSettings": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageRunserver",
        "assertServerSettings"
      ]
    ]
  ],
  "test_runserver_addrport": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageRunserver",
        "test_runserver_addrport"
      ]
    ]
  ],
  "test_runner_addrport_ipv6": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageRunserver",
        "test_runner_addrport_ipv6"
      ]
    ]
  ],
  "test_runner_hostname": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageRunserver",
        "test_runner_hostname"
      ]
    ]
  ],
  "test_runner_hostname_ipv6": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageRunserver",
        "test_runner_hostname_ipv6"
      ]
    ]
  ],
  "test_runner_custom_defaults": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageRunserver",
        "test_runner_custom_defaults"
      ]
    ]
  ],
  "test_runner_custom_defaults_ipv6": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageRunserver",
        "test_runner_custom_defaults_ipv6"
      ]
    ]
  ],
  "test_runner_ambiguous": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageRunserver",
        "test_runner_ambiguous"
      ]
    ]
  ],
  "test_no_database": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageRunserver",
        "test_no_database"
      ]
    ]
  ],
  "test_readonly_database": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageRunserver",
        "test_readonly_database"
      ]
    ]
  ],
  "test_migration_warning_one_app": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageRunserverMigrationWarning",
        "test_migration_warning_one_app"
      ]
    ]
  ],
  "test_migration_warning_multiple_apps": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageRunserverMigrationWarning",
        "test_migration_warning_multiple_apps"
      ]
    ]
  ],
  "test_empty_allowed_hosts_error": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageRunserverEmptyAllowedHosts",
        "test_empty_allowed_hosts_error"
      ]
    ]
  ],
  "test_testserver_handle_params": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageTestserver",
        "test_testserver_handle_params"
      ]
    ]
  ],
  "test_params_to_runserver": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ManageTestserver",
        "test_params_to_runserver"
      ]
    ]
  ],
  "test_version": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_version"
      ]
    ]
  ],
  "test_version_alternative": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_version_alternative"
      ]
    ]
  ],
  "test_help_commands": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_help_commands"
      ]
    ]
  ],
  "test_help_alternative": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_help_alternative"
      ]
    ]
  ],
  "test_help_short_altert": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_help_short_altert"
      ]
    ]
  ],
  "test_specific_help": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_specific_help"
      ]
    ]
  ],
  "test_color_style": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_color_style"
      ]
    ]
  ],
  "test_command_color": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_command_color"
      ]
    ]
  ],
  "test_command_no_color": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_command_no_color"
      ]
    ]
  ],
  "test_force_color_execute": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_force_color_execute"
      ]
    ]
  ],
  "test_force_color_command_init": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_force_color_command_init"
      ]
    ]
  ],
  "test_no_color_force_color_mutually_exclusive_execute": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_no_color_force_color_mutually_exclusive_execute"
      ]
    ]
  ],
  "test_no_color_force_color_mutually_exclusive_command_init": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_no_color_force_color_mutually_exclusive_command_init"
      ]
    ]
  ],
  "test_custom_stdout": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_custom_stdout"
      ]
    ]
  ],
  "test_custom_stderr": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_custom_stderr"
      ]
    ]
  ],
  "test_base_command": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_base_command"
      ]
    ]
  ],
  "test_base_command_no_label": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_base_command_no_label"
      ]
    ]
  ],
  "test_base_command_multiple_label": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_base_command_multiple_label"
      ]
    ]
  ],
  "test_base_command_with_option": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_base_command_with_option"
      ]
    ]
  ],
  "test_base_command_with_options": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_base_command_with_options"
      ]
    ]
  ],
  "test_base_command_with_wrong_option": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_base_command_with_wrong_option"
      ]
    ]
  ],
  "_test_base_command": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "_test_base_command"
      ]
    ]
  ],
  "raise_command_error": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_base_run_from_argv",
        "raise_command_error"
      ]
    ]
  ],
  "test_base_run_from_argv": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_base_run_from_argv"
      ]
    ]
  ],
  "test_run_from_argv_non_ascii_error": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_run_from_argv_non_ascii_error"
      ]
    ]
  ],
  "test_run_from_argv_closes_connections": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_run_from_argv_closes_connections"
      ]
    ]
  ],
  "test_noargs": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_noargs"
      ]
    ]
  ],
  "test_noargs_with_args": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_noargs_with_args"
      ]
    ]
  ],
  "test_app_command": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_app_command"
      ]
    ]
  ],
  "test_app_command_no_apps": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_app_command_no_apps"
      ]
    ]
  ],
  "test_app_command_multiple_apps": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_app_command_multiple_apps"
      ]
    ]
  ],
  "test_app_command_invalid_app_label": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_app_command_invalid_app_label"
      ]
    ]
  ],
  "test_app_command_some_invalid_app_labels": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_app_command_some_invalid_app_labels"
      ]
    ]
  ],
  "test_label_command": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_label_command"
      ]
    ]
  ],
  "test_label_command_no_label": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_label_command_no_label"
      ]
    ]
  ],
  "test_label_command_multiple_label": [
    [
      "tests/admin_scripts/tests.py",
      [
        "CommandTypes",
        "test_label_command_multiple_label"
      ]
    ]
  ],
  "test_precedence": [
    [
      "tests/admin_scripts/tests.py",
      [
        "Discovery",
        "test_precedence"
      ]
    ],
    [
      "tests/template_tests/test_smartif.py",
      [
        "SmartIfTests",
        "test_precedence"
      ]
    ]
  ],
  "test_setting_then_option": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ArgumentOrder",
        "test_setting_then_option"
      ]
    ]
  ],
  "test_setting_then_short_option": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ArgumentOrder",
        "test_setting_then_short_option"
      ]
    ]
  ],
  "test_option_then_setting": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ArgumentOrder",
        "test_option_then_setting"
      ]
    ]
  ],
  "test_short_option_then_setting": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ArgumentOrder",
        "test_short_option_then_setting"
      ]
    ]
  ],
  "test_option_then_setting_then_option": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ArgumentOrder",
        "test_option_then_setting_then_option"
      ]
    ]
  ],
  "_test": [
    [
      "tests/admin_scripts/tests.py",
      [
        "ArgumentOrder",
        "_test"
      ]
    ],
    [
      "tests/test_runner/tests.py",
      [
        "AutoIncrementResetTest",
        "_test"
      ]
    ]
  ],
  "test_wrong_args": [
    [
      "tests/admin_scripts/tests.py",
      [
        "StartProject",
        "test_wrong_args"
      ]
    ]
  ],
  "test_simple_project": [
    [
      "tests/admin_scripts/tests.py",
      [
        "StartProject",
        "test_simple_project"
      ]
    ]
  ],
  "test_invalid_project_name": [
    [
      "tests/admin_scripts/tests.py",
      [
        "StartProject",
        "test_invalid_project_name"
      ]
    ]
  ],
  "test_importable_project_name": [
    [
      "tests/admin_scripts/tests.py",
      [
        "StartProject",
        "test_importable_project_name"
      ]
    ]
  ],
  "test_simple_project_different_directory": [
    [
      "tests/admin_scripts/tests.py",
      [
        "StartProject",
        "test_simple_project_different_directory"
      ]
    ]
  ],
  "test_custom_project_template": [
    [
      "tests/admin_scripts/tests.py",
      [
        "StartProject",
        "test_custom_project_template"
      ]
    ]
  ],
  "test_template_dir_with_trailing_slash": [
    [
      "tests/admin_scripts/tests.py",
      [
        "StartProject",
        "test_template_dir_with_trailing_slash"
      ]
    ]
  ],
  "test_custom_project_template_from_tarball_by_path": [
    [
      "tests/admin_scripts/tests.py",
      [
        "StartProject",
        "test_custom_project_template_from_tarball_by_path"
      ]
    ]
  ],
  "test_custom_project_template_from_tarball_to_alternative_location": [
    [
      "tests/admin_scripts/tests.py",
      [
        "StartProject",
        "test_custom_project_template_from_tarball_to_alternative_location"
      ]
    ]
  ],
  "test_custom_project_template_from_tarball_by_url": [
    [
      "tests/admin_scripts/tests.py",
      [
        "StartProject",
        "test_custom_project_template_from_tarball_by_url"
      ]
    ]
  ],
  "test_project_template_tarball_url": [
    [
      "tests/admin_scripts/tests.py",
      [
        "StartProject",
        "test_project_template_tarball_url"
      ]
    ]
  ],
  "test_file_without_extension": [
    [
      "tests/admin_scripts/tests.py",
      [
        "StartProject",
        "test_file_without_extension"
      ]
    ]
  ],
  "test_custom_project_template_context_variables": [
    [
      "tests/admin_scripts/tests.py",
      [
        "StartProject",
        "test_custom_project_template_context_variables"
      ]
    ]
  ],
  "test_no_escaping_of_project_variables": [
    [
      "tests/admin_scripts/tests.py",
      [
        "StartProject",
        "test_no_escaping_of_project_variables"
      ]
    ]
  ],
  "test_custom_project_destination_missing": [
    [
      "tests/admin_scripts/tests.py",
      [
        "StartProject",
        "test_custom_project_destination_missing"
      ]
    ]
  ],
  "test_custom_project_template_with_non_ascii_templates": [
    [
      "tests/admin_scripts/tests.py",
      [
        "StartProject",
        "test_custom_project_template_with_non_ascii_templates"
      ]
    ]
  ],
  "test_invalid_name": [
    [
      "tests/admin_scripts/tests.py",
      [
        "StartApp",
        "test_invalid_name"
      ]
    ],
    [
      "tests/sites_framework/tests.py",
      [
        "CurrentSiteManagerChecksTests",
        "test_invalid_name"
      ]
    ]
  ],
  "test_importable_name": [
    [
      "tests/admin_scripts/tests.py",
      [
        "StartApp",
        "test_importable_name"
      ]
    ]
  ],
  "test_invalid_target_name": [
    [
      "tests/admin_scripts/tests.py",
      [
        "StartApp",
        "test_invalid_target_name"
      ]
    ]
  ],
  "test_importable_target_name": [
    [
      "tests/admin_scripts/tests.py",
      [
        "StartApp",
        "test_importable_target_name"
      ]
    ]
  ],
  "test_overlaying_app": [
    [
      "tests/admin_scripts/tests.py",
      [
        "StartApp",
        "test_overlaying_app"
      ]
    ]
  ],
  "test_basic": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DiffSettings",
        "test_basic"
      ]
    ],
    [
      "tests/admin_widgets/tests.py",
      [
        "HorizontalVerticalFilterSeleniumTests",
        "test_basic"
      ]
    ],
    [
      "tests/auth_tests/test_models.py",
      [
        "UserWithPermTestCase",
        "test_basic"
      ]
    ],
    [
      "tests/db_functions/comparison/test_coalesce.py",
      [
        "CoalesceTests",
        "test_basic"
      ]
    ],
    [
      "tests/db_functions/comparison/test_greatest.py",
      [
        "GreatestTests",
        "test_basic"
      ]
    ],
    [
      "tests/db_functions/comparison/test_least.py",
      [
        "LeastTests",
        "test_basic"
      ]
    ],
    [
      "tests/db_functions/comparison/test_nullif.py",
      [
        "NullIfTests",
        "test_basic"
      ]
    ],
    [
      "tests/db_functions/datetime/test_now.py",
      [
        "NowTests",
        "test_basic"
      ]
    ],
    [
      "tests/db_functions/text/test_chr.py",
      [
        "ChrTests",
        "test_basic"
      ]
    ],
    [
      "tests/db_functions/text/test_concat.py",
      [
        "ConcatTests",
        "test_basic"
      ]
    ],
    [
      "tests/db_functions/text/test_left.py",
      [
        "LeftTests",
        "test_basic"
      ]
    ],
    [
      "tests/db_functions/text/test_length.py",
      [
        "LengthTests",
        "test_basic"
      ]
    ],
    [
      "tests/db_functions/text/test_lower.py",
      [
        "LowerTests",
        "test_basic"
      ]
    ],
    [
      "tests/db_functions/text/test_md5.py",
      [
        "MD5Tests",
        "test_basic"
      ]
    ],
    [
      "tests/db_functions/text/test_ord.py",
      [
        "OrdTests",
        "test_basic"
      ]
    ],
    [
      "tests/db_functions/text/test_repeat.py",
      [
        "RepeatTests",
        "test_basic"
      ]
    ],
    [
      "tests/db_functions/text/test_reverse.py",
      [
        "ReverseTests",
        "test_basic"
      ]
    ],
    [
      "tests/db_functions/text/test_right.py",
      [
        "RightTests",
        "test_basic"
      ]
    ],
    [
      "tests/db_functions/text/test_sha1.py",
      [
        "SHA1Tests",
        "test_basic"
      ]
    ],
    [
      "tests/db_functions/text/test_sha224.py",
      [
        "SHA224Tests",
        "test_basic"
      ]
    ],
    [
      "tests/db_functions/text/test_sha256.py",
      [
        "SHA256Tests",
        "test_basic"
      ]
    ],
    [
      "tests/db_functions/text/test_sha384.py",
      [
        "SHA384Tests",
        "test_basic"
      ]
    ],
    [
      "tests/db_functions/text/test_sha512.py",
      [
        "SHA512Tests",
        "test_basic"
      ]
    ],
    [
      "tests/db_functions/text/test_substr.py",
      [
        "SubstrTests",
        "test_basic"
      ]
    ],
    [
      "tests/db_functions/text/test_upper.py",
      [
        "UpperTests",
        "test_basic"
      ]
    ],
    [
      "tests/dbshell/test_postgresql.py",
      [
        "PostgreSqlDbshellCommandTestCase",
        "test_basic"
      ]
    ],
    [
      "tests/defer_regress/tests.py",
      [
        "DeferRegressionTest",
        "test_basic"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "RawQuerySetTests",
        "test_basic"
      ]
    ],
    [
      "tests/queries/test_explain.py",
      [
        "ExplainTests",
        "test_basic"
      ]
    ],
    [
      "tests/requests/tests.py",
      [
        "HttpHeadersTests",
        "test_basic"
      ]
    ],
    [
      "tests/save_delete_hooks/tests.py",
      [
        "SaveDeleteHookTests",
        "test_basic"
      ]
    ],
    [
      "tests/select_related_onetoone/tests.py",
      [
        "ReverseSelectRelatedTestCase",
        "test_basic"
      ]
    ],
    [
      "tests/sites_tests/tests.py",
      [
        "CreateDefaultSiteTests",
        "test_basic"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_json_script.py",
      [
        "JsonScriptTests",
        "test_basic"
      ]
    ],
    [
      "tests/utils_tests/test_topological_sort.py",
      [
        "TopologicalSortTests",
        "test_basic"
      ]
    ]
  ],
  "test_settings_configured": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DiffSettings",
        "test_settings_configured"
      ]
    ]
  ],
  "test_dynamic_settings_configured": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DiffSettings",
        "test_dynamic_settings_configured"
      ]
    ]
  ],
  "test_all": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DiffSettings",
        "test_all"
      ]
    ],
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerGetDatabasesTests",
        "test_all"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "DatabaseAliasTests",
        "test_all"
      ]
    ]
  ],
  "test_custom_default": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DiffSettings",
        "test_custom_default"
      ]
    ]
  ],
  "test_unified": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DiffSettings",
        "test_unified"
      ]
    ]
  ],
  "test_unified_all": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DiffSettings",
        "test_unified_all"
      ]
    ]
  ],
  "test_pks_parsing": [
    [
      "tests/admin_scripts/tests.py",
      [
        "Dumpdata",
        "test_pks_parsing"
      ]
    ]
  ],
  "test_program_name_in_help": [
    [
      "tests/admin_scripts/tests.py",
      [
        "MainModule",
        "test_program_name_in_help"
      ]
    ]
  ],
  "test_suggestions": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminSuggestions",
        "test_suggestions"
      ]
    ]
  ],
  "test_no_suggestions": [
    [
      "tests/admin_scripts/tests.py",
      [
        "DjangoAdminSuggestions",
        "test_no_suggestions"
      ]
    ]
  ],
  "test_from_model": [
    [
      "tests/admin_utils/models.py",
      [
        "Article",
        "test_from_model"
      ]
    ],
    [
      "tests/admin_utils/tests.py",
      [
        "UtilsTests",
        "test_label_for_field",
        "MockModelAdmin",
        "test_from_model"
      ]
    ]
  ],
  "test_from_model_with_override": [
    [
      "tests/admin_utils/models.py",
      [
        "Article",
        "test_from_model_with_override"
      ]
    ]
  ],
  "test_logentry_save": [
    [
      "tests/admin_utils/test_logentry.py",
      [
        "LogEntryTests",
        "test_logentry_save"
      ]
    ]
  ],
  "test_logentry_change_message": [
    [
      "tests/admin_utils/test_logentry.py",
      [
        "LogEntryTests",
        "test_logentry_change_message"
      ]
    ]
  ],
  "test_logentry_change_message_not_json": [
    [
      "tests/admin_utils/test_logentry.py",
      [
        "LogEntryTests",
        "test_logentry_change_message_not_json"
      ]
    ]
  ],
  "test_logentry_change_message_localized_datetime_input": [
    [
      "tests/admin_utils/test_logentry.py",
      [
        "LogEntryTests",
        "test_logentry_change_message_localized_datetime_input"
      ]
    ]
  ],
  "test_logentry_change_message_formsets": [
    [
      "tests/admin_utils/test_logentry.py",
      [
        "LogEntryTests",
        "test_logentry_change_message_formsets"
      ]
    ]
  ],
  "test_logentry_get_edited_object": [
    [
      "tests/admin_utils/test_logentry.py",
      [
        "LogEntryTests",
        "test_logentry_get_edited_object"
      ]
    ]
  ],
  "test_logentry_get_admin_url": [
    [
      "tests/admin_utils/test_logentry.py",
      [
        "LogEntryTests",
        "test_logentry_get_admin_url"
      ]
    ]
  ],
  "test_logentry_unicode": [
    [
      "tests/admin_utils/test_logentry.py",
      [
        "LogEntryTests",
        "test_logentry_unicode"
      ]
    ]
  ],
  "test_logentry_repr": [
    [
      "tests/admin_utils/test_logentry.py",
      [
        "LogEntryTests",
        "test_logentry_repr"
      ]
    ]
  ],
  "test_log_action": [
    [
      "tests/admin_utils/test_logentry.py",
      [
        "LogEntryTests",
        "test_log_action"
      ]
    ]
  ],
  "test_recentactions_without_content_type": [
    [
      "tests/admin_utils/test_logentry.py",
      [
        "LogEntryTests",
        "test_recentactions_without_content_type"
      ]
    ]
  ],
  "test_proxy_model_content_type_is_used_for_log_entries": [
    [
      "tests/admin_utils/test_logentry.py",
      [
        "LogEntryTests",
        "test_proxy_model_content_type_is_used_for_log_entries"
      ]
    ]
  ],
  "test_action_flag_choices": [
    [
      "tests/admin_utils/test_logentry.py",
      [
        "LogEntryTests",
        "test_action_flag_choices"
      ]
    ]
  ],
  "_check": [
    [
      "tests/admin_utils/tests.py",
      [
        "NestedObjectsTests",
        "_check"
      ]
    ]
  ],
  "_connect": [
    [
      "tests/admin_utils/tests.py",
      [
        "NestedObjectsTests",
        "_connect"
      ]
    ]
  ],
  "_collect": [
    [
      "tests/admin_utils/tests.py",
      [
        "NestedObjectsTests",
        "_collect"
      ]
    ]
  ],
  "test_unrelated_roots": [
    [
      "tests/admin_utils/tests.py",
      [
        "NestedObjectsTests",
        "test_unrelated_roots"
      ]
    ]
  ],
  "test_siblings": [
    [
      "tests/admin_utils/tests.py",
      [
        "NestedObjectsTests",
        "test_siblings"
      ]
    ]
  ],
  "test_non_added_parent": [
    [
      "tests/admin_utils/tests.py",
      [
        "NestedObjectsTests",
        "test_non_added_parent"
      ]
    ]
  ],
  "test_cyclic": [
    [
      "tests/admin_utils/tests.py",
      [
        "NestedObjectsTests",
        "test_cyclic"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewDeletedObjectsTest",
        "test_cyclic"
      ]
    ]
  ],
  "test_queries": [
    [
      "tests/admin_utils/tests.py",
      [
        "NestedObjectsTests",
        "test_queries"
      ]
    ],
    [
      "tests/backends/tests.py",
      [
        "BackendTestCase",
        "test_queries"
      ]
    ]
  ],
  "test_on_delete_do_nothing": [
    [
      "tests/admin_utils/tests.py",
      [
        "NestedObjectsTests",
        "test_on_delete_do_nothing"
      ]
    ]
  ],
  "test_relation_on_abstract": [
    [
      "tests/admin_utils/tests.py",
      [
        "NestedObjectsTests",
        "test_relation_on_abstract"
      ]
    ]
  ],
  "get_admin_value": [
    [
      "tests/admin_utils/tests.py",
      [
        "UtilsTests",
        "test_values_from_lookup_field",
        "MockModelAdmin",
        "get_admin_value"
      ]
    ]
  ],
  "simple_function": [
    [
      "tests/admin_utils/tests.py",
      [
        "UtilsTests",
        "test_values_from_lookup_field",
        "simple_function"
      ]
    ]
  ],
  "test_values_from_lookup_field": [
    [
      "tests/admin_utils/tests.py",
      [
        "UtilsTests",
        "test_values_from_lookup_field"
      ]
    ]
  ],
  "test_null_display_for_field": [
    [
      "tests/admin_utils/tests.py",
      [
        "UtilsTests",
        "test_null_display_for_field"
      ]
    ]
  ],
  "test_number_formats_display_for_field": [
    [
      "tests/admin_utils/tests.py",
      [
        "UtilsTests",
        "test_number_formats_display_for_field"
      ]
    ]
  ],
  "test_number_formats_with_thousand_separator_display_for_field": [
    [
      "tests/admin_utils/tests.py",
      [
        "UtilsTests",
        "test_number_formats_with_thousand_separator_display_for_field"
      ]
    ]
  ],
  "test_list_display_for_value": [
    [
      "tests/admin_utils/tests.py",
      [
        "UtilsTests",
        "test_list_display_for_value"
      ]
    ]
  ],
  "test_list_display_for_value_boolean": [
    [
      "tests/admin_utils/tests.py",
      [
        "UtilsTests",
        "test_list_display_for_value_boolean"
      ]
    ]
  ],
  "test_callable": [
    [
      "tests/admin_utils/tests.py",
      [
        "UtilsTests",
        "test_label_for_field",
        "test_callable"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewOnSiteTests",
        "test_callable"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "InlineAdminViewOnSiteTest",
        "test_callable"
      ]
    ],
    [
      "tests/auth_tests/test_decorators.py",
      [
        "LoginRequiredTestCase",
        "test_callable"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListFilterTests",
        "test_callable"
      ]
    ],
    [
      "tests/template_tests/test_callables.py",
      [
        "CallableVariablesTests",
        "test_callable"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "AssertWarnsMessageTests",
        "test_callable"
      ]
    ]
  ],
  "test_label_for_field": [
    [
      "tests/admin_utils/tests.py",
      [
        "UtilsTests",
        "test_label_for_field"
      ]
    ]
  ],
  "test_label_for_field_form_argument": [
    [
      "tests/admin_utils/tests.py",
      [
        "UtilsTests",
        "test_label_for_field_form_argument"
      ]
    ]
  ],
  "test_label_for_property": [
    [
      "tests/admin_utils/tests.py",
      [
        "UtilsTests",
        "test_label_for_property"
      ]
    ]
  ],
  "test_related_name": [
    [
      "tests/admin_utils/tests.py",
      [
        "UtilsTests",
        "test_related_name"
      ]
    ]
  ],
  "test_safestring_in_field_label": [
    [
      "tests/admin_utils/tests.py",
      [
        "UtilsTests",
        "test_safestring_in_field_label"
      ]
    ]
  ],
  "test_flatten": [
    [
      "tests/admin_utils/tests.py",
      [
        "UtilsTests",
        "test_flatten"
      ]
    ]
  ],
  "test_flatten_fieldsets": [
    [
      "tests/admin_utils/tests.py",
      [
        "UtilsTests",
        "test_flatten_fieldsets"
      ]
    ]
  ],
  "test_quote": [
    [
      "tests/admin_utils/tests.py",
      [
        "UtilsTests",
        "test_quote"
      ]
    ],
    [
      "tests/utils_tests/test_http.py",
      [
        "URLQuoteTests",
        "test_quote"
      ]
    ]
  ],
  "callable_year": [
    [
      "tests/admin_views/admin.py",
      [
        "callable_year"
      ]
    ]
  ],
  "order_by_expression": [
    [
      "tests/admin_views/admin.py",
      [
        "ArticleAdmin",
        "order_by_expression"
      ]
    ]
  ],
  "order_by_f_expression": [
    [
      "tests/admin_views/admin.py",
      [
        "ArticleAdmin",
        "order_by_f_expression"
      ]
    ]
  ],
  "order_by_orderby_expression": [
    [
      "tests/admin_views/admin.py",
      [
        "ArticleAdmin",
        "order_by_orderby_expression"
      ]
    ]
  ],
  "modeladmin_year": [
    [
      "tests/admin_views/admin.py",
      [
        "ArticleAdmin",
        "modeladmin_year"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "ArticleAdmin6",
        "modeladmin_year"
      ]
    ]
  ],
  "sketch": [
    [
      "tests/admin_views/admin.py",
      [
        "InquisitionAdmin",
        "sketch"
      ]
    ]
  ],
  "mail_admin": [
    [
      "tests/admin_views/admin.py",
      [
        "SubscriberAdmin",
        "mail_admin"
      ]
    ]
  ],
  "external_mail": [
    [
      "tests/admin_views/admin.py",
      [
        "external_mail"
      ]
    ]
  ],
  "redirect_to": [
    [
      "tests/admin_views/admin.py",
      [
        "redirect_to"
      ]
    ]
  ],
  "no_perm": [
    [
      "tests/admin_views/admin.py",
      [
        "no_perm"
      ]
    ]
  ],
  "multiline": [
    [
      "tests/admin_views/admin.py",
      [
        "LinkInline",
        "multiline"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "PostAdmin",
        "multiline"
      ]
    ]
  ],
  "coolness": [
    [
      "tests/admin_views/admin.py",
      [
        "PostAdmin",
        "coolness"
      ]
    ]
  ],
  "multiline_html": [
    [
      "tests/admin_views/admin.py",
      [
        "PostAdmin",
        "multiline_html"
      ]
    ]
  ],
  "colored_name": [
    [
      "tests/admin_views/admin.py",
      [
        "ComplexSortedPersonAdmin",
        "colored_name"
      ]
    ]
  ],
  "some_admin_order": [
    [
      "tests/admin_views/admin.py",
      [
        "AdminOrderedAdminMethodAdmin",
        "some_admin_order"
      ]
    ]
  ],
  "admin_ordered_callable": [
    [
      "tests/admin_views/admin.py",
      [
        "admin_ordered_callable"
      ]
    ]
  ],
  "callable_on_unknown": [
    [
      "tests/admin_views/admin.py",
      [
        "callable_on_unknown"
      ]
    ]
  ],
  "message_debug": [
    [
      "tests/admin_views/admin.py",
      [
        "MessageTestingAdmin",
        "message_debug"
      ]
    ]
  ],
  "message_info": [
    [
      "tests/admin_views/admin.py",
      [
        "MessageTestingAdmin",
        "message_info"
      ]
    ]
  ],
  "message_success": [
    [
      "tests/admin_views/admin.py",
      [
        "MessageTestingAdmin",
        "message_success"
      ]
    ]
  ],
  "message_warning": [
    [
      "tests/admin_views/admin.py",
      [
        "MessageTestingAdmin",
        "message_warning"
      ]
    ]
  ],
  "message_error": [
    [
      "tests/admin_views/admin.py",
      [
        "MessageTestingAdmin",
        "message_error"
      ]
    ]
  ],
  "message_extra_tags": [
    [
      "tests/admin_views/admin.py",
      [
        "MessageTestingAdmin",
        "message_extra_tags"
      ]
    ]
  ],
  "view_on_site": [
    [
      "tests/admin_views/admin.py",
      [
        "WorkerAdmin",
        "view_on_site"
      ]
    ],
    [
      "tests/admin_views/admin.py",
      [
        "WorkerInlineAdmin",
        "view_on_site"
      ]
    ]
  ],
  "my_view": [
    [
      "tests/admin_views/customadmin.py",
      [
        "Admin2",
        "my_view"
      ]
    ]
  ],
  "name_property": [
    [
      "tests/admin_views/models.py",
      [
        "Section",
        "name_property"
      ]
    ]
  ],
  "model_year": [
    [
      "tests/admin_views/models.py",
      [
        "Article",
        "model_year"
      ]
    ]
  ],
  "model_year_reversed": [
    [
      "tests/admin_views/models.py",
      [
        "Article",
        "model_year_reversed"
      ]
    ]
  ],
  "property_year": [
    [
      "tests/admin_views/models.py",
      [
        "Article",
        "property_year"
      ]
    ]
  ],
  "model_month": [
    [
      "tests/admin_views/models.py",
      [
        "Article",
        "model_month"
      ]
    ]
  ],
  "today_callable_dict": [
    [
      "tests/admin_views/models.py",
      [
        "today_callable_dict"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "today_callable_dict"
      ]
    ]
  ],
  "today_callable_q": [
    [
      "tests/admin_views/models.py",
      [
        "today_callable_q"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "today_callable_q"
      ]
    ]
  ],
  "link_posted_default": [
    [
      "tests/admin_views/models.py",
      [
        "link_posted_default"
      ]
    ]
  ],
  "awesomeness_level": [
    [
      "tests/admin_views/models.py",
      [
        "Post",
        "awesomeness_level"
      ]
    ]
  ],
  "some_order": [
    [
      "tests/admin_views/models.py",
      [
        "AdminOrderedModelMethod",
        "some_order"
      ]
    ]
  ],
  "test_model_admin_custom_action": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest",
        "test_model_admin_custom_action"
      ]
    ]
  ],
  "test_model_admin_default_delete_action": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest",
        "test_model_admin_default_delete_action"
      ]
    ]
  ],
  "test_default_delete_action_nonexistent_pk": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest",
        "test_default_delete_action_nonexistent_pk"
      ]
    ]
  ],
  "test_non_localized_pk": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest",
        "test_non_localized_pk"
      ]
    ]
  ],
  "test_model_admin_default_delete_action_protected": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest",
        "test_model_admin_default_delete_action_protected"
      ]
    ]
  ],
  "test_model_admin_default_delete_action_no_change_url": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest",
        "test_model_admin_default_delete_action_no_change_url"
      ]
    ]
  ],
  "test_delete_queryset_hook": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest",
        "test_delete_queryset_hook"
      ]
    ]
  ],
  "test_delete_selected_uses_get_deleted_objects": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest",
        "test_delete_selected_uses_get_deleted_objects"
      ]
    ]
  ],
  "test_custom_function_mail_action": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest",
        "test_custom_function_mail_action"
      ]
    ]
  ],
  "test_custom_function_action_with_redirect": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest",
        "test_custom_function_action_with_redirect"
      ]
    ]
  ],
  "test_default_redirect": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest",
        "test_default_redirect"
      ]
    ],
    [
      "tests/generic_views/test_base.py",
      [
        "RedirectViewTest",
        "test_default_redirect"
      ]
    ]
  ],
  "test_custom_function_action_streaming_response": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest",
        "test_custom_function_action_streaming_response"
      ]
    ]
  ],
  "test_custom_function_action_no_perm_response": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest",
        "test_custom_function_action_no_perm_response"
      ]
    ]
  ],
  "test_actions_ordering": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest",
        "test_actions_ordering"
      ]
    ]
  ],
  "test_model_without_action": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest",
        "test_model_without_action"
      ]
    ]
  ],
  "test_model_without_action_still_has_jquery": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest",
        "test_model_without_action_still_has_jquery"
      ]
    ]
  ],
  "test_action_column_class": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest",
        "test_action_column_class"
      ]
    ]
  ],
  "test_multiple_actions_form": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest",
        "test_multiple_actions_form"
      ]
    ]
  ],
  "test_media_from_actions_form": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest",
        "test_media_from_actions_form"
      ]
    ]
  ],
  "test_user_message_on_none_selected": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest",
        "test_user_message_on_none_selected"
      ]
    ]
  ],
  "test_user_message_on_no_action": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest",
        "test_user_message_on_no_action"
      ]
    ]
  ],
  "test_selection_counter": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest",
        "test_selection_counter"
      ]
    ]
  ],
  "test_popup_actions": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest",
        "test_popup_actions"
      ]
    ]
  ],
  "test_popup_template_response_on_add": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest",
        "test_popup_template_response_on_add"
      ]
    ]
  ],
  "test_popup_template_response_on_change": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest",
        "test_popup_template_response_on_change"
      ]
    ]
  ],
  "test_popup_template_response_on_delete": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest",
        "test_popup_template_response_on_delete"
      ]
    ]
  ],
  "test_popup_template_escaping": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsTest",
        "test_popup_template_escaping"
      ]
    ]
  ],
  "test_model_admin_no_delete_permission": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsPermissionTests",
        "test_model_admin_no_delete_permission"
      ]
    ]
  ],
  "test_model_admin_no_delete_permission_externalsubscriber": [
    [
      "tests/admin_views/test_actions.py",
      [
        "AdminActionsPermissionTests",
        "test_model_admin_no_delete_permission_externalsubscriber"
      ]
    ]
  ],
  "test_each_context": [
    [
      "tests/admin_views/test_adminsite.py",
      [
        "SiteEachContextTest",
        "test_each_context"
      ]
    ]
  ],
  "test_each_context_site_url_with_script_name": [
    [
      "tests/admin_views/test_adminsite.py",
      [
        "SiteEachContextTest",
        "test_each_context_site_url_with_script_name"
      ]
    ]
  ],
  "test_available_apps": [
    [
      "tests/admin_views/test_adminsite.py",
      [
        "SiteEachContextTest",
        "test_available_apps"
      ]
    ]
  ],
  "test_add_action": [
    [
      "tests/admin_views/test_adminsite.py",
      [
        "SiteActionsTests",
        "test_add_action"
      ]
    ]
  ],
  "test_disable_action": [
    [
      "tests/admin_views/test_adminsite.py",
      [
        "SiteActionsTests",
        "test_disable_action"
      ]
    ]
  ],
  "test_get_action": [
    [
      "tests/admin_views/test_adminsite.py",
      [
        "SiteActionsTests",
        "test_get_action"
      ]
    ]
  ],
  "test_success": [
    [
      "tests/admin_views/test_autocomplete_view.py",
      [
        "AutocompleteJsonViewTests",
        "test_success"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserCreationFormTest",
        "test_success"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "AuthenticationFormTest",
        "test_success"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "SetPasswordFormTest",
        "test_success"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "PasswordChangeFormTest",
        "test_success"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "AdminPasswordChangeFormTest",
        "test_success"
      ]
    ],
    [
      "tests/wsgi/tests.py",
      [
        "GetInternalWSGIApplicationTest",
        "test_success"
      ]
    ]
  ],
  "test_must_be_logged_in": [
    [
      "tests/admin_views/test_autocomplete_view.py",
      [
        "AutocompleteJsonViewTests",
        "test_must_be_logged_in"
      ]
    ]
  ],
  "test_has_view_or_change_permission_required": [
    [
      "tests/admin_views/test_autocomplete_view.py",
      [
        "AutocompleteJsonViewTests",
        "test_has_view_or_change_permission_required"
      ]
    ]
  ],
  "test_search_use_distinct": [
    [
      "tests/admin_views/test_autocomplete_view.py",
      [
        "AutocompleteJsonViewTests",
        "test_search_use_distinct"
      ]
    ]
  ],
  "test_missing_search_fields": [
    [
      "tests/admin_views/test_autocomplete_view.py",
      [
        "AutocompleteJsonViewTests",
        "test_missing_search_fields"
      ]
    ]
  ],
  "test_get_paginator": [
    [
      "tests/admin_views/test_autocomplete_view.py",
      [
        "AutocompleteJsonViewTests",
        "test_get_paginator"
      ]
    ]
  ],
  "select2_ajax_wait": [
    [
      "tests/admin_views/test_autocomplete_view.py",
      [
        "SeleniumTests",
        "select2_ajax_wait"
      ]
    ]
  ],
  "test_select": [
    [
      "tests/admin_views/test_autocomplete_view.py",
      [
        "SeleniumTests",
        "test_select"
      ]
    ]
  ],
  "test_select_multiple": [
    [
      "tests/admin_views/test_autocomplete_view.py",
      [
        "SeleniumTests",
        "test_select_multiple"
      ]
    ]
  ],
  "test_inline_add_another_widgets": [
    [
      "tests/admin_views/test_autocomplete_view.py",
      [
        "SeleniumTests",
        "test_inline_add_another_widgets"
      ]
    ]
  ],
  "test_inactive_user": [
    [
      "tests/admin_views/test_forms.py",
      [
        "AdminAuthenticationFormTests",
        "test_inactive_user"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "AuthenticationFormTest",
        "test_inactive_user"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "PasswordResetFormTest",
        "test_inactive_user"
      ]
    ],
    [
      "tests/auth_tests/test_remote_user.py",
      [
        "RemoteUserTest",
        "test_inactive_user"
      ]
    ],
    [
      "tests/auth_tests/test_remote_user.py",
      [
        "AllowAllUsersRemoteUserBackendTest",
        "test_inactive_user"
      ]
    ]
  ],
  "test_changed_message_uses_form_lables": [
    [
      "tests/admin_views/test_history_view.py",
      [
        "AdminHistoryViewTests",
        "test_changed_message_uses_form_lables"
      ]
    ]
  ],
  "db_for_read": [
    [
      "tests/admin_views/test_multidb.py",
      [
        "Router",
        "db_for_read"
      ]
    ],
    [
      "tests/auth_tests/test_admin_multidb.py",
      [
        "Router",
        "db_for_read"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "DBCacheRouter",
        "db_for_read"
      ]
    ],
    [
      "tests/contenttypes_tests/test_models.py",
      [
        "TestRouter",
        "db_for_read"
      ]
    ],
    [
      "tests/gis_tests/layermap/tests.py",
      [
        "OtherRouter",
        "db_for_read"
      ]
    ],
    [
      "tests/multiple_database/routers.py",
      [
        "TestRouter",
        "db_for_read"
      ]
    ],
    [
      "tests/multiple_database/routers.py",
      [
        "AuthRouter",
        "db_for_read"
      ]
    ],
    [
      "tests/multiple_database/tests.py",
      [
        "AttributeErrorRouter",
        "db_for_read"
      ]
    ]
  ],
  "test_add_view": [
    [
      "tests/admin_views/test_multidb.py",
      [
        "MultiDatabaseTests",
        "test_add_view"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "test_add_view"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminKeepChangeListFiltersTests",
        "test_add_view"
      ]
    ],
    [
      "tests/auth_tests/test_admin_multidb.py",
      [
        "MultiDatabaseTests",
        "test_add_view"
      ]
    ]
  ],
  "test_change_view": [
    [
      "tests/admin_views/test_multidb.py",
      [
        "MultiDatabaseTests",
        "test_change_view"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "test_change_view"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminCustomQuerysetTest",
        "test_change_view"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminKeepChangeListFiltersTests",
        "test_change_view"
      ]
    ]
  ],
  "test_delete_view": [
    [
      "tests/admin_views/test_multidb.py",
      [
        "MultiDatabaseTests",
        "test_delete_view"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "test_delete_view"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminKeepChangeListFiltersTests",
        "test_delete_view"
      ]
    ]
  ],
  "test_submit_row": [
    [
      "tests/admin_views/test_templatetags.py",
      [
        "AdminTemplateTagsTest",
        "test_submit_row"
      ]
    ]
  ],
  "test_override_show_save_and_add_another": [
    [
      "tests/admin_views/test_templatetags.py",
      [
        "AdminTemplateTagsTest",
        "test_override_show_save_and_add_another"
      ]
    ]
  ],
  "test_override_change_form_template_tags": [
    [
      "tests/admin_views/test_templatetags.py",
      [
        "AdminTemplateTagsTest",
        "test_override_change_form_template_tags"
      ]
    ]
  ],
  "test_override_change_list_template_tags": [
    [
      "tests/admin_views/test_templatetags.py",
      [
        "AdminTemplateTagsTest",
        "test_override_change_list_template_tags"
      ]
    ]
  ],
  "test_choice_links": [
    [
      "tests/admin_views/test_templatetags.py",
      [
        "DateHierarchyTests",
        "test_choice_links"
      ]
    ]
  ],
  "test_choice_links_datetime": [
    [
      "tests/admin_views/test_templatetags.py",
      [
        "DateHierarchyTests",
        "test_choice_links_datetime"
      ]
    ]
  ],
  "get_admin_form_fields": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminFieldExtractionMixin",
        "get_admin_form_fields"
      ]
    ]
  ],
  "get_admin_readonly_fields": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminFieldExtractionMixin",
        "get_admin_readonly_fields"
      ]
    ]
  ],
  "get_admin_readonly_field": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminFieldExtractionMixin",
        "get_admin_readonly_field"
      ]
    ]
  ],
  "assertContentBefore": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTestCase",
        "assertContentBefore"
      ]
    ]
  ],
  "test_trailing_slash_required": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_trailing_slash_required"
      ]
    ]
  ],
  "test_basic_edit_GET": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_basic_edit_GET"
      ]
    ],
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericAdminViewTest",
        "test_basic_edit_GET"
      ]
    ]
  ],
  "test_basic_edit_GET_string_PK": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_basic_edit_GET_string_PK"
      ]
    ]
  ],
  "test_basic_edit_GET_old_url_redirect": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_basic_edit_GET_old_url_redirect"
      ]
    ]
  ],
  "test_basic_inheritance_GET_string_PK": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_basic_inheritance_GET_string_PK"
      ]
    ]
  ],
  "test_popup_add_POST": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_popup_add_POST"
      ]
    ]
  ],
  "test_basic_edit_POST": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_basic_edit_POST"
      ]
    ],
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericAdminViewTest",
        "test_basic_edit_POST"
      ]
    ]
  ],
  "test_edit_save_as": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_edit_save_as"
      ]
    ]
  ],
  "test_edit_save_as_delete_inline": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_edit_save_as_delete_inline"
      ]
    ]
  ],
  "test_change_list_column_field_classes": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_change_list_column_field_classes"
      ]
    ]
  ],
  "test_change_list_sorting_callable": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_change_list_sorting_callable"
      ]
    ]
  ],
  "test_change_list_sorting_property": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_change_list_sorting_property"
      ]
    ]
  ],
  "test_change_list_sorting_callable_query_expression": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_change_list_sorting_callable_query_expression"
      ]
    ]
  ],
  "test_change_list_sorting_callable_query_expression_reverse": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_change_list_sorting_callable_query_expression_reverse"
      ]
    ]
  ],
  "test_change_list_sorting_model": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_change_list_sorting_model"
      ]
    ]
  ],
  "test_change_list_sorting_model_admin": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_change_list_sorting_model_admin"
      ]
    ]
  ],
  "test_change_list_sorting_model_admin_reverse": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_change_list_sorting_model_admin_reverse"
      ]
    ]
  ],
  "test_change_list_sorting_multiple": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_change_list_sorting_multiple"
      ]
    ]
  ],
  "test_change_list_sorting_preserve_queryset_ordering": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_change_list_sorting_preserve_queryset_ordering"
      ]
    ]
  ],
  "test_change_list_sorting_model_meta": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_change_list_sorting_model_meta"
      ]
    ]
  ],
  "test_change_list_sorting_override_model_admin": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_change_list_sorting_override_model_admin"
      ]
    ]
  ],
  "test_multiple_sort_same_field": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_multiple_sort_same_field"
      ]
    ]
  ],
  "test_sort_indicators_admin_order": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_sort_indicators_admin_order"
      ]
    ]
  ],
  "test_has_related_field_in_list_display_fk": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_has_related_field_in_list_display_fk"
      ]
    ]
  ],
  "test_has_related_field_in_list_display_o2o": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_has_related_field_in_list_display_o2o"
      ]
    ]
  ],
  "test_limited_filter": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_limited_filter"
      ]
    ]
  ],
  "test_relation_spanning_filters": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_relation_spanning_filters"
      ]
    ]
  ],
  "test_incorrect_lookup_parameters": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_incorrect_lookup_parameters"
      ]
    ]
  ],
  "test_isnull_lookups": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_isnull_lookups"
      ]
    ]
  ],
  "test_logout_and_password_change_URLs": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_logout_and_password_change_URLs"
      ]
    ]
  ],
  "test_named_group_field_choices_change_list": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_named_group_field_choices_change_list"
      ]
    ]
  ],
  "test_named_group_field_choices_filter": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_named_group_field_choices_filter"
      ]
    ]
  ],
  "test_change_list_null_boolean_display": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_change_list_null_boolean_display"
      ]
    ]
  ],
  "test_i18n_language_non_english_default": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_i18n_language_non_english_default"
      ]
    ],
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "I18NViewTests",
        "test_i18n_language_non_english_default"
      ]
    ]
  ],
  "test_i18n_language_non_english_fallback": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_i18n_language_non_english_fallback"
      ]
    ],
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "I18NViewTests",
        "test_i18n_language_non_english_fallback"
      ]
    ]
  ],
  "test_jsi18n_with_context": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_jsi18n_with_context"
      ]
    ]
  ],
  "test_L10N_deactivated": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_L10N_deactivated"
      ]
    ]
  ],
  "test_disallowed_filtering": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_disallowed_filtering"
      ]
    ]
  ],
  "test_disallowed_to_field": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_disallowed_to_field"
      ]
    ]
  ],
  "test_allowed_filtering_15103": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_allowed_filtering_15103"
      ]
    ]
  ],
  "test_popup_dismiss_related": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_popup_dismiss_related"
      ]
    ]
  ],
  "test_hide_change_password": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_hide_change_password"
      ]
    ]
  ],
  "test_change_view_with_show_delete_extra_context": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_change_view_with_show_delete_extra_context"
      ]
    ]
  ],
  "test_change_view_logs_m2m_field_changes": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_change_view_logs_m2m_field_changes"
      ]
    ]
  ],
  "test_allows_attributeerror_to_bubble_up": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_allows_attributeerror_to_bubble_up"
      ]
    ]
  ],
  "test_changelist_with_no_change_url": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_changelist_with_no_change_url"
      ]
    ]
  ],
  "test_invalid_appindex_url": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_invalid_appindex_url"
      ]
    ]
  ],
  "test_resolve_admin_views": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_resolve_admin_views"
      ]
    ]
  ],
  "test_adminsite_display_site_url": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_adminsite_display_site_url"
      ]
    ]
  ],
  "test_date_hierarchy_timezone_dst": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_date_hierarchy_timezone_dst"
      ]
    ]
  ],
  "test_date_hierarchy_local_date_differ_from_utc": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_date_hierarchy_local_date_differ_from_utc"
      ]
    ]
  ],
  "test_sortable_by_columns_subset": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_sortable_by_columns_subset"
      ]
    ]
  ],
  "test_get_sortable_by_columns_subset": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_get_sortable_by_columns_subset"
      ]
    ]
  ],
  "test_sortable_by_no_column": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_sortable_by_no_column"
      ]
    ]
  ],
  "test_get_sortable_by_no_column": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewBasicTest",
        "test_get_sortable_by_no_column"
      ]
    ]
  ],
  "test_custom_model_admin_templates": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminCustomTemplateTests",
        "test_custom_model_admin_templates"
      ]
    ]
  ],
  "test_extended_bodyclass_template_change_form": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminCustomTemplateTests",
        "test_extended_bodyclass_template_change_form"
      ]
    ]
  ],
  "test_change_password_template": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminCustomTemplateTests",
        "test_change_password_template"
      ]
    ]
  ],
  "test_extended_bodyclass_template_index": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminCustomTemplateTests",
        "test_extended_bodyclass_template_index"
      ]
    ]
  ],
  "test_extended_bodyclass_change_list": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminCustomTemplateTests",
        "test_extended_bodyclass_change_list"
      ]
    ]
  ],
  "test_extended_bodyclass_template_login": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminCustomTemplateTests",
        "test_extended_bodyclass_template_login"
      ]
    ]
  ],
  "test_extended_bodyclass_template_delete_confirmation": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminCustomTemplateTests",
        "test_extended_bodyclass_template_delete_confirmation"
      ]
    ]
  ],
  "test_extended_bodyclass_template_delete_selected_confirmation": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminCustomTemplateTests",
        "test_extended_bodyclass_template_delete_selected_confirmation"
      ]
    ]
  ],
  "test_filter_with_custom_template": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminCustomTemplateTests",
        "test_filter_with_custom_template"
      ]
    ]
  ],
  "test_change_form_URL_has_correct_value": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewFormUrlTest",
        "test_change_form_URL_has_correct_value"
      ]
    ]
  ],
  "test_initial_data_can_be_overridden": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewFormUrlTest",
        "test_initial_data_can_be_overridden"
      ]
    ]
  ],
  "test_js_minified_only_if_debug_is_false": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminJavaScriptTest",
        "test_js_minified_only_if_debug_is_false"
      ]
    ]
  ],
  "test_save_as_duplication": [
    [
      "tests/admin_views/tests.py",
      [
        "SaveAsTests",
        "test_save_as_duplication"
      ]
    ]
  ],
  "test_save_as_continue_false": [
    [
      "tests/admin_views/tests.py",
      [
        "SaveAsTests",
        "test_save_as_continue_false"
      ]
    ]
  ],
  "test_save_as_new_with_validation_errors": [
    [
      "tests/admin_views/tests.py",
      [
        "SaveAsTests",
        "test_save_as_new_with_validation_errors"
      ]
    ]
  ],
  "test_save_as_new_with_validation_errors_with_inlines": [
    [
      "tests/admin_views/tests.py",
      [
        "SaveAsTests",
        "test_save_as_new_with_validation_errors_with_inlines"
      ]
    ]
  ],
  "test_save_as_new_with_inlines_with_validation_errors": [
    [
      "tests/admin_views/tests.py",
      [
        "SaveAsTests",
        "test_save_as_new_with_inlines_with_validation_errors"
      ]
    ]
  ],
  "test_custom_admin_site_login_form": [
    [
      "tests/admin_views/tests.py",
      [
        "CustomModelAdminTest",
        "test_custom_admin_site_login_form"
      ]
    ]
  ],
  "test_custom_admin_site_login_template": [
    [
      "tests/admin_views/tests.py",
      [
        "CustomModelAdminTest",
        "test_custom_admin_site_login_template"
      ]
    ]
  ],
  "test_custom_admin_site_logout_template": [
    [
      "tests/admin_views/tests.py",
      [
        "CustomModelAdminTest",
        "test_custom_admin_site_logout_template"
      ]
    ]
  ],
  "test_custom_admin_site_index_view_and_template": [
    [
      "tests/admin_views/tests.py",
      [
        "CustomModelAdminTest",
        "test_custom_admin_site_index_view_and_template"
      ]
    ]
  ],
  "test_custom_admin_site_app_index_view_and_template": [
    [
      "tests/admin_views/tests.py",
      [
        "CustomModelAdminTest",
        "test_custom_admin_site_app_index_view_and_template"
      ]
    ]
  ],
  "test_custom_admin_site_password_change_template": [
    [
      "tests/admin_views/tests.py",
      [
        "CustomModelAdminTest",
        "test_custom_admin_site_password_change_template"
      ]
    ]
  ],
  "test_custom_admin_site_password_change_with_extra_context": [
    [
      "tests/admin_views/tests.py",
      [
        "CustomModelAdminTest",
        "test_custom_admin_site_password_change_with_extra_context"
      ]
    ]
  ],
  "test_custom_admin_site_password_change_done_template": [
    [
      "tests/admin_views/tests.py",
      [
        "CustomModelAdminTest",
        "test_custom_admin_site_password_change_done_template"
      ]
    ]
  ],
  "test_custom_admin_site_view": [
    [
      "tests/admin_views/tests.py",
      [
        "CustomModelAdminTest",
        "test_custom_admin_site_view"
      ]
    ]
  ],
  "test_pwd_change_custom_template": [
    [
      "tests/admin_views/tests.py",
      [
        "CustomModelAdminTest",
        "test_pwd_change_custom_template"
      ]
    ]
  ],
  "get_perm": [
    [
      "tests/admin_views/tests.py",
      [
        "get_perm"
      ]
    ],
    [
      "tests/auth_tests/test_views.py",
      [
        "get_perm"
      ]
    ]
  ],
  "test_login": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "test_login"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "NeverCacheTests",
        "test_login"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "UUIDUserTests",
        "test_login"
      ]
    ],
    [
      "tests/auth_tests/test_signals.py",
      [
        "SignalTestCase",
        "test_login"
      ]
    ],
    [
      "tests/test_client_regress/tests.py",
      [
        "SessionEngineTests",
        "test_login"
      ]
    ]
  ],
  "test_login_redirect_for_direct_get": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "test_login_redirect_for_direct_get"
      ]
    ]
  ],
  "test_login_has_permission": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "test_login_has_permission"
      ]
    ]
  ],
  "test_login_successfully_redirects_to_original_URL": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "test_login_successfully_redirects_to_original_URL"
      ]
    ]
  ],
  "test_double_login_is_not_allowed": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "test_double_login_is_not_allowed"
      ]
    ]
  ],
  "test_login_page_notice_for_non_staff_users": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "test_login_page_notice_for_non_staff_users"
      ]
    ]
  ],
  "test_add_view_with_view_only_inlines": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "test_add_view_with_view_only_inlines"
      ]
    ]
  ],
  "test_change_view_without_object_change_permission": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "test_change_view_without_object_change_permission"
      ]
    ]
  ],
  "test_change_view_save_as_new": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "test_change_view_save_as_new"
      ]
    ]
  ],
  "test_change_view_with_view_only_inlines": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "test_change_view_with_view_only_inlines"
      ]
    ]
  ],
  "test_change_view_with_view_and_add_inlines": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "test_change_view_with_view_and_add_inlines"
      ]
    ]
  ],
  "test_change_view_with_view_and_delete_inlines": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "test_change_view_with_view_and_delete_inlines"
      ]
    ]
  ],
  "test_delete_view_with_no_default_permissions": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "test_delete_view_with_no_default_permissions"
      ]
    ]
  ],
  "test_delete_view_nonexistent_obj": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "test_delete_view_nonexistent_obj"
      ]
    ]
  ],
  "test_history_view": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "test_history_view"
      ]
    ]
  ],
  "test_history_view_bad_url": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "test_history_view_bad_url"
      ]
    ]
  ],
  "test_conditionally_show_add_section_link": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "test_conditionally_show_add_section_link"
      ]
    ]
  ],
  "test_conditionally_show_change_section_link": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "test_conditionally_show_change_section_link"
      ]
    ]
  ],
  "test_conditionally_show_delete_section_link": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "test_conditionally_show_delete_section_link"
      ]
    ]
  ],
  "test_disabled_permissions_when_logged_in": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "test_disabled_permissions_when_logged_in"
      ]
    ]
  ],
  "test_disabled_staff_permissions_when_logged_in": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "test_disabled_staff_permissions_when_logged_in"
      ]
    ]
  ],
  "test_app_list_permissions": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "test_app_list_permissions"
      ]
    ]
  ],
  "test_shortcut_view_only_available_to_staff": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "test_shortcut_view_only_available_to_staff"
      ]
    ]
  ],
  "test_has_module_permission": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "test_has_module_permission"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminPermissionTests",
        "test_has_module_permission"
      ]
    ]
  ],
  "test_overriding_has_module_permission": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "test_overriding_has_module_permission"
      ]
    ]
  ],
  "test_post_save_message_no_forbidden_links_visible": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewPermissionsTest",
        "test_post_save_message_no_forbidden_links_visible"
      ]
    ]
  ],
  "test_add": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewProxyModelPermissionsTests",
        "test_add"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "DummyCacheTests",
        "test_add"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_add"
      ]
    ],
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineAdminWithUniqueTogetherTest",
        "test_add"
      ]
    ],
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_add"
      ]
    ],
    [
      "tests/m2m_through_regress/tests.py",
      [
        "ToFieldThroughTests",
        "test_add"
      ]
    ],
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_add"
      ]
    ],
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_add"
      ]
    ],
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests",
        "test_add"
      ]
    ],
    [
      "tests/postgres_tests/test_operations.py",
      [
        "AddIndexConcurrentlyTests",
        "test_add"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_add.py",
      [
        "FunctionTests",
        "test_add"
      ]
    ],
    [
      "tests/utils_tests/test_tree.py",
      [
        "NodeTests",
        "test_add"
      ]
    ]
  ],
  "test_view": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewProxyModelPermissionsTests",
        "test_view"
      ]
    ],
    [
      "tests/auth_tests/test_decorators.py",
      [
        "LoginRequiredTestCase",
        "test_view"
      ]
    ],
    [
      "tests/servers/tests.py",
      [
        "LiveServerViews",
        "test_view"
      ]
    ]
  ],
  "test_change": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewProxyModelPermissionsTests",
        "test_change"
      ]
    ]
  ],
  "test_delete": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewProxyModelPermissionsTests",
        "test_delete"
      ]
    ],
    [
      "tests/auth_tests/test_models.py",
      [
        "AnonymousUserTests",
        "test_delete"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "DummyCacheTests",
        "test_delete"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_delete"
      ]
    ],
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineAdminWithUniqueTogetherTest",
        "test_delete"
      ]
    ],
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_delete"
      ]
    ],
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_delete"
      ]
    ],
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_delete"
      ]
    ],
    [
      "tests/sites_tests/tests.py",
      [
        "RequestSiteTests",
        "test_delete"
      ]
    ],
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestMethodTests",
        "test_delete"
      ]
    ]
  ],
  "test_no_standard_modeladmin_urls": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewsNoUrlTest",
        "test_no_standard_modeladmin_urls"
      ]
    ]
  ],
  "test_nesting": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewDeletedObjectsTest",
        "test_nesting"
      ]
    ]
  ],
  "test_perms_needed": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewDeletedObjectsTest",
        "test_perms_needed"
      ]
    ]
  ],
  "test_protected": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewDeletedObjectsTest",
        "test_protected"
      ]
    ]
  ],
  "test_post_delete_protected": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewDeletedObjectsTest",
        "test_post_delete_protected"
      ]
    ]
  ],
  "test_restricted": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewDeletedObjectsTest",
        "test_restricted"
      ]
    ]
  ],
  "test_post_delete_restricted": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewDeletedObjectsTest",
        "test_post_delete_restricted"
      ]
    ]
  ],
  "test_not_registered": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewDeletedObjectsTest",
        "test_not_registered"
      ]
    ]
  ],
  "test_multiple_fkeys_to_same_model": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewDeletedObjectsTest",
        "test_multiple_fkeys_to_same_model"
      ]
    ]
  ],
  "test_multiple_fkeys_to_same_instance": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewDeletedObjectsTest",
        "test_multiple_fkeys_to_same_instance"
      ]
    ]
  ],
  "test_inheritance": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewDeletedObjectsTest",
        "test_inheritance"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewListEditable",
        "test_inheritance"
      ]
    ],
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFormfieldForDBFieldTests",
        "test_inheritance"
      ]
    ],
    [
      "tests/delete_regress/tests.py",
      [
        "DeleteCascadeTransactionTests",
        "test_inheritance"
      ]
    ],
    [
      "tests/foreign_object/tests.py",
      [
        "MultiColumnFKTests",
        "test_inheritance"
      ]
    ],
    [
      "tests/model_options/test_default_related_name.py",
      [
        "DefaultRelatedNameTests",
        "test_inheritance"
      ]
    ],
    [
      "tests/nested_foreign_keys/tests.py",
      [
        "NestedForeignKeysTests",
        "test_inheritance"
      ]
    ],
    [
      "tests/nested_foreign_keys/tests.py",
      [
        "DeeplyNestedForeignKeysTests",
        "test_inheritance"
      ]
    ],
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "test_inheritance"
      ]
    ]
  ],
  "test_generic_relations": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewDeletedObjectsTest",
        "test_generic_relations"
      ]
    ],
    [
      "tests/select_related/tests.py",
      [
        "SelectRelatedValidationTests",
        "test_generic_relations"
      ]
    ]
  ],
  "test_generic_relations_with_related_query_name": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewDeletedObjectsTest",
        "test_generic_relations_with_related_query_name"
      ]
    ]
  ],
  "test_delete_view_uses_get_deleted_objects": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewDeletedObjectsTest",
        "test_delete_view_uses_get_deleted_objects"
      ]
    ]
  ],
  "test_generic_content_object_in_list_display": [
    [
      "tests/admin_views/tests.py",
      [
        "TestGenericRelations",
        "test_generic_content_object_in_list_display"
      ]
    ]
  ],
  "test_get_history_view": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewStringPrimaryKeyTest",
        "test_get_history_view"
      ]
    ]
  ],
  "test_get_change_view": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewStringPrimaryKeyTest",
        "test_get_change_view"
      ]
    ]
  ],
  "test_changelist_to_changeform_link": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewStringPrimaryKeyTest",
        "test_changelist_to_changeform_link"
      ]
    ]
  ],
  "test_recentactions_link": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewStringPrimaryKeyTest",
        "test_recentactions_link"
      ]
    ]
  ],
  "test_deleteconfirmation_link": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewStringPrimaryKeyTest",
        "test_deleteconfirmation_link"
      ]
    ]
  ],
  "test_url_conflicts_with_add": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewStringPrimaryKeyTest",
        "test_url_conflicts_with_add"
      ]
    ]
  ],
  "test_url_conflicts_with_delete": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewStringPrimaryKeyTest",
        "test_url_conflicts_with_delete"
      ]
    ]
  ],
  "test_url_conflicts_with_history": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewStringPrimaryKeyTest",
        "test_url_conflicts_with_history"
      ]
    ]
  ],
  "test_shortcut_view_with_escaping": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewStringPrimaryKeyTest",
        "test_shortcut_view_with_escaping"
      ]
    ]
  ],
  "test_change_view_history_link": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewStringPrimaryKeyTest",
        "test_change_view_history_link"
      ]
    ]
  ],
  "test_redirect_on_add_view_continue_button": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewStringPrimaryKeyTest",
        "test_redirect_on_add_view_continue_button"
      ]
    ]
  ],
  "test_secure_view_shows_login_if_not_logged_in": [
    [
      "tests/admin_views/tests.py",
      [
        "SecureViewTests",
        "test_secure_view_shows_login_if_not_logged_in"
      ]
    ]
  ],
  "test_staff_member_required_decorator_works_with_argument": [
    [
      "tests/admin_views/tests.py",
      [
        "SecureViewTests",
        "test_staff_member_required_decorator_works_with_argument"
      ]
    ]
  ],
  "test_unicode_edit": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewUnicodeTest",
        "test_unicode_edit"
      ]
    ]
  ],
  "test_unicode_delete": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewUnicodeTest",
        "test_unicode_delete"
      ]
    ]
  ],
  "test_inheritance_2": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewListEditable",
        "test_inheritance_2"
      ]
    ]
  ],
  "test_custom_pk": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewListEditable",
        "test_custom_pk"
      ]
    ],
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_custom_pk"
      ]
    ],
    [
      "tests/queries/test_bulk_update.py",
      [
        "BulkUpdateTests",
        "test_custom_pk"
      ]
    ]
  ],
  "test_changelist_input_html": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewListEditable",
        "test_changelist_input_html"
      ]
    ]
  ],
  "test_post_messages": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewListEditable",
        "test_post_messages"
      ]
    ]
  ],
  "test_post_submission": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewListEditable",
        "test_post_submission"
      ]
    ]
  ],
  "test_non_field_errors": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewListEditable",
        "test_non_field_errors"
      ]
    ]
  ],
  "test_non_form_errors": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewListEditable",
        "test_non_form_errors"
      ]
    ],
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_non_form_errors"
      ]
    ]
  ],
  "test_non_form_errors_is_errorlist": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewListEditable",
        "test_non_form_errors_is_errorlist"
      ]
    ]
  ],
  "test_list_editable_ordering": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewListEditable",
        "test_list_editable_ordering"
      ]
    ]
  ],
  "test_list_editable_pagination": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewListEditable",
        "test_list_editable_pagination"
      ]
    ]
  ],
  "test_list_editable_action_submit": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewListEditable",
        "test_list_editable_action_submit"
      ]
    ]
  ],
  "test_list_editable_action_choices": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewListEditable",
        "test_list_editable_action_choices"
      ]
    ]
  ],
  "test_list_editable_popup": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewListEditable",
        "test_list_editable_popup"
      ]
    ]
  ],
  "test_pk_hidden_fields": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewListEditable",
        "test_pk_hidden_fields"
      ]
    ]
  ],
  "test_pk_hidden_fields_with_list_display_links": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewListEditable",
        "test_pk_hidden_fields_with_list_display_links"
      ]
    ]
  ],
  "test_search_on_sibling_models": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminSearchTest",
        "test_search_on_sibling_models"
      ]
    ]
  ],
  "test_with_fk_to_field": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminSearchTest",
        "test_with_fk_to_field"
      ]
    ]
  ],
  "test_exact_matches": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminSearchTest",
        "test_exact_matches"
      ]
    ]
  ],
  "test_beginning_matches": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminSearchTest",
        "test_beginning_matches"
      ]
    ]
  ],
  "test_pluggable_search": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminSearchTest",
        "test_pluggable_search"
      ]
    ]
  ],
  "test_reset_link": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminSearchTest",
        "test_reset_link"
      ]
    ]
  ],
  "test_no_total_count": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminSearchTest",
        "test_no_total_count"
      ]
    ]
  ],
  "test_inline": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminInheritedInlinesTest",
        "test_inline"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "FieldsCheckTests",
        "test_inline"
      ]
    ]
  ],
  "test_custom_changelist": [
    [
      "tests/admin_views/tests.py",
      [
        "TestCustomChangeList",
        "test_custom_changelist"
      ]
    ]
  ],
  "test_GET_parent_add": [
    [
      "tests/admin_views/tests.py",
      [
        "TestInlineNotEditable",
        "test_GET_parent_add"
      ]
    ]
  ],
  "test_changelist_view": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminCustomQuerysetTest",
        "test_changelist_view"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminKeepChangeListFiltersTests",
        "test_changelist_view"
      ]
    ]
  ],
  "test_changelist_view_count_queries": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminCustomQuerysetTest",
        "test_changelist_view_count_queries"
      ]
    ]
  ],
  "test_add_model_modeladmin_defer_qs": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminCustomQuerysetTest",
        "test_add_model_modeladmin_defer_qs"
      ]
    ]
  ],
  "test_add_model_modeladmin_only_qs": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminCustomQuerysetTest",
        "test_add_model_modeladmin_only_qs"
      ]
    ]
  ],
  "test_edit_model_modeladmin_defer_qs": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminCustomQuerysetTest",
        "test_edit_model_modeladmin_defer_qs"
      ]
    ]
  ],
  "test_edit_model_modeladmin_only_qs": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminCustomQuerysetTest",
        "test_edit_model_modeladmin_only_qs"
      ]
    ]
  ],
  "test_history_view_custom_qs": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminCustomQuerysetTest",
        "test_history_view_custom_qs"
      ]
    ]
  ],
  "test_form_has_multipart_enctype": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminInlineFileUploadTest",
        "test_form_has_multipart_enctype"
      ]
    ]
  ],
  "test_inline_file_upload_edit_validation_error_post": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminInlineFileUploadTest",
        "test_inline_file_upload_edit_validation_error_post"
      ]
    ]
  ],
  "test_simple_inline": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminInlineTests",
        "test_simple_inline"
      ]
    ]
  ],
  "test_explicit_autofield_inline": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminInlineTests",
        "test_explicit_autofield_inline"
      ]
    ]
  ],
  "test_char_pk_inline": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminInlineTests",
        "test_char_pk_inline"
      ]
    ]
  ],
  "test_integer_pk_inline": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminInlineTests",
        "test_integer_pk_inline"
      ]
    ]
  ],
  "test_inherited_inline": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminInlineTests",
        "test_inherited_inline"
      ]
    ]
  ],
  "test_ordered_inline": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminInlineTests",
        "test_ordered_inline"
      ]
    ]
  ],
  "test_admin_index": [
    [
      "tests/admin_views/tests.py",
      [
        "NeverCacheTests",
        "test_admin_index"
      ]
    ]
  ],
  "test_app_index": [
    [
      "tests/admin_views/tests.py",
      [
        "NeverCacheTests",
        "test_app_index"
      ]
    ]
  ],
  "test_model_add": [
    [
      "tests/admin_views/tests.py",
      [
        "NeverCacheTests",
        "test_model_add"
      ]
    ]
  ],
  "test_model_view": [
    [
      "tests/admin_views/tests.py",
      [
        "NeverCacheTests",
        "test_model_view"
      ]
    ]
  ],
  "test_model_history": [
    [
      "tests/admin_views/tests.py",
      [
        "NeverCacheTests",
        "test_model_history"
      ]
    ]
  ],
  "test_model_delete": [
    [
      "tests/admin_views/tests.py",
      [
        "NeverCacheTests",
        "test_model_delete"
      ]
    ]
  ],
  "test_logout": [
    [
      "tests/admin_views/tests.py",
      [
        "NeverCacheTests",
        "test_logout"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewLogoutTests",
        "test_logout"
      ]
    ],
    [
      "tests/auth_tests/test_signals.py",
      [
        "SignalTestCase",
        "test_logout"
      ]
    ],
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_logout"
      ]
    ],
    [
      "tests/test_client_regress/tests.py",
      [
        "SessionTests",
        "test_logout"
      ]
    ]
  ],
  "test_password_change": [
    [
      "tests/admin_views/tests.py",
      [
        "NeverCacheTests",
        "test_password_change"
      ]
    ]
  ],
  "test_password_change_done": [
    [
      "tests/admin_views/tests.py",
      [
        "NeverCacheTests",
        "test_password_change_done"
      ]
    ]
  ],
  "test_JS_i18n": [
    [
      "tests/admin_views/tests.py",
      [
        "NeverCacheTests",
        "test_JS_i18n"
      ]
    ]
  ],
  "test_prepopulated_on": [
    [
      "tests/admin_views/tests.py",
      [
        "PrePopulatedTest",
        "test_prepopulated_on"
      ]
    ]
  ],
  "test_prepopulated_off": [
    [
      "tests/admin_views/tests.py",
      [
        "PrePopulatedTest",
        "test_prepopulated_off"
      ]
    ]
  ],
  "test_prepopulated_maxlength_localized": [
    [
      "tests/admin_views/tests.py",
      [
        "PrePopulatedTest",
        "test_prepopulated_maxlength_localized"
      ]
    ]
  ],
  "test_view_only_add_form": [
    [
      "tests/admin_views/tests.py",
      [
        "PrePopulatedTest",
        "test_view_only_add_form"
      ]
    ]
  ],
  "test_view_only_change_form": [
    [
      "tests/admin_views/tests.py",
      [
        "PrePopulatedTest",
        "test_view_only_change_form"
      ]
    ]
  ],
  "test_prepopulated_fields": [
    [
      "tests/admin_views/tests.py",
      [
        "SeleniumTests",
        "test_prepopulated_fields"
      ]
    ]
  ],
  "test_populate_existing_object": [
    [
      "tests/admin_views/tests.py",
      [
        "SeleniumTests",
        "test_populate_existing_object"
      ]
    ]
  ],
  "test_collapsible_fieldset": [
    [
      "tests/admin_views/tests.py",
      [
        "SeleniumTests",
        "test_collapsible_fieldset"
      ]
    ]
  ],
  "test_first_field_focus": [
    [
      "tests/admin_views/tests.py",
      [
        "SeleniumTests",
        "test_first_field_focus"
      ]
    ]
  ],
  "test_cancel_delete_confirmation": [
    [
      "tests/admin_views/tests.py",
      [
        "SeleniumTests",
        "test_cancel_delete_confirmation"
      ]
    ]
  ],
  "test_cancel_delete_related_confirmation": [
    [
      "tests/admin_views/tests.py",
      [
        "SeleniumTests",
        "test_cancel_delete_related_confirmation"
      ]
    ]
  ],
  "test_list_editable_popups": [
    [
      "tests/admin_views/tests.py",
      [
        "SeleniumTests",
        "test_list_editable_popups"
      ]
    ]
  ],
  "test_inline_uuid_pk_edit_with_popup": [
    [
      "tests/admin_views/tests.py",
      [
        "SeleniumTests",
        "test_inline_uuid_pk_edit_with_popup"
      ]
    ]
  ],
  "test_inline_uuid_pk_add_with_popup": [
    [
      "tests/admin_views/tests.py",
      [
        "SeleniumTests",
        "test_inline_uuid_pk_add_with_popup"
      ]
    ]
  ],
  "test_inline_uuid_pk_delete_with_popup": [
    [
      "tests/admin_views/tests.py",
      [
        "SeleniumTests",
        "test_inline_uuid_pk_delete_with_popup"
      ]
    ]
  ],
  "test_inline_with_popup_cancel_delete": [
    [
      "tests/admin_views/tests.py",
      [
        "SeleniumTests",
        "test_inline_with_popup_cancel_delete"
      ]
    ]
  ],
  "test_list_editable_raw_id_fields": [
    [
      "tests/admin_views/tests.py",
      [
        "SeleniumTests",
        "test_list_editable_raw_id_fields"
      ]
    ]
  ],
  "test_readonly_get": [
    [
      "tests/admin_views/tests.py",
      [
        "ReadonlyTest",
        "test_readonly_get"
      ]
    ]
  ],
  "test_readonly_text_field": [
    [
      "tests/admin_views/tests.py",
      [
        "ReadonlyTest",
        "test_readonly_text_field"
      ]
    ]
  ],
  "test_readonly_post": [
    [
      "tests/admin_views/tests.py",
      [
        "ReadonlyTest",
        "test_readonly_post"
      ]
    ]
  ],
  "test_readonly_manytomany": [
    [
      "tests/admin_views/tests.py",
      [
        "ReadonlyTest",
        "test_readonly_manytomany"
      ]
    ]
  ],
  "test_user_password_change_limited_queryset": [
    [
      "tests/admin_views/tests.py",
      [
        "ReadonlyTest",
        "test_user_password_change_limited_queryset"
      ]
    ]
  ],
  "test_change_form_renders_correct_null_choice_value": [
    [
      "tests/admin_views/tests.py",
      [
        "ReadonlyTest",
        "test_change_form_renders_correct_null_choice_value"
      ]
    ]
  ],
  "test_readonly_manytomany_backwards_ref": [
    [
      "tests/admin_views/tests.py",
      [
        "ReadonlyTest",
        "test_readonly_manytomany_backwards_ref"
      ]
    ]
  ],
  "test_readonly_manytomany_forwards_ref": [
    [
      "tests/admin_views/tests.py",
      [
        "ReadonlyTest",
        "test_readonly_manytomany_forwards_ref"
      ]
    ]
  ],
  "test_readonly_onetoone_backwards_ref": [
    [
      "tests/admin_views/tests.py",
      [
        "ReadonlyTest",
        "test_readonly_onetoone_backwards_ref"
      ]
    ]
  ],
  "test_readonly_field_overrides": [
    [
      "tests/admin_views/tests.py",
      [
        "ReadonlyTest",
        "test_readonly_field_overrides"
      ]
    ]
  ],
  "test_correct_autoescaping": [
    [
      "tests/admin_views/tests.py",
      [
        "ReadonlyTest",
        "test_correct_autoescaping"
      ]
    ]
  ],
  "test_label_suffix_translated": [
    [
      "tests/admin_views/tests.py",
      [
        "ReadonlyTest",
        "test_label_suffix_translated"
      ]
    ]
  ],
  "test_limit_choices_to_as_callable": [
    [
      "tests/admin_views/tests.py",
      [
        "LimitChoicesToInAdminTest",
        "test_limit_choices_to_as_callable"
      ]
    ]
  ],
  "test_limit_choices_to": [
    [
      "tests/admin_views/tests.py",
      [
        "RawIdFieldsTest",
        "test_limit_choices_to"
      ]
    ]
  ],
  "test_limit_choices_to_isnull_false": [
    [
      "tests/admin_views/tests.py",
      [
        "RawIdFieldsTest",
        "test_limit_choices_to_isnull_false"
      ]
    ]
  ],
  "test_limit_choices_to_isnull_true": [
    [
      "tests/admin_views/tests.py",
      [
        "RawIdFieldsTest",
        "test_limit_choices_to_isnull_true"
      ]
    ]
  ],
  "test_list_display_method_same_name_as_reverse_accessor": [
    [
      "tests/admin_views/tests.py",
      [
        "RawIdFieldsTest",
        "test_list_display_method_same_name_as_reverse_accessor"
      ]
    ]
  ],
  "test_save_button": [
    [
      "tests/admin_views/tests.py",
      [
        "UserAdminTest",
        "test_save_button"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "GroupAdminTest",
        "test_save_button"
      ]
    ]
  ],
  "test_save_continue_editing_button": [
    [
      "tests/admin_views/tests.py",
      [
        "UserAdminTest",
        "test_save_continue_editing_button"
      ]
    ]
  ],
  "test_password_mismatch": [
    [
      "tests/admin_views/tests.py",
      [
        "UserAdminTest",
        "test_password_mismatch"
      ]
    ]
  ],
  "test_user_fk_add_popup": [
    [
      "tests/admin_views/tests.py",
      [
        "UserAdminTest",
        "test_user_fk_add_popup"
      ]
    ]
  ],
  "test_user_fk_change_popup": [
    [
      "tests/admin_views/tests.py",
      [
        "UserAdminTest",
        "test_user_fk_change_popup"
      ]
    ]
  ],
  "test_user_fk_delete_popup": [
    [
      "tests/admin_views/tests.py",
      [
        "UserAdminTest",
        "test_user_fk_delete_popup"
      ]
    ]
  ],
  "test_save_add_another_button": [
    [
      "tests/admin_views/tests.py",
      [
        "UserAdminTest",
        "test_save_add_another_button"
      ]
    ]
  ],
  "test_user_permission_performance": [
    [
      "tests/admin_views/tests.py",
      [
        "UserAdminTest",
        "test_user_permission_performance"
      ]
    ]
  ],
  "test_form_url_present_in_context": [
    [
      "tests/admin_views/tests.py",
      [
        "UserAdminTest",
        "test_form_url_present_in_context"
      ]
    ]
  ],
  "test_group_permission_performance": [
    [
      "tests/admin_views/tests.py",
      [
        "GroupAdminTest",
        "test_group_permission_performance"
      ]
    ]
  ],
  "test_field_prefix_css_classes": [
    [
      "tests/admin_views/tests.py",
      [
        "CSSTest",
        "test_field_prefix_css_classes"
      ]
    ]
  ],
  "test_index_css_classes": [
    [
      "tests/admin_views/tests.py",
      [
        "CSSTest",
        "test_index_css_classes"
      ]
    ]
  ],
  "test_app_model_in_form_body_class": [
    [
      "tests/admin_views/tests.py",
      [
        "CSSTest",
        "test_app_model_in_form_body_class"
      ]
    ]
  ],
  "test_app_model_in_list_body_class": [
    [
      "tests/admin_views/tests.py",
      [
        "CSSTest",
        "test_app_model_in_list_body_class"
      ]
    ]
  ],
  "test_app_model_in_delete_confirmation_body_class": [
    [
      "tests/admin_views/tests.py",
      [
        "CSSTest",
        "test_app_model_in_delete_confirmation_body_class"
      ]
    ]
  ],
  "test_app_model_in_app_index_body_class": [
    [
      "tests/admin_views/tests.py",
      [
        "CSSTest",
        "test_app_model_in_app_index_body_class"
      ]
    ]
  ],
  "test_app_model_in_delete_selected_confirmation_body_class": [
    [
      "tests/admin_views/tests.py",
      [
        "CSSTest",
        "test_app_model_in_delete_selected_confirmation_body_class"
      ]
    ]
  ],
  "test_changelist_field_classes": [
    [
      "tests/admin_views/tests.py",
      [
        "CSSTest",
        "test_changelist_field_classes"
      ]
    ]
  ],
  "test_tags": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminDocsTest",
        "test_tags"
      ]
    ],
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests",
        "test_tags"
      ]
    ],
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "test_tags"
      ]
    ]
  ],
  "test_filters": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminDocsTest",
        "test_filters"
      ]
    ]
  ],
  "test_lang_name_present": [
    [
      "tests/admin_views/tests.py",
      [
        "ValidXHTMLTests",
        "test_lang_name_present"
      ]
    ]
  ],
  "assert_non_localized_year": [
    [
      "tests/admin_views/tests.py",
      [
        "DateHierarchyTests",
        "assert_non_localized_year"
      ]
    ]
  ],
  "assert_contains_year_link": [
    [
      "tests/admin_views/tests.py",
      [
        "DateHierarchyTests",
        "assert_contains_year_link"
      ]
    ]
  ],
  "assert_contains_month_link": [
    [
      "tests/admin_views/tests.py",
      [
        "DateHierarchyTests",
        "assert_contains_month_link"
      ]
    ]
  ],
  "assert_contains_day_link": [
    [
      "tests/admin_views/tests.py",
      [
        "DateHierarchyTests",
        "assert_contains_day_link"
      ]
    ]
  ],
  "test_empty": [
    [
      "tests/admin_views/tests.py",
      [
        "DateHierarchyTests",
        "test_empty"
      ]
    ],
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_empty"
      ]
    ],
    [
      "tests/empty/tests.py",
      [
        "EmptyModelTests",
        "test_empty"
      ]
    ],
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_empty"
      ]
    ],
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_empty"
      ]
    ],
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestFormField",
        "test_empty"
      ]
    ],
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestSaveLoad",
        "test_empty"
      ]
    ],
    [
      "tests/requests/test_accept_header.py",
      [
        "MediaTypeTests",
        "test_empty"
      ]
    ],
    [
      "tests/utils_tests/test_regex_helper.py",
      [
        "NormalizeTests",
        "test_empty"
      ]
    ]
  ],
  "test_single": [
    [
      "tests/admin_views/tests.py",
      [
        "DateHierarchyTests",
        "test_single"
      ]
    ],
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_single"
      ]
    ]
  ],
  "test_within_month": [
    [
      "tests/admin_views/tests.py",
      [
        "DateHierarchyTests",
        "test_within_month"
      ]
    ]
  ],
  "test_within_year": [
    [
      "tests/admin_views/tests.py",
      [
        "DateHierarchyTests",
        "test_within_year"
      ]
    ]
  ],
  "test_multiple_years": [
    [
      "tests/admin_views/tests.py",
      [
        "DateHierarchyTests",
        "test_multiple_years"
      ]
    ]
  ],
  "test_related_field": [
    [
      "tests/admin_views/tests.py",
      [
        "DateHierarchyTests",
        "test_related_field"
      ]
    ],
    [
      "tests/db_functions/comparison/test_greatest.py",
      [
        "GreatestTests",
        "test_related_field"
      ]
    ],
    [
      "tests/db_functions/comparison/test_least.py",
      [
        "LeastTests",
        "test_related_field"
      ]
    ],
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_related_field"
      ]
    ]
  ],
  "test_should_be_able_to_edit_related_objects_on_add_view": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminCustomSaveRelatedTests",
        "test_should_be_able_to_edit_related_objects_on_add_view"
      ]
    ]
  ],
  "test_should_be_able_to_edit_related_objects_on_change_view": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminCustomSaveRelatedTests",
        "test_should_be_able_to_edit_related_objects_on_change_view"
      ]
    ]
  ],
  "test_should_be_able_to_edit_related_objects_on_changelist_view": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminCustomSaveRelatedTests",
        "test_should_be_able_to_edit_related_objects_on_changelist_view"
      ]
    ]
  ],
  "test_client_logout_url_can_be_used_to_login": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewLogoutTests",
        "test_client_logout_url_can_be_used_to_login"
      ]
    ]
  ],
  "send_message": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminUserMessageTest",
        "send_message"
      ]
    ]
  ],
  "test_message_debug": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminUserMessageTest",
        "test_message_debug"
      ]
    ]
  ],
  "test_message_info": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminUserMessageTest",
        "test_message_info"
      ]
    ]
  ],
  "test_message_success": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminUserMessageTest",
        "test_message_success"
      ]
    ]
  ],
  "test_message_warning": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminUserMessageTest",
        "test_message_warning"
      ]
    ]
  ],
  "test_message_error": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminUserMessageTest",
        "test_message_error"
      ]
    ]
  ],
  "test_message_extra_tags": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminUserMessageTest",
        "test_message_extra_tags"
      ]
    ]
  ],
  "test_assert_url_equal": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminKeepChangeListFiltersTests",
        "test_assert_url_equal"
      ]
    ]
  ],
  "get_changelist_filters": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminKeepChangeListFiltersTests",
        "get_changelist_filters"
      ]
    ]
  ],
  "get_changelist_filters_querystring": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminKeepChangeListFiltersTests",
        "get_changelist_filters_querystring"
      ]
    ]
  ],
  "get_preserved_filters_querystring": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminKeepChangeListFiltersTests",
        "get_preserved_filters_querystring"
      ]
    ]
  ],
  "get_sample_user_id": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminKeepChangeListFiltersTests",
        "get_sample_user_id"
      ]
    ]
  ],
  "get_changelist_url": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminKeepChangeListFiltersTests",
        "get_changelist_url"
      ]
    ]
  ],
  "get_add_url": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminKeepChangeListFiltersTests",
        "get_add_url"
      ]
    ]
  ],
  "get_change_url": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminKeepChangeListFiltersTests",
        "get_change_url"
      ]
    ]
  ],
  "get_history_url": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminKeepChangeListFiltersTests",
        "get_history_url"
      ]
    ]
  ],
  "get_delete_url": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminKeepChangeListFiltersTests",
        "get_delete_url"
      ]
    ]
  ],
  "test_change_view_without_preserved_filters": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminKeepChangeListFiltersTests",
        "test_change_view_without_preserved_filters"
      ]
    ]
  ],
  "test_add_view_without_preserved_filters": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminKeepChangeListFiltersTests",
        "test_add_view_without_preserved_filters"
      ]
    ]
  ],
  "test_url_prefix": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminKeepChangeListFiltersTests",
        "test_url_prefix"
      ]
    ]
  ],
  "test_all_fields_visible": [
    [
      "tests/admin_views/tests.py",
      [
        "TestLabelVisibility",
        "test_all_fields_visible"
      ]
    ]
  ],
  "test_all_fields_hidden": [
    [
      "tests/admin_views/tests.py",
      [
        "TestLabelVisibility",
        "test_all_fields_hidden"
      ]
    ]
  ],
  "test_mixin": [
    [
      "tests/admin_views/tests.py",
      [
        "TestLabelVisibility",
        "test_mixin"
      ]
    ]
  ],
  "assert_field_visible": [
    [
      "tests/admin_views/tests.py",
      [
        "TestLabelVisibility",
        "assert_field_visible"
      ]
    ]
  ],
  "assert_field_hidden": [
    [
      "tests/admin_views/tests.py",
      [
        "TestLabelVisibility",
        "assert_field_hidden"
      ]
    ]
  ],
  "assert_fieldline_visible": [
    [
      "tests/admin_views/tests.py",
      [
        "TestLabelVisibility",
        "assert_fieldline_visible"
      ]
    ]
  ],
  "assert_fieldline_hidden": [
    [
      "tests/admin_views/tests.py",
      [
        "TestLabelVisibility",
        "assert_fieldline_hidden"
      ]
    ]
  ],
  "test_add_view_form_and_formsets_run_validation": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewOnSiteTests",
        "test_add_view_form_and_formsets_run_validation"
      ]
    ]
  ],
  "test_change_view_form_and_formsets_run_validation": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewOnSiteTests",
        "test_change_view_form_and_formsets_run_validation"
      ]
    ]
  ],
  "test_check": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewOnSiteTests",
        "test_check"
      ]
    ],
    [
      "tests/model_fields/tests.py",
      [
        "ChoicesTests",
        "test_check"
      ]
    ],
    [
      "tests/postgres_tests/test_integration.py",
      [
        "PostgresIntegrationTests",
        "test_check"
      ]
    ]
  ],
  "test_false": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewOnSiteTests",
        "test_false"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "InlineAdminViewOnSiteTest",
        "test_false"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_divisibleby.py",
      [
        "FunctionTests",
        "test_false"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_yesno.py",
      [
        "FunctionTests",
        "test_false"
      ]
    ]
  ],
  "test_true": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewOnSiteTests",
        "test_true"
      ]
    ],
    [
      "tests/admin_views/tests.py",
      [
        "InlineAdminViewOnSiteTest",
        "test_true"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_divisibleby.py",
      [
        "FunctionTests",
        "test_true"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_yesno.py",
      [
        "YesNoTests",
        "test_true"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_yesno.py",
      [
        "FunctionTests",
        "test_true"
      ]
    ]
  ],
  "test_missing_get_absolute_url": [
    [
      "tests/admin_views/tests.py",
      [
        "AdminViewOnSiteTests",
        "test_missing_get_absolute_url"
      ]
    ]
  ],
  "test_explicitly_provided_pk": [
    [
      "tests/admin_views/tests.py",
      [
        "GetFormsetsWithInlinesArgumentTest",
        "test_explicitly_provided_pk"
      ]
    ]
  ],
  "test_implicitly_generated_pk": [
    [
      "tests/admin_views/tests.py",
      [
        "GetFormsetsWithInlinesArgumentTest",
        "test_implicitly_generated_pk"
      ]
    ]
  ],
  "secure_view": [
    [
      "tests/admin_views/views.py",
      [
        "secure_view"
      ]
    ]
  ],
  "secure_view2": [
    [
      "tests/admin_views/views.py",
      [
        "secure_view2"
      ]
    ]
  ],
  "test_build_attrs": [
    [
      "tests/admin_widgets/test_autocomplete_widget.py",
      [
        "AutocompleteMixinTests",
        "test_build_attrs"
      ]
    ]
  ],
  "test_build_attrs_no_custom_class": [
    [
      "tests/admin_widgets/test_autocomplete_widget.py",
      [
        "AutocompleteMixinTests",
        "test_build_attrs_no_custom_class"
      ]
    ]
  ],
  "test_build_attrs_not_required_field": [
    [
      "tests/admin_widgets/test_autocomplete_widget.py",
      [
        "AutocompleteMixinTests",
        "test_build_attrs_not_required_field"
      ]
    ]
  ],
  "test_build_attrs_required_field": [
    [
      "tests/admin_widgets/test_autocomplete_widget.py",
      [
        "AutocompleteMixinTests",
        "test_build_attrs_required_field"
      ]
    ]
  ],
  "test_get_url": [
    [
      "tests/admin_widgets/test_autocomplete_widget.py",
      [
        "AutocompleteMixinTests",
        "test_get_url"
      ]
    ]
  ],
  "test_render_options": [
    [
      "tests/admin_widgets/test_autocomplete_widget.py",
      [
        "AutocompleteMixinTests",
        "test_render_options"
      ]
    ]
  ],
  "test_render_options_required_field": [
    [
      "tests/admin_widgets/test_autocomplete_widget.py",
      [
        "AutocompleteMixinTests",
        "test_render_options_required_field"
      ]
    ]
  ],
  "test_render_options_not_required_field": [
    [
      "tests/admin_widgets/test_autocomplete_widget.py",
      [
        "AutocompleteMixinTests",
        "test_render_options_not_required_field"
      ]
    ]
  ],
  "test_media": [
    [
      "tests/admin_widgets/test_autocomplete_widget.py",
      [
        "AutocompleteMixinTests",
        "test_media"
      ]
    ]
  ],
  "assertFormfield": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFormfieldForDBFieldTests",
        "assertFormfield"
      ]
    ]
  ],
  "test_DateField": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFormfieldForDBFieldTests",
        "test_DateField"
      ]
    ],
    [
      "tests/model_fields/test_promises.py",
      [
        "PromiseTest",
        "test_DateField"
      ]
    ]
  ],
  "test_DateTimeField": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFormfieldForDBFieldTests",
        "test_DateTimeField"
      ]
    ],
    [
      "tests/model_fields/test_promises.py",
      [
        "PromiseTest",
        "test_DateTimeField"
      ]
    ]
  ],
  "test_TimeField": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFormfieldForDBFieldTests",
        "test_TimeField"
      ]
    ],
    [
      "tests/model_fields/test_promises.py",
      [
        "PromiseTest",
        "test_TimeField"
      ]
    ]
  ],
  "test_TextField": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFormfieldForDBFieldTests",
        "test_TextField"
      ]
    ],
    [
      "tests/model_fields/test_promises.py",
      [
        "PromiseTest",
        "test_TextField"
      ]
    ]
  ],
  "test_URLField": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFormfieldForDBFieldTests",
        "test_URLField"
      ]
    ],
    [
      "tests/model_fields/test_promises.py",
      [
        "PromiseTest",
        "test_URLField"
      ]
    ]
  ],
  "test_IntegerField": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFormfieldForDBFieldTests",
        "test_IntegerField"
      ]
    ],
    [
      "tests/model_fields/test_promises.py",
      [
        "PromiseTest",
        "test_IntegerField"
      ]
    ]
  ],
  "test_CharField": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFormfieldForDBFieldTests",
        "test_CharField"
      ]
    ],
    [
      "tests/model_fields/test_promises.py",
      [
        "PromiseTest",
        "test_CharField"
      ]
    ]
  ],
  "test_EmailField": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFormfieldForDBFieldTests",
        "test_EmailField"
      ]
    ],
    [
      "tests/model_fields/test_promises.py",
      [
        "PromiseTest",
        "test_EmailField"
      ]
    ]
  ],
  "test_FileField": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFormfieldForDBFieldTests",
        "test_FileField"
      ]
    ],
    [
      "tests/model_fields/test_promises.py",
      [
        "PromiseTest",
        "test_FileField"
      ]
    ]
  ],
  "test_ForeignKey": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFormfieldForDBFieldTests",
        "test_ForeignKey"
      ]
    ],
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminRawIdWidgetSeleniumTests",
        "test_ForeignKey"
      ]
    ]
  ],
  "test_raw_id_ForeignKey": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFormfieldForDBFieldTests",
        "test_raw_id_ForeignKey"
      ]
    ]
  ],
  "test_radio_fields_ForeignKey": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFormfieldForDBFieldTests",
        "test_radio_fields_ForeignKey"
      ]
    ]
  ],
  "test_many_to_many": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFormfieldForDBFieldTests",
        "test_many_to_many"
      ]
    ],
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminRawIdWidgetSeleniumTests",
        "test_many_to_many"
      ]
    ],
    [
      "tests/backends/tests.py",
      [
        "DBConstraintTestCase",
        "test_many_to_many"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "ModelToDictTests",
        "test_many_to_many"
      ]
    ],
    [
      "tests/model_meta/tests.py",
      [
        "M2MTests",
        "test_many_to_many"
      ]
    ],
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "test_many_to_many"
      ]
    ]
  ],
  "test_raw_id_many_to_many": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFormfieldForDBFieldTests",
        "test_raw_id_many_to_many"
      ]
    ]
  ],
  "test_filtered_many_to_many": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFormfieldForDBFieldTests",
        "test_filtered_many_to_many"
      ]
    ]
  ],
  "test_formfield_overrides": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFormfieldForDBFieldTests",
        "test_formfield_overrides"
      ]
    ]
  ],
  "test_formfield_overrides_widget_instances": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFormfieldForDBFieldTests",
        "test_formfield_overrides_widget_instances"
      ]
    ]
  ],
  "test_formfield_overrides_m2m_filter_widget": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFormfieldForDBFieldTests",
        "test_formfield_overrides_m2m_filter_widget"
      ]
    ]
  ],
  "test_formfield_overrides_for_datetime_field": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFormfieldForDBFieldTests",
        "test_formfield_overrides_for_datetime_field"
      ]
    ]
  ],
  "test_formfield_overrides_for_custom_field": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFormfieldForDBFieldTests",
        "test_formfield_overrides_for_custom_field"
      ]
    ]
  ],
  "test_field_with_choices": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFormfieldForDBFieldTests",
        "test_field_with_choices"
      ]
    ]
  ],
  "test_choices_with_radio_fields": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFormfieldForDBFieldTests",
        "test_choices_with_radio_fields"
      ]
    ]
  ],
  "test_m2m_widgets": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFormfieldForDBFieldTests",
        "test_m2m_widgets"
      ]
    ]
  ],
  "test_filter_choices_by_request_user": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFormfieldForDBFieldWithRequestTests",
        "test_filter_choices_by_request_user"
      ]
    ]
  ],
  "test_changelist_ForeignKey": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminForeignKeyWidgetChangeList",
        "test_changelist_ForeignKey"
      ]
    ]
  ],
  "test_nonexistent_target_id": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminForeignKeyRawIdWidget",
        "test_nonexistent_target_id"
      ]
    ]
  ],
  "test_invalid_target_id": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminForeignKeyRawIdWidget",
        "test_invalid_target_id"
      ]
    ]
  ],
  "test_url_params_from_lookup_dict_any_iterable": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminForeignKeyRawIdWidget",
        "test_url_params_from_lookup_dict_any_iterable"
      ]
    ]
  ],
  "test_url_params_from_lookup_dict_callable": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminForeignKeyRawIdWidget",
        "test_url_params_from_lookup_dict_callable"
      ]
    ]
  ],
  "test_label_and_url_for_value_invalid_uuid": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminForeignKeyRawIdWidget",
        "test_label_and_url_for_value_invalid_uuid"
      ]
    ]
  ],
  "test_render": [
    [
      "tests/admin_widgets/tests.py",
      [
        "FilteredSelectMultipleWidgetTest",
        "test_render"
      ]
    ],
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminSplitDateTimeWidgetTest",
        "test_render"
      ]
    ],
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminURLWidgetTest",
        "test_render"
      ]
    ],
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFileWidgetTests",
        "test_render"
      ]
    ],
    [
      "tests/admin_widgets/tests.py",
      [
        "ForeignKeyRawIdWidgetTest",
        "test_render"
      ]
    ],
    [
      "tests/admin_widgets/tests.py",
      [
        "ManyToManyRawIdWidgetTest",
        "test_render"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "ReadOnlyPasswordHashTest",
        "test_render"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_fileinput.py",
      [
        "FileInputTest",
        "test_render"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_hiddeninput.py",
      [
        "HiddenInputTest",
        "test_render"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_passwordinput.py",
      [
        "PasswordInputTest",
        "test_render"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_radioselect.py",
      [
        "RadioSelectTest",
        "test_render"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_select.py",
      [
        "SelectTest",
        "test_render"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_textarea.py",
      [
        "TextareaTest",
        "test_render"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_textinput.py",
      [
        "TextInputTest",
        "test_render"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_render"
      ]
    ],
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSplitFormWidget",
        "test_render"
      ]
    ],
    [
      "tests/shortcuts/tests.py",
      [
        "RenderTests",
        "test_render"
      ]
    ],
    [
      "tests/template_tests/test_response.py",
      [
        "SimpleTemplateResponseTest",
        "test_render"
      ]
    ],
    [
      "tests/template_tests/test_response.py",
      [
        "TemplateResponseTest",
        "test_render"
      ]
    ]
  ],
  "test_stacked_render": [
    [
      "tests/admin_widgets/tests.py",
      [
        "FilteredSelectMultipleWidgetTest",
        "test_stacked_render"
      ]
    ]
  ],
  "test_attrs": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminDateWidgetTest",
        "test_attrs"
      ]
    ],
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminTimeWidgetTest",
        "test_attrs"
      ]
    ],
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminUUIDWidgetTests",
        "test_attrs"
      ]
    ]
  ],
  "test_localization": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminSplitDateTimeWidgetTest",
        "test_localization"
      ]
    ]
  ],
  "test_get_context_validates_url": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminURLWidgetTest",
        "test_get_context_validates_url"
      ]
    ]
  ],
  "test_render_idn": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminURLWidgetTest",
        "test_render_idn"
      ]
    ]
  ],
  "test_render_quoting": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminURLWidgetTest",
        "test_render_quoting"
      ]
    ]
  ],
  "test_render_required": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFileWidgetTests",
        "test_render_required"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_textarea.py",
      [
        "TextareaTest",
        "test_render_required"
      ]
    ]
  ],
  "test_readonly_fields": [
    [
      "tests/admin_widgets/tests.py",
      [
        "AdminFileWidgetTests",
        "test_readonly_fields"
      ]
    ]
  ],
  "test_relations_to_non_primary_key": [
    [
      "tests/admin_widgets/tests.py",
      [
        "ForeignKeyRawIdWidgetTest",
        "test_relations_to_non_primary_key"
      ]
    ]
  ],
  "test_fk_related_model_not_in_admin": [
    [
      "tests/admin_widgets/tests.py",
      [
        "ForeignKeyRawIdWidgetTest",
        "test_fk_related_model_not_in_admin"
      ]
    ]
  ],
  "test_fk_to_self_model_not_in_admin": [
    [
      "tests/admin_widgets/tests.py",
      [
        "ForeignKeyRawIdWidgetTest",
        "test_fk_to_self_model_not_in_admin"
      ]
    ]
  ],
  "test_proper_manager_for_label_lookup": [
    [
      "tests/admin_widgets/tests.py",
      [
        "ForeignKeyRawIdWidgetTest",
        "test_proper_manager_for_label_lookup"
      ]
    ]
  ],
  "test_m2m_related_model_not_in_admin": [
    [
      "tests/admin_widgets/tests.py",
      [
        "ManyToManyRawIdWidgetTest",
        "test_m2m_related_model_not_in_admin"
      ]
    ]
  ],
  "test_no_can_add_related": [
    [
      "tests/admin_widgets/tests.py",
      [
        "RelatedFieldWidgetWrapperTests",
        "test_no_can_add_related"
      ]
    ]
  ],
  "test_select_multiple_widget_cant_change_delete_related": [
    [
      "tests/admin_widgets/tests.py",
      [
        "RelatedFieldWidgetWrapperTests",
        "test_select_multiple_widget_cant_change_delete_related"
      ]
    ]
  ],
  "test_on_delete_cascade_rel_cant_delete_related": [
    [
      "tests/admin_widgets/tests.py",
      [
        "RelatedFieldWidgetWrapperTests",
        "test_on_delete_cascade_rel_cant_delete_related"
      ]
    ]
  ],
  "test_custom_widget_render": [
    [
      "tests/admin_widgets/tests.py",
      [
        "RelatedFieldWidgetWrapperTests",
        "test_custom_widget_render"
      ]
    ]
  ],
  "test_widget_delegates_value_omitted_from_data": [
    [
      "tests/admin_widgets/tests.py",
      [
        "RelatedFieldWidgetWrapperTests",
        "test_widget_delegates_value_omitted_from_data"
      ]
    ]
  ],
  "test_widget_is_hidden": [
    [
      "tests/admin_widgets/tests.py",
      [
        "RelatedFieldWidgetWrapperTests",
        "test_widget_is_hidden"
      ]
    ]
  ],
  "test_widget_is_not_hidden": [
    [
      "tests/admin_widgets/tests.py",
      [
        "RelatedFieldWidgetWrapperTests",
        "test_widget_is_not_hidden"
      ]
    ]
  ],
  "test_show_hide_date_time_picker_widgets": [
    [
      "tests/admin_widgets/tests.py",
      [
        "DateTimePickerSeleniumTests",
        "test_show_hide_date_time_picker_widgets"
      ]
    ]
  ],
  "test_calendar_nonday_class": [
    [
      "tests/admin_widgets/tests.py",
      [
        "DateTimePickerSeleniumTests",
        "test_calendar_nonday_class"
      ]
    ]
  ],
  "test_calendar_selected_class": [
    [
      "tests/admin_widgets/tests.py",
      [
        "DateTimePickerSeleniumTests",
        "test_calendar_selected_class"
      ]
    ]
  ],
  "test_calendar_no_selected_class": [
    [
      "tests/admin_widgets/tests.py",
      [
        "DateTimePickerSeleniumTests",
        "test_calendar_no_selected_class"
      ]
    ]
  ],
  "test_calendar_show_date_from_input": [
    [
      "tests/admin_widgets/tests.py",
      [
        "DateTimePickerSeleniumTests",
        "test_calendar_show_date_from_input"
      ]
    ]
  ],
  "test_date_time_picker_shortcuts": [
    [
      "tests/admin_widgets/tests.py",
      [
        "DateTimePickerShortcutsSeleniumTests",
        "test_date_time_picker_shortcuts"
      ]
    ]
  ],
  "assertActiveButtons": [
    [
      "tests/admin_widgets/tests.py",
      [
        "HorizontalVerticalFilterSeleniumTests",
        "assertActiveButtons"
      ]
    ]
  ],
  "execute_basic_operations": [
    [
      "tests/admin_widgets/tests.py",
      [
        "HorizontalVerticalFilterSeleniumTests",
        "execute_basic_operations"
      ]
    ]
  ],
  "test_filter": [
    [
      "tests/admin_widgets/tests.py",
      [
        "HorizontalVerticalFilterSeleniumTests",
        "test_filter"
      ]
    ],
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_filter"
      ]
    ],
    [
      "tests/model_fields/test_binaryfield.py",
      [
        "BinaryFieldTests",
        "test_filter"
      ]
    ],
    [
      "tests/template_tests/test_custom.py",
      [
        "CustomFilterTests",
        "test_filter"
      ]
    ],
    [
      "tests/template_tests/test_library.py",
      [
        "FilterRegistrationTests",
        "test_filter"
      ]
    ]
  ],
  "test_back_button_bug": [
    [
      "tests/admin_widgets/tests.py",
      [
        "HorizontalVerticalFilterSeleniumTests",
        "test_back_button_bug"
      ]
    ]
  ],
  "test_refresh_page": [
    [
      "tests/admin_widgets/tests.py",
      [
        "HorizontalVerticalFilterSeleniumTests",
        "test_refresh_page"
      ]
    ]
  ],
  "test_ForeignKey_using_to_field": [
    [
      "tests/admin_widgets/tests.py",
      [
        "RelatedFieldWidgetSeleniumTests",
        "test_ForeignKey_using_to_field"
      ]
    ]
  ],
  "test_filtered_aggregates": [
    [
      "tests/aggregation/test_filter_argument.py",
      [
        "FilteredAggregateTests",
        "test_filtered_aggregates"
      ]
    ],
    [
      "tests/expressions/tests.py",
      [
        "ReprTests",
        "test_filtered_aggregates"
      ]
    ]
  ],
  "test_filtered_numerical_aggregates": [
    [
      "tests/aggregation/test_filter_argument.py",
      [
        "FilteredAggregateTests",
        "test_filtered_numerical_aggregates"
      ]
    ]
  ],
  "test_double_filtered_aggregates": [
    [
      "tests/aggregation/test_filter_argument.py",
      [
        "FilteredAggregateTests",
        "test_double_filtered_aggregates"
      ]
    ]
  ],
  "test_excluded_aggregates": [
    [
      "tests/aggregation/test_filter_argument.py",
      [
        "FilteredAggregateTests",
        "test_excluded_aggregates"
      ]
    ]
  ],
  "test_related_aggregates_m2m": [
    [
      "tests/aggregation/test_filter_argument.py",
      [
        "FilteredAggregateTests",
        "test_related_aggregates_m2m"
      ]
    ]
  ],
  "test_related_aggregates_m2m_and_fk": [
    [
      "tests/aggregation/test_filter_argument.py",
      [
        "FilteredAggregateTests",
        "test_related_aggregates_m2m_and_fk"
      ]
    ]
  ],
  "test_plain_annotate": [
    [
      "tests/aggregation/test_filter_argument.py",
      [
        "FilteredAggregateTests",
        "test_plain_annotate"
      ]
    ]
  ],
  "test_filtered_aggregate_on_annotate": [
    [
      "tests/aggregation/test_filter_argument.py",
      [
        "FilteredAggregateTests",
        "test_filtered_aggregate_on_annotate"
      ]
    ]
  ],
  "test_case_aggregate": [
    [
      "tests/aggregation/test_filter_argument.py",
      [
        "FilteredAggregateTests",
        "test_case_aggregate"
      ]
    ]
  ],
  "test_sum_star_exception": [
    [
      "tests/aggregation/test_filter_argument.py",
      [
        "FilteredAggregateTests",
        "test_sum_star_exception"
      ]
    ]
  ],
  "test_filtered_reused_subquery": [
    [
      "tests/aggregation/test_filter_argument.py",
      [
        "FilteredAggregateTests",
        "test_filtered_reused_subquery"
      ]
    ]
  ],
  "test_filtered_aggregate_ref_annotation": [
    [
      "tests/aggregation/test_filter_argument.py",
      [
        "FilteredAggregateTests",
        "test_filtered_aggregate_ref_annotation"
      ]
    ]
  ],
  "test_filtered_aggregate_ref_subquery_annotation": [
    [
      "tests/aggregation/test_filter_argument.py",
      [
        "FilteredAggregateTests",
        "test_filtered_aggregate_ref_subquery_annotation"
      ]
    ]
  ],
  "test_empty_aggregate": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_empty_aggregate"
      ]
    ]
  ],
  "test_aggregate_in_order_by": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_aggregate_in_order_by"
      ]
    ]
  ],
  "test_single_aggregate": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_single_aggregate"
      ]
    ]
  ],
  "test_multiple_aggregates": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_multiple_aggregates"
      ]
    ]
  ],
  "test_filter_aggregate": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_filter_aggregate"
      ]
    ]
  ],
  "test_related_aggregate": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_related_aggregate"
      ]
    ]
  ],
  "test_aggregate_multi_join": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_aggregate_multi_join"
      ]
    ]
  ],
  "test_aggregate_alias": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_aggregate_alias"
      ]
    ]
  ],
  "test_annotate_basic": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_annotate_basic"
      ]
    ]
  ],
  "test_annotate_defer": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_annotate_defer"
      ]
    ]
  ],
  "test_annotate_defer_select_related": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_annotate_defer_select_related"
      ]
    ]
  ],
  "test_annotate_m2m": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_annotate_m2m"
      ]
    ]
  ],
  "test_backwards_m2m_annotate": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_backwards_m2m_annotate"
      ]
    ]
  ],
  "test_reverse_fkey_annotate": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_reverse_fkey_annotate"
      ]
    ]
  ],
  "test_annotate_values": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_annotate_values"
      ]
    ]
  ],
  "test_count": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_count"
      ]
    ],
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_count"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "PrefetchRelatedTests",
        "test_count"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_count"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "HTMLEqualTests",
        "test_count"
      ]
    ]
  ],
  "test_count_star": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_count_star"
      ]
    ]
  ],
  "test_count_distinct_expression": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_count_distinct_expression"
      ]
    ]
  ],
  "test_distinct_on_aggregate": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_distinct_on_aggregate"
      ]
    ]
  ],
  "test_non_grouped_annotation_not_in_group_by": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_non_grouped_annotation_not_in_group_by"
      ]
    ]
  ],
  "test_grouped_annotation_in_group_by": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_grouped_annotation_in_group_by"
      ]
    ]
  ],
  "test_fkey_aggregate": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_fkey_aggregate"
      ]
    ]
  ],
  "test_annotate_ordering": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_annotate_ordering"
      ]
    ]
  ],
  "test_aggregate_annotation": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_aggregate_annotation"
      ]
    ],
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_aggregate_annotation"
      ]
    ]
  ],
  "test_avg_duration_field": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_avg_duration_field"
      ]
    ]
  ],
  "test_sum_duration_field": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_sum_duration_field"
      ]
    ]
  ],
  "test_sum_distinct_aggregate": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_sum_distinct_aggregate"
      ]
    ]
  ],
  "test_filtering": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_filtering"
      ]
    ],
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests",
        "test_filtering"
      ]
    ],
    [
      "tests/db_functions/text/test_strindex.py",
      [
        "StrIndexTests",
        "test_filtering"
      ]
    ]
  ],
  "test_annotation": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_annotation"
      ]
    ],
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_annotation"
      ]
    ]
  ],
  "test_more_aggregation": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_more_aggregation"
      ]
    ]
  ],
  "test_even_more_aggregate": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_even_more_aggregate"
      ]
    ]
  ],
  "test_annotate_values_list": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_annotate_values_list"
      ]
    ]
  ],
  "test_dates_with_aggregation": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_dates_with_aggregation"
      ]
    ]
  ],
  "test_values_aggregation": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_values_aggregation"
      ]
    ]
  ],
  "test_ticket17424": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_ticket17424"
      ]
    ]
  ],
  "test_ticket12886": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_ticket12886"
      ]
    ]
  ],
  "test_ticket11881": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_ticket11881"
      ]
    ]
  ],
  "test_decimal_max_digits_has_no_effect": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_decimal_max_digits_has_no_effect"
      ]
    ]
  ],
  "test_nonaggregate_aggregation_throws": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_nonaggregate_aggregation_throws"
      ]
    ]
  ],
  "test_nonfield_annotation": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_nonfield_annotation"
      ]
    ]
  ],
  "test_missing_output_field_raises_error": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_missing_output_field_raises_error"
      ]
    ]
  ],
  "test_annotation_expressions": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_annotation_expressions"
      ]
    ]
  ],
  "test_aggregation_expressions": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_aggregation_expressions"
      ]
    ]
  ],
  "test_avg_decimal_field": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_avg_decimal_field"
      ]
    ]
  ],
  "test_order_of_precedence": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_order_of_precedence"
      ]
    ]
  ],
  "test_combine_different_types": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_combine_different_types"
      ]
    ]
  ],
  "test_complex_aggregations_require_kwarg": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_complex_aggregations_require_kwarg"
      ]
    ]
  ],
  "test_aggregate_over_complex_annotation": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_aggregate_over_complex_annotation"
      ]
    ]
  ],
  "test_values_annotation_with_expression": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_values_annotation_with_expression"
      ]
    ]
  ],
  "test_annotate_values_aggregate": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_annotate_values_aggregate"
      ]
    ],
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_annotate_values_aggregate"
      ]
    ]
  ],
  "test_annotate_over_annotate": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_annotate_over_annotate"
      ]
    ]
  ],
  "test_annotated_aggregate_over_annotated_aggregate": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_annotated_aggregate_over_annotated_aggregate"
      ]
    ]
  ],
  "test_multi_arg_aggregate": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_multi_arg_aggregate"
      ]
    ]
  ],
  "lower_case_function_override": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_add_implementation",
        "lower_case_function_override"
      ]
    ]
  ],
  "lower_case_function_super": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_add_implementation",
        "lower_case_function_super"
      ]
    ]
  ],
  "be_evil": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_add_implementation",
        "be_evil"
      ]
    ]
  ],
  "test_add_implementation": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_add_implementation"
      ]
    ]
  ],
  "test_complex_values_aggregation": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_complex_values_aggregation"
      ]
    ]
  ],
  "test_expression_on_aggregation": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_expression_on_aggregation"
      ]
    ]
  ],
  "test_arguments_must_be_expressions": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_arguments_must_be_expressions"
      ]
    ],
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_arguments_must_be_expressions"
      ]
    ]
  ],
  "test_aggregation_subquery_annotation": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_aggregation_subquery_annotation"
      ]
    ]
  ],
  "test_aggregation_subquery_annotation_exists": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_aggregation_subquery_annotation_exists"
      ]
    ]
  ],
  "test_aggregation_exists_annotation": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_aggregation_exists_annotation"
      ]
    ]
  ],
  "test_aggregation_subquery_annotation_values": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_aggregation_subquery_annotation_values"
      ]
    ]
  ],
  "test_aggregation_subquery_annotation_values_collision": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_aggregation_subquery_annotation_values_collision"
      ]
    ]
  ],
  "test_aggregation_subquery_annotation_multivalued": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_aggregation_subquery_annotation_multivalued"
      ]
    ]
  ],
  "test_aggregation_order_by_not_selected_annotation_values": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_aggregation_order_by_not_selected_annotation_values"
      ]
    ]
  ],
  "test_group_by_subquery_annotation": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_group_by_subquery_annotation"
      ]
    ]
  ],
  "test_group_by_exists_annotation": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_group_by_exists_annotation"
      ]
    ]
  ],
  "test_aggregation_subquery_annotation_related_field": [
    [
      "tests/aggregation/tests.py",
      [
        "AggregateTestCase",
        "test_aggregation_subquery_annotation_related_field"
      ]
    ]
  ],
  "assertObjectAttrs": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "assertObjectAttrs"
      ]
    ]
  ],
  "test_annotation_with_value": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_annotation_with_value"
      ]
    ]
  ],
  "test_aggregates_in_where_clause": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_aggregates_in_where_clause"
      ]
    ]
  ],
  "test_aggregates_in_where_clause_pre_eval": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_aggregates_in_where_clause_pre_eval"
      ]
    ]
  ],
  "test_annotate_with_extra": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_annotate_with_extra"
      ]
    ]
  ],
  "test_aggregate": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_aggregate"
      ]
    ],
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_aggregate"
      ]
    ],
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationAggregationTests",
        "test_aggregate"
      ]
    ]
  ],
  "test_conditional_aggregate": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_conditional_aggregate"
      ]
    ]
  ],
  "test_sliced_conditional_aggregate": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_sliced_conditional_aggregate"
      ]
    ]
  ],
  "test_annotated_conditional_aggregate": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_annotated_conditional_aggregate"
      ]
    ]
  ],
  "test_distinct_conditional_aggregate": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_distinct_conditional_aggregate"
      ]
    ]
  ],
  "test_conditional_aggregate_on_complex_condition": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_conditional_aggregate_on_complex_condition"
      ]
    ]
  ],
  "test_decimal_aggregate_annotation_filter": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_decimal_aggregate_annotation_filter"
      ]
    ]
  ],
  "test_field_error": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_field_error"
      ]
    ],
    [
      "tests/custom_columns/tests.py",
      [
        "CustomColumnsTests",
        "test_field_error"
      ]
    ],
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertFormsetErrorTests",
        "test_field_error"
      ]
    ]
  ],
  "test_more": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_more"
      ]
    ]
  ],
  "test_aggregate_fexpr": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_aggregate_fexpr"
      ]
    ]
  ],
  "test_db_col_table": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_db_col_table"
      ]
    ]
  ],
  "test_boolean_conversion": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_boolean_conversion"
      ]
    ],
    [
      "tests/gis_tests/geoapp/test_regress.py",
      [
        "GeoRegressionTests",
        "test_boolean_conversion"
      ]
    ]
  ],
  "test_more_more": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_more_more"
      ]
    ]
  ],
  "test_duplicate_alias": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_duplicate_alias"
      ]
    ]
  ],
  "test_field_name_conflict": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_field_name_conflict"
      ]
    ]
  ],
  "test_m2m_name_conflict": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_m2m_name_conflict"
      ]
    ]
  ],
  "test_fk_attname_conflict": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_fk_attname_conflict"
      ]
    ]
  ],
  "test_values_queryset_non_conflict": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_values_queryset_non_conflict"
      ]
    ]
  ],
  "test_reverse_relation_name_conflict": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_reverse_relation_name_conflict"
      ]
    ]
  ],
  "test_pickle": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_pickle"
      ]
    ],
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_pickle"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_pickle"
      ]
    ],
    [
      "tests/httpwrappers/tests.py",
      [
        "QueryDictTests",
        "test_pickle"
      ]
    ],
    [
      "tests/httpwrappers/tests.py",
      [
        "CookieTests",
        "test_pickle"
      ]
    ],
    [
      "tests/model_fields/test_filefield.py",
      [
        "FileFieldTests",
        "test_pickle"
      ]
    ],
    [
      "tests/model_fields/test_imagefield.py",
      [
        "ImageFieldTests",
        "test_pickle"
      ]
    ],
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase",
        "test_pickle"
      ]
    ],
    [
      "tests/utils_tests/test_simplelazyobject.py",
      [
        "TestUtilsSimpleLazyObjectDjangoTestCase",
        "test_pickle"
      ]
    ]
  ],
  "test_more_more_more": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_more_more_more"
      ]
    ]
  ],
  "test_empty_filter_count": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_empty_filter_count"
      ]
    ]
  ],
  "test_empty_filter_aggregate": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_empty_filter_aggregate"
      ]
    ]
  ],
  "test_none_call_before_aggregate": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_none_call_before_aggregate"
      ]
    ]
  ],
  "test_annotate_and_join": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_annotate_and_join"
      ]
    ]
  ],
  "test_f_expression_annotation": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_f_expression_annotation"
      ]
    ]
  ],
  "test_values_annotate_values": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_values_annotate_values"
      ]
    ]
  ],
  "test_having_group_by": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_having_group_by"
      ]
    ]
  ],
  "test_values_list_annotation_args_ordering": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_values_list_annotation_args_ordering"
      ]
    ]
  ],
  "test_annotation_disjunction": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_annotation_disjunction"
      ]
    ]
  ],
  "test_quoting_aggregate_order_by": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_quoting_aggregate_order_by"
      ]
    ]
  ],
  "test_stddev": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_stddev"
      ]
    ]
  ],
  "test_filtering_by_annotation_name": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_filtering_by_annotation_name"
      ]
    ]
  ],
  "test_annotate_joins": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_annotate_joins"
      ]
    ]
  ],
  "test_aggregate_duplicate_columns": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_aggregate_duplicate_columns"
      ]
    ]
  ],
  "test_aggregate_duplicate_columns_only": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_aggregate_duplicate_columns_only"
      ]
    ]
  ],
  "test_aggregate_duplicate_columns_select_related": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_aggregate_duplicate_columns_select_related"
      ]
    ]
  ],
  "assertQuerysetResults": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_aggregate_unmanaged_model_columns",
        "assertQuerysetResults"
      ]
    ]
  ],
  "test_aggregate_unmanaged_model_columns": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_aggregate_unmanaged_model_columns"
      ]
    ]
  ],
  "test_aggregate_unmanaged_model_as_tables": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_aggregate_unmanaged_model_as_tables"
      ]
    ]
  ],
  "test_reverse_join_trimming": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_reverse_join_trimming"
      ]
    ]
  ],
  "test_aggregation_with_generic_reverse_relation": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_aggregation_with_generic_reverse_relation"
      ]
    ]
  ],
  "test_negated_aggregation": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_negated_aggregation"
      ]
    ]
  ],
  "test_name_filters": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_name_filters"
      ]
    ]
  ],
  "test_name_expressions": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_name_expressions"
      ]
    ]
  ],
  "test_ticket_11293": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_ticket_11293"
      ]
    ]
  ],
  "test_ticket_11293_q_immutable": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_ticket_11293_q_immutable"
      ]
    ]
  ],
  "test_fobj_group_by": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_fobj_group_by"
      ]
    ]
  ],
  "test_annotate_reserved_word": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_annotate_reserved_word"
      ]
    ]
  ],
  "test_annotate_on_relation": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_annotate_on_relation"
      ]
    ]
  ],
  "test_aggregate_on_relation": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_aggregate_on_relation"
      ]
    ]
  ],
  "test_annotate_distinct_aggregate": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_annotate_distinct_aggregate"
      ]
    ]
  ],
  "test_annotate_values_list_flat": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_annotate_values_list_flat"
      ]
    ]
  ],
  "test_allow_distinct": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "AggregationTests",
        "test_allow_distinct"
      ]
    ]
  ],
  "test_ticket_21150": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "JoinPromotionTests",
        "test_ticket_21150"
      ]
    ]
  ],
  "test_existing_join_not_promoted": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "JoinPromotionTests",
        "test_existing_join_not_promoted"
      ]
    ]
  ],
  "test_non_nullable_fk_not_promoted": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "JoinPromotionTests",
        "test_non_nullable_fk_not_promoted"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "ValuesJoinPromotionTests",
        "test_non_nullable_fk_not_promoted"
      ]
    ]
  ],
  "test_ticket_24748": [
    [
      "tests/aggregation_regress/tests.py",
      [
        "SelfReferentialFKTests",
        "test_ticket_24748"
      ]
    ]
  ],
  "cxOracle_py3_bug": [
    [
      "tests/annotations/tests.py",
      [
        "cxOracle_py3_bug"
      ]
    ]
  ],
  "test_basic_annotation": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_basic_annotation"
      ]
    ]
  ],
  "test_basic_f_annotation": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_basic_f_annotation"
      ]
    ]
  ],
  "test_joined_annotation": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_joined_annotation"
      ]
    ]
  ],
  "test_mixed_type_annotation_date_interval": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_mixed_type_annotation_date_interval"
      ]
    ]
  ],
  "test_mixed_type_annotation_numbers": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_mixed_type_annotation_numbers"
      ]
    ]
  ],
  "test_empty_expression_annotation": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_empty_expression_annotation"
      ]
    ]
  ],
  "test_annotate_with_aggregation": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_annotate_with_aggregation"
      ]
    ]
  ],
  "test_aggregate_over_annotation": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_aggregate_over_annotation"
      ]
    ]
  ],
  "test_distinct_on_with_annotation": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_distinct_on_with_annotation"
      ]
    ]
  ],
  "test_filter_annotation": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_filter_annotation"
      ]
    ]
  ],
  "test_filter_annotation_with_f": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_filter_annotation_with_f"
      ]
    ]
  ],
  "test_filter_annotation_with_double_f": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_filter_annotation_with_double_f"
      ]
    ]
  ],
  "test_filter_agg_with_double_f": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_filter_agg_with_double_f"
      ]
    ]
  ],
  "test_filter_wrong_annotation": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_filter_wrong_annotation"
      ]
    ]
  ],
  "test_decimal_annotation": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_decimal_annotation"
      ]
    ]
  ],
  "test_filter_decimal_annotation": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_filter_decimal_annotation"
      ]
    ]
  ],
  "test_combined_annotation_commutative": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_combined_annotation_commutative"
      ]
    ]
  ],
  "test_update_with_annotation": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_update_with_annotation"
      ]
    ]
  ],
  "test_annotation_with_m2m": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_annotation_with_m2m"
      ]
    ]
  ],
  "test_annotation_reverse_m2m": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_annotation_reverse_m2m"
      ]
    ]
  ],
  "test_values_annotation": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_values_annotation"
      ]
    ]
  ],
  "test_values_with_pk_annotation": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_values_with_pk_annotation"
      ]
    ]
  ],
  "test_rawsql_group_by_collapse": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_rawsql_group_by_collapse"
      ]
    ]
  ],
  "test_defer_annotation": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_defer_annotation"
      ]
    ]
  ],
  "test_mti_annotations": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_mti_annotations"
      ]
    ]
  ],
  "test_null_annotation": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_null_annotation"
      ]
    ]
  ],
  "test_order_by_annotation": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_order_by_annotation"
      ]
    ]
  ],
  "test_order_by_aggregate": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_order_by_aggregate"
      ]
    ]
  ],
  "test_raw_sql_with_inherited_field": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_raw_sql_with_inherited_field"
      ]
    ]
  ],
  "test_annotate_exists": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_annotate_exists"
      ]
    ]
  ],
  "test_column_field_ordering": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_column_field_ordering"
      ]
    ]
  ],
  "test_column_field_ordering_with_deferred": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_column_field_ordering_with_deferred"
      ]
    ]
  ],
  "test_custom_functions": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_custom_functions"
      ]
    ]
  ],
  "test_custom_functions_can_ref_other_functions": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_custom_functions_can_ref_other_functions"
      ]
    ]
  ],
  "test_boolean_value_annotation": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_boolean_value_annotation"
      ]
    ]
  ],
  "test_annotation_in_f_grouped_by_annotation": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_annotation_in_f_grouped_by_annotation"
      ]
    ]
  ],
  "test_chaining_annotation_filter_with_m2m": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_chaining_annotation_filter_with_m2m"
      ]
    ]
  ],
  "test_annotation_filter_with_subquery": [
    [
      "tests/annotations/tests.py",
      [
        "NonAggregateAnnotationTestCase",
        "test_annotation_filter_with_subquery"
      ]
    ]
  ],
  "test_egg1": [
    [
      "tests/app_loading/tests.py",
      [
        "EggLoadingTest",
        "test_egg1"
      ]
    ]
  ],
  "test_egg2": [
    [
      "tests/app_loading/tests.py",
      [
        "EggLoadingTest",
        "test_egg2"
      ]
    ]
  ],
  "test_egg3": [
    [
      "tests/app_loading/tests.py",
      [
        "EggLoadingTest",
        "test_egg3"
      ]
    ]
  ],
  "test_egg4": [
    [
      "tests/app_loading/tests.py",
      [
        "EggLoadingTest",
        "test_egg4"
      ]
    ]
  ],
  "test_egg5": [
    [
      "tests/app_loading/tests.py",
      [
        "EggLoadingTest",
        "test_egg5"
      ]
    ]
  ],
  "test_get_model_only_returns_installed_models": [
    [
      "tests/app_loading/tests.py",
      [
        "GetModelsTest",
        "test_get_model_only_returns_installed_models"
      ]
    ]
  ],
  "test_get_models_only_returns_installed_models": [
    [
      "tests/app_loading/tests.py",
      [
        "GetModelsTest",
        "test_get_models_only_returns_installed_models"
      ]
    ]
  ],
  "test_singleton_master": [
    [
      "tests/apps/tests.py",
      [
        "AppsTests",
        "test_singleton_master"
      ]
    ]
  ],
  "test_ready": [
    [
      "tests/apps/tests.py",
      [
        "AppsTests",
        "test_ready"
      ]
    ]
  ],
  "test_bad_app_config": [
    [
      "tests/apps/tests.py",
      [
        "AppsTests",
        "test_bad_app_config"
      ]
    ]
  ],
  "test_not_an_app_config": [
    [
      "tests/apps/tests.py",
      [
        "AppsTests",
        "test_not_an_app_config"
      ]
    ]
  ],
  "test_no_such_app": [
    [
      "tests/apps/tests.py",
      [
        "AppsTests",
        "test_no_such_app"
      ]
    ]
  ],
  "test_no_such_app_config": [
    [
      "tests/apps/tests.py",
      [
        "AppsTests",
        "test_no_such_app_config"
      ]
    ]
  ],
  "test_no_such_app_config_with_choices": [
    [
      "tests/apps/tests.py",
      [
        "AppsTests",
        "test_no_such_app_config_with_choices"
      ]
    ]
  ],
  "test_default_app_config": [
    [
      "tests/apps/tests.py",
      [
        "AppsTests",
        "test_default_app_config"
      ]
    ]
  ],
  "test_get_app_configs": [
    [
      "tests/apps/tests.py",
      [
        "AppsTests",
        "test_get_app_configs"
      ]
    ]
  ],
  "test_get_app_config": [
    [
      "tests/apps/tests.py",
      [
        "AppsTests",
        "test_get_app_config"
      ]
    ]
  ],
  "test_is_installed": [
    [
      "tests/apps/tests.py",
      [
        "AppsTests",
        "test_is_installed"
      ]
    ]
  ],
  "test_get_model": [
    [
      "tests/apps/tests.py",
      [
        "AppsTests",
        "test_get_model"
      ]
    ]
  ],
  "test_relabeling": [
    [
      "tests/apps/tests.py",
      [
        "AppsTests",
        "test_relabeling"
      ]
    ]
  ],
  "test_duplicate_labels": [
    [
      "tests/apps/tests.py",
      [
        "AppsTests",
        "test_duplicate_labels"
      ]
    ]
  ],
  "test_duplicate_names": [
    [
      "tests/apps/tests.py",
      [
        "AppsTests",
        "test_duplicate_names"
      ]
    ]
  ],
  "test_import_exception_is_not_masked": [
    [
      "tests/apps/tests.py",
      [
        "AppsTests",
        "test_import_exception_is_not_masked"
      ]
    ]
  ],
  "test_models_py": [
    [
      "tests/apps/tests.py",
      [
        "AppsTests",
        "test_models_py"
      ]
    ]
  ],
  "test_models_not_loaded": [
    [
      "tests/apps/tests.py",
      [
        "AppsTests",
        "test_models_not_loaded"
      ]
    ]
  ],
  "test_dynamic_load": [
    [
      "tests/apps/tests.py",
      [
        "AppsTests",
        "test_dynamic_load"
      ]
    ]
  ],
  "test_model_clash": [
    [
      "tests/apps/tests.py",
      [
        "AppsTests",
        "test_model_clash"
      ]
    ]
  ],
  "test_get_containing_app_config_apps_not_ready": [
    [
      "tests/apps/tests.py",
      [
        "AppsTests",
        "test_get_containing_app_config_apps_not_ready"
      ]
    ]
  ],
  "test_lazy_model_operation": [
    [
      "tests/apps/tests.py",
      [
        "AppsTests",
        "test_lazy_model_operation"
      ]
    ]
  ],
  "test_path_set_explicitly": [
    [
      "tests/apps/tests.py",
      [
        "AppConfigTests",
        "test_path_set_explicitly"
      ]
    ]
  ],
  "test_explicit_path_overrides": [
    [
      "tests/apps/tests.py",
      [
        "AppConfigTests",
        "test_explicit_path_overrides"
      ]
    ]
  ],
  "test_dunder_path": [
    [
      "tests/apps/tests.py",
      [
        "AppConfigTests",
        "test_dunder_path"
      ]
    ]
  ],
  "test_no_dunder_path_fallback_to_dunder_file": [
    [
      "tests/apps/tests.py",
      [
        "AppConfigTests",
        "test_no_dunder_path_fallback_to_dunder_file"
      ]
    ]
  ],
  "test_empty_dunder_path_fallback_to_dunder_file": [
    [
      "tests/apps/tests.py",
      [
        "AppConfigTests",
        "test_empty_dunder_path_fallback_to_dunder_file"
      ]
    ]
  ],
  "test_multiple_dunder_path_fallback_to_dunder_file": [
    [
      "tests/apps/tests.py",
      [
        "AppConfigTests",
        "test_multiple_dunder_path_fallback_to_dunder_file"
      ]
    ]
  ],
  "test_no_dunder_path_or_dunder_file": [
    [
      "tests/apps/tests.py",
      [
        "AppConfigTests",
        "test_no_dunder_path_or_dunder_file"
      ]
    ]
  ],
  "test_empty_dunder_path_no_dunder_file": [
    [
      "tests/apps/tests.py",
      [
        "AppConfigTests",
        "test_empty_dunder_path_no_dunder_file"
      ]
    ]
  ],
  "test_multiple_dunder_path_no_dunder_file": [
    [
      "tests/apps/tests.py",
      [
        "AppConfigTests",
        "test_multiple_dunder_path_no_dunder_file"
      ]
    ]
  ],
  "test_duplicate_dunder_path_no_dunder_file": [
    [
      "tests/apps/tests.py",
      [
        "AppConfigTests",
        "test_duplicate_dunder_path_no_dunder_file"
      ]
    ]
  ],
  "test_repr": [
    [
      "tests/apps/tests.py",
      [
        "AppConfigTests",
        "test_repr"
      ]
    ],
    [
      "tests/backends/test_ddl_references.py",
      [
        "TableTests",
        "test_repr"
      ]
    ],
    [
      "tests/backends/test_ddl_references.py",
      [
        "ColumnsTests",
        "test_repr"
      ]
    ],
    [
      "tests/backends/test_ddl_references.py",
      [
        "IndexNameTests",
        "test_repr"
      ]
    ],
    [
      "tests/backends/test_ddl_references.py",
      [
        "ForeignKeyNameTests",
        "test_repr"
      ]
    ],
    [
      "tests/backends/test_ddl_references.py",
      [
        "StatementTests",
        "test_repr"
      ]
    ],
    [
      "tests/constraints/tests.py",
      [
        "CheckConstraintTests",
        "test_repr"
      ]
    ],
    [
      "tests/constraints/tests.py",
      [
        "UniqueConstraintTests",
        "test_repr"
      ]
    ],
    [
      "tests/gis_tests/test_geoip2.py",
      [
        "GeoIPTest",
        "test_repr"
      ]
    ],
    [
      "tests/i18n/test_management.py",
      [
        "TranslatableFileTests",
        "test_repr"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "ModelStateTests",
        "test_repr"
      ]
    ],
    [
      "tests/model_indexes/tests.py",
      [
        "SimpleIndexesTests",
        "test_repr"
      ]
    ],
    [
      "tests/postgres_tests/test_constraints.py",
      [
        "ExclusionConstraintTests",
        "test_repr"
      ]
    ],
    [
      "tests/requests/test_accept_header.py",
      [
        "MediaTypeTests",
        "test_repr"
      ]
    ],
    [
      "tests/responses/tests.py",
      [
        "HttpResponseTests",
        "test_repr"
      ]
    ],
    [
      "tests/serializers/test_deserializedobject.py",
      [
        "TestDeserializedObjectTests",
        "test_repr"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/i18n/test_translate.py",
      [
        "LocalizeNodeTests",
        "test_repr"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForNodeTests",
        "test_repr"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfNodeTests",
        "test_repr"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTests",
        "test_repr"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/test_with.py",
      [
        "WithNodeTests",
        "test_repr"
      ]
    ],
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ResolverMatchTests",
        "test_repr"
      ]
    ],
    [
      "tests/utils_tests/test_baseconv.py",
      [
        "TestBaseConv",
        "test_repr"
      ]
    ],
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "CaseInsensitiveMappingTests",
        "test_repr"
      ]
    ],
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "SimpleLazyObjectTestCase",
        "test_repr"
      ]
    ],
    [
      "tests/utils_tests/test_tree.py",
      [
        "NodeTests",
        "test_repr"
      ]
    ],
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "CallableSettingWrapperTests",
        "test_repr"
      ]
    ]
  ],
  "test_single_path": [
    [
      "tests/apps/tests.py",
      [
        "NamespacePackageAppTests",
        "test_single_path"
      ]
    ]
  ],
  "test_multiple_paths": [
    [
      "tests/apps/tests.py",
      [
        "NamespacePackageAppTests",
        "test_multiple_paths"
      ]
    ]
  ],
  "test_multiple_paths_explicit_path": [
    [
      "tests/apps/tests.py",
      [
        "NamespacePackageAppTests",
        "test_multiple_paths_explicit_path"
      ]
    ]
  ],
  "test_get_asgi_application": [
    [
      "tests/asgi/tests.py",
      [
        "ASGITest",
        "test_get_asgi_application"
      ]
    ]
  ],
  "test_file_response": [
    [
      "tests/asgi/tests.py",
      [
        "ASGITest",
        "test_file_response"
      ]
    ]
  ],
  "test_headers": [
    [
      "tests/asgi/tests.py",
      [
        "ASGITest",
        "test_headers"
      ]
    ]
  ],
  "test_get_query_string": [
    [
      "tests/asgi/tests.py",
      [
        "ASGITest",
        "test_get_query_string"
      ]
    ]
  ],
  "test_disconnect": [
    [
      "tests/asgi/tests.py",
      [
        "ASGITest",
        "test_disconnect"
      ]
    ],
    [
      "tests/signals/tests.py",
      [
        "LazyModelRefTests",
        "test_disconnect"
      ]
    ]
  ],
  "test_wrong_connection_type": [
    [
      "tests/asgi/tests.py",
      [
        "ASGITest",
        "test_wrong_connection_type"
      ]
    ]
  ],
  "test_non_unicode_query_string": [
    [
      "tests/asgi/tests.py",
      [
        "ASGITest",
        "test_non_unicode_query_string"
      ]
    ]
  ],
  "hello": [
    [
      "tests/asgi/urls.py",
      [
        "hello"
      ]
    ]
  ],
  "hello_meta": [
    [
      "tests/asgi/urls.py",
      [
        "hello_meta"
      ]
    ]
  ],
  "test_caches_local": [
    [
      "tests/async/tests.py",
      [
        "CacheTest",
        "test_caches_local"
      ]
    ]
  ],
  "test_get_async_connection": [
    [
      "tests/async/tests.py",
      [
        "DatabaseConnectionTest",
        "test_get_async_connection"
      ]
    ]
  ],
  "dangerous_method": [
    [
      "tests/async/tests.py",
      [
        "AsyncUnsafeTest",
        "dangerous_method"
      ]
    ]
  ],
  "test_async_unsafe": [
    [
      "tests/async/tests.py",
      [
        "AsyncUnsafeTest",
        "test_async_unsafe"
      ]
    ]
  ],
  "test_async_unsafe_suppressed": [
    [
      "tests/async/tests.py",
      [
        "AsyncUnsafeTest",
        "test_async_unsafe_suppressed"
      ]
    ]
  ],
  "extract_token_from_url": [
    [
      "tests/auth_tests/client.py",
      [
        "extract_token_from_url"
      ]
    ]
  ],
  "_get_password_reset_confirm_redirect_url": [
    [
      "tests/auth_tests/client.py",
      [
        "PasswordResetConfirmClient",
        "_get_password_reset_confirm_redirect_url"
      ]
    ]
  ],
  "is_staff": [
    [
      "tests/auth_tests/models/custom_user.py",
      [
        "CustomUser",
        "is_staff"
      ]
    ]
  ],
  "test_get_user_permissions": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "BaseBackendTest",
        "test_get_user_permissions"
      ]
    ]
  ],
  "test_get_group_permissions": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "BaseBackendTest",
        "test_get_group_permissions"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "RowlevelBackendTest",
        "test_get_group_permissions"
      ]
    ]
  ],
  "test_get_all_permissions": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "BaseBackendTest",
        "test_get_all_permissions"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "RowlevelBackendTest",
        "test_get_all_permissions"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "AnonymousUserBackendTest",
        "test_get_all_permissions"
      ]
    ]
  ],
  "test_has_perm": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "BaseBackendTest",
        "test_has_perm"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "BaseModelBackendTest",
        "test_has_perm"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "RowlevelBackendTest",
        "test_has_perm"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "AnonymousUserBackendTest",
        "test_has_perm"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "InActiveUserBackendTest",
        "test_has_perm"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "PermissionDeniedBackendTest",
        "test_has_perm"
      ]
    ]
  ],
  "test_custom_perms": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "BaseModelBackendTest",
        "test_custom_perms"
      ]
    ]
  ],
  "test_has_no_object_perm": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "BaseModelBackendTest",
        "test_has_no_object_perm"
      ]
    ]
  ],
  "test_anonymous_has_no_permissions": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "BaseModelBackendTest",
        "test_anonymous_has_no_permissions"
      ]
    ]
  ],
  "test_inactive_has_no_permissions": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "BaseModelBackendTest",
        "test_inactive_has_no_permissions"
      ]
    ]
  ],
  "test_get_all_superuser_permissions": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "BaseModelBackendTest",
        "test_get_all_superuser_permissions"
      ]
    ]
  ],
  "test_authentication_timing": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "BaseModelBackendTest",
        "test_authentication_timing"
      ]
    ]
  ],
  "test_authentication_without_credentials": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "BaseModelBackendTest",
        "test_authentication_without_credentials"
      ]
    ]
  ],
  "create_users": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "ModelBackendTest",
        "create_users"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "ExtensionUserModelBackendTest",
        "create_users"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "CustomPermissionsUserModelBackendTest",
        "create_users"
      ]
    ]
  ],
  "test_authenticate_inactive": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "ModelBackendTest",
        "test_authenticate_inactive"
      ]
    ]
  ],
  "test_authenticate_user_without_is_active_field": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "ModelBackendTest",
        "test_authenticate_user_without_is_active_field"
      ]
    ]
  ],
  "test_authenticate": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "CustomUserModelBackendAuthenticateTest",
        "test_authenticate"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "AllowAllUsersModelBackendTest",
        "test_authenticate"
      ]
    ]
  ],
  "test_has_perms": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "AnonymousUserBackendTest",
        "test_has_perms"
      ]
    ]
  ],
  "test_has_module_perms": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "AnonymousUserBackendTest",
        "test_has_module_perms"
      ]
    ],
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "InActiveUserBackendTest",
        "test_has_module_perms"
      ]
    ]
  ],
  "test_raises_exception": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "NoBackendsTest",
        "test_raises_exception"
      ]
    ],
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestRaiseLastException",
        "test_raises_exception"
      ]
    ]
  ],
  "user_login_failed_listener": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "PermissionDeniedBackendTest",
        "user_login_failed_listener"
      ]
    ]
  ],
  "test_permission_denied": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "PermissionDeniedBackendTest",
        "test_permission_denied"
      ]
    ],
    [
      "tests/logging_tests/tests.py",
      [
        "HandlerLoggingTests",
        "test_permission_denied"
      ]
    ]
  ],
  "test_authenticates": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "PermissionDeniedBackendTest",
        "test_authenticates"
      ]
    ]
  ],
  "test_has_perm_denied": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "PermissionDeniedBackendTest",
        "test_has_perm_denied"
      ]
    ]
  ],
  "test_changed_backend_settings": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "ChangedBackendSettingsTest",
        "test_changed_backend_settings"
      ]
    ]
  ],
  "test_type_error_raised": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "AuthenticateTests",
        "test_type_error_raised"
      ]
    ]
  ],
  "test_skips_backends_without_arguments": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "AuthenticateTests",
        "test_skips_backends_without_arguments"
      ]
    ]
  ],
  "test_skips_backends_with_decorated_method": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "AuthenticateTests",
        "test_skips_backends_with_decorated_method"
      ]
    ]
  ],
  "test_does_not_shadow_exception": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "ImproperlyConfiguredUserModelTest",
        "test_does_not_shadow_exception"
      ]
    ]
  ],
  "test_backend_path": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "ImportedBackendTests",
        "test_backend_path"
      ]
    ]
  ],
  "assertBackendInSession": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "SelectingBackendTests",
        "assertBackendInSession"
      ]
    ]
  ],
  "test_backend_path_login_without_authenticate_single_backend": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "SelectingBackendTests",
        "test_backend_path_login_without_authenticate_single_backend"
      ]
    ]
  ],
  "test_backend_path_login_without_authenticate_multiple_backends": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "SelectingBackendTests",
        "test_backend_path_login_without_authenticate_multiple_backends"
      ]
    ]
  ],
  "test_non_string_backend": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "SelectingBackendTests",
        "test_non_string_backend"
      ]
    ]
  ],
  "test_backend_path_login_with_explicit_backends": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "SelectingBackendTests",
        "test_backend_path_login_with_explicit_backends"
      ]
    ]
  ],
  "test_get_user": [
    [
      "tests/auth_tests/test_auth_backends.py",
      [
        "AllowAllUsersModelBackendTest",
        "test_get_user"
      ]
    ],
    [
      "tests/auth_tests/test_basic.py",
      [
        "TestGetUser",
        "test_get_user"
      ]
    ]
  ],
  "test_user": [
    [
      "tests/auth_tests/test_basic.py",
      [
        "BasicTestCase",
        "test_user"
      ]
    ]
  ],
  "test_unicode_username": [
    [
      "tests/auth_tests/test_basic.py",
      [
        "BasicTestCase",
        "test_unicode_username"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserCreationFormTest",
        "test_unicode_username"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "AuthenticationFormTest",
        "test_unicode_username"
      ]
    ]
  ],
  "test_user_no_email": [
    [
      "tests/auth_tests/test_basic.py",
      [
        "BasicTestCase",
        "test_user_no_email"
      ]
    ]
  ],
  "test_superuser": [
    [
      "tests/auth_tests/test_basic.py",
      [
        "BasicTestCase",
        "test_superuser"
      ]
    ]
  ],
  "test_superuser_no_email_or_password": [
    [
      "tests/auth_tests/test_basic.py",
      [
        "BasicTestCase",
        "test_superuser_no_email_or_password"
      ]
    ]
  ],
  "test_get_user_model": [
    [
      "tests/auth_tests/test_basic.py",
      [
        "BasicTestCase",
        "test_get_user_model"
      ]
    ]
  ],
  "test_swappable_user": [
    [
      "tests/auth_tests/test_basic.py",
      [
        "BasicTestCase",
        "test_swappable_user"
      ]
    ],
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_swappable_user"
      ]
    ]
  ],
  "test_swappable_user_bad_setting": [
    [
      "tests/auth_tests/test_basic.py",
      [
        "BasicTestCase",
        "test_swappable_user_bad_setting"
      ]
    ]
  ],
  "test_swappable_user_nonexistent_model": [
    [
      "tests/auth_tests/test_basic.py",
      [
        "BasicTestCase",
        "test_swappable_user_nonexistent_model"
      ]
    ]
  ],
  "test_user_verbose_names_translatable": [
    [
      "tests/auth_tests/test_basic.py",
      [
        "BasicTestCase",
        "test_user_verbose_names_translatable"
      ]
    ]
  ],
  "test_get_user_anonymous": [
    [
      "tests/auth_tests/test_basic.py",
      [
        "TestGetUser",
        "test_get_user_anonymous"
      ]
    ]
  ],
  "test_required_fields_is_list": [
    [
      "tests/auth_tests/test_checks.py",
      [
        "UserModelChecksTests",
        "test_required_fields_is_list"
      ]
    ]
  ],
  "test_username_not_in_required_fields": [
    [
      "tests/auth_tests/test_checks.py",
      [
        "UserModelChecksTests",
        "test_username_not_in_required_fields"
      ]
    ]
  ],
  "test_username_non_unique": [
    [
      "tests/auth_tests/test_checks.py",
      [
        "UserModelChecksTests",
        "test_username_non_unique"
      ]
    ]
  ],
  "test_is_anonymous_authenticated_methods": [
    [
      "tests/auth_tests/test_checks.py",
      [
        "UserModelChecksTests",
        "test_is_anonymous_authenticated_methods"
      ]
    ]
  ],
  "test_clashing_default_permissions": [
    [
      "tests/auth_tests/test_checks.py",
      [
        "ModelsPermissionsChecksTests",
        "test_clashing_default_permissions"
      ]
    ]
  ],
  "test_non_clashing_custom_permissions": [
    [
      "tests/auth_tests/test_checks.py",
      [
        "ModelsPermissionsChecksTests",
        "test_non_clashing_custom_permissions"
      ]
    ]
  ],
  "test_clashing_custom_permissions": [
    [
      "tests/auth_tests/test_checks.py",
      [
        "ModelsPermissionsChecksTests",
        "test_clashing_custom_permissions"
      ]
    ]
  ],
  "test_verbose_name_max_length": [
    [
      "tests/auth_tests/test_checks.py",
      [
        "ModelsPermissionsChecksTests",
        "test_verbose_name_max_length"
      ]
    ]
  ],
  "test_model_name_max_length": [
    [
      "tests/auth_tests/test_checks.py",
      [
        "ModelsPermissionsChecksTests",
        "test_model_name_max_length"
      ]
    ],
    [
      "tests/contenttypes_tests/test_checks.py",
      [
        "ModelCheckTests",
        "test_model_name_max_length"
      ]
    ]
  ],
  "test_custom_permission_name_max_length": [
    [
      "tests/auth_tests/test_checks.py",
      [
        "ModelsPermissionsChecksTests",
        "test_custom_permission_name_max_length"
      ]
    ]
  ],
  "test_custom_permission_codename_max_length": [
    [
      "tests/auth_tests/test_checks.py",
      [
        "ModelsPermissionsChecksTests",
        "test_custom_permission_codename_max_length"
      ]
    ]
  ],
  "test_empty_default_permissions": [
    [
      "tests/auth_tests/test_checks.py",
      [
        "ModelsPermissionsChecksTests",
        "test_empty_default_permissions"
      ]
    ]
  ],
  "test_permwrapper_in": [
    [
      "tests/auth_tests/test_context_processors.py",
      [
        "PermWrapperTests",
        "test_permwrapper_in"
      ]
    ]
  ],
  "test_permlookupdict_in": [
    [
      "tests/auth_tests/test_context_processors.py",
      [
        "PermWrapperTests",
        "test_permlookupdict_in"
      ]
    ]
  ],
  "test_iter": [
    [
      "tests/auth_tests/test_context_processors.py",
      [
        "PermWrapperTests",
        "test_iter"
      ]
    ],
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase",
        "test_iter"
      ]
    ]
  ],
  "test_session_not_accessed": [
    [
      "tests/auth_tests/test_context_processors.py",
      [
        "AuthContextProcessorTests",
        "test_session_not_accessed"
      ]
    ]
  ],
  "test_session_is_accessed": [
    [
      "tests/auth_tests/test_context_processors.py",
      [
        "AuthContextProcessorTests",
        "test_session_is_accessed"
      ]
    ]
  ],
  "test_perms_attrs": [
    [
      "tests/auth_tests/test_context_processors.py",
      [
        "AuthContextProcessorTests",
        "test_perms_attrs"
      ]
    ]
  ],
  "test_perm_in_perms_attrs": [
    [
      "tests/auth_tests/test_context_processors.py",
      [
        "AuthContextProcessorTests",
        "test_perm_in_perms_attrs"
      ]
    ]
  ],
  "test_message_attrs": [
    [
      "tests/auth_tests/test_context_processors.py",
      [
        "AuthContextProcessorTests",
        "test_message_attrs"
      ]
    ]
  ],
  "test_user_attrs": [
    [
      "tests/auth_tests/test_context_processors.py",
      [
        "AuthContextProcessorTests",
        "test_user_attrs"
      ]
    ]
  ],
  "test_login_required": [
    [
      "tests/auth_tests/test_decorators.py",
      [
        "LoginRequiredTestCase",
        "test_login_required"
      ]
    ],
    [
      "tests/auth_tests/test_mixins.py",
      [
        "LoginRequiredMixinTests",
        "test_login_required"
      ]
    ]
  ],
  "test_login_required_next_url": [
    [
      "tests/auth_tests/test_decorators.py",
      [
        "LoginRequiredTestCase",
        "test_login_required_next_url"
      ]
    ]
  ],
  "test_many_permissions_pass": [
    [
      "tests/auth_tests/test_decorators.py",
      [
        "PermissionsRequiredDecoratorTest",
        "test_many_permissions_pass"
      ]
    ],
    [
      "tests/auth_tests/test_mixins.py",
      [
        "PermissionsRequiredMixinTests",
        "test_many_permissions_pass"
      ]
    ]
  ],
  "test_many_permissions_in_set_pass": [
    [
      "tests/auth_tests/test_decorators.py",
      [
        "PermissionsRequiredDecoratorTest",
        "test_many_permissions_in_set_pass"
      ]
    ]
  ],
  "test_single_permission_pass": [
    [
      "tests/auth_tests/test_decorators.py",
      [
        "PermissionsRequiredDecoratorTest",
        "test_single_permission_pass"
      ]
    ],
    [
      "tests/auth_tests/test_mixins.py",
      [
        "PermissionsRequiredMixinTests",
        "test_single_permission_pass"
      ]
    ]
  ],
  "test_permissioned_denied_redirect": [
    [
      "tests/auth_tests/test_decorators.py",
      [
        "PermissionsRequiredDecoratorTest",
        "test_permissioned_denied_redirect"
      ]
    ],
    [
      "tests/auth_tests/test_mixins.py",
      [
        "PermissionsRequiredMixinTests",
        "test_permissioned_denied_redirect"
      ]
    ]
  ],
  "test_permissioned_denied_exception_raised": [
    [
      "tests/auth_tests/test_decorators.py",
      [
        "PermissionsRequiredDecoratorTest",
        "test_permissioned_denied_exception_raised"
      ]
    ],
    [
      "tests/auth_tests/test_mixins.py",
      [
        "PermissionsRequiredMixinTests",
        "test_permissioned_denied_exception_raised"
      ]
    ]
  ],
  "test_user_already_exists": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserCreationFormTest",
        "test_user_already_exists"
      ]
    ]
  ],
  "test_invalid_data": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserCreationFormTest",
        "test_invalid_data"
      ]
    ],
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_invalid_data"
      ]
    ]
  ],
  "test_password_verification": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserCreationFormTest",
        "test_password_verification"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "SetPasswordFormTest",
        "test_password_verification"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "PasswordChangeFormTest",
        "test_password_verification"
      ]
    ]
  ],
  "test_both_passwords": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserCreationFormTest",
        "test_both_passwords"
      ]
    ]
  ],
  "test_normalize_username": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserCreationFormTest",
        "test_normalize_username"
      ]
    ],
    [
      "tests/auth_tests/test_models.py",
      [
        "AbstractBaseUserTests",
        "test_normalize_username"
      ]
    ]
  ],
  "test_duplicate_normalized_unicode": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserCreationFormTest",
        "test_duplicate_normalized_unicode"
      ]
    ]
  ],
  "test_validates_password": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserCreationFormTest",
        "test_validates_password"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "SetPasswordFormTest",
        "test_validates_password"
      ]
    ]
  ],
  "test_custom_form": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserCreationFormTest",
        "test_custom_form"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserChangeFormTest",
        "test_custom_form"
      ]
    ],
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_custom_form"
      ]
    ]
  ],
  "test_custom_form_with_different_username_field": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserCreationFormTest",
        "test_custom_form_with_different_username_field"
      ]
    ]
  ],
  "test_custom_form_hidden_username_field": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserCreationFormTest",
        "test_custom_form_hidden_username_field"
      ]
    ]
  ],
  "test_password_whitespace_not_stripped": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserCreationFormTest",
        "test_password_whitespace_not_stripped"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "AuthenticationFormTest",
        "test_password_whitespace_not_stripped"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "SetPasswordFormTest",
        "test_password_whitespace_not_stripped"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "PasswordChangeFormTest",
        "test_password_whitespace_not_stripped"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "AdminPasswordChangeFormTest",
        "test_password_whitespace_not_stripped"
      ]
    ]
  ],
  "test_password_help_text": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserCreationFormTest",
        "test_password_help_text"
      ]
    ]
  ],
  "test_user_create_form_validates_password_with_all_data": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserCreationFormTest",
        "test_user_create_form_validates_password_with_all_data"
      ]
    ]
  ],
  "test_username_field_autocapitalize_none": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserCreationFormTest",
        "test_username_field_autocapitalize_none"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "AuthenticationFormTest",
        "test_username_field_autocapitalize_none"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserChangeFormTest",
        "test_username_field_autocapitalize_none"
      ]
    ]
  ],
  "test_html_autocomplete_attributes": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserCreationFormTest",
        "test_html_autocomplete_attributes"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "AuthenticationFormTest",
        "test_html_autocomplete_attributes"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "SetPasswordFormTest",
        "test_html_autocomplete_attributes"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "PasswordChangeFormTest",
        "test_html_autocomplete_attributes"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "PasswordResetFormTest",
        "test_html_autocomplete_attributes"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "AdminPasswordChangeFormTest",
        "test_html_autocomplete_attributes"
      ]
    ]
  ],
  "test_invalid_username": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "AuthenticationFormTest",
        "test_invalid_username"
      ]
    ],
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_invalid_username"
      ]
    ]
  ],
  "test_inactive_user_incorrect_password": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "AuthenticationFormTest",
        "test_inactive_user_incorrect_password"
      ]
    ]
  ],
  "test_login_failed": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "AuthenticationFormTest",
        "test_login_failed"
      ]
    ]
  ],
  "test_inactive_user_i18n": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "AuthenticationFormTest",
        "test_inactive_user_i18n"
      ]
    ]
  ],
  "test_custom_login_allowed_policy": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "AuthenticationFormTest",
        "test_custom_login_allowed_policy"
      ]
    ]
  ],
  "test_username_field_max_length_matches_user_model": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "AuthenticationFormTest",
        "test_username_field_max_length_matches_user_model"
      ]
    ]
  ],
  "test_username_field_max_length_defaults_to_254": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "AuthenticationFormTest",
        "test_username_field_max_length_defaults_to_254"
      ]
    ]
  ],
  "test_username_field_label": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "AuthenticationFormTest",
        "test_username_field_label"
      ]
    ]
  ],
  "test_username_field_label_not_set": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "AuthenticationFormTest",
        "test_username_field_label_not_set"
      ]
    ]
  ],
  "test_username_field_label_empty_string": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "AuthenticationFormTest",
        "test_username_field_label_empty_string"
      ]
    ]
  ],
  "test_integer_username": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "AuthenticationFormTest",
        "test_integer_username"
      ]
    ]
  ],
  "test_get_invalid_login_error": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "AuthenticationFormTest",
        "test_get_invalid_login_error"
      ]
    ]
  ],
  "test_help_text_translation": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "SetPasswordFormTest",
        "test_help_text_translation"
      ]
    ]
  ],
  "test_incorrect_password": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "PasswordChangeFormTest",
        "test_incorrect_password"
      ]
    ]
  ],
  "test_field_order": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "PasswordChangeFormTest",
        "test_field_order"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_field_order"
      ]
    ]
  ],
  "test_username_validity": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserChangeFormTest",
        "test_username_validity"
      ]
    ]
  ],
  "test_bug_14242": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserChangeFormTest",
        "test_bug_14242"
      ]
    ]
  ],
  "test_unusable_password": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserChangeFormTest",
        "test_unusable_password"
      ]
    ],
    [
      "tests/auth_tests/test_forms.py",
      [
        "PasswordResetFormTest",
        "test_unusable_password"
      ]
    ]
  ],
  "test_bug_17944_empty_password": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserChangeFormTest",
        "test_bug_17944_empty_password"
      ]
    ]
  ],
  "test_bug_17944_unmanageable_password": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserChangeFormTest",
        "test_bug_17944_unmanageable_password"
      ]
    ]
  ],
  "test_bug_17944_unknown_password_algorithm": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserChangeFormTest",
        "test_bug_17944_unknown_password_algorithm"
      ]
    ]
  ],
  "test_bug_19133": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserChangeFormTest",
        "test_bug_19133"
      ]
    ]
  ],
  "test_bug_19349_bound_password_field": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserChangeFormTest",
        "test_bug_19349_bound_password_field"
      ]
    ]
  ],
  "test_password_excluded": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "UserChangeFormTest",
        "test_password_excluded"
      ]
    ]
  ],
  "create_dummy_user": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "PasswordResetFormTest",
        "create_dummy_user"
      ]
    ]
  ],
  "test_invalid_email": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "PasswordResetFormTest",
        "test_invalid_email"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "FunctionTests",
        "test_invalid_email"
      ]
    ]
  ],
  "test_user_email_unicode_collision": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "PasswordResetFormTest",
        "test_user_email_unicode_collision"
      ]
    ]
  ],
  "test_user_email_domain_unicode_collision": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "PasswordResetFormTest",
        "test_user_email_domain_unicode_collision"
      ]
    ]
  ],
  "test_user_email_unicode_collision_nonexistent": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "PasswordResetFormTest",
        "test_user_email_unicode_collision_nonexistent"
      ]
    ]
  ],
  "test_user_email_domain_unicode_collision_nonexistent": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "PasswordResetFormTest",
        "test_user_email_domain_unicode_collision_nonexistent"
      ]
    ]
  ],
  "test_nonexistent_email": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "PasswordResetFormTest",
        "test_nonexistent_email"
      ]
    ]
  ],
  "test_cleaned_data": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "PasswordResetFormTest",
        "test_cleaned_data"
      ]
    ]
  ],
  "test_custom_email_subject": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "PasswordResetFormTest",
        "test_custom_email_subject"
      ]
    ]
  ],
  "test_custom_email_constructor": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "PasswordResetFormTest",
        "test_custom_email_constructor"
      ]
    ]
  ],
  "test_preserve_username_case": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "PasswordResetFormTest",
        "test_preserve_username_case"
      ]
    ]
  ],
  "test_save_plaintext_email": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "PasswordResetFormTest",
        "test_save_plaintext_email"
      ]
    ]
  ],
  "test_save_html_email_template_name": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "PasswordResetFormTest",
        "test_save_html_email_template_name"
      ]
    ]
  ],
  "test_custom_email_field": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "PasswordResetFormTest",
        "test_custom_email_field"
      ]
    ]
  ],
  "test_bug_19349_render_with_none_value": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "ReadOnlyPasswordHashTest",
        "test_bug_19349_render_with_none_value"
      ]
    ]
  ],
  "test_readonly_field_has_changed": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "ReadOnlyPasswordHashTest",
        "test_readonly_field_has_changed"
      ]
    ]
  ],
  "test_non_matching_passwords": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "AdminPasswordChangeFormTest",
        "test_non_matching_passwords"
      ]
    ]
  ],
  "test_missing_passwords": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "AdminPasswordChangeFormTest",
        "test_missing_passwords"
      ]
    ]
  ],
  "test_one_password": [
    [
      "tests/auth_tests/test_forms.py",
      [
        "AdminPasswordChangeFormTest",
        "test_one_password"
      ]
    ]
  ],
  "test_check_password": [
    [
      "tests/auth_tests/test_handlers.py",
      [
        "ModWsgiHandlerTestCase",
        "test_check_password"
      ]
    ],
    [
      "tests/auth_tests/test_models.py",
      [
        "AnonymousUserTests",
        "test_check_password"
      ]
    ]
  ],
  "test_check_password_custom_user": [
    [
      "tests/auth_tests/test_handlers.py",
      [
        "ModWsgiHandlerTestCase",
        "test_check_password_custom_user"
      ]
    ]
  ],
  "test_groups_for_user": [
    [
      "tests/auth_tests/test_handlers.py",
      [
        "ModWsgiHandlerTestCase",
        "test_groups_for_user"
      ]
    ]
  ],
  "test_simple": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPass",
        "test_simple"
      ]
    ],
    [
      "tests/auth_tests/test_management.py",
      [
        "GetDefaultUsernameTestCase",
        "test_simple"
      ]
    ],
    [
      "tests/bulk_create/tests.py",
      [
        "BulkCreateTests",
        "test_simple"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "DummyCacheTests",
        "test_simple"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_simple"
      ]
    ],
    [
      "tests/postgres_tests/test_search.py",
      [
        "SimpleSearchTest",
        "test_simple"
      ]
    ],
    [
      "tests/queries/test_bulk_update.py",
      [
        "BulkUpdateNoteTests",
        "test_simple"
      ]
    ],
    [
      "tests/reserved_names/tests.py",
      [
        "ReservedNameTests",
        "test_simple"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "CaptureQueriesContextManagerTests",
        "test_simple"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "AssertNumQueriesContextManagerTests",
        "test_simple"
      ]
    ],
    [
      "tests/unmanaged_models/tests.py",
      [
        "SimpleTests",
        "test_simple"
      ]
    ],
    [
      "tests/utils_tests/test_duration.py",
      [
        "TestDurationString",
        "test_simple"
      ]
    ],
    [
      "tests/utils_tests/test_duration.py",
      [
        "TestParseDurationRoundtrip",
        "test_simple"
      ]
    ],
    [
      "tests/utils_tests/test_duration.py",
      [
        "TestISODurationString",
        "test_simple"
      ]
    ],
    [
      "tests/utils_tests/test_duration.py",
      [
        "TestParseISODurationRoundtrip",
        "test_simple"
      ]
    ]
  ],
  "test_bytes": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPass",
        "test_bytes"
      ]
    ],
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase",
        "test_bytes"
      ]
    ]
  ],
  "test_invalid_password": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPass",
        "test_invalid_password"
      ]
    ]
  ],
  "test_pbkdf2": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPass",
        "test_pbkdf2"
      ]
    ]
  ],
  "test_sha1": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPass",
        "test_sha1"
      ]
    ]
  ],
  "test_md5": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPass",
        "test_md5"
      ]
    ]
  ],
  "test_unsalted_md5": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPass",
        "test_unsalted_md5"
      ]
    ]
  ],
  "test_unsalted_sha1": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPass",
        "test_unsalted_sha1"
      ]
    ]
  ],
  "test_crypt": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPass",
        "test_crypt"
      ]
    ]
  ],
  "test_bcrypt_sha256": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPass",
        "test_bcrypt_sha256"
      ]
    ]
  ],
  "test_bcrypt": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPass",
        "test_bcrypt"
      ]
    ]
  ],
  "test_bcrypt_upgrade": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPass",
        "test_bcrypt_upgrade"
      ]
    ]
  ],
  "test_bcrypt_harden_runtime": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPass",
        "test_bcrypt_harden_runtime"
      ]
    ]
  ],
  "test_unusable": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPass",
        "test_unusable"
      ]
    ]
  ],
  "test_unspecified_password": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPass",
        "test_unspecified_password"
      ]
    ]
  ],
  "test_bad_algorithm": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPass",
        "test_bad_algorithm"
      ]
    ]
  ],
  "test_is_password_usable": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPass",
        "test_is_password_usable"
      ]
    ]
  ],
  "test_low_level_pbkdf2": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPass",
        "test_low_level_pbkdf2"
      ]
    ]
  ],
  "test_low_level_pbkdf2_sha1": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPass",
        "test_low_level_pbkdf2_sha1"
      ]
    ]
  ],
  "test_upgrade": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPass",
        "test_upgrade"
      ]
    ]
  ],
  "test_no_upgrade": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPass",
        "test_no_upgrade"
      ]
    ]
  ],
  "test_no_upgrade_on_incorrect_pass": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPass",
        "test_no_upgrade_on_incorrect_pass"
      ]
    ]
  ],
  "test_pbkdf2_upgrade": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPass",
        "test_pbkdf2_upgrade"
      ]
    ]
  ],
  "test_pbkdf2_harden_runtime": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPass",
        "test_pbkdf2_harden_runtime"
      ]
    ]
  ],
  "setter": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPass",
        "test_pbkdf2_upgrade_new_hasher",
        "setter"
      ]
    ]
  ],
  "test_pbkdf2_upgrade_new_hasher": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPass",
        "test_pbkdf2_upgrade_new_hasher"
      ]
    ]
  ],
  "test_check_password_calls_harden_runtime": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPass",
        "test_check_password_calls_harden_runtime"
      ]
    ]
  ],
  "test_load_library_no_algorithm": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "BasePasswordHasherTests",
        "test_load_library_no_algorithm"
      ]
    ]
  ],
  "test_load_library_importerror": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "BasePasswordHasherTests",
        "test_load_library_importerror"
      ]
    ]
  ],
  "test_attributes": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "BasePasswordHasherTests",
        "test_attributes"
      ]
    ],
    [
      "tests/decorators/tests.py",
      [
        "DecoratorsTest",
        "test_attributes"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "HTMLEqualTests",
        "test_attributes"
      ]
    ]
  ],
  "test_encode": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "BasePasswordHasherTests",
        "test_encode"
      ]
    ],
    [
      "tests/httpwrappers/tests.py",
      [
        "CookieTests",
        "test_encode"
      ]
    ]
  ],
  "test_harden_runtime": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "BasePasswordHasherTests",
        "test_harden_runtime"
      ]
    ]
  ],
  "test_must_update": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "BasePasswordHasherTests",
        "test_must_update"
      ]
    ]
  ],
  "test_safe_summary": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "BasePasswordHasherTests",
        "test_safe_summary"
      ]
    ]
  ],
  "test_verify": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "BasePasswordHasherTests",
        "test_verify"
      ]
    ]
  ],
  "test_argon2": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPassArgon2",
        "test_argon2"
      ]
    ]
  ],
  "test_argon2_upgrade": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPassArgon2",
        "test_argon2_upgrade"
      ]
    ]
  ],
  "test_argon2_version_upgrade": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPassArgon2",
        "test_argon2_version_upgrade"
      ]
    ]
  ],
  "_test_argon2_upgrade": [
    [
      "tests/auth_tests/test_hashers.py",
      [
        "TestUtilsHashPassArgon2",
        "_test_argon2_upgrade"
      ]
    ]
  ],
  "getpass": [
    [
      "tests/auth_tests/test_management.py",
      [
        "mock_inputs",
        "inner",
        "wrapped",
        "mock_getpass",
        "getpass"
      ]
    ]
  ],
  "mock_input": [
    [
      "tests/auth_tests/test_management.py",
      [
        "mock_inputs",
        "inner",
        "wrapped",
        "mock_input"
      ]
    ],
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestInteractiveMessages",
        "mock_input"
      ]
    ]
  ],
  "wrapped": [
    [
      "tests/auth_tests/test_management.py",
      [
        "mock_inputs",
        "inner",
        "wrapped"
      ]
    ]
  ],
  "mock_inputs": [
    [
      "tests/auth_tests/test_management.py",
      [
        "mock_inputs"
      ]
    ]
  ],
  "test_input_not_found": [
    [
      "tests/auth_tests/test_management.py",
      [
        "MockInputTests",
        "test_input_not_found"
      ]
    ]
  ],
  "test_actual_implementation": [
    [
      "tests/auth_tests/test_management.py",
      [
        "GetDefaultUsernameTestCase",
        "test_actual_implementation"
      ]
    ]
  ],
  "test_existing": [
    [
      "tests/auth_tests/test_management.py",
      [
        "GetDefaultUsernameTestCase",
        "test_existing"
      ]
    ]
  ],
  "test_i18n": [
    [
      "tests/auth_tests/test_management.py",
      [
        "GetDefaultUsernameTestCase",
        "test_i18n"
      ]
    ]
  ],
  "test_get_pass": [
    [
      "tests/auth_tests/test_management.py",
      [
        "ChangepasswordManagementCommandTestCase",
        "test_get_pass"
      ]
    ]
  ],
  "test_get_pass_no_input": [
    [
      "tests/auth_tests/test_management.py",
      [
        "ChangepasswordManagementCommandTestCase",
        "test_get_pass_no_input"
      ]
    ]
  ],
  "test_system_username": [
    [
      "tests/auth_tests/test_management.py",
      [
        "ChangepasswordManagementCommandTestCase",
        "test_system_username"
      ]
    ]
  ],
  "test_nonexistent_username": [
    [
      "tests/auth_tests/test_management.py",
      [
        "ChangepasswordManagementCommandTestCase",
        "test_nonexistent_username"
      ]
    ]
  ],
  "test_that_changepassword_command_changes_joes_password": [
    [
      "tests/auth_tests/test_management.py",
      [
        "ChangepasswordManagementCommandTestCase",
        "test_that_changepassword_command_changes_joes_password"
      ]
    ]
  ],
  "test_that_max_tries_exits_1": [
    [
      "tests/auth_tests/test_management.py",
      [
        "ChangepasswordManagementCommandTestCase",
        "test_that_max_tries_exits_1"
      ]
    ]
  ],
  "test_password_validation": [
    [
      "tests/auth_tests/test_management.py",
      [
        "ChangepasswordManagementCommandTestCase",
        "test_password_validation"
      ]
    ],
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_password_validation"
      ]
    ]
  ],
  "test_that_changepassword_command_works_with_nonascii_output": [
    [
      "tests/auth_tests/test_management.py",
      [
        "ChangepasswordManagementCommandTestCase",
        "test_that_changepassword_command_works_with_nonascii_output"
      ]
    ]
  ],
  "test_that_changepassword_command_with_database_option_uses_given_db": [
    [
      "tests/auth_tests/test_management.py",
      [
        "MultiDBChangepasswordManagementCommandTestCase",
        "test_that_changepassword_command_with_database_option_uses_given_db"
      ]
    ]
  ],
  "test_no_email_argument": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_no_email_argument"
      ]
    ]
  ],
  "test_basic_usage": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_basic_usage"
      ]
    ]
  ],
  "test_non_ascii_verbose_name": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_non_ascii_verbose_name"
      ]
    ]
  ],
  "test_verbosity_zero": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_verbosity_zero"
      ]
    ]
  ],
  "test_email_in_username": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_email_in_username"
      ]
    ]
  ],
  "test_swappable_user_missing_required_field": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_swappable_user_missing_required_field"
      ]
    ]
  ],
  "createsuperuser": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_swappable_user_username_non_unique",
        "createsuperuser"
      ]
    ]
  ],
  "test_swappable_user_username_non_unique": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_swappable_user_username_non_unique"
      ]
    ]
  ],
  "test_skip_if_not_in_TTY": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_skip_if_not_in_TTY"
      ]
    ]
  ],
  "test_passing_stdin": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_passing_stdin"
      ]
    ]
  ],
  "test_fields_with_fk": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_fields_with_fk"
      ]
    ]
  ],
  "test_fields_with_fk_interactive": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_fields_with_fk_interactive"
      ]
    ]
  ],
  "test_fields_with_m2m": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_fields_with_m2m"
      ]
    ]
  ],
  "test_fields_with_m2m_interactive": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_fields_with_m2m_interactive"
      ]
    ]
  ],
  "return_orgs": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_fields_with_m2m_interactive_blank",
        "return_orgs"
      ]
    ]
  ],
  "test_fields_with_m2m_interactive_blank": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_fields_with_m2m_interactive_blank"
      ]
    ]
  ],
  "test_fields_with_m2m_and_through": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_fields_with_m2m_and_through"
      ]
    ]
  ],
  "test_default_username": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_default_username"
      ]
    ]
  ],
  "bad_then_good_password": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_password_validation",
        "bad_then_good_password"
      ]
    ],
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_validate_password_against_username",
        "bad_then_good_password"
      ]
    ],
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_validate_password_against_required_fields",
        "bad_then_good_password"
      ]
    ]
  ],
  "test_validate_password_against_username": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_validate_password_against_username"
      ]
    ]
  ],
  "test_validate_password_against_required_fields": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_validate_password_against_required_fields"
      ]
    ]
  ],
  "test_blank_username": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_blank_username"
      ]
    ]
  ],
  "test_blank_username_non_interactive": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_blank_username_non_interactive"
      ]
    ]
  ],
  "test_password_validation_bypass": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_password_validation_bypass"
      ]
    ]
  ],
  "return_passwords": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_invalid_username",
        "return_passwords"
      ]
    ],
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_existing_username",
        "return_passwords"
      ]
    ],
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_existing_username_provided_via_option_and_interactive",
        "return_passwords"
      ]
    ]
  ],
  "return_usernames": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_invalid_username",
        "return_usernames"
      ]
    ],
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_existing_username",
        "return_usernames"
      ]
    ]
  ],
  "test_keyboard_interrupt": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_keyboard_interrupt"
      ]
    ]
  ],
  "test_existing_username": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_existing_username"
      ]
    ]
  ],
  "test_existing_username_non_interactive": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_existing_username_non_interactive"
      ]
    ]
  ],
  "test_existing_username_provided_via_option_and_interactive": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_existing_username_provided_via_option_and_interactive"
      ]
    ]
  ],
  "mismatched_passwords_then_matched": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_validation_mismatched_passwords",
        "mismatched_passwords_then_matched"
      ]
    ]
  ],
  "test_validation_mismatched_passwords": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_validation_mismatched_passwords"
      ]
    ]
  ],
  "blank_passwords_then_valid": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_validation_blank_password_entered",
        "blank_passwords_then_valid"
      ]
    ]
  ],
  "test_validation_blank_password_entered": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_validation_blank_password_entered"
      ]
    ]
  ],
  "test_usermodel_without_password": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_usermodel_without_password"
      ]
    ]
  ],
  "test_usermodel_without_password_interactive": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_usermodel_without_password_interactive"
      ]
    ]
  ],
  "test_environment_variable_non_interactive": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_environment_variable_non_interactive"
      ]
    ]
  ],
  "test_ignore_environment_variable_non_interactive": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_ignore_environment_variable_non_interactive"
      ]
    ]
  ],
  "test_ignore_environment_variable_interactive": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatesuperuserManagementCommandTestCase",
        "test_ignore_environment_variable_interactive"
      ]
    ]
  ],
  "test_createsuperuser_command_with_database_option": [
    [
      "tests/auth_tests/test_management.py",
      [
        "MultiDBCreatesuperuserTestCase",
        "test_createsuperuser_command_with_database_option"
      ]
    ]
  ],
  "test_default_permissions": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatePermissionsTests",
        "test_default_permissions"
      ]
    ]
  ],
  "test_unavailable_models": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatePermissionsTests",
        "test_unavailable_models"
      ]
    ]
  ],
  "test_create_permissions_checks_contenttypes_created": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatePermissionsTests",
        "test_create_permissions_checks_contenttypes_created"
      ]
    ]
  ],
  "test_permission_with_proxy_content_type_created": [
    [
      "tests/auth_tests/test_management.py",
      [
        "CreatePermissionsTests",
        "test_permission_with_proxy_content_type_created"
      ]
    ]
  ],
  "test_no_password_change_doesnt_invalidate_session": [
    [
      "tests/auth_tests/test_middleware.py",
      [
        "TestAuthenticationMiddleware",
        "test_no_password_change_doesnt_invalidate_session"
      ]
    ]
  ],
  "test_changed_password_invalidates_session": [
    [
      "tests/auth_tests/test_middleware.py",
      [
        "TestAuthenticationMiddleware",
        "test_changed_password_invalidates_session"
      ]
    ]
  ],
  "test_no_session": [
    [
      "tests/auth_tests/test_middleware.py",
      [
        "TestAuthenticationMiddleware",
        "test_no_session"
      ]
    ],
    [
      "tests/messages_tests/test_session.py",
      [
        "SessionTests",
        "test_no_session"
      ]
    ]
  ],
  "test_proxy_model_permissions_contenttype": [
    [
      "tests/auth_tests/test_migrations.py",
      [
        "ProxyModelWithDifferentAppLabelTests",
        "test_proxy_model_permissions_contenttype"
      ]
    ],
    [
      "tests/auth_tests/test_migrations.py",
      [
        "ProxyModelWithSameAppLabelTests",
        "test_proxy_model_permissions_contenttype"
      ]
    ]
  ],
  "test_user_has_now_proxy_model_permissions": [
    [
      "tests/auth_tests/test_migrations.py",
      [
        "ProxyModelWithDifferentAppLabelTests",
        "test_user_has_now_proxy_model_permissions"
      ]
    ]
  ],
  "test_migrate_backwards": [
    [
      "tests/auth_tests/test_migrations.py",
      [
        "ProxyModelWithDifferentAppLabelTests",
        "test_migrate_backwards"
      ]
    ],
    [
      "tests/auth_tests/test_migrations.py",
      [
        "ProxyModelWithSameAppLabelTests",
        "test_migrate_backwards"
      ]
    ]
  ],
  "test_user_keeps_same_permissions_after_migrating_backward": [
    [
      "tests/auth_tests/test_migrations.py",
      [
        "ProxyModelWithDifferentAppLabelTests",
        "test_user_keeps_same_permissions_after_migrating_backward"
      ]
    ],
    [
      "tests/auth_tests/test_migrations.py",
      [
        "ProxyModelWithSameAppLabelTests",
        "test_user_keeps_same_permissions_after_migrating_backward"
      ]
    ]
  ],
  "test_user_still_has_proxy_model_permissions": [
    [
      "tests/auth_tests/test_migrations.py",
      [
        "ProxyModelWithSameAppLabelTests",
        "test_user_still_has_proxy_model_permissions"
      ]
    ]
  ],
  "test_migrate_with_existing_target_permission": [
    [
      "tests/auth_tests/test_migrations.py",
      [
        "ProxyModelWithSameAppLabelTests",
        "test_migrate_with_existing_target_permission"
      ]
    ]
  ],
  "test_migrate_other_database": [
    [
      "tests/auth_tests/test_migrations.py",
      [
        "MultiDBProxyModelAppLabelTests",
        "test_migrate_other_database"
      ]
    ]
  ],
  "test_stacked_mixins_success": [
    [
      "tests/auth_tests/test_mixins.py",
      [
        "AccessMixinTests",
        "test_stacked_mixins_success"
      ]
    ]
  ],
  "test_stacked_mixins_missing_permission": [
    [
      "tests/auth_tests/test_mixins.py",
      [
        "AccessMixinTests",
        "test_stacked_mixins_missing_permission"
      ]
    ]
  ],
  "test_access_mixin_permission_denied_response": [
    [
      "tests/auth_tests/test_mixins.py",
      [
        "AccessMixinTests",
        "test_access_mixin_permission_denied_response"
      ]
    ]
  ],
  "test_stacked_mixins_not_logged_in": [
    [
      "tests/auth_tests/test_mixins.py",
      [
        "AccessMixinTests",
        "test_stacked_mixins_not_logged_in"
      ]
    ]
  ],
  "_test_redirect": [
    [
      "tests/auth_tests/test_mixins.py",
      [
        "UserPassesTestTests",
        "_test_redirect"
      ]
    ]
  ],
  "test_default": [
    [
      "tests/auth_tests/test_mixins.py",
      [
        "UserPassesTestTests",
        "test_default"
      ]
    ],
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginRedirectUrlTest",
        "test_default"
      ]
    ],
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginRedirectAuthenticatedUser",
        "test_default"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "RendererTests",
        "test_default"
      ]
    ],
    [
      "tests/model_fields/test_decimalfield.py",
      [
        "DecimalFieldTests",
        "test_default"
      ]
    ],
    [
      "tests/responses/test_cookie.py",
      [
        "DeleteCookieTests",
        "test_default"
      ]
    ],
    [
      "tests/sitemaps_tests/test_management.py",
      [
        "PingGoogleTests",
        "test_default"
      ]
    ],
    [
      "tests/wsgi/tests.py",
      [
        "GetInternalWSGIApplicationTest",
        "test_default"
      ]
    ]
  ],
  "test_custom_redirect_url": [
    [
      "tests/auth_tests/test_mixins.py",
      [
        "UserPassesTestTests",
        "test_custom_redirect_url"
      ]
    ]
  ],
  "test_custom_redirect_parameter": [
    [
      "tests/auth_tests/test_mixins.py",
      [
        "UserPassesTestTests",
        "test_custom_redirect_parameter"
      ]
    ]
  ],
  "test_no_redirect_parameter": [
    [
      "tests/auth_tests/test_mixins.py",
      [
        "UserPassesTestTests",
        "test_no_redirect_parameter"
      ]
    ]
  ],
  "test_raise_exception": [
    [
      "tests/auth_tests/test_mixins.py",
      [
        "UserPassesTestTests",
        "test_raise_exception"
      ]
    ],
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MiddlewareNotUsedTests",
        "test_raise_exception"
      ]
    ]
  ],
  "test_raise_exception_custom_message": [
    [
      "tests/auth_tests/test_mixins.py",
      [
        "UserPassesTestTests",
        "test_raise_exception_custom_message"
      ]
    ]
  ],
  "test_raise_exception_custom_message_function": [
    [
      "tests/auth_tests/test_mixins.py",
      [
        "UserPassesTestTests",
        "test_raise_exception_custom_message_function"
      ]
    ]
  ],
  "test_user_passes": [
    [
      "tests/auth_tests/test_mixins.py",
      [
        "UserPassesTestTests",
        "test_user_passes"
      ]
    ]
  ],
  "test_user_natural_key": [
    [
      "tests/auth_tests/test_models.py",
      [
        "NaturalKeysTestCase",
        "test_user_natural_key"
      ]
    ]
  ],
  "test_group_natural_key": [
    [
      "tests/auth_tests/test_models.py",
      [
        "NaturalKeysTestCase",
        "test_group_natural_key"
      ]
    ]
  ],
  "test_user_is_created_and_added_to_group": [
    [
      "tests/auth_tests/test_models.py",
      [
        "LoadDataWithoutNaturalKeysTestCase",
        "test_user_is_created_and_added_to_group"
      ]
    ],
    [
      "tests/auth_tests/test_models.py",
      [
        "LoadDataWithNaturalKeysTestCase",
        "test_user_is_created_and_added_to_group"
      ]
    ]
  ],
  "test_load_data_with_user_permissions": [
    [
      "tests/auth_tests/test_models.py",
      [
        "LoadDataWithNaturalKeysAndMultipleDatabasesTestCase",
        "test_load_data_with_user_permissions"
      ]
    ]
  ],
  "test_create_user": [
    [
      "tests/auth_tests/test_models.py",
      [
        "UserManagerTestCase",
        "test_create_user"
      ]
    ],
    [
      "tests/auth_tests/test_models.py",
      [
        "TestCreateSuperUserSignals",
        "test_create_user"
      ]
    ]
  ],
  "test_create_user_email_domain_normalize_rfc3696": [
    [
      "tests/auth_tests/test_models.py",
      [
        "UserManagerTestCase",
        "test_create_user_email_domain_normalize_rfc3696"
      ]
    ]
  ],
  "test_create_user_email_domain_normalize": [
    [
      "tests/auth_tests/test_models.py",
      [
        "UserManagerTestCase",
        "test_create_user_email_domain_normalize"
      ]
    ]
  ],
  "test_create_user_email_domain_normalize_with_whitespace": [
    [
      "tests/auth_tests/test_models.py",
      [
        "UserManagerTestCase",
        "test_create_user_email_domain_normalize_with_whitespace"
      ]
    ]
  ],
  "test_empty_username": [
    [
      "tests/auth_tests/test_models.py",
      [
        "UserManagerTestCase",
        "test_empty_username"
      ]
    ]
  ],
  "test_create_user_is_staff": [
    [
      "tests/auth_tests/test_models.py",
      [
        "UserManagerTestCase",
        "test_create_user_is_staff"
      ]
    ]
  ],
  "test_create_super_user_raises_error_on_false_is_superuser": [
    [
      "tests/auth_tests/test_models.py",
      [
        "UserManagerTestCase",
        "test_create_super_user_raises_error_on_false_is_superuser"
      ]
    ]
  ],
  "test_create_superuser_raises_error_on_false_is_staff": [
    [
      "tests/auth_tests/test_models.py",
      [
        "UserManagerTestCase",
        "test_create_superuser_raises_error_on_false_is_staff"
      ]
    ]
  ],
  "test_make_random_password": [
    [
      "tests/auth_tests/test_models.py",
      [
        "UserManagerTestCase",
        "test_make_random_password"
      ]
    ]
  ],
  "test_has_usable_password": [
    [
      "tests/auth_tests/test_models.py",
      [
        "AbstractBaseUserTests",
        "test_has_usable_password"
      ]
    ]
  ],
  "test_clean_normalize_username": [
    [
      "tests/auth_tests/test_models.py",
      [
        "AbstractBaseUserTests",
        "test_clean_normalize_username"
      ]
    ]
  ],
  "test_default_email": [
    [
      "tests/auth_tests/test_models.py",
      [
        "AbstractBaseUserTests",
        "test_default_email"
      ]
    ]
  ],
  "test_custom_email": [
    [
      "tests/auth_tests/test_models.py",
      [
        "AbstractBaseUserTests",
        "test_custom_email"
      ]
    ]
  ],
  "test_email_user": [
    [
      "tests/auth_tests/test_models.py",
      [
        "AbstractUserTestCase",
        "test_email_user"
      ]
    ]
  ],
  "test_last_login_default": [
    [
      "tests/auth_tests/test_models.py",
      [
        "AbstractUserTestCase",
        "test_last_login_default"
      ]
    ]
  ],
  "test_user_clean_normalize_email": [
    [
      "tests/auth_tests/test_models.py",
      [
        "AbstractUserTestCase",
        "test_user_clean_normalize_email"
      ]
    ]
  ],
  "test_user_double_save": [
    [
      "tests/auth_tests/test_models.py",
      [
        "AbstractUserTestCase",
        "test_user_double_save"
      ]
    ]
  ],
  "test_check_password_upgrade": [
    [
      "tests/auth_tests/test_models.py",
      [
        "AbstractUserTestCase",
        "test_check_password_upgrade"
      ]
    ]
  ],
  "test_invalid_permission_name": [
    [
      "tests/auth_tests/test_models.py",
      [
        "UserWithPermTestCase",
        "test_invalid_permission_name"
      ]
    ]
  ],
  "test_invalid_permission_type": [
    [
      "tests/auth_tests/test_models.py",
      [
        "UserWithPermTestCase",
        "test_invalid_permission_type"
      ]
    ]
  ],
  "test_invalid_backend_type": [
    [
      "tests/auth_tests/test_models.py",
      [
        "UserWithPermTestCase",
        "test_invalid_backend_type"
      ]
    ]
  ],
  "test_backend_without_with_perm": [
    [
      "tests/auth_tests/test_models.py",
      [
        "UserWithPermTestCase",
        "test_backend_without_with_perm"
      ]
    ]
  ],
  "test_nonexistent_permission": [
    [
      "tests/auth_tests/test_models.py",
      [
        "UserWithPermTestCase",
        "test_nonexistent_permission"
      ]
    ]
  ],
  "test_nonexistent_backend": [
    [
      "tests/auth_tests/test_models.py",
      [
        "UserWithPermTestCase",
        "test_nonexistent_backend"
      ]
    ]
  ],
  "test_custom_backend": [
    [
      "tests/auth_tests/test_models.py",
      [
        "UserWithPermTestCase",
        "test_custom_backend"
      ]
    ],
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_custom_backend"
      ]
    ]
  ],
  "test_custom_backend_pass_obj": [
    [
      "tests/auth_tests/test_models.py",
      [
        "UserWithPermTestCase",
        "test_custom_backend_pass_obj"
      ]
    ]
  ],
  "test_multiple_backends": [
    [
      "tests/auth_tests/test_models.py",
      [
        "UserWithPermTestCase",
        "test_multiple_backends"
      ]
    ]
  ],
  "test_builtin_user_isactive": [
    [
      "tests/auth_tests/test_models.py",
      [
        "IsActiveTestCase",
        "test_builtin_user_isactive"
      ]
    ]
  ],
  "test_is_active_field_default": [
    [
      "tests/auth_tests/test_models.py",
      [
        "IsActiveTestCase",
        "test_is_active_field_default"
      ]
    ]
  ],
  "post_save_listener": [
    [
      "tests/auth_tests/test_models.py",
      [
        "TestCreateSuperUserSignals",
        "post_save_listener"
      ]
    ]
  ],
  "test_create_superuser": [
    [
      "tests/auth_tests/test_models.py",
      [
        "TestCreateSuperUserSignals",
        "test_create_superuser"
      ]
    ]
  ],
  "test_properties": [
    [
      "tests/auth_tests/test_models.py",
      [
        "AnonymousUserTests",
        "test_properties"
      ]
    ]
  ],
  "test_str": [
    [
      "tests/auth_tests/test_models.py",
      [
        "AnonymousUserTests",
        "test_str"
      ]
    ],
    [
      "tests/auth_tests/test_models.py",
      [
        "GroupTests",
        "test_str"
      ]
    ],
    [
      "tests/auth_tests/test_models.py",
      [
        "PermissionTests",
        "test_str"
      ]
    ],
    [
      "tests/backends/test_ddl_references.py",
      [
        "TableTests",
        "test_str"
      ]
    ],
    [
      "tests/backends/test_ddl_references.py",
      [
        "ColumnsTests",
        "test_str"
      ]
    ],
    [
      "tests/backends/test_ddl_references.py",
      [
        "IndexNameTests",
        "test_str"
      ]
    ],
    [
      "tests/backends/test_ddl_references.py",
      [
        "ForeignKeyNameTests",
        "test_str"
      ]
    ],
    [
      "tests/backends/test_ddl_references.py",
      [
        "StatementTests",
        "test_str"
      ]
    ],
    [
      "tests/contenttypes_tests/test_fields.py",
      [
        "GenericForeignKeyTests",
        "test_str"
      ]
    ],
    [
      "tests/contenttypes_tests/test_models.py",
      [
        "ContentTypesTests",
        "test_str"
      ]
    ],
    [
      "tests/flatpages_tests/test_models.py",
      [
        "FlatpageModelTests",
        "test_str"
      ]
    ],
    [
      "tests/model_enums/tests.py",
      [
        "ChoicesTests",
        "test_str"
      ]
    ],
    [
      "tests/postgres_tests/test_search.py",
      [
        "SearchQueryTests",
        "test_str"
      ]
    ],
    [
      "tests/requests/test_accept_header.py",
      [
        "MediaTypeTests",
        "test_str"
      ]
    ],
    [
      "tests/sites_tests/tests.py",
      [
        "RequestSiteTests",
        "test_str"
      ]
    ],
    [
      "tests/template_tests/test_base.py",
      [
        "VariableDoesNotExistTests",
        "test_str"
      ]
    ],
    [
      "tests/urlpatterns/test_resolvers.py",
      [
        "RegexPatternTests",
        "test_str"
      ]
    ],
    [
      "tests/urlpatterns/test_resolvers.py",
      [
        "RoutePatternTests",
        "test_str"
      ]
    ],
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "CaseInsensitiveMappingTests",
        "test_str"
      ]
    ],
    [
      "tests/utils_tests/test_tree.py",
      [
        "NodeTests",
        "test_str"
      ]
    ]
  ],
  "test_eq": [
    [
      "tests/auth_tests/test_models.py",
      [
        "AnonymousUserTests",
        "test_eq"
      ]
    ],
    [
      "tests/basic/tests.py",
      [
        "ModelTest",
        "test_eq"
      ]
    ],
    [
      "tests/constraints/tests.py",
      [
        "CheckConstraintTests",
        "test_eq"
      ]
    ],
    [
      "tests/constraints/tests.py",
      [
        "UniqueConstraintTests",
        "test_eq"
      ]
    ],
    [
      "tests/defer/tests.py",
      [
        "TestDefer2",
        "test_eq"
      ]
    ],
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_eq"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_eq"
      ]
    ],
    [
      "tests/i18n/test_management.py",
      [
        "TranslatableFileTests",
        "test_eq"
      ]
    ],
    [
      "tests/messages_tests/tests.py",
      [
        "MessageTests",
        "test_eq"
      ]
    ],
    [
      "tests/model_indexes/tests.py",
      [
        "SimpleIndexesTests",
        "test_eq"
      ]
    ],
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceTests",
        "test_eq"
      ]
    ],
    [
      "tests/postgres_tests/test_constraints.py",
      [
        "ExclusionConstraintTests",
        "test_eq"
      ]
    ],
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelTests",
        "test_eq"
      ]
    ]
  ],
  "test_hash": [
    [
      "tests/auth_tests/test_models.py",
      [
        "AnonymousUserTests",
        "test_hash"
      ]
    ],
    [
      "tests/basic/tests.py",
      [
        "ModelTest",
        "test_hash"
      ]
    ],
    [
      "tests/expressions/tests.py",
      [
        "FTests",
        "test_hash"
      ]
    ],
    [
      "tests/expressions/tests.py",
      [
        "SimpleExpressionTests",
        "test_hash"
      ]
    ],
    [
      "tests/expressions/tests.py",
      [
        "ValueTests",
        "test_hash"
      ]
    ],
    [
      "tests/expressions_case/tests.py",
      [
        "CaseDocumentationExamples",
        "test_hash"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_hash"
      ]
    ],
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase",
        "test_hash"
      ]
    ],
    [
      "tests/utils_tests/test_tree.py",
      [
        "NodeTests",
        "test_hash"
      ]
    ]
  ],
  "test_int": [
    [
      "tests/auth_tests/test_models.py",
      [
        "AnonymousUserTests",
        "test_int"
      ]
    ]
  ],
  "test_save": [
    [
      "tests/auth_tests/test_models.py",
      [
        "AnonymousUserTests",
        "test_save"
      ]
    ],
    [
      "tests/custom_pk/tests.py",
      [
        "BasicCustomPKTests",
        "test_save"
      ]
    ],
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_save"
      ]
    ],
    [
      "tests/sessions_tests/tests.py",
      [
        "CookieSessionTests",
        "test_save"
      ]
    ],
    [
      "tests/sites_tests/tests.py",
      [
        "RequestSiteTests",
        "test_save"
      ]
    ]
  ],
  "test_set_password": [
    [
      "tests/auth_tests/test_models.py",
      [
        "AnonymousUserTests",
        "test_set_password"
      ]
    ]
  ],
  "test_timeout": [
    [
      "tests/auth_tests/test_password_reset_timeout_days.py",
      [
        "DeprecationTests",
        "test_timeout"
      ]
    ],
    [
      "tests/auth_tests/test_tokens.py",
      [
        "TokenGeneratorTest",
        "test_timeout"
      ]
    ]
  ],
  "test_override_settings_warning": [
    [
      "tests/auth_tests/test_password_reset_timeout_days.py",
      [
        "DeprecationTests",
        "test_override_settings_warning"
      ]
    ]
  ],
  "test_settings_init_warning": [
    [
      "tests/auth_tests/test_password_reset_timeout_days.py",
      [
        "DeprecationTests",
        "test_settings_init_warning"
      ]
    ]
  ],
  "test_access_warning": [
    [
      "tests/auth_tests/test_password_reset_timeout_days.py",
      [
        "DeprecationTests",
        "test_access_warning"
      ]
    ]
  ],
  "test_access": [
    [
      "tests/auth_tests/test_password_reset_timeout_days.py",
      [
        "DeprecationTests",
        "test_access"
      ]
    ],
    [
      "tests/gis_tests/test_measure.py",
      [
        "DistanceTest",
        "test_access"
      ]
    ],
    [
      "tests/gis_tests/test_measure.py",
      [
        "AreaTest",
        "test_access"
      ]
    ]
  ],
  "test_use_both_settings_init_error": [
    [
      "tests/auth_tests/test_password_reset_timeout_days.py",
      [
        "DeprecationTests",
        "test_use_both_settings_init_error"
      ]
    ]
  ],
  "test_no_remote_user": [
    [
      "tests/auth_tests/test_remote_user.py",
      [
        "RemoteUserTest",
        "test_no_remote_user"
      ]
    ]
  ],
  "test_csrf_validation_passes_after_process_request_login": [
    [
      "tests/auth_tests/test_remote_user.py",
      [
        "RemoteUserTest",
        "test_csrf_validation_passes_after_process_request_login"
      ]
    ]
  ],
  "test_unknown_user": [
    [
      "tests/auth_tests/test_remote_user.py",
      [
        "RemoteUserTest",
        "test_unknown_user"
      ]
    ],
    [
      "tests/auth_tests/test_remote_user.py",
      [
        "RemoteUserNoCreateTest",
        "test_unknown_user"
      ]
    ],
    [
      "tests/auth_tests/test_remote_user.py",
      [
        "RemoteUserCustomTest",
        "test_unknown_user"
      ]
    ]
  ],
  "test_known_user": [
    [
      "tests/auth_tests/test_remote_user.py",
      [
        "RemoteUserTest",
        "test_known_user"
      ]
    ],
    [
      "tests/auth_tests/test_remote_user.py",
      [
        "RemoteUserCustomTest",
        "test_known_user"
      ]
    ]
  ],
  "test_last_login": [
    [
      "tests/auth_tests/test_remote_user.py",
      [
        "RemoteUserTest",
        "test_last_login"
      ]
    ]
  ],
  "test_header_disappears": [
    [
      "tests/auth_tests/test_remote_user.py",
      [
        "RemoteUserTest",
        "test_header_disappears"
      ]
    ],
    [
      "tests/auth_tests/test_remote_user.py",
      [
        "PersistentRemoteUserTest",
        "test_header_disappears"
      ]
    ]
  ],
  "test_user_switch_forces_new_login": [
    [
      "tests/auth_tests/test_remote_user.py",
      [
        "RemoteUserTest",
        "test_user_switch_forces_new_login"
      ]
    ]
  ],
  "listener_login": [
    [
      "tests/auth_tests/test_signals.py",
      [
        "SignalTestCase",
        "listener_login"
      ]
    ]
  ],
  "listener_logout": [
    [
      "tests/auth_tests/test_signals.py",
      [
        "SignalTestCase",
        "listener_logout"
      ]
    ]
  ],
  "listener_login_failed": [
    [
      "tests/auth_tests/test_signals.py",
      [
        "SignalTestCase",
        "listener_login_failed"
      ]
    ]
  ],
  "test_logout_anonymous": [
    [
      "tests/auth_tests/test_signals.py",
      [
        "SignalTestCase",
        "test_logout_anonymous"
      ]
    ]
  ],
  "test_update_last_login": [
    [
      "tests/auth_tests/test_signals.py",
      [
        "SignalTestCase",
        "test_update_last_login"
      ]
    ]
  ],
  "test_failed_login_without_request": [
    [
      "tests/auth_tests/test_signals.py",
      [
        "SignalTestCase",
        "test_failed_login_without_request"
      ]
    ]
  ],
  "test_login_with_custom_user_without_last_login_field": [
    [
      "tests/auth_tests/test_signals.py",
      [
        "SignalTestCase",
        "test_login_with_custom_user_without_last_login_field"
      ]
    ]
  ],
  "test_PasswordResetView": [
    [
      "tests/auth_tests/test_templates.py",
      [
        "AuthTemplateTests",
        "test_PasswordResetView"
      ]
    ]
  ],
  "test_PasswordResetDoneView": [
    [
      "tests/auth_tests/test_templates.py",
      [
        "AuthTemplateTests",
        "test_PasswordResetDoneView"
      ]
    ]
  ],
  "test_PasswordResetConfirmView_invalid_token": [
    [
      "tests/auth_tests/test_templates.py",
      [
        "AuthTemplateTests",
        "test_PasswordResetConfirmView_invalid_token"
      ]
    ]
  ],
  "test_PasswordResetConfirmView_valid_token": [
    [
      "tests/auth_tests/test_templates.py",
      [
        "AuthTemplateTests",
        "test_PasswordResetConfirmView_valid_token"
      ]
    ]
  ],
  "test_PasswordResetCompleteView": [
    [
      "tests/auth_tests/test_templates.py",
      [
        "AuthTemplateTests",
        "test_PasswordResetCompleteView"
      ]
    ]
  ],
  "test_PasswordResetChangeView": [
    [
      "tests/auth_tests/test_templates.py",
      [
        "AuthTemplateTests",
        "test_PasswordResetChangeView"
      ]
    ]
  ],
  "test_PasswordChangeDoneView": [
    [
      "tests/auth_tests/test_templates.py",
      [
        "AuthTemplateTests",
        "test_PasswordChangeDoneView"
      ]
    ]
  ],
  "test_make_token": [
    [
      "tests/auth_tests/test_tokens.py",
      [
        "TokenGeneratorTest",
        "test_make_token"
      ]
    ]
  ],
  "test_10265": [
    [
      "tests/auth_tests/test_tokens.py",
      [
        "TokenGeneratorTest",
        "test_10265"
      ]
    ]
  ],
  "test_check_token_with_nonexistent_token_and_user": [
    [
      "tests/auth_tests/test_tokens.py",
      [
        "TokenGeneratorTest",
        "test_check_token_with_nonexistent_token_and_user"
      ]
    ]
  ],
  "test_token_with_different_secret": [
    [
      "tests/auth_tests/test_tokens.py",
      [
        "TokenGeneratorTest",
        "test_token_with_different_secret"
      ]
    ]
  ],
  "test_legacy_token_validation": [
    [
      "tests/auth_tests/test_tokens.py",
      [
        "TokenGeneratorTest",
        "test_legacy_token_validation"
      ]
    ]
  ],
  "test_get_default_password_validators": [
    [
      "tests/auth_tests/test_validators.py",
      [
        "PasswordValidationTest",
        "test_get_default_password_validators"
      ]
    ]
  ],
  "test_get_password_validators_custom": [
    [
      "tests/auth_tests/test_validators.py",
      [
        "PasswordValidationTest",
        "test_get_password_validators_custom"
      ]
    ]
  ],
  "test_validate_password": [
    [
      "tests/auth_tests/test_validators.py",
      [
        "PasswordValidationTest",
        "test_validate_password"
      ]
    ]
  ],
  "test_password_changed": [
    [
      "tests/auth_tests/test_validators.py",
      [
        "PasswordValidationTest",
        "test_password_changed"
      ]
    ]
  ],
  "test_password_changed_with_custom_validator": [
    [
      "tests/auth_tests/test_validators.py",
      [
        "PasswordValidationTest",
        "test_password_changed_with_custom_validator"
      ]
    ]
  ],
  "test_password_validators_help_texts": [
    [
      "tests/auth_tests/test_validators.py",
      [
        "PasswordValidationTest",
        "test_password_validators_help_texts"
      ]
    ]
  ],
  "test_password_validators_help_text_html": [
    [
      "tests/auth_tests/test_validators.py",
      [
        "PasswordValidationTest",
        "test_password_validators_help_text_html"
      ]
    ]
  ],
  "test_password_validators_help_text_html_escaping": [
    [
      "tests/auth_tests/test_validators.py",
      [
        "PasswordValidationTest",
        "test_password_validators_help_text_html_escaping"
      ]
    ]
  ],
  "test_empty_password_validator_help_text_html": [
    [
      "tests/auth_tests/test_validators.py",
      [
        "PasswordValidationTest",
        "test_empty_password_validator_help_text_html"
      ]
    ]
  ],
  "test_validate": [
    [
      "tests/auth_tests/test_validators.py",
      [
        "MinimumLengthValidatorTest",
        "test_validate"
      ]
    ],
    [
      "tests/auth_tests/test_validators.py",
      [
        "UserAttributeSimilarityValidatorTest",
        "test_validate"
      ]
    ],
    [
      "tests/auth_tests/test_validators.py",
      [
        "CommonPasswordValidatorTest",
        "test_validate"
      ]
    ],
    [
      "tests/auth_tests/test_validators.py",
      [
        "NumericPasswordValidatorTest",
        "test_validate"
      ]
    ]
  ],
  "test_validate_property": [
    [
      "tests/auth_tests/test_validators.py",
      [
        "UserAttributeSimilarityValidatorTest",
        "test_validate_property"
      ]
    ]
  ],
  "test_validate_custom_list": [
    [
      "tests/auth_tests/test_validators.py",
      [
        "CommonPasswordValidatorTest",
        "test_validate_custom_list"
      ]
    ]
  ],
  "test_validate_django_supplied_file": [
    [
      "tests/auth_tests/test_validators.py",
      [
        "CommonPasswordValidatorTest",
        "test_validate_django_supplied_file"
      ]
    ]
  ],
  "test_unicode_validator": [
    [
      "tests/auth_tests/test_validators.py",
      [
        "UsernameValidatorsTests",
        "test_unicode_validator"
      ]
    ]
  ],
  "test_ascii_validator": [
    [
      "tests/auth_tests/test_validators.py",
      [
        "UsernameValidatorsTests",
        "test_ascii_validator"
      ]
    ]
  ],
  "test_named_urls": [
    [
      "tests/auth_tests/test_views.py",
      [
        "AuthViewNamedURLTests",
        "test_named_urls"
      ]
    ]
  ],
  "test_email_not_found": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "test_email_not_found"
      ]
    ]
  ],
  "test_email_found": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "test_email_found"
      ]
    ]
  ],
  "test_extra_email_context": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "test_extra_email_context"
      ]
    ]
  ],
  "test_html_mail_template": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "test_html_mail_template"
      ]
    ]
  ],
  "test_email_found_custom_from": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "test_email_found_custom_from"
      ]
    ]
  ],
  "test_poisoned_http_host": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "test_poisoned_http_host"
      ]
    ]
  ],
  "test_poisoned_http_host_admin_site": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "test_poisoned_http_host_admin_site"
      ]
    ]
  ],
  "_test_confirm_start": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "_test_confirm_start"
      ]
    ],
    [
      "tests/auth_tests/test_views.py",
      [
        "CustomUserPasswordResetTest",
        "_test_confirm_start"
      ]
    ],
    [
      "tests/auth_tests/test_views.py",
      [
        "UUIDUserPasswordResetTest",
        "_test_confirm_start"
      ]
    ]
  ],
  "_read_signup_email": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "_read_signup_email"
      ]
    ],
    [
      "tests/auth_tests/test_views.py",
      [
        "CustomUserPasswordResetTest",
        "_read_signup_email"
      ]
    ]
  ],
  "test_confirm_valid": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "test_confirm_valid"
      ]
    ]
  ],
  "test_confirm_invalid": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "test_confirm_invalid"
      ]
    ]
  ],
  "test_confirm_invalid_user": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "test_confirm_invalid_user"
      ]
    ]
  ],
  "test_confirm_overflow_user": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "test_confirm_overflow_user"
      ]
    ]
  ],
  "test_confirm_invalid_post": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "test_confirm_invalid_post"
      ]
    ]
  ],
  "test_confirm_invalid_hash": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "test_confirm_invalid_hash"
      ]
    ]
  ],
  "test_confirm_complete": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "test_confirm_complete"
      ]
    ]
  ],
  "test_confirm_different_passwords": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "test_confirm_different_passwords"
      ]
    ]
  ],
  "test_reset_redirect_default": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "test_reset_redirect_default"
      ]
    ]
  ],
  "test_reset_custom_redirect": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "test_reset_custom_redirect"
      ]
    ]
  ],
  "test_reset_custom_redirect_named": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "test_reset_custom_redirect_named"
      ]
    ]
  ],
  "test_confirm_redirect_default": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "test_confirm_redirect_default"
      ]
    ]
  ],
  "test_confirm_redirect_custom": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "test_confirm_redirect_custom"
      ]
    ]
  ],
  "test_confirm_redirect_custom_named": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "test_confirm_redirect_custom_named"
      ]
    ]
  ],
  "test_confirm_custom_reset_url_token": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "test_confirm_custom_reset_url_token"
      ]
    ]
  ],
  "test_confirm_login_post_reset": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "test_confirm_login_post_reset"
      ]
    ]
  ],
  "test_confirm_login_post_reset_custom_backend": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "test_confirm_login_post_reset_custom_backend"
      ]
    ]
  ],
  "test_confirm_login_post_reset_already_logged_in": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "test_confirm_login_post_reset_already_logged_in"
      ]
    ]
  ],
  "test_confirm_display_user_from_form": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "test_confirm_display_user_from_form"
      ]
    ]
  ],
  "test_confirm_link_redirects_to_set_password_page": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "test_confirm_link_redirects_to_set_password_page"
      ]
    ]
  ],
  "test_confirm_custom_reset_url_token_link_redirects_to_set_password_page": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "test_confirm_custom_reset_url_token_link_redirects_to_set_password_page"
      ]
    ]
  ],
  "test_invalid_link_if_going_directly_to_the_final_reset_password_url": [
    [
      "tests/auth_tests/test_views.py",
      [
        "PasswordResetTest",
        "test_invalid_link_if_going_directly_to_the_final_reset_password_url"
      ]
    ]
  ],
  "test_confirm_valid_custom_user": [
    [
      "tests/auth_tests/test_views.py",
      [
        "CustomUserPasswordResetTest",
        "test_confirm_valid_custom_user"
      ]
    ]
  ],
  "test_confirm_invalid_uuid": [
    [
      "tests/auth_tests/test_views.py",
      [
        "UUIDUserPasswordResetTest",
        "test_confirm_invalid_uuid"
      ]
    ]
  ],
  "fail_login": [
    [
      "tests/auth_tests/test_views.py",
      [
        "ChangePasswordTest",
        "fail_login"
      ]
    ]
  ],
  "test_password_change_fails_with_invalid_old_password": [
    [
      "tests/auth_tests/test_views.py",
      [
        "ChangePasswordTest",
        "test_password_change_fails_with_invalid_old_password"
      ]
    ]
  ],
  "test_password_change_fails_with_mismatched_passwords": [
    [
      "tests/auth_tests/test_views.py",
      [
        "ChangePasswordTest",
        "test_password_change_fails_with_mismatched_passwords"
      ]
    ]
  ],
  "test_password_change_succeeds": [
    [
      "tests/auth_tests/test_views.py",
      [
        "ChangePasswordTest",
        "test_password_change_succeeds"
      ]
    ]
  ],
  "test_password_change_done_succeeds": [
    [
      "tests/auth_tests/test_views.py",
      [
        "ChangePasswordTest",
        "test_password_change_done_succeeds"
      ]
    ]
  ],
  "test_password_change_done_fails": [
    [
      "tests/auth_tests/test_views.py",
      [
        "ChangePasswordTest",
        "test_password_change_done_fails"
      ]
    ]
  ],
  "test_password_change_redirect_default": [
    [
      "tests/auth_tests/test_views.py",
      [
        "ChangePasswordTest",
        "test_password_change_redirect_default"
      ]
    ]
  ],
  "test_password_change_redirect_custom": [
    [
      "tests/auth_tests/test_views.py",
      [
        "ChangePasswordTest",
        "test_password_change_redirect_custom"
      ]
    ]
  ],
  "test_password_change_redirect_custom_named": [
    [
      "tests/auth_tests/test_views.py",
      [
        "ChangePasswordTest",
        "test_password_change_redirect_custom_named"
      ]
    ]
  ],
  "test_user_password_change_updates_session": [
    [
      "tests/auth_tests/test_views.py",
      [
        "SessionAuthenticationTests",
        "test_user_password_change_updates_session"
      ]
    ]
  ],
  "test_current_site_in_context_after_login": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginTest",
        "test_current_site_in_context_after_login"
      ]
    ]
  ],
  "test_security_check": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginTest",
        "test_security_check"
      ]
    ],
    [
      "tests/auth_tests/test_views.py",
      [
        "LogoutTest",
        "test_security_check"
      ]
    ]
  ],
  "test_security_check_https": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginTest",
        "test_security_check_https"
      ]
    ],
    [
      "tests/auth_tests/test_views.py",
      [
        "LogoutTest",
        "test_security_check_https"
      ]
    ]
  ],
  "test_login_form_contains_request": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginTest",
        "test_login_form_contains_request"
      ]
    ]
  ],
  "test_login_csrf_rotate": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginTest",
        "test_login_csrf_rotate"
      ]
    ]
  ],
  "test_session_key_flushed_on_login": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginTest",
        "test_session_key_flushed_on_login"
      ]
    ]
  ],
  "test_session_key_flushed_on_login_after_password_change": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginTest",
        "test_session_key_flushed_on_login_after_password_change"
      ]
    ]
  ],
  "test_login_session_without_hash_session_key": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginTest",
        "test_login_session_without_hash_session_key"
      ]
    ]
  ],
  "assertLoginURLEquals": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginURLSettings",
        "assertLoginURLEquals"
      ]
    ]
  ],
  "test_standard_login_url": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginURLSettings",
        "test_standard_login_url"
      ]
    ]
  ],
  "test_named_login_url": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginURLSettings",
        "test_named_login_url"
      ]
    ]
  ],
  "test_remote_login_url": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginURLSettings",
        "test_remote_login_url"
      ]
    ]
  ],
  "test_https_login_url": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginURLSettings",
        "test_https_login_url"
      ]
    ]
  ],
  "test_login_url_with_querystring": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginURLSettings",
        "test_login_url_with_querystring"
      ]
    ]
  ],
  "test_remote_login_url_with_next_querystring": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginURLSettings",
        "test_remote_login_url_with_next_querystring"
      ]
    ]
  ],
  "test_lazy_login_url": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginURLSettings",
        "test_lazy_login_url"
      ]
    ]
  ],
  "assertLoginRedirectURLEqual": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginRedirectUrlTest",
        "assertLoginRedirectURLEqual"
      ]
    ]
  ],
  "test_custom": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginRedirectUrlTest",
        "test_custom"
      ]
    ]
  ],
  "test_named": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginRedirectUrlTest",
        "test_named"
      ]
    ]
  ],
  "test_remote": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginRedirectUrlTest",
        "test_remote"
      ]
    ]
  ],
  "test_redirect_to_login_with_lazy": [
    [
      "tests/auth_tests/test_views.py",
      [
        "RedirectToLoginTests",
        "test_redirect_to_login_with_lazy"
      ]
    ]
  ],
  "test_redirect_to_login_with_lazy_and_unicode": [
    [
      "tests/auth_tests/test_views.py",
      [
        "RedirectToLoginTests",
        "test_redirect_to_login_with_lazy_and_unicode"
      ]
    ]
  ],
  "confirm_logged_out": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LogoutThenLoginTests",
        "confirm_logged_out"
      ]
    ],
    [
      "tests/auth_tests/test_views.py",
      [
        "LogoutTest",
        "confirm_logged_out"
      ]
    ]
  ],
  "test_default_logout_then_login": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LogoutThenLoginTests",
        "test_default_logout_then_login"
      ]
    ]
  ],
  "test_logout_then_login_with_custom_login": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LogoutThenLoginTests",
        "test_logout_then_login_with_custom_login"
      ]
    ]
  ],
  "test_guest": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginRedirectAuthenticatedUser",
        "test_guest"
      ]
    ]
  ],
  "test_redirect": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginRedirectAuthenticatedUser",
        "test_redirect"
      ]
    ],
    [
      "tests/httpwrappers/tests.py",
      [
        "HttpResponseSubclassesTests",
        "test_redirect"
      ]
    ],
    [
      "tests/redirects_tests/tests.py",
      [
        "RedirectTests",
        "test_redirect"
      ]
    ],
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_redirect"
      ]
    ]
  ],
  "test_redirect_url": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginRedirectAuthenticatedUser",
        "test_redirect_url"
      ]
    ]
  ],
  "test_redirect_param": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginRedirectAuthenticatedUser",
        "test_redirect_param"
      ]
    ]
  ],
  "test_redirect_loop": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginRedirectAuthenticatedUser",
        "test_redirect_loop"
      ]
    ]
  ],
  "test_permission_required_not_logged_in": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginRedirectAuthenticatedUser",
        "test_permission_required_not_logged_in"
      ]
    ]
  ],
  "test_permission_required_logged_in": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginRedirectAuthenticatedUser",
        "test_permission_required_logged_in"
      ]
    ]
  ],
  "test_success_url_allowed_hosts_same_host": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginSuccessURLAllowedHostsTest",
        "test_success_url_allowed_hosts_same_host"
      ]
    ],
    [
      "tests/auth_tests/test_views.py",
      [
        "LogoutTest",
        "test_success_url_allowed_hosts_same_host"
      ]
    ]
  ],
  "test_success_url_allowed_hosts_safe_host": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginSuccessURLAllowedHostsTest",
        "test_success_url_allowed_hosts_safe_host"
      ]
    ],
    [
      "tests/auth_tests/test_views.py",
      [
        "LogoutTest",
        "test_success_url_allowed_hosts_safe_host"
      ]
    ]
  ],
  "test_success_url_allowed_hosts_unsafe_host": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LoginSuccessURLAllowedHostsTest",
        "test_success_url_allowed_hosts_unsafe_host"
      ]
    ],
    [
      "tests/auth_tests/test_views.py",
      [
        "LogoutTest",
        "test_success_url_allowed_hosts_unsafe_host"
      ]
    ]
  ],
  "test_logout_default": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LogoutTest",
        "test_logout_default"
      ]
    ]
  ],
  "test_logout_with_post": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LogoutTest",
        "test_logout_with_post"
      ]
    ]
  ],
  "test_14377": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LogoutTest",
        "test_14377"
      ]
    ]
  ],
  "test_logout_doesnt_cache": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LogoutTest",
        "test_logout_doesnt_cache"
      ]
    ]
  ],
  "test_logout_with_overridden_redirect_url": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LogoutTest",
        "test_logout_with_overridden_redirect_url"
      ]
    ]
  ],
  "test_logout_with_next_page_specified": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LogoutTest",
        "test_logout_with_next_page_specified"
      ]
    ]
  ],
  "test_logout_with_redirect_argument": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LogoutTest",
        "test_logout_with_redirect_argument"
      ]
    ]
  ],
  "test_logout_with_custom_redirect_argument": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LogoutTest",
        "test_logout_with_custom_redirect_argument"
      ]
    ]
  ],
  "test_logout_with_named_redirect": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LogoutTest",
        "test_logout_with_named_redirect"
      ]
    ]
  ],
  "test_logout_preserve_language": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LogoutTest",
        "test_logout_preserve_language"
      ]
    ]
  ],
  "test_logout_redirect_url_setting": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LogoutTest",
        "test_logout_redirect_url_setting"
      ]
    ]
  ],
  "test_logout_redirect_url_named_setting": [
    [
      "tests/auth_tests/test_views.py",
      [
        "LogoutTest",
        "test_logout_redirect_url_named_setting"
      ]
    ]
  ],
  "get_user_data": [
    [
      "tests/auth_tests/test_views.py",
      [
        "ChangelistTests",
        "get_user_data"
      ]
    ]
  ],
  "test_changelist_disallows_password_lookups": [
    [
      "tests/auth_tests/test_views.py",
      [
        "ChangelistTests",
        "test_changelist_disallows_password_lookups"
      ]
    ]
  ],
  "test_user_change_email": [
    [
      "tests/auth_tests/test_views.py",
      [
        "ChangelistTests",
        "test_user_change_email"
      ]
    ]
  ],
  "test_user_not_change": [
    [
      "tests/auth_tests/test_views.py",
      [
        "ChangelistTests",
        "test_user_not_change"
      ]
    ]
  ],
  "test_user_change_password": [
    [
      "tests/auth_tests/test_views.py",
      [
        "ChangelistTests",
        "test_user_change_password"
      ]
    ]
  ],
  "test_user_change_different_user_password": [
    [
      "tests/auth_tests/test_views.py",
      [
        "ChangelistTests",
        "test_user_change_different_user_password"
      ]
    ]
  ],
  "test_password_change_bad_url": [
    [
      "tests/auth_tests/test_views.py",
      [
        "ChangelistTests",
        "test_password_change_bad_url"
      ]
    ]
  ],
  "test_user_change_password_passes_user_to_has_change_permission": [
    [
      "tests/auth_tests/test_views.py",
      [
        "ChangelistTests",
        "test_user_change_password_passes_user_to_has_change_permission"
      ]
    ]
  ],
  "test_view_user_password_is_readonly": [
    [
      "tests/auth_tests/test_views.py",
      [
        "ChangelistTests",
        "test_view_user_password_is_readonly"
      ]
    ]
  ],
  "test_admin_password_change": [
    [
      "tests/auth_tests/test_views.py",
      [
        "UUIDUserTests",
        "test_admin_password_change"
      ]
    ]
  ],
  "remote_user_auth_view": [
    [
      "tests/auth_tests/urls.py",
      [
        "remote_user_auth_view"
      ]
    ]
  ],
  "auth_processor_no_attr_access": [
    [
      "tests/auth_tests/urls.py",
      [
        "auth_processor_no_attr_access"
      ]
    ]
  ],
  "auth_processor_attr_access": [
    [
      "tests/auth_tests/urls.py",
      [
        "auth_processor_attr_access"
      ]
    ]
  ],
  "auth_processor_user": [
    [
      "tests/auth_tests/urls.py",
      [
        "auth_processor_user"
      ]
    ]
  ],
  "auth_processor_perms": [
    [
      "tests/auth_tests/urls.py",
      [
        "auth_processor_perms"
      ]
    ]
  ],
  "auth_processor_perm_in_perms": [
    [
      "tests/auth_tests/urls.py",
      [
        "auth_processor_perm_in_perms"
      ]
    ]
  ],
  "auth_processor_messages": [
    [
      "tests/auth_tests/urls.py",
      [
        "auth_processor_messages"
      ]
    ]
  ],
  "userpage": [
    [
      "tests/auth_tests/urls.py",
      [
        "userpage"
      ]
    ]
  ],
  "permission_required_redirect": [
    [
      "tests/auth_tests/urls.py",
      [
        "permission_required_redirect"
      ]
    ]
  ],
  "permission_required_exception": [
    [
      "tests/auth_tests/urls.py",
      [
        "permission_required_exception"
      ]
    ]
  ],
  "login_and_permission_required_exception": [
    [
      "tests/auth_tests/urls.py",
      [
        "login_and_permission_required_exception"
      ]
    ]
  ],
  "test_initialization_class_attributes": [
    [
      "tests/backends/base/test_base.py",
      [
        "DatabaseWrapperTests",
        "test_initialization_class_attributes"
      ]
    ]
  ],
  "test_initialization_display_name": [
    [
      "tests/backends/base/test_base.py",
      [
        "DatabaseWrapperTests",
        "test_initialization_display_name"
      ]
    ]
  ],
  "call_execute": [
    [
      "tests/backends/base/test_base.py",
      [
        "ExecuteWrapperTests",
        "call_execute"
      ]
    ]
  ],
  "call_executemany": [
    [
      "tests/backends/base/test_base.py",
      [
        "ExecuteWrapperTests",
        "call_executemany"
      ]
    ]
  ],
  "mock_wrapper": [
    [
      "tests/backends/base/test_base.py",
      [
        "ExecuteWrapperTests",
        "mock_wrapper"
      ]
    ]
  ],
  "test_wrapper_invoked": [
    [
      "tests/backends/base/test_base.py",
      [
        "ExecuteWrapperTests",
        "test_wrapper_invoked"
      ]
    ]
  ],
  "test_wrapper_invoked_many": [
    [
      "tests/backends/base/test_base.py",
      [
        "ExecuteWrapperTests",
        "test_wrapper_invoked_many"
      ]
    ]
  ],
  "test_database_queried": [
    [
      "tests/backends/base/test_base.py",
      [
        "ExecuteWrapperTests",
        "test_database_queried"
      ]
    ]
  ],
  "test_nested_wrapper_invoked": [
    [
      "tests/backends/base/test_base.py",
      [
        "ExecuteWrapperTests",
        "test_nested_wrapper_invoked"
      ]
    ]
  ],
  "test_outer_wrapper_blocks": [
    [
      "tests/backends/base/test_base.py",
      [
        "ExecuteWrapperTests",
        "test_outer_wrapper_blocks"
      ]
    ]
  ],
  "test_wrapper_gets_sql": [
    [
      "tests/backends/base/test_base.py",
      [
        "ExecuteWrapperTests",
        "test_wrapper_gets_sql"
      ]
    ]
  ],
  "test_wrapper_connection_specific": [
    [
      "tests/backends/base/test_base.py",
      [
        "ExecuteWrapperTests",
        "test_wrapper_connection_specific"
      ]
    ]
  ],
  "get_connection_copy": [
    [
      "tests/backends/base/test_creation.py",
      [
        "get_connection_copy"
      ]
    ]
  ],
  "test_default_name": [
    [
      "tests/backends/base/test_creation.py",
      [
        "TestDbSignatureTests",
        "test_default_name"
      ]
    ]
  ],
  "test_custom_test_name": [
    [
      "tests/backends/base/test_creation.py",
      [
        "TestDbSignatureTests",
        "test_custom_test_name"
      ]
    ],
    [
      "tests/backends/sqlite/test_creation.py",
      [
        "TestDbSignatureTests",
        "test_custom_test_name"
      ]
    ]
  ],
  "test_custom_test_name_with_test_prefix": [
    [
      "tests/backends/base/test_creation.py",
      [
        "TestDbSignatureTests",
        "test_custom_test_name_with_test_prefix"
      ]
    ]
  ],
  "test_migrate_test_setting_false": [
    [
      "tests/backends/base/test_creation.py",
      [
        "TestDbCreationTests",
        "test_migrate_test_setting_false"
      ]
    ]
  ],
  "test_migrate_test_setting_true": [
    [
      "tests/backends/base/test_creation.py",
      [
        "TestDbCreationTests",
        "test_migrate_test_setting_true"
      ]
    ]
  ],
  "test_circular_reference": [
    [
      "tests/backends/base/test_creation.py",
      [
        "TestDeserializeDbFromString",
        "test_circular_reference"
      ]
    ],
    [
      "tests/fixtures/tests.py",
      [
        "CircularReferenceTests",
        "test_circular_reference"
      ]
    ]
  ],
  "test_self_reference": [
    [
      "tests/backends/base/test_creation.py",
      [
        "TestDeserializeDbFromString",
        "test_self_reference"
      ]
    ]
  ],
  "test_circular_reference_with_natural_key": [
    [
      "tests/backends/base/test_creation.py",
      [
        "TestDeserializeDbFromString",
        "test_circular_reference_with_natural_key"
      ]
    ]
  ],
  "test_nonexistent_feature": [
    [
      "tests/backends/base/test_features.py",
      [
        "TestDatabaseFeatures",
        "test_nonexistent_feature"
      ]
    ]
  ],
  "test_get_table_list": [
    [
      "tests/backends/base/test_introspection.py",
      [
        "SimpleDatabaseIntrospectionTests",
        "test_get_table_list"
      ]
    ]
  ],
  "test_get_table_description": [
    [
      "tests/backends/base/test_introspection.py",
      [
        "SimpleDatabaseIntrospectionTests",
        "test_get_table_description"
      ]
    ]
  ],
  "test_get_sequences": [
    [
      "tests/backends/base/test_introspection.py",
      [
        "SimpleDatabaseIntrospectionTests",
        "test_get_sequences"
      ]
    ],
    [
      "tests/backends/oracle/test_introspection.py",
      [
        "DatabaseSequenceTests",
        "test_get_sequences"
      ]
    ],
    [
      "tests/backends/postgresql/test_introspection.py",
      [
        "DatabaseSequenceTests",
        "test_get_sequences"
      ]
    ]
  ],
  "test_get_relations": [
    [
      "tests/backends/base/test_introspection.py",
      [
        "SimpleDatabaseIntrospectionTests",
        "test_get_relations"
      ]
    ],
    [
      "tests/introspection/tests.py",
      [
        "IntrospectionTests",
        "test_get_relations"
      ]
    ]
  ],
  "test_get_key_columns": [
    [
      "tests/backends/base/test_introspection.py",
      [
        "SimpleDatabaseIntrospectionTests",
        "test_get_key_columns"
      ]
    ],
    [
      "tests/introspection/tests.py",
      [
        "IntrospectionTests",
        "test_get_key_columns"
      ]
    ]
  ],
  "test_get_constraints": [
    [
      "tests/backends/base/test_introspection.py",
      [
        "SimpleDatabaseIntrospectionTests",
        "test_get_constraints"
      ]
    ],
    [
      "tests/introspection/tests.py",
      [
        "IntrospectionTests",
        "test_get_constraints"
      ]
    ]
  ],
  "test_deferrable_sql": [
    [
      "tests/backends/base/test_operations.py",
      [
        "SimpleDatabaseOperationTests",
        "test_deferrable_sql"
      ]
    ]
  ],
  "test_end_transaction_rollback": [
    [
      "tests/backends/base/test_operations.py",
      [
        "SimpleDatabaseOperationTests",
        "test_end_transaction_rollback"
      ]
    ]
  ],
  "test_no_limit_value": [
    [
      "tests/backends/base/test_operations.py",
      [
        "SimpleDatabaseOperationTests",
        "test_no_limit_value"
      ]
    ]
  ],
  "test_quote_name": [
    [
      "tests/backends/base/test_operations.py",
      [
        "SimpleDatabaseOperationTests",
        "test_quote_name"
      ]
    ],
    [
      "tests/backends/oracle/tests.py",
      [
        "Tests",
        "test_quote_name"
      ]
    ]
  ],
  "test_regex_lookup": [
    [
      "tests/backends/base/test_operations.py",
      [
        "SimpleDatabaseOperationTests",
        "test_regex_lookup"
      ]
    ]
  ],
  "test_set_time_zone_sql": [
    [
      "tests/backends/base/test_operations.py",
      [
        "SimpleDatabaseOperationTests",
        "test_set_time_zone_sql"
      ]
    ]
  ],
  "test_sql_flush": [
    [
      "tests/backends/base/test_operations.py",
      [
        "SimpleDatabaseOperationTests",
        "test_sql_flush"
      ]
    ],
    [
      "tests/backends/mysql/test_operations.py",
      [
        "MySQLOperationsTests",
        "test_sql_flush"
      ]
    ],
    [
      "tests/backends/oracle/test_operations.py",
      [
        "OperationsTests",
        "test_sql_flush"
      ]
    ],
    [
      "tests/backends/postgresql/test_operations.py",
      [
        "PostgreSQLOperationsTests",
        "test_sql_flush"
      ]
    ],
    [
      "tests/backends/sqlite/test_operations.py",
      [
        "SQLiteOperationsTests",
        "test_sql_flush"
      ]
    ]
  ],
  "test_pk_default_value": [
    [
      "tests/backends/base/test_operations.py",
      [
        "SimpleDatabaseOperationTests",
        "test_pk_default_value"
      ]
    ]
  ],
  "test_tablespace_sql": [
    [
      "tests/backends/base/test_operations.py",
      [
        "SimpleDatabaseOperationTests",
        "test_tablespace_sql"
      ]
    ]
  ],
  "test_sequence_reset_by_name_sql": [
    [
      "tests/backends/base/test_operations.py",
      [
        "SimpleDatabaseOperationTests",
        "test_sequence_reset_by_name_sql"
      ]
    ]
  ],
  "test_adapt_unknown_value_decimal": [
    [
      "tests/backends/base/test_operations.py",
      [
        "SimpleDatabaseOperationTests",
        "test_adapt_unknown_value_decimal"
      ]
    ]
  ],
  "test_adapt_unknown_value_date": [
    [
      "tests/backends/base/test_operations.py",
      [
        "SimpleDatabaseOperationTests",
        "test_adapt_unknown_value_date"
      ]
    ]
  ],
  "test_adapt_unknown_value_time": [
    [
      "tests/backends/base/test_operations.py",
      [
        "SimpleDatabaseOperationTests",
        "test_adapt_unknown_value_time"
      ]
    ]
  ],
  "test_adapt_timefield_value_none": [
    [
      "tests/backends/base/test_operations.py",
      [
        "SimpleDatabaseOperationTests",
        "test_adapt_timefield_value_none"
      ]
    ]
  ],
  "test_adapt_datetimefield_value": [
    [
      "tests/backends/base/test_operations.py",
      [
        "SimpleDatabaseOperationTests",
        "test_adapt_datetimefield_value"
      ]
    ]
  ],
  "test_adapt_timefield_value": [
    [
      "tests/backends/base/test_operations.py",
      [
        "SimpleDatabaseOperationTests",
        "test_adapt_timefield_value"
      ]
    ]
  ],
  "test_adapt_timefield_value_unaware": [
    [
      "tests/backends/base/test_operations.py",
      [
        "SimpleDatabaseOperationTests",
        "test_adapt_timefield_value_unaware"
      ]
    ]
  ],
  "test_date_extract_sql": [
    [
      "tests/backends/base/test_operations.py",
      [
        "SimpleDatabaseOperationTests",
        "test_date_extract_sql"
      ]
    ]
  ],
  "test_time_extract_sql": [
    [
      "tests/backends/base/test_operations.py",
      [
        "SimpleDatabaseOperationTests",
        "test_time_extract_sql"
      ]
    ]
  ],
  "test_date_interval_sql": [
    [
      "tests/backends/base/test_operations.py",
      [
        "SimpleDatabaseOperationTests",
        "test_date_interval_sql"
      ]
    ]
  ],
  "test_date_trunc_sql": [
    [
      "tests/backends/base/test_operations.py",
      [
        "SimpleDatabaseOperationTests",
        "test_date_trunc_sql"
      ]
    ]
  ],
  "test_time_trunc_sql": [
    [
      "tests/backends/base/test_operations.py",
      [
        "SimpleDatabaseOperationTests",
        "test_time_trunc_sql"
      ]
    ]
  ],
  "test_datetime_trunc_sql": [
    [
      "tests/backends/base/test_operations.py",
      [
        "SimpleDatabaseOperationTests",
        "test_datetime_trunc_sql"
      ]
    ]
  ],
  "test_datetime_cast_date_sql": [
    [
      "tests/backends/base/test_operations.py",
      [
        "SimpleDatabaseOperationTests",
        "test_datetime_cast_date_sql"
      ]
    ]
  ],
  "test_datetime_cast_time_sql": [
    [
      "tests/backends/base/test_operations.py",
      [
        "SimpleDatabaseOperationTests",
        "test_datetime_cast_time_sql"
      ]
    ]
  ],
  "test_datetime_extract_sql": [
    [
      "tests/backends/base/test_operations.py",
      [
        "SimpleDatabaseOperationTests",
        "test_datetime_extract_sql"
      ]
    ]
  ],
  "test_window_frame_raise_not_supported_error": [
    [
      "tests/backends/base/test_operations.py",
      [
        "DatabaseOperationTests",
        "test_window_frame_raise_not_supported_error"
      ]
    ]
  ],
  "test_distinct_on_fields": [
    [
      "tests/backends/base/test_operations.py",
      [
        "DatabaseOperationTests",
        "test_distinct_on_fields"
      ]
    ]
  ],
  "test_subtract_temporals": [
    [
      "tests/backends/base/test_operations.py",
      [
        "DatabaseOperationTests",
        "test_subtract_temporals"
      ]
    ]
  ],
  "test_sql_flush_no_tables": [
    [
      "tests/backends/base/test_operations.py",
      [
        "SqlFlushTests",
        "test_sql_flush_no_tables"
      ]
    ]
  ],
  "test_execute_sql_flush_statements": [
    [
      "tests/backends/base/test_operations.py",
      [
        "SqlFlushTests",
        "test_execute_sql_flush_statements"
      ]
    ]
  ],
  "test_effective_default_callable": [
    [
      "tests/backends/base/test_schema.py",
      [
        "SchemaEditorTests",
        "test_effective_default_callable"
      ]
    ]
  ],
  "_execute_raise_database_exists": [
    [
      "tests/backends/mysql/test_creation.py",
      [
        "DatabaseCreationTests",
        "_execute_raise_database_exists"
      ]
    ]
  ],
  "_execute_raise_access_denied": [
    [
      "tests/backends/mysql/test_creation.py",
      [
        "DatabaseCreationTests",
        "_execute_raise_access_denied"
      ]
    ]
  ],
  "patch_test_db_creation": [
    [
      "tests/backends/mysql/test_creation.py",
      [
        "DatabaseCreationTests",
        "patch_test_db_creation"
      ]
    ],
    [
      "tests/backends/postgresql/test_creation.py",
      [
        "DatabaseCreationTests",
        "patch_test_db_creation"
      ]
    ]
  ],
  "test_create_test_db_database_exists": [
    [
      "tests/backends/mysql/test_creation.py",
      [
        "DatabaseCreationTests",
        "test_create_test_db_database_exists"
      ]
    ]
  ],
  "test_create_test_db_unexpected_error": [
    [
      "tests/backends/mysql/test_creation.py",
      [
        "DatabaseCreationTests",
        "test_create_test_db_unexpected_error"
      ]
    ]
  ],
  "test_clone_test_db_database_exists": [
    [
      "tests/backends/mysql/test_creation.py",
      [
        "DatabaseCreationTests",
        "test_clone_test_db_database_exists"
      ]
    ]
  ],
  "test_clone_test_db_options_ordering": [
    [
      "tests/backends/mysql/test_creation.py",
      [
        "DatabaseCreationTests",
        "test_clone_test_db_options_ordering"
      ]
    ]
  ],
  "test_supports_transactions": [
    [
      "tests/backends/mysql/test_features.py",
      [
        "TestFeatures",
        "test_supports_transactions"
      ]
    ]
  ],
  "test_skip_locked_no_wait": [
    [
      "tests/backends/mysql/test_features.py",
      [
        "TestFeatures",
        "test_skip_locked_no_wait"
      ]
    ]
  ],
  "test_parse_constraint_columns": [
    [
      "tests/backends/mysql/test_introspection.py",
      [
        "ParsingTests",
        "test_parse_constraint_columns"
      ]
    ]
  ],
  "test_sql_flush_sequences": [
    [
      "tests/backends/mysql/test_operations.py",
      [
        "MySQLOperationsTests",
        "test_sql_flush_sequences"
      ]
    ],
    [
      "tests/backends/oracle/test_operations.py",
      [
        "OperationsTests",
        "test_sql_flush_sequences"
      ]
    ],
    [
      "tests/backends/postgresql/test_operations.py",
      [
        "PostgreSQLOperationsTests",
        "test_sql_flush_sequences"
      ]
    ],
    [
      "tests/backends/sqlite/test_operations.py",
      [
        "SQLiteOperationsTests",
        "test_sql_flush_sequences"
      ]
    ]
  ],
  "test_quote_value": [
    [
      "tests/backends/mysql/test_schema.py",
      [
        "SchemaEditorTests",
        "test_quote_value"
      ]
    ]
  ],
  "get_isolation_level": [
    [
      "tests/backends/mysql/tests.py",
      [
        "IsolationLevelTests",
        "get_isolation_level"
      ]
    ]
  ],
  "test_auto_is_null_auto_config": [
    [
      "tests/backends/mysql/tests.py",
      [
        "IsolationLevelTests",
        "test_auto_is_null_auto_config"
      ]
    ]
  ],
  "test_connect_isolation_level": [
    [
      "tests/backends/mysql/tests.py",
      [
        "IsolationLevelTests",
        "test_connect_isolation_level"
      ]
    ],
    [
      "tests/backends/postgresql/tests.py",
      [
        "Tests",
        "test_connect_isolation_level"
      ]
    ]
  ],
  "test_setting_isolation_level": [
    [
      "tests/backends/mysql/tests.py",
      [
        "IsolationLevelTests",
        "test_setting_isolation_level"
      ]
    ]
  ],
  "test_uppercase_isolation_level": [
    [
      "tests/backends/mysql/tests.py",
      [
        "IsolationLevelTests",
        "test_uppercase_isolation_level"
      ]
    ]
  ],
  "test_default_isolation_level": [
    [
      "tests/backends/mysql/tests.py",
      [
        "IsolationLevelTests",
        "test_default_isolation_level"
      ]
    ]
  ],
  "test_isolation_level_validation": [
    [
      "tests/backends/mysql/tests.py",
      [
        "IsolationLevelTests",
        "test_isolation_level_validation"
      ]
    ]
  ],
  "_execute_raise_user_already_exists": [
    [
      "tests/backends/oracle/test_creation.py",
      [
        "DatabaseCreationTests",
        "_execute_raise_user_already_exists"
      ]
    ]
  ],
  "_execute_raise_tablespace_already_exists": [
    [
      "tests/backends/oracle/test_creation.py",
      [
        "DatabaseCreationTests",
        "_execute_raise_tablespace_already_exists"
      ]
    ]
  ],
  "_execute_raise_insufficient_privileges": [
    [
      "tests/backends/oracle/test_creation.py",
      [
        "DatabaseCreationTests",
        "_execute_raise_insufficient_privileges"
      ]
    ]
  ],
  "patch_execute_statements": [
    [
      "tests/backends/oracle/test_creation.py",
      [
        "DatabaseCreationTests",
        "patch_execute_statements"
      ]
    ]
  ],
  "test_create_test_db": [
    [
      "tests/backends/oracle/test_creation.py",
      [
        "DatabaseCreationTests",
        "test_create_test_db"
      ]
    ],
    [
      "tests/backends/postgresql/test_creation.py",
      [
        "DatabaseCreationTests",
        "test_create_test_db"
      ]
    ]
  ],
  "test_create_test_user": [
    [
      "tests/backends/oracle/test_creation.py",
      [
        "DatabaseCreationTests",
        "test_create_test_user"
      ]
    ]
  ],
  "test_oracle_managed_files": [
    [
      "tests/backends/oracle/test_creation.py",
      [
        "DatabaseCreationTests",
        "test_oracle_managed_files"
      ]
    ]
  ],
  "test_get_sequences_manually_created_index": [
    [
      "tests/backends/oracle/test_introspection.py",
      [
        "DatabaseSequenceTests",
        "test_get_sequences_manually_created_index"
      ]
    ]
  ],
  "test_sequence_name_truncation": [
    [
      "tests/backends/oracle/test_operations.py",
      [
        "OperationsTests",
        "test_sequence_name_truncation"
      ]
    ]
  ],
  "test_bulk_batch_size": [
    [
      "tests/backends/oracle/test_operations.py",
      [
        "OperationsTests",
        "test_bulk_batch_size"
      ]
    ]
  ],
  "test_sql_flush_allow_cascade": [
    [
      "tests/backends/oracle/test_operations.py",
      [
        "OperationsTests",
        "test_sql_flush_allow_cascade"
      ]
    ],
    [
      "tests/backends/postgresql/test_operations.py",
      [
        "PostgreSQLOperationsTests",
        "test_sql_flush_allow_cascade"
      ]
    ],
    [
      "tests/backends/sqlite/test_operations.py",
      [
        "SQLiteOperationsTests",
        "test_sql_flush_allow_cascade"
      ]
    ]
  ],
  "test_sql_flush_sequences_allow_cascade": [
    [
      "tests/backends/oracle/test_operations.py",
      [
        "OperationsTests",
        "test_sql_flush_sequences_allow_cascade"
      ]
    ],
    [
      "tests/backends/postgresql/test_operations.py",
      [
        "PostgreSQLOperationsTests",
        "test_sql_flush_sequences_allow_cascade"
      ]
    ],
    [
      "tests/backends/sqlite/test_operations.py",
      [
        "SQLiteOperationsTests",
        "test_sql_flush_sequences_allow_cascade"
      ]
    ]
  ],
  "test_dbms_session": [
    [
      "tests/backends/oracle/tests.py",
      [
        "Tests",
        "test_dbms_session"
      ]
    ]
  ],
  "test_cursor_var": [
    [
      "tests/backends/oracle/tests.py",
      [
        "Tests",
        "test_cursor_var"
      ]
    ]
  ],
  "test_client_encoding": [
    [
      "tests/backends/oracle/tests.py",
      [
        "Tests",
        "test_client_encoding"
      ]
    ]
  ],
  "test_order_of_nls_parameters": [
    [
      "tests/backends/oracle/tests.py",
      [
        "Tests",
        "test_order_of_nls_parameters"
      ]
    ]
  ],
  "test_boolean_constraints": [
    [
      "tests/backends/oracle/tests.py",
      [
        "Tests",
        "test_boolean_constraints"
      ]
    ]
  ],
  "test_hidden_no_data_found_exception": [
    [
      "tests/backends/oracle/tests.py",
      [
        "TransactionalTests",
        "test_hidden_no_data_found_exception"
      ]
    ]
  ],
  "test_password_with_at_sign": [
    [
      "tests/backends/oracle/tests.py",
      [
        "TransactionalTests",
        "test_password_with_at_sign"
      ]
    ]
  ],
  "changed_test_settings": [
    [
      "tests/backends/postgresql/test_creation.py",
      [
        "DatabaseCreationTests",
        "changed_test_settings"
      ]
    ]
  ],
  "check_sql_table_creation_suffix": [
    [
      "tests/backends/postgresql/test_creation.py",
      [
        "DatabaseCreationTests",
        "check_sql_table_creation_suffix"
      ]
    ]
  ],
  "test_sql_table_creation_suffix_with_none_settings": [
    [
      "tests/backends/postgresql/test_creation.py",
      [
        "DatabaseCreationTests",
        "test_sql_table_creation_suffix_with_none_settings"
      ]
    ]
  ],
  "test_sql_table_creation_suffix_with_encoding": [
    [
      "tests/backends/postgresql/test_creation.py",
      [
        "DatabaseCreationTests",
        "test_sql_table_creation_suffix_with_encoding"
      ]
    ]
  ],
  "test_sql_table_creation_suffix_with_template": [
    [
      "tests/backends/postgresql/test_creation.py",
      [
        "DatabaseCreationTests",
        "test_sql_table_creation_suffix_with_template"
      ]
    ]
  ],
  "test_sql_table_creation_suffix_with_encoding_and_template": [
    [
      "tests/backends/postgresql/test_creation.py",
      [
        "DatabaseCreationTests",
        "test_sql_table_creation_suffix_with_encoding_and_template"
      ]
    ]
  ],
  "_execute_raise_database_already_exists": [
    [
      "tests/backends/postgresql/test_creation.py",
      [
        "DatabaseCreationTests",
        "_execute_raise_database_already_exists"
      ]
    ]
  ],
  "_execute_raise_permission_denied": [
    [
      "tests/backends/postgresql/test_creation.py",
      [
        "DatabaseCreationTests",
        "_execute_raise_permission_denied"
      ]
    ]
  ],
  "inspect_cursors": [
    [
      "tests/backends/postgresql/test_server_side_cursors.py",
      [
        "ServerSideCursorsPostgres",
        "inspect_cursors"
      ]
    ]
  ],
  "override_db_setting": [
    [
      "tests/backends/postgresql/test_server_side_cursors.py",
      [
        "ServerSideCursorsPostgres",
        "override_db_setting"
      ]
    ]
  ],
  "assertUsesCursor": [
    [
      "tests/backends/postgresql/test_server_side_cursors.py",
      [
        "ServerSideCursorsPostgres",
        "assertUsesCursor"
      ]
    ]
  ],
  "asserNotUsesCursor": [
    [
      "tests/backends/postgresql/test_server_side_cursors.py",
      [
        "ServerSideCursorsPostgres",
        "asserNotUsesCursor"
      ]
    ]
  ],
  "test_server_side_cursor": [
    [
      "tests/backends/postgresql/test_server_side_cursors.py",
      [
        "ServerSideCursorsPostgres",
        "test_server_side_cursor"
      ]
    ]
  ],
  "test_values": [
    [
      "tests/backends/postgresql/test_server_side_cursors.py",
      [
        "ServerSideCursorsPostgres",
        "test_values"
      ]
    ],
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_values"
      ]
    ],
    [
      "tests/from_db_value/tests.py",
      [
        "FromDBValueTest",
        "test_values"
      ]
    ],
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_values"
      ]
    ],
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestQuerying",
        "test_values"
      ]
    ],
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_values"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_get_digit.py",
      [
        "FunctionTests",
        "test_values"
      ]
    ],
    [
      "tests/utils_tests/test_http.py",
      [
        "Base36IntTests",
        "test_values"
      ]
    ]
  ],
  "test_values_list": [
    [
      "tests/backends/postgresql/test_server_side_cursors.py",
      [
        "ServerSideCursorsPostgres",
        "test_values_list"
      ]
    ],
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_values_list"
      ]
    ],
    [
      "tests/from_db_value/tests.py",
      [
        "FromDBValueTest",
        "test_values_list"
      ]
    ],
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_values_list"
      ]
    ]
  ],
  "test_values_list_flat": [
    [
      "tests/backends/postgresql/test_server_side_cursors.py",
      [
        "ServerSideCursorsPostgres",
        "test_values_list_flat"
      ]
    ]
  ],
  "test_values_list_fields_not_equal_to_names": [
    [
      "tests/backends/postgresql/test_server_side_cursors.py",
      [
        "ServerSideCursorsPostgres",
        "test_values_list_fields_not_equal_to_names"
      ]
    ]
  ],
  "test_server_side_cursor_many_cursors": [
    [
      "tests/backends/postgresql/test_server_side_cursors.py",
      [
        "ServerSideCursorsPostgres",
        "test_server_side_cursor_many_cursors"
      ]
    ]
  ],
  "test_closed_server_side_cursor": [
    [
      "tests/backends/postgresql/test_server_side_cursors.py",
      [
        "ServerSideCursorsPostgres",
        "test_closed_server_side_cursor"
      ]
    ]
  ],
  "test_server_side_cursors_setting": [
    [
      "tests/backends/postgresql/test_server_side_cursors.py",
      [
        "ServerSideCursorsPostgres",
        "test_server_side_cursors_setting"
      ]
    ]
  ],
  "mocked_connect": [
    [
      "tests/backends/postgresql/tests.py",
      [
        "Tests",
        "test_nodb_cursor",
        "mocked_connect"
      ]
    ]
  ],
  "test_nodb_cursor": [
    [
      "tests/backends/postgresql/tests.py",
      [
        "Tests",
        "test_nodb_cursor"
      ]
    ]
  ],
  "test_database_name_too_long": [
    [
      "tests/backends/postgresql/tests.py",
      [
        "Tests",
        "test_database_name_too_long"
      ]
    ]
  ],
  "test_connect_and_rollback": [
    [
      "tests/backends/postgresql/tests.py",
      [
        "Tests",
        "test_connect_and_rollback"
      ]
    ]
  ],
  "test_connect_non_autocommit": [
    [
      "tests/backends/postgresql/tests.py",
      [
        "Tests",
        "test_connect_non_autocommit"
      ]
    ]
  ],
  "test_connect_no_is_usable_checks": [
    [
      "tests/backends/postgresql/tests.py",
      [
        "Tests",
        "test_connect_no_is_usable_checks"
      ]
    ]
  ],
  "_select": [
    [
      "tests/backends/postgresql/tests.py",
      [
        "Tests",
        "_select"
      ]
    ]
  ],
  "test_select_ascii_array": [
    [
      "tests/backends/postgresql/tests.py",
      [
        "Tests",
        "test_select_ascii_array"
      ]
    ]
  ],
  "test_select_unicode_array": [
    [
      "tests/backends/postgresql/tests.py",
      [
        "Tests",
        "test_select_unicode_array"
      ]
    ]
  ],
  "test_lookup_cast": [
    [
      "tests/backends/postgresql/tests.py",
      [
        "Tests",
        "test_lookup_cast"
      ]
    ]
  ],
  "test_correct_extraction_psycopg2_version": [
    [
      "tests/backends/postgresql/tests.py",
      [
        "Tests",
        "test_correct_extraction_psycopg2_version"
      ]
    ]
  ],
  "test_copy_cursors": [
    [
      "tests/backends/postgresql/tests.py",
      [
        "Tests",
        "test_copy_cursors"
      ]
    ]
  ],
  "test_get_primary_key_column": [
    [
      "tests/backends/sqlite/test_introspection.py",
      [
        "IntrospectionTests",
        "test_get_primary_key_column"
      ]
    ],
    [
      "tests/introspection/tests.py",
      [
        "IntrospectionTests",
        "test_get_primary_key_column"
      ]
    ]
  ],
  "parse_definition": [
    [
      "tests/backends/sqlite/test_introspection.py",
      [
        "ParsingTests",
        "parse_definition"
      ]
    ]
  ],
  "assertConstraint": [
    [
      "tests/backends/sqlite/test_introspection.py",
      [
        "ParsingTests",
        "assertConstraint"
      ]
    ]
  ],
  "test_unique_column": [
    [
      "tests/backends/sqlite/test_introspection.py",
      [
        "ParsingTests",
        "test_unique_column"
      ]
    ]
  ],
  "test_unique_constraint": [
    [
      "tests/backends/sqlite/test_introspection.py",
      [
        "ParsingTests",
        "test_unique_constraint"
      ]
    ]
  ],
  "test_unique_constraint_multicolumn": [
    [
      "tests/backends/sqlite/test_introspection.py",
      [
        "ParsingTests",
        "test_unique_constraint_multicolumn"
      ]
    ]
  ],
  "test_check_column": [
    [
      "tests/backends/sqlite/test_introspection.py",
      [
        "ParsingTests",
        "test_check_column"
      ]
    ]
  ],
  "test_check_constraint": [
    [
      "tests/backends/sqlite/test_introspection.py",
      [
        "ParsingTests",
        "test_check_constraint"
      ]
    ]
  ],
  "test_check_column_with_operators_and_functions": [
    [
      "tests/backends/sqlite/test_introspection.py",
      [
        "ParsingTests",
        "test_check_column_with_operators_and_functions"
      ]
    ]
  ],
  "test_check_and_unique_column": [
    [
      "tests/backends/sqlite/test_introspection.py",
      [
        "ParsingTests",
        "test_check_and_unique_column"
      ]
    ]
  ],
  "test_check_sqlite_version": [
    [
      "tests/backends/sqlite/tests.py",
      [
        "Tests",
        "test_check_sqlite_version"
      ]
    ]
  ],
  "test_aggregation": [
    [
      "tests/backends/sqlite/tests.py",
      [
        "Tests",
        "test_aggregation"
      ]
    ],
    [
      "tests/from_db_value/tests.py",
      [
        "FromDBValueTest",
        "test_aggregation"
      ]
    ]
  ],
  "test_distinct_aggregation": [
    [
      "tests/backends/sqlite/tests.py",
      [
        "Tests",
        "test_distinct_aggregation"
      ]
    ]
  ],
  "test_distinct_aggregation_multiple_args_no_distinct": [
    [
      "tests/backends/sqlite/tests.py",
      [
        "Tests",
        "test_distinct_aggregation_multiple_args_no_distinct"
      ]
    ]
  ],
  "test_memory_db_test_name": [
    [
      "tests/backends/sqlite/tests.py",
      [
        "Tests",
        "test_memory_db_test_name"
      ]
    ]
  ],
  "test_regexp_function": [
    [
      "tests/backends/sqlite/tests.py",
      [
        "Tests",
        "test_regexp_function"
      ]
    ]
  ],
  "test_pathlib_name": [
    [
      "tests/backends/sqlite/tests.py",
      [
        "Tests",
        "test_pathlib_name"
      ]
    ]
  ],
  "test_autoincrement": [
    [
      "tests/backends/sqlite/tests.py",
      [
        "SchemaTests",
        "test_autoincrement"
      ]
    ]
  ],
  "test_disable_constraint_checking_failure_disallowed": [
    [
      "tests/backends/sqlite/tests.py",
      [
        "SchemaTests",
        "test_disable_constraint_checking_failure_disallowed"
      ]
    ]
  ],
  "test_constraint_checks_disabled_atomic_allowed": [
    [
      "tests/backends/sqlite/tests.py",
      [
        "SchemaTests",
        "test_constraint_checks_disabled_atomic_allowed"
      ]
    ]
  ],
  "test_field_rename_inside_atomic_block": [
    [
      "tests/backends/sqlite/tests.py",
      [
        "SchemaTests",
        "test_field_rename_inside_atomic_block"
      ]
    ]
  ],
  "test_table_rename_inside_atomic_block": [
    [
      "tests/backends/sqlite/tests.py",
      [
        "SchemaTests",
        "test_table_rename_inside_atomic_block"
      ]
    ]
  ],
  "test_no_interpolation": [
    [
      "tests/backends/sqlite/tests.py",
      [
        "LastExecutedQueryTest",
        "test_no_interpolation"
      ]
    ]
  ],
  "test_parameter_quoting": [
    [
      "tests/backends/sqlite/tests.py",
      [
        "LastExecutedQueryTest",
        "test_parameter_quoting"
      ]
    ]
  ],
  "test_large_number_of_parameters": [
    [
      "tests/backends/sqlite/tests.py",
      [
        "LastExecutedQueryTest",
        "test_large_number_of_parameters"
      ]
    ]
  ],
  "test_parameter_escaping": [
    [
      "tests/backends/sqlite/tests.py",
      [
        "EscapingChecks",
        "test_parameter_escaping"
      ]
    ],
    [
      "tests/backends/tests.py",
      [
        "EscapingChecks",
        "test_parameter_escaping"
      ]
    ]
  ],
  "test_database_sharing_in_threads": [
    [
      "tests/backends/sqlite/tests.py",
      [
        "ThreadSharing",
        "test_database_sharing_in_threads"
      ]
    ]
  ],
  "test_references_table": [
    [
      "tests/backends/test_ddl_references.py",
      [
        "TableTests",
        "test_references_table"
      ]
    ],
    [
      "tests/backends/test_ddl_references.py",
      [
        "ForeignKeyNameTests",
        "test_references_table"
      ]
    ],
    [
      "tests/backends/test_ddl_references.py",
      [
        "StatementTests",
        "test_references_table"
      ]
    ]
  ],
  "test_rename_table_references": [
    [
      "tests/backends/test_ddl_references.py",
      [
        "TableTests",
        "test_rename_table_references"
      ]
    ],
    [
      "tests/backends/test_ddl_references.py",
      [
        "ForeignKeyNameTests",
        "test_rename_table_references"
      ]
    ],
    [
      "tests/backends/test_ddl_references.py",
      [
        "StatementTests",
        "test_rename_table_references"
      ]
    ]
  ],
  "test_references_column": [
    [
      "tests/backends/test_ddl_references.py",
      [
        "ColumnsTests",
        "test_references_column"
      ]
    ],
    [
      "tests/backends/test_ddl_references.py",
      [
        "ForeignKeyNameTests",
        "test_references_column"
      ]
    ],
    [
      "tests/backends/test_ddl_references.py",
      [
        "StatementTests",
        "test_references_column"
      ]
    ]
  ],
  "test_rename_column_references": [
    [
      "tests/backends/test_ddl_references.py",
      [
        "ColumnsTests",
        "test_rename_column_references"
      ]
    ],
    [
      "tests/backends/test_ddl_references.py",
      [
        "ForeignKeyNameTests",
        "test_rename_column_references"
      ]
    ],
    [
      "tests/backends/test_ddl_references.py",
      [
        "StatementTests",
        "test_rename_column_references"
      ]
    ]
  ],
  "test_truncate_name": [
    [
      "tests/backends/test_utils.py",
      [
        "TestUtils",
        "test_truncate_name"
      ]
    ]
  ],
  "test_split_identifier": [
    [
      "tests/backends/test_utils.py",
      [
        "TestUtils",
        "test_split_identifier"
      ]
    ]
  ],
  "equal": [
    [
      "tests/backends/test_utils.py",
      [
        "TestUtils",
        "test_format_number",
        "equal"
      ]
    ]
  ],
  "test_format_number": [
    [
      "tests/backends/test_utils.py",
      [
        "TestUtils",
        "test_format_number"
      ]
    ],
    [
      "tests/utils_tests/test_numberformat.py",
      [
        "TestNumberFormat",
        "test_format_number"
      ]
    ]
  ],
  "_test_procedure": [
    [
      "tests/backends/test_utils.py",
      [
        "CursorWrapperTests",
        "_test_procedure"
      ]
    ]
  ],
  "test_callproc_without_params": [
    [
      "tests/backends/test_utils.py",
      [
        "CursorWrapperTests",
        "test_callproc_without_params"
      ]
    ]
  ],
  "test_callproc_with_int_params": [
    [
      "tests/backends/test_utils.py",
      [
        "CursorWrapperTests",
        "test_callproc_with_int_params"
      ]
    ]
  ],
  "test_callproc_kparams": [
    [
      "tests/backends/test_utils.py",
      [
        "CursorWrapperTests",
        "test_callproc_kparams"
      ]
    ]
  ],
  "test_unsupported_callproc_kparams_raises_error": [
    [
      "tests/backends/test_utils.py",
      [
        "CursorWrapperTests",
        "test_unsupported_callproc_kparams_raises_error"
      ]
    ]
  ],
  "test_django_date_trunc": [
    [
      "tests/backends/tests.py",
      [
        "DateQuotingTest",
        "test_django_date_trunc"
      ]
    ]
  ],
  "test_django_date_extract": [
    [
      "tests/backends/tests.py",
      [
        "DateQuotingTest",
        "test_django_date_extract"
      ]
    ]
  ],
  "test_last_executed_query_without_previous_query": [
    [
      "tests/backends/tests.py",
      [
        "LastExecutedQueryTest",
        "test_last_executed_query_without_previous_query"
      ]
    ]
  ],
  "test_debug_sql": [
    [
      "tests/backends/tests.py",
      [
        "LastExecutedQueryTest",
        "test_debug_sql"
      ]
    ]
  ],
  "test_query_encoding": [
    [
      "tests/backends/tests.py",
      [
        "LastExecutedQueryTest",
        "test_query_encoding"
      ]
    ]
  ],
  "test_last_executed_query": [
    [
      "tests/backends/tests.py",
      [
        "LastExecutedQueryTest",
        "test_last_executed_query"
      ]
    ]
  ],
  "test_last_executed_query_dict": [
    [
      "tests/backends/tests.py",
      [
        "LastExecutedQueryTest",
        "test_last_executed_query_dict"
      ]
    ]
  ],
  "test_bad_parameter_count": [
    [
      "tests/backends/tests.py",
      [
        "ParameterHandlingTest",
        "test_bad_parameter_count"
      ]
    ]
  ],
  "test_sequence_name_length_limits_create": [
    [
      "tests/backends/tests.py",
      [
        "LongNameTest",
        "test_sequence_name_length_limits_create"
      ]
    ]
  ],
  "test_sequence_name_length_limits_m2m": [
    [
      "tests/backends/tests.py",
      [
        "LongNameTest",
        "test_sequence_name_length_limits_m2m"
      ]
    ]
  ],
  "test_sequence_name_length_limits_flush": [
    [
      "tests/backends/tests.py",
      [
        "LongNameTest",
        "test_sequence_name_length_limits_flush"
      ]
    ]
  ],
  "test_generic_relation": [
    [
      "tests/backends/tests.py",
      [
        "SequenceResetTest",
        "test_generic_relation"
      ]
    ],
    [
      "tests/generic_relations/tests.py",
      [
        "ProxyRelatedModelTest",
        "test_generic_relation"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "GenericRelationTests",
        "test_generic_relation"
      ]
    ]
  ],
  "test_signal": [
    [
      "tests/backends/tests.py",
      [
        "ConnectionCreatedSignalTest",
        "test_signal"
      ]
    ],
    [
      "tests/sites_tests/tests.py",
      [
        "CreateDefaultSiteTests",
        "test_signal"
      ]
    ]
  ],
  "test_paramless_no_escaping": [
    [
      "tests/backends/tests.py",
      [
        "EscapingChecks",
        "test_paramless_no_escaping"
      ]
    ]
  ],
  "create_squares_with_executemany": [
    [
      "tests/backends/tests.py",
      [
        "BackendTestCase",
        "create_squares_with_executemany"
      ]
    ]
  ],
  "create_squares": [
    [
      "tests/backends/tests.py",
      [
        "BackendTestCase",
        "create_squares"
      ]
    ]
  ],
  "test_cursor_executemany": [
    [
      "tests/backends/tests.py",
      [
        "BackendTestCase",
        "test_cursor_executemany"
      ]
    ]
  ],
  "test_cursor_executemany_with_empty_params_list": [
    [
      "tests/backends/tests.py",
      [
        "BackendTestCase",
        "test_cursor_executemany_with_empty_params_list"
      ]
    ]
  ],
  "test_cursor_executemany_with_iterator": [
    [
      "tests/backends/tests.py",
      [
        "BackendTestCase",
        "test_cursor_executemany_with_iterator"
      ]
    ]
  ],
  "test_cursor_execute_with_pyformat": [
    [
      "tests/backends/tests.py",
      [
        "BackendTestCase",
        "test_cursor_execute_with_pyformat"
      ]
    ]
  ],
  "test_cursor_executemany_with_pyformat": [
    [
      "tests/backends/tests.py",
      [
        "BackendTestCase",
        "test_cursor_executemany_with_pyformat"
      ]
    ]
  ],
  "test_cursor_executemany_with_pyformat_iterator": [
    [
      "tests/backends/tests.py",
      [
        "BackendTestCase",
        "test_cursor_executemany_with_pyformat_iterator"
      ]
    ]
  ],
  "test_unicode_fetches": [
    [
      "tests/backends/tests.py",
      [
        "BackendTestCase",
        "test_unicode_fetches"
      ]
    ]
  ],
  "test_unicode_password": [
    [
      "tests/backends/tests.py",
      [
        "BackendTestCase",
        "test_unicode_password"
      ]
    ]
  ],
  "test_database_operations_helper_class": [
    [
      "tests/backends/tests.py",
      [
        "BackendTestCase",
        "test_database_operations_helper_class"
      ]
    ]
  ],
  "test_database_operations_init": [
    [
      "tests/backends/tests.py",
      [
        "BackendTestCase",
        "test_database_operations_init"
      ]
    ]
  ],
  "test_cached_db_features": [
    [
      "tests/backends/tests.py",
      [
        "BackendTestCase",
        "test_cached_db_features"
      ]
    ]
  ],
  "test_duplicate_table_error": [
    [
      "tests/backends/tests.py",
      [
        "BackendTestCase",
        "test_duplicate_table_error"
      ]
    ]
  ],
  "test_cursor_contextmanager": [
    [
      "tests/backends/tests.py",
      [
        "BackendTestCase",
        "test_cursor_contextmanager"
      ]
    ]
  ],
  "test_cursor_contextmanager_closing": [
    [
      "tests/backends/tests.py",
      [
        "BackendTestCase",
        "test_cursor_contextmanager_closing"
      ]
    ]
  ],
  "test_is_usable_after_database_disconnects": [
    [
      "tests/backends/tests.py",
      [
        "BackendTestCase",
        "test_is_usable_after_database_disconnects"
      ]
    ]
  ],
  "test_queries_limit": [
    [
      "tests/backends/tests.py",
      [
        "BackendTestCase",
        "test_queries_limit"
      ]
    ]
  ],
  "test_timezone_none_use_tz_false": [
    [
      "tests/backends/tests.py",
      [
        "BackendTestCase",
        "test_timezone_none_use_tz_false"
      ]
    ]
  ],
  "test_integrity_checks_on_creation": [
    [
      "tests/backends/tests.py",
      [
        "FkConstraintsTests",
        "test_integrity_checks_on_creation"
      ]
    ]
  ],
  "test_integrity_checks_on_update": [
    [
      "tests/backends/tests.py",
      [
        "FkConstraintsTests",
        "test_integrity_checks_on_update"
      ]
    ]
  ],
  "test_disable_constraint_checks_manually": [
    [
      "tests/backends/tests.py",
      [
        "FkConstraintsTests",
        "test_disable_constraint_checks_manually"
      ]
    ]
  ],
  "test_disable_constraint_checks_context_manager": [
    [
      "tests/backends/tests.py",
      [
        "FkConstraintsTests",
        "test_disable_constraint_checks_context_manager"
      ]
    ]
  ],
  "test_check_constraints": [
    [
      "tests/backends/tests.py",
      [
        "FkConstraintsTests",
        "test_check_constraints"
      ]
    ],
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "ConstraintsTests",
        "test_check_constraints"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_check_constraints"
      ]
    ]
  ],
  "runner": [
    [
      "tests/backends/tests.py",
      [
        "ThreadTests",
        "test_default_connection_thread_local",
        "runner"
      ]
    ],
    [
      "tests/backends/tests.py",
      [
        "ThreadTests",
        "test_connections_thread_local",
        "runner"
      ]
    ]
  ],
  "test_default_connection_thread_local": [
    [
      "tests/backends/tests.py",
      [
        "ThreadTests",
        "test_default_connection_thread_local"
      ]
    ]
  ],
  "test_connections_thread_local": [
    [
      "tests/backends/tests.py",
      [
        "ThreadTests",
        "test_connections_thread_local"
      ]
    ]
  ],
  "do_thread": [
    [
      "tests/backends/tests.py",
      [
        "ThreadTests",
        "test_pass_connection_between_threads",
        "do_thread"
      ]
    ]
  ],
  "test_pass_connection_between_threads": [
    [
      "tests/backends/tests.py",
      [
        "ThreadTests",
        "test_pass_connection_between_threads"
      ]
    ]
  ],
  "runner1": [
    [
      "tests/backends/tests.py",
      [
        "ThreadTests",
        "test_closing_non_shared_connections",
        "runner1"
      ]
    ]
  ],
  "runner1_1": [
    [
      "tests/backends/tests.py",
      [
        "ThreadTests",
        "test_closing_non_shared_connections",
        "runner1_1"
      ]
    ]
  ],
  "test_closing_non_shared_connections": [
    [
      "tests/backends/tests.py",
      [
        "ThreadTests",
        "test_closing_non_shared_connections"
      ]
    ]
  ],
  "test_thread_sharing_count": [
    [
      "tests/backends/tests.py",
      [
        "ThreadTests",
        "test_thread_sharing_count"
      ]
    ]
  ],
  "test_zero_as_autoval": [
    [
      "tests/backends/tests.py",
      [
        "MySQLPKZeroTests",
        "test_zero_as_autoval"
      ]
    ],
    [
      "tests/bulk_create/tests.py",
      [
        "BulkCreateTests",
        "test_zero_as_autoval"
      ]
    ]
  ],
  "test_can_reference_existent": [
    [
      "tests/backends/tests.py",
      [
        "DBConstraintTestCase",
        "test_can_reference_existent"
      ]
    ]
  ],
  "test_can_reference_non_existent": [
    [
      "tests/backends/tests.py",
      [
        "DBConstraintTestCase",
        "test_can_reference_non_existent"
      ]
    ]
  ],
  "_user_input": [
    [
      "tests/bash_completion/tests.py",
      [
        "BashCompletionTests",
        "_user_input"
      ]
    ]
  ],
  "_run_autocomplete": [
    [
      "tests/bash_completion/tests.py",
      [
        "BashCompletionTests",
        "_run_autocomplete"
      ]
    ]
  ],
  "test_django_admin_py": [
    [
      "tests/bash_completion/tests.py",
      [
        "BashCompletionTests",
        "test_django_admin_py"
      ]
    ]
  ],
  "test_manage_py": [
    [
      "tests/bash_completion/tests.py",
      [
        "BashCompletionTests",
        "test_manage_py"
      ]
    ],
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "RestartWithReloaderTests",
        "test_manage_py"
      ]
    ]
  ],
  "test_subcommands": [
    [
      "tests/bash_completion/tests.py",
      [
        "BashCompletionTests",
        "test_subcommands"
      ]
    ]
  ],
  "test_completed_subcommand": [
    [
      "tests/bash_completion/tests.py",
      [
        "BashCompletionTests",
        "test_completed_subcommand"
      ]
    ]
  ],
  "test_app_completion": [
    [
      "tests/bash_completion/tests.py",
      [
        "BashCompletionTests",
        "test_app_completion"
      ]
    ]
  ],
  "test_object_is_not_written_to_database_until_save_was_called": [
    [
      "tests/basic/tests.py",
      [
        "ModelInstanceCreationTests",
        "test_object_is_not_written_to_database_until_save_was_called"
      ]
    ]
  ],
  "test_can_initialize_model_instance_using_positional_arguments": [
    [
      "tests/basic/tests.py",
      [
        "ModelInstanceCreationTests",
        "test_can_initialize_model_instance_using_positional_arguments"
      ]
    ]
  ],
  "test_can_create_instance_using_kwargs": [
    [
      "tests/basic/tests.py",
      [
        "ModelInstanceCreationTests",
        "test_can_create_instance_using_kwargs"
      ]
    ]
  ],
  "test_autofields_generate_different_values_for_each_instance": [
    [
      "tests/basic/tests.py",
      [
        "ModelInstanceCreationTests",
        "test_autofields_generate_different_values_for_each_instance"
      ]
    ]
  ],
  "test_can_mix_and_match_position_and_kwargs": [
    [
      "tests/basic/tests.py",
      [
        "ModelInstanceCreationTests",
        "test_can_mix_and_match_position_and_kwargs"
      ]
    ]
  ],
  "test_cannot_create_instance_with_invalid_kwargs": [
    [
      "tests/basic/tests.py",
      [
        "ModelInstanceCreationTests",
        "test_cannot_create_instance_with_invalid_kwargs"
      ]
    ]
  ],
  "test_can_leave_off_value_for_autofield_and_it_gets_value_on_save": [
    [
      "tests/basic/tests.py",
      [
        "ModelInstanceCreationTests",
        "test_can_leave_off_value_for_autofield_and_it_gets_value_on_save"
      ]
    ]
  ],
  "test_leaving_off_a_field_with_default_set_the_default_will_be_saved": [
    [
      "tests/basic/tests.py",
      [
        "ModelInstanceCreationTests",
        "test_leaving_off_a_field_with_default_set_the_default_will_be_saved"
      ]
    ]
  ],
  "test_for_datetimefields_saves_as_much_precision_as_was_given": [
    [
      "tests/basic/tests.py",
      [
        "ModelInstanceCreationTests",
        "test_for_datetimefields_saves_as_much_precision_as_was_given"
      ]
    ]
  ],
  "test_saving_an_object_again_does_not_create_a_new_object": [
    [
      "tests/basic/tests.py",
      [
        "ModelInstanceCreationTests",
        "test_saving_an_object_again_does_not_create_a_new_object"
      ]
    ]
  ],
  "test_querysets_checking_for_membership": [
    [
      "tests/basic/tests.py",
      [
        "ModelInstanceCreationTests",
        "test_querysets_checking_for_membership"
      ]
    ]
  ],
  "test_save_primary_with_default": [
    [
      "tests/basic/tests.py",
      [
        "ModelInstanceCreationTests",
        "test_save_primary_with_default"
      ]
    ]
  ],
  "test_save_parent_primary_with_default": [
    [
      "tests/basic/tests.py",
      [
        "ModelInstanceCreationTests",
        "test_save_parent_primary_with_default"
      ]
    ]
  ],
  "test_objects_attribute_is_only_available_on_the_class_itself": [
    [
      "tests/basic/tests.py",
      [
        "ModelTest",
        "test_objects_attribute_is_only_available_on_the_class_itself"
      ]
    ]
  ],
  "test_queryset_delete_removes_all_items_in_that_queryset": [
    [
      "tests/basic/tests.py",
      [
        "ModelTest",
        "test_queryset_delete_removes_all_items_in_that_queryset"
      ]
    ]
  ],
  "test_not_equal_and_equal_operators_behave_as_expected_on_instances": [
    [
      "tests/basic/tests.py",
      [
        "ModelTest",
        "test_not_equal_and_equal_operators_behave_as_expected_on_instances"
      ]
    ]
  ],
  "test_microsecond_precision": [
    [
      "tests/basic/tests.py",
      [
        "ModelTest",
        "test_microsecond_precision"
      ]
    ]
  ],
  "test_manually_specify_primary_key": [
    [
      "tests/basic/tests.py",
      [
        "ModelTest",
        "test_manually_specify_primary_key"
      ]
    ]
  ],
  "test_create_method": [
    [
      "tests/basic/tests.py",
      [
        "ModelTest",
        "test_create_method"
      ]
    ]
  ],
  "test_year_lookup_edge_case": [
    [
      "tests/basic/tests.py",
      [
        "ModelTest",
        "test_year_lookup_edge_case"
      ]
    ]
  ],
  "test_unicode_data": [
    [
      "tests/basic/tests.py",
      [
        "ModelTest",
        "test_unicode_data"
      ]
    ]
  ],
  "test_hash_function": [
    [
      "tests/basic/tests.py",
      [
        "ModelTest",
        "test_hash_function"
      ]
    ]
  ],
  "test_extra_method_select_argument_with_dashes_and_values": [
    [
      "tests/basic/tests.py",
      [
        "ModelTest",
        "test_extra_method_select_argument_with_dashes_and_values"
      ]
    ]
  ],
  "test_extra_method_select_argument_with_dashes": [
    [
      "tests/basic/tests.py",
      [
        "ModelTest",
        "test_extra_method_select_argument_with_dashes"
      ]
    ]
  ],
  "test_create_relation_with_gettext_lazy": [
    [
      "tests/basic/tests.py",
      [
        "ModelTest",
        "test_create_relation_with_gettext_lazy"
      ]
    ],
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_create_relation_with_gettext_lazy"
      ]
    ]
  ],
  "test_emptyqs": [
    [
      "tests/basic/tests.py",
      [
        "ModelTest",
        "test_emptyqs"
      ]
    ]
  ],
  "test_emptyqs_values": [
    [
      "tests/basic/tests.py",
      [
        "ModelTest",
        "test_emptyqs_values"
      ]
    ]
  ],
  "test_emptyqs_customqs": [
    [
      "tests/basic/tests.py",
      [
        "ModelTest",
        "test_emptyqs_customqs"
      ]
    ]
  ],
  "test_emptyqs_values_order": [
    [
      "tests/basic/tests.py",
      [
        "ModelTest",
        "test_emptyqs_values_order"
      ]
    ]
  ],
  "test_emptyqs_distinct": [
    [
      "tests/basic/tests.py",
      [
        "ModelTest",
        "test_emptyqs_distinct"
      ]
    ]
  ],
  "test_ticket_20278": [
    [
      "tests/basic/tests.py",
      [
        "ModelTest",
        "test_ticket_20278"
      ]
    ]
  ],
  "test_missing_hash_not_inherited": [
    [
      "tests/basic/tests.py",
      [
        "ModelTest",
        "test_missing_hash_not_inherited"
      ]
    ]
  ],
  "test_specified_parent_hash_inherited": [
    [
      "tests/basic/tests.py",
      [
        "ModelTest",
        "test_specified_parent_hash_inherited"
      ]
    ]
  ],
  "test_delete_and_access_field": [
    [
      "tests/basic/tests.py",
      [
        "ModelTest",
        "test_delete_and_access_field"
      ]
    ]
  ],
  "test_multiple_objects_max_num_fetched": [
    [
      "tests/basic/tests.py",
      [
        "ModelTest",
        "test_multiple_objects_max_num_fetched"
      ]
    ]
  ],
  "test_all_lookup": [
    [
      "tests/basic/tests.py",
      [
        "ModelLookupTest",
        "test_all_lookup"
      ]
    ]
  ],
  "test_rich_lookup": [
    [
      "tests/basic/tests.py",
      [
        "ModelLookupTest",
        "test_rich_lookup"
      ]
    ]
  ],
  "test_equal_lookup": [
    [
      "tests/basic/tests.py",
      [
        "ModelLookupTest",
        "test_equal_lookup"
      ]
    ]
  ],
  "test_does_not_exist": [
    [
      "tests/basic/tests.py",
      [
        "ModelLookupTest",
        "test_does_not_exist"
      ]
    ]
  ],
  "test_lookup_by_primary_key": [
    [
      "tests/basic/tests.py",
      [
        "ModelLookupTest",
        "test_lookup_by_primary_key"
      ]
    ]
  ],
  "test_too_many": [
    [
      "tests/basic/tests.py",
      [
        "ModelLookupTest",
        "test_too_many"
      ]
    ]
  ],
  "test_concurrent_delete_with_save": [
    [
      "tests/basic/tests.py",
      [
        "ConcurrentSaveTests",
        "test_concurrent_delete_with_save"
      ]
    ]
  ],
  "test_manager_methods": [
    [
      "tests/basic/tests.py",
      [
        "ManagerTest",
        "test_manager_methods"
      ]
    ]
  ],
  "test_select_on_save": [
    [
      "tests/basic/tests.py",
      [
        "SelectOnSaveTests",
        "test_select_on_save"
      ]
    ]
  ],
  "test_select_on_save_lying_update": [
    [
      "tests/basic/tests.py",
      [
        "SelectOnSaveTests",
        "test_select_on_save_lying_update"
      ]
    ]
  ],
  "test_refresh": [
    [
      "tests/basic/tests.py",
      [
        "ModelRefreshTests",
        "test_refresh"
      ]
    ],
    [
      "tests/multiple_database/tests.py",
      [
        "QueryTestCase",
        "test_refresh"
      ]
    ]
  ],
  "test_unknown_kwarg": [
    [
      "tests/basic/tests.py",
      [
        "ModelRefreshTests",
        "test_unknown_kwarg"
      ]
    ]
  ],
  "test_lookup_in_fields": [
    [
      "tests/basic/tests.py",
      [
        "ModelRefreshTests",
        "test_lookup_in_fields"
      ]
    ]
  ],
  "test_refresh_fk": [
    [
      "tests/basic/tests.py",
      [
        "ModelRefreshTests",
        "test_refresh_fk"
      ]
    ]
  ],
  "test_refresh_null_fk": [
    [
      "tests/basic/tests.py",
      [
        "ModelRefreshTests",
        "test_refresh_null_fk"
      ]
    ]
  ],
  "test_refresh_unsaved": [
    [
      "tests/basic/tests.py",
      [
        "ModelRefreshTests",
        "test_refresh_unsaved"
      ]
    ]
  ],
  "test_refresh_fk_on_delete_set_null": [
    [
      "tests/basic/tests.py",
      [
        "ModelRefreshTests",
        "test_refresh_fk_on_delete_set_null"
      ]
    ]
  ],
  "test_refresh_no_fields": [
    [
      "tests/basic/tests.py",
      [
        "ModelRefreshTests",
        "test_refresh_no_fields"
      ]
    ]
  ],
  "test_refresh_clears_reverse_related": [
    [
      "tests/basic/tests.py",
      [
        "ModelRefreshTests",
        "test_refresh_clears_reverse_related"
      ]
    ]
  ],
  "test_refresh_clears_one_to_one_field": [
    [
      "tests/basic/tests.py",
      [
        "ModelRefreshTests",
        "test_refresh_clears_one_to_one_field"
      ]
    ]
  ],
  "test_prefetched_cache_cleared": [
    [
      "tests/basic/tests.py",
      [
        "ModelRefreshTests",
        "test_prefetched_cache_cleared"
      ]
    ]
  ],
  "error_output": [
    [
      "tests/builtin_server/tests.py",
      [
        "ServerHandler",
        "error_output"
      ]
    ]
  ],
  "log_request": [
    [
      "tests/builtin_server/tests.py",
      [
        "DummyHandler",
        "log_request"
      ]
    ]
  ],
  "sendfile": [
    [
      "tests/builtin_server/tests.py",
      [
        "FileWrapperHandler",
        "sendfile"
      ]
    ]
  ],
  "wsgi_app": [
    [
      "tests/builtin_server/tests.py",
      [
        "wsgi_app"
      ]
    ]
  ],
  "wsgi_app_file_wrapper": [
    [
      "tests/builtin_server/tests.py",
      [
        "wsgi_app_file_wrapper"
      ]
    ]
  ],
  "test_file_wrapper_uses_sendfile": [
    [
      "tests/builtin_server/tests.py",
      [
        "WSGIFileWrapperTests",
        "test_file_wrapper_uses_sendfile"
      ]
    ]
  ],
  "test_file_wrapper_no_sendfile": [
    [
      "tests/builtin_server/tests.py",
      [
        "WSGIFileWrapperTests",
        "test_file_wrapper_no_sendfile"
      ]
    ]
  ],
  "test_file_response_closing": [
    [
      "tests/builtin_server/tests.py",
      [
        "WSGIFileWrapperTests",
        "test_file_response_closing"
      ]
    ]
  ],
  "test_file_response_call_request_finished": [
    [
      "tests/builtin_server/tests.py",
      [
        "WSGIFileWrapperTests",
        "test_file_response_call_request_finished"
      ]
    ]
  ],
  "send_headers": [
    [
      "tests/builtin_server/tests.py",
      [
        "WriteChunkCounterHandler",
        "send_headers"
      ]
    ]
  ],
  "send_big_data_app": [
    [
      "tests/builtin_server/tests.py",
      [
        "send_big_data_app"
      ]
    ]
  ],
  "test_chunked_data": [
    [
      "tests/builtin_server/tests.py",
      [
        "ServerHandlerChunksProperly",
        "test_chunked_data"
      ]
    ]
  ],
  "file_response": [
    [
      "tests/builtin_server/views.py",
      [
        "file_response"
      ]
    ]
  ],
  "test_efficiency": [
    [
      "tests/bulk_create/tests.py",
      [
        "BulkCreateTests",
        "test_efficiency"
      ]
    ]
  ],
  "test_long_non_ascii_text": [
    [
      "tests/bulk_create/tests.py",
      [
        "BulkCreateTests",
        "test_long_non_ascii_text"
      ]
    ]
  ],
  "test_long_and_short_text": [
    [
      "tests/bulk_create/tests.py",
      [
        "BulkCreateTests",
        "test_long_and_short_text"
      ]
    ]
  ],
  "test_multi_table_inheritance_unsupported": [
    [
      "tests/bulk_create/tests.py",
      [
        "BulkCreateTests",
        "test_multi_table_inheritance_unsupported"
      ]
    ]
  ],
  "test_proxy_inheritance_supported": [
    [
      "tests/bulk_create/tests.py",
      [
        "BulkCreateTests",
        "test_proxy_inheritance_supported"
      ]
    ]
  ],
  "test_non_auto_increment_pk": [
    [
      "tests/bulk_create/tests.py",
      [
        "BulkCreateTests",
        "test_non_auto_increment_pk"
      ]
    ]
  ],
  "test_non_auto_increment_pk_efficiency": [
    [
      "tests/bulk_create/tests.py",
      [
        "BulkCreateTests",
        "test_non_auto_increment_pk_efficiency"
      ]
    ]
  ],
  "test_batch_same_vals": [
    [
      "tests/bulk_create/tests.py",
      [
        "BulkCreateTests",
        "test_batch_same_vals"
      ]
    ]
  ],
  "test_large_batch": [
    [
      "tests/bulk_create/tests.py",
      [
        "BulkCreateTests",
        "test_large_batch"
      ]
    ],
    [
      "tests/queries/test_bulk_update.py",
      [
        "BulkUpdateTests",
        "test_large_batch"
      ]
    ]
  ],
  "test_large_single_field_batch": [
    [
      "tests/bulk_create/tests.py",
      [
        "BulkCreateTests",
        "test_large_single_field_batch"
      ]
    ]
  ],
  "test_large_batch_efficiency": [
    [
      "tests/bulk_create/tests.py",
      [
        "BulkCreateTests",
        "test_large_batch_efficiency"
      ]
    ]
  ],
  "test_large_batch_mixed": [
    [
      "tests/bulk_create/tests.py",
      [
        "BulkCreateTests",
        "test_large_batch_mixed"
      ]
    ]
  ],
  "test_large_batch_mixed_efficiency": [
    [
      "tests/bulk_create/tests.py",
      [
        "BulkCreateTests",
        "test_large_batch_mixed_efficiency"
      ]
    ]
  ],
  "test_explicit_batch_size": [
    [
      "tests/bulk_create/tests.py",
      [
        "BulkCreateTests",
        "test_explicit_batch_size"
      ]
    ]
  ],
  "test_empty_model": [
    [
      "tests/bulk_create/tests.py",
      [
        "BulkCreateTests",
        "test_empty_model"
      ]
    ]
  ],
  "test_explicit_batch_size_efficiency": [
    [
      "tests/bulk_create/tests.py",
      [
        "BulkCreateTests",
        "test_explicit_batch_size_efficiency"
      ]
    ]
  ],
  "test_explicit_batch_size_respects_max_batch_size": [
    [
      "tests/bulk_create/tests.py",
      [
        "BulkCreateTests",
        "test_explicit_batch_size_respects_max_batch_size"
      ]
    ]
  ],
  "test_bulk_insert_expressions": [
    [
      "tests/bulk_create/tests.py",
      [
        "BulkCreateTests",
        "test_bulk_insert_expressions"
      ]
    ]
  ],
  "test_bulk_insert_nullable_fields": [
    [
      "tests/bulk_create/tests.py",
      [
        "BulkCreateTests",
        "test_bulk_insert_nullable_fields"
      ]
    ]
  ],
  "test_set_pk_and_insert_single_item": [
    [
      "tests/bulk_create/tests.py",
      [
        "BulkCreateTests",
        "test_set_pk_and_insert_single_item"
      ]
    ]
  ],
  "test_set_pk_and_query_efficiency": [
    [
      "tests/bulk_create/tests.py",
      [
        "BulkCreateTests",
        "test_set_pk_and_query_efficiency"
      ]
    ]
  ],
  "test_set_state": [
    [
      "tests/bulk_create/tests.py",
      [
        "BulkCreateTests",
        "test_set_state"
      ]
    ]
  ],
  "test_set_state_with_pk_specified": [
    [
      "tests/bulk_create/tests.py",
      [
        "BulkCreateTests",
        "test_set_state_with_pk_specified"
      ]
    ]
  ],
  "test_ignore_conflicts_value_error": [
    [
      "tests/bulk_create/tests.py",
      [
        "BulkCreateTests",
        "test_ignore_conflicts_value_error"
      ]
    ]
  ],
  "test_ignore_conflicts_ignore": [
    [
      "tests/bulk_create/tests.py",
      [
        "BulkCreateTests",
        "test_ignore_conflicts_ignore"
      ]
    ]
  ],
  "expensive_calculation": [
    [
      "tests/cache/models.py",
      [
        "expensive_calculation"
      ]
    ]
  ],
  "empty_response": [
    [
      "tests/cache/tests.py",
      [
        "empty_response"
      ]
    ],
    [
      "tests/test_utils/views.py",
      [
        "empty_response"
      ]
    ]
  ],
  "test_non_existent": [
    [
      "tests/cache/tests.py",
      [
        "DummyCacheTests",
        "test_non_existent"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_non_existent"
      ]
    ]
  ],
  "test_get_many": [
    [
      "tests/cache/tests.py",
      [
        "DummyCacheTests",
        "test_get_many"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_get_many"
      ]
    ]
  ],
  "test_get_many_invalid_key": [
    [
      "tests/cache/tests.py",
      [
        "DummyCacheTests",
        "test_get_many_invalid_key"
      ]
    ]
  ],
  "test_has_key": [
    [
      "tests/cache/tests.py",
      [
        "DummyCacheTests",
        "test_has_key"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_has_key"
      ]
    ],
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestQuerying",
        "test_has_key"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_has_key"
      ]
    ],
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_has_key"
      ]
    ]
  ],
  "test_in": [
    [
      "tests/cache/tests.py",
      [
        "DummyCacheTests",
        "test_in"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_in"
      ]
    ],
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_in"
      ]
    ],
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_in"
      ]
    ],
    [
      "tests/template_tests/test_smartif.py",
      [
        "SmartIfTests",
        "test_in"
      ]
    ],
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "CaseInsensitiveMappingTests",
        "test_in"
      ]
    ]
  ],
  "test_incr": [
    [
      "tests/cache/tests.py",
      [
        "DummyCacheTests",
        "test_incr"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_incr"
      ]
    ]
  ],
  "test_decr": [
    [
      "tests/cache/tests.py",
      [
        "DummyCacheTests",
        "test_decr"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_decr"
      ]
    ]
  ],
  "test_touch": [
    [
      "tests/cache/tests.py",
      [
        "DummyCacheTests",
        "test_touch"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_touch"
      ]
    ]
  ],
  "test_data_types": [
    [
      "tests/cache/tests.py",
      [
        "DummyCacheTests",
        "test_data_types"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_data_types"
      ]
    ]
  ],
  "test_expiration": [
    [
      "tests/cache/tests.py",
      [
        "DummyCacheTests",
        "test_expiration"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_expiration"
      ]
    ]
  ],
  "test_unicode": [
    [
      "tests/cache/tests.py",
      [
        "DummyCacheTests",
        "test_unicode"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_unicode"
      ]
    ],
    [
      "tests/gis_tests/gdal_tests/test_srs.py",
      [
        "SpatialRefTest",
        "test_unicode"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_force_escape.py",
      [
        "FunctionTests",
        "test_unicode"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_iriencode.py",
      [
        "FunctionTests",
        "test_unicode"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_lower.py",
      [
        "FunctionTests",
        "test_unicode"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_slugify.py",
      [
        "FunctionTests",
        "test_unicode"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_title.py",
      [
        "FunctionTests",
        "test_unicode"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_upper.py",
      [
        "FunctionTests",
        "test_unicode"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "FunctionTests",
        "test_unicode"
      ]
    ]
  ],
  "test_set_many": [
    [
      "tests/cache/tests.py",
      [
        "DummyCacheTests",
        "test_set_many"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_set_many"
      ]
    ]
  ],
  "test_set_many_invalid_key": [
    [
      "tests/cache/tests.py",
      [
        "DummyCacheTests",
        "test_set_many_invalid_key"
      ]
    ]
  ],
  "test_delete_many": [
    [
      "tests/cache/tests.py",
      [
        "DummyCacheTests",
        "test_delete_many"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_delete_many"
      ]
    ]
  ],
  "test_delete_many_invalid_key": [
    [
      "tests/cache/tests.py",
      [
        "DummyCacheTests",
        "test_delete_many_invalid_key"
      ]
    ]
  ],
  "test_clear": [
    [
      "tests/cache/tests.py",
      [
        "DummyCacheTests",
        "test_clear"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_clear"
      ]
    ],
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_clear"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "PrefetchRelatedTests",
        "test_clear"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "RawQuerySetTests",
        "test_clear"
      ]
    ],
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_clear"
      ]
    ]
  ],
  "test_incr_version": [
    [
      "tests/cache/tests.py",
      [
        "DummyCacheTests",
        "test_incr_version"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_incr_version"
      ]
    ]
  ],
  "test_decr_version": [
    [
      "tests/cache/tests.py",
      [
        "DummyCacheTests",
        "test_decr_version"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_decr_version"
      ]
    ]
  ],
  "test_get_or_set": [
    [
      "tests/cache/tests.py",
      [
        "DummyCacheTests",
        "test_get_or_set"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_get_or_set"
      ]
    ]
  ],
  "test_get_or_set_callable": [
    [
      "tests/cache/tests.py",
      [
        "DummyCacheTests",
        "test_get_or_set_callable"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_get_or_set_callable"
      ]
    ]
  ],
  "custom_key_func": [
    [
      "tests/cache/tests.py",
      [
        "custom_key_func"
      ]
    ]
  ],
  "caches_setting_for_tests": [
    [
      "tests/cache/tests.py",
      [
        "caches_setting_for_tests"
      ]
    ]
  ],
  "test_default_used_when_none_is_set": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_default_used_when_none_is_set"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "MemcachedCacheTests",
        "test_default_used_when_none_is_set"
      ]
    ]
  ],
  "test_prefix": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_prefix"
      ]
    ],
    [
      "tests/view_tests/tests/test_static.py",
      [
        "StaticHelperTest",
        "test_prefix"
      ]
    ]
  ],
  "test_delete_nonexistent": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_delete_nonexistent"
      ]
    ]
  ],
  "test_close": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_close"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "BaseMemcachedTests",
        "test_close"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "CacheClosingTests",
        "test_close"
      ]
    ]
  ],
  "test_cache_read_for_model_instance": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_cache_read_for_model_instance"
      ]
    ]
  ],
  "test_cache_write_for_model_instance_with_deferred": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_cache_write_for_model_instance_with_deferred"
      ]
    ]
  ],
  "test_cache_read_for_model_instance_with_deferred": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_cache_read_for_model_instance_with_deferred"
      ]
    ]
  ],
  "test_binary_string": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_binary_string"
      ]
    ]
  ],
  "test_set_many_returns_empty_list_on_success": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_set_many_returns_empty_list_on_success"
      ]
    ]
  ],
  "test_set_many_expiration": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_set_many_expiration"
      ]
    ]
  ],
  "test_long_timeout": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_long_timeout"
      ]
    ]
  ],
  "test_forever_timeout": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_forever_timeout"
      ]
    ]
  ],
  "test_zero_timeout": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_zero_timeout"
      ]
    ]
  ],
  "test_float_timeout": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_float_timeout"
      ]
    ]
  ],
  "_perform_cull_test": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "_perform_cull_test"
      ]
    ]
  ],
  "test_cull": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_cull"
      ]
    ]
  ],
  "test_zero_cull": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_zero_cull"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "DBCacheTests",
        "test_zero_cull"
      ]
    ]
  ],
  "_perform_invalid_key_test": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "_perform_invalid_key_test"
      ]
    ]
  ],
  "test_invalid_key_characters": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_invalid_key_characters"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "BaseMemcachedTests",
        "test_invalid_key_characters"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "PyLibMCCacheTests",
        "test_invalid_key_characters"
      ]
    ]
  ],
  "test_invalid_key_length": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_invalid_key_length"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "BaseMemcachedTests",
        "test_invalid_key_length"
      ]
    ]
  ],
  "test_cache_versioning_get_set": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_cache_versioning_get_set"
      ]
    ]
  ],
  "test_cache_versioning_add": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_cache_versioning_add"
      ]
    ]
  ],
  "test_cache_versioning_has_key": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_cache_versioning_has_key"
      ]
    ]
  ],
  "test_cache_versioning_delete": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_cache_versioning_delete"
      ]
    ]
  ],
  "test_cache_versioning_incr_decr": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_cache_versioning_incr_decr"
      ]
    ]
  ],
  "test_cache_versioning_get_set_many": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_cache_versioning_get_set_many"
      ]
    ]
  ],
  "test_custom_key_func": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_custom_key_func"
      ]
    ]
  ],
  "test_cache_write_unpicklable_object": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_cache_write_unpicklable_object"
      ]
    ]
  ],
  "test_add_fail_on_pickleerror": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_add_fail_on_pickleerror"
      ]
    ]
  ],
  "test_set_fail_on_pickleerror": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_set_fail_on_pickleerror"
      ]
    ]
  ],
  "test_get_or_set_callable_returning_none": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_get_or_set_callable_returning_none"
      ]
    ]
  ],
  "test_get_or_set_version": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_get_or_set_version"
      ]
    ]
  ],
  "test_get_or_set_racing": [
    [
      "tests/cache/tests.py",
      [
        "BaseCacheTests",
        "test_get_or_set_racing"
      ]
    ]
  ],
  "drop_table": [
    [
      "tests/cache/tests.py",
      [
        "DBCacheTests",
        "drop_table"
      ]
    ]
  ],
  "test_get_many_num_queries": [
    [
      "tests/cache/tests.py",
      [
        "DBCacheTests",
        "test_get_many_num_queries"
      ]
    ]
  ],
  "test_delete_many_num_queries": [
    [
      "tests/cache/tests.py",
      [
        "DBCacheTests",
        "test_delete_many_num_queries"
      ]
    ]
  ],
  "test_second_call_doesnt_crash": [
    [
      "tests/cache/tests.py",
      [
        "DBCacheTests",
        "test_second_call_doesnt_crash"
      ]
    ]
  ],
  "test_createcachetable_dry_run_mode": [
    [
      "tests/cache/tests.py",
      [
        "DBCacheTests",
        "test_createcachetable_dry_run_mode"
      ]
    ]
  ],
  "test_createcachetable_with_table_argument": [
    [
      "tests/cache/tests.py",
      [
        "DBCacheTests",
        "test_createcachetable_with_table_argument"
      ]
    ]
  ],
  "db_for_write": [
    [
      "tests/cache/tests.py",
      [
        "DBCacheRouter",
        "db_for_write"
      ]
    ],
    [
      "tests/contenttypes_tests/test_models.py",
      [
        "TestRouter",
        "db_for_write"
      ]
    ],
    [
      "tests/contenttypes_tests/test_operations.py",
      [
        "ContentTypeOperationsTests",
        "TestRouter",
        "db_for_write"
      ]
    ],
    [
      "tests/gis_tests/layermap/tests.py",
      [
        "OtherRouter",
        "db_for_write"
      ]
    ],
    [
      "tests/multiple_database/routers.py",
      [
        "TestRouter",
        "db_for_write"
      ]
    ],
    [
      "tests/multiple_database/routers.py",
      [
        "AuthRouter",
        "db_for_write"
      ]
    ],
    [
      "tests/multiple_database/routers.py",
      [
        "WriteRouter",
        "db_for_write"
      ]
    ],
    [
      "tests/multiple_database/tests.py",
      [
        "WriteToOtherRouter",
        "db_for_write"
      ]
    ],
    [
      "tests/multiple_database/tests.py",
      [
        "AttributeErrorRouter",
        "db_for_write"
      ]
    ],
    [
      "tests/multiple_database/tests.py",
      [
        "ModelMetaRouter",
        "db_for_write"
      ]
    ],
    [
      "tests/multiple_database/tests.py",
      [
        "RouteForWriteTestCase",
        "WriteCheckRouter",
        "db_for_write"
      ]
    ]
  ],
  "test_createcachetable_observes_database_router": [
    [
      "tests/cache/tests.py",
      [
        "CreateCacheTableForDBCacheTests",
        "test_createcachetable_observes_database_router"
      ]
    ]
  ],
  "test_multiple_caches": [
    [
      "tests/cache/tests.py",
      [
        "LocMemCacheTests",
        "test_multiple_caches"
      ]
    ]
  ],
  "test_locking_on_pickle": [
    [
      "tests/cache/tests.py",
      [
        "LocMemCacheTests",
        "test_locking_on_pickle"
      ]
    ]
  ],
  "test_incr_decr_timeout": [
    [
      "tests/cache/tests.py",
      [
        "LocMemCacheTests",
        "test_incr_decr_timeout"
      ]
    ]
  ],
  "test_lru_get": [
    [
      "tests/cache/tests.py",
      [
        "LocMemCacheTests",
        "test_lru_get"
      ]
    ]
  ],
  "test_lru_set": [
    [
      "tests/cache/tests.py",
      [
        "LocMemCacheTests",
        "test_lru_set"
      ]
    ]
  ],
  "test_lru_incr": [
    [
      "tests/cache/tests.py",
      [
        "LocMemCacheTests",
        "test_lru_incr"
      ]
    ]
  ],
  "test_location_multiple_servers": [
    [
      "tests/cache/tests.py",
      [
        "BaseMemcachedTests",
        "test_location_multiple_servers"
      ]
    ]
  ],
  "test_default_never_expiring_timeout": [
    [
      "tests/cache/tests.py",
      [
        "BaseMemcachedTests",
        "test_default_never_expiring_timeout"
      ]
    ]
  ],
  "test_default_far_future_timeout": [
    [
      "tests/cache/tests.py",
      [
        "BaseMemcachedTests",
        "test_default_far_future_timeout"
      ]
    ]
  ],
  "test_memcached_deletes_key_on_failed_set": [
    [
      "tests/cache/tests.py",
      [
        "BaseMemcachedTests",
        "test_memcached_deletes_key_on_failed_set"
      ]
    ]
  ],
  "test_set_many_returns_failing_keys": [
    [
      "tests/cache/tests.py",
      [
        "BaseMemcachedTests",
        "test_set_many_returns_failing_keys"
      ]
    ]
  ],
  "test_memcached_uses_highest_pickle_version": [
    [
      "tests/cache/tests.py",
      [
        "MemcachedCacheTests",
        "test_memcached_uses_highest_pickle_version"
      ]
    ]
  ],
  "test_memcached_options": [
    [
      "tests/cache/tests.py",
      [
        "MemcachedCacheTests",
        "test_memcached_options"
      ]
    ]
  ],
  "test_pylibmc_options": [
    [
      "tests/cache/tests.py",
      [
        "PyLibMCCacheTests",
        "test_pylibmc_options"
      ]
    ]
  ],
  "mkdtemp": [
    [
      "tests/cache/tests.py",
      [
        "FileBasedCacheTests",
        "mkdtemp"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "FileBasedCachePathLibTests",
        "mkdtemp"
      ]
    ],
    [
      "tests/mail/tests.py",
      [
        "FileBackendTests",
        "mkdtemp"
      ]
    ],
    [
      "tests/mail/tests.py",
      [
        "FileBackendPathLibTests",
        "mkdtemp"
      ]
    ],
    [
      "tests/sessions_tests/tests.py",
      [
        "FileSessionTests",
        "mkdtemp"
      ]
    ],
    [
      "tests/sessions_tests/tests.py",
      [
        "FileSessionPathLibTests",
        "mkdtemp"
      ]
    ],
    [
      "tests/staticfiles_tests/cases.py",
      [
        "CollectionTestCase",
        "mkdtemp"
      ]
    ],
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionPathLib",
        "mkdtemp"
      ]
    ]
  ],
  "test_ignores_non_cache_files": [
    [
      "tests/cache/tests.py",
      [
        "FileBasedCacheTests",
        "test_ignores_non_cache_files"
      ]
    ]
  ],
  "test_clear_does_not_remove_cache_dir": [
    [
      "tests/cache/tests.py",
      [
        "FileBasedCacheTests",
        "test_clear_does_not_remove_cache_dir"
      ]
    ]
  ],
  "test_creates_cache_dir_if_nonexistent": [
    [
      "tests/cache/tests.py",
      [
        "FileBasedCacheTests",
        "test_creates_cache_dir_if_nonexistent"
      ]
    ]
  ],
  "test_get_ignores_enoent": [
    [
      "tests/cache/tests.py",
      [
        "FileBasedCacheTests",
        "test_get_ignores_enoent"
      ]
    ]
  ],
  "test_get_does_not_ignore_non_filenotfound_exceptions": [
    [
      "tests/cache/tests.py",
      [
        "FileBasedCacheTests",
        "test_get_does_not_ignore_non_filenotfound_exceptions"
      ]
    ]
  ],
  "test_empty_cache_file_considered_expired": [
    [
      "tests/cache/tests.py",
      [
        "FileBasedCacheTests",
        "test_empty_cache_file_considered_expired"
      ]
    ]
  ],
  "test_custom_key_validation": [
    [
      "tests/cache/tests.py",
      [
        "CustomCacheKeyValidationTests",
        "test_custom_key_validation"
      ]
    ]
  ],
  "test_default_expiration_time_for_keys_is_5_minutes": [
    [
      "tests/cache/tests.py",
      [
        "DefaultNonExpiringCacheKeyTests",
        "test_default_expiration_time_for_keys_is_5_minutes"
      ]
    ]
  ],
  "test_caches_with_unset_timeout_has_correct_default_timeout": [
    [
      "tests/cache/tests.py",
      [
        "DefaultNonExpiringCacheKeyTests",
        "test_caches_with_unset_timeout_has_correct_default_timeout"
      ]
    ]
  ],
  "test_caches_set_with_timeout_as_none_has_correct_default_timeout": [
    [
      "tests/cache/tests.py",
      [
        "DefaultNonExpiringCacheKeyTests",
        "test_caches_set_with_timeout_as_none_has_correct_default_timeout"
      ]
    ]
  ],
  "test_caches_with_unset_timeout_set_expiring_key": [
    [
      "tests/cache/tests.py",
      [
        "DefaultNonExpiringCacheKeyTests",
        "test_caches_with_unset_timeout_set_expiring_key"
      ]
    ]
  ],
  "test_caches_set_with_timeout_as_none_set_non_expiring_key": [
    [
      "tests/cache/tests.py",
      [
        "DefaultNonExpiringCacheKeyTests",
        "test_caches_set_with_timeout_as_none_set_non_expiring_key"
      ]
    ]
  ],
  "_get_request_cache": [
    [
      "tests/cache/tests.py",
      [
        "CacheUtils",
        "_get_request_cache"
      ]
    ]
  ],
  "test_patch_vary_headers": [
    [
      "tests/cache/tests.py",
      [
        "CacheUtils",
        "test_patch_vary_headers"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "TestWithTemplateResponse",
        "test_patch_vary_headers"
      ]
    ]
  ],
  "test_get_cache_key": [
    [
      "tests/cache/tests.py",
      [
        "CacheUtils",
        "test_get_cache_key"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "TestWithTemplateResponse",
        "test_get_cache_key"
      ]
    ]
  ],
  "test_get_cache_key_with_query": [
    [
      "tests/cache/tests.py",
      [
        "CacheUtils",
        "test_get_cache_key_with_query"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "TestWithTemplateResponse",
        "test_get_cache_key_with_query"
      ]
    ]
  ],
  "test_cache_key_varies_by_url": [
    [
      "tests/cache/tests.py",
      [
        "CacheUtils",
        "test_cache_key_varies_by_url"
      ]
    ]
  ],
  "test_learn_cache_key": [
    [
      "tests/cache/tests.py",
      [
        "CacheUtils",
        "test_learn_cache_key"
      ]
    ]
  ],
  "test_patch_cache_control": [
    [
      "tests/cache/tests.py",
      [
        "CacheUtils",
        "test_patch_cache_control"
      ]
    ]
  ],
  "_set_cache": [
    [
      "tests/cache/tests.py",
      [
        "CacheHEADTest",
        "_set_cache"
      ]
    ]
  ],
  "test_head_caches_correctly": [
    [
      "tests/cache/tests.py",
      [
        "CacheHEADTest",
        "test_head_caches_correctly"
      ]
    ]
  ],
  "test_head_with_cached_get": [
    [
      "tests/cache/tests.py",
      [
        "CacheHEADTest",
        "test_head_with_cached_get"
      ]
    ]
  ],
  "test_cache_key_i18n_translation": [
    [
      "tests/cache/tests.py",
      [
        "CacheI18nTest",
        "test_cache_key_i18n_translation"
      ]
    ]
  ],
  "check_accept_language_vary": [
    [
      "tests/cache/tests.py",
      [
        "CacheI18nTest",
        "check_accept_language_vary"
      ]
    ]
  ],
  "test_cache_key_i18n_translation_accept_language": [
    [
      "tests/cache/tests.py",
      [
        "CacheI18nTest",
        "test_cache_key_i18n_translation_accept_language"
      ]
    ]
  ],
  "test_cache_key_i18n_formatting": [
    [
      "tests/cache/tests.py",
      [
        "CacheI18nTest",
        "test_cache_key_i18n_formatting"
      ]
    ]
  ],
  "test_cache_key_i18n_timezone": [
    [
      "tests/cache/tests.py",
      [
        "CacheI18nTest",
        "test_cache_key_i18n_timezone"
      ]
    ]
  ],
  "test_cache_key_no_i18n": [
    [
      "tests/cache/tests.py",
      [
        "CacheI18nTest",
        "test_cache_key_no_i18n"
      ]
    ]
  ],
  "set_cache": [
    [
      "tests/cache/tests.py",
      [
        "CacheI18nTest",
        "test_middleware",
        "set_cache"
      ]
    ]
  ],
  "test_middleware": [
    [
      "tests/cache/tests.py",
      [
        "CacheI18nTest",
        "test_middleware"
      ]
    ],
    [
      "tests/cache/tests.py",
      [
        "CacheMiddlewareTest",
        "test_middleware"
      ]
    ]
  ],
  "test_middleware_doesnt_cache_streaming_response": [
    [
      "tests/cache/tests.py",
      [
        "CacheI18nTest",
        "test_middleware_doesnt_cache_streaming_response"
      ]
    ]
  ],
  "hello_world_view": [
    [
      "tests/cache/tests.py",
      [
        "hello_world_view"
      ]
    ]
  ],
  "csrf_view": [
    [
      "tests/cache/tests.py",
      [
        "csrf_view"
      ]
    ]
  ],
  "test_constructor": [
    [
      "tests/cache/tests.py",
      [
        "CacheMiddlewareTest",
        "test_constructor"
      ]
    ],
    [
      "tests/model_fields/test_imagefield.py",
      [
        "ImageFieldTwoDimensionsTests",
        "test_constructor"
      ]
    ],
    [
      "tests/model_fields/test_imagefield.py",
      [
        "TwoImageFieldTests",
        "test_constructor"
      ]
    ]
  ],
  "test_view_decorator": [
    [
      "tests/cache/tests.py",
      [
        "CacheMiddlewareTest",
        "test_view_decorator"
      ]
    ]
  ],
  "test_cache_page_timeout": [
    [
      "tests/cache/tests.py",
      [
        "CacheMiddlewareTest",
        "test_cache_page_timeout"
      ]
    ]
  ],
  "test_cached_control_private_not_cached": [
    [
      "tests/cache/tests.py",
      [
        "CacheMiddlewareTest",
        "test_cached_control_private_not_cached"
      ]
    ]
  ],
  "test_sensitive_cookie_not_cached": [
    [
      "tests/cache/tests.py",
      [
        "CacheMiddlewareTest",
        "test_sensitive_cookie_not_cached"
      ]
    ]
  ],
  "test_304_response_has_http_caching_headers_but_not_cached": [
    [
      "tests/cache/tests.py",
      [
        "CacheMiddlewareTest",
        "test_304_response_has_http_caching_headers_but_not_cached"
      ]
    ]
  ],
  "test_without_vary_on": [
    [
      "tests/cache/tests.py",
      [
        "TestMakeTemplateFragmentKey",
        "test_without_vary_on"
      ]
    ]
  ],
  "test_with_one_vary_on": [
    [
      "tests/cache/tests.py",
      [
        "TestMakeTemplateFragmentKey",
        "test_with_one_vary_on"
      ]
    ]
  ],
  "test_with_many_vary_on": [
    [
      "tests/cache/tests.py",
      [
        "TestMakeTemplateFragmentKey",
        "test_with_many_vary_on"
      ]
    ]
  ],
  "test_proper_escaping": [
    [
      "tests/cache/tests.py",
      [
        "TestMakeTemplateFragmentKey",
        "test_proper_escaping"
      ]
    ]
  ],
  "test_with_ints_vary_on": [
    [
      "tests/cache/tests.py",
      [
        "TestMakeTemplateFragmentKey",
        "test_with_ints_vary_on"
      ]
    ]
  ],
  "test_with_unicode_vary_on": [
    [
      "tests/cache/tests.py",
      [
        "TestMakeTemplateFragmentKey",
        "test_with_unicode_vary_on"
      ]
    ]
  ],
  "test_long_vary_on": [
    [
      "tests/cache/tests.py",
      [
        "TestMakeTemplateFragmentKey",
        "test_long_vary_on"
      ]
    ]
  ],
  "test_same_instance": [
    [
      "tests/cache/tests.py",
      [
        "CacheHandlerTest",
        "test_same_instance"
      ]
    ]
  ],
  "test_per_thread": [
    [
      "tests/cache/tests.py",
      [
        "CacheHandlerTest",
        "test_per_thread"
      ]
    ]
  ],
  "my_check": [
    [
      "tests/check_framework/models.py",
      [
        "my_check"
      ]
    ]
  ],
  "test_no_allowed_async_unsafe": [
    [
      "tests/check_framework/test_async_checks.py",
      [
        "AsyncCheckTests",
        "test_no_allowed_async_unsafe"
      ]
    ]
  ],
  "test_allowed_async_unsafe_set": [
    [
      "tests/check_framework/test_async_checks.py",
      [
        "AsyncCheckTests",
        "test_allowed_async_unsafe_set"
      ]
    ]
  ],
  "test_default_cache_included": [
    [
      "tests/check_framework/test_caches.py",
      [
        "CheckCacheSettingsAppDirsTest",
        "test_default_cache_included"
      ]
    ]
  ],
  "test_default_cache_not_included": [
    [
      "tests/check_framework/test_caches.py",
      [
        "CheckCacheSettingsAppDirsTest",
        "test_default_cache_not_included"
      ]
    ]
  ],
  "test_database_checks_called": [
    [
      "tests/check_framework/test_database.py",
      [
        "DatabaseCheckTests",
        "test_database_checks_called"
      ]
    ]
  ],
  "_clean_sql_mode": [
    [
      "tests/check_framework/test_database.py",
      [
        "DatabaseCheckTests",
        "test_mysql_strict_mode",
        "_clean_sql_mode"
      ]
    ]
  ],
  "test_mysql_strict_mode": [
    [
      "tests/check_framework/test_database.py",
      [
        "DatabaseCheckTests",
        "test_mysql_strict_mode"
      ]
    ]
  ],
  "test_collision_in_same_app": [
    [
      "tests/check_framework/test_model_checks.py",
      [
        "DuplicateDBTableTests",
        "test_collision_in_same_app"
      ]
    ]
  ],
  "test_collision_in_same_app_database_routers_installed": [
    [
      "tests/check_framework/test_model_checks.py",
      [
        "DuplicateDBTableTests",
        "test_collision_in_same_app_database_routers_installed"
      ]
    ]
  ],
  "test_collision_across_apps": [
    [
      "tests/check_framework/test_model_checks.py",
      [
        "DuplicateDBTableTests",
        "test_collision_across_apps"
      ]
    ],
    [
      "tests/check_framework/test_model_checks.py",
      [
        "IndexNameTests",
        "test_collision_across_apps"
      ]
    ],
    [
      "tests/check_framework/test_model_checks.py",
      [
        "ConstraintNameTests",
        "test_collision_across_apps"
      ]
    ]
  ],
  "test_collision_across_apps_database_routers_installed": [
    [
      "tests/check_framework/test_model_checks.py",
      [
        "DuplicateDBTableTests",
        "test_collision_across_apps_database_routers_installed"
      ]
    ]
  ],
  "test_no_collision_for_unmanaged_models": [
    [
      "tests/check_framework/test_model_checks.py",
      [
        "DuplicateDBTableTests",
        "test_no_collision_for_unmanaged_models"
      ]
    ]
  ],
  "test_no_collision_for_proxy_models": [
    [
      "tests/check_framework/test_model_checks.py",
      [
        "DuplicateDBTableTests",
        "test_no_collision_for_proxy_models"
      ]
    ]
  ],
  "test_collision_in_same_model": [
    [
      "tests/check_framework/test_model_checks.py",
      [
        "IndexNameTests",
        "test_collision_in_same_model"
      ]
    ],
    [
      "tests/check_framework/test_model_checks.py",
      [
        "ConstraintNameTests",
        "test_collision_in_same_model"
      ]
    ]
  ],
  "test_collision_in_different_models": [
    [
      "tests/check_framework/test_model_checks.py",
      [
        "IndexNameTests",
        "test_collision_in_different_models"
      ]
    ],
    [
      "tests/check_framework/test_model_checks.py",
      [
        "ConstraintNameTests",
        "test_collision_in_different_models"
      ]
    ]
  ],
  "test_collision_abstract_model": [
    [
      "tests/check_framework/test_model_checks.py",
      [
        "IndexNameTests",
        "test_collision_abstract_model"
      ]
    ],
    [
      "tests/check_framework/test_model_checks.py",
      [
        "ConstraintNameTests",
        "test_collision_abstract_model"
      ]
    ]
  ],
  "test_no_collision_abstract_model_interpolation": [
    [
      "tests/check_framework/test_model_checks.py",
      [
        "IndexNameTests",
        "test_no_collision_abstract_model_interpolation"
      ]
    ],
    [
      "tests/check_framework/test_model_checks.py",
      [
        "ConstraintNameTests",
        "test_no_collision_abstract_model_interpolation"
      ]
    ]
  ],
  "test_no_collision_across_apps_interpolation": [
    [
      "tests/check_framework/test_model_checks.py",
      [
        "IndexNameTests",
        "test_no_collision_across_apps_interpolation"
      ]
    ],
    [
      "tests/check_framework/test_model_checks.py",
      [
        "ConstraintNameTests",
        "test_no_collision_across_apps_interpolation"
      ]
    ]
  ],
  "test_default_details": [
    [
      "tests/check_framework/test_model_field_deprecation.py",
      [
        "TestDeprecatedField",
        "test_default_details"
      ]
    ],
    [
      "tests/check_framework/test_model_field_deprecation.py",
      [
        "TestRemovedField",
        "test_default_details"
      ]
    ]
  ],
  "test_user_specified_details": [
    [
      "tests/check_framework/test_model_field_deprecation.py",
      [
        "TestDeprecatedField",
        "test_user_specified_details"
      ]
    ],
    [
      "tests/check_framework/test_model_field_deprecation.py",
      [
        "TestRemovedField",
        "test_user_specified_details"
      ]
    ]
  ],
  "_patch_check_field_on": [
    [
      "tests/check_framework/test_multi_db.py",
      [
        "TestMultiDBChecks",
        "_patch_check_field_on"
      ]
    ]
  ],
  "test_checks_called_on_the_default_database": [
    [
      "tests/check_framework/test_multi_db.py",
      [
        "TestMultiDBChecks",
        "test_checks_called_on_the_default_database"
      ]
    ]
  ],
  "test_checks_called_on_the_other_database": [
    [
      "tests/check_framework/test_multi_db.py",
      [
        "TestMultiDBChecks",
        "test_checks_called_on_the_other_database"
      ]
    ]
  ],
  "test_session_cookie_secure_with_installed_app": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckSessionCookieSecureTest",
        "test_session_cookie_secure_with_installed_app"
      ]
    ]
  ],
  "test_session_cookie_secure_with_middleware": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckSessionCookieSecureTest",
        "test_session_cookie_secure_with_middleware"
      ]
    ]
  ],
  "test_session_cookie_secure_both": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckSessionCookieSecureTest",
        "test_session_cookie_secure_both"
      ]
    ]
  ],
  "test_session_cookie_secure_true": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckSessionCookieSecureTest",
        "test_session_cookie_secure_true"
      ]
    ]
  ],
  "test_session_cookie_httponly_with_installed_app": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckSessionCookieHttpOnlyTest",
        "test_session_cookie_httponly_with_installed_app"
      ]
    ]
  ],
  "test_session_cookie_httponly_with_middleware": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckSessionCookieHttpOnlyTest",
        "test_session_cookie_httponly_with_middleware"
      ]
    ]
  ],
  "test_session_cookie_httponly_both": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckSessionCookieHttpOnlyTest",
        "test_session_cookie_httponly_both"
      ]
    ]
  ],
  "test_session_cookie_httponly_true": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckSessionCookieHttpOnlyTest",
        "test_session_cookie_httponly_true"
      ]
    ]
  ],
  "test_no_csrf_middleware": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckCSRFMiddlewareTest",
        "test_no_csrf_middleware"
      ]
    ]
  ],
  "test_with_csrf_middleware": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckCSRFMiddlewareTest",
        "test_with_csrf_middleware"
      ]
    ]
  ],
  "test_with_csrf_cookie_secure_false": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckCSRFCookieSecureTest",
        "test_with_csrf_cookie_secure_false"
      ]
    ]
  ],
  "test_use_sessions_with_csrf_cookie_secure_false": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckCSRFCookieSecureTest",
        "test_use_sessions_with_csrf_cookie_secure_false"
      ]
    ]
  ],
  "test_with_csrf_cookie_secure_false_no_middleware": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckCSRFCookieSecureTest",
        "test_with_csrf_cookie_secure_false_no_middleware"
      ]
    ]
  ],
  "test_with_csrf_cookie_secure_true": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckCSRFCookieSecureTest",
        "test_with_csrf_cookie_secure_true"
      ]
    ]
  ],
  "test_no_security_middleware": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckSecurityMiddlewareTest",
        "test_no_security_middleware"
      ]
    ]
  ],
  "test_with_security_middleware": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckSecurityMiddlewareTest",
        "test_with_security_middleware"
      ]
    ]
  ],
  "test_no_sts": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckStrictTransportSecurityTest",
        "test_no_sts"
      ]
    ]
  ],
  "test_no_sts_no_middleware": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckStrictTransportSecurityTest",
        "test_no_sts_no_middleware"
      ]
    ]
  ],
  "test_with_sts": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckStrictTransportSecurityTest",
        "test_with_sts"
      ]
    ]
  ],
  "test_no_sts_subdomains": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckStrictTransportSecuritySubdomainsTest",
        "test_no_sts_subdomains"
      ]
    ]
  ],
  "test_no_sts_subdomains_no_middleware": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckStrictTransportSecuritySubdomainsTest",
        "test_no_sts_subdomains_no_middleware"
      ]
    ]
  ],
  "test_no_sts_subdomains_no_seconds": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckStrictTransportSecuritySubdomainsTest",
        "test_no_sts_subdomains_no_seconds"
      ]
    ]
  ],
  "test_with_sts_subdomains": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckStrictTransportSecuritySubdomainsTest",
        "test_with_sts_subdomains"
      ]
    ]
  ],
  "test_no_sts_preload": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckStrictTransportSecurityPreloadTest",
        "test_no_sts_preload"
      ]
    ]
  ],
  "test_no_sts_preload_no_middleware": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckStrictTransportSecurityPreloadTest",
        "test_no_sts_preload_no_middleware"
      ]
    ]
  ],
  "test_no_sts_preload_no_seconds": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckStrictTransportSecurityPreloadTest",
        "test_no_sts_preload_no_seconds"
      ]
    ]
  ],
  "test_with_sts_preload": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckStrictTransportSecurityPreloadTest",
        "test_with_sts_preload"
      ]
    ]
  ],
  "test_middleware_not_installed": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckXFrameOptionsMiddlewareTest",
        "test_middleware_not_installed"
      ]
    ],
    [
      "tests/check_framework/test_security.py",
      [
        "CheckXFrameOptionsDenyTest",
        "test_middleware_not_installed"
      ]
    ]
  ],
  "test_middleware_installed": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckXFrameOptionsMiddlewareTest",
        "test_middleware_installed"
      ]
    ]
  ],
  "test_x_frame_options_not_deny": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckXFrameOptionsDenyTest",
        "test_x_frame_options_not_deny"
      ]
    ]
  ],
  "test_xframe_deny": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckXFrameOptionsDenyTest",
        "test_xframe_deny"
      ]
    ]
  ],
  "test_no_content_type_nosniff": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckContentTypeNosniffTest",
        "test_no_content_type_nosniff"
      ]
    ]
  ],
  "test_no_content_type_nosniff_no_middleware": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckContentTypeNosniffTest",
        "test_no_content_type_nosniff_no_middleware"
      ]
    ]
  ],
  "test_with_content_type_nosniff": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckContentTypeNosniffTest",
        "test_with_content_type_nosniff"
      ]
    ]
  ],
  "test_no_ssl_redirect": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckSSLRedirectTest",
        "test_no_ssl_redirect"
      ]
    ]
  ],
  "test_no_ssl_redirect_no_middleware": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckSSLRedirectTest",
        "test_no_ssl_redirect_no_middleware"
      ]
    ]
  ],
  "test_with_ssl_redirect": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckSSLRedirectTest",
        "test_with_ssl_redirect"
      ]
    ]
  ],
  "test_okay_secret_key": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckSecretKeyTest",
        "test_okay_secret_key"
      ]
    ]
  ],
  "test_empty_secret_key": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckSecretKeyTest",
        "test_empty_secret_key"
      ]
    ]
  ],
  "test_missing_secret_key": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckSecretKeyTest",
        "test_missing_secret_key"
      ]
    ]
  ],
  "test_none_secret_key": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckSecretKeyTest",
        "test_none_secret_key"
      ]
    ]
  ],
  "test_low_length_secret_key": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckSecretKeyTest",
        "test_low_length_secret_key"
      ]
    ]
  ],
  "test_low_entropy_secret_key": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckSecretKeyTest",
        "test_low_entropy_secret_key"
      ]
    ]
  ],
  "test_debug_true": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckDebugTest",
        "test_debug_true"
      ]
    ]
  ],
  "test_debug_false": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckDebugTest",
        "test_debug_false"
      ]
    ]
  ],
  "test_allowed_hosts_empty": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckAllowedHostsTest",
        "test_allowed_hosts_empty"
      ]
    ]
  ],
  "test_allowed_hosts_set": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckAllowedHostsTest",
        "test_allowed_hosts_set"
      ]
    ]
  ],
  "test_no_referrer_policy": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckReferrerPolicyTest",
        "test_no_referrer_policy"
      ]
    ]
  ],
  "test_no_referrer_policy_no_middleware": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckReferrerPolicyTest",
        "test_no_referrer_policy_no_middleware"
      ]
    ]
  ],
  "test_with_referrer_policy": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckReferrerPolicyTest",
        "test_with_referrer_policy"
      ]
    ]
  ],
  "test_with_invalid_referrer_policy": [
    [
      "tests/check_framework/test_security.py",
      [
        "CheckReferrerPolicyTest",
        "test_with_invalid_referrer_policy"
      ]
    ]
  ],
  "test_app_dirs_and_loaders": [
    [
      "tests/check_framework/test_templates.py",
      [
        "CheckTemplateSettingsAppDirsTest",
        "test_app_dirs_and_loaders"
      ]
    ]
  ],
  "test_app_dirs_removed": [
    [
      "tests/check_framework/test_templates.py",
      [
        "CheckTemplateSettingsAppDirsTest",
        "test_app_dirs_removed"
      ]
    ]
  ],
  "test_loaders_removed": [
    [
      "tests/check_framework/test_templates.py",
      [
        "CheckTemplateSettingsAppDirsTest",
        "test_loaders_removed"
      ]
    ]
  ],
  "test_string_if_invalid_not_string": [
    [
      "tests/check_framework/test_templates.py",
      [
        "CheckTemplateStringIfInvalidTest",
        "test_string_if_invalid_not_string"
      ]
    ]
  ],
  "test_string_if_invalid_first_is_string": [
    [
      "tests/check_framework/test_templates.py",
      [
        "CheckTemplateStringIfInvalidTest",
        "test_string_if_invalid_first_is_string"
      ]
    ]
  ],
  "test_string_if_invalid_both_are_strings": [
    [
      "tests/check_framework/test_templates.py",
      [
        "CheckTemplateStringIfInvalidTest",
        "test_string_if_invalid_both_are_strings"
      ]
    ]
  ],
  "test_string_if_invalid_not_specified": [
    [
      "tests/check_framework/test_templates.py",
      [
        "CheckTemplateStringIfInvalidTest",
        "test_string_if_invalid_not_specified"
      ]
    ]
  ],
  "test_valid_language_code": [
    [
      "tests/check_framework/test_translation.py",
      [
        "TranslationCheckTests",
        "test_valid_language_code"
      ]
    ]
  ],
  "test_invalid_language_code": [
    [
      "tests/check_framework/test_translation.py",
      [
        "TranslationCheckTests",
        "test_invalid_language_code"
      ]
    ]
  ],
  "test_valid_languages": [
    [
      "tests/check_framework/test_translation.py",
      [
        "TranslationCheckTests",
        "test_valid_languages"
      ]
    ]
  ],
  "test_invalid_languages": [
    [
      "tests/check_framework/test_translation.py",
      [
        "TranslationCheckTests",
        "test_invalid_languages"
      ]
    ]
  ],
  "test_valid_languages_bidi": [
    [
      "tests/check_framework/test_translation.py",
      [
        "TranslationCheckTests",
        "test_valid_languages_bidi"
      ]
    ]
  ],
  "test_invalid_languages_bidi": [
    [
      "tests/check_framework/test_translation.py",
      [
        "TranslationCheckTests",
        "test_invalid_languages_bidi"
      ]
    ]
  ],
  "test_inconsistent_language_settings": [
    [
      "tests/check_framework/test_translation.py",
      [
        "TranslationCheckTests",
        "test_inconsistent_language_settings"
      ]
    ]
  ],
  "test_valid_variant_consistent_language_settings": [
    [
      "tests/check_framework/test_translation.py",
      [
        "TranslationCheckTests",
        "test_valid_variant_consistent_language_settings"
      ]
    ]
  ],
  "test_no_warnings": [
    [
      "tests/check_framework/test_urls.py",
      [
        "CheckUrlConfigTests",
        "test_no_warnings"
      ]
    ]
  ],
  "test_no_warnings_i18n": [
    [
      "tests/check_framework/test_urls.py",
      [
        "CheckUrlConfigTests",
        "test_no_warnings_i18n"
      ]
    ]
  ],
  "test_check_resolver_recursive": [
    [
      "tests/check_framework/test_urls.py",
      [
        "CheckUrlConfigTests",
        "test_check_resolver_recursive"
      ]
    ]
  ],
  "test_include_with_dollar": [
    [
      "tests/check_framework/test_urls.py",
      [
        "CheckUrlConfigTests",
        "test_include_with_dollar"
      ]
    ]
  ],
  "test_contains_tuple_not_url_instance": [
    [
      "tests/check_framework/test_urls.py",
      [
        "CheckUrlConfigTests",
        "test_contains_tuple_not_url_instance"
      ]
    ]
  ],
  "test_contains_included_tuple": [
    [
      "tests/check_framework/test_urls.py",
      [
        "CheckUrlConfigTests",
        "test_contains_included_tuple"
      ]
    ]
  ],
  "test_beginning_with_slash": [
    [
      "tests/check_framework/test_urls.py",
      [
        "CheckUrlConfigTests",
        "test_beginning_with_slash"
      ]
    ]
  ],
  "test_beginning_with_slash_append_slash": [
    [
      "tests/check_framework/test_urls.py",
      [
        "CheckUrlConfigTests",
        "test_beginning_with_slash_append_slash"
      ]
    ]
  ],
  "test_name_with_colon": [
    [
      "tests/check_framework/test_urls.py",
      [
        "CheckUrlConfigTests",
        "test_name_with_colon"
      ]
    ]
  ],
  "test_no_root_urlconf_in_settings": [
    [
      "tests/check_framework/test_urls.py",
      [
        "CheckUrlConfigTests",
        "test_no_root_urlconf_in_settings"
      ]
    ]
  ],
  "test_get_warning_for_invalid_pattern_string": [
    [
      "tests/check_framework/test_urls.py",
      [
        "CheckUrlConfigTests",
        "test_get_warning_for_invalid_pattern_string"
      ]
    ]
  ],
  "test_get_warning_for_invalid_pattern_tuple": [
    [
      "tests/check_framework/test_urls.py",
      [
        "CheckUrlConfigTests",
        "test_get_warning_for_invalid_pattern_tuple"
      ]
    ]
  ],
  "test_get_warning_for_invalid_pattern_other": [
    [
      "tests/check_framework/test_urls.py",
      [
        "CheckUrlConfigTests",
        "test_get_warning_for_invalid_pattern_other"
      ]
    ]
  ],
  "test_check_non_unique_namespaces": [
    [
      "tests/check_framework/test_urls.py",
      [
        "CheckUrlConfigTests",
        "test_check_non_unique_namespaces"
      ]
    ]
  ],
  "test_check_unique_namespaces": [
    [
      "tests/check_framework/test_urls.py",
      [
        "CheckUrlConfigTests",
        "test_check_unique_namespaces"
      ]
    ]
  ],
  "test_contains_re_named_group": [
    [
      "tests/check_framework/test_urls.py",
      [
        "UpdatedToPathTests",
        "test_contains_re_named_group"
      ]
    ]
  ],
  "test_beginning_with_caret": [
    [
      "tests/check_framework/test_urls.py",
      [
        "UpdatedToPathTests",
        "test_beginning_with_caret"
      ]
    ]
  ],
  "test_ending_with_dollar": [
    [
      "tests/check_framework/test_urls.py",
      [
        "UpdatedToPathTests",
        "test_ending_with_dollar"
      ]
    ]
  ],
  "test_bad_handlers": [
    [
      "tests/check_framework/test_urls.py",
      [
        "CheckCustomErrorHandlersTests",
        "test_bad_handlers"
      ]
    ]
  ],
  "test_bad_handlers_invalid_path": [
    [
      "tests/check_framework/test_urls.py",
      [
        "CheckCustomErrorHandlersTests",
        "test_bad_handlers_invalid_path"
      ]
    ]
  ],
  "test_good_handlers": [
    [
      "tests/check_framework/test_urls.py",
      [
        "CheckCustomErrorHandlersTests",
        "test_good_handlers"
      ]
    ]
  ],
  "test_slash_no_errors": [
    [
      "tests/check_framework/test_urls.py",
      [
        "CheckURLSettingsTests",
        "test_slash_no_errors"
      ]
    ]
  ],
  "test_empty_string_no_errors": [
    [
      "tests/check_framework/test_urls.py",
      [
        "CheckURLSettingsTests",
        "test_empty_string_no_errors"
      ]
    ]
  ],
  "test_static_url_no_slash": [
    [
      "tests/check_framework/test_urls.py",
      [
        "CheckURLSettingsTests",
        "test_static_url_no_slash"
      ]
    ]
  ],
  "test_static_url_double_slash_allowed": [
    [
      "tests/check_framework/test_urls.py",
      [
        "CheckURLSettingsTests",
        "test_static_url_double_slash_allowed"
      ]
    ]
  ],
  "test_media_url_no_slash": [
    [
      "tests/check_framework/test_urls.py",
      [
        "CheckURLSettingsTests",
        "test_media_url_no_slash"
      ]
    ]
  ],
  "f2": [
    [
      "tests/check_framework/tests.py",
      [
        "SystemCheckFrameworkTests",
        "test_register_and_run_checks",
        "f2"
      ]
    ]
  ],
  "f3": [
    [
      "tests/check_framework/tests.py",
      [
        "SystemCheckFrameworkTests",
        "test_register_and_run_checks",
        "f3"
      ]
    ]
  ],
  "test_register_and_run_checks": [
    [
      "tests/check_framework/tests.py",
      [
        "SystemCheckFrameworkTests",
        "test_register_and_run_checks"
      ]
    ]
  ],
  "test_printing": [
    [
      "tests/check_framework/tests.py",
      [
        "MessageTests",
        "test_printing"
      ]
    ]
  ],
  "test_printing_no_hint": [
    [
      "tests/check_framework/tests.py",
      [
        "MessageTests",
        "test_printing_no_hint"
      ]
    ]
  ],
  "test_printing_no_object": [
    [
      "tests/check_framework/tests.py",
      [
        "MessageTests",
        "test_printing_no_object"
      ]
    ]
  ],
  "test_printing_with_given_id": [
    [
      "tests/check_framework/tests.py",
      [
        "MessageTests",
        "test_printing_with_given_id"
      ]
    ]
  ],
  "test_printing_field_error": [
    [
      "tests/check_framework/tests.py",
      [
        "MessageTests",
        "test_printing_field_error"
      ]
    ]
  ],
  "test_printing_model_error": [
    [
      "tests/check_framework/tests.py",
      [
        "MessageTests",
        "test_printing_model_error"
      ]
    ]
  ],
  "test_printing_manager_error": [
    [
      "tests/check_framework/tests.py",
      [
        "MessageTests",
        "test_printing_manager_error"
      ]
    ]
  ],
  "test_equal_to_self": [
    [
      "tests/check_framework/tests.py",
      [
        "MessageTests",
        "test_equal_to_self"
      ]
    ]
  ],
  "test_equal_to_same_constructed_check": [
    [
      "tests/check_framework/tests.py",
      [
        "MessageTests",
        "test_equal_to_same_constructed_check"
      ]
    ]
  ],
  "test_not_equal_to_different_constructed_check": [
    [
      "tests/check_framework/tests.py",
      [
        "MessageTests",
        "test_not_equal_to_different_constructed_check"
      ]
    ]
  ],
  "test_not_equal_to_non_check": [
    [
      "tests/check_framework/tests.py",
      [
        "MessageTests",
        "test_not_equal_to_non_check"
      ]
    ]
  ],
  "simple_system_check": [
    [
      "tests/check_framework/tests.py",
      [
        "simple_system_check"
      ]
    ]
  ],
  "tagged_system_check": [
    [
      "tests/check_framework/tests.py",
      [
        "tagged_system_check"
      ]
    ]
  ],
  "deployment_system_check": [
    [
      "tests/check_framework/tests.py",
      [
        "deployment_system_check"
      ]
    ]
  ],
  "test_simple_call": [
    [
      "tests/check_framework/tests.py",
      [
        "CheckCommandTests",
        "test_simple_call"
      ]
    ]
  ],
  "test_given_app": [
    [
      "tests/check_framework/tests.py",
      [
        "CheckCommandTests",
        "test_given_app"
      ]
    ]
  ],
  "test_given_tag": [
    [
      "tests/check_framework/tests.py",
      [
        "CheckCommandTests",
        "test_given_tag"
      ]
    ]
  ],
  "test_invalid_tag": [
    [
      "tests/check_framework/tests.py",
      [
        "CheckCommandTests",
        "test_invalid_tag"
      ]
    ]
  ],
  "test_list_tags_empty": [
    [
      "tests/check_framework/tests.py",
      [
        "CheckCommandTests",
        "test_list_tags_empty"
      ]
    ]
  ],
  "test_list_tags": [
    [
      "tests/check_framework/tests.py",
      [
        "CheckCommandTests",
        "test_list_tags"
      ]
    ]
  ],
  "test_list_deployment_check_omitted": [
    [
      "tests/check_framework/tests.py",
      [
        "CheckCommandTests",
        "test_list_deployment_check_omitted"
      ]
    ]
  ],
  "test_list_deployment_check_included": [
    [
      "tests/check_framework/tests.py",
      [
        "CheckCommandTests",
        "test_list_deployment_check_included"
      ]
    ]
  ],
  "test_tags_deployment_check_omitted": [
    [
      "tests/check_framework/tests.py",
      [
        "CheckCommandTests",
        "test_tags_deployment_check_omitted"
      ]
    ]
  ],
  "test_tags_deployment_check_included": [
    [
      "tests/check_framework/tests.py",
      [
        "CheckCommandTests",
        "test_tags_deployment_check_included"
      ]
    ]
  ],
  "test_fail_level": [
    [
      "tests/check_framework/tests.py",
      [
        "CheckCommandTests",
        "test_fail_level"
      ]
    ]
  ],
  "custom_error_system_check": [
    [
      "tests/check_framework/tests.py",
      [
        "custom_error_system_check"
      ]
    ]
  ],
  "custom_warning_system_check": [
    [
      "tests/check_framework/tests.py",
      [
        "custom_warning_system_check"
      ]
    ]
  ],
  "test_silenced_error": [
    [
      "tests/check_framework/tests.py",
      [
        "SilencingCheckTests",
        "test_silenced_error"
      ]
    ]
  ],
  "test_silenced_warning": [
    [
      "tests/check_framework/tests.py",
      [
        "SilencingCheckTests",
        "test_silenced_warning"
      ]
    ]
  ],
  "test_model_check_method_not_shadowed": [
    [
      "tests/check_framework/tests.py",
      [
        "CheckFrameworkReservedNamesTests",
        "test_model_check_method_not_shadowed"
      ]
    ]
  ],
  "test_registered_check_did_run": [
    [
      "tests/check_framework/tests.py",
      [
        "ChecksRunDuringTests",
        "test_registered_check_did_run"
      ]
    ]
  ],
  "bad_handler": [
    [
      "tests/check_framework/urls/bad_error_handlers.py",
      [
        "bad_handler"
      ]
    ]
  ],
  "good_handler": [
    [
      "tests/check_framework/urls/good_error_handlers.py",
      [
        "good_handler"
      ]
    ]
  ],
  "assertFullResponse": [
    [
      "tests/conditional_processing/tests.py",
      [
        "ConditionalGet",
        "assertFullResponse"
      ]
    ]
  ],
  "assertNotModified": [
    [
      "tests/conditional_processing/tests.py",
      [
        "ConditionalGet",
        "assertNotModified"
      ]
    ]
  ],
  "test_without_conditions": [
    [
      "tests/conditional_processing/tests.py",
      [
        "ConditionalGet",
        "test_without_conditions"
      ]
    ]
  ],
  "test_if_modified_since": [
    [
      "tests/conditional_processing/tests.py",
      [
        "ConditionalGet",
        "test_if_modified_since"
      ]
    ]
  ],
  "test_if_unmodified_since": [
    [
      "tests/conditional_processing/tests.py",
      [
        "ConditionalGet",
        "test_if_unmodified_since"
      ]
    ]
  ],
  "test_if_none_match": [
    [
      "tests/conditional_processing/tests.py",
      [
        "ConditionalGet",
        "test_if_none_match"
      ]
    ]
  ],
  "test_weak_if_none_match": [
    [
      "tests/conditional_processing/tests.py",
      [
        "ConditionalGet",
        "test_weak_if_none_match"
      ]
    ]
  ],
  "test_all_if_none_match": [
    [
      "tests/conditional_processing/tests.py",
      [
        "ConditionalGet",
        "test_all_if_none_match"
      ]
    ]
  ],
  "test_if_match": [
    [
      "tests/conditional_processing/tests.py",
      [
        "ConditionalGet",
        "test_if_match"
      ]
    ]
  ],
  "test_weak_if_match": [
    [
      "tests/conditional_processing/tests.py",
      [
        "ConditionalGet",
        "test_weak_if_match"
      ]
    ]
  ],
  "test_all_if_match": [
    [
      "tests/conditional_processing/tests.py",
      [
        "ConditionalGet",
        "test_all_if_match"
      ]
    ]
  ],
  "test_both_headers": [
    [
      "tests/conditional_processing/tests.py",
      [
        "ConditionalGet",
        "test_both_headers"
      ]
    ]
  ],
  "test_both_headers_2": [
    [
      "tests/conditional_processing/tests.py",
      [
        "ConditionalGet",
        "test_both_headers_2"
      ]
    ]
  ],
  "test_single_condition_1": [
    [
      "tests/conditional_processing/tests.py",
      [
        "ConditionalGet",
        "test_single_condition_1"
      ]
    ]
  ],
  "test_single_condition_2": [
    [
      "tests/conditional_processing/tests.py",
      [
        "ConditionalGet",
        "test_single_condition_2"
      ]
    ]
  ],
  "test_single_condition_3": [
    [
      "tests/conditional_processing/tests.py",
      [
        "ConditionalGet",
        "test_single_condition_3"
      ]
    ]
  ],
  "test_single_condition_4": [
    [
      "tests/conditional_processing/tests.py",
      [
        "ConditionalGet",
        "test_single_condition_4"
      ]
    ]
  ],
  "test_single_condition_5": [
    [
      "tests/conditional_processing/tests.py",
      [
        "ConditionalGet",
        "test_single_condition_5"
      ]
    ]
  ],
  "test_single_condition_6": [
    [
      "tests/conditional_processing/tests.py",
      [
        "ConditionalGet",
        "test_single_condition_6"
      ]
    ]
  ],
  "test_single_condition_7": [
    [
      "tests/conditional_processing/tests.py",
      [
        "ConditionalGet",
        "test_single_condition_7"
      ]
    ]
  ],
  "test_single_condition_8": [
    [
      "tests/conditional_processing/tests.py",
      [
        "ConditionalGet",
        "test_single_condition_8"
      ]
    ]
  ],
  "test_single_condition_9": [
    [
      "tests/conditional_processing/tests.py",
      [
        "ConditionalGet",
        "test_single_condition_9"
      ]
    ]
  ],
  "test_single_condition_head": [
    [
      "tests/conditional_processing/tests.py",
      [
        "ConditionalGet",
        "test_single_condition_head"
      ]
    ]
  ],
  "test_unquoted": [
    [
      "tests/conditional_processing/tests.py",
      [
        "ConditionalGet",
        "test_unquoted"
      ]
    ]
  ],
  "test_unquoted_if_none_match": [
    [
      "tests/conditional_processing/tests.py",
      [
        "ConditionalGet",
        "test_unquoted_if_none_match"
      ]
    ]
  ],
  "test_invalid_etag": [
    [
      "tests/conditional_processing/tests.py",
      [
        "ConditionalGet",
        "test_invalid_etag"
      ]
    ]
  ],
  "last_modified_view1": [
    [
      "tests/conditional_processing/views.py",
      [
        "last_modified_view1"
      ]
    ]
  ],
  "last_modified_view2": [
    [
      "tests/conditional_processing/views.py",
      [
        "last_modified_view2"
      ]
    ]
  ],
  "etag_view1": [
    [
      "tests/conditional_processing/views.py",
      [
        "etag_view1"
      ]
    ]
  ],
  "etag_view2": [
    [
      "tests/conditional_processing/views.py",
      [
        "etag_view2"
      ]
    ]
  ],
  "etag_view_unquoted": [
    [
      "tests/conditional_processing/views.py",
      [
        "etag_view_unquoted"
      ]
    ]
  ],
  "etag_view_weak": [
    [
      "tests/conditional_processing/views.py",
      [
        "etag_view_weak"
      ]
    ]
  ],
  "etag_view_none": [
    [
      "tests/conditional_processing/views.py",
      [
        "etag_view_none"
      ]
    ]
  ],
  "test_constraint_sql": [
    [
      "tests/constraints/tests.py",
      [
        "BaseConstraintTests",
        "test_constraint_sql"
      ]
    ]
  ],
  "test_create_sql": [
    [
      "tests/constraints/tests.py",
      [
        "BaseConstraintTests",
        "test_create_sql"
      ]
    ]
  ],
  "test_remove_sql": [
    [
      "tests/constraints/tests.py",
      [
        "BaseConstraintTests",
        "test_remove_sql"
      ]
    ]
  ],
  "test_invalid_check_types": [
    [
      "tests/constraints/tests.py",
      [
        "CheckConstraintTests",
        "test_invalid_check_types"
      ]
    ]
  ],
  "test_deconstruction": [
    [
      "tests/constraints/tests.py",
      [
        "CheckConstraintTests",
        "test_deconstruction"
      ]
    ],
    [
      "tests/constraints/tests.py",
      [
        "UniqueConstraintTests",
        "test_deconstruction"
      ]
    ],
    [
      "tests/file_storage/tests.py",
      [
        "FileSystemStorageTests",
        "test_deconstruction"
      ]
    ],
    [
      "tests/model_indexes/tests.py",
      [
        "SimpleIndexesTests",
        "test_deconstruction"
      ]
    ],
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "BloomIndexTests",
        "test_deconstruction"
      ]
    ],
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "BrinIndexTests",
        "test_deconstruction"
      ]
    ],
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "BTreeIndexTests",
        "test_deconstruction"
      ]
    ],
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "GinIndexTests",
        "test_deconstruction"
      ]
    ],
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "GistIndexTests",
        "test_deconstruction"
      ]
    ],
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "HashIndexTests",
        "test_deconstruction"
      ]
    ],
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "SpGistIndexTests",
        "test_deconstruction"
      ]
    ]
  ],
  "test_database_constraint": [
    [
      "tests/constraints/tests.py",
      [
        "CheckConstraintTests",
        "test_database_constraint"
      ]
    ],
    [
      "tests/constraints/tests.py",
      [
        "UniqueConstraintTests",
        "test_database_constraint"
      ]
    ]
  ],
  "test_database_constraint_expression": [
    [
      "tests/constraints/tests.py",
      [
        "CheckConstraintTests",
        "test_database_constraint_expression"
      ]
    ]
  ],
  "test_database_constraint_expressionwrapper": [
    [
      "tests/constraints/tests.py",
      [
        "CheckConstraintTests",
        "test_database_constraint_expressionwrapper"
      ]
    ]
  ],
  "test_name": [
    [
      "tests/constraints/tests.py",
      [
        "CheckConstraintTests",
        "test_name"
      ]
    ],
    [
      "tests/constraints/tests.py",
      [
        "UniqueConstraintTests",
        "test_name"
      ]
    ],
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_name"
      ]
    ]
  ],
  "test_abstract_name": [
    [
      "tests/constraints/tests.py",
      [
        "CheckConstraintTests",
        "test_abstract_name"
      ]
    ]
  ],
  "test_eq_with_condition": [
    [
      "tests/constraints/tests.py",
      [
        "UniqueConstraintTests",
        "test_eq_with_condition"
      ]
    ]
  ],
  "test_repr_with_condition": [
    [
      "tests/constraints/tests.py",
      [
        "UniqueConstraintTests",
        "test_repr_with_condition"
      ]
    ]
  ],
  "test_deconstruction_with_condition": [
    [
      "tests/constraints/tests.py",
      [
        "UniqueConstraintTests",
        "test_deconstruction_with_condition"
      ]
    ]
  ],
  "test_database_constraint_with_condition": [
    [
      "tests/constraints/tests.py",
      [
        "UniqueConstraintTests",
        "test_database_constraint_with_condition"
      ]
    ]
  ],
  "test_model_validation": [
    [
      "tests/constraints/tests.py",
      [
        "UniqueConstraintTests",
        "test_model_validation"
      ]
    ]
  ],
  "test_model_validation_with_condition": [
    [
      "tests/constraints/tests.py",
      [
        "UniqueConstraintTests",
        "test_model_validation_with_condition"
      ]
    ]
  ],
  "test_condition_must_be_q": [
    [
      "tests/constraints/tests.py",
      [
        "UniqueConstraintTests",
        "test_condition_must_be_q"
      ]
    ],
    [
      "tests/model_indexes/tests.py",
      [
        "SimpleIndexesTests",
        "test_condition_must_be_q"
      ]
    ]
  ],
  "assert_foo_contenttype_not_cached": [
    [
      "tests/contenttypes_tests/operations_migrations/0002_rename_foo.py",
      [
        "assert_foo_contenttype_not_cached"
      ]
    ]
  ],
  "test_missing_content_type_field": [
    [
      "tests/contenttypes_tests/test_checks.py",
      [
        "GenericForeignKeyTests",
        "test_missing_content_type_field"
      ]
    ]
  ],
  "test_invalid_content_type_field": [
    [
      "tests/contenttypes_tests/test_checks.py",
      [
        "GenericForeignKeyTests",
        "test_invalid_content_type_field"
      ]
    ]
  ],
  "test_content_type_field_pointing_to_wrong_model": [
    [
      "tests/contenttypes_tests/test_checks.py",
      [
        "GenericForeignKeyTests",
        "test_content_type_field_pointing_to_wrong_model"
      ]
    ]
  ],
  "test_missing_object_id_field": [
    [
      "tests/contenttypes_tests/test_checks.py",
      [
        "GenericForeignKeyTests",
        "test_missing_object_id_field"
      ]
    ]
  ],
  "test_field_name_ending_with_underscore": [
    [
      "tests/contenttypes_tests/test_checks.py",
      [
        "GenericForeignKeyTests",
        "test_field_name_ending_with_underscore"
      ]
    ],
    [
      "tests/contenttypes_tests/test_checks.py",
      [
        "GenericRelationTests",
        "test_field_name_ending_with_underscore"
      ]
    ]
  ],
  "test_generic_foreign_key_checks_are_performed": [
    [
      "tests/contenttypes_tests/test_checks.py",
      [
        "GenericForeignKeyTests",
        "test_generic_foreign_key_checks_are_performed"
      ]
    ]
  ],
  "test_valid_generic_relationship": [
    [
      "tests/contenttypes_tests/test_checks.py",
      [
        "GenericRelationTests",
        "test_valid_generic_relationship"
      ]
    ]
  ],
  "test_valid_generic_relationship_with_explicit_fields": [
    [
      "tests/contenttypes_tests/test_checks.py",
      [
        "GenericRelationTests",
        "test_valid_generic_relationship_with_explicit_fields"
      ]
    ]
  ],
  "test_pointing_to_missing_model": [
    [
      "tests/contenttypes_tests/test_checks.py",
      [
        "GenericRelationTests",
        "test_pointing_to_missing_model"
      ]
    ]
  ],
  "test_valid_self_referential_generic_relationship": [
    [
      "tests/contenttypes_tests/test_checks.py",
      [
        "GenericRelationTests",
        "test_valid_self_referential_generic_relationship"
      ]
    ]
  ],
  "test_missing_generic_foreign_key": [
    [
      "tests/contenttypes_tests/test_checks.py",
      [
        "GenericRelationTests",
        "test_missing_generic_foreign_key"
      ]
    ]
  ],
  "test_pointing_to_swapped_model": [
    [
      "tests/contenttypes_tests/test_checks.py",
      [
        "GenericRelationTests",
        "test_pointing_to_swapped_model"
      ]
    ]
  ],
  "test_model_name_too_long": [
    [
      "tests/contenttypes_tests/test_checks.py",
      [
        "ModelCheckTests",
        "test_model_name_too_long"
      ]
    ]
  ],
  "test_get_content_type_no_arguments": [
    [
      "tests/contenttypes_tests/test_fields.py",
      [
        "GenericForeignKeyTests",
        "test_get_content_type_no_arguments"
      ]
    ]
  ],
  "test_incorrect_get_prefetch_queryset_arguments": [
    [
      "tests/contenttypes_tests/test_fields.py",
      [
        "GenericForeignKeyTests",
        "test_incorrect_get_prefetch_queryset_arguments"
      ]
    ]
  ],
  "test_value_to_string": [
    [
      "tests/contenttypes_tests/test_fields.py",
      [
        "GenericRelationTests",
        "test_value_to_string"
      ]
    ]
  ],
  "test_interactive_true_with_dependent_objects": [
    [
      "tests/contenttypes_tests/test_management.py",
      [
        "RemoveStaleContentTypesTests",
        "test_interactive_true_with_dependent_objects"
      ]
    ]
  ],
  "test_interactive_true_without_dependent_objects": [
    [
      "tests/contenttypes_tests/test_management.py",
      [
        "RemoveStaleContentTypesTests",
        "test_interactive_true_without_dependent_objects"
      ]
    ]
  ],
  "test_interactive_false": [
    [
      "tests/contenttypes_tests/test_management.py",
      [
        "RemoveStaleContentTypesTests",
        "test_interactive_false"
      ]
    ]
  ],
  "test_unavailable_content_type_model": [
    [
      "tests/contenttypes_tests/test_management.py",
      [
        "RemoveStaleContentTypesTests",
        "test_unavailable_content_type_model"
      ]
    ]
  ],
  "test_contenttypes_removed_in_installed_apps_without_models": [
    [
      "tests/contenttypes_tests/test_management.py",
      [
        "RemoveStaleContentTypesTests",
        "test_contenttypes_removed_in_installed_apps_without_models"
      ]
    ]
  ],
  "test_contenttypes_removed_for_apps_not_in_installed_apps": [
    [
      "tests/contenttypes_tests/test_management.py",
      [
        "RemoveStaleContentTypesTests",
        "test_contenttypes_removed_for_apps_not_in_installed_apps"
      ]
    ]
  ],
  "test_lookup_cache": [
    [
      "tests/contenttypes_tests/test_models.py",
      [
        "ContentTypesTests",
        "test_lookup_cache"
      ]
    ]
  ],
  "test_get_for_models_creation": [
    [
      "tests/contenttypes_tests/test_models.py",
      [
        "ContentTypesTests",
        "test_get_for_models_creation"
      ]
    ]
  ],
  "test_get_for_models_empty_cache": [
    [
      "tests/contenttypes_tests/test_models.py",
      [
        "ContentTypesTests",
        "test_get_for_models_empty_cache"
      ]
    ]
  ],
  "test_get_for_models_partial_cache": [
    [
      "tests/contenttypes_tests/test_models.py",
      [
        "ContentTypesTests",
        "test_get_for_models_partial_cache"
      ]
    ]
  ],
  "test_get_for_models_full_cache": [
    [
      "tests/contenttypes_tests/test_models.py",
      [
        "ContentTypesTests",
        "test_get_for_models_full_cache"
      ]
    ]
  ],
  "test_get_for_model_create_contenttype": [
    [
      "tests/contenttypes_tests/test_models.py",
      [
        "ContentTypesTests",
        "test_get_for_model_create_contenttype"
      ]
    ]
  ],
  "test_get_for_concrete_model": [
    [
      "tests/contenttypes_tests/test_models.py",
      [
        "ContentTypesTests",
        "test_get_for_concrete_model"
      ]
    ]
  ],
  "test_get_for_concrete_models": [
    [
      "tests/contenttypes_tests/test_models.py",
      [
        "ContentTypesTests",
        "test_get_for_concrete_models"
      ]
    ]
  ],
  "test_cache_not_shared_between_managers": [
    [
      "tests/contenttypes_tests/test_models.py",
      [
        "ContentTypesTests",
        "test_cache_not_shared_between_managers"
      ]
    ]
  ],
  "test_missing_model": [
    [
      "tests/contenttypes_tests/test_models.py",
      [
        "ContentTypesTests",
        "test_missing_model"
      ]
    ]
  ],
  "test_app_labeled_name": [
    [
      "tests/contenttypes_tests/test_models.py",
      [
        "ContentTypesTests",
        "test_app_labeled_name"
      ]
    ]
  ],
  "test_app_labeled_name_unknown_model": [
    [
      "tests/contenttypes_tests/test_models.py",
      [
        "ContentTypesTests",
        "test_app_labeled_name_unknown_model"
      ]
    ]
  ],
  "test_multidb": [
    [
      "tests/contenttypes_tests/test_models.py",
      [
        "ContentTypesMultidbTests",
        "test_multidb"
      ]
    ]
  ],
  "assertOperationsInjected": [
    [
      "tests/contenttypes_tests/test_operations.py",
      [
        "ContentTypeOperationsTests",
        "assertOperationsInjected"
      ]
    ]
  ],
  "test_existing_content_type_rename": [
    [
      "tests/contenttypes_tests/test_operations.py",
      [
        "ContentTypeOperationsTests",
        "test_existing_content_type_rename"
      ]
    ]
  ],
  "test_existing_content_type_rename_other_database": [
    [
      "tests/contenttypes_tests/test_operations.py",
      [
        "ContentTypeOperationsTests",
        "test_existing_content_type_rename_other_database"
      ]
    ]
  ],
  "test_missing_content_type_rename_ignore": [
    [
      "tests/contenttypes_tests/test_operations.py",
      [
        "ContentTypeOperationsTests",
        "test_missing_content_type_rename_ignore"
      ]
    ]
  ],
  "test_content_type_rename_conflict": [
    [
      "tests/contenttypes_tests/test_operations.py",
      [
        "ContentTypeOperationsTests",
        "test_content_type_rename_conflict"
      ]
    ]
  ],
  "test_shortcut_with_absolute_url": [
    [
      "tests/contenttypes_tests/test_views.py",
      [
        "ContentTypesViewsTests",
        "test_shortcut_with_absolute_url"
      ]
    ]
  ],
  "test_shortcut_with_absolute_url_including_scheme": [
    [
      "tests/contenttypes_tests/test_views.py",
      [
        "ContentTypesViewsTests",
        "test_shortcut_with_absolute_url_including_scheme"
      ]
    ]
  ],
  "test_shortcut_no_absolute_url": [
    [
      "tests/contenttypes_tests/test_views.py",
      [
        "ContentTypesViewsTests",
        "test_shortcut_no_absolute_url"
      ]
    ]
  ],
  "test_wrong_type_pk": [
    [
      "tests/contenttypes_tests/test_views.py",
      [
        "ContentTypesViewsTests",
        "test_wrong_type_pk"
      ]
    ]
  ],
  "test_shortcut_bad_pk": [
    [
      "tests/contenttypes_tests/test_views.py",
      [
        "ContentTypesViewsTests",
        "test_shortcut_bad_pk"
      ]
    ]
  ],
  "test_nonint_content_type": [
    [
      "tests/contenttypes_tests/test_views.py",
      [
        "ContentTypesViewsTests",
        "test_nonint_content_type"
      ]
    ]
  ],
  "test_bad_content_type": [
    [
      "tests/contenttypes_tests/test_views.py",
      [
        "ContentTypesViewsTests",
        "test_bad_content_type"
      ]
    ]
  ],
  "test_shortcut_view_with_null_site_fk": [
    [
      "tests/contenttypes_tests/test_views.py",
      [
        "ContentTypesViewsSiteRelTests",
        "test_shortcut_view_with_null_site_fk"
      ]
    ]
  ],
  "test_shortcut_view_with_site_m2m": [
    [
      "tests/contenttypes_tests/test_views.py",
      [
        "ContentTypesViewsSiteRelTests",
        "test_shortcut_view_with_site_m2m"
      ]
    ]
  ],
  "test_not_dependent_on_sites_app": [
    [
      "tests/contenttypes_tests/test_views.py",
      [
        "ShortcutViewTests",
        "test_not_dependent_on_sites_app"
      ]
    ]
  ],
  "test_model_without_get_absolute_url": [
    [
      "tests/contenttypes_tests/test_views.py",
      [
        "ShortcutViewTests",
        "test_model_without_get_absolute_url"
      ]
    ]
  ],
  "test_model_with_broken_get_absolute_url": [
    [
      "tests/contenttypes_tests/test_views.py",
      [
        "ShortcutViewTests",
        "test_model_with_broken_get_absolute_url"
      ]
    ]
  ],
  "test_request_attributes": [
    [
      "tests/context_processors/tests.py",
      [
        "RequestContextProcessorTests",
        "test_request_attributes"
      ]
    ]
  ],
  "test_debug": [
    [
      "tests/context_processors/tests.py",
      [
        "DebugContextProcessorTests",
        "test_debug"
      ]
    ]
  ],
  "test_sql_queries": [
    [
      "tests/context_processors/tests.py",
      [
        "DebugContextProcessorTests",
        "test_sql_queries"
      ]
    ]
  ],
  "request_processor": [
    [
      "tests/context_processors/views.py",
      [
        "request_processor"
      ]
    ]
  ],
  "debug_processor": [
    [
      "tests/context_processors/views.py",
      [
        "debug_processor"
      ]
    ]
  ],
  "test_force_token_to_string": [
    [
      "tests/csrf_tests/test_context_processor.py",
      [
        "TestContextProcessor",
        "test_force_token_to_string"
      ]
    ]
  ],
  "_get_GET_no_csrf_cookie_request": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "_get_GET_no_csrf_cookie_request"
      ]
    ]
  ],
  "_get_GET_csrf_cookie_request": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "_get_GET_csrf_cookie_request"
      ]
    ],
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTests",
        "_get_GET_csrf_cookie_request"
      ]
    ],
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareUseSessionsTests",
        "_get_GET_csrf_cookie_request"
      ]
    ]
  ],
  "_get_POST_csrf_cookie_request": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "_get_POST_csrf_cookie_request"
      ]
    ]
  ],
  "_get_POST_no_csrf_cookie_request": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "_get_POST_no_csrf_cookie_request"
      ]
    ]
  ],
  "_get_POST_request_with_token": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "_get_POST_request_with_token"
      ]
    ]
  ],
  "_check_token_present": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "_check_token_present"
      ]
    ]
  ],
  "test_process_response_get_token_not_used": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "test_process_response_get_token_not_used"
      ]
    ]
  ],
  "test_process_request_no_csrf_cookie": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "test_process_request_no_csrf_cookie"
      ]
    ]
  ],
  "test_process_request_csrf_cookie_no_token": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "test_process_request_csrf_cookie_no_token"
      ]
    ]
  ],
  "test_process_request_csrf_cookie_and_token": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "test_process_request_csrf_cookie_and_token"
      ]
    ]
  ],
  "test_process_request_csrf_cookie_no_token_exempt_view": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "test_process_request_csrf_cookie_no_token_exempt_view"
      ]
    ]
  ],
  "test_csrf_token_in_header": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "test_csrf_token_in_header"
      ]
    ]
  ],
  "test_csrf_token_in_header_with_customized_name": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "test_csrf_token_in_header_with_customized_name"
      ]
    ]
  ],
  "test_put_and_delete_rejected": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "test_put_and_delete_rejected"
      ]
    ]
  ],
  "test_put_and_delete_allowed": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "test_put_and_delete_allowed"
      ]
    ]
  ],
  "test_token_node_no_csrf_cookie": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "test_token_node_no_csrf_cookie"
      ]
    ]
  ],
  "test_token_node_empty_csrf_cookie": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "test_token_node_empty_csrf_cookie"
      ]
    ]
  ],
  "test_token_node_with_csrf_cookie": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "test_token_node_with_csrf_cookie"
      ]
    ]
  ],
  "test_get_token_for_exempt_view": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "test_get_token_for_exempt_view"
      ]
    ]
  ],
  "test_get_token_for_requires_csrf_token_view": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "test_get_token_for_requires_csrf_token_view"
      ]
    ]
  ],
  "test_token_node_with_new_csrf_cookie": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "test_token_node_with_new_csrf_cookie"
      ]
    ],
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareUseSessionsTests",
        "test_token_node_with_new_csrf_cookie"
      ]
    ]
  ],
  "test_cookie_not_reset_on_accepted_request": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "test_cookie_not_reset_on_accepted_request"
      ]
    ]
  ],
  "test_https_bad_referer": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "test_https_bad_referer"
      ]
    ]
  ],
  "test_https_malformed_host": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "test_https_malformed_host"
      ]
    ]
  ],
  "test_https_malformed_referer": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "test_https_malformed_referer"
      ]
    ]
  ],
  "test_https_good_referer": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "test_https_good_referer"
      ]
    ]
  ],
  "test_https_good_referer_2": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "test_https_good_referer_2"
      ]
    ]
  ],
  "_test_https_good_referer_behind_proxy": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "_test_https_good_referer_behind_proxy"
      ]
    ]
  ],
  "test_https_csrf_trusted_origin_allowed": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "test_https_csrf_trusted_origin_allowed"
      ]
    ]
  ],
  "test_https_csrf_wildcard_trusted_origin_allowed": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "test_https_csrf_wildcard_trusted_origin_allowed"
      ]
    ]
  ],
  "_test_https_good_referer_matches_cookie_domain": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "_test_https_good_referer_matches_cookie_domain"
      ]
    ]
  ],
  "_test_https_good_referer_matches_cookie_domain_with_different_port": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "_test_https_good_referer_matches_cookie_domain_with_different_port"
      ]
    ]
  ],
  "test_ensures_csrf_cookie_no_logging": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "test_ensures_csrf_cookie_no_logging"
      ]
    ]
  ],
  "test_post_data_read_failure": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTestMixin",
        "test_post_data_read_failure"
      ]
    ]
  ],
  "_get_POST_bare_secret_csrf_cookie_request": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTests",
        "_get_POST_bare_secret_csrf_cookie_request"
      ]
    ],
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareUseSessionsTests",
        "_get_POST_bare_secret_csrf_cookie_request"
      ]
    ]
  ],
  "_get_POST_bare_secret_csrf_cookie_request_with_token": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTests",
        "_get_POST_bare_secret_csrf_cookie_request_with_token"
      ]
    ]
  ],
  "test_ensures_csrf_cookie_no_middleware": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTests",
        "test_ensures_csrf_cookie_no_middleware"
      ]
    ]
  ],
  "test_ensures_csrf_cookie_with_middleware": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTests",
        "test_ensures_csrf_cookie_with_middleware"
      ]
    ],
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareUseSessionsTests",
        "test_ensures_csrf_cookie_with_middleware"
      ]
    ]
  ],
  "test_csrf_cookie_age": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTests",
        "test_csrf_cookie_age"
      ]
    ]
  ],
  "test_csrf_cookie_age_none": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTests",
        "test_csrf_cookie_age_none"
      ]
    ]
  ],
  "test_csrf_cookie_samesite": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTests",
        "test_csrf_cookie_samesite"
      ]
    ]
  ],
  "test_process_view_token_too_long": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTests",
        "test_process_view_token_too_long"
      ]
    ]
  ],
  "test_process_view_token_invalid_chars": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTests",
        "test_process_view_token_invalid_chars"
      ]
    ]
  ],
  "test_bare_secret_accepted_and_replaced": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTests",
        "test_bare_secret_accepted_and_replaced"
      ]
    ]
  ],
  "test_https_good_referer_behind_proxy": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTests",
        "test_https_good_referer_behind_proxy"
      ]
    ],
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareUseSessionsTests",
        "test_https_good_referer_behind_proxy"
      ]
    ]
  ],
  "test_https_good_referer_matches_cookie_domain": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTests",
        "test_https_good_referer_matches_cookie_domain"
      ]
    ],
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareUseSessionsTests",
        "test_https_good_referer_matches_cookie_domain"
      ]
    ]
  ],
  "test_https_good_referer_matches_cookie_domain_with_different_port": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTests",
        "test_https_good_referer_matches_cookie_domain_with_different_port"
      ]
    ],
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareUseSessionsTests",
        "test_https_good_referer_matches_cookie_domain_with_different_port"
      ]
    ]
  ],
  "test_https_reject_insecure_referer": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareTests",
        "test_https_reject_insecure_referer"
      ]
    ],
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareUseSessionsTests",
        "test_https_reject_insecure_referer"
      ]
    ]
  ],
  "test_no_session_on_request": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareUseSessionsTests",
        "test_no_session_on_request"
      ]
    ]
  ],
  "test_process_response_get_token_used": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareUseSessionsTests",
        "test_process_response_get_token_used"
      ]
    ]
  ],
  "test_session_modify": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfViewMiddlewareUseSessionsTests",
        "test_session_modify"
      ]
    ]
  ],
  "test_csrf_token_on_404_stays_constant": [
    [
      "tests/csrf_tests/tests.py",
      [
        "CsrfInErrorHandlingViewsTests",
        "test_csrf_token_on_404_stays_constant"
      ]
    ]
  ],
  "post_form_view": [
    [
      "tests/csrf_tests/views.py",
      [
        "post_form_view"
      ]
    ]
  ],
  "ensure_csrf_cookie_view": [
    [
      "tests/csrf_tests/views.py",
      [
        "ensure_csrf_cookie_view"
      ]
    ]
  ],
  "token_view": [
    [
      "tests/csrf_tests/views.py",
      [
        "token_view"
      ]
    ]
  ],
  "non_token_view_using_request_processor": [
    [
      "tests/csrf_tests/views.py",
      [
        "non_token_view_using_request_processor"
      ]
    ]
  ],
  "csrf_token_error_handler": [
    [
      "tests/csrf_tests/views.py",
      [
        "csrf_token_error_handler"
      ]
    ]
  ],
  "test_query_all_available_authors": [
    [
      "tests/custom_columns/tests.py",
      [
        "CustomColumnsTests",
        "test_query_all_available_authors"
      ]
    ]
  ],
  "test_get_first_name": [
    [
      "tests/custom_columns/tests.py",
      [
        "CustomColumnsTests",
        "test_get_first_name"
      ]
    ]
  ],
  "test_filter_first_name": [
    [
      "tests/custom_columns/tests.py",
      [
        "CustomColumnsTests",
        "test_filter_first_name"
      ]
    ]
  ],
  "test_get_all_authors_for_an_article": [
    [
      "tests/custom_columns/tests.py",
      [
        "CustomColumnsTests",
        "test_get_all_authors_for_an_article"
      ]
    ]
  ],
  "test_get_all_articles_for_an_author": [
    [
      "tests/custom_columns/tests.py",
      [
        "CustomColumnsTests",
        "test_get_all_articles_for_an_author"
      ]
    ]
  ],
  "test_get_author_m2m_relation": [
    [
      "tests/custom_columns/tests.py",
      [
        "CustomColumnsTests",
        "test_get_author_m2m_relation"
      ]
    ]
  ],
  "test_author_querying": [
    [
      "tests/custom_columns/tests.py",
      [
        "CustomColumnsTests",
        "test_author_querying"
      ]
    ]
  ],
  "test_author_filtering": [
    [
      "tests/custom_columns/tests.py",
      [
        "CustomColumnsTests",
        "test_author_filtering"
      ]
    ]
  ],
  "test_author_get": [
    [
      "tests/custom_columns/tests.py",
      [
        "CustomColumnsTests",
        "test_author_get"
      ]
    ]
  ],
  "test_filter_on_nonexistent_field": [
    [
      "tests/custom_columns/tests.py",
      [
        "CustomColumnsTests",
        "test_filter_on_nonexistent_field"
      ]
    ]
  ],
  "test_author_get_attributes": [
    [
      "tests/custom_columns/tests.py",
      [
        "CustomColumnsTests",
        "test_author_get_attributes"
      ]
    ]
  ],
  "test_m2m_table": [
    [
      "tests/custom_columns/tests.py",
      [
        "CustomColumnsTests",
        "test_m2m_table"
      ]
    ]
  ],
  "test_custom_name_lookup": [
    [
      "tests/custom_lookups/tests.py",
      [
        "LookupTests",
        "test_custom_name_lookup"
      ]
    ]
  ],
  "test_custom_exact_lookup_none_rhs": [
    [
      "tests/custom_lookups/tests.py",
      [
        "LookupTests",
        "test_custom_exact_lookup_none_rhs"
      ]
    ]
  ],
  "test_basic_lookup": [
    [
      "tests/custom_lookups/tests.py",
      [
        "LookupTests",
        "test_basic_lookup"
      ]
    ]
  ],
  "test_birthdate_month": [
    [
      "tests/custom_lookups/tests.py",
      [
        "LookupTests",
        "test_birthdate_month"
      ]
    ]
  ],
  "test_div3_extract": [
    [
      "tests/custom_lookups/tests.py",
      [
        "LookupTests",
        "test_div3_extract"
      ]
    ]
  ],
  "test_foreignobject_lookup_registration": [
    [
      "tests/custom_lookups/tests.py",
      [
        "LookupTests",
        "test_foreignobject_lookup_registration"
      ]
    ]
  ],
  "test_lookups_caching": [
    [
      "tests/custom_lookups/tests.py",
      [
        "LookupTests",
        "test_lookups_caching"
      ]
    ]
  ],
  "test_bilateral_upper": [
    [
      "tests/custom_lookups/tests.py",
      [
        "BilateralTransformTests",
        "test_bilateral_upper"
      ]
    ]
  ],
  "test_bilateral_inner_qs": [
    [
      "tests/custom_lookups/tests.py",
      [
        "BilateralTransformTests",
        "test_bilateral_inner_qs"
      ]
    ]
  ],
  "test_bilateral_multi_value": [
    [
      "tests/custom_lookups/tests.py",
      [
        "BilateralTransformTests",
        "test_bilateral_multi_value"
      ]
    ]
  ],
  "test_div3_bilateral_extract": [
    [
      "tests/custom_lookups/tests.py",
      [
        "BilateralTransformTests",
        "test_div3_bilateral_extract"
      ]
    ]
  ],
  "test_bilateral_order": [
    [
      "tests/custom_lookups/tests.py",
      [
        "BilateralTransformTests",
        "test_bilateral_order"
      ]
    ]
  ],
  "test_transform_order_by": [
    [
      "tests/custom_lookups/tests.py",
      [
        "BilateralTransformTests",
        "test_transform_order_by"
      ]
    ]
  ],
  "test_bilateral_fexpr": [
    [
      "tests/custom_lookups/tests.py",
      [
        "BilateralTransformTests",
        "test_bilateral_fexpr"
      ]
    ]
  ],
  "test_datetime_output_field": [
    [
      "tests/custom_lookups/tests.py",
      [
        "DateTimeLookupTests",
        "test_datetime_output_field"
      ]
    ]
  ],
  "test_year_lte": [
    [
      "tests/custom_lookups/tests.py",
      [
        "YearLteTests",
        "test_year_lte"
      ]
    ]
  ],
  "test_year_lte_fexpr": [
    [
      "tests/custom_lookups/tests.py",
      [
        "YearLteTests",
        "test_year_lte_fexpr"
      ]
    ]
  ],
  "test_year_lte_sql": [
    [
      "tests/custom_lookups/tests.py",
      [
        "YearLteTests",
        "test_year_lte_sql"
      ]
    ]
  ],
  "test_postgres_year_exact": [
    [
      "tests/custom_lookups/tests.py",
      [
        "YearLteTests",
        "test_postgres_year_exact"
      ]
    ]
  ],
  "test_custom_implementation_year_exact": [
    [
      "tests/custom_lookups/tests.py",
      [
        "YearLteTests",
        "test_custom_implementation_year_exact"
      ]
    ]
  ],
  "test_call_order": [
    [
      "tests/custom_lookups/tests.py",
      [
        "LookupTransformCallOrderTests",
        "test_call_order"
      ]
    ]
  ],
  "test_overridden_get_lookup": [
    [
      "tests/custom_lookups/tests.py",
      [
        "CustomisedMethodsTests",
        "test_overridden_get_lookup"
      ]
    ]
  ],
  "test_overridden_get_transform": [
    [
      "tests/custom_lookups/tests.py",
      [
        "CustomisedMethodsTests",
        "test_overridden_get_transform"
      ]
    ]
  ],
  "test_overridden_get_lookup_chain": [
    [
      "tests/custom_lookups/tests.py",
      [
        "CustomisedMethodsTests",
        "test_overridden_get_lookup_chain"
      ]
    ]
  ],
  "test_overridden_get_transform_chain": [
    [
      "tests/custom_lookups/tests.py",
      [
        "CustomisedMethodsTests",
        "test_overridden_get_transform_chain"
      ]
    ]
  ],
  "test_subquery_usage": [
    [
      "tests/custom_lookups/tests.py",
      [
        "SubqueryTransformTests",
        "test_subquery_usage"
      ]
    ]
  ],
  "get_fun_people": [
    [
      "tests/custom_managers/models.py",
      [
        "PersonManager",
        "get_fun_people"
      ]
    ]
  ],
  "public_method": [
    [
      "tests/custom_managers/models.py",
      [
        "CustomQuerySet",
        "public_method"
      ]
    ]
  ],
  "_private_method": [
    [
      "tests/custom_managers/models.py",
      [
        "CustomQuerySet",
        "_private_method"
      ]
    ]
  ],
  "optout_public_method": [
    [
      "tests/custom_managers/models.py",
      [
        "CustomQuerySet",
        "optout_public_method"
      ]
    ]
  ],
  "_optin_private_method": [
    [
      "tests/custom_managers/models.py",
      [
        "CustomQuerySet",
        "_optin_private_method"
      ]
    ]
  ],
  "manager_only": [
    [
      "tests/custom_managers/models.py",
      [
        "BaseCustomManager",
        "manager_only"
      ]
    ]
  ],
  "test_custom_manager_basic": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests",
        "test_custom_manager_basic"
      ]
    ]
  ],
  "test_queryset_copied_to_default": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests",
        "test_queryset_copied_to_default"
      ]
    ]
  ],
  "test_manager_honors_queryset_only": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests",
        "test_manager_honors_queryset_only"
      ]
    ]
  ],
  "test_manager_use_queryset_methods": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests",
        "test_manager_use_queryset_methods"
      ]
    ]
  ],
  "test_init_args": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests",
        "test_init_args"
      ]
    ]
  ],
  "test_manager_attributes": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests",
        "test_manager_attributes"
      ]
    ]
  ],
  "test_queryset_and_manager": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests",
        "test_queryset_and_manager"
      ]
    ]
  ],
  "test_related_manager": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests",
        "test_related_manager"
      ]
    ],
    [
      "tests/multiple_database/tests.py",
      [
        "QueryTestCase",
        "test_related_manager"
      ]
    ]
  ],
  "test_no_objects": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests",
        "test_no_objects"
      ]
    ]
  ],
  "test_fk_related_manager": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests",
        "test_fk_related_manager"
      ]
    ]
  ],
  "test_gfk_related_manager": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests",
        "test_gfk_related_manager"
      ]
    ]
  ],
  "test_m2m_related_manager": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests",
        "test_m2m_related_manager"
      ]
    ]
  ],
  "test_removal_through_default_fk_related_manager": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests",
        "test_removal_through_default_fk_related_manager"
      ]
    ]
  ],
  "test_slow_removal_through_default_fk_related_manager": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests",
        "test_slow_removal_through_default_fk_related_manager"
      ]
    ]
  ],
  "test_removal_through_specified_fk_related_manager": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests",
        "test_removal_through_specified_fk_related_manager"
      ]
    ]
  ],
  "test_slow_removal_through_specified_fk_related_manager": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests",
        "test_slow_removal_through_specified_fk_related_manager"
      ]
    ]
  ],
  "test_removal_through_default_gfk_related_manager": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests",
        "test_removal_through_default_gfk_related_manager"
      ]
    ]
  ],
  "test_slow_removal_through_default_gfk_related_manager": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests",
        "test_slow_removal_through_default_gfk_related_manager"
      ]
    ]
  ],
  "test_removal_through_specified_gfk_related_manager": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests",
        "test_removal_through_specified_gfk_related_manager"
      ]
    ]
  ],
  "test_slow_removal_through_specified_gfk_related_manager": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests",
        "test_slow_removal_through_specified_gfk_related_manager"
      ]
    ]
  ],
  "test_removal_through_default_m2m_related_manager": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests",
        "test_removal_through_default_m2m_related_manager"
      ]
    ]
  ],
  "test_removal_through_specified_m2m_related_manager": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests",
        "test_removal_through_specified_m2m_related_manager"
      ]
    ]
  ],
  "test_deconstruct_default": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests",
        "test_deconstruct_default"
      ]
    ]
  ],
  "test_deconstruct_as_manager": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests",
        "test_deconstruct_as_manager"
      ]
    ]
  ],
  "test_deconstruct_from_queryset": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests",
        "test_deconstruct_from_queryset"
      ]
    ]
  ],
  "test_deconstruct_from_queryset_failing": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests",
        "test_deconstruct_from_queryset_failing"
      ]
    ]
  ],
  "test_abstract_model_with_custom_manager_name": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagerTests",
        "test_abstract_model_with_custom_manager_name"
      ]
    ]
  ],
  "test_managers": [
    [
      "tests/custom_managers/tests.py",
      [
        "TestCars",
        "test_managers"
      ]
    ],
    [
      "tests/managers_regress/tests.py",
      [
        "ManagersRegressionTests",
        "test_managers"
      ]
    ]
  ],
  "test_filtered_default_manager": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagersRegressTestCase",
        "test_filtered_default_manager"
      ]
    ]
  ],
  "test_refresh_from_db_when_default_manager_filters": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagersRegressTestCase",
        "test_refresh_from_db_when_default_manager_filters"
      ]
    ]
  ],
  "test_save_clears_annotations_from_base_manager": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagersRegressTestCase",
        "test_save_clears_annotations_from_base_manager"
      ]
    ]
  ],
  "test_delete_related_on_filtered_manager": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagersRegressTestCase",
        "test_delete_related_on_filtered_manager"
      ]
    ]
  ],
  "test_delete_one_to_one_manager": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagersRegressTestCase",
        "test_delete_one_to_one_manager"
      ]
    ]
  ],
  "test_queryset_with_custom_init": [
    [
      "tests/custom_managers/tests.py",
      [
        "CustomManagersRegressTestCase",
        "test_queryset_with_custom_init"
      ]
    ]
  ],
  "was_published_today": [
    [
      "tests/custom_methods/models.py",
      [
        "Article",
        "was_published_today"
      ]
    ]
  ],
  "articles_from_same_day_1": [
    [
      "tests/custom_methods/models.py",
      [
        "Article",
        "articles_from_same_day_1"
      ]
    ]
  ],
  "articles_from_same_day_2": [
    [
      "tests/custom_methods/models.py",
      [
        "Article",
        "articles_from_same_day_2"
      ]
    ]
  ],
  "test_custom_methods": [
    [
      "tests/custom_methods/tests.py",
      [
        "MethodsTests",
        "test_custom_methods"
      ]
    ]
  ],
  "state_backwards": [
    [
      "tests/custom_migration_operations/more_operations.py",
      [
        "TestOperation",
        "state_backwards"
      ]
    ],
    [
      "tests/custom_migration_operations/operations.py",
      [
        "TestOperation",
        "state_backwards"
      ]
    ]
  ],
  "test_querysets": [
    [
      "tests/custom_pk/tests.py",
      [
        "BasicCustomPKTests",
        "test_querysets"
      ]
    ]
  ],
  "test_querysets_related_name": [
    [
      "tests/custom_pk/tests.py",
      [
        "BasicCustomPKTests",
        "test_querysets_related_name"
      ]
    ]
  ],
  "test_querysets_relational": [
    [
      "tests/custom_pk/tests.py",
      [
        "BasicCustomPKTests",
        "test_querysets_relational"
      ]
    ]
  ],
  "test_get": [
    [
      "tests/custom_pk/tests.py",
      [
        "BasicCustomPKTests",
        "test_get"
      ]
    ],
    [
      "tests/defer/tests.py",
      [
        "DeferTests",
        "test_get"
      ]
    ],
    [
      "tests/generic_views/test_base.py",
      [
        "TemplateViewTest",
        "test_get"
      ]
    ],
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_get"
      ]
    ],
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests",
        "test_get"
      ]
    ],
    [
      "tests/messages_tests/test_cookie.py",
      [
        "CookieTests",
        "test_get"
      ]
    ],
    [
      "tests/messages_tests/test_fallback.py",
      [
        "FallbackTests",
        "test_get"
      ]
    ],
    [
      "tests/messages_tests/test_session.py",
      [
        "SessionTests",
        "test_get"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "PrefetchRelatedTests",
        "test_get"
      ]
    ],
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestMethodTests",
        "test_get"
      ]
    ]
  ],
  "test_pk_attributes": [
    [
      "tests/custom_pk/tests.py",
      [
        "BasicCustomPKTests",
        "test_pk_attributes"
      ]
    ]
  ],
  "test_in_bulk": [
    [
      "tests/custom_pk/tests.py",
      [
        "BasicCustomPKTests",
        "test_in_bulk"
      ]
    ],
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_in_bulk"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "NullableTest",
        "test_in_bulk"
      ]
    ]
  ],
  "test_custom_pk_create": [
    [
      "tests/custom_pk/tests.py",
      [
        "CustomPKTests",
        "test_custom_pk_create"
      ]
    ]
  ],
  "test_unicode_pk": [
    [
      "tests/custom_pk/tests.py",
      [
        "CustomPKTests",
        "test_unicode_pk"
      ]
    ]
  ],
  "test_unique_pk": [
    [
      "tests/custom_pk/tests.py",
      [
        "CustomPKTests",
        "test_unique_pk"
      ]
    ]
  ],
  "test_zero_non_autoincrement_pk": [
    [
      "tests/custom_pk/tests.py",
      [
        "CustomPKTests",
        "test_zero_non_autoincrement_pk"
      ]
    ]
  ],
  "test_custom_field_pk": [
    [
      "tests/custom_pk/tests.py",
      [
        "CustomPKTests",
        "test_custom_field_pk"
      ]
    ]
  ],
  "test_required_pk": [
    [
      "tests/custom_pk/tests.py",
      [
        "CustomPKTests",
        "test_required_pk"
      ]
    ]
  ],
  "test_boolean_type": [
    [
      "tests/datatypes/tests.py",
      [
        "DataTypesTestCase",
        "test_boolean_type"
      ]
    ]
  ],
  "test_date_type": [
    [
      "tests/datatypes/tests.py",
      [
        "DataTypesTestCase",
        "test_date_type"
      ]
    ]
  ],
  "test_time_field": [
    [
      "tests/datatypes/tests.py",
      [
        "DataTypesTestCase",
        "test_time_field"
      ]
    ],
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_time_field"
      ]
    ],
    [
      "tests/gis_tests/inspectapp/tests.py",
      [
        "OGRInspectTest",
        "test_time_field"
      ]
    ]
  ],
  "test_year_boundaries": [
    [
      "tests/datatypes/tests.py",
      [
        "DataTypesTestCase",
        "test_year_boundaries"
      ]
    ]
  ],
  "test_textfields_str": [
    [
      "tests/datatypes/tests.py",
      [
        "DataTypesTestCase",
        "test_textfields_str"
      ]
    ]
  ],
  "test_error_on_timezone": [
    [
      "tests/datatypes/tests.py",
      [
        "DataTypesTestCase",
        "test_error_on_timezone"
      ]
    ]
  ],
  "test_datefield_auto_now_add": [
    [
      "tests/datatypes/tests.py",
      [
        "DataTypesTestCase",
        "test_datefield_auto_now_add"
      ]
    ]
  ],
  "test_related_model_traverse": [
    [
      "tests/dates/tests.py",
      [
        "DatesTests",
        "test_related_model_traverse"
      ]
    ],
    [
      "tests/datetimes/tests.py",
      [
        "DateTimesTests",
        "test_related_model_traverse"
      ]
    ]
  ],
  "test_dates_fails_when_no_arguments_are_provided": [
    [
      "tests/dates/tests.py",
      [
        "DatesTests",
        "test_dates_fails_when_no_arguments_are_provided"
      ]
    ]
  ],
  "test_dates_fails_when_given_invalid_field_argument": [
    [
      "tests/dates/tests.py",
      [
        "DatesTests",
        "test_dates_fails_when_given_invalid_field_argument"
      ]
    ]
  ],
  "test_dates_fails_when_given_invalid_kind_argument": [
    [
      "tests/dates/tests.py",
      [
        "DatesTests",
        "test_dates_fails_when_given_invalid_kind_argument"
      ]
    ]
  ],
  "test_dates_fails_when_given_invalid_order_argument": [
    [
      "tests/dates/tests.py",
      [
        "DatesTests",
        "test_dates_fails_when_given_invalid_order_argument"
      ]
    ]
  ],
  "test_dates_trunc_datetime_fields": [
    [
      "tests/dates/tests.py",
      [
        "DatesTests",
        "test_dates_trunc_datetime_fields"
      ]
    ]
  ],
  "test_dates_avoid_datetime_cast": [
    [
      "tests/dates/tests.py",
      [
        "DatesTests",
        "test_dates_avoid_datetime_cast"
      ]
    ]
  ],
  "test_21432": [
    [
      "tests/datetimes/tests.py",
      [
        "DateTimesTests",
        "test_21432"
      ]
    ]
  ],
  "test_datetimes_ambiguous_and_invalid_times": [
    [
      "tests/datetimes/tests.py",
      [
        "DateTimesTests",
        "test_datetimes_ambiguous_and_invalid_times"
      ]
    ]
  ],
  "test_datetimes_returns_available_dates_for_given_scope_and_given_field": [
    [
      "tests/datetimes/tests.py",
      [
        "DateTimesTests",
        "test_datetimes_returns_available_dates_for_given_scope_and_given_field"
      ]
    ]
  ],
  "test_datetimes_has_lazy_iterator": [
    [
      "tests/datetimes/tests.py",
      [
        "DateTimesTests",
        "test_datetimes_has_lazy_iterator"
      ]
    ]
  ],
  "test_datetimes_disallows_date_fields": [
    [
      "tests/datetimes/tests.py",
      [
        "DateTimesTests",
        "test_datetimes_disallows_date_fields"
      ]
    ]
  ],
  "test_cast_from_value": [
    [
      "tests/db_functions/comparison/test_cast.py",
      [
        "CastTests",
        "test_cast_from_value"
      ]
    ]
  ],
  "test_cast_from_field": [
    [
      "tests/db_functions/comparison/test_cast.py",
      [
        "CastTests",
        "test_cast_from_field"
      ]
    ]
  ],
  "test_cast_to_char_field_without_max_length": [
    [
      "tests/db_functions/comparison/test_cast.py",
      [
        "CastTests",
        "test_cast_to_char_field_without_max_length"
      ]
    ]
  ],
  "test_cast_to_char_field_with_max_length": [
    [
      "tests/db_functions/comparison/test_cast.py",
      [
        "CastTests",
        "test_cast_to_char_field_with_max_length"
      ]
    ]
  ],
  "test_cast_to_decimal_field": [
    [
      "tests/db_functions/comparison/test_cast.py",
      [
        "CastTests",
        "test_cast_to_decimal_field"
      ]
    ]
  ],
  "test_cast_to_integer": [
    [
      "tests/db_functions/comparison/test_cast.py",
      [
        "CastTests",
        "test_cast_to_integer"
      ]
    ]
  ],
  "test_cast_from_db_datetime_to_date": [
    [
      "tests/db_functions/comparison/test_cast.py",
      [
        "CastTests",
        "test_cast_from_db_datetime_to_date"
      ]
    ]
  ],
  "test_cast_from_db_datetime_to_time": [
    [
      "tests/db_functions/comparison/test_cast.py",
      [
        "CastTests",
        "test_cast_from_db_datetime_to_time"
      ]
    ]
  ],
  "test_cast_from_db_date_to_datetime": [
    [
      "tests/db_functions/comparison/test_cast.py",
      [
        "CastTests",
        "test_cast_from_db_date_to_datetime"
      ]
    ]
  ],
  "test_cast_from_db_datetime_to_date_group_by": [
    [
      "tests/db_functions/comparison/test_cast.py",
      [
        "CastTests",
        "test_cast_from_db_datetime_to_date_group_by"
      ]
    ]
  ],
  "test_cast_from_python_to_date": [
    [
      "tests/db_functions/comparison/test_cast.py",
      [
        "CastTests",
        "test_cast_from_python_to_date"
      ]
    ]
  ],
  "test_cast_from_python_to_datetime": [
    [
      "tests/db_functions/comparison/test_cast.py",
      [
        "CastTests",
        "test_cast_from_python_to_datetime"
      ]
    ]
  ],
  "test_cast_from_python": [
    [
      "tests/db_functions/comparison/test_cast.py",
      [
        "CastTests",
        "test_cast_from_python"
      ]
    ]
  ],
  "test_expression_wrapped_with_parentheses_on_postgresql": [
    [
      "tests/db_functions/comparison/test_cast.py",
      [
        "CastTests",
        "test_expression_wrapped_with_parentheses_on_postgresql"
      ]
    ]
  ],
  "test_cast_to_text_field": [
    [
      "tests/db_functions/comparison/test_cast.py",
      [
        "CastTests",
        "test_cast_to_text_field"
      ]
    ]
  ],
  "test_gt_two_expressions": [
    [
      "tests/db_functions/comparison/test_coalesce.py",
      [
        "CoalesceTests",
        "test_gt_two_expressions"
      ]
    ],
    [
      "tests/db_functions/text/test_concat.py",
      [
        "ConcatTests",
        "test_gt_two_expressions"
      ]
    ]
  ],
  "test_mixed_values": [
    [
      "tests/db_functions/comparison/test_coalesce.py",
      [
        "CoalesceTests",
        "test_mixed_values"
      ]
    ]
  ],
  "test_ordering": [
    [
      "tests/db_functions/comparison/test_coalesce.py",
      [
        "CoalesceTests",
        "test_ordering"
      ]
    ],
    [
      "tests/db_functions/text/test_length.py",
      [
        "LengthTests",
        "test_ordering"
      ]
    ],
    [
      "tests/multiple_database/tests.py",
      [
        "QueryTestCase",
        "test_ordering"
      ]
    ],
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "test_ordering"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "Queries5Tests",
        "test_ordering"
      ]
    ]
  ],
  "test_ignores_null": [
    [
      "tests/db_functions/comparison/test_greatest.py",
      [
        "GreatestTests",
        "test_ignores_null"
      ]
    ],
    [
      "tests/db_functions/comparison/test_least.py",
      [
        "LeastTests",
        "test_ignores_null"
      ]
    ]
  ],
  "test_propagates_null": [
    [
      "tests/db_functions/comparison/test_greatest.py",
      [
        "GreatestTests",
        "test_propagates_null"
      ]
    ],
    [
      "tests/db_functions/comparison/test_least.py",
      [
        "LeastTests",
        "test_propagates_null"
      ]
    ]
  ],
  "test_coalesce_workaround": [
    [
      "tests/db_functions/comparison/test_greatest.py",
      [
        "GreatestTests",
        "test_coalesce_workaround"
      ]
    ],
    [
      "tests/db_functions/comparison/test_least.py",
      [
        "LeastTests",
        "test_coalesce_workaround"
      ]
    ]
  ],
  "test_coalesce_workaround_mysql": [
    [
      "tests/db_functions/comparison/test_greatest.py",
      [
        "GreatestTests",
        "test_coalesce_workaround_mysql"
      ]
    ],
    [
      "tests/db_functions/comparison/test_least.py",
      [
        "LeastTests",
        "test_coalesce_workaround_mysql"
      ]
    ]
  ],
  "test_all_null": [
    [
      "tests/db_functions/comparison/test_greatest.py",
      [
        "GreatestTests",
        "test_all_null"
      ]
    ],
    [
      "tests/db_functions/comparison/test_least.py",
      [
        "LeastTests",
        "test_all_null"
      ]
    ]
  ],
  "test_one_expressions": [
    [
      "tests/db_functions/comparison/test_greatest.py",
      [
        "GreatestTests",
        "test_one_expressions"
      ]
    ],
    [
      "tests/db_functions/comparison/test_least.py",
      [
        "LeastTests",
        "test_one_expressions"
      ]
    ]
  ],
  "test_update": [
    [
      "tests/db_functions/comparison/test_greatest.py",
      [
        "GreatestTests",
        "test_update"
      ]
    ],
    [
      "tests/db_functions/comparison/test_least.py",
      [
        "LeastTests",
        "test_update"
      ]
    ],
    [
      "tests/db_functions/text/test_replace.py",
      [
        "ReplaceTests",
        "test_update"
      ]
    ],
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_update"
      ]
    ],
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update"
      ]
    ],
    [
      "tests/get_or_create/tests.py",
      [
        "UpdateOrCreateTests",
        "test_update"
      ]
    ],
    [
      "tests/gis_tests/geoapp/test_regress.py",
      [
        "GeoRegressionTests",
        "test_update"
      ]
    ],
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_update"
      ]
    ],
    [
      "tests/update/tests.py",
      [
        "AdvancedTests",
        "test_update"
      ]
    ]
  ],
  "test_decimal_filter": [
    [
      "tests/db_functions/comparison/test_greatest.py",
      [
        "GreatestTests",
        "test_decimal_filter"
      ]
    ],
    [
      "tests/db_functions/comparison/test_least.py",
      [
        "LeastTests",
        "test_decimal_filter"
      ]
    ]
  ],
  "test_null_argument": [
    [
      "tests/db_functions/comparison/test_nullif.py",
      [
        "NullIfTests",
        "test_null_argument"
      ]
    ]
  ],
  "test_too_few_args": [
    [
      "tests/db_functions/comparison/test_nullif.py",
      [
        "NullIfTests",
        "test_too_few_args"
      ]
    ]
  ],
  "test_null_literal": [
    [
      "tests/db_functions/comparison/test_nullif.py",
      [
        "NullIfTests",
        "test_null_literal"
      ]
    ]
  ],
  "truncate": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "truncate_to",
        "truncate"
      ]
    ]
  ],
  "truncate_to": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "truncate_to"
      ]
    ]
  ],
  "test_extract_year_exact_lookup": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_extract_year_exact_lookup"
      ]
    ]
  ],
  "test_extract_year_greaterthan_lookup": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_extract_year_greaterthan_lookup"
      ]
    ]
  ],
  "test_extract_year_lessthan_lookup": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_extract_year_lessthan_lookup"
      ]
    ]
  ],
  "test_extract_func": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_extract_func"
      ]
    ]
  ],
  "test_extract_none": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_extract_none"
      ]
    ]
  ],
  "test_extract_duration": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_extract_duration"
      ]
    ]
  ],
  "test_extract_duration_without_native_duration_field": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_extract_duration_without_native_duration_field"
      ]
    ]
  ],
  "test_extract_duration_unsupported_lookups": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_extract_duration_unsupported_lookups"
      ]
    ]
  ],
  "test_extract_year_func": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_extract_year_func"
      ]
    ]
  ],
  "test_extract_iso_year_func": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_extract_iso_year_func"
      ]
    ]
  ],
  "test_extract_iso_year_func_boundaries": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_extract_iso_year_func_boundaries"
      ]
    ]
  ],
  "test_extract_month_func": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_extract_month_func"
      ]
    ]
  ],
  "test_extract_day_func": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_extract_day_func"
      ]
    ]
  ],
  "test_extract_week_func": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_extract_week_func"
      ]
    ]
  ],
  "test_extract_quarter_func": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_extract_quarter_func"
      ]
    ]
  ],
  "test_extract_quarter_func_boundaries": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_extract_quarter_func_boundaries"
      ]
    ]
  ],
  "test_extract_week_func_boundaries": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_extract_week_func_boundaries"
      ]
    ]
  ],
  "test_extract_weekday_func": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_extract_weekday_func"
      ]
    ]
  ],
  "test_extract_iso_weekday_func": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_extract_iso_weekday_func"
      ]
    ]
  ],
  "test_extract_hour_func": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_extract_hour_func"
      ]
    ]
  ],
  "test_extract_minute_func": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_extract_minute_func"
      ]
    ]
  ],
  "test_extract_second_func": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_extract_second_func"
      ]
    ]
  ],
  "test_datetime_kind": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_trunc_func",
        "test_datetime_kind"
      ]
    ],
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionWithTimeZoneTests",
        "test_trunc_func_with_timezone",
        "test_datetime_kind"
      ]
    ]
  ],
  "test_date_kind": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_trunc_func",
        "test_date_kind"
      ]
    ],
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionWithTimeZoneTests",
        "test_trunc_func_with_timezone",
        "test_date_kind"
      ]
    ]
  ],
  "test_time_kind": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_trunc_func",
        "test_time_kind"
      ]
    ],
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionWithTimeZoneTests",
        "test_trunc_func_with_timezone",
        "test_time_kind"
      ]
    ]
  ],
  "test_trunc_func": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_trunc_func"
      ]
    ]
  ],
  "test_trunc_none": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_trunc_none"
      ]
    ]
  ],
  "test_trunc_year_func": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_trunc_year_func"
      ]
    ]
  ],
  "test_trunc_quarter_func": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_trunc_quarter_func"
      ]
    ]
  ],
  "test_trunc_month_func": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_trunc_month_func"
      ]
    ]
  ],
  "test_trunc_week_func": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_trunc_week_func"
      ]
    ]
  ],
  "test_trunc_date_func": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_trunc_date_func"
      ]
    ]
  ],
  "test_trunc_date_none": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_trunc_date_none"
      ]
    ]
  ],
  "test_trunc_time_func": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_trunc_time_func"
      ]
    ]
  ],
  "test_trunc_time_none": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_trunc_time_none"
      ]
    ]
  ],
  "test_trunc_day_func": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_trunc_day_func"
      ]
    ]
  ],
  "test_trunc_hour_func": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_trunc_hour_func"
      ]
    ]
  ],
  "test_trunc_minute_func": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_trunc_minute_func"
      ]
    ]
  ],
  "test_trunc_second_func": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_trunc_second_func"
      ]
    ]
  ],
  "test_trunc_subquery_with_parameters": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionTests",
        "test_trunc_subquery_with_parameters"
      ]
    ]
  ],
  "test_extract_func_with_timezone": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionWithTimeZoneTests",
        "test_extract_func_with_timezone"
      ]
    ]
  ],
  "test_extract_func_explicit_timezone_priority": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionWithTimeZoneTests",
        "test_extract_func_explicit_timezone_priority"
      ]
    ]
  ],
  "test_trunc_timezone_applied_before_truncation": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionWithTimeZoneTests",
        "test_trunc_timezone_applied_before_truncation"
      ]
    ]
  ],
  "test_trunc_ambiguous_and_invalid_times": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionWithTimeZoneTests",
        "test_trunc_ambiguous_and_invalid_times"
      ]
    ]
  ],
  "test_trunc_func_with_timezone": [
    [
      "tests/db_functions/datetime/test_extract_trunc.py",
      [
        "DateFunctionWithTimeZoneTests",
        "test_trunc_func_with_timezone"
      ]
    ]
  ],
  "test_null": [
    [
      "tests/db_functions/math/test_abs.py",
      [
        "AbsTests",
        "test_null"
      ]
    ],
    [
      "tests/db_functions/math/test_acos.py",
      [
        "ACosTests",
        "test_null"
      ]
    ],
    [
      "tests/db_functions/math/test_asin.py",
      [
        "ASinTests",
        "test_null"
      ]
    ],
    [
      "tests/db_functions/math/test_atan.py",
      [
        "ATanTests",
        "test_null"
      ]
    ],
    [
      "tests/db_functions/math/test_atan2.py",
      [
        "ATan2Tests",
        "test_null"
      ]
    ],
    [
      "tests/db_functions/math/test_ceil.py",
      [
        "CeilTests",
        "test_null"
      ]
    ],
    [
      "tests/db_functions/math/test_cos.py",
      [
        "CosTests",
        "test_null"
      ]
    ],
    [
      "tests/db_functions/math/test_cot.py",
      [
        "CotTests",
        "test_null"
      ]
    ],
    [
      "tests/db_functions/math/test_degrees.py",
      [
        "DegreesTests",
        "test_null"
      ]
    ],
    [
      "tests/db_functions/math/test_exp.py",
      [
        "ExpTests",
        "test_null"
      ]
    ],
    [
      "tests/db_functions/math/test_floor.py",
      [
        "FloorTests",
        "test_null"
      ]
    ],
    [
      "tests/db_functions/math/test_ln.py",
      [
        "LnTests",
        "test_null"
      ]
    ],
    [
      "tests/db_functions/math/test_log.py",
      [
        "LogTests",
        "test_null"
      ]
    ],
    [
      "tests/db_functions/math/test_mod.py",
      [
        "ModTests",
        "test_null"
      ]
    ],
    [
      "tests/db_functions/math/test_power.py",
      [
        "PowerTests",
        "test_null"
      ]
    ],
    [
      "tests/db_functions/math/test_radians.py",
      [
        "RadiansTests",
        "test_null"
      ]
    ],
    [
      "tests/db_functions/math/test_round.py",
      [
        "RoundTests",
        "test_null"
      ]
    ],
    [
      "tests/db_functions/math/test_sign.py",
      [
        "SignTests",
        "test_null"
      ]
    ],
    [
      "tests/db_functions/math/test_sin.py",
      [
        "SinTests",
        "test_null"
      ]
    ],
    [
      "tests/db_functions/math/test_sqrt.py",
      [
        "SqrtTests",
        "test_null"
      ]
    ],
    [
      "tests/db_functions/math/test_tan.py",
      [
        "TanTests",
        "test_null"
      ]
    ],
    [
      "tests/db_functions/text/test_reverse.py",
      [
        "ReverseTests",
        "test_null"
      ]
    ],
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "GeometryFieldTest",
        "test_null"
      ]
    ],
    [
      "tests/model_fields/test_field_flags.py",
      [
        "FieldFlagsTests",
        "test_null"
      ]
    ],
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "SimpleTests",
        "test_null"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestSaveLoad",
        "test_null"
      ]
    ],
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestSaveLoad",
        "test_null"
      ]
    ]
  ],
  "test_decimal": [
    [
      "tests/db_functions/math/test_abs.py",
      [
        "AbsTests",
        "test_decimal"
      ]
    ],
    [
      "tests/db_functions/math/test_acos.py",
      [
        "ACosTests",
        "test_decimal"
      ]
    ],
    [
      "tests/db_functions/math/test_asin.py",
      [
        "ASinTests",
        "test_decimal"
      ]
    ],
    [
      "tests/db_functions/math/test_atan.py",
      [
        "ATanTests",
        "test_decimal"
      ]
    ],
    [
      "tests/db_functions/math/test_atan2.py",
      [
        "ATan2Tests",
        "test_decimal"
      ]
    ],
    [
      "tests/db_functions/math/test_ceil.py",
      [
        "CeilTests",
        "test_decimal"
      ]
    ],
    [
      "tests/db_functions/math/test_cos.py",
      [
        "CosTests",
        "test_decimal"
      ]
    ],
    [
      "tests/db_functions/math/test_cot.py",
      [
        "CotTests",
        "test_decimal"
      ]
    ],
    [
      "tests/db_functions/math/test_degrees.py",
      [
        "DegreesTests",
        "test_decimal"
      ]
    ],
    [
      "tests/db_functions/math/test_exp.py",
      [
        "ExpTests",
        "test_decimal"
      ]
    ],
    [
      "tests/db_functions/math/test_floor.py",
      [
        "FloorTests",
        "test_decimal"
      ]
    ],
    [
      "tests/db_functions/math/test_ln.py",
      [
        "LnTests",
        "test_decimal"
      ]
    ],
    [
      "tests/db_functions/math/test_log.py",
      [
        "LogTests",
        "test_decimal"
      ]
    ],
    [
      "tests/db_functions/math/test_mod.py",
      [
        "ModTests",
        "test_decimal"
      ]
    ],
    [
      "tests/db_functions/math/test_power.py",
      [
        "PowerTests",
        "test_decimal"
      ]
    ],
    [
      "tests/db_functions/math/test_radians.py",
      [
        "RadiansTests",
        "test_decimal"
      ]
    ],
    [
      "tests/db_functions/math/test_round.py",
      [
        "RoundTests",
        "test_decimal"
      ]
    ],
    [
      "tests/db_functions/math/test_sign.py",
      [
        "SignTests",
        "test_decimal"
      ]
    ],
    [
      "tests/db_functions/math/test_sin.py",
      [
        "SinTests",
        "test_decimal"
      ]
    ],
    [
      "tests/db_functions/math/test_sqrt.py",
      [
        "SqrtTests",
        "test_decimal"
      ]
    ],
    [
      "tests/db_functions/math/test_tan.py",
      [
        "TanTests",
        "test_decimal"
      ]
    ]
  ],
  "test_float": [
    [
      "tests/db_functions/math/test_abs.py",
      [
        "AbsTests",
        "test_float"
      ]
    ],
    [
      "tests/db_functions/math/test_acos.py",
      [
        "ACosTests",
        "test_float"
      ]
    ],
    [
      "tests/db_functions/math/test_asin.py",
      [
        "ASinTests",
        "test_float"
      ]
    ],
    [
      "tests/db_functions/math/test_atan.py",
      [
        "ATanTests",
        "test_float"
      ]
    ],
    [
      "tests/db_functions/math/test_atan2.py",
      [
        "ATan2Tests",
        "test_float"
      ]
    ],
    [
      "tests/db_functions/math/test_ceil.py",
      [
        "CeilTests",
        "test_float"
      ]
    ],
    [
      "tests/db_functions/math/test_cos.py",
      [
        "CosTests",
        "test_float"
      ]
    ],
    [
      "tests/db_functions/math/test_cot.py",
      [
        "CotTests",
        "test_float"
      ]
    ],
    [
      "tests/db_functions/math/test_degrees.py",
      [
        "DegreesTests",
        "test_float"
      ]
    ],
    [
      "tests/db_functions/math/test_exp.py",
      [
        "ExpTests",
        "test_float"
      ]
    ],
    [
      "tests/db_functions/math/test_floor.py",
      [
        "FloorTests",
        "test_float"
      ]
    ],
    [
      "tests/db_functions/math/test_ln.py",
      [
        "LnTests",
        "test_float"
      ]
    ],
    [
      "tests/db_functions/math/test_log.py",
      [
        "LogTests",
        "test_float"
      ]
    ],
    [
      "tests/db_functions/math/test_mod.py",
      [
        "ModTests",
        "test_float"
      ]
    ],
    [
      "tests/db_functions/math/test_power.py",
      [
        "PowerTests",
        "test_float"
      ]
    ],
    [
      "tests/db_functions/math/test_radians.py",
      [
        "RadiansTests",
        "test_float"
      ]
    ],
    [
      "tests/db_functions/math/test_round.py",
      [
        "RoundTests",
        "test_float"
      ]
    ],
    [
      "tests/db_functions/math/test_sign.py",
      [
        "SignTests",
        "test_float"
      ]
    ],
    [
      "tests/db_functions/math/test_sin.py",
      [
        "SinTests",
        "test_float"
      ]
    ],
    [
      "tests/db_functions/math/test_sqrt.py",
      [
        "SqrtTests",
        "test_float"
      ]
    ],
    [
      "tests/db_functions/math/test_tan.py",
      [
        "TanTests",
        "test_float"
      ]
    ]
  ],
  "test_integer": [
    [
      "tests/db_functions/math/test_abs.py",
      [
        "AbsTests",
        "test_integer"
      ]
    ],
    [
      "tests/db_functions/math/test_acos.py",
      [
        "ACosTests",
        "test_integer"
      ]
    ],
    [
      "tests/db_functions/math/test_asin.py",
      [
        "ASinTests",
        "test_integer"
      ]
    ],
    [
      "tests/db_functions/math/test_atan.py",
      [
        "ATanTests",
        "test_integer"
      ]
    ],
    [
      "tests/db_functions/math/test_atan2.py",
      [
        "ATan2Tests",
        "test_integer"
      ]
    ],
    [
      "tests/db_functions/math/test_ceil.py",
      [
        "CeilTests",
        "test_integer"
      ]
    ],
    [
      "tests/db_functions/math/test_cos.py",
      [
        "CosTests",
        "test_integer"
      ]
    ],
    [
      "tests/db_functions/math/test_cot.py",
      [
        "CotTests",
        "test_integer"
      ]
    ],
    [
      "tests/db_functions/math/test_degrees.py",
      [
        "DegreesTests",
        "test_integer"
      ]
    ],
    [
      "tests/db_functions/math/test_exp.py",
      [
        "ExpTests",
        "test_integer"
      ]
    ],
    [
      "tests/db_functions/math/test_floor.py",
      [
        "FloorTests",
        "test_integer"
      ]
    ],
    [
      "tests/db_functions/math/test_ln.py",
      [
        "LnTests",
        "test_integer"
      ]
    ],
    [
      "tests/db_functions/math/test_log.py",
      [
        "LogTests",
        "test_integer"
      ]
    ],
    [
      "tests/db_functions/math/test_mod.py",
      [
        "ModTests",
        "test_integer"
      ]
    ],
    [
      "tests/db_functions/math/test_power.py",
      [
        "PowerTests",
        "test_integer"
      ]
    ],
    [
      "tests/db_functions/math/test_radians.py",
      [
        "RadiansTests",
        "test_integer"
      ]
    ],
    [
      "tests/db_functions/math/test_round.py",
      [
        "RoundTests",
        "test_integer"
      ]
    ],
    [
      "tests/db_functions/math/test_sign.py",
      [
        "SignTests",
        "test_integer"
      ]
    ],
    [
      "tests/db_functions/math/test_sin.py",
      [
        "SinTests",
        "test_integer"
      ]
    ],
    [
      "tests/db_functions/math/test_sqrt.py",
      [
        "SqrtTests",
        "test_integer"
      ]
    ],
    [
      "tests/db_functions/math/test_tan.py",
      [
        "TanTests",
        "test_integer"
      ]
    ],
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSaveLoad",
        "test_integer"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_make_list.py",
      [
        "FunctionTests",
        "test_integer"
      ]
    ]
  ],
  "test_transform": [
    [
      "tests/db_functions/math/test_abs.py",
      [
        "AbsTests",
        "test_transform"
      ]
    ],
    [
      "tests/db_functions/math/test_acos.py",
      [
        "ACosTests",
        "test_transform"
      ]
    ],
    [
      "tests/db_functions/math/test_asin.py",
      [
        "ASinTests",
        "test_transform"
      ]
    ],
    [
      "tests/db_functions/math/test_atan.py",
      [
        "ATanTests",
        "test_transform"
      ]
    ],
    [
      "tests/db_functions/math/test_ceil.py",
      [
        "CeilTests",
        "test_transform"
      ]
    ],
    [
      "tests/db_functions/math/test_cos.py",
      [
        "CosTests",
        "test_transform"
      ]
    ],
    [
      "tests/db_functions/math/test_cot.py",
      [
        "CotTests",
        "test_transform"
      ]
    ],
    [
      "tests/db_functions/math/test_degrees.py",
      [
        "DegreesTests",
        "test_transform"
      ]
    ],
    [
      "tests/db_functions/math/test_exp.py",
      [
        "ExpTests",
        "test_transform"
      ]
    ],
    [
      "tests/db_functions/math/test_floor.py",
      [
        "FloorTests",
        "test_transform"
      ]
    ],
    [
      "tests/db_functions/math/test_ln.py",
      [
        "LnTests",
        "test_transform"
      ]
    ],
    [
      "tests/db_functions/math/test_radians.py",
      [
        "RadiansTests",
        "test_transform"
      ]
    ],
    [
      "tests/db_functions/math/test_round.py",
      [
        "RoundTests",
        "test_transform"
      ]
    ],
    [
      "tests/db_functions/math/test_sign.py",
      [
        "SignTests",
        "test_transform"
      ]
    ],
    [
      "tests/db_functions/math/test_sin.py",
      [
        "SinTests",
        "test_transform"
      ]
    ],
    [
      "tests/db_functions/math/test_sqrt.py",
      [
        "SqrtTests",
        "test_transform"
      ]
    ],
    [
      "tests/db_functions/math/test_tan.py",
      [
        "TanTests",
        "test_transform"
      ]
    ],
    [
      "tests/db_functions/text/test_chr.py",
      [
        "ChrTests",
        "test_transform"
      ]
    ],
    [
      "tests/db_functions/text/test_length.py",
      [
        "LengthTests",
        "test_transform"
      ]
    ],
    [
      "tests/db_functions/text/test_lower.py",
      [
        "LowerTests",
        "test_transform"
      ]
    ],
    [
      "tests/db_functions/text/test_md5.py",
      [
        "MD5Tests",
        "test_transform"
      ]
    ],
    [
      "tests/db_functions/text/test_ord.py",
      [
        "OrdTests",
        "test_transform"
      ]
    ],
    [
      "tests/db_functions/text/test_reverse.py",
      [
        "ReverseTests",
        "test_transform"
      ]
    ],
    [
      "tests/db_functions/text/test_sha1.py",
      [
        "SHA1Tests",
        "test_transform"
      ]
    ],
    [
      "tests/db_functions/text/test_sha224.py",
      [
        "SHA224Tests",
        "test_transform"
      ]
    ],
    [
      "tests/db_functions/text/test_sha256.py",
      [
        "SHA256Tests",
        "test_transform"
      ]
    ],
    [
      "tests/db_functions/text/test_sha384.py",
      [
        "SHA384Tests",
        "test_transform"
      ]
    ],
    [
      "tests/db_functions/text/test_sha512.py",
      [
        "SHA512Tests",
        "test_transform"
      ]
    ],
    [
      "tests/db_functions/text/test_upper.py",
      [
        "UpperTests",
        "test_transform"
      ]
    ],
    [
      "tests/distinct_on_fields/tests.py",
      [
        "DistinctOnTests",
        "test_transform"
      ]
    ],
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_transform"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_transform"
      ]
    ],
    [
      "tests/queries/test_query.py",
      [
        "TestQuery",
        "test_transform"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "AssertQuerysetEqualTests",
        "test_transform"
      ]
    ]
  ],
  "test_nested_function_ordering": [
    [
      "tests/db_functions/tests.py",
      [
        "FunctionTests",
        "test_nested_function_ordering"
      ]
    ]
  ],
  "test_func_transform_bilateral": [
    [
      "tests/db_functions/tests.py",
      [
        "FunctionTests",
        "test_func_transform_bilateral"
      ]
    ]
  ],
  "test_func_transform_bilateral_multivalue": [
    [
      "tests/db_functions/tests.py",
      [
        "FunctionTests",
        "test_func_transform_bilateral_multivalue"
      ]
    ]
  ],
  "test_function_as_filter": [
    [
      "tests/db_functions/tests.py",
      [
        "FunctionTests",
        "test_function_as_filter"
      ]
    ]
  ],
  "test_non_ascii": [
    [
      "tests/db_functions/text/test_chr.py",
      [
        "ChrTests",
        "test_non_ascii"
      ]
    ]
  ],
  "test_many": [
    [
      "tests/db_functions/text/test_concat.py",
      [
        "ConcatTests",
        "test_many"
      ]
    ]
  ],
  "test_mixed_char_text": [
    [
      "tests/db_functions/text/test_concat.py",
      [
        "ConcatTests",
        "test_mixed_char_text"
      ]
    ]
  ],
  "test_coalesce_idempotent": [
    [
      "tests/db_functions/text/test_concat.py",
      [
        "ConcatTests",
        "test_coalesce_idempotent"
      ]
    ]
  ],
  "test_sql_generation_idempotency": [
    [
      "tests/db_functions/text/test_concat.py",
      [
        "ConcatTests",
        "test_sql_generation_idempotency"
      ]
    ]
  ],
  "test_invalid_length": [
    [
      "tests/db_functions/text/test_left.py",
      [
        "LeftTests",
        "test_invalid_length"
      ]
    ],
    [
      "tests/db_functions/text/test_right.py",
      [
        "RightTests",
        "test_invalid_length"
      ]
    ],
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "BloomIndexTests",
        "test_invalid_length"
      ]
    ]
  ],
  "test_expressions": [
    [
      "tests/db_functions/text/test_left.py",
      [
        "LeftTests",
        "test_expressions"
      ]
    ],
    [
      "tests/db_functions/text/test_reverse.py",
      [
        "ReverseTests",
        "test_expressions"
      ]
    ],
    [
      "tests/db_functions/text/test_right.py",
      [
        "RightTests",
        "test_expressions"
      ]
    ],
    [
      "tests/db_functions/text/test_substr.py",
      [
        "SubstrTests",
        "test_expressions"
      ]
    ],
    [
      "tests/expressions/tests.py",
      [
        "ReprTests",
        "test_expressions"
      ]
    ]
  ],
  "test_num_args": [
    [
      "tests/db_functions/text/test_lower.py",
      [
        "LowerTests",
        "test_num_args"
      ]
    ]
  ],
  "test_pad": [
    [
      "tests/db_functions/text/test_pad.py",
      [
        "PadTests",
        "test_pad"
      ]
    ]
  ],
  "test_pad_negative_length": [
    [
      "tests/db_functions/text/test_pad.py",
      [
        "PadTests",
        "test_pad_negative_length"
      ]
    ]
  ],
  "test_combined_with_length": [
    [
      "tests/db_functions/text/test_pad.py",
      [
        "PadTests",
        "test_combined_with_length"
      ]
    ]
  ],
  "test_negative_number": [
    [
      "tests/db_functions/text/test_repeat.py",
      [
        "RepeatTests",
        "test_negative_number"
      ]
    ]
  ],
  "test_replace_with_empty_string": [
    [
      "tests/db_functions/text/test_replace.py",
      [
        "ReplaceTests",
        "test_replace_with_empty_string"
      ]
    ]
  ],
  "test_case_sensitive": [
    [
      "tests/db_functions/text/test_replace.py",
      [
        "ReplaceTests",
        "test_case_sensitive"
      ]
    ]
  ],
  "test_replace_expression": [
    [
      "tests/db_functions/text/test_replace.py",
      [
        "ReplaceTests",
        "test_replace_expression"
      ]
    ]
  ],
  "test_replace_with_default_arg": [
    [
      "tests/db_functions/text/test_replace.py",
      [
        "ReplaceTests",
        "test_replace_with_default_arg"
      ]
    ]
  ],
  "test_unsupported": [
    [
      "tests/db_functions/text/test_sha224.py",
      [
        "SHA224Tests",
        "test_unsupported"
      ]
    ]
  ],
  "test_annotate_charfield": [
    [
      "tests/db_functions/text/test_strindex.py",
      [
        "StrIndexTests",
        "test_annotate_charfield"
      ]
    ]
  ],
  "test_annotate_textfield": [
    [
      "tests/db_functions/text/test_strindex.py",
      [
        "StrIndexTests",
        "test_annotate_textfield"
      ]
    ]
  ],
  "test_order_by": [
    [
      "tests/db_functions/text/test_strindex.py",
      [
        "StrIndexTests",
        "test_order_by"
      ]
    ],
    [
      "tests/reserved_names/tests.py",
      [
        "ReservedNameTests",
        "test_order_by"
      ]
    ]
  ],
  "test_unicode_values": [
    [
      "tests/db_functions/text/test_strindex.py",
      [
        "StrIndexTests",
        "test_unicode_values"
      ]
    ],
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_unicode_values"
      ]
    ]
  ],
  "test_start": [
    [
      "tests/db_functions/text/test_substr.py",
      [
        "SubstrTests",
        "test_start"
      ]
    ]
  ],
  "test_pos_gt_zero": [
    [
      "tests/db_functions/text/test_substr.py",
      [
        "SubstrTests",
        "test_pos_gt_zero"
      ]
    ]
  ],
  "test_trim": [
    [
      "tests/db_functions/text/test_trim.py",
      [
        "TrimTests",
        "test_trim"
      ]
    ]
  ],
  "test_trim_transform": [
    [
      "tests/db_functions/text/test_trim.py",
      [
        "TrimTests",
        "test_trim_transform"
      ]
    ]
  ],
  "test_nth_negative_nth_value": [
    [
      "tests/db_functions/window/test_validation.py",
      [
        "ValidationTests",
        "test_nth_negative_nth_value"
      ]
    ]
  ],
  "test_nth_null_expression": [
    [
      "tests/db_functions/window/test_validation.py",
      [
        "ValidationTests",
        "test_nth_null_expression"
      ]
    ]
  ],
  "test_lag_negative_offset": [
    [
      "tests/db_functions/window/test_validation.py",
      [
        "ValidationTests",
        "test_lag_negative_offset"
      ]
    ]
  ],
  "test_lead_negative_offset": [
    [
      "tests/db_functions/window/test_validation.py",
      [
        "ValidationTests",
        "test_lead_negative_offset"
      ]
    ]
  ],
  "test_null_source_lead": [
    [
      "tests/db_functions/window/test_validation.py",
      [
        "ValidationTests",
        "test_null_source_lead"
      ]
    ]
  ],
  "test_null_source_lag": [
    [
      "tests/db_functions/window/test_validation.py",
      [
        "ValidationTests",
        "test_null_source_lag"
      ]
    ]
  ],
  "test_negative_num_buckets_ntile": [
    [
      "tests/db_functions/window/test_validation.py",
      [
        "ValidationTests",
        "test_negative_num_buckets_ntile"
      ]
    ]
  ],
  "test_typeCasts": [
    [
      "tests/db_typecasts/tests.py",
      [
        "DBTypeCasts",
        "test_typeCasts"
      ]
    ]
  ],
  "test_connection_handler_no_databases": [
    [
      "tests/db_utils/tests.py",
      [
        "ConnectionHandlerTests",
        "test_connection_handler_no_databases"
      ]
    ]
  ],
  "assertImproperlyConfigured": [
    [
      "tests/db_utils/tests.py",
      [
        "ConnectionHandlerTests",
        "assertImproperlyConfigured"
      ]
    ]
  ],
  "test_no_default_database": [
    [
      "tests/db_utils/tests.py",
      [
        "ConnectionHandlerTests",
        "test_no_default_database"
      ]
    ]
  ],
  "test_reraising_backend_specific_database_exception": [
    [
      "tests/db_utils/tests.py",
      [
        "DatabaseErrorWrapperTests",
        "test_reraising_backend_specific_database_exception"
      ]
    ]
  ],
  "test_load_backend_invalid_name": [
    [
      "tests/db_utils/tests.py",
      [
        "LoadBackendTests",
        "test_load_backend_invalid_name"
      ]
    ]
  ],
  "test_fails_with_keyerror_on_incomplete_config": [
    [
      "tests/dbshell/test_mysql.py",
      [
        "MySqlDbshellCommandTestCase",
        "test_fails_with_keyerror_on_incomplete_config"
      ]
    ]
  ],
  "test_basic_params_specified_in_settings": [
    [
      "tests/dbshell/test_mysql.py",
      [
        "MySqlDbshellCommandTestCase",
        "test_basic_params_specified_in_settings"
      ]
    ]
  ],
  "test_options_override_settings_proper_values": [
    [
      "tests/dbshell/test_mysql.py",
      [
        "MySqlDbshellCommandTestCase",
        "test_options_override_settings_proper_values"
      ]
    ]
  ],
  "test_can_connect_using_sockets": [
    [
      "tests/dbshell/test_mysql.py",
      [
        "MySqlDbshellCommandTestCase",
        "test_can_connect_using_sockets"
      ]
    ]
  ],
  "test_ssl_certificate_is_added": [
    [
      "tests/dbshell/test_mysql.py",
      [
        "MySqlDbshellCommandTestCase",
        "test_ssl_certificate_is_added"
      ]
    ]
  ],
  "test_parameters": [
    [
      "tests/dbshell/test_mysql.py",
      [
        "MySqlDbshellCommandTestCase",
        "test_parameters"
      ]
    ],
    [
      "tests/dbshell/test_oracle.py",
      [
        "OracleDbshellTests",
        "test_parameters"
      ]
    ],
    [
      "tests/dbshell/test_postgresql.py",
      [
        "PostgreSqlDbshellCommandTestCase",
        "test_parameters"
      ]
    ],
    [
      "tests/dbshell/test_sqlite.py",
      [
        "SqliteDbshellCommandTestCase",
        "test_parameters"
      ]
    ]
  ],
  "get_command_line_arguments": [
    [
      "tests/dbshell/test_mysql.py",
      [
        "MySqlDbshellCommandTestCase",
        "get_command_line_arguments"
      ]
    ]
  ],
  "_run_dbshell": [
    [
      "tests/dbshell/test_oracle.py",
      [
        "OracleDbshellTests",
        "_run_dbshell"
      ]
    ],
    [
      "tests/dbshell/test_sqlite.py",
      [
        "SqliteDbshellCommandTestCase",
        "_run_dbshell"
      ]
    ]
  ],
  "test_without_rlwrap": [
    [
      "tests/dbshell/test_oracle.py",
      [
        "OracleDbshellTests",
        "test_without_rlwrap"
      ]
    ]
  ],
  "test_with_rlwrap": [
    [
      "tests/dbshell/test_oracle.py",
      [
        "OracleDbshellTests",
        "test_with_rlwrap"
      ]
    ]
  ],
  "_run_it": [
    [
      "tests/dbshell/test_postgresql.py",
      [
        "PostgreSqlDbshellCommandTestCase",
        "_run_it"
      ]
    ]
  ],
  "test_nopass": [
    [
      "tests/dbshell/test_postgresql.py",
      [
        "PostgreSqlDbshellCommandTestCase",
        "test_nopass"
      ]
    ]
  ],
  "test_ssl_certificate": [
    [
      "tests/dbshell/test_postgresql.py",
      [
        "PostgreSqlDbshellCommandTestCase",
        "test_ssl_certificate"
      ]
    ]
  ],
  "test_column": [
    [
      "tests/dbshell/test_postgresql.py",
      [
        "PostgreSqlDbshellCommandTestCase",
        "test_column"
      ]
    ]
  ],
  "test_accent": [
    [
      "tests/dbshell/test_postgresql.py",
      [
        "PostgreSqlDbshellCommandTestCase",
        "test_accent"
      ]
    ]
  ],
  "test_sigint_handler": [
    [
      "tests/dbshell/test_postgresql.py",
      [
        "PostgreSqlDbshellCommandTestCase",
        "test_sigint_handler"
      ]
    ]
  ],
  "test_path_name": [
    [
      "tests/dbshell/test_sqlite.py",
      [
        "SqliteDbshellCommandTestCase",
        "test_path_name"
      ]
    ]
  ],
  "test_command_missing": [
    [
      "tests/dbshell/tests.py",
      [
        "DbshellCommandTestCase",
        "test_command_missing"
      ]
    ]
  ],
  "fully_decorated": [
    [
      "tests/decorators/tests.py",
      [
        "fully_decorated"
      ]
    ]
  ],
  "compose": [
    [
      "tests/decorators/tests.py",
      [
        "compose"
      ]
    ]
  ],
  "test1": [
    [
      "tests/decorators/tests.py",
      [
        "DecoratorsTest",
        "test_user_passes_test_composition",
        "test1"
      ]
    ]
  ],
  "test2": [
    [
      "tests/decorators/tests.py",
      [
        "DecoratorsTest",
        "test_user_passes_test_composition",
        "test2"
      ]
    ]
  ],
  "callback": [
    [
      "tests/decorators/tests.py",
      [
        "DecoratorsTest",
        "test_user_passes_test_composition",
        "callback"
      ]
    ],
    [
      "tests/migrations/test_executor.py",
      [
        "ExecutorTests",
        "test_process_callback",
        "callback"
      ]
    ]
  ],
  "test_user_passes_test_composition": [
    [
      "tests/decorators/tests.py",
      [
        "DecoratorsTest",
        "test_user_passes_test_composition"
      ]
    ]
  ],
  "test_cache_page": [
    [
      "tests/decorators/tests.py",
      [
        "DecoratorsTest",
        "test_cache_page"
      ]
    ]
  ],
  "test_require_safe_accepts_only_safe_methods": [
    [
      "tests/decorators/tests.py",
      [
        "DecoratorsTest",
        "test_require_safe_accepts_only_safe_methods"
      ]
    ]
  ],
  "simple_dec": [
    [
      "tests/decorators/tests.py",
      [
        "simple_dec"
      ]
    ]
  ],
  "myattr_dec": [
    [
      "tests/decorators/tests.py",
      [
        "myattr_dec"
      ]
    ]
  ],
  "myattr2_dec": [
    [
      "tests/decorators/tests.py",
      [
        "myattr2_dec"
      ]
    ]
  ],
  "test_preserve_signature": [
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_preserve_signature"
      ]
    ]
  ],
  "func_1": [
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_preserve_attributes",
        "func_1"
      ]
    ]
  ],
  "func_2": [
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_preserve_attributes",
        "func_2"
      ]
    ]
  ],
  "method": [
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_preserve_attributes",
        "TestPlain",
        "method"
      ]
    ],
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_preserve_attributes",
        "TestMethodAndClass",
        "method"
      ]
    ],
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_preserve_attributes",
        "TestFunctionIterable",
        "method"
      ]
    ],
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_preserve_attributes",
        "TestMethodIterable",
        "method"
      ]
    ],
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_descriptors",
        "Test",
        "method"
      ]
    ],
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_tuple_of_decorators",
        "TestFirst",
        "method"
      ]
    ],
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_tuple_of_decorators",
        "TestSecond",
        "method"
      ]
    ],
    [
      "tests/template_tests/utils.py",
      [
        "SomeClass",
        "method"
      ]
    ],
    [
      "tests/template_tests/utils.py",
      [
        "OtherClass",
        "method"
      ]
    ],
    [
      "tests/view_tests/views.py",
      [
        "Klass",
        "method"
      ]
    ]
  ],
  "test_preserve_attributes": [
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_preserve_attributes"
      ]
    ]
  ],
  "test_new_attribute": [
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_new_attribute"
      ]
    ]
  ],
  "test_bad_iterable": [
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_bad_iterable"
      ]
    ]
  ],
  "test_argumented": [
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_argumented"
      ]
    ]
  ],
  "original_dec": [
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_descriptors",
        "original_dec"
      ]
    ]
  ],
  "test_descriptors": [
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_descriptors"
      ]
    ]
  ],
  "test_class_decoration": [
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_class_decoration"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "IsolatedAppsTests",
        "test_class_decoration"
      ]
    ]
  ],
  "add_question_mark": [
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_tuple_of_decorators",
        "add_question_mark"
      ]
    ]
  ],
  "add_exclamation_mark": [
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_tuple_of_decorators",
        "add_exclamation_mark"
      ]
    ]
  ],
  "test_tuple_of_decorators": [
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_tuple_of_decorators"
      ]
    ]
  ],
  "test_invalid_non_callable_attribute_decoration": [
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_invalid_non_callable_attribute_decoration"
      ]
    ]
  ],
  "test_invalid_method_name_to_decorate": [
    [
      "tests/decorators/tests.py",
      [
        "MethodDecoratorTests",
        "test_invalid_method_name_to_decorate"
      ]
    ]
  ],
  "test_deny_decorator": [
    [
      "tests/decorators/tests.py",
      [
        "XFrameOptionsDecoratorsTests",
        "test_deny_decorator"
      ]
    ]
  ],
  "test_sameorigin_decorator": [
    [
      "tests/decorators/tests.py",
      [
        "XFrameOptionsDecoratorsTests",
        "test_sameorigin_decorator"
      ]
    ]
  ],
  "test_exempt_decorator": [
    [
      "tests/decorators/tests.py",
      [
        "XFrameOptionsDecoratorsTests",
        "test_exempt_decorator"
      ]
    ]
  ],
  "test_never_cache_decorator": [
    [
      "tests/decorators/tests.py",
      [
        "NeverCacheDecoratorTest",
        "test_never_cache_decorator"
      ]
    ]
  ],
  "assert_delayed": [
    [
      "tests/defer/tests.py",
      [
        "AssertionMixin",
        "assert_delayed"
      ]
    ]
  ],
  "test_defer": [
    [
      "tests/defer/tests.py",
      [
        "DeferTests",
        "test_defer"
      ]
    ],
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_defer"
      ]
    ],
    [
      "tests/from_db_value/tests.py",
      [
        "FromDBValueTest",
        "test_defer"
      ]
    ],
    [
      "tests/model_fields/test_filefield.py",
      [
        "FileFieldTests",
        "test_defer"
      ]
    ],
    [
      "tests/model_fields/test_imagefield.py",
      [
        "ImageFieldTests",
        "test_defer"
      ]
    ]
  ],
  "test_only": [
    [
      "tests/defer/tests.py",
      [
        "DeferTests",
        "test_only"
      ]
    ]
  ],
  "test_defer_only_chaining": [
    [
      "tests/defer/tests.py",
      [
        "DeferTests",
        "test_defer_only_chaining"
      ]
    ]
  ],
  "test_defer_on_an_already_deferred_field": [
    [
      "tests/defer/tests.py",
      [
        "DeferTests",
        "test_defer_on_an_already_deferred_field"
      ]
    ]
  ],
  "test_defer_none_to_clear_deferred_set": [
    [
      "tests/defer/tests.py",
      [
        "DeferTests",
        "test_defer_none_to_clear_deferred_set"
      ]
    ]
  ],
  "test_only_none_raises_error": [
    [
      "tests/defer/tests.py",
      [
        "DeferTests",
        "test_only_none_raises_error"
      ]
    ]
  ],
  "test_defer_extra": [
    [
      "tests/defer/tests.py",
      [
        "DeferTests",
        "test_defer_extra"
      ]
    ]
  ],
  "test_defer_values_does_not_defer": [
    [
      "tests/defer/tests.py",
      [
        "DeferTests",
        "test_defer_values_does_not_defer"
      ]
    ]
  ],
  "test_only_values_does_not_defer": [
    [
      "tests/defer/tests.py",
      [
        "DeferTests",
        "test_only_values_does_not_defer"
      ]
    ]
  ],
  "test_defer_with_select_related": [
    [
      "tests/defer/tests.py",
      [
        "DeferTests",
        "test_defer_with_select_related"
      ]
    ],
    [
      "tests/defer_regress/tests.py",
      [
        "DeferRegressionTest",
        "test_defer_with_select_related"
      ]
    ]
  ],
  "test_only_with_select_related": [
    [
      "tests/defer/tests.py",
      [
        "DeferTests",
        "test_only_with_select_related"
      ]
    ],
    [
      "tests/defer_regress/tests.py",
      [
        "DeferRegressionTest",
        "test_only_with_select_related"
      ]
    ]
  ],
  "test_defer_select_related_raises_invalid_query": [
    [
      "tests/defer/tests.py",
      [
        "DeferTests",
        "test_defer_select_related_raises_invalid_query"
      ]
    ]
  ],
  "test_only_select_related_raises_invalid_query": [
    [
      "tests/defer/tests.py",
      [
        "DeferTests",
        "test_only_select_related_raises_invalid_query"
      ]
    ]
  ],
  "test_defer_foreign_keys_are_deferred_and_not_traversed": [
    [
      "tests/defer/tests.py",
      [
        "DeferTests",
        "test_defer_foreign_keys_are_deferred_and_not_traversed"
      ]
    ]
  ],
  "test_saving_object_with_deferred_field": [
    [
      "tests/defer/tests.py",
      [
        "DeferTests",
        "test_saving_object_with_deferred_field"
      ]
    ]
  ],
  "test_defer_baseclass_when_subclass_has_no_added_fields": [
    [
      "tests/defer/tests.py",
      [
        "DeferTests",
        "test_defer_baseclass_when_subclass_has_no_added_fields"
      ]
    ]
  ],
  "test_only_baseclass_when_subclass_has_no_added_fields": [
    [
      "tests/defer/tests.py",
      [
        "DeferTests",
        "test_only_baseclass_when_subclass_has_no_added_fields"
      ]
    ]
  ],
  "test_defer_baseclass_when_subclass_has_added_field": [
    [
      "tests/defer/tests.py",
      [
        "BigChildDeferTests",
        "test_defer_baseclass_when_subclass_has_added_field"
      ]
    ]
  ],
  "test_defer_subclass": [
    [
      "tests/defer/tests.py",
      [
        "BigChildDeferTests",
        "test_defer_subclass"
      ]
    ]
  ],
  "test_defer_subclass_both": [
    [
      "tests/defer/tests.py",
      [
        "BigChildDeferTests",
        "test_defer_subclass_both"
      ]
    ]
  ],
  "test_only_baseclass_when_subclass_has_added_field": [
    [
      "tests/defer/tests.py",
      [
        "BigChildDeferTests",
        "test_only_baseclass_when_subclass_has_added_field"
      ]
    ]
  ],
  "test_only_subclass": [
    [
      "tests/defer/tests.py",
      [
        "BigChildDeferTests",
        "test_only_subclass"
      ]
    ]
  ],
  "test_defer_proxy": [
    [
      "tests/defer/tests.py",
      [
        "TestDefer2",
        "test_defer_proxy"
      ]
    ]
  ],
  "test_defer_inheritance_pk_chaining": [
    [
      "tests/defer/tests.py",
      [
        "TestDefer2",
        "test_defer_inheritance_pk_chaining"
      ]
    ]
  ],
  "test_refresh_not_loading_deferred_fields": [
    [
      "tests/defer/tests.py",
      [
        "TestDefer2",
        "test_refresh_not_loading_deferred_fields"
      ]
    ]
  ],
  "test_custom_refresh_on_deferred_loading": [
    [
      "tests/defer/tests.py",
      [
        "TestDefer2",
        "test_custom_refresh_on_deferred_loading"
      ]
    ]
  ],
  "test_ticket_12163": [
    [
      "tests/defer_regress/tests.py",
      [
        "DeferRegressionTest",
        "test_ticket_12163"
      ]
    ]
  ],
  "test_ticket_16409": [
    [
      "tests/defer_regress/tests.py",
      [
        "DeferRegressionTest",
        "test_ticket_16409"
      ]
    ]
  ],
  "test_ticket_23270": [
    [
      "tests/defer_regress/tests.py",
      [
        "DeferRegressionTest",
        "test_ticket_23270"
      ]
    ]
  ],
  "test_only_and_defer_usage_on_proxy_models": [
    [
      "tests/defer_regress/tests.py",
      [
        "DeferRegressionTest",
        "test_only_and_defer_usage_on_proxy_models"
      ]
    ]
  ],
  "test_resolve_columns": [
    [
      "tests/defer_regress/tests.py",
      [
        "DeferRegressionTest",
        "test_resolve_columns"
      ]
    ]
  ],
  "test_reverse_one_to_one_relations": [
    [
      "tests/defer_regress/tests.py",
      [
        "DeferRegressionTest",
        "test_reverse_one_to_one_relations"
      ]
    ]
  ],
  "test_proxy_model_defer_with_select_related": [
    [
      "tests/defer_regress/tests.py",
      [
        "DeferRegressionTest",
        "test_proxy_model_defer_with_select_related"
      ]
    ]
  ],
  "test_defer_annotate_select_related": [
    [
      "tests/defer_regress/tests.py",
      [
        "DeferAnnotateSelectRelatedTest",
        "test_defer_annotate_select_related"
      ]
    ]
  ],
  "pre_delete_receiver": [
    [
      "tests/defer_regress/tests.py",
      [
        "DeferDeletionSignalsTests",
        "pre_delete_receiver"
      ]
    ]
  ],
  "post_delete_receiver": [
    [
      "tests/defer_regress/tests.py",
      [
        "DeferDeletionSignalsTests",
        "post_delete_receiver"
      ]
    ]
  ],
  "test_delete_defered_model": [
    [
      "tests/defer_regress/tests.py",
      [
        "DeferDeletionSignalsTests",
        "test_delete_defered_model"
      ]
    ]
  ],
  "test_delete_defered_proxy_model": [
    [
      "tests/defer_regress/tests.py",
      [
        "DeferDeletionSignalsTests",
        "test_delete_defered_proxy_model"
      ]
    ]
  ],
  "get_default_r": [
    [
      "tests/delete/models.py",
      [
        "get_default_r"
      ]
    ]
  ],
  "create_a": [
    [
      "tests/delete/models.py",
      [
        "create_a"
      ]
    ]
  ],
  "test_auto": [
    [
      "tests/delete/tests.py",
      [
        "OnDeleteTests",
        "test_auto"
      ]
    ]
  ],
  "test_non_callable": [
    [
      "tests/delete/tests.py",
      [
        "OnDeleteTests",
        "test_non_callable"
      ]
    ]
  ],
  "test_auto_nullable": [
    [
      "tests/delete/tests.py",
      [
        "OnDeleteTests",
        "test_auto_nullable"
      ]
    ]
  ],
  "test_setvalue": [
    [
      "tests/delete/tests.py",
      [
        "OnDeleteTests",
        "test_setvalue"
      ]
    ]
  ],
  "test_setnull": [
    [
      "tests/delete/tests.py",
      [
        "OnDeleteTests",
        "test_setnull"
      ]
    ]
  ],
  "test_setdefault": [
    [
      "tests/delete/tests.py",
      [
        "OnDeleteTests",
        "test_setdefault"
      ]
    ],
    [
      "tests/responses/tests.py",
      [
        "HttpResponseBaseTests",
        "test_setdefault"
      ]
    ],
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_setdefault"
      ]
    ],
    [
      "tests/template_tests/test_context.py",
      [
        "ContextTests",
        "test_setdefault"
      ]
    ]
  ],
  "test_setdefault_none": [
    [
      "tests/delete/tests.py",
      [
        "OnDeleteTests",
        "test_setdefault_none"
      ]
    ]
  ],
  "test_cascade": [
    [
      "tests/delete/tests.py",
      [
        "OnDeleteTests",
        "test_cascade"
      ]
    ]
  ],
  "test_cascade_nullable": [
    [
      "tests/delete/tests.py",
      [
        "OnDeleteTests",
        "test_cascade_nullable"
      ]
    ]
  ],
  "test_protect": [
    [
      "tests/delete/tests.py",
      [
        "OnDeleteTests",
        "test_protect"
      ]
    ]
  ],
  "test_protect_multiple": [
    [
      "tests/delete/tests.py",
      [
        "OnDeleteTests",
        "test_protect_multiple"
      ]
    ]
  ],
  "test_protect_path": [
    [
      "tests/delete/tests.py",
      [
        "OnDeleteTests",
        "test_protect_path"
      ]
    ]
  ],
  "test_do_nothing": [
    [
      "tests/delete/tests.py",
      [
        "OnDeleteTests",
        "test_do_nothing"
      ]
    ]
  ],
  "test_do_nothing_qscount": [
    [
      "tests/delete/tests.py",
      [
        "OnDeleteTests",
        "test_do_nothing_qscount"
      ]
    ]
  ],
  "test_inheritance_cascade_up": [
    [
      "tests/delete/tests.py",
      [
        "OnDeleteTests",
        "test_inheritance_cascade_up"
      ]
    ]
  ],
  "test_inheritance_cascade_down": [
    [
      "tests/delete/tests.py",
      [
        "OnDeleteTests",
        "test_inheritance_cascade_down"
      ]
    ]
  ],
  "test_cascade_from_child": [
    [
      "tests/delete/tests.py",
      [
        "OnDeleteTests",
        "test_cascade_from_child"
      ]
    ]
  ],
  "test_cascade_from_parent": [
    [
      "tests/delete/tests.py",
      [
        "OnDeleteTests",
        "test_cascade_from_parent"
      ]
    ]
  ],
  "test_setnull_from_child": [
    [
      "tests/delete/tests.py",
      [
        "OnDeleteTests",
        "test_setnull_from_child"
      ]
    ]
  ],
  "test_setnull_from_parent": [
    [
      "tests/delete/tests.py",
      [
        "OnDeleteTests",
        "test_setnull_from_parent"
      ]
    ]
  ],
  "test_o2o_setnull": [
    [
      "tests/delete/tests.py",
      [
        "OnDeleteTests",
        "test_o2o_setnull"
      ]
    ]
  ],
  "test_restrict": [
    [
      "tests/delete/tests.py",
      [
        "OnDeleteTests",
        "test_restrict"
      ]
    ]
  ],
  "test_restrict_multiple": [
    [
      "tests/delete/tests.py",
      [
        "OnDeleteTests",
        "test_restrict_multiple"
      ]
    ]
  ],
  "test_restrict_path_cascade_indirect": [
    [
      "tests/delete/tests.py",
      [
        "OnDeleteTests",
        "test_restrict_path_cascade_indirect"
      ]
    ]
  ],
  "test_restrict_path_cascade_direct": [
    [
      "tests/delete/tests.py",
      [
        "OnDeleteTests",
        "test_restrict_path_cascade_direct"
      ]
    ]
  ],
  "test_restrict_path_cascade_indirect_diamond": [
    [
      "tests/delete/tests.py",
      [
        "OnDeleteTests",
        "test_restrict_path_cascade_indirect_diamond"
      ]
    ]
  ],
  "test_restrict_gfk_no_fast_delete": [
    [
      "tests/delete/tests.py",
      [
        "OnDeleteTests",
        "test_restrict_gfk_no_fast_delete"
      ]
    ]
  ],
  "test_m2m": [
    [
      "tests/delete/tests.py",
      [
        "DeletionTests",
        "test_m2m"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "CustomPrefetchTests",
        "test_m2m"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "ForeignKeyToFieldTest",
        "test_m2m"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_m2m"
      ]
    ]
  ],
  "test_bulk": [
    [
      "tests/delete/tests.py",
      [
        "DeletionTests",
        "test_bulk"
      ]
    ]
  ],
  "test_instance_update": [
    [
      "tests/delete/tests.py",
      [
        "DeletionTests",
        "test_instance_update"
      ]
    ]
  ],
  "log_post_delete": [
    [
      "tests/delete/tests.py",
      [
        "DeletionTests",
        "test_deletion_order",
        "log_post_delete"
      ]
    ]
  ],
  "log_pre_delete": [
    [
      "tests/delete/tests.py",
      [
        "DeletionTests",
        "test_deletion_order",
        "log_pre_delete"
      ]
    ]
  ],
  "test_deletion_order": [
    [
      "tests/delete/tests.py",
      [
        "DeletionTests",
        "test_deletion_order"
      ]
    ]
  ],
  "test_relational_post_delete_signals_happen_before_parent_object": [
    [
      "tests/delete/tests.py",
      [
        "DeletionTests",
        "test_relational_post_delete_signals_happen_before_parent_object"
      ]
    ]
  ],
  "test_can_defer_constraint_checks": [
    [
      "tests/delete/tests.py",
      [
        "DeletionTests",
        "test_can_defer_constraint_checks"
      ]
    ]
  ],
  "test_cannot_defer_constraint_checks": [
    [
      "tests/delete/tests.py",
      [
        "DeletionTests",
        "test_cannot_defer_constraint_checks"
      ]
    ]
  ],
  "test_hidden_related": [
    [
      "tests/delete/tests.py",
      [
        "DeletionTests",
        "test_hidden_related"
      ]
    ]
  ],
  "test_large_delete": [
    [
      "tests/delete/tests.py",
      [
        "DeletionTests",
        "test_large_delete"
      ]
    ]
  ],
  "test_large_delete_related": [
    [
      "tests/delete/tests.py",
      [
        "DeletionTests",
        "test_large_delete_related"
      ]
    ]
  ],
  "test_delete_with_keeping_parents": [
    [
      "tests/delete/tests.py",
      [
        "DeletionTests",
        "test_delete_with_keeping_parents"
      ]
    ]
  ],
  "test_delete_with_keeping_parents_relationships": [
    [
      "tests/delete/tests.py",
      [
        "DeletionTests",
        "test_delete_with_keeping_parents_relationships"
      ]
    ]
  ],
  "test_queryset_delete_returns_num_rows": [
    [
      "tests/delete/tests.py",
      [
        "DeletionTests",
        "test_queryset_delete_returns_num_rows"
      ]
    ]
  ],
  "test_model_delete_returns_num_rows": [
    [
      "tests/delete/tests.py",
      [
        "DeletionTests",
        "test_model_delete_returns_num_rows"
      ]
    ]
  ],
  "test_proxied_model_duplicate_queries": [
    [
      "tests/delete/tests.py",
      [
        "DeletionTests",
        "test_proxied_model_duplicate_queries"
      ]
    ]
  ],
  "test_only_referenced_fields_selected": [
    [
      "tests/delete/tests.py",
      [
        "DeletionTests",
        "test_only_referenced_fields_selected"
      ]
    ]
  ],
  "test_fast_delete_fk": [
    [
      "tests/delete/tests.py",
      [
        "FastDeleteTests",
        "test_fast_delete_fk"
      ]
    ]
  ],
  "test_fast_delete_m2m": [
    [
      "tests/delete/tests.py",
      [
        "FastDeleteTests",
        "test_fast_delete_m2m"
      ]
    ]
  ],
  "test_fast_delete_revm2m": [
    [
      "tests/delete/tests.py",
      [
        "FastDeleteTests",
        "test_fast_delete_revm2m"
      ]
    ]
  ],
  "test_fast_delete_qs": [
    [
      "tests/delete/tests.py",
      [
        "FastDeleteTests",
        "test_fast_delete_qs"
      ]
    ]
  ],
  "test_fast_delete_instance_set_pk_none": [
    [
      "tests/delete/tests.py",
      [
        "FastDeleteTests",
        "test_fast_delete_instance_set_pk_none"
      ]
    ]
  ],
  "test_fast_delete_joined_qs": [
    [
      "tests/delete/tests.py",
      [
        "FastDeleteTests",
        "test_fast_delete_joined_qs"
      ]
    ]
  ],
  "test_fast_delete_inheritance": [
    [
      "tests/delete/tests.py",
      [
        "FastDeleteTests",
        "test_fast_delete_inheritance"
      ]
    ]
  ],
  "test_fast_delete_large_batch": [
    [
      "tests/delete/tests.py",
      [
        "FastDeleteTests",
        "test_fast_delete_large_batch"
      ]
    ]
  ],
  "test_fast_delete_empty_no_update_can_self_select": [
    [
      "tests/delete/tests.py",
      [
        "FastDeleteTests",
        "test_fast_delete_empty_no_update_can_self_select"
      ]
    ]
  ],
  "test_fast_delete_combined_relationships": [
    [
      "tests/delete/tests.py",
      [
        "FastDeleteTests",
        "test_fast_delete_combined_relationships"
      ]
    ]
  ],
  "test_concurrent_delete": [
    [
      "tests/delete_regress/tests.py",
      [
        "DeleteLockingTest",
        "test_concurrent_delete"
      ]
    ]
  ],
  "test_generic_relation_cascade": [
    [
      "tests/delete_regress/tests.py",
      [
        "DeleteCascadeTests",
        "test_generic_relation_cascade"
      ]
    ]
  ],
  "test_fk_to_m2m_through": [
    [
      "tests/delete_regress/tests.py",
      [
        "DeleteCascadeTests",
        "test_fk_to_m2m_through"
      ]
    ]
  ],
  "test_15776": [
    [
      "tests/delete_regress/tests.py",
      [
        "DeleteCascadeTests",
        "test_15776"
      ]
    ]
  ],
  "test_to_field": [
    [
      "tests/delete_regress/tests.py",
      [
        "DeleteCascadeTransactionTests",
        "test_to_field"
      ]
    ],
    [
      "tests/m2m_through_regress/tests.py",
      [
        "ToFieldThroughTests",
        "test_to_field"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "IsNullTests",
        "test_to_field"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "ExcludeTests",
        "test_to_field"
      ]
    ]
  ],
  "test_large_deletes": [
    [
      "tests/delete_regress/tests.py",
      [
        "LargeDeleteTests",
        "test_large_deletes"
      ]
    ]
  ],
  "create_image": [
    [
      "tests/delete_regress/tests.py",
      [
        "ProxyDeleteTest",
        "create_image"
      ]
    ]
  ],
  "test_delete_proxy": [
    [
      "tests/delete_regress/tests.py",
      [
        "ProxyDeleteTest",
        "test_delete_proxy"
      ]
    ]
  ],
  "test_delete_proxy_of_proxy": [
    [
      "tests/delete_regress/tests.py",
      [
        "ProxyDeleteTest",
        "test_delete_proxy_of_proxy"
      ]
    ]
  ],
  "test_delete_concrete_parent": [
    [
      "tests/delete_regress/tests.py",
      [
        "ProxyDeleteTest",
        "test_delete_concrete_parent"
      ]
    ]
  ],
  "test_delete_proxy_pair": [
    [
      "tests/delete_regress/tests.py",
      [
        "ProxyDeleteTest",
        "test_delete_proxy_pair"
      ]
    ]
  ],
  "test_19187_values": [
    [
      "tests/delete_regress/tests.py",
      [
        "ProxyDeleteTest",
        "test_19187_values"
      ]
    ]
  ],
  "test_ticket_19102_annotate": [
    [
      "tests/delete_regress/tests.py",
      [
        "Ticket19102Tests",
        "test_ticket_19102_annotate"
      ]
    ]
  ],
  "test_ticket_19102_extra": [
    [
      "tests/delete_regress/tests.py",
      [
        "Ticket19102Tests",
        "test_ticket_19102_extra"
      ]
    ]
  ],
  "test_ticket_19102_distinct_on": [
    [
      "tests/delete_regress/tests.py",
      [
        "Ticket19102Tests",
        "test_ticket_19102_distinct_on"
      ]
    ]
  ],
  "test_ticket_19102_select_related": [
    [
      "tests/delete_regress/tests.py",
      [
        "Ticket19102Tests",
        "test_ticket_19102_select_related"
      ]
    ]
  ],
  "test_ticket_19102_defer": [
    [
      "tests/delete_regress/tests.py",
      [
        "Ticket19102Tests",
        "test_ticket_19102_defer"
      ]
    ]
  ],
  "test_meta_ordered_delete": [
    [
      "tests/delete_regress/tests.py",
      [
        "DeleteTests",
        "test_meta_ordered_delete"
      ]
    ]
  ],
  "test_foreign_key_delete_nullifies_correct_columns": [
    [
      "tests/delete_regress/tests.py",
      [
        "DeleteTests",
        "test_foreign_key_delete_nullifies_correct_columns"
      ]
    ]
  ],
  "test_deprecation": [
    [
      "tests/deprecation/test_middleware_mixin.py",
      [
        "MiddlewareMixinTests",
        "test_deprecation"
      ]
    ]
  ],
  "test_passing_explicit_none": [
    [
      "tests/deprecation/test_middleware_mixin.py",
      [
        "MiddlewareMixinTests",
        "test_passing_explicit_none"
      ]
    ]
  ],
  "test_subclass_deprecation": [
    [
      "tests/deprecation/test_middleware_mixin.py",
      [
        "MiddlewareMixinTests",
        "test_subclass_deprecation"
      ]
    ]
  ],
  "test_class_definition_warnings": [
    [
      "tests/deprecation/tests.py",
      [
        "RenameMethodsTests",
        "test_class_definition_warnings"
      ]
    ]
  ],
  "test_get_new_defined": [
    [
      "tests/deprecation/tests.py",
      [
        "RenameMethodsTests",
        "test_get_new_defined"
      ]
    ]
  ],
  "test_get_old_defined": [
    [
      "tests/deprecation/tests.py",
      [
        "RenameMethodsTests",
        "test_get_old_defined"
      ]
    ]
  ],
  "test_deprecated_subclass_renamed": [
    [
      "tests/deprecation/tests.py",
      [
        "RenameMethodsTests",
        "test_deprecated_subclass_renamed"
      ]
    ]
  ],
  "test_renamed_subclass_deprecated": [
    [
      "tests/deprecation/tests.py",
      [
        "RenameMethodsTests",
        "test_renamed_subclass_deprecated"
      ]
    ]
  ],
  "old": [
    [
      "tests/deprecation/tests.py",
      [
        "RenameMethodsTests",
        "test_deprecated_subclass_renamed_and_mixins",
        "DeprecatedMixin",
        "old"
      ]
    ]
  ],
  "test_deprecated_subclass_renamed_and_mixins": [
    [
      "tests/deprecation/tests.py",
      [
        "RenameMethodsTests",
        "test_deprecated_subclass_renamed_and_mixins"
      ]
    ]
  ],
  "test_warning": [
    [
      "tests/deprecation/tests.py",
      [
        "DeprecationInstanceCheckTest",
        "test_warning"
      ]
    ],
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionOverwriteWarning",
        "test_warning"
      ]
    ]
  ],
  "receiver_1_arg": [
    [
      "tests/dispatch/tests.py",
      [
        "receiver_1_arg"
      ]
    ]
  ],
  "assertTestIsClean": [
    [
      "tests/dispatch/tests.py",
      [
        "DispatcherTests",
        "assertTestIsClean"
      ]
    ]
  ],
  "test_cannot_connect_no_kwargs": [
    [
      "tests/dispatch/tests.py",
      [
        "DispatcherTests",
        "test_cannot_connect_no_kwargs"
      ]
    ]
  ],
  "test_cannot_connect_non_callable": [
    [
      "tests/dispatch/tests.py",
      [
        "DispatcherTests",
        "test_cannot_connect_non_callable"
      ]
    ]
  ],
  "test_send": [
    [
      "tests/dispatch/tests.py",
      [
        "DispatcherTests",
        "test_send"
      ]
    ],
    [
      "tests/mail/tests.py",
      [
        "BaseEmailBackendTests",
        "test_send"
      ]
    ]
  ],
  "test_send_no_receivers": [
    [
      "tests/dispatch/tests.py",
      [
        "DispatcherTests",
        "test_send_no_receivers"
      ]
    ]
  ],
  "test_send_connected_no_sender": [
    [
      "tests/dispatch/tests.py",
      [
        "DispatcherTests",
        "test_send_connected_no_sender"
      ]
    ]
  ],
  "test_send_different_no_sender": [
    [
      "tests/dispatch/tests.py",
      [
        "DispatcherTests",
        "test_send_different_no_sender"
      ]
    ]
  ],
  "test_garbage_collected": [
    [
      "tests/dispatch/tests.py",
      [
        "DispatcherTests",
        "test_garbage_collected"
      ]
    ]
  ],
  "test_cached_garbaged_collected": [
    [
      "tests/dispatch/tests.py",
      [
        "DispatcherTests",
        "test_cached_garbaged_collected"
      ]
    ]
  ],
  "test_uid_registration": [
    [
      "tests/dispatch/tests.py",
      [
        "DispatcherTests",
        "test_uid_registration"
      ]
    ]
  ],
  "test_send_robust_success": [
    [
      "tests/dispatch/tests.py",
      [
        "DispatcherTests",
        "test_send_robust_success"
      ]
    ]
  ],
  "test_send_robust_no_receivers": [
    [
      "tests/dispatch/tests.py",
      [
        "DispatcherTests",
        "test_send_robust_no_receivers"
      ]
    ]
  ],
  "test_send_robust_ignored_sender": [
    [
      "tests/dispatch/tests.py",
      [
        "DispatcherTests",
        "test_send_robust_ignored_sender"
      ]
    ]
  ],
  "test_send_robust_fail": [
    [
      "tests/dispatch/tests.py",
      [
        "DispatcherTests",
        "test_send_robust_fail"
      ]
    ]
  ],
  "test_disconnection": [
    [
      "tests/dispatch/tests.py",
      [
        "DispatcherTests",
        "test_disconnection"
      ]
    ]
  ],
  "test_values_returned_by_disconnection": [
    [
      "tests/dispatch/tests.py",
      [
        "DispatcherTests",
        "test_values_returned_by_disconnection"
      ]
    ]
  ],
  "test_has_listeners": [
    [
      "tests/dispatch/tests.py",
      [
        "DispatcherTests",
        "test_has_listeners"
      ]
    ]
  ],
  "test_receiver_single_signal": [
    [
      "tests/dispatch/tests.py",
      [
        "ReceiverTestCase",
        "test_receiver_single_signal"
      ]
    ]
  ],
  "test_receiver_signal_list": [
    [
      "tests/dispatch/tests.py",
      [
        "ReceiverTestCase",
        "test_receiver_signal_list"
      ]
    ]
  ],
  "test_basic_distinct_on": [
    [
      "tests/distinct_on_fields/tests.py",
      [
        "DistinctOnTests",
        "test_basic_distinct_on"
      ]
    ]
  ],
  "test_distinct_not_implemented_checks": [
    [
      "tests/distinct_on_fields/tests.py",
      [
        "DistinctOnTests",
        "test_distinct_not_implemented_checks"
      ]
    ]
  ],
  "test_distinct_on_in_ordered_subquery": [
    [
      "tests/distinct_on_fields/tests.py",
      [
        "DistinctOnTests",
        "test_distinct_on_in_ordered_subquery"
      ]
    ]
  ],
  "test_distinct_on_get_ordering_preserved": [
    [
      "tests/distinct_on_fields/tests.py",
      [
        "DistinctOnTests",
        "test_distinct_on_get_ordering_preserved"
      ]
    ]
  ],
  "test_sqlflush_no_tables": [
    [
      "tests/empty_models/test_commands.py",
      [
        "CoreCommandsNoOutputTests",
        "test_sqlflush_no_tables"
      ]
    ]
  ],
  "test_sqlsequencereset_no_sequences": [
    [
      "tests/empty_models/test_commands.py",
      [
        "CoreCommandsNoOutputTests",
        "test_sqlsequencereset_no_sequences"
      ]
    ]
  ],
  "duration": [
    [
      "tests/expressions/models.py",
      [
        "Experiment",
        "duration"
      ]
    ]
  ],
  "test_missing_alias": [
    [
      "tests/expressions/test_deprecation.py",
      [
        "GetGroupByColsTest",
        "test_missing_alias"
      ]
    ]
  ],
  "test_values_expression": [
    [
      "tests/expressions/test_queryset_values.py",
      [
        "ValuesExpressionsTests",
        "test_values_expression"
      ]
    ]
  ],
  "test_values_expression_group_by": [
    [
      "tests/expressions/test_queryset_values.py",
      [
        "ValuesExpressionsTests",
        "test_values_expression_group_by"
      ]
    ]
  ],
  "test_chained_values_with_expression": [
    [
      "tests/expressions/test_queryset_values.py",
      [
        "ValuesExpressionsTests",
        "test_chained_values_with_expression"
      ]
    ]
  ],
  "test_values_list_expression": [
    [
      "tests/expressions/test_queryset_values.py",
      [
        "ValuesExpressionsTests",
        "test_values_list_expression"
      ]
    ]
  ],
  "test_values_list_expression_flat": [
    [
      "tests/expressions/test_queryset_values.py",
      [
        "ValuesExpressionsTests",
        "test_values_list_expression_flat"
      ]
    ]
  ],
  "test_annotate_values_filter": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_annotate_values_filter"
      ]
    ]
  ],
  "test_annotate_values_count": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_annotate_values_count"
      ]
    ]
  ],
  "test_filtering_on_annotate_that_uses_q": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_filtering_on_annotate_that_uses_q"
      ]
    ]
  ],
  "test_filtering_on_q_that_is_boolean": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_filtering_on_q_that_is_boolean"
      ]
    ]
  ],
  "test_filtering_on_rawsql_that_is_boolean": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_filtering_on_rawsql_that_is_boolean"
      ]
    ]
  ],
  "test_filter_inter_attribute": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_filter_inter_attribute"
      ]
    ]
  ],
  "test_arithmetic": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_arithmetic"
      ]
    ]
  ],
  "test_order_of_operations": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_order_of_operations"
      ]
    ]
  ],
  "test_parenthesis_priority": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_parenthesis_priority"
      ]
    ]
  ],
  "test_update_with_fk": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_update_with_fk"
      ]
    ]
  ],
  "test_update_with_none": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_update_with_none"
      ]
    ]
  ],
  "test_filter_with_join": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_filter_with_join"
      ]
    ]
  ],
  "test_object_update": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_object_update"
      ]
    ]
  ],
  "test_new_object_save": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_new_object_save"
      ]
    ]
  ],
  "test_new_object_create": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_new_object_create"
      ]
    ]
  ],
  "test_object_create_with_aggregate": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_object_create_with_aggregate"
      ]
    ]
  ],
  "test_object_update_fk": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_object_update_fk"
      ]
    ]
  ],
  "test_update_inherited_field_value": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_update_inherited_field_value"
      ]
    ]
  ],
  "test_object_update_unsaved_objects": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_object_update_unsaved_objects"
      ]
    ]
  ],
  "test_ticket_11722_iexact_lookup": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_ticket_11722_iexact_lookup"
      ]
    ]
  ],
  "test_ticket_16731_startswith_lookup": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_ticket_16731_startswith_lookup"
      ]
    ]
  ],
  "test_ticket_18375_join_reuse": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_ticket_18375_join_reuse"
      ]
    ]
  ],
  "test_ticket_18375_kwarg_ordering": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_ticket_18375_kwarg_ordering"
      ]
    ]
  ],
  "test_ticket_18375_kwarg_ordering_2": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_ticket_18375_kwarg_ordering_2"
      ]
    ]
  ],
  "test_ticket_18375_chained_filters": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_ticket_18375_chained_filters"
      ]
    ]
  ],
  "test_order_by_exists": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_order_by_exists"
      ]
    ]
  ],
  "test_order_by_multiline_sql": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_order_by_multiline_sql"
      ]
    ]
  ],
  "test_outerref": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_outerref"
      ]
    ]
  ],
  "test_exist_single_field_output_field": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_exist_single_field_output_field"
      ]
    ]
  ],
  "test_subquery": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_subquery"
      ]
    ],
    [
      "tests/multiple_database/tests.py",
      [
        "QueryTestCase",
        "test_subquery"
      ]
    ],
    [
      "tests/multiple_database/tests.py",
      [
        "RouterTestCase",
        "test_subquery"
      ]
    ]
  ],
  "test_in_subquery": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_in_subquery"
      ]
    ],
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_in_subquery"
      ]
    ],
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_in_subquery"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "ToFieldTests",
        "test_in_subquery"
      ]
    ]
  ],
  "test_uuid_pk_subquery": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_uuid_pk_subquery"
      ]
    ]
  ],
  "test_nested_subquery": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_nested_subquery"
      ]
    ]
  ],
  "test_nested_subquery_join_outer_ref": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_nested_subquery_join_outer_ref"
      ]
    ]
  ],
  "test_nested_subquery_outer_ref_2": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_nested_subquery_outer_ref_2"
      ]
    ]
  ],
  "test_nested_subquery_outer_ref_with_autofield": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_nested_subquery_outer_ref_with_autofield"
      ]
    ]
  ],
  "test_annotations_within_subquery": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_annotations_within_subquery"
      ]
    ]
  ],
  "test_subquery_references_joined_table_twice": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_subquery_references_joined_table_twice"
      ]
    ]
  ],
  "test_subquery_filter_by_aggregate": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_subquery_filter_by_aggregate"
      ]
    ]
  ],
  "test_subquery_filter_by_lazy": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_subquery_filter_by_lazy"
      ]
    ]
  ],
  "test_aggregate_subquery_annotation": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_aggregate_subquery_annotation"
      ]
    ]
  ],
  "test_explicit_output_field": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_explicit_output_field"
      ]
    ]
  ],
  "test_outerref_mixed_case_table_name": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_outerref_mixed_case_table_name"
      ]
    ]
  ],
  "test_outerref_with_operator": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_outerref_with_operator"
      ]
    ]
  ],
  "test_nested_outerref_with_function": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_nested_outerref_with_function"
      ]
    ]
  ],
  "test_annotation_with_outerref": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_annotation_with_outerref"
      ]
    ]
  ],
  "test_pickle_expression": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_pickle_expression"
      ]
    ]
  ],
  "test_incorrect_field_in_F_expression": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_incorrect_field_in_F_expression"
      ]
    ]
  ],
  "test_incorrect_joined_field_in_F_expression": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_incorrect_joined_field_in_F_expression"
      ]
    ]
  ],
  "test_exists_in_filter": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_exists_in_filter"
      ]
    ]
  ],
  "test_subquery_in_filter": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_subquery_in_filter"
      ]
    ]
  ],
  "test_subquery_group_by_outerref_in_filter": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_subquery_group_by_outerref_in_filter"
      ]
    ]
  ],
  "test_case_in_filter_if_boolean_output_field": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_case_in_filter_if_boolean_output_field"
      ]
    ]
  ],
  "test_boolean_expression_combined": [
    [
      "tests/expressions/tests.py",
      [
        "BasicExpressionsTests",
        "test_boolean_expression_combined"
      ]
    ]
  ],
  "test_in_lookup_allows_F_expressions_and_expressions_for_integers": [
    [
      "tests/expressions/tests.py",
      [
        "IterableLookupInnerExpressionsTests",
        "test_in_lookup_allows_F_expressions_and_expressions_for_integers"
      ]
    ]
  ],
  "test_expressions_in_lookups_join_choice": [
    [
      "tests/expressions/tests.py",
      [
        "IterableLookupInnerExpressionsTests",
        "test_expressions_in_lookups_join_choice"
      ]
    ]
  ],
  "test_range_lookup_allows_F_expressions_and_expressions_for_integers": [
    [
      "tests/expressions/tests.py",
      [
        "IterableLookupInnerExpressionsTests",
        "test_range_lookup_allows_F_expressions_and_expressions_for_integers"
      ]
    ]
  ],
  "test_complex_expressions_do_not_introduce_sql_injection_via_untrusted_string_inclusion": [
    [
      "tests/expressions/tests.py",
      [
        "IterableLookupInnerExpressionsTests",
        "test_complex_expressions_do_not_introduce_sql_injection_via_untrusted_string_inclusion"
      ]
    ]
  ],
  "test_in_lookup_allows_F_expressions_and_expressions_for_datetimes": [
    [
      "tests/expressions/tests.py",
      [
        "IterableLookupInnerExpressionsTests",
        "test_in_lookup_allows_F_expressions_and_expressions_for_datetimes"
      ]
    ]
  ],
  "test_deepcopy": [
    [
      "tests/expressions/tests.py",
      [
        "FTests",
        "test_deepcopy"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_multiwidget.py",
      [
        "MultiWidgetTest",
        "test_deepcopy"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_select.py",
      [
        "SelectTest",
        "test_deepcopy"
      ]
    ],
    [
      "tests/utils_tests/test_tree.py",
      [
        "NodeTests",
        "test_deepcopy"
      ]
    ]
  ],
  "test_deconstruct": [
    [
      "tests/expressions/tests.py",
      [
        "FTests",
        "test_deconstruct"
      ]
    ],
    [
      "tests/expressions/tests.py",
      [
        "ValueTests",
        "test_deconstruct"
      ]
    ],
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestMethods",
        "test_deconstruct"
      ]
    ],
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestMigrations",
        "test_deconstruct"
      ]
    ],
    [
      "tests/postgres_tests/test_constraints.py",
      [
        "ExclusionConstraintTests",
        "test_deconstruct"
      ]
    ],
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestValidator",
        "test_deconstruct"
      ]
    ],
    [
      "tests/queries/test_q.py",
      [
        "QTests",
        "test_deconstruct"
      ]
    ]
  ],
  "test_equal": [
    [
      "tests/expressions/tests.py",
      [
        "FTests",
        "test_equal"
      ]
    ],
    [
      "tests/expressions/tests.py",
      [
        "SimpleExpressionTests",
        "test_equal"
      ]
    ],
    [
      "tests/expressions/tests.py",
      [
        "ValueTests",
        "test_equal"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "AssertURLEqualTests",
        "test_equal"
      ]
    ],
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "CaseInsensitiveMappingTests",
        "test_equal"
      ]
    ],
    [
      "tests/utils_tests/test_hashable.py",
      [
        "TestHashable",
        "test_equal"
      ]
    ]
  ],
  "test_not_equal_Value": [
    [
      "tests/expressions/tests.py",
      [
        "FTests",
        "test_not_equal_Value"
      ]
    ]
  ],
  "test_F_reuse": [
    [
      "tests/expressions/tests.py",
      [
        "ExpressionsTests",
        "test_F_reuse"
      ]
    ]
  ],
  "test_patterns_escape": [
    [
      "tests/expressions/tests.py",
      [
        "ExpressionsTests",
        "test_patterns_escape"
      ]
    ]
  ],
  "test_insensitive_patterns_escape": [
    [
      "tests/expressions/tests.py",
      [
        "ExpressionsTests",
        "test_insensitive_patterns_escape"
      ]
    ]
  ],
  "test_fill_with_value_from_same_object": [
    [
      "tests/expressions/tests.py",
      [
        "ExpressionsNumericTests",
        "test_fill_with_value_from_same_object"
      ]
    ]
  ],
  "test_increment_value": [
    [
      "tests/expressions/tests.py",
      [
        "ExpressionsNumericTests",
        "test_increment_value"
      ]
    ]
  ],
  "test_filter_not_equals_other_field": [
    [
      "tests/expressions/tests.py",
      [
        "ExpressionsNumericTests",
        "test_filter_not_equals_other_field"
      ]
    ]
  ],
  "test_complex_expressions": [
    [
      "tests/expressions/tests.py",
      [
        "ExpressionsNumericTests",
        "test_complex_expressions"
      ]
    ]
  ],
  "test_lefthand_addition": [
    [
      "tests/expressions/tests.py",
      [
        "ExpressionOperatorTests",
        "test_lefthand_addition"
      ]
    ]
  ],
  "test_lefthand_subtraction": [
    [
      "tests/expressions/tests.py",
      [
        "ExpressionOperatorTests",
        "test_lefthand_subtraction"
      ]
    ]
  ],
  "test_lefthand_multiplication": [
    [
      "tests/expressions/tests.py",
      [
        "ExpressionOperatorTests",
        "test_lefthand_multiplication"
      ]
    ]
  ],
  "test_lefthand_division": [
    [
      "tests/expressions/tests.py",
      [
        "ExpressionOperatorTests",
        "test_lefthand_division"
      ]
    ]
  ],
  "test_lefthand_modulo": [
    [
      "tests/expressions/tests.py",
      [
        "ExpressionOperatorTests",
        "test_lefthand_modulo"
      ]
    ]
  ],
  "test_lefthand_bitwise_and": [
    [
      "tests/expressions/tests.py",
      [
        "ExpressionOperatorTests",
        "test_lefthand_bitwise_and"
      ]
    ]
  ],
  "test_lefthand_bitwise_left_shift_operator": [
    [
      "tests/expressions/tests.py",
      [
        "ExpressionOperatorTests",
        "test_lefthand_bitwise_left_shift_operator"
      ]
    ]
  ],
  "test_lefthand_bitwise_right_shift_operator": [
    [
      "tests/expressions/tests.py",
      [
        "ExpressionOperatorTests",
        "test_lefthand_bitwise_right_shift_operator"
      ]
    ]
  ],
  "test_lefthand_bitwise_or": [
    [
      "tests/expressions/tests.py",
      [
        "ExpressionOperatorTests",
        "test_lefthand_bitwise_or"
      ]
    ]
  ],
  "test_lefthand_power": [
    [
      "tests/expressions/tests.py",
      [
        "ExpressionOperatorTests",
        "test_lefthand_power"
      ]
    ]
  ],
  "test_lefthand_bitwise_xor": [
    [
      "tests/expressions/tests.py",
      [
        "ExpressionOperatorTests",
        "test_lefthand_bitwise_xor"
      ]
    ]
  ],
  "test_lefthand_bitwise_xor_null": [
    [
      "tests/expressions/tests.py",
      [
        "ExpressionOperatorTests",
        "test_lefthand_bitwise_xor_null"
      ]
    ]
  ],
  "test_lefthand_bitwise_xor_not_supported": [
    [
      "tests/expressions/tests.py",
      [
        "ExpressionOperatorTests",
        "test_lefthand_bitwise_xor_not_supported"
      ]
    ]
  ],
  "test_right_hand_addition": [
    [
      "tests/expressions/tests.py",
      [
        "ExpressionOperatorTests",
        "test_right_hand_addition"
      ]
    ]
  ],
  "test_right_hand_subtraction": [
    [
      "tests/expressions/tests.py",
      [
        "ExpressionOperatorTests",
        "test_right_hand_subtraction"
      ]
    ]
  ],
  "test_right_hand_multiplication": [
    [
      "tests/expressions/tests.py",
      [
        "ExpressionOperatorTests",
        "test_right_hand_multiplication"
      ]
    ]
  ],
  "test_right_hand_division": [
    [
      "tests/expressions/tests.py",
      [
        "ExpressionOperatorTests",
        "test_right_hand_division"
      ]
    ]
  ],
  "test_right_hand_modulo": [
    [
      "tests/expressions/tests.py",
      [
        "ExpressionOperatorTests",
        "test_right_hand_modulo"
      ]
    ]
  ],
  "test_righthand_power": [
    [
      "tests/expressions/tests.py",
      [
        "ExpressionOperatorTests",
        "test_righthand_power"
      ]
    ]
  ],
  "test_multiple_query_compilation": [
    [
      "tests/expressions/tests.py",
      [
        "FTimeDeltaTests",
        "test_multiple_query_compilation"
      ]
    ]
  ],
  "test_query_clone": [
    [
      "tests/expressions/tests.py",
      [
        "FTimeDeltaTests",
        "test_query_clone"
      ]
    ]
  ],
  "test_delta_add": [
    [
      "tests/expressions/tests.py",
      [
        "FTimeDeltaTests",
        "test_delta_add"
      ]
    ]
  ],
  "test_delta_subtract": [
    [
      "tests/expressions/tests.py",
      [
        "FTimeDeltaTests",
        "test_delta_subtract"
      ]
    ]
  ],
  "test_exclude": [
    [
      "tests/expressions/tests.py",
      [
        "FTimeDeltaTests",
        "test_exclude"
      ]
    ],
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_exclude"
      ]
    ],
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQueryingWithRanges",
        "test_exclude"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_exclude"
      ]
    ]
  ],
  "test_date_comparison": [
    [
      "tests/expressions/tests.py",
      [
        "FTimeDeltaTests",
        "test_date_comparison"
      ]
    ]
  ],
  "test_mixed_comparisons1": [
    [
      "tests/expressions/tests.py",
      [
        "FTimeDeltaTests",
        "test_mixed_comparisons1"
      ]
    ]
  ],
  "test_mixed_comparisons2": [
    [
      "tests/expressions/tests.py",
      [
        "FTimeDeltaTests",
        "test_mixed_comparisons2"
      ]
    ]
  ],
  "test_delta_update": [
    [
      "tests/expressions/tests.py",
      [
        "FTimeDeltaTests",
        "test_delta_update"
      ]
    ]
  ],
  "test_invalid_operator": [
    [
      "tests/expressions/tests.py",
      [
        "FTimeDeltaTests",
        "test_invalid_operator"
      ]
    ]
  ],
  "test_durationfield_add": [
    [
      "tests/expressions/tests.py",
      [
        "FTimeDeltaTests",
        "test_durationfield_add"
      ]
    ]
  ],
  "test_date_subtraction": [
    [
      "tests/expressions/tests.py",
      [
        "FTimeDeltaTests",
        "test_date_subtraction"
      ]
    ]
  ],
  "test_date_subquery_subtraction": [
    [
      "tests/expressions/tests.py",
      [
        "FTimeDeltaTests",
        "test_date_subquery_subtraction"
      ]
    ]
  ],
  "test_date_case_subtraction": [
    [
      "tests/expressions/tests.py",
      [
        "FTimeDeltaTests",
        "test_date_case_subtraction"
      ]
    ]
  ],
  "test_time_subtraction": [
    [
      "tests/expressions/tests.py",
      [
        "FTimeDeltaTests",
        "test_time_subtraction"
      ]
    ]
  ],
  "test_time_subquery_subtraction": [
    [
      "tests/expressions/tests.py",
      [
        "FTimeDeltaTests",
        "test_time_subquery_subtraction"
      ]
    ]
  ],
  "test_datetime_subtraction": [
    [
      "tests/expressions/tests.py",
      [
        "FTimeDeltaTests",
        "test_datetime_subtraction"
      ]
    ]
  ],
  "test_datetime_subquery_subtraction": [
    [
      "tests/expressions/tests.py",
      [
        "FTimeDeltaTests",
        "test_datetime_subquery_subtraction"
      ]
    ]
  ],
  "test_datetime_subtraction_microseconds": [
    [
      "tests/expressions/tests.py",
      [
        "FTimeDeltaTests",
        "test_datetime_subtraction_microseconds"
      ]
    ]
  ],
  "test_duration_with_datetime": [
    [
      "tests/expressions/tests.py",
      [
        "FTimeDeltaTests",
        "test_duration_with_datetime"
      ]
    ]
  ],
  "test_duration_with_datetime_microseconds": [
    [
      "tests/expressions/tests.py",
      [
        "FTimeDeltaTests",
        "test_duration_with_datetime_microseconds"
      ]
    ]
  ],
  "test_date_minus_duration": [
    [
      "tests/expressions/tests.py",
      [
        "FTimeDeltaTests",
        "test_date_minus_duration"
      ]
    ]
  ],
  "test_negative_timedelta_update": [
    [
      "tests/expressions/tests.py",
      [
        "FTimeDeltaTests",
        "test_negative_timedelta_update"
      ]
    ]
  ],
  "test_update_TimeField_using_Value": [
    [
      "tests/expressions/tests.py",
      [
        "ValueTests",
        "test_update_TimeField_using_Value"
      ]
    ]
  ],
  "test_update_UUIDField_using_Value": [
    [
      "tests/expressions/tests.py",
      [
        "ValueTests",
        "test_update_UUIDField_using_Value"
      ]
    ]
  ],
  "test_deconstruct_output_field": [
    [
      "tests/expressions/tests.py",
      [
        "ValueTests",
        "test_deconstruct_output_field"
      ]
    ]
  ],
  "test_equal_output_field": [
    [
      "tests/expressions/tests.py",
      [
        "ValueTests",
        "test_equal_output_field"
      ]
    ]
  ],
  "test_raise_empty_expressionlist": [
    [
      "tests/expressions/tests.py",
      [
        "ValueTests",
        "test_raise_empty_expressionlist"
      ]
    ]
  ],
  "test_month_aggregation": [
    [
      "tests/expressions/tests.py",
      [
        "FieldTransformTests",
        "test_month_aggregation"
      ]
    ]
  ],
  "test_transform_in_values": [
    [
      "tests/expressions/tests.py",
      [
        "FieldTransformTests",
        "test_transform_in_values"
      ]
    ]
  ],
  "test_multiple_transforms_in_values": [
    [
      "tests/expressions/tests.py",
      [
        "FieldTransformTests",
        "test_multiple_transforms_in_values"
      ]
    ]
  ],
  "test_functions": [
    [
      "tests/expressions/tests.py",
      [
        "ReprTests",
        "test_functions"
      ]
    ],
    [
      "tests/queries/test_bulk_update.py",
      [
        "BulkUpdateNoteTests",
        "test_functions"
      ]
    ]
  ],
  "test_aggregates": [
    [
      "tests/expressions/tests.py",
      [
        "ReprTests",
        "test_aggregates"
      ]
    ]
  ],
  "test_distinct_aggregates": [
    [
      "tests/expressions/tests.py",
      [
        "ReprTests",
        "test_distinct_aggregates"
      ]
    ]
  ],
  "test_negation": [
    [
      "tests/expressions/tests.py",
      [
        "CombinableTests",
        "test_negation"
      ]
    ]
  ],
  "test_and": [
    [
      "tests/expressions/tests.py",
      [
        "CombinableTests",
        "test_and"
      ]
    ]
  ],
  "test_or": [
    [
      "tests/expressions/tests.py",
      [
        "CombinableTests",
        "test_or"
      ]
    ],
    [
      "tests/template_tests/test_smartif.py",
      [
        "SmartIfTests",
        "test_or"
      ]
    ]
  ],
  "test_reversed_and": [
    [
      "tests/expressions/tests.py",
      [
        "CombinableTests",
        "test_reversed_and"
      ]
    ]
  ],
  "test_reversed_or": [
    [
      "tests/expressions/tests.py",
      [
        "CombinableTests",
        "test_reversed_or"
      ]
    ]
  ],
  "test_annotate": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_annotate"
      ]
    ],
    [
      "tests/generic_relations_regress/tests.py",
      [
        "GenericRelationTests",
        "test_annotate"
      ]
    ]
  ],
  "test_annotate_without_default": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_annotate_without_default"
      ]
    ]
  ],
  "test_annotate_with_expression_as_value": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_annotate_with_expression_as_value"
      ]
    ]
  ],
  "test_annotate_with_expression_as_condition": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_annotate_with_expression_as_condition"
      ]
    ]
  ],
  "test_annotate_with_join_in_value": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_annotate_with_join_in_value"
      ]
    ]
  ],
  "test_annotate_with_in_clause": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_annotate_with_in_clause"
      ]
    ]
  ],
  "test_annotate_with_join_in_condition": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_annotate_with_join_in_condition"
      ]
    ]
  ],
  "test_annotate_with_join_in_predicate": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_annotate_with_join_in_predicate"
      ]
    ]
  ],
  "test_annotate_with_annotation_in_value": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_annotate_with_annotation_in_value"
      ]
    ]
  ],
  "test_annotate_with_annotation_in_condition": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_annotate_with_annotation_in_condition"
      ]
    ]
  ],
  "test_annotate_with_annotation_in_predicate": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_annotate_with_annotation_in_predicate"
      ]
    ]
  ],
  "test_annotate_with_aggregation_in_value": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_annotate_with_aggregation_in_value"
      ]
    ]
  ],
  "test_annotate_with_aggregation_in_condition": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_annotate_with_aggregation_in_condition"
      ]
    ]
  ],
  "test_annotate_with_aggregation_in_predicate": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_annotate_with_aggregation_in_predicate"
      ]
    ]
  ],
  "test_annotate_exclude": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_annotate_exclude"
      ]
    ]
  ],
  "test_annotate_values_not_in_order_by": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_annotate_values_not_in_order_by"
      ]
    ]
  ],
  "test_annotate_with_empty_when": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_annotate_with_empty_when"
      ]
    ]
  ],
  "test_combined_expression": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_combined_expression"
      ]
    ]
  ],
  "test_case_reuse": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_case_reuse"
      ]
    ]
  ],
  "test_aggregate_with_expression_as_value": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_aggregate_with_expression_as_value"
      ]
    ]
  ],
  "test_aggregate_with_expression_as_condition": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_aggregate_with_expression_as_condition"
      ]
    ]
  ],
  "test_filter_without_default": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_filter_without_default"
      ]
    ]
  ],
  "test_filter_with_expression_as_value": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_filter_with_expression_as_value"
      ]
    ]
  ],
  "test_filter_with_expression_as_condition": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_filter_with_expression_as_condition"
      ]
    ]
  ],
  "test_filter_with_join_in_value": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_filter_with_join_in_value"
      ]
    ]
  ],
  "test_filter_with_join_in_condition": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_filter_with_join_in_condition"
      ]
    ]
  ],
  "test_filter_with_join_in_predicate": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_filter_with_join_in_predicate"
      ]
    ]
  ],
  "test_filter_with_annotation_in_value": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_filter_with_annotation_in_value"
      ]
    ]
  ],
  "test_filter_with_annotation_in_condition": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_filter_with_annotation_in_condition"
      ]
    ]
  ],
  "test_filter_with_annotation_in_predicate": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_filter_with_annotation_in_predicate"
      ]
    ]
  ],
  "test_filter_with_aggregation_in_value": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_filter_with_aggregation_in_value"
      ]
    ]
  ],
  "test_filter_with_aggregation_in_condition": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_filter_with_aggregation_in_condition"
      ]
    ]
  ],
  "test_filter_with_aggregation_in_predicate": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_filter_with_aggregation_in_predicate"
      ]
    ]
  ],
  "test_update_without_default": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_without_default"
      ]
    ]
  ],
  "test_update_with_expression_as_value": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_with_expression_as_value"
      ]
    ]
  ],
  "test_update_with_expression_as_condition": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_with_expression_as_condition"
      ]
    ]
  ],
  "test_update_with_join_in_condition_raise_field_error": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_with_join_in_condition_raise_field_error"
      ]
    ]
  ],
  "test_update_with_join_in_predicate_raise_field_error": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_with_join_in_predicate_raise_field_error"
      ]
    ]
  ],
  "test_update_big_integer": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_big_integer"
      ]
    ]
  ],
  "test_update_binary": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_binary"
      ]
    ]
  ],
  "test_update_boolean": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_boolean"
      ]
    ]
  ],
  "test_update_date": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_date"
      ]
    ]
  ],
  "test_update_date_time": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_date_time"
      ]
    ]
  ],
  "test_update_decimal": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_decimal"
      ]
    ]
  ],
  "test_update_duration": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_duration"
      ]
    ]
  ],
  "test_update_email": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_email"
      ]
    ]
  ],
  "test_update_file": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_file"
      ]
    ]
  ],
  "test_update_file_path": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_file_path"
      ]
    ]
  ],
  "test_update_float": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_float"
      ]
    ]
  ],
  "test_update_image": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_image"
      ]
    ]
  ],
  "test_update_generic_ip_address": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_generic_ip_address"
      ]
    ]
  ],
  "test_update_null_boolean": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_null_boolean"
      ]
    ]
  ],
  "test_update_null_boolean_old": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_null_boolean_old"
      ]
    ]
  ],
  "test_update_positive_big_integer": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_positive_big_integer"
      ]
    ]
  ],
  "test_update_positive_integer": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_positive_integer"
      ]
    ]
  ],
  "test_update_positive_small_integer": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_positive_small_integer"
      ]
    ]
  ],
  "test_update_slug": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_slug"
      ]
    ]
  ],
  "test_update_small_integer": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_small_integer"
      ]
    ]
  ],
  "test_update_string": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_string"
      ]
    ]
  ],
  "test_update_text": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_text"
      ]
    ]
  ],
  "test_update_time": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_time"
      ]
    ]
  ],
  "test_update_url": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_url"
      ]
    ]
  ],
  "test_update_uuid": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_uuid"
      ]
    ]
  ],
  "test_update_fk": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_update_fk"
      ]
    ],
    [
      "tests/update/tests.py",
      [
        "AdvancedTests",
        "test_update_fk"
      ]
    ]
  ],
  "test_lookup_in_condition": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_lookup_in_condition"
      ]
    ]
  ],
  "test_lookup_different_fields": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_lookup_different_fields"
      ]
    ]
  ],
  "test_combined_q_object": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_combined_q_object"
      ]
    ]
  ],
  "test_order_by_conditional_implicit": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_order_by_conditional_implicit"
      ]
    ]
  ],
  "test_order_by_conditional_explicit": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_order_by_conditional_explicit"
      ]
    ]
  ],
  "test_join_promotion": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_join_promotion"
      ]
    ]
  ],
  "test_join_promotion_multiple_annotations": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_join_promotion_multiple_annotations"
      ]
    ]
  ],
  "test_m2m_exclude": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_m2m_exclude"
      ]
    ]
  ],
  "test_m2m_reuse": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseExpressionTests",
        "test_m2m_reuse"
      ]
    ]
  ],
  "test_simple_example": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseDocumentationExamples",
        "test_simple_example"
      ]
    ]
  ],
  "test_lookup_example": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseDocumentationExamples",
        "test_lookup_example"
      ]
    ]
  ],
  "test_conditional_update_example": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseDocumentationExamples",
        "test_conditional_update_example"
      ]
    ]
  ],
  "test_conditional_aggregation_example": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseDocumentationExamples",
        "test_conditional_aggregation_example"
      ]
    ]
  ],
  "test_filter_example": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseDocumentationExamples",
        "test_filter_example"
      ]
    ]
  ],
  "test_only_when_arguments": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseWhenTests",
        "test_only_when_arguments"
      ]
    ]
  ],
  "test_invalid_when_constructor_args": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseWhenTests",
        "test_invalid_when_constructor_args"
      ]
    ]
  ],
  "test_empty_q_object": [
    [
      "tests/expressions_case/tests.py",
      [
        "CaseWhenTests",
        "test_empty_q_object"
      ]
    ]
  ],
  "test_dense_rank": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_dense_rank"
      ]
    ]
  ],
  "test_department_salary": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_department_salary"
      ]
    ]
  ],
  "test_rank": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_rank"
      ]
    ]
  ],
  "test_row_number": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_row_number"
      ]
    ]
  ],
  "test_row_number_no_ordering": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_row_number_no_ordering"
      ]
    ]
  ],
  "test_avg_salary_department": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_avg_salary_department"
      ]
    ]
  ],
  "test_lag": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_lag"
      ]
    ]
  ],
  "test_first_value": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_first_value"
      ]
    ]
  ],
  "test_last_value": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_last_value"
      ]
    ]
  ],
  "test_function_list_of_values": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_function_list_of_values"
      ]
    ]
  ],
  "test_min_department": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_min_department"
      ]
    ]
  ],
  "test_max_per_year": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_max_per_year"
      ]
    ]
  ],
  "test_cume_dist": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_cume_dist"
      ]
    ]
  ],
  "test_nthvalue": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_nthvalue"
      ]
    ]
  ],
  "test_lead": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_lead"
      ]
    ]
  ],
  "test_lead_offset": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_lead_offset"
      ]
    ]
  ],
  "test_lead_default": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_lead_default"
      ]
    ]
  ],
  "test_ntile": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_ntile"
      ]
    ]
  ],
  "test_percent_rank": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_percent_rank"
      ]
    ]
  ],
  "test_nth_returns_null": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_nth_returns_null"
      ]
    ]
  ],
  "test_multiple_partitioning": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_multiple_partitioning"
      ]
    ]
  ],
  "test_multiple_ordering": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_multiple_ordering"
      ]
    ]
  ],
  "test_related_ordering_with_count": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_related_ordering_with_count"
      ]
    ]
  ],
  "test_range_n_preceding_and_following": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_range_n_preceding_and_following"
      ]
    ]
  ],
  "test_range_unbound": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_range_unbound"
      ]
    ]
  ],
  "test_subquery_row_range_rank": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_subquery_row_range_rank"
      ]
    ]
  ],
  "test_row_range_rank": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_row_range_rank"
      ]
    ]
  ],
  "test_distinct_window_function": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_distinct_window_function"
      ]
    ]
  ],
  "test_fail_update": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_fail_update"
      ]
    ]
  ],
  "test_fail_insert": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_fail_insert"
      ]
    ]
  ],
  "test_window_expression_within_subquery": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_window_expression_within_subquery"
      ]
    ]
  ],
  "test_invalid_start_value_range": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_invalid_start_value_range"
      ]
    ]
  ],
  "test_invalid_end_value_range": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_invalid_end_value_range"
      ]
    ]
  ],
  "test_invalid_type_end_value_range": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_invalid_type_end_value_range"
      ]
    ]
  ],
  "test_invalid_type_start_value_range": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_invalid_type_start_value_range"
      ]
    ]
  ],
  "test_invalid_type_end_row_range": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_invalid_type_end_row_range"
      ]
    ]
  ],
  "test_unsupported_range_frame_start": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_unsupported_range_frame_start"
      ]
    ]
  ],
  "test_unsupported_range_frame_end": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_unsupported_range_frame_end"
      ]
    ]
  ],
  "test_invalid_type_start_row_range": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowFunctionTests",
        "test_invalid_type_start_row_range"
      ]
    ]
  ],
  "test_unsupported_backend": [
    [
      "tests/expressions_window/tests.py",
      [
        "WindowUnsupportedTests",
        "test_unsupported_backend"
      ]
    ]
  ],
  "test_window_repr": [
    [
      "tests/expressions_window/tests.py",
      [
        "NonQueryWindowTests",
        "test_window_repr"
      ]
    ]
  ],
  "test_window_frame_repr": [
    [
      "tests/expressions_window/tests.py",
      [
        "NonQueryWindowTests",
        "test_window_frame_repr"
      ]
    ]
  ],
  "test_empty_group_by_cols": [
    [
      "tests/expressions_window/tests.py",
      [
        "NonQueryWindowTests",
        "test_empty_group_by_cols"
      ]
    ]
  ],
  "test_frame_empty_group_by_cols": [
    [
      "tests/expressions_window/tests.py",
      [
        "NonQueryWindowTests",
        "test_frame_empty_group_by_cols"
      ]
    ]
  ],
  "test_frame_window_frame_notimplemented": [
    [
      "tests/expressions_window/tests.py",
      [
        "NonQueryWindowTests",
        "test_frame_window_frame_notimplemented"
      ]
    ]
  ],
  "test_invalid_filter": [
    [
      "tests/expressions_window/tests.py",
      [
        "NonQueryWindowTests",
        "test_invalid_filter"
      ]
    ]
  ],
  "test_conditional_annotation": [
    [
      "tests/expressions_window/tests.py",
      [
        "NonQueryWindowTests",
        "test_conditional_annotation"
      ]
    ]
  ],
  "test_invalid_order_by": [
    [
      "tests/expressions_window/tests.py",
      [
        "NonQueryWindowTests",
        "test_invalid_order_by"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "QuerySetExceptionTests",
        "test_invalid_order_by"
      ]
    ]
  ],
  "test_invalid_source_expression": [
    [
      "tests/expressions_window/tests.py",
      [
        "NonQueryWindowTests",
        "test_invalid_source_expression"
      ]
    ]
  ],
  "new_revision": [
    [
      "tests/extra_regress/models.py",
      [
        "RevisionableModel",
        "new_revision"
      ]
    ]
  ],
  "test_regression_7314_7372": [
    [
      "tests/extra_regress/tests.py",
      [
        "ExtraRegressTests",
        "test_regression_7314_7372"
      ]
    ]
  ],
  "test_extra_stay_tied": [
    [
      "tests/extra_regress/tests.py",
      [
        "ExtraRegressTests",
        "test_extra_stay_tied"
      ]
    ]
  ],
  "test_regression_7957": [
    [
      "tests/extra_regress/tests.py",
      [
        "ExtraRegressTests",
        "test_regression_7957"
      ]
    ]
  ],
  "test_regression_7961": [
    [
      "tests/extra_regress/tests.py",
      [
        "ExtraRegressTests",
        "test_regression_7961"
      ]
    ]
  ],
  "test_regression_8063": [
    [
      "tests/extra_regress/tests.py",
      [
        "ExtraRegressTests",
        "test_regression_8063"
      ]
    ]
  ],
  "test_regression_8039": [
    [
      "tests/extra_regress/tests.py",
      [
        "ExtraRegressTests",
        "test_regression_8039"
      ]
    ]
  ],
  "test_regression_8819": [
    [
      "tests/extra_regress/tests.py",
      [
        "ExtraRegressTests",
        "test_regression_8819"
      ]
    ]
  ],
  "test_dates_query": [
    [
      "tests/extra_regress/tests.py",
      [
        "ExtraRegressTests",
        "test_dates_query"
      ]
    ]
  ],
  "test_values_with_extra": [
    [
      "tests/extra_regress/tests.py",
      [
        "ExtraRegressTests",
        "test_values_with_extra"
      ]
    ]
  ],
  "test_regression_10847": [
    [
      "tests/extra_regress/tests.py",
      [
        "ExtraRegressTests",
        "test_regression_10847"
      ]
    ]
  ],
  "test_regression_17877": [
    [
      "tests/extra_regress/tests.py",
      [
        "ExtraRegressTests",
        "test_regression_17877"
      ]
    ]
  ],
  "test_extra_values_distinct_ordering": [
    [
      "tests/extra_regress/tests.py",
      [
        "ExtraRegressTests",
        "test_extra_values_distinct_ordering"
      ]
    ]
  ],
  "test_db_tablespace": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_db_tablespace"
      ]
    ],
    [
      "tests/model_indexes/tests.py",
      [
        "IndexesTests",
        "test_db_tablespace"
      ]
    ]
  ],
  "test_auto_field": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_auto_field"
      ]
    ]
  ],
  "test_big_integer_field": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_big_integer_field"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "ModelOtherFieldTests",
        "test_big_integer_field"
      ]
    ]
  ],
  "test_boolean_field": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_boolean_field"
      ]
    ]
  ],
  "test_char_field": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_char_field"
      ]
    ]
  ],
  "test_char_field_choices": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_char_field_choices"
      ]
    ]
  ],
  "test_csi_field": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_csi_field"
      ]
    ]
  ],
  "test_date_field": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_date_field"
      ]
    ],
    [
      "tests/gis_tests/inspectapp/tests.py",
      [
        "OGRInspectTest",
        "test_date_field"
      ]
    ]
  ],
  "test_datetime_field": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_datetime_field"
      ]
    ],
    [
      "tests/queries/test_bulk_update.py",
      [
        "BulkUpdateTests",
        "test_datetime_field"
      ]
    ]
  ],
  "test_decimal_field": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_decimal_field"
      ]
    ]
  ],
  "test_decimal_field_0_decimal_places": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_decimal_field_0_decimal_places"
      ]
    ]
  ],
  "test_email_field": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_email_field"
      ]
    ]
  ],
  "test_file_field": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_file_field"
      ]
    ]
  ],
  "test_file_path_field": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_file_path_field"
      ]
    ]
  ],
  "test_float_field": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_float_field"
      ]
    ]
  ],
  "test_foreign_key": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_foreign_key"
      ]
    ],
    [
      "tests/known_related_objects/tests.py",
      [
        "ExistingRelatedInstancesTests",
        "test_foreign_key"
      ]
    ],
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_foreign_key"
      ]
    ],
    [
      "tests/queries/test_query.py",
      [
        "TestQuery",
        "test_foreign_key"
      ]
    ]
  ],
  "test_foreign_key_swapped": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_foreign_key_swapped"
      ]
    ]
  ],
  "test_one_to_one": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_one_to_one"
      ]
    ],
    [
      "tests/known_related_objects/tests.py",
      [
        "ExistingRelatedInstancesTests",
        "test_one_to_one"
      ]
    ]
  ],
  "test_image_field": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_image_field"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "FileAndImageFieldTests",
        "test_image_field"
      ]
    ]
  ],
  "test_integer_field": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_integer_field"
      ]
    ]
  ],
  "test_ip_address_field": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_ip_address_field"
      ]
    ]
  ],
  "test_generic_ip_address_field": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_generic_ip_address_field"
      ]
    ]
  ],
  "test_many_to_many_field": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_many_to_many_field"
      ]
    ],
    [
      "tests/select_related/tests.py",
      [
        "SelectRelatedValidationTests",
        "test_many_to_many_field"
      ]
    ]
  ],
  "test_many_to_many_field_swapped": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_many_to_many_field_swapped"
      ]
    ]
  ],
  "test_null_boolean_field": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_null_boolean_field"
      ]
    ]
  ],
  "test_positive_integer_field": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_positive_integer_field"
      ]
    ]
  ],
  "test_positive_small_integer_field": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_positive_small_integer_field"
      ]
    ]
  ],
  "test_positive_big_integer_field": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_positive_big_integer_field"
      ]
    ]
  ],
  "test_slug_field": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_slug_field"
      ]
    ]
  ],
  "test_small_integer_field": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_small_integer_field"
      ]
    ]
  ],
  "test_text_field": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_text_field"
      ]
    ]
  ],
  "test_url_field": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_url_field"
      ]
    ]
  ],
  "test_binary_field": [
    [
      "tests/field_deconstruction/tests.py",
      [
        "FieldDeconstructionTests",
        "test_binary_field"
      ]
    ]
  ],
  "test_field_defaults": [
    [
      "tests/field_defaults/tests.py",
      [
        "DefaultTests",
        "test_field_defaults"
      ]
    ]
  ],
  "_count_call": [
    [
      "tests/field_subclassing/fields.py",
      [
        "CustomDeferredAttribute",
        "_count_call"
      ]
    ]
  ],
  "test_db_parameters_respects_db_type": [
    [
      "tests/field_subclassing/tests.py",
      [
        "TestDbType",
        "test_db_parameters_respects_db_type"
      ]
    ]
  ],
  "test_descriptor_class": [
    [
      "tests/field_subclassing/tests.py",
      [
        "DescriptorClassTest",
        "test_descriptor_class"
      ]
    ]
  ],
  "callable_storage": [
    [
      "tests/file_storage/models.py",
      [
        "callable_storage"
      ]
    ]
  ],
  "custom_upload_to": [
    [
      "tests/file_storage/models.py",
      [
        "Storage",
        "custom_upload_to"
      ]
    ]
  ],
  "random_upload_to": [
    [
      "tests/file_storage/models.py",
      [
        "Storage",
        "random_upload_to"
      ]
    ]
  ],
  "pathlib_upload_to": [
    [
      "tests/file_storage/models.py",
      [
        "Storage",
        "pathlib_upload_to"
      ]
    ]
  ],
  "test_filefield_generate_filename": [
    [
      "tests/file_storage/test_generate_filename.py",
      [
        "GenerateFilenameStorageTests",
        "test_filefield_generate_filename"
      ]
    ]
  ],
  "test_filefield_generate_filename_with_upload_to": [
    [
      "tests/file_storage/test_generate_filename.py",
      [
        "GenerateFilenameStorageTests",
        "test_filefield_generate_filename_with_upload_to"
      ]
    ]
  ],
  "upload_to": [
    [
      "tests/file_storage/test_generate_filename.py",
      [
        "GenerateFilenameStorageTests",
        "test_filefield_awss3_storage",
        "upload_to"
      ]
    ],
    [
      "tests/migrations/test_writer.py",
      [
        "TestModel1",
        "upload_to"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "try_",
        "NoExtensionImageFile",
        "upload_to"
      ]
    ]
  ],
  "test_filefield_awss3_storage": [
    [
      "tests/file_storage/test_generate_filename.py",
      [
        "GenerateFilenameStorageTests",
        "test_filefield_awss3_storage"
      ]
    ]
  ],
  "test_get_filesystem_storage": [
    [
      "tests/file_storage/tests.py",
      [
        "GetStorageClassTests",
        "test_get_filesystem_storage"
      ]
    ]
  ],
  "test_get_invalid_storage_module": [
    [
      "tests/file_storage/tests.py",
      [
        "GetStorageClassTests",
        "test_get_invalid_storage_module"
      ]
    ]
  ],
  "test_get_nonexistent_storage_class": [
    [
      "tests/file_storage/tests.py",
      [
        "GetStorageClassTests",
        "test_get_nonexistent_storage_class"
      ]
    ]
  ],
  "test_get_nonexistent_storage_module": [
    [
      "tests/file_storage/tests.py",
      [
        "GetStorageClassTests",
        "test_get_nonexistent_storage_module"
      ]
    ]
  ],
  "test_lazy_base_url_init": [
    [
      "tests/file_storage/tests.py",
      [
        "FileSystemStorageTests",
        "test_lazy_base_url_init"
      ]
    ]
  ],
  "test_empty_location": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "test_empty_location"
      ]
    ]
  ],
  "test_file_access_options": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "test_file_access_options"
      ]
    ]
  ],
  "_test_file_time_getter": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "_test_file_time_getter"
      ]
    ]
  ],
  "_test_file_time_getter_tz_handling_on": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "_test_file_time_getter_tz_handling_on"
      ]
    ]
  ],
  "_test_file_time_getter_tz_handling_off": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "_test_file_time_getter_tz_handling_off"
      ]
    ]
  ],
  "test_file_get_accessed_time": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "test_file_get_accessed_time"
      ]
    ]
  ],
  "test_file_get_accessed_time_timezone": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "test_file_get_accessed_time_timezone"
      ]
    ]
  ],
  "test_file_get_created_time": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "test_file_get_created_time"
      ]
    ]
  ],
  "test_file_get_created_time_timezone": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "test_file_get_created_time_timezone"
      ]
    ]
  ],
  "test_file_get_modified_time": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "test_file_get_modified_time"
      ]
    ]
  ],
  "test_file_get_modified_time_timezone": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "test_file_get_modified_time_timezone"
      ]
    ]
  ],
  "test_file_save_without_name": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "test_file_save_without_name"
      ]
    ]
  ],
  "test_file_save_with_path": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "test_file_save_with_path"
      ]
    ]
  ],
  "test_save_doesnt_close": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "test_save_doesnt_close"
      ]
    ]
  ],
  "test_file_path": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "test_file_path"
      ]
    ],
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "test_file_path"
      ]
    ]
  ],
  "test_file_url": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "test_file_url"
      ]
    ]
  ],
  "test_base_url": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "test_base_url"
      ]
    ]
  ],
  "test_listdir": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "test_listdir"
      ]
    ]
  ],
  "test_file_storage_prevents_directory_traversal": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "test_file_storage_prevents_directory_traversal"
      ]
    ]
  ],
  "test_file_storage_preserves_filename_case": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "test_file_storage_preserves_filename_case"
      ]
    ]
  ],
  "fake_makedirs": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "test_makedirs_race_handling",
        "fake_makedirs"
      ]
    ]
  ],
  "test_makedirs_race_handling": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "test_makedirs_race_handling"
      ]
    ]
  ],
  "fake_remove": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "test_remove_race_handling",
        "fake_remove"
      ]
    ]
  ],
  "test_remove_race_handling": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "test_remove_race_handling"
      ]
    ]
  ],
  "test_file_chunks_error": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "test_file_chunks_error"
      ]
    ]
  ],
  "test_delete_no_name": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "test_delete_no_name"
      ]
    ]
  ],
  "test_delete_deletes_directories": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "test_delete_deletes_directories"
      ]
    ]
  ],
  "test_setting_changed": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "test_setting_changed"
      ]
    ]
  ],
  "test_file_methods_pathlib_path": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStorageTests",
        "test_file_methods_pathlib_path"
      ]
    ]
  ],
  "test_custom_get_available_name": [
    [
      "tests/file_storage/tests.py",
      [
        "CustomStorageTests",
        "test_custom_get_available_name"
      ]
    ]
  ],
  "test_save_overwrite_behavior": [
    [
      "tests/file_storage/tests.py",
      [
        "OverwritingStorageTests",
        "test_save_overwrite_behavior"
      ]
    ]
  ],
  "test_custom_storage_discarding_empty_content": [
    [
      "tests/file_storage/tests.py",
      [
        "DiscardingFalseContentStorageTests",
        "test_custom_storage_discarding_empty_content"
      ]
    ]
  ],
  "_storage_max_filename_length": [
    [
      "tests/file_storage/tests.py",
      [
        "FileFieldStorageTests",
        "_storage_max_filename_length"
      ]
    ]
  ],
  "test_files": [
    [
      "tests/file_storage/tests.py",
      [
        "FileFieldStorageTests",
        "test_files"
      ]
    ],
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "DebugViewTests",
        "test_files"
      ]
    ]
  ],
  "test_filefield_read": [
    [
      "tests/file_storage/tests.py",
      [
        "FileFieldStorageTests",
        "test_filefield_read"
      ]
    ]
  ],
  "test_filefield_write": [
    [
      "tests/file_storage/tests.py",
      [
        "FileFieldStorageTests",
        "test_filefield_write"
      ]
    ]
  ],
  "test_filefield_reopen": [
    [
      "tests/file_storage/tests.py",
      [
        "FileFieldStorageTests",
        "test_filefield_reopen"
      ]
    ]
  ],
  "test_duplicate_filename": [
    [
      "tests/file_storage/tests.py",
      [
        "FileFieldStorageTests",
        "test_duplicate_filename"
      ]
    ]
  ],
  "test_file_truncation": [
    [
      "tests/file_storage/tests.py",
      [
        "FileFieldStorageTests",
        "test_file_truncation"
      ]
    ]
  ],
  "test_extended_length_storage": [
    [
      "tests/file_storage/tests.py",
      [
        "FileFieldStorageTests",
        "test_extended_length_storage"
      ]
    ]
  ],
  "test_filefield_default": [
    [
      "tests/file_storage/tests.py",
      [
        "FileFieldStorageTests",
        "test_filefield_default"
      ]
    ]
  ],
  "test_empty_upload_to": [
    [
      "tests/file_storage/tests.py",
      [
        "FileFieldStorageTests",
        "test_empty_upload_to"
      ]
    ]
  ],
  "test_pathlib_upload_to": [
    [
      "tests/file_storage/tests.py",
      [
        "FileFieldStorageTests",
        "test_pathlib_upload_to"
      ]
    ]
  ],
  "test_random_upload_to": [
    [
      "tests/file_storage/tests.py",
      [
        "FileFieldStorageTests",
        "test_random_upload_to"
      ]
    ]
  ],
  "test_custom_valid_name_callable_upload_to": [
    [
      "tests/file_storage/tests.py",
      [
        "FileFieldStorageTests",
        "test_custom_valid_name_callable_upload_to"
      ]
    ]
  ],
  "test_filefield_pickling": [
    [
      "tests/file_storage/tests.py",
      [
        "FileFieldStorageTests",
        "test_filefield_pickling"
      ]
    ]
  ],
  "test_file_object": [
    [
      "tests/file_storage/tests.py",
      [
        "FileFieldStorageTests",
        "test_file_object"
      ]
    ]
  ],
  "test_stringio": [
    [
      "tests/file_storage/tests.py",
      [
        "FileFieldStorageTests",
        "test_stringio"
      ]
    ]
  ],
  "test_callable_base_class_error_raises": [
    [
      "tests/file_storage/tests.py",
      [
        "FieldCallableFileStorageTests",
        "test_callable_base_class_error_raises"
      ]
    ]
  ],
  "test_file_field_storage_none_uses_default_storage": [
    [
      "tests/file_storage/tests.py",
      [
        "FieldCallableFileStorageTests",
        "test_file_field_storage_none_uses_default_storage"
      ]
    ]
  ],
  "test_callable_function_storage_file_field": [
    [
      "tests/file_storage/tests.py",
      [
        "FieldCallableFileStorageTests",
        "test_callable_function_storage_file_field"
      ]
    ]
  ],
  "test_callable_class_storage_file_field": [
    [
      "tests/file_storage/tests.py",
      [
        "FieldCallableFileStorageTests",
        "test_callable_class_storage_file_field"
      ]
    ]
  ],
  "test_callable_storage_file_field_in_model": [
    [
      "tests/file_storage/tests.py",
      [
        "FieldCallableFileStorageTests",
        "test_callable_storage_file_field_in_model"
      ]
    ]
  ],
  "save_file": [
    [
      "tests/file_storage/tests.py",
      [
        "FileSaveRaceConditionTest",
        "save_file"
      ]
    ]
  ],
  "test_race_condition": [
    [
      "tests/file_storage/tests.py",
      [
        "FileSaveRaceConditionTest",
        "test_race_condition"
      ]
    ]
  ],
  "test_file_upload_permissions": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStoragePermissions",
        "test_file_upload_permissions"
      ]
    ]
  ],
  "test_file_upload_default_permissions": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStoragePermissions",
        "test_file_upload_default_permissions"
      ]
    ]
  ],
  "test_file_upload_directory_permissions": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStoragePermissions",
        "test_file_upload_directory_permissions"
      ]
    ]
  ],
  "test_file_upload_directory_default_permissions": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStoragePermissions",
        "test_file_upload_directory_default_permissions"
      ]
    ]
  ],
  "test_directory_with_dot": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStoragePathParsing",
        "test_directory_with_dot"
      ]
    ]
  ],
  "test_first_character_dot": [
    [
      "tests/file_storage/tests.py",
      [
        "FileStoragePathParsing",
        "test_first_character_dot"
      ]
    ]
  ],
  "test_content_saving": [
    [
      "tests/file_storage/tests.py",
      [
        "ContentFileStorageTestCase",
        "test_content_saving"
      ]
    ]
  ],
  "test_urllib_request_urlopen": [
    [
      "tests/file_storage/tests.py",
      [
        "FileLikeObjectTestCase",
        "test_urllib_request_urlopen"
      ]
    ]
  ],
  "test_simple_upload": [
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests",
        "test_simple_upload"
      ]
    ]
  ],
  "test_large_upload": [
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests",
        "test_large_upload"
      ]
    ]
  ],
  "_test_base64_upload": [
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests",
        "_test_base64_upload"
      ]
    ]
  ],
  "test_base64_upload": [
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests",
        "test_base64_upload"
      ]
    ]
  ],
  "test_big_base64_upload": [
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests",
        "test_big_base64_upload"
      ]
    ]
  ],
  "test_big_base64_newlines_upload": [
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests",
        "test_big_base64_newlines_upload"
      ]
    ]
  ],
  "test_unicode_file_name": [
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests",
        "test_unicode_file_name"
      ]
    ],
    [
      "tests/files/tests.py",
      [
        "FileTests",
        "test_unicode_file_name"
      ]
    ],
    [
      "tests/i18n/test_extraction.py",
      [
        "BasicExtractorTests",
        "test_unicode_file_name"
      ]
    ]
  ],
  "test_unicode_file_name_rfc2231": [
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests",
        "test_unicode_file_name_rfc2231"
      ]
    ]
  ],
  "test_unicode_name_rfc2231": [
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests",
        "test_unicode_name_rfc2231"
      ]
    ]
  ],
  "test_unicode_file_name_rfc2231_with_double_quotes": [
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests",
        "test_unicode_file_name_rfc2231_with_double_quotes"
      ]
    ]
  ],
  "test_unicode_name_rfc2231_with_double_quotes": [
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests",
        "test_unicode_name_rfc2231_with_double_quotes"
      ]
    ]
  ],
  "test_blank_filenames": [
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests",
        "test_blank_filenames"
      ]
    ]
  ],
  "test_dangerous_file_names": [
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests",
        "test_dangerous_file_names"
      ]
    ]
  ],
  "test_filename_overflow": [
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests",
        "test_filename_overflow"
      ]
    ]
  ],
  "test_file_content": [
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests",
        "test_file_content"
      ]
    ]
  ],
  "test_content_type_extra": [
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests",
        "test_content_type_extra"
      ]
    ]
  ],
  "test_truncated_multipart_handled_gracefully": [
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests",
        "test_truncated_multipart_handled_gracefully"
      ]
    ]
  ],
  "test_empty_multipart_handled_gracefully": [
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests",
        "test_empty_multipart_handled_gracefully"
      ]
    ]
  ],
  "test_custom_upload_handler": [
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests",
        "test_custom_upload_handler"
      ]
    ]
  ],
  "test_broken_custom_upload_handler": [
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests",
        "test_broken_custom_upload_handler"
      ]
    ]
  ],
  "test_fileupload_getlist": [
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests",
        "test_fileupload_getlist"
      ]
    ]
  ],
  "test_fileuploads_closed_at_request_end": [
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests",
        "test_fileuploads_closed_at_request_end"
      ]
    ]
  ],
  "test_no_parsing_triggered_by_fd_closing": [
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests",
        "test_no_parsing_triggered_by_fd_closing"
      ]
    ]
  ],
  "test_file_error_blocking": [
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests",
        "test_file_error_blocking"
      ]
    ]
  ],
  "test_filename_case_preservation": [
    [
      "tests/file_uploads/tests.py",
      [
        "FileUploadTests",
        "test_filename_case_preservation"
      ]
    ]
  ],
  "test_readonly_root": [
    [
      "tests/file_uploads/tests.py",
      [
        "DirectoryCreationTests",
        "test_readonly_root"
      ]
    ]
  ],
  "test_not_a_directory": [
    [
      "tests/file_uploads/tests.py",
      [
        "DirectoryCreationTests",
        "test_not_a_directory"
      ]
    ]
  ],
  "test_empty_upload_handlers": [
    [
      "tests/file_uploads/tests.py",
      [
        "MultiParserTests",
        "test_empty_upload_handlers"
      ]
    ]
  ],
  "test_invalid_content_type": [
    [
      "tests/file_uploads/tests.py",
      [
        "MultiParserTests",
        "test_invalid_content_type"
      ]
    ]
  ],
  "test_negative_content_length": [
    [
      "tests/file_uploads/tests.py",
      [
        "MultiParserTests",
        "test_negative_content_length"
      ]
    ]
  ],
  "test_bad_type_content_length": [
    [
      "tests/file_uploads/tests.py",
      [
        "MultiParserTests",
        "test_bad_type_content_length"
      ]
    ]
  ],
  "test_rfc2231_parsing": [
    [
      "tests/file_uploads/tests.py",
      [
        "MultiParserTests",
        "test_rfc2231_parsing"
      ]
    ]
  ],
  "test_rfc2231_wrong_title": [
    [
      "tests/file_uploads/tests.py",
      [
        "MultiParserTests",
        "test_rfc2231_wrong_title"
      ]
    ]
  ],
  "file_upload_view": [
    [
      "tests/file_uploads/views.py",
      [
        "file_upload_view"
      ]
    ]
  ],
  "file_upload_view_verify": [
    [
      "tests/file_uploads/views.py",
      [
        "file_upload_view_verify"
      ]
    ]
  ],
  "file_upload_unicode_name": [
    [
      "tests/file_uploads/views.py",
      [
        "file_upload_unicode_name"
      ]
    ]
  ],
  "file_upload_echo": [
    [
      "tests/file_uploads/views.py",
      [
        "file_upload_echo"
      ]
    ]
  ],
  "file_upload_echo_content": [
    [
      "tests/file_uploads/views.py",
      [
        "file_upload_echo_content"
      ]
    ]
  ],
  "file_upload_quota": [
    [
      "tests/file_uploads/views.py",
      [
        "file_upload_quota"
      ]
    ]
  ],
  "file_upload_quota_broken": [
    [
      "tests/file_uploads/views.py",
      [
        "file_upload_quota_broken"
      ]
    ]
  ],
  "file_upload_getlist_count": [
    [
      "tests/file_uploads/views.py",
      [
        "file_upload_getlist_count"
      ]
    ]
  ],
  "file_upload_errors": [
    [
      "tests/file_uploads/views.py",
      [
        "file_upload_errors"
      ]
    ]
  ],
  "file_upload_filename_case_view": [
    [
      "tests/file_uploads/views.py",
      [
        "file_upload_filename_case_view"
      ]
    ]
  ],
  "file_upload_content_type_extra": [
    [
      "tests/file_uploads/views.py",
      [
        "file_upload_content_type_extra"
      ]
    ]
  ],
  "file_upload_fd_closing": [
    [
      "tests/file_uploads/views.py",
      [
        "file_upload_fd_closing"
      ]
    ]
  ],
  "test_unicode_uploadedfile_name": [
    [
      "tests/files/tests.py",
      [
        "FileTests",
        "test_unicode_uploadedfile_name"
      ]
    ]
  ],
  "test_context_manager": [
    [
      "tests/files/tests.py",
      [
        "FileTests",
        "test_context_manager"
      ]
    ],
    [
      "tests/settings_tests/tests.py",
      [
        "SettingsTests",
        "test_context_manager"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "AssertWarnsMessageTests",
        "test_context_manager"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "IsolatedAppsTests",
        "test_context_manager"
      ]
    ]
  ],
  "test_open_resets_opened_file_to_start_and_returns_context_manager": [
    [
      "tests/files/tests.py",
      [
        "FileTests",
        "test_open_resets_opened_file_to_start_and_returns_context_manager"
      ]
    ]
  ],
  "test_open_reopens_closed_file_and_returns_context_manager": [
    [
      "tests/files/tests.py",
      [
        "FileTests",
        "test_open_reopens_closed_file_and_returns_context_manager"
      ]
    ]
  ],
  "test_namedtemporaryfile_closes": [
    [
      "tests/files/tests.py",
      [
        "FileTests",
        "test_namedtemporaryfile_closes"
      ]
    ]
  ],
  "test_file_mode": [
    [
      "tests/files/tests.py",
      [
        "FileTests",
        "test_file_mode"
      ]
    ]
  ],
  "test_file_iteration": [
    [
      "tests/files/tests.py",
      [
        "FileTests",
        "test_file_iteration"
      ]
    ]
  ],
  "test_file_iteration_windows_newlines": [
    [
      "tests/files/tests.py",
      [
        "FileTests",
        "test_file_iteration_windows_newlines"
      ]
    ]
  ],
  "test_file_iteration_mac_newlines": [
    [
      "tests/files/tests.py",
      [
        "FileTests",
        "test_file_iteration_mac_newlines"
      ]
    ]
  ],
  "test_file_iteration_mixed_newlines": [
    [
      "tests/files/tests.py",
      [
        "FileTests",
        "test_file_iteration_mixed_newlines"
      ]
    ]
  ],
  "test_file_iteration_with_unix_newline_at_chunk_boundary": [
    [
      "tests/files/tests.py",
      [
        "FileTests",
        "test_file_iteration_with_unix_newline_at_chunk_boundary"
      ]
    ]
  ],
  "test_file_iteration_with_windows_newline_at_chunk_boundary": [
    [
      "tests/files/tests.py",
      [
        "FileTests",
        "test_file_iteration_with_windows_newline_at_chunk_boundary"
      ]
    ]
  ],
  "test_file_iteration_with_mac_newline_at_chunk_boundary": [
    [
      "tests/files/tests.py",
      [
        "FileTests",
        "test_file_iteration_with_mac_newline_at_chunk_boundary"
      ]
    ]
  ],
  "test_file_iteration_with_text": [
    [
      "tests/files/tests.py",
      [
        "FileTests",
        "test_file_iteration_with_text"
      ]
    ]
  ],
  "test_readable": [
    [
      "tests/files/tests.py",
      [
        "FileTests",
        "test_readable"
      ]
    ]
  ],
  "test_writable": [
    [
      "tests/files/tests.py",
      [
        "FileTests",
        "test_writable"
      ]
    ]
  ],
  "test_seekable": [
    [
      "tests/files/tests.py",
      [
        "FileTests",
        "test_seekable"
      ]
    ]
  ],
  "test_io_wrapper": [
    [
      "tests/files/tests.py",
      [
        "FileTests",
        "test_io_wrapper"
      ]
    ]
  ],
  "test_noname_file_default_name": [
    [
      "tests/files/tests.py",
      [
        "NoNameFileTestCase",
        "test_noname_file_default_name"
      ]
    ]
  ],
  "test_noname_file_get_size": [
    [
      "tests/files/tests.py",
      [
        "NoNameFileTestCase",
        "test_noname_file_get_size"
      ]
    ]
  ],
  "test_content_file_default_name": [
    [
      "tests/files/tests.py",
      [
        "ContentFileTestCase",
        "test_content_file_default_name"
      ]
    ]
  ],
  "test_content_file_custom_name": [
    [
      "tests/files/tests.py",
      [
        "ContentFileTestCase",
        "test_content_file_custom_name"
      ]
    ]
  ],
  "test_content_file_input_type": [
    [
      "tests/files/tests.py",
      [
        "ContentFileTestCase",
        "test_content_file_input_type"
      ]
    ]
  ],
  "test_open_resets_file_to_start_and_returns_context_manager": [
    [
      "tests/files/tests.py",
      [
        "ContentFileTestCase",
        "test_open_resets_file_to_start_and_returns_context_manager"
      ]
    ],
    [
      "tests/files/tests.py",
      [
        "InMemoryUploadedFileTests",
        "test_open_resets_file_to_start_and_returns_context_manager"
      ]
    ]
  ],
  "test_size_changing_after_writing": [
    [
      "tests/files/tests.py",
      [
        "ContentFileTestCase",
        "test_size_changing_after_writing"
      ]
    ]
  ],
  "test_extension_kept": [
    [
      "tests/files/tests.py",
      [
        "TemporaryUploadedFileTests",
        "test_extension_kept"
      ]
    ]
  ],
  "test_file_upload_temp_dir_pathlib": [
    [
      "tests/files/tests.py",
      [
        "TemporaryUploadedFileTests",
        "test_file_upload_temp_dir_pathlib"
      ]
    ]
  ],
  "test_not_closing_of_files": [
    [
      "tests/files/tests.py",
      [
        "DimensionClosingBug",
        "test_not_closing_of_files"
      ]
    ]
  ],
  "catching_open": [
    [
      "tests/files/tests.py",
      [
        "DimensionClosingBug",
        "test_closing_of_filenames",
        "catching_open"
      ]
    ]
  ],
  "test_closing_of_filenames": [
    [
      "tests/files/tests.py",
      [
        "DimensionClosingBug",
        "test_closing_of_filenames"
      ]
    ]
  ],
  "test_multiple_calls": [
    [
      "tests/files/tests.py",
      [
        "InconsistentGetImageDimensionsBug",
        "test_multiple_calls"
      ]
    ]
  ],
  "test_bug_19457": [
    [
      "tests/files/tests.py",
      [
        "InconsistentGetImageDimensionsBug",
        "test_bug_19457"
      ]
    ]
  ],
  "test_invalid_image": [
    [
      "tests/files/tests.py",
      [
        "GetImageDimensionsTests",
        "test_invalid_image"
      ]
    ]
  ],
  "test_valid_image": [
    [
      "tests/files/tests.py",
      [
        "GetImageDimensionsTests",
        "test_valid_image"
      ]
    ]
  ],
  "test_webp": [
    [
      "tests/files/tests.py",
      [
        "GetImageDimensionsTests",
        "test_webp"
      ]
    ]
  ],
  "test_file_move_overwrite": [
    [
      "tests/files/tests.py",
      [
        "FileMoveSafeTests",
        "test_file_move_overwrite"
      ]
    ]
  ],
  "test_file_move_copystat_cifs": [
    [
      "tests/files/tests.py",
      [
        "FileMoveSafeTests",
        "test_file_move_copystat_cifs"
      ]
    ]
  ],
  "test_in_memory_spooled_temp": [
    [
      "tests/files/tests.py",
      [
        "SpooledTempTests",
        "test_in_memory_spooled_temp"
      ]
    ]
  ],
  "test_written_spooled_temp": [
    [
      "tests/files/tests.py",
      [
        "SpooledTempTests",
        "test_written_spooled_temp"
      ]
    ]
  ],
  "test_select_related": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_select_related"
      ]
    ],
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_select_related"
      ]
    ],
    [
      "tests/model_fields/test_booleanfield.py",
      [
        "BooleanFieldTests",
        "test_select_related"
      ]
    ],
    [
      "tests/multiple_database/tests.py",
      [
        "QueryTestCase",
        "test_select_related"
      ]
    ],
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelTests",
        "test_select_related"
      ]
    ]
  ],
  "test_select_related_multiple": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_select_related_multiple"
      ]
    ]
  ],
  "test_select_related_with_empty_relation": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_select_related_with_empty_relation"
      ]
    ]
  ],
  "test_select_related_foreign_key": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_select_related_foreign_key"
      ]
    ]
  ],
  "test_select_related_foreign_key_for_update_of": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_select_related_foreign_key_for_update_of"
      ]
    ]
  ],
  "test_without_join": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_without_join"
      ]
    ]
  ],
  "test_with_join": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_with_join"
      ]
    ]
  ],
  "test_with_exclude": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_with_exclude"
      ]
    ]
  ],
  "test_with_join_and_complex_condition": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_with_join_and_complex_condition"
      ]
    ]
  ],
  "test_internal_queryset_alias_mapping": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_internal_queryset_alias_mapping"
      ]
    ]
  ],
  "test_with_multiple_filter": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_with_multiple_filter"
      ]
    ]
  ],
  "test_multiple_times": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_multiple_times"
      ]
    ]
  ],
  "test_exclude_relation_with_join": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_exclude_relation_with_join"
      ]
    ]
  ],
  "test_with_m2m": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_with_m2m"
      ]
    ]
  ],
  "test_with_m2m_deep": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_with_m2m_deep"
      ]
    ]
  ],
  "test_with_m2m_multijoin": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_with_m2m_multijoin"
      ]
    ]
  ],
  "test_union": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_union"
      ]
    ],
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_union"
      ]
    ],
    [
      "tests/gis_tests/geo3d/tests.py",
      [
        "Geo3DTest",
        "test_union"
      ]
    ],
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_union"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_union"
      ]
    ]
  ],
  "test_intersection": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_intersection"
      ]
    ],
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_intersection"
      ]
    ],
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_intersection"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_intersection"
      ]
    ]
  ],
  "test_difference": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_difference"
      ]
    ],
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_difference"
      ]
    ],
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_difference"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_difference"
      ]
    ]
  ],
  "test_select_for_update": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_select_for_update"
      ]
    ]
  ],
  "test_only_not_supported": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_only_not_supported"
      ]
    ]
  ],
  "test_as_subquery": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_as_subquery"
      ]
    ]
  ],
  "test_with_foreign_key_error": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_with_foreign_key_error"
      ]
    ]
  ],
  "test_with_foreign_key_on_condition_error": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_with_foreign_key_on_condition_error"
      ]
    ]
  ],
  "test_with_empty_relation_name_error": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_with_empty_relation_name_error"
      ]
    ]
  ],
  "test_with_condition_as_expression_error": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_with_condition_as_expression_error"
      ]
    ]
  ],
  "test_with_prefetch_related": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_with_prefetch_related"
      ]
    ]
  ],
  "test_with_generic_foreign_key": [
    [
      "tests/filtered_relation/tests.py",
      [
        "FilteredRelationTests",
        "test_with_generic_foreign_key"
      ]
    ]
  ],
  "test_class_fixtures": [
    [
      "tests/fixtures/tests.py",
      [
        "TestCaseFixtureLoadingTests",
        "test_class_fixtures"
      ]
    ],
    [
      "tests/fixtures/tests.py",
      [
        "SubclassTestCaseFixtureLoadingTests",
        "test_class_fixtures"
      ]
    ],
    [
      "tests/fixtures_model_package/tests.py",
      [
        "SampleTestCase",
        "test_class_fixtures"
      ]
    ]
  ],
  "_dumpdata_assert": [
    [
      "tests/fixtures/tests.py",
      [
        "DumpDataAssertMixin",
        "_dumpdata_assert"
      ]
    ]
  ],
  "test_loading_and_dumping": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureLoadingTests",
        "test_loading_and_dumping"
      ]
    ]
  ],
  "test_dumpdata_with_excludes": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureLoadingTests",
        "test_dumpdata_with_excludes"
      ]
    ]
  ],
  "test_load_fixture_with_special_characters": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureLoadingTests",
        "test_load_fixture_with_special_characters"
      ]
    ]
  ],
  "test_dumpdata_with_filtering_manager": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureLoadingTests",
        "test_dumpdata_with_filtering_manager"
      ]
    ]
  ],
  "test_dumpdata_with_pks": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureLoadingTests",
        "test_dumpdata_with_pks"
      ]
    ]
  ],
  "test_dumpdata_with_uuid_pks": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureLoadingTests",
        "test_dumpdata_with_uuid_pks"
      ]
    ]
  ],
  "test_dumpdata_with_file_output": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureLoadingTests",
        "test_dumpdata_with_file_output"
      ]
    ]
  ],
  "test_dumpdata_progressbar": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureLoadingTests",
        "test_dumpdata_progressbar"
      ]
    ]
  ],
  "test_dumpdata_proxy_without_concrete": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureLoadingTests",
        "test_dumpdata_proxy_without_concrete"
      ]
    ]
  ],
  "test_dumpdata_proxy_with_concrete": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureLoadingTests",
        "test_dumpdata_proxy_with_concrete"
      ]
    ]
  ],
  "test_compress_format_loading": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureLoadingTests",
        "test_compress_format_loading"
      ]
    ]
  ],
  "test_compressed_specified_loading": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureLoadingTests",
        "test_compressed_specified_loading"
      ]
    ]
  ],
  "test_compressed_loading": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureLoadingTests",
        "test_compressed_loading"
      ]
    ]
  ],
  "test_ambiguous_compressed_fixture": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureLoadingTests",
        "test_ambiguous_compressed_fixture"
      ]
    ]
  ],
  "test_db_loading": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureLoadingTests",
        "test_db_loading"
      ]
    ]
  ],
  "test_loaddata_error_message": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureLoadingTests",
        "test_loaddata_error_message"
      ]
    ]
  ],
  "test_loaddata_null_characters_on_postgresql": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureLoadingTests",
        "test_loaddata_null_characters_on_postgresql"
      ]
    ]
  ],
  "test_loaddata_app_option": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureLoadingTests",
        "test_loaddata_app_option"
      ]
    ]
  ],
  "test_loaddata_verbosity_three": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureLoadingTests",
        "test_loaddata_verbosity_three"
      ]
    ]
  ],
  "test_loading_using": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureLoadingTests",
        "test_loading_using"
      ]
    ]
  ],
  "test_unmatched_identifier_loading": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureLoadingTests",
        "test_unmatched_identifier_loading"
      ]
    ]
  ],
  "test_output_formats": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureLoadingTests",
        "test_output_formats"
      ]
    ]
  ],
  "test_loading_with_exclude_app": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureLoadingTests",
        "test_loading_with_exclude_app"
      ]
    ]
  ],
  "test_loading_with_exclude_model": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureLoadingTests",
        "test_loading_with_exclude_model"
      ]
    ]
  ],
  "test_exclude_option_errors": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureLoadingTests",
        "test_exclude_option_errors"
      ]
    ]
  ],
  "test_stdin_without_format": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureLoadingTests",
        "test_stdin_without_format"
      ]
    ]
  ],
  "test_loading_stdin": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureLoadingTests",
        "test_loading_stdin"
      ]
    ]
  ],
  "test_loaddata_not_existent_fixture_file": [
    [
      "tests/fixtures/tests.py",
      [
        "NonexistentFixtureTests",
        "test_loaddata_not_existent_fixture_file"
      ]
    ]
  ],
  "test_nonexistent_fixture_no_constraint_checking": [
    [
      "tests/fixtures/tests.py",
      [
        "NonexistentFixtureTests",
        "test_nonexistent_fixture_no_constraint_checking"
      ]
    ]
  ],
  "test_format_discovery": [
    [
      "tests/fixtures/tests.py",
      [
        "FixtureTransactionTests",
        "test_format_discovery"
      ]
    ]
  ],
  "test_forward_reference_fk": [
    [
      "tests/fixtures/tests.py",
      [
        "ForwardReferenceTests",
        "test_forward_reference_fk"
      ]
    ]
  ],
  "test_forward_reference_fk_natural_key": [
    [
      "tests/fixtures/tests.py",
      [
        "ForwardReferenceTests",
        "test_forward_reference_fk_natural_key"
      ]
    ]
  ],
  "test_forward_reference_m2m": [
    [
      "tests/fixtures/tests.py",
      [
        "ForwardReferenceTests",
        "test_forward_reference_m2m"
      ]
    ]
  ],
  "test_forward_reference_m2m_natural_key": [
    [
      "tests/fixtures/tests.py",
      [
        "ForwardReferenceTests",
        "test_forward_reference_m2m_natural_key"
      ]
    ]
  ],
  "test_circular_reference_natural_key": [
    [
      "tests/fixtures/tests.py",
      [
        "CircularReferenceTests",
        "test_circular_reference_natural_key"
      ]
    ]
  ],
  "test_loaddata": [
    [
      "tests/fixtures_model_package/tests.py",
      [
        "FixtureTestCase",
        "test_loaddata"
      ]
    ]
  ],
  "animal_pre_save_check": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "animal_pre_save_check"
      ]
    ]
  ],
  "test_duplicate_pk": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_duplicate_pk"
      ]
    ]
  ],
  "test_loaddata_not_found_fields_not_ignore": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_loaddata_not_found_fields_not_ignore"
      ]
    ]
  ],
  "test_loaddata_not_found_fields_ignore": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_loaddata_not_found_fields_ignore"
      ]
    ]
  ],
  "test_loaddata_not_found_fields_ignore_xml": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_loaddata_not_found_fields_ignore_xml"
      ]
    ]
  ],
  "test_pretty_print_xml": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_pretty_print_xml"
      ]
    ]
  ],
  "test_pretty_print_xml_empty_strings": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_pretty_print_xml_empty_strings"
      ]
    ]
  ],
  "test_absolute_path": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_absolute_path"
      ]
    ]
  ],
  "test_relative_path": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_relative_path"
      ]
    ],
    [
      "tests/resolve_url/tests.py",
      [
        "ResolveUrlTests",
        "test_relative_path"
      ]
    ]
  ],
  "test_relative_path_in_fixture_dirs": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_relative_path_in_fixture_dirs"
      ]
    ]
  ],
  "test_path_containing_dots": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_path_containing_dots"
      ]
    ]
  ],
  "test_unknown_format": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_unknown_format"
      ]
    ],
    [
      "tests/queries/test_explain.py",
      [
        "ExplainTests",
        "test_unknown_format"
      ]
    ]
  ],
  "test_unimportable_serializer": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_unimportable_serializer"
      ]
    ]
  ],
  "test_invalid_data_no_ext": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_invalid_data_no_ext"
      ]
    ]
  ],
  "test_error_message": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_error_message"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "AssertTemplateUsedContextManagerTests",
        "test_error_message"
      ]
    ]
  ],
  "test_pg_sequence_resetting_checks": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_pg_sequence_resetting_checks"
      ]
    ]
  ],
  "test_close_connection_after_loaddata": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_close_connection_after_loaddata"
      ]
    ]
  ],
  "test_field_value_coerce": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_field_value_coerce"
      ]
    ]
  ],
  "test_dumpdata_uses_default_manager": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_dumpdata_uses_default_manager"
      ]
    ]
  ],
  "test_proxy_model_included": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_proxy_model_included"
      ]
    ]
  ],
  "test_loaddata_works_when_fixture_has_forward_refs": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_loaddata_works_when_fixture_has_forward_refs"
      ]
    ]
  ],
  "test_loaddata_raises_error_when_fixture_has_invalid_foreign_key": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_loaddata_raises_error_when_fixture_has_invalid_foreign_key"
      ]
    ]
  ],
  "test_loaddata_forward_refs_split_fixtures": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_loaddata_forward_refs_split_fixtures"
      ]
    ]
  ],
  "test_loaddata_no_fixture_specified": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_loaddata_no_fixture_specified"
      ]
    ]
  ],
  "test_ticket_20820": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_ticket_20820"
      ]
    ]
  ],
  "test_ticket_22421": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_ticket_22421"
      ]
    ]
  ],
  "test_loaddata_with_m2m_to_self": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_loaddata_with_m2m_to_self"
      ]
    ]
  ],
  "test_fixture_dirs_with_duplicates": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_fixture_dirs_with_duplicates"
      ]
    ]
  ],
  "test_fixture_dirs_with_default_fixture_path": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_fixture_dirs_with_default_fixture_path"
      ]
    ]
  ],
  "test_loaddata_with_valid_fixture_dirs": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_loaddata_with_valid_fixture_dirs"
      ]
    ]
  ],
  "test_fixtures_dir_pathlib": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestFixtures",
        "test_fixtures_dir_pathlib"
      ]
    ]
  ],
  "test_nk_deserialize": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "NaturalKeyFixtureTests",
        "test_nk_deserialize"
      ]
    ]
  ],
  "test_nk_deserialize_xml": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "NaturalKeyFixtureTests",
        "test_nk_deserialize_xml"
      ]
    ]
  ],
  "test_nk_on_serialize": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "NaturalKeyFixtureTests",
        "test_nk_on_serialize"
      ]
    ]
  ],
  "test_dependency_sorting": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "NaturalKeyFixtureTests",
        "test_dependency_sorting"
      ]
    ]
  ],
  "test_dependency_sorting_2": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "NaturalKeyFixtureTests",
        "test_dependency_sorting_2"
      ]
    ]
  ],
  "test_dependency_sorting_3": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "NaturalKeyFixtureTests",
        "test_dependency_sorting_3"
      ]
    ]
  ],
  "test_dependency_sorting_4": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "NaturalKeyFixtureTests",
        "test_dependency_sorting_4"
      ]
    ]
  ],
  "test_dependency_sorting_5": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "NaturalKeyFixtureTests",
        "test_dependency_sorting_5"
      ]
    ]
  ],
  "test_dependency_sorting_6": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "NaturalKeyFixtureTests",
        "test_dependency_sorting_6"
      ]
    ]
  ],
  "test_dependency_sorting_dangling": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "NaturalKeyFixtureTests",
        "test_dependency_sorting_dangling"
      ]
    ]
  ],
  "test_dependency_sorting_tight_circular": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "NaturalKeyFixtureTests",
        "test_dependency_sorting_tight_circular"
      ]
    ]
  ],
  "test_dependency_sorting_tight_circular_2": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "NaturalKeyFixtureTests",
        "test_dependency_sorting_tight_circular_2"
      ]
    ]
  ],
  "test_dependency_self_referential": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "NaturalKeyFixtureTests",
        "test_dependency_self_referential"
      ]
    ]
  ],
  "test_dependency_sorting_long": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "NaturalKeyFixtureTests",
        "test_dependency_sorting_long"
      ]
    ]
  ],
  "test_dependency_sorting_normal": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "NaturalKeyFixtureTests",
        "test_dependency_sorting_normal"
      ]
    ]
  ],
  "test_normal_pk": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "NaturalKeyFixtureTests",
        "test_normal_pk"
      ]
    ]
  ],
  "test_dependency_sorting_m2m_simple": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "M2MNaturalKeyFixtureTests",
        "test_dependency_sorting_m2m_simple"
      ]
    ]
  ],
  "test_dependency_sorting_m2m_simple_circular": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "M2MNaturalKeyFixtureTests",
        "test_dependency_sorting_m2m_simple_circular"
      ]
    ]
  ],
  "test_dependency_sorting_m2m_complex": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "M2MNaturalKeyFixtureTests",
        "test_dependency_sorting_m2m_complex"
      ]
    ]
  ],
  "test_dependency_sorting_m2m_complex_circular_1": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "M2MNaturalKeyFixtureTests",
        "test_dependency_sorting_m2m_complex_circular_1"
      ]
    ]
  ],
  "test_dependency_sorting_m2m_complex_circular_2": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "M2MNaturalKeyFixtureTests",
        "test_dependency_sorting_m2m_complex_circular_2"
      ]
    ]
  ],
  "test_dump_and_load_m2m_simple": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "M2MNaturalKeyFixtureTests",
        "test_dump_and_load_m2m_simple"
      ]
    ]
  ],
  "test_ticket_11101": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestTicket11101",
        "test_ticket_11101"
      ]
    ]
  ],
  "test_fixtures_loaded": [
    [
      "tests/fixtures_regress/tests.py",
      [
        "TestLoadFixtureFromOtherAppDirectory",
        "test_fixtures_loaded"
      ]
    ],
    [
      "tests/servers/tests.py",
      [
        "LiveServerDatabase",
        "test_fixtures_loaded"
      ]
    ]
  ],
  "test_view_flatpage": [
    [
      "tests/flatpages_tests/test_csrf.py",
      [
        "FlatpageCSRFTests",
        "test_view_flatpage"
      ]
    ],
    [
      "tests/flatpages_tests/test_middleware.py",
      [
        "FlatpageMiddlewareTests",
        "test_view_flatpage"
      ]
    ],
    [
      "tests/flatpages_tests/test_views.py",
      [
        "FlatpageViewTests",
        "test_view_flatpage"
      ]
    ]
  ],
  "test_view_non_existent_flatpage": [
    [
      "tests/flatpages_tests/test_csrf.py",
      [
        "FlatpageCSRFTests",
        "test_view_non_existent_flatpage"
      ]
    ],
    [
      "tests/flatpages_tests/test_middleware.py",
      [
        "FlatpageMiddlewareTests",
        "test_view_non_existent_flatpage"
      ]
    ],
    [
      "tests/flatpages_tests/test_views.py",
      [
        "FlatpageViewTests",
        "test_view_non_existent_flatpage"
      ]
    ]
  ],
  "test_view_authenticated_flatpage": [
    [
      "tests/flatpages_tests/test_csrf.py",
      [
        "FlatpageCSRFTests",
        "test_view_authenticated_flatpage"
      ]
    ],
    [
      "tests/flatpages_tests/test_middleware.py",
      [
        "FlatpageMiddlewareTests",
        "test_view_authenticated_flatpage"
      ]
    ],
    [
      "tests/flatpages_tests/test_views.py",
      [
        "FlatpageViewTests",
        "test_view_authenticated_flatpage"
      ]
    ]
  ],
  "test_fallback_flatpage": [
    [
      "tests/flatpages_tests/test_csrf.py",
      [
        "FlatpageCSRFTests",
        "test_fallback_flatpage"
      ]
    ],
    [
      "tests/flatpages_tests/test_middleware.py",
      [
        "FlatpageMiddlewareTests",
        "test_fallback_flatpage"
      ]
    ],
    [
      "tests/flatpages_tests/test_views.py",
      [
        "FlatpageViewTests",
        "test_fallback_flatpage"
      ]
    ]
  ],
  "test_fallback_non_existent_flatpage": [
    [
      "tests/flatpages_tests/test_csrf.py",
      [
        "FlatpageCSRFTests",
        "test_fallback_non_existent_flatpage"
      ]
    ],
    [
      "tests/flatpages_tests/test_middleware.py",
      [
        "FlatpageMiddlewareTests",
        "test_fallback_non_existent_flatpage"
      ]
    ],
    [
      "tests/flatpages_tests/test_views.py",
      [
        "FlatpageViewTests",
        "test_fallback_non_existent_flatpage"
      ]
    ]
  ],
  "test_post_view_flatpage": [
    [
      "tests/flatpages_tests/test_csrf.py",
      [
        "FlatpageCSRFTests",
        "test_post_view_flatpage"
      ]
    ]
  ],
  "test_post_fallback_flatpage": [
    [
      "tests/flatpages_tests/test_csrf.py",
      [
        "FlatpageCSRFTests",
        "test_post_fallback_flatpage"
      ]
    ]
  ],
  "test_post_unknown_page": [
    [
      "tests/flatpages_tests/test_csrf.py",
      [
        "FlatpageCSRFTests",
        "test_post_unknown_page"
      ]
    ]
  ],
  "test_flatpage_admin_form_url_validation": [
    [
      "tests/flatpages_tests/test_forms.py",
      [
        "FlatpageAdminFormTests",
        "test_flatpage_admin_form_url_validation"
      ]
    ]
  ],
  "test_flatpage_requires_leading_slash": [
    [
      "tests/flatpages_tests/test_forms.py",
      [
        "FlatpageAdminFormTests",
        "test_flatpage_requires_leading_slash"
      ]
    ]
  ],
  "test_flatpage_requires_trailing_slash_with_append_slash": [
    [
      "tests/flatpages_tests/test_forms.py",
      [
        "FlatpageAdminFormTests",
        "test_flatpage_requires_trailing_slash_with_append_slash"
      ]
    ]
  ],
  "test_flatpage_doesnt_requires_trailing_slash_without_append_slash": [
    [
      "tests/flatpages_tests/test_forms.py",
      [
        "FlatpageAdminFormTests",
        "test_flatpage_doesnt_requires_trailing_slash_without_append_slash"
      ]
    ]
  ],
  "test_flatpage_admin_form_url_uniqueness_validation": [
    [
      "tests/flatpages_tests/test_forms.py",
      [
        "FlatpageAdminFormTests",
        "test_flatpage_admin_form_url_uniqueness_validation"
      ]
    ]
  ],
  "test_flatpage_admin_form_edit": [
    [
      "tests/flatpages_tests/test_forms.py",
      [
        "FlatpageAdminFormTests",
        "test_flatpage_admin_form_edit"
      ]
    ]
  ],
  "test_flatpage_nosites": [
    [
      "tests/flatpages_tests/test_forms.py",
      [
        "FlatpageAdminFormTests",
        "test_flatpage_nosites"
      ]
    ]
  ],
  "test_fallback_authenticated_flatpage": [
    [
      "tests/flatpages_tests/test_middleware.py",
      [
        "FlatpageMiddlewareTests",
        "test_fallback_authenticated_flatpage"
      ]
    ]
  ],
  "test_fallback_flatpage_special_chars": [
    [
      "tests/flatpages_tests/test_middleware.py",
      [
        "FlatpageMiddlewareTests",
        "test_fallback_flatpage_special_chars"
      ]
    ]
  ],
  "test_redirect_view_flatpage": [
    [
      "tests/flatpages_tests/test_middleware.py",
      [
        "FlatpageMiddlewareAppendSlashTests",
        "test_redirect_view_flatpage"
      ]
    ],
    [
      "tests/flatpages_tests/test_views.py",
      [
        "FlatpageViewAppendSlashTests",
        "test_redirect_view_flatpage"
      ]
    ]
  ],
  "test_redirect_view_non_existent_flatpage": [
    [
      "tests/flatpages_tests/test_middleware.py",
      [
        "FlatpageMiddlewareAppendSlashTests",
        "test_redirect_view_non_existent_flatpage"
      ]
    ],
    [
      "tests/flatpages_tests/test_views.py",
      [
        "FlatpageViewAppendSlashTests",
        "test_redirect_view_non_existent_flatpage"
      ]
    ]
  ],
  "test_redirect_fallback_flatpage": [
    [
      "tests/flatpages_tests/test_middleware.py",
      [
        "FlatpageMiddlewareAppendSlashTests",
        "test_redirect_fallback_flatpage"
      ]
    ],
    [
      "tests/flatpages_tests/test_views.py",
      [
        "FlatpageViewAppendSlashTests",
        "test_redirect_fallback_flatpage"
      ]
    ]
  ],
  "test_redirect_fallback_non_existent_flatpage": [
    [
      "tests/flatpages_tests/test_middleware.py",
      [
        "FlatpageMiddlewareAppendSlashTests",
        "test_redirect_fallback_non_existent_flatpage"
      ]
    ],
    [
      "tests/flatpages_tests/test_views.py",
      [
        "FlatpageViewAppendSlashTests",
        "test_redirect_fallback_non_existent_flatpage"
      ]
    ]
  ],
  "test_redirect_fallback_flatpage_special_chars": [
    [
      "tests/flatpages_tests/test_middleware.py",
      [
        "FlatpageMiddlewareAppendSlashTests",
        "test_redirect_fallback_flatpage_special_chars"
      ]
    ]
  ],
  "test_redirect_fallback_flatpage_root": [
    [
      "tests/flatpages_tests/test_middleware.py",
      [
        "FlatpageMiddlewareAppendSlashTests",
        "test_redirect_fallback_flatpage_root"
      ]
    ]
  ],
  "test_get_absolute_url_urlencodes": [
    [
      "tests/flatpages_tests/test_models.py",
      [
        "FlatpageModelTests",
        "test_get_absolute_url_urlencodes"
      ]
    ]
  ],
  "test_get_absolute_url_honors_script_prefix": [
    [
      "tests/flatpages_tests/test_models.py",
      [
        "FlatpageModelTests",
        "test_get_absolute_url_honors_script_prefix"
      ]
    ]
  ],
  "test_get_absolute_url_include": [
    [
      "tests/flatpages_tests/test_models.py",
      [
        "FlatpageModelTests",
        "test_get_absolute_url_include"
      ]
    ]
  ],
  "test_get_absolute_url_include_no_slash": [
    [
      "tests/flatpages_tests/test_models.py",
      [
        "FlatpageModelTests",
        "test_get_absolute_url_include_no_slash"
      ]
    ]
  ],
  "test_get_absolute_url_with_hardcoded_url": [
    [
      "tests/flatpages_tests/test_models.py",
      [
        "FlatpageModelTests",
        "test_get_absolute_url_with_hardcoded_url"
      ]
    ]
  ],
  "test_flatpage_sitemap": [
    [
      "tests/flatpages_tests/test_sitemaps.py",
      [
        "FlatpagesSitemapTests",
        "test_flatpage_sitemap"
      ]
    ]
  ],
  "test_get_flatpages_tag": [
    [
      "tests/flatpages_tests/test_templatetags.py",
      [
        "FlatpageTemplateTagTests",
        "test_get_flatpages_tag"
      ]
    ]
  ],
  "test_get_flatpages_tag_for_anon_user": [
    [
      "tests/flatpages_tests/test_templatetags.py",
      [
        "FlatpageTemplateTagTests",
        "test_get_flatpages_tag_for_anon_user"
      ]
    ]
  ],
  "test_get_flatpages_tag_for_user": [
    [
      "tests/flatpages_tests/test_templatetags.py",
      [
        "FlatpageTemplateTagTests",
        "test_get_flatpages_tag_for_user"
      ]
    ]
  ],
  "test_get_flatpages_with_prefix": [
    [
      "tests/flatpages_tests/test_templatetags.py",
      [
        "FlatpageTemplateTagTests",
        "test_get_flatpages_with_prefix"
      ]
    ]
  ],
  "test_get_flatpages_with_prefix_for_anon_user": [
    [
      "tests/flatpages_tests/test_templatetags.py",
      [
        "FlatpageTemplateTagTests",
        "test_get_flatpages_with_prefix_for_anon_user"
      ]
    ]
  ],
  "test_get_flatpages_with_prefix_for_user": [
    [
      "tests/flatpages_tests/test_templatetags.py",
      [
        "FlatpageTemplateTagTests",
        "test_get_flatpages_with_prefix_for_user"
      ]
    ]
  ],
  "test_get_flatpages_with_variable_prefix": [
    [
      "tests/flatpages_tests/test_templatetags.py",
      [
        "FlatpageTemplateTagTests",
        "test_get_flatpages_with_variable_prefix"
      ]
    ]
  ],
  "test_parsing_errors": [
    [
      "tests/flatpages_tests/test_templatetags.py",
      [
        "FlatpageTemplateTagTests",
        "test_parsing_errors"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "HTMLEqualTests",
        "test_parsing_errors"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "XMLEqualTests",
        "test_parsing_errors"
      ]
    ]
  ],
  "test_view_flatpage_special_chars": [
    [
      "tests/flatpages_tests/test_views.py",
      [
        "FlatpageViewTests",
        "test_view_flatpage_special_chars"
      ]
    ]
  ],
  "test_redirect_view_flatpage_special_chars": [
    [
      "tests/flatpages_tests/test_views.py",
      [
        "FlatpageViewAppendSlashTests",
        "test_redirect_view_flatpage_special_chars"
      ]
    ]
  ],
  "test_force_update": [
    [
      "tests/force_insert_update/tests.py",
      [
        "ForceTests",
        "test_force_update"
      ]
    ]
  ],
  "test_force_update_on_inherited_model": [
    [
      "tests/force_insert_update/tests.py",
      [
        "InheritanceTests",
        "test_force_update_on_inherited_model"
      ]
    ]
  ],
  "test_force_update_on_proxy_model": [
    [
      "tests/force_insert_update/tests.py",
      [
        "InheritanceTests",
        "test_force_update_on_proxy_model"
      ]
    ]
  ],
  "test_force_update_on_inherited_model_without_fields": [
    [
      "tests/force_insert_update/tests.py",
      [
        "InheritanceTests",
        "test_force_update_on_inherited_model_without_fields"
      ]
    ]
  ],
  "test_deep_mixed_forward": [
    [
      "tests/foreign_object/test_agnostic_order_trimjoin.py",
      [
        "TestLookupQuery",
        "test_deep_mixed_forward"
      ]
    ]
  ],
  "test_deep_mixed_backward": [
    [
      "tests/foreign_object/test_agnostic_order_trimjoin.py",
      [
        "TestLookupQuery",
        "test_deep_mixed_backward"
      ]
    ]
  ],
  "test_restrictions_with_no_joining_columns": [
    [
      "tests/foreign_object/test_empty_join.py",
      [
        "RestrictedConditionsTests",
        "test_restrictions_with_no_joining_columns"
      ]
    ]
  ],
  "test_empty_join_conditions": [
    [
      "tests/foreign_object/test_empty_join.py",
      [
        "RestrictedConditionsTests",
        "test_empty_join_conditions"
      ]
    ]
  ],
  "test_foreign_object_form": [
    [
      "tests/foreign_object/test_forms.py",
      [
        "FormsTests",
        "test_foreign_object_form"
      ]
    ]
  ],
  "test_get_succeeds_on_multicolumn_match": [
    [
      "tests/foreign_object/tests.py",
      [
        "MultiColumnFKTests",
        "test_get_succeeds_on_multicolumn_match"
      ]
    ]
  ],
  "test_get_fails_on_multicolumn_mismatch": [
    [
      "tests/foreign_object/tests.py",
      [
        "MultiColumnFKTests",
        "test_get_fails_on_multicolumn_mismatch"
      ]
    ]
  ],
  "test_reverse_query_returns_correct_result": [
    [
      "tests/foreign_object/tests.py",
      [
        "MultiColumnFKTests",
        "test_reverse_query_returns_correct_result"
      ]
    ]
  ],
  "test_query_filters_correctly": [
    [
      "tests/foreign_object/tests.py",
      [
        "MultiColumnFKTests",
        "test_query_filters_correctly"
      ]
    ]
  ],
  "test_reverse_query_filters_correctly": [
    [
      "tests/foreign_object/tests.py",
      [
        "MultiColumnFKTests",
        "test_reverse_query_filters_correctly"
      ]
    ]
  ],
  "test_forward_in_lookup_filters_correctly": [
    [
      "tests/foreign_object/tests.py",
      [
        "MultiColumnFKTests",
        "test_forward_in_lookup_filters_correctly"
      ]
    ]
  ],
  "test_double_nested_query": [
    [
      "tests/foreign_object/tests.py",
      [
        "MultiColumnFKTests",
        "test_double_nested_query"
      ]
    ]
  ],
  "test_select_related_foreignkey_forward_works": [
    [
      "tests/foreign_object/tests.py",
      [
        "MultiColumnFKTests",
        "test_select_related_foreignkey_forward_works"
      ]
    ]
  ],
  "test_prefetch_foreignkey_forward_works": [
    [
      "tests/foreign_object/tests.py",
      [
        "MultiColumnFKTests",
        "test_prefetch_foreignkey_forward_works"
      ]
    ]
  ],
  "test_prefetch_foreignkey_reverse_works": [
    [
      "tests/foreign_object/tests.py",
      [
        "MultiColumnFKTests",
        "test_prefetch_foreignkey_reverse_works"
      ]
    ]
  ],
  "test_m2m_through_forward_returns_valid_members": [
    [
      "tests/foreign_object/tests.py",
      [
        "MultiColumnFKTests",
        "test_m2m_through_forward_returns_valid_members"
      ]
    ]
  ],
  "test_m2m_through_reverse_returns_valid_members": [
    [
      "tests/foreign_object/tests.py",
      [
        "MultiColumnFKTests",
        "test_m2m_through_reverse_returns_valid_members"
      ]
    ]
  ],
  "test_m2m_through_forward_ignores_invalid_members": [
    [
      "tests/foreign_object/tests.py",
      [
        "MultiColumnFKTests",
        "test_m2m_through_forward_ignores_invalid_members"
      ]
    ]
  ],
  "test_m2m_through_reverse_ignores_invalid_members": [
    [
      "tests/foreign_object/tests.py",
      [
        "MultiColumnFKTests",
        "test_m2m_through_reverse_ignores_invalid_members"
      ]
    ]
  ],
  "test_m2m_through_on_self_works": [
    [
      "tests/foreign_object/tests.py",
      [
        "MultiColumnFKTests",
        "test_m2m_through_on_self_works"
      ]
    ]
  ],
  "test_m2m_through_on_self_ignores_mismatch_columns": [
    [
      "tests/foreign_object/tests.py",
      [
        "MultiColumnFKTests",
        "test_m2m_through_on_self_ignores_mismatch_columns"
      ]
    ]
  ],
  "test_prefetch_related_m2m_forward_works": [
    [
      "tests/foreign_object/tests.py",
      [
        "MultiColumnFKTests",
        "test_prefetch_related_m2m_forward_works"
      ]
    ]
  ],
  "test_prefetch_related_m2m_reverse_works": [
    [
      "tests/foreign_object/tests.py",
      [
        "MultiColumnFKTests",
        "test_prefetch_related_m2m_reverse_works"
      ]
    ]
  ],
  "test_translations": [
    [
      "tests/foreign_object/tests.py",
      [
        "MultiColumnFKTests",
        "test_translations"
      ]
    ],
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "test_translations"
      ]
    ]
  ],
  "test_foreign_key_raises_informative_does_not_exist": [
    [
      "tests/foreign_object/tests.py",
      [
        "MultiColumnFKTests",
        "test_foreign_key_raises_informative_does_not_exist"
      ]
    ]
  ],
  "test_foreign_key_related_query_name": [
    [
      "tests/foreign_object/tests.py",
      [
        "MultiColumnFKTests",
        "test_foreign_key_related_query_name"
      ]
    ]
  ],
  "test_many_to_many_related_query_name": [
    [
      "tests/foreign_object/tests.py",
      [
        "MultiColumnFKTests",
        "test_many_to_many_related_query_name"
      ]
    ]
  ],
  "test_batch_create_foreign_object": [
    [
      "tests/foreign_object/tests.py",
      [
        "MultiColumnFKTests",
        "test_batch_create_foreign_object"
      ]
    ]
  ],
  "test_isnull_lookup": [
    [
      "tests/foreign_object/tests.py",
      [
        "MultiColumnFKTests",
        "test_isnull_lookup"
      ]
    ]
  ],
  "test_check_composite_foreign_object": [
    [
      "tests/foreign_object/tests.py",
      [
        "TestModelCheckTests",
        "test_check_composite_foreign_object"
      ]
    ]
  ],
  "test_check_subset_composite_foreign_object": [
    [
      "tests/foreign_object/tests.py",
      [
        "TestModelCheckTests",
        "test_check_subset_composite_foreign_object"
      ]
    ]
  ],
  "test_extra_join_filter_q": [
    [
      "tests/foreign_object/tests.py",
      [
        "TestExtraJoinFilterQ",
        "test_extra_join_filter_q"
      ]
    ]
  ],
  "assertWidgetRendersTo": [
    [
      "tests/forms_tests/field_tests/__init__.py",
      [
        "FormFieldAssertionsMixin",
        "assertWidgetRendersTo"
      ]
    ]
  ],
  "test_field_sets_widget_is_required": [
    [
      "tests/forms_tests/field_tests/test_base.py",
      [
        "BasicFieldsTests",
        "test_field_sets_widget_is_required"
      ]
    ]
  ],
  "test_cooperative_multiple_inheritance": [
    [
      "tests/forms_tests/field_tests/test_base.py",
      [
        "BasicFieldsTests",
        "test_cooperative_multiple_inheritance"
      ]
    ]
  ],
  "test_field_deepcopies_widget_instance": [
    [
      "tests/forms_tests/field_tests/test_base.py",
      [
        "BasicFieldsTests",
        "test_field_deepcopies_widget_instance"
      ]
    ]
  ],
  "test_disabled_field_has_changed_always_false": [
    [
      "tests/forms_tests/field_tests/test_base.py",
      [
        "DisabledFieldTests",
        "test_disabled_field_has_changed_always_false"
      ]
    ]
  ],
  "test_booleanfield_clean_1": [
    [
      "tests/forms_tests/field_tests/test_booleanfield.py",
      [
        "BooleanFieldTest",
        "test_booleanfield_clean_1"
      ]
    ]
  ],
  "test_booleanfield_clean_2": [
    [
      "tests/forms_tests/field_tests/test_booleanfield.py",
      [
        "BooleanFieldTest",
        "test_booleanfield_clean_2"
      ]
    ]
  ],
  "test_boolean_picklable": [
    [
      "tests/forms_tests/field_tests/test_booleanfield.py",
      [
        "BooleanFieldTest",
        "test_boolean_picklable"
      ]
    ]
  ],
  "test_booleanfield_changed": [
    [
      "tests/forms_tests/field_tests/test_booleanfield.py",
      [
        "BooleanFieldTest",
        "test_booleanfield_changed"
      ]
    ]
  ],
  "test_disabled_has_changed": [
    [
      "tests/forms_tests/field_tests/test_booleanfield.py",
      [
        "BooleanFieldTest",
        "test_disabled_has_changed"
      ]
    ],
    [
      "tests/forms_tests/field_tests/test_filefield.py",
      [
        "FileFieldTest",
        "test_disabled_has_changed"
      ]
    ],
    [
      "tests/forms_tests/field_tests/test_multiplechoicefield.py",
      [
        "MultipleChoiceFieldTest",
        "test_disabled_has_changed"
      ]
    ],
    [
      "tests/forms_tests/field_tests/test_multivaluefield.py",
      [
        "MultiValueFieldTest",
        "test_disabled_has_changed"
      ]
    ]
  ],
  "test_charfield_1": [
    [
      "tests/forms_tests/field_tests/test_charfield.py",
      [
        "CharFieldTest",
        "test_charfield_1"
      ]
    ]
  ],
  "test_charfield_2": [
    [
      "tests/forms_tests/field_tests/test_charfield.py",
      [
        "CharFieldTest",
        "test_charfield_2"
      ]
    ]
  ],
  "test_charfield_3": [
    [
      "tests/forms_tests/field_tests/test_charfield.py",
      [
        "CharFieldTest",
        "test_charfield_3"
      ]
    ]
  ],
  "test_charfield_4": [
    [
      "tests/forms_tests/field_tests/test_charfield.py",
      [
        "CharFieldTest",
        "test_charfield_4"
      ]
    ]
  ],
  "test_charfield_5": [
    [
      "tests/forms_tests/field_tests/test_charfield.py",
      [
        "CharFieldTest",
        "test_charfield_5"
      ]
    ]
  ],
  "test_charfield_length_not_int": [
    [
      "tests/forms_tests/field_tests/test_charfield.py",
      [
        "CharFieldTest",
        "test_charfield_length_not_int"
      ]
    ]
  ],
  "test_charfield_widget_attrs": [
    [
      "tests/forms_tests/field_tests/test_charfield.py",
      [
        "CharFieldTest",
        "test_charfield_widget_attrs"
      ]
    ]
  ],
  "test_charfield_strip": [
    [
      "tests/forms_tests/field_tests/test_charfield.py",
      [
        "CharFieldTest",
        "test_charfield_strip"
      ]
    ]
  ],
  "test_strip_before_checking_empty": [
    [
      "tests/forms_tests/field_tests/test_charfield.py",
      [
        "CharFieldTest",
        "test_strip_before_checking_empty"
      ]
    ]
  ],
  "test_clean_non_string": [
    [
      "tests/forms_tests/field_tests/test_charfield.py",
      [
        "CharFieldTest",
        "test_clean_non_string"
      ]
    ]
  ],
  "test_charfield_disabled": [
    [
      "tests/forms_tests/field_tests/test_charfield.py",
      [
        "CharFieldTest",
        "test_charfield_disabled"
      ]
    ]
  ],
  "test_null_characters_prohibited": [
    [
      "tests/forms_tests/field_tests/test_charfield.py",
      [
        "CharFieldTest",
        "test_null_characters_prohibited"
      ]
    ]
  ],
  "test_choicefield_1": [
    [
      "tests/forms_tests/field_tests/test_choicefield.py",
      [
        "ChoiceFieldTest",
        "test_choicefield_1"
      ]
    ]
  ],
  "test_choicefield_2": [
    [
      "tests/forms_tests/field_tests/test_choicefield.py",
      [
        "ChoiceFieldTest",
        "test_choicefield_2"
      ]
    ]
  ],
  "test_choicefield_3": [
    [
      "tests/forms_tests/field_tests/test_choicefield.py",
      [
        "ChoiceFieldTest",
        "test_choicefield_3"
      ]
    ]
  ],
  "test_choicefield_4": [
    [
      "tests/forms_tests/field_tests/test_choicefield.py",
      [
        "ChoiceFieldTest",
        "test_choicefield_4"
      ]
    ]
  ],
  "test_choicefield_choices_default": [
    [
      "tests/forms_tests/field_tests/test_choicefield.py",
      [
        "ChoiceFieldTest",
        "test_choicefield_choices_default"
      ]
    ]
  ],
  "test_choicefield_callable": [
    [
      "tests/forms_tests/field_tests/test_choicefield.py",
      [
        "ChoiceFieldTest",
        "test_choicefield_callable"
      ]
    ]
  ],
  "test_choicefield_callable_may_evaluate_to_different_values": [
    [
      "tests/forms_tests/field_tests/test_choicefield.py",
      [
        "ChoiceFieldTest",
        "test_choicefield_callable_may_evaluate_to_different_values"
      ]
    ]
  ],
  "test_choicefield_disabled": [
    [
      "tests/forms_tests/field_tests/test_choicefield.py",
      [
        "ChoiceFieldTest",
        "test_choicefield_disabled"
      ]
    ]
  ],
  "test_combofield_1": [
    [
      "tests/forms_tests/field_tests/test_combofield.py",
      [
        "ComboFieldTest",
        "test_combofield_1"
      ]
    ]
  ],
  "test_combofield_2": [
    [
      "tests/forms_tests/field_tests/test_combofield.py",
      [
        "ComboFieldTest",
        "test_combofield_2"
      ]
    ]
  ],
  "test_form_field": [
    [
      "tests/forms_tests/field_tests/test_datefield.py",
      [
        "DateFieldTest",
        "test_form_field"
      ]
    ]
  ],
  "test_l10n_date_changed": [
    [
      "tests/forms_tests/field_tests/test_datefield.py",
      [
        "DateFieldTest",
        "test_l10n_date_changed"
      ]
    ]
  ],
  "test_l10n_invalid_date_in": [
    [
      "tests/forms_tests/field_tests/test_datefield.py",
      [
        "DateFieldTest",
        "test_l10n_invalid_date_in"
      ]
    ]
  ],
  "test_form_label_association": [
    [
      "tests/forms_tests/field_tests/test_datefield.py",
      [
        "DateFieldTest",
        "test_form_label_association"
      ]
    ]
  ],
  "test_datefield_1": [
    [
      "tests/forms_tests/field_tests/test_datefield.py",
      [
        "DateFieldTest",
        "test_datefield_1"
      ]
    ]
  ],
  "test_datefield_2": [
    [
      "tests/forms_tests/field_tests/test_datefield.py",
      [
        "DateFieldTest",
        "test_datefield_2"
      ]
    ]
  ],
  "test_datefield_3": [
    [
      "tests/forms_tests/field_tests/test_datefield.py",
      [
        "DateFieldTest",
        "test_datefield_3"
      ]
    ]
  ],
  "test_datefield_4": [
    [
      "tests/forms_tests/field_tests/test_datefield.py",
      [
        "DateFieldTest",
        "test_datefield_4"
      ]
    ]
  ],
  "test_datefield_5": [
    [
      "tests/forms_tests/field_tests/test_datefield.py",
      [
        "DateFieldTest",
        "test_datefield_5"
      ]
    ]
  ],
  "test_datefield_changed": [
    [
      "tests/forms_tests/field_tests/test_datefield.py",
      [
        "DateFieldTest",
        "test_datefield_changed"
      ]
    ]
  ],
  "test_datefield_strptime": [
    [
      "tests/forms_tests/field_tests/test_datefield.py",
      [
        "DateFieldTest",
        "test_datefield_strptime"
      ]
    ]
  ],
  "test_datetimefield_clean": [
    [
      "tests/forms_tests/field_tests/test_datetimefield.py",
      [
        "DateTimeFieldTest",
        "test_datetimefield_clean"
      ]
    ]
  ],
  "test_datetimefield_clean_invalid": [
    [
      "tests/forms_tests/field_tests/test_datetimefield.py",
      [
        "DateTimeFieldTest",
        "test_datetimefield_clean_invalid"
      ]
    ]
  ],
  "test_datetimefield_clean_input_formats": [
    [
      "tests/forms_tests/field_tests/test_datetimefield.py",
      [
        "DateTimeFieldTest",
        "test_datetimefield_clean_input_formats"
      ]
    ]
  ],
  "test_datetimefield_not_required": [
    [
      "tests/forms_tests/field_tests/test_datetimefield.py",
      [
        "DateTimeFieldTest",
        "test_datetimefield_not_required"
      ]
    ]
  ],
  "test_datetimefield_changed": [
    [
      "tests/forms_tests/field_tests/test_datetimefield.py",
      [
        "DateTimeFieldTest",
        "test_datetimefield_changed"
      ]
    ]
  ],
  "test_decimalfield_1": [
    [
      "tests/forms_tests/field_tests/test_decimalfield.py",
      [
        "DecimalFieldTest",
        "test_decimalfield_1"
      ]
    ]
  ],
  "test_enter_a_number_error": [
    [
      "tests/forms_tests/field_tests/test_decimalfield.py",
      [
        "DecimalFieldTest",
        "test_enter_a_number_error"
      ]
    ]
  ],
  "test_decimalfield_2": [
    [
      "tests/forms_tests/field_tests/test_decimalfield.py",
      [
        "DecimalFieldTest",
        "test_decimalfield_2"
      ]
    ]
  ],
  "test_decimalfield_3": [
    [
      "tests/forms_tests/field_tests/test_decimalfield.py",
      [
        "DecimalFieldTest",
        "test_decimalfield_3"
      ]
    ]
  ],
  "test_decimalfield_4": [
    [
      "tests/forms_tests/field_tests/test_decimalfield.py",
      [
        "DecimalFieldTest",
        "test_decimalfield_4"
      ]
    ]
  ],
  "test_decimalfield_5": [
    [
      "tests/forms_tests/field_tests/test_decimalfield.py",
      [
        "DecimalFieldTest",
        "test_decimalfield_5"
      ]
    ]
  ],
  "test_decimalfield_6": [
    [
      "tests/forms_tests/field_tests/test_decimalfield.py",
      [
        "DecimalFieldTest",
        "test_decimalfield_6"
      ]
    ]
  ],
  "test_decimalfield_scientific": [
    [
      "tests/forms_tests/field_tests/test_decimalfield.py",
      [
        "DecimalFieldTest",
        "test_decimalfield_scientific"
      ]
    ]
  ],
  "test_decimalfield_widget_attrs": [
    [
      "tests/forms_tests/field_tests/test_decimalfield.py",
      [
        "DecimalFieldTest",
        "test_decimalfield_widget_attrs"
      ]
    ]
  ],
  "test_decimalfield_localized": [
    [
      "tests/forms_tests/field_tests/test_decimalfield.py",
      [
        "DecimalFieldTest",
        "test_decimalfield_localized"
      ]
    ]
  ],
  "test_decimalfield_changed": [
    [
      "tests/forms_tests/field_tests/test_decimalfield.py",
      [
        "DecimalFieldTest",
        "test_decimalfield_changed"
      ]
    ]
  ],
  "test_decimalfield_support_decimal_separator": [
    [
      "tests/forms_tests/field_tests/test_decimalfield.py",
      [
        "DecimalFieldTest",
        "test_decimalfield_support_decimal_separator"
      ]
    ],
    [
      "tests/forms_tests/field_tests/test_floatfield.py",
      [
        "FloatFieldTest",
        "test_decimalfield_support_decimal_separator"
      ]
    ]
  ],
  "test_decimalfield_support_thousands_separator": [
    [
      "tests/forms_tests/field_tests/test_decimalfield.py",
      [
        "DecimalFieldTest",
        "test_decimalfield_support_thousands_separator"
      ]
    ],
    [
      "tests/forms_tests/field_tests/test_floatfield.py",
      [
        "FloatFieldTest",
        "test_decimalfield_support_thousands_separator"
      ]
    ]
  ],
  "test_durationfield_clean": [
    [
      "tests/forms_tests/field_tests/test_durationfield.py",
      [
        "DurationFieldTest",
        "test_durationfield_clean"
      ]
    ]
  ],
  "test_durationfield_clean_not_required": [
    [
      "tests/forms_tests/field_tests/test_durationfield.py",
      [
        "DurationFieldTest",
        "test_durationfield_clean_not_required"
      ]
    ]
  ],
  "test_overflow": [
    [
      "tests/forms_tests/field_tests/test_durationfield.py",
      [
        "DurationFieldTest",
        "test_overflow"
      ]
    ]
  ],
  "test_overflow_translation": [
    [
      "tests/forms_tests/field_tests/test_durationfield.py",
      [
        "DurationFieldTest",
        "test_overflow_translation"
      ]
    ]
  ],
  "test_durationfield_render": [
    [
      "tests/forms_tests/field_tests/test_durationfield.py",
      [
        "DurationFieldTest",
        "test_durationfield_render"
      ]
    ]
  ],
  "test_durationfield_integer_value": [
    [
      "tests/forms_tests/field_tests/test_durationfield.py",
      [
        "DurationFieldTest",
        "test_durationfield_integer_value"
      ]
    ]
  ],
  "test_durationfield_prepare_value": [
    [
      "tests/forms_tests/field_tests/test_durationfield.py",
      [
        "DurationFieldTest",
        "test_durationfield_prepare_value"
      ]
    ]
  ],
  "test_emailfield_1": [
    [
      "tests/forms_tests/field_tests/test_emailfield.py",
      [
        "EmailFieldTest",
        "test_emailfield_1"
      ]
    ]
  ],
  "test_email_regexp_for_performance": [
    [
      "tests/forms_tests/field_tests/test_emailfield.py",
      [
        "EmailFieldTest",
        "test_email_regexp_for_performance"
      ]
    ]
  ],
  "test_emailfield_not_required": [
    [
      "tests/forms_tests/field_tests/test_emailfield.py",
      [
        "EmailFieldTest",
        "test_emailfield_not_required"
      ]
    ]
  ],
  "test_emailfield_min_max_length": [
    [
      "tests/forms_tests/field_tests/test_emailfield.py",
      [
        "EmailFieldTest",
        "test_emailfield_min_max_length"
      ]
    ]
  ],
  "test_emailfield_strip_on_none_value": [
    [
      "tests/forms_tests/field_tests/test_emailfield.py",
      [
        "EmailFieldTest",
        "test_emailfield_strip_on_none_value"
      ]
    ]
  ],
  "test_emailfield_unable_to_set_strip_kwarg": [
    [
      "tests/forms_tests/field_tests/test_emailfield.py",
      [
        "EmailFieldTest",
        "test_emailfield_unable_to_set_strip_kwarg"
      ]
    ]
  ],
  "test_filefield_1": [
    [
      "tests/forms_tests/field_tests/test_filefield.py",
      [
        "FileFieldTest",
        "test_filefield_1"
      ]
    ]
  ],
  "test_filefield_2": [
    [
      "tests/forms_tests/field_tests/test_filefield.py",
      [
        "FileFieldTest",
        "test_filefield_2"
      ]
    ]
  ],
  "test_filefield_3": [
    [
      "tests/forms_tests/field_tests/test_filefield.py",
      [
        "FileFieldTest",
        "test_filefield_3"
      ]
    ]
  ],
  "test_filefield_changed": [
    [
      "tests/forms_tests/field_tests/test_filefield.py",
      [
        "FileFieldTest",
        "test_filefield_changed"
      ]
    ]
  ],
  "test_file_picklable": [
    [
      "tests/forms_tests/field_tests/test_filefield.py",
      [
        "FileFieldTest",
        "test_file_picklable"
      ]
    ]
  ],
  "fix_os_paths": [
    [
      "tests/forms_tests/field_tests/test_filepathfield.py",
      [
        "fix_os_paths"
      ]
    ]
  ],
  "assertChoices": [
    [
      "tests/forms_tests/field_tests/test_filepathfield.py",
      [
        "FilePathFieldTest",
        "assertChoices"
      ]
    ]
  ],
  "test_fix_os_paths": [
    [
      "tests/forms_tests/field_tests/test_filepathfield.py",
      [
        "FilePathFieldTest",
        "test_fix_os_paths"
      ]
    ]
  ],
  "test_nonexistent_path": [
    [
      "tests/forms_tests/field_tests/test_filepathfield.py",
      [
        "FilePathFieldTest",
        "test_nonexistent_path"
      ]
    ]
  ],
  "test_no_options": [
    [
      "tests/forms_tests/field_tests/test_filepathfield.py",
      [
        "FilePathFieldTest",
        "test_no_options"
      ]
    ]
  ],
  "test_clean": [
    [
      "tests/forms_tests/field_tests/test_filepathfield.py",
      [
        "FilePathFieldTest",
        "test_clean"
      ]
    ],
    [
      "tests/forms_tests/field_tests/test_multivaluefield.py",
      [
        "MultiValueFieldTest",
        "test_clean"
      ]
    ]
  ],
  "test_match": [
    [
      "tests/forms_tests/field_tests/test_filepathfield.py",
      [
        "FilePathFieldTest",
        "test_match"
      ]
    ],
    [
      "tests/requests/test_accept_header.py",
      [
        "MediaTypeTests",
        "test_match"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "DatabaseAliasTests",
        "test_match"
      ]
    ]
  ],
  "test_recursive": [
    [
      "tests/forms_tests/field_tests/test_filepathfield.py",
      [
        "FilePathFieldTest",
        "test_recursive"
      ]
    ]
  ],
  "test_allow_folders": [
    [
      "tests/forms_tests/field_tests/test_filepathfield.py",
      [
        "FilePathFieldTest",
        "test_allow_folders"
      ]
    ]
  ],
  "test_recursive_no_folders_or_files": [
    [
      "tests/forms_tests/field_tests/test_filepathfield.py",
      [
        "FilePathFieldTest",
        "test_recursive_no_folders_or_files"
      ]
    ]
  ],
  "test_recursive_folders_without_files": [
    [
      "tests/forms_tests/field_tests/test_filepathfield.py",
      [
        "FilePathFieldTest",
        "test_recursive_folders_without_files"
      ]
    ]
  ],
  "test_floatfield_1": [
    [
      "tests/forms_tests/field_tests/test_floatfield.py",
      [
        "FloatFieldTest",
        "test_floatfield_1"
      ]
    ]
  ],
  "test_floatfield_2": [
    [
      "tests/forms_tests/field_tests/test_floatfield.py",
      [
        "FloatFieldTest",
        "test_floatfield_2"
      ]
    ]
  ],
  "test_floatfield_3": [
    [
      "tests/forms_tests/field_tests/test_floatfield.py",
      [
        "FloatFieldTest",
        "test_floatfield_3"
      ]
    ]
  ],
  "test_floatfield_widget_attrs": [
    [
      "tests/forms_tests/field_tests/test_floatfield.py",
      [
        "FloatFieldTest",
        "test_floatfield_widget_attrs"
      ]
    ]
  ],
  "test_floatfield_localized": [
    [
      "tests/forms_tests/field_tests/test_floatfield.py",
      [
        "FloatFieldTest",
        "test_floatfield_localized"
      ]
    ]
  ],
  "test_floatfield_changed": [
    [
      "tests/forms_tests/field_tests/test_floatfield.py",
      [
        "FloatFieldTest",
        "test_floatfield_changed"
      ]
    ]
  ],
  "test_generic_ipaddress_invalid_arguments": [
    [
      "tests/forms_tests/field_tests/test_genericipaddressfield.py",
      [
        "GenericIPAddressFieldTest",
        "test_generic_ipaddress_invalid_arguments"
      ]
    ]
  ],
  "test_generic_ipaddress_as_generic": [
    [
      "tests/forms_tests/field_tests/test_genericipaddressfield.py",
      [
        "GenericIPAddressFieldTest",
        "test_generic_ipaddress_as_generic"
      ]
    ]
  ],
  "test_generic_ipaddress_as_ipv4_only": [
    [
      "tests/forms_tests/field_tests/test_genericipaddressfield.py",
      [
        "GenericIPAddressFieldTest",
        "test_generic_ipaddress_as_ipv4_only"
      ]
    ]
  ],
  "test_generic_ipaddress_as_ipv6_only": [
    [
      "tests/forms_tests/field_tests/test_genericipaddressfield.py",
      [
        "GenericIPAddressFieldTest",
        "test_generic_ipaddress_as_ipv6_only"
      ]
    ]
  ],
  "test_generic_ipaddress_as_generic_not_required": [
    [
      "tests/forms_tests/field_tests/test_genericipaddressfield.py",
      [
        "GenericIPAddressFieldTest",
        "test_generic_ipaddress_as_generic_not_required"
      ]
    ]
  ],
  "test_generic_ipaddress_normalization": [
    [
      "tests/forms_tests/field_tests/test_genericipaddressfield.py",
      [
        "GenericIPAddressFieldTest",
        "test_generic_ipaddress_normalization"
      ]
    ]
  ],
  "get_img_path": [
    [
      "tests/forms_tests/field_tests/test_imagefield.py",
      [
        "get_img_path"
      ]
    ]
  ],
  "test_imagefield_annotate_with_image_after_clean": [
    [
      "tests/forms_tests/field_tests/test_imagefield.py",
      [
        "ImageFieldTest",
        "test_imagefield_annotate_with_image_after_clean"
      ]
    ]
  ],
  "test_imagefield_annotate_with_bitmap_image_after_clean": [
    [
      "tests/forms_tests/field_tests/test_imagefield.py",
      [
        "ImageFieldTest",
        "test_imagefield_annotate_with_bitmap_image_after_clean"
      ]
    ]
  ],
  "test_file_extension_validation": [
    [
      "tests/forms_tests/field_tests/test_imagefield.py",
      [
        "ImageFieldTest",
        "test_file_extension_validation"
      ]
    ]
  ],
  "test_corrupted_image": [
    [
      "tests/forms_tests/field_tests/test_imagefield.py",
      [
        "ImageFieldTest",
        "test_corrupted_image"
      ]
    ]
  ],
  "test_widget_attrs_default_accept": [
    [
      "tests/forms_tests/field_tests/test_imagefield.py",
      [
        "ImageFieldTest",
        "test_widget_attrs_default_accept"
      ]
    ]
  ],
  "test_widget_attrs_accept_specified": [
    [
      "tests/forms_tests/field_tests/test_imagefield.py",
      [
        "ImageFieldTest",
        "test_widget_attrs_accept_specified"
      ]
    ]
  ],
  "test_widget_attrs_accept_false": [
    [
      "tests/forms_tests/field_tests/test_imagefield.py",
      [
        "ImageFieldTest",
        "test_widget_attrs_accept_false"
      ]
    ]
  ],
  "test_integerfield_1": [
    [
      "tests/forms_tests/field_tests/test_integerfield.py",
      [
        "IntegerFieldTest",
        "test_integerfield_1"
      ]
    ]
  ],
  "test_integerfield_2": [
    [
      "tests/forms_tests/field_tests/test_integerfield.py",
      [
        "IntegerFieldTest",
        "test_integerfield_2"
      ]
    ]
  ],
  "test_integerfield_3": [
    [
      "tests/forms_tests/field_tests/test_integerfield.py",
      [
        "IntegerFieldTest",
        "test_integerfield_3"
      ]
    ]
  ],
  "test_integerfield_4": [
    [
      "tests/forms_tests/field_tests/test_integerfield.py",
      [
        "IntegerFieldTest",
        "test_integerfield_4"
      ]
    ]
  ],
  "test_integerfield_5": [
    [
      "tests/forms_tests/field_tests/test_integerfield.py",
      [
        "IntegerFieldTest",
        "test_integerfield_5"
      ]
    ]
  ],
  "test_integerfield_localized": [
    [
      "tests/forms_tests/field_tests/test_integerfield.py",
      [
        "IntegerFieldTest",
        "test_integerfield_localized"
      ]
    ]
  ],
  "test_integerfield_float": [
    [
      "tests/forms_tests/field_tests/test_integerfield.py",
      [
        "IntegerFieldTest",
        "test_integerfield_float"
      ]
    ]
  ],
  "test_integerfield_big_num": [
    [
      "tests/forms_tests/field_tests/test_integerfield.py",
      [
        "IntegerFieldTest",
        "test_integerfield_big_num"
      ]
    ]
  ],
  "test_integerfield_unicode_number": [
    [
      "tests/forms_tests/field_tests/test_integerfield.py",
      [
        "IntegerFieldTest",
        "test_integerfield_unicode_number"
      ]
    ]
  ],
  "test_integerfield_subclass": [
    [
      "tests/forms_tests/field_tests/test_integerfield.py",
      [
        "IntegerFieldTest",
        "test_integerfield_subclass"
      ]
    ]
  ],
  "test_multiplechoicefield_1": [
    [
      "tests/forms_tests/field_tests/test_multiplechoicefield.py",
      [
        "MultipleChoiceFieldTest",
        "test_multiplechoicefield_1"
      ]
    ]
  ],
  "test_multiplechoicefield_2": [
    [
      "tests/forms_tests/field_tests/test_multiplechoicefield.py",
      [
        "MultipleChoiceFieldTest",
        "test_multiplechoicefield_2"
      ]
    ]
  ],
  "test_multiplechoicefield_3": [
    [
      "tests/forms_tests/field_tests/test_multiplechoicefield.py",
      [
        "MultipleChoiceFieldTest",
        "test_multiplechoicefield_3"
      ]
    ]
  ],
  "test_multiplechoicefield_changed": [
    [
      "tests/forms_tests/field_tests/test_multiplechoicefield.py",
      [
        "MultipleChoiceFieldTest",
        "test_multiplechoicefield_changed"
      ]
    ]
  ],
  "test_clean_disabled_multivalue": [
    [
      "tests/forms_tests/field_tests/test_multivaluefield.py",
      [
        "MultiValueFieldTest",
        "test_clean_disabled_multivalue"
      ]
    ]
  ],
  "test_bad_choice": [
    [
      "tests/forms_tests/field_tests/test_multivaluefield.py",
      [
        "MultiValueFieldTest",
        "test_bad_choice"
      ]
    ]
  ],
  "test_no_value": [
    [
      "tests/forms_tests/field_tests/test_multivaluefield.py",
      [
        "MultiValueFieldTest",
        "test_no_value"
      ]
    ]
  ],
  "test_has_changed_no_initial": [
    [
      "tests/forms_tests/field_tests/test_multivaluefield.py",
      [
        "MultiValueFieldTest",
        "test_has_changed_no_initial"
      ]
    ]
  ],
  "test_has_changed_same": [
    [
      "tests/forms_tests/field_tests/test_multivaluefield.py",
      [
        "MultiValueFieldTest",
        "test_has_changed_same"
      ]
    ]
  ],
  "test_has_changed_first_widget": [
    [
      "tests/forms_tests/field_tests/test_multivaluefield.py",
      [
        "MultiValueFieldTest",
        "test_has_changed_first_widget"
      ]
    ]
  ],
  "test_has_changed_last_widget": [
    [
      "tests/forms_tests/field_tests/test_multivaluefield.py",
      [
        "MultiValueFieldTest",
        "test_has_changed_last_widget"
      ]
    ]
  ],
  "test_form_as_table": [
    [
      "tests/forms_tests/field_tests/test_multivaluefield.py",
      [
        "MultiValueFieldTest",
        "test_form_as_table"
      ]
    ]
  ],
  "test_form_as_table_data": [
    [
      "tests/forms_tests/field_tests/test_multivaluefield.py",
      [
        "MultiValueFieldTest",
        "test_form_as_table_data"
      ]
    ]
  ],
  "test_form_cleaned_data": [
    [
      "tests/forms_tests/field_tests/test_multivaluefield.py",
      [
        "MultiValueFieldTest",
        "test_form_cleaned_data"
      ]
    ]
  ],
  "test_nullbooleanfield_clean": [
    [
      "tests/forms_tests/field_tests/test_nullbooleanfield.py",
      [
        "NullBooleanFieldTest",
        "test_nullbooleanfield_clean"
      ]
    ]
  ],
  "test_nullbooleanfield_2": [
    [
      "tests/forms_tests/field_tests/test_nullbooleanfield.py",
      [
        "NullBooleanFieldTest",
        "test_nullbooleanfield_2"
      ]
    ]
  ],
  "test_nullbooleanfield_3": [
    [
      "tests/forms_tests/field_tests/test_nullbooleanfield.py",
      [
        "NullBooleanFieldTest",
        "test_nullbooleanfield_3"
      ]
    ]
  ],
  "test_nullbooleanfield_4": [
    [
      "tests/forms_tests/field_tests/test_nullbooleanfield.py",
      [
        "NullBooleanFieldTest",
        "test_nullbooleanfield_4"
      ]
    ]
  ],
  "test_nullbooleanfield_changed": [
    [
      "tests/forms_tests/field_tests/test_nullbooleanfield.py",
      [
        "NullBooleanFieldTest",
        "test_nullbooleanfield_changed"
      ]
    ]
  ],
  "test_regexfield_1": [
    [
      "tests/forms_tests/field_tests/test_regexfield.py",
      [
        "RegexFieldTest",
        "test_regexfield_1"
      ]
    ]
  ],
  "test_regexfield_2": [
    [
      "tests/forms_tests/field_tests/test_regexfield.py",
      [
        "RegexFieldTest",
        "test_regexfield_2"
      ]
    ]
  ],
  "test_regexfield_3": [
    [
      "tests/forms_tests/field_tests/test_regexfield.py",
      [
        "RegexFieldTest",
        "test_regexfield_3"
      ]
    ]
  ],
  "test_regexfield_4": [
    [
      "tests/forms_tests/field_tests/test_regexfield.py",
      [
        "RegexFieldTest",
        "test_regexfield_4"
      ]
    ]
  ],
  "test_regexfield_unicode_characters": [
    [
      "tests/forms_tests/field_tests/test_regexfield.py",
      [
        "RegexFieldTest",
        "test_regexfield_unicode_characters"
      ]
    ]
  ],
  "test_change_regex_after_init": [
    [
      "tests/forms_tests/field_tests/test_regexfield.py",
      [
        "RegexFieldTest",
        "test_change_regex_after_init"
      ]
    ]
  ],
  "test_get_regex": [
    [
      "tests/forms_tests/field_tests/test_regexfield.py",
      [
        "RegexFieldTest",
        "test_get_regex"
      ]
    ]
  ],
  "test_regexfield_strip": [
    [
      "tests/forms_tests/field_tests/test_regexfield.py",
      [
        "RegexFieldTest",
        "test_regexfield_strip"
      ]
    ]
  ],
  "test_slugfield_normalization": [
    [
      "tests/forms_tests/field_tests/test_slugfield.py",
      [
        "SlugFieldTest",
        "test_slugfield_normalization"
      ]
    ]
  ],
  "test_slugfield_unicode_normalization": [
    [
      "tests/forms_tests/field_tests/test_slugfield.py",
      [
        "SlugFieldTest",
        "test_slugfield_unicode_normalization"
      ]
    ]
  ],
  "test_splitdatetimefield_1": [
    [
      "tests/forms_tests/field_tests/test_splitdatetimefield.py",
      [
        "SplitDateTimeFieldTest",
        "test_splitdatetimefield_1"
      ]
    ]
  ],
  "test_splitdatetimefield_2": [
    [
      "tests/forms_tests/field_tests/test_splitdatetimefield.py",
      [
        "SplitDateTimeFieldTest",
        "test_splitdatetimefield_2"
      ]
    ]
  ],
  "test_splitdatetimefield_changed": [
    [
      "tests/forms_tests/field_tests/test_splitdatetimefield.py",
      [
        "SplitDateTimeFieldTest",
        "test_splitdatetimefield_changed"
      ]
    ]
  ],
  "test_timefield_1": [
    [
      "tests/forms_tests/field_tests/test_timefield.py",
      [
        "TimeFieldTest",
        "test_timefield_1"
      ]
    ]
  ],
  "test_timefield_2": [
    [
      "tests/forms_tests/field_tests/test_timefield.py",
      [
        "TimeFieldTest",
        "test_timefield_2"
      ]
    ]
  ],
  "test_timefield_3": [
    [
      "tests/forms_tests/field_tests/test_timefield.py",
      [
        "TimeFieldTest",
        "test_timefield_3"
      ]
    ]
  ],
  "test_timefield_changed": [
    [
      "tests/forms_tests/field_tests/test_timefield.py",
      [
        "TimeFieldTest",
        "test_timefield_changed"
      ]
    ]
  ],
  "test_typedchoicefield_1": [
    [
      "tests/forms_tests/field_tests/test_typedchoicefield.py",
      [
        "TypedChoiceFieldTest",
        "test_typedchoicefield_1"
      ]
    ]
  ],
  "test_typedchoicefield_2": [
    [
      "tests/forms_tests/field_tests/test_typedchoicefield.py",
      [
        "TypedChoiceFieldTest",
        "test_typedchoicefield_2"
      ]
    ]
  ],
  "test_typedchoicefield_3": [
    [
      "tests/forms_tests/field_tests/test_typedchoicefield.py",
      [
        "TypedChoiceFieldTest",
        "test_typedchoicefield_3"
      ]
    ]
  ],
  "test_typedchoicefield_4": [
    [
      "tests/forms_tests/field_tests/test_typedchoicefield.py",
      [
        "TypedChoiceFieldTest",
        "test_typedchoicefield_4"
      ]
    ]
  ],
  "test_typedchoicefield_5": [
    [
      "tests/forms_tests/field_tests/test_typedchoicefield.py",
      [
        "TypedChoiceFieldTest",
        "test_typedchoicefield_5"
      ]
    ]
  ],
  "test_typedchoicefield_6": [
    [
      "tests/forms_tests/field_tests/test_typedchoicefield.py",
      [
        "TypedChoiceFieldTest",
        "test_typedchoicefield_6"
      ]
    ]
  ],
  "test_typedchoicefield_has_changed": [
    [
      "tests/forms_tests/field_tests/test_typedchoicefield.py",
      [
        "TypedChoiceFieldTest",
        "test_typedchoicefield_has_changed"
      ]
    ]
  ],
  "test_typedchoicefield_special_coerce": [
    [
      "tests/forms_tests/field_tests/test_typedchoicefield.py",
      [
        "TypedChoiceFieldTest",
        "test_typedchoicefield_special_coerce"
      ]
    ]
  ],
  "test_typedmultiplechoicefield_1": [
    [
      "tests/forms_tests/field_tests/test_typedmultiplechoicefield.py",
      [
        "TypedMultipleChoiceFieldTest",
        "test_typedmultiplechoicefield_1"
      ]
    ]
  ],
  "test_typedmultiplechoicefield_2": [
    [
      "tests/forms_tests/field_tests/test_typedmultiplechoicefield.py",
      [
        "TypedMultipleChoiceFieldTest",
        "test_typedmultiplechoicefield_2"
      ]
    ]
  ],
  "test_typedmultiplechoicefield_3": [
    [
      "tests/forms_tests/field_tests/test_typedmultiplechoicefield.py",
      [
        "TypedMultipleChoiceFieldTest",
        "test_typedmultiplechoicefield_3"
      ]
    ]
  ],
  "test_typedmultiplechoicefield_4": [
    [
      "tests/forms_tests/field_tests/test_typedmultiplechoicefield.py",
      [
        "TypedMultipleChoiceFieldTest",
        "test_typedmultiplechoicefield_4"
      ]
    ]
  ],
  "test_typedmultiplechoicefield_5": [
    [
      "tests/forms_tests/field_tests/test_typedmultiplechoicefield.py",
      [
        "TypedMultipleChoiceFieldTest",
        "test_typedmultiplechoicefield_5"
      ]
    ]
  ],
  "test_typedmultiplechoicefield_6": [
    [
      "tests/forms_tests/field_tests/test_typedmultiplechoicefield.py",
      [
        "TypedMultipleChoiceFieldTest",
        "test_typedmultiplechoicefield_6"
      ]
    ]
  ],
  "test_typedmultiplechoicefield_7": [
    [
      "tests/forms_tests/field_tests/test_typedmultiplechoicefield.py",
      [
        "TypedMultipleChoiceFieldTest",
        "test_typedmultiplechoicefield_7"
      ]
    ]
  ],
  "test_typedmultiplechoicefield_has_changed": [
    [
      "tests/forms_tests/field_tests/test_typedmultiplechoicefield.py",
      [
        "TypedMultipleChoiceFieldTest",
        "test_typedmultiplechoicefield_has_changed"
      ]
    ]
  ],
  "test_typedmultiplechoicefield_special_coerce": [
    [
      "tests/forms_tests/field_tests/test_typedmultiplechoicefield.py",
      [
        "TypedMultipleChoiceFieldTest",
        "test_typedmultiplechoicefield_special_coerce"
      ]
    ]
  ],
  "test_urlfield_1": [
    [
      "tests/forms_tests/field_tests/test_urlfield.py",
      [
        "URLFieldTest",
        "test_urlfield_1"
      ]
    ]
  ],
  "test_url_regex_ticket11198": [
    [
      "tests/forms_tests/field_tests/test_urlfield.py",
      [
        "URLFieldTest",
        "test_url_regex_ticket11198"
      ]
    ]
  ],
  "test_urlfield_2": [
    [
      "tests/forms_tests/field_tests/test_urlfield.py",
      [
        "URLFieldTest",
        "test_urlfield_2"
      ]
    ]
  ],
  "test_urlfield_5": [
    [
      "tests/forms_tests/field_tests/test_urlfield.py",
      [
        "URLFieldTest",
        "test_urlfield_5"
      ]
    ]
  ],
  "test_urlfield_6": [
    [
      "tests/forms_tests/field_tests/test_urlfield.py",
      [
        "URLFieldTest",
        "test_urlfield_6"
      ]
    ]
  ],
  "test_urlfield_7": [
    [
      "tests/forms_tests/field_tests/test_urlfield.py",
      [
        "URLFieldTest",
        "test_urlfield_7"
      ]
    ]
  ],
  "test_urlfield_9": [
    [
      "tests/forms_tests/field_tests/test_urlfield.py",
      [
        "URLFieldTest",
        "test_urlfield_9"
      ]
    ]
  ],
  "test_urlfield_10": [
    [
      "tests/forms_tests/field_tests/test_urlfield.py",
      [
        "URLFieldTest",
        "test_urlfield_10"
      ]
    ]
  ],
  "test_urlfield_not_string": [
    [
      "tests/forms_tests/field_tests/test_urlfield.py",
      [
        "URLFieldTest",
        "test_urlfield_not_string"
      ]
    ]
  ],
  "test_urlfield_normalization": [
    [
      "tests/forms_tests/field_tests/test_urlfield.py",
      [
        "URLFieldTest",
        "test_urlfield_normalization"
      ]
    ]
  ],
  "test_urlfield_strip_on_none_value": [
    [
      "tests/forms_tests/field_tests/test_urlfield.py",
      [
        "URLFieldTest",
        "test_urlfield_strip_on_none_value"
      ]
    ]
  ],
  "test_urlfield_unable_to_set_strip_kwarg": [
    [
      "tests/forms_tests/field_tests/test_urlfield.py",
      [
        "URLFieldTest",
        "test_urlfield_unable_to_set_strip_kwarg"
      ]
    ]
  ],
  "test_uuidfield_1": [
    [
      "tests/forms_tests/field_tests/test_uuidfield.py",
      [
        "UUIDFieldTest",
        "test_uuidfield_1"
      ]
    ]
  ],
  "test_clean_value_with_dashes": [
    [
      "tests/forms_tests/field_tests/test_uuidfield.py",
      [
        "UUIDFieldTest",
        "test_clean_value_with_dashes"
      ]
    ]
  ],
  "test_uuidfield_2": [
    [
      "tests/forms_tests/field_tests/test_uuidfield.py",
      [
        "UUIDFieldTest",
        "test_uuidfield_2"
      ]
    ]
  ],
  "test_uuidfield_3": [
    [
      "tests/forms_tests/field_tests/test_uuidfield.py",
      [
        "UUIDFieldTest",
        "test_uuidfield_3"
      ]
    ]
  ],
  "test_uuidfield_4": [
    [
      "tests/forms_tests/field_tests/test_uuidfield.py",
      [
        "UUIDFieldTest",
        "test_uuidfield_4"
      ]
    ]
  ],
  "callable_default": [
    [
      "tests/forms_tests/models.py",
      [
        "callable_default"
      ]
    ]
  ],
  "choice_default": [
    [
      "tests/forms_tests/models.py",
      [
        "choice_default"
      ]
    ]
  ],
  "choice_default_list": [
    [
      "tests/forms_tests/models.py",
      [
        "choice_default_list"
      ]
    ]
  ],
  "int_default": [
    [
      "tests/forms_tests/models.py",
      [
        "int_default"
      ]
    ]
  ],
  "int_list_default": [
    [
      "tests/forms_tests/models.py",
      [
        "int_list_default"
      ]
    ]
  ],
  "assertFormErrors": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "AssertFormErrorsMixin",
        "assertFormErrors"
      ]
    ]
  ],
  "test_charfield": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "FormsErrorMessagesTestCase",
        "test_charfield"
      ]
    ]
  ],
  "test_integerfield": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "FormsErrorMessagesTestCase",
        "test_integerfield"
      ]
    ]
  ],
  "test_floatfield": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "FormsErrorMessagesTestCase",
        "test_floatfield"
      ]
    ]
  ],
  "test_decimalfield": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "FormsErrorMessagesTestCase",
        "test_decimalfield"
      ]
    ]
  ],
  "test_datefield": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "FormsErrorMessagesTestCase",
        "test_datefield"
      ]
    ]
  ],
  "test_timefield": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "FormsErrorMessagesTestCase",
        "test_timefield"
      ]
    ]
  ],
  "test_datetimefield": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "FormsErrorMessagesTestCase",
        "test_datetimefield"
      ]
    ]
  ],
  "test_regexfield": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "FormsErrorMessagesTestCase",
        "test_regexfield"
      ]
    ]
  ],
  "test_emailfield": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "FormsErrorMessagesTestCase",
        "test_emailfield"
      ]
    ]
  ],
  "test_filefield": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "FormsErrorMessagesTestCase",
        "test_filefield"
      ]
    ]
  ],
  "test_urlfield": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "FormsErrorMessagesTestCase",
        "test_urlfield"
      ]
    ]
  ],
  "test_booleanfield": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "FormsErrorMessagesTestCase",
        "test_booleanfield"
      ]
    ],
    [
      "tests/queries/test_bulk_update.py",
      [
        "BulkUpdateTests",
        "test_booleanfield"
      ]
    ]
  ],
  "test_choicefield": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "FormsErrorMessagesTestCase",
        "test_choicefield"
      ]
    ]
  ],
  "test_multiplechoicefield": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "FormsErrorMessagesTestCase",
        "test_multiplechoicefield"
      ]
    ]
  ],
  "test_splitdatetimefield": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "FormsErrorMessagesTestCase",
        "test_splitdatetimefield"
      ]
    ]
  ],
  "test_generic_ipaddressfield": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "FormsErrorMessagesTestCase",
        "test_generic_ipaddressfield"
      ]
    ]
  ],
  "as_divs": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "FormsErrorMessagesTestCase",
        "test_subclassing_errorlist",
        "CustomErrorList",
        "as_divs"
      ]
    ]
  ],
  "test_subclassing_errorlist": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "FormsErrorMessagesTestCase",
        "test_subclassing_errorlist"
      ]
    ]
  ],
  "test_error_messages_escaping": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "FormsErrorMessagesTestCase",
        "test_error_messages_escaping"
      ]
    ]
  ],
  "test_modelchoicefield": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "ModelChoiceFieldErrorMessagesTestCase",
        "test_modelchoicefield"
      ]
    ]
  ],
  "test_list_error_message": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "DeprecationTests",
        "test_list_error_message"
      ]
    ]
  ],
  "test_list_error_message_warning": [
    [
      "tests/forms_tests/tests/test_error_messages.py",
      [
        "DeprecationTests",
        "test_list_error_message_warning"
      ]
    ]
  ],
  "test_form": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_form"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "LegacyFormsTests",
        "test_form"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "NewFormsTests",
        "test_form"
      ]
    ]
  ],
  "test_empty_dict": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_empty_dict"
      ]
    ]
  ],
  "test_empty_querydict_args": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_empty_querydict_args"
      ]
    ]
  ],
  "test_unbound_form": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_unbound_form"
      ]
    ]
  ],
  "test_cleaned_data_only_fields": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_cleaned_data_only_fields"
      ]
    ]
  ],
  "test_optional_data": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_optional_data"
      ]
    ]
  ],
  "test_auto_id": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_auto_id"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBasicTests",
        "test_auto_id"
      ]
    ]
  ],
  "test_auto_id_true": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_auto_id_true"
      ]
    ]
  ],
  "test_auto_id_false": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_auto_id_false"
      ]
    ]
  ],
  "test_id_on_field": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_id_on_field"
      ]
    ]
  ],
  "test_auto_id_on_form_and_field": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_auto_id_on_form_and_field"
      ]
    ]
  ],
  "test_various_boolean_values": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_various_boolean_values"
      ]
    ]
  ],
  "test_widget_output": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_widget_output"
      ]
    ]
  ],
  "test_forms_with_choices": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_forms_with_choices"
      ]
    ]
  ],
  "test_forms_with_radio": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_forms_with_radio"
      ]
    ]
  ],
  "test_form_with_iterable_boundfield": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_form_with_iterable_boundfield"
      ]
    ]
  ],
  "test_form_with_iterable_boundfield_id": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_form_with_iterable_boundfield_id"
      ]
    ]
  ],
  "test_iterable_boundfield_select": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_iterable_boundfield_select"
      ]
    ]
  ],
  "test_form_with_noniterable_boundfield": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_form_with_noniterable_boundfield"
      ]
    ]
  ],
  "test_boundfield_slice": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_boundfield_slice"
      ]
    ]
  ],
  "test_boundfield_invalid_index": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_boundfield_invalid_index"
      ]
    ]
  ],
  "test_boundfield_bool": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_boundfield_bool"
      ]
    ]
  ],
  "test_forms_with_multiple_choice": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_forms_with_multiple_choice"
      ]
    ]
  ],
  "test_form_with_disabled_fields": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_form_with_disabled_fields"
      ]
    ]
  ],
  "test_hidden_data": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_hidden_data"
      ]
    ]
  ],
  "test_multiple_choice_checkbox": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_multiple_choice_checkbox"
      ]
    ]
  ],
  "test_checkbox_auto_id": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_checkbox_auto_id"
      ]
    ]
  ],
  "test_multiple_choice_list_data": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_multiple_choice_list_data"
      ]
    ]
  ],
  "test_multiple_hidden": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_multiple_hidden"
      ]
    ]
  ],
  "clean_special_name": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_escaping",
        "EscapingForm",
        "clean_special_name"
      ]
    ]
  ],
  "clean_special_safe_name": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_escaping",
        "EscapingForm",
        "clean_special_safe_name"
      ]
    ]
  ],
  "test_escaping": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_escaping"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_textarea.py",
      [
        "TextareaTest",
        "test_escaping"
      ]
    ],
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_escaping"
      ]
    ],
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "I18NViewTests",
        "test_escaping"
      ]
    ]
  ],
  "test_validating_multiple_fields": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_validating_multiple_fields"
      ]
    ]
  ],
  "test_update_error_dict": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_update_error_dict"
      ]
    ]
  ],
  "test_has_error": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_has_error"
      ]
    ]
  ],
  "test_html_output_with_hidden_input_field_errors": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_html_output_with_hidden_input_field_errors"
      ]
    ]
  ],
  "test_dynamic_construction": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_dynamic_construction"
      ]
    ]
  ],
  "test_validators_independence": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_validators_independence"
      ]
    ]
  ],
  "test_hidden_widget": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_hidden_widget"
      ]
    ]
  ],
  "test_explicit_field_order": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_explicit_field_order"
      ]
    ]
  ],
  "test_form_html_attributes": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_form_html_attributes"
      ]
    ]
  ],
  "test_specifying_labels": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_specifying_labels"
      ]
    ]
  ],
  "test_label_suffix": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_label_suffix"
      ]
    ]
  ],
  "test_initial_data": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_initial_data"
      ]
    ],
    [
      "tests/generic_views/test_edit.py",
      [
        "FormMixinTests",
        "test_initial_data"
      ]
    ],
    [
      "tests/model_formsets_regress/tests.py",
      [
        "InlineFormsetTests",
        "test_initial_data"
      ]
    ],
    [
      "tests/model_formsets_regress/tests.py",
      [
        "FormsetTests",
        "test_initial_data"
      ]
    ]
  ],
  "test_dynamic_initial_data": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_dynamic_initial_data"
      ]
    ]
  ],
  "initial_django": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_callable_initial_data",
        "initial_django"
      ]
    ]
  ],
  "initial_stephane": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_callable_initial_data",
        "initial_stephane"
      ]
    ]
  ],
  "initial_options": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_callable_initial_data",
        "initial_options"
      ]
    ]
  ],
  "initial_other_options": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_callable_initial_data",
        "initial_other_options"
      ]
    ]
  ],
  "test_callable_initial_data": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_callable_initial_data"
      ]
    ]
  ],
  "test_get_initial_for_field": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_get_initial_for_field"
      ]
    ]
  ],
  "test_changed_data": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_changed_data"
      ]
    ]
  ],
  "test_boundfield_values": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_boundfield_values"
      ]
    ]
  ],
  "test_boundfield_initial_called_once": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_boundfield_initial_called_once"
      ]
    ]
  ],
  "test_boundfield_value_disabled_callable_initial": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_boundfield_value_disabled_callable_initial"
      ]
    ]
  ],
  "test_custom_boundfield": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_custom_boundfield"
      ]
    ]
  ],
  "delayed_now": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_initial_datetime_values",
        "delayed_now"
      ]
    ]
  ],
  "delayed_now_time": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_initial_datetime_values",
        "delayed_now_time"
      ]
    ]
  ],
  "test_initial_datetime_values": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_initial_datetime_values"
      ]
    ]
  ],
  "test_datetime_clean_initial_callable_disabled": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_datetime_clean_initial_callable_disabled"
      ]
    ]
  ],
  "test_datetime_changed_data_callable_with_microseconds": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_datetime_changed_data_callable_with_microseconds"
      ]
    ]
  ],
  "test_subclassing_forms": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_subclassing_forms"
      ]
    ]
  ],
  "test_forms_with_prefixes": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_forms_with_prefixes"
      ]
    ]
  ],
  "test_class_prefix": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_class_prefix"
      ]
    ]
  ],
  "test_forms_with_null_boolean": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_forms_with_null_boolean"
      ]
    ]
  ],
  "test_forms_with_file_fields": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_forms_with_file_fields"
      ]
    ]
  ],
  "test_filefield_initial_callable": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_filefield_initial_callable"
      ]
    ]
  ],
  "test_filefield_with_fileinput_required": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_filefield_with_fileinput_required"
      ]
    ]
  ],
  "my_function": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_basic_processing_in_view",
        "my_function"
      ]
    ]
  ],
  "test_basic_processing_in_view": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_basic_processing_in_view"
      ]
    ]
  ],
  "test_templates_with_forms": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_templates_with_forms"
      ]
    ]
  ],
  "test_empty_permitted": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_empty_permitted"
      ]
    ]
  ],
  "test_empty_permitted_and_use_required_attribute": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_empty_permitted_and_use_required_attribute"
      ]
    ]
  ],
  "test_extracting_hidden_and_visible": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_extracting_hidden_and_visible"
      ]
    ]
  ],
  "test_hidden_initial_gets_id": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_hidden_initial_gets_id"
      ]
    ]
  ],
  "test_error_html_required_html_classes": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_error_html_required_html_classes"
      ]
    ]
  ],
  "test_label_has_required_css_class": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_label_has_required_css_class"
      ]
    ]
  ],
  "test_label_split_datetime_not_displayed": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_label_split_datetime_not_displayed"
      ]
    ]
  ],
  "bad_names": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_multivalue_field_validation",
        "bad_names"
      ]
    ]
  ],
  "test_multivalue_field_validation": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_multivalue_field_validation"
      ]
    ]
  ],
  "test_multivalue_deep_copy": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_multivalue_deep_copy"
      ]
    ]
  ],
  "test_multivalue_initial_data": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_multivalue_initial_data"
      ]
    ]
  ],
  "test_multivalue_optional_subfields": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_multivalue_optional_subfields"
      ]
    ]
  ],
  "test_custom_empty_values": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_custom_empty_values"
      ]
    ]
  ],
  "test_boundfield_label_tag": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_boundfield_label_tag"
      ]
    ]
  ],
  "test_boundfield_label_tag_no_id": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_boundfield_label_tag_no_id"
      ]
    ]
  ],
  "test_boundfield_label_tag_custom_widget_id_for_label": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_boundfield_label_tag_custom_widget_id_for_label"
      ]
    ]
  ],
  "test_boundfield_empty_label": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_boundfield_empty_label"
      ]
    ]
  ],
  "test_boundfield_id_for_label": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_boundfield_id_for_label"
      ]
    ]
  ],
  "test_boundfield_id_for_label_override_by_attrs": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_boundfield_id_for_label_override_by_attrs"
      ]
    ]
  ],
  "test_boundfield_widget_type": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_boundfield_widget_type"
      ]
    ]
  ],
  "test_boundfield_css_classes": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_boundfield_css_classes"
      ]
    ]
  ],
  "test_label_tag_override": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_label_tag_override"
      ]
    ]
  ],
  "test_field_without_css_classes": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_field_without_css_classes"
      ]
    ]
  ],
  "test_field_with_css_class": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_field_with_css_class"
      ]
    ]
  ],
  "test_field_name_with_hidden_input": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_field_name_with_hidden_input"
      ]
    ]
  ],
  "test_field_name_with_hidden_input_and_non_matching_row_ender": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_field_name_with_hidden_input_and_non_matching_row_ender"
      ]
    ]
  ],
  "test_error_dict": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_error_dict"
      ]
    ]
  ],
  "test_error_dict_as_json_escape_html": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_error_dict_as_json_escape_html"
      ]
    ]
  ],
  "test_error_list": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_error_list"
      ]
    ]
  ],
  "test_error_list_class_not_specified": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_error_list_class_not_specified"
      ]
    ]
  ],
  "test_error_list_class_has_one_class_specified": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_error_list_class_has_one_class_specified"
      ]
    ]
  ],
  "test_error_list_with_hidden_field_errors_has_correct_class": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_error_list_with_hidden_field_errors_has_correct_class"
      ]
    ]
  ],
  "test_error_list_with_non_field_errors_has_correct_class": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_error_list_with_non_field_errors_has_correct_class"
      ]
    ]
  ],
  "test_errorlist_override": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_errorlist_override"
      ]
    ]
  ],
  "test_error_escaping": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_error_escaping"
      ]
    ]
  ],
  "test_baseform_repr": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_baseform_repr"
      ]
    ]
  ],
  "test_baseform_repr_dont_trigger_validation": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_baseform_repr_dont_trigger_validation"
      ]
    ]
  ],
  "test_accessing_clean": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_accessing_clean"
      ]
    ]
  ],
  "test_changing_cleaned_data_nothing_returned": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_changing_cleaned_data_nothing_returned"
      ]
    ]
  ],
  "test_changing_cleaned_data_in_clean": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_changing_cleaned_data_in_clean"
      ]
    ]
  ],
  "test_multipart_encoded_form": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_multipart_encoded_form"
      ]
    ]
  ],
  "test_html_safe": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_html_safe"
      ]
    ],
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_html_safe"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_html_safe"
      ]
    ],
    [
      "tests/utils_tests/test_html.py",
      [
        "TestUtilsHtml",
        "test_html_safe"
      ]
    ]
  ],
  "test_use_required_attribute_true": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_use_required_attribute_true"
      ]
    ]
  ],
  "test_use_required_attribute_false": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_use_required_attribute_false"
      ]
    ]
  ],
  "test_only_hidden_fields": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_only_hidden_fields"
      ]
    ]
  ],
  "test_field_named_data": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_field_named_data"
      ]
    ]
  ],
  "test_empty_data_files_multi_value_dict": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_empty_data_files_multi_value_dict"
      ]
    ]
  ],
  "test_field_deep_copy_error_messages": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "FormsTestCase",
        "test_field_deep_copy_error_messages"
      ]
    ]
  ],
  "test_kwarg_instance": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "RendererTests",
        "test_kwarg_instance"
      ]
    ]
  ],
  "test_kwarg_class": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "RendererTests",
        "test_kwarg_class"
      ]
    ]
  ],
  "test_attribute_instance": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "RendererTests",
        "test_attribute_instance"
      ]
    ]
  ],
  "test_attribute_class": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "RendererTests",
        "test_attribute_class"
      ]
    ]
  ],
  "test_attribute_override": [
    [
      "tests/forms_tests/tests/test_forms.py",
      [
        "RendererTests",
        "test_attribute_override"
      ]
    ]
  ],
  "prefixed": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "make_choiceformset",
        "prefixed"
      ]
    ]
  ],
  "make_choiceformset": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "make_choiceformset"
      ]
    ]
  ],
  "test_basic_formset": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_basic_formset"
      ]
    ]
  ],
  "test_form_kwargs_formset": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_form_kwargs_formset"
      ]
    ]
  ],
  "test_form_kwargs_formset_dynamic": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_form_kwargs_formset_dynamic"
      ]
    ]
  ],
  "test_form_kwargs_empty_form": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_form_kwargs_empty_form"
      ]
    ]
  ],
  "test_formset_validation": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_formset_validation"
      ]
    ]
  ],
  "test_formset_validation_count": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_formset_validation_count"
      ]
    ]
  ],
  "test_formset_has_changed": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_formset_has_changed"
      ]
    ]
  ],
  "test_formset_initial_data": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_formset_initial_data"
      ]
    ]
  ],
  "test_blank_form_unfilled": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_blank_form_unfilled"
      ]
    ]
  ],
  "test_second_form_partially_filled": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_second_form_partially_filled"
      ]
    ]
  ],
  "test_delete_prefilled_data": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_delete_prefilled_data"
      ]
    ]
  ],
  "test_displaying_more_than_one_blank_form": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_displaying_more_than_one_blank_form"
      ]
    ]
  ],
  "test_min_num_displaying_more_than_one_blank_form": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_min_num_displaying_more_than_one_blank_form"
      ]
    ]
  ],
  "test_min_num_displaying_more_than_one_blank_form_with_zero_extra": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_min_num_displaying_more_than_one_blank_form_with_zero_extra"
      ]
    ]
  ],
  "test_single_form_completed": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_single_form_completed"
      ]
    ]
  ],
  "test_formset_validate_max_flag": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_formset_validate_max_flag"
      ]
    ]
  ],
  "test_formset_validate_min_flag": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_formset_validate_min_flag"
      ]
    ]
  ],
  "test_formset_validate_min_unchanged_forms": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_formset_validate_min_unchanged_forms"
      ]
    ]
  ],
  "test_formset_validate_min_excludes_empty_forms": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_formset_validate_min_excludes_empty_forms"
      ]
    ]
  ],
  "test_second_form_partially_filled_2": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_second_form_partially_filled_2"
      ]
    ]
  ],
  "test_more_initial_data": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_more_initial_data"
      ]
    ]
  ],
  "test_formset_with_deletion": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_formset_with_deletion"
      ]
    ]
  ],
  "test_formset_with_deletion_remove_deletion_flag": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_formset_with_deletion_remove_deletion_flag"
      ]
    ]
  ],
  "test_formset_with_deletion_invalid_deleted_form": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_formset_with_deletion_invalid_deleted_form"
      ]
    ]
  ],
  "test_formsets_with_ordering": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_formsets_with_ordering"
      ]
    ]
  ],
  "test_formsets_with_order_custom_widget": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_formsets_with_order_custom_widget"
      ]
    ]
  ],
  "test_empty_ordered_fields": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_empty_ordered_fields"
      ]
    ]
  ],
  "test_ordering_blank_fieldsets": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_ordering_blank_fieldsets"
      ]
    ]
  ],
  "test_formset_with_ordering_and_deletion": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_formset_with_ordering_and_deletion"
      ]
    ]
  ],
  "test_invalid_deleted_form_with_ordering": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_invalid_deleted_form_with_ordering"
      ]
    ]
  ],
  "test_clean_hook": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_clean_hook"
      ]
    ]
  ],
  "test_limiting_max_forms": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_limiting_max_forms"
      ]
    ]
  ],
  "test_limited_max_forms_two": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_limited_max_forms_two"
      ]
    ]
  ],
  "test_limiting_extra_lest_than_max_num": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_limiting_extra_lest_than_max_num"
      ]
    ]
  ],
  "test_max_num_with_initial_data": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_max_num_with_initial_data"
      ]
    ]
  ],
  "test_max_num_zero": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_max_num_zero"
      ]
    ]
  ],
  "test_max_num_zero_with_initial": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_max_num_zero_with_initial"
      ]
    ]
  ],
  "test_more_initial_than_max_num": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_more_initial_than_max_num"
      ]
    ]
  ],
  "test_more_initial_form_result_in_one": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_more_initial_form_result_in_one"
      ]
    ]
  ],
  "test_management_form_prefix": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_management_form_prefix"
      ]
    ]
  ],
  "test_formset_iteration": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_formset_iteration"
      ]
    ]
  ],
  "test_formset_nonzero": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_formset_nonzero"
      ]
    ]
  ],
  "test_formset_splitdatetimefield": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_formset_splitdatetimefield"
      ]
    ]
  ],
  "test_formset_error_class": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_formset_error_class"
      ]
    ]
  ],
  "test_formset_calls_forms_is_valid": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_formset_calls_forms_is_valid"
      ]
    ]
  ],
  "test_hard_limit_on_instantiated_forms": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_hard_limit_on_instantiated_forms"
      ]
    ]
  ],
  "test_increase_hard_limit": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_increase_hard_limit"
      ]
    ]
  ],
  "test_non_form_errors_run_full_clean": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_non_form_errors_run_full_clean"
      ]
    ]
  ],
  "test_validate_max_ignores_forms_marked_for_deletion": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_validate_max_ignores_forms_marked_for_deletion"
      ]
    ]
  ],
  "test_formset_total_error_count": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_formset_total_error_count"
      ]
    ]
  ],
  "test_formset_total_error_count_with_non_form_errors": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsFormsetTestCase",
        "test_formset_total_error_count_with_non_form_errors"
      ]
    ]
  ],
  "test_as_table": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsetAsTagTests",
        "test_as_table"
      ]
    ]
  ],
  "test_as_p": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsetAsTagTests",
        "test_as_p"
      ]
    ]
  ],
  "test_as_ul": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "FormsetAsTagTests",
        "test_as_ul"
      ]
    ]
  ],
  "test_no_data_raises_validation_error": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "TestIsBoundBehavior",
        "test_no_data_raises_validation_error"
      ]
    ]
  ],
  "test_with_management_data_attrs_work_fine": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "TestIsBoundBehavior",
        "test_with_management_data_attrs_work_fine"
      ]
    ]
  ],
  "test_form_errors_are_caught_by_formset": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "TestIsBoundBehavior",
        "test_form_errors_are_caught_by_formset"
      ]
    ]
  ],
  "test_empty_forms_are_unbound": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "TestIsBoundBehavior",
        "test_empty_forms_are_unbound"
      ]
    ]
  ],
  "test_empty_formset_is_valid": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "TestEmptyFormSet",
        "test_empty_formset_is_valid"
      ]
    ]
  ],
  "test_empty_formset_media": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "TestEmptyFormSet",
        "test_empty_formset_media"
      ]
    ]
  ],
  "test_empty_formset_is_multipart": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "TestEmptyFormSet",
        "test_empty_formset_is_multipart"
      ]
    ]
  ],
  "test_valid": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "AllValidTests",
        "test_valid"
      ]
    ],
    [
      "tests/migrations/test_loader.py",
      [
        "PycLoaderTests",
        "test_valid"
      ]
    ],
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSimpleFormField",
        "test_valid"
      ]
    ],
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSplitFormField",
        "test_valid"
      ]
    ],
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestFormField",
        "test_valid"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestFormField",
        "test_valid"
      ]
    ]
  ],
  "test_invalid": [
    [
      "tests/forms_tests/tests/test_formsets.py",
      [
        "AllValidTests",
        "test_invalid"
      ]
    ],
    [
      "tests/migrations/test_loader.py",
      [
        "PycLoaderTests",
        "test_invalid"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestFormField",
        "test_invalid"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_stringformat.py",
      [
        "FunctionTests",
        "test_invalid"
      ]
    ]
  ],
  "test_lazy_labels": [
    [
      "tests/forms_tests/tests/test_i18n.py",
      [
        "FormsI18nTests",
        "test_lazy_labels"
      ]
    ]
  ],
  "test_non_ascii_label": [
    [
      "tests/forms_tests/tests/test_i18n.py",
      [
        "FormsI18nTests",
        "test_non_ascii_label"
      ]
    ]
  ],
  "test_non_ascii_choices": [
    [
      "tests/forms_tests/tests/test_i18n.py",
      [
        "FormsI18nTests",
        "test_non_ascii_choices"
      ]
    ]
  ],
  "test_select_translated_text": [
    [
      "tests/forms_tests/tests/test_i18n.py",
      [
        "FormsI18nTests",
        "test_select_translated_text"
      ]
    ]
  ],
  "test_timeField": [
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "LocalizedTimeTests",
        "test_timeField"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "CustomTimeInputFormatsTests",
        "test_timeField"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "SimpleTimeFormatTests",
        "test_timeField"
      ]
    ]
  ],
  "test_localized_timeField": [
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "LocalizedTimeTests",
        "test_localized_timeField"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "CustomTimeInputFormatsTests",
        "test_localized_timeField"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "SimpleTimeFormatTests",
        "test_localized_timeField"
      ]
    ]
  ],
  "test_timeField_with_inputformat": [
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "LocalizedTimeTests",
        "test_timeField_with_inputformat"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "CustomTimeInputFormatsTests",
        "test_timeField_with_inputformat"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "SimpleTimeFormatTests",
        "test_timeField_with_inputformat"
      ]
    ]
  ],
  "test_localized_timeField_with_inputformat": [
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "LocalizedTimeTests",
        "test_localized_timeField_with_inputformat"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "CustomTimeInputFormatsTests",
        "test_localized_timeField_with_inputformat"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "SimpleTimeFormatTests",
        "test_localized_timeField_with_inputformat"
      ]
    ]
  ],
  "test_dateField": [
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "LocalizedDateTests",
        "test_dateField"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "CustomDateInputFormatsTests",
        "test_dateField"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "SimpleDateFormatTests",
        "test_dateField"
      ]
    ]
  ],
  "test_localized_dateField": [
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "LocalizedDateTests",
        "test_localized_dateField"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "CustomDateInputFormatsTests",
        "test_localized_dateField"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "SimpleDateFormatTests",
        "test_localized_dateField"
      ]
    ]
  ],
  "test_dateField_with_inputformat": [
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "LocalizedDateTests",
        "test_dateField_with_inputformat"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "CustomDateInputFormatsTests",
        "test_dateField_with_inputformat"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "SimpleDateFormatTests",
        "test_dateField_with_inputformat"
      ]
    ]
  ],
  "test_localized_dateField_with_inputformat": [
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "LocalizedDateTests",
        "test_localized_dateField_with_inputformat"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "CustomDateInputFormatsTests",
        "test_localized_dateField_with_inputformat"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "SimpleDateFormatTests",
        "test_localized_dateField_with_inputformat"
      ]
    ]
  ],
  "test_dateTimeField": [
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "LocalizedDateTimeTests",
        "test_dateTimeField"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "CustomDateTimeInputFormatsTests",
        "test_dateTimeField"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "SimpleDateTimeFormatTests",
        "test_dateTimeField"
      ]
    ]
  ],
  "test_localized_dateTimeField": [
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "LocalizedDateTimeTests",
        "test_localized_dateTimeField"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "CustomDateTimeInputFormatsTests",
        "test_localized_dateTimeField"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "SimpleDateTimeFormatTests",
        "test_localized_dateTimeField"
      ]
    ]
  ],
  "test_dateTimeField_with_inputformat": [
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "LocalizedDateTimeTests",
        "test_dateTimeField_with_inputformat"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "CustomDateTimeInputFormatsTests",
        "test_dateTimeField_with_inputformat"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "SimpleDateTimeFormatTests",
        "test_dateTimeField_with_inputformat"
      ]
    ]
  ],
  "test_localized_dateTimeField_with_inputformat": [
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "LocalizedDateTimeTests",
        "test_localized_dateTimeField_with_inputformat"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "CustomDateTimeInputFormatsTests",
        "test_localized_dateTimeField_with_inputformat"
      ]
    ],
    [
      "tests/forms_tests/tests/test_input_formats.py",
      [
        "SimpleDateTimeFormatTests",
        "test_localized_dateTimeField_with_inputformat"
      ]
    ]
  ],
  "test_construction": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_construction"
      ]
    ]
  ],
  "test_media_dsl": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_dsl"
      ]
    ]
  ],
  "test_combine_media": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_combine_media"
      ]
    ]
  ],
  "test_media_deduplication": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_deduplication"
      ]
    ]
  ],
  "_media": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_property",
        "MyWidget4",
        "_media"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_property",
        "MyWidget5",
        "_media"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_property_parent_references",
        "MyWidget6",
        "_media"
      ]
    ],
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_inheritance_from_property",
        "MyWidget4",
        "_media"
      ]
    ]
  ],
  "test_media_property": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_property"
      ]
    ]
  ],
  "test_media_property_parent_references": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_property_parent_references"
      ]
    ]
  ],
  "test_media_inheritance": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_inheritance"
      ]
    ]
  ],
  "test_media_inheritance_from_property": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_inheritance_from_property"
      ]
    ]
  ],
  "test_media_inheritance_extends": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_inheritance_extends"
      ]
    ]
  ],
  "test_media_inheritance_single_type": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_media_inheritance_single_type"
      ]
    ]
  ],
  "test_multi_media": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_multi_media"
      ]
    ]
  ],
  "test_multi_widget": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_multi_widget"
      ]
    ]
  ],
  "test_form_media": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_form_media"
      ]
    ]
  ],
  "test_merge": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_merge"
      ]
    ]
  ],
  "test_merge_warning": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_merge_warning"
      ]
    ]
  ],
  "test_merge_js_three_way": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_merge_js_three_way"
      ]
    ]
  ],
  "test_merge_js_three_way2": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_merge_js_three_way2"
      ]
    ]
  ],
  "test_merge_css_three_way": [
    [
      "tests/forms_tests/tests/test_media.py",
      [
        "FormsMediaTestCase",
        "test_merge_css_three_way"
      ]
    ]
  ],
  "test_installed_apps_template_found": [
    [
      "tests/forms_tests/tests/test_renderers.py",
      [
        "SharedTests",
        "test_installed_apps_template_found"
      ]
    ]
  ],
  "test_get_renderer": [
    [
      "tests/forms_tests/tests/test_renderers.py",
      [
        "BaseTemplateRendererTests",
        "test_get_renderer"
      ]
    ]
  ],
  "test_flatatt": [
    [
      "tests/forms_tests/tests/test_utils.py",
      [
        "FormsUtilsTestCase",
        "test_flatatt"
      ]
    ]
  ],
  "test_flatatt_no_side_effects": [
    [
      "tests/forms_tests/tests/test_utils.py",
      [
        "FormsUtilsTestCase",
        "test_flatatt_no_side_effects"
      ]
    ]
  ],
  "test_validation_error": [
    [
      "tests/forms_tests/tests/test_utils.py",
      [
        "FormsUtilsTestCase",
        "test_validation_error"
      ]
    ]
  ],
  "test_error_dict_copy": [
    [
      "tests/forms_tests/tests/test_utils.py",
      [
        "FormsUtilsTestCase",
        "test_error_dict_copy"
      ]
    ]
  ],
  "test_error_dict_html_safe": [
    [
      "tests/forms_tests/tests/test_utils.py",
      [
        "FormsUtilsTestCase",
        "test_error_dict_html_safe"
      ]
    ]
  ],
  "test_error_list_html_safe": [
    [
      "tests/forms_tests/tests/test_utils.py",
      [
        "FormsUtilsTestCase",
        "test_error_list_html_safe"
      ]
    ]
  ],
  "test_all_errors_get_reported": [
    [
      "tests/forms_tests/tests/test_validators.py",
      [
        "TestFieldWithValidators",
        "test_all_errors_get_reported"
      ]
    ]
  ],
  "test_field_validators_can_be_any_iterable": [
    [
      "tests/forms_tests/tests/test_validators.py",
      [
        "TestFieldWithValidators",
        "test_field_validators_can_be_any_iterable"
      ]
    ],
    [
      "tests/validation/test_validators.py",
      [
        "TestModelsWithValidators",
        "test_field_validators_can_be_any_iterable"
      ]
    ]
  ],
  "test_textarea_trailing_newlines": [
    [
      "tests/forms_tests/tests/test_widgets.py",
      [
        "LiveWidgetTests",
        "test_textarea_trailing_newlines"
      ]
    ]
  ],
  "test_empty_queryset_return": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "TestTicket14567",
        "test_empty_queryset_return"
      ]
    ]
  ],
  "test_no_empty_option": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "ModelFormCallableModelDefault",
        "test_no_empty_option"
      ]
    ]
  ],
  "test_callable_initial_value": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "ModelFormCallableModelDefault",
        "test_callable_initial_value"
      ]
    ]
  ],
  "test_initial_instance_value": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "ModelFormCallableModelDefault",
        "test_initial_instance_value"
      ]
    ]
  ],
  "test_unicode_filename": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "FormsModelTestCase",
        "test_unicode_filename"
      ]
    ]
  ],
  "test_boundary_conditions": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "FormsModelTestCase",
        "test_boundary_conditions"
      ]
    ]
  ],
  "test_formfield_initial": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "FormsModelTestCase",
        "test_formfield_initial"
      ]
    ]
  ],
  "test_invalid_loading_order": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "RelatedModelFormTests",
        "test_invalid_loading_order"
      ]
    ]
  ],
  "test_valid_loading_order": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "RelatedModelFormTests",
        "test_valid_loading_order"
      ]
    ]
  ],
  "test_m2m_field_exclusion": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "ManyToManyExclusionTestCase",
        "test_m2m_field_exclusion"
      ]
    ]
  ],
  "test_empty_field_char": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "EmptyLabelTestCase",
        "test_empty_field_char"
      ]
    ]
  ],
  "test_empty_field_char_none": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "EmptyLabelTestCase",
        "test_empty_field_char_none"
      ]
    ]
  ],
  "test_save_empty_label_forms": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "EmptyLabelTestCase",
        "test_save_empty_label_forms"
      ]
    ]
  ],
  "test_empty_field_integer": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "EmptyLabelTestCase",
        "test_empty_field_integer"
      ]
    ]
  ],
  "test_get_display_value_on_none": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "EmptyLabelTestCase",
        "test_get_display_value_on_none"
      ]
    ]
  ],
  "test_html_rendering_of_prepopulated_models": [
    [
      "tests/forms_tests/tests/tests.py",
      [
        "EmptyLabelTestCase",
        "test_html_rendering_of_prepopulated_models"
      ]
    ]
  ],
  "check_html": [
    [
      "tests/forms_tests/widget_tests/base.py",
      [
        "WidgetTest",
        "check_html"
      ]
    ]
  ],
  "test_render_empty": [
    [
      "tests/forms_tests/widget_tests/test_checkboxinput.py",
      [
        "CheckboxInputTest",
        "test_render_empty"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_multiplehiddeninput.py",
      [
        "MultipleHiddenInputTest",
        "test_render_empty"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_selectdatewidget.py",
      [
        "SelectDateWidgetTest",
        "test_render_empty"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_splitdatetimewidget.py",
      [
        "SplitDateTimeWidgetTest",
        "test_render_empty"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_splithiddendatetimewidget.py",
      [
        "SplitHiddenDateTimeWidgetTest",
        "test_render_empty"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_textarea.py",
      [
        "TextareaTest",
        "test_render_empty"
      ]
    ]
  ],
  "test_render_none": [
    [
      "tests/forms_tests/widget_tests/test_checkboxinput.py",
      [
        "CheckboxInputTest",
        "test_render_none"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_checkboxselectmultiple.py",
      [
        "CheckboxSelectMultipleTest",
        "test_render_none"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_dateinput.py",
      [
        "DateInputTest",
        "test_render_none"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_datetimeinput.py",
      [
        "DateTimeInputTest",
        "test_render_none"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_multiplehiddeninput.py",
      [
        "MultipleHiddenInputTest",
        "test_render_none"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_nullbooleanselect.py",
      [
        "NullBooleanSelectTest",
        "test_render_none"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_select.py",
      [
        "SelectTest",
        "test_render_none"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_selectdatewidget.py",
      [
        "SelectDateWidgetTest",
        "test_render_none"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_selectmultiple.py",
      [
        "SelectMultipleTest",
        "test_render_none"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_splitdatetimewidget.py",
      [
        "SplitDateTimeWidgetTest",
        "test_render_none"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_textarea.py",
      [
        "TextareaTest",
        "test_render_none"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_textinput.py",
      [
        "TextInputTest",
        "test_render_none"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_timeinput.py",
      [
        "TimeInputTest",
        "test_render_none"
      ]
    ]
  ],
  "test_render_false": [
    [
      "tests/forms_tests/widget_tests/test_checkboxinput.py",
      [
        "CheckboxInputTest",
        "test_render_false"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_nullbooleanselect.py",
      [
        "NullBooleanSelectTest",
        "test_render_false"
      ]
    ]
  ],
  "test_render_true": [
    [
      "tests/forms_tests/widget_tests/test_checkboxinput.py",
      [
        "CheckboxInputTest",
        "test_render_true"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_nullbooleanselect.py",
      [
        "NullBooleanSelectTest",
        "test_render_true"
      ]
    ]
  ],
  "test_render_value": [
    [
      "tests/forms_tests/widget_tests/test_checkboxinput.py",
      [
        "CheckboxInputTest",
        "test_render_value"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_checkboxselectmultiple.py",
      [
        "CheckboxSelectMultipleTest",
        "test_render_value"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_dateinput.py",
      [
        "DateInputTest",
        "test_render_value"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_datetimeinput.py",
      [
        "DateTimeInputTest",
        "test_render_value"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_splithiddendatetimewidget.py",
      [
        "SplitHiddenDateTimeWidgetTest",
        "test_render_value"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_textinput.py",
      [
        "TextInputTest",
        "test_render_value"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_timeinput.py",
      [
        "TimeInputTest",
        "test_render_value"
      ]
    ]
  ],
  "test_render_int": [
    [
      "tests/forms_tests/widget_tests/test_checkboxinput.py",
      [
        "CheckboxInputTest",
        "test_render_int"
      ]
    ]
  ],
  "test_render_check_test": [
    [
      "tests/forms_tests/widget_tests/test_checkboxinput.py",
      [
        "CheckboxInputTest",
        "test_render_check_test"
      ]
    ]
  ],
  "test_render_check_exception": [
    [
      "tests/forms_tests/widget_tests/test_checkboxinput.py",
      [
        "CheckboxInputTest",
        "test_render_check_exception"
      ]
    ]
  ],
  "test_value_from_datadict": [
    [
      "tests/forms_tests/widget_tests/test_checkboxinput.py",
      [
        "CheckboxInputTest",
        "test_value_from_datadict"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_selectdatewidget.py",
      [
        "SelectDateWidgetTest",
        "test_value_from_datadict"
      ]
    ]
  ],
  "test_value_from_datadict_string_int": [
    [
      "tests/forms_tests/widget_tests/test_checkboxinput.py",
      [
        "CheckboxInputTest",
        "test_value_from_datadict_string_int"
      ]
    ]
  ],
  "test_value_omitted_from_data": [
    [
      "tests/forms_tests/widget_tests/test_checkboxinput.py",
      [
        "CheckboxInputTest",
        "test_value_omitted_from_data"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_checkboxselectmultiple.py",
      [
        "CheckboxSelectMultipleTest",
        "test_value_omitted_from_data"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_clearablefileinput.py",
      [
        "ClearableFileInputTest",
        "test_value_omitted_from_data"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_fileinput.py",
      [
        "FileInputTest",
        "test_value_omitted_from_data"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_multiwidget.py",
      [
        "MultiWidgetTest",
        "test_value_omitted_from_data"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_selectdatewidget.py",
      [
        "SelectDateWidgetTest",
        "test_value_omitted_from_data"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_selectmultiple.py",
      [
        "SelectMultipleTest",
        "test_value_omitted_from_data"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_widget.py",
      [
        "WidgetTests",
        "test_value_omitted_from_data"
      ]
    ],
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSplitFormWidget",
        "test_value_omitted_from_data"
      ]
    ]
  ],
  "test_get_context_does_not_mutate_attrs": [
    [
      "tests/forms_tests/widget_tests/test_checkboxinput.py",
      [
        "CheckboxInputTest",
        "test_get_context_does_not_mutate_attrs"
      ]
    ]
  ],
  "test_render_value_multiple": [
    [
      "tests/forms_tests/widget_tests/test_checkboxselectmultiple.py",
      [
        "CheckboxSelectMultipleTest",
        "test_render_value_multiple"
      ]
    ]
  ],
  "test_nested_choices": [
    [
      "tests/forms_tests/widget_tests/test_checkboxselectmultiple.py",
      [
        "CheckboxSelectMultipleTest",
        "test_nested_choices"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_radioselect.py",
      [
        "RadioSelectTest",
        "test_nested_choices"
      ]
    ]
  ],
  "test_nested_choices_without_id": [
    [
      "tests/forms_tests/widget_tests/test_checkboxselectmultiple.py",
      [
        "CheckboxSelectMultipleTest",
        "test_nested_choices_without_id"
      ]
    ]
  ],
  "test_separate_ids": [
    [
      "tests/forms_tests/widget_tests/test_checkboxselectmultiple.py",
      [
        "CheckboxSelectMultipleTest",
        "test_separate_ids"
      ]
    ]
  ],
  "test_separate_ids_constructor": [
    [
      "tests/forms_tests/widget_tests/test_checkboxselectmultiple.py",
      [
        "CheckboxSelectMultipleTest",
        "test_separate_ids_constructor"
      ]
    ]
  ],
  "test_doesnt_localize_input_value": [
    [
      "tests/forms_tests/widget_tests/test_checkboxselectmultiple.py",
      [
        "CheckboxSelectMultipleTest",
        "test_doesnt_localize_input_value"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_radioselect.py",
      [
        "RadioSelectTest",
        "test_doesnt_localize_input_value"
      ]
    ]
  ],
  "test_use_required_attribute": [
    [
      "tests/forms_tests/widget_tests/test_checkboxselectmultiple.py",
      [
        "CheckboxSelectMultipleTest",
        "test_use_required_attribute"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_clearablefileinput.py",
      [
        "ClearableFileInputTest",
        "test_use_required_attribute"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_fileinput.py",
      [
        "FileInputTest",
        "test_use_required_attribute"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_hiddeninput.py",
      [
        "HiddenInputTest",
        "test_use_required_attribute"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_textinput.py",
      [
        "TextInputTest",
        "test_use_required_attribute"
      ]
    ]
  ],
  "test_label": [
    [
      "tests/forms_tests/widget_tests/test_checkboxselectmultiple.py",
      [
        "CheckboxSelectMultipleTest",
        "test_label"
      ]
    ],
    [
      "tests/model_meta/tests.py",
      [
        "LabelTests",
        "test_label"
      ]
    ]
  ],
  "test_clear_input_renders": [
    [
      "tests/forms_tests/widget_tests/test_clearablefileinput.py",
      [
        "ClearableFileInputTest",
        "test_clear_input_renders"
      ]
    ]
  ],
  "test_html_escaped": [
    [
      "tests/forms_tests/widget_tests/test_clearablefileinput.py",
      [
        "ClearableFileInputTest",
        "test_html_escaped"
      ]
    ]
  ],
  "test_clear_input_renders_only_if_not_required": [
    [
      "tests/forms_tests/widget_tests/test_clearablefileinput.py",
      [
        "ClearableFileInputTest",
        "test_clear_input_renders_only_if_not_required"
      ]
    ]
  ],
  "test_clear_input_renders_only_if_initial": [
    [
      "tests/forms_tests/widget_tests/test_clearablefileinput.py",
      [
        "ClearableFileInputTest",
        "test_clear_input_renders_only_if_initial"
      ]
    ]
  ],
  "test_render_as_subwidget": [
    [
      "tests/forms_tests/widget_tests/test_clearablefileinput.py",
      [
        "ClearableFileInputTest",
        "test_render_as_subwidget"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_radioselect.py",
      [
        "RadioSelectTest",
        "test_render_as_subwidget"
      ]
    ]
  ],
  "test_clear_input_checked_returns_false": [
    [
      "tests/forms_tests/widget_tests/test_clearablefileinput.py",
      [
        "ClearableFileInputTest",
        "test_clear_input_checked_returns_false"
      ]
    ]
  ],
  "test_clear_input_checked_returns_false_only_if_not_required": [
    [
      "tests/forms_tests/widget_tests/test_clearablefileinput.py",
      [
        "ClearableFileInputTest",
        "test_clear_input_checked_returns_false_only_if_not_required"
      ]
    ]
  ],
  "test_html_does_not_mask_exceptions": [
    [
      "tests/forms_tests/widget_tests/test_clearablefileinput.py",
      [
        "ClearableFileInputTest",
        "test_html_does_not_mask_exceptions"
      ]
    ]
  ],
  "test_url_as_property": [
    [
      "tests/forms_tests/widget_tests/test_clearablefileinput.py",
      [
        "ClearableFileInputTest",
        "test_url_as_property"
      ]
    ]
  ],
  "test_return_false_if_url_does_not_exists": [
    [
      "tests/forms_tests/widget_tests/test_clearablefileinput.py",
      [
        "ClearableFileInputTest",
        "test_return_false_if_url_does_not_exists"
      ]
    ]
  ],
  "test_string": [
    [
      "tests/forms_tests/widget_tests/test_dateinput.py",
      [
        "DateInputTest",
        "test_string"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_timeinput.py",
      [
        "TimeInputTest",
        "test_string"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestSaveLoad",
        "test_string"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_first.py",
      [
        "FunctionTests",
        "test_string"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_get_digit.py",
      [
        "FunctionTests",
        "test_string"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_length.py",
      [
        "FunctionTests",
        "test_string"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_length_is.py",
      [
        "FunctionTests",
        "test_string"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_make_list.py",
      [
        "FunctionTests",
        "test_string"
      ]
    ]
  ],
  "test_format": [
    [
      "tests/forms_tests/widget_tests/test_dateinput.py",
      [
        "DateInputTest",
        "test_format"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_timeinput.py",
      [
        "TimeInputTest",
        "test_format"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_stringformat.py",
      [
        "FunctionTests",
        "test_format"
      ]
    ]
  ],
  "test_l10n": [
    [
      "tests/forms_tests/widget_tests/test_dateinput.py",
      [
        "DateInputTest",
        "test_l10n"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_datetimeinput.py",
      [
        "DateTimeInputTest",
        "test_l10n"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_nullbooleanselect.py",
      [
        "NullBooleanSelectTest",
        "test_l10n"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_selectdatewidget.py",
      [
        "SelectDateWidgetTest",
        "test_l10n"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_splithiddendatetimewidget.py",
      [
        "SplitHiddenDateTimeWidgetTest",
        "test_l10n"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_timeinput.py",
      [
        "TimeInputTest",
        "test_l10n"
      ]
    ]
  ],
  "test_render_formatted": [
    [
      "tests/forms_tests/widget_tests/test_datetimeinput.py",
      [
        "DateTimeInputTest",
        "test_render_formatted"
      ]
    ]
  ],
  "test_locale_aware": [
    [
      "tests/forms_tests/widget_tests/test_datetimeinput.py",
      [
        "DateTimeInputTest",
        "test_locale_aware"
      ]
    ]
  ],
  "test_attrs_with_type": [
    [
      "tests/forms_tests/widget_tests/test_input.py",
      [
        "InputTests",
        "test_attrs_with_type"
      ]
    ]
  ],
  "test_render_single": [
    [
      "tests/forms_tests/widget_tests/test_multiplehiddeninput.py",
      [
        "MultipleHiddenInputTest",
        "test_render_single"
      ]
    ]
  ],
  "test_render_multiple": [
    [
      "tests/forms_tests/widget_tests/test_multiplehiddeninput.py",
      [
        "MultipleHiddenInputTest",
        "test_render_multiple"
      ]
    ]
  ],
  "test_render_attrs": [
    [
      "tests/forms_tests/widget_tests/test_multiplehiddeninput.py",
      [
        "MultipleHiddenInputTest",
        "test_render_attrs"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_radioselect.py",
      [
        "RadioSelectTest",
        "test_render_attrs"
      ]
    ],
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSplitFormWidget",
        "test_render_attrs"
      ]
    ]
  ],
  "test_render_attrs_multiple": [
    [
      "tests/forms_tests/widget_tests/test_multiplehiddeninput.py",
      [
        "MultipleHiddenInputTest",
        "test_render_attrs_multiple"
      ]
    ]
  ],
  "test_render_attrs_constructor": [
    [
      "tests/forms_tests/widget_tests/test_multiplehiddeninput.py",
      [
        "MultipleHiddenInputTest",
        "test_render_attrs_constructor"
      ]
    ]
  ],
  "test_render_increment_id": [
    [
      "tests/forms_tests/widget_tests/test_multiplehiddeninput.py",
      [
        "MultipleHiddenInputTest",
        "test_render_increment_id"
      ]
    ]
  ],
  "test_subwidgets_name": [
    [
      "tests/forms_tests/widget_tests/test_multiwidget.py",
      [
        "MultiWidgetTest",
        "test_subwidgets_name"
      ]
    ]
  ],
  "test_text_inputs": [
    [
      "tests/forms_tests/widget_tests/test_multiwidget.py",
      [
        "MultiWidgetTest",
        "test_text_inputs"
      ]
    ]
  ],
  "test_constructor_attrs": [
    [
      "tests/forms_tests/widget_tests/test_multiwidget.py",
      [
        "MultiWidgetTest",
        "test_constructor_attrs"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_radioselect.py",
      [
        "RadioSelectTest",
        "test_constructor_attrs"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_select.py",
      [
        "SelectTest",
        "test_constructor_attrs"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_splitdatetimewidget.py",
      [
        "SplitDateTimeWidgetTest",
        "test_constructor_attrs"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_textinput.py",
      [
        "TextInputTest",
        "test_constructor_attrs"
      ]
    ]
  ],
  "test_constructor_attrs_with_type": [
    [
      "tests/forms_tests/widget_tests/test_multiwidget.py",
      [
        "MultiWidgetTest",
        "test_constructor_attrs_with_type"
      ]
    ]
  ],
  "test_value_from_datadict_subwidgets_name": [
    [
      "tests/forms_tests/widget_tests/test_multiwidget.py",
      [
        "MultiWidgetTest",
        "test_value_from_datadict_subwidgets_name"
      ]
    ]
  ],
  "test_value_omitted_from_data_subwidgets_name": [
    [
      "tests/forms_tests/widget_tests/test_multiwidget.py",
      [
        "MultiWidgetTest",
        "test_value_omitted_from_data_subwidgets_name"
      ]
    ]
  ],
  "test_needs_multipart_true": [
    [
      "tests/forms_tests/widget_tests/test_multiwidget.py",
      [
        "MultiWidgetTest",
        "test_needs_multipart_true"
      ]
    ]
  ],
  "test_needs_multipart_false": [
    [
      "tests/forms_tests/widget_tests/test_multiwidget.py",
      [
        "MultiWidgetTest",
        "test_needs_multipart_false"
      ]
    ]
  ],
  "test_nested_multiwidget": [
    [
      "tests/forms_tests/widget_tests/test_multiwidget.py",
      [
        "MultiWidgetTest",
        "test_nested_multiwidget"
      ]
    ]
  ],
  "test_no_whitespace_between_widgets": [
    [
      "tests/forms_tests/widget_tests/test_multiwidget.py",
      [
        "MultiWidgetTest",
        "test_no_whitespace_between_widgets"
      ]
    ]
  ],
  "test_render_value_unknown": [
    [
      "tests/forms_tests/widget_tests/test_nullbooleanselect.py",
      [
        "NullBooleanSelectTest",
        "test_render_value_unknown"
      ]
    ]
  ],
  "test_render_value_true": [
    [
      "tests/forms_tests/widget_tests/test_nullbooleanselect.py",
      [
        "NullBooleanSelectTest",
        "test_render_value_true"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_passwordinput.py",
      [
        "PasswordInputTest",
        "test_render_value_true"
      ]
    ]
  ],
  "test_render_value_false": [
    [
      "tests/forms_tests/widget_tests/test_nullbooleanselect.py",
      [
        "NullBooleanSelectTest",
        "test_render_value_false"
      ]
    ]
  ],
  "test_render_value_1": [
    [
      "tests/forms_tests/widget_tests/test_nullbooleanselect.py",
      [
        "NullBooleanSelectTest",
        "test_render_value_1"
      ]
    ]
  ],
  "test_render_value_2": [
    [
      "tests/forms_tests/widget_tests/test_nullbooleanselect.py",
      [
        "NullBooleanSelectTest",
        "test_render_value_2"
      ]
    ]
  ],
  "test_render_value_3": [
    [
      "tests/forms_tests/widget_tests/test_nullbooleanselect.py",
      [
        "NullBooleanSelectTest",
        "test_render_value_3"
      ]
    ]
  ],
  "test_attrs_not_localized": [
    [
      "tests/forms_tests/widget_tests/test_numberinput.py",
      [
        "NumberInputTests",
        "test_attrs_not_localized"
      ]
    ]
  ],
  "test_render_ignore_value": [
    [
      "tests/forms_tests/widget_tests/test_passwordinput.py",
      [
        "PasswordInputTest",
        "test_render_ignore_value"
      ]
    ]
  ],
  "test_class_attrs": [
    [
      "tests/forms_tests/widget_tests/test_radioselect.py",
      [
        "RadioSelectTest",
        "test_class_attrs"
      ]
    ]
  ],
  "test_render_label_value": [
    [
      "tests/forms_tests/widget_tests/test_select.py",
      [
        "SelectTest",
        "test_render_label_value"
      ]
    ]
  ],
  "test_render_selected": [
    [
      "tests/forms_tests/widget_tests/test_select.py",
      [
        "SelectTest",
        "test_render_selected"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_selectmultiple.py",
      [
        "SelectMultipleTest",
        "test_render_selected"
      ]
    ]
  ],
  "test_compare_to_str": [
    [
      "tests/forms_tests/widget_tests/test_select.py",
      [
        "SelectTest",
        "test_compare_to_str"
      ]
    ]
  ],
  "test_choices_constructor": [
    [
      "tests/forms_tests/widget_tests/test_select.py",
      [
        "SelectTest",
        "test_choices_constructor"
      ]
    ]
  ],
  "test_choices_constructor_generator": [
    [
      "tests/forms_tests/widget_tests/test_select.py",
      [
        "SelectTest",
        "test_choices_constructor_generator"
      ]
    ]
  ],
  "test_choices_escaping": [
    [
      "tests/forms_tests/widget_tests/test_select.py",
      [
        "SelectTest",
        "test_choices_escaping"
      ]
    ]
  ],
  "test_choices_unicode": [
    [
      "tests/forms_tests/widget_tests/test_select.py",
      [
        "SelectTest",
        "test_choices_unicode"
      ]
    ]
  ],
  "test_choices_optgroup": [
    [
      "tests/forms_tests/widget_tests/test_select.py",
      [
        "SelectTest",
        "test_choices_optgroup"
      ]
    ]
  ],
  "test_choices_select_outer": [
    [
      "tests/forms_tests/widget_tests/test_select.py",
      [
        "SelectTest",
        "test_choices_select_outer"
      ]
    ]
  ],
  "test_choices_select_inner": [
    [
      "tests/forms_tests/widget_tests/test_select.py",
      [
        "SelectTest",
        "test_choices_select_inner"
      ]
    ]
  ],
  "test_doesnt_localize_option_value": [
    [
      "tests/forms_tests/widget_tests/test_select.py",
      [
        "SelectTest",
        "test_doesnt_localize_option_value"
      ]
    ]
  ],
  "test_options": [
    [
      "tests/forms_tests/widget_tests/test_select.py",
      [
        "SelectTest",
        "test_options"
      ]
    ],
    [
      "tests/generic_relations/test_forms.py",
      [
        "GenericInlineFormsetTests",
        "test_options"
      ]
    ],
    [
      "tests/generic_views/test_base.py",
      [
        "ViewTest",
        "test_options"
      ]
    ],
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestMethodTests",
        "test_options"
      ]
    ]
  ],
  "test_optgroups": [
    [
      "tests/forms_tests/widget_tests/test_select.py",
      [
        "SelectTest",
        "test_optgroups"
      ]
    ]
  ],
  "test_optgroups_integer_choices": [
    [
      "tests/forms_tests/widget_tests/test_select.py",
      [
        "SelectTest",
        "test_optgroups_integer_choices"
      ]
    ]
  ],
  "test_doesnt_render_required_when_impossible_to_select_empty_field": [
    [
      "tests/forms_tests/widget_tests/test_select.py",
      [
        "SelectTest",
        "test_doesnt_render_required_when_impossible_to_select_empty_field"
      ]
    ]
  ],
  "test_renders_required_when_possible_to_select_empty_field_str": [
    [
      "tests/forms_tests/widget_tests/test_select.py",
      [
        "SelectTest",
        "test_renders_required_when_possible_to_select_empty_field_str"
      ]
    ]
  ],
  "test_renders_required_when_possible_to_select_empty_field_list": [
    [
      "tests/forms_tests/widget_tests/test_select.py",
      [
        "SelectTest",
        "test_renders_required_when_possible_to_select_empty_field_list"
      ]
    ]
  ],
  "test_renders_required_when_possible_to_select_empty_field_none": [
    [
      "tests/forms_tests/widget_tests/test_select.py",
      [
        "SelectTest",
        "test_renders_required_when_possible_to_select_empty_field_none"
      ]
    ]
  ],
  "test_doesnt_render_required_when_no_choices_are_available": [
    [
      "tests/forms_tests/widget_tests/test_select.py",
      [
        "SelectTest",
        "test_doesnt_render_required_when_no_choices_are_available"
      ]
    ]
  ],
  "test_render_string": [
    [
      "tests/forms_tests/widget_tests/test_selectdatewidget.py",
      [
        "SelectDateWidgetTest",
        "test_render_string"
      ]
    ]
  ],
  "test_render_datetime": [
    [
      "tests/forms_tests/widget_tests/test_selectdatewidget.py",
      [
        "SelectDateWidgetTest",
        "test_render_datetime"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_splitdatetimewidget.py",
      [
        "SplitDateTimeWidgetTest",
        "test_render_datetime"
      ]
    ]
  ],
  "test_render_invalid_date": [
    [
      "tests/forms_tests/widget_tests/test_selectdatewidget.py",
      [
        "SelectDateWidgetTest",
        "test_render_invalid_date"
      ]
    ]
  ],
  "test_custom_months": [
    [
      "tests/forms_tests/widget_tests/test_selectdatewidget.py",
      [
        "SelectDateWidgetTest",
        "test_custom_months"
      ]
    ]
  ],
  "test_selectdate_required": [
    [
      "tests/forms_tests/widget_tests/test_selectdatewidget.py",
      [
        "SelectDateWidgetTest",
        "test_selectdate_required"
      ]
    ]
  ],
  "test_selectdate_empty_label": [
    [
      "tests/forms_tests/widget_tests/test_selectdatewidget.py",
      [
        "SelectDateWidgetTest",
        "test_selectdate_empty_label"
      ]
    ]
  ],
  "test_custom_input_format": [
    [
      "tests/forms_tests/widget_tests/test_selectdatewidget.py",
      [
        "SelectDateWidgetTest",
        "test_custom_input_format"
      ]
    ]
  ],
  "test_format_value": [
    [
      "tests/forms_tests/widget_tests/test_selectdatewidget.py",
      [
        "SelectDateWidgetTest",
        "test_format_value"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_selectmultiple.py",
      [
        "SelectMultipleTest",
        "test_format_value"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_widget.py",
      [
        "WidgetTests",
        "test_format_value"
      ]
    ]
  ],
  "test_years_rendered_without_separator": [
    [
      "tests/forms_tests/widget_tests/test_selectdatewidget.py",
      [
        "SelectDateWidgetTest",
        "test_years_rendered_without_separator"
      ]
    ]
  ],
  "test_render_multiple_selected": [
    [
      "tests/forms_tests/widget_tests/test_selectmultiple.py",
      [
        "SelectMultipleTest",
        "test_render_multiple_selected"
      ]
    ]
  ],
  "test_render_value_label": [
    [
      "tests/forms_tests/widget_tests/test_selectmultiple.py",
      [
        "SelectMultipleTest",
        "test_render_value_label"
      ]
    ]
  ],
  "test_multiple_options_same_value": [
    [
      "tests/forms_tests/widget_tests/test_selectmultiple.py",
      [
        "SelectMultipleTest",
        "test_multiple_options_same_value"
      ]
    ]
  ],
  "test_multiple_values_invalid": [
    [
      "tests/forms_tests/widget_tests/test_selectmultiple.py",
      [
        "SelectMultipleTest",
        "test_multiple_values_invalid"
      ]
    ]
  ],
  "test_compare_string": [
    [
      "tests/forms_tests/widget_tests/test_selectmultiple.py",
      [
        "SelectMultipleTest",
        "test_compare_string"
      ]
    ]
  ],
  "test_optgroup_select_multiple": [
    [
      "tests/forms_tests/widget_tests/test_selectmultiple.py",
      [
        "SelectMultipleTest",
        "test_optgroup_select_multiple"
      ]
    ]
  ],
  "test_render_date_and_time": [
    [
      "tests/forms_tests/widget_tests/test_splitdatetimewidget.py",
      [
        "SplitDateTimeWidgetTest",
        "test_render_date_and_time"
      ]
    ]
  ],
  "test_constructor_different_attrs": [
    [
      "tests/forms_tests/widget_tests/test_splitdatetimewidget.py",
      [
        "SplitDateTimeWidgetTest",
        "test_constructor_different_attrs"
      ]
    ],
    [
      "tests/forms_tests/widget_tests/test_splithiddendatetimewidget.py",
      [
        "SplitHiddenDateTimeWidgetTest",
        "test_constructor_different_attrs"
      ]
    ]
  ],
  "test_formatting": [
    [
      "tests/forms_tests/widget_tests/test_splitdatetimewidget.py",
      [
        "SplitDateTimeWidgetTest",
        "test_formatting"
      ]
    ]
  ],
  "test_mark_safe": [
    [
      "tests/forms_tests/widget_tests/test_textarea.py",
      [
        "TextareaTest",
        "test_mark_safe"
      ]
    ],
    [
      "tests/utils_tests/test_safestring.py",
      [
        "SafeStringTest",
        "test_mark_safe"
      ]
    ]
  ],
  "test_render_boolean": [
    [
      "tests/forms_tests/widget_tests/test_textinput.py",
      [
        "TextInputTest",
        "test_render_boolean"
      ]
    ]
  ],
  "test_render_quoted": [
    [
      "tests/forms_tests/widget_tests/test_textinput.py",
      [
        "TextInputTest",
        "test_render_quoted"
      ]
    ]
  ],
  "test_render_custom_attrs": [
    [
      "tests/forms_tests/widget_tests/test_textinput.py",
      [
        "TextInputTest",
        "test_render_custom_attrs"
      ]
    ]
  ],
  "test_render_unicode": [
    [
      "tests/forms_tests/widget_tests/test_textinput.py",
      [
        "TextInputTest",
        "test_render_unicode"
      ]
    ]
  ],
  "test_attrs_precedence": [
    [
      "tests/forms_tests/widget_tests/test_textinput.py",
      [
        "TextInputTest",
        "test_attrs_precedence"
      ]
    ]
  ],
  "test_attrs_safestring": [
    [
      "tests/forms_tests/widget_tests/test_textinput.py",
      [
        "TextInputTest",
        "test_attrs_safestring"
      ]
    ]
  ],
  "test_no_trailing_newline_in_attrs": [
    [
      "tests/forms_tests/widget_tests/test_widget.py",
      [
        "WidgetTests",
        "test_no_trailing_newline_in_attrs"
      ]
    ]
  ],
  "test_attr_false_not_rendered": [
    [
      "tests/forms_tests/widget_tests/test_widget.py",
      [
        "WidgetTests",
        "test_attr_false_not_rendered"
      ]
    ]
  ],
  "test_simple_load": [
    [
      "tests/from_db_value/tests.py",
      [
        "FromDBValueTest",
        "test_simple_load"
      ]
    ]
  ],
  "test_connection": [
    [
      "tests/from_db_value/tests.py",
      [
        "FromDBValueTest",
        "test_connection"
      ]
    ]
  ],
  "_create_object": [
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineAdminParametersTest",
        "_create_object"
      ]
    ]
  ],
  "test_no_param": [
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineAdminParametersTest",
        "test_no_param"
      ]
    ]
  ],
  "test_extra_param": [
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineAdminParametersTest",
        "test_extra_param"
      ]
    ]
  ],
  "test_max_num_param": [
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineAdminParametersTest",
        "test_max_num_param"
      ]
    ]
  ],
  "test_min_num_param": [
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineAdminParametersTest",
        "test_min_num_param"
      ]
    ]
  ],
  "test_get_extra": [
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineAdminParametersTest",
        "test_get_extra"
      ]
    ]
  ],
  "test_get_min_num": [
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineAdminParametersTest",
        "test_get_min_num"
      ]
    ]
  ],
  "test_get_max_num": [
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineAdminParametersTest",
        "test_get_max_num"
      ]
    ]
  ],
  "test_no_deletion": [
    [
      "tests/generic_inline_admin/tests.py",
      [
        "NoInlineDeletionTest",
        "test_no_deletion"
      ]
    ]
  ],
  "test_get_formset_kwargs": [
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineModelAdminTest",
        "test_get_formset_kwargs"
      ]
    ]
  ],
  "test_custom_form_meta_exclude_with_readonly": [
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineModelAdminTest",
        "test_custom_form_meta_exclude_with_readonly"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_custom_form_meta_exclude_with_readonly"
      ]
    ]
  ],
  "test_custom_form_meta_exclude": [
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineModelAdminTest",
        "test_custom_form_meta_exclude"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_custom_form_meta_exclude"
      ]
    ]
  ],
  "test_get_fieldsets": [
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineModelAdminTest",
        "test_get_fieldsets"
      ]
    ],
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_get_fieldsets"
      ]
    ]
  ],
  "test_get_formsets_with_inlines_returns_tuples": [
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineModelAdminTest",
        "test_get_formsets_with_inlines_returns_tuples"
      ]
    ]
  ],
  "test_get_inline_instances_override_get_inlines": [
    [
      "tests/generic_inline_admin/tests.py",
      [
        "GenericInlineModelAdminTest",
        "test_get_inline_instances_override_get_inlines"
      ]
    ]
  ],
  "test_output": [
    [
      "tests/generic_relations/test_forms.py",
      [
        "GenericInlineFormsetTests",
        "test_output"
      ]
    ]
  ],
  "test_get_queryset_ordering": [
    [
      "tests/generic_relations/test_forms.py",
      [
        "GenericInlineFormsetTests",
        "test_get_queryset_ordering"
      ]
    ]
  ],
  "test_initial": [
    [
      "tests/generic_relations/test_forms.py",
      [
        "GenericInlineFormsetTests",
        "test_initial"
      ]
    ]
  ],
  "test_meta_widgets": [
    [
      "tests/generic_relations/test_forms.py",
      [
        "GenericInlineFormsetTests",
        "test_meta_widgets"
      ]
    ]
  ],
  "test_incorrect_content_type": [
    [
      "tests/generic_relations/test_forms.py",
      [
        "GenericInlineFormsetTests",
        "test_incorrect_content_type"
      ]
    ]
  ],
  "test_save_new_uses_form_save": [
    [
      "tests/generic_relations/test_forms.py",
      [
        "GenericInlineFormsetTests",
        "test_save_new_uses_form_save"
      ]
    ]
  ],
  "test_save_new_for_proxy": [
    [
      "tests/generic_relations/test_forms.py",
      [
        "GenericInlineFormsetTests",
        "test_save_new_for_proxy"
      ]
    ]
  ],
  "test_save_new_for_concrete": [
    [
      "tests/generic_relations/test_forms.py",
      [
        "GenericInlineFormsetTests",
        "test_save_new_for_concrete"
      ]
    ]
  ],
  "test_initial_count": [
    [
      "tests/generic_relations/test_forms.py",
      [
        "GenericInlineFormsetTests",
        "test_initial_count"
      ]
    ]
  ],
  "test_save_as_new": [
    [
      "tests/generic_relations/test_forms.py",
      [
        "GenericInlineFormsetTests",
        "test_save_as_new"
      ]
    ]
  ],
  "test_generic_update_or_create_when_created": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_generic_update_or_create_when_created"
      ]
    ]
  ],
  "test_generic_update_or_create_when_updated": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_generic_update_or_create_when_updated"
      ]
    ]
  ],
  "test_generic_get_or_create_when_created": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_generic_get_or_create_when_created"
      ]
    ]
  ],
  "test_generic_get_or_create_when_exists": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_generic_get_or_create_when_exists"
      ]
    ]
  ],
  "test_generic_relations_m2m_mimic": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_generic_relations_m2m_mimic"
      ]
    ]
  ],
  "test_access_content_object": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_access_content_object"
      ]
    ]
  ],
  "test_query_content_object": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_query_content_object"
      ]
    ]
  ],
  "test_exclude_generic_relations": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_exclude_generic_relations"
      ]
    ]
  ],
  "test_access_via_content_type": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_access_via_content_type"
      ]
    ]
  ],
  "test_set_foreign_key": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_set_foreign_key"
      ]
    ]
  ],
  "test_queries_across_generic_relations": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_queries_across_generic_relations"
      ]
    ]
  ],
  "test_queries_content_type_restriction": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_queries_content_type_restriction"
      ]
    ]
  ],
  "test_object_deletion_with_generic_relation": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_object_deletion_with_generic_relation"
      ]
    ]
  ],
  "test_object_deletion_without_generic_relation": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_object_deletion_without_generic_relation"
      ]
    ]
  ],
  "test_tag_deletion_related_objects_unaffected": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_tag_deletion_related_objects_unaffected"
      ]
    ]
  ],
  "test_add_bulk": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_add_bulk"
      ]
    ]
  ],
  "test_add_bulk_false": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_add_bulk_false"
      ]
    ]
  ],
  "test_add_rejects_unsaved_objects": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_add_rejects_unsaved_objects"
      ]
    ]
  ],
  "test_add_rejects_wrong_instances": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_add_rejects_wrong_instances"
      ]
    ]
  ],
  "test_set": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_set"
      ]
    ],
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_set"
      ]
    ],
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_set"
      ]
    ],
    [
      "tests/many_to_one_null/tests.py",
      [
        "ManyToOneNullTests",
        "test_set"
      ]
    ],
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "CaseInsensitiveMappingTests",
        "test_set"
      ]
    ]
  ],
  "test_assign": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_assign"
      ]
    ],
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_assign"
      ]
    ],
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_assign"
      ]
    ]
  ],
  "test_assign_with_queryset": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_assign_with_queryset"
      ]
    ],
    [
      "tests/many_to_one_null/tests.py",
      [
        "ManyToOneNullTests",
        "test_assign_with_queryset"
      ]
    ]
  ],
  "test_generic_relation_related_name_default": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_generic_relation_related_name_default"
      ]
    ]
  ],
  "test_multiple_gfk": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_multiple_gfk"
      ]
    ]
  ],
  "test_gfk_subclasses": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_gfk_subclasses"
      ]
    ]
  ],
  "test_generic_relation_to_inherited_child": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_generic_relation_to_inherited_child"
      ]
    ]
  ],
  "test_gfk_manager": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_gfk_manager"
      ]
    ]
  ],
  "test_subclasses_with_gen_rel": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_subclasses_with_gen_rel"
      ]
    ]
  ],
  "test_subclasses_with_parent_gen_rel": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_subclasses_with_parent_gen_rel"
      ]
    ]
  ],
  "test_get_or_create": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_get_or_create"
      ]
    ]
  ],
  "test_update_or_create_defaults": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_update_or_create_defaults"
      ]
    ]
  ],
  "test_query_content_type": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_query_content_type"
      ]
    ]
  ],
  "test_unsaved_instance_on_generic_foreign_key": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_unsaved_instance_on_generic_foreign_key"
      ]
    ]
  ],
  "test_cache_invalidation_for_content_type_id": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_cache_invalidation_for_content_type_id"
      ]
    ]
  ],
  "test_cache_invalidation_for_object_id": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_cache_invalidation_for_object_id"
      ]
    ]
  ],
  "test_assign_content_object_in_init": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_assign_content_object_in_init"
      ]
    ]
  ],
  "test_create_after_prefetch": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_create_after_prefetch"
      ]
    ]
  ],
  "test_add_after_prefetch": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_add_after_prefetch"
      ]
    ],
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_add_after_prefetch"
      ]
    ],
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_add_after_prefetch"
      ]
    ]
  ],
  "test_remove_after_prefetch": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_remove_after_prefetch"
      ]
    ],
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_remove_after_prefetch"
      ]
    ],
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_remove_after_prefetch"
      ]
    ]
  ],
  "test_clear_after_prefetch": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_clear_after_prefetch"
      ]
    ],
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_clear_after_prefetch"
      ]
    ],
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_clear_after_prefetch"
      ]
    ]
  ],
  "test_set_after_prefetch": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_set_after_prefetch"
      ]
    ],
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_set_after_prefetch"
      ]
    ],
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_set_after_prefetch"
      ]
    ]
  ],
  "test_add_then_remove_after_prefetch": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_add_then_remove_after_prefetch"
      ]
    ],
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_add_then_remove_after_prefetch"
      ]
    ],
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_add_then_remove_after_prefetch"
      ]
    ]
  ],
  "test_prefetch_related_different_content_types": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_prefetch_related_different_content_types"
      ]
    ]
  ],
  "test_prefetch_related_custom_object_id": [
    [
      "tests/generic_relations/tests.py",
      [
        "GenericRelationsTests",
        "test_prefetch_related_custom_object_id"
      ]
    ]
  ],
  "test_default_behavior": [
    [
      "tests/generic_relations/tests.py",
      [
        "ProxyRelatedModelTest",
        "test_default_behavior"
      ]
    ]
  ],
  "test_works_normally": [
    [
      "tests/generic_relations/tests.py",
      [
        "ProxyRelatedModelTest",
        "test_works_normally"
      ]
    ]
  ],
  "test_proxy_is_returned": [
    [
      "tests/generic_relations/tests.py",
      [
        "ProxyRelatedModelTest",
        "test_proxy_is_returned"
      ]
    ]
  ],
  "test_query": [
    [
      "tests/generic_relations/tests.py",
      [
        "ProxyRelatedModelTest",
        "test_query"
      ]
    ]
  ],
  "test_query_proxy": [
    [
      "tests/generic_relations/tests.py",
      [
        "ProxyRelatedModelTest",
        "test_query_proxy"
      ]
    ]
  ],
  "test_generic_relation_set": [
    [
      "tests/generic_relations/tests.py",
      [
        "ProxyRelatedModelTest",
        "test_generic_relation_set"
      ]
    ]
  ],
  "test_none_allowed": [
    [
      "tests/generic_relations/tests.py",
      [
        "TestInitWithNoneArgument",
        "test_none_allowed"
      ]
    ]
  ],
  "prevent_deletes": [
    [
      "tests/generic_relations_regress/models.py",
      [
        "prevent_deletes"
      ]
    ]
  ],
  "test_inherited_models_content_type": [
    [
      "tests/generic_relations_regress/tests.py",
      [
        "GenericRelationTests",
        "test_inherited_models_content_type"
      ]
    ]
  ],
  "test_reverse_relation_pk": [
    [
      "tests/generic_relations_regress/tests.py",
      [
        "GenericRelationTests",
        "test_reverse_relation_pk"
      ]
    ]
  ],
  "test_charlink_delete": [
    [
      "tests/generic_relations_regress/tests.py",
      [
        "GenericRelationTests",
        "test_charlink_delete"
      ]
    ]
  ],
  "test_textlink_delete": [
    [
      "tests/generic_relations_regress/tests.py",
      [
        "GenericRelationTests",
        "test_textlink_delete"
      ]
    ]
  ],
  "test_coerce_object_id_remote_field_cache_persistence": [
    [
      "tests/generic_relations_regress/tests.py",
      [
        "GenericRelationTests",
        "test_coerce_object_id_remote_field_cache_persistence"
      ]
    ]
  ],
  "test_q_object_or": [
    [
      "tests/generic_relations_regress/tests.py",
      [
        "GenericRelationTests",
        "test_q_object_or"
      ]
    ]
  ],
  "test_join_reuse": [
    [
      "tests/generic_relations_regress/tests.py",
      [
        "GenericRelationTests",
        "test_join_reuse"
      ]
    ]
  ],
  "test_generic_relation_ordering": [
    [
      "tests/generic_relations_regress/tests.py",
      [
        "GenericRelationTests",
        "test_generic_relation_ordering"
      ]
    ]
  ],
  "test_target_model_is_unsaved": [
    [
      "tests/generic_relations_regress/tests.py",
      [
        "GenericRelationTests",
        "test_target_model_is_unsaved"
      ]
    ]
  ],
  "test_target_model_len_zero": [
    [
      "tests/generic_relations_regress/tests.py",
      [
        "GenericRelationTests",
        "test_target_model_len_zero"
      ]
    ]
  ],
  "test_target_model_bool_false": [
    [
      "tests/generic_relations_regress/tests.py",
      [
        "GenericRelationTests",
        "test_target_model_bool_false"
      ]
    ]
  ],
  "test_gfk_to_model_with_empty_pk": [
    [
      "tests/generic_relations_regress/tests.py",
      [
        "GenericRelationTests",
        "test_gfk_to_model_with_empty_pk"
      ]
    ]
  ],
  "test_ticket_20378": [
    [
      "tests/generic_relations_regress/tests.py",
      [
        "GenericRelationTests",
        "test_ticket_20378"
      ]
    ]
  ],
  "test_ticket_20564": [
    [
      "tests/generic_relations_regress/tests.py",
      [
        "GenericRelationTests",
        "test_ticket_20564"
      ]
    ]
  ],
  "test_ticket_20564_nullable_fk": [
    [
      "tests/generic_relations_regress/tests.py",
      [
        "GenericRelationTests",
        "test_ticket_20564_nullable_fk"
      ]
    ]
  ],
  "test_extra_join_condition": [
    [
      "tests/generic_relations_regress/tests.py",
      [
        "GenericRelationTests",
        "test_extra_join_condition"
      ]
    ]
  ],
  "test_filter_targets_related_pk": [
    [
      "tests/generic_relations_regress/tests.py",
      [
        "GenericRelationTests",
        "test_filter_targets_related_pk"
      ]
    ]
  ],
  "test_editable_generic_rel": [
    [
      "tests/generic_relations_regress/tests.py",
      [
        "GenericRelationTests",
        "test_editable_generic_rel"
      ]
    ]
  ],
  "test_ticket_22998": [
    [
      "tests/generic_relations_regress/tests.py",
      [
        "GenericRelationTests",
        "test_ticket_22998"
      ]
    ]
  ],
  "test_ticket_22982": [
    [
      "tests/generic_relations_regress/tests.py",
      [
        "GenericRelationTests",
        "test_ticket_22982"
      ]
    ]
  ],
  "test_filter_on_related_proxy_model": [
    [
      "tests/generic_relations_regress/tests.py",
      [
        "GenericRelationTests",
        "test_filter_on_related_proxy_model"
      ]
    ]
  ],
  "test_generic_reverse_relation_with_mti": [
    [
      "tests/generic_relations_regress/tests.py",
      [
        "GenericRelationTests",
        "test_generic_reverse_relation_with_mti"
      ]
    ]
  ],
  "test_generic_reverse_relation_with_abc": [
    [
      "tests/generic_relations_regress/tests.py",
      [
        "GenericRelationTests",
        "test_generic_reverse_relation_with_abc"
      ]
    ]
  ],
  "_assert_simple": [
    [
      "tests/generic_views/test_base.py",
      [
        "ViewTest",
        "_assert_simple"
      ]
    ]
  ],
  "test_no_init_kwargs": [
    [
      "tests/generic_views/test_base.py",
      [
        "ViewTest",
        "test_no_init_kwargs"
      ]
    ]
  ],
  "test_no_init_args": [
    [
      "tests/generic_views/test_base.py",
      [
        "ViewTest",
        "test_no_init_args"
      ]
    ]
  ],
  "test_pathological_http_method": [
    [
      "tests/generic_views/test_base.py",
      [
        "ViewTest",
        "test_pathological_http_method"
      ]
    ]
  ],
  "test_get_only": [
    [
      "tests/generic_views/test_base.py",
      [
        "ViewTest",
        "test_get_only"
      ]
    ]
  ],
  "test_get_and_head": [
    [
      "tests/generic_views/test_base.py",
      [
        "ViewTest",
        "test_get_and_head"
      ]
    ]
  ],
  "test_setup_get_and_head": [
    [
      "tests/generic_views/test_base.py",
      [
        "ViewTest",
        "test_setup_get_and_head"
      ]
    ]
  ],
  "test_head_no_get": [
    [
      "tests/generic_views/test_base.py",
      [
        "ViewTest",
        "test_head_no_get"
      ]
    ]
  ],
  "test_get_and_post": [
    [
      "tests/generic_views/test_base.py",
      [
        "ViewTest",
        "test_get_and_post"
      ]
    ]
  ],
  "test_invalid_keyword_argument": [
    [
      "tests/generic_views/test_base.py",
      [
        "ViewTest",
        "test_invalid_keyword_argument"
      ]
    ]
  ],
  "test_calling_more_than_once": [
    [
      "tests/generic_views/test_base.py",
      [
        "ViewTest",
        "test_calling_more_than_once"
      ]
    ]
  ],
  "test_class_attributes": [
    [
      "tests/generic_views/test_base.py",
      [
        "ViewTest",
        "test_class_attributes"
      ]
    ]
  ],
  "test_dispatch_decoration": [
    [
      "tests/generic_views/test_base.py",
      [
        "ViewTest",
        "test_dispatch_decoration"
      ]
    ]
  ],
  "test_options_for_get_view": [
    [
      "tests/generic_views/test_base.py",
      [
        "ViewTest",
        "test_options_for_get_view"
      ]
    ]
  ],
  "test_options_for_get_and_post_view": [
    [
      "tests/generic_views/test_base.py",
      [
        "ViewTest",
        "test_options_for_get_and_post_view"
      ]
    ]
  ],
  "test_options_for_post_view": [
    [
      "tests/generic_views/test_base.py",
      [
        "ViewTest",
        "test_options_for_post_view"
      ]
    ]
  ],
  "_assert_allows": [
    [
      "tests/generic_views/test_base.py",
      [
        "ViewTest",
        "_assert_allows"
      ]
    ]
  ],
  "test_args_kwargs_request_on_self": [
    [
      "tests/generic_views/test_base.py",
      [
        "ViewTest",
        "test_args_kwargs_request_on_self"
      ]
    ]
  ],
  "test_overridden_setup": [
    [
      "tests/generic_views/test_base.py",
      [
        "ViewTest",
        "test_overridden_setup"
      ]
    ]
  ],
  "test_not_calling_parent_setup_error": [
    [
      "tests/generic_views/test_base.py",
      [
        "ViewTest",
        "test_not_calling_parent_setup_error"
      ]
    ]
  ],
  "test_setup_adds_args_kwargs_request": [
    [
      "tests/generic_views/test_base.py",
      [
        "ViewTest",
        "test_setup_adds_args_kwargs_request"
      ]
    ]
  ],
  "test_direct_instantiation": [
    [
      "tests/generic_views/test_base.py",
      [
        "ViewTest",
        "test_direct_instantiation"
      ]
    ],
    [
      "tests/generic_views/test_base.py",
      [
        "RedirectViewTest",
        "test_direct_instantiation"
      ]
    ]
  ],
  "_assert_about": [
    [
      "tests/generic_views/test_base.py",
      [
        "TemplateViewTest",
        "_assert_about"
      ]
    ]
  ],
  "test_head": [
    [
      "tests/generic_views/test_base.py",
      [
        "TemplateViewTest",
        "test_head"
      ]
    ],
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestMethodTests",
        "test_head"
      ]
    ]
  ],
  "test_get_template_attribute": [
    [
      "tests/generic_views/test_base.py",
      [
        "TemplateViewTest",
        "test_get_template_attribute"
      ]
    ]
  ],
  "test_get_generic_template": [
    [
      "tests/generic_views/test_base.py",
      [
        "TemplateViewTest",
        "test_get_generic_template"
      ]
    ]
  ],
  "test_template_name_required": [
    [
      "tests/generic_views/test_base.py",
      [
        "TemplateViewTest",
        "test_template_name_required"
      ]
    ]
  ],
  "test_template_engine": [
    [
      "tests/generic_views/test_base.py",
      [
        "TemplateViewTest",
        "test_template_engine"
      ]
    ]
  ],
  "test_cached_views": [
    [
      "tests/generic_views/test_base.py",
      [
        "TemplateViewTest",
        "test_cached_views"
      ]
    ]
  ],
  "test_content_type": [
    [
      "tests/generic_views/test_base.py",
      [
        "TemplateViewTest",
        "test_content_type"
      ]
    ],
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelTests",
        "test_content_type"
      ]
    ]
  ],
  "test_resolve_view": [
    [
      "tests/generic_views/test_base.py",
      [
        "TemplateViewTest",
        "test_resolve_view"
      ]
    ]
  ],
  "test_resolve_login_required_view": [
    [
      "tests/generic_views/test_base.py",
      [
        "TemplateViewTest",
        "test_resolve_login_required_view"
      ]
    ]
  ],
  "test_extra_context": [
    [
      "tests/generic_views/test_base.py",
      [
        "TemplateViewTest",
        "test_extra_context"
      ]
    ]
  ],
  "test_no_url": [
    [
      "tests/generic_views/test_base.py",
      [
        "RedirectViewTest",
        "test_no_url"
      ]
    ]
  ],
  "test_permanent_redirect": [
    [
      "tests/generic_views/test_base.py",
      [
        "RedirectViewTest",
        "test_permanent_redirect"
      ]
    ],
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_permanent_redirect"
      ]
    ]
  ],
  "test_temporary_redirect": [
    [
      "tests/generic_views/test_base.py",
      [
        "RedirectViewTest",
        "test_temporary_redirect"
      ]
    ],
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_temporary_redirect"
      ]
    ]
  ],
  "test_include_args": [
    [
      "tests/generic_views/test_base.py",
      [
        "RedirectViewTest",
        "test_include_args"
      ]
    ]
  ],
  "test_include_urlencoded_args": [
    [
      "tests/generic_views/test_base.py",
      [
        "RedirectViewTest",
        "test_include_urlencoded_args"
      ]
    ]
  ],
  "test_parameter_substitution": [
    [
      "tests/generic_views/test_base.py",
      [
        "RedirectViewTest",
        "test_parameter_substitution"
      ]
    ]
  ],
  "test_named_url_pattern": [
    [
      "tests/generic_views/test_base.py",
      [
        "RedirectViewTest",
        "test_named_url_pattern"
      ]
    ]
  ],
  "test_named_url_pattern_using_args": [
    [
      "tests/generic_views/test_base.py",
      [
        "RedirectViewTest",
        "test_named_url_pattern_using_args"
      ]
    ]
  ],
  "test_redirect_POST": [
    [
      "tests/generic_views/test_base.py",
      [
        "RedirectViewTest",
        "test_redirect_POST"
      ]
    ]
  ],
  "test_redirect_HEAD": [
    [
      "tests/generic_views/test_base.py",
      [
        "RedirectViewTest",
        "test_redirect_HEAD"
      ]
    ]
  ],
  "test_redirect_OPTIONS": [
    [
      "tests/generic_views/test_base.py",
      [
        "RedirectViewTest",
        "test_redirect_OPTIONS"
      ]
    ]
  ],
  "test_redirect_PUT": [
    [
      "tests/generic_views/test_base.py",
      [
        "RedirectViewTest",
        "test_redirect_PUT"
      ]
    ]
  ],
  "test_redirect_PATCH": [
    [
      "tests/generic_views/test_base.py",
      [
        "RedirectViewTest",
        "test_redirect_PATCH"
      ]
    ]
  ],
  "test_redirect_DELETE": [
    [
      "tests/generic_views/test_base.py",
      [
        "RedirectViewTest",
        "test_redirect_DELETE"
      ]
    ]
  ],
  "test_redirect_when_meta_contains_no_query_string": [
    [
      "tests/generic_views/test_base.py",
      [
        "RedirectViewTest",
        "test_redirect_when_meta_contains_no_query_string"
      ]
    ]
  ],
  "test_get_context_data_super": [
    [
      "tests/generic_views/test_base.py",
      [
        "GetContextDataTest",
        "test_get_context_data_super"
      ]
    ]
  ],
  "test_object_at_custom_name_in_context_data": [
    [
      "tests/generic_views/test_base.py",
      [
        "GetContextDataTest",
        "test_object_at_custom_name_in_context_data"
      ]
    ]
  ],
  "test_object_in_get_context_data": [
    [
      "tests/generic_views/test_base.py",
      [
        "GetContextDataTest",
        "test_object_in_get_context_data"
      ]
    ]
  ],
  "test_use_queryset_from_view": [
    [
      "tests/generic_views/test_base.py",
      [
        "UseMultipleObjectMixinTest",
        "test_use_queryset_from_view"
      ]
    ]
  ],
  "test_overwrite_queryset": [
    [
      "tests/generic_views/test_base.py",
      [
        "UseMultipleObjectMixinTest",
        "test_overwrite_queryset"
      ]
    ]
  ],
  "test_template_mixin_without_template": [
    [
      "tests/generic_views/test_base.py",
      [
        "SingleObjectTemplateResponseMixinTest",
        "test_template_mixin_without_template"
      ]
    ]
  ],
  "test_template_params": [
    [
      "tests/generic_views/test_base.py",
      [
        "DeprecationTests",
        "test_template_params"
      ]
    ]
  ],
  "test_extra_template_params": [
    [
      "tests/generic_views/test_base.py",
      [
        "DeprecationTests",
        "test_extra_template_params"
      ]
    ]
  ],
  "test_template_params_warning": [
    [
      "tests/generic_views/test_base.py",
      [
        "DeprecationTests",
        "test_template_params_warning"
      ]
    ]
  ],
  "_make_books": [
    [
      "tests/generic_views/test_dates.py",
      [
        "_make_books"
      ]
    ]
  ],
  "test_archive_view": [
    [
      "tests/generic_views/test_dates.py",
      [
        "ArchiveIndexViewTests",
        "test_archive_view"
      ]
    ]
  ],
  "test_archive_view_context_object_name": [
    [
      "tests/generic_views/test_dates.py",
      [
        "ArchiveIndexViewTests",
        "test_archive_view_context_object_name"
      ]
    ]
  ],
  "test_empty_archive_view": [
    [
      "tests/generic_views/test_dates.py",
      [
        "ArchiveIndexViewTests",
        "test_empty_archive_view"
      ]
    ]
  ],
  "test_allow_empty_archive_view": [
    [
      "tests/generic_views/test_dates.py",
      [
        "ArchiveIndexViewTests",
        "test_allow_empty_archive_view"
      ]
    ]
  ],
  "test_archive_view_template": [
    [
      "tests/generic_views/test_dates.py",
      [
        "ArchiveIndexViewTests",
        "test_archive_view_template"
      ]
    ]
  ],
  "test_archive_view_template_suffix": [
    [
      "tests/generic_views/test_dates.py",
      [
        "ArchiveIndexViewTests",
        "test_archive_view_template_suffix"
      ]
    ]
  ],
  "test_archive_view_invalid": [
    [
      "tests/generic_views/test_dates.py",
      [
        "ArchiveIndexViewTests",
        "test_archive_view_invalid"
      ]
    ]
  ],
  "test_archive_view_by_month": [
    [
      "tests/generic_views/test_dates.py",
      [
        "ArchiveIndexViewTests",
        "test_archive_view_by_month"
      ]
    ]
  ],
  "test_paginated_archive_view": [
    [
      "tests/generic_views/test_dates.py",
      [
        "ArchiveIndexViewTests",
        "test_paginated_archive_view"
      ]
    ]
  ],
  "test_paginated_archive_view_does_not_load_entire_table": [
    [
      "tests/generic_views/test_dates.py",
      [
        "ArchiveIndexViewTests",
        "test_paginated_archive_view_does_not_load_entire_table"
      ]
    ]
  ],
  "test_no_duplicate_query": [
    [
      "tests/generic_views/test_dates.py",
      [
        "ArchiveIndexViewTests",
        "test_no_duplicate_query"
      ]
    ],
    [
      "tests/generic_views/test_dates.py",
      [
        "YearArchiveViewTests",
        "test_no_duplicate_query"
      ]
    ]
  ],
  "test_datetime_archive_view": [
    [
      "tests/generic_views/test_dates.py",
      [
        "ArchiveIndexViewTests",
        "test_datetime_archive_view"
      ]
    ]
  ],
  "test_aware_datetime_archive_view": [
    [
      "tests/generic_views/test_dates.py",
      [
        "ArchiveIndexViewTests",
        "test_aware_datetime_archive_view"
      ]
    ]
  ],
  "test_date_list_order": [
    [
      "tests/generic_views/test_dates.py",
      [
        "ArchiveIndexViewTests",
        "test_date_list_order"
      ]
    ],
    [
      "tests/generic_views/test_dates.py",
      [
        "YearArchiveViewTests",
        "test_date_list_order"
      ]
    ],
    [
      "tests/generic_views/test_dates.py",
      [
        "MonthArchiveViewTests",
        "test_date_list_order"
      ]
    ]
  ],
  "test_archive_view_custom_sorting": [
    [
      "tests/generic_views/test_dates.py",
      [
        "ArchiveIndexViewTests",
        "test_archive_view_custom_sorting"
      ]
    ]
  ],
  "test_archive_view_custom_sorting_dec": [
    [
      "tests/generic_views/test_dates.py",
      [
        "ArchiveIndexViewTests",
        "test_archive_view_custom_sorting_dec"
      ]
    ]
  ],
  "test_archive_view_without_date_field": [
    [
      "tests/generic_views/test_dates.py",
      [
        "ArchiveIndexViewTests",
        "test_archive_view_without_date_field"
      ]
    ]
  ],
  "test_year_view": [
    [
      "tests/generic_views/test_dates.py",
      [
        "YearArchiveViewTests",
        "test_year_view"
      ]
    ]
  ],
  "test_year_view_make_object_list": [
    [
      "tests/generic_views/test_dates.py",
      [
        "YearArchiveViewTests",
        "test_year_view_make_object_list"
      ]
    ]
  ],
  "test_year_view_empty": [
    [
      "tests/generic_views/test_dates.py",
      [
        "YearArchiveViewTests",
        "test_year_view_empty"
      ]
    ]
  ],
  "test_year_view_allow_future": [
    [
      "tests/generic_views/test_dates.py",
      [
        "YearArchiveViewTests",
        "test_year_view_allow_future"
      ]
    ]
  ],
  "test_year_view_paginated": [
    [
      "tests/generic_views/test_dates.py",
      [
        "YearArchiveViewTests",
        "test_year_view_paginated"
      ]
    ]
  ],
  "test_year_view_custom_sort_order": [
    [
      "tests/generic_views/test_dates.py",
      [
        "YearArchiveViewTests",
        "test_year_view_custom_sort_order"
      ]
    ]
  ],
  "test_year_view_two_custom_sort_orders": [
    [
      "tests/generic_views/test_dates.py",
      [
        "YearArchiveViewTests",
        "test_year_view_two_custom_sort_orders"
      ]
    ]
  ],
  "test_year_view_invalid_pattern": [
    [
      "tests/generic_views/test_dates.py",
      [
        "YearArchiveViewTests",
        "test_year_view_invalid_pattern"
      ]
    ]
  ],
  "test_datetime_year_view": [
    [
      "tests/generic_views/test_dates.py",
      [
        "YearArchiveViewTests",
        "test_datetime_year_view"
      ]
    ]
  ],
  "test_aware_datetime_year_view": [
    [
      "tests/generic_views/test_dates.py",
      [
        "YearArchiveViewTests",
        "test_aware_datetime_year_view"
      ]
    ]
  ],
  "test_get_context_data_receives_extra_context": [
    [
      "tests/generic_views/test_dates.py",
      [
        "YearArchiveViewTests",
        "test_get_context_data_receives_extra_context"
      ]
    ]
  ],
  "test_get_dated_items_not_implemented": [
    [
      "tests/generic_views/test_dates.py",
      [
        "YearArchiveViewTests",
        "test_get_dated_items_not_implemented"
      ]
    ]
  ],
  "test_month_view": [
    [
      "tests/generic_views/test_dates.py",
      [
        "MonthArchiveViewTests",
        "test_month_view"
      ]
    ]
  ],
  "test_month_view_allow_empty": [
    [
      "tests/generic_views/test_dates.py",
      [
        "MonthArchiveViewTests",
        "test_month_view_allow_empty"
      ]
    ]
  ],
  "test_month_view_allow_future": [
    [
      "tests/generic_views/test_dates.py",
      [
        "MonthArchiveViewTests",
        "test_month_view_allow_future"
      ]
    ]
  ],
  "test_month_view_paginated": [
    [
      "tests/generic_views/test_dates.py",
      [
        "MonthArchiveViewTests",
        "test_month_view_paginated"
      ]
    ]
  ],
  "test_custom_month_format": [
    [
      "tests/generic_views/test_dates.py",
      [
        "MonthArchiveViewTests",
        "test_custom_month_format"
      ]
    ],
    [
      "tests/generic_views/test_dates.py",
      [
        "DayArchiveViewTests",
        "test_custom_month_format"
      ]
    ]
  ],
  "test_month_view_invalid_pattern": [
    [
      "tests/generic_views/test_dates.py",
      [
        "MonthArchiveViewTests",
        "test_month_view_invalid_pattern"
      ]
    ]
  ],
  "test_previous_month_without_content": [
    [
      "tests/generic_views/test_dates.py",
      [
        "MonthArchiveViewTests",
        "test_previous_month_without_content"
      ]
    ]
  ],
  "test_datetime_month_view": [
    [
      "tests/generic_views/test_dates.py",
      [
        "MonthArchiveViewTests",
        "test_datetime_month_view"
      ]
    ]
  ],
  "test_month_view_get_month_from_request": [
    [
      "tests/generic_views/test_dates.py",
      [
        "MonthArchiveViewTests",
        "test_month_view_get_month_from_request"
      ]
    ]
  ],
  "test_month_view_without_month_in_url": [
    [
      "tests/generic_views/test_dates.py",
      [
        "MonthArchiveViewTests",
        "test_month_view_without_month_in_url"
      ]
    ]
  ],
  "test_aware_datetime_month_view": [
    [
      "tests/generic_views/test_dates.py",
      [
        "MonthArchiveViewTests",
        "test_aware_datetime_month_view"
      ]
    ]
  ],
  "test_week_view": [
    [
      "tests/generic_views/test_dates.py",
      [
        "WeekArchiveViewTests",
        "test_week_view"
      ]
    ]
  ],
  "test_week_view_allow_empty": [
    [
      "tests/generic_views/test_dates.py",
      [
        "WeekArchiveViewTests",
        "test_week_view_allow_empty"
      ]
    ]
  ],
  "test_week_view_allow_future": [
    [
      "tests/generic_views/test_dates.py",
      [
        "WeekArchiveViewTests",
        "test_week_view_allow_future"
      ]
    ]
  ],
  "test_week_view_paginated": [
    [
      "tests/generic_views/test_dates.py",
      [
        "WeekArchiveViewTests",
        "test_week_view_paginated"
      ]
    ]
  ],
  "test_week_view_invalid_pattern": [
    [
      "tests/generic_views/test_dates.py",
      [
        "WeekArchiveViewTests",
        "test_week_view_invalid_pattern"
      ]
    ]
  ],
  "test_week_start_Monday": [
    [
      "tests/generic_views/test_dates.py",
      [
        "WeekArchiveViewTests",
        "test_week_start_Monday"
      ]
    ]
  ],
  "test_unknown_week_format": [
    [
      "tests/generic_views/test_dates.py",
      [
        "WeekArchiveViewTests",
        "test_unknown_week_format"
      ]
    ]
  ],
  "test_datetime_week_view": [
    [
      "tests/generic_views/test_dates.py",
      [
        "WeekArchiveViewTests",
        "test_datetime_week_view"
      ]
    ]
  ],
  "test_aware_datetime_week_view": [
    [
      "tests/generic_views/test_dates.py",
      [
        "WeekArchiveViewTests",
        "test_aware_datetime_week_view"
      ]
    ]
  ],
  "test_day_view": [
    [
      "tests/generic_views/test_dates.py",
      [
        "DayArchiveViewTests",
        "test_day_view"
      ]
    ]
  ],
  "test_day_view_allow_empty": [
    [
      "tests/generic_views/test_dates.py",
      [
        "DayArchiveViewTests",
        "test_day_view_allow_empty"
      ]
    ]
  ],
  "test_day_view_allow_future": [
    [
      "tests/generic_views/test_dates.py",
      [
        "DayArchiveViewTests",
        "test_day_view_allow_future"
      ]
    ]
  ],
  "test_day_view_paginated": [
    [
      "tests/generic_views/test_dates.py",
      [
        "DayArchiveViewTests",
        "test_day_view_paginated"
      ]
    ]
  ],
  "test_next_prev_context": [
    [
      "tests/generic_views/test_dates.py",
      [
        "DayArchiveViewTests",
        "test_next_prev_context"
      ]
    ]
  ],
  "test_day_view_invalid_pattern": [
    [
      "tests/generic_views/test_dates.py",
      [
        "DayArchiveViewTests",
        "test_day_view_invalid_pattern"
      ]
    ]
  ],
  "test_today_view": [
    [
      "tests/generic_views/test_dates.py",
      [
        "DayArchiveViewTests",
        "test_today_view"
      ]
    ]
  ],
  "test_datetime_day_view": [
    [
      "tests/generic_views/test_dates.py",
      [
        "DayArchiveViewTests",
        "test_datetime_day_view"
      ]
    ]
  ],
  "test_aware_datetime_day_view": [
    [
      "tests/generic_views/test_dates.py",
      [
        "DayArchiveViewTests",
        "test_aware_datetime_day_view"
      ]
    ]
  ],
  "test_date_detail_by_pk": [
    [
      "tests/generic_views/test_dates.py",
      [
        "DateDetailViewTests",
        "test_date_detail_by_pk"
      ]
    ]
  ],
  "test_date_detail_by_slug": [
    [
      "tests/generic_views/test_dates.py",
      [
        "DateDetailViewTests",
        "test_date_detail_by_slug"
      ]
    ]
  ],
  "test_date_detail_custom_month_format": [
    [
      "tests/generic_views/test_dates.py",
      [
        "DateDetailViewTests",
        "test_date_detail_custom_month_format"
      ]
    ]
  ],
  "test_date_detail_allow_future": [
    [
      "tests/generic_views/test_dates.py",
      [
        "DateDetailViewTests",
        "test_date_detail_allow_future"
      ]
    ]
  ],
  "test_year_out_of_range": [
    [
      "tests/generic_views/test_dates.py",
      [
        "DateDetailViewTests",
        "test_year_out_of_range"
      ]
    ]
  ],
  "test_invalid_url": [
    [
      "tests/generic_views/test_dates.py",
      [
        "DateDetailViewTests",
        "test_invalid_url"
      ]
    ],
    [
      "tests/generic_views/test_detail.py",
      [
        "DetailViewTest",
        "test_invalid_url"
      ]
    ]
  ],
  "test_get_object_custom_queryset": [
    [
      "tests/generic_views/test_dates.py",
      [
        "DateDetailViewTests",
        "test_get_object_custom_queryset"
      ]
    ]
  ],
  "test_get_object_custom_queryset_numqueries": [
    [
      "tests/generic_views/test_dates.py",
      [
        "DateDetailViewTests",
        "test_get_object_custom_queryset_numqueries"
      ]
    ]
  ],
  "test_datetime_date_detail": [
    [
      "tests/generic_views/test_dates.py",
      [
        "DateDetailViewTests",
        "test_datetime_date_detail"
      ]
    ]
  ],
  "test_aware_datetime_date_detail": [
    [
      "tests/generic_views/test_dates.py",
      [
        "DateDetailViewTests",
        "test_aware_datetime_date_detail"
      ]
    ]
  ],
  "test_simple_object": [
    [
      "tests/generic_views/test_detail.py",
      [
        "DetailViewTest",
        "test_simple_object"
      ]
    ]
  ],
  "test_detail_by_pk": [
    [
      "tests/generic_views/test_detail.py",
      [
        "DetailViewTest",
        "test_detail_by_pk"
      ]
    ]
  ],
  "test_detail_missing_object": [
    [
      "tests/generic_views/test_detail.py",
      [
        "DetailViewTest",
        "test_detail_missing_object"
      ]
    ]
  ],
  "test_detail_object_does_not_exist": [
    [
      "tests/generic_views/test_detail.py",
      [
        "DetailViewTest",
        "test_detail_object_does_not_exist"
      ]
    ]
  ],
  "test_detail_by_custom_pk": [
    [
      "tests/generic_views/test_detail.py",
      [
        "DetailViewTest",
        "test_detail_by_custom_pk"
      ]
    ]
  ],
  "test_detail_by_slug": [
    [
      "tests/generic_views/test_detail.py",
      [
        "DetailViewTest",
        "test_detail_by_slug"
      ]
    ]
  ],
  "test_detail_by_custom_slug": [
    [
      "tests/generic_views/test_detail.py",
      [
        "DetailViewTest",
        "test_detail_by_custom_slug"
      ]
    ]
  ],
  "test_detail_by_pk_ignore_slug": [
    [
      "tests/generic_views/test_detail.py",
      [
        "DetailViewTest",
        "test_detail_by_pk_ignore_slug"
      ]
    ]
  ],
  "test_detail_by_pk_ignore_slug_mismatch": [
    [
      "tests/generic_views/test_detail.py",
      [
        "DetailViewTest",
        "test_detail_by_pk_ignore_slug_mismatch"
      ]
    ]
  ],
  "test_detail_by_pk_and_slug": [
    [
      "tests/generic_views/test_detail.py",
      [
        "DetailViewTest",
        "test_detail_by_pk_and_slug"
      ]
    ]
  ],
  "test_detail_by_pk_and_slug_mismatch_404": [
    [
      "tests/generic_views/test_detail.py",
      [
        "DetailViewTest",
        "test_detail_by_pk_and_slug_mismatch_404"
      ]
    ]
  ],
  "test_verbose_name": [
    [
      "tests/generic_views/test_detail.py",
      [
        "DetailViewTest",
        "test_verbose_name"
      ]
    ],
    [
      "tests/generic_views/test_list.py",
      [
        "ListViewTests",
        "test_verbose_name"
      ]
    ],
    [
      "tests/i18n/contenttypes/tests.py",
      [
        "ContentTypeTests",
        "test_verbose_name"
      ]
    ]
  ],
  "test_template_name": [
    [
      "tests/generic_views/test_detail.py",
      [
        "DetailViewTest",
        "test_template_name"
      ]
    ],
    [
      "tests/generic_views/test_list.py",
      [
        "ListViewTests",
        "test_template_name"
      ]
    ]
  ],
  "test_template_name_suffix": [
    [
      "tests/generic_views/test_detail.py",
      [
        "DetailViewTest",
        "test_template_name_suffix"
      ]
    ],
    [
      "tests/generic_views/test_list.py",
      [
        "ListViewTests",
        "test_template_name_suffix"
      ]
    ]
  ],
  "test_template_name_field": [
    [
      "tests/generic_views/test_detail.py",
      [
        "DetailViewTest",
        "test_template_name_field"
      ]
    ]
  ],
  "test_context_object_name": [
    [
      "tests/generic_views/test_detail.py",
      [
        "DetailViewTest",
        "test_context_object_name"
      ]
    ],
    [
      "tests/generic_views/test_list.py",
      [
        "ListViewTests",
        "test_context_object_name"
      ]
    ]
  ],
  "test_duplicated_context_object_name": [
    [
      "tests/generic_views/test_detail.py",
      [
        "DetailViewTest",
        "test_duplicated_context_object_name"
      ]
    ]
  ],
  "test_custom_detail": [
    [
      "tests/generic_views/test_detail.py",
      [
        "DetailViewTest",
        "test_custom_detail"
      ]
    ]
  ],
  "test_deferred_queryset_template_name": [
    [
      "tests/generic_views/test_detail.py",
      [
        "DetailViewTest",
        "test_deferred_queryset_template_name"
      ]
    ]
  ],
  "test_deferred_queryset_context_object_name": [
    [
      "tests/generic_views/test_detail.py",
      [
        "DetailViewTest",
        "test_deferred_queryset_context_object_name"
      ]
    ]
  ],
  "test_invalid_queryset": [
    [
      "tests/generic_views/test_detail.py",
      [
        "DetailViewTest",
        "test_invalid_queryset"
      ]
    ]
  ],
  "test_non_model_object_with_meta": [
    [
      "tests/generic_views/test_detail.py",
      [
        "DetailViewTest",
        "test_non_model_object_with_meta"
      ]
    ]
  ],
  "test_get_prefix": [
    [
      "tests/generic_views/test_edit.py",
      [
        "FormMixinTests",
        "test_get_prefix"
      ]
    ]
  ],
  "test_get_form": [
    [
      "tests/generic_views/test_edit.py",
      [
        "FormMixinTests",
        "test_get_form"
      ]
    ],
    [
      "tests/generic_views/test_edit.py",
      [
        "ModelFormMixinTests",
        "test_get_form"
      ]
    ]
  ],
  "test_get_context_data": [
    [
      "tests/generic_views/test_edit.py",
      [
        "FormMixinTests",
        "test_get_context_data"
      ]
    ]
  ],
  "test_post_data": [
    [
      "tests/generic_views/test_edit.py",
      [
        "BasicFormTests",
        "test_post_data"
      ]
    ]
  ],
  "test_late_form_validation": [
    [
      "tests/generic_views/test_edit.py",
      [
        "BasicFormTests",
        "test_late_form_validation"
      ]
    ]
  ],
  "test_get_form_checks_for_object": [
    [
      "tests/generic_views/test_edit.py",
      [
        "ModelFormMixinTests",
        "test_get_form_checks_for_object"
      ]
    ]
  ],
  "test_create": [
    [
      "tests/generic_views/test_edit.py",
      [
        "CreateViewTests",
        "test_create"
      ]
    ],
    [
      "tests/get_or_create/tests.py",
      [
        "UpdateOrCreateTests",
        "test_create"
      ]
    ],
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_create"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_create"
      ]
    ],
    [
      "tests/model_fields/test_imagefield.py",
      [
        "ImageFieldTwoDimensionsTests",
        "test_create"
      ]
    ],
    [
      "tests/model_fields/test_imagefield.py",
      [
        "TwoImageFieldTests",
        "test_create"
      ]
    ]
  ],
  "test_create_invalid": [
    [
      "tests/generic_views/test_edit.py",
      [
        "CreateViewTests",
        "test_create_invalid"
      ]
    ]
  ],
  "test_create_with_object_url": [
    [
      "tests/generic_views/test_edit.py",
      [
        "CreateViewTests",
        "test_create_with_object_url"
      ]
    ]
  ],
  "test_create_with_redirect": [
    [
      "tests/generic_views/test_edit.py",
      [
        "CreateViewTests",
        "test_create_with_redirect"
      ]
    ]
  ],
  "test_create_with_interpolated_redirect": [
    [
      "tests/generic_views/test_edit.py",
      [
        "CreateViewTests",
        "test_create_with_interpolated_redirect"
      ]
    ]
  ],
  "test_create_with_special_properties": [
    [
      "tests/generic_views/test_edit.py",
      [
        "CreateViewTests",
        "test_create_with_special_properties"
      ]
    ]
  ],
  "test_create_without_redirect": [
    [
      "tests/generic_views/test_edit.py",
      [
        "CreateViewTests",
        "test_create_without_redirect"
      ]
    ]
  ],
  "test_create_restricted": [
    [
      "tests/generic_views/test_edit.py",
      [
        "CreateViewTests",
        "test_create_restricted"
      ]
    ]
  ],
  "test_create_view_with_restricted_fields": [
    [
      "tests/generic_views/test_edit.py",
      [
        "CreateViewTests",
        "test_create_view_with_restricted_fields"
      ]
    ]
  ],
  "test_create_view_all_fields": [
    [
      "tests/generic_views/test_edit.py",
      [
        "CreateViewTests",
        "test_create_view_all_fields"
      ]
    ]
  ],
  "test_create_view_without_explicit_fields": [
    [
      "tests/generic_views/test_edit.py",
      [
        "CreateViewTests",
        "test_create_view_without_explicit_fields"
      ]
    ]
  ],
  "test_define_both_fields_and_form_class": [
    [
      "tests/generic_views/test_edit.py",
      [
        "CreateViewTests",
        "test_define_both_fields_and_form_class"
      ]
    ]
  ],
  "test_update_post": [
    [
      "tests/generic_views/test_edit.py",
      [
        "UpdateViewTests",
        "test_update_post"
      ]
    ]
  ],
  "test_update_invalid": [
    [
      "tests/generic_views/test_edit.py",
      [
        "UpdateViewTests",
        "test_update_invalid"
      ]
    ]
  ],
  "test_update_with_object_url": [
    [
      "tests/generic_views/test_edit.py",
      [
        "UpdateViewTests",
        "test_update_with_object_url"
      ]
    ]
  ],
  "test_update_with_redirect": [
    [
      "tests/generic_views/test_edit.py",
      [
        "UpdateViewTests",
        "test_update_with_redirect"
      ]
    ]
  ],
  "test_update_with_interpolated_redirect": [
    [
      "tests/generic_views/test_edit.py",
      [
        "UpdateViewTests",
        "test_update_with_interpolated_redirect"
      ]
    ]
  ],
  "test_update_with_special_properties": [
    [
      "tests/generic_views/test_edit.py",
      [
        "UpdateViewTests",
        "test_update_with_special_properties"
      ]
    ]
  ],
  "test_update_without_redirect": [
    [
      "tests/generic_views/test_edit.py",
      [
        "UpdateViewTests",
        "test_update_without_redirect"
      ]
    ]
  ],
  "test_update_get_object": [
    [
      "tests/generic_views/test_edit.py",
      [
        "UpdateViewTests",
        "test_update_get_object"
      ]
    ]
  ],
  "test_delete_by_post": [
    [
      "tests/generic_views/test_edit.py",
      [
        "DeleteViewTests",
        "test_delete_by_post"
      ]
    ]
  ],
  "test_delete_by_delete": [
    [
      "tests/generic_views/test_edit.py",
      [
        "DeleteViewTests",
        "test_delete_by_delete"
      ]
    ]
  ],
  "test_delete_with_redirect": [
    [
      "tests/generic_views/test_edit.py",
      [
        "DeleteViewTests",
        "test_delete_with_redirect"
      ]
    ]
  ],
  "test_delete_with_interpolated_redirect": [
    [
      "tests/generic_views/test_edit.py",
      [
        "DeleteViewTests",
        "test_delete_with_interpolated_redirect"
      ]
    ]
  ],
  "test_delete_with_special_properties": [
    [
      "tests/generic_views/test_edit.py",
      [
        "DeleteViewTests",
        "test_delete_with_special_properties"
      ]
    ]
  ],
  "test_delete_without_redirect": [
    [
      "tests/generic_views/test_edit.py",
      [
        "DeleteViewTests",
        "test_delete_without_redirect"
      ]
    ]
  ],
  "test_items": [
    [
      "tests/generic_views/test_list.py",
      [
        "ListViewTests",
        "test_items"
      ]
    ],
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_items"
      ]
    ],
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "CaseInsensitiveMappingTests",
        "test_items"
      ]
    ]
  ],
  "test_queryset": [
    [
      "tests/generic_views/test_list.py",
      [
        "ListViewTests",
        "test_queryset"
      ]
    ]
  ],
  "test_paginated_queryset": [
    [
      "tests/generic_views/test_list.py",
      [
        "ListViewTests",
        "test_paginated_queryset"
      ]
    ]
  ],
  "test_paginated_queryset_shortdata": [
    [
      "tests/generic_views/test_list.py",
      [
        "ListViewTests",
        "test_paginated_queryset_shortdata"
      ]
    ]
  ],
  "test_paginated_get_page_by_query_string": [
    [
      "tests/generic_views/test_list.py",
      [
        "ListViewTests",
        "test_paginated_get_page_by_query_string"
      ]
    ]
  ],
  "test_paginated_get_last_page_by_query_string": [
    [
      "tests/generic_views/test_list.py",
      [
        "ListViewTests",
        "test_paginated_get_last_page_by_query_string"
      ]
    ]
  ],
  "test_paginated_get_page_by_urlvar": [
    [
      "tests/generic_views/test_list.py",
      [
        "ListViewTests",
        "test_paginated_get_page_by_urlvar"
      ]
    ]
  ],
  "test_paginated_page_out_of_range": [
    [
      "tests/generic_views/test_list.py",
      [
        "ListViewTests",
        "test_paginated_page_out_of_range"
      ]
    ]
  ],
  "test_paginated_invalid_page": [
    [
      "tests/generic_views/test_list.py",
      [
        "ListViewTests",
        "test_paginated_invalid_page"
      ]
    ]
  ],
  "test_paginated_custom_paginator_class": [
    [
      "tests/generic_views/test_list.py",
      [
        "ListViewTests",
        "test_paginated_custom_paginator_class"
      ]
    ]
  ],
  "test_paginated_custom_page_kwarg": [
    [
      "tests/generic_views/test_list.py",
      [
        "ListViewTests",
        "test_paginated_custom_page_kwarg"
      ]
    ]
  ],
  "test_paginated_custom_paginator_constructor": [
    [
      "tests/generic_views/test_list.py",
      [
        "ListViewTests",
        "test_paginated_custom_paginator_constructor"
      ]
    ]
  ],
  "test_paginated_orphaned_queryset": [
    [
      "tests/generic_views/test_list.py",
      [
        "ListViewTests",
        "test_paginated_orphaned_queryset"
      ]
    ]
  ],
  "test_paginated_non_queryset": [
    [
      "tests/generic_views/test_list.py",
      [
        "ListViewTests",
        "test_paginated_non_queryset"
      ]
    ]
  ],
  "test_allow_empty_false": [
    [
      "tests/generic_views/test_list.py",
      [
        "ListViewTests",
        "test_allow_empty_false"
      ]
    ]
  ],
  "test_duplicate_context_object_name": [
    [
      "tests/generic_views/test_list.py",
      [
        "ListViewTests",
        "test_duplicate_context_object_name"
      ]
    ]
  ],
  "test_missing_items": [
    [
      "tests/generic_views/test_list.py",
      [
        "ListViewTests",
        "test_missing_items"
      ]
    ]
  ],
  "test_invalid_get_queryset": [
    [
      "tests/generic_views/test_list.py",
      [
        "ListViewTests",
        "test_invalid_get_queryset"
      ]
    ]
  ],
  "test_paginated_list_view_does_not_load_entire_table": [
    [
      "tests/generic_views/test_list.py",
      [
        "ListViewTests",
        "test_paginated_list_view_does_not_load_entire_table"
      ]
    ]
  ],
  "test_explicitly_ordered_list_view": [
    [
      "tests/generic_views/test_list.py",
      [
        "ListViewTests",
        "test_explicitly_ordered_list_view"
      ]
    ]
  ],
  "test_paginated_list_view_returns_useful_message_on_invalid_page": [
    [
      "tests/generic_views/test_list.py",
      [
        "ListViewTests",
        "test_paginated_list_view_returns_useful_message_on_invalid_page"
      ]
    ]
  ],
  "_make_authors": [
    [
      "tests/generic_views/test_list.py",
      [
        "ListViewTests",
        "_make_authors"
      ]
    ]
  ],
  "test_earliest": [
    [
      "tests/get_earliest_or_latest/tests.py",
      [
        "EarliestOrLatestTests",
        "test_earliest"
      ]
    ]
  ],
  "test_latest": [
    [
      "tests/get_earliest_or_latest/tests.py",
      [
        "EarliestOrLatestTests",
        "test_latest"
      ]
    ]
  ],
  "test_latest_manual": [
    [
      "tests/get_earliest_or_latest/tests.py",
      [
        "EarliestOrLatestTests",
        "test_latest_manual"
      ]
    ]
  ],
  "test_first": [
    [
      "tests/get_earliest_or_latest/tests.py",
      [
        "TestFirstLast",
        "test_first"
      ]
    ],
    [
      "tests/migrations/test_loader.py",
      [
        "LoaderTests",
        "test_first"
      ]
    ]
  ],
  "test_last": [
    [
      "tests/get_earliest_or_latest/tests.py",
      [
        "TestFirstLast",
        "test_last"
      ]
    ]
  ],
  "test_index_error_not_suppressed": [
    [
      "tests/get_earliest_or_latest/tests.py",
      [
        "TestFirstLast",
        "test_index_error_not_suppressed"
      ]
    ]
  ],
  "test_get_object_or_404": [
    [
      "tests/get_object_or_404/tests.py",
      [
        "GetObjectOr404Tests",
        "test_get_object_or_404"
      ]
    ]
  ],
  "test_bad_class": [
    [
      "tests/get_object_or_404/tests.py",
      [
        "GetObjectOr404Tests",
        "test_bad_class"
      ]
    ]
  ],
  "test_get_object_or_404_queryset_attribute_error": [
    [
      "tests/get_object_or_404/tests.py",
      [
        "GetObjectOr404Tests",
        "test_get_object_or_404_queryset_attribute_error"
      ]
    ]
  ],
  "test_get_list_or_404_queryset_attribute_error": [
    [
      "tests/get_object_or_404/tests.py",
      [
        "GetObjectOr404Tests",
        "test_get_list_or_404_queryset_attribute_error"
      ]
    ]
  ],
  "capitalized_name_property": [
    [
      "tests/get_or_create/models.py",
      [
        "Thing",
        "capitalized_name_property"
      ]
    ]
  ],
  "capitalized_name_property_1": [
    [
      "tests/get_or_create/models.py",
      [
        "Thing",
        "capitalized_name_property_1"
      ]
    ]
  ],
  "name_in_all_caps": [
    [
      "tests/get_or_create/models.py",
      [
        "Thing",
        "name_in_all_caps"
      ]
    ]
  ],
  "test_get_or_create_method_with_get": [
    [
      "tests/get_or_create/tests.py",
      [
        "GetOrCreateTests",
        "test_get_or_create_method_with_get"
      ]
    ]
  ],
  "test_get_or_create_method_with_create": [
    [
      "tests/get_or_create/tests.py",
      [
        "GetOrCreateTests",
        "test_get_or_create_method_with_create"
      ]
    ]
  ],
  "test_get_or_create_redundant_instance": [
    [
      "tests/get_or_create/tests.py",
      [
        "GetOrCreateTests",
        "test_get_or_create_redundant_instance"
      ]
    ]
  ],
  "test_get_or_create_invalid_params": [
    [
      "tests/get_or_create/tests.py",
      [
        "GetOrCreateTests",
        "test_get_or_create_invalid_params"
      ]
    ]
  ],
  "test_get_or_create_with_pk_property": [
    [
      "tests/get_or_create/tests.py",
      [
        "GetOrCreateTests",
        "test_get_or_create_with_pk_property"
      ]
    ]
  ],
  "test_get_or_create_with_model_property_defaults": [
    [
      "tests/get_or_create/tests.py",
      [
        "GetOrCreateTests",
        "test_get_or_create_with_model_property_defaults"
      ]
    ]
  ],
  "test_get_or_create_on_related_manager": [
    [
      "tests/get_or_create/tests.py",
      [
        "GetOrCreateTests",
        "test_get_or_create_on_related_manager"
      ]
    ]
  ],
  "test_defaults_exact": [
    [
      "tests/get_or_create/tests.py",
      [
        "GetOrCreateTests",
        "test_defaults_exact"
      ]
    ],
    [
      "tests/get_or_create/tests.py",
      [
        "UpdateOrCreateTests",
        "test_defaults_exact"
      ]
    ]
  ],
  "test_callable_defaults": [
    [
      "tests/get_or_create/tests.py",
      [
        "GetOrCreateTests",
        "test_callable_defaults"
      ]
    ],
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_callable_defaults"
      ]
    ]
  ],
  "test_callable_defaults_not_called": [
    [
      "tests/get_or_create/tests.py",
      [
        "GetOrCreateTests",
        "test_callable_defaults_not_called"
      ]
    ]
  ],
  "test_defaults_not_evaluated_unless_needed": [
    [
      "tests/get_or_create/tests.py",
      [
        "GetOrCreateTests",
        "test_defaults_not_evaluated_unless_needed"
      ]
    ],
    [
      "tests/get_or_create/tests.py",
      [
        "UpdateOrCreateTests",
        "test_defaults_not_evaluated_unless_needed"
      ]
    ]
  ],
  "test_create_with_duplicate_primary_key": [
    [
      "tests/get_or_create/tests.py",
      [
        "GetOrCreateTestsWithManualPKs",
        "test_create_with_duplicate_primary_key"
      ]
    ],
    [
      "tests/get_or_create/tests.py",
      [
        "UpdateOrCreateTestsWithManualPKs",
        "test_create_with_duplicate_primary_key"
      ]
    ]
  ],
  "test_get_or_create_raises_IntegrityError_plus_traceback": [
    [
      "tests/get_or_create/tests.py",
      [
        "GetOrCreateTestsWithManualPKs",
        "test_get_or_create_raises_IntegrityError_plus_traceback"
      ]
    ]
  ],
  "test_savepoint_rollback": [
    [
      "tests/get_or_create/tests.py",
      [
        "GetOrCreateTestsWithManualPKs",
        "test_savepoint_rollback"
      ]
    ]
  ],
  "test_get_or_create_empty": [
    [
      "tests/get_or_create/tests.py",
      [
        "GetOrCreateTestsWithManualPKs",
        "test_get_or_create_empty"
      ]
    ]
  ],
  "test_get_or_create_integrityerror": [
    [
      "tests/get_or_create/tests.py",
      [
        "GetOrCreateTransactionTests",
        "test_get_or_create_integrityerror"
      ]
    ]
  ],
  "test_get_get_or_create": [
    [
      "tests/get_or_create/tests.py",
      [
        "GetOrCreateThroughManyToMany",
        "test_get_get_or_create"
      ]
    ]
  ],
  "test_create_get_or_create": [
    [
      "tests/get_or_create/tests.py",
      [
        "GetOrCreateThroughManyToMany",
        "test_create_get_or_create"
      ]
    ]
  ],
  "test_something": [
    [
      "tests/get_or_create/tests.py",
      [
        "GetOrCreateThroughManyToMany",
        "test_something"
      ]
    ],
    [
      "tests/sitemaps_tests/test_utils.py",
      [
        "PingGoogleTests",
        "test_something"
      ]
    ]
  ],
  "test_create_twice": [
    [
      "tests/get_or_create/tests.py",
      [
        "UpdateOrCreateTests",
        "test_create_twice"
      ]
    ]
  ],
  "test_integrity": [
    [
      "tests/get_or_create/tests.py",
      [
        "UpdateOrCreateTests",
        "test_integrity"
      ]
    ]
  ],
  "test_manual_primary_key_test": [
    [
      "tests/get_or_create/tests.py",
      [
        "UpdateOrCreateTests",
        "test_manual_primary_key_test"
      ]
    ]
  ],
  "test_with_pk_property": [
    [
      "tests/get_or_create/tests.py",
      [
        "UpdateOrCreateTests",
        "test_with_pk_property"
      ]
    ]
  ],
  "test_update_or_create_with_model_property_defaults": [
    [
      "tests/get_or_create/tests.py",
      [
        "UpdateOrCreateTests",
        "test_update_or_create_with_model_property_defaults"
      ]
    ]
  ],
  "test_error_contains_full_traceback": [
    [
      "tests/get_or_create/tests.py",
      [
        "UpdateOrCreateTests",
        "test_error_contains_full_traceback"
      ]
    ]
  ],
  "test_create_with_related_manager": [
    [
      "tests/get_or_create/tests.py",
      [
        "UpdateOrCreateTests",
        "test_create_with_related_manager"
      ]
    ]
  ],
  "test_update_with_related_manager": [
    [
      "tests/get_or_create/tests.py",
      [
        "UpdateOrCreateTests",
        "test_update_with_related_manager"
      ]
    ]
  ],
  "test_create_with_many": [
    [
      "tests/get_or_create/tests.py",
      [
        "UpdateOrCreateTests",
        "test_create_with_many"
      ]
    ]
  ],
  "test_update_with_many": [
    [
      "tests/get_or_create/tests.py",
      [
        "UpdateOrCreateTests",
        "test_update_with_many"
      ]
    ]
  ],
  "test_create_callable_default": [
    [
      "tests/get_or_create/tests.py",
      [
        "UpdateOrCreateTests",
        "test_create_callable_default"
      ]
    ]
  ],
  "test_update_callable_default": [
    [
      "tests/get_or_create/tests.py",
      [
        "UpdateOrCreateTests",
        "test_update_callable_default"
      ]
    ]
  ],
  "birthday_sleep": [
    [
      "tests/get_or_create/tests.py",
      [
        "UpdateOrCreateTransactionTests",
        "test_updates_in_transaction",
        "birthday_sleep"
      ]
    ],
    [
      "tests/get_or_create/tests.py",
      [
        "UpdateOrCreateTransactionTests",
        "test_creation_in_transaction",
        "birthday_sleep"
      ]
    ]
  ],
  "update_birthday_slowly": [
    [
      "tests/get_or_create/tests.py",
      [
        "UpdateOrCreateTransactionTests",
        "test_updates_in_transaction",
        "update_birthday_slowly"
      ]
    ],
    [
      "tests/get_or_create/tests.py",
      [
        "UpdateOrCreateTransactionTests",
        "test_creation_in_transaction",
        "update_birthday_slowly"
      ]
    ]
  ],
  "lock_wait": [
    [
      "tests/get_or_create/tests.py",
      [
        "UpdateOrCreateTransactionTests",
        "test_updates_in_transaction",
        "lock_wait"
      ]
    ],
    [
      "tests/get_or_create/tests.py",
      [
        "UpdateOrCreateTransactionTests",
        "test_creation_in_transaction",
        "lock_wait"
      ]
    ]
  ],
  "test_updates_in_transaction": [
    [
      "tests/get_or_create/tests.py",
      [
        "UpdateOrCreateTransactionTests",
        "test_updates_in_transaction"
      ]
    ]
  ],
  "test_creation_in_transaction": [
    [
      "tests/get_or_create/tests.py",
      [
        "UpdateOrCreateTransactionTests",
        "test_creation_in_transaction"
      ]
    ]
  ],
  "test_get_or_create_with_invalid_defaults": [
    [
      "tests/get_or_create/tests.py",
      [
        "InvalidCreateArgumentsTests",
        "test_get_or_create_with_invalid_defaults"
      ]
    ]
  ],
  "test_get_or_create_with_invalid_kwargs": [
    [
      "tests/get_or_create/tests.py",
      [
        "InvalidCreateArgumentsTests",
        "test_get_or_create_with_invalid_kwargs"
      ]
    ]
  ],
  "test_update_or_create_with_invalid_defaults": [
    [
      "tests/get_or_create/tests.py",
      [
        "InvalidCreateArgumentsTests",
        "test_update_or_create_with_invalid_defaults"
      ]
    ]
  ],
  "test_update_or_create_with_invalid_kwargs": [
    [
      "tests/get_or_create/tests.py",
      [
        "InvalidCreateArgumentsTests",
        "test_update_or_create_with_invalid_kwargs"
      ]
    ]
  ],
  "test_multiple_invalid_fields": [
    [
      "tests/get_or_create/tests.py",
      [
        "InvalidCreateArgumentsTests",
        "test_multiple_invalid_fields"
      ]
    ]
  ],
  "test_property_attribute_without_setter_defaults": [
    [
      "tests/get_or_create/tests.py",
      [
        "InvalidCreateArgumentsTests",
        "test_property_attribute_without_setter_defaults"
      ]
    ]
  ],
  "test_property_attribute_without_setter_kwargs": [
    [
      "tests/get_or_create/tests.py",
      [
        "InvalidCreateArgumentsTests",
        "test_property_attribute_without_setter_kwargs"
      ]
    ]
  ],
  "get_names": [
    [
      "tests/gis_tests/distapp/tests.py",
      [
        "DistanceTest",
        "get_names"
      ]
    ]
  ],
  "test_init": [
    [
      "tests/gis_tests/distapp/tests.py",
      [
        "DistanceTest",
        "test_init"
      ]
    ],
    [
      "tests/gis_tests/layermap/tests.py",
      [
        "LayerMapTest",
        "test_init"
      ]
    ],
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "GeometryFieldTest",
        "test_init"
      ]
    ],
    [
      "tests/gis_tests/test_measure.py",
      [
        "DistanceTest",
        "test_init"
      ]
    ],
    [
      "tests/gis_tests/test_measure.py",
      [
        "AreaTest",
        "test_init"
      ]
    ]
  ],
  "test_dwithin": [
    [
      "tests/gis_tests/distapp/tests.py",
      [
        "DistanceTest",
        "test_dwithin"
      ]
    ]
  ],
  "test_distance_lookups": [
    [
      "tests/gis_tests/distapp/tests.py",
      [
        "DistanceTest",
        "test_distance_lookups"
      ]
    ]
  ],
  "test_geodetic_distance_lookups": [
    [
      "tests/gis_tests/distapp/tests.py",
      [
        "DistanceTest",
        "test_geodetic_distance_lookups"
      ]
    ]
  ],
  "test_distance_lookups_with_expression_rhs": [
    [
      "tests/gis_tests/distapp/tests.py",
      [
        "DistanceTest",
        "test_distance_lookups_with_expression_rhs"
      ]
    ]
  ],
  "test_mysql_geodetic_distance_error": [
    [
      "tests/gis_tests/distapp/tests.py",
      [
        "DistanceTest",
        "test_mysql_geodetic_distance_error"
      ]
    ]
  ],
  "test_dwithin_subquery": [
    [
      "tests/gis_tests/distapp/tests.py",
      [
        "DistanceTest",
        "test_dwithin_subquery"
      ]
    ]
  ],
  "test_dwithin_with_expression_rhs": [
    [
      "tests/gis_tests/distapp/tests.py",
      [
        "DistanceTest",
        "test_dwithin_with_expression_rhs"
      ]
    ]
  ],
  "test_dwithin_with_expression_rhs_not_supported": [
    [
      "tests/gis_tests/distapp/tests.py",
      [
        "DistanceTest",
        "test_dwithin_with_expression_rhs_not_supported"
      ]
    ]
  ],
  "test_area": [
    [
      "tests/gis_tests/distapp/tests.py",
      [
        "DistanceFunctionsTests",
        "test_area"
      ]
    ]
  ],
  "test_distance_simple": [
    [
      "tests/gis_tests/distapp/tests.py",
      [
        "DistanceFunctionsTests",
        "test_distance_simple"
      ]
    ]
  ],
  "test_distance_projected": [
    [
      "tests/gis_tests/distapp/tests.py",
      [
        "DistanceFunctionsTests",
        "test_distance_projected"
      ]
    ]
  ],
  "test_distance_geodetic": [
    [
      "tests/gis_tests/distapp/tests.py",
      [
        "DistanceFunctionsTests",
        "test_distance_geodetic"
      ]
    ]
  ],
  "test_distance_geodetic_spheroid": [
    [
      "tests/gis_tests/distapp/tests.py",
      [
        "DistanceFunctionsTests",
        "test_distance_geodetic_spheroid"
      ]
    ]
  ],
  "test_distance_function_raw_result": [
    [
      "tests/gis_tests/distapp/tests.py",
      [
        "DistanceFunctionsTests",
        "test_distance_function_raw_result"
      ]
    ]
  ],
  "test_distance_function_d_lookup": [
    [
      "tests/gis_tests/distapp/tests.py",
      [
        "DistanceFunctionsTests",
        "test_distance_function_d_lookup"
      ]
    ]
  ],
  "test_distance_function_tolerance_escaping": [
    [
      "tests/gis_tests/distapp/tests.py",
      [
        "DistanceFunctionsTests",
        "test_distance_function_tolerance_escaping"
      ]
    ]
  ],
  "test_distance_function_tolerance": [
    [
      "tests/gis_tests/distapp/tests.py",
      [
        "DistanceFunctionsTests",
        "test_distance_function_tolerance"
      ]
    ]
  ],
  "test_distance_function_raw_result_d_lookup": [
    [
      "tests/gis_tests/distapp/tests.py",
      [
        "DistanceFunctionsTests",
        "test_distance_function_raw_result_d_lookup"
      ]
    ]
  ],
  "test_distance_transform": [
    [
      "tests/gis_tests/distapp/tests.py",
      [
        "DistanceFunctionsTests",
        "test_distance_transform"
      ]
    ]
  ],
  "test_distance_order_by": [
    [
      "tests/gis_tests/distapp/tests.py",
      [
        "DistanceFunctionsTests",
        "test_distance_order_by"
      ]
    ]
  ],
  "test_length": [
    [
      "tests/gis_tests/distapp/tests.py",
      [
        "DistanceFunctionsTests",
        "test_length"
      ]
    ],
    [
      "tests/gis_tests/geo3d/tests.py",
      [
        "Geo3DFunctionsTests",
        "test_length"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_length"
      ]
    ]
  ],
  "test_perimeter": [
    [
      "tests/gis_tests/distapp/tests.py",
      [
        "DistanceFunctionsTests",
        "test_perimeter"
      ]
    ],
    [
      "tests/gis_tests/geo3d/tests.py",
      [
        "Geo3DFunctionsTests",
        "test_perimeter"
      ]
    ]
  ],
  "test_perimeter_geodetic": [
    [
      "tests/gis_tests/distapp/tests.py",
      [
        "DistanceFunctionsTests",
        "test_perimeter_geodetic"
      ]
    ]
  ],
  "test_measurement_null_fields": [
    [
      "tests/gis_tests/distapp/tests.py",
      [
        "DistanceFunctionsTests",
        "test_measurement_null_fields"
      ]
    ]
  ],
  "test01_valid_driver": [
    [
      "tests/gis_tests/gdal_tests/test_driver.py",
      [
        "DriverTest",
        "test01_valid_driver"
      ]
    ]
  ],
  "test02_invalid_driver": [
    [
      "tests/gis_tests/gdal_tests/test_driver.py",
      [
        "DriverTest",
        "test02_invalid_driver"
      ]
    ]
  ],
  "test03_aliases": [
    [
      "tests/gis_tests/gdal_tests/test_driver.py",
      [
        "DriverTest",
        "test03_aliases"
      ]
    ]
  ],
  "test_registered": [
    [
      "tests/gis_tests/gdal_tests/test_driver.py",
      [
        "DriverTest",
        "test_registered"
      ]
    ]
  ],
  "test01_valid_shp": [
    [
      "tests/gis_tests/gdal_tests/test_ds.py",
      [
        "DataSourceTest",
        "test01_valid_shp"
      ]
    ]
  ],
  "test02_invalid_shp": [
    [
      "tests/gis_tests/gdal_tests/test_ds.py",
      [
        "DataSourceTest",
        "test02_invalid_shp"
      ]
    ]
  ],
  "test03a_layers": [
    [
      "tests/gis_tests/gdal_tests/test_ds.py",
      [
        "DataSourceTest",
        "test03a_layers"
      ]
    ]
  ],
  "test03b_layer_slice": [
    [
      "tests/gis_tests/gdal_tests/test_ds.py",
      [
        "DataSourceTest",
        "test03b_layer_slice"
      ]
    ]
  ],
  "test03c_layer_references": [
    [
      "tests/gis_tests/gdal_tests/test_ds.py",
      [
        "DataSourceTest",
        "test03c_layer_references"
      ]
    ]
  ],
  "test04_features": [
    [
      "tests/gis_tests/gdal_tests/test_ds.py",
      [
        "DataSourceTest",
        "test04_features"
      ]
    ]
  ],
  "test05_geometries": [
    [
      "tests/gis_tests/gdal_tests/test_ds.py",
      [
        "DataSourceTest",
        "test05_geometries"
      ]
    ]
  ],
  "test06_spatial_filter": [
    [
      "tests/gis_tests/gdal_tests/test_ds.py",
      [
        "DataSourceTest",
        "test06_spatial_filter"
      ]
    ]
  ],
  "test07_integer_overflow": [
    [
      "tests/gis_tests/gdal_tests/test_ds.py",
      [
        "DataSourceTest",
        "test07_integer_overflow"
      ]
    ]
  ],
  "test01_init": [
    [
      "tests/gis_tests/gdal_tests/test_envelope.py",
      [
        "EnvelopeTest",
        "test01_init"
      ]
    ],
    [
      "tests/gis_tests/test_geoip2.py",
      [
        "GeoIPTest",
        "test01_init"
      ]
    ]
  ],
  "test02_properties": [
    [
      "tests/gis_tests/gdal_tests/test_envelope.py",
      [
        "EnvelopeTest",
        "test02_properties"
      ]
    ]
  ],
  "test03_equivalence": [
    [
      "tests/gis_tests/gdal_tests/test_envelope.py",
      [
        "EnvelopeTest",
        "test03_equivalence"
      ]
    ]
  ],
  "test04_expand_to_include_pt_2_params": [
    [
      "tests/gis_tests/gdal_tests/test_envelope.py",
      [
        "EnvelopeTest",
        "test04_expand_to_include_pt_2_params"
      ]
    ]
  ],
  "test05_expand_to_include_pt_2_tuple": [
    [
      "tests/gis_tests/gdal_tests/test_envelope.py",
      [
        "EnvelopeTest",
        "test05_expand_to_include_pt_2_tuple"
      ]
    ]
  ],
  "test06_expand_to_include_extent_4_params": [
    [
      "tests/gis_tests/gdal_tests/test_envelope.py",
      [
        "EnvelopeTest",
        "test06_expand_to_include_extent_4_params"
      ]
    ]
  ],
  "test06_expand_to_include_extent_4_tuple": [
    [
      "tests/gis_tests/gdal_tests/test_envelope.py",
      [
        "EnvelopeTest",
        "test06_expand_to_include_extent_4_tuple"
      ]
    ]
  ],
  "test07_expand_to_include_envelope": [
    [
      "tests/gis_tests/gdal_tests/test_envelope.py",
      [
        "EnvelopeTest",
        "test07_expand_to_include_envelope"
      ]
    ]
  ],
  "test08_expand_to_include_point": [
    [
      "tests/gis_tests/gdal_tests/test_envelope.py",
      [
        "EnvelopeTest",
        "test08_expand_to_include_point"
      ]
    ]
  ],
  "test_geomtype": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_geomtype"
      ]
    ]
  ],
  "test_geomtype_25d": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_geomtype_25d"
      ]
    ]
  ],
  "test_wkt": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_wkt"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_wkt"
      ]
    ]
  ],
  "test_ewkt": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_ewkt"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_ewkt"
      ]
    ]
  ],
  "test_gml": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_gml"
      ]
    ]
  ],
  "test_hex": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_hex"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_hex"
      ]
    ]
  ],
  "test_wkb": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_wkb"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_wkb"
      ]
    ]
  ],
  "test_json": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_json"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_json"
      ]
    ],
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestMethodStringDataTests",
        "test_json"
      ]
    ]
  ],
  "test_points": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_points"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_points"
      ]
    ]
  ],
  "test_multipoints": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_multipoints"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_multipoints"
      ]
    ]
  ],
  "test_linestring": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_linestring"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_linestring"
      ]
    ]
  ],
  "test_multilinestring": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_multilinestring"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_multilinestring"
      ]
    ]
  ],
  "test_linearring": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_linearring"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_linearring"
      ]
    ]
  ],
  "test_polygons": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_polygons"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_polygons"
      ]
    ]
  ],
  "test_polygons_templates": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_polygons_templates"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_polygons_templates"
      ]
    ]
  ],
  "test_closepolygons": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_closepolygons"
      ]
    ]
  ],
  "test_multipolygons": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_multipolygons"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_multipolygons"
      ]
    ]
  ],
  "test_srs": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_srs"
      ]
    ]
  ],
  "test_srs_transform": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_srs_transform"
      ]
    ]
  ],
  "test_transform_dim": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_transform_dim"
      ]
    ]
  ],
  "test_symdifference": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_symdifference"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_symdifference"
      ]
    ]
  ],
  "test_extent": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_extent"
      ]
    ],
    [
      "tests/gis_tests/geo3d/tests.py",
      [
        "Geo3DTest",
        "test_extent"
      ]
    ],
    [
      "tests/gis_tests/geoapp/test_regress.py",
      [
        "GeoRegressionTests",
        "test_extent"
      ]
    ],
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoQuerySetTest",
        "test_extent"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_extent"
      ]
    ]
  ],
  "test_25D": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_25D"
      ]
    ]
  ],
  "test_ogrgeometry_transform_workaround": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_ogrgeometry_transform_workaround"
      ]
    ]
  ],
  "test_equivalence_regression": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_equivalence_regression"
      ]
    ]
  ],
  "test_contains": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_contains"
      ]
    ],
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestQuerying",
        "test_contains"
      ]
    ],
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_contains"
      ]
    ],
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestQuerying",
        "test_contains"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_contains"
      ]
    ],
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQuerying",
        "test_contains"
      ]
    ],
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertContainsTests",
        "test_contains"
      ]
    ],
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase",
        "test_contains"
      ]
    ],
    [
      "tests/utils_tests/test_tree.py",
      [
        "NodeTests",
        "test_contains"
      ]
    ]
  ],
  "test_crosses": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_crosses"
      ]
    ]
  ],
  "test_disjoint": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_disjoint"
      ]
    ]
  ],
  "test_equals": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_equals"
      ]
    ]
  ],
  "test_intersects": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_intersects"
      ]
    ]
  ],
  "test_overlaps": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_overlaps"
      ]
    ]
  ],
  "test_touches": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_touches"
      ]
    ]
  ],
  "test_within": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_within"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "CaptureQueriesContextManagerTests",
        "test_within"
      ]
    ]
  ],
  "test_from_gml": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_from_gml"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_from_gml"
      ]
    ]
  ],
  "test_empty_point_to_geos": [
    [
      "tests/gis_tests/gdal_tests/test_geom.py",
      [
        "OGRGeomTest",
        "test_empty_point_to_geos"
      ]
    ]
  ],
  "test_rs_name_repr": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALRasterTests",
        "test_rs_name_repr"
      ]
    ]
  ],
  "test_rs_driver": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALRasterTests",
        "test_rs_driver"
      ]
    ]
  ],
  "test_rs_size": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALRasterTests",
        "test_rs_size"
      ]
    ]
  ],
  "test_rs_srs": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALRasterTests",
        "test_rs_srs"
      ]
    ]
  ],
  "test_rs_srid": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALRasterTests",
        "test_rs_srid"
      ]
    ]
  ],
  "test_geotransform_and_friends": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALRasterTests",
        "test_geotransform_and_friends"
      ]
    ]
  ],
  "test_geotransform_bad_inputs": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALRasterTests",
        "test_geotransform_bad_inputs"
      ]
    ]
  ],
  "test_rs_extent": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALRasterTests",
        "test_rs_extent"
      ]
    ]
  ],
  "test_rs_bands": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALRasterTests",
        "test_rs_bands"
      ]
    ]
  ],
  "test_memory_based_raster_creation": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALRasterTests",
        "test_memory_based_raster_creation"
      ]
    ]
  ],
  "test_file_based_raster_creation": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALRasterTests",
        "test_file_based_raster_creation"
      ]
    ]
  ],
  "test_nonexistent_file": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALRasterTests",
        "test_nonexistent_file"
      ]
    ]
  ],
  "test_vsi_raster_creation": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALRasterTests",
        "test_vsi_raster_creation"
      ]
    ]
  ],
  "test_vsi_raster_deletion": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALRasterTests",
        "test_vsi_raster_deletion"
      ]
    ]
  ],
  "test_vsi_invalid_buffer_error": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALRasterTests",
        "test_vsi_invalid_buffer_error"
      ]
    ]
  ],
  "test_vsi_buffer_property": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALRasterTests",
        "test_vsi_buffer_property"
      ]
    ]
  ],
  "test_offset_size_and_shape_on_raster_creation": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALRasterTests",
        "test_offset_size_and_shape_on_raster_creation"
      ]
    ]
  ],
  "test_set_nodata_value_on_raster_creation": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALRasterTests",
        "test_set_nodata_value_on_raster_creation"
      ]
    ]
  ],
  "test_set_nodata_none_on_raster_creation": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALRasterTests",
        "test_set_nodata_none_on_raster_creation"
      ]
    ]
  ],
  "test_raster_metadata_property": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALRasterTests",
        "test_raster_metadata_property"
      ]
    ]
  ],
  "test_raster_info_accessor": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALRasterTests",
        "test_raster_info_accessor"
      ]
    ]
  ],
  "test_compressed_file_based_raster_creation": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALRasterTests",
        "test_compressed_file_based_raster_creation"
      ]
    ]
  ],
  "test_raster_warp": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALRasterTests",
        "test_raster_warp"
      ]
    ]
  ],
  "test_raster_warp_nodata_zone": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALRasterTests",
        "test_raster_warp_nodata_zone"
      ]
    ]
  ],
  "test_raster_transform": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALRasterTests",
        "test_raster_transform"
      ]
    ]
  ],
  "test_band_data": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALBandTests",
        "test_band_data"
      ]
    ]
  ],
  "test_band_statistics": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALBandTests",
        "test_band_statistics"
      ]
    ]
  ],
  "test_read_mode_error": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALBandTests",
        "test_read_mode_error"
      ]
    ]
  ],
  "test_band_data_setters": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALBandTests",
        "test_band_data_setters"
      ]
    ]
  ],
  "test_band_statistics_automatic_refresh": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALBandTests",
        "test_band_statistics_automatic_refresh"
      ]
    ]
  ],
  "test_band_statistics_empty_band": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALBandTests",
        "test_band_statistics_empty_band"
      ]
    ]
  ],
  "test_band_delete_nodata": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALBandTests",
        "test_band_delete_nodata"
      ]
    ]
  ],
  "test_band_data_replication": [
    [
      "tests/gis_tests/gdal_tests/test_raster.py",
      [
        "GDALBandTests",
        "test_band_data_replication"
      ]
    ]
  ],
  "test01_wkt": [
    [
      "tests/gis_tests/gdal_tests/test_srs.py",
      [
        "SpatialRefTest",
        "test01_wkt"
      ]
    ]
  ],
  "test02_bad_wkt": [
    [
      "tests/gis_tests/gdal_tests/test_srs.py",
      [
        "SpatialRefTest",
        "test02_bad_wkt"
      ]
    ]
  ],
  "test03_get_wkt": [
    [
      "tests/gis_tests/gdal_tests/test_srs.py",
      [
        "SpatialRefTest",
        "test03_get_wkt"
      ]
    ]
  ],
  "test04_proj": [
    [
      "tests/gis_tests/gdal_tests/test_srs.py",
      [
        "SpatialRefTest",
        "test04_proj"
      ]
    ]
  ],
  "test05_epsg": [
    [
      "tests/gis_tests/gdal_tests/test_srs.py",
      [
        "SpatialRefTest",
        "test05_epsg"
      ]
    ]
  ],
  "test07_boolean_props": [
    [
      "tests/gis_tests/gdal_tests/test_srs.py",
      [
        "SpatialRefTest",
        "test07_boolean_props"
      ]
    ]
  ],
  "test08_angular_linear": [
    [
      "tests/gis_tests/gdal_tests/test_srs.py",
      [
        "SpatialRefTest",
        "test08_angular_linear"
      ]
    ]
  ],
  "test09_authority": [
    [
      "tests/gis_tests/gdal_tests/test_srs.py",
      [
        "SpatialRefTest",
        "test09_authority"
      ]
    ]
  ],
  "test10_attributes": [
    [
      "tests/gis_tests/gdal_tests/test_srs.py",
      [
        "SpatialRefTest",
        "test10_attributes"
      ]
    ]
  ],
  "test11_wellknown": [
    [
      "tests/gis_tests/gdal_tests/test_srs.py",
      [
        "SpatialRefTest",
        "test11_wellknown"
      ]
    ]
  ],
  "test12_coordtransform": [
    [
      "tests/gis_tests/gdal_tests/test_srs.py",
      [
        "SpatialRefTest",
        "test12_coordtransform"
      ]
    ]
  ],
  "test13_attr_value": [
    [
      "tests/gis_tests/gdal_tests/test_srs.py",
      [
        "SpatialRefTest",
        "test13_attr_value"
      ]
    ]
  ],
  "test_gdal_version": [
    [
      "tests/gis_tests/gdal_tests/tests.py",
      [
        "GDALTest",
        "test_gdal_version"
      ]
    ]
  ],
  "test_gdal_full_version": [
    [
      "tests/gis_tests/gdal_tests/tests.py",
      [
        "GDALTest",
        "test_gdal_full_version"
      ]
    ]
  ],
  "_load_interstate_data": [
    [
      "tests/gis_tests/geo3d/tests.py",
      [
        "Geo3DLoadingHelper",
        "_load_interstate_data"
      ]
    ]
  ],
  "_load_city_data": [
    [
      "tests/gis_tests/geo3d/tests.py",
      [
        "Geo3DLoadingHelper",
        "_load_city_data"
      ]
    ]
  ],
  "_load_polygon_data": [
    [
      "tests/gis_tests/geo3d/tests.py",
      [
        "Geo3DLoadingHelper",
        "_load_polygon_data"
      ]
    ]
  ],
  "test_3d_hasz": [
    [
      "tests/gis_tests/geo3d/tests.py",
      [
        "Geo3DTest",
        "test_3d_hasz"
      ]
    ]
  ],
  "test_3d_polygons": [
    [
      "tests/gis_tests/geo3d/tests.py",
      [
        "Geo3DTest",
        "test_3d_polygons"
      ]
    ]
  ],
  "test_3d_layermapping": [
    [
      "tests/gis_tests/geo3d/tests.py",
      [
        "Geo3DTest",
        "test_3d_layermapping"
      ]
    ]
  ],
  "test_kml": [
    [
      "tests/gis_tests/geo3d/tests.py",
      [
        "Geo3DFunctionsTests",
        "test_kml"
      ]
    ],
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_kml"
      ]
    ]
  ],
  "test_geojson": [
    [
      "tests/gis_tests/geo3d/tests.py",
      [
        "Geo3DFunctionsTests",
        "test_geojson"
      ]
    ]
  ],
  "test_scale": [
    [
      "tests/gis_tests/geo3d/tests.py",
      [
        "Geo3DFunctionsTests",
        "test_scale"
      ]
    ],
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_scale"
      ]
    ]
  ],
  "test_translate": [
    [
      "tests/gis_tests/geo3d/tests.py",
      [
        "Geo3DFunctionsTests",
        "test_translate"
      ]
    ],
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_translate"
      ]
    ]
  ],
  "test_ensure_geographic_media": [
    [
      "tests/gis_tests/geoadmin/tests.py",
      [
        "GeoAdminTest",
        "test_ensure_geographic_media"
      ]
    ]
  ],
  "test_olmap_OSM_rendering": [
    [
      "tests/gis_tests/geoadmin/tests.py",
      [
        "GeoAdminTest",
        "test_olmap_OSM_rendering"
      ]
    ]
  ],
  "test_olmap_WMS_rendering": [
    [
      "tests/gis_tests/geoadmin/tests.py",
      [
        "GeoAdminTest",
        "test_olmap_WMS_rendering"
      ]
    ]
  ],
  "test_olwidget_has_changed": [
    [
      "tests/gis_tests/geoadmin/tests.py",
      [
        "GeoAdminTest",
        "test_olwidget_has_changed"
      ]
    ]
  ],
  "test_olwidget_empty_string": [
    [
      "tests/gis_tests/geoadmin/tests.py",
      [
        "GeoAdminTest",
        "test_olwidget_empty_string"
      ]
    ]
  ],
  "test_olwidget_invalid_string": [
    [
      "tests/gis_tests/geoadmin/tests.py",
      [
        "GeoAdminTest",
        "test_olwidget_invalid_string"
      ]
    ]
  ],
  "item_geometry": [
    [
      "tests/gis_tests/geoapp/feeds.py",
      [
        "TestGeoRSS1",
        "item_geometry"
      ]
    ],
    [
      "tests/gis_tests/geoapp/feeds.py",
      [
        "TestGeoRSS2",
        "item_geometry"
      ]
    ],
    [
      "tests/gis_tests/geoapp/feeds.py",
      [
        "TestW3CGeo3",
        "item_geometry"
      ]
    ]
  ],
  "geometry": [
    [
      "tests/gis_tests/geoapp/feeds.py",
      [
        "TestGeoRSS2",
        "geometry"
      ]
    ],
    [
      "tests/gis_tests/geoapp/feeds.py",
      [
        "TestGeoAtom2",
        "geometry"
      ]
    ]
  ],
  "test_geometry_value_annotation": [
    [
      "tests/gis_tests/geoapp/test_expressions.py",
      [
        "GeoExpressionsTests",
        "test_geometry_value_annotation"
      ]
    ]
  ],
  "test_geometry_value_annotation_different_srid": [
    [
      "tests/gis_tests/geoapp/test_expressions.py",
      [
        "GeoExpressionsTests",
        "test_geometry_value_annotation_different_srid"
      ]
    ]
  ],
  "test_geography_value": [
    [
      "tests/gis_tests/geoapp/test_expressions.py",
      [
        "GeoExpressionsTests",
        "test_geography_value"
      ]
    ]
  ],
  "test_update_from_other_field": [
    [
      "tests/gis_tests/geoapp/test_expressions.py",
      [
        "GeoExpressionsTests",
        "test_update_from_other_field"
      ]
    ]
  ],
  "test_multiple_annotation": [
    [
      "tests/gis_tests/geoapp/test_expressions.py",
      [
        "GeoExpressionsTests",
        "test_multiple_annotation"
      ]
    ]
  ],
  "test_update_with_expression": [
    [
      "tests/gis_tests/geoapp/test_expressions.py",
      [
        "GeoExpressionsTests",
        "test_update_with_expression"
      ]
    ]
  ],
  "assertChildNodes": [
    [
      "tests/gis_tests/geoapp/test_feeds.py",
      [
        "GeoFeedTest",
        "assertChildNodes"
      ]
    ],
    [
      "tests/gis_tests/geoapp/test_sitemaps.py",
      [
        "GeoSitemapTest",
        "assertChildNodes"
      ]
    ],
    [
      "tests/syndication_tests/tests.py",
      [
        "FeedTestCase",
        "assertChildNodes"
      ]
    ]
  ],
  "test_geofeed_rss": [
    [
      "tests/gis_tests/geoapp/test_feeds.py",
      [
        "GeoFeedTest",
        "test_geofeed_rss"
      ]
    ]
  ],
  "test_geofeed_atom": [
    [
      "tests/gis_tests/geoapp/test_feeds.py",
      [
        "GeoFeedTest",
        "test_geofeed_atom"
      ]
    ]
  ],
  "test_geofeed_w3c": [
    [
      "tests/gis_tests/geoapp/test_feeds.py",
      [
        "GeoFeedTest",
        "test_geofeed_w3c"
      ]
    ]
  ],
  "test_asgeojson": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_asgeojson"
      ]
    ]
  ],
  "test_asgml": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_asgml"
      ]
    ]
  ],
  "test_askml": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_askml"
      ]
    ]
  ],
  "test_assvg": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_assvg"
      ]
    ]
  ],
  "test_aswkb": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_aswkb"
      ]
    ]
  ],
  "test_aswkt": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_aswkt"
      ]
    ]
  ],
  "test_azimuth": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_azimuth"
      ]
    ]
  ],
  "test_bounding_circle": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_bounding_circle"
      ]
    ]
  ],
  "test_centroid": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_centroid"
      ]
    ]
  ],
  "test_difference_mixed_srid": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_difference_mixed_srid"
      ]
    ]
  ],
  "test_envelope": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_envelope"
      ]
    ]
  ],
  "test_force_polygon_cw": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_force_polygon_cw"
      ]
    ]
  ],
  "test_geohash": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_geohash"
      ]
    ]
  ],
  "test_geometry_distance": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_geometry_distance"
      ]
    ]
  ],
  "test_isvalid": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_isvalid"
      ]
    ]
  ],
  "test_area_with_regular_aggregate": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_area_with_regular_aggregate"
      ]
    ]
  ],
  "test_area_lookups": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_area_lookups"
      ]
    ]
  ],
  "test_line_locate_point": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_line_locate_point"
      ]
    ]
  ],
  "test_make_valid": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_make_valid"
      ]
    ]
  ],
  "test_make_valid_multipolygon": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_make_valid_multipolygon"
      ]
    ]
  ],
  "test_make_valid_output_field": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_make_valid_output_field"
      ]
    ]
  ],
  "test_memsize": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_memsize"
      ]
    ]
  ],
  "test_num_geom": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_num_geom"
      ]
    ]
  ],
  "test_num_points": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_num_points"
      ]
    ]
  ],
  "test_point_on_surface": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_point_on_surface"
      ]
    ]
  ],
  "test_reverse_geom": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_reverse_geom"
      ]
    ]
  ],
  "test_snap_to_grid": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_snap_to_grid"
      ]
    ]
  ],
  "test_sym_difference": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_sym_difference"
      ]
    ]
  ],
  "test_diff_intersection_union": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_diff_intersection_union"
      ]
    ]
  ],
  "test_union_mixed_srid": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_union_mixed_srid"
      ]
    ]
  ],
  "test_argument_validation": [
    [
      "tests/gis_tests/geoapp/test_functions.py",
      [
        "GISFunctionsTests",
        "test_argument_validation"
      ]
    ]
  ],
  "get_indexes": [
    [
      "tests/gis_tests/geoapp/test_indexes.py",
      [
        "SchemaIndexesTests",
        "get_indexes"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "get_indexes"
      ]
    ]
  ],
  "has_spatial_indexes": [
    [
      "tests/gis_tests/geoapp/test_indexes.py",
      [
        "SchemaIndexesTests",
        "has_spatial_indexes"
      ]
    ],
    [
      "tests/gis_tests/gis_migrations/test_operations.py",
      [
        "OperationTestCase",
        "has_spatial_indexes"
      ]
    ]
  ],
  "test_using_sql": [
    [
      "tests/gis_tests/geoapp/test_indexes.py",
      [
        "SchemaIndexesTests",
        "test_using_sql"
      ]
    ]
  ],
  "test_index_name": [
    [
      "tests/gis_tests/geoapp/test_indexes.py",
      [
        "SchemaIndexesTests",
        "test_index_name"
      ]
    ],
    [
      "tests/indexes/tests.py",
      [
        "SchemaIndexesTests",
        "test_index_name"
      ]
    ]
  ],
  "test_kmz": [
    [
      "tests/gis_tests/geoapp/test_regress.py",
      [
        "GeoRegressionTests",
        "test_kmz"
      ]
    ]
  ],
  "test_unicode_date": [
    [
      "tests/gis_tests/geoapp/test_regress.py",
      [
        "GeoRegressionTests",
        "test_unicode_date"
      ]
    ]
  ],
  "test_empty_count": [
    [
      "tests/gis_tests/geoapp/test_regress.py",
      [
        "GeoRegressionTests",
        "test_empty_count"
      ]
    ]
  ],
  "test_defer_or_only_with_annotate": [
    [
      "tests/gis_tests/geoapp/test_regress.py",
      [
        "GeoRegressionTests",
        "test_defer_or_only_with_annotate"
      ]
    ]
  ],
  "test_builtin_serializers": [
    [
      "tests/gis_tests/geoapp/test_serializers.py",
      [
        "GeoJSONSerializerTests",
        "test_builtin_serializers"
      ]
    ],
    [
      "tests/serializers/tests.py",
      [
        "SerializerRegistrationTests",
        "test_builtin_serializers"
      ]
    ]
  ],
  "test_serialization_base": [
    [
      "tests/gis_tests/geoapp/test_serializers.py",
      [
        "GeoJSONSerializerTests",
        "test_serialization_base"
      ]
    ]
  ],
  "test_geometry_field_option": [
    [
      "tests/gis_tests/geoapp/test_serializers.py",
      [
        "GeoJSONSerializerTests",
        "test_geometry_field_option"
      ]
    ]
  ],
  "test_fields_option": [
    [
      "tests/gis_tests/geoapp/test_serializers.py",
      [
        "GeoJSONSerializerTests",
        "test_fields_option"
      ]
    ]
  ],
  "test_srid_option": [
    [
      "tests/gis_tests/geoapp/test_serializers.py",
      [
        "GeoJSONSerializerTests",
        "test_srid_option"
      ]
    ]
  ],
  "test_deserialization_exception": [
    [
      "tests/gis_tests/geoapp/test_serializers.py",
      [
        "GeoJSONSerializerTests",
        "test_deserialization_exception"
      ]
    ]
  ],
  "test_geositemap_kml": [
    [
      "tests/gis_tests/geoapp/test_sitemaps.py",
      [
        "GeoSitemapTest",
        "test_geositemap_kml"
      ]
    ]
  ],
  "test_fixtures": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoModelTest",
        "test_fixtures"
      ]
    ]
  ],
  "test_proxy": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoModelTest",
        "test_proxy"
      ]
    ],
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_proxy"
      ]
    ]
  ],
  "test_lookup_insert_transform": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoModelTest",
        "test_lookup_insert_transform"
      ]
    ]
  ],
  "test_createnull": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoModelTest",
        "test_createnull"
      ]
    ]
  ],
  "test_geometryfield": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoModelTest",
        "test_geometryfield"
      ]
    ]
  ],
  "test_inherited_geofields": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoModelTest",
        "test_inherited_geofields"
      ]
    ]
  ],
  "test_raw_sql_query": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoModelTest",
        "test_raw_sql_query"
      ]
    ]
  ],
  "test_dumpdata_loaddata_cycle": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoModelTest",
        "test_dumpdata_loaddata_cycle"
      ]
    ]
  ],
  "test_empty_geometries": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoModelTest",
        "test_empty_geometries"
      ]
    ]
  ],
  "test_disjoint_lookup": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoLookupTest",
        "test_disjoint_lookup"
      ]
    ]
  ],
  "test_contains_contained_lookups": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoLookupTest",
        "test_contains_contained_lookups"
      ]
    ]
  ],
  "test_crosses_lookup": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoLookupTest",
        "test_crosses_lookup"
      ]
    ]
  ],
  "test_isvalid_lookup": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoLookupTest",
        "test_isvalid_lookup"
      ]
    ]
  ],
  "test_left_right_lookups": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoLookupTest",
        "test_left_right_lookups"
      ]
    ]
  ],
  "test_strictly_above_below_lookups": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoLookupTest",
        "test_strictly_above_below_lookups"
      ]
    ]
  ],
  "test_equals_lookups": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoLookupTest",
        "test_equals_lookups"
      ]
    ]
  ],
  "test_null_geometries": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoLookupTest",
        "test_null_geometries"
      ]
    ]
  ],
  "test_null_geometries_excluded_in_lookups": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoLookupTest",
        "test_null_geometries_excluded_in_lookups"
      ]
    ]
  ],
  "test_wkt_string_in_lookup": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoLookupTest",
        "test_wkt_string_in_lookup"
      ]
    ]
  ],
  "test_relate_lookup": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoLookupTest",
        "test_relate_lookup"
      ]
    ]
  ],
  "test_gis_lookups_with_complex_expressions": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoLookupTest",
        "test_gis_lookups_with_complex_expressions"
      ]
    ]
  ],
  "test_subquery_annotation": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoLookupTest",
        "test_subquery_annotation"
      ]
    ]
  ],
  "test_extent_with_limit": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoQuerySetTest",
        "test_extent_with_limit"
      ]
    ]
  ],
  "test_make_line": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoQuerySetTest",
        "test_make_line"
      ]
    ]
  ],
  "test_unionagg": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoQuerySetTest",
        "test_unionagg"
      ]
    ]
  ],
  "test_unionagg_tolerance": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoQuerySetTest",
        "test_unionagg_tolerance"
      ]
    ]
  ],
  "test_unionagg_tolerance_escaping": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoQuerySetTest",
        "test_unionagg_tolerance_escaping"
      ]
    ]
  ],
  "test_within_subquery": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoQuerySetTest",
        "test_within_subquery"
      ]
    ]
  ],
  "test_non_concrete_field": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoQuerySetTest",
        "test_non_concrete_field"
      ]
    ]
  ],
  "test_values_srid": [
    [
      "tests/gis_tests/geoapp/tests.py",
      [
        "GeoQuerySetTest",
        "test_values_srid"
      ]
    ]
  ],
  "test01_fixture_load": [
    [
      "tests/gis_tests/geogapp/tests.py",
      [
        "GeographyTest",
        "test01_fixture_load"
      ]
    ]
  ],
  "test02_distance_lookup": [
    [
      "tests/gis_tests/geogapp/tests.py",
      [
        "GeographyTest",
        "test02_distance_lookup"
      ]
    ]
  ],
  "test04_invalid_operators_functions": [
    [
      "tests/gis_tests/geogapp/tests.py",
      [
        "GeographyTest",
        "test04_invalid_operators_functions"
      ]
    ]
  ],
  "test05_geography_layermapping": [
    [
      "tests/gis_tests/geogapp/tests.py",
      [
        "GeographyTest",
        "test05_geography_layermapping"
      ]
    ]
  ],
  "test_cast_aggregate": [
    [
      "tests/gis_tests/geogapp/tests.py",
      [
        "GeographyFunctionTests",
        "test_cast_aggregate"
      ]
    ]
  ],
  "test_distance_function": [
    [
      "tests/gis_tests/geogapp/tests.py",
      [
        "GeographyFunctionTests",
        "test_distance_function"
      ]
    ]
  ],
  "test_geography_area": [
    [
      "tests/gis_tests/geogapp/tests.py",
      [
        "GeographyFunctionTests",
        "test_geography_area"
      ]
    ]
  ],
  "test_geodetic_area_raises_if_not_supported": [
    [
      "tests/gis_tests/geogapp/tests.py",
      [
        "GeographyFunctionTests",
        "test_geodetic_area_raises_if_not_supported"
      ]
    ]
  ],
  "test_getitem": [
    [
      "tests/gis_tests/geos_tests/test_coordseq.py",
      [
        "GEOSCoordSeqTest",
        "test_getitem"
      ]
    ],
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "CaseInsensitiveMappingTests",
        "test_getitem"
      ]
    ],
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase",
        "test_getitem"
      ]
    ]
  ],
  "test_hexewkb": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_hexewkb"
      ]
    ]
  ],
  "test_errors": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_errors"
      ]
    ]
  ],
  "test_create_hex": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_create_hex"
      ]
    ]
  ],
  "test_create_wkb": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_create_wkb"
      ]
    ]
  ],
  "test_json_srid": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_json_srid"
      ]
    ]
  ],
  "test_fromfile": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_fromfile"
      ]
    ]
  ],
  "test_eq_with_srid": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_eq_with_srid"
      ]
    ]
  ],
  "test_point_reverse": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_point_reverse"
      ]
    ]
  ],
  "test_linestring_reverse": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_linestring_reverse"
      ]
    ]
  ],
  "_test_is_counterclockwise": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "_test_is_counterclockwise"
      ]
    ]
  ],
  "test_is_counterclockwise": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_is_counterclockwise"
      ]
    ]
  ],
  "test_is_counterclockwise_geos_error": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_is_counterclockwise_geos_error"
      ]
    ]
  ],
  "test_is_counterclockwise_fallback": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_is_counterclockwise_fallback"
      ]
    ]
  ],
  "test_linearring_json": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_linearring_json"
      ]
    ]
  ],
  "test_polygons_from_bbox": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_polygons_from_bbox"
      ]
    ]
  ],
  "test_polygon_comparison": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_polygon_comparison"
      ]
    ]
  ],
  "test_memory_hijinks": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_memory_hijinks"
      ]
    ]
  ],
  "test_coord_seq": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_coord_seq"
      ]
    ]
  ],
  "test_relate_pattern": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_relate_pattern"
      ]
    ]
  ],
  "test_unary_union": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_unary_union"
      ]
    ]
  ],
  "test_buffer": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_buffer"
      ]
    ]
  ],
  "test_buffer_with_style": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_buffer_with_style"
      ]
    ]
  ],
  "_test_buffer": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "_test_buffer"
      ]
    ]
  ],
  "test_covers": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_covers"
      ]
    ]
  ],
  "test_closed": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_closed"
      ]
    ],
    [
      "tests/responses/tests.py",
      [
        "HttpResponseBaseTests",
        "test_closed"
      ]
    ]
  ],
  "test_srid": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_srid"
      ]
    ],
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "GeometryFieldTest",
        "test_srid"
      ]
    ]
  ],
  "test_custom_srid": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_custom_srid"
      ]
    ]
  ],
  "test_mutable_geometries": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_mutable_geometries"
      ]
    ]
  ],
  "test_point_list_assignment": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_point_list_assignment"
      ]
    ]
  ],
  "test_linestring_list_assignment": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_linestring_list_assignment"
      ]
    ]
  ],
  "test_linearring_list_assignment": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_linearring_list_assignment"
      ]
    ]
  ],
  "test_polygon_list_assignment": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_polygon_list_assignment"
      ]
    ]
  ],
  "test_geometry_collection_list_assignment": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_geometry_collection_list_assignment"
      ]
    ]
  ],
  "test_threed": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_threed"
      ]
    ]
  ],
  "test_distance": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_distance"
      ]
    ]
  ],
  "test_emptyCollections": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_emptyCollections"
      ]
    ]
  ],
  "test_collection_dims": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_collection_dims"
      ]
    ]
  ],
  "test_collections_of_collections": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_collections_of_collections"
      ]
    ]
  ],
  "test_gdal": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_gdal"
      ]
    ]
  ],
  "test_copy": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_copy"
      ]
    ],
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "MultiValueDictTests",
        "test_copy"
      ]
    ],
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "CaseInsensitiveMappingTests",
        "test_copy"
      ]
    ]
  ],
  "test_transform_3d": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_transform_3d"
      ]
    ]
  ],
  "test_transform_noop": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_transform_noop"
      ]
    ]
  ],
  "test_transform_nosrid": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_transform_nosrid"
      ]
    ]
  ],
  "test_prepared": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_prepared"
      ]
    ]
  ],
  "test_line_merge": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_line_merge"
      ]
    ]
  ],
  "test_valid_reason": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_valid_reason"
      ]
    ]
  ],
  "test_linearref": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_linearref"
      ]
    ]
  ],
  "test_deconstructible": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_deconstructible"
      ]
    ]
  ],
  "test_subclassing": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_subclassing"
      ]
    ]
  ],
  "test_geos_version_tuple": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_geos_version_tuple"
      ]
    ]
  ],
  "test_from_ewkt": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_from_ewkt"
      ]
    ]
  ],
  "test_from_ewkt_empty_string": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_from_ewkt_empty_string"
      ]
    ]
  ],
  "test_from_ewkt_invalid_srid": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_from_ewkt_invalid_srid"
      ]
    ]
  ],
  "test_fromstr_scientific_wkt": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_fromstr_scientific_wkt"
      ]
    ]
  ],
  "test_normalize": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_normalize"
      ]
    ]
  ],
  "test_empty_point": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_empty_point"
      ]
    ]
  ],
  "test_linestring_iter": [
    [
      "tests/gis_tests/geos_tests/test_geos.py",
      [
        "GEOSTest",
        "test_linestring_iter"
      ]
    ]
  ],
  "api_get_distance": [
    [
      "tests/gis_tests/geos_tests/test_geos_mutation.py",
      [
        "api_get_distance"
      ]
    ]
  ],
  "api_get_buffer": [
    [
      "tests/gis_tests/geos_tests/test_geos_mutation.py",
      [
        "api_get_buffer"
      ]
    ]
  ],
  "api_get_geom_typeid": [
    [
      "tests/gis_tests/geos_tests/test_geos_mutation.py",
      [
        "api_get_geom_typeid"
      ]
    ]
  ],
  "api_get_num_coords": [
    [
      "tests/gis_tests/geos_tests/test_geos_mutation.py",
      [
        "api_get_num_coords"
      ]
    ]
  ],
  "api_get_centroid": [
    [
      "tests/gis_tests/geos_tests/test_geos_mutation.py",
      [
        "api_get_centroid"
      ]
    ]
  ],
  "api_get_empty": [
    [
      "tests/gis_tests/geos_tests/test_geos_mutation.py",
      [
        "api_get_empty"
      ]
    ]
  ],
  "api_get_valid": [
    [
      "tests/gis_tests/geos_tests/test_geos_mutation.py",
      [
        "api_get_valid"
      ]
    ]
  ],
  "api_get_simple": [
    [
      "tests/gis_tests/geos_tests/test_geos_mutation.py",
      [
        "api_get_simple"
      ]
    ]
  ],
  "api_get_ring": [
    [
      "tests/gis_tests/geos_tests/test_geos_mutation.py",
      [
        "api_get_ring"
      ]
    ]
  ],
  "api_get_boundary": [
    [
      "tests/gis_tests/geos_tests/test_geos_mutation.py",
      [
        "api_get_boundary"
      ]
    ]
  ],
  "api_get_convex_hull": [
    [
      "tests/gis_tests/geos_tests/test_geos_mutation.py",
      [
        "api_get_convex_hull"
      ]
    ]
  ],
  "api_get_extent": [
    [
      "tests/gis_tests/geos_tests/test_geos_mutation.py",
      [
        "api_get_extent"
      ]
    ]
  ],
  "api_get_area": [
    [
      "tests/gis_tests/geos_tests/test_geos_mutation.py",
      [
        "api_get_area"
      ]
    ]
  ],
  "api_get_length": [
    [
      "tests/gis_tests/geos_tests/test_geos_mutation.py",
      [
        "api_get_length"
      ]
    ]
  ],
  "test00_GEOSIndexException": [
    [
      "tests/gis_tests/geos_tests/test_geos_mutation.py",
      [
        "GEOSMutationTest",
        "test00_GEOSIndexException"
      ]
    ]
  ],
  "test01_PointMutations": [
    [
      "tests/gis_tests/geos_tests/test_geos_mutation.py",
      [
        "GEOSMutationTest",
        "test01_PointMutations"
      ]
    ]
  ],
  "test02_PointExceptions": [
    [
      "tests/gis_tests/geos_tests/test_geos_mutation.py",
      [
        "GEOSMutationTest",
        "test02_PointExceptions"
      ]
    ]
  ],
  "test03_PointApi": [
    [
      "tests/gis_tests/geos_tests/test_geos_mutation.py",
      [
        "GEOSMutationTest",
        "test03_PointApi"
      ]
    ]
  ],
  "test04_LineStringMutations": [
    [
      "tests/gis_tests/geos_tests/test_geos_mutation.py",
      [
        "GEOSMutationTest",
        "test04_LineStringMutations"
      ]
    ]
  ],
  "test05_Polygon": [
    [
      "tests/gis_tests/geos_tests/test_geos_mutation.py",
      [
        "GEOSMutationTest",
        "test05_Polygon"
      ]
    ]
  ],
  "test06_Collection": [
    [
      "tests/gis_tests/geos_tests/test_geos_mutation.py",
      [
        "GEOSMutationTest",
        "test06_Collection"
      ]
    ]
  ],
  "test01_wktreader": [
    [
      "tests/gis_tests/geos_tests/test_io.py",
      [
        "GEOSIOTest",
        "test01_wktreader"
      ]
    ]
  ],
  "test02_wktwriter": [
    [
      "tests/gis_tests/geos_tests/test_io.py",
      [
        "GEOSIOTest",
        "test02_wktwriter"
      ]
    ]
  ],
  "test_wktwriter_constructor_arguments": [
    [
      "tests/gis_tests/geos_tests/test_io.py",
      [
        "GEOSIOTest",
        "test_wktwriter_constructor_arguments"
      ]
    ]
  ],
  "test03_wkbreader": [
    [
      "tests/gis_tests/geos_tests/test_io.py",
      [
        "GEOSIOTest",
        "test03_wkbreader"
      ]
    ]
  ],
  "test04_wkbwriter": [
    [
      "tests/gis_tests/geos_tests/test_io.py",
      [
        "GEOSIOTest",
        "test04_wkbwriter"
      ]
    ]
  ],
  "test_wkt_writer_trim": [
    [
      "tests/gis_tests/geos_tests/test_io.py",
      [
        "GEOSIOTest",
        "test_wkt_writer_trim"
      ]
    ]
  ],
  "test_wkt_writer_precision": [
    [
      "tests/gis_tests/geos_tests/test_io.py",
      [
        "GEOSIOTest",
        "test_wkt_writer_precision"
      ]
    ]
  ],
  "test_empty_point_wkb": [
    [
      "tests/gis_tests/geos_tests/test_io.py",
      [
        "GEOSIOTest",
        "test_empty_point_wkb"
      ]
    ]
  ],
  "test_empty_polygon_wkb": [
    [
      "tests/gis_tests/geos_tests/test_io.py",
      [
        "GEOSIOTest",
        "test_empty_polygon_wkb"
      ]
    ]
  ],
  "nextRange": [
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "nextRange"
      ]
    ]
  ],
  "lists_of_len": [
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "ListMixinTest",
        "lists_of_len"
      ]
    ]
  ],
  "limits_plus": [
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "ListMixinTest",
        "limits_plus"
      ]
    ]
  ],
  "step_range": [
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "ListMixinTest",
        "step_range"
      ]
    ]
  ],
  "test01_getslice": [
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "ListMixinTest",
        "test01_getslice"
      ]
    ]
  ],
  "setfcn": [
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "ListMixinTest",
        "test02_setslice",
        "setfcn"
      ]
    ]
  ],
  "test02_setslice": [
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "ListMixinTest",
        "test02_setslice"
      ]
    ]
  ],
  "test03_delslice": [
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "ListMixinTest",
        "test03_delslice"
      ]
    ]
  ],
  "test04_get_set_del_single": [
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "ListMixinTest",
        "test04_get_set_del_single"
      ]
    ]
  ],
  "test05_out_of_range_exceptions": [
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "ListMixinTest",
        "test05_out_of_range_exceptions"
      ]
    ]
  ],
  "popfcn": [
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "ListMixinTest",
        "test06_list_methods",
        "popfcn"
      ]
    ]
  ],
  "indexfcn": [
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "ListMixinTest",
        "test06_list_methods",
        "indexfcn"
      ]
    ]
  ],
  "removefcn": [
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "ListMixinTest",
        "test06_list_methods",
        "removefcn"
      ]
    ]
  ],
  "test06_list_methods": [
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "ListMixinTest",
        "test06_list_methods"
      ]
    ]
  ],
  "test07_allowed_types": [
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "ListMixinTest",
        "test07_allowed_types"
      ]
    ]
  ],
  "test08_min_length": [
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "ListMixinTest",
        "test08_min_length"
      ]
    ]
  ],
  "test09_iterable_check": [
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "ListMixinTest",
        "test09_iterable_check"
      ]
    ]
  ],
  "test10_checkindex": [
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "ListMixinTest",
        "test10_checkindex"
      ]
    ]
  ],
  "test_11_sorting": [
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "ListMixinTest",
        "test_11_sorting"
      ]
    ]
  ],
  "test_12_arithmetic": [
    [
      "tests/gis_tests/geos_tests/test_mutable_list.py",
      [
        "ListMixinTest",
        "test_12_arithmetic"
      ]
    ]
  ],
  "assertTableExists": [
    [
      "tests/gis_tests/gis_migrations/test_commands.py",
      [
        "MigrateTests",
        "assertTableExists"
      ]
    ],
    [
      "tests/migrations/test_base.py",
      [
        "MigrationTestBase",
        "assertTableExists"
      ]
    ]
  ],
  "assertTableNotExists": [
    [
      "tests/gis_tests/gis_migrations/test_commands.py",
      [
        "MigrateTests",
        "assertTableNotExists"
      ]
    ],
    [
      "tests/migrations/test_base.py",
      [
        "MigrationTestBase",
        "assertTableNotExists"
      ]
    ]
  ],
  "test_migrate_gis": [
    [
      "tests/gis_tests/gis_migrations/test_commands.py",
      [
        "MigrateTests",
        "test_migrate_gis"
      ]
    ]
  ],
  "assertColumnExists": [
    [
      "tests/gis_tests/gis_migrations/test_operations.py",
      [
        "OperationTestCase",
        "assertColumnExists"
      ]
    ],
    [
      "tests/migrations/test_base.py",
      [
        "MigrationTestBase",
        "assertColumnExists"
      ]
    ]
  ],
  "assertColumnNotExists": [
    [
      "tests/gis_tests/gis_migrations/test_operations.py",
      [
        "OperationTestCase",
        "assertColumnNotExists"
      ]
    ],
    [
      "tests/migrations/test_base.py",
      [
        "MigrationTestBase",
        "assertColumnNotExists"
      ]
    ]
  ],
  "apply_operations": [
    [
      "tests/gis_tests/gis_migrations/test_operations.py",
      [
        "OperationTestCase",
        "apply_operations"
      ]
    ],
    [
      "tests/migrations/test_base.py",
      [
        "OperationTestBase",
        "apply_operations"
      ]
    ]
  ],
  "set_up_test_model": [
    [
      "tests/gis_tests/gis_migrations/test_operations.py",
      [
        "OperationTestCase",
        "set_up_test_model"
      ]
    ],
    [
      "tests/migrations/test_base.py",
      [
        "OperationTestBase",
        "set_up_test_model"
      ]
    ]
  ],
  "assertGeometryColumnsCount": [
    [
      "tests/gis_tests/gis_migrations/test_operations.py",
      [
        "OperationTestCase",
        "assertGeometryColumnsCount"
      ]
    ]
  ],
  "assertSpatialIndexExists": [
    [
      "tests/gis_tests/gis_migrations/test_operations.py",
      [
        "OperationTestCase",
        "assertSpatialIndexExists"
      ]
    ]
  ],
  "alter_gis_model": [
    [
      "tests/gis_tests/gis_migrations/test_operations.py",
      [
        "OperationTestCase",
        "alter_gis_model"
      ]
    ]
  ],
  "test_add_geom_field": [
    [
      "tests/gis_tests/gis_migrations/test_operations.py",
      [
        "OperationTests",
        "test_add_geom_field"
      ]
    ]
  ],
  "test_geom_col_name": [
    [
      "tests/gis_tests/gis_migrations/test_operations.py",
      [
        "OperationTests",
        "test_geom_col_name"
      ]
    ]
  ],
  "test_add_raster_field": [
    [
      "tests/gis_tests/gis_migrations/test_operations.py",
      [
        "OperationTests",
        "test_add_raster_field"
      ]
    ]
  ],
  "test_add_blank_geom_field": [
    [
      "tests/gis_tests/gis_migrations/test_operations.py",
      [
        "OperationTests",
        "test_add_blank_geom_field"
      ]
    ]
  ],
  "test_add_blank_raster_field": [
    [
      "tests/gis_tests/gis_migrations/test_operations.py",
      [
        "OperationTests",
        "test_add_blank_raster_field"
      ]
    ]
  ],
  "test_remove_geom_field": [
    [
      "tests/gis_tests/gis_migrations/test_operations.py",
      [
        "OperationTests",
        "test_remove_geom_field"
      ]
    ]
  ],
  "test_remove_raster_field": [
    [
      "tests/gis_tests/gis_migrations/test_operations.py",
      [
        "OperationTests",
        "test_remove_raster_field"
      ]
    ]
  ],
  "test_create_model_spatial_index": [
    [
      "tests/gis_tests/gis_migrations/test_operations.py",
      [
        "OperationTests",
        "test_create_model_spatial_index"
      ]
    ]
  ],
  "test_alter_geom_field_dim": [
    [
      "tests/gis_tests/gis_migrations/test_operations.py",
      [
        "OperationTests",
        "test_alter_geom_field_dim"
      ]
    ]
  ],
  "test_create_raster_model_on_db_without_raster_support": [
    [
      "tests/gis_tests/gis_migrations/test_operations.py",
      [
        "NoRasterSupportTests",
        "test_create_raster_model_on_db_without_raster_support"
      ]
    ]
  ],
  "test_add_raster_field_on_db_without_raster_support": [
    [
      "tests/gis_tests/gis_migrations/test_operations.py",
      [
        "NoRasterSupportTests",
        "test_add_raster_field_on_db_without_raster_support"
      ]
    ]
  ],
  "test_geom_columns": [
    [
      "tests/gis_tests/inspectapp/tests.py",
      [
        "InspectDbTests",
        "test_geom_columns"
      ]
    ]
  ],
  "test_3d_columns": [
    [
      "tests/gis_tests/inspectapp/tests.py",
      [
        "InspectDbTests",
        "test_3d_columns"
      ]
    ]
  ],
  "test_poly": [
    [
      "tests/gis_tests/inspectapp/tests.py",
      [
        "OGRInspectTest",
        "test_poly"
      ]
    ]
  ],
  "test_poly_multi": [
    [
      "tests/gis_tests/inspectapp/tests.py",
      [
        "OGRInspectTest",
        "test_poly_multi"
      ]
    ]
  ],
  "test_management_command": [
    [
      "tests/gis_tests/inspectapp/tests.py",
      [
        "OGRInspectTest",
        "test_management_command"
      ]
    ]
  ],
  "test_mapping_option": [
    [
      "tests/gis_tests/inspectapp/tests.py",
      [
        "OGRInspectTest",
        "test_mapping_option"
      ]
    ]
  ],
  "get_ogr_db_string": [
    [
      "tests/gis_tests/inspectapp/tests.py",
      [
        "get_ogr_db_string"
      ]
    ]
  ],
  "test_simple_layermap": [
    [
      "tests/gis_tests/layermap/tests.py",
      [
        "LayerMapTest",
        "test_simple_layermap"
      ]
    ]
  ],
  "test_layermap_strict": [
    [
      "tests/gis_tests/layermap/tests.py",
      [
        "LayerMapTest",
        "test_layermap_strict"
      ]
    ]
  ],
  "county_helper": [
    [
      "tests/gis_tests/layermap/tests.py",
      [
        "LayerMapTest",
        "county_helper"
      ]
    ]
  ],
  "test_layermap_unique_multigeometry_fk": [
    [
      "tests/gis_tests/layermap/tests.py",
      [
        "LayerMapTest",
        "test_layermap_unique_multigeometry_fk"
      ]
    ]
  ],
  "clear_counties": [
    [
      "tests/gis_tests/layermap/tests.py",
      [
        "LayerMapTest",
        "test_test_fid_range_step",
        "clear_counties"
      ]
    ]
  ],
  "test_test_fid_range_step": [
    [
      "tests/gis_tests/layermap/tests.py",
      [
        "LayerMapTest",
        "test_test_fid_range_step"
      ]
    ]
  ],
  "test_model_inheritance": [
    [
      "tests/gis_tests/layermap/tests.py",
      [
        "LayerMapTest",
        "test_model_inheritance"
      ]
    ],
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_model_inheritance"
      ]
    ],
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_model_inheritance"
      ]
    ]
  ],
  "test_invalid_layer": [
    [
      "tests/gis_tests/layermap/tests.py",
      [
        "LayerMapTest",
        "test_invalid_layer"
      ]
    ]
  ],
  "test_charfield_too_short": [
    [
      "tests/gis_tests/layermap/tests.py",
      [
        "LayerMapTest",
        "test_charfield_too_short"
      ]
    ]
  ],
  "test_textfield": [
    [
      "tests/gis_tests/layermap/tests.py",
      [
        "LayerMapTest",
        "test_textfield"
      ]
    ]
  ],
  "test_encoded_name": [
    [
      "tests/gis_tests/layermap/tests.py",
      [
        "LayerMapTest",
        "test_encoded_name"
      ]
    ]
  ],
  "test_null_geom_with_unique": [
    [
      "tests/gis_tests/layermap/tests.py",
      [
        "LayerMapTest",
        "test_null_geom_with_unique"
      ]
    ]
  ],
  "test_null_number_imported": [
    [
      "tests/gis_tests/layermap/tests.py",
      [
        "LayerMapTest",
        "test_null_number_imported"
      ]
    ]
  ],
  "test_null_string_imported": [
    [
      "tests/gis_tests/layermap/tests.py",
      [
        "LayerMapTest",
        "test_null_string_imported"
      ]
    ]
  ],
  "test_nullable_boolean_imported": [
    [
      "tests/gis_tests/layermap/tests.py",
      [
        "LayerMapTest",
        "test_nullable_boolean_imported"
      ]
    ]
  ],
  "test_nullable_datetime_imported": [
    [
      "tests/gis_tests/layermap/tests.py",
      [
        "LayerMapTest",
        "test_nullable_datetime_imported"
      ]
    ]
  ],
  "test_uuids_imported": [
    [
      "tests/gis_tests/layermap/tests.py",
      [
        "LayerMapTest",
        "test_uuids_imported"
      ]
    ]
  ],
  "test_null_number_imported_not_allowed": [
    [
      "tests/gis_tests/layermap/tests.py",
      [
        "LayerMapTest",
        "test_null_number_imported_not_allowed"
      ]
    ]
  ],
  "test_layermapping_default_db": [
    [
      "tests/gis_tests/layermap/tests.py",
      [
        "LayerMapRouterTest",
        "test_layermapping_default_db"
      ]
    ]
  ],
  "test_field_null_value": [
    [
      "tests/gis_tests/rasterapp/test_rasterfield.py",
      [
        "RasterFieldTest",
        "test_field_null_value"
      ]
    ]
  ],
  "test_access_band_data_directly_from_queryset": [
    [
      "tests/gis_tests/rasterapp/test_rasterfield.py",
      [
        "RasterFieldTest",
        "test_access_band_data_directly_from_queryset"
      ]
    ]
  ],
  "test_deserialize_with_pixeltype_flags": [
    [
      "tests/gis_tests/rasterapp/test_rasterfield.py",
      [
        "RasterFieldTest",
        "test_deserialize_with_pixeltype_flags"
      ]
    ]
  ],
  "test_model_creation": [
    [
      "tests/gis_tests/rasterapp/test_rasterfield.py",
      [
        "RasterFieldTest",
        "test_model_creation"
      ]
    ]
  ],
  "test_implicit_raster_transformation": [
    [
      "tests/gis_tests/rasterapp/test_rasterfield.py",
      [
        "RasterFieldTest",
        "test_implicit_raster_transformation"
      ]
    ]
  ],
  "test_verbose_name_arg": [
    [
      "tests/gis_tests/rasterapp/test_rasterfield.py",
      [
        "RasterFieldTest",
        "test_verbose_name_arg"
      ]
    ]
  ],
  "test_all_gis_lookups_with_rasters": [
    [
      "tests/gis_tests/rasterapp/test_rasterfield.py",
      [
        "RasterFieldTest",
        "test_all_gis_lookups_with_rasters"
      ]
    ]
  ],
  "test_dwithin_gis_lookup_output_with_rasters": [
    [
      "tests/gis_tests/rasterapp/test_rasterfield.py",
      [
        "RasterFieldTest",
        "test_dwithin_gis_lookup_output_with_rasters"
      ]
    ]
  ],
  "test_lookup_input_tuple_too_long": [
    [
      "tests/gis_tests/rasterapp/test_rasterfield.py",
      [
        "RasterFieldTest",
        "test_lookup_input_tuple_too_long"
      ]
    ]
  ],
  "test_lookup_input_band_not_allowed": [
    [
      "tests/gis_tests/rasterapp/test_rasterfield.py",
      [
        "RasterFieldTest",
        "test_lookup_input_band_not_allowed"
      ]
    ]
  ],
  "test_isvalid_lookup_with_raster_error": [
    [
      "tests/gis_tests/rasterapp/test_rasterfield.py",
      [
        "RasterFieldTest",
        "test_isvalid_lookup_with_raster_error"
      ]
    ]
  ],
  "test_result_of_gis_lookup_with_rasters": [
    [
      "tests/gis_tests/rasterapp/test_rasterfield.py",
      [
        "RasterFieldTest",
        "test_result_of_gis_lookup_with_rasters"
      ]
    ]
  ],
  "test_lookup_with_raster_bbox": [
    [
      "tests/gis_tests/rasterapp/test_rasterfield.py",
      [
        "RasterFieldTest",
        "test_lookup_with_raster_bbox"
      ]
    ]
  ],
  "test_lookup_with_polygonized_raster": [
    [
      "tests/gis_tests/rasterapp/test_rasterfield.py",
      [
        "RasterFieldTest",
        "test_lookup_with_polygonized_raster"
      ]
    ]
  ],
  "test_lookup_value_error": [
    [
      "tests/gis_tests/rasterapp/test_rasterfield.py",
      [
        "RasterFieldTest",
        "test_lookup_value_error"
      ]
    ]
  ],
  "test_db_function_errors": [
    [
      "tests/gis_tests/rasterapp/test_rasterfield.py",
      [
        "RasterFieldTest",
        "test_db_function_errors"
      ]
    ]
  ],
  "test_lhs_with_index_rhs_without_index": [
    [
      "tests/gis_tests/rasterapp/test_rasterfield.py",
      [
        "RasterFieldTest",
        "test_lhs_with_index_rhs_without_index"
      ]
    ]
  ],
  "test02_select_related": [
    [
      "tests/gis_tests/relatedapp/tests.py",
      [
        "RelatedGeoModelTest",
        "test02_select_related"
      ]
    ]
  ],
  "test_related_extent_aggregate": [
    [
      "tests/gis_tests/relatedapp/tests.py",
      [
        "RelatedGeoModelTest",
        "test_related_extent_aggregate"
      ]
    ]
  ],
  "test_related_extent_annotate": [
    [
      "tests/gis_tests/relatedapp/tests.py",
      [
        "RelatedGeoModelTest",
        "test_related_extent_annotate"
      ]
    ]
  ],
  "test_related_union_aggregate": [
    [
      "tests/gis_tests/relatedapp/tests.py",
      [
        "RelatedGeoModelTest",
        "test_related_union_aggregate"
      ]
    ]
  ],
  "test05_select_related_fk_to_subclass": [
    [
      "tests/gis_tests/relatedapp/tests.py",
      [
        "RelatedGeoModelTest",
        "test05_select_related_fk_to_subclass"
      ]
    ]
  ],
  "test06_f_expressions": [
    [
      "tests/gis_tests/relatedapp/tests.py",
      [
        "RelatedGeoModelTest",
        "test06_f_expressions"
      ]
    ]
  ],
  "test07_values": [
    [
      "tests/gis_tests/relatedapp/tests.py",
      [
        "RelatedGeoModelTest",
        "test07_values"
      ]
    ]
  ],
  "test_07b_values": [
    [
      "tests/gis_tests/relatedapp/tests.py",
      [
        "RelatedGeoModelTest",
        "test_07b_values"
      ]
    ]
  ],
  "test08_defer_only": [
    [
      "tests/gis_tests/relatedapp/tests.py",
      [
        "RelatedGeoModelTest",
        "test08_defer_only"
      ]
    ]
  ],
  "test09_pk_relations": [
    [
      "tests/gis_tests/relatedapp/tests.py",
      [
        "RelatedGeoModelTest",
        "test09_pk_relations"
      ]
    ]
  ],
  "test10_combine": [
    [
      "tests/gis_tests/relatedapp/tests.py",
      [
        "RelatedGeoModelTest",
        "test10_combine"
      ]
    ]
  ],
  "test12a_count": [
    [
      "tests/gis_tests/relatedapp/tests.py",
      [
        "RelatedGeoModelTest",
        "test12a_count"
      ]
    ]
  ],
  "test12b_count": [
    [
      "tests/gis_tests/relatedapp/tests.py",
      [
        "RelatedGeoModelTest",
        "test12b_count"
      ]
    ]
  ],
  "test13c_count": [
    [
      "tests/gis_tests/relatedapp/tests.py",
      [
        "RelatedGeoModelTest",
        "test13c_count"
      ]
    ]
  ],
  "test13_select_related_null_fk": [
    [
      "tests/gis_tests/relatedapp/tests.py",
      [
        "RelatedGeoModelTest",
        "test13_select_related_null_fk"
      ]
    ]
  ],
  "test_collect": [
    [
      "tests/gis_tests/relatedapp/tests.py",
      [
        "RelatedGeoModelTest",
        "test_collect"
      ]
    ]
  ],
  "test15_invalid_select_related": [
    [
      "tests/gis_tests/relatedapp/tests.py",
      [
        "RelatedGeoModelTest",
        "test15_invalid_select_related"
      ]
    ]
  ],
  "test16_annotated_date_queryset": [
    [
      "tests/gis_tests/relatedapp/tests.py",
      [
        "RelatedGeoModelTest",
        "test16_annotated_date_queryset"
      ]
    ]
  ],
  "tuplize": [
    [
      "tests/gis_tests/test_data.py",
      [
        "tuplize"
      ]
    ]
  ],
  "strconvert": [
    [
      "tests/gis_tests/test_data.py",
      [
        "strconvert"
      ]
    ]
  ],
  "get_ds_file": [
    [
      "tests/gis_tests/test_data.py",
      [
        "get_ds_file"
      ]
    ]
  ],
  "geometries": [
    [
      "tests/gis_tests/test_data.py",
      [
        "TestDataMixin",
        "geometries"
      ]
    ]
  ],
  "test_area_field_deepcopy": [
    [
      "tests/gis_tests/test_fields.py",
      [
        "FieldsTests",
        "test_area_field_deepcopy"
      ]
    ]
  ],
  "test_distance_field_deepcopy": [
    [
      "tests/gis_tests/test_fields.py",
      [
        "FieldsTests",
        "test_distance_field_deepcopy"
      ]
    ]
  ],
  "test_deconstruct_empty": [
    [
      "tests/gis_tests/test_fields.py",
      [
        "GeometryFieldTests",
        "test_deconstruct_empty"
      ]
    ]
  ],
  "test_deconstruct_values": [
    [
      "tests/gis_tests/test_fields.py",
      [
        "GeometryFieldTests",
        "test_deconstruct_values"
      ]
    ]
  ],
  "test_geom_type": [
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "GeometryFieldTest",
        "test_geom_type"
      ]
    ]
  ],
  "test_to_python": [
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "GeometryFieldTest",
        "test_to_python"
      ]
    ],
    [
      "tests/model_fields/test_decimalfield.py",
      [
        "DecimalFieldTests",
        "test_to_python"
      ]
    ],
    [
      "tests/model_fields/test_foreignkey.py",
      [
        "ForeignKeyTests",
        "test_to_python"
      ]
    ],
    [
      "tests/model_fields/test_textfield.py",
      [
        "TextFieldTests",
        "test_to_python"
      ]
    ],
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestMethods",
        "test_to_python"
      ]
    ]
  ],
  "test_to_python_different_map_srid": [
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "GeometryFieldTest",
        "test_to_python_different_map_srid"
      ]
    ]
  ],
  "test_field_with_text_widget": [
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "GeometryFieldTest",
        "test_field_with_text_widget"
      ]
    ]
  ],
  "test_field_string_value": [
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "GeometryFieldTest",
        "test_field_string_value"
      ]
    ]
  ],
  "assertMapWidget": [
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "SpecializedFieldTest",
        "assertMapWidget"
      ]
    ]
  ],
  "assertTextarea": [
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "SpecializedFieldTest",
        "assertTextarea"
      ]
    ]
  ],
  "test_pointfield": [
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "SpecializedFieldTest",
        "test_pointfield"
      ]
    ]
  ],
  "test_multipointfield": [
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "SpecializedFieldTest",
        "test_multipointfield"
      ]
    ]
  ],
  "test_linestringfield": [
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "SpecializedFieldTest",
        "test_linestringfield"
      ]
    ]
  ],
  "test_multilinestringfield": [
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "SpecializedFieldTest",
        "test_multilinestringfield"
      ]
    ]
  ],
  "test_polygonfield": [
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "SpecializedFieldTest",
        "test_polygonfield"
      ]
    ]
  ],
  "test_multipolygonfield": [
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "SpecializedFieldTest",
        "test_multipolygonfield"
      ]
    ]
  ],
  "test_geometrycollectionfield": [
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "SpecializedFieldTest",
        "test_geometrycollectionfield"
      ]
    ]
  ],
  "test_osm_widget": [
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "OSMWidgetTest",
        "test_osm_widget"
      ]
    ]
  ],
  "test_default_lat_lon": [
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "OSMWidgetTest",
        "test_default_lat_lon"
      ]
    ]
  ],
  "test_get_context_attrs": [
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "GeometryWidgetTests",
        "test_get_context_attrs"
      ]
    ]
  ],
  "test_subwidgets": [
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "GeometryWidgetTests",
        "test_subwidgets"
      ]
    ]
  ],
  "test_custom_serialization_widget": [
    [
      "tests/gis_tests/test_geoforms.py",
      [
        "GeometryWidgetTests",
        "test_custom_serialization_widget"
      ]
    ]
  ],
  "test_no_database_file": [
    [
      "tests/gis_tests/test_geoip2.py",
      [
        "GeoIPTest",
        "test_no_database_file"
      ]
    ]
  ],
  "test02_bad_query": [
    [
      "tests/gis_tests/test_geoip2.py",
      [
        "GeoIPTest",
        "test02_bad_query"
      ]
    ]
  ],
  "test03_country": [
    [
      "tests/gis_tests/test_geoip2.py",
      [
        "GeoIPTest",
        "test03_country"
      ]
    ]
  ],
  "test04_city": [
    [
      "tests/gis_tests/test_geoip2.py",
      [
        "GeoIPTest",
        "test04_city"
      ]
    ]
  ],
  "test06_ipv6_query": [
    [
      "tests/gis_tests/test_geoip2.py",
      [
        "GeoIPTest",
        "test06_ipv6_query"
      ]
    ]
  ],
  "test_check_query": [
    [
      "tests/gis_tests/test_geoip2.py",
      [
        "GeoIPTest",
        "test_check_query"
      ]
    ]
  ],
  "test_mutation": [
    [
      "tests/gis_tests/test_gis_tests_utils.py",
      [
        "test_mutation"
      ]
    ]
  ],
  "test_mutated_attribute": [
    [
      "tests/gis_tests/test_gis_tests_utils.py",
      [
        "FuncTestMixinTests",
        "test_mutated_attribute"
      ]
    ]
  ],
  "test_mutated_expressions": [
    [
      "tests/gis_tests/test_gis_tests_utils.py",
      [
        "FuncTestMixinTests",
        "test_mutated_expressions"
      ]
    ]
  ],
  "test_mutated_expression": [
    [
      "tests/gis_tests/test_gis_tests_utils.py",
      [
        "FuncTestMixinTests",
        "test_mutated_expression"
      ]
    ]
  ],
  "test_mutated_expression_deep": [
    [
      "tests/gis_tests/test_gis_tests_utils.py",
      [
        "FuncTestMixinTests",
        "test_mutated_expression_deep"
      ]
    ]
  ],
  "test_not_mutated": [
    [
      "tests/gis_tests/test_gis_tests_utils.py",
      [
        "FuncTestMixinTests",
        "test_not_mutated"
      ]
    ]
  ],
  "test_init_invalid": [
    [
      "tests/gis_tests/test_measure.py",
      [
        "DistanceTest",
        "test_init_invalid"
      ]
    ]
  ],
  "test_access_invalid": [
    [
      "tests/gis_tests/test_measure.py",
      [
        "DistanceTest",
        "test_access_invalid"
      ]
    ]
  ],
  "test_addition": [
    [
      "tests/gis_tests/test_measure.py",
      [
        "DistanceTest",
        "test_addition"
      ]
    ],
    [
      "tests/gis_tests/test_measure.py",
      [
        "AreaTest",
        "test_addition"
      ]
    ]
  ],
  "test_multiplication": [
    [
      "tests/gis_tests/test_measure.py",
      [
        "DistanceTest",
        "test_multiplication"
      ]
    ],
    [
      "tests/gis_tests/test_measure.py",
      [
        "AreaTest",
        "test_multiplication"
      ]
    ]
  ],
  "test_unit_conversions": [
    [
      "tests/gis_tests/test_measure.py",
      [
        "DistanceTest",
        "test_unit_conversions"
      ]
    ],
    [
      "tests/gis_tests/test_measure.py",
      [
        "AreaTest",
        "test_unit_conversions"
      ]
    ]
  ],
  "test_comparisons": [
    [
      "tests/gis_tests/test_measure.py",
      [
        "DistanceTest",
        "test_comparisons"
      ]
    ],
    [
      "tests/gis_tests/test_measure.py",
      [
        "AreaTest",
        "test_comparisons"
      ]
    ]
  ],
  "test_units_str": [
    [
      "tests/gis_tests/test_measure.py",
      [
        "DistanceTest",
        "test_units_str"
      ]
    ],
    [
      "tests/gis_tests/test_measure.py",
      [
        "AreaTest",
        "test_units_str"
      ]
    ]
  ],
  "test_furlong": [
    [
      "tests/gis_tests/test_measure.py",
      [
        "DistanceTest",
        "test_furlong"
      ]
    ]
  ],
  "test_unit_att_name": [
    [
      "tests/gis_tests/test_measure.py",
      [
        "DistanceTest",
        "test_unit_att_name"
      ]
    ]
  ],
  "test_init_invalid_a": [
    [
      "tests/gis_tests/test_measure.py",
      [
        "AreaTest",
        "test_init_invalid_a"
      ]
    ]
  ],
  "test_access_invalid_a": [
    [
      "tests/gis_tests/test_measure.py",
      [
        "AreaTest",
        "test_access_invalid_a"
      ]
    ]
  ],
  "suite": [
    [
      "tests/gis_tests/test_measure.py",
      [
        "suite"
      ]
    ]
  ],
  "test_destructor_catches_importerror": [
    [
      "tests/gis_tests/test_ptr.py",
      [
        "CPointerBaseTests",
        "test_destructor_catches_importerror"
      ]
    ]
  ],
  "test_get_units": [
    [
      "tests/gis_tests/test_spatialrefsys.py",
      [
        "SpatialRefSysTest",
        "test_get_units"
      ]
    ]
  ],
  "test_retrieve": [
    [
      "tests/gis_tests/test_spatialrefsys.py",
      [
        "SpatialRefSysTest",
        "test_retrieve"
      ]
    ]
  ],
  "test_osr": [
    [
      "tests/gis_tests/test_spatialrefsys.py",
      [
        "SpatialRefSysTest",
        "test_osr"
      ]
    ]
  ],
  "test_ellipsoid": [
    [
      "tests/gis_tests/test_spatialrefsys.py",
      [
        "SpatialRefSysTest",
        "test_ellipsoid"
      ]
    ]
  ],
  "test_add_entry": [
    [
      "tests/gis_tests/test_spatialrefsys.py",
      [
        "SpatialRefSysTest",
        "test_add_entry"
      ]
    ]
  ],
  "test_get_version": [
    [
      "tests/gis_tests/tests.py",
      [
        "TestPostGISVersionCheck",
        "test_get_version"
      ]
    ]
  ],
  "test_version_classic_tuple": [
    [
      "tests/gis_tests/tests.py",
      [
        "TestPostGISVersionCheck",
        "test_version_classic_tuple"
      ]
    ]
  ],
  "test_version_dev_tuple": [
    [
      "tests/gis_tests/tests.py",
      [
        "TestPostGISVersionCheck",
        "test_version_dev_tuple"
      ]
    ]
  ],
  "test_version_loose_tuple": [
    [
      "tests/gis_tests/tests.py",
      [
        "TestPostGISVersionCheck",
        "test_version_loose_tuple"
      ]
    ]
  ],
  "test_valid_version_numbers": [
    [
      "tests/gis_tests/tests.py",
      [
        "TestPostGISVersionCheck",
        "test_valid_version_numbers"
      ]
    ]
  ],
  "test_no_version_number": [
    [
      "tests/gis_tests/tests.py",
      [
        "TestPostGISVersionCheck",
        "test_no_version_number"
      ]
    ]
  ],
  "skipUnlessGISLookup": [
    [
      "tests/gis_tests/utils.py",
      [
        "skipUnlessGISLookup"
      ]
    ]
  ],
  "no_backend": [
    [
      "tests/gis_tests/utils.py",
      [
        "no_backend"
      ]
    ]
  ],
  "no_oracle": [
    [
      "tests/gis_tests/utils.py",
      [
        "no_oracle"
      ]
    ]
  ],
  "as_sql_wrapper": [
    [
      "tests/gis_tests/utils.py",
      [
        "FuncTestMixin",
        "setUp",
        "as_sql_wrapper"
      ]
    ]
  ],
  "__getattribute__": [
    [
      "tests/gis_tests/utils.py",
      [
        "FuncTestMixin",
        "setUp",
        "__getattribute__"
      ]
    ],
    [
      "tests/messages_tests/test_api.py",
      [
        "CustomRequest",
        "__getattribute__"
      ]
    ]
  ],
  "get_suspicious_environ": [
    [
      "tests/handlers/test_exception.py",
      [
        "ExceptionHandlerTests",
        "get_suspicious_environ"
      ]
    ]
  ],
  "test_data_upload_max_memory_size_exceeded": [
    [
      "tests/handlers/test_exception.py",
      [
        "ExceptionHandlerTests",
        "test_data_upload_max_memory_size_exceeded"
      ]
    ],
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxMemorySizeGetTests",
        "test_data_upload_max_memory_size_exceeded"
      ]
    ]
  ],
  "test_data_upload_max_number_fields_exceeded": [
    [
      "tests/handlers/test_exception.py",
      [
        "ExceptionHandlerTests",
        "test_data_upload_max_number_fields_exceeded"
      ]
    ]
  ],
  "test_middleware_initialized": [
    [
      "tests/handlers/tests.py",
      [
        "HandlerTests",
        "test_middleware_initialized"
      ]
    ]
  ],
  "test_bad_path_info": [
    [
      "tests/handlers/tests.py",
      [
        "HandlerTests",
        "test_bad_path_info"
      ]
    ]
  ],
  "test_non_ascii_query_string": [
    [
      "tests/handlers/tests.py",
      [
        "HandlerTests",
        "test_non_ascii_query_string"
      ]
    ]
  ],
  "test_non_ascii_cookie": [
    [
      "tests/handlers/tests.py",
      [
        "HandlerTests",
        "test_non_ascii_cookie"
      ]
    ]
  ],
  "test_invalid_unicode_cookie": [
    [
      "tests/handlers/tests.py",
      [
        "HandlerTests",
        "test_invalid_unicode_cookie"
      ]
    ]
  ],
  "test_invalid_multipart_boundary": [
    [
      "tests/handlers/tests.py",
      [
        "HandlerTests",
        "test_invalid_multipart_boundary"
      ]
    ]
  ],
  "test_no_transaction": [
    [
      "tests/handlers/tests.py",
      [
        "TransactionsPerRequestTests",
        "test_no_transaction"
      ]
    ]
  ],
  "test_auto_transaction": [
    [
      "tests/handlers/tests.py",
      [
        "TransactionsPerRequestTests",
        "test_auto_transaction"
      ]
    ]
  ],
  "test_auto_transaction_async_view": [
    [
      "tests/handlers/tests.py",
      [
        "TransactionsPerRequestTests",
        "test_auto_transaction_async_view"
      ]
    ]
  ],
  "test_no_auto_transaction": [
    [
      "tests/handlers/tests.py",
      [
        "TransactionsPerRequestTests",
        "test_no_auto_transaction"
      ]
    ]
  ],
  "register_started": [
    [
      "tests/handlers/tests.py",
      [
        "SignalsTests",
        "register_started"
      ]
    ]
  ],
  "register_finished": [
    [
      "tests/handlers/tests.py",
      [
        "SignalsTests",
        "register_finished"
      ]
    ]
  ],
  "test_request_signals": [
    [
      "tests/handlers/tests.py",
      [
        "SignalsTests",
        "test_request_signals"
      ]
    ]
  ],
  "test_request_signals_streaming_response": [
    [
      "tests/handlers/tests.py",
      [
        "SignalsTests",
        "test_request_signals_streaming_response"
      ]
    ]
  ],
  "empty_middleware": [
    [
      "tests/handlers/tests.py",
      [
        "empty_middleware"
      ]
    ]
  ],
  "test_async_view": [
    [
      "tests/handlers/tests.py",
      [
        "HandlerRequestTests",
        "test_async_view"
      ]
    ],
    [
      "tests/handlers/tests.py",
      [
        "AsyncHandlerRequestTests",
        "test_async_view"
      ]
    ]
  ],
  "test_suspiciousop_in_view_returns_400": [
    [
      "tests/handlers/tests.py",
      [
        "HandlerRequestTests",
        "test_suspiciousop_in_view_returns_400"
      ]
    ],
    [
      "tests/handlers/tests.py",
      [
        "AsyncHandlerRequestTests",
        "test_suspiciousop_in_view_returns_400"
      ]
    ]
  ],
  "test_invalid_urls": [
    [
      "tests/handlers/tests.py",
      [
        "HandlerRequestTests",
        "test_invalid_urls"
      ]
    ]
  ],
  "test_environ_path_info_type": [
    [
      "tests/handlers/tests.py",
      [
        "HandlerRequestTests",
        "test_environ_path_info_type"
      ]
    ]
  ],
  "test_handle_accepts_httpstatus_enum_value": [
    [
      "tests/handlers/tests.py",
      [
        "HandlerRequestTests",
        "test_handle_accepts_httpstatus_enum_value"
      ]
    ]
  ],
  "test_middleware_returns_none": [
    [
      "tests/handlers/tests.py",
      [
        "HandlerRequestTests",
        "test_middleware_returns_none"
      ]
    ]
  ],
  "test_no_response": [
    [
      "tests/handlers/tests.py",
      [
        "HandlerRequestTests",
        "test_no_response"
      ]
    ],
    [
      "tests/handlers/tests.py",
      [
        "AsyncHandlerRequestTests",
        "test_no_response"
      ]
    ]
  ],
  "test_get_script_name": [
    [
      "tests/handlers/tests.py",
      [
        "ScriptNameTests",
        "test_get_script_name"
      ]
    ]
  ],
  "test_get_script_name_double_slashes": [
    [
      "tests/handlers/tests.py",
      [
        "ScriptNameTests",
        "test_get_script_name_double_slashes"
      ]
    ]
  ],
  "test_sync_view": [
    [
      "tests/handlers/tests.py",
      [
        "AsyncHandlerRequestTests",
        "test_sync_view"
      ]
    ]
  ],
  "test_unawaited_response": [
    [
      "tests/handlers/tests.py",
      [
        "AsyncHandlerRequestTests",
        "test_unawaited_response"
      ]
    ]
  ],
  "template_response_error_handler": [
    [
      "tests/handlers/tests_custom_error_handlers.py",
      [
        "template_response_error_handler"
      ]
    ]
  ],
  "permission_denied_view": [
    [
      "tests/handlers/tests_custom_error_handlers.py",
      [
        "permission_denied_view"
      ]
    ]
  ],
  "test_handler_renders_template_response": [
    [
      "tests/handlers/tests_custom_error_handlers.py",
      [
        "CustomErrorHandlerTests",
        "test_handler_renders_template_response"
      ]
    ]
  ],
  "regular": [
    [
      "tests/handlers/views.py",
      [
        "regular"
      ]
    ]
  ],
  "no_response": [
    [
      "tests/handlers/views.py",
      [
        "no_response"
      ]
    ]
  ],
  "streaming": [
    [
      "tests/handlers/views.py",
      [
        "streaming"
      ]
    ]
  ],
  "in_transaction": [
    [
      "tests/handlers/views.py",
      [
        "in_transaction"
      ]
    ]
  ],
  "not_in_transaction": [
    [
      "tests/handlers/views.py",
      [
        "not_in_transaction"
      ]
    ]
  ],
  "suspicious": [
    [
      "tests/handlers/views.py",
      [
        "suspicious"
      ]
    ],
    [
      "tests/logging_tests/views.py",
      [
        "suspicious"
      ]
    ]
  ],
  "malformed_post": [
    [
      "tests/handlers/views.py",
      [
        "malformed_post"
      ]
    ]
  ],
  "httpstatus_enum": [
    [
      "tests/handlers/views.py",
      [
        "httpstatus_enum"
      ]
    ]
  ],
  "async_regular": [
    [
      "tests/handlers/views.py",
      [
        "async_regular"
      ]
    ]
  ],
  "test_create_with_no_args": [
    [
      "tests/httpwrappers/tests.py",
      [
        "QueryDictTests",
        "test_create_with_no_args"
      ]
    ]
  ],
  "test_missing_key": [
    [
      "tests/httpwrappers/tests.py",
      [
        "QueryDictTests",
        "test_missing_key"
      ]
    ]
  ],
  "test_immutability": [
    [
      "tests/httpwrappers/tests.py",
      [
        "QueryDictTests",
        "test_immutability"
      ]
    ]
  ],
  "test_immutable_get_with_default": [
    [
      "tests/httpwrappers/tests.py",
      [
        "QueryDictTests",
        "test_immutable_get_with_default"
      ]
    ]
  ],
  "test_immutable_basic_operations": [
    [
      "tests/httpwrappers/tests.py",
      [
        "QueryDictTests",
        "test_immutable_basic_operations"
      ]
    ]
  ],
  "test_single_key_value": [
    [
      "tests/httpwrappers/tests.py",
      [
        "QueryDictTests",
        "test_single_key_value"
      ]
    ]
  ],
  "test_urlencode": [
    [
      "tests/httpwrappers/tests.py",
      [
        "QueryDictTests",
        "test_urlencode"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_urlencode.py",
      [
        "FunctionTests",
        "test_urlencode"
      ]
    ]
  ],
  "test_urlencode_int": [
    [
      "tests/httpwrappers/tests.py",
      [
        "QueryDictTests",
        "test_urlencode_int"
      ]
    ]
  ],
  "test_mutable_copy": [
    [
      "tests/httpwrappers/tests.py",
      [
        "QueryDictTests",
        "test_mutable_copy"
      ]
    ]
  ],
  "test_mutable_delete": [
    [
      "tests/httpwrappers/tests.py",
      [
        "QueryDictTests",
        "test_mutable_delete"
      ]
    ]
  ],
  "test_basic_mutable_operations": [
    [
      "tests/httpwrappers/tests.py",
      [
        "QueryDictTests",
        "test_basic_mutable_operations"
      ]
    ]
  ],
  "test_multiple_keys": [
    [
      "tests/httpwrappers/tests.py",
      [
        "QueryDictTests",
        "test_multiple_keys"
      ]
    ]
  ],
  "test_update_from_querydict": [
    [
      "tests/httpwrappers/tests.py",
      [
        "QueryDictTests",
        "test_update_from_querydict"
      ]
    ]
  ],
  "test_non_default_encoding": [
    [
      "tests/httpwrappers/tests.py",
      [
        "QueryDictTests",
        "test_non_default_encoding"
      ]
    ]
  ],
  "test_querydict_fromkeys": [
    [
      "tests/httpwrappers/tests.py",
      [
        "QueryDictTests",
        "test_querydict_fromkeys"
      ]
    ]
  ],
  "test_fromkeys_with_nonempty_value": [
    [
      "tests/httpwrappers/tests.py",
      [
        "QueryDictTests",
        "test_fromkeys_with_nonempty_value"
      ]
    ]
  ],
  "test_fromkeys_is_immutable_by_default": [
    [
      "tests/httpwrappers/tests.py",
      [
        "QueryDictTests",
        "test_fromkeys_is_immutable_by_default"
      ]
    ]
  ],
  "test_fromkeys_mutable_override": [
    [
      "tests/httpwrappers/tests.py",
      [
        "QueryDictTests",
        "test_fromkeys_mutable_override"
      ]
    ]
  ],
  "test_duplicates_in_fromkeys_iterable": [
    [
      "tests/httpwrappers/tests.py",
      [
        "QueryDictTests",
        "test_duplicates_in_fromkeys_iterable"
      ]
    ]
  ],
  "test_fromkeys_with_nondefault_encoding": [
    [
      "tests/httpwrappers/tests.py",
      [
        "QueryDictTests",
        "test_fromkeys_with_nondefault_encoding"
      ]
    ]
  ],
  "test_fromkeys_empty_iterable": [
    [
      "tests/httpwrappers/tests.py",
      [
        "QueryDictTests",
        "test_fromkeys_empty_iterable"
      ]
    ]
  ],
  "test_fromkeys_noniterable": [
    [
      "tests/httpwrappers/tests.py",
      [
        "QueryDictTests",
        "test_fromkeys_noniterable"
      ]
    ]
  ],
  "test_headers_type": [
    [
      "tests/httpwrappers/tests.py",
      [
        "HttpResponseTests",
        "test_headers_type"
      ]
    ]
  ],
  "test_long_line": [
    [
      "tests/httpwrappers/tests.py",
      [
        "HttpResponseTests",
        "test_long_line"
      ]
    ]
  ],
  "test_newlines_in_headers": [
    [
      "tests/httpwrappers/tests.py",
      [
        "HttpResponseTests",
        "test_newlines_in_headers"
      ]
    ]
  ],
  "test_dict_behavior": [
    [
      "tests/httpwrappers/tests.py",
      [
        "HttpResponseTests",
        "test_dict_behavior"
      ]
    ]
  ],
  "test_non_string_content": [
    [
      "tests/httpwrappers/tests.py",
      [
        "HttpResponseTests",
        "test_non_string_content"
      ]
    ]
  ],
  "test_memoryview_content": [
    [
      "tests/httpwrappers/tests.py",
      [
        "HttpResponseTests",
        "test_memoryview_content"
      ]
    ]
  ],
  "test_iter_content": [
    [
      "tests/httpwrappers/tests.py",
      [
        "HttpResponseTests",
        "test_iter_content"
      ]
    ]
  ],
  "test_iterator_isnt_rewound": [
    [
      "tests/httpwrappers/tests.py",
      [
        "HttpResponseTests",
        "test_iterator_isnt_rewound"
      ]
    ]
  ],
  "test_lazy_content": [
    [
      "tests/httpwrappers/tests.py",
      [
        "HttpResponseTests",
        "test_lazy_content"
      ]
    ]
  ],
  "test_file_interface": [
    [
      "tests/httpwrappers/tests.py",
      [
        "HttpResponseTests",
        "test_file_interface"
      ]
    ]
  ],
  "test_stream_interface": [
    [
      "tests/httpwrappers/tests.py",
      [
        "HttpResponseTests",
        "test_stream_interface"
      ]
    ]
  ],
  "test_unsafe_redirect": [
    [
      "tests/httpwrappers/tests.py",
      [
        "HttpResponseTests",
        "test_unsafe_redirect"
      ]
    ]
  ],
  "test_redirect_lazy": [
    [
      "tests/httpwrappers/tests.py",
      [
        "HttpResponseSubclassesTests",
        "test_redirect_lazy"
      ]
    ]
  ],
  "test_redirect_repr": [
    [
      "tests/httpwrappers/tests.py",
      [
        "HttpResponseSubclassesTests",
        "test_redirect_repr"
      ]
    ]
  ],
  "test_invalid_redirect_repr": [
    [
      "tests/httpwrappers/tests.py",
      [
        "HttpResponseSubclassesTests",
        "test_invalid_redirect_repr"
      ]
    ]
  ],
  "test_not_modified": [
    [
      "tests/httpwrappers/tests.py",
      [
        "HttpResponseSubclassesTests",
        "test_not_modified"
      ]
    ]
  ],
  "test_not_modified_repr": [
    [
      "tests/httpwrappers/tests.py",
      [
        "HttpResponseSubclassesTests",
        "test_not_modified_repr"
      ]
    ]
  ],
  "test_not_allowed": [
    [
      "tests/httpwrappers/tests.py",
      [
        "HttpResponseSubclassesTests",
        "test_not_allowed"
      ]
    ]
  ],
  "test_not_allowed_repr": [
    [
      "tests/httpwrappers/tests.py",
      [
        "HttpResponseSubclassesTests",
        "test_not_allowed_repr"
      ]
    ]
  ],
  "test_not_allowed_repr_no_content_type": [
    [
      "tests/httpwrappers/tests.py",
      [
        "HttpResponseSubclassesTests",
        "test_not_allowed_repr_no_content_type"
      ]
    ]
  ],
  "test_json_response_non_ascii": [
    [
      "tests/httpwrappers/tests.py",
      [
        "JsonResponseTests",
        "test_json_response_non_ascii"
      ]
    ]
  ],
  "test_json_response_raises_type_error_with_default_setting": [
    [
      "tests/httpwrappers/tests.py",
      [
        "JsonResponseTests",
        "test_json_response_raises_type_error_with_default_setting"
      ]
    ]
  ],
  "test_json_response_text": [
    [
      "tests/httpwrappers/tests.py",
      [
        "JsonResponseTests",
        "test_json_response_text"
      ]
    ]
  ],
  "test_json_response_list": [
    [
      "tests/httpwrappers/tests.py",
      [
        "JsonResponseTests",
        "test_json_response_list"
      ]
    ]
  ],
  "test_json_response_uuid": [
    [
      "tests/httpwrappers/tests.py",
      [
        "JsonResponseTests",
        "test_json_response_uuid"
      ]
    ]
  ],
  "test_json_response_custom_encoder": [
    [
      "tests/httpwrappers/tests.py",
      [
        "JsonResponseTests",
        "test_json_response_custom_encoder"
      ]
    ]
  ],
  "test_json_response_passing_arguments_to_json_dumps": [
    [
      "tests/httpwrappers/tests.py",
      [
        "JsonResponseTests",
        "test_json_response_passing_arguments_to_json_dumps"
      ]
    ]
  ],
  "test_streaming_response": [
    [
      "tests/httpwrappers/tests.py",
      [
        "StreamingHttpResponseTests",
        "test_streaming_response"
      ]
    ],
    [
      "tests/httpwrappers/tests.py",
      [
        "FileCloseTests",
        "test_streaming_response"
      ]
    ],
    [
      "tests/i18n/tests.py",
      [
        "LocaleMiddlewareTests",
        "test_streaming_response"
      ]
    ]
  ],
  "test_response": [
    [
      "tests/httpwrappers/tests.py",
      [
        "FileCloseTests",
        "test_response"
      ]
    ]
  ],
  "test_decode": [
    [
      "tests/httpwrappers/tests.py",
      [
        "CookieTests",
        "test_decode"
      ]
    ],
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_decode"
      ]
    ]
  ],
  "test_nonstandard_keys": [
    [
      "tests/httpwrappers/tests.py",
      [
        "CookieTests",
        "test_nonstandard_keys"
      ]
    ]
  ],
  "test_repeated_nonstandard_keys": [
    [
      "tests/httpwrappers/tests.py",
      [
        "CookieTests",
        "test_repeated_nonstandard_keys"
      ]
    ]
  ],
  "test_python_cookies": [
    [
      "tests/httpwrappers/tests.py",
      [
        "CookieTests",
        "test_python_cookies"
      ]
    ]
  ],
  "test_cookie_edgecases": [
    [
      "tests/httpwrappers/tests.py",
      [
        "CookieTests",
        "test_cookie_edgecases"
      ]
    ]
  ],
  "test_invalid_cookies": [
    [
      "tests/httpwrappers/tests.py",
      [
        "CookieTests",
        "test_invalid_cookies"
      ]
    ]
  ],
  "test_samesite": [
    [
      "tests/httpwrappers/tests.py",
      [
        "CookieTests",
        "test_samesite"
      ]
    ],
    [
      "tests/responses/test_cookie.py",
      [
        "SetCookieTests",
        "test_samesite"
      ]
    ]
  ],
  "test_httponly_after_load": [
    [
      "tests/httpwrappers/tests.py",
      [
        "CookieTests",
        "test_httponly_after_load"
      ]
    ]
  ],
  "test_load_dict": [
    [
      "tests/httpwrappers/tests.py",
      [
        "CookieTests",
        "test_load_dict"
      ]
    ]
  ],
  "humanize_tester": [
    [
      "tests/humanize_tests/tests.py",
      [
        "HumanizeTests",
        "humanize_tester"
      ]
    ]
  ],
  "test_ordinal": [
    [
      "tests/humanize_tests/tests.py",
      [
        "HumanizeTests",
        "test_ordinal"
      ]
    ]
  ],
  "test_i18n_html_ordinal": [
    [
      "tests/humanize_tests/tests.py",
      [
        "HumanizeTests",
        "test_i18n_html_ordinal"
      ]
    ]
  ],
  "test_intcomma": [
    [
      "tests/humanize_tests/tests.py",
      [
        "HumanizeTests",
        "test_intcomma"
      ]
    ]
  ],
  "test_l10n_intcomma": [
    [
      "tests/humanize_tests/tests.py",
      [
        "HumanizeTests",
        "test_l10n_intcomma"
      ]
    ]
  ],
  "test_intcomma_without_number_grouping": [
    [
      "tests/humanize_tests/tests.py",
      [
        "HumanizeTests",
        "test_intcomma_without_number_grouping"
      ]
    ]
  ],
  "test_intword": [
    [
      "tests/humanize_tests/tests.py",
      [
        "HumanizeTests",
        "test_intword"
      ]
    ]
  ],
  "test_i18n_intcomma": [
    [
      "tests/humanize_tests/tests.py",
      [
        "HumanizeTests",
        "test_i18n_intcomma"
      ]
    ]
  ],
  "test_i18n_intword": [
    [
      "tests/humanize_tests/tests.py",
      [
        "HumanizeTests",
        "test_i18n_intword"
      ]
    ]
  ],
  "test_apnumber": [
    [
      "tests/humanize_tests/tests.py",
      [
        "HumanizeTests",
        "test_apnumber"
      ]
    ]
  ],
  "test_naturalday": [
    [
      "tests/humanize_tests/tests.py",
      [
        "HumanizeTests",
        "test_naturalday"
      ]
    ]
  ],
  "test_naturalday_tz": [
    [
      "tests/humanize_tests/tests.py",
      [
        "HumanizeTests",
        "test_naturalday_tz"
      ]
    ]
  ],
  "test_naturalday_uses_localtime": [
    [
      "tests/humanize_tests/tests.py",
      [
        "HumanizeTests",
        "test_naturalday_uses_localtime"
      ]
    ]
  ],
  "utcoffset": [
    [
      "tests/humanize_tests/tests.py",
      [
        "HumanizeTests",
        "test_naturaltime",
        "naive",
        "utcoffset"
      ]
    ]
  ],
  "test_naturaltime": [
    [
      "tests/humanize_tests/tests.py",
      [
        "HumanizeTests",
        "test_naturaltime"
      ]
    ]
  ],
  "test_naturaltime_as_documented": [
    [
      "tests/humanize_tests/tests.py",
      [
        "HumanizeTests",
        "test_naturaltime_as_documented"
      ]
    ]
  ],
  "test_inflection_for_timedelta": [
    [
      "tests/humanize_tests/tests.py",
      [
        "HumanizeTests",
        "test_inflection_for_timedelta"
      ]
    ]
  ],
  "test_not_prefixed": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLPrefixTests",
        "test_not_prefixed"
      ]
    ],
    [
      "tests/settings_tests/tests.py",
      [
        "MediaURLStaticURLPrefixTest",
        "test_not_prefixed"
      ]
    ]
  ],
  "test_prefixed": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLPrefixTests",
        "test_prefixed"
      ]
    ]
  ],
  "test_invalid_prefix_use": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLPrefixTests",
        "test_invalid_prefix_use"
      ]
    ]
  ],
  "test_prefixed_i18n_disabled": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLDisabledTests",
        "test_prefixed_i18n_disabled"
      ]
    ]
  ],
  "test_request_urlconf_considered": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "RequestURLConfTests",
        "test_request_urlconf_considered"
      ]
    ]
  ],
  "test_no_lang_activate": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "PathUnusedTests",
        "test_no_lang_activate"
      ]
    ]
  ],
  "test_no_prefix_translated": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLTranslationTests",
        "test_no_prefix_translated"
      ]
    ]
  ],
  "test_users_url": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLTranslationTests",
        "test_users_url"
      ]
    ]
  ],
  "test_translate_url_utility": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLTranslationTests",
        "test_translate_url_utility"
      ]
    ]
  ],
  "test_account_register": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLNamespaceTests",
        "test_account_register"
      ]
    ]
  ],
  "test_no_prefix_response": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLRedirectTests",
        "test_no_prefix_response"
      ]
    ],
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLVaryAcceptLanguageTests",
        "test_no_prefix_response"
      ]
    ]
  ],
  "test_en_redirect": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLRedirectTests",
        "test_en_redirect"
      ]
    ],
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLVaryAcceptLanguageTests",
        "test_en_redirect"
      ]
    ],
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLRedirectWithoutTrailingSlashTests",
        "test_en_redirect"
      ]
    ],
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLRedirectWithoutTrailingSlashSettingTests",
        "test_en_redirect"
      ]
    ]
  ],
  "test_en_redirect_wrong_url": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLRedirectTests",
        "test_en_redirect_wrong_url"
      ]
    ]
  ],
  "test_nl_redirect": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLRedirectTests",
        "test_nl_redirect"
      ]
    ]
  ],
  "test_nl_redirect_wrong_url": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLRedirectTests",
        "test_nl_redirect_wrong_url"
      ]
    ]
  ],
  "test_pt_br_redirect": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLRedirectTests",
        "test_pt_br_redirect"
      ]
    ]
  ],
  "test_pl_pl_redirect": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLRedirectTests",
        "test_pl_pl_redirect"
      ]
    ]
  ],
  "test_custom_redirect_class": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLRedirectTests",
        "test_custom_redirect_class"
      ]
    ]
  ],
  "test_not_prefixed_redirect": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLRedirectWithoutTrailingSlashTests",
        "test_not_prefixed_redirect"
      ]
    ],
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLRedirectWithoutTrailingSlashSettingTests",
        "test_not_prefixed_redirect"
      ]
    ]
  ],
  "test_not_prefixed_with_prefix": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLResponseTests",
        "test_not_prefixed_with_prefix"
      ]
    ]
  ],
  "test_en_url": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLResponseTests",
        "test_en_url"
      ]
    ]
  ],
  "test_nl_url": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLResponseTests",
        "test_nl_url"
      ]
    ]
  ],
  "test_wrong_en_prefix": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLResponseTests",
        "test_wrong_en_prefix"
      ]
    ]
  ],
  "test_wrong_nl_prefix": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLResponseTests",
        "test_wrong_nl_prefix"
      ]
    ]
  ],
  "test_pt_br_url": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLResponseTests",
        "test_pt_br_url"
      ]
    ]
  ],
  "test_en_path": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLResponseTests",
        "test_en_path"
      ]
    ]
  ],
  "test_nl_path": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLResponseTests",
        "test_nl_path"
      ]
    ]
  ],
  "test_language_prefix_with_script_prefix": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLRedirectWithScriptAliasTests",
        "test_language_prefix_with_script_prefix"
      ]
    ]
  ],
  "test_strings_only": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLTagTests",
        "test_strings_only"
      ]
    ]
  ],
  "test_context": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLTagTests",
        "test_context"
      ]
    ],
    [
      "tests/template_tests/test_context.py",
      [
        "ContextTests",
        "test_context"
      ]
    ]
  ],
  "test_args": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLTagTests",
        "test_args"
      ]
    ],
    [
      "tests/migrate_signals/tests.py",
      [
        "MigrateSignalTests",
        "test_args"
      ]
    ],
    [
      "tests/sitemaps_tests/test_management.py",
      [
        "PingGoogleTests",
        "test_args"
      ]
    ],
    [
      "tests/template_tests/test_response.py",
      [
        "SimpleTemplateResponseTest",
        "test_args"
      ]
    ],
    [
      "tests/template_tests/test_response.py",
      [
        "TemplateResponseTest",
        "test_args"
      ]
    ]
  ],
  "test_kwargs": [
    [
      "tests/i18n/patterns/tests.py",
      [
        "URLTagTests",
        "test_kwargs"
      ]
    ],
    [
      "tests/template_tests/test_response.py",
      [
        "SimpleTemplateResponseTest",
        "test_kwargs"
      ]
    ],
    [
      "tests/template_tests/test_response.py",
      [
        "TemplateResponseTest",
        "test_kwargs"
      ]
    ]
  ],
  "update_translation_catalogs": [
    [
      "tests/i18n/sampleproject/update_catalogs.py",
      [
        "update_translation_catalogs"
      ]
    ]
  ],
  "test_bom_rejection": [
    [
      "tests/i18n/test_compilation.py",
      [
        "PoFileTests",
        "test_bom_rejection"
      ]
    ]
  ],
  "test_no_write_access": [
    [
      "tests/i18n/test_compilation.py",
      [
        "PoFileTests",
        "test_no_write_access"
      ]
    ]
  ],
  "test_percent_symbol_in_po_file": [
    [
      "tests/i18n/test_compilation.py",
      [
        "PoFileContentsTests",
        "test_percent_symbol_in_po_file"
      ]
    ]
  ],
  "test_one_locale": [
    [
      "tests/i18n/test_compilation.py",
      [
        "MultipleLocaleCompilationTests",
        "test_one_locale"
      ]
    ]
  ],
  "test_multiple_locales": [
    [
      "tests/i18n/test_compilation.py",
      [
        "MultipleLocaleCompilationTests",
        "test_multiple_locales"
      ]
    ],
    [
      "tests/i18n/test_extraction.py",
      [
        "MultipleLocaleExtractionTests",
        "test_multiple_locales"
      ]
    ]
  ],
  "test_command_help": [
    [
      "tests/i18n/test_compilation.py",
      [
        "ExcludedLocaleCompilationTests",
        "test_command_help"
      ]
    ],
    [
      "tests/i18n/test_extraction.py",
      [
        "ExcludedLocaleExtractionTests",
        "test_command_help"
      ]
    ]
  ],
  "test_one_locale_excluded": [
    [
      "tests/i18n/test_compilation.py",
      [
        "ExcludedLocaleCompilationTests",
        "test_one_locale_excluded"
      ]
    ],
    [
      "tests/i18n/test_extraction.py",
      [
        "ExcludedLocaleExtractionTests",
        "test_one_locale_excluded"
      ]
    ]
  ],
  "test_multiple_locales_excluded": [
    [
      "tests/i18n/test_compilation.py",
      [
        "ExcludedLocaleCompilationTests",
        "test_multiple_locales_excluded"
      ]
    ],
    [
      "tests/i18n/test_extraction.py",
      [
        "ExcludedLocaleExtractionTests",
        "test_multiple_locales_excluded"
      ]
    ]
  ],
  "test_one_locale_excluded_with_locale": [
    [
      "tests/i18n/test_compilation.py",
      [
        "ExcludedLocaleCompilationTests",
        "test_one_locale_excluded_with_locale"
      ]
    ],
    [
      "tests/i18n/test_extraction.py",
      [
        "ExcludedLocaleExtractionTests",
        "test_one_locale_excluded_with_locale"
      ]
    ]
  ],
  "test_multiple_locales_excluded_with_locale": [
    [
      "tests/i18n/test_compilation.py",
      [
        "ExcludedLocaleCompilationTests",
        "test_multiple_locales_excluded_with_locale"
      ]
    ],
    [
      "tests/i18n/test_extraction.py",
      [
        "ExcludedLocaleExtractionTests",
        "test_multiple_locales_excluded_with_locale"
      ]
    ]
  ],
  "assertAllExist": [
    [
      "tests/i18n/test_compilation.py",
      [
        "IgnoreDirectoryCompilationTests",
        "assertAllExist"
      ]
    ]
  ],
  "assertNoneExist": [
    [
      "tests/i18n/test_compilation.py",
      [
        "IgnoreDirectoryCompilationTests",
        "assertNoneExist"
      ]
    ]
  ],
  "test_one_locale_dir_ignored": [
    [
      "tests/i18n/test_compilation.py",
      [
        "IgnoreDirectoryCompilationTests",
        "test_one_locale_dir_ignored"
      ]
    ]
  ],
  "test_multiple_locale_dirs_ignored": [
    [
      "tests/i18n/test_compilation.py",
      [
        "IgnoreDirectoryCompilationTests",
        "test_multiple_locale_dirs_ignored"
      ]
    ]
  ],
  "test_ignores_based_on_pattern": [
    [
      "tests/i18n/test_compilation.py",
      [
        "IgnoreDirectoryCompilationTests",
        "test_ignores_based_on_pattern"
      ]
    ]
  ],
  "test_error_reported_by_msgfmt": [
    [
      "tests/i18n/test_compilation.py",
      [
        "CompilationErrorHandling",
        "test_error_reported_by_msgfmt"
      ]
    ]
  ],
  "test_msgfmt_error_including_non_ascii": [
    [
      "tests/i18n/test_compilation.py",
      [
        "CompilationErrorHandling",
        "test_msgfmt_error_including_non_ascii"
      ]
    ]
  ],
  "test_nofuzzy_compiling": [
    [
      "tests/i18n/test_compilation.py",
      [
        "FuzzyTranslationTest",
        "test_nofuzzy_compiling"
      ]
    ]
  ],
  "test_fuzzy_compiling": [
    [
      "tests/i18n/test_compilation.py",
      [
        "FuzzyTranslationTest",
        "test_fuzzy_compiling"
      ]
    ]
  ],
  "test_app_locale_compiled": [
    [
      "tests/i18n/test_compilation.py",
      [
        "AppCompilationTest",
        "test_app_locale_compiled"
      ]
    ]
  ],
  "test_locale_paths_pathlib": [
    [
      "tests/i18n/test_compilation.py",
      [
        "PathLibLocaleCompilationTests",
        "test_locale_paths_pathlib"
      ]
    ]
  ],
  "_run_makemessages": [
    [
      "tests/i18n/test_extraction.py",
      [
        "ExtractorTests",
        "_run_makemessages"
      ]
    ]
  ],
  "assertMsgIdPlural": [
    [
      "tests/i18n/test_extraction.py",
      [
        "ExtractorTests",
        "assertMsgIdPlural"
      ]
    ]
  ],
  "assertMsgStr": [
    [
      "tests/i18n/test_extraction.py",
      [
        "ExtractorTests",
        "assertMsgStr"
      ]
    ]
  ],
  "assertNotMsgId": [
    [
      "tests/i18n/test_extraction.py",
      [
        "ExtractorTests",
        "assertNotMsgId"
      ]
    ]
  ],
  "_assertPoLocComment": [
    [
      "tests/i18n/test_extraction.py",
      [
        "ExtractorTests",
        "_assertPoLocComment"
      ]
    ]
  ],
  "_get_token_line_number": [
    [
      "tests/i18n/test_extraction.py",
      [
        "ExtractorTests",
        "_get_token_line_number"
      ]
    ]
  ],
  "assertLocationCommentPresent": [
    [
      "tests/i18n/test_extraction.py",
      [
        "ExtractorTests",
        "assertLocationCommentPresent"
      ]
    ]
  ],
  "assertLocationCommentNotPresent": [
    [
      "tests/i18n/test_extraction.py",
      [
        "ExtractorTests",
        "assertLocationCommentNotPresent"
      ]
    ]
  ],
  "assertRecentlyModified": [
    [
      "tests/i18n/test_extraction.py",
      [
        "ExtractorTests",
        "assertRecentlyModified"
      ]
    ]
  ],
  "assertNotRecentlyModified": [
    [
      "tests/i18n/test_extraction.py",
      [
        "ExtractorTests",
        "assertNotRecentlyModified"
      ]
    ]
  ],
  "test_use_i18n_false": [
    [
      "tests/i18n/test_extraction.py",
      [
        "BasicExtractorTests",
        "test_use_i18n_false"
      ]
    ]
  ],
  "test_no_option": [
    [
      "tests/i18n/test_extraction.py",
      [
        "BasicExtractorTests",
        "test_no_option"
      ]
    ]
  ],
  "test_comments_extractor": [
    [
      "tests/i18n/test_extraction.py",
      [
        "BasicExtractorTests",
        "test_comments_extractor"
      ]
    ]
  ],
  "test_special_char_extracted": [
    [
      "tests/i18n/test_extraction.py",
      [
        "BasicExtractorTests",
        "test_special_char_extracted"
      ]
    ]
  ],
  "test_blocktranslate_trimmed": [
    [
      "tests/i18n/test_extraction.py",
      [
        "BasicExtractorTests",
        "test_blocktranslate_trimmed"
      ]
    ]
  ],
  "test_extraction_error": [
    [
      "tests/i18n/test_extraction.py",
      [
        "BasicExtractorTests",
        "test_extraction_error"
      ]
    ]
  ],
  "test_unicode_decode_error": [
    [
      "tests/i18n/test_extraction.py",
      [
        "BasicExtractorTests",
        "test_unicode_decode_error"
      ]
    ]
  ],
  "test_extraction_warning": [
    [
      "tests/i18n/test_extraction.py",
      [
        "BasicExtractorTests",
        "test_extraction_warning"
      ]
    ]
  ],
  "test_template_message_context_extractor": [
    [
      "tests/i18n/test_extraction.py",
      [
        "BasicExtractorTests",
        "test_template_message_context_extractor"
      ]
    ]
  ],
  "test_context_in_single_quotes": [
    [
      "tests/i18n/test_extraction.py",
      [
        "BasicExtractorTests",
        "test_context_in_single_quotes"
      ]
    ]
  ],
  "test_template_comments": [
    [
      "tests/i18n/test_extraction.py",
      [
        "BasicExtractorTests",
        "test_template_comments"
      ]
    ]
  ],
  "test_makemessages_find_files": [
    [
      "tests/i18n/test_extraction.py",
      [
        "BasicExtractorTests",
        "test_makemessages_find_files"
      ]
    ]
  ],
  "test_makemessages_gettext_version": [
    [
      "tests/i18n/test_extraction.py",
      [
        "BasicExtractorTests",
        "test_makemessages_gettext_version"
      ]
    ]
  ],
  "test_po_file_encoding_when_updating": [
    [
      "tests/i18n/test_extraction.py",
      [
        "BasicExtractorTests",
        "test_po_file_encoding_when_updating"
      ]
    ]
  ],
  "test_pot_charset_header_is_utf8": [
    [
      "tests/i18n/test_extraction.py",
      [
        "BasicExtractorTests",
        "test_pot_charset_header_is_utf8"
      ]
    ]
  ],
  "test_javascript_literals": [
    [
      "tests/i18n/test_extraction.py",
      [
        "JavascriptExtractorTests",
        "test_javascript_literals"
      ]
    ]
  ],
  "test_media_static_dirs_ignored": [
    [
      "tests/i18n/test_extraction.py",
      [
        "JavascriptExtractorTests",
        "test_media_static_dirs_ignored"
      ]
    ],
    [
      "tests/i18n/test_extraction.py",
      [
        "IgnoredExtractorTests",
        "test_media_static_dirs_ignored"
      ]
    ]
  ],
  "test_default_root_settings": [
    [
      "tests/i18n/test_extraction.py",
      [
        "JavascriptExtractorTests",
        "test_default_root_settings"
      ]
    ]
  ],
  "test_ignore_directory": [
    [
      "tests/i18n/test_extraction.py",
      [
        "IgnoredExtractorTests",
        "test_ignore_directory"
      ]
    ]
  ],
  "test_ignore_subdirectory": [
    [
      "tests/i18n/test_extraction.py",
      [
        "IgnoredExtractorTests",
        "test_ignore_subdirectory"
      ]
    ]
  ],
  "test_ignore_file_patterns": [
    [
      "tests/i18n/test_extraction.py",
      [
        "IgnoredExtractorTests",
        "test_ignore_file_patterns"
      ]
    ]
  ],
  "test_symlink": [
    [
      "tests/i18n/test_extraction.py",
      [
        "SymlinkExtractorTests",
        "test_symlink"
      ]
    ]
  ],
  "test_copy_plural_forms": [
    [
      "tests/i18n/test_extraction.py",
      [
        "CopyPluralFormsExtractorTests",
        "test_copy_plural_forms"
      ]
    ]
  ],
  "test_override_plural_forms": [
    [
      "tests/i18n/test_extraction.py",
      [
        "CopyPluralFormsExtractorTests",
        "test_override_plural_forms"
      ]
    ]
  ],
  "test_translate_and_plural_blocktranslate_collision": [
    [
      "tests/i18n/test_extraction.py",
      [
        "CopyPluralFormsExtractorTests",
        "test_translate_and_plural_blocktranslate_collision"
      ]
    ]
  ],
  "test_no_wrap_enabled": [
    [
      "tests/i18n/test_extraction.py",
      [
        "NoWrapExtractorTests",
        "test_no_wrap_enabled"
      ]
    ]
  ],
  "test_no_wrap_disabled": [
    [
      "tests/i18n/test_extraction.py",
      [
        "NoWrapExtractorTests",
        "test_no_wrap_disabled"
      ]
    ]
  ],
  "test_no_location_enabled": [
    [
      "tests/i18n/test_extraction.py",
      [
        "LocationCommentsTests",
        "test_no_location_enabled"
      ]
    ]
  ],
  "test_no_location_disabled": [
    [
      "tests/i18n/test_extraction.py",
      [
        "LocationCommentsTests",
        "test_no_location_disabled"
      ]
    ]
  ],
  "test_location_comments_for_templatized_files": [
    [
      "tests/i18n/test_extraction.py",
      [
        "LocationCommentsTests",
        "test_location_comments_for_templatized_files"
      ]
    ]
  ],
  "test_add_location_full": [
    [
      "tests/i18n/test_extraction.py",
      [
        "LocationCommentsTests",
        "test_add_location_full"
      ]
    ]
  ],
  "test_add_location_file": [
    [
      "tests/i18n/test_extraction.py",
      [
        "LocationCommentsTests",
        "test_add_location_file"
      ]
    ]
  ],
  "test_add_location_never": [
    [
      "tests/i18n/test_extraction.py",
      [
        "LocationCommentsTests",
        "test_add_location_never"
      ]
    ]
  ],
  "test_add_location_gettext_version_check": [
    [
      "tests/i18n/test_extraction.py",
      [
        "LocationCommentsTests",
        "test_add_location_gettext_version_check"
      ]
    ]
  ],
  "test_keep_pot_disabled_by_default": [
    [
      "tests/i18n/test_extraction.py",
      [
        "KeepPotFileExtractorTests",
        "test_keep_pot_disabled_by_default"
      ]
    ]
  ],
  "test_keep_pot_explicitly_disabled": [
    [
      "tests/i18n/test_extraction.py",
      [
        "KeepPotFileExtractorTests",
        "test_keep_pot_explicitly_disabled"
      ]
    ]
  ],
  "test_keep_pot_enabled": [
    [
      "tests/i18n/test_extraction.py",
      [
        "KeepPotFileExtractorTests",
        "test_keep_pot_enabled"
      ]
    ]
  ],
  "test_all_locales": [
    [
      "tests/i18n/test_extraction.py",
      [
        "MultipleLocaleExtractionTests",
        "test_all_locales"
      ]
    ]
  ],
  "_set_times_for_all_po_files": [
    [
      "tests/i18n/test_extraction.py",
      [
        "ExcludedLocaleExtractionTests",
        "_set_times_for_all_po_files"
      ]
    ]
  ],
  "test_no_locale_raises": [
    [
      "tests/i18n/test_extraction.py",
      [
        "CustomLayoutExtractionTests",
        "test_no_locale_raises"
      ]
    ]
  ],
  "test_project_locale_paths": [
    [
      "tests/i18n/test_extraction.py",
      [
        "CustomLayoutExtractionTests",
        "test_project_locale_paths"
      ]
    ]
  ],
  "test_project_locale_paths_pathlib": [
    [
      "tests/i18n/test_extraction.py",
      [
        "CustomLayoutExtractionTests",
        "test_project_locale_paths_pathlib"
      ]
    ]
  ],
  "_test_project_locale_paths": [
    [
      "tests/i18n/test_extraction.py",
      [
        "CustomLayoutExtractionTests",
        "_test_project_locale_paths"
      ]
    ]
  ],
  "test_makemessages_no_settings": [
    [
      "tests/i18n/test_extraction.py",
      [
        "NoSettingsExtractionTests",
        "test_makemessages_no_settings"
      ]
    ]
  ],
  "test_trans_tag_with_percent_symbol_at_the_end": [
    [
      "tests/i18n/test_percents.py",
      [
        "ExtractingStringsWithPercentSigns",
        "test_trans_tag_with_percent_symbol_at_the_end"
      ]
    ]
  ],
  "test_trans_tag_with_percent_symbol_in_the_middle": [
    [
      "tests/i18n/test_percents.py",
      [
        "ExtractingStringsWithPercentSigns",
        "test_trans_tag_with_percent_symbol_in_the_middle"
      ]
    ]
  ],
  "test_trans_tag_with_string_that_look_like_fmt_spec": [
    [
      "tests/i18n/test_percents.py",
      [
        "ExtractingStringsWithPercentSigns",
        "test_trans_tag_with_string_that_look_like_fmt_spec"
      ]
    ]
  ],
  "test_adds_python_format_to_all_percent_signs": [
    [
      "tests/i18n/test_percents.py",
      [
        "ExtractingStringsWithPercentSigns",
        "test_adds_python_format_to_all_percent_signs"
      ]
    ]
  ],
  "test_translates_with_a_percent_symbol_at_the_end": [
    [
      "tests/i18n/test_percents.py",
      [
        "RenderingTemplatesWithPercentSigns",
        "test_translates_with_a_percent_symbol_at_the_end"
      ]
    ]
  ],
  "test_translates_with_percent_symbol_in_the_middle": [
    [
      "tests/i18n/test_percents.py",
      [
        "RenderingTemplatesWithPercentSigns",
        "test_translates_with_percent_symbol_in_the_middle"
      ]
    ]
  ],
  "test_translates_with_percent_symbol_using_context": [
    [
      "tests/i18n/test_percents.py",
      [
        "RenderingTemplatesWithPercentSigns",
        "test_translates_with_percent_symbol_using_context"
      ]
    ]
  ],
  "test_translates_with_string_that_look_like_fmt_spec_with_trans": [
    [
      "tests/i18n/test_percents.py",
      [
        "RenderingTemplatesWithPercentSigns",
        "test_translates_with_string_that_look_like_fmt_spec_with_trans"
      ]
    ]
  ],
  "test_translates_multiple_percent_signs": [
    [
      "tests/i18n/test_percents.py",
      [
        "RenderingTemplatesWithPercentSigns",
        "test_translates_multiple_percent_signs"
      ]
    ]
  ],
  "patch_formats": [
    [
      "tests/i18n/tests.py",
      [
        "patch_formats"
      ]
    ]
  ],
  "test_legacy_aliases": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationTests",
        "test_legacy_aliases"
      ]
    ]
  ],
  "test_plural": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationTests",
        "test_plural"
      ]
    ]
  ],
  "test_plural_null": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationTests",
        "test_plural_null"
      ]
    ]
  ],
  "test_multiple_plurals_per_language": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationTests",
        "test_multiple_plurals_per_language"
      ]
    ]
  ],
  "test_override": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationTests",
        "test_override"
      ]
    ],
    [
      "tests/settings_tests/tests.py",
      [
        "FullyDecoratedTranTestCase",
        "test_override"
      ]
    ],
    [
      "tests/settings_tests/tests.py",
      [
        "FullyDecoratedTestCase",
        "test_override"
      ]
    ],
    [
      "tests/settings_tests/tests.py",
      [
        "ClassDecoratedTestCase",
        "test_override"
      ]
    ],
    [
      "tests/settings_tests/tests.py",
      [
        "SettingsTests",
        "test_override"
      ]
    ],
    [
      "tests/settings_tests/tests.py",
      [
        "IsOverriddenTest",
        "test_override"
      ]
    ],
    [
      "tests/utils_tests/test_timezone.py",
      [
        "TimezoneTests",
        "test_override"
      ]
    ]
  ],
  "test_override_decorator": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationTests",
        "test_override_decorator"
      ]
    ],
    [
      "tests/utils_tests/test_timezone.py",
      [
        "TimezoneTests",
        "test_override_decorator"
      ]
    ]
  ],
  "test_override_exit": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationTests",
        "test_override_exit"
      ]
    ]
  ],
  "test_lazy_objects": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationTests",
        "test_lazy_objects"
      ]
    ]
  ],
  "test_lazy_pickle": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationTests",
        "test_lazy_pickle"
      ]
    ]
  ],
  "test_ngettext_lazy": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationTests",
        "test_ngettext_lazy"
      ]
    ]
  ],
  "test_ngettext_lazy_format_style": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationTests",
        "test_ngettext_lazy_format_style"
      ]
    ]
  ],
  "test_ngettext_lazy_bool": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationTests",
        "test_ngettext_lazy_bool"
      ]
    ]
  ],
  "test_ngettext_lazy_pickle": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationTests",
        "test_ngettext_lazy_pickle"
      ]
    ]
  ],
  "test_pgettext": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationTests",
        "test_pgettext"
      ]
    ]
  ],
  "test_empty_value": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationTests",
        "test_empty_value"
      ]
    ]
  ],
  "test_safe_status": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationTests",
        "test_safe_status"
      ]
    ]
  ],
  "test_maclines": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationTests",
        "test_maclines"
      ]
    ]
  ],
  "test_to_locale": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationTests",
        "test_to_locale"
      ]
    ]
  ],
  "test_to_language": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationTests",
        "test_to_language"
      ]
    ]
  ],
  "test_language_bidi": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationTests",
        "test_language_bidi"
      ]
    ]
  ],
  "test_language_bidi_null": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationTests",
        "test_language_bidi_null"
      ]
    ]
  ],
  "test_bug14894_translation_activate_thread_safety": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationThreadSafetyTests",
        "test_bug14894_translation_activate_thread_safety"
      ]
    ]
  ],
  "test_all_format_strings": [
    [
      "tests/i18n/tests.py",
      [
        "FormattingTests",
        "test_all_format_strings"
      ]
    ]
  ],
  "test_locale_independent": [
    [
      "tests/i18n/tests.py",
      [
        "FormattingTests",
        "test_locale_independent"
      ]
    ]
  ],
  "test_l10n_disabled": [
    [
      "tests/i18n/tests.py",
      [
        "FormattingTests",
        "test_l10n_disabled"
      ]
    ]
  ],
  "test_false_like_locale_formats": [
    [
      "tests/i18n/tests.py",
      [
        "FormattingTests",
        "test_false_like_locale_formats"
      ]
    ]
  ],
  "test_l10n_enabled": [
    [
      "tests/i18n/tests.py",
      [
        "FormattingTests",
        "test_l10n_enabled"
      ]
    ]
  ],
  "test_sub_locales": [
    [
      "tests/i18n/tests.py",
      [
        "FormattingTests",
        "test_sub_locales"
      ]
    ]
  ],
  "test_localized_input": [
    [
      "tests/i18n/tests.py",
      [
        "FormattingTests",
        "test_localized_input"
      ]
    ]
  ],
  "test_localized_input_func": [
    [
      "tests/i18n/tests.py",
      [
        "FormattingTests",
        "test_localized_input_func"
      ]
    ]
  ],
  "test_sanitize_separators": [
    [
      "tests/i18n/tests.py",
      [
        "FormattingTests",
        "test_sanitize_separators"
      ]
    ]
  ],
  "test_iter_format_modules": [
    [
      "tests/i18n/tests.py",
      [
        "FormattingTests",
        "test_iter_format_modules"
      ]
    ]
  ],
  "test_iter_format_modules_stability": [
    [
      "tests/i18n/tests.py",
      [
        "FormattingTests",
        "test_iter_format_modules_stability"
      ]
    ]
  ],
  "test_get_format_modules_lang": [
    [
      "tests/i18n/tests.py",
      [
        "FormattingTests",
        "test_get_format_modules_lang"
      ]
    ]
  ],
  "test_get_format_modules_stability": [
    [
      "tests/i18n/tests.py",
      [
        "FormattingTests",
        "test_get_format_modules_stability"
      ]
    ]
  ],
  "test_localize_templatetag_and_filter": [
    [
      "tests/i18n/tests.py",
      [
        "FormattingTests",
        "test_localize_templatetag_and_filter"
      ]
    ]
  ],
  "test_localized_as_text_as_hidden_input": [
    [
      "tests/i18n/tests.py",
      [
        "FormattingTests",
        "test_localized_as_text_as_hidden_input"
      ]
    ]
  ],
  "test_format_arbitrary_settings": [
    [
      "tests/i18n/tests.py",
      [
        "FormattingTests",
        "test_format_arbitrary_settings"
      ]
    ]
  ],
  "test_get_custom_format": [
    [
      "tests/i18n/tests.py",
      [
        "FormattingTests",
        "test_get_custom_format"
      ]
    ]
  ],
  "test_admin_javascript_supported_input_formats": [
    [
      "tests/i18n/tests.py",
      [
        "FormattingTests",
        "test_admin_javascript_supported_input_formats"
      ]
    ]
  ],
  "test_english_fallback": [
    [
      "tests/i18n/tests.py",
      [
        "MiscTests",
        "test_english_fallback"
      ]
    ]
  ],
  "test_parse_spec_http_header": [
    [
      "tests/i18n/tests.py",
      [
        "MiscTests",
        "test_parse_spec_http_header"
      ]
    ]
  ],
  "test_parse_literal_http_header": [
    [
      "tests/i18n/tests.py",
      [
        "MiscTests",
        "test_parse_literal_http_header"
      ]
    ]
  ],
  "test_support_for_deprecated_chinese_language_codes": [
    [
      "tests/i18n/tests.py",
      [
        "MiscTests",
        "test_support_for_deprecated_chinese_language_codes"
      ]
    ]
  ],
  "test_special_fallback_language": [
    [
      "tests/i18n/tests.py",
      [
        "MiscTests",
        "test_special_fallback_language"
      ]
    ]
  ],
  "test_parse_language_cookie": [
    [
      "tests/i18n/tests.py",
      [
        "MiscTests",
        "test_parse_language_cookie"
      ]
    ]
  ],
  "test_get_supported_language_variant_real": [
    [
      "tests/i18n/tests.py",
      [
        "MiscTests",
        "test_get_supported_language_variant_real"
      ]
    ]
  ],
  "test_get_supported_language_variant_null": [
    [
      "tests/i18n/tests.py",
      [
        "MiscTests",
        "test_get_supported_language_variant_null"
      ]
    ]
  ],
  "test_get_language_from_path_real": [
    [
      "tests/i18n/tests.py",
      [
        "MiscTests",
        "test_get_language_from_path_real"
      ]
    ]
  ],
  "test_get_language_from_path_null": [
    [
      "tests/i18n/tests.py",
      [
        "MiscTests",
        "test_get_language_from_path_null"
      ]
    ]
  ],
  "test_cache_resetting": [
    [
      "tests/i18n/tests.py",
      [
        "MiscTests",
        "test_cache_resetting"
      ]
    ]
  ],
  "test_i18n_patterns_returns_list": [
    [
      "tests/i18n/tests.py",
      [
        "MiscTests",
        "test_i18n_patterns_returns_list"
      ]
    ]
  ],
  "assertGettext": [
    [
      "tests/i18n/tests.py",
      [
        "ResolutionOrderI18NTests",
        "assertGettext"
      ]
    ]
  ],
  "test_app_translation": [
    [
      "tests/i18n/tests.py",
      [
        "AppResolutionOrderI18NTests",
        "test_app_translation"
      ]
    ]
  ],
  "test_locale_paths_translation": [
    [
      "tests/i18n/tests.py",
      [
        "LocalePathsResolutionOrderI18NTests",
        "test_locale_paths_translation"
      ]
    ]
  ],
  "test_locale_paths_override_app_translation": [
    [
      "tests/i18n/tests.py",
      [
        "LocalePathsResolutionOrderI18NTests",
        "test_locale_paths_override_app_translation"
      ]
    ]
  ],
  "test_django_fallback": [
    [
      "tests/i18n/tests.py",
      [
        "DjangoFallbackResolutionOrderI18NTests",
        "test_django_fallback"
      ]
    ]
  ],
  "test_sparse_territory_catalog": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationFallbackI18NTests",
        "test_sparse_territory_catalog"
      ]
    ]
  ],
  "test_lazy": [
    [
      "tests/i18n/tests.py",
      [
        "TestModels",
        "test_lazy"
      ]
    ],
    [
      "tests/utils_tests/test_functional.py",
      [
        "FunctionalTests",
        "test_lazy"
      ]
    ]
  ],
  "test_safestr": [
    [
      "tests/i18n/tests.py",
      [
        "TestModels",
        "test_safestr"
      ]
    ]
  ],
  "test_localized_language_info": [
    [
      "tests/i18n/tests.py",
      [
        "TestLanguageInfo",
        "test_localized_language_info"
      ]
    ]
  ],
  "test_unknown_language_code": [
    [
      "tests/i18n/tests.py",
      [
        "TestLanguageInfo",
        "test_unknown_language_code"
      ]
    ]
  ],
  "test_unknown_only_country_code": [
    [
      "tests/i18n/tests.py",
      [
        "TestLanguageInfo",
        "test_unknown_only_country_code"
      ]
    ]
  ],
  "test_unknown_language_code_and_country_code": [
    [
      "tests/i18n/tests.py",
      [
        "TestLanguageInfo",
        "test_unknown_language_code_and_country_code"
      ]
    ]
  ],
  "test_fallback_language_code": [
    [
      "tests/i18n/tests.py",
      [
        "TestLanguageInfo",
        "test_fallback_language_code"
      ]
    ]
  ],
  "test_language_not_saved_to_session": [
    [
      "tests/i18n/tests.py",
      [
        "LocaleMiddlewareTests",
        "test_language_not_saved_to_session"
      ]
    ]
  ],
  "test_default_lang_without_prefix": [
    [
      "tests/i18n/tests.py",
      [
        "UnprefixedDefaultLanguageTests",
        "test_default_lang_without_prefix"
      ]
    ]
  ],
  "test_other_lang_with_prefix": [
    [
      "tests/i18n/tests.py",
      [
        "UnprefixedDefaultLanguageTests",
        "test_other_lang_with_prefix"
      ]
    ]
  ],
  "test_unprefixed_language_other_than_accept_language": [
    [
      "tests/i18n/tests.py",
      [
        "UnprefixedDefaultLanguageTests",
        "test_unprefixed_language_other_than_accept_language"
      ]
    ]
  ],
  "test_page_with_dash": [
    [
      "tests/i18n/tests.py",
      [
        "UnprefixedDefaultLanguageTests",
        "test_page_with_dash"
      ]
    ]
  ],
  "test_no_redirect_on_404": [
    [
      "tests/i18n/tests.py",
      [
        "UnprefixedDefaultLanguageTests",
        "test_no_redirect_on_404"
      ]
    ]
  ],
  "test_check_for_language": [
    [
      "tests/i18n/tests.py",
      [
        "CountrySpecificLanguageTests",
        "test_check_for_language"
      ]
    ],
    [
      "tests/i18n/tests.py",
      [
        "NonDjangoLanguageTests",
        "test_check_for_language"
      ]
    ]
  ],
  "test_check_for_language_null": [
    [
      "tests/i18n/tests.py",
      [
        "CountrySpecificLanguageTests",
        "test_check_for_language_null"
      ]
    ]
  ],
  "test_get_language_from_request": [
    [
      "tests/i18n/tests.py",
      [
        "CountrySpecificLanguageTests",
        "test_get_language_from_request"
      ]
    ]
  ],
  "test_get_language_from_request_null": [
    [
      "tests/i18n/tests.py",
      [
        "CountrySpecificLanguageTests",
        "test_get_language_from_request_null"
      ]
    ]
  ],
  "test_specific_language_codes": [
    [
      "tests/i18n/tests.py",
      [
        "CountrySpecificLanguageTests",
        "test_specific_language_codes"
      ]
    ]
  ],
  "patchGettextFind": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationFilesMissing",
        "patchGettextFind"
      ]
    ]
  ],
  "test_failure_finding_default_mo_files": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationFilesMissing",
        "test_failure_finding_default_mo_files"
      ]
    ]
  ],
  "test_non_django_language": [
    [
      "tests/i18n/tests.py",
      [
        "NonDjangoLanguageTests",
        "test_non_django_language"
      ]
    ]
  ],
  "test_plural_non_django_language": [
    [
      "tests/i18n/tests.py",
      [
        "NonDjangoLanguageTests",
        "test_plural_non_django_language"
      ]
    ]
  ],
  "test_i18n_disabled": [
    [
      "tests/i18n/tests.py",
      [
        "WatchForTranslationChangesTests",
        "test_i18n_disabled"
      ]
    ]
  ],
  "test_i18n_enabled": [
    [
      "tests/i18n/tests.py",
      [
        "WatchForTranslationChangesTests",
        "test_i18n_enabled"
      ]
    ]
  ],
  "test_i18n_locale_paths": [
    [
      "tests/i18n/tests.py",
      [
        "WatchForTranslationChangesTests",
        "test_i18n_locale_paths"
      ]
    ]
  ],
  "test_i18n_app_dirs": [
    [
      "tests/i18n/tests.py",
      [
        "WatchForTranslationChangesTests",
        "test_i18n_app_dirs"
      ]
    ]
  ],
  "test_i18n_local_locale": [
    [
      "tests/i18n/tests.py",
      [
        "WatchForTranslationChangesTests",
        "test_i18n_local_locale"
      ]
    ]
  ],
  "test_ignores_non_mo_files": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationFileChangedTests",
        "test_ignores_non_mo_files"
      ]
    ]
  ],
  "test_resets_cache_with_mo_files": [
    [
      "tests/i18n/tests.py",
      [
        "TranslationFileChangedTests",
        "test_resets_cache_with_mo_files"
      ]
    ]
  ],
  "test_round_away_from_one": [
    [
      "tests/i18n/tests.py",
      [
        "UtilsTests",
        "test_round_away_from_one"
      ]
    ]
  ],
  "copytree": [
    [
      "tests/i18n/utils.py",
      [
        "copytree"
      ]
    ]
  ],
  "_assertPoKeyword": [
    [
      "tests/i18n/utils.py",
      [
        "POFileAssertionMixin",
        "_assertPoKeyword"
      ]
    ]
  ],
  "assertMsgId": [
    [
      "tests/i18n/utils.py",
      [
        "POFileAssertionMixin",
        "assertMsgId"
      ]
    ]
  ],
  "_rmrf": [
    [
      "tests/i18n/utils.py",
      [
        "RunInTmpDirMixin",
        "_rmrf"
      ]
    ]
  ],
  "test_index_name_hash": [
    [
      "tests/indexes/tests.py",
      [
        "SchemaIndexesTests",
        "test_index_name_hash"
      ]
    ]
  ],
  "test_index_together": [
    [
      "tests/indexes/tests.py",
      [
        "SchemaIndexesTests",
        "test_index_together"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_index_together"
      ]
    ]
  ],
  "test_index_together_single_list": [
    [
      "tests/indexes/tests.py",
      [
        "SchemaIndexesTests",
        "test_index_together_single_list"
      ]
    ]
  ],
  "test_columns_list_sql": [
    [
      "tests/indexes/tests.py",
      [
        "SchemaIndexesTests",
        "test_columns_list_sql"
      ]
    ]
  ],
  "test_descending_columns_list_sql": [
    [
      "tests/indexes/tests.py",
      [
        "SchemaIndexesTests",
        "test_descending_columns_list_sql"
      ]
    ]
  ],
  "test_create_index_ignores_opclasses": [
    [
      "tests/indexes/tests.py",
      [
        "SchemaIndexesNotPostgreSQLTests",
        "test_create_index_ignores_opclasses"
      ]
    ]
  ],
  "test_condition_ignored": [
    [
      "tests/indexes/tests.py",
      [
        "PartialIndexConditionIgnoredTests",
        "test_condition_ignored"
      ]
    ]
  ],
  "test_text_indexes": [
    [
      "tests/indexes/tests.py",
      [
        "SchemaIndexesPostgreSQLTests",
        "test_text_indexes"
      ]
    ]
  ],
  "test_virtual_relation_indexes": [
    [
      "tests/indexes/tests.py",
      [
        "SchemaIndexesPostgreSQLTests",
        "test_virtual_relation_indexes"
      ]
    ]
  ],
  "test_ops_class": [
    [
      "tests/indexes/tests.py",
      [
        "SchemaIndexesPostgreSQLTests",
        "test_ops_class"
      ]
    ]
  ],
  "test_ops_class_multiple_columns": [
    [
      "tests/indexes/tests.py",
      [
        "SchemaIndexesPostgreSQLTests",
        "test_ops_class_multiple_columns"
      ]
    ]
  ],
  "test_ops_class_partial": [
    [
      "tests/indexes/tests.py",
      [
        "SchemaIndexesPostgreSQLTests",
        "test_ops_class_partial"
      ]
    ]
  ],
  "test_ops_class_partial_tablespace": [
    [
      "tests/indexes/tests.py",
      [
        "SchemaIndexesPostgreSQLTests",
        "test_ops_class_partial_tablespace"
      ]
    ]
  ],
  "test_ops_class_descending": [
    [
      "tests/indexes/tests.py",
      [
        "SchemaIndexesPostgreSQLTests",
        "test_ops_class_descending"
      ]
    ]
  ],
  "test_ops_class_descending_partial": [
    [
      "tests/indexes/tests.py",
      [
        "SchemaIndexesPostgreSQLTests",
        "test_ops_class_descending_partial"
      ]
    ]
  ],
  "test_ops_class_columns_lists_sql": [
    [
      "tests/indexes/tests.py",
      [
        "SchemaIndexesPostgreSQLTests",
        "test_ops_class_columns_lists_sql"
      ]
    ]
  ],
  "test_ops_class_descending_columns_list_sql": [
    [
      "tests/indexes/tests.py",
      [
        "SchemaIndexesPostgreSQLTests",
        "test_ops_class_descending_columns_list_sql"
      ]
    ]
  ],
  "test_no_index_for_foreignkey": [
    [
      "tests/indexes/tests.py",
      [
        "SchemaIndexesMySQLTests",
        "test_no_index_for_foreignkey"
      ]
    ]
  ],
  "test_partial_index": [
    [
      "tests/indexes/tests.py",
      [
        "PartialIndexTests",
        "test_partial_index"
      ]
    ]
  ],
  "test_integer_restriction_partial": [
    [
      "tests/indexes/tests.py",
      [
        "PartialIndexTests",
        "test_integer_restriction_partial"
      ]
    ]
  ],
  "test_boolean_restriction_partial": [
    [
      "tests/indexes/tests.py",
      [
        "PartialIndexTests",
        "test_boolean_restriction_partial"
      ]
    ]
  ],
  "test_multiple_conditions": [
    [
      "tests/indexes/tests.py",
      [
        "PartialIndexTests",
        "test_multiple_conditions"
      ]
    ]
  ],
  "test_is_null_condition": [
    [
      "tests/indexes/tests.py",
      [
        "PartialIndexTests",
        "test_is_null_condition"
      ]
    ]
  ],
  "test_deletion": [
    [
      "tests/inline_formsets/tests.py",
      [
        "DeletionTests",
        "test_deletion"
      ]
    ],
    [
      "tests/model_formsets/tests.py",
      [
        "DeletionTests",
        "test_deletion"
      ]
    ]
  ],
  "test_add_form_deletion_when_invalid": [
    [
      "tests/inline_formsets/tests.py",
      [
        "DeletionTests",
        "test_add_form_deletion_when_invalid"
      ]
    ],
    [
      "tests/model_formsets/tests.py",
      [
        "DeletionTests",
        "test_add_form_deletion_when_invalid"
      ]
    ]
  ],
  "test_change_form_deletion_when_invalid": [
    [
      "tests/inline_formsets/tests.py",
      [
        "DeletionTests",
        "test_change_form_deletion_when_invalid"
      ]
    ],
    [
      "tests/model_formsets/tests.py",
      [
        "DeletionTests",
        "test_change_form_deletion_when_invalid"
      ]
    ]
  ],
  "test_save_new": [
    [
      "tests/inline_formsets/tests.py",
      [
        "DeletionTests",
        "test_save_new"
      ]
    ]
  ],
  "test_inline_formset_factory": [
    [
      "tests/inline_formsets/tests.py",
      [
        "InlineFormsetFactoryTest",
        "test_inline_formset_factory"
      ]
    ]
  ],
  "test_exception_on_unspecified_foreign_key": [
    [
      "tests/inline_formsets/tests.py",
      [
        "InlineFormsetFactoryTest",
        "test_exception_on_unspecified_foreign_key"
      ]
    ]
  ],
  "test_fk_name_not_foreign_key_field_from_child": [
    [
      "tests/inline_formsets/tests.py",
      [
        "InlineFormsetFactoryTest",
        "test_fk_name_not_foreign_key_field_from_child"
      ]
    ]
  ],
  "test_non_foreign_key_field": [
    [
      "tests/inline_formsets/tests.py",
      [
        "InlineFormsetFactoryTest",
        "test_non_foreign_key_field"
      ]
    ]
  ],
  "test_any_iterable_allowed_as_argument_to_exclude": [
    [
      "tests/inline_formsets/tests.py",
      [
        "InlineFormsetFactoryTest",
        "test_any_iterable_allowed_as_argument_to_exclude"
      ]
    ]
  ],
  "test_zero_primary_key": [
    [
      "tests/inline_formsets/tests.py",
      [
        "InlineFormsetFactoryTest",
        "test_zero_primary_key"
      ]
    ]
  ],
  "test_unsaved_fk_validate_unique": [
    [
      "tests/inline_formsets/tests.py",
      [
        "InlineFormsetFactoryTest",
        "test_unsaved_fk_validate_unique"
      ]
    ]
  ],
  "test_fk_not_duplicated_in_form_fields": [
    [
      "tests/inline_formsets/tests.py",
      [
        "InlineFormsetFactoryTest",
        "test_fk_not_duplicated_in_form_fields"
      ]
    ]
  ],
  "test_fk_in_all_formset_forms": [
    [
      "tests/inline_formsets/tests.py",
      [
        "InlineFormsetFactoryTest",
        "test_fk_in_all_formset_forms"
      ]
    ]
  ],
  "inspectdb_tables_only": [
    [
      "tests/inspectdb/tests.py",
      [
        "inspectdb_tables_only"
      ]
    ]
  ],
  "special_table_only": [
    [
      "tests/inspectdb/tests.py",
      [
        "special_table_only"
      ]
    ]
  ],
  "test_stealth_table_name_filter_option": [
    [
      "tests/inspectdb/tests.py",
      [
        "InspectDBTestCase",
        "test_stealth_table_name_filter_option"
      ]
    ]
  ],
  "test_table_option": [
    [
      "tests/inspectdb/tests.py",
      [
        "InspectDBTestCase",
        "test_table_option"
      ]
    ]
  ],
  "make_field_type_asserter": [
    [
      "tests/inspectdb/tests.py",
      [
        "InspectDBTestCase",
        "make_field_type_asserter"
      ]
    ]
  ],
  "test_field_types": [
    [
      "tests/inspectdb/tests.py",
      [
        "InspectDBTestCase",
        "test_field_types"
      ]
    ]
  ],
  "test_number_field_types": [
    [
      "tests/inspectdb/tests.py",
      [
        "InspectDBTestCase",
        "test_number_field_types"
      ]
    ]
  ],
  "test_attribute_name_not_python_keyword": [
    [
      "tests/inspectdb/tests.py",
      [
        "InspectDBTestCase",
        "test_attribute_name_not_python_keyword"
      ]
    ]
  ],
  "test_digits_column_name_introspection": [
    [
      "tests/inspectdb/tests.py",
      [
        "InspectDBTestCase",
        "test_digits_column_name_introspection"
      ]
    ]
  ],
  "test_special_column_name_introspection": [
    [
      "tests/inspectdb/tests.py",
      [
        "InspectDBTestCase",
        "test_special_column_name_introspection"
      ]
    ]
  ],
  "test_table_name_introspection": [
    [
      "tests/inspectdb/tests.py",
      [
        "InspectDBTestCase",
        "test_table_name_introspection"
      ]
    ]
  ],
  "test_managed_models": [
    [
      "tests/inspectdb/tests.py",
      [
        "InspectDBTestCase",
        "test_managed_models"
      ]
    ]
  ],
  "test_unique_together_meta": [
    [
      "tests/inspectdb/tests.py",
      [
        "InspectDBTestCase",
        "test_unique_together_meta"
      ]
    ]
  ],
  "test_unsupported_unique_together": [
    [
      "tests/inspectdb/tests.py",
      [
        "InspectDBTestCase",
        "test_unsupported_unique_together"
      ]
    ]
  ],
  "test_introspection_errors": [
    [
      "tests/inspectdb/tests.py",
      [
        "InspectDBTestCase",
        "test_introspection_errors"
      ]
    ]
  ],
  "test_include_views": [
    [
      "tests/inspectdb/tests.py",
      [
        "InspectDBTransactionalTests",
        "test_include_views"
      ]
    ]
  ],
  "test_include_materialized_views": [
    [
      "tests/inspectdb/tests.py",
      [
        "InspectDBTransactionalTests",
        "test_include_materialized_views"
      ]
    ]
  ],
  "test_include_partitions": [
    [
      "tests/inspectdb/tests.py",
      [
        "InspectDBTransactionalTests",
        "test_include_partitions"
      ]
    ]
  ],
  "test_foreign_data_wrapper": [
    [
      "tests/inspectdb/tests.py",
      [
        "InspectDBTransactionalTests",
        "test_foreign_data_wrapper"
      ]
    ]
  ],
  "test_table_names": [
    [
      "tests/introspection/tests.py",
      [
        "IntrospectionTests",
        "test_table_names"
      ]
    ]
  ],
  "test_django_table_names": [
    [
      "tests/introspection/tests.py",
      [
        "IntrospectionTests",
        "test_django_table_names"
      ]
    ]
  ],
  "test_django_table_names_retval_type": [
    [
      "tests/introspection/tests.py",
      [
        "IntrospectionTests",
        "test_django_table_names_retval_type"
      ]
    ]
  ],
  "test_table_names_with_views": [
    [
      "tests/introspection/tests.py",
      [
        "IntrospectionTests",
        "test_table_names_with_views"
      ]
    ]
  ],
  "test_unmanaged_through_model": [
    [
      "tests/introspection/tests.py",
      [
        "IntrospectionTests",
        "test_unmanaged_through_model"
      ]
    ]
  ],
  "test_installed_models": [
    [
      "tests/introspection/tests.py",
      [
        "IntrospectionTests",
        "test_installed_models"
      ]
    ]
  ],
  "test_sequence_list": [
    [
      "tests/introspection/tests.py",
      [
        "IntrospectionTests",
        "test_sequence_list"
      ]
    ]
  ],
  "test_get_table_description_names": [
    [
      "tests/introspection/tests.py",
      [
        "IntrospectionTests",
        "test_get_table_description_names"
      ]
    ]
  ],
  "test_get_table_description_types": [
    [
      "tests/introspection/tests.py",
      [
        "IntrospectionTests",
        "test_get_table_description_types"
      ]
    ]
  ],
  "test_get_table_description_col_lengths": [
    [
      "tests/introspection/tests.py",
      [
        "IntrospectionTests",
        "test_get_table_description_col_lengths"
      ]
    ]
  ],
  "test_get_table_description_nullable": [
    [
      "tests/introspection/tests.py",
      [
        "IntrospectionTests",
        "test_get_table_description_nullable"
      ]
    ]
  ],
  "test_bigautofield": [
    [
      "tests/introspection/tests.py",
      [
        "IntrospectionTests",
        "test_bigautofield"
      ]
    ]
  ],
  "test_smallautofield": [
    [
      "tests/introspection/tests.py",
      [
        "IntrospectionTests",
        "test_smallautofield"
      ]
    ]
  ],
  "test_postgresql_real_type": [
    [
      "tests/introspection/tests.py",
      [
        "IntrospectionTests",
        "test_postgresql_real_type"
      ]
    ]
  ],
  "test_get_relations_alt_format": [
    [
      "tests/introspection/tests.py",
      [
        "IntrospectionTests",
        "test_get_relations_alt_format"
      ]
    ]
  ],
  "test_get_constraints_index_types": [
    [
      "tests/introspection/tests.py",
      [
        "IntrospectionTests",
        "test_get_constraints_index_types"
      ]
    ]
  ],
  "test_get_constraints_indexes_orders": [
    [
      "tests/introspection/tests.py",
      [
        "IntrospectionTests",
        "test_get_constraints_indexes_orders"
      ]
    ]
  ],
  "assertDetails": [
    [
      "tests/introspection/tests.py",
      [
        "IntrospectionTests",
        "test_get_constraints",
        "assertDetails"
      ]
    ]
  ],
  "dummy_allow_migrate": [
    [
      "tests/invalid_models_tests/test_backend_specific.py",
      [
        "dummy_allow_migrate"
      ]
    ]
  ],
  "test_check_field": [
    [
      "tests/invalid_models_tests/test_backend_specific.py",
      [
        "BackendSpecificChecksTests",
        "test_check_field"
      ]
    ]
  ],
  "test_none_column": [
    [
      "tests/invalid_models_tests/test_custom_fields.py",
      [
        "CustomFieldTest",
        "test_none_column"
      ]
    ]
  ],
  "test_IPAddressField_deprecated": [
    [
      "tests/invalid_models_tests/test_deprecated_fields.py",
      [
        "DeprecatedFieldsTests",
        "test_IPAddressField_deprecated"
      ]
    ]
  ],
  "test_CommaSeparatedIntegerField_deprecated": [
    [
      "tests/invalid_models_tests/test_deprecated_fields.py",
      [
        "DeprecatedFieldsTests",
        "test_CommaSeparatedIntegerField_deprecated"
      ]
    ]
  ],
  "get_max_column_name_length": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "get_max_column_name_length"
      ]
    ]
  ],
  "test_non_iterable": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "IndexTogetherTests",
        "test_non_iterable"
      ]
    ],
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "UniqueTogetherTests",
        "test_non_iterable"
      ]
    ]
  ],
  "test_non_list": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "IndexTogetherTests",
        "test_non_list"
      ]
    ],
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "UniqueTogetherTests",
        "test_non_list"
      ]
    ]
  ],
  "test_list_containing_non_iterable": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "IndexTogetherTests",
        "test_list_containing_non_iterable"
      ]
    ],
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "UniqueTogetherTests",
        "test_list_containing_non_iterable"
      ]
    ]
  ],
  "test_pointing_to_missing_field": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "IndexTogetherTests",
        "test_pointing_to_missing_field"
      ]
    ],
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "UniqueTogetherTests",
        "test_pointing_to_missing_field"
      ]
    ],
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "IndexesTests",
        "test_pointing_to_missing_field"
      ]
    ]
  ],
  "test_pointing_to_non_local_field": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "IndexTogetherTests",
        "test_pointing_to_non_local_field"
      ]
    ],
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "IndexesTests",
        "test_pointing_to_non_local_field"
      ]
    ]
  ],
  "test_pointing_to_m2m_field": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "IndexTogetherTests",
        "test_pointing_to_m2m_field"
      ]
    ],
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "IndexesTests",
        "test_pointing_to_m2m_field"
      ]
    ]
  ],
  "test_pointing_to_fk": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "IndexTogetherTests",
        "test_pointing_to_fk"
      ]
    ],
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "UniqueTogetherTests",
        "test_pointing_to_fk"
      ]
    ],
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "IndexesTests",
        "test_pointing_to_fk"
      ]
    ]
  ],
  "test_valid_model": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "UniqueTogetherTests",
        "test_valid_model"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "SelfReferentialM2MClashTests",
        "test_valid_model"
      ]
    ]
  ],
  "test_pointing_to_m2m": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "UniqueTogetherTests",
        "test_pointing_to_m2m"
      ]
    ]
  ],
  "test_name_constraints": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "IndexesTests",
        "test_name_constraints"
      ]
    ]
  ],
  "test_max_name_length": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "IndexesTests",
        "test_max_name_length"
      ]
    ]
  ],
  "test_index_with_condition": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "IndexesTests",
        "test_index_with_condition"
      ]
    ]
  ],
  "test_index_with_condition_required_db_features": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "IndexesTests",
        "test_index_with_condition_required_db_features"
      ]
    ]
  ],
  "test_ending_with_underscore": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "FieldNamesTests",
        "test_ending_with_underscore"
      ]
    ]
  ],
  "test_M2M_long_column_name": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "FieldNamesTests",
        "test_M2M_long_column_name"
      ]
    ]
  ],
  "test_local_field_long_column_name": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "FieldNamesTests",
        "test_local_field_long_column_name"
      ]
    ]
  ],
  "test_including_separator": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "FieldNamesTests",
        "test_including_separator"
      ]
    ]
  ],
  "test_pk": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "FieldNamesTests",
        "test_pk"
      ]
    ],
    [
      "tests/model_meta/tests.py",
      [
        "ReturningFieldsTests",
        "test_pk"
      ]
    ]
  ],
  "test_db_column_clash": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "FieldNamesTests",
        "test_db_column_clash"
      ]
    ]
  ],
  "test_field_name_clash_with_child_accessor": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "ShadowingFieldsTests",
        "test_field_name_clash_with_child_accessor"
      ]
    ]
  ],
  "test_multiinheritance_clash": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "ShadowingFieldsTests",
        "test_multiinheritance_clash"
      ]
    ]
  ],
  "test_inheritance_clash": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "ShadowingFieldsTests",
        "test_inheritance_clash"
      ]
    ]
  ],
  "test_multigeneration_inheritance": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "ShadowingFieldsTests",
        "test_multigeneration_inheritance"
      ]
    ]
  ],
  "test_id_clash": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "ShadowingFieldsTests",
        "test_id_clash"
      ]
    ]
  ],
  "test_unique_primary_key": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_unique_primary_key"
      ]
    ]
  ],
  "test_ordering_non_iterable": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_ordering_non_iterable"
      ]
    ]
  ],
  "test_just_ordering_no_errors": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_just_ordering_no_errors"
      ]
    ]
  ],
  "test_just_order_with_respect_to_no_errors": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_just_order_with_respect_to_no_errors"
      ]
    ]
  ],
  "test_ordering_with_order_with_respect_to": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_ordering_with_order_with_respect_to"
      ]
    ]
  ],
  "test_non_valid": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_non_valid"
      ]
    ]
  ],
  "test_ordering_pointing_to_missing_field": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_ordering_pointing_to_missing_field"
      ]
    ]
  ],
  "test_ordering_pointing_to_missing_foreignkey_field": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_ordering_pointing_to_missing_foreignkey_field"
      ]
    ]
  ],
  "test_ordering_pointing_to_missing_related_field": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_ordering_pointing_to_missing_related_field"
      ]
    ]
  ],
  "test_ordering_pointing_to_missing_related_model_field": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_ordering_pointing_to_missing_related_model_field"
      ]
    ]
  ],
  "test_ordering_pointing_to_non_related_field": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_ordering_pointing_to_non_related_field"
      ]
    ]
  ],
  "test_ordering_pointing_to_two_related_model_field": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_ordering_pointing_to_two_related_model_field"
      ]
    ]
  ],
  "test_ordering_pointing_multiple_times_to_model_fields": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_ordering_pointing_multiple_times_to_model_fields"
      ]
    ]
  ],
  "test_ordering_allows_registered_lookups": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_ordering_allows_registered_lookups"
      ]
    ]
  ],
  "test_ordering_pointing_to_related_model_pk": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_ordering_pointing_to_related_model_pk"
      ]
    ]
  ],
  "test_ordering_pointing_to_foreignkey_field": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_ordering_pointing_to_foreignkey_field"
      ]
    ]
  ],
  "test_name_beginning_with_underscore": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_name_beginning_with_underscore"
      ]
    ]
  ],
  "test_name_ending_with_underscore": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_name_ending_with_underscore"
      ]
    ]
  ],
  "test_name_contains_double_underscores": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_name_contains_double_underscores"
      ]
    ]
  ],
  "test_property_and_related_field_accessor_clash": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_property_and_related_field_accessor_clash"
      ]
    ]
  ],
  "test_single_primary_key": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_single_primary_key"
      ]
    ]
  ],
  "test_swappable_missing_app_name": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_swappable_missing_app_name"
      ]
    ]
  ],
  "test_swappable_missing_app": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_swappable_missing_app"
      ]
    ]
  ],
  "test_two_m2m_through_same_relationship": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_two_m2m_through_same_relationship"
      ]
    ]
  ],
  "test_two_m2m_through_same_model_with_different_through_fields": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_two_m2m_through_same_model_with_different_through_fields"
      ]
    ]
  ],
  "test_onetoone_with_parent_model": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_onetoone_with_parent_model"
      ]
    ]
  ],
  "test_onetoone_with_explicit_parent_link_parent_model": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_onetoone_with_explicit_parent_link_parent_model"
      ]
    ]
  ],
  "test_m2m_table_name_clash": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_m2m_table_name_clash"
      ]
    ]
  ],
  "test_m2m_table_name_clash_database_routers_installed": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_m2m_table_name_clash_database_routers_installed"
      ]
    ]
  ],
  "test_m2m_field_table_name_clash": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_m2m_field_table_name_clash"
      ]
    ]
  ],
  "test_m2m_field_table_name_clash_database_routers_installed": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_m2m_field_table_name_clash_database_routers_installed"
      ]
    ]
  ],
  "test_m2m_autogenerated_table_name_clash": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_m2m_autogenerated_table_name_clash"
      ]
    ]
  ],
  "test_m2m_autogenerated_table_name_clash_database_routers_installed": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_m2m_autogenerated_table_name_clash_database_routers_installed"
      ]
    ]
  ],
  "test_m2m_unmanaged_shadow_models_not_checked": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_m2m_unmanaged_shadow_models_not_checked"
      ]
    ]
  ],
  "test_m2m_to_concrete_and_proxy_allowed": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_m2m_to_concrete_and_proxy_allowed"
      ]
    ]
  ],
  "dummy_method": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_lazy_reference_checks",
        "DummyClass",
        "dummy_method"
      ]
    ]
  ],
  "test_lazy_reference_checks": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "OtherModelTests",
        "test_lazy_reference_checks"
      ]
    ]
  ],
  "test_check_constraints_required_db_features": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "ConstraintsTests",
        "test_check_constraints_required_db_features"
      ]
    ]
  ],
  "test_unique_constraint_with_condition": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "ConstraintsTests",
        "test_unique_constraint_with_condition"
      ]
    ]
  ],
  "test_unique_constraint_with_condition_required_db_features": [
    [
      "tests/invalid_models_tests/test_models.py",
      [
        "ConstraintsTests",
        "test_unique_constraint_with_condition_required_db_features"
      ]
    ]
  ],
  "test_valid_case": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "AutoFieldTests",
        "test_valid_case"
      ]
    ],
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "FileFieldTests",
        "test_valid_case"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "RawIdCheckTests",
        "test_valid_case"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "FieldsetsCheckTests",
        "test_valid_case"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "FormCheckTests",
        "test_valid_case"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "FilterVerticalCheckTests",
        "test_valid_case"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "FilterHorizontalCheckTests",
        "test_valid_case"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "RadioFieldsCheckTests",
        "test_valid_case"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "PrepopulatedFieldsCheckTests",
        "test_valid_case"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListDisplayTests",
        "test_valid_case"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListDisplayLinksCheckTests",
        "test_valid_case"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListFilterTests",
        "test_valid_case"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListPerPageCheckTests",
        "test_valid_case"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListMaxShowAllCheckTests",
        "test_valid_case"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "DateHierarchyCheckTests",
        "test_valid_case"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "OrderingCheckTests",
        "test_valid_case"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListSelectRelatedCheckTests",
        "test_valid_case"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "SaveAsCheckTests",
        "test_valid_case"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "SaveOnTopCheckTests",
        "test_valid_case"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "InlinesCheckTests",
        "test_valid_case"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "FkNameCheckTests",
        "test_valid_case"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "ExtraCheckTests",
        "test_valid_case"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "MaxNumCheckTests",
        "test_valid_case"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "MinNumCheckTests",
        "test_valid_case"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "FormsetCheckTests",
        "test_valid_case"
      ]
    ]
  ],
  "test_primary_key": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "AutoFieldTests",
        "test_primary_key"
      ]
    ],
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "FileFieldTests",
        "test_primary_key"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "IsNullTests",
        "test_primary_key"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_primary_key"
      ]
    ]
  ],
  "test_max_length_warning": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "AutoFieldTests",
        "test_max_length_warning"
      ]
    ],
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "IntegerFieldTests",
        "test_max_length_warning"
      ]
    ],
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "TextFieldTests",
        "test_max_length_warning"
      ]
    ]
  ],
  "test_valid_default_value": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "BinaryFieldTests",
        "test_valid_default_value"
      ]
    ]
  ],
  "test_str_default_value": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "BinaryFieldTests",
        "test_str_default_value"
      ]
    ]
  ],
  "test_valid_field": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "CharFieldTests",
        "test_valid_field"
      ]
    ],
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "DecimalFieldTests",
        "test_valid_field"
      ]
    ]
  ],
  "test_missing_max_length": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "CharFieldTests",
        "test_missing_max_length"
      ]
    ]
  ],
  "test_negative_max_length": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "CharFieldTests",
        "test_negative_max_length"
      ]
    ]
  ],
  "test_bad_max_length_value": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "CharFieldTests",
        "test_bad_max_length_value"
      ]
    ]
  ],
  "test_str_max_length_value": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "CharFieldTests",
        "test_str_max_length_value"
      ]
    ]
  ],
  "test_str_max_length_type": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "CharFieldTests",
        "test_str_max_length_type"
      ]
    ]
  ],
  "test_non_iterable_choices": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "CharFieldTests",
        "test_non_iterable_choices"
      ]
    ]
  ],
  "test_non_iterable_choices_two_letters": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "CharFieldTests",
        "test_non_iterable_choices_two_letters"
      ]
    ]
  ],
  "test_iterable_of_iterable_choices": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "CharFieldTests",
        "test_iterable_of_iterable_choices"
      ]
    ]
  ],
  "test_choices_containing_non_pairs": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "CharFieldTests",
        "test_choices_containing_non_pairs"
      ]
    ]
  ],
  "test_choices_containing_lazy": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "CharFieldTests",
        "test_choices_containing_lazy"
      ]
    ]
  ],
  "test_lazy_choices": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "CharFieldTests",
        "test_lazy_choices"
      ]
    ]
  ],
  "test_choices_named_group": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "CharFieldTests",
        "test_choices_named_group"
      ]
    ],
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "UUIDFieldTests",
        "test_choices_named_group"
      ]
    ]
  ],
  "test_choices_named_group_non_pairs": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "CharFieldTests",
        "test_choices_named_group_non_pairs"
      ]
    ]
  ],
  "test_choices_named_group_bad_structure": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "CharFieldTests",
        "test_choices_named_group_bad_structure"
      ]
    ]
  ],
  "test_choices_named_group_lazy": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "CharFieldTests",
        "test_choices_named_group_lazy"
      ]
    ]
  ],
  "test_choices_in_max_length": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "CharFieldTests",
        "test_choices_in_max_length"
      ]
    ]
  ],
  "test_bad_db_index_value": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "CharFieldTests",
        "test_bad_db_index_value"
      ]
    ]
  ],
  "test_bad_validators": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "CharFieldTests",
        "test_bad_validators"
      ]
    ]
  ],
  "test_too_long_char_field_under_mysql": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "CharFieldTests",
        "test_too_long_char_field_under_mysql"
      ]
    ]
  ],
  "test_auto_now_and_auto_now_add_raise_error": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "DateFieldTests",
        "test_auto_now_and_auto_now_add_raise_error"
      ]
    ]
  ],
  "test_fix_default_value": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "DateFieldTests",
        "test_fix_default_value"
      ]
    ],
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "DateTimeFieldTests",
        "test_fix_default_value"
      ]
    ],
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "TimeFieldTests",
        "test_fix_default_value"
      ]
    ]
  ],
  "test_fix_default_value_tz": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "DateFieldTests",
        "test_fix_default_value_tz"
      ]
    ],
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "DateTimeFieldTests",
        "test_fix_default_value_tz"
      ]
    ],
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "TimeFieldTests",
        "test_fix_default_value_tz"
      ]
    ]
  ],
  "test_required_attributes": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "DecimalFieldTests",
        "test_required_attributes"
      ]
    ]
  ],
  "test_negative_max_digits_and_decimal_places": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "DecimalFieldTests",
        "test_negative_max_digits_and_decimal_places"
      ]
    ]
  ],
  "test_bad_values_of_max_digits_and_decimal_places": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "DecimalFieldTests",
        "test_bad_values_of_max_digits_and_decimal_places"
      ]
    ]
  ],
  "test_decimal_places_greater_than_max_digits": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "DecimalFieldTests",
        "test_decimal_places_greater_than_max_digits"
      ]
    ]
  ],
  "test_valid_default_case": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "FileFieldTests",
        "test_valid_default_case"
      ]
    ]
  ],
  "test_upload_to_starts_with_slash": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "FileFieldTests",
        "test_upload_to_starts_with_slash"
      ]
    ]
  ],
  "test_upload_to_callable_not_checked": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "FileFieldTests",
        "test_upload_to_callable_not_checked"
      ]
    ]
  ],
  "test_forbidden_files_and_folders": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "FilePathFieldTests",
        "test_forbidden_files_and_folders"
      ]
    ]
  ],
  "test_non_nullable_blank": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "GenericIPAddressFieldTests",
        "test_non_nullable_blank"
      ]
    ]
  ],
  "test_pillow_installed": [
    [
      "tests/invalid_models_tests/test_ordinary_fields.py",
      [
        "ImageFieldTests",
        "test_pillow_installed"
      ]
    ]
  ],
  "test_valid_foreign_key_without_accessor": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_valid_foreign_key_without_accessor"
      ]
    ]
  ],
  "test_foreign_key_to_missing_model": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_foreign_key_to_missing_model"
      ]
    ]
  ],
  "test_foreign_key_to_isolate_apps_model": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_foreign_key_to_isolate_apps_model"
      ]
    ]
  ],
  "test_many_to_many_to_missing_model": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_many_to_many_to_missing_model"
      ]
    ]
  ],
  "test_many_to_many_to_isolate_apps_model": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_many_to_many_to_isolate_apps_model"
      ]
    ]
  ],
  "test_many_to_many_with_limit_choices_auto_created_no_warning": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_many_to_many_with_limit_choices_auto_created_no_warning"
      ]
    ]
  ],
  "test_many_to_many_with_useless_options": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_many_to_many_with_useless_options"
      ]
    ]
  ],
  "test_ambiguous_relationship_model_from": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_ambiguous_relationship_model_from"
      ]
    ]
  ],
  "test_ambiguous_relationship_model_to": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_ambiguous_relationship_model_to"
      ]
    ]
  ],
  "test_relationship_model_with_foreign_key_to_wrong_model": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_relationship_model_with_foreign_key_to_wrong_model"
      ]
    ]
  ],
  "test_relationship_model_missing_foreign_key": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_relationship_model_missing_foreign_key"
      ]
    ]
  ],
  "test_missing_relationship_model": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_missing_relationship_model"
      ]
    ]
  ],
  "test_missing_relationship_model_on_model_check": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_missing_relationship_model_on_model_check"
      ]
    ]
  ],
  "test_many_to_many_through_isolate_apps_model": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_many_to_many_through_isolate_apps_model"
      ]
    ]
  ],
  "test_too_many_foreign_keys_in_self_referential_model": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_too_many_foreign_keys_in_self_referential_model"
      ]
    ]
  ],
  "test_foreign_key_to_abstract_model": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_foreign_key_to_abstract_model"
      ]
    ]
  ],
  "test_m2m_to_abstract_model": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_m2m_to_abstract_model"
      ]
    ]
  ],
  "test_unique_m2m": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_unique_m2m"
      ]
    ]
  ],
  "test_foreign_key_to_non_unique_field": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_foreign_key_to_non_unique_field"
      ]
    ]
  ],
  "test_foreign_key_to_non_unique_field_under_explicit_model": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_foreign_key_to_non_unique_field_under_explicit_model"
      ]
    ]
  ],
  "test_foreign_key_to_partially_unique_field": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_foreign_key_to_partially_unique_field"
      ]
    ]
  ],
  "test_foreign_key_to_unique_field_with_meta_constraint": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_foreign_key_to_unique_field_with_meta_constraint"
      ]
    ]
  ],
  "test_foreign_object_to_non_unique_fields": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_foreign_object_to_non_unique_fields"
      ]
    ]
  ],
  "test_foreign_object_to_partially_unique_field": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_foreign_object_to_partially_unique_field"
      ]
    ]
  ],
  "test_foreign_object_to_unique_field_with_meta_constraint": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_foreign_object_to_unique_field_with_meta_constraint"
      ]
    ]
  ],
  "test_on_delete_set_null_on_non_nullable_field": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_on_delete_set_null_on_non_nullable_field"
      ]
    ]
  ],
  "test_on_delete_set_default_without_default_value": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_on_delete_set_default_without_default_value"
      ]
    ]
  ],
  "test_nullable_primary_key": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_nullable_primary_key"
      ]
    ]
  ],
  "test_not_swapped_model": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_not_swapped_model"
      ]
    ]
  ],
  "test_referencing_to_swapped_model": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_referencing_to_swapped_model"
      ]
    ]
  ],
  "test_related_field_has_invalid_related_name": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_related_field_has_invalid_related_name"
      ]
    ]
  ],
  "test_related_field_has_valid_related_name": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_related_field_has_valid_related_name"
      ]
    ]
  ],
  "test_to_fields_exist": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_to_fields_exist"
      ]
    ]
  ],
  "test_to_fields_not_checked_if_related_model_doesnt_exist": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_to_fields_not_checked_if_related_model_doesnt_exist"
      ]
    ]
  ],
  "test_invalid_related_query_name": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "RelativeFieldTests",
        "test_invalid_related_query_name"
      ]
    ]
  ],
  "test_fk_to_integer": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "AccessorClashTests",
        "test_fk_to_integer"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ReverseQueryNameClashTests",
        "test_fk_to_integer"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ExplicitRelatedNameClashTests",
        "test_fk_to_integer"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ExplicitRelatedQueryNameClashTests",
        "test_fk_to_integer"
      ]
    ]
  ],
  "test_fk_to_fk": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "AccessorClashTests",
        "test_fk_to_fk"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ReverseQueryNameClashTests",
        "test_fk_to_fk"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ExplicitRelatedNameClashTests",
        "test_fk_to_fk"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ExplicitRelatedQueryNameClashTests",
        "test_fk_to_fk"
      ]
    ]
  ],
  "test_fk_to_m2m": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "AccessorClashTests",
        "test_fk_to_m2m"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ReverseQueryNameClashTests",
        "test_fk_to_m2m"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ExplicitRelatedNameClashTests",
        "test_fk_to_m2m"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ExplicitRelatedQueryNameClashTests",
        "test_fk_to_m2m"
      ]
    ]
  ],
  "test_m2m_to_integer": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "AccessorClashTests",
        "test_m2m_to_integer"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ReverseQueryNameClashTests",
        "test_m2m_to_integer"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ExplicitRelatedNameClashTests",
        "test_m2m_to_integer"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ExplicitRelatedQueryNameClashTests",
        "test_m2m_to_integer"
      ]
    ]
  ],
  "test_m2m_to_fk": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "AccessorClashTests",
        "test_m2m_to_fk"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ReverseQueryNameClashTests",
        "test_m2m_to_fk"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ExplicitRelatedNameClashTests",
        "test_m2m_to_fk"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ExplicitRelatedQueryNameClashTests",
        "test_m2m_to_fk"
      ]
    ]
  ],
  "test_m2m_to_m2m": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "AccessorClashTests",
        "test_m2m_to_m2m"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ReverseQueryNameClashTests",
        "test_m2m_to_m2m"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ExplicitRelatedNameClashTests",
        "test_m2m_to_m2m"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ExplicitRelatedQueryNameClashTests",
        "test_m2m_to_m2m"
      ]
    ]
  ],
  "_test_accessor_clash": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "AccessorClashTests",
        "_test_accessor_clash"
      ]
    ]
  ],
  "test_clash_between_accessors": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "AccessorClashTests",
        "test_clash_between_accessors"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "SelfReferentialM2MClashTests",
        "test_clash_between_accessors"
      ]
    ]
  ],
  "test_m2m_to_m2m_with_inheritance": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "AccessorClashTests",
        "test_m2m_to_m2m_with_inheritance"
      ]
    ]
  ],
  "test_no_clash_for_hidden_related_name": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "AccessorClashTests",
        "test_no_clash_for_hidden_related_name"
      ]
    ]
  ],
  "_test_reverse_query_name_clash": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ReverseQueryNameClashTests",
        "_test_reverse_query_name_clash"
      ]
    ]
  ],
  "_test_explicit_related_name_clash": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ExplicitRelatedNameClashTests",
        "_test_explicit_related_name_clash"
      ]
    ]
  ],
  "test_hidden_fk_to_integer": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ExplicitRelatedQueryNameClashTests",
        "test_hidden_fk_to_integer"
      ]
    ]
  ],
  "test_hidden_fk_to_fk": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ExplicitRelatedQueryNameClashTests",
        "test_hidden_fk_to_fk"
      ]
    ]
  ],
  "test_hidden_fk_to_m2m": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ExplicitRelatedQueryNameClashTests",
        "test_hidden_fk_to_m2m"
      ]
    ]
  ],
  "test_hidden_m2m_to_integer": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ExplicitRelatedQueryNameClashTests",
        "test_hidden_m2m_to_integer"
      ]
    ]
  ],
  "test_hidden_m2m_to_fk": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ExplicitRelatedQueryNameClashTests",
        "test_hidden_m2m_to_fk"
      ]
    ]
  ],
  "test_hidden_m2m_to_m2m": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ExplicitRelatedQueryNameClashTests",
        "test_hidden_m2m_to_m2m"
      ]
    ]
  ],
  "_test_explicit_related_query_name_clash": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ExplicitRelatedQueryNameClashTests",
        "_test_explicit_related_query_name_clash"
      ]
    ]
  ],
  "test_accessor_clash": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "SelfReferentialM2MClashTests",
        "test_accessor_clash"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "SelfReferentialFKClashTests",
        "test_accessor_clash"
      ]
    ]
  ],
  "test_reverse_query_name_clash": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "SelfReferentialM2MClashTests",
        "test_reverse_query_name_clash"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "SelfReferentialFKClashTests",
        "test_reverse_query_name_clash"
      ]
    ]
  ],
  "test_clash_under_explicit_related_name": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "SelfReferentialM2MClashTests",
        "test_clash_under_explicit_related_name"
      ]
    ],
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "SelfReferentialFKClashTests",
        "test_clash_under_explicit_related_name"
      ]
    ]
  ],
  "test_complex_clash": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ComplexClashTests",
        "test_complex_clash"
      ]
    ]
  ],
  "test_clash_parent_link": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "ComplexClashTests",
        "test_clash_parent_link"
      ]
    ]
  ],
  "test_m2m_field_argument_validation": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "M2mThroughFieldsTests",
        "test_m2m_field_argument_validation"
      ]
    ]
  ],
  "test_invalid_order": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "M2mThroughFieldsTests",
        "test_invalid_order"
      ]
    ]
  ],
  "test_invalid_field": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "M2mThroughFieldsTests",
        "test_invalid_field"
      ]
    ],
    [
      "tests/select_related/tests.py",
      [
        "SelectRelatedValidationTests",
        "test_invalid_field"
      ]
    ]
  ],
  "test_explicit_field_names": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "M2mThroughFieldsTests",
        "test_explicit_field_names"
      ]
    ]
  ],
  "test_superset_foreign_object": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "M2mThroughFieldsTests",
        "test_superset_foreign_object"
      ]
    ]
  ],
  "test_intersection_foreign_object": [
    [
      "tests/invalid_models_tests/test_relative_fields.py",
      [
        "M2mThroughFieldsTests",
        "test_intersection_foreign_object"
      ]
    ]
  ],
  "test_foreign_key_prefetch_related": [
    [
      "tests/known_related_objects/tests.py",
      [
        "ExistingRelatedInstancesTests",
        "test_foreign_key_prefetch_related"
      ]
    ]
  ],
  "test_foreign_key_multiple_prefetch": [
    [
      "tests/known_related_objects/tests.py",
      [
        "ExistingRelatedInstancesTests",
        "test_foreign_key_multiple_prefetch"
      ]
    ]
  ],
  "test_queryset_or": [
    [
      "tests/known_related_objects/tests.py",
      [
        "ExistingRelatedInstancesTests",
        "test_queryset_or"
      ]
    ]
  ],
  "test_queryset_or_different_cached_items": [
    [
      "tests/known_related_objects/tests.py",
      [
        "ExistingRelatedInstancesTests",
        "test_queryset_or_different_cached_items"
      ]
    ]
  ],
  "test_queryset_or_only_one_with_precache": [
    [
      "tests/known_related_objects/tests.py",
      [
        "ExistingRelatedInstancesTests",
        "test_queryset_or_only_one_with_precache"
      ]
    ]
  ],
  "test_queryset_and": [
    [
      "tests/known_related_objects/tests.py",
      [
        "ExistingRelatedInstancesTests",
        "test_queryset_and"
      ]
    ]
  ],
  "test_one_to_one_select_related": [
    [
      "tests/known_related_objects/tests.py",
      [
        "ExistingRelatedInstancesTests",
        "test_one_to_one_select_related"
      ]
    ]
  ],
  "test_one_to_one_multi_select_related": [
    [
      "tests/known_related_objects/tests.py",
      [
        "ExistingRelatedInstancesTests",
        "test_one_to_one_multi_select_related"
      ]
    ]
  ],
  "test_one_to_one_prefetch_related": [
    [
      "tests/known_related_objects/tests.py",
      [
        "ExistingRelatedInstancesTests",
        "test_one_to_one_prefetch_related"
      ]
    ]
  ],
  "test_one_to_one_multi_prefetch_related": [
    [
      "tests/known_related_objects/tests.py",
      [
        "ExistingRelatedInstancesTests",
        "test_one_to_one_multi_prefetch_related"
      ]
    ]
  ],
  "test_reverse_one_to_one": [
    [
      "tests/known_related_objects/tests.py",
      [
        "ExistingRelatedInstancesTests",
        "test_reverse_one_to_one"
      ]
    ]
  ],
  "test_reverse_one_to_one_select_related": [
    [
      "tests/known_related_objects/tests.py",
      [
        "ExistingRelatedInstancesTests",
        "test_reverse_one_to_one_select_related"
      ]
    ]
  ],
  "test_reverse_one_to_one_prefetch_related": [
    [
      "tests/known_related_objects/tests.py",
      [
        "ExistingRelatedInstancesTests",
        "test_reverse_one_to_one_prefetch_related"
      ]
    ]
  ],
  "test_reverse_one_to_one_multi_select_related": [
    [
      "tests/known_related_objects/tests.py",
      [
        "ExistingRelatedInstancesTests",
        "test_reverse_one_to_one_multi_select_related"
      ]
    ]
  ],
  "test_reverse_one_to_one_multi_prefetch_related": [
    [
      "tests/known_related_objects/tests.py",
      [
        "ExistingRelatedInstancesTests",
        "test_reverse_one_to_one_multi_prefetch_related"
      ]
    ]
  ],
  "test_require_debug_false_filter": [
    [
      "tests/logging_tests/tests.py",
      [
        "LoggingFiltersTest",
        "test_require_debug_false_filter"
      ]
    ]
  ],
  "test_require_debug_true_filter": [
    [
      "tests/logging_tests/tests.py",
      [
        "LoggingFiltersTest",
        "test_require_debug_true_filter"
      ]
    ]
  ],
  "test_django_logger": [
    [
      "tests/logging_tests/tests.py",
      [
        "DefaultLoggingTests",
        "test_django_logger"
      ]
    ]
  ],
  "test_django_logger_warning": [
    [
      "tests/logging_tests/tests.py",
      [
        "DefaultLoggingTests",
        "test_django_logger_warning"
      ]
    ]
  ],
  "test_django_logger_info": [
    [
      "tests/logging_tests/tests.py",
      [
        "DefaultLoggingTests",
        "test_django_logger_info"
      ]
    ]
  ],
  "test_django_logger_debug": [
    [
      "tests/logging_tests/tests.py",
      [
        "DefaultLoggingTests",
        "test_django_logger_debug"
      ]
    ]
  ],
  "assertLogsRequest": [
    [
      "tests/logging_tests/tests.py",
      [
        "LoggingAssertionMixin",
        "assertLogsRequest"
      ]
    ]
  ],
  "test_page_found_no_warning": [
    [
      "tests/logging_tests/tests.py",
      [
        "HandlerLoggingTests",
        "test_page_found_no_warning"
      ]
    ]
  ],
  "test_redirect_no_warning": [
    [
      "tests/logging_tests/tests.py",
      [
        "HandlerLoggingTests",
        "test_redirect_no_warning"
      ]
    ]
  ],
  "test_page_not_found_warning": [
    [
      "tests/logging_tests/tests.py",
      [
        "HandlerLoggingTests",
        "test_page_not_found_warning"
      ]
    ]
  ],
  "test_page_not_found_raised": [
    [
      "tests/logging_tests/tests.py",
      [
        "HandlerLoggingTests",
        "test_page_not_found_raised"
      ]
    ]
  ],
  "test_uncaught_exception": [
    [
      "tests/logging_tests/tests.py",
      [
        "HandlerLoggingTests",
        "test_uncaught_exception"
      ]
    ]
  ],
  "test_internal_server_error": [
    [
      "tests/logging_tests/tests.py",
      [
        "HandlerLoggingTests",
        "test_internal_server_error"
      ]
    ]
  ],
  "test_internal_server_error_599": [
    [
      "tests/logging_tests/tests.py",
      [
        "HandlerLoggingTests",
        "test_internal_server_error_599"
      ]
    ]
  ],
  "test_multi_part_parser_error": [
    [
      "tests/logging_tests/tests.py",
      [
        "HandlerLoggingTests",
        "test_multi_part_parser_error"
      ]
    ]
  ],
  "test_i18n_page_found_no_warning": [
    [
      "tests/logging_tests/tests.py",
      [
        "I18nLoggingTests",
        "test_i18n_page_found_no_warning"
      ]
    ]
  ],
  "test_i18n_page_not_found_warning": [
    [
      "tests/logging_tests/tests.py",
      [
        "I18nLoggingTests",
        "test_i18n_page_not_found_warning"
      ]
    ]
  ],
  "test_sense": [
    [
      "tests/logging_tests/tests.py",
      [
        "CallbackFilterTest",
        "test_sense"
      ]
    ]
  ],
  "test_passes_on_record": [
    [
      "tests/logging_tests/tests.py",
      [
        "CallbackFilterTest",
        "test_passes_on_record"
      ]
    ]
  ],
  "get_admin_email_handler": [
    [
      "tests/logging_tests/tests.py",
      [
        "AdminEmailHandlerTest",
        "get_admin_email_handler"
      ]
    ]
  ],
  "test_fail_silently": [
    [
      "tests/logging_tests/tests.py",
      [
        "AdminEmailHandlerTest",
        "test_fail_silently"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_slice.py",
      [
        "FunctionTests",
        "test_fail_silently"
      ]
    ]
  ],
  "test_accepts_args": [
    [
      "tests/logging_tests/tests.py",
      [
        "AdminEmailHandlerTest",
        "test_accepts_args"
      ]
    ]
  ],
  "test_accepts_args_and_request": [
    [
      "tests/logging_tests/tests.py",
      [
        "AdminEmailHandlerTest",
        "test_accepts_args_and_request"
      ]
    ]
  ],
  "test_subject_accepts_newlines": [
    [
      "tests/logging_tests/tests.py",
      [
        "AdminEmailHandlerTest",
        "test_subject_accepts_newlines"
      ]
    ]
  ],
  "my_mail_admins": [
    [
      "tests/logging_tests/tests.py",
      [
        "AdminEmailHandlerTest",
        "test_uses_custom_email_backend",
        "my_mail_admins"
      ]
    ]
  ],
  "test_uses_custom_email_backend": [
    [
      "tests/logging_tests/tests.py",
      [
        "AdminEmailHandlerTest",
        "test_uses_custom_email_backend"
      ]
    ]
  ],
  "test_emit_non_ascii": [
    [
      "tests/logging_tests/tests.py",
      [
        "AdminEmailHandlerTest",
        "test_emit_non_ascii"
      ]
    ]
  ],
  "test_customize_send_mail_method": [
    [
      "tests/logging_tests/tests.py",
      [
        "AdminEmailHandlerTest",
        "test_customize_send_mail_method"
      ]
    ]
  ],
  "test_disallowed_host_doesnt_crash": [
    [
      "tests/logging_tests/tests.py",
      [
        "AdminEmailHandlerTest",
        "test_disallowed_host_doesnt_crash"
      ]
    ]
  ],
  "test_default_exception_reporter_class": [
    [
      "tests/logging_tests/tests.py",
      [
        "AdminEmailHandlerTest",
        "test_default_exception_reporter_class"
      ]
    ]
  ],
  "test_custom_exception_reporter_is_used": [
    [
      "tests/logging_tests/tests.py",
      [
        "AdminEmailHandlerTest",
        "test_custom_exception_reporter_is_used"
      ]
    ]
  ],
  "test_circular_dependency": [
    [
      "tests/logging_tests/tests.py",
      [
        "SettingsConfigTest",
        "test_circular_dependency"
      ]
    ]
  ],
  "dictConfig": [
    [
      "tests/logging_tests/tests.py",
      [
        "dictConfig"
      ]
    ]
  ],
  "test_configure_initializes_logging": [
    [
      "tests/logging_tests/tests.py",
      [
        "SetupConfigureLogging",
        "test_configure_initializes_logging"
      ]
    ]
  ],
  "test_suspicious_operation_creates_log_message": [
    [
      "tests/logging_tests/tests.py",
      [
        "SecurityLoggerTest",
        "test_suspicious_operation_creates_log_message"
      ]
    ]
  ],
  "test_suspicious_operation_uses_sublogger": [
    [
      "tests/logging_tests/tests.py",
      [
        "SecurityLoggerTest",
        "test_suspicious_operation_uses_sublogger"
      ]
    ]
  ],
  "test_suspicious_email_admins": [
    [
      "tests/logging_tests/tests.py",
      [
        "SecurityLoggerTest",
        "test_suspicious_email_admins"
      ]
    ]
  ],
  "test_custom_logging": [
    [
      "tests/logging_tests/tests.py",
      [
        "SettingsCustomLoggingTest",
        "test_custom_logging"
      ]
    ]
  ],
  "test_server_formatter_styles": [
    [
      "tests/logging_tests/tests.py",
      [
        "LogFormattersTests",
        "test_server_formatter_styles"
      ]
    ]
  ],
  "test_server_formatter_default_format": [
    [
      "tests/logging_tests/tests.py",
      [
        "LogFormattersTests",
        "test_server_formatter_default_format"
      ]
    ]
  ],
  "innocent": [
    [
      "tests/logging_tests/views.py",
      [
        "innocent"
      ]
    ]
  ],
  "suspicious_spec": [
    [
      "tests/logging_tests/views.py",
      [
        "suspicious_spec"
      ]
    ]
  ],
  "uncaught_exception": [
    [
      "tests/logging_tests/views.py",
      [
        "uncaught_exception"
      ]
    ]
  ],
  "internal_server_error": [
    [
      "tests/logging_tests/views.py",
      [
        "internal_server_error"
      ]
    ]
  ],
  "multi_part_parser_error": [
    [
      "tests/logging_tests/views.py",
      [
        "multi_part_parser_error"
      ]
    ]
  ],
  "does_not_exist_raised": [
    [
      "tests/logging_tests/views.py",
      [
        "does_not_exist_raised"
      ]
    ]
  ],
  "test_gt": [
    [
      "tests/lookup/test_decimalfield.py",
      [
        "DecimalFieldLookupTests",
        "test_gt"
      ]
    ],
    [
      "tests/model_fields/test_durationfield.py",
      [
        "TestQuerying",
        "test_gt"
      ]
    ],
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_gt"
      ]
    ],
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase",
        "test_gt"
      ]
    ]
  ],
  "test_gte": [
    [
      "tests/lookup/test_decimalfield.py",
      [
        "DecimalFieldLookupTests",
        "test_gte"
      ]
    ]
  ],
  "test_lt": [
    [
      "tests/lookup/test_decimalfield.py",
      [
        "DecimalFieldLookupTests",
        "test_lt"
      ]
    ],
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_lt"
      ]
    ],
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase",
        "test_lt"
      ]
    ]
  ],
  "test_lte": [
    [
      "tests/lookup/test_decimalfield.py",
      [
        "DecimalFieldLookupTests",
        "test_lte"
      ]
    ]
  ],
  "test_get_bound_params": [
    [
      "tests/lookup/test_lookups.py",
      [
        "YearLookupTests",
        "test_get_bound_params"
      ]
    ]
  ],
  "test_hour_lookups": [
    [
      "tests/lookup/test_timefield.py",
      [
        "TimeFieldLookupTests",
        "test_hour_lookups"
      ]
    ]
  ],
  "test_minute_lookups": [
    [
      "tests/lookup/test_timefield.py",
      [
        "TimeFieldLookupTests",
        "test_minute_lookups"
      ]
    ]
  ],
  "test_second_lookups": [
    [
      "tests/lookup/test_timefield.py",
      [
        "TimeFieldLookupTests",
        "test_second_lookups"
      ]
    ]
  ],
  "test_exists": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_exists"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "PrefetchRelatedTests",
        "test_exists"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "ExistsSql",
        "test_exists"
      ]
    ]
  ],
  "test_lookup_int_as_str": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_lookup_int_as_str"
      ]
    ]
  ],
  "test_lookup_date_as_str": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_lookup_date_as_str"
      ]
    ]
  ],
  "test_iterator": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_iterator"
      ]
    ],
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "test_iterator"
      ]
    ]
  ],
  "test_in_bulk_lots_of_ids": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_in_bulk_lots_of_ids"
      ]
    ]
  ],
  "test_in_bulk_with_field": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_in_bulk_with_field"
      ]
    ]
  ],
  "test_in_bulk_meta_constraint": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_in_bulk_meta_constraint"
      ]
    ]
  ],
  "test_in_bulk_non_unique_field": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_in_bulk_non_unique_field"
      ]
    ]
  ],
  "test_in_bulk_non_unique_meta_constaint": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_in_bulk_non_unique_meta_constaint"
      ]
    ]
  ],
  "test_get_next_previous_by": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_get_next_previous_by"
      ]
    ]
  ],
  "test_none": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_none"
      ]
    ],
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_none"
      ]
    ],
    [
      "tests/settings_tests/tests.py",
      [
        "SecureProxySslHeaderTest",
        "test_none"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_default.py",
      [
        "FunctionTests",
        "test_none"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_default_if_none.py",
      [
        "FunctionTests",
        "test_none"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_yesno.py",
      [
        "FunctionTests",
        "test_none"
      ]
    ],
    [
      "tests/utils_tests/test_http.py",
      [
        "URLEncodeTests",
        "test_none"
      ]
    ],
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "SimpleLazyObjectTestCase",
        "test_none"
      ]
    ]
  ],
  "test_in_different_database": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_in_different_database"
      ]
    ]
  ],
  "test_in_keeps_value_ordering": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_in_keeps_value_ordering"
      ]
    ]
  ],
  "test_error_messages": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_error_messages"
      ]
    ]
  ],
  "test_unsupported_lookups": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_unsupported_lookups"
      ]
    ]
  ],
  "test_relation_nested_lookup_error": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_relation_nested_lookup_error"
      ]
    ]
  ],
  "test_regex": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_regex"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_regex"
      ]
    ]
  ],
  "test_regex_backreferencing": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_regex_backreferencing"
      ]
    ]
  ],
  "test_regex_null": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_regex_null"
      ]
    ]
  ],
  "test_regex_non_string": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_regex_non_string"
      ]
    ]
  ],
  "test_regex_non_ascii": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_regex_non_ascii"
      ]
    ]
  ],
  "test_nonfield_lookups": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_nonfield_lookups"
      ]
    ]
  ],
  "test_lookup_collision": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_lookup_collision"
      ]
    ]
  ],
  "test_chain_date_time_lookups": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_chain_date_time_lookups"
      ]
    ]
  ],
  "test_exact_none_transform": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_exact_none_transform"
      ]
    ]
  ],
  "test_exact_sliced_queryset_limit_one": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_exact_sliced_queryset_limit_one"
      ]
    ]
  ],
  "test_exact_sliced_queryset_limit_one_offset": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_exact_sliced_queryset_limit_one_offset"
      ]
    ]
  ],
  "test_exact_sliced_queryset_not_limited_to_one": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_exact_sliced_queryset_not_limited_to_one"
      ]
    ]
  ],
  "test_custom_field_none_rhs": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_custom_field_none_rhs"
      ]
    ]
  ],
  "test_pattern_lookups_with_substr": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_pattern_lookups_with_substr"
      ]
    ]
  ],
  "test_custom_lookup_none_rhs": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_custom_lookup_none_rhs"
      ]
    ]
  ],
  "test_exact_exists": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_exact_exists"
      ]
    ]
  ],
  "test_nested_outerref_lhs": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_nested_outerref_lhs"
      ]
    ]
  ],
  "test_exact_query_rhs_with_selected_columns": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_exact_query_rhs_with_selected_columns"
      ]
    ]
  ],
  "test_isnull_non_boolean_value": [
    [
      "tests/lookup/tests.py",
      [
        "LookupTests",
        "test_isnull_non_boolean_value"
      ]
    ]
  ],
  "test_related_objects_have_name_attribute": [
    [
      "tests/m2m_and_m2o/tests.py",
      [
        "RelatedObjectTests",
        "test_related_objects_have_name_attribute"
      ]
    ]
  ],
  "test_m2m_and_m2o": [
    [
      "tests/m2m_and_m2o/tests.py",
      [
        "RelatedObjectTests",
        "test_m2m_and_m2o"
      ]
    ]
  ],
  "test_m2m_with_unicode_reference": [
    [
      "tests/m2m_and_m2o/tests.py",
      [
        "RelatedObjectUnicodeTests",
        "test_m2m_with_unicode_reference"
      ]
    ]
  ],
  "test_intermediary": [
    [
      "tests/m2m_intermediary/tests.py",
      [
        "M2MIntermediaryTests",
        "test_intermediary"
      ]
    ]
  ],
  "test_multiple": [
    [
      "tests/m2m_multiple/tests.py",
      [
        "M2MMultipleTests",
        "test_multiple"
      ]
    ]
  ],
  "test_recursive_m2m_all": [
    [
      "tests/m2m_recursive/tests.py",
      [
        "RecursiveM2MTests",
        "test_recursive_m2m_all"
      ]
    ],
    [
      "tests/m2m_recursive/tests.py",
      [
        "RecursiveSymmetricalM2MThroughTests",
        "test_recursive_m2m_all"
      ]
    ]
  ],
  "test_recursive_m2m_reverse_add": [
    [
      "tests/m2m_recursive/tests.py",
      [
        "RecursiveM2MTests",
        "test_recursive_m2m_reverse_add"
      ]
    ],
    [
      "tests/m2m_recursive/tests.py",
      [
        "RecursiveSymmetricalM2MThroughTests",
        "test_recursive_m2m_reverse_add"
      ]
    ]
  ],
  "test_recursive_m2m_remove": [
    [
      "tests/m2m_recursive/tests.py",
      [
        "RecursiveM2MTests",
        "test_recursive_m2m_remove"
      ]
    ],
    [
      "tests/m2m_recursive/tests.py",
      [
        "RecursiveSymmetricalM2MThroughTests",
        "test_recursive_m2m_remove"
      ]
    ]
  ],
  "test_recursive_m2m_clear": [
    [
      "tests/m2m_recursive/tests.py",
      [
        "RecursiveM2MTests",
        "test_recursive_m2m_clear"
      ]
    ],
    [
      "tests/m2m_recursive/tests.py",
      [
        "RecursiveSymmetricalM2MThroughTests",
        "test_recursive_m2m_clear"
      ]
    ]
  ],
  "test_recursive_m2m_add_via_related_name": [
    [
      "tests/m2m_recursive/tests.py",
      [
        "RecursiveM2MTests",
        "test_recursive_m2m_add_via_related_name"
      ]
    ]
  ],
  "test_recursive_m2m_add_in_both_directions": [
    [
      "tests/m2m_recursive/tests.py",
      [
        "RecursiveM2MTests",
        "test_recursive_m2m_add_in_both_directions"
      ]
    ]
  ],
  "test_recursive_m2m_related_to_self": [
    [
      "tests/m2m_recursive/tests.py",
      [
        "RecursiveM2MTests",
        "test_recursive_m2m_related_to_self"
      ]
    ]
  ],
  "test_recursive_m2m_set": [
    [
      "tests/m2m_recursive/tests.py",
      [
        "RecursiveSymmetricalM2MThroughTests",
        "test_recursive_m2m_set"
      ]
    ]
  ],
  "split": [
    [
      "tests/m2m_regress/models.py",
      [
        "BadModelWithSplit",
        "split"
      ]
    ]
  ],
  "test_multiple_m2m": [
    [
      "tests/m2m_regress/tests.py",
      [
        "M2MRegressionTests",
        "test_multiple_m2m"
      ]
    ]
  ],
  "test_internal_related_name_not_in_error_msg": [
    [
      "tests/m2m_regress/tests.py",
      [
        "M2MRegressionTests",
        "test_internal_related_name_not_in_error_msg"
      ]
    ]
  ],
  "test_m2m_inheritance_symmetry": [
    [
      "tests/m2m_regress/tests.py",
      [
        "M2MRegressionTests",
        "test_m2m_inheritance_symmetry"
      ]
    ]
  ],
  "test_m2m_pk_field_type": [
    [
      "tests/m2m_regress/tests.py",
      [
        "M2MRegressionTests",
        "test_m2m_pk_field_type"
      ]
    ]
  ],
  "test_add_m2m_with_base_class": [
    [
      "tests/m2m_regress/tests.py",
      [
        "M2MRegressionTests",
        "test_add_m2m_with_base_class"
      ]
    ]
  ],
  "test_manager_class_caching": [
    [
      "tests/m2m_regress/tests.py",
      [
        "M2MRegressionTests",
        "test_manager_class_caching"
      ]
    ],
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_manager_class_caching"
      ]
    ]
  ],
  "test_m2m_abstract_split": [
    [
      "tests/m2m_regress/tests.py",
      [
        "M2MRegressionTests",
        "test_m2m_abstract_split"
      ]
    ]
  ],
  "test_assigning_invalid_data_to_m2m_doesnt_clear_existing_relations": [
    [
      "tests/m2m_regress/tests.py",
      [
        "M2MRegressionTests",
        "test_assigning_invalid_data_to_m2m_doesnt_clear_existing_relations"
      ]
    ]
  ],
  "test_multiple_forwards_only_m2m": [
    [
      "tests/m2m_regress/tests.py",
      [
        "M2MRegressionTests",
        "test_multiple_forwards_only_m2m"
      ]
    ]
  ],
  "m2m_changed_signal_receiver": [
    [
      "tests/m2m_signals/tests.py",
      [
        "ManyToManySignalsTest",
        "m2m_changed_signal_receiver"
      ]
    ]
  ],
  "_initialize_signal_car": [
    [
      "tests/m2m_signals/tests.py",
      [
        "ManyToManySignalsTest",
        "_initialize_signal_car"
      ]
    ]
  ],
  "handler": [
    [
      "tests/m2m_signals/tests.py",
      [
        "ManyToManySignalsTest",
        "test_pk_set_on_repeated_add_remove",
        "handler"
      ]
    ]
  ],
  "test_pk_set_on_repeated_add_remove": [
    [
      "tests/m2m_signals/tests.py",
      [
        "ManyToManySignalsTest",
        "test_pk_set_on_repeated_add_remove"
      ]
    ]
  ],
  "test_m2m_relations_add_remove_clear": [
    [
      "tests/m2m_signals/tests.py",
      [
        "ManyToManySignalsTest",
        "test_m2m_relations_add_remove_clear"
      ]
    ]
  ],
  "test_m2m_relations_signals_remove_relation": [
    [
      "tests/m2m_signals/tests.py",
      [
        "ManyToManySignalsTest",
        "test_m2m_relations_signals_remove_relation"
      ]
    ]
  ],
  "test_m2m_relations_signals_give_the_self_vw_some_optional_parts": [
    [
      "tests/m2m_signals/tests.py",
      [
        "ManyToManySignalsTest",
        "test_m2m_relations_signals_give_the_self_vw_some_optional_parts"
      ]
    ]
  ],
  "test_m2m_relations_signals_reverse_relation_with_custom_related_name": [
    [
      "tests/m2m_signals/tests.py",
      [
        "ManyToManySignalsTest",
        "test_m2m_relations_signals_reverse_relation_with_custom_related_name"
      ]
    ]
  ],
  "test_m2m_relations_signals_clear_all_parts_of_the_self_vw": [
    [
      "tests/m2m_signals/tests.py",
      [
        "ManyToManySignalsTest",
        "test_m2m_relations_signals_clear_all_parts_of_the_self_vw"
      ]
    ]
  ],
  "test_m2m_relations_signals_all_the_doors_off_of_cars": [
    [
      "tests/m2m_signals/tests.py",
      [
        "ManyToManySignalsTest",
        "test_m2m_relations_signals_all_the_doors_off_of_cars"
      ]
    ]
  ],
  "test_m2m_relations_signals_reverse_relation": [
    [
      "tests/m2m_signals/tests.py",
      [
        "ManyToManySignalsTest",
        "test_m2m_relations_signals_reverse_relation"
      ]
    ]
  ],
  "test_m2m_relations_signals_alternative_ways": [
    [
      "tests/m2m_signals/tests.py",
      [
        "ManyToManySignalsTest",
        "test_m2m_relations_signals_alternative_ways"
      ]
    ]
  ],
  "test_m2m_relations_signals_clearing_removing": [
    [
      "tests/m2m_signals/tests.py",
      [
        "ManyToManySignalsTest",
        "test_m2m_relations_signals_clearing_removing"
      ]
    ]
  ],
  "test_m2m_relations_signals_when_inheritance": [
    [
      "tests/m2m_signals/tests.py",
      [
        "ManyToManySignalsTest",
        "test_m2m_relations_signals_when_inheritance"
      ]
    ]
  ],
  "_initialize_signal_person": [
    [
      "tests/m2m_signals/tests.py",
      [
        "ManyToManySignalsTest",
        "_initialize_signal_person"
      ]
    ]
  ],
  "test_m2m_relations_with_self_add_friends": [
    [
      "tests/m2m_signals/tests.py",
      [
        "ManyToManySignalsTest",
        "test_m2m_relations_with_self_add_friends"
      ]
    ]
  ],
  "test_m2m_relations_with_self_add_fan": [
    [
      "tests/m2m_signals/tests.py",
      [
        "ManyToManySignalsTest",
        "test_m2m_relations_with_self_add_fan"
      ]
    ]
  ],
  "test_m2m_relations_with_self_add_idols": [
    [
      "tests/m2m_signals/tests.py",
      [
        "ManyToManySignalsTest",
        "test_m2m_relations_with_self_add_idols"
      ]
    ]
  ],
  "test_retrieve_intermediate_items": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_retrieve_intermediate_items"
      ]
    ]
  ],
  "test_get_on_intermediate_model": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_get_on_intermediate_model"
      ]
    ]
  ],
  "test_filter_on_intermediate_model": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_filter_on_intermediate_model"
      ]
    ]
  ],
  "test_add_on_m2m_with_intermediate_model": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_add_on_m2m_with_intermediate_model"
      ]
    ]
  ],
  "test_add_on_m2m_with_intermediate_model_callable_through_default": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_add_on_m2m_with_intermediate_model_callable_through_default"
      ]
    ]
  ],
  "test_set_on_m2m_with_intermediate_model_callable_through_default": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_set_on_m2m_with_intermediate_model_callable_through_default"
      ]
    ]
  ],
  "test_add_on_m2m_with_intermediate_model_value_required": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_add_on_m2m_with_intermediate_model_value_required"
      ]
    ]
  ],
  "test_add_on_m2m_with_intermediate_model_value_required_fails": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_add_on_m2m_with_intermediate_model_value_required_fails"
      ]
    ]
  ],
  "test_create_on_m2m_with_intermediate_model": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_create_on_m2m_with_intermediate_model"
      ]
    ]
  ],
  "test_create_on_m2m_with_intermediate_model_callable_through_default": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_create_on_m2m_with_intermediate_model_callable_through_default"
      ]
    ]
  ],
  "test_create_on_m2m_with_intermediate_model_value_required": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_create_on_m2m_with_intermediate_model_value_required"
      ]
    ]
  ],
  "test_create_on_m2m_with_intermediate_model_value_required_fails": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_create_on_m2m_with_intermediate_model_value_required_fails"
      ]
    ]
  ],
  "test_get_or_create_on_m2m_with_intermediate_model_value_required": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_get_or_create_on_m2m_with_intermediate_model_value_required"
      ]
    ]
  ],
  "test_get_or_create_on_m2m_with_intermediate_model_value_required_fails": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_get_or_create_on_m2m_with_intermediate_model_value_required_fails"
      ]
    ]
  ],
  "test_update_or_create_on_m2m_with_intermediate_model_value_required": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_update_or_create_on_m2m_with_intermediate_model_value_required"
      ]
    ]
  ],
  "test_update_or_create_on_m2m_with_intermediate_model_value_required_fails": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_update_or_create_on_m2m_with_intermediate_model_value_required_fails"
      ]
    ]
  ],
  "test_remove_on_m2m_with_intermediate_model": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_remove_on_m2m_with_intermediate_model"
      ]
    ]
  ],
  "test_remove_on_m2m_with_intermediate_model_multiple": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_remove_on_m2m_with_intermediate_model_multiple"
      ]
    ]
  ],
  "test_set_on_m2m_with_intermediate_model": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_set_on_m2m_with_intermediate_model"
      ]
    ]
  ],
  "test_set_on_m2m_with_intermediate_model_value_required": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_set_on_m2m_with_intermediate_model_value_required"
      ]
    ]
  ],
  "test_set_on_m2m_with_intermediate_model_value_required_fails": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_set_on_m2m_with_intermediate_model_value_required_fails"
      ]
    ]
  ],
  "test_clear_removes_all_the_m2m_relationships": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_clear_removes_all_the_m2m_relationships"
      ]
    ]
  ],
  "test_retrieve_reverse_intermediate_items": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_retrieve_reverse_intermediate_items"
      ]
    ]
  ],
  "test_add_on_reverse_m2m_with_intermediate_model": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_add_on_reverse_m2m_with_intermediate_model"
      ]
    ]
  ],
  "test_create_on_reverse_m2m_with_intermediate_model": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_create_on_reverse_m2m_with_intermediate_model"
      ]
    ]
  ],
  "test_remove_on_reverse_m2m_with_intermediate_model": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_remove_on_reverse_m2m_with_intermediate_model"
      ]
    ]
  ],
  "test_set_on_reverse_m2m_with_intermediate_model": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_set_on_reverse_m2m_with_intermediate_model"
      ]
    ]
  ],
  "test_clear_on_reverse_removes_all_the_m2m_relationships": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_clear_on_reverse_removes_all_the_m2m_relationships"
      ]
    ]
  ],
  "test_query_model_by_attribute_name_of_related_model": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_query_model_by_attribute_name_of_related_model"
      ]
    ]
  ],
  "test_order_by_relational_field_through_model": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_order_by_relational_field_through_model"
      ]
    ]
  ],
  "test_query_first_model_by_intermediate_model_attribute": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_query_first_model_by_intermediate_model_attribute"
      ]
    ]
  ],
  "test_query_second_model_by_intermediate_model_attribute": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_query_second_model_by_intermediate_model_attribute"
      ]
    ]
  ],
  "test_query_model_by_related_model_name": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_query_model_by_related_model_name"
      ]
    ]
  ],
  "test_query_model_by_custom_related_name": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_query_model_by_custom_related_name"
      ]
    ]
  ],
  "test_query_model_by_intermediate_can_return_non_unique_queryset": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_query_model_by_intermediate_can_return_non_unique_queryset"
      ]
    ]
  ],
  "test_custom_related_name_forward_empty_qs": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_custom_related_name_forward_empty_qs"
      ]
    ]
  ],
  "test_custom_related_name_reverse_empty_qs": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_custom_related_name_reverse_empty_qs"
      ]
    ]
  ],
  "test_custom_related_name_forward_non_empty_qs": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_custom_related_name_forward_non_empty_qs"
      ]
    ]
  ],
  "test_custom_related_name_reverse_non_empty_qs": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_custom_related_name_reverse_non_empty_qs"
      ]
    ]
  ],
  "test_custom_related_name_doesnt_conflict_with_fky_related_name": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_custom_related_name_doesnt_conflict_with_fky_related_name"
      ]
    ]
  ],
  "test_through_fields": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughTests",
        "test_through_fields"
      ]
    ]
  ],
  "test_self_referential_empty_qs": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughReferentialTests",
        "test_self_referential_empty_qs"
      ]
    ]
  ],
  "test_self_referential_non_symmetrical_first_side": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughReferentialTests",
        "test_self_referential_non_symmetrical_first_side"
      ]
    ]
  ],
  "test_self_referential_non_symmetrical_second_side": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughReferentialTests",
        "test_self_referential_non_symmetrical_second_side"
      ]
    ]
  ],
  "test_self_referential_non_symmetrical_clear_first_side": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughReferentialTests",
        "test_self_referential_non_symmetrical_clear_first_side"
      ]
    ]
  ],
  "test_self_referential_non_symmetrical_both": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughReferentialTests",
        "test_self_referential_non_symmetrical_both"
      ]
    ]
  ],
  "test_through_fields_self_referential": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughReferentialTests",
        "test_through_fields_self_referential"
      ]
    ]
  ],
  "test_self_referential_symmetrical": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughReferentialTests",
        "test_self_referential_symmetrical"
      ]
    ]
  ],
  "test_add_on_symmetrical_m2m_with_intermediate_model": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughReferentialTests",
        "test_add_on_symmetrical_m2m_with_intermediate_model"
      ]
    ]
  ],
  "test_set_on_symmetrical_m2m_with_intermediate_model": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughReferentialTests",
        "test_set_on_symmetrical_m2m_with_intermediate_model"
      ]
    ]
  ],
  "test_retrieval": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughToFieldsTests",
        "test_retrieval"
      ]
    ]
  ],
  "test_choices": [
    [
      "tests/m2m_through/tests.py",
      [
        "M2mThroughToFieldsTests",
        "test_choices"
      ]
    ],
    [
      "tests/model_fields/tests.py",
      [
        "ChoicesTests",
        "test_choices"
      ]
    ],
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_choices"
      ]
    ]
  ],
  "test_m2m_query": [
    [
      "tests/m2m_through_regress/test_multitable.py",
      [
        "MultiTableTests",
        "test_m2m_query"
      ]
    ]
  ],
  "test_m2m_reverse_query": [
    [
      "tests/m2m_through_regress/test_multitable.py",
      [
        "MultiTableTests",
        "test_m2m_reverse_query"
      ]
    ]
  ],
  "test_m2m_query_proxied": [
    [
      "tests/m2m_through_regress/test_multitable.py",
      [
        "MultiTableTests",
        "test_m2m_query_proxied"
      ]
    ]
  ],
  "test_m2m_reverse_query_proxied": [
    [
      "tests/m2m_through_regress/test_multitable.py",
      [
        "MultiTableTests",
        "test_m2m_reverse_query_proxied"
      ]
    ]
  ],
  "test_m2m_prefetch_proxied": [
    [
      "tests/m2m_through_regress/test_multitable.py",
      [
        "MultiTableTests",
        "test_m2m_prefetch_proxied"
      ]
    ]
  ],
  "test_m2m_prefetch_reverse_proxied": [
    [
      "tests/m2m_through_regress/test_multitable.py",
      [
        "MultiTableTests",
        "test_m2m_prefetch_reverse_proxied"
      ]
    ]
  ],
  "test_retrieve_reverse_m2m_items": [
    [
      "tests/m2m_through_regress/tests.py",
      [
        "M2MThroughTestCase",
        "test_retrieve_reverse_m2m_items"
      ]
    ]
  ],
  "test_retrieve_forward_m2m_items": [
    [
      "tests/m2m_through_regress/tests.py",
      [
        "M2MThroughTestCase",
        "test_retrieve_forward_m2m_items"
      ]
    ]
  ],
  "test_retrieve_reverse_m2m_items_via_custom_id_intermediary": [
    [
      "tests/m2m_through_regress/tests.py",
      [
        "M2MThroughTestCase",
        "test_retrieve_reverse_m2m_items_via_custom_id_intermediary"
      ]
    ]
  ],
  "test_retrieve_forward_m2m_items_via_custom_id_intermediary": [
    [
      "tests/m2m_through_regress/tests.py",
      [
        "M2MThroughTestCase",
        "test_retrieve_forward_m2m_items_via_custom_id_intermediary"
      ]
    ]
  ],
  "test_join_trimming_forwards": [
    [
      "tests/m2m_through_regress/tests.py",
      [
        "M2MThroughTestCase",
        "test_join_trimming_forwards"
      ]
    ]
  ],
  "test_join_trimming_reverse": [
    [
      "tests/m2m_through_regress/tests.py",
      [
        "M2MThroughTestCase",
        "test_join_trimming_reverse"
      ]
    ]
  ],
  "test_serialization": [
    [
      "tests/m2m_through_regress/tests.py",
      [
        "M2MThroughSerializationTestCase",
        "test_serialization"
      ]
    ],
    [
      "tests/test_runner/tests.py",
      [
        "SetupDatabasesTests",
        "test_serialization"
      ]
    ]
  ],
  "test_to_field_reverse": [
    [
      "tests/m2m_through_regress/tests.py",
      [
        "ToFieldThroughTests",
        "test_to_field_reverse"
      ]
    ]
  ],
  "test_to_field_clear_reverse": [
    [
      "tests/m2m_through_regress/tests.py",
      [
        "ToFieldThroughTests",
        "test_to_field_clear_reverse"
      ]
    ]
  ],
  "test_to_field_clear": [
    [
      "tests/m2m_through_regress/tests.py",
      [
        "ToFieldThroughTests",
        "test_to_field_clear"
      ]
    ]
  ],
  "test_m2m_relations_unusable_on_null_to_field": [
    [
      "tests/m2m_through_regress/tests.py",
      [
        "ToFieldThroughTests",
        "test_m2m_relations_unusable_on_null_to_field"
      ]
    ]
  ],
  "test_m2m_relations_unusable_on_null_pk_obj": [
    [
      "tests/m2m_through_regress/tests.py",
      [
        "ToFieldThroughTests",
        "test_m2m_relations_unusable_on_null_pk_obj"
      ]
    ]
  ],
  "test_add_related_null": [
    [
      "tests/m2m_through_regress/tests.py",
      [
        "ToFieldThroughTests",
        "test_add_related_null"
      ]
    ]
  ],
  "test_add_reverse": [
    [
      "tests/m2m_through_regress/tests.py",
      [
        "ToFieldThroughTests",
        "test_add_reverse"
      ]
    ]
  ],
  "test_add_null_reverse": [
    [
      "tests/m2m_through_regress/tests.py",
      [
        "ToFieldThroughTests",
        "test_add_null_reverse"
      ]
    ]
  ],
  "test_add_null_reverse_related": [
    [
      "tests/m2m_through_regress/tests.py",
      [
        "ToFieldThroughTests",
        "test_add_null_reverse_related"
      ]
    ]
  ],
  "test_remove": [
    [
      "tests/m2m_through_regress/tests.py",
      [
        "ToFieldThroughTests",
        "test_remove"
      ]
    ],
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_remove"
      ]
    ],
    [
      "tests/postgres_tests/test_operations.py",
      [
        "RemoveIndexConcurrentlyTests",
        "test_remove"
      ]
    ]
  ],
  "test_remove_reverse": [
    [
      "tests/m2m_through_regress/tests.py",
      [
        "ToFieldThroughTests",
        "test_remove_reverse"
      ]
    ]
  ],
  "test_sequence_creation": [
    [
      "tests/m2m_through_regress/tests.py",
      [
        "ThroughLoadDataTestCase",
        "test_sequence_creation"
      ]
    ]
  ],
  "test_m2o_recursive": [
    [
      "tests/m2o_recursive/tests.py",
      [
        "ManyToOneRecursiveTests",
        "test_m2o_recursive"
      ]
    ]
  ],
  "test_m2o_recursive2": [
    [
      "tests/m2o_recursive/tests.py",
      [
        "MultipleManyToOneRecursiveTests",
        "test_m2o_recursive2"
      ]
    ]
  ],
  "test_single_receiver": [
    [
      "tests/mail/test_sendtestemail.py",
      [
        "SendTestEmailManagementCommand",
        "test_single_receiver"
      ]
    ]
  ],
  "test_multiple_receivers": [
    [
      "tests/mail/test_sendtestemail.py",
      [
        "SendTestEmailManagementCommand",
        "test_multiple_receivers"
      ]
    ]
  ],
  "test_manager_receivers": [
    [
      "tests/mail/test_sendtestemail.py",
      [
        "SendTestEmailManagementCommand",
        "test_manager_receivers"
      ]
    ]
  ],
  "test_admin_receivers": [
    [
      "tests/mail/test_sendtestemail.py",
      [
        "SendTestEmailManagementCommand",
        "test_admin_receivers"
      ]
    ]
  ],
  "test_manager_and_admin_receivers": [
    [
      "tests/mail/test_sendtestemail.py",
      [
        "SendTestEmailManagementCommand",
        "test_manager_and_admin_receivers"
      ]
    ]
  ],
  "assertMessageHasHeaders": [
    [
      "tests/mail/tests.py",
      [
        "HeadersCheckMixin",
        "assertMessageHasHeaders"
      ]
    ]
  ],
  "get_decoded_attachments": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "get_decoded_attachments"
      ]
    ]
  ],
  "test_ascii": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_ascii"
      ]
    ]
  ],
  "test_multiple_recipients": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_multiple_recipients"
      ]
    ]
  ],
  "test_header_omitted_for_no_to_recipients": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_header_omitted_for_no_to_recipients"
      ]
    ]
  ],
  "test_recipients_with_empty_strings": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_recipients_with_empty_strings"
      ]
    ]
  ],
  "test_cc": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_cc"
      ]
    ]
  ],
  "test_cc_headers": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_cc_headers"
      ]
    ]
  ],
  "test_cc_in_headers_only": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_cc_in_headers_only"
      ]
    ]
  ],
  "test_reply_to": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_reply_to"
      ]
    ]
  ],
  "test_recipients_as_tuple": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_recipients_as_tuple"
      ]
    ]
  ],
  "test_recipients_as_string": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_recipients_as_string"
      ]
    ]
  ],
  "test_header_injection": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_header_injection"
      ]
    ]
  ],
  "test_space_continuation": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_space_continuation"
      ]
    ]
  ],
  "test_message_header_overrides": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_message_header_overrides"
      ]
    ]
  ],
  "test_from_header": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_from_header"
      ]
    ]
  ],
  "test_to_header": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_to_header"
      ]
    ]
  ],
  "test_to_in_headers_only": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_to_in_headers_only"
      ]
    ]
  ],
  "test_reply_to_header": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_reply_to_header"
      ]
    ]
  ],
  "test_reply_to_in_headers_only": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_reply_to_in_headers_only"
      ]
    ]
  ],
  "test_multiple_message_call": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_multiple_message_call"
      ]
    ]
  ],
  "test_unicode_address_header": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_unicode_address_header"
      ]
    ]
  ],
  "test_unicode_headers": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_unicode_headers"
      ]
    ]
  ],
  "test_safe_mime_multipart": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_safe_mime_multipart"
      ]
    ]
  ],
  "test_safe_mime_multipart_with_attachments": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_safe_mime_multipart_with_attachments"
      ]
    ]
  ],
  "test_none_body": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_none_body"
      ]
    ]
  ],
  "test_non_ascii_dns_non_unicode_email": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_non_ascii_dns_non_unicode_email"
      ]
    ]
  ],
  "test_encoding": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_encoding"
      ]
    ]
  ],
  "test_attachments": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_attachments"
      ]
    ]
  ],
  "test_attachments_two_tuple": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_attachments_two_tuple"
      ]
    ]
  ],
  "test_attachments_MIMEText": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_attachments_MIMEText"
      ]
    ]
  ],
  "test_non_ascii_attachment_filename": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_non_ascii_attachment_filename"
      ]
    ]
  ],
  "test_attach_file": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_attach_file"
      ]
    ]
  ],
  "test_attach_text_as_bytes": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_attach_text_as_bytes"
      ]
    ]
  ],
  "test_attach_utf8_text_as_bytes": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_attach_utf8_text_as_bytes"
      ]
    ]
  ],
  "test_attach_non_utf8_text_as_bytes": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_attach_non_utf8_text_as_bytes"
      ]
    ]
  ],
  "test_dummy_backend": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_dummy_backend"
      ]
    ]
  ],
  "test_arbitrary_keyword": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_arbitrary_keyword"
      ]
    ]
  ],
  "test_backend_arg": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_backend_arg"
      ]
    ]
  ],
  "test_connection_arg": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_connection_arg"
      ]
    ]
  ],
  "test_dont_mangle_from_in_body": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_dont_mangle_from_in_body"
      ]
    ]
  ],
  "test_dont_base64_encode": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_dont_base64_encode"
      ]
    ]
  ],
  "test_dont_base64_encode_message_rfc822": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_dont_base64_encode_message_rfc822"
      ]
    ]
  ],
  "test_custom_utf8_encoding": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_custom_utf8_encoding"
      ]
    ]
  ],
  "test_sanitize_address": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_sanitize_address"
      ]
    ]
  ],
  "test_sanitize_address_invalid": [
    [
      "tests/mail/tests.py",
      [
        "MailTests",
        "test_sanitize_address_invalid"
      ]
    ]
  ],
  "test_date_header_utc": [
    [
      "tests/mail/tests.py",
      [
        "MailTimeZoneTests",
        "test_date_header_utc"
      ]
    ]
  ],
  "test_date_header_localtime": [
    [
      "tests/mail/tests.py",
      [
        "MailTimeZoneTests",
        "test_date_header_localtime"
      ]
    ]
  ],
  "test_utf8": [
    [
      "tests/mail/tests.py",
      [
        "PythonGlobalState",
        "test_utf8"
      ]
    ]
  ],
  "test_7bit": [
    [
      "tests/mail/tests.py",
      [
        "PythonGlobalState",
        "test_7bit"
      ]
    ]
  ],
  "test_8bit_latin": [
    [
      "tests/mail/tests.py",
      [
        "PythonGlobalState",
        "test_8bit_latin"
      ]
    ]
  ],
  "test_8bit_non_latin": [
    [
      "tests/mail/tests.py",
      [
        "PythonGlobalState",
        "test_8bit_non_latin"
      ]
    ]
  ],
  "assertStartsWith": [
    [
      "tests/mail/tests.py",
      [
        "BaseEmailBackendTests",
        "assertStartsWith"
      ]
    ]
  ],
  "get_mailbox_content": [
    [
      "tests/mail/tests.py",
      [
        "BaseEmailBackendTests",
        "get_mailbox_content"
      ]
    ],
    [
      "tests/mail/tests.py",
      [
        "LocmemBackendTests",
        "get_mailbox_content"
      ]
    ],
    [
      "tests/mail/tests.py",
      [
        "FileBackendTests",
        "get_mailbox_content"
      ]
    ],
    [
      "tests/mail/tests.py",
      [
        "ConsoleBackendTests",
        "get_mailbox_content"
      ]
    ],
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "get_mailbox_content"
      ]
    ]
  ],
  "flush_mailbox": [
    [
      "tests/mail/tests.py",
      [
        "BaseEmailBackendTests",
        "flush_mailbox"
      ]
    ],
    [
      "tests/mail/tests.py",
      [
        "LocmemBackendTests",
        "flush_mailbox"
      ]
    ],
    [
      "tests/mail/tests.py",
      [
        "FileBackendTests",
        "flush_mailbox"
      ]
    ],
    [
      "tests/mail/tests.py",
      [
        "ConsoleBackendTests",
        "flush_mailbox"
      ]
    ],
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "flush_mailbox"
      ]
    ]
  ],
  "get_the_message": [
    [
      "tests/mail/tests.py",
      [
        "BaseEmailBackendTests",
        "get_the_message"
      ]
    ]
  ],
  "test_send_unicode": [
    [
      "tests/mail/tests.py",
      [
        "BaseEmailBackendTests",
        "test_send_unicode"
      ]
    ]
  ],
  "test_send_long_lines": [
    [
      "tests/mail/tests.py",
      [
        "BaseEmailBackendTests",
        "test_send_long_lines"
      ]
    ]
  ],
  "test_send_many": [
    [
      "tests/mail/tests.py",
      [
        "BaseEmailBackendTests",
        "test_send_many"
      ]
    ]
  ],
  "test_send_verbose_name": [
    [
      "tests/mail/tests.py",
      [
        "BaseEmailBackendTests",
        "test_send_verbose_name"
      ]
    ]
  ],
  "test_plaintext_send_mail": [
    [
      "tests/mail/tests.py",
      [
        "BaseEmailBackendTests",
        "test_plaintext_send_mail"
      ]
    ]
  ],
  "test_html_send_mail": [
    [
      "tests/mail/tests.py",
      [
        "BaseEmailBackendTests",
        "test_html_send_mail"
      ]
    ]
  ],
  "test_html_mail_managers": [
    [
      "tests/mail/tests.py",
      [
        "BaseEmailBackendTests",
        "test_html_mail_managers"
      ]
    ]
  ],
  "test_html_mail_admins": [
    [
      "tests/mail/tests.py",
      [
        "BaseEmailBackendTests",
        "test_html_mail_admins"
      ]
    ]
  ],
  "test_manager_and_admin_mail_prefix": [
    [
      "tests/mail/tests.py",
      [
        "BaseEmailBackendTests",
        "test_manager_and_admin_mail_prefix"
      ]
    ]
  ],
  "test_empty_admins": [
    [
      "tests/mail/tests.py",
      [
        "BaseEmailBackendTests",
        "test_empty_admins"
      ]
    ]
  ],
  "test_wrong_admins_managers": [
    [
      "tests/mail/tests.py",
      [
        "BaseEmailBackendTests",
        "test_wrong_admins_managers"
      ]
    ]
  ],
  "test_message_cc_header": [
    [
      "tests/mail/tests.py",
      [
        "BaseEmailBackendTests",
        "test_message_cc_header"
      ]
    ]
  ],
  "test_idn_send": [
    [
      "tests/mail/tests.py",
      [
        "BaseEmailBackendTests",
        "test_idn_send"
      ]
    ]
  ],
  "test_recipient_without_domain": [
    [
      "tests/mail/tests.py",
      [
        "BaseEmailBackendTests",
        "test_recipient_without_domain"
      ]
    ]
  ],
  "test_lazy_addresses": [
    [
      "tests/mail/tests.py",
      [
        "BaseEmailBackendTests",
        "test_lazy_addresses"
      ]
    ]
  ],
  "test_close_connection": [
    [
      "tests/mail/tests.py",
      [
        "BaseEmailBackendTests",
        "test_close_connection"
      ]
    ]
  ],
  "test_use_as_contextmanager": [
    [
      "tests/mail/tests.py",
      [
        "BaseEmailBackendTests",
        "test_use_as_contextmanager"
      ]
    ]
  ],
  "test_locmem_shared_messages": [
    [
      "tests/mail/tests.py",
      [
        "LocmemBackendTests",
        "test_locmem_shared_messages"
      ]
    ]
  ],
  "test_validate_multiline_headers": [
    [
      "tests/mail/tests.py",
      [
        "LocmemBackendTests",
        "test_validate_multiline_headers"
      ]
    ]
  ],
  "test_file_sessions": [
    [
      "tests/mail/tests.py",
      [
        "FileBackendTests",
        "test_file_sessions"
      ]
    ]
  ],
  "test_console_stream_kwarg": [
    [
      "tests/mail/tests.py",
      [
        "ConsoleBackendTests",
        "test_console_stream_kwarg"
      ]
    ]
  ],
  "collect_incoming_data": [
    [
      "tests/mail/tests.py",
      [
        "FakeSMTPChannel",
        "collect_incoming_data"
      ]
    ]
  ],
  "smtp_AUTH": [
    [
      "tests/mail/tests.py",
      [
        "FakeSMTPChannel",
        "smtp_AUTH"
      ]
    ]
  ],
  "process_message": [
    [
      "tests/mail/tests.py",
      [
        "FakeSMTPServer",
        "process_message"
      ]
    ]
  ],
  "get_sink": [
    [
      "tests/mail/tests.py",
      [
        "FakeSMTPServer",
        "get_sink"
      ]
    ]
  ],
  "flush_sink": [
    [
      "tests/mail/tests.py",
      [
        "FakeSMTPServer",
        "flush_sink"
      ]
    ]
  ],
  "start": [
    [
      "tests/mail/tests.py",
      [
        "FakeSMTPServer",
        "start"
      ]
    ]
  ],
  "ehlo": [
    [
      "tests/mail/tests.py",
      [
        "FakeAUTHSMTPConnection",
        "ehlo"
      ]
    ]
  ],
  "test_email_authentication_use_settings": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_email_authentication_use_settings"
      ]
    ]
  ],
  "test_email_authentication_override_settings": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_email_authentication_override_settings"
      ]
    ]
  ],
  "test_email_disabled_authentication": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_email_disabled_authentication"
      ]
    ]
  ],
  "test_auth_attempted": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_auth_attempted"
      ]
    ]
  ],
  "test_server_open": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_server_open"
      ]
    ]
  ],
  "test_reopen_connection": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_reopen_connection"
      ]
    ]
  ],
  "test_server_login": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_server_login"
      ]
    ]
  ],
  "test_email_tls_use_settings": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_email_tls_use_settings"
      ]
    ]
  ],
  "test_email_tls_override_settings": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_email_tls_override_settings"
      ]
    ]
  ],
  "test_email_tls_default_disabled": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_email_tls_default_disabled"
      ]
    ]
  ],
  "test_ssl_tls_mutually_exclusive": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_ssl_tls_mutually_exclusive"
      ]
    ]
  ],
  "test_email_ssl_use_settings": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_email_ssl_use_settings"
      ]
    ]
  ],
  "test_email_ssl_override_settings": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_email_ssl_override_settings"
      ]
    ]
  ],
  "test_email_ssl_default_disabled": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_email_ssl_default_disabled"
      ]
    ]
  ],
  "test_email_ssl_certfile_use_settings": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_email_ssl_certfile_use_settings"
      ]
    ]
  ],
  "test_email_ssl_certfile_override_settings": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_email_ssl_certfile_override_settings"
      ]
    ]
  ],
  "test_email_ssl_certfile_default_disabled": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_email_ssl_certfile_default_disabled"
      ]
    ]
  ],
  "test_email_ssl_keyfile_use_settings": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_email_ssl_keyfile_use_settings"
      ]
    ]
  ],
  "test_email_ssl_keyfile_override_settings": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_email_ssl_keyfile_override_settings"
      ]
    ]
  ],
  "test_email_ssl_keyfile_default_disabled": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_email_ssl_keyfile_default_disabled"
      ]
    ]
  ],
  "test_email_tls_attempts_starttls": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_email_tls_attempts_starttls"
      ]
    ]
  ],
  "test_email_ssl_attempts_ssl_connection": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_email_ssl_attempts_ssl_connection"
      ]
    ]
  ],
  "test_connection_timeout_default": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_connection_timeout_default"
      ]
    ]
  ],
  "test_connection_timeout_custom": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_connection_timeout_custom"
      ]
    ]
  ],
  "test_email_timeout_override_settings": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_email_timeout_override_settings"
      ]
    ]
  ],
  "mock_send": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_email_msg_uses_crlf",
        "try_",
        "mock_send"
      ]
    ]
  ],
  "test_email_msg_uses_crlf": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_email_msg_uses_crlf"
      ]
    ]
  ],
  "test_send_messages_after_open_failed": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_send_messages_after_open_failed"
      ]
    ]
  ],
  "test_send_messages_empty_list": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_send_messages_empty_list"
      ]
    ]
  ],
  "test_send_messages_zero_sent": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendTests",
        "test_send_messages_zero_sent"
      ]
    ]
  ],
  "test_server_stopped": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendStoppedServerTests",
        "test_server_stopped"
      ]
    ]
  ],
  "test_fail_silently_on_connection_error": [
    [
      "tests/mail/tests.py",
      [
        "SMTPBackendStoppedServerTests",
        "test_fail_silently_on_connection_error"
      ]
    ]
  ],
  "test_abstract_manager": [
    [
      "tests/managers_regress/tests.py",
      [
        "ManagersRegressionTests",
        "test_abstract_manager"
      ]
    ]
  ],
  "test_custom_abstract_manager": [
    [
      "tests/managers_regress/tests.py",
      [
        "ManagersRegressionTests",
        "test_custom_abstract_manager"
      ]
    ]
  ],
  "test_explicit_abstract_manager": [
    [
      "tests/managers_regress/tests.py",
      [
        "ManagersRegressionTests",
        "test_explicit_abstract_manager"
      ]
    ]
  ],
  "test_swappable_manager": [
    [
      "tests/managers_regress/tests.py",
      [
        "ManagersRegressionTests",
        "test_swappable_manager"
      ]
    ]
  ],
  "test_custom_swappable_manager": [
    [
      "tests/managers_regress/tests.py",
      [
        "ManagersRegressionTests",
        "test_custom_swappable_manager"
      ]
    ]
  ],
  "test_explicit_swappable_manager": [
    [
      "tests/managers_regress/tests.py",
      [
        "ManagersRegressionTests",
        "test_explicit_swappable_manager"
      ]
    ]
  ],
  "test_regress_3871": [
    [
      "tests/managers_regress/tests.py",
      [
        "ManagersRegressionTests",
        "test_regress_3871"
      ]
    ]
  ],
  "test_field_can_be_called_exact": [
    [
      "tests/managers_regress/tests.py",
      [
        "ManagersRegressionTests",
        "test_field_can_be_called_exact"
      ]
    ]
  ],
  "test_implicit_inheritance": [
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_implicit_inheritance"
      ]
    ]
  ],
  "test_default_manager_inheritance": [
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_default_manager_inheritance"
      ]
    ]
  ],
  "test_base_manager_inheritance": [
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_base_manager_inheritance"
      ]
    ]
  ],
  "test_manager_no_duplicates": [
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_manager_no_duplicates"
      ]
    ]
  ],
  "test_manager_class_getitem": [
    [
      "tests/managers_regress/tests.py",
      [
        "TestManagerInheritance",
        "test_manager_class_getitem"
      ]
    ]
  ],
  "test_add_remove_set_by_pk": [
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_add_remove_set_by_pk"
      ]
    ]
  ],
  "test_add_remove_set_by_to_field": [
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_add_remove_set_by_to_field"
      ]
    ]
  ],
  "test_add_remove_invalid_type": [
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_add_remove_invalid_type"
      ]
    ]
  ],
  "test_reverse_add": [
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_reverse_add"
      ]
    ]
  ],
  "test_fast_add_ignore_conflicts": [
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_fast_add_ignore_conflicts"
      ]
    ]
  ],
  "test_add_existing_different_type": [
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_add_existing_different_type"
      ]
    ]
  ],
  "test_slow_add_ignore_conflicts": [
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_slow_add_ignore_conflicts"
      ]
    ]
  ],
  "test_related_sets": [
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_related_sets"
      ]
    ]
  ],
  "test_selects": [
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_selects"
      ]
    ],
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_selects"
      ]
    ]
  ],
  "test_reverse_selects": [
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_reverse_selects"
      ]
    ],
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_reverse_selects"
      ]
    ]
  ],
  "test_bulk_delete": [
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_bulk_delete"
      ]
    ]
  ],
  "test_set_existing_different_type": [
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_set_existing_different_type"
      ]
    ]
  ],
  "test_assign_forward": [
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_assign_forward"
      ]
    ]
  ],
  "test_assign_reverse": [
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_assign_reverse"
      ]
    ]
  ],
  "test_assign_ids": [
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_assign_ids"
      ]
    ]
  ],
  "test_forward_assign_with_queryset": [
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_forward_assign_with_queryset"
      ]
    ]
  ],
  "test_reverse_assign_with_queryset": [
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_reverse_assign_with_queryset"
      ]
    ]
  ],
  "test_inherited_models_selects": [
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_inherited_models_selects"
      ]
    ]
  ],
  "test_custom_default_manager_exists_count": [
    [
      "tests/many_to_many/tests.py",
      [
        "ManyToManyTests",
        "test_custom_default_manager_exists_count"
      ]
    ]
  ],
  "test_reverse_assignment_deprecation": [
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_reverse_assignment_deprecation"
      ]
    ]
  ],
  "test_assign_fk_id_value": [
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_assign_fk_id_value"
      ]
    ]
  ],
  "test_assign_fk_id_none": [
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_assign_fk_id_none"
      ]
    ]
  ],
  "test_explicit_fk": [
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_explicit_fk"
      ]
    ]
  ],
  "test_deepcopy_and_circular_references": [
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_deepcopy_and_circular_references"
      ]
    ]
  ],
  "test_values_list_exception": [
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_values_list_exception"
      ]
    ]
  ],
  "test_fk_assignment_and_related_object_cache": [
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_fk_assignment_and_related_object_cache"
      ]
    ]
  ],
  "test_save_nullable_fk_after_parent": [
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_save_nullable_fk_after_parent"
      ]
    ]
  ],
  "test_save_nullable_fk_after_parent_with_to_field": [
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_save_nullable_fk_after_parent_with_to_field"
      ]
    ]
  ],
  "test_fk_to_bigautofield": [
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_fk_to_bigautofield"
      ]
    ]
  ],
  "test_fk_to_smallautofield": [
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_fk_to_smallautofield"
      ]
    ]
  ],
  "test_multiple_foreignkeys": [
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_multiple_foreignkeys"
      ]
    ]
  ],
  "test_fk_instantiation_outside_model": [
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_fk_instantiation_outside_model"
      ]
    ]
  ],
  "test_relation_unsaved": [
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_relation_unsaved"
      ]
    ]
  ],
  "test_related_object": [
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_related_object"
      ]
    ],
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_related_object"
      ]
    ]
  ],
  "test_hasattr_related_object": [
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_hasattr_related_object"
      ]
    ],
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_hasattr_related_object"
      ]
    ]
  ],
  "test_cached_relation_invalidated_on_save": [
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_cached_relation_invalidated_on_save"
      ]
    ],
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_cached_relation_invalidated_on_save"
      ]
    ]
  ],
  "test_cached_foreign_key_with_to_field_not_cleared_by_save": [
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_cached_foreign_key_with_to_field_not_cleared_by_save"
      ]
    ]
  ],
  "test_reverse_foreign_key_instance_to_field_caching": [
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_reverse_foreign_key_instance_to_field_caching"
      ]
    ]
  ],
  "test_add_remove_set_by_pk_raises": [
    [
      "tests/many_to_one/tests.py",
      [
        "ManyToOneTests",
        "test_add_remove_set_by_pk_raises"
      ]
    ]
  ],
  "test_get_related": [
    [
      "tests/many_to_one_null/tests.py",
      [
        "ManyToOneNullTests",
        "test_get_related"
      ]
    ]
  ],
  "test_created_via_related_set": [
    [
      "tests/many_to_one_null/tests.py",
      [
        "ManyToOneNullTests",
        "test_created_via_related_set"
      ]
    ]
  ],
  "test_related_set": [
    [
      "tests/many_to_one_null/tests.py",
      [
        "ManyToOneNullTests",
        "test_related_set"
      ]
    ]
  ],
  "test_created_without_related": [
    [
      "tests/many_to_one_null/tests.py",
      [
        "ManyToOneNullTests",
        "test_created_without_related"
      ]
    ]
  ],
  "test_remove_from_wrong_set": [
    [
      "tests/many_to_one_null/tests.py",
      [
        "ManyToOneNullTests",
        "test_remove_from_wrong_set"
      ]
    ]
  ],
  "test_set_clear_non_bulk": [
    [
      "tests/many_to_one_null/tests.py",
      [
        "ManyToOneNullTests",
        "test_set_clear_non_bulk"
      ]
    ]
  ],
  "test_assign_clear_related_set": [
    [
      "tests/many_to_one_null/tests.py",
      [
        "ManyToOneNullTests",
        "test_assign_clear_related_set"
      ]
    ]
  ],
  "test_add_efficiency": [
    [
      "tests/many_to_one_null/tests.py",
      [
        "ManyToOneNullTests",
        "test_add_efficiency"
      ]
    ]
  ],
  "test_clear_efficiency": [
    [
      "tests/many_to_one_null/tests.py",
      [
        "ManyToOneNullTests",
        "test_clear_efficiency"
      ]
    ]
  ],
  "test_related_null_to_field": [
    [
      "tests/many_to_one_null/tests.py",
      [
        "ManyToOneNullTests",
        "test_related_null_to_field"
      ]
    ]
  ],
  "verify_max_length": [
    [
      "tests/max_lengths/tests.py",
      [
        "MaxLengthArgumentsTests",
        "verify_max_length"
      ]
    ]
  ],
  "test_default_max_lengths": [
    [
      "tests/max_lengths/tests.py",
      [
        "MaxLengthArgumentsTests",
        "test_default_max_lengths"
      ]
    ]
  ],
  "test_custom_max_lengths": [
    [
      "tests/max_lengths/tests.py",
      [
        "MaxLengthArgumentsTests",
        "test_custom_max_lengths"
      ]
    ],
    [
      "tests/max_lengths/tests.py",
      [
        "MaxLengthORMTests",
        "test_custom_max_lengths"
      ]
    ]
  ],
  "add_level_messages": [
    [
      "tests/messages_tests/base.py",
      [
        "add_level_messages"
      ]
    ]
  ],
  "get_request": [
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests",
        "get_request"
      ]
    ],
    [
      "tests/messages_tests/test_fallback.py",
      [
        "FallbackTests",
        "get_request"
      ]
    ],
    [
      "tests/messages_tests/test_session.py",
      [
        "SessionTests",
        "get_request"
      ]
    ]
  ],
  "get_storage": [
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests",
        "get_storage"
      ]
    ]
  ],
  "test_add_lazy_translation": [
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests",
        "test_add_lazy_translation"
      ]
    ]
  ],
  "test_no_update": [
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests",
        "test_no_update"
      ]
    ]
  ],
  "test_add_update": [
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests",
        "test_add_update"
      ]
    ]
  ],
  "test_existing_add_read_update": [
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests",
        "test_existing_add_read_update"
      ]
    ]
  ],
  "test_existing_read_add_update": [
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests",
        "test_existing_read_add_update"
      ]
    ]
  ],
  "test_full_request_response_cycle": [
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests",
        "test_full_request_response_cycle"
      ]
    ]
  ],
  "test_with_template_response": [
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests",
        "test_with_template_response"
      ]
    ]
  ],
  "test_context_processor_message_levels": [
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests",
        "test_context_processor_message_levels"
      ]
    ]
  ],
  "test_multiple_posts": [
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests",
        "test_multiple_posts"
      ]
    ]
  ],
  "test_middleware_disabled": [
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests",
        "test_middleware_disabled"
      ]
    ]
  ],
  "test_middleware_disabled_fail_silently": [
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests",
        "test_middleware_disabled_fail_silently"
      ]
    ]
  ],
  "stored_messages_count": [
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests",
        "stored_messages_count"
      ]
    ],
    [
      "tests/messages_tests/test_cookie.py",
      [
        "CookieTests",
        "stored_messages_count"
      ]
    ],
    [
      "tests/messages_tests/test_fallback.py",
      [
        "FallbackTests",
        "stored_messages_count"
      ]
    ],
    [
      "tests/messages_tests/test_session.py",
      [
        "SessionTests",
        "stored_messages_count"
      ]
    ]
  ],
  "get_existing_storage": [
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests",
        "get_existing_storage"
      ]
    ]
  ],
  "test_existing_read": [
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests",
        "test_existing_read"
      ]
    ]
  ],
  "test_existing_add": [
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests",
        "test_existing_add"
      ]
    ]
  ],
  "test_default_level": [
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests",
        "test_default_level"
      ]
    ]
  ],
  "test_low_level": [
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests",
        "test_low_level"
      ]
    ]
  ],
  "test_high_level": [
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests",
        "test_high_level"
      ]
    ]
  ],
  "test_settings_level": [
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests",
        "test_settings_level"
      ]
    ]
  ],
  "test_level_tag": [
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests",
        "test_level_tag"
      ]
    ]
  ],
  "test_custom_tags": [
    [
      "tests/messages_tests/base.py",
      [
        "BaseTests",
        "test_custom_tags"
      ]
    ]
  ],
  "test_ok": [
    [
      "tests/messages_tests/test_api.py",
      [
        "ApiTests",
        "test_ok"
      ]
    ]
  ],
  "test_request_is_none": [
    [
      "tests/messages_tests/test_api.py",
      [
        "ApiTests",
        "test_request_is_none"
      ]
    ]
  ],
  "test_middleware_missing": [
    [
      "tests/messages_tests/test_api.py",
      [
        "ApiTests",
        "test_middleware_missing"
      ]
    ]
  ],
  "test_middleware_missing_silently": [
    [
      "tests/messages_tests/test_api.py",
      [
        "ApiTests",
        "test_middleware_missing_silently"
      ]
    ]
  ],
  "set_cookie_data": [
    [
      "tests/messages_tests/test_cookie.py",
      [
        "set_cookie_data"
      ]
    ]
  ],
  "stored_cookie_messages_count": [
    [
      "tests/messages_tests/test_cookie.py",
      [
        "stored_cookie_messages_count"
      ]
    ],
    [
      "tests/messages_tests/test_fallback.py",
      [
        "FallbackTests",
        "stored_cookie_messages_count"
      ]
    ]
  ],
  "test_cookie_setings": [
    [
      "tests/messages_tests/test_cookie.py",
      [
        "CookieTests",
        "test_cookie_setings"
      ]
    ]
  ],
  "test_get_bad_cookie": [
    [
      "tests/messages_tests/test_cookie.py",
      [
        "CookieTests",
        "test_get_bad_cookie"
      ]
    ]
  ],
  "test_max_cookie_length": [
    [
      "tests/messages_tests/test_cookie.py",
      [
        "CookieTests",
        "test_max_cookie_length"
      ]
    ]
  ],
  "test_json_encoder_decoder": [
    [
      "tests/messages_tests/test_cookie.py",
      [
        "CookieTests",
        "test_json_encoder_decoder"
      ]
    ]
  ],
  "test_safedata": [
    [
      "tests/messages_tests/test_cookie.py",
      [
        "CookieTests",
        "test_safedata"
      ]
    ],
    [
      "tests/messages_tests/test_session.py",
      [
        "SessionTests",
        "test_safedata"
      ]
    ]
  ],
  "test_legacy_hash_decode": [
    [
      "tests/messages_tests/test_cookie.py",
      [
        "CookieTests",
        "test_legacy_hash_decode"
      ]
    ]
  ],
  "get_cookie_storage": [
    [
      "tests/messages_tests/test_fallback.py",
      [
        "FallbackTests",
        "get_cookie_storage"
      ]
    ]
  ],
  "get_session_storage": [
    [
      "tests/messages_tests/test_fallback.py",
      [
        "FallbackTests",
        "get_session_storage"
      ]
    ]
  ],
  "stored_session_messages_count": [
    [
      "tests/messages_tests/test_fallback.py",
      [
        "FallbackTests",
        "stored_session_messages_count"
      ]
    ],
    [
      "tests/messages_tests/test_session.py",
      [
        "stored_session_messages_count"
      ]
    ]
  ],
  "test_get_empty": [
    [
      "tests/messages_tests/test_fallback.py",
      [
        "FallbackTests",
        "test_get_empty"
      ]
    ],
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_get_empty"
      ]
    ]
  ],
  "test_get_fallback": [
    [
      "tests/messages_tests/test_fallback.py",
      [
        "FallbackTests",
        "test_get_fallback"
      ]
    ]
  ],
  "test_get_fallback_only": [
    [
      "tests/messages_tests/test_fallback.py",
      [
        "FallbackTests",
        "test_get_fallback_only"
      ]
    ]
  ],
  "test_flush_used_backends": [
    [
      "tests/messages_tests/test_fallback.py",
      [
        "FallbackTests",
        "test_flush_used_backends"
      ]
    ]
  ],
  "test_no_fallback": [
    [
      "tests/messages_tests/test_fallback.py",
      [
        "FallbackTests",
        "test_no_fallback"
      ]
    ]
  ],
  "test_session_fallback": [
    [
      "tests/messages_tests/test_fallback.py",
      [
        "FallbackTests",
        "test_session_fallback"
      ]
    ]
  ],
  "test_session_fallback_only": [
    [
      "tests/messages_tests/test_fallback.py",
      [
        "FallbackTests",
        "test_session_fallback_only"
      ]
    ]
  ],
  "test_response_without_messages": [
    [
      "tests/messages_tests/test_middleware.py",
      [
        "MiddlewareTests",
        "test_response_without_messages"
      ]
    ]
  ],
  "test_set_messages_success": [
    [
      "tests/messages_tests/test_mixins.py",
      [
        "SuccessMessageMixinTests",
        "test_set_messages_success"
      ]
    ]
  ],
  "set_session_data": [
    [
      "tests/messages_tests/test_session.py",
      [
        "set_session_data"
      ]
    ]
  ],
  "add_template_response": [
    [
      "tests/messages_tests/urls.py",
      [
        "add_template_response"
      ]
    ]
  ],
  "show": [
    [
      "tests/messages_tests/urls.py",
      [
        "show"
      ]
    ]
  ],
  "show_template_response": [
    [
      "tests/messages_tests/urls.py",
      [
        "show_template_response"
      ]
    ]
  ],
  "middleware": [
    [
      "tests/middleware/test_security.py",
      [
        "SecurityMiddlewareTest",
        "middleware"
      ]
    ]
  ],
  "secure_request_kwargs": [
    [
      "tests/middleware/test_security.py",
      [
        "SecurityMiddlewareTest",
        "secure_request_kwargs"
      ]
    ]
  ],
  "response": [
    [
      "tests/middleware/test_security.py",
      [
        "SecurityMiddlewareTest",
        "response"
      ]
    ]
  ],
  "test_sts_on": [
    [
      "tests/middleware/test_security.py",
      [
        "SecurityMiddlewareTest",
        "test_sts_on"
      ]
    ]
  ],
  "test_sts_already_present": [
    [
      "tests/middleware/test_security.py",
      [
        "SecurityMiddlewareTest",
        "test_sts_already_present"
      ]
    ]
  ],
  "test_sts_only_if_secure": [
    [
      "tests/middleware/test_security.py",
      [
        "SecurityMiddlewareTest",
        "test_sts_only_if_secure"
      ]
    ]
  ],
  "test_sts_off": [
    [
      "tests/middleware/test_security.py",
      [
        "SecurityMiddlewareTest",
        "test_sts_off"
      ]
    ]
  ],
  "test_sts_include_subdomains": [
    [
      "tests/middleware/test_security.py",
      [
        "SecurityMiddlewareTest",
        "test_sts_include_subdomains"
      ]
    ]
  ],
  "test_sts_no_include_subdomains": [
    [
      "tests/middleware/test_security.py",
      [
        "SecurityMiddlewareTest",
        "test_sts_no_include_subdomains"
      ]
    ]
  ],
  "test_sts_preload": [
    [
      "tests/middleware/test_security.py",
      [
        "SecurityMiddlewareTest",
        "test_sts_preload"
      ]
    ]
  ],
  "test_sts_subdomains_and_preload": [
    [
      "tests/middleware/test_security.py",
      [
        "SecurityMiddlewareTest",
        "test_sts_subdomains_and_preload"
      ]
    ]
  ],
  "test_sts_no_preload": [
    [
      "tests/middleware/test_security.py",
      [
        "SecurityMiddlewareTest",
        "test_sts_no_preload"
      ]
    ]
  ],
  "test_content_type_on": [
    [
      "tests/middleware/test_security.py",
      [
        "SecurityMiddlewareTest",
        "test_content_type_on"
      ]
    ]
  ],
  "test_content_type_already_present": [
    [
      "tests/middleware/test_security.py",
      [
        "SecurityMiddlewareTest",
        "test_content_type_already_present"
      ]
    ]
  ],
  "test_content_type_off": [
    [
      "tests/middleware/test_security.py",
      [
        "SecurityMiddlewareTest",
        "test_content_type_off"
      ]
    ]
  ],
  "test_xss_filter_on": [
    [
      "tests/middleware/test_security.py",
      [
        "SecurityMiddlewareTest",
        "test_xss_filter_on"
      ]
    ]
  ],
  "test_xss_filter_already_present": [
    [
      "tests/middleware/test_security.py",
      [
        "SecurityMiddlewareTest",
        "test_xss_filter_already_present"
      ]
    ]
  ],
  "test_xss_filter_off": [
    [
      "tests/middleware/test_security.py",
      [
        "SecurityMiddlewareTest",
        "test_xss_filter_off"
      ]
    ]
  ],
  "test_ssl_redirect_on": [
    [
      "tests/middleware/test_security.py",
      [
        "SecurityMiddlewareTest",
        "test_ssl_redirect_on"
      ]
    ]
  ],
  "test_no_redirect_ssl": [
    [
      "tests/middleware/test_security.py",
      [
        "SecurityMiddlewareTest",
        "test_no_redirect_ssl"
      ]
    ]
  ],
  "test_redirect_exempt": [
    [
      "tests/middleware/test_security.py",
      [
        "SecurityMiddlewareTest",
        "test_redirect_exempt"
      ]
    ]
  ],
  "test_redirect_ssl_host": [
    [
      "tests/middleware/test_security.py",
      [
        "SecurityMiddlewareTest",
        "test_redirect_ssl_host"
      ]
    ]
  ],
  "test_ssl_redirect_off": [
    [
      "tests/middleware/test_security.py",
      [
        "SecurityMiddlewareTest",
        "test_ssl_redirect_off"
      ]
    ]
  ],
  "test_referrer_policy_off": [
    [
      "tests/middleware/test_security.py",
      [
        "SecurityMiddlewareTest",
        "test_referrer_policy_off"
      ]
    ]
  ],
  "test_referrer_policy_on": [
    [
      "tests/middleware/test_security.py",
      [
        "SecurityMiddlewareTest",
        "test_referrer_policy_on"
      ]
    ]
  ],
  "test_referrer_policy_already_present": [
    [
      "tests/middleware/test_security.py",
      [
        "SecurityMiddlewareTest",
        "test_referrer_policy_already_present"
      ]
    ]
  ],
  "get_response_empty": [
    [
      "tests/middleware/tests.py",
      [
        "get_response_empty"
      ]
    ]
  ],
  "get_response_404": [
    [
      "tests/middleware/tests.py",
      [
        "get_response_404"
      ]
    ]
  ],
  "test_append_slash_have_slash": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_append_slash_have_slash"
      ]
    ]
  ],
  "test_append_slash_slashless_resource": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_append_slash_slashless_resource"
      ]
    ]
  ],
  "test_append_slash_slashless_unknown": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_append_slash_slashless_unknown"
      ]
    ]
  ],
  "test_append_slash_redirect": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_append_slash_redirect"
      ]
    ]
  ],
  "test_append_slash_redirect_querystring": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_append_slash_redirect_querystring"
      ]
    ]
  ],
  "test_append_slash_redirect_querystring_have_slash": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_append_slash_redirect_querystring_have_slash"
      ]
    ]
  ],
  "test_append_slash_no_redirect_on_POST_in_DEBUG": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_append_slash_no_redirect_on_POST_in_DEBUG"
      ]
    ]
  ],
  "test_append_slash_disabled": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_append_slash_disabled"
      ]
    ]
  ],
  "test_append_slash_quoted": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_append_slash_quoted"
      ]
    ]
  ],
  "test_append_slash_leading_slashes": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_append_slash_leading_slashes"
      ]
    ]
  ],
  "test_prepend_www": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_prepend_www"
      ]
    ]
  ],
  "test_prepend_www_append_slash_have_slash": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_prepend_www_append_slash_have_slash"
      ]
    ]
  ],
  "test_prepend_www_append_slash_slashless": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_prepend_www_append_slash_slashless"
      ]
    ]
  ],
  "test_append_slash_have_slash_custom_urlconf": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_append_slash_have_slash_custom_urlconf"
      ]
    ]
  ],
  "test_append_slash_slashless_resource_custom_urlconf": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_append_slash_slashless_resource_custom_urlconf"
      ]
    ]
  ],
  "test_append_slash_slashless_unknown_custom_urlconf": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_append_slash_slashless_unknown_custom_urlconf"
      ]
    ]
  ],
  "test_append_slash_redirect_custom_urlconf": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_append_slash_redirect_custom_urlconf"
      ]
    ]
  ],
  "test_append_slash_no_redirect_on_POST_in_DEBUG_custom_urlconf": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_append_slash_no_redirect_on_POST_in_DEBUG_custom_urlconf"
      ]
    ]
  ],
  "test_append_slash_disabled_custom_urlconf": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_append_slash_disabled_custom_urlconf"
      ]
    ]
  ],
  "test_append_slash_quoted_custom_urlconf": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_append_slash_quoted_custom_urlconf"
      ]
    ]
  ],
  "test_prepend_www_custom_urlconf": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_prepend_www_custom_urlconf"
      ]
    ]
  ],
  "test_prepend_www_append_slash_have_slash_custom_urlconf": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_prepend_www_append_slash_have_slash_custom_urlconf"
      ]
    ]
  ],
  "test_prepend_www_append_slash_slashless_custom_urlconf": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_prepend_www_append_slash_slashless_custom_urlconf"
      ]
    ]
  ],
  "test_content_length_header_added": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_content_length_header_added"
      ]
    ]
  ],
  "test_content_length_header_not_added_for_streaming_response": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_content_length_header_not_added_for_streaming_response"
      ]
    ]
  ],
  "test_content_length_header_not_changed": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_content_length_header_not_changed"
      ]
    ]
  ],
  "test_disallowed_user_agents": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_disallowed_user_agents"
      ]
    ]
  ],
  "test_non_ascii_query_string_does_not_crash": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_non_ascii_query_string_does_not_crash"
      ]
    ]
  ],
  "test_response_redirect_class": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_response_redirect_class"
      ]
    ],
    [
      "tests/redirects_tests/tests.py",
      [
        "OverriddenRedirectMiddlewareTests",
        "test_response_redirect_class"
      ]
    ]
  ],
  "test_response_redirect_class_subclass": [
    [
      "tests/middleware/tests.py",
      [
        "CommonMiddlewareTest",
        "test_response_redirect_class_subclass"
      ]
    ]
  ],
  "test_404_error_reporting": [
    [
      "tests/middleware/tests.py",
      [
        "BrokenLinkEmailsMiddlewareTest",
        "test_404_error_reporting"
      ]
    ]
  ],
  "test_404_error_reporting_no_referer": [
    [
      "tests/middleware/tests.py",
      [
        "BrokenLinkEmailsMiddlewareTest",
        "test_404_error_reporting_no_referer"
      ]
    ]
  ],
  "test_404_error_reporting_ignored_url": [
    [
      "tests/middleware/tests.py",
      [
        "BrokenLinkEmailsMiddlewareTest",
        "test_404_error_reporting_ignored_url"
      ]
    ]
  ],
  "test_custom_request_checker": [
    [
      "tests/middleware/tests.py",
      [
        "BrokenLinkEmailsMiddlewareTest",
        "test_custom_request_checker"
      ]
    ]
  ],
  "test_referer_equal_to_requested_url": [
    [
      "tests/middleware/tests.py",
      [
        "BrokenLinkEmailsMiddlewareTest",
        "test_referer_equal_to_requested_url"
      ]
    ]
  ],
  "test_referer_equal_to_requested_url_on_another_domain": [
    [
      "tests/middleware/tests.py",
      [
        "BrokenLinkEmailsMiddlewareTest",
        "test_referer_equal_to_requested_url_on_another_domain"
      ]
    ]
  ],
  "test_referer_equal_to_requested_url_without_trailing_slash_when_append_slash_is_set": [
    [
      "tests/middleware/tests.py",
      [
        "BrokenLinkEmailsMiddlewareTest",
        "test_referer_equal_to_requested_url_without_trailing_slash_when_append_slash_is_set"
      ]
    ]
  ],
  "test_referer_equal_to_requested_url_without_trailing_slash_when_append_slash_is_unset": [
    [
      "tests/middleware/tests.py",
      [
        "BrokenLinkEmailsMiddlewareTest",
        "test_referer_equal_to_requested_url_without_trailing_slash_when_append_slash_is_unset"
      ]
    ]
  ],
  "test_middleware_calculates_etag": [
    [
      "tests/middleware/tests.py",
      [
        "ConditionalGetMiddlewareTest",
        "test_middleware_calculates_etag"
      ]
    ]
  ],
  "test_middleware_wont_overwrite_etag": [
    [
      "tests/middleware/tests.py",
      [
        "ConditionalGetMiddlewareTest",
        "test_middleware_wont_overwrite_etag"
      ]
    ]
  ],
  "test_no_etag_streaming_response": [
    [
      "tests/middleware/tests.py",
      [
        "ConditionalGetMiddlewareTest",
        "test_no_etag_streaming_response"
      ]
    ]
  ],
  "test_no_etag_response_empty_content": [
    [
      "tests/middleware/tests.py",
      [
        "ConditionalGetMiddlewareTest",
        "test_no_etag_response_empty_content"
      ]
    ]
  ],
  "test_no_etag_no_store_cache": [
    [
      "tests/middleware/tests.py",
      [
        "ConditionalGetMiddlewareTest",
        "test_no_etag_no_store_cache"
      ]
    ]
  ],
  "test_etag_extended_cache_control": [
    [
      "tests/middleware/tests.py",
      [
        "ConditionalGetMiddlewareTest",
        "test_etag_extended_cache_control"
      ]
    ]
  ],
  "test_if_none_match_and_no_etag": [
    [
      "tests/middleware/tests.py",
      [
        "ConditionalGetMiddlewareTest",
        "test_if_none_match_and_no_etag"
      ]
    ]
  ],
  "test_no_if_none_match_and_etag": [
    [
      "tests/middleware/tests.py",
      [
        "ConditionalGetMiddlewareTest",
        "test_no_if_none_match_and_etag"
      ]
    ]
  ],
  "test_if_none_match_and_same_etag": [
    [
      "tests/middleware/tests.py",
      [
        "ConditionalGetMiddlewareTest",
        "test_if_none_match_and_same_etag"
      ]
    ]
  ],
  "test_if_none_match_and_different_etag": [
    [
      "tests/middleware/tests.py",
      [
        "ConditionalGetMiddlewareTest",
        "test_if_none_match_and_different_etag"
      ]
    ]
  ],
  "test_if_none_match_and_redirect": [
    [
      "tests/middleware/tests.py",
      [
        "ConditionalGetMiddlewareTest",
        "test_if_none_match_and_redirect"
      ]
    ]
  ],
  "test_if_none_match_and_client_error": [
    [
      "tests/middleware/tests.py",
      [
        "ConditionalGetMiddlewareTest",
        "test_if_none_match_and_client_error"
      ]
    ]
  ],
  "test_if_modified_since_and_no_last_modified": [
    [
      "tests/middleware/tests.py",
      [
        "ConditionalGetMiddlewareTest",
        "test_if_modified_since_and_no_last_modified"
      ]
    ]
  ],
  "test_no_if_modified_since_and_last_modified": [
    [
      "tests/middleware/tests.py",
      [
        "ConditionalGetMiddlewareTest",
        "test_no_if_modified_since_and_last_modified"
      ]
    ]
  ],
  "test_if_modified_since_and_same_last_modified": [
    [
      "tests/middleware/tests.py",
      [
        "ConditionalGetMiddlewareTest",
        "test_if_modified_since_and_same_last_modified"
      ]
    ]
  ],
  "test_if_modified_since_and_last_modified_in_the_past": [
    [
      "tests/middleware/tests.py",
      [
        "ConditionalGetMiddlewareTest",
        "test_if_modified_since_and_last_modified_in_the_past"
      ]
    ]
  ],
  "test_if_modified_since_and_last_modified_in_the_future": [
    [
      "tests/middleware/tests.py",
      [
        "ConditionalGetMiddlewareTest",
        "test_if_modified_since_and_last_modified_in_the_future"
      ]
    ]
  ],
  "test_if_modified_since_and_redirect": [
    [
      "tests/middleware/tests.py",
      [
        "ConditionalGetMiddlewareTest",
        "test_if_modified_since_and_redirect"
      ]
    ]
  ],
  "test_if_modified_since_and_client_error": [
    [
      "tests/middleware/tests.py",
      [
        "ConditionalGetMiddlewareTest",
        "test_if_modified_since_and_client_error"
      ]
    ]
  ],
  "test_not_modified_headers": [
    [
      "tests/middleware/tests.py",
      [
        "ConditionalGetMiddlewareTest",
        "test_not_modified_headers"
      ]
    ]
  ],
  "test_no_unsafe": [
    [
      "tests/middleware/tests.py",
      [
        "ConditionalGetMiddlewareTest",
        "test_no_unsafe"
      ]
    ]
  ],
  "test_no_head": [
    [
      "tests/middleware/tests.py",
      [
        "ConditionalGetMiddlewareTest",
        "test_no_head"
      ]
    ]
  ],
  "test_same_origin": [
    [
      "tests/middleware/tests.py",
      [
        "XFrameOptionsMiddlewareTest",
        "test_same_origin"
      ]
    ]
  ],
  "test_deny": [
    [
      "tests/middleware/tests.py",
      [
        "XFrameOptionsMiddlewareTest",
        "test_deny"
      ]
    ]
  ],
  "test_defaults_sameorigin": [
    [
      "tests/middleware/tests.py",
      [
        "XFrameOptionsMiddlewareTest",
        "test_defaults_sameorigin"
      ]
    ]
  ],
  "test_dont_set_if_set": [
    [
      "tests/middleware/tests.py",
      [
        "XFrameOptionsMiddlewareTest",
        "test_dont_set_if_set"
      ]
    ]
  ],
  "test_response_exempt": [
    [
      "tests/middleware/tests.py",
      [
        "XFrameOptionsMiddlewareTest",
        "test_response_exempt"
      ]
    ]
  ],
  "same_origin_response": [
    [
      "tests/middleware/tests.py",
      [
        "XFrameOptionsMiddlewareTest",
        "test_is_extendable",
        "same_origin_response"
      ]
    ]
  ],
  "test_is_extendable": [
    [
      "tests/middleware/tests.py",
      [
        "XFrameOptionsMiddlewareTest",
        "test_is_extendable"
      ]
    ]
  ],
  "get_mtime": [
    [
      "tests/middleware/tests.py",
      [
        "GZipMiddlewareTest",
        "get_mtime"
      ]
    ]
  ],
  "test_compress_response": [
    [
      "tests/middleware/tests.py",
      [
        "GZipMiddlewareTest",
        "test_compress_response"
      ]
    ]
  ],
  "test_compress_streaming_response": [
    [
      "tests/middleware/tests.py",
      [
        "GZipMiddlewareTest",
        "test_compress_streaming_response"
      ]
    ]
  ],
  "test_compress_streaming_response_unicode": [
    [
      "tests/middleware/tests.py",
      [
        "GZipMiddlewareTest",
        "test_compress_streaming_response_unicode"
      ]
    ]
  ],
  "test_compress_file_response": [
    [
      "tests/middleware/tests.py",
      [
        "GZipMiddlewareTest",
        "test_compress_file_response"
      ]
    ]
  ],
  "test_compress_non_200_response": [
    [
      "tests/middleware/tests.py",
      [
        "GZipMiddlewareTest",
        "test_compress_non_200_response"
      ]
    ]
  ],
  "test_no_compress_short_response": [
    [
      "tests/middleware/tests.py",
      [
        "GZipMiddlewareTest",
        "test_no_compress_short_response"
      ]
    ]
  ],
  "test_no_compress_compressed_response": [
    [
      "tests/middleware/tests.py",
      [
        "GZipMiddlewareTest",
        "test_no_compress_compressed_response"
      ]
    ]
  ],
  "test_no_compress_incompressible_response": [
    [
      "tests/middleware/tests.py",
      [
        "GZipMiddlewareTest",
        "test_no_compress_incompressible_response"
      ]
    ]
  ],
  "test_compress_deterministic": [
    [
      "tests/middleware/tests.py",
      [
        "GZipMiddlewareTest",
        "test_compress_deterministic"
      ]
    ]
  ],
  "test_strong_etag_modified": [
    [
      "tests/middleware/tests.py",
      [
        "ETagGZipMiddlewareTest",
        "test_strong_etag_modified"
      ]
    ]
  ],
  "test_weak_etag_not_modified": [
    [
      "tests/middleware/tests.py",
      [
        "ETagGZipMiddlewareTest",
        "test_weak_etag_not_modified"
      ]
    ]
  ],
  "test_etag_match": [
    [
      "tests/middleware/tests.py",
      [
        "ETagGZipMiddlewareTest",
        "test_etag_match"
      ]
    ]
  ],
  "empty_view": [
    [
      "tests/middleware/views.py",
      [
        "empty_view"
      ]
    ],
    [
      "tests/project_template/views.py",
      [
        "empty_view"
      ]
    ],
    [
      "tests/urlpatterns/views.py",
      [
        "empty_view"
      ]
    ],
    [
      "tests/urlpatterns_reverse/views.py",
      [
        "empty_view"
      ]
    ]
  ],
  "process_exception": [
    [
      "tests/middleware_exceptions/middleware.py",
      [
        "ProcessExceptionMiddleware",
        "process_exception"
      ]
    ],
    [
      "tests/middleware_exceptions/middleware.py",
      [
        "AsyncProcessExceptionMiddleware",
        "process_exception"
      ]
    ],
    [
      "tests/middleware_exceptions/middleware.py",
      [
        "ProcessExceptionLogMiddleware",
        "process_exception"
      ]
    ],
    [
      "tests/middleware_exceptions/middleware.py",
      [
        "ProcessExceptionExcMiddleware",
        "process_exception"
      ]
    ]
  ],
  "process_template_response": [
    [
      "tests/middleware_exceptions/middleware.py",
      [
        "TemplateResponseMiddleware",
        "process_template_response"
      ]
    ],
    [
      "tests/middleware_exceptions/middleware.py",
      [
        "AsyncTemplateResponseMiddleware",
        "process_template_response"
      ]
    ],
    [
      "tests/middleware_exceptions/middleware.py",
      [
        "NoTemplateResponseMiddleware",
        "process_template_response"
      ]
    ],
    [
      "tests/middleware_exceptions/middleware.py",
      [
        "AsyncNoTemplateResponseMiddleware",
        "process_template_response"
      ]
    ],
    [
      "tests/utils_tests/test_decorators.py",
      [
        "FullMiddleware",
        "process_template_response"
      ]
    ]
  ],
  "async_payment_middleware": [
    [
      "tests/middleware_exceptions/middleware.py",
      [
        "async_payment_middleware"
      ]
    ]
  ],
  "test_process_view_return_none": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MiddlewareTests",
        "test_process_view_return_none"
      ]
    ]
  ],
  "test_process_view_return_response": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MiddlewareTests",
        "test_process_view_return_response"
      ]
    ],
    [
      "tests/middleware_exceptions/tests.py",
      [
        "AsyncMiddlewareTests",
        "test_process_view_return_response"
      ]
    ]
  ],
  "test_templateresponse_from_process_view_rendered": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MiddlewareTests",
        "test_templateresponse_from_process_view_rendered"
      ]
    ]
  ],
  "test_templateresponse_from_process_view_passed_to_process_template_response": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MiddlewareTests",
        "test_templateresponse_from_process_view_passed_to_process_template_response"
      ]
    ]
  ],
  "test_process_template_response": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MiddlewareTests",
        "test_process_template_response"
      ]
    ],
    [
      "tests/middleware_exceptions/tests.py",
      [
        "AsyncMiddlewareTests",
        "test_process_template_response"
      ]
    ]
  ],
  "test_process_template_response_returns_none": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MiddlewareTests",
        "test_process_template_response_returns_none"
      ]
    ],
    [
      "tests/middleware_exceptions/tests.py",
      [
        "AsyncMiddlewareTests",
        "test_process_template_response_returns_none"
      ]
    ]
  ],
  "test_view_exception_converted_before_middleware": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MiddlewareTests",
        "test_view_exception_converted_before_middleware"
      ]
    ]
  ],
  "test_view_exception_handled_by_process_exception": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MiddlewareTests",
        "test_view_exception_handled_by_process_exception"
      ]
    ],
    [
      "tests/middleware_exceptions/tests.py",
      [
        "AsyncMiddlewareTests",
        "test_view_exception_handled_by_process_exception"
      ]
    ]
  ],
  "test_response_from_process_exception_short_circuits_remainder": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MiddlewareTests",
        "test_response_from_process_exception_short_circuits_remainder"
      ]
    ]
  ],
  "test_response_from_process_exception_when_return_response": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MiddlewareTests",
        "test_response_from_process_exception_when_return_response"
      ]
    ]
  ],
  "test_exception_in_middleware_converted_before_prior_middleware": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MiddlewareTests",
        "test_exception_in_middleware_converted_before_prior_middleware"
      ]
    ]
  ],
  "test_exception_in_render_passed_to_process_exception": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MiddlewareTests",
        "test_exception_in_render_passed_to_process_exception"
      ]
    ],
    [
      "tests/middleware_exceptions/tests.py",
      [
        "AsyncMiddlewareTests",
        "test_exception_in_render_passed_to_process_exception"
      ]
    ]
  ],
  "test_missing_root_urlconf": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "RootUrlconfTests",
        "test_missing_root_urlconf"
      ]
    ]
  ],
  "test_log": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MiddlewareNotUsedTests",
        "test_log"
      ]
    ]
  ],
  "test_log_custom_message": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MiddlewareNotUsedTests",
        "test_log_custom_message"
      ]
    ]
  ],
  "test_do_not_log_when_debug_is_false": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MiddlewareNotUsedTests",
        "test_do_not_log_when_debug_is_false"
      ]
    ]
  ],
  "test_sync_middleware": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MiddlewareSyncAsyncTests",
        "test_sync_middleware"
      ]
    ]
  ],
  "test_sync_decorated_middleware": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MiddlewareSyncAsyncTests",
        "test_sync_decorated_middleware"
      ]
    ]
  ],
  "test_async_middleware": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MiddlewareSyncAsyncTests",
        "test_async_middleware"
      ]
    ]
  ],
  "test_not_sync_or_async_middleware": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MiddlewareSyncAsyncTests",
        "test_not_sync_or_async_middleware"
      ]
    ]
  ],
  "test_sync_middleware_async": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MiddlewareSyncAsyncTests",
        "test_sync_middleware_async"
      ]
    ]
  ],
  "test_async_middleware_async": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MiddlewareSyncAsyncTests",
        "test_async_middleware_async"
      ]
    ]
  ],
  "test_async_process_template_response_returns_none_with_sync_client": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MiddlewareSyncAsyncTests",
        "test_async_process_template_response_returns_none_with_sync_client"
      ]
    ]
  ],
  "test_async_and_sync_middleware_async_call": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MiddlewareSyncAsyncTests",
        "test_async_and_sync_middleware_async_call"
      ]
    ]
  ],
  "test_async_and_sync_middleware_sync_call": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "MiddlewareSyncAsyncTests",
        "test_async_and_sync_middleware_sync_call"
      ]
    ]
  ],
  "test_exception_in_async_render_passed_to_process_exception": [
    [
      "tests/middleware_exceptions/tests.py",
      [
        "AsyncMiddlewareTests",
        "test_exception_in_async_render_passed_to_process_exception"
      ]
    ]
  ],
  "normal_view": [
    [
      "tests/middleware_exceptions/views.py",
      [
        "normal_view"
      ]
    ]
  ],
  "template_response": [
    [
      "tests/middleware_exceptions/views.py",
      [
        "template_response"
      ]
    ]
  ],
  "exception_in_render": [
    [
      "tests/middleware_exceptions/views.py",
      [
        "exception_in_render"
      ]
    ]
  ],
  "async_exception_in_render": [
    [
      "tests/middleware_exceptions/views.py",
      [
        "async_exception_in_render"
      ]
    ]
  ],
  "test_call_time": [
    [
      "tests/migrate_signals/tests.py",
      [
        "MigrateSignalTests",
        "test_call_time"
      ]
    ]
  ],
  "test_migrations_only": [
    [
      "tests/migrate_signals/tests.py",
      [
        "MigrateSignalTests",
        "test_migrations_only"
      ]
    ]
  ],
  "add_book": [
    [
      "tests/migration_test_data_persistence/migrations/0002_add_book.py",
      [
        "add_book"
      ]
    ]
  ],
  "test_persistence": [
    [
      "tests/migration_test_data_persistence/tests.py",
      [
        "MigrationDataPersistenceTestCase",
        "test_persistence"
      ]
    ],
    [
      "tests/migration_test_data_persistence/tests.py",
      [
        "MigrationDataNormalPersistenceTestCase",
        "test_persistence"
      ]
    ]
  ],
  "repr_changes": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "repr_changes"
      ]
    ]
  ],
  "assertNumberMigrations": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "assertNumberMigrations"
      ]
    ]
  ],
  "assertMigrationDependencies": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "assertMigrationDependencies"
      ]
    ]
  ],
  "assertOperationTypes": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "assertOperationTypes"
      ]
    ]
  ],
  "assertOperationAttributes": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "assertOperationAttributes"
      ]
    ]
  ],
  "assertOperationFieldAttributes": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "assertOperationFieldAttributes"
      ]
    ]
  ],
  "make_project_state": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "make_project_state"
      ]
    ]
  ],
  "get_changes": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "get_changes"
      ]
    ]
  ],
  "test_arrange_for_graph": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_arrange_for_graph"
      ]
    ]
  ],
  "test_trim_apps": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_trim_apps"
      ]
    ]
  ],
  "test_custom_migration_name": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_custom_migration_name"
      ]
    ]
  ],
  "test_new_model": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_new_model"
      ]
    ]
  ],
  "test_old_model": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_old_model"
      ]
    ]
  ],
  "test_add_field": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_add_field"
      ]
    ],
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_add_field"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_add_field"
      ]
    ]
  ],
  "test_add_date_fields_with_auto_now_not_asking_for_default": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_add_date_fields_with_auto_now_not_asking_for_default"
      ]
    ]
  ],
  "test_add_date_fields_with_auto_now_add_not_asking_for_null_addition": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_add_date_fields_with_auto_now_add_not_asking_for_null_addition"
      ]
    ]
  ],
  "test_add_date_fields_with_auto_now_add_asking_for_default": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_add_date_fields_with_auto_now_add_asking_for_default"
      ]
    ]
  ],
  "test_remove_field": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_remove_field"
      ]
    ],
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_remove_field"
      ]
    ]
  ],
  "test_alter_field": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_alter_field"
      ]
    ],
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_alter_field"
      ]
    ]
  ],
  "_content_file_name": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_supports_functools_partial",
        "_content_file_name"
      ]
    ]
  ],
  "content_file_name": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_supports_functools_partial",
        "content_file_name"
      ]
    ]
  ],
  "test_supports_functools_partial": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_supports_functools_partial"
      ]
    ]
  ],
  "test_alter_field_to_not_null_with_default": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_alter_field_to_not_null_with_default"
      ]
    ]
  ],
  "test_alter_field_to_not_null_without_default": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_alter_field_to_not_null_without_default"
      ]
    ]
  ],
  "test_alter_field_to_not_null_oneoff_default": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_alter_field_to_not_null_oneoff_default"
      ]
    ]
  ],
  "test_rename_field": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_rename_field"
      ]
    ],
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_rename_field"
      ]
    ]
  ],
  "test_rename_field_foreign_key_to_field": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_rename_field_foreign_key_to_field"
      ]
    ]
  ],
  "test_rename_foreign_object_fields": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_rename_foreign_object_fields"
      ]
    ]
  ],
  "test_rename_referenced_primary_key": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_rename_referenced_primary_key"
      ]
    ]
  ],
  "test_rename_field_preserved_db_column": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_rename_field_preserved_db_column"
      ]
    ]
  ],
  "test_rename_related_field_preserved_db_column": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_rename_related_field_preserved_db_column"
      ]
    ]
  ],
  "test_rename_model": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_rename_model"
      ]
    ],
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_rename_model"
      ]
    ]
  ],
  "test_rename_model_case": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_rename_model_case"
      ]
    ]
  ],
  "test_rename_m2m_through_model": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_rename_m2m_through_model"
      ]
    ],
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_rename_m2m_through_model"
      ]
    ]
  ],
  "test_rename_model_with_renamed_rel_field": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_rename_model_with_renamed_rel_field"
      ]
    ]
  ],
  "test_rename_model_with_fks_in_different_position": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_rename_model_with_fks_in_different_position"
      ]
    ]
  ],
  "test_rename_model_reverse_relation_dependencies": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_rename_model_reverse_relation_dependencies"
      ]
    ]
  ],
  "test_fk_dependency": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_fk_dependency"
      ]
    ]
  ],
  "test_proxy_fk_dependency": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_proxy_fk_dependency"
      ]
    ]
  ],
  "test_same_app_no_fk_dependency": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_same_app_no_fk_dependency"
      ]
    ]
  ],
  "test_circular_fk_dependency": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_circular_fk_dependency"
      ]
    ]
  ],
  "test_same_app_circular_fk_dependency": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_same_app_circular_fk_dependency"
      ]
    ]
  ],
  "test_same_app_circular_fk_dependency_with_unique_together_and_indexes": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_same_app_circular_fk_dependency_with_unique_together_and_indexes"
      ]
    ]
  ],
  "test_alter_db_table_add": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_alter_db_table_add"
      ]
    ]
  ],
  "test_alter_db_table_change": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_alter_db_table_change"
      ]
    ]
  ],
  "test_alter_db_table_remove": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_alter_db_table_remove"
      ]
    ]
  ],
  "test_alter_db_table_no_changes": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_alter_db_table_no_changes"
      ]
    ]
  ],
  "test_keep_db_table_with_model_change": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_keep_db_table_with_model_change"
      ]
    ]
  ],
  "test_alter_db_table_with_model_change": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_alter_db_table_with_model_change"
      ]
    ]
  ],
  "test_identical_regex_doesnt_alter": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_identical_regex_doesnt_alter"
      ]
    ]
  ],
  "test_different_regex_does_alter": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_different_regex_does_alter"
      ]
    ]
  ],
  "test_empty_foo_together": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_empty_foo_together"
      ]
    ]
  ],
  "test_create_model_with_indexes": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_create_model_with_indexes"
      ]
    ]
  ],
  "test_add_indexes": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_add_indexes"
      ]
    ]
  ],
  "test_remove_indexes": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_remove_indexes"
      ]
    ]
  ],
  "test_order_fields_indexes": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_order_fields_indexes"
      ]
    ]
  ],
  "test_create_model_with_check_constraint": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_create_model_with_check_constraint"
      ]
    ]
  ],
  "test_add_constraints": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_add_constraints"
      ]
    ]
  ],
  "test_remove_constraints": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_remove_constraints"
      ]
    ]
  ],
  "test_add_foo_together": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_add_foo_together"
      ]
    ]
  ],
  "test_remove_foo_together": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_remove_foo_together"
      ]
    ]
  ],
  "test_foo_together_remove_fk": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_foo_together_remove_fk"
      ]
    ]
  ],
  "test_foo_together_no_changes": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_foo_together_no_changes"
      ]
    ]
  ],
  "test_foo_together_ordering": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_foo_together_ordering"
      ]
    ]
  ],
  "test_add_field_and_foo_together": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_add_field_and_foo_together"
      ]
    ]
  ],
  "test_create_model_and_unique_together": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_create_model_and_unique_together"
      ]
    ]
  ],
  "test_remove_field_and_foo_together": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_remove_field_and_foo_together"
      ]
    ]
  ],
  "test_rename_field_and_foo_together": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_rename_field_and_foo_together"
      ]
    ]
  ],
  "test_proxy_custom_pk": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_proxy_custom_pk"
      ]
    ]
  ],
  "test_proxy_to_mti_with_fk_to_proxy": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_proxy_to_mti_with_fk_to_proxy"
      ]
    ]
  ],
  "test_proxy_to_mti_with_fk_to_proxy_proxy": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_proxy_to_mti_with_fk_to_proxy_proxy"
      ]
    ]
  ],
  "test_unmanaged_create": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_unmanaged_create"
      ]
    ]
  ],
  "test_unmanaged_delete": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_unmanaged_delete"
      ]
    ]
  ],
  "test_unmanaged_to_managed": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_unmanaged_to_managed"
      ]
    ]
  ],
  "test_managed_to_unmanaged": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_managed_to_unmanaged"
      ]
    ]
  ],
  "test_unmanaged_custom_pk": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_unmanaged_custom_pk"
      ]
    ]
  ],
  "test_swappable": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_swappable"
      ]
    ],
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelTests",
        "test_swappable"
      ]
    ]
  ],
  "test_swappable_changed": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_swappable_changed"
      ]
    ]
  ],
  "test_add_field_with_default": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_add_field_with_default"
      ]
    ]
  ],
  "test_custom_deconstructible": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_custom_deconstructible"
      ]
    ]
  ],
  "test_deconstruct_field_kwarg": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_deconstruct_field_kwarg"
      ]
    ]
  ],
  "test_deconstructible_list": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_deconstructible_list"
      ]
    ]
  ],
  "test_deconstructible_tuple": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_deconstructible_tuple"
      ]
    ]
  ],
  "test_deconstructible_dict": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_deconstructible_dict"
      ]
    ]
  ],
  "test_nested_deconstructible_objects": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_nested_deconstructible_objects"
      ]
    ]
  ],
  "test_deconstruct_type": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_deconstruct_type"
      ]
    ]
  ],
  "test_replace_string_with_foreignkey": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_replace_string_with_foreignkey"
      ]
    ]
  ],
  "test_foreign_key_removed_before_target_model": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_foreign_key_removed_before_target_model"
      ]
    ]
  ],
  "test_add_many_to_many": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_add_many_to_many"
      ]
    ]
  ],
  "test_alter_many_to_many": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_alter_many_to_many"
      ]
    ]
  ],
  "test_create_with_through_model": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_create_with_through_model"
      ]
    ]
  ],
  "test_many_to_many_removed_before_through_model": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_many_to_many_removed_before_through_model"
      ]
    ]
  ],
  "test_many_to_many_removed_before_through_model_2": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_many_to_many_removed_before_through_model_2"
      ]
    ]
  ],
  "test_m2m_w_through_multistep_remove": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_m2m_w_through_multistep_remove"
      ]
    ]
  ],
  "test_concrete_field_changed_to_many_to_many": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_concrete_field_changed_to_many_to_many"
      ]
    ]
  ],
  "test_many_to_many_changed_to_concrete_field": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_many_to_many_changed_to_concrete_field"
      ]
    ]
  ],
  "test_non_circular_foreignkey_dependency_removal": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_non_circular_foreignkey_dependency_removal"
      ]
    ]
  ],
  "test_alter_model_options": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_alter_model_options"
      ]
    ],
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_alter_model_options"
      ]
    ]
  ],
  "test_alter_model_options_proxy": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_alter_model_options_proxy"
      ]
    ]
  ],
  "test_set_alter_order_with_respect_to": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_set_alter_order_with_respect_to"
      ]
    ]
  ],
  "test_add_alter_order_with_respect_to": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_add_alter_order_with_respect_to"
      ]
    ]
  ],
  "test_remove_alter_order_with_respect_to": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_remove_alter_order_with_respect_to"
      ]
    ]
  ],
  "test_add_model_order_with_respect_to": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_add_model_order_with_respect_to"
      ]
    ]
  ],
  "test_alter_model_managers": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_alter_model_managers"
      ]
    ],
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_alter_model_managers"
      ]
    ]
  ],
  "test_swappable_first_inheritance": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_swappable_first_inheritance"
      ]
    ]
  ],
  "test_default_related_name_option": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_default_related_name_option"
      ]
    ]
  ],
  "test_swappable_first_setting": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_swappable_first_setting"
      ]
    ]
  ],
  "test_bases_first": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_bases_first"
      ]
    ]
  ],
  "test_multiple_bases": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_multiple_bases"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "RelatedModelsTests",
        "test_multiple_bases"
      ]
    ]
  ],
  "test_proxy_bases_first": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_proxy_bases_first"
      ]
    ]
  ],
  "test_pk_fk_included": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_pk_fk_included"
      ]
    ]
  ],
  "test_first_dependency": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_first_dependency"
      ]
    ]
  ],
  "test_last_dependency": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_last_dependency"
      ]
    ]
  ],
  "test_alter_fk_before_model_deletion": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_alter_fk_before_model_deletion"
      ]
    ]
  ],
  "test_fk_dependency_other_app": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_fk_dependency_other_app"
      ]
    ]
  ],
  "test_alter_field_to_fk_dependency_other_app": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_alter_field_to_fk_dependency_other_app"
      ]
    ]
  ],
  "test_circular_dependency_mixed_addcreate": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_circular_dependency_mixed_addcreate"
      ]
    ]
  ],
  "test_circular_dependency_swappable": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_circular_dependency_swappable"
      ]
    ]
  ],
  "test_circular_dependency_swappable2": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_circular_dependency_swappable2"
      ]
    ]
  ],
  "test_circular_dependency_swappable_self": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_circular_dependency_swappable_self"
      ]
    ]
  ],
  "test_swappable_circular_multi_mti": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_swappable_circular_multi_mti"
      ]
    ]
  ],
  "test_add_blank_textfield_and_charfield": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_add_blank_textfield_and_charfield"
      ]
    ]
  ],
  "test_add_non_blank_textfield_and_charfield": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_add_non_blank_textfield_and_charfield"
      ]
    ]
  ],
  "test_mti_inheritance_model_removal": [
    [
      "tests/migrations/test_autodetector.py",
      [
        "AutodetectorTests",
        "test_mti_inheritance_model_removal"
      ]
    ]
  ],
  "_get_column_allows_null": [
    [
      "tests/migrations/test_base.py",
      [
        "MigrationTestBase",
        "_get_column_allows_null"
      ]
    ]
  ],
  "assertColumnNull": [
    [
      "tests/migrations/test_base.py",
      [
        "MigrationTestBase",
        "assertColumnNull"
      ]
    ]
  ],
  "assertColumnNotNull": [
    [
      "tests/migrations/test_base.py",
      [
        "MigrationTestBase",
        "assertColumnNotNull"
      ]
    ]
  ],
  "assertIndexExists": [
    [
      "tests/migrations/test_base.py",
      [
        "MigrationTestBase",
        "assertIndexExists"
      ]
    ]
  ],
  "assertIndexNotExists": [
    [
      "tests/migrations/test_base.py",
      [
        "MigrationTestBase",
        "assertIndexNotExists"
      ]
    ]
  ],
  "assertConstraintExists": [
    [
      "tests/migrations/test_base.py",
      [
        "MigrationTestBase",
        "assertConstraintExists"
      ]
    ]
  ],
  "assertConstraintNotExists": [
    [
      "tests/migrations/test_base.py",
      [
        "MigrationTestBase",
        "assertConstraintNotExists"
      ]
    ]
  ],
  "assertFKExists": [
    [
      "tests/migrations/test_base.py",
      [
        "MigrationTestBase",
        "assertFKExists"
      ]
    ]
  ],
  "assertFKNotExists": [
    [
      "tests/migrations/test_base.py",
      [
        "MigrationTestBase",
        "assertFKNotExists"
      ]
    ]
  ],
  "temporary_migration_module": [
    [
      "tests/migrations/test_base.py",
      [
        "MigrationTestBase",
        "temporary_migration_module"
      ]
    ]
  ],
  "cleanup_test_tables": [
    [
      "tests/migrations/test_base.py",
      [
        "OperationTestBase",
        "cleanup_test_tables"
      ]
    ]
  ],
  "unapply_operations": [
    [
      "tests/migrations/test_base.py",
      [
        "OperationTestBase",
        "unapply_operations"
      ]
    ]
  ],
  "make_test_state": [
    [
      "tests/migrations/test_base.py",
      [
        "OperationTestBase",
        "make_test_state"
      ]
    ]
  ],
  "test_migrate": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_migrate"
      ]
    ],
    [
      "tests/migrations/test_deprecated_fields.py",
      [
        "Tests",
        "test_migrate"
      ]
    ]
  ],
  "test_migrate_with_system_checks": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_migrate_with_system_checks"
      ]
    ]
  ],
  "test_app_without_migrations": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_app_without_migrations"
      ]
    ]
  ],
  "test_ambiguous_prefix": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_ambiguous_prefix"
      ]
    ]
  ],
  "test_unknown_prefix": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_unknown_prefix"
      ]
    ]
  ],
  "test_migrate_initial_false": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_migrate_initial_false"
      ]
    ]
  ],
  "test_migrate_fake_initial": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_migrate_fake_initial"
      ]
    ]
  ],
  "test_migrate_fake_initial_case_insensitive": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_migrate_fake_initial_case_insensitive"
      ]
    ]
  ],
  "test_migrate_fake_split_initial": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_migrate_fake_split_initial"
      ]
    ]
  ],
  "test_migrate_conflict_exit": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_migrate_conflict_exit"
      ]
    ]
  ],
  "test_migrate_check": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_migrate_check"
      ]
    ]
  ],
  "test_migrate_check_plan": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_migrate_check_plan"
      ]
    ]
  ],
  "test_showmigrations_list": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_showmigrations_list"
      ]
    ]
  ],
  "test_showmigrations_plan": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_showmigrations_plan"
      ]
    ]
  ],
  "test_migrate_plan": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_migrate_plan"
      ]
    ]
  ],
  "test_showmigrations_no_migrations": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_showmigrations_no_migrations"
      ]
    ]
  ],
  "test_showmigrations_unmigrated_app": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_showmigrations_unmigrated_app"
      ]
    ]
  ],
  "test_showmigrations_plan_no_migrations": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_showmigrations_plan_no_migrations"
      ]
    ]
  ],
  "test_showmigrations_plan_squashed": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_showmigrations_plan_squashed"
      ]
    ]
  ],
  "test_showmigrations_plan_single_app_label": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_showmigrations_plan_single_app_label"
      ]
    ]
  ],
  "test_showmigrations_plan_multiple_app_labels": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_showmigrations_plan_multiple_app_labels"
      ]
    ]
  ],
  "test_showmigrations_plan_app_label_no_migrations": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_showmigrations_plan_app_label_no_migrations"
      ]
    ]
  ],
  "test_sqlmigrate_forwards": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_sqlmigrate_forwards"
      ]
    ]
  ],
  "test_sqlmigrate_backwards": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_sqlmigrate_backwards"
      ]
    ]
  ],
  "test_sqlmigrate_for_non_atomic_migration": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_sqlmigrate_for_non_atomic_migration"
      ]
    ]
  ],
  "test_sqlmigrate_for_non_transactional_databases": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_sqlmigrate_for_non_transactional_databases"
      ]
    ]
  ],
  "test_sqlmigrate_ambiguous_prefix_squashed_migrations": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_sqlmigrate_ambiguous_prefix_squashed_migrations"
      ]
    ]
  ],
  "test_sqlmigrate_squashed_migration": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_sqlmigrate_squashed_migration"
      ]
    ]
  ],
  "test_sqlmigrate_replaced_migration": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_sqlmigrate_replaced_migration"
      ]
    ]
  ],
  "test_migrations_no_operations": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_migrations_no_operations"
      ]
    ]
  ],
  "test_regression_22823_unmigrated_fk_to_migrated_model": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_regression_22823_unmigrated_fk_to_migrated_model"
      ]
    ]
  ],
  "test_migrate_syncdb_deferred_sql_executed_with_schemaeditor": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_migrate_syncdb_deferred_sql_executed_with_schemaeditor"
      ]
    ]
  ],
  "test_migrate_syncdb_app_with_migrations": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_migrate_syncdb_app_with_migrations"
      ]
    ]
  ],
  "test_migrate_syncdb_app_label": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_migrate_syncdb_app_label"
      ]
    ]
  ],
  "test_migrate_record_replaced": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_migrate_record_replaced"
      ]
    ]
  ],
  "test_migrate_record_squashed": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_migrate_record_squashed"
      ]
    ]
  ],
  "test_migrate_inconsistent_history": [
    [
      "tests/migrations/test_commands.py",
      [
        "MigrateTests",
        "test_migrate_inconsistent_history"
      ]
    ]
  ],
  "test_files_content": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_files_content"
      ]
    ]
  ],
  "test_makemigrations_order": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_order"
      ]
    ]
  ],
  "test_makemigrations_empty_connections": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_empty_connections"
      ]
    ]
  ],
  "patched_has_table": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_consistency_checks_respect_routers",
        "patched_has_table"
      ]
    ]
  ],
  "test_makemigrations_consistency_checks_respect_routers": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_consistency_checks_respect_routers"
      ]
    ]
  ],
  "test_failing_migration": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_failing_migration"
      ]
    ]
  ],
  "test_makemigrations_conflict_exit": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_conflict_exit"
      ]
    ]
  ],
  "test_makemigrations_merge_no_conflict": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_merge_no_conflict"
      ]
    ]
  ],
  "test_makemigrations_empty_no_app_specified": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_empty_no_app_specified"
      ]
    ]
  ],
  "test_makemigrations_empty_migration": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_empty_migration"
      ]
    ]
  ],
  "test_makemigrations_disabled_migrations_for_app": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_disabled_migrations_for_app"
      ]
    ]
  ],
  "test_makemigrations_no_changes_no_apps": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_no_changes_no_apps"
      ]
    ]
  ],
  "test_makemigrations_no_changes": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_no_changes"
      ]
    ]
  ],
  "test_makemigrations_no_apps_initial": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_no_apps_initial"
      ]
    ]
  ],
  "test_makemigrations_no_init": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_no_init"
      ]
    ]
  ],
  "test_makemigrations_migrations_announce": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_migrations_announce"
      ]
    ]
  ],
  "test_makemigrations_no_common_ancestor": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_no_common_ancestor"
      ]
    ]
  ],
  "test_makemigrations_interactive_reject": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_interactive_reject"
      ]
    ]
  ],
  "test_makemigrations_interactive_accept": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_interactive_accept"
      ]
    ]
  ],
  "test_makemigrations_default_merge_name": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_default_merge_name"
      ]
    ]
  ],
  "test_makemigrations_non_interactive_not_null_addition": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_non_interactive_not_null_addition"
      ]
    ]
  ],
  "test_makemigrations_non_interactive_not_null_alteration": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_non_interactive_not_null_alteration"
      ]
    ]
  ],
  "test_makemigrations_non_interactive_no_model_rename": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_non_interactive_no_model_rename"
      ]
    ]
  ],
  "test_makemigrations_non_interactive_no_field_rename": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_non_interactive_no_field_rename"
      ]
    ]
  ],
  "test_makemigrations_handle_merge": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_handle_merge"
      ]
    ]
  ],
  "test_makemigration_merge_dry_run": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigration_merge_dry_run"
      ]
    ]
  ],
  "test_makemigration_merge_dry_run_verbosity_3": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigration_merge_dry_run_verbosity_3"
      ]
    ]
  ],
  "test_makemigrations_dry_run": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_dry_run"
      ]
    ]
  ],
  "test_makemigrations_dry_run_verbosity_3": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_dry_run_verbosity_3"
      ]
    ]
  ],
  "test_makemigrations_migrations_modules_path_not_exist": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_migrations_modules_path_not_exist"
      ]
    ]
  ],
  "test_makemigrations_migrations_modules_nonexistent_toplevel_package": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_migrations_modules_nonexistent_toplevel_package"
      ]
    ]
  ],
  "test_makemigrations_interactive_by_default": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_interactive_by_default"
      ]
    ]
  ],
  "test_makemigrations_unspecified_app_with_conflict_no_merge": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_unspecified_app_with_conflict_no_merge"
      ]
    ]
  ],
  "test_makemigrations_unspecified_app_with_conflict_merge": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_unspecified_app_with_conflict_merge"
      ]
    ]
  ],
  "test_makemigrations_merge_dont_output_dependency_operations": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_merge_dont_output_dependency_operations"
      ]
    ]
  ],
  "cmd": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_with_custom_name",
        "with_self_temporary_migra",
        "cmd"
      ]
    ]
  ],
  "test_makemigrations_with_custom_name": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_with_custom_name"
      ]
    ]
  ],
  "test_makemigrations_with_invalid_custom_name": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_with_invalid_custom_name"
      ]
    ]
  ],
  "test_makemigrations_check": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_check"
      ]
    ]
  ],
  "test_makemigrations_migration_path_output": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_migration_path_output"
      ]
    ]
  ],
  "test_makemigrations_migration_path_output_valueerror": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_migration_path_output_valueerror"
      ]
    ]
  ],
  "test_makemigrations_inconsistent_history": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_inconsistent_history"
      ]
    ]
  ],
  "test_makemigrations_auto_now_add_interactive": [
    [
      "tests/migrations/test_commands.py",
      [
        "MakeMigrationsTests",
        "test_makemigrations_auto_now_add_interactive"
      ]
    ]
  ],
  "test_squashmigrations_squashes": [
    [
      "tests/migrations/test_commands.py",
      [
        "SquashMigrationsTests",
        "test_squashmigrations_squashes"
      ]
    ]
  ],
  "test_squashmigrations_initial_attribute": [
    [
      "tests/migrations/test_commands.py",
      [
        "SquashMigrationsTests",
        "test_squashmigrations_initial_attribute"
      ]
    ]
  ],
  "test_squashmigrations_optimizes": [
    [
      "tests/migrations/test_commands.py",
      [
        "SquashMigrationsTests",
        "test_squashmigrations_optimizes"
      ]
    ]
  ],
  "test_ticket_23799_squashmigrations_no_optimize": [
    [
      "tests/migrations/test_commands.py",
      [
        "SquashMigrationsTests",
        "test_ticket_23799_squashmigrations_no_optimize"
      ]
    ]
  ],
  "test_squashmigrations_valid_start": [
    [
      "tests/migrations/test_commands.py",
      [
        "SquashMigrationsTests",
        "test_squashmigrations_valid_start"
      ]
    ]
  ],
  "test_squashmigrations_invalid_start": [
    [
      "tests/migrations/test_commands.py",
      [
        "SquashMigrationsTests",
        "test_squashmigrations_invalid_start"
      ]
    ]
  ],
  "test_squashed_name_with_start_migration_name": [
    [
      "tests/migrations/test_commands.py",
      [
        "SquashMigrationsTests",
        "test_squashed_name_with_start_migration_name"
      ]
    ]
  ],
  "test_squashed_name_without_start_migration_name": [
    [
      "tests/migrations/test_commands.py",
      [
        "SquashMigrationsTests",
        "test_squashed_name_without_start_migration_name"
      ]
    ]
  ],
  "test_makemigrations_nonexistent_app_label": [
    [
      "tests/migrations/test_commands.py",
      [
        "AppLabelErrorTests",
        "test_makemigrations_nonexistent_app_label"
      ]
    ]
  ],
  "test_makemigrations_app_name_specified_as_label": [
    [
      "tests/migrations/test_commands.py",
      [
        "AppLabelErrorTests",
        "test_makemigrations_app_name_specified_as_label"
      ]
    ]
  ],
  "test_migrate_nonexistent_app_label": [
    [
      "tests/migrations/test_commands.py",
      [
        "AppLabelErrorTests",
        "test_migrate_nonexistent_app_label"
      ]
    ]
  ],
  "test_migrate_app_name_specified_as_label": [
    [
      "tests/migrations/test_commands.py",
      [
        "AppLabelErrorTests",
        "test_migrate_app_name_specified_as_label"
      ]
    ]
  ],
  "test_showmigrations_nonexistent_app_label": [
    [
      "tests/migrations/test_commands.py",
      [
        "AppLabelErrorTests",
        "test_showmigrations_nonexistent_app_label"
      ]
    ]
  ],
  "test_showmigrations_app_name_specified_as_label": [
    [
      "tests/migrations/test_commands.py",
      [
        "AppLabelErrorTests",
        "test_showmigrations_app_name_specified_as_label"
      ]
    ]
  ],
  "test_sqlmigrate_nonexistent_app_label": [
    [
      "tests/migrations/test_commands.py",
      [
        "AppLabelErrorTests",
        "test_sqlmigrate_nonexistent_app_label"
      ]
    ]
  ],
  "test_sqlmigrate_app_name_specified_as_label": [
    [
      "tests/migrations/test_commands.py",
      [
        "AppLabelErrorTests",
        "test_sqlmigrate_app_name_specified_as_label"
      ]
    ]
  ],
  "test_squashmigrations_nonexistent_app_label": [
    [
      "tests/migrations/test_commands.py",
      [
        "AppLabelErrorTests",
        "test_squashmigrations_nonexistent_app_label"
      ]
    ]
  ],
  "test_squashmigrations_app_name_specified_as_label": [
    [
      "tests/migrations/test_commands.py",
      [
        "AppLabelErrorTests",
        "test_squashmigrations_app_name_specified_as_label"
      ]
    ]
  ],
  "test_node_not_found_error_repr": [
    [
      "tests/migrations/test_exceptions.py",
      [
        "ExceptionTests",
        "test_node_not_found_error_repr"
      ]
    ]
  ],
  "test_run": [
    [
      "tests/migrations/test_executor.py",
      [
        "ExecutorTests",
        "test_run"
      ]
    ]
  ],
  "test_run_with_squashed": [
    [
      "tests/migrations/test_executor.py",
      [
        "ExecutorTests",
        "test_run_with_squashed"
      ]
    ]
  ],
  "test_non_atomic_migration": [
    [
      "tests/migrations/test_executor.py",
      [
        "ExecutorTests",
        "test_non_atomic_migration"
      ]
    ]
  ],
  "test_atomic_operation_in_non_atomic_migration": [
    [
      "tests/migrations/test_executor.py",
      [
        "ExecutorTests",
        "test_atomic_operation_in_non_atomic_migration"
      ]
    ]
  ],
  "test_empty_plan": [
    [
      "tests/migrations/test_executor.py",
      [
        "ExecutorTests",
        "test_empty_plan"
      ]
    ]
  ],
  "test_mixed_plan_not_supported": [
    [
      "tests/migrations/test_executor.py",
      [
        "ExecutorTests",
        "test_mixed_plan_not_supported"
      ]
    ]
  ],
  "fake_storer": [
    [
      "tests/migrations/test_executor.py",
      [
        "ExecutorTests",
        "test_soft_apply",
        "fake_storer"
      ]
    ]
  ],
  "test_soft_apply": [
    [
      "tests/migrations/test_executor.py",
      [
        "ExecutorTests",
        "test_soft_apply"
      ]
    ]
  ],
  "test_custom_user": [
    [
      "tests/migrations/test_executor.py",
      [
        "ExecutorTests",
        "test_custom_user"
      ]
    ]
  ],
  "test_detect_soft_applied_add_field_manytomanyfield": [
    [
      "tests/migrations/test_executor.py",
      [
        "ExecutorTests",
        "test_detect_soft_applied_add_field_manytomanyfield"
      ]
    ]
  ],
  "test_unrelated_model_lookups_forwards": [
    [
      "tests/migrations/test_executor.py",
      [
        "ExecutorTests",
        "test_unrelated_model_lookups_forwards"
      ]
    ]
  ],
  "test_unrelated_model_lookups_backwards": [
    [
      "tests/migrations/test_executor.py",
      [
        "ExecutorTests",
        "test_unrelated_model_lookups_backwards"
      ]
    ]
  ],
  "test_unrelated_applied_migrations_mutate_state": [
    [
      "tests/migrations/test_executor.py",
      [
        "ExecutorTests",
        "test_unrelated_applied_migrations_mutate_state"
      ]
    ]
  ],
  "test_process_callback": [
    [
      "tests/migrations/test_executor.py",
      [
        "ExecutorTests",
        "test_process_callback"
      ]
    ]
  ],
  "test_alter_id_type_with_fk": [
    [
      "tests/migrations/test_executor.py",
      [
        "ExecutorTests",
        "test_alter_id_type_with_fk"
      ]
    ]
  ],
  "test_apply_all_replaced_marks_replacement_as_applied": [
    [
      "tests/migrations/test_executor.py",
      [
        "ExecutorTests",
        "test_apply_all_replaced_marks_replacement_as_applied"
      ]
    ]
  ],
  "test_migrate_marks_replacement_applied_even_if_it_did_nothing": [
    [
      "tests/migrations/test_executor.py",
      [
        "ExecutorTests",
        "test_migrate_marks_replacement_applied_even_if_it_did_nothing"
      ]
    ]
  ],
  "test_migrations_applied_and_recorded_atomically": [
    [
      "tests/migrations/test_executor.py",
      [
        "ExecutorTests",
        "test_migrations_applied_and_recorded_atomically"
      ]
    ]
  ],
  "test_minimize_rollbacks": [
    [
      "tests/migrations/test_executor.py",
      [
        "ExecutorUnitTests",
        "test_minimize_rollbacks"
      ]
    ]
  ],
  "test_minimize_rollbacks_branchy": [
    [
      "tests/migrations/test_executor.py",
      [
        "ExecutorUnitTests",
        "test_minimize_rollbacks_branchy"
      ]
    ]
  ],
  "test_backwards_nothing_to_do": [
    [
      "tests/migrations/test_executor.py",
      [
        "ExecutorUnitTests",
        "test_backwards_nothing_to_do"
      ]
    ]
  ],
  "test_simple_graph": [
    [
      "tests/migrations/test_graph.py",
      [
        "GraphTests",
        "test_simple_graph"
      ]
    ]
  ],
  "test_complex_graph": [
    [
      "tests/migrations/test_graph.py",
      [
        "GraphTests",
        "test_complex_graph"
      ]
    ]
  ],
  "test_circular_graph": [
    [
      "tests/migrations/test_graph.py",
      [
        "GraphTests",
        "test_circular_graph"
      ]
    ]
  ],
  "test_circular_graph_2": [
    [
      "tests/migrations/test_graph.py",
      [
        "GraphTests",
        "test_circular_graph_2"
      ]
    ]
  ],
  "test_iterative_dfs": [
    [
      "tests/migrations/test_graph.py",
      [
        "GraphTests",
        "test_iterative_dfs"
      ]
    ]
  ],
  "test_iterative_dfs_complexity": [
    [
      "tests/migrations/test_graph.py",
      [
        "GraphTests",
        "test_iterative_dfs_complexity"
      ]
    ]
  ],
  "test_plan_invalid_node": [
    [
      "tests/migrations/test_graph.py",
      [
        "GraphTests",
        "test_plan_invalid_node"
      ]
    ]
  ],
  "test_missing_parent_nodes": [
    [
      "tests/migrations/test_graph.py",
      [
        "GraphTests",
        "test_missing_parent_nodes"
      ]
    ]
  ],
  "test_missing_child_nodes": [
    [
      "tests/migrations/test_graph.py",
      [
        "GraphTests",
        "test_missing_child_nodes"
      ]
    ]
  ],
  "test_validate_consistency_missing_parent": [
    [
      "tests/migrations/test_graph.py",
      [
        "GraphTests",
        "test_validate_consistency_missing_parent"
      ]
    ]
  ],
  "test_validate_consistency_missing_child": [
    [
      "tests/migrations/test_graph.py",
      [
        "GraphTests",
        "test_validate_consistency_missing_child"
      ]
    ]
  ],
  "test_validate_consistency_no_error": [
    [
      "tests/migrations/test_graph.py",
      [
        "GraphTests",
        "test_validate_consistency_no_error"
      ]
    ]
  ],
  "test_validate_consistency_dummy": [
    [
      "tests/migrations/test_graph.py",
      [
        "GraphTests",
        "test_validate_consistency_dummy"
      ]
    ]
  ],
  "test_remove_replaced_nodes": [
    [
      "tests/migrations/test_graph.py",
      [
        "GraphTests",
        "test_remove_replaced_nodes"
      ]
    ]
  ],
  "test_remove_replacement_node": [
    [
      "tests/migrations/test_graph.py",
      [
        "GraphTests",
        "test_remove_replacement_node"
      ]
    ]
  ],
  "test_infinite_loop": [
    [
      "tests/migrations/test_graph.py",
      [
        "GraphTests",
        "test_infinite_loop"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "ConditionalTests",
        "test_infinite_loop"
      ]
    ]
  ],
  "test_stringify": [
    [
      "tests/migrations/test_graph.py",
      [
        "GraphTests",
        "test_stringify"
      ]
    ]
  ],
  "test_node_repr": [
    [
      "tests/migrations/test_graph.py",
      [
        "NodeTests",
        "test_node_repr"
      ]
    ]
  ],
  "test_dummynode_repr": [
    [
      "tests/migrations/test_graph.py",
      [
        "NodeTests",
        "test_dummynode_repr"
      ]
    ]
  ],
  "test_apply": [
    [
      "tests/migrations/test_loader.py",
      [
        "RecorderTests",
        "test_apply"
      ]
    ]
  ],
  "test_load": [
    [
      "tests/migrations/test_loader.py",
      [
        "LoaderTests",
        "test_load"
      ]
    ]
  ],
  "test_plan_handles_repeated_migrations": [
    [
      "tests/migrations/test_loader.py",
      [
        "LoaderTests",
        "test_plan_handles_repeated_migrations"
      ]
    ]
  ],
  "test_load_unmigrated_dependency": [
    [
      "tests/migrations/test_loader.py",
      [
        "LoaderTests",
        "test_load_unmigrated_dependency"
      ]
    ]
  ],
  "test_run_before": [
    [
      "tests/migrations/test_loader.py",
      [
        "LoaderTests",
        "test_run_before"
      ]
    ]
  ],
  "test_name_match": [
    [
      "tests/migrations/test_loader.py",
      [
        "LoaderTests",
        "test_name_match"
      ]
    ]
  ],
  "test_load_import_error": [
    [
      "tests/migrations/test_loader.py",
      [
        "LoaderTests",
        "test_load_import_error"
      ]
    ]
  ],
  "test_load_module_file": [
    [
      "tests/migrations/test_loader.py",
      [
        "LoaderTests",
        "test_load_module_file"
      ]
    ]
  ],
  "test_load_empty_dir": [
    [
      "tests/migrations/test_loader.py",
      [
        "LoaderTests",
        "test_load_empty_dir"
      ]
    ]
  ],
  "test_marked_as_migrated": [
    [
      "tests/migrations/test_loader.py",
      [
        "LoaderTests",
        "test_marked_as_migrated"
      ]
    ]
  ],
  "test_marked_as_unmigrated": [
    [
      "tests/migrations/test_loader.py",
      [
        "LoaderTests",
        "test_marked_as_unmigrated"
      ]
    ]
  ],
  "test_explicit_missing_module": [
    [
      "tests/migrations/test_loader.py",
      [
        "LoaderTests",
        "test_explicit_missing_module"
      ]
    ]
  ],
  "test_loading_squashed": [
    [
      "tests/migrations/test_loader.py",
      [
        "LoaderTests",
        "test_loading_squashed"
      ]
    ]
  ],
  "num_nodes": [
    [
      "tests/migrations/test_loader.py",
      [
        "LoaderTests",
        "test_loading_squashed_complex",
        "num_nodes"
      ]
    ],
    [
      "tests/migrations/test_loader.py",
      [
        "LoaderTests",
        "test_loading_squashed_erroneous",
        "num_nodes"
      ]
    ]
  ],
  "test_loading_squashed_complex": [
    [
      "tests/migrations/test_loader.py",
      [
        "LoaderTests",
        "test_loading_squashed_complex"
      ]
    ]
  ],
  "test_loading_squashed_complex_multi_apps": [
    [
      "tests/migrations/test_loader.py",
      [
        "LoaderTests",
        "test_loading_squashed_complex_multi_apps"
      ]
    ]
  ],
  "test_loading_squashed_complex_multi_apps_partially_applied": [
    [
      "tests/migrations/test_loader.py",
      [
        "LoaderTests",
        "test_loading_squashed_complex_multi_apps_partially_applied"
      ]
    ]
  ],
  "test_loading_squashed_erroneous": [
    [
      "tests/migrations/test_loader.py",
      [
        "LoaderTests",
        "test_loading_squashed_erroneous"
      ]
    ]
  ],
  "test_check_consistent_history": [
    [
      "tests/migrations/test_loader.py",
      [
        "LoaderTests",
        "test_check_consistent_history"
      ]
    ]
  ],
  "test_check_consistent_history_squashed": [
    [
      "tests/migrations/test_loader.py",
      [
        "LoaderTests",
        "test_check_consistent_history_squashed"
      ]
    ]
  ],
  "test_loading_squashed_ref_squashed": [
    [
      "tests/migrations/test_loader.py",
      [
        "LoaderTests",
        "test_loading_squashed_ref_squashed"
      ]
    ]
  ],
  "test_ignore_files": [
    [
      "tests/migrations/test_loader.py",
      [
        "LoaderTests",
        "test_ignore_files"
      ]
    ]
  ],
  "test_loading_namespace_package": [
    [
      "tests/migrations/test_loader.py",
      [
        "LoaderTests",
        "test_loading_namespace_package"
      ]
    ]
  ],
  "grow_tail": [
    [
      "tests/migrations/test_migrations_plan/0001_initial.py",
      [
        "grow_tail"
      ]
    ],
    [
      "tests/migrations/test_migrations_plan/0005_fifth.py",
      [
        "grow_tail"
      ]
    ]
  ],
  "shrink_tail": [
    [
      "tests/migrations/test_migrations_plan/0001_initial.py",
      [
        "shrink_tail"
      ]
    ]
  ],
  "_test_create_model": [
    [
      "tests/migrations/test_multidb.py",
      [
        "MultiDBOperationTests",
        "_test_create_model"
      ]
    ]
  ],
  "test_create_model": [
    [
      "tests/migrations/test_multidb.py",
      [
        "MultiDBOperationTests",
        "test_create_model"
      ]
    ],
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_create_model"
      ]
    ]
  ],
  "test_create_model2": [
    [
      "tests/migrations/test_multidb.py",
      [
        "MultiDBOperationTests",
        "test_create_model2"
      ]
    ]
  ],
  "test_create_model3": [
    [
      "tests/migrations/test_multidb.py",
      [
        "MultiDBOperationTests",
        "test_create_model3"
      ]
    ]
  ],
  "test_create_model4": [
    [
      "tests/migrations/test_multidb.py",
      [
        "MultiDBOperationTests",
        "test_create_model4"
      ]
    ]
  ],
  "_test_run_sql": [
    [
      "tests/migrations/test_multidb.py",
      [
        "MultiDBOperationTests",
        "_test_run_sql"
      ]
    ]
  ],
  "test_run_sql_migrate_nothing_router": [
    [
      "tests/migrations/test_multidb.py",
      [
        "MultiDBOperationTests",
        "test_run_sql_migrate_nothing_router"
      ]
    ]
  ],
  "test_run_sql_migrate_foo_router_without_hints": [
    [
      "tests/migrations/test_multidb.py",
      [
        "MultiDBOperationTests",
        "test_run_sql_migrate_foo_router_without_hints"
      ]
    ]
  ],
  "test_run_sql_migrate_foo_router_with_hints": [
    [
      "tests/migrations/test_multidb.py",
      [
        "MultiDBOperationTests",
        "test_run_sql_migrate_foo_router_with_hints"
      ]
    ]
  ],
  "_test_run_python": [
    [
      "tests/migrations/test_multidb.py",
      [
        "MultiDBOperationTests",
        "_test_run_python"
      ]
    ]
  ],
  "test_run_python_migrate_nothing_router": [
    [
      "tests/migrations/test_multidb.py",
      [
        "MultiDBOperationTests",
        "test_run_python_migrate_nothing_router"
      ]
    ]
  ],
  "test_run_python_migrate_foo_router_without_hints": [
    [
      "tests/migrations/test_multidb.py",
      [
        "MultiDBOperationTests",
        "test_run_python_migrate_foo_router_without_hints"
      ]
    ]
  ],
  "test_run_python_migrate_foo_router_with_hints": [
    [
      "tests/migrations/test_multidb.py",
      [
        "MultiDBOperationTests",
        "test_run_python_migrate_foo_router_with_hints"
      ]
    ]
  ],
  "test_create_model_with_duplicate_field_name": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_create_model_with_duplicate_field_name"
      ]
    ]
  ],
  "test_create_model_with_duplicate_base": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_create_model_with_duplicate_base"
      ]
    ]
  ],
  "test_create_model_with_duplicate_manager_name": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_create_model_with_duplicate_manager_name"
      ]
    ]
  ],
  "test_create_model_with_unique_after": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_create_model_with_unique_after"
      ]
    ]
  ],
  "test_create_model_m2m": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_create_model_m2m"
      ]
    ]
  ],
  "test_create_model_inheritance": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_create_model_inheritance"
      ]
    ]
  ],
  "test_create_proxy_model": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_create_proxy_model"
      ]
    ]
  ],
  "test_create_unmanaged_model": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_create_unmanaged_model"
      ]
    ]
  ],
  "test_create_model_with_constraint": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_create_model_with_constraint"
      ]
    ]
  ],
  "test_create_model_with_partial_unique_constraint": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_create_model_with_partial_unique_constraint"
      ]
    ]
  ],
  "test_create_model_managers": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_create_model_managers"
      ]
    ]
  ],
  "test_delete_model": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_delete_model"
      ]
    ]
  ],
  "test_delete_proxy_model": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_delete_proxy_model"
      ]
    ]
  ],
  "test_delete_mti_model": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_delete_mti_model"
      ]
    ]
  ],
  "test_rename_model_state_forwards": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_rename_model_state_forwards"
      ]
    ]
  ],
  "test_rename_model_with_self_referential_fk": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_rename_model_with_self_referential_fk"
      ]
    ]
  ],
  "test_rename_model_with_superclass_fk": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_rename_model_with_superclass_fk"
      ]
    ]
  ],
  "test_rename_model_with_self_referential_m2m": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_rename_model_with_self_referential_m2m"
      ]
    ]
  ],
  "test_rename_model_with_m2m": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_rename_model_with_m2m"
      ]
    ]
  ],
  "test_rename_m2m_target_model": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_rename_m2m_target_model"
      ]
    ]
  ],
  "test_rename_m2m_model_after_rename_field": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_rename_m2m_model_after_rename_field"
      ]
    ]
  ],
  "test_add_charfield": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_add_charfield"
      ]
    ]
  ],
  "test_add_textfield": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_add_textfield"
      ]
    ]
  ],
  "test_add_binaryfield": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_add_binaryfield"
      ]
    ]
  ],
  "test_column_name_quoting": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_column_name_quoting"
      ]
    ]
  ],
  "test_add_field_preserve_default": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_add_field_preserve_default"
      ]
    ]
  ],
  "test_add_field_m2m": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_add_field_m2m"
      ]
    ]
  ],
  "test_alter_field_m2m": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_alter_field_m2m"
      ]
    ]
  ],
  "test_repoint_field_m2m": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_repoint_field_m2m"
      ]
    ]
  ],
  "test_remove_field_m2m": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_remove_field_m2m"
      ]
    ]
  ],
  "test_remove_field_m2m_with_through": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_remove_field_m2m_with_through"
      ]
    ]
  ],
  "test_remove_fk": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_remove_fk"
      ]
    ]
  ],
  "test_alter_model_table": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_alter_model_table"
      ]
    ]
  ],
  "test_alter_model_table_none": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_alter_model_table_none"
      ]
    ]
  ],
  "test_alter_model_table_noop": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_alter_model_table_noop"
      ]
    ]
  ],
  "test_alter_model_table_m2m": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_alter_model_table_m2m"
      ]
    ]
  ],
  "test_alter_field_pk": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_alter_field_pk"
      ]
    ]
  ],
  "assertIdTypeEqualsFkType": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_alter_field_pk_fk",
        "assertIdTypeEqualsFkType"
      ]
    ]
  ],
  "test_alter_field_pk_fk": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_alter_field_pk_fk"
      ]
    ]
  ],
  "test_alter_field_reloads_state_on_fk_with_to_field_target_type_change": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_alter_field_reloads_state_on_fk_with_to_field_target_type_change"
      ]
    ]
  ],
  "test_alter_field_reloads_state_on_fk_with_to_field_related_name_target_type_change": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_alter_field_reloads_state_on_fk_with_to_field_related_name_target_type_change"
      ]
    ]
  ],
  "test_alter_field_reloads_state_on_fk_target_changes": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_alter_field_reloads_state_on_fk_target_changes"
      ]
    ]
  ],
  "test_alter_field_reloads_state_on_fk_with_to_field_target_changes": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_alter_field_reloads_state_on_fk_with_to_field_target_changes"
      ]
    ]
  ],
  "test_rename_field_reloads_state_on_fk_target_changes": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_rename_field_reloads_state_on_fk_target_changes"
      ]
    ]
  ],
  "test_rename_missing_field": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_rename_missing_field"
      ]
    ]
  ],
  "test_rename_referenced_field_state_forward": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_rename_referenced_field_state_forward"
      ]
    ]
  ],
  "test_alter_unique_together": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_alter_unique_together"
      ]
    ]
  ],
  "test_alter_unique_together_remove": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_alter_unique_together_remove"
      ]
    ]
  ],
  "test_add_index": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_add_index"
      ]
    ]
  ],
  "test_remove_index": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_remove_index"
      ]
    ]
  ],
  "test_add_index_state_forwards": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_add_index_state_forwards"
      ]
    ]
  ],
  "test_remove_index_state_forwards": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_remove_index_state_forwards"
      ]
    ]
  ],
  "test_alter_field_with_index": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_alter_field_with_index"
      ]
    ]
  ],
  "test_alter_index_together": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_alter_index_together"
      ]
    ]
  ],
  "test_alter_index_together_remove": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_alter_index_together_remove"
      ]
    ]
  ],
  "test_add_constraint": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_add_constraint"
      ]
    ]
  ],
  "test_add_constraint_percent_escaping": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_add_constraint_percent_escaping"
      ]
    ]
  ],
  "test_add_or_constraint": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_add_or_constraint"
      ]
    ]
  ],
  "test_add_constraint_combinable": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_add_constraint_combinable"
      ]
    ]
  ],
  "test_remove_constraint": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_remove_constraint"
      ]
    ]
  ],
  "test_add_partial_unique_constraint": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_add_partial_unique_constraint"
      ]
    ]
  ],
  "test_remove_partial_unique_constraint": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_remove_partial_unique_constraint"
      ]
    ]
  ],
  "test_alter_model_options_emptying": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_alter_model_options_emptying"
      ]
    ]
  ],
  "test_alter_order_with_respect_to": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_alter_order_with_respect_to"
      ]
    ]
  ],
  "test_alter_model_managers_emptying": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_alter_model_managers_emptying"
      ]
    ]
  ],
  "test_alter_fk": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_alter_fk"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_fk"
      ]
    ]
  ],
  "test_alter_fk_non_fk": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_alter_fk_non_fk"
      ]
    ]
  ],
  "test_run_sql": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_run_sql"
      ]
    ]
  ],
  "test_run_sql_params": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_run_sql_params"
      ]
    ]
  ],
  "test_run_sql_params_invalid": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_run_sql_params_invalid"
      ]
    ]
  ],
  "test_run_sql_noop": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_run_sql_noop"
      ]
    ]
  ],
  "inner_method": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_run_python",
        "inner_method"
      ]
    ],
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_run_python_atomic",
        "inner_method"
      ]
    ],
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_run_python_related_assignment",
        "inner_method"
      ]
    ]
  ],
  "inner_method_reverse": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_run_python",
        "inner_method_reverse"
      ]
    ]
  ],
  "create_ponies": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_run_python",
        "create_ponies"
      ]
    ]
  ],
  "create_shetlandponies": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_run_python",
        "create_shetlandponies"
      ]
    ]
  ],
  "test_run_python": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_run_python"
      ]
    ]
  ],
  "test_run_python_atomic": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_run_python_atomic"
      ]
    ]
  ],
  "test_run_python_related_assignment": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_run_python_related_assignment"
      ]
    ]
  ],
  "create_data": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_model_with_bigautofield",
        "create_data"
      ]
    ]
  ],
  "test_model_with_bigautofield": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_model_with_bigautofield"
      ]
    ]
  ],
  "create_initial_data": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "_test_autofield_foreignfield_growth",
        "create_initial_data"
      ]
    ]
  ],
  "create_big_data": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "_test_autofield_foreignfield_growth",
        "create_big_data"
      ]
    ]
  ],
  "_test_autofield_foreignfield_growth": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "_test_autofield_foreignfield_growth"
      ]
    ]
  ],
  "test_autofield__bigautofield_foreignfield_growth": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_autofield__bigautofield_foreignfield_growth"
      ]
    ]
  ],
  "test_smallfield_autofield_foreignfield_growth": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_smallfield_autofield_foreignfield_growth"
      ]
    ]
  ],
  "test_smallfield_bigautofield_foreignfield_growth": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_smallfield_bigautofield_foreignfield_growth"
      ]
    ]
  ],
  "test_run_python_noop": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_run_python_noop"
      ]
    ]
  ],
  "test_separate_database_and_state": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_separate_database_and_state"
      ]
    ]
  ],
  "assertModelsAndTables": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_separate_database_and_state2",
        "assertModelsAndTables"
      ]
    ]
  ],
  "test_separate_database_and_state2": [
    [
      "tests/migrations/test_operations.py",
      [
        "OperationTests",
        "test_separate_database_and_state2"
      ]
    ]
  ],
  "test_create_ignore_swapped": [
    [
      "tests/migrations/test_operations.py",
      [
        "SwappableOperationTests",
        "test_create_ignore_swapped"
      ]
    ]
  ],
  "test_delete_ignore_swapped": [
    [
      "tests/migrations/test_operations.py",
      [
        "SwappableOperationTests",
        "test_delete_ignore_swapped"
      ]
    ]
  ],
  "test_add_field_ignore_swapped": [
    [
      "tests/migrations/test_operations.py",
      [
        "SwappableOperationTests",
        "test_add_field_ignore_swapped"
      ]
    ]
  ],
  "test_indexes_ignore_swapped": [
    [
      "tests/migrations/test_operations.py",
      [
        "SwappableOperationTests",
        "test_indexes_ignore_swapped"
      ]
    ]
  ],
  "test_references_model_mixin": [
    [
      "tests/migrations/test_operations.py",
      [
        "TestCreateModel",
        "test_references_model_mixin"
      ]
    ]
  ],
  "test_references_model": [
    [
      "tests/migrations/test_operations.py",
      [
        "FieldOperationTests",
        "test_references_model"
      ]
    ]
  ],
  "test_references_field_by_name": [
    [
      "tests/migrations/test_operations.py",
      [
        "FieldOperationTests",
        "test_references_field_by_name"
      ]
    ]
  ],
  "test_references_field_by_remote_field_model": [
    [
      "tests/migrations/test_operations.py",
      [
        "FieldOperationTests",
        "test_references_field_by_remote_field_model"
      ]
    ]
  ],
  "test_references_field_by_from_fields": [
    [
      "tests/migrations/test_operations.py",
      [
        "FieldOperationTests",
        "test_references_field_by_from_fields"
      ]
    ]
  ],
  "test_references_field_by_to_fields": [
    [
      "tests/migrations/test_operations.py",
      [
        "FieldOperationTests",
        "test_references_field_by_to_fields"
      ]
    ]
  ],
  "test_references_field_by_through": [
    [
      "tests/migrations/test_operations.py",
      [
        "FieldOperationTests",
        "test_references_field_by_through"
      ]
    ]
  ],
  "test_reference_field_by_through_fields": [
    [
      "tests/migrations/test_operations.py",
      [
        "FieldOperationTests",
        "test_reference_field_by_through_fields"
      ]
    ]
  ],
  "assertOptimizesTo": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "assertOptimizesTo"
      ]
    ]
  ],
  "assertDoesNotOptimize": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "assertDoesNotOptimize"
      ]
    ]
  ],
  "test_none_app_label": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_none_app_label"
      ]
    ]
  ],
  "test_create_delete_model": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_create_delete_model"
      ]
    ]
  ],
  "test_create_rename_model": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_create_rename_model"
      ]
    ]
  ],
  "test_rename_model_self": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_rename_model_self"
      ]
    ]
  ],
  "test_create_alter_model_options": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_create_alter_model_options"
      ]
    ]
  ],
  "_test_create_alter_foo_delete_model": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "_test_create_alter_foo_delete_model"
      ]
    ]
  ],
  "test_create_alter_unique_delete_model": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_create_alter_unique_delete_model"
      ]
    ]
  ],
  "test_create_alter_index_delete_model": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_create_alter_index_delete_model"
      ]
    ]
  ],
  "test_create_alter_owrt_delete_model": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_create_alter_owrt_delete_model"
      ]
    ]
  ],
  "_test_alter_alter_model": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "_test_alter_alter_model"
      ]
    ]
  ],
  "test_alter_alter_table_model": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_alter_alter_table_model"
      ]
    ]
  ],
  "test_alter_alter_unique_model": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_alter_alter_unique_model"
      ]
    ]
  ],
  "test_alter_alter_index_model": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_alter_alter_index_model"
      ]
    ]
  ],
  "test_alter_alter_owrt_model": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_alter_alter_owrt_model"
      ]
    ]
  ],
  "test_optimize_through_create": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_optimize_through_create"
      ]
    ]
  ],
  "test_create_model_add_field": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_create_model_add_field"
      ]
    ]
  ],
  "test_create_model_reordering": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_create_model_reordering"
      ]
    ]
  ],
  "test_create_model_reordering_circular_fk": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_create_model_reordering_circular_fk"
      ]
    ]
  ],
  "test_create_model_no_reordering_for_unrelated_fk": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_create_model_no_reordering_for_unrelated_fk"
      ]
    ]
  ],
  "test_create_model_no_reordering_of_inherited_model": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_create_model_no_reordering_of_inherited_model"
      ]
    ]
  ],
  "test_create_model_add_field_not_through_m2m_through": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_create_model_add_field_not_through_m2m_through"
      ]
    ]
  ],
  "test_create_model_alter_field": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_create_model_alter_field"
      ]
    ]
  ],
  "test_create_model_rename_field": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_create_model_rename_field"
      ]
    ]
  ],
  "test_add_field_rename_field": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_add_field_rename_field"
      ]
    ]
  ],
  "test_alter_field_rename_field": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_alter_field_rename_field"
      ]
    ]
  ],
  "test_create_model_remove_field": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_create_model_remove_field"
      ]
    ]
  ],
  "test_add_field_alter_field": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_add_field_alter_field"
      ]
    ]
  ],
  "test_add_field_delete_field": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_add_field_delete_field"
      ]
    ]
  ],
  "test_alter_field_delete_field": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_alter_field_delete_field"
      ]
    ]
  ],
  "_test_create_alter_foo_field": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "_test_create_alter_foo_field"
      ]
    ]
  ],
  "test_create_alter_unique_field": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_create_alter_unique_field"
      ]
    ]
  ],
  "test_create_alter_index_field": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_create_alter_index_field"
      ]
    ]
  ],
  "test_create_alter_owrt_field": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_create_alter_owrt_field"
      ]
    ]
  ],
  "test_optimize_through_fields": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_optimize_through_fields"
      ]
    ]
  ],
  "test_optimize_elidable_operation": [
    [
      "tests/migrations/test_optimizer.py",
      [
        "OptimizerTests",
        "test_optimize_elidable_operation"
      ]
    ]
  ],
  "test_ask_initial_with_disabled_migrations": [
    [
      "tests/migrations/test_questioner.py",
      [
        "QuestionerTests",
        "test_ask_initial_with_disabled_migrations"
      ]
    ]
  ],
  "test_timedelta_default": [
    [
      "tests/migrations/test_questioner.py",
      [
        "QuestionerTests",
        "test_timedelta_default"
      ]
    ]
  ],
  "test_custom_default_manager_added_to_the_model_state": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_custom_default_manager_added_to_the_model_state"
      ]
    ]
  ],
  "test_custom_default_manager_named_objects_with_false_migration_flag": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_custom_default_manager_named_objects_with_false_migration_flag"
      ]
    ]
  ],
  "test_no_duplicate_managers": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_no_duplicate_managers"
      ]
    ]
  ],
  "test_custom_default_manager": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_custom_default_manager"
      ]
    ]
  ],
  "test_custom_base_manager": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_custom_base_manager"
      ]
    ]
  ],
  "test_apps_bulk_update": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_apps_bulk_update"
      ]
    ]
  ],
  "test_render_model_inheritance": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_render_model_inheritance"
      ]
    ]
  ],
  "test_render_model_with_multiple_inheritance": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_render_model_with_multiple_inheritance"
      ]
    ]
  ],
  "test_render_project_dependencies": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_render_project_dependencies"
      ]
    ]
  ],
  "test_render_unique_app_labels": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_render_unique_app_labels"
      ]
    ]
  ],
  "test_reload_related_model_on_non_relational_fields": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_reload_related_model_on_non_relational_fields"
      ]
    ]
  ],
  "test_reload_model_relationship_consistency": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_reload_model_relationship_consistency"
      ]
    ]
  ],
  "test_add_relations": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_add_relations"
      ]
    ]
  ],
  "get_model_a": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_remove_relations",
        "get_model_a"
      ]
    ],
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_self_relation",
        "get_model_a"
      ]
    ]
  ],
  "test_remove_relations": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_remove_relations"
      ]
    ]
  ],
  "test_self_relation": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_self_relation"
      ]
    ],
    [
      "tests/select_related_onetoone/tests.py",
      [
        "ReverseSelectRelatedTestCase",
        "test_self_relation"
      ]
    ]
  ],
  "test_equality": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_equality"
      ]
    ]
  ],
  "test_dangling_references_throw_error": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_dangling_references_throw_error"
      ]
    ]
  ],
  "test_real_apps": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_real_apps"
      ]
    ]
  ],
  "test_ignore_order_wrt": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_ignore_order_wrt"
      ]
    ]
  ],
  "test_manager_refer_correct_model_version": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_manager_refer_correct_model_version"
      ]
    ]
  ],
  "test_choices_iterator": [
    [
      "tests/migrations/test_state.py",
      [
        "StateTests",
        "test_choices_iterator"
      ]
    ]
  ],
  "test_custom_model_base": [
    [
      "tests/migrations/test_state.py",
      [
        "ModelStateTests",
        "test_custom_model_base"
      ]
    ]
  ],
  "test_bound_field_sanity_check": [
    [
      "tests/migrations/test_state.py",
      [
        "ModelStateTests",
        "test_bound_field_sanity_check"
      ]
    ]
  ],
  "test_sanity_check_to": [
    [
      "tests/migrations/test_state.py",
      [
        "ModelStateTests",
        "test_sanity_check_to"
      ]
    ]
  ],
  "test_sanity_check_through": [
    [
      "tests/migrations/test_state.py",
      [
        "ModelStateTests",
        "test_sanity_check_through"
      ]
    ]
  ],
  "test_sanity_index_name": [
    [
      "tests/migrations/test_state.py",
      [
        "ModelStateTests",
        "test_sanity_index_name"
      ]
    ]
  ],
  "test_fields_immutability": [
    [
      "tests/migrations/test_state.py",
      [
        "ModelStateTests",
        "test_fields_immutability"
      ]
    ]
  ],
  "test_fields_ordering_equality": [
    [
      "tests/migrations/test_state.py",
      [
        "ModelStateTests",
        "test_fields_ordering_equality"
      ]
    ]
  ],
  "test_create_swappable": [
    [
      "tests/migrations/test_state.py",
      [
        "ModelStateTests",
        "test_create_swappable"
      ]
    ]
  ],
  "test_create_swappable_from_abstract": [
    [
      "tests/migrations/test_state.py",
      [
        "ModelStateTests",
        "test_create_swappable_from_abstract"
      ]
    ]
  ],
  "test_custom_manager_swappable": [
    [
      "tests/migrations/test_state.py",
      [
        "ModelStateTests",
        "test_custom_manager_swappable"
      ]
    ]
  ],
  "test_order_with_respect_to_private_field": [
    [
      "tests/migrations/test_state.py",
      [
        "ModelStateTests",
        "test_order_with_respect_to_private_field"
      ]
    ]
  ],
  "test_abstract_model_children_inherit_indexes": [
    [
      "tests/migrations/test_state.py",
      [
        "ModelStateTests",
        "test_abstract_model_children_inherit_indexes"
      ]
    ]
  ],
  "test_explicit_index_name": [
    [
      "tests/migrations/test_state.py",
      [
        "ModelStateTests",
        "test_explicit_index_name"
      ]
    ]
  ],
  "test_from_model_constraints": [
    [
      "tests/migrations/test_state.py",
      [
        "ModelStateTests",
        "test_from_model_constraints"
      ]
    ]
  ],
  "assertRelated": [
    [
      "tests/migrations/test_state.py",
      [
        "RelatedModelsTests",
        "assertRelated"
      ]
    ]
  ],
  "test_unrelated": [
    [
      "tests/migrations/test_state.py",
      [
        "RelatedModelsTests",
        "test_unrelated"
      ]
    ]
  ],
  "test_direct_fk": [
    [
      "tests/migrations/test_state.py",
      [
        "RelatedModelsTests",
        "test_direct_fk"
      ]
    ]
  ],
  "test_direct_hidden_fk": [
    [
      "tests/migrations/test_state.py",
      [
        "RelatedModelsTests",
        "test_direct_hidden_fk"
      ]
    ]
  ],
  "test_fk_through_proxy": [
    [
      "tests/migrations/test_state.py",
      [
        "RelatedModelsTests",
        "test_fk_through_proxy"
      ]
    ]
  ],
  "test_nested_fk": [
    [
      "tests/migrations/test_state.py",
      [
        "RelatedModelsTests",
        "test_nested_fk"
      ]
    ]
  ],
  "test_two_sided": [
    [
      "tests/migrations/test_state.py",
      [
        "RelatedModelsTests",
        "test_two_sided"
      ]
    ]
  ],
  "test_circle": [
    [
      "tests/migrations/test_state.py",
      [
        "RelatedModelsTests",
        "test_circle"
      ]
    ]
  ],
  "test_base": [
    [
      "tests/migrations/test_state.py",
      [
        "RelatedModelsTests",
        "test_base"
      ]
    ]
  ],
  "test_nested_base": [
    [
      "tests/migrations/test_state.py",
      [
        "RelatedModelsTests",
        "test_nested_base"
      ]
    ]
  ],
  "test_multiple_nested_bases": [
    [
      "tests/migrations/test_state.py",
      [
        "RelatedModelsTests",
        "test_multiple_nested_bases"
      ]
    ]
  ],
  "test_base_to_base_fk": [
    [
      "tests/migrations/test_state.py",
      [
        "RelatedModelsTests",
        "test_base_to_base_fk"
      ]
    ]
  ],
  "test_base_to_subclass_fk": [
    [
      "tests/migrations/test_state.py",
      [
        "RelatedModelsTests",
        "test_base_to_subclass_fk"
      ]
    ]
  ],
  "test_direct_m2m": [
    [
      "tests/migrations/test_state.py",
      [
        "RelatedModelsTests",
        "test_direct_m2m"
      ]
    ]
  ],
  "test_direct_m2m_self": [
    [
      "tests/migrations/test_state.py",
      [
        "RelatedModelsTests",
        "test_direct_m2m_self"
      ]
    ]
  ],
  "test_intermediate_m2m_self": [
    [
      "tests/migrations/test_state.py",
      [
        "RelatedModelsTests",
        "test_intermediate_m2m_self"
      ]
    ]
  ],
  "test_intermediate_m2m": [
    [
      "tests/migrations/test_state.py",
      [
        "RelatedModelsTests",
        "test_intermediate_m2m"
      ]
    ]
  ],
  "test_intermediate_m2m_extern_fk": [
    [
      "tests/migrations/test_state.py",
      [
        "RelatedModelsTests",
        "test_intermediate_m2m_extern_fk"
      ]
    ]
  ],
  "test_intermediate_m2m_base": [
    [
      "tests/migrations/test_state.py",
      [
        "RelatedModelsTests",
        "test_intermediate_m2m_base"
      ]
    ]
  ],
  "test_generic_fk": [
    [
      "tests/migrations/test_state.py",
      [
        "RelatedModelsTests",
        "test_generic_fk"
      ]
    ]
  ],
  "test_abstract_base": [
    [
      "tests/migrations/test_state.py",
      [
        "RelatedModelsTests",
        "test_abstract_base"
      ]
    ]
  ],
  "test_nested_abstract_base": [
    [
      "tests/migrations/test_state.py",
      [
        "RelatedModelsTests",
        "test_nested_abstract_base"
      ]
    ]
  ],
  "test_proxy_base": [
    [
      "tests/migrations/test_state.py",
      [
        "RelatedModelsTests",
        "test_proxy_base"
      ]
    ]
  ],
  "test_nested_proxy_base": [
    [
      "tests/migrations/test_state.py",
      [
        "RelatedModelsTests",
        "test_nested_proxy_base"
      ]
    ]
  ],
  "test_multiple_mixed_bases": [
    [
      "tests/migrations/test_state.py",
      [
        "RelatedModelsTests",
        "test_multiple_mixed_bases"
      ]
    ]
  ],
  "test_empty_signature": [
    [
      "tests/migrations/test_writer.py",
      [
        "OperationWriterTests",
        "test_empty_signature"
      ]
    ]
  ],
  "test_args_signature": [
    [
      "tests/migrations/test_writer.py",
      [
        "OperationWriterTests",
        "test_args_signature"
      ]
    ]
  ],
  "test_kwargs_signature": [
    [
      "tests/migrations/test_writer.py",
      [
        "OperationWriterTests",
        "test_kwargs_signature"
      ]
    ]
  ],
  "test_args_kwargs_signature": [
    [
      "tests/migrations/test_writer.py",
      [
        "OperationWriterTests",
        "test_args_kwargs_signature"
      ]
    ]
  ],
  "test_nested_args_signature": [
    [
      "tests/migrations/test_writer.py",
      [
        "OperationWriterTests",
        "test_nested_args_signature"
      ]
    ]
  ],
  "test_multiline_args_signature": [
    [
      "tests/migrations/test_writer.py",
      [
        "OperationWriterTests",
        "test_multiline_args_signature"
      ]
    ]
  ],
  "test_expand_args_signature": [
    [
      "tests/migrations/test_writer.py",
      [
        "OperationWriterTests",
        "test_expand_args_signature"
      ]
    ]
  ],
  "test_nested_operation_expand_args_signature": [
    [
      "tests/migrations/test_writer.py",
      [
        "OperationWriterTests",
        "test_nested_operation_expand_args_signature"
      ]
    ]
  ],
  "safe_exec": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "safe_exec"
      ]
    ]
  ],
  "serialize_round_trip": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "serialize_round_trip"
      ]
    ]
  ],
  "assertSerializedEqual": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "assertSerializedEqual"
      ]
    ]
  ],
  "assertSerializedResultEqual": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "assertSerializedResultEqual"
      ]
    ]
  ],
  "assertSerializedFieldEqual": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "assertSerializedFieldEqual"
      ]
    ]
  ],
  "test_serialize_numbers": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_numbers"
      ]
    ]
  ],
  "test_serialize_constants": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_constants"
      ]
    ]
  ],
  "test_serialize_strings": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_strings"
      ]
    ]
  ],
  "test_serialize_multiline_strings": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_multiline_strings"
      ]
    ]
  ],
  "test_serialize_collections": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_collections"
      ]
    ]
  ],
  "test_serialize_builtin_types": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_builtin_types"
      ]
    ]
  ],
  "test_serialize_lazy_objects": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_lazy_objects"
      ]
    ]
  ],
  "test_serialize_enums": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_enums"
      ]
    ]
  ],
  "test_serialize_choices": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_choices"
      ]
    ]
  ],
  "test_serialize_nested_class": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_nested_class"
      ]
    ]
  ],
  "test_serialize_uuid": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_uuid"
      ]
    ]
  ],
  "test_serialize_functions": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_functions"
      ]
    ]
  ],
  "test_serialize_datetime": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_datetime"
      ]
    ]
  ],
  "test_serialize_fields": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_fields"
      ]
    ]
  ],
  "test_serialize_settings": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_settings"
      ]
    ]
  ],
  "test_serialize_iterators": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_iterators"
      ]
    ]
  ],
  "test_serialize_compiled_regex": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_compiled_regex"
      ]
    ]
  ],
  "test_serialize_class_based_validators": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_class_based_validators"
      ]
    ]
  ],
  "test_serialize_empty_nonempty_tuple": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_empty_nonempty_tuple"
      ]
    ]
  ],
  "test_serialize_range": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_range"
      ]
    ]
  ],
  "test_serialize_builtins": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_builtins"
      ]
    ]
  ],
  "test_serialize_unbound_method_reference": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_unbound_method_reference"
      ]
    ]
  ],
  "test_serialize_local_function_reference": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_local_function_reference"
      ]
    ]
  ],
  "test_serialize_managers": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_managers"
      ]
    ]
  ],
  "test_serialize_frozensets": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_frozensets"
      ]
    ]
  ],
  "test_serialize_set": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_set"
      ]
    ]
  ],
  "test_serialize_timedelta": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_timedelta"
      ]
    ]
  ],
  "test_serialize_functools_partial": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_functools_partial"
      ]
    ]
  ],
  "test_serialize_functools_partialmethod": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_functools_partialmethod"
      ]
    ]
  ],
  "test_serialize_type_none": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_serialize_type_none"
      ]
    ]
  ],
  "test_simple_migration": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_simple_migration"
      ]
    ]
  ],
  "test_migration_path": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_migration_path"
      ]
    ]
  ],
  "test_custom_operation": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_custom_operation"
      ]
    ]
  ],
  "test_sorted_imports": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_sorted_imports"
      ]
    ]
  ],
  "test_migration_file_header_comments": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_migration_file_header_comments"
      ]
    ]
  ],
  "test_models_import_omitted": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_models_import_omitted"
      ]
    ]
  ],
  "test_deconstruct_class_arguments": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_deconstruct_class_arguments"
      ]
    ]
  ],
  "test_register_serializer": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_register_serializer"
      ]
    ]
  ],
  "test_register_non_serializer": [
    [
      "tests/migrations/test_writer.py",
      [
        "WriterTests",
        "test_register_non_serializer"
      ]
    ]
  ],
  "test_integerchoices": [
    [
      "tests/model_enums/tests.py",
      [
        "ChoicesTests",
        "test_integerchoices"
      ]
    ]
  ],
  "test_integerchoices_auto_label": [
    [
      "tests/model_enums/tests.py",
      [
        "ChoicesTests",
        "test_integerchoices_auto_label"
      ]
    ]
  ],
  "test_integerchoices_empty_label": [
    [
      "tests/model_enums/tests.py",
      [
        "ChoicesTests",
        "test_integerchoices_empty_label"
      ]
    ]
  ],
  "test_integerchoices_functional_api": [
    [
      "tests/model_enums/tests.py",
      [
        "ChoicesTests",
        "test_integerchoices_functional_api"
      ]
    ]
  ],
  "test_integerchoices_containment": [
    [
      "tests/model_enums/tests.py",
      [
        "ChoicesTests",
        "test_integerchoices_containment"
      ]
    ]
  ],
  "test_textchoices": [
    [
      "tests/model_enums/tests.py",
      [
        "ChoicesTests",
        "test_textchoices"
      ]
    ]
  ],
  "test_textchoices_auto_label": [
    [
      "tests/model_enums/tests.py",
      [
        "ChoicesTests",
        "test_textchoices_auto_label"
      ]
    ]
  ],
  "test_textchoices_empty_label": [
    [
      "tests/model_enums/tests.py",
      [
        "ChoicesTests",
        "test_textchoices_empty_label"
      ]
    ]
  ],
  "test_textchoices_functional_api": [
    [
      "tests/model_enums/tests.py",
      [
        "ChoicesTests",
        "test_textchoices_functional_api"
      ]
    ]
  ],
  "test_textchoices_containment": [
    [
      "tests/model_enums/tests.py",
      [
        "ChoicesTests",
        "test_textchoices_containment"
      ]
    ]
  ],
  "test_textchoices_blank_value": [
    [
      "tests/model_enums/tests.py",
      [
        "ChoicesTests",
        "test_textchoices_blank_value"
      ]
    ]
  ],
  "test_invalid_definition": [
    [
      "tests/model_enums/tests.py",
      [
        "ChoicesTests",
        "test_invalid_definition"
      ]
    ]
  ],
  "test_templates": [
    [
      "tests/model_enums/tests.py",
      [
        "ChoicesTests",
        "test_templates"
      ]
    ]
  ],
  "test_labels_valid": [
    [
      "tests/model_enums/tests.py",
      [
        "CustomChoicesTests",
        "test_labels_valid"
      ]
    ]
  ],
  "test_bool_unsupported": [
    [
      "tests/model_enums/tests.py",
      [
        "CustomChoicesTests",
        "test_bool_unsupported"
      ]
    ]
  ],
  "test_timezone_unsupported": [
    [
      "tests/model_enums/tests.py",
      [
        "CustomChoicesTests",
        "test_timezone_unsupported"
      ]
    ]
  ],
  "test_uuid_unsupported": [
    [
      "tests/model_enums/tests.py",
      [
        "CustomChoicesTests",
        "test_uuid_unsupported"
      ]
    ]
  ],
  "get_foo": [
    [
      "tests/model_fields/models.py",
      [
        "get_foo"
      ]
    ]
  ],
  "test_isinstance_of_autofield": [
    [
      "tests/model_fields/test_autofield.py",
      [
        "AutoFieldInheritanceTests",
        "test_isinstance_of_autofield"
      ]
    ]
  ],
  "test_issubclass_of_autofield": [
    [
      "tests/model_fields/test_autofield.py",
      [
        "AutoFieldInheritanceTests",
        "test_issubclass_of_autofield"
      ]
    ]
  ],
  "test_set_and_retrieve": [
    [
      "tests/model_fields/test_binaryfield.py",
      [
        "BinaryFieldTests",
        "test_set_and_retrieve"
      ]
    ]
  ],
  "test_max_length": [
    [
      "tests/model_fields/test_binaryfield.py",
      [
        "BinaryFieldTests",
        "test_max_length"
      ]
    ],
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSimpleFormField",
        "test_max_length"
      ]
    ]
  ],
  "test_filter_bytearray": [
    [
      "tests/model_fields/test_binaryfield.py",
      [
        "BinaryFieldTests",
        "test_filter_bytearray"
      ]
    ]
  ],
  "test_filter_memoryview": [
    [
      "tests/model_fields/test_binaryfield.py",
      [
        "BinaryFieldTests",
        "test_filter_memoryview"
      ]
    ]
  ],
  "_test_get_prep_value": [
    [
      "tests/model_fields/test_booleanfield.py",
      [
        "BooleanFieldTests",
        "_test_get_prep_value"
      ]
    ]
  ],
  "_test_to_python": [
    [
      "tests/model_fields/test_booleanfield.py",
      [
        "BooleanFieldTests",
        "_test_to_python"
      ]
    ]
  ],
  "test_booleanfield_get_prep_value": [
    [
      "tests/model_fields/test_booleanfield.py",
      [
        "BooleanFieldTests",
        "test_booleanfield_get_prep_value"
      ]
    ]
  ],
  "test_nullbooleanfield_get_prep_value": [
    [
      "tests/model_fields/test_booleanfield.py",
      [
        "BooleanFieldTests",
        "test_nullbooleanfield_get_prep_value"
      ]
    ]
  ],
  "test_nullbooleanfield_old_get_prep_value": [
    [
      "tests/model_fields/test_booleanfield.py",
      [
        "BooleanFieldTests",
        "test_nullbooleanfield_old_get_prep_value"
      ]
    ]
  ],
  "test_booleanfield_to_python": [
    [
      "tests/model_fields/test_booleanfield.py",
      [
        "BooleanFieldTests",
        "test_booleanfield_to_python"
      ]
    ]
  ],
  "test_nullbooleanfield_to_python": [
    [
      "tests/model_fields/test_booleanfield.py",
      [
        "BooleanFieldTests",
        "test_nullbooleanfield_to_python"
      ]
    ]
  ],
  "test_nullbooleanfield_old_to_python": [
    [
      "tests/model_fields/test_booleanfield.py",
      [
        "BooleanFieldTests",
        "test_nullbooleanfield_old_to_python"
      ]
    ]
  ],
  "test_booleanfield_choices_blank": [
    [
      "tests/model_fields/test_booleanfield.py",
      [
        "BooleanFieldTests",
        "test_booleanfield_choices_blank"
      ]
    ]
  ],
  "test_nullbooleanfield_formfield": [
    [
      "tests/model_fields/test_booleanfield.py",
      [
        "BooleanFieldTests",
        "test_nullbooleanfield_formfield"
      ]
    ]
  ],
  "test_return_type": [
    [
      "tests/model_fields/test_booleanfield.py",
      [
        "BooleanFieldTests",
        "test_return_type"
      ]
    ]
  ],
  "test_null_default": [
    [
      "tests/model_fields/test_booleanfield.py",
      [
        "BooleanFieldTests",
        "test_null_default"
      ]
    ]
  ],
  "test_boolean_field_doesnt_accept_empty_input": [
    [
      "tests/model_fields/test_booleanfield.py",
      [
        "ValidationTest",
        "test_boolean_field_doesnt_accept_empty_input"
      ]
    ]
  ],
  "test_nullbooleanfield_blank": [
    [
      "tests/model_fields/test_booleanfield.py",
      [
        "ValidationTest",
        "test_nullbooleanfield_blank"
      ]
    ]
  ],
  "test_max_length_passed_to_formfield": [
    [
      "tests/model_fields/test_charfield.py",
      [
        "TestCharField",
        "test_max_length_passed_to_formfield"
      ]
    ],
    [
      "tests/model_fields/test_textfield.py",
      [
        "TextFieldTests",
        "test_max_length_passed_to_formfield"
      ]
    ]
  ],
  "test_lookup_integer_in_charfield": [
    [
      "tests/model_fields/test_charfield.py",
      [
        "TestCharField",
        "test_lookup_integer_in_charfield"
      ]
    ]
  ],
  "test_emoji": [
    [
      "tests/model_fields/test_charfield.py",
      [
        "TestCharField",
        "test_emoji"
      ]
    ],
    [
      "tests/model_fields/test_textfield.py",
      [
        "TextFieldTests",
        "test_emoji"
      ]
    ]
  ],
  "test_assignment_from_choice_enum": [
    [
      "tests/model_fields/test_charfield.py",
      [
        "TestCharField",
        "test_assignment_from_choice_enum"
      ]
    ]
  ],
  "test_charfield_raises_error_on_empty_string": [
    [
      "tests/model_fields/test_charfield.py",
      [
        "ValidationTests",
        "test_charfield_raises_error_on_empty_string"
      ]
    ]
  ],
  "test_charfield_cleans_empty_string_when_blank_true": [
    [
      "tests/model_fields/test_charfield.py",
      [
        "ValidationTests",
        "test_charfield_cleans_empty_string_when_blank_true"
      ]
    ]
  ],
  "test_charfield_with_choices_cleans_valid_choice": [
    [
      "tests/model_fields/test_charfield.py",
      [
        "ValidationTests",
        "test_charfield_with_choices_cleans_valid_choice"
      ]
    ]
  ],
  "test_charfield_with_choices_raises_error_on_invalid_choice": [
    [
      "tests/model_fields/test_charfield.py",
      [
        "ValidationTests",
        "test_charfield_with_choices_raises_error_on_invalid_choice"
      ]
    ]
  ],
  "test_enum_choices_cleans_valid_string": [
    [
      "tests/model_fields/test_charfield.py",
      [
        "ValidationTests",
        "test_enum_choices_cleans_valid_string"
      ]
    ],
    [
      "tests/model_fields/test_integerfield.py",
      [
        "ValidationTests",
        "test_enum_choices_cleans_valid_string"
      ]
    ]
  ],
  "test_enum_choices_invalid_input": [
    [
      "tests/model_fields/test_charfield.py",
      [
        "ValidationTests",
        "test_enum_choices_invalid_input"
      ]
    ],
    [
      "tests/model_fields/test_integerfield.py",
      [
        "ValidationTests",
        "test_enum_choices_invalid_input"
      ]
    ]
  ],
  "test_charfield_raises_error_on_empty_input": [
    [
      "tests/model_fields/test_charfield.py",
      [
        "ValidationTests",
        "test_charfield_raises_error_on_empty_input"
      ]
    ]
  ],
  "test_datetimefield_to_python_microseconds": [
    [
      "tests/model_fields/test_datetimefield.py",
      [
        "DateTimeFieldTests",
        "test_datetimefield_to_python_microseconds"
      ]
    ]
  ],
  "test_timefield_to_python_microseconds": [
    [
      "tests/model_fields/test_datetimefield.py",
      [
        "DateTimeFieldTests",
        "test_timefield_to_python_microseconds"
      ]
    ]
  ],
  "test_datetimes_save_completely": [
    [
      "tests/model_fields/test_datetimefield.py",
      [
        "DateTimeFieldTests",
        "test_datetimes_save_completely"
      ]
    ]
  ],
  "test_lookup_date_without_use_tz": [
    [
      "tests/model_fields/test_datetimefield.py",
      [
        "DateTimeFieldTests",
        "test_lookup_date_without_use_tz"
      ]
    ]
  ],
  "test_lookup_date_with_use_tz": [
    [
      "tests/model_fields/test_datetimefield.py",
      [
        "DateTimeFieldTests",
        "test_lookup_date_with_use_tz"
      ]
    ]
  ],
  "test_datefield_cleans_date": [
    [
      "tests/model_fields/test_datetimefield.py",
      [
        "ValidationTest",
        "test_datefield_cleans_date"
      ]
    ]
  ],
  "test_get_prep_value": [
    [
      "tests/model_fields/test_decimalfield.py",
      [
        "DecimalFieldTests",
        "test_get_prep_value"
      ]
    ]
  ],
  "test_filter_with_strings": [
    [
      "tests/model_fields/test_decimalfield.py",
      [
        "DecimalFieldTests",
        "test_filter_with_strings"
      ]
    ]
  ],
  "test_save_without_float_conversion": [
    [
      "tests/model_fields/test_decimalfield.py",
      [
        "DecimalFieldTests",
        "test_save_without_float_conversion"
      ]
    ]
  ],
  "test_fetch_from_db_without_float_rounding": [
    [
      "tests/model_fields/test_decimalfield.py",
      [
        "DecimalFieldTests",
        "test_fetch_from_db_without_float_rounding"
      ]
    ]
  ],
  "test_lookup_really_big_value": [
    [
      "tests/model_fields/test_decimalfield.py",
      [
        "DecimalFieldTests",
        "test_lookup_really_big_value"
      ]
    ]
  ],
  "test_max_digits_validation": [
    [
      "tests/model_fields/test_decimalfield.py",
      [
        "DecimalFieldTests",
        "test_max_digits_validation"
      ]
    ]
  ],
  "test_max_decimal_places_validation": [
    [
      "tests/model_fields/test_decimalfield.py",
      [
        "DecimalFieldTests",
        "test_max_decimal_places_validation"
      ]
    ]
  ],
  "test_max_whole_digits_validation": [
    [
      "tests/model_fields/test_decimalfield.py",
      [
        "DecimalFieldTests",
        "test_max_whole_digits_validation"
      ]
    ]
  ],
  "test_roundtrip_with_trailing_zeros": [
    [
      "tests/model_fields/test_decimalfield.py",
      [
        "DecimalFieldTests",
        "test_roundtrip_with_trailing_zeros"
      ]
    ]
  ],
  "test_simple_roundtrip": [
    [
      "tests/model_fields/test_durationfield.py",
      [
        "TestSaveLoad",
        "test_simple_roundtrip"
      ]
    ]
  ],
  "test_create_empty": [
    [
      "tests/model_fields/test_durationfield.py",
      [
        "TestSaveLoad",
        "test_create_empty"
      ]
    ]
  ],
  "test_fractional_seconds": [
    [
      "tests/model_fields/test_durationfield.py",
      [
        "TestSaveLoad",
        "test_fractional_seconds"
      ]
    ]
  ],
  "test_exact": [
    [
      "tests/model_fields/test_durationfield.py",
      [
        "TestQuerying",
        "test_exact"
      ]
    ],
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestQuerying",
        "test_exact"
      ]
    ],
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_exact"
      ]
    ],
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestQuerying",
        "test_exact"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_exact"
      ]
    ],
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQuerying",
        "test_exact"
      ]
    ]
  ],
  "test_dumping": [
    [
      "tests/model_fields/test_durationfield.py",
      [
        "TestSerialization",
        "test_dumping"
      ]
    ],
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestSerialization",
        "test_dumping"
      ]
    ],
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSerialization",
        "test_dumping"
      ]
    ],
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestSerialization",
        "test_dumping"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestSerialization",
        "test_dumping"
      ]
    ],
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestSerialization",
        "test_dumping"
      ]
    ]
  ],
  "test_loading": [
    [
      "tests/model_fields/test_durationfield.py",
      [
        "TestSerialization",
        "test_loading"
      ]
    ],
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestSerialization",
        "test_loading"
      ]
    ],
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSerialization",
        "test_loading"
      ]
    ],
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestSerialization",
        "test_loading"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestSerialization",
        "test_loading"
      ]
    ],
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestSerialization",
        "test_loading"
      ]
    ]
  ],
  "test_invalid_string": [
    [
      "tests/model_fields/test_durationfield.py",
      [
        "TestValidation",
        "test_invalid_string"
      ]
    ]
  ],
  "test_formfield": [
    [
      "tests/model_fields/test_durationfield.py",
      [
        "TestFormField",
        "test_formfield"
      ]
    ],
    [
      "tests/model_fields/tests.py",
      [
        "ChoicesTests",
        "test_formfield"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestFormField",
        "test_formfield"
      ]
    ]
  ],
  "test_each_field_should_have_a_concrete_attribute": [
    [
      "tests/model_fields/test_field_flags.py",
      [
        "FieldFlagsTests",
        "test_each_field_should_have_a_concrete_attribute"
      ]
    ]
  ],
  "test_each_field_should_have_an_editable_attribute": [
    [
      "tests/model_fields/test_field_flags.py",
      [
        "FieldFlagsTests",
        "test_each_field_should_have_an_editable_attribute"
      ]
    ]
  ],
  "test_each_field_should_have_a_has_rel_attribute": [
    [
      "tests/model_fields/test_field_flags.py",
      [
        "FieldFlagsTests",
        "test_each_field_should_have_a_has_rel_attribute"
      ]
    ]
  ],
  "test_each_object_should_have_auto_created": [
    [
      "tests/model_fields/test_field_flags.py",
      [
        "FieldFlagsTests",
        "test_each_object_should_have_auto_created"
      ]
    ]
  ],
  "test_non_concrete_fields": [
    [
      "tests/model_fields/test_field_flags.py",
      [
        "FieldFlagsTests",
        "test_non_concrete_fields"
      ]
    ]
  ],
  "test_non_editable_fields": [
    [
      "tests/model_fields/test_field_flags.py",
      [
        "FieldFlagsTests",
        "test_non_editable_fields"
      ]
    ]
  ],
  "test_related_fields": [
    [
      "tests/model_fields/test_field_flags.py",
      [
        "FieldFlagsTests",
        "test_related_fields"
      ]
    ]
  ],
  "test_field_names_should_always_be_available": [
    [
      "tests/model_fields/test_field_flags.py",
      [
        "FieldFlagsTests",
        "test_field_names_should_always_be_available"
      ]
    ]
  ],
  "test_all_field_types_should_have_flags": [
    [
      "tests/model_fields/test_field_flags.py",
      [
        "FieldFlagsTests",
        "test_all_field_types_should_have_flags"
      ]
    ]
  ],
  "test_cardinality_m2m": [
    [
      "tests/model_fields/test_field_flags.py",
      [
        "FieldFlagsTests",
        "test_cardinality_m2m"
      ]
    ]
  ],
  "test_cardinality_o2m": [
    [
      "tests/model_fields/test_field_flags.py",
      [
        "FieldFlagsTests",
        "test_cardinality_o2m"
      ]
    ]
  ],
  "test_cardinality_m2o": [
    [
      "tests/model_fields/test_field_flags.py",
      [
        "FieldFlagsTests",
        "test_cardinality_m2o"
      ]
    ]
  ],
  "test_cardinality_o2o": [
    [
      "tests/model_fields/test_field_flags.py",
      [
        "FieldFlagsTests",
        "test_cardinality_o2o"
      ]
    ]
  ],
  "test_hidden_flag": [
    [
      "tests/model_fields/test_field_flags.py",
      [
        "FieldFlagsTests",
        "test_hidden_flag"
      ]
    ]
  ],
  "test_model_and_reverse_model_should_equal_on_relations": [
    [
      "tests/model_fields/test_field_flags.py",
      [
        "FieldFlagsTests",
        "test_model_and_reverse_model_should_equal_on_relations"
      ]
    ]
  ],
  "test_clearable": [
    [
      "tests/model_fields/test_filefield.py",
      [
        "FileFieldTests",
        "test_clearable"
      ]
    ]
  ],
  "test_unchanged": [
    [
      "tests/model_fields/test_filefield.py",
      [
        "FileFieldTests",
        "test_unchanged"
      ]
    ]
  ],
  "test_changed": [
    [
      "tests/model_fields/test_filefield.py",
      [
        "FileFieldTests",
        "test_changed"
      ]
    ]
  ],
  "test_delete_when_file_unset": [
    [
      "tests/model_fields/test_filefield.py",
      [
        "FileFieldTests",
        "test_delete_when_file_unset"
      ]
    ]
  ],
  "test_refresh_from_db": [
    [
      "tests/model_fields/test_filefield.py",
      [
        "FileFieldTests",
        "test_refresh_from_db"
      ]
    ]
  ],
  "test_unique_when_same_filename": [
    [
      "tests/model_fields/test_filefield.py",
      [
        "FileFieldTests",
        "test_unique_when_same_filename"
      ]
    ]
  ],
  "test_move_temporary_file": [
    [
      "tests/model_fields/test_filefield.py",
      [
        "FileFieldTests",
        "test_move_temporary_file"
      ]
    ]
  ],
  "test_open_returns_self": [
    [
      "tests/model_fields/test_filefield.py",
      [
        "FileFieldTests",
        "test_open_returns_self"
      ]
    ]
  ],
  "test_media_root_pathlib": [
    [
      "tests/model_fields/test_filefield.py",
      [
        "FileFieldTests",
        "test_media_root_pathlib"
      ]
    ]
  ],
  "test_path": [
    [
      "tests/model_fields/test_filepathfield.py",
      [
        "FilePathFieldTests",
        "test_path"
      ]
    ]
  ],
  "test_callable_path": [
    [
      "tests/model_fields/test_filepathfield.py",
      [
        "FilePathFieldTests",
        "test_callable_path"
      ]
    ]
  ],
  "test_float_validates_object": [
    [
      "tests/model_fields/test_floatfield.py",
      [
        "TestFloatField",
        "test_float_validates_object"
      ]
    ]
  ],
  "test_invalid_value": [
    [
      "tests/model_fields/test_floatfield.py",
      [
        "TestFloatField",
        "test_invalid_value"
      ]
    ],
    [
      "tests/model_fields/test_integerfield.py",
      [
        "IntegerFieldTests",
        "test_invalid_value"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "RadioFieldsCheckTests",
        "test_invalid_value"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_yesno.py",
      [
        "FunctionTests",
        "test_invalid_value"
      ]
    ]
  ],
  "test_callable_default": [
    [
      "tests/model_fields/test_foreignkey.py",
      [
        "ForeignKeyTests",
        "test_callable_default"
      ]
    ]
  ],
  "test_empty_string_fk": [
    [
      "tests/model_fields/test_foreignkey.py",
      [
        "ForeignKeyTests",
        "test_empty_string_fk"
      ]
    ]
  ],
  "test_warning_when_unique_true_on_fk": [
    [
      "tests/model_fields/test_foreignkey.py",
      [
        "ForeignKeyTests",
        "test_warning_when_unique_true_on_fk"
      ]
    ]
  ],
  "test_related_name_converted_to_text": [
    [
      "tests/model_fields/test_foreignkey.py",
      [
        "ForeignKeyTests",
        "test_related_name_converted_to_text"
      ]
    ]
  ],
  "test_abstract_model_pending_operations": [
    [
      "tests/model_fields/test_foreignkey.py",
      [
        "ForeignKeyTests",
        "test_abstract_model_pending_operations"
      ]
    ],
    [
      "tests/model_fields/test_manytomanyfield.py",
      [
        "ManyToManyFieldTests",
        "test_abstract_model_pending_operations"
      ]
    ]
  ],
  "test_abstract_model_app_relative_foreign_key": [
    [
      "tests/model_fields/test_foreignkey.py",
      [
        "ForeignKeyTests",
        "test_abstract_model_app_relative_foreign_key"
      ]
    ],
    [
      "tests/model_fields/test_manytomanyfield.py",
      [
        "ManyToManyFieldTests",
        "test_abstract_model_app_relative_foreign_key"
      ]
    ]
  ],
  "test_fk_to_fk_get_col_output_field": [
    [
      "tests/model_fields/test_foreignkey.py",
      [
        "ForeignKeyTests",
        "test_fk_to_fk_get_col_output_field"
      ]
    ]
  ],
  "test_recursive_fks_get_col": [
    [
      "tests/model_fields/test_foreignkey.py",
      [
        "ForeignKeyTests",
        "test_recursive_fks_get_col"
      ]
    ]
  ],
  "test_non_local_to_field": [
    [
      "tests/model_fields/test_foreignkey.py",
      [
        "ForeignKeyTests",
        "test_non_local_to_field"
      ]
    ]
  ],
  "test_genericipaddressfield_formfield_protocol": [
    [
      "tests/model_fields/test_genericipaddressfield.py",
      [
        "GenericIPAddressFieldTests",
        "test_genericipaddressfield_formfield_protocol"
      ]
    ]
  ],
  "test_null_value": [
    [
      "tests/model_fields/test_genericipaddressfield.py",
      [
        "GenericIPAddressFieldTests",
        "test_null_value"
      ]
    ]
  ],
  "test_blank_string_saved_as_null": [
    [
      "tests/model_fields/test_genericipaddressfield.py",
      [
        "GenericIPAddressFieldTests",
        "test_blank_string_saved_as_null"
      ]
    ]
  ],
  "test_save_load": [
    [
      "tests/model_fields/test_genericipaddressfield.py",
      [
        "GenericIPAddressFieldTests",
        "test_save_load"
      ]
    ]
  ],
  "check_dimensions": [
    [
      "tests/model_fields/test_imagefield.py",
      [
        "ImageFieldTestMixin",
        "check_dimensions"
      ]
    ]
  ],
  "test_equal_notequal_hash": [
    [
      "tests/model_fields/test_imagefield.py",
      [
        "ImageFieldTests",
        "test_equal_notequal_hash"
      ]
    ]
  ],
  "test_instantiate_missing": [
    [
      "tests/model_fields/test_imagefield.py",
      [
        "ImageFieldTests",
        "test_instantiate_missing"
      ]
    ]
  ],
  "test_delete_when_missing": [
    [
      "tests/model_fields/test_imagefield.py",
      [
        "ImageFieldTests",
        "test_delete_when_missing"
      ]
    ]
  ],
  "test_size_method": [
    [
      "tests/model_fields/test_imagefield.py",
      [
        "ImageFieldTests",
        "test_size_method"
      ]
    ]
  ],
  "test_image_after_constructor": [
    [
      "tests/model_fields/test_imagefield.py",
      [
        "ImageFieldTwoDimensionsTests",
        "test_image_after_constructor"
      ]
    ]
  ],
  "test_default_value": [
    [
      "tests/model_fields/test_imagefield.py",
      [
        "ImageFieldTwoDimensionsTests",
        "test_default_value"
      ]
    ]
  ],
  "test_assignment_to_None": [
    [
      "tests/model_fields/test_imagefield.py",
      [
        "ImageFieldTwoDimensionsTests",
        "test_assignment_to_None"
      ]
    ]
  ],
  "test_field_save_and_delete_methods": [
    [
      "tests/model_fields/test_imagefield.py",
      [
        "ImageFieldTwoDimensionsTests",
        "test_field_save_and_delete_methods"
      ]
    ],
    [
      "tests/model_fields/test_imagefield.py",
      [
        "TwoImageFieldTests",
        "test_field_save_and_delete_methods"
      ]
    ]
  ],
  "test_dimensions": [
    [
      "tests/model_fields/test_imagefield.py",
      [
        "ImageFieldTwoDimensionsTests",
        "test_dimensions"
      ]
    ],
    [
      "tests/model_fields/test_imagefield.py",
      [
        "TwoImageFieldTests",
        "test_dimensions"
      ]
    ]
  ],
  "test_assignment": [
    [
      "tests/model_fields/test_imagefield.py",
      [
        "TwoImageFieldTests",
        "test_assignment"
      ]
    ]
  ],
  "backend_range": [
    [
      "tests/model_fields/test_integerfield.py",
      [
        "IntegerFieldTests",
        "backend_range"
      ]
    ]
  ],
  "test_documented_range": [
    [
      "tests/model_fields/test_integerfield.py",
      [
        "IntegerFieldTests",
        "test_documented_range"
      ]
    ]
  ],
  "test_backend_range_save": [
    [
      "tests/model_fields/test_integerfield.py",
      [
        "IntegerFieldTests",
        "test_backend_range_save"
      ]
    ]
  ],
  "test_backend_range_validation": [
    [
      "tests/model_fields/test_integerfield.py",
      [
        "IntegerFieldTests",
        "test_backend_range_validation"
      ]
    ]
  ],
  "test_redundant_backend_range_validators": [
    [
      "tests/model_fields/test_integerfield.py",
      [
        "IntegerFieldTests",
        "test_redundant_backend_range_validators"
      ]
    ]
  ],
  "test_types": [
    [
      "tests/model_fields/test_integerfield.py",
      [
        "IntegerFieldTests",
        "test_types"
      ]
    ]
  ],
  "test_coercing": [
    [
      "tests/model_fields/test_integerfield.py",
      [
        "IntegerFieldTests",
        "test_coercing"
      ]
    ]
  ],
  "test_negative_values": [
    [
      "tests/model_fields/test_integerfield.py",
      [
        "PositiveIntegerFieldTests",
        "test_negative_values"
      ]
    ]
  ],
  "test_integerfield_cleans_valid_string": [
    [
      "tests/model_fields/test_integerfield.py",
      [
        "ValidationTests",
        "test_integerfield_cleans_valid_string"
      ]
    ]
  ],
  "test_integerfield_raises_error_on_invalid_intput": [
    [
      "tests/model_fields/test_integerfield.py",
      [
        "ValidationTests",
        "test_integerfield_raises_error_on_invalid_intput"
      ]
    ]
  ],
  "test_choices_validation_supports_named_groups": [
    [
      "tests/model_fields/test_integerfield.py",
      [
        "ValidationTests",
        "test_choices_validation_supports_named_groups"
      ]
    ]
  ],
  "test_nullable_integerfield_raises_error_with_blank_false": [
    [
      "tests/model_fields/test_integerfield.py",
      [
        "ValidationTests",
        "test_nullable_integerfield_raises_error_with_blank_false"
      ]
    ]
  ],
  "test_nullable_integerfield_cleans_none_on_null_and_blank_true": [
    [
      "tests/model_fields/test_integerfield.py",
      [
        "ValidationTests",
        "test_nullable_integerfield_cleans_none_on_null_and_blank_true"
      ]
    ]
  ],
  "test_integerfield_raises_error_on_empty_input": [
    [
      "tests/model_fields/test_integerfield.py",
      [
        "ValidationTests",
        "test_integerfield_raises_error_on_empty_input"
      ]
    ]
  ],
  "test_integerfield_validates_zero_against_choices": [
    [
      "tests/model_fields/test_integerfield.py",
      [
        "ValidationTests",
        "test_integerfield_validates_zero_against_choices"
      ]
    ]
  ],
  "assert_app_model_resolved": [
    [
      "tests/model_fields/test_manytomanyfield.py",
      [
        "ManyToManyFieldTests",
        "test_abstract_model_app_relative_foreign_key",
        "assert_app_model_resolved"
      ]
    ]
  ],
  "test_value_from_object_instance_without_pk": [
    [
      "tests/model_fields/test_manytomanyfield.py",
      [
        "ManyToManyFieldDBTests",
        "test_value_from_object_instance_without_pk"
      ]
    ]
  ],
  "test_value_from_object_instance_with_pk": [
    [
      "tests/model_fields/test_manytomanyfield.py",
      [
        "ManyToManyFieldDBTests",
        "test_value_from_object_instance_with_pk"
      ]
    ]
  ],
  "test_AutoField": [
    [
      "tests/model_fields/test_promises.py",
      [
        "PromiseTest",
        "test_AutoField"
      ]
    ]
  ],
  "test_BinaryField": [
    [
      "tests/model_fields/test_promises.py",
      [
        "PromiseTest",
        "test_BinaryField"
      ]
    ]
  ],
  "test_BooleanField": [
    [
      "tests/model_fields/test_promises.py",
      [
        "PromiseTest",
        "test_BooleanField"
      ]
    ]
  ],
  "test_DecimalField": [
    [
      "tests/model_fields/test_promises.py",
      [
        "PromiseTest",
        "test_DecimalField"
      ]
    ]
  ],
  "test_FilePathField": [
    [
      "tests/model_fields/test_promises.py",
      [
        "PromiseTest",
        "test_FilePathField"
      ]
    ]
  ],
  "test_FloatField": [
    [
      "tests/model_fields/test_promises.py",
      [
        "PromiseTest",
        "test_FloatField"
      ]
    ]
  ],
  "test_ImageField": [
    [
      "tests/model_fields/test_promises.py",
      [
        "PromiseTest",
        "test_ImageField"
      ]
    ]
  ],
  "test_IPAddressField": [
    [
      "tests/model_fields/test_promises.py",
      [
        "PromiseTest",
        "test_IPAddressField"
      ]
    ]
  ],
  "test_GenericIPAddressField": [
    [
      "tests/model_fields/test_promises.py",
      [
        "PromiseTest",
        "test_GenericIPAddressField"
      ]
    ]
  ],
  "test_NullBooleanField": [
    [
      "tests/model_fields/test_promises.py",
      [
        "PromiseTest",
        "test_NullBooleanField"
      ]
    ]
  ],
  "test_PositiveIntegerField": [
    [
      "tests/model_fields/test_promises.py",
      [
        "PromiseTest",
        "test_PositiveIntegerField"
      ]
    ]
  ],
  "test_PositiveSmallIntegerField": [
    [
      "tests/model_fields/test_promises.py",
      [
        "PromiseTest",
        "test_PositiveSmallIntegerField"
      ]
    ]
  ],
  "test_PositiveBigIntegerField": [
    [
      "tests/model_fields/test_promises.py",
      [
        "PromiseTest",
        "test_PositiveBigIntegerField"
      ]
    ]
  ],
  "test_SlugField": [
    [
      "tests/model_fields/test_promises.py",
      [
        "PromiseTest",
        "test_SlugField"
      ]
    ]
  ],
  "test_SmallIntegerField": [
    [
      "tests/model_fields/test_promises.py",
      [
        "PromiseTest",
        "test_SmallIntegerField"
      ]
    ]
  ],
  "test_slugfield_max_length": [
    [
      "tests/model_fields/test_slugfield.py",
      [
        "SlugFieldTests",
        "test_slugfield_max_length"
      ]
    ]
  ],
  "test_slugfield_unicode_max_length": [
    [
      "tests/model_fields/test_slugfield.py",
      [
        "SlugFieldTests",
        "test_slugfield_unicode_max_length"
      ]
    ]
  ],
  "test_choices_generates_select_widget": [
    [
      "tests/model_fields/test_textfield.py",
      [
        "TextFieldTests",
        "test_choices_generates_select_widget"
      ]
    ]
  ],
  "test_lookup_integer_in_textfield": [
    [
      "tests/model_fields/test_textfield.py",
      [
        "TextFieldTests",
        "test_lookup_integer_in_textfield"
      ]
    ]
  ],
  "test_uuid_instance": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestSaveLoad",
        "test_uuid_instance"
      ]
    ]
  ],
  "test_str_instance_no_hyphens": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestSaveLoad",
        "test_str_instance_no_hyphens"
      ]
    ]
  ],
  "test_str_instance_hyphens": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestSaveLoad",
        "test_str_instance_hyphens"
      ]
    ]
  ],
  "test_str_instance_bad_hyphens": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestSaveLoad",
        "test_str_instance_bad_hyphens"
      ]
    ]
  ],
  "test_null_handling": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestSaveLoad",
        "test_null_handling"
      ]
    ],
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSaveLoad",
        "test_null_handling"
      ]
    ]
  ],
  "test_pk_validated": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestSaveLoad",
        "test_pk_validated"
      ]
    ]
  ],
  "test_wrong_value": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestSaveLoad",
        "test_wrong_value"
      ]
    ]
  ],
  "test_to_python_int_values": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestMethods",
        "test_to_python_int_values"
      ]
    ]
  ],
  "test_to_python_int_too_large": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestMethods",
        "test_to_python_int_too_large"
      ]
    ]
  ],
  "assertSequenceEqualWithoutHyphens": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestQuerying",
        "assertSequenceEqualWithoutHyphens"
      ]
    ]
  ],
  "test_iexact": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestQuerying",
        "test_iexact"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_iexact"
      ]
    ]
  ],
  "test_isnull": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestQuerying",
        "test_isnull"
      ]
    ],
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_isnull"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_isnull"
      ]
    ],
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQuerying",
        "test_isnull"
      ]
    ]
  ],
  "test_icontains": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestQuerying",
        "test_icontains"
      ]
    ],
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_icontains"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_icontains"
      ]
    ]
  ],
  "test_startswith": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestQuerying",
        "test_startswith"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_startswith"
      ]
    ],
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQuerying",
        "test_startswith"
      ]
    ]
  ],
  "test_istartswith": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestQuerying",
        "test_istartswith"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_istartswith"
      ]
    ]
  ],
  "test_endswith": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestQuerying",
        "test_endswith"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_endswith"
      ]
    ],
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQuerying",
        "test_endswith"
      ]
    ]
  ],
  "test_iendswith": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestQuerying",
        "test_iendswith"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_iendswith"
      ]
    ]
  ],
  "test_filter_with_expr": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestQuerying",
        "test_filter_with_expr"
      ]
    ]
  ],
  "test_nullable_loading": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestSerialization",
        "test_nullable_loading"
      ]
    ]
  ],
  "test_invalid_uuid": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestValidation",
        "test_invalid_uuid"
      ]
    ]
  ],
  "test_uuid_instance_ok": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestValidation",
        "test_uuid_instance_ok"
      ]
    ]
  ],
  "test_creation": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestAsPrimaryKey",
        "test_creation"
      ]
    ]
  ],
  "test_uuid_pk_on_save": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestAsPrimaryKey",
        "test_uuid_pk_on_save"
      ]
    ]
  ],
  "test_uuid_pk_on_bulk_create": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestAsPrimaryKey",
        "test_uuid_pk_on_bulk_create"
      ]
    ]
  ],
  "test_underlying_field": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestAsPrimaryKey",
        "test_underlying_field"
      ]
    ]
  ],
  "test_update_with_related_model_instance": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestAsPrimaryKey",
        "test_update_with_related_model_instance"
      ]
    ]
  ],
  "test_update_with_related_model_id": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestAsPrimaryKey",
        "test_update_with_related_model_id"
      ]
    ]
  ],
  "test_two_level_foreign_keys": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestAsPrimaryKey",
        "test_two_level_foreign_keys"
      ]
    ]
  ],
  "test_unsaved_fk": [
    [
      "tests/model_fields/test_uuid.py",
      [
        "TestAsPrimaryKeyTransactionTests",
        "test_unsaved_fk"
      ]
    ]
  ],
  "test_show_hidden_initial": [
    [
      "tests/model_fields/tests.py",
      [
        "BasicFieldTests",
        "test_show_hidden_initial"
      ]
    ]
  ],
  "test_field_repr": [
    [
      "tests/model_fields/tests.py",
      [
        "BasicFieldTests",
        "test_field_repr"
      ]
    ]
  ],
  "test_field_repr_nested": [
    [
      "tests/model_fields/tests.py",
      [
        "BasicFieldTests",
        "test_field_repr_nested"
      ]
    ]
  ],
  "test_field_verbose_name": [
    [
      "tests/model_fields/tests.py",
      [
        "BasicFieldTests",
        "test_field_verbose_name"
      ]
    ]
  ],
  "test_choices_form_class": [
    [
      "tests/model_fields/tests.py",
      [
        "BasicFieldTests",
        "test_choices_form_class"
      ]
    ]
  ],
  "test_formfield_disabled": [
    [
      "tests/model_fields/tests.py",
      [
        "BasicFieldTests",
        "test_formfield_disabled"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestFormField",
        "test_formfield_disabled"
      ]
    ]
  ],
  "test_field_str": [
    [
      "tests/model_fields/tests.py",
      [
        "BasicFieldTests",
        "test_field_str"
      ]
    ]
  ],
  "test_field_ordering": [
    [
      "tests/model_fields/tests.py",
      [
        "BasicFieldTests",
        "test_field_ordering"
      ]
    ]
  ],
  "test_field_instance_is_picklable": [
    [
      "tests/model_fields/tests.py",
      [
        "BasicFieldTests",
        "test_field_instance_is_picklable"
      ]
    ]
  ],
  "test_deconstruct_nested_field": [
    [
      "tests/model_fields/tests.py",
      [
        "BasicFieldTests",
        "test_deconstruct_nested_field"
      ]
    ]
  ],
  "test_flatchoices": [
    [
      "tests/model_fields/tests.py",
      [
        "ChoicesTests",
        "test_flatchoices"
      ]
    ]
  ],
  "test_invalid_choice": [
    [
      "tests/model_fields/tests.py",
      [
        "ChoicesTests",
        "test_invalid_choice"
      ]
    ]
  ],
  "test_choices_and_field_display": [
    [
      "tests/model_fields/tests.py",
      [
        "GetFieldDisplayTests",
        "test_choices_and_field_display"
      ]
    ]
  ],
  "test_get_FIELD_display_translated": [
    [
      "tests/model_fields/tests.py",
      [
        "GetFieldDisplayTests",
        "test_get_FIELD_display_translated"
      ]
    ]
  ],
  "test_overriding_FIELD_display": [
    [
      "tests/model_fields/tests.py",
      [
        "GetFieldDisplayTests",
        "test_overriding_FIELD_display"
      ]
    ]
  ],
  "test_overriding_inherited_FIELD_display": [
    [
      "tests/model_fields/tests.py",
      [
        "GetFieldDisplayTests",
        "test_overriding_inherited_FIELD_display"
      ]
    ]
  ],
  "test_iterator_choices": [
    [
      "tests/model_fields/tests.py",
      [
        "GetFieldDisplayTests",
        "test_iterator_choices"
      ]
    ]
  ],
  "test_empty_iterator_choices": [
    [
      "tests/model_fields/tests.py",
      [
        "GetFieldDisplayTests",
        "test_empty_iterator_choices"
      ]
    ]
  ],
  "test_empty_choices": [
    [
      "tests/model_fields/tests.py",
      [
        "GetChoicesTests",
        "test_empty_choices"
      ]
    ]
  ],
  "test_blank_in_choices": [
    [
      "tests/model_fields/tests.py",
      [
        "GetChoicesTests",
        "test_blank_in_choices"
      ]
    ]
  ],
  "test_blank_in_grouped_choices": [
    [
      "tests/model_fields/tests.py",
      [
        "GetChoicesTests",
        "test_blank_in_grouped_choices"
      ]
    ]
  ],
  "test_lazy_strings_not_evaluated": [
    [
      "tests/model_fields/tests.py",
      [
        "GetChoicesTests",
        "test_lazy_strings_not_evaluated"
      ]
    ]
  ],
  "assertChoicesEqual": [
    [
      "tests/model_fields/tests.py",
      [
        "GetChoicesOrderingTests",
        "assertChoicesEqual"
      ]
    ],
    [
      "tests/model_fields/tests.py",
      [
        "GetChoicesLimitChoicesToTests",
        "assertChoicesEqual"
      ]
    ]
  ],
  "test_get_choices": [
    [
      "tests/model_fields/tests.py",
      [
        "GetChoicesOrderingTests",
        "test_get_choices"
      ]
    ],
    [
      "tests/model_fields/tests.py",
      [
        "GetChoicesLimitChoicesToTests",
        "test_get_choices"
      ]
    ]
  ],
  "test_get_choices_default_ordering": [
    [
      "tests/model_fields/tests.py",
      [
        "GetChoicesOrderingTests",
        "test_get_choices_default_ordering"
      ]
    ]
  ],
  "test_get_choices_reverse_related_field": [
    [
      "tests/model_fields/tests.py",
      [
        "GetChoicesOrderingTests",
        "test_get_choices_reverse_related_field"
      ]
    ],
    [
      "tests/model_fields/tests.py",
      [
        "GetChoicesLimitChoicesToTests",
        "test_get_choices_reverse_related_field"
      ]
    ]
  ],
  "test_get_choices_reverse_related_field_default_ordering": [
    [
      "tests/model_fields/tests.py",
      [
        "GetChoicesOrderingTests",
        "test_get_choices_reverse_related_field_default_ordering"
      ]
    ]
  ],
  "default_mode": [
    [
      "tests/model_forms/models.py",
      [
        "default_mode"
      ]
    ]
  ],
  "default_category": [
    [
      "tests/model_forms/models.py",
      [
        "default_category"
      ]
    ]
  ],
  "custom_upload_path": [
    [
      "tests/model_forms/models.py",
      [
        "try_",
        "ImageFile",
        "custom_upload_path"
      ]
    ],
    [
      "tests/model_forms/models.py",
      [
        "try_",
        "OptionalImageFile",
        "custom_upload_path"
      ]
    ]
  ],
  "test_basics": [
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_basics"
      ]
    ]
  ],
  "test_clean_model_instance": [
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_clean_model_instance"
      ]
    ]
  ],
  "test_clean_to_field_name": [
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_clean_to_field_name"
      ]
    ]
  ],
  "test_choices_freshness": [
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_choices_freshness"
      ]
    ]
  ],
  "test_choices_bool": [
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_choices_bool"
      ]
    ]
  ],
  "test_choices_bool_empty_label": [
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_choices_bool_empty_label"
      ]
    ]
  ],
  "test_choices_radio_blank": [
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_choices_radio_blank"
      ]
    ]
  ],
  "test_deepcopies_widget": [
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_deepcopies_widget"
      ]
    ]
  ],
  "test_result_cache_not_shared": [
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_result_cache_not_shared"
      ]
    ]
  ],
  "test_queryset_none": [
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_queryset_none"
      ]
    ]
  ],
  "test_no_extra_query_when_accessing_attrs": [
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_no_extra_query_when_accessing_attrs"
      ]
    ]
  ],
  "test_disabled_modelchoicefield": [
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_disabled_modelchoicefield"
      ]
    ]
  ],
  "test_disabled_modelchoicefield_has_changed": [
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_disabled_modelchoicefield_has_changed"
      ]
    ]
  ],
  "test_disabled_modelchoicefield_initial_model_instance": [
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_disabled_modelchoicefield_initial_model_instance"
      ]
    ]
  ],
  "test_disabled_multiplemodelchoicefield": [
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_disabled_multiplemodelchoicefield"
      ]
    ]
  ],
  "test_disabled_modelmultiplechoicefield_has_changed": [
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_disabled_modelmultiplechoicefield_has_changed"
      ]
    ]
  ],
  "test_overridable_choice_iterator": [
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_overridable_choice_iterator"
      ]
    ]
  ],
  "test_choice_iterator_passes_model_to_widget": [
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_choice_iterator_passes_model_to_widget"
      ]
    ]
  ],
  "test_custom_choice_iterator_passes_model_to_widget": [
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_custom_choice_iterator_passes_model_to_widget"
      ]
    ]
  ],
  "test_choices_not_fetched_when_not_rendering": [
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_choices_not_fetched_when_not_rendering"
      ]
    ]
  ],
  "test_queryset_manager": [
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_queryset_manager"
      ]
    ]
  ],
  "test_num_queries": [
    [
      "tests/model_forms/test_modelchoicefield.py",
      [
        "ModelChoiceFieldTests",
        "test_num_queries"
      ]
    ]
  ],
  "test_create_save_error": [
    [
      "tests/model_forms/test_uuid.py",
      [
        "ModelFormBaseTest",
        "test_create_save_error"
      ]
    ]
  ],
  "test_update_save_error": [
    [
      "tests/model_forms/test_uuid.py",
      [
        "ModelFormBaseTest",
        "test_update_save_error"
      ]
    ]
  ],
  "test_model_multiple_choice_field_uuid_pk": [
    [
      "tests/model_forms/test_uuid.py",
      [
        "ModelFormBaseTest",
        "test_model_multiple_choice_field_uuid_pk"
      ]
    ]
  ],
  "test_base_form": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_base_form"
      ]
    ],
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBasicTests",
        "test_base_form"
      ]
    ]
  ],
  "test_no_model_class": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_no_model_class"
      ]
    ]
  ],
  "test_empty_fields_to_fields_for_model": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_empty_fields_to_fields_for_model"
      ]
    ]
  ],
  "test_empty_fields_on_modelform": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_empty_fields_on_modelform"
      ]
    ]
  ],
  "test_empty_fields_to_construct_instance": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_empty_fields_to_construct_instance"
      ]
    ]
  ],
  "test_blank_with_null_foreign_key_field": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_blank_with_null_foreign_key_field"
      ]
    ]
  ],
  "test_blank_false_with_null_true_foreign_key_field": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_blank_false_with_null_true_foreign_key_field"
      ]
    ]
  ],
  "test_blank_foreign_key_with_radio": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_blank_foreign_key_with_radio"
      ]
    ]
  ],
  "test_non_blank_foreign_key_with_radio": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_non_blank_foreign_key_with_radio"
      ]
    ]
  ],
  "test_save_blank_false_with_required_false": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_save_blank_false_with_required_false"
      ]
    ]
  ],
  "test_save_blank_null_unique_charfield_saves_null": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_save_blank_null_unique_charfield_saves_null"
      ]
    ]
  ],
  "test_missing_fields_attribute": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_missing_fields_attribute"
      ]
    ]
  ],
  "test_extra_fields": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_extra_fields"
      ]
    ]
  ],
  "test_extra_field_model_form": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_extra_field_model_form"
      ]
    ]
  ],
  "test_extra_declared_field_model_form": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_extra_declared_field_model_form"
      ]
    ]
  ],
  "test_extra_field_modelform_factory": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_extra_field_modelform_factory"
      ]
    ]
  ],
  "test_replace_field": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_replace_field"
      ]
    ]
  ],
  "test_replace_field_variant_2": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_replace_field_variant_2"
      ]
    ]
  ],
  "test_replace_field_variant_3": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_replace_field_variant_3"
      ]
    ]
  ],
  "test_override_field": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_override_field"
      ]
    ]
  ],
  "test_limit_nonexistent_field": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_limit_nonexistent_field"
      ]
    ]
  ],
  "test_limit_fields_with_string": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_limit_fields_with_string"
      ]
    ]
  ],
  "test_exclude_fields": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_exclude_fields"
      ]
    ]
  ],
  "test_exclude_nonexistent_field": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_exclude_nonexistent_field"
      ]
    ]
  ],
  "test_exclude_fields_with_string": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_exclude_fields_with_string"
      ]
    ]
  ],
  "test_exclude_and_validation": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_exclude_and_validation"
      ]
    ]
  ],
  "test_confused_form": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_confused_form"
      ]
    ]
  ],
  "test_mixmodel_form": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_mixmodel_form"
      ]
    ]
  ],
  "test_article_form": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_article_form"
      ]
    ]
  ],
  "test_bad_form": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_bad_form"
      ]
    ]
  ],
  "test_invalid_meta_model": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_invalid_meta_model"
      ]
    ]
  ],
  "test_subcategory_form": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_subcategory_form"
      ]
    ]
  ],
  "test_subclassmeta_form": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_subclassmeta_form"
      ]
    ]
  ],
  "test_orderfields_form": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_orderfields_form"
      ]
    ]
  ],
  "test_orderfields2_form": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_orderfields2_form"
      ]
    ]
  ],
  "test_default_populated_on_optional_field": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_default_populated_on_optional_field"
      ]
    ]
  ],
  "test_default_not_populated_on_non_empty_value_in_cleaned_data": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_default_not_populated_on_non_empty_value_in_cleaned_data"
      ]
    ]
  ],
  "test_default_not_populated_on_optional_checkbox_input": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_default_not_populated_on_optional_checkbox_input"
      ]
    ]
  ],
  "test_default_not_populated_on_checkboxselectmultiple": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_default_not_populated_on_checkboxselectmultiple"
      ]
    ]
  ],
  "test_default_not_populated_on_selectmultiple": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_default_not_populated_on_selectmultiple"
      ]
    ]
  ],
  "test_prefixed_form_with_default_field": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_prefixed_form_with_default_field"
      ]
    ]
  ],
  "test_renderer_kwarg": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_renderer_kwarg"
      ]
    ]
  ],
  "test_default_splitdatetime_field": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_default_splitdatetime_field"
      ]
    ]
  ],
  "test_default_filefield": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_default_filefield"
      ]
    ]
  ],
  "test_default_selectdatewidget": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBaseTest",
        "test_default_selectdatewidget"
      ]
    ]
  ],
  "test_widget_overrides": [
    [
      "tests/model_forms/tests.py",
      [
        "TestFieldOverridesByFormMeta",
        "test_widget_overrides"
      ]
    ]
  ],
  "test_label_overrides": [
    [
      "tests/model_forms/tests.py",
      [
        "TestFieldOverridesByFormMeta",
        "test_label_overrides"
      ]
    ]
  ],
  "test_help_text_overrides": [
    [
      "tests/model_forms/tests.py",
      [
        "TestFieldOverridesByFormMeta",
        "test_help_text_overrides"
      ]
    ]
  ],
  "test_error_messages_overrides": [
    [
      "tests/model_forms/tests.py",
      [
        "TestFieldOverridesByFormMeta",
        "test_error_messages_overrides"
      ]
    ]
  ],
  "test_field_type_overrides": [
    [
      "tests/model_forms/tests.py",
      [
        "TestFieldOverridesByFormMeta",
        "test_field_type_overrides"
      ]
    ]
  ],
  "test_validates_with_replaced_field_not_specified": [
    [
      "tests/model_forms/tests.py",
      [
        "ValidationTest",
        "test_validates_with_replaced_field_not_specified"
      ]
    ]
  ],
  "test_validates_with_replaced_field_excluded": [
    [
      "tests/model_forms/tests.py",
      [
        "ValidationTest",
        "test_validates_with_replaced_field_excluded"
      ]
    ]
  ],
  "test_notrequired_overrides_notblank": [
    [
      "tests/model_forms/tests.py",
      [
        "ValidationTest",
        "test_notrequired_overrides_notblank"
      ]
    ]
  ],
  "test_simple_unique": [
    [
      "tests/model_forms/tests.py",
      [
        "UniqueTest",
        "test_simple_unique"
      ]
    ]
  ],
  "test_unique_together": [
    [
      "tests/model_forms/tests.py",
      [
        "UniqueTest",
        "test_unique_together"
      ]
    ],
    [
      "tests/model_inheritance/tests.py",
      [
        "InheritanceUniqueTests",
        "test_unique_together"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_unique_together"
      ]
    ]
  ],
  "test_unique_together_exclusion": [
    [
      "tests/model_forms/tests.py",
      [
        "UniqueTest",
        "test_unique_together_exclusion"
      ]
    ]
  ],
  "test_multiple_field_unique_together": [
    [
      "tests/model_forms/tests.py",
      [
        "UniqueTest",
        "test_multiple_field_unique_together"
      ]
    ]
  ],
  "test_unique_null": [
    [
      "tests/model_forms/tests.py",
      [
        "UniqueTest",
        "test_unique_null"
      ]
    ]
  ],
  "test_inherited_unique": [
    [
      "tests/model_forms/tests.py",
      [
        "UniqueTest",
        "test_inherited_unique"
      ]
    ]
  ],
  "test_inherited_unique_together": [
    [
      "tests/model_forms/tests.py",
      [
        "UniqueTest",
        "test_inherited_unique_together"
      ]
    ]
  ],
  "test_abstract_inherited_unique": [
    [
      "tests/model_forms/tests.py",
      [
        "UniqueTest",
        "test_abstract_inherited_unique"
      ]
    ]
  ],
  "test_abstract_inherited_unique_together": [
    [
      "tests/model_forms/tests.py",
      [
        "UniqueTest",
        "test_abstract_inherited_unique_together"
      ]
    ]
  ],
  "test_explicitpk_unspecified": [
    [
      "tests/model_forms/tests.py",
      [
        "UniqueTest",
        "test_explicitpk_unspecified"
      ]
    ]
  ],
  "test_explicitpk_unique": [
    [
      "tests/model_forms/tests.py",
      [
        "UniqueTest",
        "test_explicitpk_unique"
      ]
    ]
  ],
  "test_unique_for_date": [
    [
      "tests/model_forms/tests.py",
      [
        "UniqueTest",
        "test_unique_for_date"
      ]
    ],
    [
      "tests/validation/test_unique.py",
      [
        "PerformUniqueChecksTest",
        "test_unique_for_date"
      ]
    ]
  ],
  "test_unique_for_date_in_exclude": [
    [
      "tests/model_forms/tests.py",
      [
        "UniqueTest",
        "test_unique_for_date_in_exclude"
      ]
    ]
  ],
  "test_inherited_unique_for_date": [
    [
      "tests/model_forms/tests.py",
      [
        "UniqueTest",
        "test_inherited_unique_for_date"
      ]
    ]
  ],
  "test_unique_for_date_with_nullable_date": [
    [
      "tests/model_forms/tests.py",
      [
        "UniqueTest",
        "test_unique_for_date_with_nullable_date"
      ]
    ],
    [
      "tests/validation/test_unique.py",
      [
        "PerformUniqueChecksTest",
        "test_unique_for_date_with_nullable_date"
      ]
    ]
  ],
  "test_override_unique_message": [
    [
      "tests/model_forms/tests.py",
      [
        "UniqueTest",
        "test_override_unique_message"
      ]
    ]
  ],
  "test_override_unique_together_message": [
    [
      "tests/model_forms/tests.py",
      [
        "UniqueTest",
        "test_override_unique_together_message"
      ]
    ]
  ],
  "test_override_unique_for_date_message": [
    [
      "tests/model_forms/tests.py",
      [
        "UniqueTest",
        "test_override_unique_for_date_message"
      ]
    ]
  ],
  "create_basic_data": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBasicTests",
        "create_basic_data"
      ]
    ]
  ],
  "test_initial_values": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBasicTests",
        "test_initial_values"
      ]
    ]
  ],
  "test_m2m_initial_callable": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBasicTests",
        "test_m2m_initial_callable"
      ]
    ]
  ],
  "test_basic_creation": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBasicTests",
        "test_basic_creation"
      ]
    ]
  ],
  "test_save_commit_false": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBasicTests",
        "test_save_commit_false"
      ]
    ]
  ],
  "test_save_with_data_errors": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBasicTests",
        "test_save_with_data_errors"
      ]
    ]
  ],
  "test_multi_fields": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBasicTests",
        "test_multi_fields"
      ]
    ]
  ],
  "test_subset_fields": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBasicTests",
        "test_subset_fields"
      ]
    ]
  ],
  "test_m2m_editing": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBasicTests",
        "test_m2m_editing"
      ]
    ]
  ],
  "test_custom_form_fields": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBasicTests",
        "test_custom_form_fields"
      ]
    ]
  ],
  "test_runtime_choicefield_populated": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBasicTests",
        "test_runtime_choicefield_populated"
      ]
    ]
  ],
  "test_recleaning_model_form_instance": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormBasicTests",
        "test_recleaning_model_form_instance"
      ]
    ]
  ],
  "test_model_multiple_choice_field": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelMultipleChoiceFieldTests",
        "test_model_multiple_choice_field"
      ]
    ]
  ],
  "test_model_multiple_choice_required_false": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelMultipleChoiceFieldTests",
        "test_model_multiple_choice_required_false"
      ]
    ]
  ],
  "test_model_multiple_choice_number_of_queries": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelMultipleChoiceFieldTests",
        "test_model_multiple_choice_number_of_queries"
      ]
    ]
  ],
  "test_model_multiple_choice_run_validators": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelMultipleChoiceFieldTests",
        "test_model_multiple_choice_run_validators"
      ]
    ]
  ],
  "test_model_multiple_choice_show_hidden_initial": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelMultipleChoiceFieldTests",
        "test_model_multiple_choice_show_hidden_initial"
      ]
    ]
  ],
  "test_model_multiple_choice_field_22745": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelMultipleChoiceFieldTests",
        "test_model_multiple_choice_field_22745"
      ]
    ]
  ],
  "test_show_hidden_initial_changed_queries_efficiently": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelMultipleChoiceFieldTests",
        "test_show_hidden_initial_changed_queries_efficiently"
      ]
    ]
  ],
  "test_clean_does_deduplicate_values": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelMultipleChoiceFieldTests",
        "test_clean_does_deduplicate_values"
      ]
    ]
  ],
  "test_to_field_name_with_initial_data": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelMultipleChoiceFieldTests",
        "test_to_field_name_with_initial_data"
      ]
    ]
  ],
  "test_modelform_onetoonefield": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelOneToOneFieldTests",
        "test_modelform_onetoonefield"
      ]
    ]
  ],
  "test_modelform_subclassed_model": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelOneToOneFieldTests",
        "test_modelform_subclassed_model"
      ]
    ]
  ],
  "test_onetoonefield": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelOneToOneFieldTests",
        "test_onetoonefield"
      ]
    ]
  ],
  "test_assignment_of_none": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelOneToOneFieldTests",
        "test_assignment_of_none"
      ]
    ]
  ],
  "test_assignment_of_none_null_false": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelOneToOneFieldTests",
        "test_assignment_of_none_null_false"
      ]
    ]
  ],
  "test_clean_false": [
    [
      "tests/model_forms/tests.py",
      [
        "FileAndImageFieldTests",
        "test_clean_false"
      ]
    ]
  ],
  "test_clean_false_required": [
    [
      "tests/model_forms/tests.py",
      [
        "FileAndImageFieldTests",
        "test_clean_false_required"
      ]
    ]
  ],
  "test_full_clear": [
    [
      "tests/model_forms/tests.py",
      [
        "FileAndImageFieldTests",
        "test_full_clear"
      ]
    ]
  ],
  "test_clear_and_file_contradiction": [
    [
      "tests/model_forms/tests.py",
      [
        "FileAndImageFieldTests",
        "test_clear_and_file_contradiction"
      ]
    ]
  ],
  "test_render_empty_file_field": [
    [
      "tests/model_forms/tests.py",
      [
        "FileAndImageFieldTests",
        "test_render_empty_file_field"
      ]
    ]
  ],
  "test_file_field_data": [
    [
      "tests/model_forms/tests.py",
      [
        "FileAndImageFieldTests",
        "test_file_field_data"
      ]
    ]
  ],
  "test_filefield_required_false": [
    [
      "tests/model_forms/tests.py",
      [
        "FileAndImageFieldTests",
        "test_filefield_required_false"
      ]
    ]
  ],
  "test_custom_file_field_save": [
    [
      "tests/model_forms/tests.py",
      [
        "FileAndImageFieldTests",
        "test_custom_file_field_save"
      ]
    ]
  ],
  "test_file_field_multiple_save": [
    [
      "tests/model_forms/tests.py",
      [
        "FileAndImageFieldTests",
        "test_file_field_multiple_save"
      ]
    ]
  ],
  "test_file_path_field_blank": [
    [
      "tests/model_forms/tests.py",
      [
        "FileAndImageFieldTests",
        "test_file_path_field_blank"
      ]
    ]
  ],
  "test_url_on_modelform": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelOtherFieldTests",
        "test_url_on_modelform"
      ]
    ]
  ],
  "test_modelform_non_editable_field": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelOtherFieldTests",
        "test_modelform_non_editable_field"
      ]
    ]
  ],
  "test_http_prefixing": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelOtherFieldTests",
        "test_http_prefixing"
      ]
    ]
  ],
  "test_media_on_modelform": [
    [
      "tests/model_forms/tests.py",
      [
        "OtherModelFormTests",
        "test_media_on_modelform"
      ]
    ]
  ],
  "test_choices_type": [
    [
      "tests/model_forms/tests.py",
      [
        "OtherModelFormTests",
        "test_choices_type"
      ]
    ]
  ],
  "test_prefetch_related_queryset": [
    [
      "tests/model_forms/tests.py",
      [
        "OtherModelFormTests",
        "test_prefetch_related_queryset"
      ]
    ]
  ],
  "test_foreignkeys_which_use_to_field": [
    [
      "tests/model_forms/tests.py",
      [
        "OtherModelFormTests",
        "test_foreignkeys_which_use_to_field"
      ]
    ]
  ],
  "test_model_field_that_returns_none_to_exclude_itself_with_explicit_fields": [
    [
      "tests/model_forms/tests.py",
      [
        "OtherModelFormTests",
        "test_model_field_that_returns_none_to_exclude_itself_with_explicit_fields"
      ]
    ]
  ],
  "test_iterable_model_m2m": [
    [
      "tests/model_forms/tests.py",
      [
        "OtherModelFormTests",
        "test_iterable_model_m2m"
      ]
    ]
  ],
  "test_callable_field_default": [
    [
      "tests/model_forms/tests.py",
      [
        "OtherModelFormTests",
        "test_callable_field_default"
      ]
    ]
  ],
  "test_custom_error_messages": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormCustomErrorTests",
        "test_custom_error_messages"
      ]
    ]
  ],
  "test_model_clean_error_messages": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormCustomErrorTests",
        "test_model_clean_error_messages"
      ]
    ]
  ],
  "test_override_clean": [
    [
      "tests/model_forms/tests.py",
      [
        "CustomCleanTests",
        "test_override_clean"
      ]
    ]
  ],
  "test_model_form_clean_applies_to_model": [
    [
      "tests/model_forms/tests.py",
      [
        "CustomCleanTests",
        "test_model_form_clean_applies_to_model"
      ]
    ]
  ],
  "test_form_subclass_inheritance": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormInheritanceTests",
        "test_form_subclass_inheritance"
      ]
    ]
  ],
  "test_field_removal": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormInheritanceTests",
        "test_field_removal"
      ]
    ]
  ],
  "test_field_removal_name_clashes": [
    [
      "tests/model_forms/tests.py",
      [
        "ModelFormInheritanceTests",
        "test_field_removal_name_clashes"
      ]
    ]
  ],
  "test_limit_choices_to_callable_for_fk_rel": [
    [
      "tests/model_forms/tests.py",
      [
        "LimitChoicesToTests",
        "test_limit_choices_to_callable_for_fk_rel"
      ]
    ]
  ],
  "test_limit_choices_to_callable_for_m2m_rel": [
    [
      "tests/model_forms/tests.py",
      [
        "LimitChoicesToTests",
        "test_limit_choices_to_callable_for_m2m_rel"
      ]
    ]
  ],
  "test_custom_field_with_queryset_but_no_limit_choices_to": [
    [
      "tests/model_forms/tests.py",
      [
        "LimitChoicesToTests",
        "test_custom_field_with_queryset_but_no_limit_choices_to"
      ]
    ]
  ],
  "test_fields_for_model_applies_limit_choices_to": [
    [
      "tests/model_forms/tests.py",
      [
        "LimitChoicesToTests",
        "test_fields_for_model_applies_limit_choices_to"
      ]
    ]
  ],
  "test_callable_called_each_time_form_is_instantiated": [
    [
      "tests/model_forms/tests.py",
      [
        "LimitChoicesToTests",
        "test_callable_called_each_time_form_is_instantiated"
      ]
    ]
  ],
  "test_baseform_with_widgets_in_meta": [
    [
      "tests/model_forms/tests.py",
      [
        "FormFieldCallbackTests",
        "test_baseform_with_widgets_in_meta"
      ]
    ]
  ],
  "test_factory_with_widget_argument": [
    [
      "tests/model_forms/tests.py",
      [
        "FormFieldCallbackTests",
        "test_factory_with_widget_argument"
      ]
    ]
  ],
  "test_modelform_factory_without_fields": [
    [
      "tests/model_forms/tests.py",
      [
        "FormFieldCallbackTests",
        "test_modelform_factory_without_fields"
      ]
    ]
  ],
  "test_modelform_factory_with_all_fields": [
    [
      "tests/model_forms/tests.py",
      [
        "FormFieldCallbackTests",
        "test_modelform_factory_with_all_fields"
      ]
    ]
  ],
  "test_custom_callback": [
    [
      "tests/model_forms/tests.py",
      [
        "FormFieldCallbackTests",
        "test_custom_callback"
      ]
    ]
  ],
  "test_bad_callback": [
    [
      "tests/model_forms/tests.py",
      [
        "FormFieldCallbackTests",
        "test_bad_callback"
      ]
    ]
  ],
  "test_inherit_after_custom_callback": [
    [
      "tests/model_forms/tests.py",
      [
        "FormFieldCallbackTests",
        "test_inherit_after_custom_callback"
      ]
    ]
  ],
  "test_model_form_applies_localize_to_some_fields": [
    [
      "tests/model_forms/tests.py",
      [
        "LocalizedModelFormTest",
        "test_model_form_applies_localize_to_some_fields"
      ]
    ]
  ],
  "test_model_form_applies_localize_to_all_fields": [
    [
      "tests/model_forms/tests.py",
      [
        "LocalizedModelFormTest",
        "test_model_form_applies_localize_to_all_fields"
      ]
    ]
  ],
  "test_model_form_refuses_arbitrary_string": [
    [
      "tests/model_forms/tests.py",
      [
        "LocalizedModelFormTest",
        "test_model_form_refuses_arbitrary_string"
      ]
    ]
  ],
  "test_modelform_factory_metaclass": [
    [
      "tests/model_forms/tests.py",
      [
        "CustomMetaclassTestCase",
        "test_modelform_factory_metaclass"
      ]
    ]
  ],
  "test_setattr_raises_validation_error_field_specific": [
    [
      "tests/model_forms/tests.py",
      [
        "StrictAssignmentTests",
        "test_setattr_raises_validation_error_field_specific"
      ]
    ]
  ],
  "test_setattr_raises_validation_error_non_field": [
    [
      "tests/model_forms/tests.py",
      [
        "StrictAssignmentTests",
        "test_setattr_raises_validation_error_non_field"
      ]
    ]
  ],
  "test_inlineformset_factory_nulls_default_pks": [
    [
      "tests/model_formsets/test_uuid.py",
      [
        "InlineFormsetTests",
        "test_inlineformset_factory_nulls_default_pks"
      ]
    ]
  ],
  "test_inlineformset_factory_ignores_default_pks_on_submit": [
    [
      "tests/model_formsets/test_uuid.py",
      [
        "InlineFormsetTests",
        "test_inlineformset_factory_ignores_default_pks_on_submit"
      ]
    ]
  ],
  "test_inlineformset_factory_nulls_default_pks_uuid_parent_auto_child": [
    [
      "tests/model_formsets/test_uuid.py",
      [
        "InlineFormsetTests",
        "test_inlineformset_factory_nulls_default_pks_uuid_parent_auto_child"
      ]
    ]
  ],
  "test_inlineformset_factory_nulls_default_pks_auto_parent_uuid_child": [
    [
      "tests/model_formsets/test_uuid.py",
      [
        "InlineFormsetTests",
        "test_inlineformset_factory_nulls_default_pks_auto_parent_uuid_child"
      ]
    ]
  ],
  "test_inlineformset_factory_nulls_default_pks_child_editable_pk": [
    [
      "tests/model_formsets/test_uuid.py",
      [
        "InlineFormsetTests",
        "test_inlineformset_factory_nulls_default_pks_child_editable_pk"
      ]
    ]
  ],
  "test_inlineformset_factory_nulls_default_pks_alternate_key_relation": [
    [
      "tests/model_formsets/test_uuid.py",
      [
        "InlineFormsetTests",
        "test_inlineformset_factory_nulls_default_pks_alternate_key_relation"
      ]
    ]
  ],
  "test_outdated_deletion": [
    [
      "tests/model_formsets/tests.py",
      [
        "DeletionTests",
        "test_outdated_deletion"
      ]
    ]
  ],
  "test_modelformset_factory_without_fields": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_modelformset_factory_without_fields"
      ]
    ]
  ],
  "test_simple_save": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_simple_save"
      ]
    ]
  ],
  "test_commit_false": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_commit_false"
      ]
    ]
  ],
  "test_max_num": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_max_num"
      ]
    ]
  ],
  "test_min_num_with_existing": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_min_num_with_existing"
      ]
    ]
  ],
  "test_custom_save_method": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_custom_save_method"
      ]
    ]
  ],
  "test_custom_queryset_init": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_custom_queryset_init"
      ]
    ]
  ],
  "test_inline_formsets": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_inline_formsets"
      ]
    ]
  ],
  "test_inline_formsets_save_as_new": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_inline_formsets_save_as_new"
      ]
    ]
  ],
  "test_inline_formsets_with_custom_pk": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_inline_formsets_with_custom_pk"
      ]
    ]
  ],
  "test_inline_formsets_with_multi_table_inheritance": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_inline_formsets_with_multi_table_inheritance"
      ]
    ]
  ],
  "test_inline_formsets_with_nullable_unique_together": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_inline_formsets_with_nullable_unique_together"
      ]
    ]
  ],
  "test_inline_formsets_with_custom_save_method": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_inline_formsets_with_custom_save_method"
      ]
    ]
  ],
  "test_inline_formsets_with_custom_save_method_related_instance": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_inline_formsets_with_custom_save_method_related_instance"
      ]
    ]
  ],
  "test_inline_formsets_with_wrong_fk_name": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_inline_formsets_with_wrong_fk_name"
      ]
    ]
  ],
  "test_unique_true_enforces_max_num_one": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_unique_true_enforces_max_num_one"
      ]
    ]
  ],
  "test_foreign_keys_in_parents": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_foreign_keys_in_parents"
      ]
    ]
  ],
  "test_unique_validation": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_unique_validation"
      ]
    ]
  ],
  "test_modelformset_validate_max_flag": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_modelformset_validate_max_flag"
      ]
    ]
  ],
  "test_unique_together_validation": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_unique_together_validation"
      ]
    ]
  ],
  "test_unique_together_with_inlineformset_factory": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_unique_together_with_inlineformset_factory"
      ]
    ]
  ],
  "test_inlineformset_factory_with_null_fk": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_inlineformset_factory_with_null_fk"
      ]
    ]
  ],
  "test_inlineformset_with_arrayfield": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_inlineformset_with_arrayfield"
      ]
    ]
  ],
  "test_model_formset_with_custom_pk": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_model_formset_with_custom_pk"
      ]
    ]
  ],
  "test_model_formset_with_initial_model_instance": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_model_formset_with_initial_model_instance"
      ]
    ]
  ],
  "test_model_formset_with_initial_queryset": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_model_formset_with_initial_queryset"
      ]
    ]
  ],
  "test_prevent_duplicates_from_with_the_same_formset": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_prevent_duplicates_from_with_the_same_formset"
      ]
    ]
  ],
  "test_prevent_change_outer_model_and_create_invalid_data": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_prevent_change_outer_model_and_create_invalid_data"
      ]
    ]
  ],
  "test_validation_without_id": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_validation_without_id"
      ]
    ]
  ],
  "test_validation_with_child_model_without_id": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_validation_with_child_model_without_id"
      ]
    ]
  ],
  "test_validation_with_invalid_id": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_validation_with_invalid_id"
      ]
    ]
  ],
  "test_validation_with_nonexistent_id": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_validation_with_nonexistent_id"
      ]
    ]
  ],
  "test_initial_form_count_empty_data_raises_validation_error": [
    [
      "tests/model_formsets/tests.py",
      [
        "ModelFormsetTest",
        "test_initial_form_count_empty_data_raises_validation_error"
      ]
    ]
  ],
  "test_modelformset_factory_widgets": [
    [
      "tests/model_formsets/tests.py",
      [
        "TestModelFormsetOverridesTroughFormMeta",
        "test_modelformset_factory_widgets"
      ]
    ]
  ],
  "test_inlineformset_factory_widgets": [
    [
      "tests/model_formsets/tests.py",
      [
        "TestModelFormsetOverridesTroughFormMeta",
        "test_inlineformset_factory_widgets"
      ]
    ]
  ],
  "test_modelformset_factory_labels_overrides": [
    [
      "tests/model_formsets/tests.py",
      [
        "TestModelFormsetOverridesTroughFormMeta",
        "test_modelformset_factory_labels_overrides"
      ]
    ]
  ],
  "test_inlineformset_factory_labels_overrides": [
    [
      "tests/model_formsets/tests.py",
      [
        "TestModelFormsetOverridesTroughFormMeta",
        "test_inlineformset_factory_labels_overrides"
      ]
    ]
  ],
  "test_modelformset_factory_help_text_overrides": [
    [
      "tests/model_formsets/tests.py",
      [
        "TestModelFormsetOverridesTroughFormMeta",
        "test_modelformset_factory_help_text_overrides"
      ]
    ]
  ],
  "test_inlineformset_factory_help_text_overrides": [
    [
      "tests/model_formsets/tests.py",
      [
        "TestModelFormsetOverridesTroughFormMeta",
        "test_inlineformset_factory_help_text_overrides"
      ]
    ]
  ],
  "test_modelformset_factory_error_messages_overrides": [
    [
      "tests/model_formsets/tests.py",
      [
        "TestModelFormsetOverridesTroughFormMeta",
        "test_modelformset_factory_error_messages_overrides"
      ]
    ]
  ],
  "test_inlineformset_factory_error_messages_overrides": [
    [
      "tests/model_formsets/tests.py",
      [
        "TestModelFormsetOverridesTroughFormMeta",
        "test_inlineformset_factory_error_messages_overrides"
      ]
    ]
  ],
  "test_modelformset_factory_field_class_overrides": [
    [
      "tests/model_formsets/tests.py",
      [
        "TestModelFormsetOverridesTroughFormMeta",
        "test_modelformset_factory_field_class_overrides"
      ]
    ]
  ],
  "test_inlineformset_factory_field_class_overrides": [
    [
      "tests/model_formsets/tests.py",
      [
        "TestModelFormsetOverridesTroughFormMeta",
        "test_inlineformset_factory_field_class_overrides"
      ]
    ]
  ],
  "test_formset_over_to_field": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "InlineFormsetTests",
        "test_formset_over_to_field"
      ]
    ]
  ],
  "test_formset_over_inherited_model": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "InlineFormsetTests",
        "test_formset_over_inherited_model"
      ]
    ]
  ],
  "test_inline_model_with_to_field": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "InlineFormsetTests",
        "test_inline_model_with_to_field"
      ]
    ]
  ],
  "test_inline_model_with_primary_to_field": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "InlineFormsetTests",
        "test_inline_model_with_primary_to_field"
      ]
    ]
  ],
  "test_inline_model_with_to_field_to_rel": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "InlineFormsetTests",
        "test_inline_model_with_to_field_to_rel"
      ]
    ]
  ],
  "test_formset_with_none_instance": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "InlineFormsetTests",
        "test_formset_with_none_instance"
      ]
    ]
  ],
  "test_empty_fields_on_modelformset": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "InlineFormsetTests",
        "test_empty_fields_on_modelformset"
      ]
    ]
  ],
  "test_save_as_new_with_new_inlines": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "InlineFormsetTests",
        "test_save_as_new_with_new_inlines"
      ]
    ]
  ],
  "test_error_class": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "FormsetTests",
        "test_error_class"
      ]
    ]
  ],
  "test_extraneous_query_is_not_run": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "FormsetTests",
        "test_extraneous_query_is_not_run"
      ]
    ]
  ],
  "test_inlineformset_factory_default": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "FormfieldCallbackTests",
        "test_inlineformset_factory_default"
      ]
    ]
  ],
  "test_modelformset_factory_default": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "FormfieldCallbackTests",
        "test_modelformset_factory_default"
      ]
    ]
  ],
  "assertCallbackCalled": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "FormfieldCallbackTests",
        "assertCallbackCalled"
      ]
    ]
  ],
  "test_inlineformset_custom_callback": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "FormfieldCallbackTests",
        "test_inlineformset_custom_callback"
      ]
    ]
  ],
  "test_modelformset_custom_callback": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "FormfieldCallbackTests",
        "test_modelformset_custom_callback"
      ]
    ]
  ],
  "should_delete": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "FormfieldShouldDeleteFormTests",
        "CustomDeleteUserForm",
        "should_delete"
      ]
    ]
  ],
  "test_init_database": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "FormfieldShouldDeleteFormTests",
        "test_init_database"
      ]
    ]
  ],
  "test_no_delete": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "FormfieldShouldDeleteFormTests",
        "test_no_delete"
      ]
    ]
  ],
  "test_all_delete": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "FormfieldShouldDeleteFormTests",
        "test_all_delete"
      ]
    ]
  ],
  "test_custom_delete": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "FormfieldShouldDeleteFormTests",
        "test_custom_delete"
      ]
    ]
  ],
  "test_resubmit": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "RedeleteTests",
        "test_resubmit"
      ]
    ]
  ],
  "test_delete_already_deleted": [
    [
      "tests/model_formsets_regress/tests.py",
      [
        "RedeleteTests",
        "test_delete_already_deleted"
      ]
    ]
  ],
  "test_suffix": [
    [
      "tests/model_indexes/tests.py",
      [
        "SimpleIndexesTests",
        "test_suffix"
      ]
    ],
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "BloomIndexTests",
        "test_suffix"
      ]
    ],
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "BrinIndexTests",
        "test_suffix"
      ]
    ],
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "BTreeIndexTests",
        "test_suffix"
      ]
    ],
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "GinIndexTests",
        "test_suffix"
      ]
    ],
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "GistIndexTests",
        "test_suffix"
      ]
    ],
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "HashIndexTests",
        "test_suffix"
      ]
    ],
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "SpGistIndexTests",
        "test_suffix"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_pluralize.py",
      [
        "PluralizeTests",
        "test_suffix"
      ]
    ]
  ],
  "test_index_fields_type": [
    [
      "tests/model_indexes/tests.py",
      [
        "SimpleIndexesTests",
        "test_index_fields_type"
      ]
    ]
  ],
  "test_fields_tuple": [
    [
      "tests/model_indexes/tests.py",
      [
        "SimpleIndexesTests",
        "test_fields_tuple"
      ]
    ]
  ],
  "test_raises_error_without_field": [
    [
      "tests/model_indexes/tests.py",
      [
        "SimpleIndexesTests",
        "test_raises_error_without_field"
      ]
    ]
  ],
  "test_opclasses_requires_index_name": [
    [
      "tests/model_indexes/tests.py",
      [
        "SimpleIndexesTests",
        "test_opclasses_requires_index_name"
      ]
    ]
  ],
  "test_opclasses_requires_list_or_tuple": [
    [
      "tests/model_indexes/tests.py",
      [
        "SimpleIndexesTests",
        "test_opclasses_requires_list_or_tuple"
      ]
    ]
  ],
  "test_opclasses_and_fields_same_length": [
    [
      "tests/model_indexes/tests.py",
      [
        "SimpleIndexesTests",
        "test_opclasses_and_fields_same_length"
      ]
    ]
  ],
  "test_condition_requires_index_name": [
    [
      "tests/model_indexes/tests.py",
      [
        "SimpleIndexesTests",
        "test_condition_requires_index_name"
      ]
    ]
  ],
  "test_name_auto_generation": [
    [
      "tests/model_indexes/tests.py",
      [
        "SimpleIndexesTests",
        "test_name_auto_generation"
      ]
    ],
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "IndexTestMixin",
        "test_name_auto_generation"
      ]
    ]
  ],
  "test_name_auto_generation_with_quoted_db_table": [
    [
      "tests/model_indexes/tests.py",
      [
        "SimpleIndexesTests",
        "test_name_auto_generation_with_quoted_db_table"
      ]
    ]
  ],
  "test_deconstruct_with_condition": [
    [
      "tests/model_indexes/tests.py",
      [
        "SimpleIndexesTests",
        "test_deconstruct_with_condition"
      ]
    ]
  ],
  "test_clone": [
    [
      "tests/model_indexes/tests.py",
      [
        "SimpleIndexesTests",
        "test_clone"
      ]
    ]
  ],
  "test_name_set": [
    [
      "tests/model_indexes/tests.py",
      [
        "SimpleIndexesTests",
        "test_name_set"
      ]
    ]
  ],
  "test_abstract_children": [
    [
      "tests/model_indexes/tests.py",
      [
        "SimpleIndexesTests",
        "test_abstract_children"
      ]
    ]
  ],
  "test_single_parent": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_single_parent"
      ]
    ]
  ],
  "test_multiple_inheritance_cannot_shadow_inherited_field": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_multiple_inheritance_cannot_shadow_inherited_field"
      ]
    ]
  ],
  "test_multiple_inheritance_cannot_shadow_concrete_inherited_field": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_multiple_inheritance_cannot_shadow_concrete_inherited_field"
      ]
    ]
  ],
  "test_virtual_field": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_virtual_field"
      ]
    ]
  ],
  "test_cannot_override_indirect_abstract_field": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_cannot_override_indirect_abstract_field"
      ]
    ]
  ],
  "test_override_field_with_attr": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_override_field_with_attr"
      ]
    ]
  ],
  "test_overriding_field_removed_by_concrete_model": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_overriding_field_removed_by_concrete_model"
      ]
    ]
  ],
  "test_shadowed_fkey_id": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_shadowed_fkey_id"
      ]
    ]
  ],
  "test_shadow_related_name_when_set_to_none": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_shadow_related_name_when_set_to_none"
      ]
    ]
  ],
  "test_reverse_foreign_key": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_reverse_foreign_key"
      ]
    ]
  ],
  "test_multi_inheritance_field_clashes": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_multi_inheritance_field_clashes"
      ]
    ]
  ],
  "test_override_one2one_relation_auto_field_clashes": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_override_one2one_relation_auto_field_clashes"
      ]
    ]
  ],
  "test_abstract_model_with_regular_python_mixin_mro": [
    [
      "tests/model_inheritance/test_abstract_inheritance.py",
      [
        "AbstractInheritanceTests",
        "test_abstract_model_with_regular_python_mixin_mro"
      ]
    ]
  ],
  "test_abstract": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceTests",
        "test_abstract"
      ]
    ]
  ],
  "test_reverse_relation_for_different_hierarchy_tree": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceTests",
        "test_reverse_relation_for_different_hierarchy_tree"
      ]
    ]
  ],
  "test_model_with_distinct_accessors": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceTests",
        "test_model_with_distinct_accessors"
      ]
    ]
  ],
  "test_model_with_distinct_related_query_name": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceTests",
        "test_model_with_distinct_related_query_name"
      ]
    ]
  ],
  "test_meta_fields_and_ordering": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceTests",
        "test_meta_fields_and_ordering"
      ]
    ]
  ],
  "test_custompk_m2m": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceTests",
        "test_custompk_m2m"
      ]
    ]
  ],
  "test_update_parent_filtering": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceTests",
        "test_update_parent_filtering"
      ]
    ]
  ],
  "test_create_child_no_update": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceTests",
        "test_create_child_no_update"
      ]
    ]
  ],
  "test_mixin_init": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceTests",
        "test_mixin_init"
      ]
    ]
  ],
  "test_abstract_parent_link": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceTests",
        "test_abstract_parent_link"
      ]
    ]
  ],
  "test_init_subclass": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceTests",
        "test_init_subclass"
      ]
    ]
  ],
  "test_set_name": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceTests",
        "test_set_name"
      ]
    ]
  ],
  "test_inherited_ordering_pk_desc": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceTests",
        "test_inherited_ordering_pk_desc"
      ]
    ]
  ],
  "test_queryset_class_getitem": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceTests",
        "test_queryset_class_getitem"
      ]
    ]
  ],
  "test_filter_inherited_model": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceDataTests",
        "test_filter_inherited_model"
      ]
    ]
  ],
  "test_update_inherited_model": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceDataTests",
        "test_update_inherited_model"
      ]
    ]
  ],
  "test_parent_fields_available_for_filtering_in_child_model": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceDataTests",
        "test_parent_fields_available_for_filtering_in_child_model"
      ]
    ]
  ],
  "test_filter_on_parent_returns_object_of_parent_type": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceDataTests",
        "test_filter_on_parent_returns_object_of_parent_type"
      ]
    ]
  ],
  "test_parent_child_one_to_one_link": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceDataTests",
        "test_parent_child_one_to_one_link"
      ]
    ]
  ],
  "test_parent_child_one_to_one_link_on_nonrelated_objects": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceDataTests",
        "test_parent_child_one_to_one_link_on_nonrelated_objects"
      ]
    ]
  ],
  "test_inherited_does_not_exist_exception": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceDataTests",
        "test_inherited_does_not_exist_exception"
      ]
    ]
  ],
  "test_inherited_multiple_objects_returned_exception": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceDataTests",
        "test_inherited_multiple_objects_returned_exception"
      ]
    ]
  ],
  "test_related_objects_for_inherited_models": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceDataTests",
        "test_related_objects_for_inherited_models"
      ]
    ]
  ],
  "test_update_works_on_parent_and_child_models_at_once": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceDataTests",
        "test_update_works_on_parent_and_child_models_at_once"
      ]
    ]
  ],
  "test_values_works_on_parent_model_fields": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceDataTests",
        "test_values_works_on_parent_model_fields"
      ]
    ]
  ],
  "test_select_related_works_on_parent_model_fields": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceDataTests",
        "test_select_related_works_on_parent_model_fields"
      ]
    ]
  ],
  "test_select_related_defer": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceDataTests",
        "test_select_related_defer"
      ]
    ]
  ],
  "test_parent_cache_reuse": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceDataTests",
        "test_parent_cache_reuse"
      ]
    ]
  ],
  "test_update_query_counts": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceDataTests",
        "test_update_query_counts"
      ]
    ]
  ],
  "test_filter_inherited_on_null": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceDataTests",
        "test_filter_inherited_on_null"
      ]
    ]
  ],
  "test_exclude_inherited_on_null": [
    [
      "tests/model_inheritance/tests.py",
      [
        "ModelInheritanceDataTests",
        "test_exclude_inherited_on_null"
      ]
    ]
  ],
  "test_abstract_fk_related_name": [
    [
      "tests/model_inheritance/tests.py",
      [
        "InheritanceSameModelNameTests",
        "test_abstract_fk_related_name"
      ]
    ]
  ],
  "test_unique": [
    [
      "tests/model_inheritance/tests.py",
      [
        "InheritanceUniqueTests",
        "test_unique"
      ]
    ],
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_unique"
      ]
    ]
  ],
  "test_issue_7105": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_issue_7105"
      ]
    ]
  ],
  "test_issue_7276": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_issue_7276"
      ]
    ]
  ],
  "test_issue_6755": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_issue_6755"
      ]
    ]
  ],
  "test_issue_7488": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_issue_7488"
      ]
    ]
  ],
  "test_issue_11764": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_issue_11764"
      ]
    ]
  ],
  "test_issue_7853": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_issue_7853"
      ]
    ]
  ],
  "test_get_next_previous_by_date": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_get_next_previous_by_date"
      ]
    ]
  ],
  "test_inherited_fields": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_inherited_fields"
      ]
    ],
    [
      "tests/queries/test_bulk_update.py",
      [
        "BulkUpdateTests",
        "test_inherited_fields"
      ]
    ]
  ],
  "test_queryset_update_on_parent_model": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_queryset_update_on_parent_model"
      ]
    ]
  ],
  "test_use_explicit_o2o_to_parent_as_pk": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_use_explicit_o2o_to_parent_as_pk"
      ]
    ]
  ],
  "test_use_explicit_o2o_to_parent_from_abstract_model": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_use_explicit_o2o_to_parent_from_abstract_model"
      ]
    ]
  ],
  "test_all_fields_from_abstract_base_class": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_all_fields_from_abstract_base_class"
      ]
    ]
  ],
  "test_abstract_base_class_m2m_relation_inheritance": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_abstract_base_class_m2m_relation_inheritance"
      ]
    ]
  ],
  "test_abstract_verbose_name_plural_inheritance": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_abstract_verbose_name_plural_inheritance"
      ]
    ]
  ],
  "test_inherited_nullable_exclude": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_inherited_nullable_exclude"
      ]
    ]
  ],
  "test_concrete_abstract_concrete_pk": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_concrete_abstract_concrete_pk"
      ]
    ]
  ],
  "test_inherited_unique_field_with_form": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_inherited_unique_field_with_form"
      ]
    ]
  ],
  "test_inheritance_joins": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_inheritance_joins"
      ]
    ]
  ],
  "test_inheritance_values_joins": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_inheritance_values_joins"
      ]
    ]
  ],
  "test_issue_21554": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_issue_21554"
      ]
    ]
  ],
  "test_inheritance_resolve_columns": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_inheritance_resolve_columns"
      ]
    ]
  ],
  "test_inheritance_select_related": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_inheritance_select_related"
      ]
    ]
  ],
  "test_filter_with_parent_fk": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_filter_with_parent_fk"
      ]
    ]
  ],
  "test_ptr_accessor_assigns_state": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_ptr_accessor_assigns_state"
      ]
    ]
  ],
  "test_related_filtering_query_efficiency_ticket_15844": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_related_filtering_query_efficiency_ticket_15844"
      ]
    ]
  ],
  "test_queries_on_parent_access": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_queries_on_parent_access"
      ]
    ]
  ],
  "test_id_field_update_on_ancestor_change": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_id_field_update_on_ancestor_change"
      ]
    ]
  ],
  "test_create_new_instance_with_pk_equals_none": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_create_new_instance_with_pk_equals_none"
      ]
    ]
  ],
  "test_create_new_instance_with_pk_equals_none_multi_inheritance": [
    [
      "tests/model_inheritance_regress/tests.py",
      [
        "ModelInheritanceTest",
        "test_create_new_instance_with_pk_equals_none_multi_inheritance"
      ]
    ]
  ],
  "test_property": [
    [
      "tests/model_meta/models.py",
      [
        "AbstractPerson",
        "test_property"
      ]
    ]
  ],
  "_map_related_query_names": [
    [
      "tests/model_meta/tests.py",
      [
        "OptionsBaseTests",
        "_map_related_query_names"
      ]
    ]
  ],
  "_map_names": [
    [
      "tests/model_meta/tests.py",
      [
        "OptionsBaseTests",
        "_map_names"
      ]
    ]
  ],
  "_model": [
    [
      "tests/model_meta/tests.py",
      [
        "OptionsBaseTests",
        "_model"
      ]
    ]
  ],
  "_details": [
    [
      "tests/model_meta/tests.py",
      [
        "OptionsBaseTests",
        "_details"
      ]
    ]
  ],
  "test_get_fields_is_immutable": [
    [
      "tests/model_meta/tests.py",
      [
        "GetFieldsTests",
        "test_get_fields_is_immutable"
      ]
    ]
  ],
  "test_label_lower": [
    [
      "tests/model_meta/tests.py",
      [
        "LabelTests",
        "test_label_lower"
      ]
    ]
  ],
  "test_fields": [
    [
      "tests/model_meta/tests.py",
      [
        "DataTests",
        "test_fields"
      ]
    ],
    [
      "tests/reserved_names/tests.py",
      [
        "ReservedNameTests",
        "test_fields"
      ]
    ]
  ],
  "test_local_fields": [
    [
      "tests/model_meta/tests.py",
      [
        "DataTests",
        "test_local_fields"
      ]
    ]
  ],
  "test_local_concrete_fields": [
    [
      "tests/model_meta/tests.py",
      [
        "DataTests",
        "test_local_concrete_fields"
      ]
    ]
  ],
  "test_many_to_many_with_model": [
    [
      "tests/model_meta/tests.py",
      [
        "M2MTests",
        "test_many_to_many_with_model"
      ]
    ]
  ],
  "key_name": [
    [
      "tests/model_meta/tests.py",
      [
        "RelatedObjectsTests",
        "key_name"
      ]
    ]
  ],
  "test_related_objects": [
    [
      "tests/model_meta/tests.py",
      [
        "RelatedObjectsTests",
        "test_related_objects"
      ]
    ]
  ],
  "test_related_objects_local": [
    [
      "tests/model_meta/tests.py",
      [
        "RelatedObjectsTests",
        "test_related_objects_local"
      ]
    ]
  ],
  "test_related_objects_include_hidden": [
    [
      "tests/model_meta/tests.py",
      [
        "RelatedObjectsTests",
        "test_related_objects_include_hidden"
      ]
    ]
  ],
  "test_related_objects_include_hidden_local_only": [
    [
      "tests/model_meta/tests.py",
      [
        "RelatedObjectsTests",
        "test_related_objects_include_hidden_local_only"
      ]
    ]
  ],
  "test_private_fields": [
    [
      "tests/model_meta/tests.py",
      [
        "PrivateFieldsTests",
        "test_private_fields"
      ]
    ]
  ],
  "test_get_data_field": [
    [
      "tests/model_meta/tests.py",
      [
        "GetFieldByNameTests",
        "test_get_data_field"
      ]
    ]
  ],
  "test_get_m2m_field": [
    [
      "tests/model_meta/tests.py",
      [
        "GetFieldByNameTests",
        "test_get_m2m_field"
      ]
    ]
  ],
  "test_get_related_object": [
    [
      "tests/model_meta/tests.py",
      [
        "GetFieldByNameTests",
        "test_get_related_object"
      ]
    ]
  ],
  "test_get_related_m2m": [
    [
      "tests/model_meta/tests.py",
      [
        "GetFieldByNameTests",
        "test_get_related_m2m"
      ]
    ]
  ],
  "test_get_generic_relation": [
    [
      "tests/model_meta/tests.py",
      [
        "GetFieldByNameTests",
        "test_get_generic_relation"
      ]
    ]
  ],
  "test_get_fields_only_searches_forward_on_apps_not_ready": [
    [
      "tests/model_meta/tests.py",
      [
        "GetFieldByNameTests",
        "test_get_fields_only_searches_forward_on_apps_not_ready"
      ]
    ]
  ],
  "test_clear_cache_clears_relation_tree": [
    [
      "tests/model_meta/tests.py",
      [
        "RelationTreeTests",
        "test_clear_cache_clears_relation_tree"
      ]
    ]
  ],
  "test_first_relation_tree_access_populates_all": [
    [
      "tests/model_meta/tests.py",
      [
        "RelationTreeTests",
        "test_first_relation_tree_access_populates_all"
      ]
    ]
  ],
  "test_relations_related_objects": [
    [
      "tests/model_meta/tests.py",
      [
        "RelationTreeTests",
        "test_relations_related_objects"
      ]
    ]
  ],
  "test_get_parent_list": [
    [
      "tests/model_meta/tests.py",
      [
        "ParentListTests",
        "test_get_parent_list"
      ]
    ]
  ],
  "test_person": [
    [
      "tests/model_meta/tests.py",
      [
        "PropertyNamesTests",
        "test_person"
      ]
    ]
  ],
  "test_no_default_related_name": [
    [
      "tests/model_options/test_default_related_name.py",
      [
        "DefaultRelatedNameTests",
        "test_no_default_related_name"
      ]
    ]
  ],
  "test_default_related_name": [
    [
      "tests/model_options/test_default_related_name.py",
      [
        "DefaultRelatedNameTests",
        "test_default_related_name"
      ]
    ]
  ],
  "test_default_related_name_in_queryset_lookup": [
    [
      "tests/model_options/test_default_related_name.py",
      [
        "DefaultRelatedNameTests",
        "test_default_related_name_in_queryset_lookup"
      ]
    ]
  ],
  "test_model_name_not_available_in_queryset_lookup": [
    [
      "tests/model_options/test_default_related_name.py",
      [
        "DefaultRelatedNameTests",
        "test_model_name_not_available_in_queryset_lookup"
      ]
    ]
  ],
  "test_related_name_overrides_default_related_name": [
    [
      "tests/model_options/test_default_related_name.py",
      [
        "DefaultRelatedNameTests",
        "test_related_name_overrides_default_related_name"
      ]
    ]
  ],
  "test_inheritance_with_overridden_default_related_name": [
    [
      "tests/model_options/test_default_related_name.py",
      [
        "DefaultRelatedNameTests",
        "test_inheritance_with_overridden_default_related_name"
      ]
    ]
  ],
  "sql_for_table": [
    [
      "tests/model_options/test_tablespaces.py",
      [
        "sql_for_table"
      ]
    ]
  ],
  "sql_for_index": [
    [
      "tests/model_options/test_tablespaces.py",
      [
        "sql_for_index"
      ]
    ]
  ],
  "assertNumContains": [
    [
      "tests/model_options/test_tablespaces.py",
      [
        "TablespacesTests",
        "assertNumContains"
      ]
    ]
  ],
  "test_tablespace_for_model": [
    [
      "tests/model_options/test_tablespaces.py",
      [
        "TablespacesTests",
        "test_tablespace_for_model"
      ]
    ]
  ],
  "test_tablespace_ignored_for_model": [
    [
      "tests/model_options/test_tablespaces.py",
      [
        "TablespacesTests",
        "test_tablespace_ignored_for_model"
      ]
    ]
  ],
  "test_tablespace_for_indexed_field": [
    [
      "tests/model_options/test_tablespaces.py",
      [
        "TablespacesTests",
        "test_tablespace_for_indexed_field"
      ]
    ]
  ],
  "test_tablespace_ignored_for_indexed_field": [
    [
      "tests/model_options/test_tablespaces.py",
      [
        "TablespacesTests",
        "test_tablespace_ignored_for_indexed_field"
      ]
    ]
  ],
  "test_tablespace_for_many_to_many_field": [
    [
      "tests/model_options/test_tablespaces.py",
      [
        "TablespacesTests",
        "test_tablespace_for_many_to_many_field"
      ]
    ]
  ],
  "test_m2m_tables_in_subpackage_models": [
    [
      "tests/model_package/tests.py",
      [
        "ModelPackageTests",
        "test_m2m_tables_in_subpackage_models"
      ]
    ]
  ],
  "test_models_in_the_test_package": [
    [
      "tests/model_package/tests.py",
      [
        "ModelPackageTests",
        "test_models_in_the_test_package"
      ]
    ]
  ],
  "test_automatic_m2m_column_names": [
    [
      "tests/model_package/tests.py",
      [
        "ModelPackageTests",
        "test_automatic_m2m_column_names"
      ]
    ]
  ],
  "test_missing_django_version_unpickling": [
    [
      "tests/model_regress/test_pickle.py",
      [
        "ModelPickleTests",
        "test_missing_django_version_unpickling"
      ]
    ],
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_missing_django_version_unpickling"
      ]
    ]
  ],
  "test_unsupported_unpickle": [
    [
      "tests/model_regress/test_pickle.py",
      [
        "ModelPickleTests",
        "test_unsupported_unpickle"
      ]
    ],
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_unsupported_unpickle"
      ]
    ]
  ],
  "test_with_getstate": [
    [
      "tests/model_regress/test_pickle.py",
      [
        "ModelPickleTests",
        "test_with_getstate"
      ]
    ]
  ],
  "test_fields_cache_descriptor": [
    [
      "tests/model_regress/test_state.py",
      [
        "ModelStateTests",
        "test_fields_cache_descriptor"
      ]
    ]
  ],
  "test_model_init_too_many_args": [
    [
      "tests/model_regress/tests.py",
      [
        "ModelTests",
        "test_model_init_too_many_args"
      ]
    ]
  ],
  "test_related_gte_lookup": [
    [
      "tests/model_regress/tests.py",
      [
        "ModelTests",
        "test_related_gte_lookup"
      ]
    ]
  ],
  "test_related_lte_lookup": [
    [
      "tests/model_regress/tests.py",
      [
        "ModelTests",
        "test_related_lte_lookup"
      ]
    ]
  ],
  "test_sql_insert_compiler_return_id_attribute": [
    [
      "tests/model_regress/tests.py",
      [
        "ModelTests",
        "test_sql_insert_compiler_return_id_attribute"
      ]
    ]
  ],
  "test_empty_choice": [
    [
      "tests/model_regress/tests.py",
      [
        "ModelTests",
        "test_empty_choice"
      ]
    ]
  ],
  "test_long_textfield": [
    [
      "tests/model_regress/tests.py",
      [
        "ModelTests",
        "test_long_textfield"
      ]
    ]
  ],
  "test_long_unicode_textfield": [
    [
      "tests/model_regress/tests.py",
      [
        "ModelTests",
        "test_long_unicode_textfield"
      ]
    ]
  ],
  "test_date_lookup": [
    [
      "tests/model_regress/tests.py",
      [
        "ModelTests",
        "test_date_lookup"
      ]
    ]
  ],
  "test_date_filter_null": [
    [
      "tests/model_regress/tests.py",
      [
        "ModelTests",
        "test_date_filter_null"
      ]
    ]
  ],
  "test_get_next_prev_by_field": [
    [
      "tests/model_regress/tests.py",
      [
        "ModelTests",
        "test_get_next_prev_by_field"
      ]
    ]
  ],
  "test_get_next_prev_by_field_unsaved": [
    [
      "tests/model_regress/tests.py",
      [
        "ModelTests",
        "test_get_next_prev_by_field_unsaved"
      ]
    ]
  ],
  "test_primary_key_foreign_key_types": [
    [
      "tests/model_regress/tests.py",
      [
        "ModelTests",
        "test_primary_key_foreign_key_types"
      ]
    ]
  ],
  "test_timezones": [
    [
      "tests/model_regress/tests.py",
      [
        "ModelTests",
        "test_timezones"
      ]
    ],
    [
      "tests/utils_tests/test_dateformat.py",
      [
        "DateFormatTests",
        "test_timezones"
      ]
    ]
  ],
  "test_chained_fks": [
    [
      "tests/model_regress/tests.py",
      [
        "ModelTests",
        "test_chained_fks"
      ]
    ]
  ],
  "test_metaclass_can_access_attribute_dict": [
    [
      "tests/model_regress/tests.py",
      [
        "ModelTests",
        "test_metaclass_can_access_attribute_dict"
      ]
    ]
  ],
  "test_pk_validation": [
    [
      "tests/model_regress/tests.py",
      [
        "ModelValidationTest",
        "test_pk_validation"
      ]
    ]
  ],
  "test_model_with_evaluate_method": [
    [
      "tests/model_regress/tests.py",
      [
        "EvaluateMethodTest",
        "test_model_with_evaluate_method"
      ]
    ]
  ],
  "decade_published_in": [
    [
      "tests/modeladmin/models.py",
      [
        "ValidationTestModel",
        "decade_published_in"
      ]
    ]
  ],
  "custom_action": [
    [
      "tests/modeladmin/test_actions.py",
      [
        "AdminActionsTests",
        "test_get_actions_respects_permissions",
        "BandAdmin",
        "custom_action"
      ]
    ]
  ],
  "has_custom_permission": [
    [
      "tests/modeladmin/test_actions.py",
      [
        "AdminActionsTests",
        "test_get_actions_respects_permissions",
        "BandAdmin",
        "has_custom_permission"
      ]
    ]
  ],
  "test_get_actions_respects_permissions": [
    [
      "tests/modeladmin/test_actions.py",
      [
        "AdminActionsTests",
        "test_get_actions_respects_permissions"
      ]
    ]
  ],
  "test_actions_inheritance": [
    [
      "tests/modeladmin/test_actions.py",
      [
        "AdminActionsTests",
        "test_actions_inheritance"
      ]
    ]
  ],
  "global_action_1": [
    [
      "tests/modeladmin/test_actions.py",
      [
        "AdminActionsTests",
        "test_actions_replace_global_action",
        "global_action_1"
      ]
    ]
  ],
  "global_action_2": [
    [
      "tests/modeladmin/test_actions.py",
      [
        "AdminActionsTests",
        "test_actions_replace_global_action",
        "global_action_2"
      ]
    ]
  ],
  "custom_action_1": [
    [
      "tests/modeladmin/test_actions.py",
      [
        "AdminActionsTests",
        "test_actions_replace_global_action",
        "custom_action_1"
      ]
    ]
  ],
  "custom_action_2": [
    [
      "tests/modeladmin/test_actions.py",
      [
        "AdminActionsTests",
        "test_actions_replace_global_action",
        "BandAdmin",
        "custom_action_2"
      ]
    ]
  ],
  "test_actions_replace_global_action": [
    [
      "tests/modeladmin/test_actions.py",
      [
        "AdminActionsTests",
        "test_actions_replace_global_action"
      ]
    ]
  ],
  "assertIsInvalid": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "CheckTestCase",
        "assertIsInvalid"
      ]
    ]
  ],
  "assertIsInvalidRegexp": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "CheckTestCase",
        "assertIsInvalidRegexp"
      ]
    ]
  ],
  "assertIsValid": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "CheckTestCase",
        "assertIsValid"
      ]
    ]
  ],
  "test_not_iterable": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "RawIdCheckTests",
        "test_not_iterable"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "FieldsetsCheckTests",
        "test_not_iterable"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "FilterVerticalCheckTests",
        "test_not_iterable"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "FilterHorizontalCheckTests",
        "test_not_iterable"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListDisplayTests",
        "test_not_iterable"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListDisplayLinksCheckTests",
        "test_not_iterable"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "SearchFieldsCheckTests",
        "test_not_iterable"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "OrderingCheckTests",
        "test_not_iterable"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "InlinesCheckTests",
        "test_not_iterable"
      ]
    ]
  ],
  "test_missing_field": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "RawIdCheckTests",
        "test_missing_field"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "FilterVerticalCheckTests",
        "test_missing_field"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "FilterHorizontalCheckTests",
        "test_missing_field"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "RadioFieldsCheckTests",
        "test_missing_field"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "PrepopulatedFieldsCheckTests",
        "test_missing_field"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListDisplayTests",
        "test_missing_field"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListDisplayLinksCheckTests",
        "test_missing_field"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListFilterTests",
        "test_missing_field"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "DateHierarchyCheckTests",
        "test_missing_field"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "FkNameCheckTests",
        "test_missing_field"
      ]
    ]
  ],
  "test_invalid_field_type": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "RawIdCheckTests",
        "test_invalid_field_type"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "FilterVerticalCheckTests",
        "test_invalid_field_type"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "FilterHorizontalCheckTests",
        "test_invalid_field_type"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "RadioFieldsCheckTests",
        "test_invalid_field_type"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "PrepopulatedFieldsCheckTests",
        "test_invalid_field_type"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListDisplayTests",
        "test_invalid_field_type"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "DateHierarchyCheckTests",
        "test_invalid_field_type"
      ]
    ],
    [
      "tests/sites_framework/tests.py",
      [
        "CurrentSiteManagerChecksTests",
        "test_invalid_field_type"
      ]
    ]
  ],
  "test_non_iterable_item": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "FieldsetsCheckTests",
        "test_non_iterable_item"
      ]
    ]
  ],
  "test_item_not_a_pair": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "FieldsetsCheckTests",
        "test_item_not_a_pair"
      ]
    ]
  ],
  "test_second_element_of_item_not_a_dict": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "FieldsetsCheckTests",
        "test_second_element_of_item_not_a_dict"
      ]
    ]
  ],
  "test_missing_fields_key": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "FieldsetsCheckTests",
        "test_missing_fields_key"
      ]
    ]
  ],
  "test_specified_both_fields_and_fieldsets": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "FieldsetsCheckTests",
        "test_specified_both_fields_and_fieldsets"
      ]
    ]
  ],
  "test_duplicate_fields": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "FieldsetsCheckTests",
        "test_duplicate_fields"
      ]
    ]
  ],
  "test_duplicate_fields_in_fieldsets": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "FieldsetsCheckTests",
        "test_duplicate_fields_in_fieldsets"
      ]
    ]
  ],
  "test_fieldsets_with_custom_form_validation": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "FieldsetsCheckTests",
        "test_fieldsets_with_custom_form_validation"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "FormCheckTests",
        "test_fieldsets_with_custom_form_validation"
      ]
    ]
  ],
  "test_duplicate_fields_in_fields": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "FieldsCheckTests",
        "test_duplicate_fields_in_fields"
      ]
    ]
  ],
  "test_invalid_type": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "FormCheckTests",
        "test_invalid_type"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListSelectRelatedCheckTests",
        "test_invalid_type"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "FormsetCheckTests",
        "test_invalid_type"
      ]
    ]
  ],
  "test_not_dictionary": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "RadioFieldsCheckTests",
        "test_not_dictionary"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "PrepopulatedFieldsCheckTests",
        "test_not_dictionary"
      ]
    ]
  ],
  "test_not_list_or_tuple": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "PrepopulatedFieldsCheckTests",
        "test_not_list_or_tuple"
      ]
    ]
  ],
  "test_missing_field_again": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "PrepopulatedFieldsCheckTests",
        "test_missing_field_again"
      ]
    ]
  ],
  "test_one_to_one_field": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "PrepopulatedFieldsCheckTests",
        "test_one_to_one_field"
      ]
    ]
  ],
  "test_valid_field_accessible_via_instance": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListDisplayTests",
        "test_valid_field_accessible_via_instance"
      ]
    ]
  ],
  "test_missing_in_list_display": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListDisplayLinksCheckTests",
        "test_missing_in_list_display"
      ]
    ]
  ],
  "test_None_is_valid_case": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListDisplayLinksCheckTests",
        "test_None_is_valid_case"
      ]
    ]
  ],
  "test_list_display_links_check_skipped_if_get_list_display_overridden": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListDisplayLinksCheckTests",
        "test_list_display_links_check_skipped_if_get_list_display_overridden"
      ]
    ]
  ],
  "test_list_display_link_checked_for_list_tuple_if_get_list_display_overridden": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListDisplayLinksCheckTests",
        "test_list_display_link_checked_for_list_tuple_if_get_list_display_overridden"
      ]
    ]
  ],
  "test_list_filter_validation": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListFilterTests",
        "test_list_filter_validation"
      ]
    ]
  ],
  "test_not_list_filter_class": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListFilterTests",
        "test_not_list_filter_class"
      ]
    ]
  ],
  "test_not_callable": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListFilterTests",
        "test_not_callable"
      ]
    ],
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ViewLoadingTests",
        "test_not_callable"
      ]
    ]
  ],
  "test_not_filter": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListFilterTests",
        "test_not_filter"
      ]
    ]
  ],
  "test_not_filter_again": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListFilterTests",
        "test_not_filter_again"
      ]
    ]
  ],
  "test_not_filter_again_again": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListFilterTests",
        "test_not_filter_again_again"
      ]
    ]
  ],
  "test_list_filter_is_func": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListFilterTests",
        "test_list_filter_is_func"
      ]
    ]
  ],
  "test_not_associated_with_field_name": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListFilterTests",
        "test_not_associated_with_field_name"
      ]
    ]
  ],
  "test_not_integer": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListPerPageCheckTests",
        "test_not_integer"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListMaxShowAllCheckTests",
        "test_not_integer"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "ExtraCheckTests",
        "test_not_integer"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "MaxNumCheckTests",
        "test_not_integer"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "MinNumCheckTests",
        "test_not_integer"
      ]
    ]
  ],
  "test_related_valid_case": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "DateHierarchyCheckTests",
        "test_related_valid_case"
      ]
    ]
  ],
  "test_related_invalid_field_type": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "DateHierarchyCheckTests",
        "test_related_invalid_field_type"
      ]
    ]
  ],
  "test_random_marker_not_alone": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "OrderingCheckTests",
        "test_random_marker_not_alone"
      ]
    ]
  ],
  "test_valid_random_marker_case": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "OrderingCheckTests",
        "test_valid_random_marker_case"
      ]
    ]
  ],
  "test_valid_complex_case": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "OrderingCheckTests",
        "test_valid_complex_case"
      ]
    ]
  ],
  "test_invalid_expression": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "OrderingCheckTests",
        "test_invalid_expression"
      ]
    ]
  ],
  "test_valid_expression": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "OrderingCheckTests",
        "test_valid_expression"
      ]
    ]
  ],
  "test_not_boolean": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "SaveAsCheckTests",
        "test_not_boolean"
      ]
    ],
    [
      "tests/modeladmin/test_checks.py",
      [
        "SaveOnTopCheckTests",
        "test_not_boolean"
      ]
    ]
  ],
  "test_not_correct_inline_field": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "InlinesCheckTests",
        "test_not_correct_inline_field"
      ]
    ]
  ],
  "test_not_model_admin": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "InlinesCheckTests",
        "test_not_model_admin"
      ]
    ]
  ],
  "test_missing_model_field": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "InlinesCheckTests",
        "test_missing_model_field"
      ]
    ]
  ],
  "test_invalid_model_type": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "InlinesCheckTests",
        "test_invalid_model_type"
      ]
    ]
  ],
  "test_invalid_model": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "InlinesCheckTests",
        "test_invalid_model"
      ]
    ]
  ],
  "test_invalid_callable": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "InlinesCheckTests",
        "test_invalid_callable"
      ]
    ]
  ],
  "test_inline_without_formset_class": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "FormsetCheckTests",
        "test_inline_without_formset_class"
      ]
    ]
  ],
  "test_list_display_links_is_none": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListDisplayEditableTests",
        "test_list_display_links_is_none"
      ]
    ]
  ],
  "test_list_display_first_item_same_as_list_editable_first_item": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListDisplayEditableTests",
        "test_list_display_first_item_same_as_list_editable_first_item"
      ]
    ]
  ],
  "test_list_display_first_item_in_list_editable": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListDisplayEditableTests",
        "test_list_display_first_item_in_list_editable"
      ]
    ]
  ],
  "test_list_display_first_item_same_as_list_editable_no_list_display_links": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListDisplayEditableTests",
        "test_list_display_first_item_same_as_list_editable_no_list_display_links"
      ]
    ]
  ],
  "test_list_display_first_item_in_list_editable_no_list_display_links": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListDisplayEditableTests",
        "test_list_display_first_item_in_list_editable_no_list_display_links"
      ]
    ]
  ],
  "test_both_list_editable_and_list_display_links": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ListDisplayEditableTests",
        "test_both_list_editable_and_list_display_links"
      ]
    ]
  ],
  "test_autocomplete_e036": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "AutocompleteFieldsTests",
        "test_autocomplete_e036"
      ]
    ]
  ],
  "test_autocomplete_e037": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "AutocompleteFieldsTests",
        "test_autocomplete_e037"
      ]
    ]
  ],
  "test_autocomplete_e38": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "AutocompleteFieldsTests",
        "test_autocomplete_e38"
      ]
    ]
  ],
  "test_autocomplete_e039": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "AutocompleteFieldsTests",
        "test_autocomplete_e039"
      ]
    ]
  ],
  "test_autocomplete_e040": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "AutocompleteFieldsTests",
        "test_autocomplete_e040"
      ]
    ]
  ],
  "test_autocomplete_is_valid": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "AutocompleteFieldsTests",
        "test_autocomplete_is_valid"
      ]
    ]
  ],
  "test_autocomplete_is_onetoone": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "AutocompleteFieldsTests",
        "test_autocomplete_is_onetoone"
      ]
    ]
  ],
  "test_custom_permissions_require_matching_has_method": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ActionsCheckTests",
        "test_custom_permissions_require_matching_has_method"
      ]
    ]
  ],
  "test_actions_not_unique": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ActionsCheckTests",
        "test_actions_not_unique"
      ]
    ]
  ],
  "test_actions_unique": [
    [
      "tests/modeladmin/test_checks.py",
      [
        "ActionsCheckTests",
        "test_actions_unique"
      ]
    ]
  ],
  "test_modeladmin_str": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_modeladmin_str"
      ]
    ]
  ],
  "test_default_fields": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_default_fields"
      ]
    ]
  ],
  "test_default_fieldsets": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_default_fieldsets"
      ]
    ]
  ],
  "test_lookup_allowed_allows_nonexistent_lookup": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_lookup_allowed_allows_nonexistent_lookup"
      ]
    ]
  ],
  "test_lookup_allowed_onetoone": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_lookup_allowed_onetoone"
      ]
    ]
  ],
  "test_field_arguments": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_field_arguments"
      ]
    ]
  ],
  "test_field_arguments_restricted_on_form": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_field_arguments_restricted_on_form"
      ]
    ]
  ],
  "test_custom_formfield_override_readonly": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_custom_formfield_override_readonly"
      ]
    ]
  ],
  "test_overriding_get_exclude": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_overriding_get_exclude"
      ]
    ]
  ],
  "test_get_exclude_overrides_exclude": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_get_exclude_overrides_exclude"
      ]
    ]
  ],
  "test_get_exclude_takes_obj": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_get_exclude_takes_obj"
      ]
    ]
  ],
  "test_custom_form_validation": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_custom_form_validation"
      ]
    ]
  ],
  "test_form_exclude_kwarg_override": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_form_exclude_kwarg_override"
      ]
    ]
  ],
  "test_formset_exclude_kwarg_override": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_formset_exclude_kwarg_override"
      ]
    ]
  ],
  "test_formset_overriding_get_exclude_with_form_fields": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_formset_overriding_get_exclude_with_form_fields"
      ]
    ]
  ],
  "test_formset_overriding_get_exclude_with_form_exclude": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_formset_overriding_get_exclude_with_form_exclude"
      ]
    ]
  ],
  "test_raw_id_fields_widget_override": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_raw_id_fields_widget_override"
      ]
    ]
  ],
  "test_queryset_override": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_queryset_override"
      ]
    ]
  ],
  "test_regression_for_ticket_15820": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_regression_for_ticket_15820"
      ]
    ]
  ],
  "test_default_foreign_key_widget": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_default_foreign_key_widget"
      ]
    ]
  ],
  "test_foreign_key_as_radio_field": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_foreign_key_as_radio_field"
      ]
    ]
  ],
  "test_log_actions": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_log_actions"
      ]
    ]
  ],
  "test_get_autocomplete_fields": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_get_autocomplete_fields"
      ]
    ]
  ],
  "test_get_deleted_objects": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_get_deleted_objects"
      ]
    ]
  ],
  "test_get_deleted_objects_with_custom_has_delete_permission": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminTests",
        "test_get_deleted_objects_with_custom_has_delete_permission"
      ]
    ]
  ],
  "test_has_view_permission": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminPermissionTests",
        "test_has_view_permission"
      ]
    ]
  ],
  "test_has_add_permission": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminPermissionTests",
        "test_has_add_permission"
      ]
    ]
  ],
  "test_inline_has_add_permission_uses_obj": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminPermissionTests",
        "test_inline_has_add_permission_uses_obj"
      ]
    ]
  ],
  "test_has_change_permission": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminPermissionTests",
        "test_has_change_permission"
      ]
    ]
  ],
  "test_has_delete_permission": [
    [
      "tests/modeladmin/tests.py",
      [
        "ModelAdminPermissionTests",
        "test_has_delete_permission"
      ]
    ]
  ],
  "test_db_selection": [
    [
      "tests/multiple_database/tests.py",
      [
        "QueryTestCase",
        "test_db_selection"
      ]
    ],
    [
      "tests/multiple_database/tests.py",
      [
        "RouterTestCase",
        "test_db_selection"
      ]
    ]
  ],
  "test_default_creation": [
    [
      "tests/multiple_database/tests.py",
      [
        "QueryTestCase",
        "test_default_creation"
      ]
    ]
  ],
  "test_other_creation": [
    [
      "tests/multiple_database/tests.py",
      [
        "QueryTestCase",
        "test_other_creation"
      ]
    ]
  ],
  "test_refresh_router_instance_hint": [
    [
      "tests/multiple_database/tests.py",
      [
        "QueryTestCase",
        "test_refresh_router_instance_hint"
      ]
    ]
  ],
  "test_basic_queries": [
    [
      "tests/multiple_database/tests.py",
      [
        "QueryTestCase",
        "test_basic_queries"
      ]
    ]
  ],
  "test_m2m_separation": [
    [
      "tests/multiple_database/tests.py",
      [
        "QueryTestCase",
        "test_m2m_separation"
      ]
    ]
  ],
  "test_m2m_forward_operations": [
    [
      "tests/multiple_database/tests.py",
      [
        "QueryTestCase",
        "test_m2m_forward_operations"
      ]
    ]
  ],
  "test_m2m_reverse_operations": [
    [
      "tests/multiple_database/tests.py",
      [
        "QueryTestCase",
        "test_m2m_reverse_operations"
      ]
    ]
  ],
  "test_m2m_cross_database_protection": [
    [
      "tests/multiple_database/tests.py",
      [
        "QueryTestCase",
        "test_m2m_cross_database_protection"
      ]
    ],
    [
      "tests/multiple_database/tests.py",
      [
        "RouterTestCase",
        "test_m2m_cross_database_protection"
      ]
    ]
  ],
  "test_m2m_deletion": [
    [
      "tests/multiple_database/tests.py",
      [
        "QueryTestCase",
        "test_m2m_deletion"
      ]
    ]
  ],
  "test_foreign_key_separation": [
    [
      "tests/multiple_database/tests.py",
      [
        "QueryTestCase",
        "test_foreign_key_separation"
      ]
    ]
  ],
  "test_foreign_key_reverse_operations": [
    [
      "tests/multiple_database/tests.py",
      [
        "QueryTestCase",
        "test_foreign_key_reverse_operations"
      ]
    ]
  ],
  "test_foreign_key_cross_database_protection": [
    [
      "tests/multiple_database/tests.py",
      [
        "QueryTestCase",
        "test_foreign_key_cross_database_protection"
      ]
    ],
    [
      "tests/multiple_database/tests.py",
      [
        "RouterTestCase",
        "test_foreign_key_cross_database_protection"
      ]
    ]
  ],
  "test_foreign_key_deletion": [
    [
      "tests/multiple_database/tests.py",
      [
        "QueryTestCase",
        "test_foreign_key_deletion"
      ]
    ]
  ],
  "test_foreign_key_validation": [
    [
      "tests/multiple_database/tests.py",
      [
        "QueryTestCase",
        "test_foreign_key_validation"
      ]
    ]
  ],
  "test_foreign_key_validation_with_router": [
    [
      "tests/multiple_database/tests.py",
      [
        "QueryTestCase",
        "test_foreign_key_validation_with_router"
      ]
    ]
  ],
  "test_o2o_separation": [
    [
      "tests/multiple_database/tests.py",
      [
        "QueryTestCase",
        "test_o2o_separation"
      ]
    ]
  ],
  "test_o2o_cross_database_protection": [
    [
      "tests/multiple_database/tests.py",
      [
        "QueryTestCase",
        "test_o2o_cross_database_protection"
      ]
    ],
    [
      "tests/multiple_database/tests.py",
      [
        "RouterTestCase",
        "test_o2o_cross_database_protection"
      ]
    ]
  ],
  "test_generic_key_separation": [
    [
      "tests/multiple_database/tests.py",
      [
        "QueryTestCase",
        "test_generic_key_separation"
      ]
    ]
  ],
  "test_generic_key_reverse_operations": [
    [
      "tests/multiple_database/tests.py",
      [
        "QueryTestCase",
        "test_generic_key_reverse_operations"
      ]
    ]
  ],
  "test_generic_key_cross_database_protection": [
    [
      "tests/multiple_database/tests.py",
      [
        "QueryTestCase",
        "test_generic_key_cross_database_protection"
      ]
    ],
    [
      "tests/multiple_database/tests.py",
      [
        "RouterTestCase",
        "test_generic_key_cross_database_protection"
      ]
    ]
  ],
  "test_generic_key_deletion": [
    [
      "tests/multiple_database/tests.py",
      [
        "QueryTestCase",
        "test_generic_key_deletion"
      ]
    ]
  ],
  "test_raw": [
    [
      "tests/multiple_database/tests.py",
      [
        "QueryTestCase",
        "test_raw"
      ]
    ]
  ],
  "test_router_init_default": [
    [
      "tests/multiple_database/tests.py",
      [
        "ConnectionRouterTestCase",
        "test_router_init_default"
      ]
    ]
  ],
  "test_router_init_arg": [
    [
      "tests/multiple_database/tests.py",
      [
        "ConnectionRouterTestCase",
        "test_router_init_arg"
      ]
    ]
  ],
  "test_migrate_selection": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouterTestCase",
        "test_migrate_selection"
      ]
    ]
  ],
  "test_partial_router": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouterTestCase",
        "test_partial_router"
      ]
    ]
  ],
  "test_database_routing": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouterTestCase",
        "test_database_routing"
      ]
    ]
  ],
  "test_invalid_set_foreign_key_assignment": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouterTestCase",
        "test_invalid_set_foreign_key_assignment"
      ]
    ]
  ],
  "test_m2m_managers": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouterTestCase",
        "test_m2m_managers"
      ]
    ]
  ],
  "test_foreign_key_managers": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouterTestCase",
        "test_foreign_key_managers"
      ]
    ]
  ],
  "test_generic_key_managers": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouterTestCase",
        "test_generic_key_managers"
      ]
    ]
  ],
  "test_deferred_models": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouterTestCase",
        "test_deferred_models"
      ]
    ]
  ],
  "test_auth_manager": [
    [
      "tests/multiple_database/tests.py",
      [
        "AuthTestCase",
        "test_auth_manager"
      ]
    ]
  ],
  "test_dumpdata": [
    [
      "tests/multiple_database/tests.py",
      [
        "AuthTestCase",
        "test_dumpdata"
      ]
    ]
  ],
  "test_fixture_loading": [
    [
      "tests/multiple_database/tests.py",
      [
        "FixtureTestCase",
        "test_fixture_loading"
      ]
    ]
  ],
  "test_pseudo_empty_fixtures": [
    [
      "tests/multiple_database/tests.py",
      [
        "FixtureTestCase",
        "test_pseudo_empty_fixtures"
      ]
    ]
  ],
  "test_pickling": [
    [
      "tests/multiple_database/tests.py",
      [
        "PickleQuerySetTestCase",
        "test_pickling"
      ]
    ],
    [
      "tests/template_tests/test_response.py",
      [
        "SimpleTemplateResponseTest",
        "test_pickling"
      ]
    ],
    [
      "tests/template_tests/test_response.py",
      [
        "TemplateResponseTest",
        "test_pickling"
      ]
    ]
  ],
  "override_router": [
    [
      "tests/multiple_database/tests.py",
      [
        "SignalTests",
        "override_router"
      ]
    ],
    [
      "tests/multiple_database/tests.py",
      [
        "RouterAttributeErrorTestCase",
        "override_router"
      ]
    ],
    [
      "tests/multiple_database/tests.py",
      [
        "RouteForWriteTestCase",
        "override_router"
      ]
    ]
  ],
  "test_database_arg_save_and_delete": [
    [
      "tests/multiple_database/tests.py",
      [
        "SignalTests",
        "test_database_arg_save_and_delete"
      ]
    ]
  ],
  "test_database_arg_m2m": [
    [
      "tests/multiple_database/tests.py",
      [
        "SignalTests",
        "test_database_arg_m2m"
      ]
    ]
  ],
  "test_attribute_error_read": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouterAttributeErrorTestCase",
        "test_attribute_error_read"
      ]
    ]
  ],
  "test_attribute_error_save": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouterAttributeErrorTestCase",
        "test_attribute_error_save"
      ]
    ]
  ],
  "test_attribute_error_delete": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouterAttributeErrorTestCase",
        "test_attribute_error_delete"
      ]
    ]
  ],
  "test_attribute_error_m2m": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouterAttributeErrorTestCase",
        "test_attribute_error_m2m"
      ]
    ]
  ],
  "test_m2m_collection": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouterModelArgumentTestCase",
        "test_m2m_collection"
      ]
    ]
  ],
  "test_foreignkey_collection": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouterModelArgumentTestCase",
        "test_foreignkey_collection"
      ]
    ]
  ],
  "test_migrate_to_other_database": [
    [
      "tests/multiple_database/tests.py",
      [
        "MigrateTestCase",
        "test_migrate_to_other_database"
      ]
    ]
  ],
  "test_migrate_to_other_database_with_router": [
    [
      "tests/multiple_database/tests.py",
      [
        "MigrateTestCase",
        "test_migrate_to_other_database_with_router"
      ]
    ]
  ],
  "test_fk_delete": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouteForWriteTestCase",
        "test_fk_delete"
      ]
    ]
  ],
  "test_reverse_fk_delete": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouteForWriteTestCase",
        "test_reverse_fk_delete"
      ]
    ]
  ],
  "test_reverse_fk_get_or_create": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouteForWriteTestCase",
        "test_reverse_fk_get_or_create"
      ]
    ]
  ],
  "test_reverse_fk_update": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouteForWriteTestCase",
        "test_reverse_fk_update"
      ]
    ]
  ],
  "test_m2m_add": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouteForWriteTestCase",
        "test_m2m_add"
      ]
    ]
  ],
  "test_m2m_clear": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouteForWriteTestCase",
        "test_m2m_clear"
      ]
    ]
  ],
  "test_m2m_delete": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouteForWriteTestCase",
        "test_m2m_delete"
      ]
    ]
  ],
  "test_m2m_get_or_create": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouteForWriteTestCase",
        "test_m2m_get_or_create"
      ]
    ]
  ],
  "test_m2m_remove": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouteForWriteTestCase",
        "test_m2m_remove"
      ]
    ]
  ],
  "test_m2m_update": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouteForWriteTestCase",
        "test_m2m_update"
      ]
    ]
  ],
  "test_reverse_m2m_add": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouteForWriteTestCase",
        "test_reverse_m2m_add"
      ]
    ]
  ],
  "test_reverse_m2m_clear": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouteForWriteTestCase",
        "test_reverse_m2m_clear"
      ]
    ]
  ],
  "test_reverse_m2m_delete": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouteForWriteTestCase",
        "test_reverse_m2m_delete"
      ]
    ]
  ],
  "test_reverse_m2m_get_or_create": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouteForWriteTestCase",
        "test_reverse_m2m_get_or_create"
      ]
    ]
  ],
  "test_reverse_m2m_remove": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouteForWriteTestCase",
        "test_reverse_m2m_remove"
      ]
    ]
  ],
  "test_reverse_m2m_update": [
    [
      "tests/multiple_database/tests.py",
      [
        "RouteForWriteTestCase",
        "test_reverse_m2m_update"
      ]
    ]
  ],
  "test_foreign_key_relation": [
    [
      "tests/multiple_database/tests.py",
      [
        "RelationAssignmentTests",
        "test_foreign_key_relation"
      ]
    ]
  ],
  "test_reverse_one_to_one_relation": [
    [
      "tests/multiple_database/tests.py",
      [
        "RelationAssignmentTests",
        "test_reverse_one_to_one_relation"
      ]
    ]
  ],
  "test_mutually_referential": [
    [
      "tests/mutually_referential/tests.py",
      [
        "MutuallyReferentialTests",
        "test_mutually_referential"
      ]
    ]
  ],
  "test_inheritance_null_FK": [
    [
      "tests/nested_foreign_keys/tests.py",
      [
        "NestedForeignKeysTests",
        "test_inheritance_null_FK"
      ]
    ]
  ],
  "test_null_exclude": [
    [
      "tests/nested_foreign_keys/tests.py",
      [
        "NestedForeignKeysTests",
        "test_null_exclude"
      ]
    ]
  ],
  "test_explicit_ForeignKey": [
    [
      "tests/nested_foreign_keys/tests.py",
      [
        "NestedForeignKeysTests",
        "test_explicit_ForeignKey"
      ]
    ],
    [
      "tests/nested_foreign_keys/tests.py",
      [
        "DeeplyNestedForeignKeysTests",
        "test_explicit_ForeignKey"
      ]
    ]
  ],
  "test_explicit_ForeignKey_NullFK": [
    [
      "tests/nested_foreign_keys/tests.py",
      [
        "NestedForeignKeysTests",
        "test_explicit_ForeignKey_NullFK"
      ]
    ]
  ],
  "test_no_models": [
    [
      "tests/no_models/tests.py",
      [
        "NoModelTests",
        "test_no_models"
      ]
    ]
  ],
  "test_null_fk": [
    [
      "tests/null_fk/tests.py",
      [
        "NullFkTests",
        "test_null_fk"
      ]
    ]
  ],
  "test_combine_isnull": [
    [
      "tests/null_fk/tests.py",
      [
        "NullFkTests",
        "test_combine_isnull"
      ]
    ]
  ],
  "test_ordering_across_null_fk": [
    [
      "tests/null_fk_ordering/tests.py",
      [
        "NullFkOrderingTests",
        "test_ordering_across_null_fk"
      ]
    ]
  ],
  "test_none_as_null": [
    [
      "tests/null_queries/tests.py",
      [
        "NullQueriesTests",
        "test_none_as_null"
      ]
    ]
  ],
  "test_reverse_relations": [
    [
      "tests/null_queries/tests.py",
      [
        "NullQueriesTests",
        "test_reverse_relations"
      ]
    ]
  ],
  "test_getter": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_getter"
      ]
    ],
    [
      "tests/properties/tests.py",
      [
        "PropertyTests",
        "test_getter"
      ]
    ]
  ],
  "test_setter": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_setter"
      ]
    ],
    [
      "tests/properties/tests.py",
      [
        "PropertyTests",
        "test_setter"
      ]
    ]
  ],
  "test_manager_all": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_manager_all"
      ]
    ]
  ],
  "assert_get_restaurant": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_manager_get",
        "assert_get_restaurant"
      ]
    ]
  ],
  "assert_get_place": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_manager_get",
        "assert_get_place"
      ]
    ]
  ],
  "test_manager_get": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_manager_get"
      ]
    ]
  ],
  "test_multiple_o2o": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_multiple_o2o"
      ]
    ]
  ],
  "test_unsaved_object": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_unsaved_object"
      ]
    ]
  ],
  "test_reverse_relationship_cache_cascade": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_reverse_relationship_cache_cascade"
      ]
    ]
  ],
  "test_create_models_m2m": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_create_models_m2m"
      ]
    ]
  ],
  "test_reverse_object_cache": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_reverse_object_cache"
      ]
    ]
  ],
  "test_assign_none_reverse_relation": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_assign_none_reverse_relation"
      ]
    ]
  ],
  "test_assign_none_null_reverse_relation": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_assign_none_null_reverse_relation"
      ]
    ]
  ],
  "test_assign_none_to_null_cached_reverse_relation": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_assign_none_to_null_cached_reverse_relation"
      ]
    ]
  ],
  "test_assign_o2o_id_value": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_assign_o2o_id_value"
      ]
    ]
  ],
  "test_assign_o2o_id_none": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_assign_o2o_id_none"
      ]
    ]
  ],
  "test_related_object_cache": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_related_object_cache"
      ]
    ]
  ],
  "test_filter_one_to_one_relations": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_filter_one_to_one_relations"
      ]
    ]
  ],
  "test_o2o_primary_key_delete": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_o2o_primary_key_delete"
      ]
    ]
  ],
  "test_save_nullable_o2o_after_parent": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_save_nullable_o2o_after_parent"
      ]
    ]
  ],
  "test_reverse_object_does_not_exist_cache": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_reverse_object_does_not_exist_cache"
      ]
    ]
  ],
  "test_reverse_object_cached_when_related_is_accessed": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_reverse_object_cached_when_related_is_accessed"
      ]
    ]
  ],
  "test_related_object_cached_when_reverse_is_accessed": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_related_object_cached_when_reverse_is_accessed"
      ]
    ]
  ],
  "test_reverse_object_cached_when_related_is_set": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_reverse_object_cached_when_related_is_set"
      ]
    ]
  ],
  "test_reverse_object_cached_when_related_is_unset": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_reverse_object_cached_when_related_is_unset"
      ]
    ]
  ],
  "test_get_reverse_on_unsaved_object": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_get_reverse_on_unsaved_object"
      ]
    ]
  ],
  "test_set_reverse_on_unsaved_object": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_set_reverse_on_unsaved_object"
      ]
    ]
  ],
  "test_nullable_o2o_delete": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_nullable_o2o_delete"
      ]
    ]
  ],
  "test_hidden_accessor": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_hidden_accessor"
      ]
    ]
  ],
  "test_update_one_to_one_pk": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_update_one_to_one_pk"
      ]
    ]
  ],
  "test_rel_pk_subquery": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_rel_pk_subquery"
      ]
    ]
  ],
  "test_rel_pk_exact": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_rel_pk_exact"
      ]
    ]
  ],
  "test_primary_key_to_field_filter": [
    [
      "tests/one_to_one/tests.py",
      [
        "OneToOneTests",
        "test_primary_key_to_field_filter"
      ]
    ]
  ],
  "test_filter_or": [
    [
      "tests/or_lookups/tests.py",
      [
        "OrLookupsTests",
        "test_filter_or"
      ]
    ]
  ],
  "test_stages": [
    [
      "tests/or_lookups/tests.py",
      [
        "OrLookupsTests",
        "test_stages"
      ]
    ]
  ],
  "test_pk_q": [
    [
      "tests/or_lookups/tests.py",
      [
        "OrLookupsTests",
        "test_pk_q"
      ]
    ]
  ],
  "test_pk_in": [
    [
      "tests/or_lookups/tests.py",
      [
        "OrLookupsTests",
        "test_pk_in"
      ]
    ]
  ],
  "test_q_repr": [
    [
      "tests/or_lookups/tests.py",
      [
        "OrLookupsTests",
        "test_q_repr"
      ]
    ]
  ],
  "test_q_negated": [
    [
      "tests/or_lookups/tests.py",
      [
        "OrLookupsTests",
        "test_q_negated"
      ]
    ]
  ],
  "test_complex_filter": [
    [
      "tests/or_lookups/tests.py",
      [
        "OrLookupsTests",
        "test_complex_filter"
      ]
    ]
  ],
  "test_empty_in": [
    [
      "tests/or_lookups/tests.py",
      [
        "OrLookupsTests",
        "test_empty_in"
      ]
    ]
  ],
  "test_q_and": [
    [
      "tests/or_lookups/tests.py",
      [
        "OrLookupsTests",
        "test_q_and"
      ]
    ]
  ],
  "test_q_exclude": [
    [
      "tests/or_lookups/tests.py",
      [
        "OrLookupsTests",
        "test_q_exclude"
      ]
    ]
  ],
  "test_other_arg_queries": [
    [
      "tests/or_lookups/tests.py",
      [
        "OrLookupsTests",
        "test_other_arg_queries"
      ]
    ]
  ],
  "test_default_to_insertion_order": [
    [
      "tests/order_with_respect_to/base_tests.py",
      [
        "BaseOrderWithRespectToTests",
        "test_default_to_insertion_order"
      ]
    ]
  ],
  "test_previous_and_next_in_order": [
    [
      "tests/order_with_respect_to/base_tests.py",
      [
        "BaseOrderWithRespectToTests",
        "test_previous_and_next_in_order"
      ]
    ]
  ],
  "test_item_ordering": [
    [
      "tests/order_with_respect_to/base_tests.py",
      [
        "BaseOrderWithRespectToTests",
        "test_item_ordering"
      ]
    ]
  ],
  "test_set_order_unrelated_object": [
    [
      "tests/order_with_respect_to/base_tests.py",
      [
        "BaseOrderWithRespectToTests",
        "test_set_order_unrelated_object"
      ]
    ]
  ],
  "test_change_ordering": [
    [
      "tests/order_with_respect_to/base_tests.py",
      [
        "BaseOrderWithRespectToTests",
        "test_change_ordering"
      ]
    ]
  ],
  "test_recursive_ordering": [
    [
      "tests/order_with_respect_to/base_tests.py",
      [
        "BaseOrderWithRespectToTests",
        "test_recursive_ordering"
      ]
    ]
  ],
  "test_delete_and_insert": [
    [
      "tests/order_with_respect_to/base_tests.py",
      [
        "BaseOrderWithRespectToTests",
        "test_delete_and_insert"
      ]
    ]
  ],
  "test_duplicate_order_field": [
    [
      "tests/order_with_respect_to/tests.py",
      [
        "OrderWithRespectToTests",
        "test_duplicate_order_field"
      ]
    ]
  ],
  "test_set_order": [
    [
      "tests/order_with_respect_to/tests.py",
      [
        "TestOrderWithRespectToOneToOnePK",
        "test_set_order"
      ]
    ]
  ],
  "test_default_ordering_override": [
    [
      "tests/ordering/tests.py",
      [
        "OrderingTests",
        "test_default_ordering_override"
      ]
    ]
  ],
  "test_order_by_override": [
    [
      "tests/ordering/tests.py",
      [
        "OrderingTests",
        "test_order_by_override"
      ]
    ]
  ],
  "test_order_by_nulls_first_and_last": [
    [
      "tests/ordering/tests.py",
      [
        "OrderingTests",
        "test_order_by_nulls_first_and_last"
      ]
    ]
  ],
  "assertQuerysetEqualReversible": [
    [
      "tests/ordering/tests.py",
      [
        "OrderingTests",
        "assertQuerysetEqualReversible"
      ]
    ]
  ],
  "test_order_by_nulls_last": [
    [
      "tests/ordering/tests.py",
      [
        "OrderingTests",
        "test_order_by_nulls_last"
      ]
    ]
  ],
  "test_order_by_nulls_first": [
    [
      "tests/ordering/tests.py",
      [
        "OrderingTests",
        "test_order_by_nulls_first"
      ]
    ]
  ],
  "test_orders_nulls_first_on_filtered_subquery": [
    [
      "tests/ordering/tests.py",
      [
        "OrderingTests",
        "test_orders_nulls_first_on_filtered_subquery"
      ]
    ]
  ],
  "test_stop_slicing": [
    [
      "tests/ordering/tests.py",
      [
        "OrderingTests",
        "test_stop_slicing"
      ]
    ]
  ],
  "test_stop_start_slicing": [
    [
      "tests/ordering/tests.py",
      [
        "OrderingTests",
        "test_stop_start_slicing"
      ]
    ]
  ],
  "test_random_ordering": [
    [
      "tests/ordering/tests.py",
      [
        "OrderingTests",
        "test_random_ordering"
      ]
    ]
  ],
  "test_reversed_ordering": [
    [
      "tests/ordering/tests.py",
      [
        "OrderingTests",
        "test_reversed_ordering"
      ]
    ]
  ],
  "test_reverse_ordering_pure": [
    [
      "tests/ordering/tests.py",
      [
        "OrderingTests",
        "test_reverse_ordering_pure"
      ]
    ]
  ],
  "test_reverse_meta_ordering_pure": [
    [
      "tests/ordering/tests.py",
      [
        "OrderingTests",
        "test_reverse_meta_ordering_pure"
      ]
    ]
  ],
  "test_no_reordering_after_slicing": [
    [
      "tests/ordering/tests.py",
      [
        "OrderingTests",
        "test_no_reordering_after_slicing"
      ]
    ]
  ],
  "test_extra_ordering": [
    [
      "tests/ordering/tests.py",
      [
        "OrderingTests",
        "test_extra_ordering"
      ]
    ]
  ],
  "test_extra_ordering_quoting": [
    [
      "tests/ordering/tests.py",
      [
        "OrderingTests",
        "test_extra_ordering_quoting"
      ]
    ]
  ],
  "test_extra_ordering_with_table_name": [
    [
      "tests/ordering/tests.py",
      [
        "OrderingTests",
        "test_extra_ordering_with_table_name"
      ]
    ]
  ],
  "test_order_by_pk": [
    [
      "tests/ordering/tests.py",
      [
        "OrderingTests",
        "test_order_by_pk"
      ]
    ]
  ],
  "test_order_by_fk_attname": [
    [
      "tests/ordering/tests.py",
      [
        "OrderingTests",
        "test_order_by_fk_attname"
      ]
    ]
  ],
  "test_order_by_f_expression": [
    [
      "tests/ordering/tests.py",
      [
        "OrderingTests",
        "test_order_by_f_expression"
      ]
    ]
  ],
  "test_order_by_f_expression_duplicates": [
    [
      "tests/ordering/tests.py",
      [
        "OrderingTests",
        "test_order_by_f_expression_duplicates"
      ]
    ]
  ],
  "test_order_by_constant_value": [
    [
      "tests/ordering/tests.py",
      [
        "OrderingTests",
        "test_order_by_constant_value"
      ]
    ]
  ],
  "test_order_by_constant_value_without_output_field": [
    [
      "tests/ordering/tests.py",
      [
        "OrderingTests",
        "test_order_by_constant_value_without_output_field"
      ]
    ]
  ],
  "test_related_ordering_duplicate_table_reference": [
    [
      "tests/ordering/tests.py",
      [
        "OrderingTests",
        "test_related_ordering_duplicate_table_reference"
      ]
    ]
  ],
  "test_default_ordering_by_f_expression": [
    [
      "tests/ordering/tests.py",
      [
        "OrderingTests",
        "test_default_ordering_by_f_expression"
      ]
    ]
  ],
  "test_order_by_ptr_field_with_default_ordering_by_expression": [
    [
      "tests/ordering/tests.py",
      [
        "OrderingTests",
        "test_order_by_ptr_field_with_default_ordering_by_expression"
      ]
    ]
  ],
  "check_paginator": [
    [
      "tests/pagination/tests.py",
      [
        "PaginationTests",
        "check_paginator"
      ]
    ]
  ],
  "check_attribute": [
    [
      "tests/pagination/tests.py",
      [
        "PaginationTests",
        "check_attribute"
      ]
    ]
  ],
  "test_paginator": [
    [
      "tests/pagination/tests.py",
      [
        "PaginationTests",
        "test_paginator"
      ]
    ]
  ],
  "test_invalid_page_number": [
    [
      "tests/pagination/tests.py",
      [
        "PaginationTests",
        "test_invalid_page_number"
      ]
    ]
  ],
  "test_float_integer_page": [
    [
      "tests/pagination/tests.py",
      [
        "PaginationTests",
        "test_float_integer_page"
      ]
    ]
  ],
  "test_no_content_allow_empty_first_page": [
    [
      "tests/pagination/tests.py",
      [
        "PaginationTests",
        "test_no_content_allow_empty_first_page"
      ]
    ]
  ],
  "test_paginate_misc_classes": [
    [
      "tests/pagination/tests.py",
      [
        "PaginationTests",
        "test_paginate_misc_classes"
      ]
    ]
  ],
  "test_count_does_not_silence_attribute_error": [
    [
      "tests/pagination/tests.py",
      [
        "PaginationTests",
        "test_count_does_not_silence_attribute_error"
      ]
    ]
  ],
  "test_count_does_not_silence_type_error": [
    [
      "tests/pagination/tests.py",
      [
        "PaginationTests",
        "test_count_does_not_silence_type_error"
      ]
    ]
  ],
  "check_indexes": [
    [
      "tests/pagination/tests.py",
      [
        "PaginationTests",
        "check_indexes"
      ]
    ]
  ],
  "test_page_indexes": [
    [
      "tests/pagination/tests.py",
      [
        "PaginationTests",
        "test_page_indexes"
      ]
    ]
  ],
  "test_page_sequence": [
    [
      "tests/pagination/tests.py",
      [
        "PaginationTests",
        "test_page_sequence"
      ]
    ]
  ],
  "test_get_page_hook": [
    [
      "tests/pagination/tests.py",
      [
        "PaginationTests",
        "test_get_page_hook"
      ]
    ]
  ],
  "test_page_range_iterator": [
    [
      "tests/pagination/tests.py",
      [
        "PaginationTests",
        "test_page_range_iterator"
      ]
    ]
  ],
  "test_get_page": [
    [
      "tests/pagination/tests.py",
      [
        "PaginationTests",
        "test_get_page"
      ]
    ]
  ],
  "test_get_page_empty_object_list": [
    [
      "tests/pagination/tests.py",
      [
        "PaginationTests",
        "test_get_page_empty_object_list"
      ]
    ]
  ],
  "test_get_page_empty_object_list_and_allow_empty_first_page_false": [
    [
      "tests/pagination/tests.py",
      [
        "PaginationTests",
        "test_get_page_empty_object_list_and_allow_empty_first_page_false"
      ]
    ]
  ],
  "test_paginator_iteration": [
    [
      "tests/pagination/tests.py",
      [
        "PaginationTests",
        "test_paginator_iteration"
      ]
    ]
  ],
  "test_first_page": [
    [
      "tests/pagination/tests.py",
      [
        "ModelPaginationTests",
        "test_first_page"
      ]
    ]
  ],
  "test_last_page": [
    [
      "tests/pagination/tests.py",
      [
        "ModelPaginationTests",
        "test_last_page"
      ]
    ]
  ],
  "test_page_getitem": [
    [
      "tests/pagination/tests.py",
      [
        "ModelPaginationTests",
        "test_page_getitem"
      ]
    ]
  ],
  "test_paginating_unordered_queryset_raises_warning": [
    [
      "tests/pagination/tests.py",
      [
        "ModelPaginationTests",
        "test_paginating_unordered_queryset_raises_warning"
      ]
    ]
  ],
  "test_paginating_empty_queryset_does_not_warn": [
    [
      "tests/pagination/tests.py",
      [
        "ModelPaginationTests",
        "test_paginating_empty_queryset_does_not_warn"
      ]
    ]
  ],
  "test_paginating_unordered_object_list_raises_warning": [
    [
      "tests/pagination/tests.py",
      [
        "ModelPaginationTests",
        "test_paginating_unordered_object_list_raises_warning"
      ]
    ]
  ],
  "test_array_agg_charfield": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_array_agg_charfield"
      ]
    ]
  ],
  "test_array_agg_charfield_ordering": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_array_agg_charfield_ordering"
      ]
    ]
  ],
  "test_array_agg_integerfield": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_array_agg_integerfield"
      ]
    ]
  ],
  "test_array_agg_integerfield_ordering": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_array_agg_integerfield_ordering"
      ]
    ]
  ],
  "test_array_agg_booleanfield": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_array_agg_booleanfield"
      ]
    ]
  ],
  "test_array_agg_booleanfield_ordering": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_array_agg_booleanfield_ordering"
      ]
    ]
  ],
  "test_array_agg_filter": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_array_agg_filter"
      ]
    ]
  ],
  "test_array_agg_empty_result": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_array_agg_empty_result"
      ]
    ]
  ],
  "test_array_agg_lookups": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_array_agg_lookups"
      ]
    ]
  ],
  "test_bit_and_general": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_bit_and_general"
      ]
    ]
  ],
  "test_bit_and_on_only_true_values": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_bit_and_on_only_true_values"
      ]
    ]
  ],
  "test_bit_and_on_only_false_values": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_bit_and_on_only_false_values"
      ]
    ]
  ],
  "test_bit_and_empty_result": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_bit_and_empty_result"
      ]
    ]
  ],
  "test_bit_or_general": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_bit_or_general"
      ]
    ]
  ],
  "test_bit_or_on_only_true_values": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_bit_or_on_only_true_values"
      ]
    ]
  ],
  "test_bit_or_on_only_false_values": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_bit_or_on_only_false_values"
      ]
    ]
  ],
  "test_bit_or_empty_result": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_bit_or_empty_result"
      ]
    ]
  ],
  "test_bool_and_general": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_bool_and_general"
      ]
    ]
  ],
  "test_bool_and_empty_result": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_bool_and_empty_result"
      ]
    ]
  ],
  "test_bool_or_general": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_bool_or_general"
      ]
    ]
  ],
  "test_bool_or_empty_result": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_bool_or_empty_result"
      ]
    ]
  ],
  "test_string_agg_requires_delimiter": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_string_agg_requires_delimiter"
      ]
    ]
  ],
  "test_string_agg_delimiter_escaping": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_string_agg_delimiter_escaping"
      ]
    ]
  ],
  "test_string_agg_charfield": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_string_agg_charfield"
      ]
    ]
  ],
  "test_string_agg_charfield_ordering": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_string_agg_charfield_ordering"
      ]
    ]
  ],
  "test_string_agg_filter": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_string_agg_filter"
      ]
    ]
  ],
  "test_string_agg_empty_result": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_string_agg_empty_result"
      ]
    ]
  ],
  "test_orderable_agg_alternative_fields": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_orderable_agg_alternative_fields"
      ]
    ]
  ],
  "test_json_agg": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_json_agg"
      ]
    ]
  ],
  "test_json_agg_empty": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_json_agg_empty"
      ]
    ]
  ],
  "test_string_agg_array_agg_ordering_in_subquery": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_string_agg_array_agg_ordering_in_subquery"
      ]
    ]
  ],
  "test_string_agg_array_agg_filter_in_subquery": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_string_agg_array_agg_filter_in_subquery"
      ]
    ]
  ],
  "test_string_agg_filter_in_subquery_with_exclude": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestGeneralAggregate",
        "test_string_agg_filter_in_subquery_with_exclude"
      ]
    ]
  ],
  "test_string_agg_distinct_false": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestAggregateDistinct",
        "test_string_agg_distinct_false"
      ]
    ]
  ],
  "test_string_agg_distinct_true": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestAggregateDistinct",
        "test_string_agg_distinct_true"
      ]
    ]
  ],
  "test_array_agg_distinct_false": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestAggregateDistinct",
        "test_array_agg_distinct_false"
      ]
    ]
  ],
  "test_array_agg_distinct_true": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestAggregateDistinct",
        "test_array_agg_distinct_true"
      ]
    ]
  ],
  "test_missing_arguments_raises_exception": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate",
        "test_missing_arguments_raises_exception"
      ]
    ]
  ],
  "test_correct_source_expressions": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate",
        "test_correct_source_expressions"
      ]
    ]
  ],
  "test_alias_is_required": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate",
        "test_alias_is_required"
      ]
    ]
  ],
  "test_corr_general": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate",
        "test_corr_general"
      ]
    ]
  ],
  "test_corr_empty_result": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate",
        "test_corr_empty_result"
      ]
    ]
  ],
  "test_covar_pop_general": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate",
        "test_covar_pop_general"
      ]
    ]
  ],
  "test_covar_pop_empty_result": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate",
        "test_covar_pop_empty_result"
      ]
    ]
  ],
  "test_covar_pop_sample": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate",
        "test_covar_pop_sample"
      ]
    ]
  ],
  "test_covar_pop_sample_empty_result": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate",
        "test_covar_pop_sample_empty_result"
      ]
    ]
  ],
  "test_regr_avgx_general": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate",
        "test_regr_avgx_general"
      ]
    ]
  ],
  "test_regr_avgx_empty_result": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate",
        "test_regr_avgx_empty_result"
      ]
    ]
  ],
  "test_regr_avgy_general": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate",
        "test_regr_avgy_general"
      ]
    ]
  ],
  "test_regr_avgy_empty_result": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate",
        "test_regr_avgy_empty_result"
      ]
    ]
  ],
  "test_regr_count_general": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate",
        "test_regr_count_general"
      ]
    ]
  ],
  "test_regr_count_empty_result": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate",
        "test_regr_count_empty_result"
      ]
    ]
  ],
  "test_regr_intercept_general": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate",
        "test_regr_intercept_general"
      ]
    ]
  ],
  "test_regr_intercept_empty_result": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate",
        "test_regr_intercept_empty_result"
      ]
    ]
  ],
  "test_regr_r2_general": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate",
        "test_regr_r2_general"
      ]
    ]
  ],
  "test_regr_r2_empty_result": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate",
        "test_regr_r2_empty_result"
      ]
    ]
  ],
  "test_regr_slope_general": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate",
        "test_regr_slope_general"
      ]
    ]
  ],
  "test_regr_slope_empty_result": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate",
        "test_regr_slope_empty_result"
      ]
    ]
  ],
  "test_regr_sxx_general": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate",
        "test_regr_sxx_general"
      ]
    ]
  ],
  "test_regr_sxx_empty_result": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate",
        "test_regr_sxx_empty_result"
      ]
    ]
  ],
  "test_regr_sxy_general": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate",
        "test_regr_sxy_general"
      ]
    ]
  ],
  "test_regr_sxy_empty_result": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate",
        "test_regr_sxy_empty_result"
      ]
    ]
  ],
  "test_regr_syy_general": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate",
        "test_regr_syy_general"
      ]
    ]
  ],
  "test_regr_syy_empty_result": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate",
        "test_regr_syy_empty_result"
      ]
    ]
  ],
  "test_regr_avgx_with_related_obj_and_number_as_argument": [
    [
      "tests/postgres_tests/test_aggregates.py",
      [
        "TestStatisticsAggregate",
        "test_regr_avgx_with_related_obj_and_number_as_argument"
      ]
    ]
  ],
  "test_register_type_handlers_connection": [
    [
      "tests/postgres_tests/test_apps.py",
      [
        "PostgresConfigTests",
        "test_register_type_handlers_connection"
      ]
    ]
  ],
  "assertNotSerializable": [
    [
      "tests/postgres_tests/test_apps.py",
      [
        "PostgresConfigTests",
        "test_register_serializer_for_migrations",
        "assertNotSerializable"
      ]
    ]
  ],
  "test_register_serializer_for_migrations": [
    [
      "tests/postgres_tests/test_apps.py",
      [
        "PostgresConfigTests",
        "test_register_serializer_for_migrations"
      ]
    ]
  ],
  "test_get_field_display": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "BasicTests",
        "test_get_field_display"
      ]
    ],
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "BasicTests",
        "test_get_field_display"
      ]
    ]
  ],
  "test_get_field_display_nested_array": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "BasicTests",
        "test_get_field_display_nested_array"
      ]
    ]
  ],
  "test_char": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSaveLoad",
        "test_char"
      ]
    ]
  ],
  "test_dates": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSaveLoad",
        "test_dates"
      ]
    ],
    [
      "tests/reserved_names/tests.py",
      [
        "ReservedNameTests",
        "test_dates"
      ]
    ]
  ],
  "test_tuples": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSaveLoad",
        "test_tuples"
      ]
    ],
    [
      "tests/utils_tests/test_http.py",
      [
        "URLEncodeTests",
        "test_tuples"
      ]
    ]
  ],
  "test_integers_passed_as_strings": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSaveLoad",
        "test_integers_passed_as_strings"
      ]
    ]
  ],
  "test_default_null": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSaveLoad",
        "test_default_null"
      ]
    ]
  ],
  "test_nested": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSaveLoad",
        "test_nested"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_unordered_list.py",
      [
        "FunctionTests",
        "test_nested"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "CaptureQueriesContextManagerTests",
        "test_nested"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "IsolatedAppsTests",
        "test_nested"
      ]
    ]
  ],
  "test_other_array_types": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSaveLoad",
        "test_other_array_types"
      ]
    ]
  ],
  "test_null_from_db_value_handling": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSaveLoad",
        "test_null_from_db_value_handling"
      ]
    ]
  ],
  "test_model_set_on_base_field": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSaveLoad",
        "test_model_set_on_base_field"
      ]
    ],
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestSaveLoad",
        "test_model_set_on_base_field"
      ]
    ]
  ],
  "test_nested_nullable_base_field": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSaveLoad",
        "test_nested_nullable_base_field"
      ]
    ]
  ],
  "test_empty_list": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_empty_list"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestSaveLoad",
        "test_empty_list"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_last.py",
      [
        "LastTests",
        "test_empty_list"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_length_is.py",
      [
        "FunctionTests",
        "test_empty_list"
      ]
    ]
  ],
  "test_exact_charfield": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_exact_charfield"
      ]
    ]
  ],
  "test_exact_nested": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_exact_nested"
      ]
    ]
  ],
  "test_in_including_F_object": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_in_including_F_object"
      ]
    ]
  ],
  "test_in_as_F_object": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_in_as_F_object"
      ]
    ]
  ],
  "test_contained_by": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_contained_by"
      ]
    ],
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestQuerying",
        "test_contained_by"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_contained_by"
      ]
    ],
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQuerying",
        "test_contained_by"
      ]
    ]
  ],
  "test_contained_by_including_F_object": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_contained_by_including_F_object"
      ]
    ]
  ],
  "test_contains_charfield": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_contains_charfield"
      ]
    ]
  ],
  "test_contained_by_charfield": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_contained_by_charfield"
      ]
    ]
  ],
  "test_overlap_charfield": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_overlap_charfield"
      ]
    ]
  ],
  "test_lookups_autofield_array": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_lookups_autofield_array"
      ]
    ]
  ],
  "test_index_chained": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_index_chained"
      ]
    ]
  ],
  "test_index_nested": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_index_nested"
      ]
    ]
  ],
  "test_index_used_on_nested_data": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_index_used_on_nested_data"
      ]
    ]
  ],
  "test_index_transform_expression": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_index_transform_expression"
      ]
    ]
  ],
  "test_overlap": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_overlap"
      ]
    ],
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQuerying",
        "test_overlap"
      ]
    ]
  ],
  "test_len": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_len"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "PrefetchRelatedTests",
        "test_len"
      ]
    ],
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "test_len"
      ]
    ],
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "OrderedSetTests",
        "test_len"
      ]
    ],
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase",
        "test_len"
      ]
    ],
    [
      "tests/utils_tests/test_tree.py",
      [
        "NodeTests",
        "test_len"
      ]
    ]
  ],
  "test_len_empty_array": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_len_empty_array"
      ]
    ]
  ],
  "test_slice": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_slice"
      ]
    ]
  ],
  "test_order_by_slice": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_order_by_slice"
      ]
    ]
  ],
  "test_slice_nested": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_slice_nested"
      ]
    ]
  ],
  "test_slice_transform_expression": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_slice_transform_expression"
      ]
    ]
  ],
  "test_usage_in_subquery": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_usage_in_subquery"
      ]
    ],
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestQuerying",
        "test_usage_in_subquery"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_usage_in_subquery"
      ]
    ]
  ],
  "test_enum_lookup": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_enum_lookup"
      ]
    ]
  ],
  "test_unsupported_lookup": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_unsupported_lookup"
      ]
    ]
  ],
  "test_grouping_by_annotations_with_array_field_param": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestQuerying",
        "test_grouping_by_annotations_with_array_field_param"
      ]
    ]
  ],
  "test_exact_datetimes": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestDateTimeExactQuerying",
        "test_exact_datetimes"
      ]
    ]
  ],
  "test_exact_dates": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestDateTimeExactQuerying",
        "test_exact_dates"
      ]
    ]
  ],
  "test_exact_times": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestDateTimeExactQuerying",
        "test_exact_times"
      ]
    ]
  ],
  "test_exact_ip_addresses": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestOtherTypesExactQuerying",
        "test_exact_ip_addresses"
      ]
    ]
  ],
  "test_exact_uuids": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestOtherTypesExactQuerying",
        "test_exact_uuids"
      ]
    ]
  ],
  "test_exact_decimals": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestOtherTypesExactQuerying",
        "test_exact_decimals"
      ]
    ]
  ],
  "test_exact_tags": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestOtherTypesExactQuerying",
        "test_exact_tags"
      ]
    ]
  ],
  "test_field_checks": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestChecks",
        "test_field_checks"
      ]
    ]
  ],
  "test_invalid_base_fields": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestChecks",
        "test_invalid_base_fields"
      ]
    ]
  ],
  "test_invalid_default": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestChecks",
        "test_invalid_default"
      ]
    ],
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestChecks",
        "test_invalid_default"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestChecks",
        "test_invalid_default"
      ]
    ]
  ],
  "test_valid_default": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestChecks",
        "test_valid_default"
      ]
    ],
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestChecks",
        "test_valid_default"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestChecks",
        "test_valid_default"
      ]
    ]
  ],
  "test_valid_default_none": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestChecks",
        "test_valid_default_none"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestChecks",
        "test_valid_default_none"
      ]
    ]
  ],
  "test_nested_field_checks": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestChecks",
        "test_nested_field_checks"
      ]
    ]
  ],
  "test_choices_tuple_list": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestChecks",
        "test_choices_tuple_list"
      ]
    ],
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestChecks",
        "test_choices_tuple_list"
      ]
    ]
  ],
  "test_deconstruct_with_size": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestMigrations",
        "test_deconstruct_with_size"
      ]
    ]
  ],
  "test_deconstruct_args": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestMigrations",
        "test_deconstruct_args"
      ]
    ]
  ],
  "test_subclass_deconstruct": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestMigrations",
        "test_subclass_deconstruct"
      ]
    ]
  ],
  "test_adding_field_with_default": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestMigrations",
        "test_adding_field_with_default"
      ]
    ]
  ],
  "test_adding_arrayfield_with_index": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestMigrations",
        "test_adding_arrayfield_with_index"
      ]
    ]
  ],
  "test_unbounded": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestValidation",
        "test_unbounded"
      ]
    ],
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestSaveLoad",
        "test_unbounded"
      ]
    ]
  ],
  "test_blank_true": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestValidation",
        "test_blank_true"
      ]
    ]
  ],
  "test_with_size": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestValidation",
        "test_with_size"
      ]
    ]
  ],
  "test_nested_array_mismatch": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestValidation",
        "test_nested_array_mismatch"
      ]
    ]
  ],
  "test_with_base_field_error_params": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestValidation",
        "test_with_base_field_error_params"
      ]
    ]
  ],
  "test_with_validators": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestValidation",
        "test_with_validators"
      ]
    ]
  ],
  "test_to_python_fail": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSimpleFormField",
        "test_to_python_fail"
      ]
    ]
  ],
  "test_validate_fail": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSimpleFormField",
        "test_validate_fail"
      ]
    ]
  ],
  "test_validate_fail_base_field_error_params": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSimpleFormField",
        "test_validate_fail_base_field_error_params"
      ]
    ]
  ],
  "test_validators_fail": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSimpleFormField",
        "test_validators_fail"
      ]
    ]
  ],
  "test_delimiter": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSimpleFormField",
        "test_delimiter"
      ]
    ]
  ],
  "test_delimiter_with_nesting": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSimpleFormField",
        "test_delimiter_with_nesting"
      ]
    ]
  ],
  "test_prepare_value": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSimpleFormField",
        "test_prepare_value"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestFormField",
        "test_prepare_value"
      ]
    ]
  ],
  "test_min_length": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSimpleFormField",
        "test_min_length"
      ]
    ]
  ],
  "test_required": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSimpleFormField",
        "test_required"
      ]
    ],
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSplitFormField",
        "test_required"
      ]
    ]
  ],
  "test_model_field_formfield": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSimpleFormField",
        "test_model_field_formfield"
      ]
    ],
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestFormField",
        "test_model_field_formfield"
      ]
    ]
  ],
  "test_model_field_formfield_size": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSimpleFormField",
        "test_model_field_formfield_size"
      ]
    ]
  ],
  "test_model_field_choices": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSimpleFormField",
        "test_model_field_choices"
      ]
    ]
  ],
  "test_already_converted_value": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSimpleFormField",
        "test_already_converted_value"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestFormField",
        "test_already_converted_value"
      ]
    ]
  ],
  "test_has_changed": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSimpleFormField",
        "test_has_changed"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestFormField",
        "test_has_changed"
      ]
    ],
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_has_changed"
      ]
    ]
  ],
  "test_has_changed_empty": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSimpleFormField",
        "test_has_changed_empty"
      ]
    ]
  ],
  "test_remove_trailing_nulls": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSplitFormField",
        "test_remove_trailing_nulls"
      ]
    ]
  ],
  "test_remove_trailing_nulls_not_required": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSplitFormField",
        "test_remove_trailing_nulls_not_required"
      ]
    ]
  ],
  "test_required_field": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSplitFormField",
        "test_required_field"
      ]
    ]
  ],
  "test_invalid_integer": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSplitFormField",
        "test_invalid_integer"
      ]
    ]
  ],
  "test_rendering": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSplitFormField",
        "test_rendering"
      ]
    ],
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_rendering"
      ]
    ]
  ],
  "test_invalid_char_length": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSplitFormField",
        "test_invalid_char_length"
      ]
    ]
  ],
  "test_splitarraywidget_value_omitted_from_data": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSplitFormField",
        "test_splitarraywidget_value_omitted_from_data"
      ]
    ]
  ],
  "test_splitarrayfield_has_changed": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSplitFormField",
        "test_splitarrayfield_has_changed"
      ]
    ]
  ],
  "test_splitarrayfield_remove_trailing_nulls_has_changed": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSplitFormField",
        "test_splitarrayfield_remove_trailing_nulls_has_changed"
      ]
    ]
  ],
  "test_get_context": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSplitFormWidget",
        "test_get_context"
      ]
    ]
  ],
  "test_checkbox_get_context_attrs": [
    [
      "tests/postgres_tests/test_array.py",
      [
        "TestSplitFormWidget",
        "test_checkbox_get_context_attrs"
      ]
    ]
  ],
  "test_bulk_update": [
    [
      "tests/postgres_tests/test_bulk_update.py",
      [
        "BulkSaveTests",
        "test_bulk_update"
      ]
    ]
  ],
  "test_equal_lowercase": [
    [
      "tests/postgres_tests/test_citext.py",
      [
        "CITextTestCase",
        "test_equal_lowercase"
      ]
    ]
  ],
  "test_fail_citext_primary_key": [
    [
      "tests/postgres_tests/test_citext.py",
      [
        "CITextTestCase",
        "test_fail_citext_primary_key"
      ]
    ]
  ],
  "test_array_field": [
    [
      "tests/postgres_tests/test_citext.py",
      [
        "CITextTestCase",
        "test_array_field"
      ]
    ],
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "SimpleTests",
        "test_array_field"
      ]
    ]
  ],
  "test_lookups_name_char": [
    [
      "tests/postgres_tests/test_citext.py",
      [
        "CITextTestCase",
        "test_lookups_name_char"
      ]
    ]
  ],
  "test_lookups_description_text": [
    [
      "tests/postgres_tests/test_citext.py",
      [
        "CITextTestCase",
        "test_lookups_description_text"
      ]
    ]
  ],
  "test_lookups_email": [
    [
      "tests/postgres_tests/test_citext.py",
      [
        "CITextTestCase",
        "test_lookups_email"
      ]
    ]
  ],
  "test_check_constraint_range_value": [
    [
      "tests/postgres_tests/test_constraints.py",
      [
        "SchemaTests",
        "test_check_constraint_range_value"
      ]
    ]
  ],
  "test_check_constraint_daterange_contains": [
    [
      "tests/postgres_tests/test_constraints.py",
      [
        "SchemaTests",
        "test_check_constraint_daterange_contains"
      ]
    ]
  ],
  "test_check_constraint_datetimerange_contains": [
    [
      "tests/postgres_tests/test_constraints.py",
      [
        "SchemaTests",
        "test_check_constraint_datetimerange_contains"
      ]
    ]
  ],
  "test_invalid_condition": [
    [
      "tests/postgres_tests/test_constraints.py",
      [
        "ExclusionConstraintTests",
        "test_invalid_condition"
      ]
    ]
  ],
  "test_invalid_index_type": [
    [
      "tests/postgres_tests/test_constraints.py",
      [
        "ExclusionConstraintTests",
        "test_invalid_index_type"
      ]
    ]
  ],
  "test_invalid_expressions": [
    [
      "tests/postgres_tests/test_constraints.py",
      [
        "ExclusionConstraintTests",
        "test_invalid_expressions"
      ]
    ]
  ],
  "test_empty_expressions": [
    [
      "tests/postgres_tests/test_constraints.py",
      [
        "ExclusionConstraintTests",
        "test_empty_expressions"
      ]
    ]
  ],
  "test_deconstruct_index_type": [
    [
      "tests/postgres_tests/test_constraints.py",
      [
        "ExclusionConstraintTests",
        "test_deconstruct_index_type"
      ]
    ]
  ],
  "test_deconstruct_condition": [
    [
      "tests/postgres_tests/test_constraints.py",
      [
        "ExclusionConstraintTests",
        "test_deconstruct_condition"
      ]
    ]
  ],
  "_test_range_overlaps": [
    [
      "tests/postgres_tests/test_constraints.py",
      [
        "ExclusionConstraintTests",
        "_test_range_overlaps"
      ]
    ]
  ],
  "test_range_overlaps_custom": [
    [
      "tests/postgres_tests/test_constraints.py",
      [
        "ExclusionConstraintTests",
        "test_range_overlaps_custom"
      ]
    ]
  ],
  "test_range_overlaps": [
    [
      "tests/postgres_tests/test_constraints.py",
      [
        "ExclusionConstraintTests",
        "test_range_overlaps"
      ]
    ]
  ],
  "test_range_adjacent": [
    [
      "tests/postgres_tests/test_constraints.py",
      [
        "ExclusionConstraintTests",
        "test_range_adjacent"
      ]
    ]
  ],
  "test_transaction_now": [
    [
      "tests/postgres_tests/test_functions.py",
      [
        "TestTransactionNow",
        "test_transaction_now"
      ]
    ]
  ],
  "test_random_uuid": [
    [
      "tests/postgres_tests/test_functions.py",
      [
        "TestRandomUUID",
        "test_random_uuid"
      ]
    ]
  ],
  "test_save_load_success": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "SimpleTests",
        "test_save_load_success"
      ]
    ]
  ],
  "test_value_null": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "SimpleTests",
        "test_value_null"
      ]
    ]
  ],
  "test_key_val_cast_to_string": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "SimpleTests",
        "test_key_val_cast_to_string"
      ]
    ]
  ],
  "test_in_generator": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestQuerying",
        "test_in_generator"
      ]
    ]
  ],
  "test_has_keys": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestQuerying",
        "test_has_keys"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_has_keys"
      ]
    ]
  ],
  "test_has_any_keys": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestQuerying",
        "test_has_any_keys"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_has_any_keys"
      ]
    ]
  ],
  "test_key_transform": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestQuerying",
        "test_key_transform"
      ]
    ]
  ],
  "test_key_transform_raw_expression": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestQuerying",
        "test_key_transform_raw_expression"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_key_transform_raw_expression"
      ]
    ]
  ],
  "test_keys": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestQuerying",
        "test_keys"
      ]
    ],
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_keys"
      ]
    ]
  ],
  "test_field_chaining": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestQuerying",
        "test_field_chaining"
      ]
    ]
  ],
  "test_order_by_field": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestQuerying",
        "test_order_by_field"
      ]
    ]
  ],
  "test_keys_contains": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestQuerying",
        "test_keys_contains"
      ]
    ]
  ],
  "test_values_overlap": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestQuerying",
        "test_values_overlap"
      ]
    ]
  ],
  "test_key_isnull": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestQuerying",
        "test_key_isnull"
      ]
    ]
  ],
  "test_key_sql_injection": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestQuerying",
        "test_key_sql_injection"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_key_sql_injection"
      ]
    ]
  ],
  "test_obj_subquery_lookup": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestQuerying",
        "test_obj_subquery_lookup"
      ]
    ],
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_obj_subquery_lookup"
      ]
    ]
  ],
  "test_roundtrip_with_null": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestSerialization",
        "test_roundtrip_with_null"
      ]
    ]
  ],
  "test_not_a_string": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestValidation",
        "test_not_a_string"
      ]
    ]
  ],
  "test_none_allowed_as_value": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestValidation",
        "test_none_allowed_as_value"
      ]
    ]
  ],
  "test_invalid_json": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestFormField",
        "test_invalid_json"
      ]
    ]
  ],
  "test_non_dict_json": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestFormField",
        "test_non_dict_json"
      ]
    ]
  ],
  "test_not_string_values": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestFormField",
        "test_not_string_values"
      ]
    ]
  ],
  "test_none_value": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestFormField",
        "test_none_value"
      ]
    ]
  ],
  "test_field_has_changed": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestFormField",
        "test_field_has_changed"
      ]
    ]
  ],
  "test_simple_valid": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestValidator",
        "test_simple_valid"
      ]
    ]
  ],
  "test_missing_keys": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestValidator",
        "test_missing_keys"
      ]
    ]
  ],
  "test_strict_valid": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestValidator",
        "test_strict_valid"
      ]
    ]
  ],
  "test_extra_keys": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestValidator",
        "test_extra_keys"
      ]
    ]
  ],
  "test_custom_messages": [
    [
      "tests/postgres_tests/test_hstore.py",
      [
        "TestValidator",
        "test_custom_messages"
      ]
    ]
  ],
  "test_deconstruction_no_customization": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "IndexTestMixin",
        "test_deconstruction_no_customization"
      ]
    ]
  ],
  "test_invalid_fields": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "BloomIndexTests",
        "test_invalid_fields"
      ]
    ]
  ],
  "test_invalid_columns": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "BloomIndexTests",
        "test_invalid_columns"
      ]
    ]
  ],
  "test_invalid_columns_value": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "BloomIndexTests",
        "test_invalid_columns_value"
      ]
    ]
  ],
  "test_invalid_pages_per_range": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "BrinIndexTests",
        "test_invalid_pages_per_range"
      ]
    ]
  ],
  "test_gin_index": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "SchemaTests",
        "test_gin_index"
      ]
    ]
  ],
  "test_gin_fastupdate": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "SchemaTests",
        "test_gin_fastupdate"
      ]
    ]
  ],
  "test_partial_gin_index": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "SchemaTests",
        "test_partial_gin_index"
      ]
    ]
  ],
  "test_partial_gin_index_with_tablespace": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "SchemaTests",
        "test_partial_gin_index_with_tablespace"
      ]
    ]
  ],
  "test_gin_parameters": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "SchemaTests",
        "test_gin_parameters"
      ]
    ]
  ],
  "test_bloom_index": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "SchemaTests",
        "test_bloom_index"
      ]
    ]
  ],
  "test_bloom_parameters": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "SchemaTests",
        "test_bloom_parameters"
      ]
    ]
  ],
  "test_bloom_index_not_supported": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "SchemaTests",
        "test_bloom_index_not_supported"
      ]
    ]
  ],
  "test_brin_index": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "SchemaTests",
        "test_brin_index"
      ]
    ]
  ],
  "test_brin_parameters": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "SchemaTests",
        "test_brin_parameters"
      ]
    ]
  ],
  "test_brin_autosummarize_not_supported": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "SchemaTests",
        "test_brin_autosummarize_not_supported"
      ]
    ]
  ],
  "test_btree_index": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "SchemaTests",
        "test_btree_index"
      ]
    ]
  ],
  "test_btree_parameters": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "SchemaTests",
        "test_btree_parameters"
      ]
    ]
  ],
  "test_gist_index": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "SchemaTests",
        "test_gist_index"
      ]
    ]
  ],
  "test_gist_parameters": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "SchemaTests",
        "test_gist_parameters"
      ]
    ]
  ],
  "test_hash_index": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "SchemaTests",
        "test_hash_index"
      ]
    ]
  ],
  "test_hash_parameters": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "SchemaTests",
        "test_hash_parameters"
      ]
    ]
  ],
  "test_spgist_index": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "SchemaTests",
        "test_spgist_index"
      ]
    ]
  ],
  "test_spgist_parameters": [
    [
      "tests/postgres_tests/test_indexes.py",
      [
        "SchemaTests",
        "test_spgist_parameters"
      ]
    ]
  ],
  "assertFieldsInModel": [
    [
      "tests/postgres_tests/test_introspection.py",
      [
        "InspectDBTests",
        "assertFieldsInModel"
      ]
    ]
  ],
  "test_json_field": [
    [
      "tests/postgres_tests/test_introspection.py",
      [
        "InspectDBTests",
        "test_json_field"
      ]
    ]
  ],
  "test_range_fields": [
    [
      "tests/postgres_tests/test_introspection.py",
      [
        "InspectDBTests",
        "test_range_fields"
      ]
    ]
  ],
  "test_ordering_by_json_field_value": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestModelMetaOrdering",
        "test_ordering_by_json_field_value"
      ]
    ]
  ],
  "test_empty_object": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestSaveLoad",
        "test_empty_object"
      ]
    ]
  ],
  "test_boolean": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestSaveLoad",
        "test_boolean"
      ]
    ]
  ],
  "test_number": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestSaveLoad",
        "test_number"
      ]
    ]
  ],
  "test_realistic_object": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestSaveLoad",
        "test_realistic_object"
      ]
    ]
  ],
  "test_custom_encoding": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestSaveLoad",
        "test_custom_encoding"
      ]
    ]
  ],
  "test_exact_complex": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_exact_complex"
      ]
    ]
  ],
  "test_ordering_by_transform": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_ordering_by_transform"
      ]
    ]
  ],
  "test_ordering_grouping_by_key_transform": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_ordering_grouping_by_key_transform"
      ]
    ]
  ],
  "test_key_transform_expression": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_key_transform_expression"
      ]
    ]
  ],
  "test_nested_key_transform_raw_expression": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_nested_key_transform_raw_expression"
      ]
    ]
  ],
  "test_nested_key_transform_expression": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_nested_key_transform_expression"
      ]
    ]
  ],
  "test_deep_values": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_deep_values"
      ]
    ]
  ],
  "test_deep_distinct": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_deep_distinct"
      ]
    ]
  ],
  "test_isnull_key": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_isnull_key"
      ]
    ]
  ],
  "test_none_key": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_none_key"
      ]
    ]
  ],
  "test_none_key_exclude": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_none_key_exclude"
      ]
    ]
  ],
  "test_isnull_key_or_none": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_isnull_key_or_none"
      ]
    ]
  ],
  "test_shallow_list_lookup": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_shallow_list_lookup"
      ]
    ]
  ],
  "test_shallow_obj_lookup": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_shallow_obj_lookup"
      ]
    ]
  ],
  "test_deep_lookup_objs": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_deep_lookup_objs"
      ]
    ]
  ],
  "test_shallow_lookup_obj_target": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_shallow_lookup_obj_target"
      ]
    ]
  ],
  "test_deep_lookup_array": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_deep_lookup_array"
      ]
    ]
  ],
  "test_deep_lookup_mixed": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_deep_lookup_mixed"
      ]
    ]
  ],
  "test_deep_lookup_transform": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_deep_lookup_transform"
      ]
    ]
  ],
  "test_iregex": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_iregex"
      ]
    ]
  ],
  "test_lookups_with_key_transform": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_lookups_with_key_transform"
      ]
    ]
  ],
  "test_key_escape": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestQuerying",
        "test_key_escape"
      ]
    ]
  ],
  "test_not_serializable": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestValidation",
        "test_not_serializable"
      ]
    ]
  ],
  "test_custom_encoder": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestValidation",
        "test_custom_encoder"
      ]
    ],
    [
      "tests/serializers/test_json.py",
      [
        "JsonSerializerTestCase",
        "test_custom_encoder"
      ]
    ]
  ],
  "test_valid_empty": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestFormField",
        "test_valid_empty"
      ]
    ]
  ],
  "test_redisplay_wrong_input": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestFormField",
        "test_redisplay_wrong_input"
      ]
    ]
  ],
  "test_widget": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestFormField",
        "test_widget"
      ]
    ]
  ],
  "test_custom_widget_kwarg": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestFormField",
        "test_custom_widget_kwarg"
      ]
    ]
  ],
  "test_custom_widget_attribute": [
    [
      "tests/postgres_tests/test_json.py",
      [
        "TestFormField",
        "test_custom_widget_attribute"
      ]
    ]
  ],
  "test_requires_atomic_false": [
    [
      "tests/postgres_tests/test_operations.py",
      [
        "AddIndexConcurrentlyTests",
        "test_requires_atomic_false"
      ]
    ],
    [
      "tests/postgres_tests/test_operations.py",
      [
        "RemoveIndexConcurrentlyTests",
        "test_requires_atomic_false"
      ]
    ]
  ],
  "test_add_other_index_type": [
    [
      "tests/postgres_tests/test_operations.py",
      [
        "AddIndexConcurrentlyTests",
        "test_add_other_index_type"
      ]
    ]
  ],
  "test_add_with_options": [
    [
      "tests/postgres_tests/test_operations.py",
      [
        "AddIndexConcurrentlyTests",
        "test_add_with_options"
      ]
    ]
  ],
  "test_no_allow_migrate": [
    [
      "tests/postgres_tests/test_operations.py",
      [
        "CreateExtensionTests",
        "test_no_allow_migrate"
      ]
    ]
  ],
  "test_allow_migrate": [
    [
      "tests/postgres_tests/test_operations.py",
      [
        "CreateExtensionTests",
        "test_allow_migrate"
      ]
    ]
  ],
  "test_all_fields": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestSaveLoad",
        "test_all_fields"
      ]
    ]
  ],
  "test_range_object": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestSaveLoad",
        "test_range_object"
      ]
    ]
  ],
  "test_tuple": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestSaveLoad",
        "test_tuple"
      ]
    ]
  ],
  "test_range_object_boundaries": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestSaveLoad",
        "test_range_object_boundaries"
      ]
    ]
  ],
  "test_datetime_range_contains": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestRangeContainsLookup",
        "test_datetime_range_contains"
      ]
    ]
  ],
  "test_date_range_contains": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestRangeContainsLookup",
        "test_date_range_contains"
      ]
    ]
  ],
  "test_isempty": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQuerying",
        "test_isempty"
      ]
    ]
  ],
  "test_contains_range": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQuerying",
        "test_contains_range"
      ]
    ]
  ],
  "test_fully_lt": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQuerying",
        "test_fully_lt"
      ]
    ]
  ],
  "test_fully_gt": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQuerying",
        "test_fully_gt"
      ]
    ]
  ],
  "test_not_lt": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQuerying",
        "test_not_lt"
      ]
    ]
  ],
  "test_not_gt": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQuerying",
        "test_not_gt"
      ]
    ]
  ],
  "test_adjacent_to": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQuerying",
        "test_adjacent_to"
      ]
    ]
  ],
  "test_startswith_chaining": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQuerying",
        "test_startswith_chaining"
      ]
    ]
  ],
  "test_bound_type": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQuerying",
        "test_bound_type"
      ]
    ]
  ],
  "test_date_range": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQueryingWithRanges",
        "test_date_range"
      ]
    ]
  ],
  "test_date_range_datetime_field": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQueryingWithRanges",
        "test_date_range_datetime_field"
      ]
    ]
  ],
  "test_datetime_range": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQueryingWithRanges",
        "test_datetime_range"
      ]
    ]
  ],
  "test_small_integer_field_contained_by": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQueryingWithRanges",
        "test_small_integer_field_contained_by"
      ]
    ]
  ],
  "test_integer_range": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQueryingWithRanges",
        "test_integer_range"
      ]
    ]
  ],
  "test_biginteger_range": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQueryingWithRanges",
        "test_biginteger_range"
      ]
    ]
  ],
  "test_decimal_field_contained_by": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQueryingWithRanges",
        "test_decimal_field_contained_by"
      ]
    ]
  ],
  "test_float_range": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQueryingWithRanges",
        "test_float_range"
      ]
    ]
  ],
  "test_small_auto_field_contained_by": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQueryingWithRanges",
        "test_small_auto_field_contained_by"
      ]
    ]
  ],
  "test_auto_field_contained_by": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQueryingWithRanges",
        "test_auto_field_contained_by"
      ]
    ]
  ],
  "test_big_auto_field_contained_by": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQueryingWithRanges",
        "test_big_auto_field_contained_by"
      ]
    ]
  ],
  "test_f_ranges": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestQueryingWithRanges",
        "test_f_ranges"
      ]
    ]
  ],
  "test_serialize_range_with_null": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestSerialization",
        "test_serialize_range_with_null"
      ]
    ]
  ],
  "test_max": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestValidators",
        "test_max"
      ]
    ]
  ],
  "test_min": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestValidators",
        "test_min"
      ]
    ]
  ],
  "test_valid_integer": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_valid_integer"
      ]
    ]
  ],
  "test_valid_decimal": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_valid_decimal"
      ]
    ]
  ],
  "test_valid_timestamps": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_valid_timestamps"
      ]
    ]
  ],
  "test_valid_dates": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_valid_dates"
      ]
    ]
  ],
  "test_using_split_datetime_widget": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_using_split_datetime_widget"
      ]
    ]
  ],
  "test_datetime_form_as_table": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_datetime_form_as_table"
      ]
    ]
  ],
  "test_datetime_form_initial_data": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_datetime_form_initial_data"
      ]
    ]
  ],
  "test_integer_lower_bound_higher": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_integer_lower_bound_higher"
      ]
    ]
  ],
  "test_integer_open": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_integer_open"
      ]
    ]
  ],
  "test_integer_incorrect_data_type": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_integer_incorrect_data_type"
      ]
    ]
  ],
  "test_integer_invalid_lower": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_integer_invalid_lower"
      ]
    ]
  ],
  "test_integer_invalid_upper": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_integer_invalid_upper"
      ]
    ]
  ],
  "test_integer_required": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_integer_required"
      ]
    ]
  ],
  "test_decimal_lower_bound_higher": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_decimal_lower_bound_higher"
      ]
    ]
  ],
  "test_decimal_open": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_decimal_open"
      ]
    ]
  ],
  "test_decimal_incorrect_data_type": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_decimal_incorrect_data_type"
      ]
    ]
  ],
  "test_decimal_invalid_lower": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_decimal_invalid_lower"
      ]
    ]
  ],
  "test_decimal_invalid_upper": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_decimal_invalid_upper"
      ]
    ]
  ],
  "test_decimal_required": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_decimal_required"
      ]
    ]
  ],
  "test_date_lower_bound_higher": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_date_lower_bound_higher"
      ]
    ]
  ],
  "test_date_open": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_date_open"
      ]
    ]
  ],
  "test_date_incorrect_data_type": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_date_incorrect_data_type"
      ]
    ]
  ],
  "test_date_invalid_lower": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_date_invalid_lower"
      ]
    ]
  ],
  "test_date_invalid_upper": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_date_invalid_upper"
      ]
    ]
  ],
  "test_date_required": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_date_required"
      ]
    ]
  ],
  "test_date_has_changed_first": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_date_has_changed_first"
      ]
    ]
  ],
  "test_date_has_changed_last": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_date_has_changed_last"
      ]
    ]
  ],
  "test_datetime_lower_bound_higher": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_datetime_lower_bound_higher"
      ]
    ]
  ],
  "test_datetime_open": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_datetime_open"
      ]
    ]
  ],
  "test_datetime_incorrect_data_type": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_datetime_incorrect_data_type"
      ]
    ]
  ],
  "test_datetime_invalid_lower": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_datetime_invalid_lower"
      ]
    ]
  ],
  "test_datetime_invalid_upper": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_datetime_invalid_upper"
      ]
    ]
  ],
  "test_datetime_required": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_datetime_required"
      ]
    ]
  ],
  "test_datetime_prepare_value": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_datetime_prepare_value"
      ]
    ]
  ],
  "test_datetime_has_changed_first": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_datetime_has_changed_first"
      ]
    ]
  ],
  "test_datetime_has_changed_last": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_datetime_has_changed_last"
      ]
    ]
  ],
  "test_model_field_formfield_integer": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_model_field_formfield_integer"
      ]
    ]
  ],
  "test_model_field_formfield_biginteger": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_model_field_formfield_biginteger"
      ]
    ]
  ],
  "test_model_field_formfield_float": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_model_field_formfield_float"
      ]
    ]
  ],
  "test_model_field_formfield_date": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_model_field_formfield_date"
      ]
    ]
  ],
  "test_model_field_formfield_datetime": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestFormField",
        "test_model_field_formfield_datetime"
      ]
    ]
  ],
  "test_range_widget": [
    [
      "tests/postgres_tests/test_ranges.py",
      [
        "TestWidget",
        "test_range_widget"
      ]
    ]
  ],
  "test_non_exact_match": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "SimpleSearchTest",
        "test_non_exact_match"
      ]
    ],
    [
      "tests/postgres_tests/test_search.py",
      [
        "MultipleFieldsTest",
        "test_non_exact_match"
      ]
    ]
  ],
  "test_search_two_terms": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "SimpleSearchTest",
        "test_search_two_terms"
      ]
    ],
    [
      "tests/postgres_tests/test_search.py",
      [
        "MultipleFieldsTest",
        "test_search_two_terms"
      ]
    ]
  ],
  "test_search_two_terms_with_partial_match": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "SimpleSearchTest",
        "test_search_two_terms_with_partial_match"
      ]
    ]
  ],
  "test_search_query_config": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "SimpleSearchTest",
        "test_search_query_config"
      ]
    ]
  ],
  "test_search_with_F_expression": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "SimpleSearchTest",
        "test_search_with_F_expression"
      ]
    ]
  ],
  "test_existing_vector": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "SearchVectorFieldTest",
        "test_existing_vector"
      ]
    ]
  ],
  "test_existing_vector_config_explicit": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "SearchVectorFieldTest",
        "test_existing_vector_config_explicit"
      ]
    ]
  ],
  "test_single_coalesce_expression": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "SearchVectorFieldTest",
        "test_single_coalesce_expression"
      ]
    ]
  ],
  "test_from_parameter": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "SearchConfigTests",
        "test_from_parameter"
      ]
    ]
  ],
  "test_simple_on_dialogue": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "MultipleFieldsTest",
        "test_simple_on_dialogue"
      ]
    ]
  ],
  "test_simple_on_scene": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "MultipleFieldsTest",
        "test_simple_on_scene"
      ]
    ]
  ],
  "test_terms_adjacent": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "MultipleFieldsTest",
        "test_terms_adjacent"
      ]
    ]
  ],
  "test_search_with_null": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "MultipleFieldsTest",
        "test_search_with_null"
      ]
    ]
  ],
  "test_search_with_non_text": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "MultipleFieldsTest",
        "test_search_with_non_text"
      ]
    ]
  ],
  "test_phrase_search": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "MultipleFieldsTest",
        "test_phrase_search"
      ]
    ]
  ],
  "test_phrase_search_with_config": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "MultipleFieldsTest",
        "test_phrase_search_with_config"
      ]
    ]
  ],
  "test_raw_search": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "MultipleFieldsTest",
        "test_raw_search"
      ]
    ]
  ],
  "test_raw_search_with_config": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "MultipleFieldsTest",
        "test_raw_search_with_config"
      ]
    ]
  ],
  "test_web_search": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "MultipleFieldsTest",
        "test_web_search"
      ]
    ]
  ],
  "test_web_search_with_config": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "MultipleFieldsTest",
        "test_web_search_with_config"
      ]
    ]
  ],
  "test_bad_search_type": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "MultipleFieldsTest",
        "test_bad_search_type"
      ]
    ]
  ],
  "test_config_query_explicit": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "MultipleFieldsTest",
        "test_config_query_explicit"
      ]
    ]
  ],
  "test_config_query_implicit": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "MultipleFieldsTest",
        "test_config_query_implicit"
      ]
    ]
  ],
  "test_config_from_field_explicit": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "MultipleFieldsTest",
        "test_config_from_field_explicit"
      ]
    ]
  ],
  "test_config_from_field_implicit": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "MultipleFieldsTest",
        "test_config_from_field_implicit"
      ]
    ]
  ],
  "test_vector_add": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "TestCombinations",
        "test_vector_add"
      ]
    ]
  ],
  "test_vector_add_multi": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "TestCombinations",
        "test_vector_add_multi"
      ]
    ]
  ],
  "test_vector_combined_mismatch": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "TestCombinations",
        "test_vector_combined_mismatch"
      ]
    ]
  ],
  "test_combine_different_vector_configs": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "TestCombinations",
        "test_combine_different_vector_configs"
      ]
    ]
  ],
  "test_query_and": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "TestCombinations",
        "test_query_and"
      ]
    ]
  ],
  "test_query_multiple_and": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "TestCombinations",
        "test_query_multiple_and"
      ]
    ]
  ],
  "test_query_or": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "TestCombinations",
        "test_query_or"
      ]
    ]
  ],
  "test_query_multiple_or": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "TestCombinations",
        "test_query_multiple_or"
      ]
    ]
  ],
  "test_query_invert": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "TestCombinations",
        "test_query_invert"
      ]
    ]
  ],
  "test_combine_different_configs": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "TestCombinations",
        "test_combine_different_configs"
      ]
    ]
  ],
  "test_combined_configs": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "TestCombinations",
        "test_combined_configs"
      ]
    ]
  ],
  "test_combine_raw_phrase": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "TestCombinations",
        "test_combine_raw_phrase"
      ]
    ]
  ],
  "test_query_combined_mismatch": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "TestCombinations",
        "test_query_combined_mismatch"
      ]
    ]
  ],
  "test_ranking": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "TestRankingAndWeights",
        "test_ranking"
      ]
    ]
  ],
  "test_rank_passing_untyped_args": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "TestRankingAndWeights",
        "test_rank_passing_untyped_args"
      ]
    ]
  ],
  "test_weights_in_vector": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "TestRankingAndWeights",
        "test_weights_in_vector"
      ]
    ]
  ],
  "test_ranked_custom_weights": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "TestRankingAndWeights",
        "test_ranked_custom_weights"
      ]
    ]
  ],
  "test_ranking_chaining": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "TestRankingAndWeights",
        "test_ranking_chaining"
      ]
    ]
  ],
  "test_cover_density_ranking": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "TestRankingAndWeights",
        "test_cover_density_ranking"
      ]
    ]
  ],
  "test_ranking_with_normalization": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "TestRankingAndWeights",
        "test_ranking_with_normalization"
      ]
    ]
  ],
  "test_ranking_with_masked_normalization": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "TestRankingAndWeights",
        "test_ranking_with_masked_normalization"
      ]
    ]
  ],
  "test_search_vector_index": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "SearchVectorIndexTests",
        "test_search_vector_index"
      ]
    ]
  ],
  "test_headline": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "SearchHeadlineTests",
        "test_headline"
      ]
    ]
  ],
  "test_headline_untyped_args": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "SearchHeadlineTests",
        "test_headline_untyped_args"
      ]
    ]
  ],
  "test_headline_with_config": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "SearchHeadlineTests",
        "test_headline_with_config"
      ]
    ]
  ],
  "test_headline_with_config_from_field": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "SearchHeadlineTests",
        "test_headline_with_config_from_field"
      ]
    ]
  ],
  "test_headline_separator_options": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "SearchHeadlineTests",
        "test_headline_separator_options"
      ]
    ]
  ],
  "test_headline_highlight_all_option": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "SearchHeadlineTests",
        "test_headline_highlight_all_option"
      ]
    ]
  ],
  "test_headline_short_word_option": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "SearchHeadlineTests",
        "test_headline_short_word_option"
      ]
    ]
  ],
  "test_headline_fragments_words_options": [
    [
      "tests/postgres_tests/test_search.py",
      [
        "SearchHeadlineTests",
        "test_headline_fragments_words_options"
      ]
    ]
  ],
  "assertOIDs": [
    [
      "tests/postgres_tests/test_signals.py",
      [
        "OIDTests",
        "assertOIDs"
      ]
    ]
  ],
  "test_hstore_cache": [
    [
      "tests/postgres_tests/test_signals.py",
      [
        "OIDTests",
        "test_hstore_cache"
      ]
    ]
  ],
  "test_citext_cache": [
    [
      "tests/postgres_tests/test_signals.py",
      [
        "OIDTests",
        "test_citext_cache"
      ]
    ]
  ],
  "test_hstore_values": [
    [
      "tests/postgres_tests/test_signals.py",
      [
        "OIDTests",
        "test_hstore_values"
      ]
    ]
  ],
  "test_citext_values": [
    [
      "tests/postgres_tests/test_signals.py",
      [
        "OIDTests",
        "test_citext_values"
      ]
    ]
  ],
  "test_register_type_handlers_no_db": [
    [
      "tests/postgres_tests/test_signals.py",
      [
        "OIDTests",
        "test_register_type_handlers_no_db"
      ]
    ]
  ],
  "test_trigram_search": [
    [
      "tests/postgres_tests/test_trigram.py",
      [
        "TrigramTest",
        "test_trigram_search"
      ]
    ]
  ],
  "test_trigram_similarity": [
    [
      "tests/postgres_tests/test_trigram.py",
      [
        "TrigramTest",
        "test_trigram_similarity"
      ]
    ]
  ],
  "test_trigram_similarity_alternate": [
    [
      "tests/postgres_tests/test_trigram.py",
      [
        "TrigramTest",
        "test_trigram_similarity_alternate"
      ]
    ]
  ],
  "test_unaccent": [
    [
      "tests/postgres_tests/test_unaccent.py",
      [
        "UnaccentTest",
        "test_unaccent"
      ]
    ]
  ],
  "test_unaccent_chained": [
    [
      "tests/postgres_tests/test_unaccent.py",
      [
        "UnaccentTest",
        "test_unaccent_chained"
      ]
    ]
  ],
  "test_unaccent_with_conforming_strings_off": [
    [
      "tests/postgres_tests/test_unaccent.py",
      [
        "UnaccentTest",
        "test_unaccent_with_conforming_strings_off"
      ]
    ]
  ],
  "test_unaccent_accentuated_needle": [
    [
      "tests/postgres_tests/test_unaccent.py",
      [
        "UnaccentTest",
        "test_unaccent_accentuated_needle"
      ]
    ]
  ],
  "primary_house": [
    [
      "tests/prefetch_related/models.py",
      [
        "Person",
        "primary_house"
      ]
    ]
  ],
  "all_houses": [
    [
      "tests/prefetch_related/models.py",
      [
        "Person",
        "all_houses"
      ]
    ]
  ],
  "cached_all_houses": [
    [
      "tests/prefetch_related/models.py",
      [
        "Person",
        "cached_all_houses"
      ]
    ]
  ],
  "test_unknown": [
    [
      "tests/prefetch_related/test_prefetch_related_objects.py",
      [
        "PrefetchRelatedObjectsTests",
        "test_unknown"
      ]
    ]
  ],
  "test_m2m_forward": [
    [
      "tests/prefetch_related/test_prefetch_related_objects.py",
      [
        "PrefetchRelatedObjectsTests",
        "test_m2m_forward"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "PrefetchRelatedTests",
        "test_m2m_forward"
      ]
    ]
  ],
  "test_m2m_reverse": [
    [
      "tests/prefetch_related/test_prefetch_related_objects.py",
      [
        "PrefetchRelatedObjectsTests",
        "test_m2m_reverse"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "PrefetchRelatedTests",
        "test_m2m_reverse"
      ]
    ]
  ],
  "test_foreignkey_forward": [
    [
      "tests/prefetch_related/test_prefetch_related_objects.py",
      [
        "PrefetchRelatedObjectsTests",
        "test_foreignkey_forward"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "PrefetchRelatedTests",
        "test_foreignkey_forward"
      ]
    ]
  ],
  "test_foreignkey_reverse": [
    [
      "tests/prefetch_related/test_prefetch_related_objects.py",
      [
        "PrefetchRelatedObjectsTests",
        "test_foreignkey_reverse"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "PrefetchRelatedTests",
        "test_foreignkey_reverse"
      ]
    ]
  ],
  "test_m2m_then_m2m": [
    [
      "tests/prefetch_related/test_prefetch_related_objects.py",
      [
        "PrefetchRelatedObjectsTests",
        "test_m2m_then_m2m"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "PrefetchRelatedTests",
        "test_m2m_then_m2m"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "DefaultManagerTests",
        "test_m2m_then_m2m"
      ]
    ]
  ],
  "test_prefetch_object": [
    [
      "tests/prefetch_related/test_prefetch_related_objects.py",
      [
        "PrefetchRelatedObjectsTests",
        "test_prefetch_object"
      ]
    ]
  ],
  "test_prefetch_object_to_attr": [
    [
      "tests/prefetch_related/test_prefetch_related_objects.py",
      [
        "PrefetchRelatedObjectsTests",
        "test_prefetch_object_to_attr"
      ]
    ]
  ],
  "test_prefetch_queryset": [
    [
      "tests/prefetch_related/test_prefetch_related_objects.py",
      [
        "PrefetchRelatedObjectsTests",
        "test_prefetch_queryset"
      ]
    ]
  ],
  "test_prefetch_related_from_uuid_model": [
    [
      "tests/prefetch_related/test_uuid.py",
      [
        "UUIDPrefetchRelated",
        "test_prefetch_related_from_uuid_model"
      ]
    ]
  ],
  "test_prefetch_related_to_uuid_model": [
    [
      "tests/prefetch_related/test_uuid.py",
      [
        "UUIDPrefetchRelated",
        "test_prefetch_related_to_uuid_model"
      ]
    ]
  ],
  "test_prefetch_related_from_uuid_model_to_uuid_model": [
    [
      "tests/prefetch_related/test_uuid.py",
      [
        "UUIDPrefetchRelated",
        "test_prefetch_related_from_uuid_model_to_uuid_model"
      ]
    ]
  ],
  "test_prefetch_related_from_uuid_model_to_uuid_model_with_values_flat": [
    [
      "tests/prefetch_related/test_uuid.py",
      [
        "UUIDPrefetchRelated",
        "test_prefetch_related_from_uuid_model_to_uuid_model_with_values_flat"
      ]
    ]
  ],
  "test_from_uuid_pk_lookup_uuid_pk_integer_pk": [
    [
      "tests/prefetch_related/test_uuid.py",
      [
        "UUIDPrefetchRelatedLookups",
        "test_from_uuid_pk_lookup_uuid_pk_integer_pk"
      ]
    ]
  ],
  "test_from_uuid_pk_lookup_integer_pk2_uuid_pk2": [
    [
      "tests/prefetch_related/test_uuid.py",
      [
        "UUIDPrefetchRelatedLookups",
        "test_from_uuid_pk_lookup_integer_pk2_uuid_pk2"
      ]
    ]
  ],
  "test_from_integer_pk_lookup_uuid_pk_integer_pk": [
    [
      "tests/prefetch_related/test_uuid.py",
      [
        "UUIDPrefetchRelatedLookups",
        "test_from_integer_pk_lookup_uuid_pk_integer_pk"
      ]
    ]
  ],
  "test_from_integer_pk_lookup_integer_pk_uuid_pk": [
    [
      "tests/prefetch_related/test_uuid.py",
      [
        "UUIDPrefetchRelatedLookups",
        "test_from_integer_pk_lookup_integer_pk_uuid_pk"
      ]
    ]
  ],
  "test_from_integer_pk_lookup_integer_pk_uuid_pk_uuid_pk": [
    [
      "tests/prefetch_related/test_uuid.py",
      [
        "UUIDPrefetchRelatedLookups",
        "test_from_integer_pk_lookup_integer_pk_uuid_pk_uuid_pk"
      ]
    ]
  ],
  "assertWhereContains": [
    [
      "tests/prefetch_related/tests.py",
      [
        "PrefetchRelatedTests",
        "assertWhereContains"
      ]
    ]
  ],
  "test_onetoone_reverse_no_match": [
    [
      "tests/prefetch_related/tests.py",
      [
        "PrefetchRelatedTests",
        "test_onetoone_reverse_no_match"
      ]
    ]
  ],
  "test_onetoone_reverse_with_to_field_pk": [
    [
      "tests/prefetch_related/tests.py",
      [
        "PrefetchRelatedTests",
        "test_onetoone_reverse_with_to_field_pk"
      ]
    ]
  ],
  "test_survives_clone": [
    [
      "tests/prefetch_related/tests.py",
      [
        "PrefetchRelatedTests",
        "test_survives_clone"
      ]
    ]
  ],
  "test_bool": [
    [
      "tests/prefetch_related/tests.py",
      [
        "PrefetchRelatedTests",
        "test_bool"
      ]
    ],
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "test_bool"
      ]
    ],
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "OrderedSetTests",
        "test_bool"
      ]
    ],
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase",
        "test_bool"
      ]
    ],
    [
      "tests/utils_tests/test_tree.py",
      [
        "NodeTests",
        "test_bool"
      ]
    ]
  ],
  "test_in_and_prefetch_related": [
    [
      "tests/prefetch_related/tests.py",
      [
        "PrefetchRelatedTests",
        "test_in_and_prefetch_related"
      ]
    ]
  ],
  "test_overriding_prefetch": [
    [
      "tests/prefetch_related/tests.py",
      [
        "PrefetchRelatedTests",
        "test_overriding_prefetch"
      ]
    ]
  ],
  "test_foreign_key_then_m2m": [
    [
      "tests/prefetch_related/tests.py",
      [
        "PrefetchRelatedTests",
        "test_foreign_key_then_m2m"
      ]
    ]
  ],
  "test_reverse_one_to_one_then_m2m": [
    [
      "tests/prefetch_related/tests.py",
      [
        "PrefetchRelatedTests",
        "test_reverse_one_to_one_then_m2m"
      ]
    ]
  ],
  "test_invalid_final_lookup": [
    [
      "tests/prefetch_related/tests.py",
      [
        "PrefetchRelatedTests",
        "test_invalid_final_lookup"
      ]
    ]
  ],
  "test_prefetch_eq": [
    [
      "tests/prefetch_related/tests.py",
      [
        "PrefetchRelatedTests",
        "test_prefetch_eq"
      ]
    ]
  ],
  "test_forward_m2m_to_attr_conflict": [
    [
      "tests/prefetch_related/tests.py",
      [
        "PrefetchRelatedTests",
        "test_forward_m2m_to_attr_conflict"
      ]
    ]
  ],
  "test_reverse_m2m_to_attr_conflict": [
    [
      "tests/prefetch_related/tests.py",
      [
        "PrefetchRelatedTests",
        "test_reverse_m2m_to_attr_conflict"
      ]
    ]
  ],
  "test_m2m_then_reverse_fk_object_ids": [
    [
      "tests/prefetch_related/tests.py",
      [
        "PrefetchRelatedTests",
        "test_m2m_then_reverse_fk_object_ids"
      ]
    ]
  ],
  "test_m2m_then_m2m_object_ids": [
    [
      "tests/prefetch_related/tests.py",
      [
        "PrefetchRelatedTests",
        "test_m2m_then_m2m_object_ids"
      ]
    ]
  ],
  "test_m2m_then_reverse_one_to_one_object_ids": [
    [
      "tests/prefetch_related/tests.py",
      [
        "PrefetchRelatedTests",
        "test_m2m_then_reverse_one_to_one_object_ids"
      ]
    ]
  ],
  "test_filter_deferred": [
    [
      "tests/prefetch_related/tests.py",
      [
        "PrefetchRelatedTests",
        "test_filter_deferred"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "CustomPrefetchTests",
        "test_filter_deferred"
      ]
    ],
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_filter_deferred"
      ]
    ]
  ],
  "test_prefetch_before_raw": [
    [
      "tests/prefetch_related/tests.py",
      [
        "RawQuerySetTests",
        "test_prefetch_before_raw"
      ]
    ]
  ],
  "traverse_qs": [
    [
      "tests/prefetch_related/tests.py",
      [
        "CustomPrefetchTests",
        "traverse_qs"
      ]
    ]
  ],
  "test_traverse_qs": [
    [
      "tests/prefetch_related/tests.py",
      [
        "CustomPrefetchTests",
        "test_traverse_qs"
      ]
    ]
  ],
  "test_ambiguous": [
    [
      "tests/prefetch_related/tests.py",
      [
        "CustomPrefetchTests",
        "test_ambiguous"
      ]
    ]
  ],
  "test_reverse_m2m": [
    [
      "tests/prefetch_related/tests.py",
      [
        "CustomPrefetchTests",
        "test_reverse_m2m"
      ]
    ]
  ],
  "test_m2m_through_fk": [
    [
      "tests/prefetch_related/tests.py",
      [
        "CustomPrefetchTests",
        "test_m2m_through_fk"
      ]
    ]
  ],
  "test_m2m_through_gfk": [
    [
      "tests/prefetch_related/tests.py",
      [
        "CustomPrefetchTests",
        "test_m2m_through_gfk"
      ]
    ]
  ],
  "test_o2m_through_m2m": [
    [
      "tests/prefetch_related/tests.py",
      [
        "CustomPrefetchTests",
        "test_o2m_through_m2m"
      ]
    ]
  ],
  "test_generic_rel": [
    [
      "tests/prefetch_related/tests.py",
      [
        "CustomPrefetchTests",
        "test_generic_rel"
      ]
    ]
  ],
  "test_traverse_single_item_property": [
    [
      "tests/prefetch_related/tests.py",
      [
        "CustomPrefetchTests",
        "test_traverse_single_item_property"
      ]
    ]
  ],
  "test_traverse_multiple_items_property": [
    [
      "tests/prefetch_related/tests.py",
      [
        "CustomPrefetchTests",
        "test_traverse_multiple_items_property"
      ]
    ]
  ],
  "test_custom_qs": [
    [
      "tests/prefetch_related/tests.py",
      [
        "CustomPrefetchTests",
        "test_custom_qs"
      ]
    ]
  ],
  "test_nested_prefetch_related_are_not_overwritten": [
    [
      "tests/prefetch_related/tests.py",
      [
        "CustomPrefetchTests",
        "test_nested_prefetch_related_are_not_overwritten"
      ]
    ]
  ],
  "test_nested_prefetch_related_with_duplicate_prefetcher": [
    [
      "tests/prefetch_related/tests.py",
      [
        "CustomPrefetchTests",
        "test_nested_prefetch_related_with_duplicate_prefetcher"
      ]
    ]
  ],
  "test_values_queryset": [
    [
      "tests/prefetch_related/tests.py",
      [
        "CustomPrefetchTests",
        "test_values_queryset"
      ]
    ]
  ],
  "test_raw_queryset": [
    [
      "tests/prefetch_related/tests.py",
      [
        "CustomPrefetchTests",
        "test_raw_queryset"
      ]
    ]
  ],
  "test_to_attr_doesnt_cache_through_attr_as_list": [
    [
      "tests/prefetch_related/tests.py",
      [
        "CustomPrefetchTests",
        "test_to_attr_doesnt_cache_through_attr_as_list"
      ]
    ]
  ],
  "test_to_attr_cached_property": [
    [
      "tests/prefetch_related/tests.py",
      [
        "CustomPrefetchTests",
        "test_to_attr_cached_property"
      ]
    ]
  ],
  "test_prefetch_GFK": [
    [
      "tests/prefetch_related/tests.py",
      [
        "GenericRelationTests",
        "test_prefetch_GFK"
      ]
    ]
  ],
  "test_prefetch_GFK_nonint_pk": [
    [
      "tests/prefetch_related/tests.py",
      [
        "GenericRelationTests",
        "test_prefetch_GFK_nonint_pk"
      ]
    ]
  ],
  "test_prefetch_GFK_uuid_pk": [
    [
      "tests/prefetch_related/tests.py",
      [
        "GenericRelationTests",
        "test_prefetch_GFK_uuid_pk"
      ]
    ]
  ],
  "test_prefetch_GFK_fk_pk": [
    [
      "tests/prefetch_related/tests.py",
      [
        "GenericRelationTests",
        "test_prefetch_GFK_fk_pk"
      ]
    ]
  ],
  "test_traverse_GFK": [
    [
      "tests/prefetch_related/tests.py",
      [
        "GenericRelationTests",
        "test_traverse_GFK"
      ]
    ]
  ],
  "test_nullable_GFK": [
    [
      "tests/prefetch_related/tests.py",
      [
        "GenericRelationTests",
        "test_nullable_GFK"
      ]
    ]
  ],
  "test_charfield_GFK": [
    [
      "tests/prefetch_related/tests.py",
      [
        "GenericRelationTests",
        "test_charfield_GFK"
      ]
    ]
  ],
  "test_custom_queryset": [
    [
      "tests/prefetch_related/tests.py",
      [
        "GenericRelationTests",
        "test_custom_queryset"
      ]
    ]
  ],
  "test_foreignkey": [
    [
      "tests/prefetch_related/tests.py",
      [
        "MultiTableInheritanceTest",
        "test_foreignkey"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "ForeignKeyToFieldTest",
        "test_foreignkey"
      ]
    ]
  ],
  "test_foreignkey_to_inherited": [
    [
      "tests/prefetch_related/tests.py",
      [
        "MultiTableInheritanceTest",
        "test_foreignkey_to_inherited"
      ]
    ]
  ],
  "test_m2m_to_inheriting_model": [
    [
      "tests/prefetch_related/tests.py",
      [
        "MultiTableInheritanceTest",
        "test_m2m_to_inheriting_model"
      ]
    ]
  ],
  "test_parent_link_prefetch": [
    [
      "tests/prefetch_related/tests.py",
      [
        "MultiTableInheritanceTest",
        "test_parent_link_prefetch"
      ]
    ]
  ],
  "test_child_link_prefetch": [
    [
      "tests/prefetch_related/tests.py",
      [
        "MultiTableInheritanceTest",
        "test_child_link_prefetch"
      ]
    ]
  ],
  "test_order": [
    [
      "tests/prefetch_related/tests.py",
      [
        "LookupOrderingTest",
        "test_order"
      ]
    ]
  ],
  "test_traverse_nullable": [
    [
      "tests/prefetch_related/tests.py",
      [
        "NullableTest",
        "test_traverse_nullable"
      ]
    ]
  ],
  "test_prefetch_nullable": [
    [
      "tests/prefetch_related/tests.py",
      [
        "NullableTest",
        "test_prefetch_nullable"
      ]
    ]
  ],
  "test_using_is_honored_m2m": [
    [
      "tests/prefetch_related/tests.py",
      [
        "MultiDbTests",
        "test_using_is_honored_m2m"
      ]
    ]
  ],
  "test_using_is_honored_fkey": [
    [
      "tests/prefetch_related/tests.py",
      [
        "MultiDbTests",
        "test_using_is_honored_fkey"
      ]
    ]
  ],
  "test_using_is_honored_inheritance": [
    [
      "tests/prefetch_related/tests.py",
      [
        "MultiDbTests",
        "test_using_is_honored_inheritance"
      ]
    ]
  ],
  "test_using_is_honored_custom_qs": [
    [
      "tests/prefetch_related/tests.py",
      [
        "MultiDbTests",
        "test_using_is_honored_custom_qs"
      ]
    ]
  ],
  "test_bug": [
    [
      "tests/prefetch_related/tests.py",
      [
        "Ticket19607Tests",
        "test_bug"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "Ticket21410Tests",
        "test_bug"
      ]
    ],
    [
      "tests/prefetch_related/tests.py",
      [
        "Ticket21760Tests",
        "test_bug"
      ]
    ]
  ],
  "test_detect_is_fetched": [
    [
      "tests/prefetch_related/tests.py",
      [
        "DirectPrefetchedObjectCacheReuseTests",
        "test_detect_is_fetched"
      ]
    ]
  ],
  "test_detect_is_fetched_with_to_attr": [
    [
      "tests/prefetch_related/tests.py",
      [
        "DirectPrefetchedObjectCacheReuseTests",
        "test_detect_is_fetched_with_to_attr"
      ]
    ]
  ],
  "test_prefetch_reverse_foreign_key": [
    [
      "tests/prefetch_related/tests.py",
      [
        "DirectPrefetchedObjectCacheReuseTests",
        "test_prefetch_reverse_foreign_key"
      ]
    ]
  ],
  "test_add_clears_prefetched_objects": [
    [
      "tests/prefetch_related/tests.py",
      [
        "DirectPrefetchedObjectCacheReuseTests",
        "test_add_clears_prefetched_objects"
      ]
    ]
  ],
  "test_remove_clears_prefetched_objects": [
    [
      "tests/prefetch_related/tests.py",
      [
        "DirectPrefetchedObjectCacheReuseTests",
        "test_remove_clears_prefetched_objects"
      ]
    ]
  ],
  "test_retrieves_results_from_prefetched_objects_cache": [
    [
      "tests/prefetch_related/tests.py",
      [
        "ReadPrefetchedObjectsCacheTests",
        "test_retrieves_results_from_prefetched_objects_cache"
      ]
    ]
  ],
  "test_middleware_headers": [
    [
      "tests/project_template/test_settings.py",
      [
        "TestStartProjectSettings",
        "test_middleware_headers"
      ]
    ]
  ],
  "_set_full_name": [
    [
      "tests/properties/models.py",
      [
        "Person",
        "_set_full_name"
      ]
    ]
  ],
  "test_table_exists": [
    [
      "tests/proxy_model_inheritance/tests.py",
      [
        "ProxyModelInheritanceTests",
        "test_table_exists"
      ]
    ]
  ],
  "test_model_subclass_proxy": [
    [
      "tests/proxy_model_inheritance/tests.py",
      [
        "MultiTableInheritanceProxyTest",
        "test_model_subclass_proxy"
      ]
    ]
  ],
  "test_deletion_through_intermediate_proxy": [
    [
      "tests/proxy_model_inheritance/tests.py",
      [
        "MultiTableInheritanceProxyTest",
        "test_deletion_through_intermediate_proxy"
      ]
    ]
  ],
  "has_special_name": [
    [
      "tests/proxy_models/models.py",
      [
        "MyPerson",
        "has_special_name"
      ]
    ]
  ],
  "test_same_manager_queries": [
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelTests",
        "test_same_manager_queries"
      ]
    ]
  ],
  "test_inheritance_new_table": [
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelTests",
        "test_inheritance_new_table"
      ]
    ]
  ],
  "test_basic_proxy": [
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelTests",
        "test_basic_proxy"
      ]
    ]
  ],
  "test_no_proxy": [
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelTests",
        "test_no_proxy"
      ]
    ]
  ],
  "test_basic_proxy_reverse": [
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelTests",
        "test_basic_proxy_reverse"
      ]
    ]
  ],
  "test_correct_type_proxy_of_proxy": [
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelTests",
        "test_correct_type_proxy_of_proxy"
      ]
    ]
  ],
  "test_proxy_included_in_ancestors": [
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelTests",
        "test_proxy_included_in_ancestors"
      ]
    ]
  ],
  "test_abstract_base_with_model_fields": [
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelTests",
        "test_abstract_base_with_model_fields"
      ]
    ]
  ],
  "test_too_many_concrete_classes": [
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelTests",
        "test_too_many_concrete_classes"
      ]
    ]
  ],
  "test_no_base_classes": [
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelTests",
        "test_no_base_classes"
      ]
    ]
  ],
  "test_new_fields": [
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelTests",
        "test_new_fields"
      ]
    ]
  ],
  "test_myperson_manager": [
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelTests",
        "test_myperson_manager"
      ]
    ]
  ],
  "test_otherperson_manager": [
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelTests",
        "test_otherperson_manager"
      ]
    ]
  ],
  "test_permissions_created": [
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelTests",
        "test_permissions_created"
      ]
    ]
  ],
  "make_handler": [
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelTests",
        "test_proxy_model_signals",
        "make_handler"
      ]
    ]
  ],
  "test_proxy_model_signals": [
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelTests",
        "test_proxy_model_signals"
      ]
    ]
  ],
  "test_user_proxy_models": [
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelTests",
        "test_user_proxy_models"
      ]
    ]
  ],
  "test_proxy_for_model": [
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelTests",
        "test_proxy_for_model"
      ]
    ]
  ],
  "test_concrete_model": [
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelTests",
        "test_concrete_model"
      ]
    ]
  ],
  "test_proxy_delete": [
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelTests",
        "test_proxy_delete"
      ]
    ]
  ],
  "test_proxy_update": [
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelTests",
        "test_proxy_update"
      ]
    ]
  ],
  "test_filter_proxy_relation_reverse": [
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelTests",
        "test_filter_proxy_relation_reverse"
      ]
    ]
  ],
  "test_proxy_bug": [
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelTests",
        "test_proxy_bug"
      ]
    ]
  ],
  "test_proxy_load_from_fixture": [
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelTests",
        "test_proxy_load_from_fixture"
      ]
    ]
  ],
  "test_cascade_delete_proxy_model_admin_warning": [
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelAdminTests",
        "test_cascade_delete_proxy_model_admin_warning"
      ]
    ]
  ],
  "test_delete_str_in_model_admin": [
    [
      "tests/proxy_models/tests.py",
      [
        "ProxyModelAdminTests",
        "test_delete_str_in_model_admin"
      ]
    ]
  ],
  "create_tags": [
    [
      "tests/queries/test_bulk_update.py",
      [
        "BulkUpdateNoteTests",
        "create_tags"
      ]
    ]
  ],
  "test_multiple_fields": [
    [
      "tests/queries/test_bulk_update.py",
      [
        "BulkUpdateNoteTests",
        "test_multiple_fields"
      ]
    ],
    [
      "tests/queries/test_query.py",
      [
        "TestQuery",
        "test_multiple_fields"
      ]
    ]
  ],
  "test_batch_size": [
    [
      "tests/queries/test_bulk_update.py",
      [
        "BulkUpdateNoteTests",
        "test_batch_size"
      ]
    ]
  ],
  "test_unsaved_models": [
    [
      "tests/queries/test_bulk_update.py",
      [
        "BulkUpdateNoteTests",
        "test_unsaved_models"
      ]
    ]
  ],
  "test_foreign_keys_do_not_lookup": [
    [
      "tests/queries/test_bulk_update.py",
      [
        "BulkUpdateNoteTests",
        "test_foreign_keys_do_not_lookup"
      ]
    ]
  ],
  "test_set_field_to_null": [
    [
      "tests/queries/test_bulk_update.py",
      [
        "BulkUpdateNoteTests",
        "test_set_field_to_null"
      ]
    ]
  ],
  "test_set_mixed_fields_to_null": [
    [
      "tests/queries/test_bulk_update.py",
      [
        "BulkUpdateNoteTests",
        "test_set_mixed_fields_to_null"
      ]
    ]
  ],
  "test_no_fields": [
    [
      "tests/queries/test_bulk_update.py",
      [
        "BulkUpdateTests",
        "test_no_fields"
      ]
    ]
  ],
  "test_invalid_batch_size": [
    [
      "tests/queries/test_bulk_update.py",
      [
        "BulkUpdateTests",
        "test_invalid_batch_size"
      ]
    ]
  ],
  "test_update_primary_key": [
    [
      "tests/queries/test_bulk_update.py",
      [
        "BulkUpdateTests",
        "test_update_primary_key"
      ]
    ]
  ],
  "test_update_custom_primary_key": [
    [
      "tests/queries/test_bulk_update.py",
      [
        "BulkUpdateTests",
        "test_update_custom_primary_key"
      ]
    ]
  ],
  "test_empty_objects": [
    [
      "tests/queries/test_bulk_update.py",
      [
        "BulkUpdateTests",
        "test_empty_objects"
      ]
    ]
  ],
  "test_only_concrete_fields_allowed": [
    [
      "tests/queries/test_bulk_update.py",
      [
        "BulkUpdateTests",
        "test_only_concrete_fields_allowed"
      ]
    ]
  ],
  "test_custom_db_columns": [
    [
      "tests/queries/test_bulk_update.py",
      [
        "BulkUpdateTests",
        "test_custom_db_columns"
      ]
    ]
  ],
  "test_falsey_pk_value": [
    [
      "tests/queries/test_bulk_update.py",
      [
        "BulkUpdateTests",
        "test_falsey_pk_value"
      ]
    ]
  ],
  "test_field_references": [
    [
      "tests/queries/test_bulk_update.py",
      [
        "BulkUpdateTests",
        "test_field_references"
      ]
    ]
  ],
  "test_ipaddressfield": [
    [
      "tests/queries/test_bulk_update.py",
      [
        "BulkUpdateTests",
        "test_ipaddressfield"
      ]
    ]
  ],
  "test_insert_returning": [
    [
      "tests/queries/test_db_returning.py",
      [
        "ReturningValuesTests",
        "test_insert_returning"
      ]
    ]
  ],
  "test_insert_returning_non_integer": [
    [
      "tests/queries/test_db_returning.py",
      [
        "ReturningValuesTests",
        "test_insert_returning_non_integer"
      ]
    ]
  ],
  "test_insert_returning_multiple": [
    [
      "tests/queries/test_db_returning.py",
      [
        "ReturningValuesTests",
        "test_insert_returning_multiple"
      ]
    ]
  ],
  "test_bulk_insert": [
    [
      "tests/queries/test_db_returning.py",
      [
        "ReturningValuesTests",
        "test_bulk_insert"
      ]
    ]
  ],
  "assert_warns": [
    [
      "tests/queries/test_deprecation.py",
      [
        "InvalidQueryTests",
        "assert_warns"
      ]
    ]
  ],
  "test_type": [
    [
      "tests/queries/test_deprecation.py",
      [
        "InvalidQueryTests",
        "test_type"
      ]
    ]
  ],
  "test_isinstance": [
    [
      "tests/queries/test_deprecation.py",
      [
        "InvalidQueryTests",
        "test_isinstance"
      ]
    ]
  ],
  "test_issubclass": [
    [
      "tests/queries/test_deprecation.py",
      [
        "InvalidQueryTests",
        "test_issubclass"
      ]
    ]
  ],
  "test_unknown_options": [
    [
      "tests/queries/test_explain.py",
      [
        "ExplainTests",
        "test_unknown_options"
      ]
    ]
  ],
  "test_postgres_options": [
    [
      "tests/queries/test_explain.py",
      [
        "ExplainTests",
        "test_postgres_options"
      ]
    ]
  ],
  "test_mysql_text_to_traditional": [
    [
      "tests/queries/test_explain.py",
      [
        "ExplainTests",
        "test_mysql_text_to_traditional"
      ]
    ]
  ],
  "test_mysql_analyze": [
    [
      "tests/queries/test_explain.py",
      [
        "ExplainTests",
        "test_mysql_analyze"
      ]
    ]
  ],
  "test_mysql_extended": [
    [
      "tests/queries/test_explain.py",
      [
        "ExplainTests",
        "test_mysql_extended"
      ]
    ]
  ],
  "test_message": [
    [
      "tests/queries/test_explain.py",
      [
        "ExplainUnsupportedTests",
        "test_message"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "AssertURLEqualTests",
        "test_message"
      ]
    ]
  ],
  "test_iterator_invalid_chunk_size": [
    [
      "tests/queries/test_iterator.py",
      [
        "QuerySetIteratorTests",
        "test_iterator_invalid_chunk_size"
      ]
    ]
  ],
  "test_default_iterator_chunk_size": [
    [
      "tests/queries/test_iterator.py",
      [
        "QuerySetIteratorTests",
        "test_default_iterator_chunk_size"
      ]
    ]
  ],
  "test_iterator_chunk_size": [
    [
      "tests/queries/test_iterator.py",
      [
        "QuerySetIteratorTests",
        "test_iterator_chunk_size"
      ]
    ]
  ],
  "test_no_chunked_reads": [
    [
      "tests/queries/test_iterator.py",
      [
        "QuerySetIteratorTests",
        "test_no_chunked_reads"
      ]
    ]
  ],
  "test_combine_and_empty": [
    [
      "tests/queries/test_q.py",
      [
        "QTests",
        "test_combine_and_empty"
      ]
    ]
  ],
  "test_combine_and_both_empty": [
    [
      "tests/queries/test_q.py",
      [
        "QTests",
        "test_combine_and_both_empty"
      ]
    ]
  ],
  "test_combine_or_empty": [
    [
      "tests/queries/test_q.py",
      [
        "QTests",
        "test_combine_or_empty"
      ]
    ]
  ],
  "test_combine_or_both_empty": [
    [
      "tests/queries/test_q.py",
      [
        "QTests",
        "test_combine_or_both_empty"
      ]
    ]
  ],
  "test_combine_not_q_object": [
    [
      "tests/queries/test_q.py",
      [
        "QTests",
        "test_combine_not_q_object"
      ]
    ]
  ],
  "test_deconstruct_negated": [
    [
      "tests/queries/test_q.py",
      [
        "QTests",
        "test_deconstruct_negated"
      ]
    ]
  ],
  "test_deconstruct_or": [
    [
      "tests/queries/test_q.py",
      [
        "QTests",
        "test_deconstruct_or"
      ]
    ]
  ],
  "test_deconstruct_and": [
    [
      "tests/queries/test_q.py",
      [
        "QTests",
        "test_deconstruct_and"
      ]
    ]
  ],
  "test_deconstruct_multiple_kwargs": [
    [
      "tests/queries/test_q.py",
      [
        "QTests",
        "test_deconstruct_multiple_kwargs"
      ]
    ]
  ],
  "test_deconstruct_nested": [
    [
      "tests/queries/test_q.py",
      [
        "QTests",
        "test_deconstruct_nested"
      ]
    ]
  ],
  "test_reconstruct": [
    [
      "tests/queries/test_q.py",
      [
        "QTests",
        "test_reconstruct"
      ]
    ]
  ],
  "test_reconstruct_negated": [
    [
      "tests/queries/test_q.py",
      [
        "QTests",
        "test_reconstruct_negated"
      ]
    ]
  ],
  "test_reconstruct_or": [
    [
      "tests/queries/test_q.py",
      [
        "QTests",
        "test_reconstruct_or"
      ]
    ]
  ],
  "test_reconstruct_and": [
    [
      "tests/queries/test_q.py",
      [
        "QTests",
        "test_reconstruct_and"
      ]
    ]
  ],
  "number_transform": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "number_transform"
      ]
    ]
  ],
  "assertNumbersEqual": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "assertNumbersEqual"
      ]
    ]
  ],
  "test_simple_union": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "test_simple_union"
      ]
    ]
  ],
  "test_simple_intersection": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "test_simple_intersection"
      ]
    ]
  ],
  "test_intersection_with_values": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "test_intersection_with_values"
      ]
    ]
  ],
  "test_simple_difference": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "test_simple_difference"
      ]
    ]
  ],
  "test_union_distinct": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "test_union_distinct"
      ]
    ]
  ],
  "test_intersection_with_empty_qs": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "test_intersection_with_empty_qs"
      ]
    ]
  ],
  "test_difference_with_empty_qs": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "test_difference_with_empty_qs"
      ]
    ]
  ],
  "test_difference_with_values": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "test_difference_with_values"
      ]
    ]
  ],
  "test_union_with_empty_qs": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "test_union_with_empty_qs"
      ]
    ]
  ],
  "test_limits": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "test_limits"
      ]
    ]
  ],
  "test_ordering_by_f_expression": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "test_ordering_by_f_expression"
      ]
    ]
  ],
  "test_union_with_values": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "test_union_with_values"
      ]
    ]
  ],
  "test_union_with_two_annotated_values_list": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "test_union_with_two_annotated_values_list"
      ]
    ]
  ],
  "test_union_with_extra_and_values_list": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "test_union_with_extra_and_values_list"
      ]
    ]
  ],
  "test_union_with_values_list_on_annotated_and_unannotated": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "test_union_with_values_list_on_annotated_and_unannotated"
      ]
    ]
  ],
  "test_union_with_values_list_and_order": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "test_union_with_values_list_and_order"
      ]
    ]
  ],
  "test_count_union": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "test_count_union"
      ]
    ]
  ],
  "test_count_union_empty_result": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "test_count_union_empty_result"
      ]
    ]
  ],
  "test_count_difference": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "test_count_difference"
      ]
    ]
  ],
  "test_count_intersection": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "test_count_intersection"
      ]
    ]
  ],
  "test_ordering_subqueries": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "test_ordering_subqueries"
      ]
    ]
  ],
  "test_unsupported_ordering_slicing_raises_db_error": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "test_unsupported_ordering_slicing_raises_db_error"
      ]
    ]
  ],
  "test_unsupported_intersection_raises_db_error": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "test_unsupported_intersection_raises_db_error"
      ]
    ]
  ],
  "test_combining_multiple_models": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "test_combining_multiple_models"
      ]
    ]
  ],
  "test_order_raises_on_non_selected_column": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "test_order_raises_on_non_selected_column"
      ]
    ]
  ],
  "test_qs_with_subcompound_qs": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "test_qs_with_subcompound_qs"
      ]
    ]
  ],
  "test_order_by_same_type": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "test_order_by_same_type"
      ]
    ]
  ],
  "test_unsupported_operations_on_combined_qs": [
    [
      "tests/queries/test_qs_combinators.py",
      [
        "QuerySetSetOperationTests",
        "test_unsupported_operations_on_combined_qs"
      ]
    ]
  ],
  "test_simple_query": [
    [
      "tests/queries/test_query.py",
      [
        "TestQuery",
        "test_simple_query"
      ]
    ]
  ],
  "test_non_alias_cols_query": [
    [
      "tests/queries/test_query.py",
      [
        "TestQuery",
        "test_non_alias_cols_query"
      ]
    ]
  ],
  "test_complex_query": [
    [
      "tests/queries/test_query.py",
      [
        "TestQuery",
        "test_complex_query"
      ]
    ]
  ],
  "test_negated_nullable": [
    [
      "tests/queries/test_query.py",
      [
        "TestQuery",
        "test_negated_nullable"
      ]
    ]
  ],
  "test_foreign_key_f": [
    [
      "tests/queries/test_query.py",
      [
        "TestQuery",
        "test_foreign_key_f"
      ]
    ]
  ],
  "test_foreign_key_exclusive": [
    [
      "tests/queries/test_query.py",
      [
        "TestQuery",
        "test_foreign_key_exclusive"
      ]
    ]
  ],
  "test_clone_select_related": [
    [
      "tests/queries/test_query.py",
      [
        "TestQuery",
        "test_clone_select_related"
      ]
    ]
  ],
  "test_iterable_lookup_value": [
    [
      "tests/queries/test_query.py",
      [
        "TestQuery",
        "test_iterable_lookup_value"
      ]
    ]
  ],
  "test_filter_conditional": [
    [
      "tests/queries/test_query.py",
      [
        "TestQuery",
        "test_filter_conditional"
      ]
    ]
  ],
  "test_filter_conditional_join": [
    [
      "tests/queries/test_query.py",
      [
        "TestQuery",
        "test_filter_conditional_join"
      ]
    ]
  ],
  "test_filter_non_conditional": [
    [
      "tests/queries/test_query.py",
      [
        "TestQuery",
        "test_filter_non_conditional"
      ]
    ]
  ],
  "test_subquery_condition": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_subquery_condition"
      ]
    ]
  ],
  "test_ticket1050": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket1050"
      ]
    ]
  ],
  "test_ticket1801": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket1801"
      ]
    ]
  ],
  "test_ticket2306": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket2306"
      ]
    ]
  ],
  "test_ticket4464": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket4464"
      ]
    ]
  ],
  "test_tickets_2080_3592": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_tickets_2080_3592"
      ]
    ]
  ],
  "test_ticket6074": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket6074"
      ]
    ]
  ],
  "test_tickets_1878_2939": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_tickets_1878_2939"
      ]
    ]
  ],
  "test_ticket7323": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket7323"
      ]
    ]
  ],
  "test_ticket2253": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket2253"
      ]
    ]
  ],
  "test_order_by_tables": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_order_by_tables"
      ]
    ]
  ],
  "test_order_by_join_unref": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_order_by_join_unref"
      ]
    ]
  ],
  "test_get_clears_ordering": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_get_clears_ordering"
      ]
    ]
  ],
  "test_tickets_4088_4306": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_tickets_4088_4306"
      ]
    ]
  ],
  "test_ticket4510": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket4510"
      ]
    ]
  ],
  "test_ticket7378": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket7378"
      ]
    ]
  ],
  "test_tickets_5324_6704": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_tickets_5324_6704"
      ]
    ]
  ],
  "test_ticket2091": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket2091"
      ]
    ]
  ],
  "test_avoid_infinite_loop_on_too_many_subqueries": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_avoid_infinite_loop_on_too_many_subqueries"
      ]
    ]
  ],
  "test_reasonable_number_of_subq_aliases": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_reasonable_number_of_subq_aliases"
      ]
    ]
  ],
  "test_heterogeneous_qs_combination": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_heterogeneous_qs_combination"
      ]
    ]
  ],
  "test_ticket3141": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket3141"
      ]
    ]
  ],
  "test_ticket2400": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket2400"
      ]
    ]
  ],
  "test_ticket2496": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket2496"
      ]
    ]
  ],
  "test_error_raised_on_filter_with_dictionary": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_error_raised_on_filter_with_dictionary"
      ]
    ]
  ],
  "test_tickets_2076_7256": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_tickets_2076_7256"
      ]
    ]
  ],
  "test_tickets_2874_3002": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_tickets_2874_3002"
      ]
    ]
  ],
  "test_ticket3037": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket3037"
      ]
    ]
  ],
  "test_tickets_5321_7070": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_tickets_5321_7070"
      ]
    ]
  ],
  "test_ticket4358": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket4358"
      ]
    ]
  ],
  "test_ticket6154": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket6154"
      ]
    ]
  ],
  "test_ticket6981": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket6981"
      ]
    ]
  ],
  "test_ticket9926": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket9926"
      ]
    ]
  ],
  "test_tickets_6180_6203": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_tickets_6180_6203"
      ]
    ]
  ],
  "test_tickets_7087_12242": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_tickets_7087_12242"
      ]
    ]
  ],
  "test_ticket7155": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket7155"
      ]
    ]
  ],
  "test_ticket7098": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket7098"
      ]
    ]
  ],
  "test_order_by_rawsql": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_order_by_rawsql"
      ]
    ]
  ],
  "test_order_by_raw_column_alias_warning": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_order_by_raw_column_alias_warning"
      ]
    ]
  ],
  "test_ticket7096": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket7096"
      ]
    ]
  ],
  "test_tickets_7204_7506": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_tickets_7204_7506"
      ]
    ]
  ],
  "test_ticket7813": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket7813"
      ]
    ]
  ],
  "test_deferred_load_qs_pickling": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_deferred_load_qs_pickling"
      ]
    ]
  ],
  "test_ticket7277": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket7277"
      ]
    ]
  ],
  "test_tickets_7448_7707": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_tickets_7448_7707"
      ]
    ]
  ],
  "test_ticket7235": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket7235"
      ]
    ]
  ],
  "test_ticket7791": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket7791"
      ]
    ]
  ],
  "test_ticket9997": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket9997"
      ]
    ]
  ],
  "test_ticket9985": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket9985"
      ]
    ]
  ],
  "test_ticket10205": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket10205"
      ]
    ]
  ],
  "test_ticket10432": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket10432"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "GeneratorExpressionTests",
        "test_ticket10432"
      ]
    ]
  ],
  "test_ticket10742": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket10742"
      ]
    ]
  ],
  "test_ticket7076": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket7076"
      ]
    ]
  ],
  "test_ticket7181": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket7181"
      ]
    ]
  ],
  "test_ticket9411": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket9411"
      ]
    ]
  ],
  "test_ticket8439": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket8439"
      ]
    ]
  ],
  "test_ticket17429": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket17429"
      ]
    ]
  ],
  "test_nested_exclude": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_nested_exclude"
      ]
    ]
  ],
  "test_double_exclude": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_double_exclude"
      ]
    ],
    [
      "tests/queries/tests.py",
      [
        "NullInExcludeTest",
        "test_double_exclude"
      ]
    ]
  ],
  "test_exclude_in": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_exclude_in"
      ]
    ]
  ],
  "test_ticket_10790_1": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket_10790_1"
      ]
    ]
  ],
  "test_ticket_10790_2": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket_10790_2"
      ]
    ]
  ],
  "test_ticket_10790_3": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket_10790_3"
      ]
    ]
  ],
  "test_ticket_10790_4": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket_10790_4"
      ]
    ]
  ],
  "test_ticket_10790_5": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket_10790_5"
      ]
    ]
  ],
  "test_ticket_10790_6": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket_10790_6"
      ]
    ]
  ],
  "test_ticket_10790_7": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket_10790_7"
      ]
    ]
  ],
  "test_ticket_10790_8": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket_10790_8"
      ]
    ]
  ],
  "test_ticket_10790_combine": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket_10790_combine"
      ]
    ]
  ],
  "test_ticket19672": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket19672"
      ]
    ]
  ],
  "test_ticket_20250": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_ticket_20250"
      ]
    ]
  ],
  "test_lookup_constraint_fielderror": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_lookup_constraint_fielderror"
      ]
    ]
  ],
  "test_common_mixed_case_foreign_keys": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_common_mixed_case_foreign_keys"
      ]
    ]
  ],
  "test_excluded_intermediary_m2m_table_joined": [
    [
      "tests/queries/tests.py",
      [
        "Queries1Tests",
        "test_excluded_intermediary_m2m_table_joined"
      ]
    ]
  ],
  "test_ticket4289": [
    [
      "tests/queries/tests.py",
      [
        "Queries2Tests",
        "test_ticket4289"
      ]
    ]
  ],
  "test_ticket12239": [
    [
      "tests/queries/tests.py",
      [
        "Queries2Tests",
        "test_ticket12239"
      ]
    ]
  ],
  "test_ticket7759": [
    [
      "tests/queries/tests.py",
      [
        "Queries2Tests",
        "test_ticket7759"
      ]
    ]
  ],
  "test_ticket7107": [
    [
      "tests/queries/tests.py",
      [
        "Queries3Tests",
        "test_ticket7107"
      ]
    ]
  ],
  "test_ticket8683": [
    [
      "tests/queries/tests.py",
      [
        "Queries3Tests",
        "test_ticket8683"
      ]
    ]
  ],
  "test_ticket22023": [
    [
      "tests/queries/tests.py",
      [
        "Queries3Tests",
        "test_ticket22023"
      ]
    ]
  ],
  "test_ticket24525": [
    [
      "tests/queries/tests.py",
      [
        "Queries4Tests",
        "test_ticket24525"
      ]
    ]
  ],
  "test_ticket11811": [
    [
      "tests/queries/tests.py",
      [
        "Queries4Tests",
        "test_ticket11811"
      ]
    ]
  ],
  "test_ticket14876": [
    [
      "tests/queries/tests.py",
      [
        "Queries4Tests",
        "test_ticket14876"
      ]
    ]
  ],
  "test_combine_join_reuse": [
    [
      "tests/queries/tests.py",
      [
        "Queries4Tests",
        "test_combine_join_reuse"
      ]
    ]
  ],
  "test_join_reuse_order": [
    [
      "tests/queries/tests.py",
      [
        "Queries4Tests",
        "test_join_reuse_order"
      ]
    ]
  ],
  "test_ticket7095": [
    [
      "tests/queries/tests.py",
      [
        "Queries4Tests",
        "test_ticket7095"
      ]
    ]
  ],
  "test_order_by_resetting": [
    [
      "tests/queries/tests.py",
      [
        "Queries4Tests",
        "test_order_by_resetting"
      ]
    ]
  ],
  "test_order_by_reverse_fk": [
    [
      "tests/queries/tests.py",
      [
        "Queries4Tests",
        "test_order_by_reverse_fk"
      ]
    ]
  ],
  "test_filter_reverse_non_integer_pk": [
    [
      "tests/queries/tests.py",
      [
        "Queries4Tests",
        "test_filter_reverse_non_integer_pk"
      ]
    ]
  ],
  "test_ticket10181": [
    [
      "tests/queries/tests.py",
      [
        "Queries4Tests",
        "test_ticket10181"
      ]
    ]
  ],
  "test_ticket15316_filter_false": [
    [
      "tests/queries/tests.py",
      [
        "Queries4Tests",
        "test_ticket15316_filter_false"
      ]
    ]
  ],
  "test_ticket15316_exclude_false": [
    [
      "tests/queries/tests.py",
      [
        "Queries4Tests",
        "test_ticket15316_exclude_false"
      ]
    ]
  ],
  "test_ticket15316_filter_true": [
    [
      "tests/queries/tests.py",
      [
        "Queries4Tests",
        "test_ticket15316_filter_true"
      ]
    ]
  ],
  "test_ticket15316_exclude_true": [
    [
      "tests/queries/tests.py",
      [
        "Queries4Tests",
        "test_ticket15316_exclude_true"
      ]
    ]
  ],
  "test_ticket15316_one2one_filter_false": [
    [
      "tests/queries/tests.py",
      [
        "Queries4Tests",
        "test_ticket15316_one2one_filter_false"
      ]
    ]
  ],
  "test_ticket15316_one2one_exclude_false": [
    [
      "tests/queries/tests.py",
      [
        "Queries4Tests",
        "test_ticket15316_one2one_exclude_false"
      ]
    ]
  ],
  "test_ticket15316_one2one_filter_true": [
    [
      "tests/queries/tests.py",
      [
        "Queries4Tests",
        "test_ticket15316_one2one_filter_true"
      ]
    ]
  ],
  "test_ticket15316_one2one_exclude_true": [
    [
      "tests/queries/tests.py",
      [
        "Queries4Tests",
        "test_ticket15316_one2one_exclude_true"
      ]
    ]
  ],
  "test_ticket7256": [
    [
      "tests/queries/tests.py",
      [
        "Queries5Tests",
        "test_ticket7256"
      ]
    ]
  ],
  "test_ticket7045": [
    [
      "tests/queries/tests.py",
      [
        "Queries5Tests",
        "test_ticket7045"
      ]
    ]
  ],
  "test_ticket9848": [
    [
      "tests/queries/tests.py",
      [
        "Queries5Tests",
        "test_ticket9848"
      ]
    ]
  ],
  "test_ticket5261": [
    [
      "tests/queries/tests.py",
      [
        "Queries5Tests",
        "test_ticket5261"
      ]
    ]
  ],
  "test_extra_select_literal_percent_s": [
    [
      "tests/queries/tests.py",
      [
        "Queries5Tests",
        "test_extra_select_literal_percent_s"
      ]
    ]
  ],
  "test_tickets_3045_3288": [
    [
      "tests/queries/tests.py",
      [
        "SelectRelatedTests",
        "test_tickets_3045_3288"
      ]
    ]
  ],
  "test_ticket7778": [
    [
      "tests/queries/tests.py",
      [
        "SubclassFKTests",
        "test_ticket7778"
      ]
    ]
  ],
  "test_ticket7371": [
    [
      "tests/queries/tests.py",
      [
        "CustomPkTests",
        "test_ticket7371"
      ]
    ]
  ],
  "test_ticket10028": [
    [
      "tests/queries/tests.py",
      [
        "NullableRelOrderingTests",
        "test_ticket10028"
      ]
    ]
  ],
  "test_join_already_in_query": [
    [
      "tests/queries/tests.py",
      [
        "NullableRelOrderingTests",
        "test_join_already_in_query"
      ]
    ]
  ],
  "test_ticket7872": [
    [
      "tests/queries/tests.py",
      [
        "DisjunctiveFilterTests",
        "test_ticket7872"
      ]
    ]
  ],
  "test_ticket8283": [
    [
      "tests/queries/tests.py",
      [
        "DisjunctiveFilterTests",
        "test_ticket8283"
      ]
    ]
  ],
  "test_parallel_iterators": [
    [
      "tests/queries/tests.py",
      [
        "Queries6Tests",
        "test_parallel_iterators"
      ]
    ]
  ],
  "test_nested_queries_sql": [
    [
      "tests/queries/tests.py",
      [
        "Queries6Tests",
        "test_nested_queries_sql"
      ]
    ]
  ],
  "test_tickets_8921_9188": [
    [
      "tests/queries/tests.py",
      [
        "Queries6Tests",
        "test_tickets_8921_9188"
      ]
    ]
  ],
  "test_ticket3739": [
    [
      "tests/queries/tests.py",
      [
        "Queries6Tests",
        "test_ticket3739"
      ]
    ]
  ],
  "test_ticket_11320": [
    [
      "tests/queries/tests.py",
      [
        "Queries6Tests",
        "test_ticket_11320"
      ]
    ]
  ],
  "test_distinct_ordered_sliced_subquery_aggregation": [
    [
      "tests/queries/tests.py",
      [
        "Queries6Tests",
        "test_distinct_ordered_sliced_subquery_aggregation"
      ]
    ]
  ],
  "test_multiple_columns_with_the_same_name_slice": [
    [
      "tests/queries/tests.py",
      [
        "Queries6Tests",
        "test_multiple_columns_with_the_same_name_slice"
      ]
    ]
  ],
  "test_ticket14729": [
    [
      "tests/queries/tests.py",
      [
        "RawQueriesTests",
        "test_ticket14729"
      ]
    ]
  ],
  "test_ticket8597": [
    [
      "tests/queries/tests.py",
      [
        "ComparisonTests",
        "test_ticket8597"
      ]
    ]
  ],
  "test_ticket_18414": [
    [
      "tests/queries/tests.py",
      [
        "ExistsSql",
        "test_ticket_18414"
      ]
    ]
  ],
  "test_ticket_18414_distinct_on": [
    [
      "tests/queries/tests.py",
      [
        "ExistsSql",
        "test_ticket_18414_distinct_on"
      ]
    ]
  ],
  "test_no_default_or_explicit_ordering": [
    [
      "tests/queries/tests.py",
      [
        "QuerysetOrderedTests",
        "test_no_default_or_explicit_ordering"
      ]
    ]
  ],
  "test_cleared_default_ordering": [
    [
      "tests/queries/tests.py",
      [
        "QuerysetOrderedTests",
        "test_cleared_default_ordering"
      ]
    ]
  ],
  "test_explicit_ordering": [
    [
      "tests/queries/tests.py",
      [
        "QuerysetOrderedTests",
        "test_explicit_ordering"
      ]
    ]
  ],
  "test_empty_queryset": [
    [
      "tests/queries/tests.py",
      [
        "QuerysetOrderedTests",
        "test_empty_queryset"
      ]
    ]
  ],
  "test_order_by_extra": [
    [
      "tests/queries/tests.py",
      [
        "QuerysetOrderedTests",
        "test_order_by_extra"
      ]
    ]
  ],
  "test_annotated_ordering": [
    [
      "tests/queries/tests.py",
      [
        "QuerysetOrderedTests",
        "test_annotated_ordering"
      ]
    ]
  ],
  "test_ordered_subselect": [
    [
      "tests/queries/tests.py",
      [
        "SubqueryTests",
        "test_ordered_subselect"
      ]
    ]
  ],
  "test_slice_subquery_and_query": [
    [
      "tests/queries/tests.py",
      [
        "SubqueryTests",
        "test_slice_subquery_and_query"
      ]
    ]
  ],
  "test_related_sliced_subquery": [
    [
      "tests/queries/tests.py",
      [
        "SubqueryTests",
        "test_related_sliced_subquery"
      ]
    ]
  ],
  "test_sliced_delete": [
    [
      "tests/queries/tests.py",
      [
        "SubqueryTests",
        "test_sliced_delete"
      ]
    ]
  ],
  "test_distinct_ordered_sliced_subquery": [
    [
      "tests/queries/tests.py",
      [
        "SubqueryTests",
        "test_distinct_ordered_sliced_subquery"
      ]
    ]
  ],
  "test_or_with_rhs_slice": [
    [
      "tests/queries/tests.py",
      [
        "QuerySetBitwiseOperationTests",
        "test_or_with_rhs_slice"
      ]
    ]
  ],
  "test_or_with_lhs_slice": [
    [
      "tests/queries/tests.py",
      [
        "QuerySetBitwiseOperationTests",
        "test_or_with_lhs_slice"
      ]
    ]
  ],
  "test_or_with_both_slice": [
    [
      "tests/queries/tests.py",
      [
        "QuerySetBitwiseOperationTests",
        "test_or_with_both_slice"
      ]
    ]
  ],
  "test_or_with_both_slice_and_ordering": [
    [
      "tests/queries/tests.py",
      [
        "QuerySetBitwiseOperationTests",
        "test_or_with_both_slice_and_ordering"
      ]
    ]
  ],
  "test_evaluated_queryset_as_argument": [
    [
      "tests/queries/tests.py",
      [
        "CloneTests",
        "test_evaluated_queryset_as_argument"
      ]
    ]
  ],
  "test_no_model_options_cloning": [
    [
      "tests/queries/tests.py",
      [
        "CloneTests",
        "test_no_model_options_cloning"
      ]
    ]
  ],
  "test_no_fields_cloning": [
    [
      "tests/queries/tests.py",
      [
        "CloneTests",
        "test_no_fields_cloning"
      ]
    ]
  ],
  "test_emptyqueryset_values": [
    [
      "tests/queries/tests.py",
      [
        "EmptyQuerySetTests",
        "test_emptyqueryset_values"
      ]
    ]
  ],
  "test_values_subquery": [
    [
      "tests/queries/tests.py",
      [
        "EmptyQuerySetTests",
        "test_values_subquery"
      ]
    ]
  ],
  "test_ticket_19151": [
    [
      "tests/queries/tests.py",
      [
        "EmptyQuerySetTests",
        "test_ticket_19151"
      ]
    ]
  ],
  "test_flat_values_list": [
    [
      "tests/queries/tests.py",
      [
        "ValuesQuerysetTests",
        "test_flat_values_list"
      ]
    ]
  ],
  "test_extra_values": [
    [
      "tests/queries/tests.py",
      [
        "ValuesQuerysetTests",
        "test_extra_values"
      ]
    ]
  ],
  "test_extra_values_order_twice": [
    [
      "tests/queries/tests.py",
      [
        "ValuesQuerysetTests",
        "test_extra_values_order_twice"
      ]
    ]
  ],
  "test_extra_values_order_multiple": [
    [
      "tests/queries/tests.py",
      [
        "ValuesQuerysetTests",
        "test_extra_values_order_multiple"
      ]
    ]
  ],
  "test_extra_values_order_in_extra": [
    [
      "tests/queries/tests.py",
      [
        "ValuesQuerysetTests",
        "test_extra_values_order_in_extra"
      ]
    ]
  ],
  "test_extra_select_params_values_order_in_extra": [
    [
      "tests/queries/tests.py",
      [
        "ValuesQuerysetTests",
        "test_extra_select_params_values_order_in_extra"
      ]
    ]
  ],
  "test_extra_multiple_select_params_values_order_by": [
    [
      "tests/queries/tests.py",
      [
        "ValuesQuerysetTests",
        "test_extra_multiple_select_params_values_order_by"
      ]
    ]
  ],
  "test_extra_values_list": [
    [
      "tests/queries/tests.py",
      [
        "ValuesQuerysetTests",
        "test_extra_values_list"
      ]
    ]
  ],
  "test_flat_extra_values_list": [
    [
      "tests/queries/tests.py",
      [
        "ValuesQuerysetTests",
        "test_flat_extra_values_list"
      ]
    ]
  ],
  "test_field_error_values_list": [
    [
      "tests/queries/tests.py",
      [
        "ValuesQuerysetTests",
        "test_field_error_values_list"
      ]
    ]
  ],
  "test_named_values_list_flat": [
    [
      "tests/queries/tests.py",
      [
        "ValuesQuerysetTests",
        "test_named_values_list_flat"
      ]
    ]
  ],
  "test_named_values_list_bad_field_name": [
    [
      "tests/queries/tests.py",
      [
        "ValuesQuerysetTests",
        "test_named_values_list_bad_field_name"
      ]
    ]
  ],
  "test_named_values_list_with_fields": [
    [
      "tests/queries/tests.py",
      [
        "ValuesQuerysetTests",
        "test_named_values_list_with_fields"
      ]
    ]
  ],
  "test_named_values_list_without_fields": [
    [
      "tests/queries/tests.py",
      [
        "ValuesQuerysetTests",
        "test_named_values_list_without_fields"
      ]
    ]
  ],
  "test_named_values_list_expression_with_default_alias": [
    [
      "tests/queries/tests.py",
      [
        "ValuesQuerysetTests",
        "test_named_values_list_expression_with_default_alias"
      ]
    ]
  ],
  "test_named_values_list_expression": [
    [
      "tests/queries/tests.py",
      [
        "ValuesQuerysetTests",
        "test_named_values_list_expression"
      ]
    ]
  ],
  "get_ordered_articles": [
    [
      "tests/queries/tests.py",
      [
        "QuerySetSupportsPythonIdioms",
        "get_ordered_articles"
      ]
    ]
  ],
  "test_can_get_items_using_index_and_slice_notation": [
    [
      "tests/queries/tests.py",
      [
        "QuerySetSupportsPythonIdioms",
        "test_can_get_items_using_index_and_slice_notation"
      ]
    ]
  ],
  "test_slicing_with_steps_can_be_used": [
    [
      "tests/queries/tests.py",
      [
        "QuerySetSupportsPythonIdioms",
        "test_slicing_with_steps_can_be_used"
      ]
    ]
  ],
  "test_slicing_without_step_is_lazy": [
    [
      "tests/queries/tests.py",
      [
        "QuerySetSupportsPythonIdioms",
        "test_slicing_without_step_is_lazy"
      ]
    ]
  ],
  "test_slicing_with_tests_is_not_lazy": [
    [
      "tests/queries/tests.py",
      [
        "QuerySetSupportsPythonIdioms",
        "test_slicing_with_tests_is_not_lazy"
      ]
    ]
  ],
  "test_slicing_can_slice_again_after_slicing": [
    [
      "tests/queries/tests.py",
      [
        "QuerySetSupportsPythonIdioms",
        "test_slicing_can_slice_again_after_slicing"
      ]
    ]
  ],
  "test_slicing_cannot_filter_queryset_once_sliced": [
    [
      "tests/queries/tests.py",
      [
        "QuerySetSupportsPythonIdioms",
        "test_slicing_cannot_filter_queryset_once_sliced"
      ]
    ]
  ],
  "test_slicing_cannot_reorder_queryset_once_sliced": [
    [
      "tests/queries/tests.py",
      [
        "QuerySetSupportsPythonIdioms",
        "test_slicing_cannot_reorder_queryset_once_sliced"
      ]
    ]
  ],
  "test_slicing_cannot_combine_queries_once_sliced": [
    [
      "tests/queries/tests.py",
      [
        "QuerySetSupportsPythonIdioms",
        "test_slicing_cannot_combine_queries_once_sliced"
      ]
    ]
  ],
  "test_slicing_negative_indexing_not_supported_for_single_element": [
    [
      "tests/queries/tests.py",
      [
        "QuerySetSupportsPythonIdioms",
        "test_slicing_negative_indexing_not_supported_for_single_element"
      ]
    ]
  ],
  "test_slicing_negative_indexing_not_supported_for_range": [
    [
      "tests/queries/tests.py",
      [
        "QuerySetSupportsPythonIdioms",
        "test_slicing_negative_indexing_not_supported_for_range"
      ]
    ]
  ],
  "test_invalid_index": [
    [
      "tests/queries/tests.py",
      [
        "QuerySetSupportsPythonIdioms",
        "test_invalid_index"
      ]
    ]
  ],
  "test_can_get_number_of_items_in_queryset_using_standard_len": [
    [
      "tests/queries/tests.py",
      [
        "QuerySetSupportsPythonIdioms",
        "test_can_get_number_of_items_in_queryset_using_standard_len"
      ]
    ]
  ],
  "test_can_combine_queries_using_and_and_or_operators": [
    [
      "tests/queries/tests.py",
      [
        "QuerySetSupportsPythonIdioms",
        "test_can_combine_queries_using_and_and_or_operators"
      ]
    ]
  ],
  "test_tickets_7698_10202": [
    [
      "tests/queries/tests.py",
      [
        "WeirdQuerysetSlicingTests",
        "test_tickets_7698_10202"
      ]
    ]
  ],
  "test_empty_resultset_sql": [
    [
      "tests/queries/tests.py",
      [
        "WeirdQuerysetSlicingTests",
        "test_empty_resultset_sql"
      ]
    ]
  ],
  "test_empty_sliced_subquery": [
    [
      "tests/queries/tests.py",
      [
        "WeirdQuerysetSlicingTests",
        "test_empty_sliced_subquery"
      ]
    ]
  ],
  "test_empty_sliced_subquery_exclude": [
    [
      "tests/queries/tests.py",
      [
        "WeirdQuerysetSlicingTests",
        "test_empty_sliced_subquery_exclude"
      ]
    ]
  ],
  "test_zero_length_values_slicing": [
    [
      "tests/queries/tests.py",
      [
        "WeirdQuerysetSlicingTests",
        "test_zero_length_values_slicing"
      ]
    ]
  ],
  "test_ticket_7302": [
    [
      "tests/queries/tests.py",
      [
        "EscapingTests",
        "test_ticket_7302"
      ]
    ]
  ],
  "test_in_query": [
    [
      "tests/queries/tests.py",
      [
        "ToFieldTests",
        "test_in_query"
      ]
    ]
  ],
  "test_nested_in_subquery": [
    [
      "tests/queries/tests.py",
      [
        "ToFieldTests",
        "test_nested_in_subquery"
      ]
    ]
  ],
  "test_reverse_in": [
    [
      "tests/queries/tests.py",
      [
        "ToFieldTests",
        "test_reverse_in"
      ]
    ]
  ],
  "test_single_object": [
    [
      "tests/queries/tests.py",
      [
        "ToFieldTests",
        "test_single_object"
      ]
    ]
  ],
  "test_single_object_reverse": [
    [
      "tests/queries/tests.py",
      [
        "ToFieldTests",
        "test_single_object_reverse"
      ]
    ]
  ],
  "test_recursive_fk": [
    [
      "tests/queries/tests.py",
      [
        "ToFieldTests",
        "test_recursive_fk"
      ]
    ]
  ],
  "test_recursive_fk_reverse": [
    [
      "tests/queries/tests.py",
      [
        "ToFieldTests",
        "test_recursive_fk_reverse"
      ]
    ]
  ],
  "test_null_ordering_added": [
    [
      "tests/queries/tests.py",
      [
        "ConditionalTests",
        "test_null_ordering_added"
      ]
    ]
  ],
  "test_in_list_limit": [
    [
      "tests/queries/tests.py",
      [
        "ConditionalTests",
        "test_in_list_limit"
      ]
    ]
  ],
  "check_union": [
    [
      "tests/queries/tests.py",
      [
        "UnionTests",
        "check_union"
      ]
    ]
  ],
  "test_A_AB": [
    [
      "tests/queries/tests.py",
      [
        "UnionTests",
        "test_A_AB"
      ]
    ]
  ],
  "test_A_AB2": [
    [
      "tests/queries/tests.py",
      [
        "UnionTests",
        "test_A_AB2"
      ]
    ]
  ],
  "test_AB_ACB": [
    [
      "tests/queries/tests.py",
      [
        "UnionTests",
        "test_AB_ACB"
      ]
    ]
  ],
  "test_BAB_BAC": [
    [
      "tests/queries/tests.py",
      [
        "UnionTests",
        "test_BAB_BAC"
      ]
    ]
  ],
  "test_BAB_BACB": [
    [
      "tests/queries/tests.py",
      [
        "UnionTests",
        "test_BAB_BACB"
      ]
    ]
  ],
  "test_BA_BCA__BAB_BAC_BCA": [
    [
      "tests/queries/tests.py",
      [
        "UnionTests",
        "test_BA_BCA__BAB_BAC_BCA"
      ]
    ]
  ],
  "test_no_extra_params": [
    [
      "tests/queries/tests.py",
      [
        "DefaultValuesInsertTest",
        "test_no_extra_params"
      ]
    ]
  ],
  "employ": [
    [
      "tests/queries/tests.py",
      [
        "ExcludeTests",
        "test_ticket14511",
        "employ"
      ]
    ]
  ],
  "test_ticket14511": [
    [
      "tests/queries/tests.py",
      [
        "ExcludeTests",
        "test_ticket14511"
      ]
    ]
  ],
  "test_exclude_reverse_fk_field_ref": [
    [
      "tests/queries/tests.py",
      [
        "ExcludeTests",
        "test_exclude_reverse_fk_field_ref"
      ]
    ]
  ],
  "test_exclude_with_circular_fk_relation": [
    [
      "tests/queries/tests.py",
      [
        "ExcludeTests",
        "test_exclude_with_circular_fk_relation"
      ]
    ]
  ],
  "test_subquery_exclude_outerref": [
    [
      "tests/queries/tests.py",
      [
        "ExcludeTests",
        "test_subquery_exclude_outerref"
      ]
    ]
  ],
  "test_exclude_plain": [
    [
      "tests/queries/tests.py",
      [
        "ExcludeTest17600",
        "test_exclude_plain"
      ]
    ]
  ],
  "test_exclude_plain_distinct": [
    [
      "tests/queries/tests.py",
      [
        "ExcludeTest17600",
        "test_exclude_plain_distinct"
      ]
    ]
  ],
  "test_exclude_with_q_object_distinct": [
    [
      "tests/queries/tests.py",
      [
        "ExcludeTest17600",
        "test_exclude_with_q_object_distinct"
      ]
    ]
  ],
  "test_exclude_with_q_object_no_distinct": [
    [
      "tests/queries/tests.py",
      [
        "ExcludeTest17600",
        "test_exclude_with_q_object_no_distinct"
      ]
    ]
  ],
  "test_exclude_with_q_is_equal_to_plain_exclude": [
    [
      "tests/queries/tests.py",
      [
        "ExcludeTest17600",
        "test_exclude_with_q_is_equal_to_plain_exclude"
      ]
    ]
  ],
  "test_exclude_with_q_is_equal_to_plain_exclude_variation": [
    [
      "tests/queries/tests.py",
      [
        "ExcludeTest17600",
        "test_exclude_with_q_is_equal_to_plain_exclude_variation"
      ]
    ]
  ],
  "test_only_orders_with_all_items_having_status_1": [
    [
      "tests/queries/tests.py",
      [
        "ExcludeTest17600",
        "test_only_orders_with_all_items_having_status_1"
      ]
    ]
  ],
  "test_ticket15786": [
    [
      "tests/queries/tests.py",
      [
        "Exclude15786",
        "test_ticket15786"
      ]
    ]
  ],
  "test_null_in_exclude_qs": [
    [
      "tests/queries/tests.py",
      [
        "NullInExcludeTest",
        "test_null_in_exclude_qs"
      ]
    ]
  ],
  "test_col_not_in_list_containing_null": [
    [
      "tests/queries/tests.py",
      [
        "NullInExcludeTest",
        "test_col_not_in_list_containing_null"
      ]
    ]
  ],
  "test_direct_exclude": [
    [
      "tests/queries/tests.py",
      [
        "EmptyStringsAsNullTest",
        "test_direct_exclude"
      ]
    ]
  ],
  "test_joined_exclude": [
    [
      "tests/queries/tests.py",
      [
        "EmptyStringsAsNullTest",
        "test_joined_exclude"
      ]
    ]
  ],
  "test_21001": [
    [
      "tests/queries/tests.py",
      [
        "EmptyStringsAsNullTest",
        "test_21001"
      ]
    ]
  ],
  "test_evaluated_proxy_count": [
    [
      "tests/queries/tests.py",
      [
        "ProxyQueryCleanupTest",
        "test_evaluated_proxy_count"
      ]
    ]
  ],
  "test_empty_full_handling_conjunction": [
    [
      "tests/queries/tests.py",
      [
        "WhereNodeTest",
        "test_empty_full_handling_conjunction"
      ]
    ]
  ],
  "test_empty_full_handling_disjunction": [
    [
      "tests/queries/tests.py",
      [
        "WhereNodeTest",
        "test_empty_full_handling_disjunction"
      ]
    ]
  ],
  "test_empty_nodes": [
    [
      "tests/queries/tests.py",
      [
        "WhereNodeTest",
        "test_empty_nodes"
      ]
    ]
  ],
  "test_iter_exceptions": [
    [
      "tests/queries/tests.py",
      [
        "QuerySetExceptionTests",
        "test_iter_exceptions"
      ]
    ]
  ],
  "test_invalid_queryset_model": [
    [
      "tests/queries/tests.py",
      [
        "QuerySetExceptionTests",
        "test_invalid_queryset_model"
      ]
    ]
  ],
  "test_ticket_17886": [
    [
      "tests/queries/tests.py",
      [
        "NullJoinPromotionOrTest",
        "test_ticket_17886"
      ]
    ]
  ],
  "test_isnull_filter_promotion": [
    [
      "tests/queries/tests.py",
      [
        "NullJoinPromotionOrTest",
        "test_isnull_filter_promotion"
      ]
    ]
  ],
  "test_null_join_demotion": [
    [
      "tests/queries/tests.py",
      [
        "NullJoinPromotionOrTest",
        "test_null_join_demotion"
      ]
    ]
  ],
  "test_ticket_21366": [
    [
      "tests/queries/tests.py",
      [
        "NullJoinPromotionOrTest",
        "test_ticket_21366"
      ]
    ]
  ],
  "test_ticket_21748": [
    [
      "tests/queries/tests.py",
      [
        "NullJoinPromotionOrTest",
        "test_ticket_21748"
      ]
    ]
  ],
  "test_ticket_21748_double_negated_and": [
    [
      "tests/queries/tests.py",
      [
        "NullJoinPromotionOrTest",
        "test_ticket_21748_double_negated_and"
      ]
    ]
  ],
  "test_ticket_21748_double_negated_or": [
    [
      "tests/queries/tests.py",
      [
        "NullJoinPromotionOrTest",
        "test_ticket_21748_double_negated_or"
      ]
    ]
  ],
  "test_ticket_21748_complex_filter": [
    [
      "tests/queries/tests.py",
      [
        "NullJoinPromotionOrTest",
        "test_ticket_21748_complex_filter"
      ]
    ]
  ],
  "test_reverse_trimming": [
    [
      "tests/queries/tests.py",
      [
        "ReverseJoinTrimmingTest",
        "test_reverse_trimming"
      ]
    ]
  ],
  "test_fk_reuse": [
    [
      "tests/queries/tests.py",
      [
        "JoinReuseTest",
        "test_fk_reuse"
      ]
    ]
  ],
  "test_fk_reuse_select_related": [
    [
      "tests/queries/tests.py",
      [
        "JoinReuseTest",
        "test_fk_reuse_select_related"
      ]
    ]
  ],
  "test_fk_reuse_annotation": [
    [
      "tests/queries/tests.py",
      [
        "JoinReuseTest",
        "test_fk_reuse_annotation"
      ]
    ]
  ],
  "test_fk_reuse_disjunction": [
    [
      "tests/queries/tests.py",
      [
        "JoinReuseTest",
        "test_fk_reuse_disjunction"
      ]
    ]
  ],
  "test_fk_reuse_order_by": [
    [
      "tests/queries/tests.py",
      [
        "JoinReuseTest",
        "test_fk_reuse_order_by"
      ]
    ]
  ],
  "test_revo2o_reuse": [
    [
      "tests/queries/tests.py",
      [
        "JoinReuseTest",
        "test_revo2o_reuse"
      ]
    ]
  ],
  "test_revfk_noreuse": [
    [
      "tests/queries/tests.py",
      [
        "JoinReuseTest",
        "test_revfk_noreuse"
      ]
    ]
  ],
  "test_inverted_q_across_relations": [
    [
      "tests/queries/tests.py",
      [
        "JoinReuseTest",
        "test_inverted_q_across_relations"
      ]
    ]
  ],
  "test_disjunction_promotion_select_related": [
    [
      "tests/queries/tests.py",
      [
        "DisjunctionPromotionTests",
        "test_disjunction_promotion_select_related"
      ]
    ]
  ],
  "test_disjunction_promotion1": [
    [
      "tests/queries/tests.py",
      [
        "DisjunctionPromotionTests",
        "test_disjunction_promotion1"
      ]
    ]
  ],
  "test_disjunction_promotion2": [
    [
      "tests/queries/tests.py",
      [
        "DisjunctionPromotionTests",
        "test_disjunction_promotion2"
      ]
    ]
  ],
  "test_disjunction_promotion3": [
    [
      "tests/queries/tests.py",
      [
        "DisjunctionPromotionTests",
        "test_disjunction_promotion3"
      ]
    ]
  ],
  "test_disjunction_promotion3_demote": [
    [
      "tests/queries/tests.py",
      [
        "DisjunctionPromotionTests",
        "test_disjunction_promotion3_demote"
      ]
    ]
  ],
  "test_disjunction_promotion4_demote": [
    [
      "tests/queries/tests.py",
      [
        "DisjunctionPromotionTests",
        "test_disjunction_promotion4_demote"
      ]
    ]
  ],
  "test_disjunction_promotion4": [
    [
      "tests/queries/tests.py",
      [
        "DisjunctionPromotionTests",
        "test_disjunction_promotion4"
      ]
    ]
  ],
  "test_disjunction_promotion5_demote": [
    [
      "tests/queries/tests.py",
      [
        "DisjunctionPromotionTests",
        "test_disjunction_promotion5_demote"
      ]
    ]
  ],
  "test_disjunction_promotion6": [
    [
      "tests/queries/tests.py",
      [
        "DisjunctionPromotionTests",
        "test_disjunction_promotion6"
      ]
    ]
  ],
  "test_disjunction_promotion7": [
    [
      "tests/queries/tests.py",
      [
        "DisjunctionPromotionTests",
        "test_disjunction_promotion7"
      ]
    ]
  ],
  "test_disjunction_promotion_fexpression": [
    [
      "tests/queries/tests.py",
      [
        "DisjunctionPromotionTests",
        "test_disjunction_promotion_fexpression"
      ]
    ]
  ],
  "test_exclude_many_to_many": [
    [
      "tests/queries/tests.py",
      [
        "ManyToManyExcludeTest",
        "test_exclude_many_to_many"
      ]
    ]
  ],
  "test_ticket_12823": [
    [
      "tests/queries/tests.py",
      [
        "ManyToManyExcludeTest",
        "test_ticket_12823"
      ]
    ]
  ],
  "test_ticket_19964": [
    [
      "tests/queries/tests.py",
      [
        "RelabelCloneTest",
        "test_ticket_19964"
      ]
    ]
  ],
  "test_ticket_20101": [
    [
      "tests/queries/tests.py",
      [
        "Ticket20101Tests",
        "test_ticket_20101"
      ]
    ]
  ],
  "test_empty_string_promotion": [
    [
      "tests/queries/tests.py",
      [
        "EmptyStringPromotionTests",
        "test_empty_string_promotion"
      ]
    ]
  ],
  "test_values_in_subquery": [
    [
      "tests/queries/tests.py",
      [
        "ValuesSubqueryTests",
        "test_values_in_subquery"
      ]
    ]
  ],
  "test_double_subquery_in": [
    [
      "tests/queries/tests.py",
      [
        "DoubleInSubqueryTests",
        "test_double_subquery_in"
      ]
    ]
  ],
  "test_ticket_18785": [
    [
      "tests/queries/tests.py",
      [
        "Ticket18785Tests",
        "test_ticket_18785"
      ]
    ]
  ],
  "test_ticket_20788": [
    [
      "tests/queries/tests.py",
      [
        "Ticket20788Tests",
        "test_ticket_20788"
      ]
    ]
  ],
  "test_ticket_12807": [
    [
      "tests/queries/tests.py",
      [
        "Ticket12807Tests",
        "test_ticket_12807"
      ]
    ]
  ],
  "test_wrong_type_lookup": [
    [
      "tests/queries/tests.py",
      [
        "RelatedLookupTypeTests",
        "test_wrong_type_lookup"
      ]
    ]
  ],
  "test_wrong_backward_lookup": [
    [
      "tests/queries/tests.py",
      [
        "RelatedLookupTypeTests",
        "test_wrong_backward_lookup"
      ]
    ]
  ],
  "test_correct_lookup": [
    [
      "tests/queries/tests.py",
      [
        "RelatedLookupTypeTests",
        "test_correct_lookup"
      ]
    ]
  ],
  "test_values_queryset_lookup": [
    [
      "tests/queries/tests.py",
      [
        "RelatedLookupTypeTests",
        "test_values_queryset_lookup"
      ]
    ]
  ],
  "test_ticket_14056": [
    [
      "tests/queries/tests.py",
      [
        "Ticket14056Tests",
        "test_ticket_14056"
      ]
    ]
  ],
  "test_ticket_20955": [
    [
      "tests/queries/tests.py",
      [
        "Ticket20955Tests",
        "test_ticket_20955"
      ]
    ]
  ],
  "test_ticket_21203": [
    [
      "tests/queries/tests.py",
      [
        "Ticket21203Tests",
        "test_ticket_21203"
      ]
    ]
  ],
  "test_values_no_promotion_for_existing": [
    [
      "tests/queries/tests.py",
      [
        "ValuesJoinPromotionTests",
        "test_values_no_promotion_for_existing"
      ]
    ]
  ],
  "test_ticket_21376": [
    [
      "tests/queries/tests.py",
      [
        "ValuesJoinPromotionTests",
        "test_ticket_21376"
      ]
    ]
  ],
  "test_ticket_21787": [
    [
      "tests/queries/tests.py",
      [
        "ForeignKeyToBaseExcludeTests",
        "test_ticket_21787"
      ]
    ]
  ],
  "test_ticket_21879": [
    [
      "tests/queries/tests.py",
      [
        "ReverseM2MCustomPkTests",
        "test_ticket_21879"
      ]
    ]
  ],
  "test_ticket_22429": [
    [
      "tests/queries/tests.py",
      [
        "Ticket22429Tests",
        "test_ticket_22429"
      ]
    ]
  ],
  "test_ticket_23605": [
    [
      "tests/queries/tests.py",
      [
        "Ticket23605Tests",
        "test_ticket_23605"
      ]
    ]
  ],
  "test_ticket_24278": [
    [
      "tests/queries/tests.py",
      [
        "TestTicket24279",
        "test_ticket_24278"
      ]
    ]
  ],
  "test_invalid_values": [
    [
      "tests/queries/tests.py",
      [
        "TestInvalidValuesRelation",
        "test_invalid_values"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_dictsort.py",
      [
        "FunctionTests",
        "test_invalid_values"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_dictsortreversed.py",
      [
        "FunctionTests",
        "test_invalid_values"
      ]
    ]
  ],
  "test_ticket_24605": [
    [
      "tests/queries/tests.py",
      [
        "TestTicket24605",
        "test_ticket_24605"
      ]
    ]
  ],
  "test_ticket_23622": [
    [
      "tests/queries/tests.py",
      [
        "Ticket23622Tests",
        "test_ticket_23622"
      ]
    ]
  ],
  "standalone_number": [
    [
      "tests/queryset_pickle/models.py",
      [
        "standalone_number"
      ]
    ]
  ],
  "get_static_number": [
    [
      "tests/queryset_pickle/models.py",
      [
        "Numbers",
        "get_static_number"
      ]
    ]
  ],
  "assert_pickles": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "assert_pickles"
      ]
    ]
  ],
  "test_datetime_callable_default_all": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_datetime_callable_default_all"
      ]
    ]
  ],
  "test_datetime_callable_default_filter": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_datetime_callable_default_filter"
      ]
    ]
  ],
  "test_string_as_default": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_string_as_default"
      ]
    ]
  ],
  "test_standalone_method_as_default": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_standalone_method_as_default"
      ]
    ]
  ],
  "test_staticmethod_as_default": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_staticmethod_as_default"
      ]
    ]
  ],
  "test_filter_reverse_fk": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_filter_reverse_fk"
      ]
    ]
  ],
  "test_doesnotexist_exception": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_doesnotexist_exception"
      ]
    ]
  ],
  "test_doesnotexist_class": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_doesnotexist_class"
      ]
    ]
  ],
  "test_multipleobjectsreturned_class": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_multipleobjectsreturned_class"
      ]
    ]
  ],
  "test_forward_relatedobjectdoesnotexist_class": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_forward_relatedobjectdoesnotexist_class"
      ]
    ]
  ],
  "test_reverse_one_to_one_relatedobjectdoesnotexist_class": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_reverse_one_to_one_relatedobjectdoesnotexist_class"
      ]
    ]
  ],
  "test_manager_pickle": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_manager_pickle"
      ]
    ]
  ],
  "test_model_pickle": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_model_pickle"
      ]
    ]
  ],
  "test_model_pickle_m2m": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_model_pickle_m2m"
      ]
    ]
  ],
  "test_model_pickle_dynamic": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_model_pickle_dynamic"
      ]
    ]
  ],
  "test_specialized_queryset": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_specialized_queryset"
      ]
    ]
  ],
  "test_pickle_prefetch_related_idempotence": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_pickle_prefetch_related_idempotence"
      ]
    ]
  ],
  "test_pickle_prefetch_queryset_usable_outside_of_prefetch": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_pickle_prefetch_queryset_usable_outside_of_prefetch"
      ]
    ]
  ],
  "test_pickle_prefetch_queryset_still_usable": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_pickle_prefetch_queryset_still_usable"
      ]
    ]
  ],
  "test_pickle_prefetch_queryset_not_evaluated": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_pickle_prefetch_queryset_not_evaluated"
      ]
    ]
  ],
  "test_pickle_prefetch_related_with_m2m_and_objects_deletion": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_pickle_prefetch_related_with_m2m_and_objects_deletion"
      ]
    ]
  ],
  "test_pickle_exists_queryset_still_usable": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_pickle_exists_queryset_still_usable"
      ]
    ]
  ],
  "test_pickle_exists_queryset_not_evaluated": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_pickle_exists_queryset_not_evaluated"
      ]
    ]
  ],
  "test_pickle_subquery_queryset_not_evaluated": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_pickle_subquery_queryset_not_evaluated"
      ]
    ]
  ],
  "test_annotation_with_callable_default": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_annotation_with_callable_default"
      ]
    ]
  ],
  "test_order_by_model_with_abstract_inheritance_and_meta_ordering": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "PickleabilityTestCase",
        "test_order_by_model_with_abstract_inheritance_and_meta_ordering"
      ]
    ]
  ],
  "test_in_lookup_queryset_evaluation": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "InLookupTests",
        "test_in_lookup_queryset_evaluation"
      ]
    ]
  ],
  "test_in_lookup_query_evaluation": [
    [
      "tests/queryset_pickle/tests.py",
      [
        "InLookupTests",
        "test_in_lookup_query_evaluation"
      ]
    ]
  ],
  "assertSuccessfulRawQuery": [
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "assertSuccessfulRawQuery"
      ]
    ]
  ],
  "assertProcessed": [
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "assertProcessed"
      ]
    ]
  ],
  "assertNoAnnotations": [
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "assertNoAnnotations"
      ]
    ]
  ],
  "assertAnnotations": [
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "assertAnnotations"
      ]
    ]
  ],
  "test_rawqueryset_repr": [
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "test_rawqueryset_repr"
      ]
    ]
  ],
  "test_simple_raw_query": [
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "test_simple_raw_query"
      ]
    ]
  ],
  "test_raw_query_lazy": [
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "test_raw_query_lazy"
      ]
    ]
  ],
  "test_FK_raw_query": [
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "test_FK_raw_query"
      ]
    ]
  ],
  "test_db_column_handler": [
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "test_db_column_handler"
      ]
    ]
  ],
  "test_pk_with_mixed_case_db_column": [
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "test_pk_with_mixed_case_db_column"
      ]
    ]
  ],
  "test_order_handler": [
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "test_order_handler"
      ]
    ]
  ],
  "test_params": [
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "test_params"
      ]
    ]
  ],
  "test_pyformat_params": [
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "test_pyformat_params"
      ]
    ]
  ],
  "test_query_representation": [
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "test_query_representation"
      ]
    ]
  ],
  "test_extra_conversions": [
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "test_extra_conversions"
      ]
    ]
  ],
  "test_missing_fields": [
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "test_missing_fields"
      ]
    ]
  ],
  "test_missing_fields_without_PK": [
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "test_missing_fields_without_PK"
      ]
    ]
  ],
  "test_annotations": [
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "test_annotations"
      ]
    ]
  ],
  "test_white_space_query": [
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "test_white_space_query"
      ]
    ]
  ],
  "test_multiple_iterations": [
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "test_multiple_iterations"
      ]
    ]
  ],
  "test_get_item": [
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "test_get_item"
      ]
    ]
  ],
  "test_query_count": [
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "test_query_count"
      ]
    ]
  ],
  "test_subquery_in_raw_sql": [
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "test_subquery_in_raw_sql"
      ]
    ]
  ],
  "test_db_column_name_is_used_in_raw_query": [
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "test_db_column_name_is_used_in_raw_query"
      ]
    ]
  ],
  "test_decimal_parameter": [
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "test_decimal_parameter"
      ]
    ]
  ],
  "test_result_caching": [
    [
      "tests/raw_query/tests.py",
      [
        "RawQueryTests",
        "test_result_caching"
      ]
    ]
  ],
  "test_model": [
    [
      "tests/redirects_tests/tests.py",
      [
        "RedirectTests",
        "test_model"
      ]
    ],
    [
      "tests/resolve_url/tests.py",
      [
        "ResolveUrlTests",
        "test_model"
      ]
    ]
  ],
  "test_redirect_with_append_slash": [
    [
      "tests/redirects_tests/tests.py",
      [
        "RedirectTests",
        "test_redirect_with_append_slash"
      ]
    ]
  ],
  "test_redirect_with_append_slash_and_query_string": [
    [
      "tests/redirects_tests/tests.py",
      [
        "RedirectTests",
        "test_redirect_with_append_slash_and_query_string"
      ]
    ]
  ],
  "test_redirect_not_found_with_append_slash": [
    [
      "tests/redirects_tests/tests.py",
      [
        "RedirectTests",
        "test_redirect_not_found_with_append_slash"
      ]
    ]
  ],
  "test_redirect_shortcircuits_non_404_response": [
    [
      "tests/redirects_tests/tests.py",
      [
        "RedirectTests",
        "test_redirect_shortcircuits_non_404_response"
      ]
    ]
  ],
  "test_response_gone": [
    [
      "tests/redirects_tests/tests.py",
      [
        "RedirectTests",
        "test_response_gone"
      ]
    ]
  ],
  "test_sites_not_installed": [
    [
      "tests/redirects_tests/tests.py",
      [
        "RedirectTests",
        "test_sites_not_installed"
      ]
    ]
  ],
  "test_response_gone_class": [
    [
      "tests/redirects_tests/tests.py",
      [
        "OverriddenRedirectMiddlewareTests",
        "test_response_gone_class"
      ]
    ]
  ],
  "test_is_all_types": [
    [
      "tests/requests/test_accept_header.py",
      [
        "MediaTypeTests",
        "test_is_all_types"
      ]
    ]
  ],
  "test_no_match": [
    [
      "tests/requests/test_accept_header.py",
      [
        "MediaTypeTests",
        "test_no_match"
      ]
    ]
  ],
  "test_no_headers": [
    [
      "tests/requests/test_accept_header.py",
      [
        "AcceptHeaderTests",
        "test_no_headers"
      ]
    ]
  ],
  "test_accept_headers": [
    [
      "tests/requests/test_accept_header.py",
      [
        "AcceptHeaderTests",
        "test_accept_headers"
      ]
    ]
  ],
  "test_request_accepts_any": [
    [
      "tests/requests/test_accept_header.py",
      [
        "AcceptHeaderTests",
        "test_request_accepts_any"
      ]
    ]
  ],
  "test_request_accepts_none": [
    [
      "tests/requests/test_accept_header.py",
      [
        "AcceptHeaderTests",
        "test_request_accepts_none"
      ]
    ]
  ],
  "test_request_accepts_some": [
    [
      "tests/requests/test_accept_header.py",
      [
        "AcceptHeaderTests",
        "test_request_accepts_some"
      ]
    ]
  ],
  "test_size_exceeded": [
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxMemorySizeFormPostTests",
        "test_size_exceeded"
      ]
    ],
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxMemorySizeMultipartPostTests",
        "test_size_exceeded"
      ]
    ]
  ],
  "test_size_not_exceeded": [
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxMemorySizeFormPostTests",
        "test_size_not_exceeded"
      ]
    ],
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxMemorySizeMultipartPostTests",
        "test_size_not_exceeded"
      ]
    ],
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxMemorySizeGetTests",
        "test_size_not_exceeded"
      ]
    ]
  ],
  "test_no_limit": [
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxMemorySizeFormPostTests",
        "test_no_limit"
      ]
    ],
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxMemorySizeMultipartPostTests",
        "test_no_limit"
      ]
    ],
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxMemorySizeGetTests",
        "test_no_limit"
      ]
    ],
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxNumberOfFieldsMultipartPost",
        "test_no_limit"
      ]
    ],
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxNumberOfFieldsFormPost",
        "test_no_limit"
      ]
    ]
  ],
  "test_file_passes": [
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxMemorySizeMultipartPostTests",
        "test_file_passes"
      ]
    ]
  ],
  "test_empty_content_length": [
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxMemorySizeGetTests",
        "test_empty_content_length"
      ]
    ]
  ],
  "test_get_max_fields_exceeded": [
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxNumberOfFieldsGet",
        "test_get_max_fields_exceeded"
      ]
    ]
  ],
  "test_get_max_fields_not_exceeded": [
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxNumberOfFieldsGet",
        "test_get_max_fields_not_exceeded"
      ]
    ]
  ],
  "test_number_exceeded": [
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxNumberOfFieldsMultipartPost",
        "test_number_exceeded"
      ]
    ],
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxNumberOfFieldsFormPost",
        "test_number_exceeded"
      ]
    ]
  ],
  "test_number_not_exceeded": [
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxNumberOfFieldsMultipartPost",
        "test_number_not_exceeded"
      ]
    ],
    [
      "tests/requests/test_data_upload_settings.py",
      [
        "DataUploadMaxNumberOfFieldsFormPost",
        "test_number_not_exceeded"
      ]
    ]
  ],
  "test_is_ajax": [
    [
      "tests/requests/test_is_ajax_deprecations.py",
      [
        "TestDeprecatedIsAjax",
        "test_is_ajax"
      ]
    ]
  ],
  "test_httprequest": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_httprequest"
      ]
    ]
  ],
  "test_httprequest_full_path": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_httprequest_full_path"
      ]
    ]
  ],
  "test_httprequest_full_path_with_query_string_and_fragment": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_httprequest_full_path_with_query_string_and_fragment"
      ]
    ]
  ],
  "test_httprequest_repr": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_httprequest_repr"
      ]
    ]
  ],
  "test_httprequest_repr_invalid_method_and_path": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_httprequest_repr_invalid_method_and_path"
      ]
    ]
  ],
  "test_wsgirequest": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_wsgirequest"
      ]
    ]
  ],
  "test_wsgirequest_with_script_name": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_wsgirequest_with_script_name"
      ]
    ]
  ],
  "test_wsgirequest_script_url_double_slashes": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_wsgirequest_script_url_double_slashes"
      ]
    ]
  ],
  "test_wsgirequest_with_force_script_name": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_wsgirequest_with_force_script_name"
      ]
    ]
  ],
  "test_wsgirequest_path_with_force_script_name_trailing_slash": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_wsgirequest_path_with_force_script_name_trailing_slash"
      ]
    ]
  ],
  "test_wsgirequest_repr": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_wsgirequest_repr"
      ]
    ]
  ],
  "test_wsgirequest_path_info": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_wsgirequest_path_info"
      ]
    ]
  ],
  "test_limited_stream": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_limited_stream"
      ]
    ]
  ],
  "test_stream": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_stream"
      ]
    ]
  ],
  "test_read_after_value": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_read_after_value"
      ]
    ]
  ],
  "test_value_after_read": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_value_after_read"
      ]
    ]
  ],
  "test_non_ascii_POST": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_non_ascii_POST"
      ]
    ]
  ],
  "test_alternate_charset_POST": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_alternate_charset_POST"
      ]
    ]
  ],
  "test_body_after_POST_multipart_form_data": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_body_after_POST_multipart_form_data"
      ]
    ]
  ],
  "test_body_after_POST_multipart_related": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_body_after_POST_multipart_related"
      ]
    ]
  ],
  "test_POST_multipart_with_content_length_zero": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_POST_multipart_with_content_length_zero"
      ]
    ]
  ],
  "test_POST_binary_only": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_POST_binary_only"
      ]
    ]
  ],
  "test_read_by_lines": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_read_by_lines"
      ]
    ]
  ],
  "test_POST_after_body_read": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_POST_after_body_read"
      ]
    ]
  ],
  "test_POST_after_body_read_and_stream_read": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_POST_after_body_read_and_stream_read"
      ]
    ]
  ],
  "test_POST_after_body_read_and_stream_read_multipart": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_POST_after_body_read_and_stream_read_multipart"
      ]
    ]
  ],
  "test_POST_immutable_for_multipart": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_POST_immutable_for_multipart"
      ]
    ]
  ],
  "test_multipart_without_boundary": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_multipart_without_boundary"
      ]
    ]
  ],
  "test_multipart_non_ascii_content_type": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_multipart_non_ascii_content_type"
      ]
    ]
  ],
  "test_POST_connection_error": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_POST_connection_error"
      ]
    ]
  ],
  "test_set_encoding_clears_POST": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_set_encoding_clears_POST"
      ]
    ]
  ],
  "test_set_encoding_clears_GET": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_set_encoding_clears_GET"
      ]
    ]
  ],
  "test_FILES_connection_error": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_FILES_connection_error"
      ]
    ]
  ],
  "test_get_raw_uri": [
    [
      "tests/requests/tests.py",
      [
        "RequestsTests",
        "test_get_raw_uri"
      ]
    ]
  ],
  "test_http_get_host": [
    [
      "tests/requests/tests.py",
      [
        "HostValidationTests",
        "test_http_get_host"
      ]
    ]
  ],
  "test_http_get_host_with_x_forwarded_host": [
    [
      "tests/requests/tests.py",
      [
        "HostValidationTests",
        "test_http_get_host_with_x_forwarded_host"
      ]
    ]
  ],
  "test_get_port": [
    [
      "tests/requests/tests.py",
      [
        "HostValidationTests",
        "test_get_port"
      ]
    ]
  ],
  "test_get_port_with_x_forwarded_port": [
    [
      "tests/requests/tests.py",
      [
        "HostValidationTests",
        "test_get_port_with_x_forwarded_port"
      ]
    ]
  ],
  "test_host_validation_in_debug_mode": [
    [
      "tests/requests/tests.py",
      [
        "HostValidationTests",
        "test_host_validation_in_debug_mode"
      ]
    ]
  ],
  "test_get_host_suggestion_of_allowed_host": [
    [
      "tests/requests/tests.py",
      [
        "HostValidationTests",
        "test_get_host_suggestion_of_allowed_host"
      ]
    ]
  ],
  "test_split_domain_port_removes_trailing_dot": [
    [
      "tests/requests/tests.py",
      [
        "HostValidationTests",
        "test_split_domain_port_removes_trailing_dot"
      ]
    ]
  ],
  "test_absolute_url": [
    [
      "tests/requests/tests.py",
      [
        "BuildAbsoluteURITests",
        "test_absolute_url"
      ]
    ],
    [
      "tests/staticfiles_tests/test_forms.py",
      [
        "StaticFilesFormsMediaTestCase",
        "test_absolute_url"
      ]
    ]
  ],
  "test_host_retrieval": [
    [
      "tests/requests/tests.py",
      [
        "BuildAbsoluteURITests",
        "test_host_retrieval"
      ]
    ]
  ],
  "test_request_path_begins_with_two_slashes": [
    [
      "tests/requests/tests.py",
      [
        "BuildAbsoluteURITests",
        "test_request_path_begins_with_two_slashes"
      ]
    ]
  ],
  "test_base_request_headers": [
    [
      "tests/requests/tests.py",
      [
        "RequestHeadersTests",
        "test_base_request_headers"
      ]
    ]
  ],
  "test_wsgi_request_headers": [
    [
      "tests/requests/tests.py",
      [
        "RequestHeadersTests",
        "test_wsgi_request_headers"
      ]
    ]
  ],
  "test_wsgi_request_headers_getitem": [
    [
      "tests/requests/tests.py",
      [
        "RequestHeadersTests",
        "test_wsgi_request_headers_getitem"
      ]
    ]
  ],
  "test_wsgi_request_headers_get": [
    [
      "tests/requests/tests.py",
      [
        "RequestHeadersTests",
        "test_wsgi_request_headers_get"
      ]
    ]
  ],
  "test_parse_header_name": [
    [
      "tests/requests/tests.py",
      [
        "HttpHeadersTests",
        "test_parse_header_name"
      ]
    ]
  ],
  "generate": [
    [
      "tests/reserved_names/tests.py",
      [
        "ReservedNameTests",
        "generate"
      ]
    ]
  ],
  "test_month_filter": [
    [
      "tests/reserved_names/tests.py",
      [
        "ReservedNameTests",
        "test_month_filter"
      ]
    ]
  ],
  "test_url_path": [
    [
      "tests/resolve_url/tests.py",
      [
        "ResolveUrlTests",
        "test_url_path"
      ]
    ]
  ],
  "test_full_url": [
    [
      "tests/resolve_url/tests.py",
      [
        "ResolveUrlTests",
        "test_full_url"
      ]
    ]
  ],
  "test_view_function": [
    [
      "tests/resolve_url/tests.py",
      [
        "ResolveUrlTests",
        "test_view_function"
      ]
    ]
  ],
  "test_lazy_reverse": [
    [
      "tests/resolve_url/tests.py",
      [
        "ResolveUrlTests",
        "test_lazy_reverse"
      ]
    ]
  ],
  "test_valid_view_name": [
    [
      "tests/resolve_url/tests.py",
      [
        "ResolveUrlTests",
        "test_valid_view_name"
      ]
    ]
  ],
  "test_domain": [
    [
      "tests/resolve_url/tests.py",
      [
        "ResolveUrlTests",
        "test_domain"
      ]
    ]
  ],
  "test_non_view_callable_raises_no_reverse_match": [
    [
      "tests/resolve_url/tests.py",
      [
        "ResolveUrlTests",
        "test_non_view_callable_raises_no_reverse_match"
      ]
    ]
  ],
  "some_view": [
    [
      "tests/resolve_url/urls.py",
      [
        "some_view"
      ]
    ]
  ],
  "test_near_expiration": [
    [
      "tests/responses/test_cookie.py",
      [
        "SetCookieTests",
        "test_near_expiration"
      ]
    ]
  ],
  "test_aware_expiration": [
    [
      "tests/responses/test_cookie.py",
      [
        "SetCookieTests",
        "test_aware_expiration"
      ]
    ]
  ],
  "test_create_cookie_after_deleting_cookie": [
    [
      "tests/responses/test_cookie.py",
      [
        "SetCookieTests",
        "test_create_cookie_after_deleting_cookie"
      ]
    ]
  ],
  "test_far_expiration": [
    [
      "tests/responses/test_cookie.py",
      [
        "SetCookieTests",
        "test_far_expiration"
      ]
    ]
  ],
  "test_max_age_expiration": [
    [
      "tests/responses/test_cookie.py",
      [
        "SetCookieTests",
        "test_max_age_expiration"
      ]
    ]
  ],
  "test_httponly_cookie": [
    [
      "tests/responses/test_cookie.py",
      [
        "SetCookieTests",
        "test_httponly_cookie"
      ]
    ]
  ],
  "test_unicode_cookie": [
    [
      "tests/responses/test_cookie.py",
      [
        "SetCookieTests",
        "test_unicode_cookie"
      ]
    ]
  ],
  "test_invalid_samesite": [
    [
      "tests/responses/test_cookie.py",
      [
        "SetCookieTests",
        "test_invalid_samesite"
      ]
    ]
  ],
  "test_delete_cookie_secure_prefix": [
    [
      "tests/responses/test_cookie.py",
      [
        "DeleteCookieTests",
        "test_delete_cookie_secure_prefix"
      ]
    ]
  ],
  "test_file_from_disk_response": [
    [
      "tests/responses/test_fileresponse.py",
      [
        "FileResponseTests",
        "test_file_from_disk_response"
      ]
    ]
  ],
  "test_file_from_buffer_response": [
    [
      "tests/responses/test_fileresponse.py",
      [
        "FileResponseTests",
        "test_file_from_buffer_response"
      ]
    ]
  ],
  "test_file_from_buffer_unnamed_attachment": [
    [
      "tests/responses/test_fileresponse.py",
      [
        "FileResponseTests",
        "test_file_from_buffer_unnamed_attachment"
      ]
    ]
  ],
  "test_file_from_named_pipe_response": [
    [
      "tests/responses/test_fileresponse.py",
      [
        "FileResponseTests",
        "test_file_from_named_pipe_response"
      ]
    ]
  ],
  "test_file_from_disk_as_attachment": [
    [
      "tests/responses/test_fileresponse.py",
      [
        "FileResponseTests",
        "test_file_from_disk_as_attachment"
      ]
    ]
  ],
  "test_compressed_response": [
    [
      "tests/responses/test_fileresponse.py",
      [
        "FileResponseTests",
        "test_compressed_response"
      ]
    ]
  ],
  "test_unicode_attachment": [
    [
      "tests/responses/test_fileresponse.py",
      [
        "FileResponseTests",
        "test_unicode_attachment"
      ]
    ]
  ],
  "test_write": [
    [
      "tests/responses/tests.py",
      [
        "HttpResponseBaseTests",
        "test_write"
      ]
    ]
  ],
  "test_tell": [
    [
      "tests/responses/tests.py",
      [
        "HttpResponseBaseTests",
        "test_tell"
      ]
    ]
  ],
  "test_status_code": [
    [
      "tests/responses/tests.py",
      [
        "HttpResponseTests",
        "test_status_code"
      ]
    ]
  ],
  "test_change_status_code": [
    [
      "tests/responses/tests.py",
      [
        "HttpResponseTests",
        "test_change_status_code"
      ]
    ]
  ],
  "test_valid_status_code_string": [
    [
      "tests/responses/tests.py",
      [
        "HttpResponseTests",
        "test_valid_status_code_string"
      ]
    ]
  ],
  "test_invalid_status_code": [
    [
      "tests/responses/tests.py",
      [
        "HttpResponseTests",
        "test_invalid_status_code"
      ]
    ]
  ],
  "test_reason_phrase": [
    [
      "tests/responses/tests.py",
      [
        "HttpResponseTests",
        "test_reason_phrase"
      ]
    ]
  ],
  "test_charset_detection": [
    [
      "tests/responses/tests.py",
      [
        "HttpResponseTests",
        "test_charset_detection"
      ]
    ]
  ],
  "test_response_content_charset": [
    [
      "tests/responses/tests.py",
      [
        "HttpResponseTests",
        "test_response_content_charset"
      ]
    ]
  ],
  "test_repr_no_content_type": [
    [
      "tests/responses/tests.py",
      [
        "HttpResponseTests",
        "test_repr_no_content_type"
      ]
    ]
  ],
  "test_wrap_textiowrapper": [
    [
      "tests/responses/tests.py",
      [
        "HttpResponseTests",
        "test_wrap_textiowrapper"
      ]
    ]
  ],
  "test_generator_cache": [
    [
      "tests/responses/tests.py",
      [
        "HttpResponseTests",
        "test_generator_cache"
      ]
    ]
  ],
  "test_reverse_by_field": [
    [
      "tests/reverse_lookup/tests.py",
      [
        "ReverseLookupTests",
        "test_reverse_by_field"
      ]
    ]
  ],
  "test_reverse_by_related_name": [
    [
      "tests/reverse_lookup/tests.py",
      [
        "ReverseLookupTests",
        "test_reverse_by_related_name"
      ]
    ]
  ],
  "test_reverse_field_name_disallowed": [
    [
      "tests/reverse_lookup/tests.py",
      [
        "ReverseLookupTests",
        "test_reverse_field_name_disallowed"
      ]
    ]
  ],
  "get_test_modules": [
    [
      "tests/runtests.py",
      [
        "get_test_modules"
      ]
    ]
  ],
  "get_installed": [
    [
      "tests/runtests.py",
      [
        "get_installed"
      ]
    ]
  ],
  "no_available_apps": [
    [
      "tests/runtests.py",
      [
        "setup",
        "no_available_apps"
      ]
    ]
  ],
  "_module_match_label": [
    [
      "tests/runtests.py",
      [
        "setup",
        "_module_match_label"
      ]
    ]
  ],
  "teardown": [
    [
      "tests/runtests.py",
      [
        "teardown"
      ]
    ]
  ],
  "actual_test_processes": [
    [
      "tests/runtests.py",
      [
        "actual_test_processes"
      ]
    ]
  ],
  "django_tests": [
    [
      "tests/runtests.py",
      [
        "django_tests"
      ]
    ]
  ],
  "get_subprocess_args": [
    [
      "tests/runtests.py",
      [
        "get_subprocess_args"
      ]
    ]
  ],
  "bisect_tests": [
    [
      "tests/runtests.py",
      [
        "bisect_tests"
      ]
    ]
  ],
  "paired_tests": [
    [
      "tests/runtests.py",
      [
        "paired_tests"
      ]
    ]
  ],
  "test_extra_args": [
    [
      "tests/schema/test_logging.py",
      [
        "SchemaLoggerTests",
        "test_extra_args"
      ]
    ]
  ],
  "delete_tables": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "delete_tables"
      ]
    ]
  ],
  "column_classes": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "column_classes"
      ]
    ]
  ],
  "get_primary_key": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "get_primary_key"
      ]
    ]
  ],
  "get_uniques": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "get_uniques"
      ]
    ]
  ],
  "get_constraints_for_column": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "get_constraints_for_column"
      ]
    ]
  ],
  "check_added_field_default": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "check_added_field_default"
      ]
    ]
  ],
  "get_constraints_count": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "get_constraints_count"
      ]
    ]
  ],
  "assertIndexOrder": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "assertIndexOrder"
      ]
    ]
  ],
  "assertForeignKeyExists": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "assertForeignKeyExists"
      ]
    ]
  ],
  "assertForeignKeyNotExists": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "assertForeignKeyNotExists"
      ]
    ]
  ],
  "test_creation_deletion": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_creation_deletion"
      ]
    ]
  ],
  "test_fk": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_fk"
      ]
    ]
  ],
  "test_inline_fk": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_inline_fk"
      ]
    ]
  ],
  "test_add_inline_fk_update_data": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_add_inline_fk_update_data"
      ]
    ]
  ],
  "test_add_inline_fk_index_update_data": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_add_inline_fk_index_update_data"
      ]
    ]
  ],
  "test_char_field_with_db_index_to_fk": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_char_field_with_db_index_to_fk"
      ]
    ]
  ],
  "test_text_field_with_db_index_to_fk": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_text_field_with_db_index_to_fk"
      ]
    ]
  ],
  "test_char_field_pk_to_auto_field": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_char_field_pk_to_auto_field"
      ]
    ]
  ],
  "test_fk_to_proxy": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_fk_to_proxy"
      ]
    ]
  ],
  "test_fk_db_constraint": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_fk_db_constraint"
      ]
    ]
  ],
  "test_no_db_constraint_added_during_primary_key_change": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_no_db_constraint_added_during_primary_key_change"
      ]
    ]
  ],
  "_test_m2m_db_constraint": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "_test_m2m_db_constraint"
      ]
    ]
  ],
  "test_m2m_db_constraint": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_m2m_db_constraint"
      ]
    ]
  ],
  "test_m2m_db_constraint_custom": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_m2m_db_constraint_custom"
      ]
    ]
  ],
  "test_m2m_db_constraint_inherited": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_m2m_db_constraint_inherited"
      ]
    ]
  ],
  "test_add_field_remove_field": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_add_field_remove_field"
      ]
    ]
  ],
  "test_add_field_temp_default": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_add_field_temp_default"
      ]
    ]
  ],
  "test_add_field_temp_default_boolean": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_add_field_temp_default_boolean"
      ]
    ]
  ],
  "test_add_field_default_transform": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_add_field_default_transform"
      ]
    ]
  ],
  "test_add_field_binary": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_add_field_binary"
      ]
    ]
  ],
  "test_add_binaryfield_mediumblob": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_add_binaryfield_mediumblob"
      ]
    ]
  ],
  "test_alter": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter"
      ]
    ]
  ],
  "test_alter_auto_field_to_integer_field": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_auto_field_to_integer_field"
      ]
    ]
  ],
  "test_alter_auto_field_to_char_field": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_auto_field_to_char_field"
      ]
    ]
  ],
  "test_alter_auto_field_quoted_db_column": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_auto_field_quoted_db_column"
      ]
    ]
  ],
  "test_alter_not_unique_field_to_primary_key": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_not_unique_field_to_primary_key"
      ]
    ]
  ],
  "test_alter_primary_key_quoted_db_table": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_primary_key_quoted_db_table"
      ]
    ]
  ],
  "test_alter_text_field": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_text_field"
      ]
    ]
  ],
  "test_alter_fk_checks_deferred_constraints": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_fk_checks_deferred_constraints"
      ]
    ]
  ],
  "test_alter_text_field_to_date_field": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_text_field_to_date_field"
      ]
    ]
  ],
  "test_alter_text_field_to_datetime_field": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_text_field_to_datetime_field"
      ]
    ]
  ],
  "test_alter_text_field_to_time_field": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_text_field_to_time_field"
      ]
    ]
  ],
  "test_alter_textual_field_keep_null_status": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_textual_field_keep_null_status"
      ]
    ]
  ],
  "test_alter_numeric_field_keep_null_status": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_numeric_field_keep_null_status"
      ]
    ]
  ],
  "test_alter_null_to_not_null": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_null_to_not_null"
      ]
    ]
  ],
  "test_alter_charfield_to_null": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_charfield_to_null"
      ]
    ]
  ],
  "test_alter_char_field_decrease_length": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_char_field_decrease_length"
      ]
    ]
  ],
  "test_alter_field_with_custom_db_type": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_field_with_custom_db_type"
      ]
    ]
  ],
  "test_alter_array_field_decrease_base_field_length": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_array_field_decrease_base_field_length"
      ]
    ]
  ],
  "test_alter_array_field_decrease_nested_base_field_length": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_array_field_decrease_nested_base_field_length"
      ]
    ]
  ],
  "test_alter_textfield_to_null": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_textfield_to_null"
      ]
    ]
  ],
  "test_alter_null_to_not_null_keeping_default": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_null_to_not_null_keeping_default"
      ]
    ]
  ],
  "test_alter_to_fk": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_to_fk"
      ]
    ]
  ],
  "test_alter_o2o_to_fk": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_o2o_to_fk"
      ]
    ]
  ],
  "test_alter_fk_to_o2o": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_fk_to_o2o"
      ]
    ]
  ],
  "test_alter_field_fk_to_o2o": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_field_fk_to_o2o"
      ]
    ]
  ],
  "test_alter_field_fk_keeps_index": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_field_fk_keeps_index"
      ]
    ]
  ],
  "test_alter_field_o2o_to_fk": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_field_o2o_to_fk"
      ]
    ]
  ],
  "test_alter_field_o2o_keeps_unique": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_field_o2o_keeps_unique"
      ]
    ]
  ],
  "test_alter_db_table_case": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_db_table_case"
      ]
    ]
  ],
  "test_alter_implicit_id_to_explicit": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_implicit_id_to_explicit"
      ]
    ]
  ],
  "test_alter_autofield_pk_to_bigautofield_pk_sequence_owner": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_autofield_pk_to_bigautofield_pk_sequence_owner"
      ]
    ]
  ],
  "test_alter_autofield_pk_to_smallautofield_pk_sequence_owner": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_autofield_pk_to_smallautofield_pk_sequence_owner"
      ]
    ]
  ],
  "test_alter_int_pk_to_autofield_pk": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_int_pk_to_autofield_pk"
      ]
    ]
  ],
  "test_alter_int_pk_to_bigautofield_pk": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_int_pk_to_bigautofield_pk"
      ]
    ]
  ],
  "test_alter_smallint_pk_to_smallautofield_pk": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_smallint_pk_to_smallautofield_pk"
      ]
    ]
  ],
  "test_alter_int_pk_to_int_unique": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_int_pk_to_int_unique"
      ]
    ]
  ],
  "test_rename": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_rename"
      ]
    ]
  ],
  "test_rename_referenced_field": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_rename_referenced_field"
      ]
    ]
  ],
  "test_rename_keep_null_status": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_rename_keep_null_status"
      ]
    ]
  ],
  "_test_m2m_create": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "_test_m2m_create"
      ]
    ]
  ],
  "test_m2m_create": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_m2m_create"
      ]
    ]
  ],
  "test_m2m_create_custom": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_m2m_create_custom"
      ]
    ]
  ],
  "test_m2m_create_inherited": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_m2m_create_inherited"
      ]
    ]
  ],
  "_test_m2m_create_through": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "_test_m2m_create_through"
      ]
    ]
  ],
  "test_m2m_create_through": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_m2m_create_through"
      ]
    ]
  ],
  "test_m2m_create_through_custom": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_m2m_create_through_custom"
      ]
    ]
  ],
  "test_m2m_create_through_inherited": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_m2m_create_through_inherited"
      ]
    ]
  ],
  "_test_m2m": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "_test_m2m"
      ]
    ]
  ],
  "test_m2m_custom": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_m2m_custom"
      ]
    ]
  ],
  "test_m2m_inherited": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_m2m_inherited"
      ]
    ]
  ],
  "_test_m2m_through_alter": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "_test_m2m_through_alter"
      ]
    ]
  ],
  "test_m2m_through_alter": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_m2m_through_alter"
      ]
    ]
  ],
  "test_m2m_through_alter_custom": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_m2m_through_alter_custom"
      ]
    ]
  ],
  "test_m2m_through_alter_inherited": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_m2m_through_alter_inherited"
      ]
    ]
  ],
  "_test_m2m_repoint": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "_test_m2m_repoint"
      ]
    ]
  ],
  "test_m2m_repoint": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_m2m_repoint"
      ]
    ]
  ],
  "test_m2m_repoint_custom": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_m2m_repoint_custom"
      ]
    ]
  ],
  "test_m2m_repoint_inherited": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_m2m_repoint_inherited"
      ]
    ]
  ],
  "test_m2m_rename_field_in_target_model": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_m2m_rename_field_in_target_model"
      ]
    ]
  ],
  "test_remove_field_check_does_not_remove_meta_constraints": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_remove_field_check_does_not_remove_meta_constraints"
      ]
    ]
  ],
  "test_unique_name_quoting": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_unique_name_quoting"
      ]
    ]
  ],
  "test_unique_no_unnecessary_fk_drops": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_unique_no_unnecessary_fk_drops"
      ]
    ]
  ],
  "test_unique_and_reverse_m2m": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_unique_and_reverse_m2m"
      ]
    ]
  ],
  "test_remove_field_unique_does_not_remove_meta_constraints": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_remove_field_unique_does_not_remove_meta_constraints"
      ]
    ]
  ],
  "test_unique_together_with_fk": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_unique_together_with_fk"
      ]
    ]
  ],
  "test_unique_together_with_fk_with_existing_index": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_unique_together_with_fk_with_existing_index"
      ]
    ]
  ],
  "test_remove_unique_together_does_not_remove_meta_constraints": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_remove_unique_together_does_not_remove_meta_constraints"
      ]
    ]
  ],
  "test_index_together_with_fk": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_index_together_with_fk"
      ]
    ]
  ],
  "test_create_index_together": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_create_index_together"
      ]
    ]
  ],
  "test_remove_index_together_does_not_remove_meta_indexes": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_remove_index_together_does_not_remove_meta_indexes"
      ]
    ]
  ],
  "test_db_table": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_db_table"
      ]
    ]
  ],
  "test_add_remove_index": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_add_remove_index"
      ]
    ]
  ],
  "test_remove_db_index_doesnt_remove_custom_indexes": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_remove_db_index_doesnt_remove_custom_indexes"
      ]
    ]
  ],
  "test_order_index": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_order_index"
      ]
    ]
  ],
  "test_indexes": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_indexes"
      ]
    ]
  ],
  "test_text_field_with_db_index": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_text_field_with_db_index"
      ]
    ]
  ],
  "test_context_manager_exit": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_context_manager_exit"
      ]
    ]
  ],
  "test_unsupported_transactional_ddl_disallowed": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_unsupported_transactional_ddl_disallowed"
      ]
    ]
  ],
  "test_foreign_key_index_long_names_regression": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_foreign_key_index_long_names_regression"
      ]
    ]
  ],
  "test_add_foreign_key_long_names": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_add_foreign_key_long_names"
      ]
    ]
  ],
  "test_add_foreign_key_quoted_db_table": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_add_foreign_key_quoted_db_table"
      ]
    ]
  ],
  "test_add_foreign_object": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_add_foreign_object"
      ]
    ]
  ],
  "test_creation_deletion_reserved_names": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_creation_deletion_reserved_names"
      ]
    ]
  ],
  "test_remove_constraints_capital_letters": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_remove_constraints_capital_letters"
      ]
    ]
  ],
  "test_add_field_use_effective_default": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_add_field_use_effective_default"
      ]
    ]
  ],
  "test_add_field_default_dropped": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_add_field_default_dropped"
      ]
    ]
  ],
  "test_alter_field_default_dropped": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_field_default_dropped"
      ]
    ]
  ],
  "test_alter_field_default_doesnt_perform_queries": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_field_default_doesnt_perform_queries"
      ]
    ]
  ],
  "test_add_textfield_unhashable_default": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_add_textfield_unhashable_default"
      ]
    ]
  ],
  "test_add_indexed_charfield": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_add_indexed_charfield"
      ]
    ]
  ],
  "test_add_unique_charfield": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_add_unique_charfield"
      ]
    ]
  ],
  "test_alter_field_add_index_to_charfield": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_field_add_index_to_charfield"
      ]
    ]
  ],
  "test_alter_field_add_unique_to_charfield": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_field_add_unique_to_charfield"
      ]
    ]
  ],
  "test_alter_field_add_index_to_textfield": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_field_add_index_to_textfield"
      ]
    ]
  ],
  "test_alter_field_add_unique_to_charfield_with_db_index": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_field_add_unique_to_charfield_with_db_index"
      ]
    ]
  ],
  "test_alter_field_remove_unique_and_db_index_from_charfield": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_field_remove_unique_and_db_index_from_charfield"
      ]
    ]
  ],
  "test_alter_field_swap_unique_and_db_index_with_charfield": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_field_swap_unique_and_db_index_with_charfield"
      ]
    ]
  ],
  "test_alter_field_add_db_index_to_charfield_with_unique": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_field_add_db_index_to_charfield_with_unique"
      ]
    ]
  ],
  "test_alter_field_add_index_to_integerfield": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_field_add_index_to_integerfield"
      ]
    ]
  ],
  "test_alter_pk_with_self_referential_field": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_alter_pk_with_self_referential_field"
      ]
    ]
  ],
  "test_add_datefield_and_datetimefield_use_effective_default": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_add_datefield_and_datetimefield_use_effective_default"
      ]
    ]
  ],
  "test_namespaced_db_table_create_index_name": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_namespaced_db_table_create_index_name"
      ]
    ]
  ],
  "test_creation_with_db_table_double_quotes": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_creation_with_db_table_double_quotes"
      ]
    ]
  ],
  "test_rename_table_renames_deferred_sql_references": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_rename_table_renames_deferred_sql_references"
      ]
    ]
  ],
  "test_rename_column_renames_deferred_sql_references": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_rename_column_renames_deferred_sql_references"
      ]
    ]
  ],
  "test_referenced_field_without_constraint_rename_inside_atomic_block": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_referenced_field_without_constraint_rename_inside_atomic_block"
      ]
    ]
  ],
  "test_referenced_table_without_constraint_rename_inside_atomic_block": [
    [
      "tests/schema/tests.py",
      [
        "SchemaTests",
        "test_referenced_table_without_constraint_rename_inside_atomic_block"
      ]
    ]
  ],
  "start_blocking_transaction": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "start_blocking_transaction"
      ]
    ]
  ],
  "end_blocking_transaction": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "end_blocking_transaction"
      ]
    ]
  ],
  "has_for_update_sql": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "has_for_update_sql"
      ]
    ]
  ],
  "test_for_update_sql_generated": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_for_update_sql_generated"
      ]
    ]
  ],
  "test_for_update_sql_generated_nowait": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_for_update_sql_generated_nowait"
      ]
    ]
  ],
  "test_for_update_sql_generated_skip_locked": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_for_update_sql_generated_skip_locked"
      ]
    ]
  ],
  "test_for_update_sql_generated_of": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_for_update_sql_generated_of"
      ]
    ]
  ],
  "test_for_update_sql_model_inheritance_generated_of": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_for_update_sql_model_inheritance_generated_of"
      ]
    ]
  ],
  "test_for_update_sql_model_inheritance_ptr_generated_of": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_for_update_sql_model_inheritance_ptr_generated_of"
      ]
    ]
  ],
  "test_for_update_sql_related_model_inheritance_generated_of": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_for_update_sql_related_model_inheritance_generated_of"
      ]
    ]
  ],
  "test_for_update_sql_model_inheritance_nested_ptr_generated_of": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_for_update_sql_model_inheritance_nested_ptr_generated_of"
      ]
    ]
  ],
  "test_for_update_sql_multilevel_model_inheritance_ptr_generated_of": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_for_update_sql_multilevel_model_inheritance_ptr_generated_of"
      ]
    ]
  ],
  "test_for_update_of_followed_by_values": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_for_update_of_followed_by_values"
      ]
    ]
  ],
  "test_for_update_of_followed_by_values_list": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_for_update_of_followed_by_values_list"
      ]
    ]
  ],
  "test_for_update_of_self_when_self_is_not_selected": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_for_update_of_self_when_self_is_not_selected"
      ]
    ]
  ],
  "test_nowait_raises_error_on_block": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_nowait_raises_error_on_block"
      ]
    ]
  ],
  "test_skip_locked_skips_locked_rows": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_skip_locked_skips_locked_rows"
      ]
    ]
  ],
  "test_unsupported_nowait_raises_error": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_unsupported_nowait_raises_error"
      ]
    ]
  ],
  "test_unsupported_skip_locked_raises_error": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_unsupported_skip_locked_raises_error"
      ]
    ]
  ],
  "test_unsupported_of_raises_error": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_unsupported_of_raises_error"
      ]
    ]
  ],
  "test_unrelated_of_argument_raises_error": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_unrelated_of_argument_raises_error"
      ]
    ]
  ],
  "test_related_but_unselected_of_argument_raises_error": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_related_but_unselected_of_argument_raises_error"
      ]
    ]
  ],
  "test_model_inheritance_of_argument_raises_error_ptr_in_choices": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_model_inheritance_of_argument_raises_error_ptr_in_choices"
      ]
    ]
  ],
  "test_reverse_one_to_one_of_arguments": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_reverse_one_to_one_of_arguments"
      ]
    ]
  ],
  "test_for_update_after_from": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_for_update_after_from"
      ]
    ]
  ],
  "test_for_update_requires_transaction": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_for_update_requires_transaction"
      ]
    ]
  ],
  "test_for_update_requires_transaction_only_in_execution": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_for_update_requires_transaction_only_in_execution"
      ]
    ]
  ],
  "test_select_for_update_with_limit": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_select_for_update_with_limit"
      ]
    ]
  ],
  "test_unsupported_select_for_update_with_limit": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_unsupported_select_for_update_with_limit"
      ]
    ]
  ],
  "run_select_for_update": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "run_select_for_update"
      ]
    ]
  ],
  "test_block": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_block"
      ]
    ]
  ],
  "test_raw_lock_not_available": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_raw_lock_not_available"
      ]
    ]
  ],
  "test_select_for_update_on_multidb": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_select_for_update_on_multidb"
      ]
    ]
  ],
  "test_select_for_update_with_get": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_select_for_update_with_get"
      ]
    ]
  ],
  "test_nowait_and_skip_locked": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_nowait_and_skip_locked"
      ]
    ]
  ],
  "test_ordered_select_for_update": [
    [
      "tests/select_for_update/tests.py",
      [
        "SelectForUpdateTests",
        "test_ordered_select_for_update"
      ]
    ]
  ],
  "create_tree": [
    [
      "tests/select_related/tests.py",
      [
        "SelectRelatedTests",
        "create_tree"
      ]
    ]
  ],
  "test_access_fks_without_select_related": [
    [
      "tests/select_related/tests.py",
      [
        "SelectRelatedTests",
        "test_access_fks_without_select_related"
      ]
    ]
  ],
  "test_access_fks_with_select_related": [
    [
      "tests/select_related/tests.py",
      [
        "SelectRelatedTests",
        "test_access_fks_with_select_related"
      ]
    ]
  ],
  "test_list_without_select_related": [
    [
      "tests/select_related/tests.py",
      [
        "SelectRelatedTests",
        "test_list_without_select_related"
      ]
    ]
  ],
  "test_list_with_select_related": [
    [
      "tests/select_related/tests.py",
      [
        "SelectRelatedTests",
        "test_list_with_select_related"
      ]
    ]
  ],
  "test_list_with_depth": [
    [
      "tests/select_related/tests.py",
      [
        "SelectRelatedTests",
        "test_list_with_depth"
      ]
    ]
  ],
  "test_select_related_with_extra": [
    [
      "tests/select_related/tests.py",
      [
        "SelectRelatedTests",
        "test_select_related_with_extra"
      ]
    ]
  ],
  "test_certain_fields": [
    [
      "tests/select_related/tests.py",
      [
        "SelectRelatedTests",
        "test_certain_fields"
      ]
    ]
  ],
  "test_more_certain_fields": [
    [
      "tests/select_related/tests.py",
      [
        "SelectRelatedTests",
        "test_more_certain_fields"
      ]
    ]
  ],
  "test_field_traversal": [
    [
      "tests/select_related/tests.py",
      [
        "SelectRelatedTests",
        "test_field_traversal"
      ]
    ]
  ],
  "test_none_clears_list": [
    [
      "tests/select_related/tests.py",
      [
        "SelectRelatedTests",
        "test_none_clears_list"
      ]
    ]
  ],
  "test_chaining": [
    [
      "tests/select_related/tests.py",
      [
        "SelectRelatedTests",
        "test_chaining"
      ]
    ]
  ],
  "test_reverse_relation_caching": [
    [
      "tests/select_related/tests.py",
      [
        "SelectRelatedTests",
        "test_reverse_relation_caching"
      ]
    ]
  ],
  "test_select_related_after_values": [
    [
      "tests/select_related/tests.py",
      [
        "SelectRelatedTests",
        "test_select_related_after_values"
      ]
    ]
  ],
  "test_select_related_after_values_list": [
    [
      "tests/select_related/tests.py",
      [
        "SelectRelatedTests",
        "test_select_related_after_values_list"
      ]
    ]
  ],
  "test_non_relational_field": [
    [
      "tests/select_related/tests.py",
      [
        "SelectRelatedValidationTests",
        "test_non_relational_field"
      ]
    ]
  ],
  "test_non_relational_field_nested": [
    [
      "tests/select_related/tests.py",
      [
        "SelectRelatedValidationTests",
        "test_non_relational_field_nested"
      ]
    ]
  ],
  "test_reverse_relational_field": [
    [
      "tests/select_related/tests.py",
      [
        "SelectRelatedValidationTests",
        "test_reverse_relational_field"
      ]
    ]
  ],
  "test_follow_next_level": [
    [
      "tests/select_related_onetoone/tests.py",
      [
        "ReverseSelectRelatedTestCase",
        "test_follow_next_level"
      ]
    ]
  ],
  "test_follow_two": [
    [
      "tests/select_related_onetoone/tests.py",
      [
        "ReverseSelectRelatedTestCase",
        "test_follow_two"
      ]
    ]
  ],
  "test_follow_two_next_level": [
    [
      "tests/select_related_onetoone/tests.py",
      [
        "ReverseSelectRelatedTestCase",
        "test_follow_two_next_level"
      ]
    ]
  ],
  "test_forward_and_back": [
    [
      "tests/select_related_onetoone/tests.py",
      [
        "ReverseSelectRelatedTestCase",
        "test_forward_and_back"
      ]
    ]
  ],
  "test_back_and_forward": [
    [
      "tests/select_related_onetoone/tests.py",
      [
        "ReverseSelectRelatedTestCase",
        "test_back_and_forward"
      ]
    ]
  ],
  "test_not_followed_by_default": [
    [
      "tests/select_related_onetoone/tests.py",
      [
        "ReverseSelectRelatedTestCase",
        "test_not_followed_by_default"
      ]
    ]
  ],
  "test_follow_from_child_class": [
    [
      "tests/select_related_onetoone/tests.py",
      [
        "ReverseSelectRelatedTestCase",
        "test_follow_from_child_class"
      ]
    ]
  ],
  "test_follow_inheritance": [
    [
      "tests/select_related_onetoone/tests.py",
      [
        "ReverseSelectRelatedTestCase",
        "test_follow_inheritance"
      ]
    ]
  ],
  "test_nullable_relation": [
    [
      "tests/select_related_onetoone/tests.py",
      [
        "ReverseSelectRelatedTestCase",
        "test_nullable_relation"
      ]
    ]
  ],
  "test_missing_reverse": [
    [
      "tests/select_related_onetoone/tests.py",
      [
        "ReverseSelectRelatedTestCase",
        "test_missing_reverse"
      ]
    ]
  ],
  "test_nullable_missing_reverse": [
    [
      "tests/select_related_onetoone/tests.py",
      [
        "ReverseSelectRelatedTestCase",
        "test_nullable_missing_reverse"
      ]
    ]
  ],
  "test_parent_only": [
    [
      "tests/select_related_onetoone/tests.py",
      [
        "ReverseSelectRelatedTestCase",
        "test_parent_only"
      ]
    ]
  ],
  "test_multiple_subclass": [
    [
      "tests/select_related_onetoone/tests.py",
      [
        "ReverseSelectRelatedTestCase",
        "test_multiple_subclass"
      ]
    ]
  ],
  "test_onetoone_with_subclass": [
    [
      "tests/select_related_onetoone/tests.py",
      [
        "ReverseSelectRelatedTestCase",
        "test_onetoone_with_subclass"
      ]
    ]
  ],
  "test_onetoone_with_two_subclasses": [
    [
      "tests/select_related_onetoone/tests.py",
      [
        "ReverseSelectRelatedTestCase",
        "test_onetoone_with_two_subclasses"
      ]
    ]
  ],
  "test_multiinheritance_two_subclasses": [
    [
      "tests/select_related_onetoone/tests.py",
      [
        "ReverseSelectRelatedTestCase",
        "test_multiinheritance_two_subclasses"
      ]
    ]
  ],
  "test_inheritance_deferred": [
    [
      "tests/select_related_onetoone/tests.py",
      [
        "ReverseSelectRelatedTestCase",
        "test_inheritance_deferred"
      ]
    ]
  ],
  "test_inheritance_deferred2": [
    [
      "tests/select_related_onetoone/tests.py",
      [
        "ReverseSelectRelatedTestCase",
        "test_inheritance_deferred2"
      ]
    ]
  ],
  "test_reverse_related_validation": [
    [
      "tests/select_related_onetoone/tests.py",
      [
        "ReverseSelectRelatedValidationTests",
        "test_reverse_related_validation"
      ]
    ]
  ],
  "test_reverse_related_validation_with_filtered_relation": [
    [
      "tests/select_related_onetoone/tests.py",
      [
        "ReverseSelectRelatedValidationTests",
        "test_reverse_related_validation_with_filtered_relation"
      ]
    ]
  ],
  "test_regression_7110": [
    [
      "tests/select_related_regress/tests.py",
      [
        "SelectRelatedRegressTests",
        "test_regression_7110"
      ]
    ]
  ],
  "test_regression_8106": [
    [
      "tests/select_related_regress/tests.py",
      [
        "SelectRelatedRegressTests",
        "test_regression_8106"
      ]
    ]
  ],
  "test_regression_8036": [
    [
      "tests/select_related_regress/tests.py",
      [
        "SelectRelatedRegressTests",
        "test_regression_8036"
      ]
    ]
  ],
  "test_multi_table_inheritance": [
    [
      "tests/select_related_regress/tests.py",
      [
        "SelectRelatedRegressTests",
        "test_multi_table_inheritance"
      ]
    ]
  ],
  "test_regression_12851": [
    [
      "tests/select_related_regress/tests.py",
      [
        "SelectRelatedRegressTests",
        "test_regression_12851"
      ]
    ]
  ],
  "test_null_join_promotion": [
    [
      "tests/select_related_regress/tests.py",
      [
        "SelectRelatedRegressTests",
        "test_null_join_promotion"
      ]
    ]
  ],
  "test_regression_19870": [
    [
      "tests/select_related_regress/tests.py",
      [
        "SelectRelatedRegressTests",
        "test_regression_19870"
      ]
    ]
  ],
  "test_regression_10733": [
    [
      "tests/select_related_regress/tests.py",
      [
        "SelectRelatedRegressTests",
        "test_regression_10733"
      ]
    ]
  ],
  "test_regression_22508": [
    [
      "tests/select_related_regress/tests.py",
      [
        "SelectRelatedRegressTests",
        "test_regression_22508"
      ]
    ]
  ],
  "to_string": [
    [
      "tests/serializers/models/base.py",
      [
        "Team",
        "to_string"
      ]
    ]
  ],
  "data_create": [
    [
      "tests/serializers/test_data.py",
      [
        "data_create"
      ]
    ]
  ],
  "generic_create": [
    [
      "tests/serializers/test_data.py",
      [
        "generic_create"
      ]
    ]
  ],
  "fk_create": [
    [
      "tests/serializers/test_data.py",
      [
        "fk_create"
      ]
    ]
  ],
  "m2m_create": [
    [
      "tests/serializers/test_data.py",
      [
        "m2m_create"
      ]
    ]
  ],
  "im2m_create": [
    [
      "tests/serializers/test_data.py",
      [
        "im2m_create"
      ]
    ]
  ],
  "im_create": [
    [
      "tests/serializers/test_data.py",
      [
        "im_create"
      ]
    ]
  ],
  "o2o_create": [
    [
      "tests/serializers/test_data.py",
      [
        "o2o_create"
      ]
    ]
  ],
  "pk_create": [
    [
      "tests/serializers/test_data.py",
      [
        "pk_create"
      ]
    ]
  ],
  "inherited_create": [
    [
      "tests/serializers/test_data.py",
      [
        "inherited_create"
      ]
    ]
  ],
  "data_compare": [
    [
      "tests/serializers/test_data.py",
      [
        "data_compare"
      ]
    ]
  ],
  "generic_compare": [
    [
      "tests/serializers/test_data.py",
      [
        "generic_compare"
      ]
    ]
  ],
  "fk_compare": [
    [
      "tests/serializers/test_data.py",
      [
        "fk_compare"
      ]
    ]
  ],
  "m2m_compare": [
    [
      "tests/serializers/test_data.py",
      [
        "m2m_compare"
      ]
    ]
  ],
  "im2m_compare": [
    [
      "tests/serializers/test_data.py",
      [
        "im2m_compare"
      ]
    ]
  ],
  "im_compare": [
    [
      "tests/serializers/test_data.py",
      [
        "im_compare"
      ]
    ]
  ],
  "o2o_compare": [
    [
      "tests/serializers/test_data.py",
      [
        "o2o_compare"
      ]
    ]
  ],
  "pk_compare": [
    [
      "tests/serializers/test_data.py",
      [
        "pk_compare"
      ]
    ]
  ],
  "inherited_compare": [
    [
      "tests/serializers/test_data.py",
      [
        "inherited_compare"
      ]
    ]
  ],
  "serializerTest": [
    [
      "tests/serializers/test_data.py",
      [
        "serializerTest"
      ]
    ]
  ],
  "_validate_output": [
    [
      "tests/serializers/test_json.py",
      [
        "JsonSerializerTestCase",
        "_validate_output"
      ]
    ],
    [
      "tests/serializers/test_xml.py",
      [
        "XmlSerializerTestCase",
        "_validate_output"
      ]
    ],
    [
      "tests/serializers/test_yaml.py",
      [
        "YamlSerializerTestCase",
        "_validate_output"
      ]
    ]
  ],
  "_get_pk_values": [
    [
      "tests/serializers/test_json.py",
      [
        "JsonSerializerTestCase",
        "_get_pk_values"
      ]
    ],
    [
      "tests/serializers/test_xml.py",
      [
        "XmlSerializerTestCase",
        "_get_pk_values"
      ]
    ],
    [
      "tests/serializers/test_yaml.py",
      [
        "YamlSerializerTestCase",
        "_get_pk_values"
      ]
    ]
  ],
  "_get_field_values": [
    [
      "tests/serializers/test_json.py",
      [
        "JsonSerializerTestCase",
        "_get_field_values"
      ]
    ],
    [
      "tests/serializers/test_xml.py",
      [
        "XmlSerializerTestCase",
        "_get_field_values"
      ]
    ],
    [
      "tests/serializers/test_yaml.py",
      [
        "YamlSerializerTestCase",
        "_get_field_values"
      ]
    ]
  ],
  "test_indentation_whitespace": [
    [
      "tests/serializers/test_json.py",
      [
        "JsonSerializerTestCase",
        "test_indentation_whitespace"
      ]
    ]
  ],
  "test_json_deserializer_exception": [
    [
      "tests/serializers/test_json.py",
      [
        "JsonSerializerTestCase",
        "test_json_deserializer_exception"
      ]
    ]
  ],
  "test_helpful_error_message_invalid_pk": [
    [
      "tests/serializers/test_json.py",
      [
        "JsonSerializerTestCase",
        "test_helpful_error_message_invalid_pk"
      ]
    ]
  ],
  "test_helpful_error_message_invalid_field": [
    [
      "tests/serializers/test_json.py",
      [
        "JsonSerializerTestCase",
        "test_helpful_error_message_invalid_field"
      ]
    ]
  ],
  "test_helpful_error_message_for_foreign_keys": [
    [
      "tests/serializers/test_json.py",
      [
        "JsonSerializerTestCase",
        "test_helpful_error_message_for_foreign_keys"
      ]
    ]
  ],
  "test_helpful_error_message_for_many2many_non_natural": [
    [
      "tests/serializers/test_json.py",
      [
        "JsonSerializerTestCase",
        "test_helpful_error_message_for_many2many_non_natural"
      ]
    ]
  ],
  "test_helpful_error_message_for_many2many_natural1": [
    [
      "tests/serializers/test_json.py",
      [
        "JsonSerializerTestCase",
        "test_helpful_error_message_for_many2many_natural1"
      ]
    ]
  ],
  "test_helpful_error_message_for_many2many_natural2": [
    [
      "tests/serializers/test_json.py",
      [
        "JsonSerializerTestCase",
        "test_helpful_error_message_for_many2many_natural2"
      ]
    ]
  ],
  "test_helpful_error_message_for_many2many_not_iterable": [
    [
      "tests/serializers/test_json.py",
      [
        "JsonSerializerTestCase",
        "test_helpful_error_message_for_many2many_not_iterable"
      ]
    ]
  ],
  "test_lazy_string_encoding": [
    [
      "tests/serializers/test_json.py",
      [
        "DjangoJSONEncoderTests",
        "test_lazy_string_encoding"
      ]
    ]
  ],
  "test_timedelta": [
    [
      "tests/serializers/test_json.py",
      [
        "DjangoJSONEncoderTests",
        "test_timedelta"
      ]
    ]
  ],
  "natural_key_serializer_test": [
    [
      "tests/serializers/test_natural.py",
      [
        "natural_key_serializer_test"
      ]
    ]
  ],
  "natural_key_test": [
    [
      "tests/serializers/test_natural.py",
      [
        "natural_key_test"
      ]
    ]
  ],
  "natural_pk_mti_test": [
    [
      "tests/serializers/test_natural.py",
      [
        "natural_pk_mti_test"
      ]
    ]
  ],
  "forward_ref_fk_test": [
    [
      "tests/serializers/test_natural.py",
      [
        "forward_ref_fk_test"
      ]
    ]
  ],
  "forward_ref_fk_with_error_test": [
    [
      "tests/serializers/test_natural.py",
      [
        "forward_ref_fk_with_error_test"
      ]
    ]
  ],
  "forward_ref_m2m_test": [
    [
      "tests/serializers/test_natural.py",
      [
        "forward_ref_m2m_test"
      ]
    ]
  ],
  "forward_ref_m2m_with_error_test": [
    [
      "tests/serializers/test_natural.py",
      [
        "forward_ref_m2m_with_error_test"
      ]
    ]
  ],
  "pk_with_default": [
    [
      "tests/serializers/test_natural.py",
      [
        "pk_with_default"
      ]
    ]
  ],
  "test_control_char_failure": [
    [
      "tests/serializers/test_xml.py",
      [
        "XmlSerializerTestCase",
        "test_control_char_failure"
      ]
    ]
  ],
  "test_no_dtd": [
    [
      "tests/serializers/test_xml.py",
      [
        "XmlSerializerTestCase",
        "test_no_dtd"
      ]
    ]
  ],
  "import_module": [
    [
      "tests/serializers/test_yaml.py",
      [
        "YamlImportModuleMock",
        "import_module"
      ]
    ]
  ],
  "test_serializer_pyyaml_error_message": [
    [
      "tests/serializers/test_yaml.py",
      [
        "NoYamlSerializerTestCase",
        "test_serializer_pyyaml_error_message"
      ]
    ]
  ],
  "test_deserializer_pyyaml_error_message": [
    [
      "tests/serializers/test_yaml.py",
      [
        "NoYamlSerializerTestCase",
        "test_deserializer_pyyaml_error_message"
      ]
    ]
  ],
  "test_dumpdata_pyyaml_error_message": [
    [
      "tests/serializers/test_yaml.py",
      [
        "NoYamlSerializerTestCase",
        "test_dumpdata_pyyaml_error_message"
      ]
    ]
  ],
  "test_yaml_deserializer_exception": [
    [
      "tests/serializers/test_yaml.py",
      [
        "YamlSerializerTestCase",
        "test_yaml_deserializer_exception"
      ]
    ]
  ],
  "test_register": [
    [
      "tests/serializers/tests.py",
      [
        "SerializerRegistrationTests",
        "test_register"
      ]
    ]
  ],
  "test_unregister": [
    [
      "tests/serializers/tests.py",
      [
        "SerializerRegistrationTests",
        "test_unregister"
      ]
    ]
  ],
  "test_unregister_unknown_serializer": [
    [
      "tests/serializers/tests.py",
      [
        "SerializerRegistrationTests",
        "test_unregister_unknown_serializer"
      ]
    ]
  ],
  "test_get_unknown_serializer": [
    [
      "tests/serializers/tests.py",
      [
        "SerializerRegistrationTests",
        "test_get_unknown_serializer"
      ]
    ]
  ],
  "test_get_unknown_deserializer": [
    [
      "tests/serializers/tests.py",
      [
        "SerializerRegistrationTests",
        "test_get_unknown_deserializer"
      ]
    ]
  ],
  "test_serialize": [
    [
      "tests/serializers/tests.py",
      [
        "SerializersTestBase",
        "test_serialize"
      ]
    ]
  ],
  "test_serializer_roundtrip": [
    [
      "tests/serializers/tests.py",
      [
        "SerializersTestBase",
        "test_serializer_roundtrip"
      ]
    ]
  ],
  "test_serialize_to_stream": [
    [
      "tests/serializers/tests.py",
      [
        "SerializersTestBase",
        "test_serialize_to_stream"
      ]
    ]
  ],
  "test_serialize_specific_fields": [
    [
      "tests/serializers/tests.py",
      [
        "SerializersTestBase",
        "test_serialize_specific_fields"
      ]
    ]
  ],
  "test_altering_serialized_output": [
    [
      "tests/serializers/tests.py",
      [
        "SerializersTestBase",
        "test_altering_serialized_output"
      ]
    ]
  ],
  "test_one_to_one_as_pk": [
    [
      "tests/serializers/tests.py",
      [
        "SerializersTestBase",
        "test_one_to_one_as_pk"
      ]
    ]
  ],
  "test_serialize_field_subset": [
    [
      "tests/serializers/tests.py",
      [
        "SerializersTestBase",
        "test_serialize_field_subset"
      ]
    ]
  ],
  "test_serialize_unicode": [
    [
      "tests/serializers/tests.py",
      [
        "SerializersTestBase",
        "test_serialize_unicode"
      ]
    ]
  ],
  "test_serialize_progressbar": [
    [
      "tests/serializers/tests.py",
      [
        "SerializersTestBase",
        "test_serialize_progressbar"
      ]
    ]
  ],
  "test_serialize_superfluous_queries": [
    [
      "tests/serializers/tests.py",
      [
        "SerializersTestBase",
        "test_serialize_superfluous_queries"
      ]
    ]
  ],
  "test_serialize_with_null_pk": [
    [
      "tests/serializers/tests.py",
      [
        "SerializersTestBase",
        "test_serialize_with_null_pk"
      ]
    ]
  ],
  "test_float_serialization": [
    [
      "tests/serializers/tests.py",
      [
        "SerializersTestBase",
        "test_float_serialization"
      ]
    ]
  ],
  "test_deferred_field_serialization": [
    [
      "tests/serializers/tests.py",
      [
        "SerializersTestBase",
        "test_deferred_field_serialization"
      ]
    ]
  ],
  "test_custom_field_serialization": [
    [
      "tests/serializers/tests.py",
      [
        "SerializersTestBase",
        "test_custom_field_serialization"
      ]
    ]
  ],
  "test_pre_1000ad_date": [
    [
      "tests/serializers/tests.py",
      [
        "SerializersTestBase",
        "test_pre_1000ad_date"
      ]
    ]
  ],
  "test_pkless_serialized_strings": [
    [
      "tests/serializers/tests.py",
      [
        "SerializersTestBase",
        "test_pkless_serialized_strings"
      ]
    ]
  ],
  "test_deterministic_mapping_ordering": [
    [
      "tests/serializers/tests.py",
      [
        "SerializersTestBase",
        "test_deterministic_mapping_ordering"
      ]
    ]
  ],
  "test_deserialize_force_insert": [
    [
      "tests/serializers/tests.py",
      [
        "SerializersTestBase",
        "test_deserialize_force_insert"
      ]
    ]
  ],
  "test_serialize_proxy_model": [
    [
      "tests/serializers/tests.py",
      [
        "SerializersTestBase",
        "test_serialize_proxy_model"
      ]
    ]
  ],
  "test_serialize_inherited_fields": [
    [
      "tests/serializers/tests.py",
      [
        "SerializersTestBase",
        "test_serialize_inherited_fields"
      ]
    ]
  ],
  "test_stream_class": [
    [
      "tests/serializers/tests.py",
      [
        "SerializerAPITests",
        "test_stream_class"
      ]
    ]
  ],
  "test_forward_refs": [
    [
      "tests/serializers/tests.py",
      [
        "SerializersTransactionTestBase",
        "test_forward_refs"
      ]
    ]
  ],
  "register_tests": [
    [
      "tests/serializers/tests.py",
      [
        "register_tests"
      ]
    ]
  ],
  "sendall": [
    [
      "tests/servers/test_basehttp.py",
      [
        "Stub",
        "sendall"
      ]
    ]
  ],
  "test_log_message": [
    [
      "tests/servers/test_basehttp.py",
      [
        "WSGIRequestHandlerTestCase",
        "test_log_message"
      ]
    ]
  ],
  "test_https": [
    [
      "tests/servers/test_basehttp.py",
      [
        "WSGIRequestHandlerTestCase",
        "test_https"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "FunctionTests",
        "test_https"
      ]
    ]
  ],
  "test_app": [
    [
      "tests/servers/test_basehttp.py",
      [
        "WSGIRequestHandlerTestCase",
        "test_strips_underscore_headers",
        "test_app"
      ]
    ]
  ],
  "makefile": [
    [
      "tests/servers/test_basehttp.py",
      [
        "WSGIRequestHandlerTestCase",
        "test_strips_underscore_headers",
        "makefile"
      ]
    ]
  ],
  "test_strips_underscore_headers": [
    [
      "tests/servers/test_basehttp.py",
      [
        "WSGIRequestHandlerTestCase",
        "test_strips_underscore_headers"
      ]
    ]
  ],
  "run_live_server_thread": [
    [
      "tests/servers/test_liveserverthread.py",
      [
        "LiveServerThreadTest",
        "run_live_server_thread"
      ]
    ]
  ],
  "test_closes_connections": [
    [
      "tests/servers/test_liveserverthread.py",
      [
        "LiveServerThreadTest",
        "test_closes_connections"
      ]
    ]
  ],
  "urlopen": [
    [
      "tests/servers/tests.py",
      [
        "LiveServerBase",
        "urlopen"
      ]
    ],
    [
      "tests/staticfiles_tests/test_liveserver.py",
      [
        "StaticLiveServerView",
        "urlopen"
      ]
    ]
  ],
  "test_live_server_url_is_class_property": [
    [
      "tests/servers/tests.py",
      [
        "LiveServerAddress",
        "test_live_server_url_is_class_property"
      ]
    ]
  ],
  "test_protocol": [
    [
      "tests/servers/tests.py",
      [
        "LiveServerViews",
        "test_protocol"
      ]
    ]
  ],
  "test_closes_connection_without_content_length": [
    [
      "tests/servers/tests.py",
      [
        "LiveServerViews",
        "test_closes_connection_without_content_length"
      ]
    ]
  ],
  "test_keep_alive_on_connection_with_content_length": [
    [
      "tests/servers/tests.py",
      [
        "LiveServerViews",
        "test_keep_alive_on_connection_with_content_length"
      ]
    ]
  ],
  "test_keep_alive_connection_clears_previous_request_data": [
    [
      "tests/servers/tests.py",
      [
        "LiveServerViews",
        "test_keep_alive_connection_clears_previous_request_data"
      ]
    ]
  ],
  "test_404": [
    [
      "tests/servers/tests.py",
      [
        "LiveServerViews",
        "test_404"
      ]
    ],
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "DebugViewTests",
        "test_404"
      ]
    ],
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "NonDjangoTemplatesDebugViewTests",
        "test_404"
      ]
    ],
    [
      "tests/view_tests/tests/test_static.py",
      [
        "StaticTests",
        "test_404"
      ]
    ]
  ],
  "test_static_files": [
    [
      "tests/servers/tests.py",
      [
        "LiveServerViews",
        "test_static_files"
      ]
    ]
  ],
  "test_no_collectstatic_emulation": [
    [
      "tests/servers/tests.py",
      [
        "LiveServerViews",
        "test_no_collectstatic_emulation"
      ]
    ]
  ],
  "test_media_files": [
    [
      "tests/servers/tests.py",
      [
        "LiveServerViews",
        "test_media_files"
      ]
    ]
  ],
  "test_environ": [
    [
      "tests/servers/tests.py",
      [
        "LiveServerViews",
        "test_environ"
      ]
    ]
  ],
  "test_closes_connection_with_content_length": [
    [
      "tests/servers/tests.py",
      [
        "SingleTreadLiveServerViews",
        "test_closes_connection_with_content_length"
      ]
    ]
  ],
  "test_database_writes": [
    [
      "tests/servers/tests.py",
      [
        "LiveServerDatabase",
        "test_database_writes"
      ]
    ]
  ],
  "test_port_bind": [
    [
      "tests/servers/tests.py",
      [
        "LiveServerPort",
        "test_port_bind"
      ]
    ]
  ],
  "test_specified_port_bind": [
    [
      "tests/servers/tests.py",
      [
        "LiveServerPort",
        "test_specified_port_bind"
      ]
    ]
  ],
  "test_view_calls_subview": [
    [
      "tests/servers/tests.py",
      [
        "LiverServerThreadedTests",
        "test_view_calls_subview"
      ]
    ]
  ],
  "test_check_model_instance_from_subview": [
    [
      "tests/servers/tests.py",
      [
        "LiverServerThreadedTests",
        "test_check_model_instance_from_subview"
      ]
    ]
  ],
  "example_view": [
    [
      "tests/servers/views.py",
      [
        "example_view"
      ]
    ]
  ],
  "streaming_example_view": [
    [
      "tests/servers/views.py",
      [
        "streaming_example_view"
      ]
    ]
  ],
  "model_view": [
    [
      "tests/servers/views.py",
      [
        "model_view"
      ]
    ]
  ],
  "environ_view": [
    [
      "tests/servers/views.py",
      [
        "environ_view"
      ]
    ]
  ],
  "subview": [
    [
      "tests/servers/views.py",
      [
        "subview"
      ]
    ]
  ],
  "subview_calling_view": [
    [
      "tests/servers/views.py",
      [
        "subview_calling_view"
      ]
    ]
  ],
  "check_model_instance_from_subview": [
    [
      "tests/servers/views.py",
      [
        "check_model_instance_from_subview"
      ]
    ]
  ],
  "method_view": [
    [
      "tests/servers/views.py",
      [
        "method_view"
      ]
    ],
    [
      "tests/urlpatterns_reverse/method_view_urls.py",
      [
        "ViewContainer",
        "method_view"
      ]
    ]
  ],
  "test_new_session": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_new_session"
      ]
    ]
  ],
  "test_store": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_store"
      ]
    ]
  ],
  "test_pop": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_pop"
      ]
    ]
  ],
  "test_pop_default": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_pop_default"
      ]
    ]
  ],
  "test_pop_default_named_argument": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_pop_default_named_argument"
      ]
    ]
  ],
  "test_pop_no_default_keyerror_raised": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_pop_no_default_keyerror_raised"
      ]
    ]
  ],
  "test_flush": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_flush"
      ]
    ]
  ],
  "test_cycle": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_cycle"
      ]
    ],
    [
      "tests/sessions_tests/tests.py",
      [
        "CookieSessionTests",
        "test_cycle"
      ]
    ]
  ],
  "test_cycle_with_no_session_cache": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_cycle_with_no_session_cache"
      ]
    ]
  ],
  "test_save_doesnt_clear_data": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_save_doesnt_clear_data"
      ]
    ]
  ],
  "test_invalid_key": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_invalid_key"
      ]
    ]
  ],
  "test_session_key_empty_string_invalid": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_session_key_empty_string_invalid"
      ]
    ]
  ],
  "test_session_key_too_short_invalid": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_session_key_too_short_invalid"
      ]
    ]
  ],
  "test_session_key_valid_string_saved": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_session_key_valid_string_saved"
      ]
    ]
  ],
  "test_session_key_is_read_only": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_session_key_is_read_only"
      ]
    ]
  ],
  "test_default_expiry": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_default_expiry"
      ]
    ],
    [
      "tests/sessions_tests/tests.py",
      [
        "CustomDatabaseSessionTests",
        "test_default_expiry"
      ]
    ]
  ],
  "test_custom_expiry_seconds": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_custom_expiry_seconds"
      ]
    ]
  ],
  "test_custom_expiry_timedelta": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_custom_expiry_timedelta"
      ]
    ]
  ],
  "test_custom_expiry_datetime": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_custom_expiry_datetime"
      ]
    ]
  ],
  "test_custom_expiry_reset": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_custom_expiry_reset"
      ]
    ],
    [
      "tests/sessions_tests/tests.py",
      [
        "CustomDatabaseSessionTests",
        "test_custom_expiry_reset"
      ]
    ]
  ],
  "test_get_expire_at_browser_close": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_get_expire_at_browser_close"
      ]
    ]
  ],
  "test_decode_legacy": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_decode_legacy"
      ]
    ]
  ],
  "test_decode_failure_logged_to_security": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_decode_failure_logged_to_security"
      ]
    ]
  ],
  "test_actual_expiry": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_actual_expiry"
      ]
    ],
    [
      "tests/sessions_tests/tests.py",
      [
        "CookieSessionTests",
        "test_actual_expiry"
      ]
    ]
  ],
  "test_session_load_does_not_create_record": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_session_load_does_not_create_record"
      ]
    ],
    [
      "tests/sessions_tests/tests.py",
      [
        "CookieSessionTests",
        "test_session_load_does_not_create_record"
      ]
    ]
  ],
  "test_session_save_does_not_resurrect_session_logged_out_in_other_context": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionTestsMixin",
        "test_session_save_does_not_resurrect_session_logged_out_in_other_context"
      ]
    ],
    [
      "tests/sessions_tests/tests.py",
      [
        "CookieSessionTests",
        "test_session_save_does_not_resurrect_session_logged_out_in_other_context"
      ]
    ]
  ],
  "test_session_str": [
    [
      "tests/sessions_tests/tests.py",
      [
        "DatabaseSessionTests",
        "test_session_str"
      ]
    ]
  ],
  "test_session_get_decoded": [
    [
      "tests/sessions_tests/tests.py",
      [
        "DatabaseSessionTests",
        "test_session_get_decoded"
      ]
    ]
  ],
  "test_sessionmanager_save": [
    [
      "tests/sessions_tests/tests.py",
      [
        "DatabaseSessionTests",
        "test_sessionmanager_save"
      ]
    ]
  ],
  "test_clearsessions_command": [
    [
      "tests/sessions_tests/tests.py",
      [
        "DatabaseSessionTests",
        "test_clearsessions_command"
      ]
    ],
    [
      "tests/sessions_tests/tests.py",
      [
        "FileSessionTests",
        "test_clearsessions_command"
      ]
    ]
  ],
  "test_extra_session_field": [
    [
      "tests/sessions_tests/tests.py",
      [
        "CustomDatabaseSessionTests",
        "test_extra_session_field"
      ]
    ]
  ],
  "test_exists_searches_cache_first": [
    [
      "tests/sessions_tests/tests.py",
      [
        "CacheDBSessionTests",
        "test_exists_searches_cache_first"
      ]
    ]
  ],
  "test_load_overlong_key": [
    [
      "tests/sessions_tests/tests.py",
      [
        "CacheDBSessionTests",
        "test_load_overlong_key"
      ]
    ],
    [
      "tests/sessions_tests/tests.py",
      [
        "CacheSessionTests",
        "test_load_overlong_key"
      ]
    ]
  ],
  "test_non_default_cache": [
    [
      "tests/sessions_tests/tests.py",
      [
        "CacheDBSessionTests",
        "test_non_default_cache"
      ]
    ],
    [
      "tests/sessions_tests/tests.py",
      [
        "CacheSessionTests",
        "test_non_default_cache"
      ]
    ]
  ],
  "test_configuration_check": [
    [
      "tests/sessions_tests/tests.py",
      [
        "FileSessionTests",
        "test_configuration_check"
      ]
    ]
  ],
  "test_invalid_key_backslash": [
    [
      "tests/sessions_tests/tests.py",
      [
        "FileSessionTests",
        "test_invalid_key_backslash"
      ]
    ]
  ],
  "test_invalid_key_forwardslash": [
    [
      "tests/sessions_tests/tests.py",
      [
        "FileSessionTests",
        "test_invalid_key_forwardslash"
      ]
    ]
  ],
  "count_sessions": [
    [
      "tests/sessions_tests/tests.py",
      [
        "FileSessionTests",
        "test_clearsessions_command",
        "count_sessions"
      ]
    ]
  ],
  "test_default_cache": [
    [
      "tests/sessions_tests/tests.py",
      [
        "CacheSessionTests",
        "test_default_cache"
      ]
    ]
  ],
  "test_create_and_save": [
    [
      "tests/sessions_tests/tests.py",
      [
        "CacheSessionTests",
        "test_create_and_save"
      ]
    ]
  ],
  "get_response_touching_session": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionMiddlewareTests",
        "get_response_touching_session"
      ]
    ]
  ],
  "test_secure_session_cookie": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionMiddlewareTests",
        "test_secure_session_cookie"
      ]
    ]
  ],
  "test_httponly_session_cookie": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionMiddlewareTests",
        "test_httponly_session_cookie"
      ]
    ]
  ],
  "test_samesite_session_cookie": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionMiddlewareTests",
        "test_samesite_session_cookie"
      ]
    ]
  ],
  "test_no_httponly_session_cookie": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionMiddlewareTests",
        "test_no_httponly_session_cookie"
      ]
    ]
  ],
  "test_session_save_on_500": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionMiddlewareTests",
        "test_session_save_on_500"
      ]
    ]
  ],
  "test_session_update_error_redirect": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionMiddlewareTests",
        "test_session_update_error_redirect"
      ]
    ]
  ],
  "response_ending_session": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionMiddlewareTests",
        "test_session_delete_on_end",
        "response_ending_session"
      ]
    ],
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionMiddlewareTests",
        "test_session_delete_on_end_with_custom_domain_and_path",
        "response_ending_session"
      ]
    ]
  ],
  "test_session_delete_on_end": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionMiddlewareTests",
        "test_session_delete_on_end"
      ]
    ]
  ],
  "test_session_delete_on_end_with_custom_domain_and_path": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionMiddlewareTests",
        "test_session_delete_on_end_with_custom_domain_and_path"
      ]
    ]
  ],
  "test_flush_empty_without_session_cookie_doesnt_set_cookie": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionMiddlewareTests",
        "test_flush_empty_without_session_cookie_doesnt_set_cookie"
      ]
    ]
  ],
  "response_set_session": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionMiddlewareTests",
        "test_empty_session_saved",
        "response_set_session"
      ]
    ]
  ],
  "test_empty_session_saved": [
    [
      "tests/sessions_tests/tests.py",
      [
        "SessionMiddlewareTests",
        "test_empty_session_saved"
      ]
    ]
  ],
  "test_unpickling_exception": [
    [
      "tests/sessions_tests/tests.py",
      [
        "CookieSessionTests",
        "test_unpickling_exception"
      ]
    ]
  ],
  "test_method_list_override": [
    [
      "tests/settings_tests/tests.py",
      [
        "FullyDecoratedTranTestCase",
        "test_method_list_override"
      ]
    ]
  ],
  "test_method_list_override_no_ops": [
    [
      "tests/settings_tests/tests.py",
      [
        "FullyDecoratedTranTestCase",
        "test_method_list_override_no_ops"
      ]
    ]
  ],
  "test_method_list_override_strings": [
    [
      "tests/settings_tests/tests.py",
      [
        "FullyDecoratedTranTestCase",
        "test_method_list_override_strings"
      ]
    ]
  ],
  "test_method_list_override_nested_order": [
    [
      "tests/settings_tests/tests.py",
      [
        "FullyDecoratedTranTestCase",
        "test_method_list_override_nested_order"
      ]
    ]
  ],
  "test_method_override": [
    [
      "tests/settings_tests/tests.py",
      [
        "FullyDecoratedTranTestCase",
        "test_method_override"
      ]
    ],
    [
      "tests/settings_tests/tests.py",
      [
        "FullyDecoratedTestCase",
        "test_method_override"
      ]
    ],
    [
      "tests/settings_tests/tests.py",
      [
        "ClassDecoratedTestCase",
        "test_method_override"
      ]
    ]
  ],
  "test_decorated_testcase_name": [
    [
      "tests/settings_tests/tests.py",
      [
        "FullyDecoratedTranTestCase",
        "test_decorated_testcase_name"
      ]
    ]
  ],
  "test_decorated_testcase_module": [
    [
      "tests/settings_tests/tests.py",
      [
        "FullyDecoratedTranTestCase",
        "test_decorated_testcase_module"
      ]
    ]
  ],
  "test_max_recursion_error": [
    [
      "tests/settings_tests/tests.py",
      [
        "ClassDecoratedTestCaseSuper",
        "test_max_recursion_error"
      ]
    ],
    [
      "tests/settings_tests/tests.py",
      [
        "ClassDecoratedTestCase",
        "test_max_recursion_error"
      ]
    ]
  ],
  "test_setupclass_override": [
    [
      "tests/settings_tests/tests.py",
      [
        "ClassDecoratedTestCase",
        "test_setupclass_override"
      ]
    ]
  ],
  "test_override_settings_inheritance": [
    [
      "tests/settings_tests/tests.py",
      [
        "ChildDecoratedTestCase",
        "test_override_settings_inheritance"
      ]
    ]
  ],
  "signal_callback": [
    [
      "tests/settings_tests/tests.py",
      [
        "SettingsTests",
        "signal_callback"
      ]
    ]
  ],
  "test_override_change": [
    [
      "tests/settings_tests/tests.py",
      [
        "SettingsTests",
        "test_override_change"
      ]
    ]
  ],
  "test_override_doesnt_leak": [
    [
      "tests/settings_tests/tests.py",
      [
        "SettingsTests",
        "test_override_doesnt_leak"
      ]
    ]
  ],
  "test_decorator": [
    [
      "tests/settings_tests/tests.py",
      [
        "SettingsTests",
        "test_decorator"
      ]
    ]
  ],
  "test_class_decorator": [
    [
      "tests/settings_tests/tests.py",
      [
        "SettingsTests",
        "test_class_decorator"
      ]
    ]
  ],
  "test_signal_callback_context_manager": [
    [
      "tests/settings_tests/tests.py",
      [
        "SettingsTests",
        "test_signal_callback_context_manager"
      ]
    ]
  ],
  "test_signal_callback_decorator": [
    [
      "tests/settings_tests/tests.py",
      [
        "SettingsTests",
        "test_signal_callback_decorator"
      ]
    ]
  ],
  "test_settings_delete": [
    [
      "tests/settings_tests/tests.py",
      [
        "SettingsTests",
        "test_settings_delete"
      ]
    ]
  ],
  "test_settings_delete_wrapped": [
    [
      "tests/settings_tests/tests.py",
      [
        "SettingsTests",
        "test_settings_delete_wrapped"
      ]
    ]
  ],
  "test_override_settings_delete": [
    [
      "tests/settings_tests/tests.py",
      [
        "SettingsTests",
        "test_override_settings_delete"
      ]
    ]
  ],
  "test_override_settings_nested": [
    [
      "tests/settings_tests/tests.py",
      [
        "SettingsTests",
        "test_override_settings_nested"
      ]
    ]
  ],
  "test_no_secret_key": [
    [
      "tests/settings_tests/tests.py",
      [
        "SettingsTests",
        "test_no_secret_key"
      ]
    ]
  ],
  "test_no_settings_module": [
    [
      "tests/settings_tests/tests.py",
      [
        "SettingsTests",
        "test_no_settings_module"
      ]
    ]
  ],
  "test_already_configured": [
    [
      "tests/settings_tests/tests.py",
      [
        "SettingsTests",
        "test_already_configured"
      ]
    ]
  ],
  "test_nonupper_settings_prohibited_in_configure": [
    [
      "tests/settings_tests/tests.py",
      [
        "SettingsTests",
        "test_nonupper_settings_prohibited_in_configure"
      ]
    ]
  ],
  "test_nonupper_settings_ignored_in_default_settings": [
    [
      "tests/settings_tests/tests.py",
      [
        "SettingsTests",
        "test_nonupper_settings_ignored_in_default_settings"
      ]
    ]
  ],
  "test_incorrect_timezone": [
    [
      "tests/settings_tests/tests.py",
      [
        "SettingsTests",
        "test_incorrect_timezone"
      ]
    ]
  ],
  "test_complex_override_warning": [
    [
      "tests/settings_tests/tests.py",
      [
        "TestComplexSettingOverride",
        "test_complex_override_warning"
      ]
    ]
  ],
  "test_set_without_xheader": [
    [
      "tests/settings_tests/tests.py",
      [
        "SecureProxySslHeaderTest",
        "test_set_without_xheader"
      ]
    ]
  ],
  "test_set_with_xheader_wrong": [
    [
      "tests/settings_tests/tests.py",
      [
        "SecureProxySslHeaderTest",
        "test_set_with_xheader_wrong"
      ]
    ]
  ],
  "test_set_with_xheader_right": [
    [
      "tests/settings_tests/tests.py",
      [
        "SecureProxySslHeaderTest",
        "test_set_with_xheader_right"
      ]
    ]
  ],
  "test_xheader_preferred_to_underlying_request": [
    [
      "tests/settings_tests/tests.py",
      [
        "SecureProxySslHeaderTest",
        "test_xheader_preferred_to_underlying_request"
      ]
    ]
  ],
  "test_configure": [
    [
      "tests/settings_tests/tests.py",
      [
        "IsOverriddenTest",
        "test_configure"
      ]
    ]
  ],
  "test_module": [
    [
      "tests/settings_tests/tests.py",
      [
        "IsOverriddenTest",
        "test_module"
      ]
    ]
  ],
  "test_unevaluated_lazysettings_repr": [
    [
      "tests/settings_tests/tests.py",
      [
        "IsOverriddenTest",
        "test_unevaluated_lazysettings_repr"
      ]
    ]
  ],
  "test_evaluated_lazysettings_repr": [
    [
      "tests/settings_tests/tests.py",
      [
        "IsOverriddenTest",
        "test_evaluated_lazysettings_repr"
      ]
    ]
  ],
  "test_usersettingsholder_repr": [
    [
      "tests/settings_tests/tests.py",
      [
        "IsOverriddenTest",
        "test_usersettingsholder_repr"
      ]
    ]
  ],
  "test_settings_repr": [
    [
      "tests/settings_tests/tests.py",
      [
        "IsOverriddenTest",
        "test_settings_repr"
      ]
    ]
  ],
  "test_tuple_settings": [
    [
      "tests/settings_tests/tests.py",
      [
        "TestListSettings",
        "test_tuple_settings"
      ]
    ]
  ],
  "check_spy_receiver_exit_calls": [
    [
      "tests/settings_tests/tests.py",
      [
        "OverrideSettingsIsolationOnExceptionTests",
        "check_spy_receiver_exit_calls"
      ]
    ]
  ],
  "test_override_settings_both": [
    [
      "tests/settings_tests/tests.py",
      [
        "OverrideSettingsIsolationOnExceptionTests",
        "test_override_settings_both"
      ]
    ]
  ],
  "test_override_settings_enter": [
    [
      "tests/settings_tests/tests.py",
      [
        "OverrideSettingsIsolationOnExceptionTests",
        "test_override_settings_enter"
      ]
    ]
  ],
  "test_override_settings_exit": [
    [
      "tests/settings_tests/tests.py",
      [
        "OverrideSettingsIsolationOnExceptionTests",
        "test_override_settings_exit"
      ]
    ]
  ],
  "test_override_settings_reusable_on_enter": [
    [
      "tests/settings_tests/tests.py",
      [
        "OverrideSettingsIsolationOnExceptionTests",
        "test_override_settings_reusable_on_enter"
      ]
    ]
  ],
  "set_script_name": [
    [
      "tests/settings_tests/tests.py",
      [
        "MediaURLStaticURLPrefixTest",
        "set_script_name"
      ]
    ]
  ],
  "test_add_script_name_prefix": [
    [
      "tests/settings_tests/tests.py",
      [
        "MediaURLStaticURLPrefixTest",
        "test_add_script_name_prefix"
      ]
    ]
  ],
  "test_command_option": [
    [
      "tests/shell/tests.py",
      [
        "ShellCommandTestCase",
        "test_command_option"
      ]
    ]
  ],
  "test_stdin_read": [
    [
      "tests/shell/tests.py",
      [
        "ShellCommandTestCase",
        "test_stdin_read"
      ]
    ]
  ],
  "test_shell_with_ipython_not_installed": [
    [
      "tests/shell/tests.py",
      [
        "ShellCommandTestCase",
        "test_shell_with_ipython_not_installed"
      ]
    ]
  ],
  "test_shell_with_bpython_not_installed": [
    [
      "tests/shell/tests.py",
      [
        "ShellCommandTestCase",
        "test_shell_with_bpython_not_installed"
      ]
    ]
  ],
  "test_render_with_multiple_templates": [
    [
      "tests/shortcuts/tests.py",
      [
        "RenderTests",
        "test_render_with_multiple_templates"
      ]
    ]
  ],
  "test_render_with_content_type": [
    [
      "tests/shortcuts/tests.py",
      [
        "RenderTests",
        "test_render_with_content_type"
      ]
    ]
  ],
  "test_render_with_status": [
    [
      "tests/shortcuts/tests.py",
      [
        "RenderTests",
        "test_render_with_status"
      ]
    ]
  ],
  "test_render_with_using": [
    [
      "tests/shortcuts/tests.py",
      [
        "RenderTests",
        "test_render_with_using"
      ]
    ]
  ],
  "render_view": [
    [
      "tests/shortcuts/views.py",
      [
        "render_view"
      ]
    ]
  ],
  "render_view_with_multiple_templates": [
    [
      "tests/shortcuts/views.py",
      [
        "render_view_with_multiple_templates"
      ]
    ]
  ],
  "render_view_with_content_type": [
    [
      "tests/shortcuts/views.py",
      [
        "render_view_with_content_type"
      ]
    ]
  ],
  "render_view_with_status": [
    [
      "tests/shortcuts/views.py",
      [
        "render_view_with_status"
      ]
    ]
  ],
  "render_view_with_using": [
    [
      "tests/shortcuts/views.py",
      [
        "render_view_with_using"
      ]
    ]
  ],
  "test_providing_args_warning": [
    [
      "tests/signals/test_deprecation.py",
      [
        "SignalDeprecationTests",
        "test_providing_args_warning"
      ]
    ]
  ],
  "test_without_providing_args_does_not_warn": [
    [
      "tests/signals/test_deprecation.py",
      [
        "SignalDeprecationTests",
        "test_without_providing_args_does_not_warn"
      ]
    ]
  ],
  "test_model_pre_init_and_post_init": [
    [
      "tests/signals/tests.py",
      [
        "SignalTests",
        "test_model_pre_init_and_post_init"
      ]
    ]
  ],
  "pre_save_handler": [
    [
      "tests/signals/tests.py",
      [
        "SignalTests",
        "test_save_signals",
        "pre_save_handler"
      ]
    ],
    [
      "tests/signals/tests.py",
      [
        "SignalTests",
        "test_save_and_delete_signals_with_m2m",
        "pre_save_handler"
      ]
    ]
  ],
  "post_save_handler": [
    [
      "tests/signals/tests.py",
      [
        "SignalTests",
        "test_save_signals",
        "post_save_handler"
      ]
    ],
    [
      "tests/signals/tests.py",
      [
        "SignalTests",
        "test_save_and_delete_signals_with_m2m",
        "post_save_handler"
      ]
    ]
  ],
  "test_save_signals": [
    [
      "tests/signals/tests.py",
      [
        "SignalTests",
        "test_save_signals"
      ]
    ]
  ],
  "pre_delete_handler": [
    [
      "tests/signals/tests.py",
      [
        "SignalTests",
        "test_delete_signals",
        "pre_delete_handler"
      ]
    ],
    [
      "tests/signals/tests.py",
      [
        "SignalTests",
        "test_save_and_delete_signals_with_m2m",
        "pre_delete_handler"
      ]
    ]
  ],
  "test_delete_signals": [
    [
      "tests/signals/tests.py",
      [
        "SignalTests",
        "test_delete_signals"
      ]
    ]
  ],
  "test_decorators": [
    [
      "tests/signals/tests.py",
      [
        "SignalTests",
        "test_decorators"
      ]
    ]
  ],
  "post_delete_handler": [
    [
      "tests/signals/tests.py",
      [
        "SignalTests",
        "test_save_and_delete_signals_with_m2m",
        "post_delete_handler"
      ]
    ]
  ],
  "test_save_and_delete_signals_with_m2m": [
    [
      "tests/signals/tests.py",
      [
        "SignalTests",
        "test_save_and_delete_signals_with_m2m"
      ]
    ]
  ],
  "test_disconnect_in_dispatch": [
    [
      "tests/signals/tests.py",
      [
        "SignalTests",
        "test_disconnect_in_dispatch"
      ]
    ]
  ],
  "test_lazy_model_signal": [
    [
      "tests/signals/tests.py",
      [
        "SignalTests",
        "test_lazy_model_signal"
      ]
    ]
  ],
  "test_invalid_sender_model_name": [
    [
      "tests/signals/tests.py",
      [
        "LazyModelRefTests",
        "test_invalid_sender_model_name"
      ]
    ]
  ],
  "test_already_loaded_model": [
    [
      "tests/signals/tests.py",
      [
        "LazyModelRefTests",
        "test_already_loaded_model"
      ]
    ]
  ],
  "test_not_loaded_model": [
    [
      "tests/signals/tests.py",
      [
        "LazyModelRefTests",
        "test_not_loaded_model"
      ]
    ]
  ],
  "test_register_model_class_senders_immediately": [
    [
      "tests/signals/tests.py",
      [
        "LazyModelRefTests",
        "test_register_model_class_senders_immediately"
      ]
    ]
  ],
  "test_can_set_and_read_signed_cookies": [
    [
      "tests/signed_cookies_tests/tests.py",
      [
        "SignedCookieTest",
        "test_can_set_and_read_signed_cookies"
      ]
    ]
  ],
  "test_can_use_salt": [
    [
      "tests/signed_cookies_tests/tests.py",
      [
        "SignedCookieTest",
        "test_can_use_salt"
      ]
    ]
  ],
  "test_detects_tampering": [
    [
      "tests/signed_cookies_tests/tests.py",
      [
        "SignedCookieTest",
        "test_detects_tampering"
      ]
    ]
  ],
  "test_default_argument_suppresses_exceptions": [
    [
      "tests/signed_cookies_tests/tests.py",
      [
        "SignedCookieTest",
        "test_default_argument_suppresses_exceptions"
      ]
    ]
  ],
  "test_max_age_argument": [
    [
      "tests/signed_cookies_tests/tests.py",
      [
        "SignedCookieTest",
        "test_max_age_argument"
      ]
    ]
  ],
  "test_signed_cookies_with_binary_key": [
    [
      "tests/signed_cookies_tests/tests.py",
      [
        "SignedCookieTest",
        "test_signed_cookies_with_binary_key"
      ]
    ]
  ],
  "test_signature": [
    [
      "tests/signing/tests.py",
      [
        "TestSigner",
        "test_signature"
      ]
    ]
  ],
  "test_signature_with_salt": [
    [
      "tests/signing/tests.py",
      [
        "TestSigner",
        "test_signature_with_salt"
      ]
    ]
  ],
  "test_custom_algorithm": [
    [
      "tests/signing/tests.py",
      [
        "TestSigner",
        "test_custom_algorithm"
      ]
    ]
  ],
  "test_invalid_algorithm": [
    [
      "tests/signing/tests.py",
      [
        "TestSigner",
        "test_invalid_algorithm"
      ]
    ],
    [
      "tests/utils_tests/test_crypto.py",
      [
        "TestUtilsCryptoMisc",
        "test_invalid_algorithm"
      ]
    ]
  ],
  "test_legacy_signature": [
    [
      "tests/signing/tests.py",
      [
        "TestSigner",
        "test_legacy_signature"
      ]
    ]
  ],
  "test_sign_unsign": [
    [
      "tests/signing/tests.py",
      [
        "TestSigner",
        "test_sign_unsign"
      ]
    ]
  ],
  "test_sign_unsign_non_string": [
    [
      "tests/signing/tests.py",
      [
        "TestSigner",
        "test_sign_unsign_non_string"
      ]
    ]
  ],
  "test_unsign_detects_tampering": [
    [
      "tests/signing/tests.py",
      [
        "TestSigner",
        "test_unsign_detects_tampering"
      ]
    ]
  ],
  "test_dumps_loads": [
    [
      "tests/signing/tests.py",
      [
        "TestSigner",
        "test_dumps_loads"
      ]
    ]
  ],
  "test_decode_detects_tampering": [
    [
      "tests/signing/tests.py",
      [
        "TestSigner",
        "test_decode_detects_tampering"
      ]
    ]
  ],
  "test_works_with_non_ascii_keys": [
    [
      "tests/signing/tests.py",
      [
        "TestSigner",
        "test_works_with_non_ascii_keys"
      ]
    ]
  ],
  "test_valid_sep": [
    [
      "tests/signing/tests.py",
      [
        "TestSigner",
        "test_valid_sep"
      ]
    ]
  ],
  "test_invalid_sep": [
    [
      "tests/signing/tests.py",
      [
        "TestSigner",
        "test_invalid_sep"
      ]
    ]
  ],
  "test_timestamp_signer": [
    [
      "tests/signing/tests.py",
      [
        "TestTimestampSigner",
        "test_timestamp_signer"
      ]
    ]
  ],
  "test_generic_sitemap_attributes": [
    [
      "tests/sitemaps_tests/test_generic.py",
      [
        "GenericViewsSitemapTests",
        "test_generic_sitemap_attributes"
      ]
    ]
  ],
  "test_generic_sitemap": [
    [
      "tests/sitemaps_tests/test_generic.py",
      [
        "GenericViewsSitemapTests",
        "test_generic_sitemap"
      ]
    ]
  ],
  "test_generic_sitemap_lastmod": [
    [
      "tests/sitemaps_tests/test_generic.py",
      [
        "GenericViewsSitemapTests",
        "test_generic_sitemap_lastmod"
      ]
    ]
  ],
  "test_simple_sitemap_index": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests",
        "test_simple_sitemap_index"
      ]
    ]
  ],
  "test_sitemap_not_callable": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests",
        "test_sitemap_not_callable"
      ]
    ]
  ],
  "test_paged_sitemap": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests",
        "test_paged_sitemap"
      ]
    ]
  ],
  "test_simple_sitemap_custom_index": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests",
        "test_simple_sitemap_custom_index"
      ]
    ]
  ],
  "test_simple_sitemap_section": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests",
        "test_simple_sitemap_section"
      ]
    ]
  ],
  "test_no_section": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests",
        "test_no_section"
      ]
    ]
  ],
  "test_empty_page": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests",
        "test_empty_page"
      ]
    ]
  ],
  "test_page_not_int": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests",
        "test_page_not_int"
      ]
    ]
  ],
  "test_simple_sitemap": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests",
        "test_simple_sitemap"
      ]
    ]
  ],
  "test_simple_custom_sitemap": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests",
        "test_simple_custom_sitemap"
      ]
    ]
  ],
  "test_sitemap_last_modified": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests",
        "test_sitemap_last_modified"
      ]
    ]
  ],
  "test_sitemap_last_modified_date": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests",
        "test_sitemap_last_modified_date"
      ]
    ]
  ],
  "test_sitemap_last_modified_tz": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests",
        "test_sitemap_last_modified_tz"
      ]
    ]
  ],
  "test_sitemap_last_modified_missing": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests",
        "test_sitemap_last_modified_missing"
      ]
    ]
  ],
  "test_sitemap_last_modified_mixed": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests",
        "test_sitemap_last_modified_mixed"
      ]
    ]
  ],
  "test_sitemaps_lastmod_mixed_ascending_last_modified_missing": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests",
        "test_sitemaps_lastmod_mixed_ascending_last_modified_missing"
      ]
    ]
  ],
  "test_sitemaps_lastmod_mixed_descending_last_modified_missing": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests",
        "test_sitemaps_lastmod_mixed_descending_last_modified_missing"
      ]
    ]
  ],
  "test_sitemaps_lastmod_ascending": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests",
        "test_sitemaps_lastmod_ascending"
      ]
    ]
  ],
  "test_sitemaps_lastmod_descending": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests",
        "test_sitemaps_lastmod_descending"
      ]
    ]
  ],
  "test_localized_priority": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests",
        "test_localized_priority"
      ]
    ]
  ],
  "test_requestsite_sitemap": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests",
        "test_requestsite_sitemap"
      ]
    ]
  ],
  "test_sitemap_get_urls_no_site_1": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests",
        "test_sitemap_get_urls_no_site_1"
      ]
    ]
  ],
  "test_sitemap_get_urls_no_site_2": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests",
        "test_sitemap_get_urls_no_site_2"
      ]
    ]
  ],
  "test_sitemap_item": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests",
        "test_sitemap_item"
      ]
    ]
  ],
  "test_cached_sitemap_index": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests",
        "test_cached_sitemap_index"
      ]
    ]
  ],
  "test_x_robots_sitemap": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests",
        "test_x_robots_sitemap"
      ]
    ]
  ],
  "test_empty_sitemap": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests",
        "test_empty_sitemap"
      ]
    ]
  ],
  "test_simple_i18nsitemap_index": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests",
        "test_simple_i18nsitemap_index"
      ]
    ]
  ],
  "test_sitemap_without_entries": [
    [
      "tests/sitemaps_tests/test_http.py",
      [
        "HTTPSitemapTests",
        "test_sitemap_without_entries"
      ]
    ]
  ],
  "test_secure_sitemap_index": [
    [
      "tests/sitemaps_tests/test_https.py",
      [
        "HTTPSSitemapTests",
        "test_secure_sitemap_index"
      ]
    ]
  ],
  "test_secure_sitemap_section": [
    [
      "tests/sitemaps_tests/test_https.py",
      [
        "HTTPSSitemapTests",
        "test_secure_sitemap_section"
      ]
    ]
  ],
  "test_sitemap_index_with_https_request": [
    [
      "tests/sitemaps_tests/test_https.py",
      [
        "HTTPSDetectionSitemapTests",
        "test_sitemap_index_with_https_request"
      ]
    ]
  ],
  "test_sitemap_section_with_https_request": [
    [
      "tests/sitemaps_tests/test_https.py",
      [
        "HTTPSDetectionSitemapTests",
        "test_sitemap_section_with_https_request"
      ]
    ]
  ],
  "test_get_sitemap_full_url_global": [
    [
      "tests/sitemaps_tests/test_utils.py",
      [
        "PingGoogleTests",
        "test_get_sitemap_full_url_global"
      ]
    ]
  ],
  "test_get_sitemap_full_url_index": [
    [
      "tests/sitemaps_tests/test_utils.py",
      [
        "PingGoogleTests",
        "test_get_sitemap_full_url_index"
      ]
    ]
  ],
  "test_get_sitemap_full_url_not_detected": [
    [
      "tests/sitemaps_tests/test_utils.py",
      [
        "PingGoogleTests",
        "test_get_sitemap_full_url_not_detected"
      ]
    ]
  ],
  "test_get_sitemap_full_url_exact_url": [
    [
      "tests/sitemaps_tests/test_utils.py",
      [
        "PingGoogleTests",
        "test_get_sitemap_full_url_exact_url"
      ]
    ]
  ],
  "test_get_sitemap_full_url_insecure": [
    [
      "tests/sitemaps_tests/test_utils.py",
      [
        "PingGoogleTests",
        "test_get_sitemap_full_url_insecure"
      ]
    ]
  ],
  "test_get_sitemap_full_url_no_sites": [
    [
      "tests/sitemaps_tests/test_utils.py",
      [
        "PingGoogleTests",
        "test_get_sitemap_full_url_no_sites"
      ]
    ]
  ],
  "testmodelview": [
    [
      "tests/sitemaps_tests/urls/http.py",
      [
        "testmodelview"
      ]
    ]
  ],
  "test_site_fk": [
    [
      "tests/sites_framework/tests.py",
      [
        "SitesFrameworkTestCase",
        "test_site_fk"
      ]
    ]
  ],
  "test_sites_m2m": [
    [
      "tests/sites_framework/tests.py",
      [
        "SitesFrameworkTestCase",
        "test_sites_m2m"
      ]
    ]
  ],
  "test_custom_named_field": [
    [
      "tests/sites_framework/tests.py",
      [
        "SitesFrameworkTestCase",
        "test_custom_named_field"
      ]
    ]
  ],
  "test_site_manager": [
    [
      "tests/sites_tests/tests.py",
      [
        "SitesFrameworkTests",
        "test_site_manager"
      ]
    ]
  ],
  "test_site_cache": [
    [
      "tests/sites_tests/tests.py",
      [
        "SitesFrameworkTests",
        "test_site_cache"
      ]
    ]
  ],
  "test_delete_all_sites_clears_cache": [
    [
      "tests/sites_tests/tests.py",
      [
        "SitesFrameworkTests",
        "test_delete_all_sites_clears_cache"
      ]
    ]
  ],
  "test_get_current_site": [
    [
      "tests/sites_tests/tests.py",
      [
        "SitesFrameworkTests",
        "test_get_current_site"
      ]
    ]
  ],
  "test_get_current_site_no_site_id": [
    [
      "tests/sites_tests/tests.py",
      [
        "SitesFrameworkTests",
        "test_get_current_site_no_site_id"
      ]
    ]
  ],
  "test_get_current_site_host_with_trailing_dot": [
    [
      "tests/sites_tests/tests.py",
      [
        "SitesFrameworkTests",
        "test_get_current_site_host_with_trailing_dot"
      ]
    ]
  ],
  "test_get_current_site_no_site_id_and_handle_port_fallback": [
    [
      "tests/sites_tests/tests.py",
      [
        "SitesFrameworkTests",
        "test_get_current_site_no_site_id_and_handle_port_fallback"
      ]
    ]
  ],
  "test_domain_name_with_whitespaces": [
    [
      "tests/sites_tests/tests.py",
      [
        "SitesFrameworkTests",
        "test_domain_name_with_whitespaces"
      ]
    ]
  ],
  "test_clear_site_cache": [
    [
      "tests/sites_tests/tests.py",
      [
        "SitesFrameworkTests",
        "test_clear_site_cache"
      ]
    ]
  ],
  "test_clear_site_cache_domain": [
    [
      "tests/sites_tests/tests.py",
      [
        "SitesFrameworkTests",
        "test_clear_site_cache_domain"
      ]
    ]
  ],
  "test_unique_domain": [
    [
      "tests/sites_tests/tests.py",
      [
        "SitesFrameworkTests",
        "test_unique_domain"
      ]
    ]
  ],
  "test_site_natural_key": [
    [
      "tests/sites_tests/tests.py",
      [
        "SitesFrameworkTests",
        "test_site_natural_key"
      ]
    ]
  ],
  "test_init_attributes": [
    [
      "tests/sites_tests/tests.py",
      [
        "RequestSiteTests",
        "test_init_attributes"
      ]
    ]
  ],
  "test_multi_db_with_router": [
    [
      "tests/sites_tests/tests.py",
      [
        "CreateDefaultSiteTests",
        "test_multi_db_with_router"
      ]
    ]
  ],
  "test_multi_db": [
    [
      "tests/sites_tests/tests.py",
      [
        "CreateDefaultSiteTests",
        "test_multi_db"
      ]
    ]
  ],
  "test_save_another": [
    [
      "tests/sites_tests/tests.py",
      [
        "CreateDefaultSiteTests",
        "test_save_another"
      ]
    ]
  ],
  "test_custom_site_id": [
    [
      "tests/sites_tests/tests.py",
      [
        "CreateDefaultSiteTests",
        "test_custom_site_id"
      ]
    ]
  ],
  "test_no_site_id": [
    [
      "tests/sites_tests/tests.py",
      [
        "CreateDefaultSiteTests",
        "test_no_site_id"
      ]
    ]
  ],
  "test_unavailable_site_model": [
    [
      "tests/sites_tests/tests.py",
      [
        "CreateDefaultSiteTests",
        "test_unavailable_site_model"
      ]
    ]
  ],
  "test_request": [
    [
      "tests/sites_tests/tests.py",
      [
        "MiddlewareTest",
        "test_request"
      ]
    ],
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestFactoryStateTest",
        "test_request"
      ]
    ]
  ],
  "assertFileContains": [
    [
      "tests/staticfiles_tests/cases.py",
      [
        "BaseStaticFilesMixin",
        "assertFileContains"
      ]
    ],
    [
      "tests/staticfiles_tests/test_views.py",
      [
        "TestServeStatic",
        "assertFileContains"
      ]
    ]
  ],
  "assertFileNotFound": [
    [
      "tests/staticfiles_tests/cases.py",
      [
        "BaseStaticFilesMixin",
        "assertFileNotFound"
      ]
    ],
    [
      "tests/staticfiles_tests/test_views.py",
      [
        "TestServeStatic",
        "assertFileNotFound"
      ]
    ],
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestIterModulesAndFiles",
        "assertFileNotFound"
      ]
    ]
  ],
  "render_template": [
    [
      "tests/staticfiles_tests/cases.py",
      [
        "BaseStaticFilesMixin",
        "render_template"
      ]
    ]
  ],
  "static_template_snippet": [
    [
      "tests/staticfiles_tests/cases.py",
      [
        "BaseStaticFilesMixin",
        "static_template_snippet"
      ]
    ]
  ],
  "assertStaticRenders": [
    [
      "tests/staticfiles_tests/cases.py",
      [
        "BaseStaticFilesMixin",
        "assertStaticRenders"
      ]
    ]
  ],
  "assertStaticRaises": [
    [
      "tests/staticfiles_tests/cases.py",
      [
        "BaseStaticFilesMixin",
        "assertStaticRaises"
      ]
    ]
  ],
  "run_collectstatic": [
    [
      "tests/staticfiles_tests/cases.py",
      [
        "CollectionTestCase",
        "run_collectstatic"
      ]
    ],
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionClear",
        "run_collectstatic"
      ]
    ],
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionExcludeNoDefaultIgnore",
        "run_collectstatic"
      ]
    ],
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionDryRun",
        "run_collectstatic"
      ]
    ],
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionLinks",
        "run_collectstatic"
      ]
    ],
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestStaticFilePermissions",
        "run_collectstatic"
      ]
    ]
  ],
  "test_staticfiles_dirs": [
    [
      "tests/staticfiles_tests/cases.py",
      [
        "TestDefaults",
        "test_staticfiles_dirs"
      ]
    ]
  ],
  "test_staticfiles_dirs_subdir": [
    [
      "tests/staticfiles_tests/cases.py",
      [
        "TestDefaults",
        "test_staticfiles_dirs_subdir"
      ]
    ]
  ],
  "test_staticfiles_dirs_priority": [
    [
      "tests/staticfiles_tests/cases.py",
      [
        "TestDefaults",
        "test_staticfiles_dirs_priority"
      ]
    ]
  ],
  "test_app_files": [
    [
      "tests/staticfiles_tests/cases.py",
      [
        "TestDefaults",
        "test_app_files"
      ]
    ]
  ],
  "test_nonascii_filenames": [
    [
      "tests/staticfiles_tests/cases.py",
      [
        "TestDefaults",
        "test_nonascii_filenames"
      ]
    ]
  ],
  "test_camelcase_filenames": [
    [
      "tests/staticfiles_tests/cases.py",
      [
        "TestDefaults",
        "test_camelcase_filenames"
      ]
    ]
  ],
  "test_filename_with_percent_sign": [
    [
      "tests/staticfiles_tests/cases.py",
      [
        "TestDefaults",
        "test_filename_with_percent_sign"
      ]
    ]
  ],
  "test_base_finder_check_not_implemented": [
    [
      "tests/staticfiles_tests/test_checks.py",
      [
        "FindersCheckTests",
        "test_base_finder_check_not_implemented"
      ]
    ]
  ],
  "test_check_finders": [
    [
      "tests/staticfiles_tests/test_checks.py",
      [
        "FindersCheckTests",
        "test_check_finders"
      ]
    ]
  ],
  "test_no_errors_with_test_settings": [
    [
      "tests/staticfiles_tests/test_checks.py",
      [
        "FindersCheckTests",
        "test_no_errors_with_test_settings"
      ]
    ]
  ],
  "test_dirs_not_tuple_or_list": [
    [
      "tests/staticfiles_tests/test_checks.py",
      [
        "FindersCheckTests",
        "test_dirs_not_tuple_or_list"
      ]
    ]
  ],
  "test_dirs_contains_static_root": [
    [
      "tests/staticfiles_tests/test_checks.py",
      [
        "FindersCheckTests",
        "test_dirs_contains_static_root"
      ]
    ]
  ],
  "test_dirs_contains_static_root_in_tuple": [
    [
      "tests/staticfiles_tests/test_checks.py",
      [
        "FindersCheckTests",
        "test_dirs_contains_static_root_in_tuple"
      ]
    ]
  ],
  "test_prefix_contains_trailing_slash": [
    [
      "tests/staticfiles_tests/test_checks.py",
      [
        "FindersCheckTests",
        "test_prefix_contains_trailing_slash"
      ]
    ]
  ],
  "test_find_first": [
    [
      "tests/staticfiles_tests/test_finders.py",
      [
        "TestFinders",
        "test_find_first"
      ]
    ]
  ],
  "test_find_all": [
    [
      "tests/staticfiles_tests/test_finders.py",
      [
        "TestFinders",
        "test_find_all"
      ]
    ]
  ],
  "test_get_finder": [
    [
      "tests/staticfiles_tests/test_finders.py",
      [
        "TestMiscFinder",
        "test_get_finder"
      ]
    ]
  ],
  "test_get_finder_bad_classname": [
    [
      "tests/staticfiles_tests/test_finders.py",
      [
        "TestMiscFinder",
        "test_get_finder_bad_classname"
      ]
    ]
  ],
  "test_get_finder_bad_module": [
    [
      "tests/staticfiles_tests/test_finders.py",
      [
        "TestMiscFinder",
        "test_get_finder_bad_module"
      ]
    ]
  ],
  "test_cache": [
    [
      "tests/staticfiles_tests/test_finders.py",
      [
        "TestMiscFinder",
        "test_cache"
      ]
    ]
  ],
  "test_searched_locations": [
    [
      "tests/staticfiles_tests/test_finders.py",
      [
        "TestMiscFinder",
        "test_searched_locations"
      ]
    ]
  ],
  "test_location_empty": [
    [
      "tests/staticfiles_tests/test_finders.py",
      [
        "TestMiscFinder",
        "test_location_empty"
      ]
    ],
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestConfiguration",
        "test_location_empty"
      ]
    ]
  ],
  "raises_exception": [
    [
      "tests/staticfiles_tests/test_liveserver.py",
      [
        "StaticLiveServerChecks",
        "raises_exception"
      ]
    ]
  ],
  "test_test_test": [
    [
      "tests/staticfiles_tests/test_liveserver.py",
      [
        "StaticLiveServerChecks",
        "test_test_test"
      ]
    ]
  ],
  "test_collectstatic_emulation": [
    [
      "tests/staticfiles_tests/test_liveserver.py",
      [
        "StaticLiveServerView",
        "test_collectstatic_emulation"
      ]
    ]
  ],
  "test_no_files_created": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestNoFilesCreated",
        "test_no_files_created"
      ]
    ]
  ],
  "test_middleware_loaded_only_once": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestRunserver",
        "test_middleware_loaded_only_once"
      ]
    ]
  ],
  "test_404_response": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestRunserver",
        "test_404_response"
      ]
    ]
  ],
  "test_all_files": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestFindStatic",
        "test_all_files"
      ]
    ]
  ],
  "test_all_files_less_verbose": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestFindStatic",
        "test_all_files_less_verbose"
      ]
    ]
  ],
  "test_all_files_more_verbose": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestFindStatic",
        "test_all_files_more_verbose"
      ]
    ]
  ],
  "test_local_storage_detection_helper": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestConfiguration",
        "test_local_storage_detection_helper"
      ]
    ]
  ],
  "test_missing_settings_dont_prevent_help": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionHelpSubcommand",
        "test_missing_settings_dont_prevent_help"
      ]
    ]
  ],
  "test_ignore": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollection",
        "test_ignore"
      ]
    ]
  ],
  "test_common_ignore_patterns": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollection",
        "test_common_ignore_patterns"
      ]
    ]
  ],
  "test_pathlib": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollection",
        "test_pathlib"
      ]
    ]
  ],
  "test_verbosity_0": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionVerbosity",
        "test_verbosity_0"
      ]
    ]
  ],
  "test_verbosity_1": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionVerbosity",
        "test_verbosity_1"
      ]
    ]
  ],
  "test_verbosity_2": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionVerbosity",
        "test_verbosity_2"
      ]
    ]
  ],
  "test_verbosity_1_with_post_process": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionVerbosity",
        "test_verbosity_1_with_post_process"
      ]
    ]
  ],
  "test_verbosity_2_with_post_process": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionVerbosity",
        "test_verbosity_2_with_post_process"
      ]
    ]
  ],
  "test_cleared_not_found": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionClear",
        "test_cleared_not_found"
      ]
    ]
  ],
  "test_dir_not_exists": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionClear",
        "test_dir_not_exists"
      ]
    ]
  ],
  "test_handle_path_notimplemented": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionClear",
        "test_handle_path_notimplemented"
      ]
    ]
  ],
  "test_warning_when_clearing_staticdir": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestInteractiveMessages",
        "test_warning_when_clearing_staticdir"
      ]
    ]
  ],
  "test_warning_when_overwriting_files_in_staticdir": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestInteractiveMessages",
        "test_warning_when_overwriting_files_in_staticdir"
      ]
    ]
  ],
  "test_no_warning_when_staticdir_does_not_exist": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestInteractiveMessages",
        "test_no_warning_when_staticdir_does_not_exist"
      ]
    ]
  ],
  "test_no_warning_for_empty_staticdir": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestInteractiveMessages",
        "test_no_warning_for_empty_staticdir"
      ]
    ]
  ],
  "test_cancelled": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestInteractiveMessages",
        "test_cancelled"
      ]
    ]
  ],
  "test_no_common_ignore_patterns": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionExcludeNoDefaultIgnore",
        "test_no_common_ignore_patterns"
      ]
    ]
  ],
  "test_custom_ignore_patterns": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionCustomIgnorePatterns",
        "test_custom_ignore_patterns"
      ]
    ]
  ],
  "test_ordering_override": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionFilesOverride",
        "test_ordering_override"
      ]
    ]
  ],
  "_collectstatic_output": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionOverwriteWarning",
        "_collectstatic_output"
      ]
    ]
  ],
  "test_no_warning": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionOverwriteWarning",
        "test_no_warning"
      ]
    ]
  ],
  "test_storage_properties": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionNonLocalStorage",
        "test_storage_properties"
      ]
    ]
  ],
  "test_skips_newer_files_in_remote_storage": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionNeverCopyStorage",
        "test_skips_newer_files_in_remote_storage"
      ]
    ]
  ],
  "test_links_created": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionLinks",
        "test_links_created"
      ]
    ]
  ],
  "test_broken_symlink": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionLinks",
        "test_broken_symlink"
      ]
    ]
  ],
  "test_symlinks_and_files_replaced": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionLinks",
        "test_symlinks_and_files_replaced"
      ]
    ]
  ],
  "test_clear_broken_symlink": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionLinks",
        "test_clear_broken_symlink"
      ]
    ]
  ],
  "test_no_remote_link": [
    [
      "tests/staticfiles_tests/test_management.py",
      [
        "TestCollectionLinks",
        "test_no_remote_link"
      ]
    ]
  ],
  "hashed_file_path": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "hashed_file_path"
      ]
    ]
  ],
  "assertPostCondition": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestHashedFiles",
        "assertPostCondition"
      ]
    ],
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestCollectionManifestStorage",
        "assertPostCondition"
      ]
    ]
  ],
  "test_template_tag_return": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestHashedFiles",
        "test_template_tag_return"
      ]
    ],
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestCollectionSimpleStorage",
        "test_template_tag_return"
      ]
    ]
  ],
  "test_template_tag_simple_content": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestHashedFiles",
        "test_template_tag_simple_content"
      ]
    ],
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestCollectionSimpleStorage",
        "test_template_tag_simple_content"
      ]
    ]
  ],
  "test_path_ignored_completely": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestHashedFiles",
        "test_path_ignored_completely"
      ]
    ]
  ],
  "test_path_with_querystring": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestHashedFiles",
        "test_path_with_querystring"
      ]
    ]
  ],
  "test_path_with_fragment": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestHashedFiles",
        "test_path_with_fragment"
      ]
    ]
  ],
  "test_path_with_querystring_and_fragment": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestHashedFiles",
        "test_path_with_querystring_and_fragment"
      ]
    ]
  ],
  "test_template_tag_absolute": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestHashedFiles",
        "test_template_tag_absolute"
      ]
    ]
  ],
  "test_template_tag_absolute_root": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestHashedFiles",
        "test_template_tag_absolute_root"
      ]
    ]
  ],
  "test_template_tag_relative": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestHashedFiles",
        "test_template_tag_relative"
      ]
    ]
  ],
  "test_import_replacement": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestHashedFiles",
        "test_import_replacement"
      ]
    ]
  ],
  "test_template_tag_deep_relative": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestHashedFiles",
        "test_template_tag_deep_relative"
      ]
    ]
  ],
  "test_template_tag_url": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestHashedFiles",
        "test_template_tag_url"
      ]
    ]
  ],
  "test_import_loop": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestHashedFiles",
        "test_import_loop"
      ]
    ]
  ],
  "test_post_processing": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestHashedFiles",
        "test_post_processing"
      ]
    ]
  ],
  "test_css_import_case_insensitive": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestHashedFiles",
        "test_css_import_case_insensitive"
      ]
    ]
  ],
  "test_post_processing_failure": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestHashedFiles",
        "test_post_processing_failure"
      ]
    ]
  ],
  "cached_file_path": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestExtraPatternsStorage",
        "cached_file_path"
      ]
    ]
  ],
  "test_multi_extension_patterns": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestExtraPatternsStorage",
        "test_multi_extension_patterns"
      ]
    ]
  ],
  "test_manifest_exists": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestCollectionManifestStorage",
        "test_manifest_exists"
      ]
    ]
  ],
  "test_manifest_does_not_exist": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestCollectionManifestStorage",
        "test_manifest_does_not_exist"
      ]
    ]
  ],
  "test_manifest_does_not_ignore_permission_error": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestCollectionManifestStorage",
        "test_manifest_does_not_ignore_permission_error"
      ]
    ]
  ],
  "test_loaded_cache": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestCollectionManifestStorage",
        "test_loaded_cache"
      ]
    ]
  ],
  "test_parse_cache": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestCollectionManifestStorage",
        "test_parse_cache"
      ]
    ]
  ],
  "test_clear_empties_manifest": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestCollectionManifestStorage",
        "test_clear_empties_manifest"
      ]
    ]
  ],
  "test_missing_entry": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestCollectionManifestStorage",
        "test_missing_entry"
      ]
    ]
  ],
  "test_intermediate_files": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestCollectionManifestStorage",
        "test_intermediate_files"
      ]
    ]
  ],
  "test_collect_static_files_permissions": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestStaticFilePermissions",
        "test_collect_static_files_permissions"
      ]
    ]
  ],
  "test_collect_static_files_default_permissions": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestStaticFilePermissions",
        "test_collect_static_files_default_permissions"
      ]
    ]
  ],
  "test_collect_static_files_subclass_of_static_storage": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestStaticFilePermissions",
        "test_collect_static_files_subclass_of_static_storage"
      ]
    ]
  ],
  "_get_filename_path": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestCollectionHashedFilesCache",
        "_get_filename_path"
      ]
    ]
  ],
  "test_file_change_after_collectstatic": [
    [
      "tests/staticfiles_tests/test_storage.py",
      [
        "TestCollectionHashedFilesCache",
        "test_file_change_after_collectstatic"
      ]
    ]
  ],
  "test_template_tag": [
    [
      "tests/staticfiles_tests/test_templatetags.py",
      [
        "TestTemplateTag",
        "test_template_tag"
      ]
    ]
  ],
  "test_template_tag_escapes": [
    [
      "tests/staticfiles_tests/test_templatetags.py",
      [
        "TestTemplateTag",
        "test_template_tag_escapes"
      ]
    ]
  ],
  "test_media_url_in_static_url": [
    [
      "tests/staticfiles_tests/test_utils.py",
      [
        "CheckSettingsTests",
        "test_media_url_in_static_url"
      ]
    ]
  ],
  "_response": [
    [
      "tests/staticfiles_tests/test_views.py",
      [
        "TestServeStatic",
        "_response"
      ]
    ],
    [
      "tests/template_tests/test_response.py",
      [
        "SimpleTemplateResponseTest",
        "_response"
      ]
    ],
    [
      "tests/template_tests/test_response.py",
      [
        "TemplateResponseTest",
        "_response"
      ]
    ]
  ],
  "test_disabled_serving": [
    [
      "tests/staticfiles_tests/test_views.py",
      [
        "TestServeDisabled",
        "test_disabled_serving"
      ]
    ]
  ],
  "test_international": [
    [
      "tests/str/tests.py",
      [
        "SimpleTests",
        "test_international"
      ]
    ]
  ],
  "test_defaults": [
    [
      "tests/str/tests.py",
      [
        "SimpleTests",
        "test_defaults"
      ]
    ]
  ],
  "test_string_form_referencing": [
    [
      "tests/string_lookup/tests.py",
      [
        "StringLookupTests",
        "test_string_form_referencing"
      ]
    ]
  ],
  "test_unicode_chars_in_queries": [
    [
      "tests/string_lookup/tests.py",
      [
        "StringLookupTests",
        "test_unicode_chars_in_queries"
      ]
    ]
  ],
  "test_queries_on_textfields": [
    [
      "tests/string_lookup/tests.py",
      [
        "StringLookupTests",
        "test_queries_on_textfields"
      ]
    ]
  ],
  "test_ipaddress_on_postgresql": [
    [
      "tests/string_lookup/tests.py",
      [
        "StringLookupTests",
        "test_ipaddress_on_postgresql"
      ]
    ]
  ],
  "test_generated_data": [
    [
      "tests/swappable_models/tests.py",
      [
        "SwappableModelTests",
        "test_generated_data"
      ]
    ]
  ],
  "test_case_insensitive": [
    [
      "tests/swappable_models/tests.py",
      [
        "SwappableModelTests",
        "test_case_insensitive"
      ]
    ]
  ],
  "item_pubdate": [
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestRss2Feed",
        "item_pubdate"
      ]
    ],
    [
      "tests/syndication_tests/feeds.py",
      [
        "NaiveDatesFeed",
        "item_pubdate"
      ]
    ],
    [
      "tests/syndication_tests/feeds.py",
      [
        "TZAwareDatesFeed",
        "item_pubdate"
      ]
    ]
  ],
  "item_updateddate": [
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestRss2Feed",
        "item_updateddate"
      ]
    ]
  ],
  "item_guid_is_permalink": [
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestRss2FeedWithGuidIsPermaLinkTrue",
        "item_guid_is_permalink"
      ]
    ],
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestRss2FeedWithGuidIsPermaLinkFalse",
        "item_guid_is_permalink"
      ]
    ]
  ],
  "item_guid": [
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestRss2FeedWithGuidIsPermaLinkFalse",
        "item_guid"
      ]
    ]
  ],
  "item_enclosure_url": [
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestSingleEnclosureRSSFeed",
        "item_enclosure_url"
      ]
    ],
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestSingleEnclosureAtomFeed",
        "item_enclosure_url"
      ]
    ]
  ],
  "item_enclosure_size": [
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestSingleEnclosureRSSFeed",
        "item_enclosure_size"
      ]
    ],
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestSingleEnclosureAtomFeed",
        "item_enclosure_size"
      ]
    ]
  ],
  "item_mime_type": [
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestSingleEnclosureRSSFeed",
        "item_mime_type"
      ]
    ],
    [
      "tests/syndication_tests/feeds.py",
      [
        "TestSingleEnclosureAtomFeed",
        "item_mime_type"
      ]
    ]
  ],
  "assertChildNodeContent": [
    [
      "tests/syndication_tests/tests.py",
      [
        "FeedTestCase",
        "assertChildNodeContent"
      ]
    ]
  ],
  "assertCategories": [
    [
      "tests/syndication_tests/tests.py",
      [
        "FeedTestCase",
        "assertCategories"
      ]
    ]
  ],
  "test_rss2_feed": [
    [
      "tests/syndication_tests/tests.py",
      [
        "SyndicationFeedTest",
        "test_rss2_feed"
      ]
    ]
  ],
  "test_rss2_feed_guid_permalink_false": [
    [
      "tests/syndication_tests/tests.py",
      [
        "SyndicationFeedTest",
        "test_rss2_feed_guid_permalink_false"
      ]
    ]
  ],
  "test_rss2_feed_guid_permalink_true": [
    [
      "tests/syndication_tests/tests.py",
      [
        "SyndicationFeedTest",
        "test_rss2_feed_guid_permalink_true"
      ]
    ]
  ],
  "test_rss2_single_enclosure": [
    [
      "tests/syndication_tests/tests.py",
      [
        "SyndicationFeedTest",
        "test_rss2_single_enclosure"
      ]
    ]
  ],
  "test_rss2_multiple_enclosures": [
    [
      "tests/syndication_tests/tests.py",
      [
        "SyndicationFeedTest",
        "test_rss2_multiple_enclosures"
      ]
    ]
  ],
  "test_rss091_feed": [
    [
      "tests/syndication_tests/tests.py",
      [
        "SyndicationFeedTest",
        "test_rss091_feed"
      ]
    ]
  ],
  "test_atom_feed": [
    [
      "tests/syndication_tests/tests.py",
      [
        "SyndicationFeedTest",
        "test_atom_feed"
      ]
    ]
  ],
  "test_atom_feed_published_and_updated_elements": [
    [
      "tests/syndication_tests/tests.py",
      [
        "SyndicationFeedTest",
        "test_atom_feed_published_and_updated_elements"
      ]
    ]
  ],
  "test_atom_single_enclosure": [
    [
      "tests/syndication_tests/tests.py",
      [
        "SyndicationFeedTest",
        "test_atom_single_enclosure"
      ]
    ]
  ],
  "test_atom_multiple_enclosures": [
    [
      "tests/syndication_tests/tests.py",
      [
        "SyndicationFeedTest",
        "test_atom_multiple_enclosures"
      ]
    ]
  ],
  "test_latest_post_date": [
    [
      "tests/syndication_tests/tests.py",
      [
        "SyndicationFeedTest",
        "test_latest_post_date"
      ]
    ]
  ],
  "test_custom_feed_generator": [
    [
      "tests/syndication_tests/tests.py",
      [
        "SyndicationFeedTest",
        "test_custom_feed_generator"
      ]
    ]
  ],
  "test_feed_generator_language_attribute": [
    [
      "tests/syndication_tests/tests.py",
      [
        "SyndicationFeedTest",
        "test_feed_generator_language_attribute"
      ]
    ]
  ],
  "test_title_escaping": [
    [
      "tests/syndication_tests/tests.py",
      [
        "SyndicationFeedTest",
        "test_title_escaping"
      ]
    ]
  ],
  "test_naive_datetime_conversion": [
    [
      "tests/syndication_tests/tests.py",
      [
        "SyndicationFeedTest",
        "test_naive_datetime_conversion"
      ]
    ]
  ],
  "test_aware_datetime_conversion": [
    [
      "tests/syndication_tests/tests.py",
      [
        "SyndicationFeedTest",
        "test_aware_datetime_conversion"
      ]
    ]
  ],
  "test_feed_last_modified_time_naive_date": [
    [
      "tests/syndication_tests/tests.py",
      [
        "SyndicationFeedTest",
        "test_feed_last_modified_time_naive_date"
      ]
    ]
  ],
  "test_feed_last_modified_time": [
    [
      "tests/syndication_tests/tests.py",
      [
        "SyndicationFeedTest",
        "test_feed_last_modified_time"
      ]
    ]
  ],
  "test_feed_url": [
    [
      "tests/syndication_tests/tests.py",
      [
        "SyndicationFeedTest",
        "test_feed_url"
      ]
    ]
  ],
  "test_secure_urls": [
    [
      "tests/syndication_tests/tests.py",
      [
        "SyndicationFeedTest",
        "test_secure_urls"
      ]
    ]
  ],
  "test_item_link_error": [
    [
      "tests/syndication_tests/tests.py",
      [
        "SyndicationFeedTest",
        "test_item_link_error"
      ]
    ]
  ],
  "test_template_feed": [
    [
      "tests/syndication_tests/tests.py",
      [
        "SyndicationFeedTest",
        "test_template_feed"
      ]
    ]
  ],
  "test_template_context_feed": [
    [
      "tests/syndication_tests/tests.py",
      [
        "SyndicationFeedTest",
        "test_template_context_feed"
      ]
    ]
  ],
  "test_add_domain": [
    [
      "tests/syndication_tests/tests.py",
      [
        "SyndicationFeedTest",
        "test_add_domain"
      ]
    ]
  ],
  "test_context_has_priority_over_template_context_processors": [
    [
      "tests/template_backends/test_django.py",
      [
        "DjangoTemplatesTests",
        "test_context_has_priority_over_template_context_processors"
      ]
    ]
  ],
  "test_render_requires_dict": [
    [
      "tests/template_backends/test_django.py",
      [
        "DjangoTemplatesTests",
        "test_render_requires_dict"
      ]
    ]
  ],
  "test_templatetag_discovery": [
    [
      "tests/template_backends/test_django.py",
      [
        "DjangoTemplatesTests",
        "test_templatetag_discovery"
      ]
    ]
  ],
  "test_templatetag_discovery_import_error": [
    [
      "tests/template_backends/test_django.py",
      [
        "DjangoTemplatesTests",
        "test_templatetag_discovery_import_error"
      ]
    ]
  ],
  "test_builtins_discovery": [
    [
      "tests/template_backends/test_django.py",
      [
        "DjangoTemplatesTests",
        "test_builtins_discovery"
      ]
    ]
  ],
  "test_autoescape_off": [
    [
      "tests/template_backends/test_django.py",
      [
        "DjangoTemplatesTests",
        "test_autoescape_off"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_join.py",
      [
        "FunctionTests",
        "test_autoescape_off"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_linebreaks.py",
      [
        "FunctionTests",
        "test_autoescape_off"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_linebreaksbr.py",
      [
        "FunctionTests",
        "test_autoescape_off"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_linenumbers.py",
      [
        "FunctionTests",
        "test_autoescape_off"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_unordered_list.py",
      [
        "FunctionTests",
        "test_autoescape_off"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "FunctionTests",
        "test_autoescape_off"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_urlizetrunc.py",
      [
        "FunctionTests",
        "test_autoescape_off"
      ]
    ],
    [
      "tests/template_tests/test_engine.py",
      [
        "RenderToStringTest",
        "test_autoescape_off"
      ]
    ]
  ],
  "test_autoescape_default": [
    [
      "tests/template_backends/test_django.py",
      [
        "DjangoTemplatesTests",
        "test_autoescape_default"
      ]
    ]
  ],
  "test_non_debug_default_template_loaders": [
    [
      "tests/template_backends/test_django.py",
      [
        "DjangoTemplatesTests",
        "test_non_debug_default_template_loaders"
      ]
    ]
  ],
  "test_debug_default_template_loaders": [
    [
      "tests/template_backends/test_django.py",
      [
        "DjangoTemplatesTests",
        "test_debug_default_template_loaders"
      ]
    ]
  ],
  "test_dirs_pathlib": [
    [
      "tests/template_backends/test_django.py",
      [
        "DjangoTemplatesTests",
        "test_dirs_pathlib"
      ]
    ],
    [
      "tests/template_backends/test_jinja2.py",
      [
        "Jinja2Tests",
        "test_dirs_pathlib"
      ]
    ]
  ],
  "test_from_string": [
    [
      "tests/template_backends/test_dummy.py",
      [
        "TemplateStringsTests",
        "test_from_string"
      ]
    ]
  ],
  "test_get_template": [
    [
      "tests/template_backends/test_dummy.py",
      [
        "TemplateStringsTests",
        "test_get_template"
      ]
    ],
    [
      "tests/template_tests/test_loaders.py",
      [
        "CachedLoaderTests",
        "test_get_template"
      ]
    ],
    [
      "tests/template_tests/test_loaders.py",
      [
        "FileSystemLoaderTests",
        "test_get_template"
      ]
    ],
    [
      "tests/template_tests/test_loaders.py",
      [
        "AppDirectoriesLoaderTests",
        "test_get_template"
      ]
    ],
    [
      "tests/template_tests/test_loaders.py",
      [
        "LocmemLoaderTests",
        "test_get_template"
      ]
    ]
  ],
  "test_get_template_nonexistent": [
    [
      "tests/template_backends/test_dummy.py",
      [
        "TemplateStringsTests",
        "test_get_template_nonexistent"
      ]
    ]
  ],
  "test_get_template_syntax_error": [
    [
      "tests/template_backends/test_dummy.py",
      [
        "TemplateStringsTests",
        "test_get_template_syntax_error"
      ]
    ]
  ],
  "test_html_escaping": [
    [
      "tests/template_backends/test_dummy.py",
      [
        "TemplateStringsTests",
        "test_html_escaping"
      ]
    ]
  ],
  "test_django_html_escaping": [
    [
      "tests/template_backends/test_dummy.py",
      [
        "TemplateStringsTests",
        "test_django_html_escaping"
      ]
    ]
  ],
  "test_csrf_token": [
    [
      "tests/template_backends/test_dummy.py",
      [
        "TemplateStringsTests",
        "test_csrf_token"
      ]
    ]
  ],
  "test_no_directory_traversal": [
    [
      "tests/template_backends/test_dummy.py",
      [
        "TemplateStringsTests",
        "test_no_directory_traversal"
      ]
    ]
  ],
  "test_non_ascii_characters": [
    [
      "tests/template_backends/test_dummy.py",
      [
        "TemplateStringsTests",
        "test_non_ascii_characters"
      ]
    ]
  ],
  "test_origin": [
    [
      "tests/template_backends/test_jinja2.py",
      [
        "Jinja2Tests",
        "test_origin"
      ]
    ],
    [
      "tests/template_tests/test_engine.py",
      [
        "LoaderTests",
        "test_origin"
      ]
    ]
  ],
  "test_origin_from_string": [
    [
      "tests/template_backends/test_jinja2.py",
      [
        "Jinja2Tests",
        "test_origin_from_string"
      ]
    ]
  ],
  "test_self_context": [
    [
      "tests/template_backends/test_jinja2.py",
      [
        "Jinja2Tests",
        "test_self_context"
      ]
    ]
  ],
  "test_exception_debug_info_min_context": [
    [
      "tests/template_backends/test_jinja2.py",
      [
        "Jinja2Tests",
        "test_exception_debug_info_min_context"
      ]
    ]
  ],
  "test_exception_debug_info_max_context": [
    [
      "tests/template_backends/test_jinja2.py",
      [
        "Jinja2Tests",
        "test_exception_debug_info_max_context"
      ]
    ]
  ],
  "test_context_processors": [
    [
      "tests/template_backends/test_jinja2.py",
      [
        "Jinja2Tests",
        "test_context_processors"
      ]
    ]
  ],
  "test_template_render_nested_error": [
    [
      "tests/template_backends/test_jinja2.py",
      [
        "Jinja2Tests",
        "test_template_render_nested_error"
      ]
    ]
  ],
  "test_template_render_error_nonexistent_source": [
    [
      "tests/template_backends/test_jinja2.py",
      [
        "Jinja2Tests",
        "test_template_render_error_nonexistent_source"
      ]
    ]
  ],
  "test_backend_import_error": [
    [
      "tests/template_backends/test_utils.py",
      [
        "TemplateUtilsTests",
        "test_backend_import_error"
      ]
    ]
  ],
  "test_backend_improperly_configured": [
    [
      "tests/template_backends/test_utils.py",
      [
        "TemplateUtilsTests",
        "test_backend_improperly_configured"
      ]
    ]
  ],
  "test_backend_names_must_be_unique": [
    [
      "tests/template_backends/test_utils.py",
      [
        "TemplateUtilsTests",
        "test_backend_names_must_be_unique"
      ]
    ]
  ],
  "test_get_template_first_engine": [
    [
      "tests/template_loader/tests.py",
      [
        "TemplateLoaderTests",
        "test_get_template_first_engine"
      ]
    ]
  ],
  "test_get_template_second_engine": [
    [
      "tests/template_loader/tests.py",
      [
        "TemplateLoaderTests",
        "test_get_template_second_engine"
      ]
    ]
  ],
  "test_get_template_using_engine": [
    [
      "tests/template_loader/tests.py",
      [
        "TemplateLoaderTests",
        "test_get_template_using_engine"
      ]
    ]
  ],
  "test_get_template_not_found": [
    [
      "tests/template_loader/tests.py",
      [
        "TemplateLoaderTests",
        "test_get_template_not_found"
      ]
    ]
  ],
  "test_select_template_first_engine": [
    [
      "tests/template_loader/tests.py",
      [
        "TemplateLoaderTests",
        "test_select_template_first_engine"
      ]
    ]
  ],
  "test_select_template_second_engine": [
    [
      "tests/template_loader/tests.py",
      [
        "TemplateLoaderTests",
        "test_select_template_second_engine"
      ]
    ]
  ],
  "test_select_template_using_engine": [
    [
      "tests/template_loader/tests.py",
      [
        "TemplateLoaderTests",
        "test_select_template_using_engine"
      ]
    ]
  ],
  "test_select_template_empty": [
    [
      "tests/template_loader/tests.py",
      [
        "TemplateLoaderTests",
        "test_select_template_empty"
      ]
    ]
  ],
  "test_select_template_string": [
    [
      "tests/template_loader/tests.py",
      [
        "TemplateLoaderTests",
        "test_select_template_string"
      ]
    ]
  ],
  "test_select_template_not_found": [
    [
      "tests/template_loader/tests.py",
      [
        "TemplateLoaderTests",
        "test_select_template_not_found"
      ]
    ]
  ],
  "test_select_template_tries_all_engines_before_names": [
    [
      "tests/template_loader/tests.py",
      [
        "TemplateLoaderTests",
        "test_select_template_tries_all_engines_before_names"
      ]
    ]
  ],
  "test_render_to_string_first_engine": [
    [
      "tests/template_loader/tests.py",
      [
        "TemplateLoaderTests",
        "test_render_to_string_first_engine"
      ]
    ]
  ],
  "test_render_to_string_second_engine": [
    [
      "tests/template_loader/tests.py",
      [
        "TemplateLoaderTests",
        "test_render_to_string_second_engine"
      ]
    ]
  ],
  "test_render_to_string_with_request": [
    [
      "tests/template_loader/tests.py",
      [
        "TemplateLoaderTests",
        "test_render_to_string_with_request"
      ]
    ]
  ],
  "test_render_to_string_using_engine": [
    [
      "tests/template_loader/tests.py",
      [
        "TemplateLoaderTests",
        "test_render_to_string_using_engine"
      ]
    ]
  ],
  "test_render_to_string_not_found": [
    [
      "tests/template_loader/tests.py",
      [
        "TemplateLoaderTests",
        "test_render_to_string_not_found"
      ]
    ]
  ],
  "test_render_to_string_with_list_first_engine": [
    [
      "tests/template_loader/tests.py",
      [
        "TemplateLoaderTests",
        "test_render_to_string_with_list_first_engine"
      ]
    ]
  ],
  "test_render_to_string_with_list_second_engine": [
    [
      "tests/template_loader/tests.py",
      [
        "TemplateLoaderTests",
        "test_render_to_string_with_list_second_engine"
      ]
    ]
  ],
  "test_render_to_string_with_list_using_engine": [
    [
      "tests/template_loader/tests.py",
      [
        "TemplateLoaderTests",
        "test_render_to_string_with_list_using_engine"
      ]
    ]
  ],
  "test_render_to_string_with_list_empty": [
    [
      "tests/template_loader/tests.py",
      [
        "TemplateLoaderTests",
        "test_render_to_string_with_list_empty"
      ]
    ]
  ],
  "test_render_to_string_with_list_not_found": [
    [
      "tests/template_loader/tests.py",
      [
        "TemplateLoaderTests",
        "test_render_to_string_with_list_not_found"
      ]
    ]
  ],
  "test_render_to_string_with_list_tries_all_engines_before_names": [
    [
      "tests/template_loader/tests.py",
      [
        "TemplateLoaderTests",
        "test_render_to_string_with_list_tries_all_engines_before_names"
      ]
    ]
  ],
  "annotated_tag_function": [
    [
      "tests/template_tests/annotated_tag_function.py",
      [
        "annotated_tag_function"
      ]
    ]
  ],
  "test_add01": [
    [
      "tests/template_tests/filter_tests/test_add.py",
      [
        "AddTests",
        "test_add01"
      ]
    ]
  ],
  "test_add02": [
    [
      "tests/template_tests/filter_tests/test_add.py",
      [
        "AddTests",
        "test_add02"
      ]
    ]
  ],
  "test_add03": [
    [
      "tests/template_tests/filter_tests/test_add.py",
      [
        "AddTests",
        "test_add03"
      ]
    ]
  ],
  "test_add04": [
    [
      "tests/template_tests/filter_tests/test_add.py",
      [
        "AddTests",
        "test_add04"
      ]
    ]
  ],
  "test_add05": [
    [
      "tests/template_tests/filter_tests/test_add.py",
      [
        "AddTests",
        "test_add05"
      ]
    ]
  ],
  "test_add06": [
    [
      "tests/template_tests/filter_tests/test_add.py",
      [
        "AddTests",
        "test_add06"
      ]
    ]
  ],
  "test_add07": [
    [
      "tests/template_tests/filter_tests/test_add.py",
      [
        "AddTests",
        "test_add07"
      ]
    ]
  ],
  "test_addslashes01": [
    [
      "tests/template_tests/filter_tests/test_addslashes.py",
      [
        "AddslashesTests",
        "test_addslashes01"
      ]
    ]
  ],
  "test_addslashes02": [
    [
      "tests/template_tests/filter_tests/test_addslashes.py",
      [
        "AddslashesTests",
        "test_addslashes02"
      ]
    ]
  ],
  "test_quotes": [
    [
      "tests/template_tests/filter_tests/test_addslashes.py",
      [
        "FunctionTests",
        "test_quotes"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_escapejs.py",
      [
        "FunctionTests",
        "test_quotes"
      ]
    ]
  ],
  "test_backslashes": [
    [
      "tests/template_tests/filter_tests/test_addslashes.py",
      [
        "FunctionTests",
        "test_backslashes"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_escapejs.py",
      [
        "FunctionTests",
        "test_backslashes"
      ]
    ]
  ],
  "test_non_string_input": [
    [
      "tests/template_tests/filter_tests/test_addslashes.py",
      [
        "FunctionTests",
        "test_non_string_input"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_center.py",
      [
        "FunctionTests",
        "test_non_string_input"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_cut.py",
      [
        "FunctionTests",
        "test_non_string_input"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_escape.py",
      [
        "FunctionTests",
        "test_non_string_input"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_linebreaks.py",
      [
        "FunctionTests",
        "test_non_string_input"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_linebreaksbr.py",
      [
        "FunctionTests",
        "test_non_string_input"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_linenumbers.py",
      [
        "FunctionTests",
        "test_non_string_input"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_ljust.py",
      [
        "FunctionTests",
        "test_non_string_input"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_lower.py",
      [
        "FunctionTests",
        "test_non_string_input"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_rjust.py",
      [
        "FunctionTests",
        "test_non_string_input"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_slugify.py",
      [
        "FunctionTests",
        "test_non_string_input"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_striptags.py",
      [
        "FunctionTests",
        "test_non_string_input"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_title.py",
      [
        "FunctionTests",
        "test_non_string_input"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_truncatewords.py",
      [
        "FunctionTests",
        "test_non_string_input"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_upper.py",
      [
        "FunctionTests",
        "test_non_string_input"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_urlencode.py",
      [
        "FunctionTests",
        "test_non_string_input"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "FunctionTests",
        "test_non_string_input"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_urlizetrunc.py",
      [
        "FunctionTests",
        "test_non_string_input"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_wordcount.py",
      [
        "FunctionTests",
        "test_non_string_input"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_wordwrap.py",
      [
        "FunctionTests",
        "test_non_string_input"
      ]
    ]
  ],
  "test_autoescape_stringfilter01": [
    [
      "tests/template_tests/filter_tests/test_autoescape.py",
      [
        "AutoescapeStringfilterTests",
        "test_autoescape_stringfilter01"
      ]
    ]
  ],
  "test_autoescape_stringfilter02": [
    [
      "tests/template_tests/filter_tests/test_autoescape.py",
      [
        "AutoescapeStringfilterTests",
        "test_autoescape_stringfilter02"
      ]
    ]
  ],
  "test_autoescape_stringfilter03": [
    [
      "tests/template_tests/filter_tests/test_autoescape.py",
      [
        "AutoescapeStringfilterTests",
        "test_autoescape_stringfilter03"
      ]
    ]
  ],
  "test_autoescape_stringfilter04": [
    [
      "tests/template_tests/filter_tests/test_autoescape.py",
      [
        "AutoescapeStringfilterTests",
        "test_autoescape_stringfilter04"
      ]
    ]
  ],
  "test_capfirst01": [
    [
      "tests/template_tests/filter_tests/test_capfirst.py",
      [
        "CapfirstTests",
        "test_capfirst01"
      ]
    ]
  ],
  "test_capfirst02": [
    [
      "tests/template_tests/filter_tests/test_capfirst.py",
      [
        "CapfirstTests",
        "test_capfirst02"
      ]
    ]
  ],
  "test_capfirst": [
    [
      "tests/template_tests/filter_tests/test_capfirst.py",
      [
        "FunctionTests",
        "test_capfirst"
      ]
    ]
  ],
  "test_center01": [
    [
      "tests/template_tests/filter_tests/test_center.py",
      [
        "CenterTests",
        "test_center01"
      ]
    ]
  ],
  "test_center02": [
    [
      "tests/template_tests/filter_tests/test_center.py",
      [
        "CenterTests",
        "test_center02"
      ]
    ]
  ],
  "test_center": [
    [
      "tests/template_tests/filter_tests/test_center.py",
      [
        "FunctionTests",
        "test_center"
      ]
    ]
  ],
  "test_chaining01": [
    [
      "tests/template_tests/filter_tests/test_chaining.py",
      [
        "ChainingTests",
        "test_chaining01"
      ]
    ]
  ],
  "test_chaining02": [
    [
      "tests/template_tests/filter_tests/test_chaining.py",
      [
        "ChainingTests",
        "test_chaining02"
      ]
    ]
  ],
  "test_chaining03": [
    [
      "tests/template_tests/filter_tests/test_chaining.py",
      [
        "ChainingTests",
        "test_chaining03"
      ]
    ]
  ],
  "test_chaining04": [
    [
      "tests/template_tests/filter_tests/test_chaining.py",
      [
        "ChainingTests",
        "test_chaining04"
      ]
    ]
  ],
  "test_chaining05": [
    [
      "tests/template_tests/filter_tests/test_chaining.py",
      [
        "ChainingTests",
        "test_chaining05"
      ]
    ]
  ],
  "test_chaining06": [
    [
      "tests/template_tests/filter_tests/test_chaining.py",
      [
        "ChainingTests",
        "test_chaining06"
      ]
    ]
  ],
  "test_chaining07": [
    [
      "tests/template_tests/filter_tests/test_chaining.py",
      [
        "ChainingTests",
        "test_chaining07"
      ]
    ]
  ],
  "test_chaining08": [
    [
      "tests/template_tests/filter_tests/test_chaining.py",
      [
        "ChainingTests",
        "test_chaining08"
      ]
    ]
  ],
  "test_chaining09": [
    [
      "tests/template_tests/filter_tests/test_chaining.py",
      [
        "ChainingTests",
        "test_chaining09"
      ]
    ]
  ],
  "test_chaining10": [
    [
      "tests/template_tests/filter_tests/test_chaining.py",
      [
        "ChainingTests",
        "test_chaining10"
      ]
    ]
  ],
  "test_chaining11": [
    [
      "tests/template_tests/filter_tests/test_chaining.py",
      [
        "ChainingTests",
        "test_chaining11"
      ]
    ]
  ],
  "test_chaining12": [
    [
      "tests/template_tests/filter_tests/test_chaining.py",
      [
        "ChainingTests",
        "test_chaining12"
      ]
    ]
  ],
  "test_chaining13": [
    [
      "tests/template_tests/filter_tests/test_chaining.py",
      [
        "ChainingTests",
        "test_chaining13"
      ]
    ]
  ],
  "test_chaining14": [
    [
      "tests/template_tests/filter_tests/test_chaining.py",
      [
        "ChainingTests",
        "test_chaining14"
      ]
    ]
  ],
  "test_cut01": [
    [
      "tests/template_tests/filter_tests/test_cut.py",
      [
        "CutTests",
        "test_cut01"
      ]
    ]
  ],
  "test_cut02": [
    [
      "tests/template_tests/filter_tests/test_cut.py",
      [
        "CutTests",
        "test_cut02"
      ]
    ]
  ],
  "test_cut03": [
    [
      "tests/template_tests/filter_tests/test_cut.py",
      [
        "CutTests",
        "test_cut03"
      ]
    ]
  ],
  "test_cut04": [
    [
      "tests/template_tests/filter_tests/test_cut.py",
      [
        "CutTests",
        "test_cut04"
      ]
    ]
  ],
  "test_cut05": [
    [
      "tests/template_tests/filter_tests/test_cut.py",
      [
        "CutTests",
        "test_cut05"
      ]
    ]
  ],
  "test_cut06": [
    [
      "tests/template_tests/filter_tests/test_cut.py",
      [
        "CutTests",
        "test_cut06"
      ]
    ]
  ],
  "test_character": [
    [
      "tests/template_tests/filter_tests/test_cut.py",
      [
        "FunctionTests",
        "test_character"
      ]
    ]
  ],
  "test_characters": [
    [
      "tests/template_tests/filter_tests/test_cut.py",
      [
        "FunctionTests",
        "test_characters"
      ]
    ]
  ],
  "test_non_matching_string": [
    [
      "tests/template_tests/filter_tests/test_cut.py",
      [
        "FunctionTests",
        "test_non_matching_string"
      ]
    ]
  ],
  "test_date01": [
    [
      "tests/template_tests/filter_tests/test_date.py",
      [
        "DateTests",
        "test_date01"
      ]
    ]
  ],
  "test_date02": [
    [
      "tests/template_tests/filter_tests/test_date.py",
      [
        "DateTests",
        "test_date02"
      ]
    ]
  ],
  "test_date02_l10n": [
    [
      "tests/template_tests/filter_tests/test_date.py",
      [
        "DateTests",
        "test_date02_l10n"
      ]
    ]
  ],
  "test_date03": [
    [
      "tests/template_tests/filter_tests/test_date.py",
      [
        "DateTests",
        "test_date03"
      ]
    ]
  ],
  "test_date04": [
    [
      "tests/template_tests/filter_tests/test_date.py",
      [
        "DateTests",
        "test_date04"
      ]
    ]
  ],
  "test_date05": [
    [
      "tests/template_tests/filter_tests/test_date.py",
      [
        "DateTests",
        "test_date05"
      ]
    ]
  ],
  "test_date06": [
    [
      "tests/template_tests/filter_tests/test_date.py",
      [
        "DateTests",
        "test_date06"
      ]
    ]
  ],
  "test_date07": [
    [
      "tests/template_tests/filter_tests/test_date.py",
      [
        "DateTests",
        "test_date07"
      ]
    ]
  ],
  "test_date08": [
    [
      "tests/template_tests/filter_tests/test_date.py",
      [
        "DateTests",
        "test_date08"
      ]
    ]
  ],
  "test_date09": [
    [
      "tests/template_tests/filter_tests/test_date.py",
      [
        "DateTests",
        "test_date09"
      ]
    ]
  ],
  "test_date": [
    [
      "tests/template_tests/filter_tests/test_date.py",
      [
        "FunctionTests",
        "test_date"
      ]
    ],
    [
      "tests/utils_tests/test_dateformat.py",
      [
        "DateFormatTests",
        "test_date"
      ]
    ]
  ],
  "test_no_args": [
    [
      "tests/template_tests/filter_tests/test_date.py",
      [
        "FunctionTests",
        "test_no_args"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_time.py",
      [
        "FunctionTests",
        "test_no_args"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_timesince.py",
      [
        "FunctionTests",
        "test_no_args"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_timeuntil.py",
      [
        "FunctionTests",
        "test_no_args"
      ]
    ]
  ],
  "test_escape_characters": [
    [
      "tests/template_tests/filter_tests/test_date.py",
      [
        "FunctionTests",
        "test_escape_characters"
      ]
    ]
  ],
  "test_default01": [
    [
      "tests/template_tests/filter_tests/test_default.py",
      [
        "DefaultTests",
        "test_default01"
      ]
    ]
  ],
  "test_default02": [
    [
      "tests/template_tests/filter_tests/test_default.py",
      [
        "DefaultTests",
        "test_default02"
      ]
    ]
  ],
  "test_default03": [
    [
      "tests/template_tests/filter_tests/test_default.py",
      [
        "DefaultTests",
        "test_default03"
      ]
    ]
  ],
  "test_default04": [
    [
      "tests/template_tests/filter_tests/test_default.py",
      [
        "DefaultTests",
        "test_default04"
      ]
    ]
  ],
  "test_default_if_none01": [
    [
      "tests/template_tests/filter_tests/test_default.py",
      [
        "DefaultIfNoneTests",
        "test_default_if_none01"
      ]
    ]
  ],
  "test_default_if_none02": [
    [
      "tests/template_tests/filter_tests/test_default.py",
      [
        "DefaultIfNoneTests",
        "test_default_if_none02"
      ]
    ]
  ],
  "test_value": [
    [
      "tests/template_tests/filter_tests/test_default.py",
      [
        "FunctionTests",
        "test_value"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_default_if_none.py",
      [
        "FunctionTests",
        "test_value"
      ]
    ]
  ],
  "test_empty_string": [
    [
      "tests/template_tests/filter_tests/test_default.py",
      [
        "FunctionTests",
        "test_empty_string"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_default_if_none.py",
      [
        "FunctionTests",
        "test_empty_string"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_first.py",
      [
        "FunctionTests",
        "test_empty_string"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_wordcount.py",
      [
        "FunctionTests",
        "test_empty_string"
      ]
    ],
    [
      "tests/utils_tests/test_termcolors.py",
      [
        "TermColorTests",
        "test_empty_string"
      ]
    ]
  ],
  "test_sort": [
    [
      "tests/template_tests/filter_tests/test_dictsort.py",
      [
        "FunctionTests",
        "test_sort"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_dictsortreversed.py",
      [
        "FunctionTests",
        "test_sort"
      ]
    ],
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "ImmutableListTests",
        "test_sort"
      ]
    ]
  ],
  "test_dictsort_complex_sorting_key": [
    [
      "tests/template_tests/filter_tests/test_dictsort.py",
      [
        "FunctionTests",
        "test_dictsort_complex_sorting_key"
      ]
    ]
  ],
  "test_sort_list_of_tuples": [
    [
      "tests/template_tests/filter_tests/test_dictsort.py",
      [
        "FunctionTests",
        "test_sort_list_of_tuples"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_dictsortreversed.py",
      [
        "FunctionTests",
        "test_sort_list_of_tuples"
      ]
    ]
  ],
  "test_sort_list_of_tuple_like_dicts": [
    [
      "tests/template_tests/filter_tests/test_dictsort.py",
      [
        "FunctionTests",
        "test_sort_list_of_tuple_like_dicts"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_dictsortreversed.py",
      [
        "FunctionTests",
        "test_sort_list_of_tuple_like_dicts"
      ]
    ]
  ],
  "test_escape01": [
    [
      "tests/template_tests/filter_tests/test_escape.py",
      [
        "EscapeTests",
        "test_escape01"
      ]
    ]
  ],
  "test_escape02": [
    [
      "tests/template_tests/filter_tests/test_escape.py",
      [
        "EscapeTests",
        "test_escape02"
      ]
    ]
  ],
  "test_escape03": [
    [
      "tests/template_tests/filter_tests/test_escape.py",
      [
        "EscapeTests",
        "test_escape03"
      ]
    ]
  ],
  "test_escape04": [
    [
      "tests/template_tests/filter_tests/test_escape.py",
      [
        "EscapeTests",
        "test_escape04"
      ]
    ]
  ],
  "test_escape_lazy_string": [
    [
      "tests/template_tests/filter_tests/test_escape.py",
      [
        "EscapeTests",
        "test_escape_lazy_string"
      ]
    ]
  ],
  "test_escapejs01": [
    [
      "tests/template_tests/filter_tests/test_escapejs.py",
      [
        "EscapejsTests",
        "test_escapejs01"
      ]
    ]
  ],
  "test_escapejs02": [
    [
      "tests/template_tests/filter_tests/test_escapejs.py",
      [
        "EscapejsTests",
        "test_escapejs02"
      ]
    ]
  ],
  "test_whitespace": [
    [
      "tests/template_tests/filter_tests/test_escapejs.py",
      [
        "FunctionTests",
        "test_whitespace"
      ]
    ]
  ],
  "test_script": [
    [
      "tests/template_tests/filter_tests/test_escapejs.py",
      [
        "FunctionTests",
        "test_script"
      ]
    ]
  ],
  "test_paragraph_separator": [
    [
      "tests/template_tests/filter_tests/test_escapejs.py",
      [
        "FunctionTests",
        "test_paragraph_separator"
      ]
    ]
  ],
  "test_lazy_string": [
    [
      "tests/template_tests/filter_tests/test_escapejs.py",
      [
        "FunctionTests",
        "test_lazy_string"
      ]
    ]
  ],
  "test_formats": [
    [
      "tests/template_tests/filter_tests/test_filesizeformat.py",
      [
        "FunctionTests",
        "test_formats"
      ]
    ]
  ],
  "test_localized_formats": [
    [
      "tests/template_tests/filter_tests/test_filesizeformat.py",
      [
        "FunctionTests",
        "test_localized_formats"
      ]
    ]
  ],
  "test_negative_numbers": [
    [
      "tests/template_tests/filter_tests/test_filesizeformat.py",
      [
        "FunctionTests",
        "test_negative_numbers"
      ]
    ]
  ],
  "test_first01": [
    [
      "tests/template_tests/filter_tests/test_first.py",
      [
        "FirstTests",
        "test_first01"
      ]
    ]
  ],
  "test_first02": [
    [
      "tests/template_tests/filter_tests/test_first.py",
      [
        "FirstTests",
        "test_first02"
      ]
    ]
  ],
  "test_list": [
    [
      "tests/template_tests/filter_tests/test_first.py",
      [
        "FunctionTests",
        "test_list"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_join.py",
      [
        "FunctionTests",
        "test_list"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_length.py",
      [
        "FunctionTests",
        "test_list"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_unordered_list.py",
      [
        "FunctionTests",
        "test_list"
      ]
    ],
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "CaseInsensitiveMappingTests",
        "test_list"
      ]
    ]
  ],
  "test_floatformat01": [
    [
      "tests/template_tests/filter_tests/test_floatformat.py",
      [
        "FloatformatTests",
        "test_floatformat01"
      ]
    ]
  ],
  "test_floatformat02": [
    [
      "tests/template_tests/filter_tests/test_floatformat.py",
      [
        "FloatformatTests",
        "test_floatformat02"
      ]
    ]
  ],
  "test_inputs": [
    [
      "tests/template_tests/filter_tests/test_floatformat.py",
      [
        "FunctionTests",
        "test_inputs"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_time.py",
      [
        "FunctionTests",
        "test_inputs"
      ]
    ]
  ],
  "test_zero_values": [
    [
      "tests/template_tests/filter_tests/test_floatformat.py",
      [
        "FunctionTests",
        "test_zero_values"
      ]
    ]
  ],
  "test_negative_zero_values": [
    [
      "tests/template_tests/filter_tests/test_floatformat.py",
      [
        "FunctionTests",
        "test_negative_zero_values"
      ]
    ]
  ],
  "test_infinity": [
    [
      "tests/template_tests/filter_tests/test_floatformat.py",
      [
        "FunctionTests",
        "test_infinity"
      ]
    ]
  ],
  "test_float_dunder_method": [
    [
      "tests/template_tests/filter_tests/test_floatformat.py",
      [
        "FunctionTests",
        "test_float_dunder_method"
      ]
    ]
  ],
  "test_low_decimal_precision": [
    [
      "tests/template_tests/filter_tests/test_floatformat.py",
      [
        "FunctionTests",
        "test_low_decimal_precision"
      ]
    ]
  ],
  "test_force_escape01": [
    [
      "tests/template_tests/filter_tests/test_force_escape.py",
      [
        "ForceEscapeTests",
        "test_force_escape01"
      ]
    ]
  ],
  "test_force_escape02": [
    [
      "tests/template_tests/filter_tests/test_force_escape.py",
      [
        "ForceEscapeTests",
        "test_force_escape02"
      ]
    ]
  ],
  "test_force_escape03": [
    [
      "tests/template_tests/filter_tests/test_force_escape.py",
      [
        "ForceEscapeTests",
        "test_force_escape03"
      ]
    ]
  ],
  "test_force_escape04": [
    [
      "tests/template_tests/filter_tests/test_force_escape.py",
      [
        "ForceEscapeTests",
        "test_force_escape04"
      ]
    ]
  ],
  "test_force_escape05": [
    [
      "tests/template_tests/filter_tests/test_force_escape.py",
      [
        "ForceEscapeTests",
        "test_force_escape05"
      ]
    ]
  ],
  "test_force_escape06": [
    [
      "tests/template_tests/filter_tests/test_force_escape.py",
      [
        "ForceEscapeTests",
        "test_force_escape06"
      ]
    ]
  ],
  "test_force_escape07": [
    [
      "tests/template_tests/filter_tests/test_force_escape.py",
      [
        "ForceEscapeTests",
        "test_force_escape07"
      ]
    ]
  ],
  "test_force_escape08": [
    [
      "tests/template_tests/filter_tests/test_force_escape.py",
      [
        "ForceEscapeTests",
        "test_force_escape08"
      ]
    ]
  ],
  "test_escape": [
    [
      "tests/template_tests/filter_tests/test_force_escape.py",
      [
        "FunctionTests",
        "test_escape"
      ]
    ],
    [
      "tests/utils_tests/test_html.py",
      [
        "TestUtilsHtml",
        "test_escape"
      ]
    ],
    [
      "tests/utils_tests/test_regex_helper.py",
      [
        "NormalizeTests",
        "test_escape"
      ]
    ]
  ],
  "test_iriencode01": [
    [
      "tests/template_tests/filter_tests/test_iriencode.py",
      [
        "IriencodeTests",
        "test_iriencode01"
      ]
    ]
  ],
  "test_iriencode02": [
    [
      "tests/template_tests/filter_tests/test_iriencode.py",
      [
        "IriencodeTests",
        "test_iriencode02"
      ]
    ]
  ],
  "test_iriencode03": [
    [
      "tests/template_tests/filter_tests/test_iriencode.py",
      [
        "IriencodeTests",
        "test_iriencode03"
      ]
    ]
  ],
  "test_iriencode04": [
    [
      "tests/template_tests/filter_tests/test_iriencode.py",
      [
        "IriencodeTests",
        "test_iriencode04"
      ]
    ]
  ],
  "test_urlencoded": [
    [
      "tests/template_tests/filter_tests/test_iriencode.py",
      [
        "FunctionTests",
        "test_urlencoded"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "FunctionTests",
        "test_urlencoded"
      ]
    ]
  ],
  "test_join01": [
    [
      "tests/template_tests/filter_tests/test_join.py",
      [
        "JoinTests",
        "test_join01"
      ]
    ]
  ],
  "test_join02": [
    [
      "tests/template_tests/filter_tests/test_join.py",
      [
        "JoinTests",
        "test_join02"
      ]
    ]
  ],
  "test_join03": [
    [
      "tests/template_tests/filter_tests/test_join.py",
      [
        "JoinTests",
        "test_join03"
      ]
    ]
  ],
  "test_join04": [
    [
      "tests/template_tests/filter_tests/test_join.py",
      [
        "JoinTests",
        "test_join04"
      ]
    ]
  ],
  "test_join05": [
    [
      "tests/template_tests/filter_tests/test_join.py",
      [
        "JoinTests",
        "test_join05"
      ]
    ]
  ],
  "test_join06": [
    [
      "tests/template_tests/filter_tests/test_join.py",
      [
        "JoinTests",
        "test_join06"
      ]
    ]
  ],
  "test_join07": [
    [
      "tests/template_tests/filter_tests/test_join.py",
      [
        "JoinTests",
        "test_join07"
      ]
    ]
  ],
  "test_join08": [
    [
      "tests/template_tests/filter_tests/test_join.py",
      [
        "JoinTests",
        "test_join08"
      ]
    ]
  ],
  "test_autoescape": [
    [
      "tests/template_tests/filter_tests/test_join.py",
      [
        "FunctionTests",
        "test_autoescape"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_linebreaks.py",
      [
        "FunctionTests",
        "test_autoescape"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_linebreaksbr.py",
      [
        "FunctionTests",
        "test_autoescape"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_linenumbers.py",
      [
        "FunctionTests",
        "test_autoescape"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_unordered_list.py",
      [
        "FunctionTests",
        "test_autoescape"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "FunctionTests",
        "test_autoescape"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_urlizetrunc.py",
      [
        "FunctionTests",
        "test_autoescape"
      ]
    ]
  ],
  "test_noniterable_arg": [
    [
      "tests/template_tests/filter_tests/test_join.py",
      [
        "FunctionTests",
        "test_noniterable_arg"
      ]
    ]
  ],
  "test_noniterable_arg_autoescape_off": [
    [
      "tests/template_tests/filter_tests/test_join.py",
      [
        "FunctionTests",
        "test_noniterable_arg_autoescape_off"
      ]
    ]
  ],
  "test_last01": [
    [
      "tests/template_tests/filter_tests/test_last.py",
      [
        "LastTests",
        "test_last01"
      ]
    ]
  ],
  "test_last02": [
    [
      "tests/template_tests/filter_tests/test_last.py",
      [
        "LastTests",
        "test_last02"
      ]
    ]
  ],
  "test_length01": [
    [
      "tests/template_tests/filter_tests/test_length.py",
      [
        "LengthTests",
        "test_length01"
      ]
    ]
  ],
  "test_length02": [
    [
      "tests/template_tests/filter_tests/test_length.py",
      [
        "LengthTests",
        "test_length02"
      ]
    ]
  ],
  "test_length03": [
    [
      "tests/template_tests/filter_tests/test_length.py",
      [
        "LengthTests",
        "test_length03"
      ]
    ]
  ],
  "test_length04": [
    [
      "tests/template_tests/filter_tests/test_length.py",
      [
        "LengthTests",
        "test_length04"
      ]
    ]
  ],
  "test_length05": [
    [
      "tests/template_tests/filter_tests/test_length.py",
      [
        "LengthTests",
        "test_length05"
      ]
    ]
  ],
  "test_length06": [
    [
      "tests/template_tests/filter_tests/test_length.py",
      [
        "LengthTests",
        "test_length06"
      ]
    ]
  ],
  "test_length07": [
    [
      "tests/template_tests/filter_tests/test_length.py",
      [
        "LengthTests",
        "test_length07"
      ]
    ]
  ],
  "test_safestring": [
    [
      "tests/template_tests/filter_tests/test_length.py",
      [
        "FunctionTests",
        "test_safestring"
      ]
    ]
  ],
  "test_length_is01": [
    [
      "tests/template_tests/filter_tests/test_length_is.py",
      [
        "LengthIsTests",
        "test_length_is01"
      ]
    ]
  ],
  "test_length_is02": [
    [
      "tests/template_tests/filter_tests/test_length_is.py",
      [
        "LengthIsTests",
        "test_length_is02"
      ]
    ]
  ],
  "test_length_is03": [
    [
      "tests/template_tests/filter_tests/test_length_is.py",
      [
        "LengthIsTests",
        "test_length_is03"
      ]
    ]
  ],
  "test_length_is04": [
    [
      "tests/template_tests/filter_tests/test_length_is.py",
      [
        "LengthIsTests",
        "test_length_is04"
      ]
    ]
  ],
  "test_length_is05": [
    [
      "tests/template_tests/filter_tests/test_length_is.py",
      [
        "LengthIsTests",
        "test_length_is05"
      ]
    ]
  ],
  "test_length_is06": [
    [
      "tests/template_tests/filter_tests/test_length_is.py",
      [
        "LengthIsTests",
        "test_length_is06"
      ]
    ]
  ],
  "test_length_is07": [
    [
      "tests/template_tests/filter_tests/test_length_is.py",
      [
        "LengthIsTests",
        "test_length_is07"
      ]
    ]
  ],
  "test_length_is08": [
    [
      "tests/template_tests/filter_tests/test_length_is.py",
      [
        "LengthIsTests",
        "test_length_is08"
      ]
    ]
  ],
  "test_length_is09": [
    [
      "tests/template_tests/filter_tests/test_length_is.py",
      [
        "LengthIsTests",
        "test_length_is09"
      ]
    ]
  ],
  "test_length_is10": [
    [
      "tests/template_tests/filter_tests/test_length_is.py",
      [
        "LengthIsTests",
        "test_length_is10"
      ]
    ]
  ],
  "test_length_is11": [
    [
      "tests/template_tests/filter_tests/test_length_is.py",
      [
        "LengthIsTests",
        "test_length_is11"
      ]
    ]
  ],
  "test_linebreaks01": [
    [
      "tests/template_tests/filter_tests/test_linebreaks.py",
      [
        "LinebreaksTests",
        "test_linebreaks01"
      ]
    ]
  ],
  "test_linebreaks02": [
    [
      "tests/template_tests/filter_tests/test_linebreaks.py",
      [
        "LinebreaksTests",
        "test_linebreaks02"
      ]
    ]
  ],
  "test_line": [
    [
      "tests/template_tests/filter_tests/test_linebreaks.py",
      [
        "FunctionTests",
        "test_line"
      ]
    ]
  ],
  "test_newline": [
    [
      "tests/template_tests/filter_tests/test_linebreaks.py",
      [
        "FunctionTests",
        "test_newline"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_linebreaksbr.py",
      [
        "FunctionTests",
        "test_newline"
      ]
    ]
  ],
  "test_carriage": [
    [
      "tests/template_tests/filter_tests/test_linebreaks.py",
      [
        "FunctionTests",
        "test_carriage"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_linebreaksbr.py",
      [
        "FunctionTests",
        "test_carriage"
      ]
    ]
  ],
  "test_carriage_newline": [
    [
      "tests/template_tests/filter_tests/test_linebreaks.py",
      [
        "FunctionTests",
        "test_carriage_newline"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_linebreaksbr.py",
      [
        "FunctionTests",
        "test_carriage_newline"
      ]
    ]
  ],
  "test_lazy_string_input": [
    [
      "tests/template_tests/filter_tests/test_linebreaks.py",
      [
        "FunctionTests",
        "test_lazy_string_input"
      ]
    ]
  ],
  "test_linebreaksbr01": [
    [
      "tests/template_tests/filter_tests/test_linebreaksbr.py",
      [
        "LinebreaksbrTests",
        "test_linebreaksbr01"
      ]
    ]
  ],
  "test_linebreaksbr02": [
    [
      "tests/template_tests/filter_tests/test_linebreaksbr.py",
      [
        "LinebreaksbrTests",
        "test_linebreaksbr02"
      ]
    ]
  ],
  "test_linenumbers01": [
    [
      "tests/template_tests/filter_tests/test_linenumbers.py",
      [
        "LinenumbersTests",
        "test_linenumbers01"
      ]
    ]
  ],
  "test_linenumbers02": [
    [
      "tests/template_tests/filter_tests/test_linenumbers.py",
      [
        "LinenumbersTests",
        "test_linenumbers02"
      ]
    ]
  ],
  "test_linenumbers": [
    [
      "tests/template_tests/filter_tests/test_linenumbers.py",
      [
        "FunctionTests",
        "test_linenumbers"
      ]
    ]
  ],
  "test_linenumbers2": [
    [
      "tests/template_tests/filter_tests/test_linenumbers.py",
      [
        "FunctionTests",
        "test_linenumbers2"
      ]
    ]
  ],
  "test_ljust01": [
    [
      "tests/template_tests/filter_tests/test_ljust.py",
      [
        "LjustTests",
        "test_ljust01"
      ]
    ]
  ],
  "test_ljust02": [
    [
      "tests/template_tests/filter_tests/test_ljust.py",
      [
        "LjustTests",
        "test_ljust02"
      ]
    ]
  ],
  "test_ljust": [
    [
      "tests/template_tests/filter_tests/test_ljust.py",
      [
        "FunctionTests",
        "test_ljust"
      ]
    ]
  ],
  "test_less_than_string_length": [
    [
      "tests/template_tests/filter_tests/test_ljust.py",
      [
        "FunctionTests",
        "test_less_than_string_length"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_rjust.py",
      [
        "FunctionTests",
        "test_less_than_string_length"
      ]
    ]
  ],
  "test_lower01": [
    [
      "tests/template_tests/filter_tests/test_lower.py",
      [
        "LowerTests",
        "test_lower01"
      ]
    ]
  ],
  "test_lower02": [
    [
      "tests/template_tests/filter_tests/test_lower.py",
      [
        "LowerTests",
        "test_lower02"
      ]
    ]
  ],
  "test_lower": [
    [
      "tests/template_tests/filter_tests/test_lower.py",
      [
        "FunctionTests",
        "test_lower"
      ]
    ]
  ],
  "test_make_list01": [
    [
      "tests/template_tests/filter_tests/test_make_list.py",
      [
        "MakeListTests",
        "test_make_list01"
      ]
    ]
  ],
  "test_make_list02": [
    [
      "tests/template_tests/filter_tests/test_make_list.py",
      [
        "MakeListTests",
        "test_make_list02"
      ]
    ]
  ],
  "test_make_list03": [
    [
      "tests/template_tests/filter_tests/test_make_list.py",
      [
        "MakeListTests",
        "test_make_list03"
      ]
    ]
  ],
  "test_make_list04": [
    [
      "tests/template_tests/filter_tests/test_make_list.py",
      [
        "MakeListTests",
        "test_make_list04"
      ]
    ]
  ],
  "test_phone2numeric01": [
    [
      "tests/template_tests/filter_tests/test_phone2numeric.py",
      [
        "Phone2numericTests",
        "test_phone2numeric01"
      ]
    ]
  ],
  "test_phone2numeric02": [
    [
      "tests/template_tests/filter_tests/test_phone2numeric.py",
      [
        "Phone2numericTests",
        "test_phone2numeric02"
      ]
    ]
  ],
  "test_phone2numeric03": [
    [
      "tests/template_tests/filter_tests/test_phone2numeric.py",
      [
        "Phone2numericTests",
        "test_phone2numeric03"
      ]
    ]
  ],
  "test_phone2numeric": [
    [
      "tests/template_tests/filter_tests/test_phone2numeric.py",
      [
        "FunctionTests",
        "test_phone2numeric"
      ]
    ],
    [
      "tests/utils_tests/test_text.py",
      [
        "TestUtilsText",
        "test_phone2numeric"
      ]
    ]
  ],
  "check_values": [
    [
      "tests/template_tests/filter_tests/test_pluralize.py",
      [
        "PluralizeTests",
        "check_values"
      ]
    ]
  ],
  "test_no_arguments": [
    [
      "tests/template_tests/filter_tests/test_pluralize.py",
      [
        "PluralizeTests",
        "test_no_arguments"
      ]
    ]
  ],
  "test_singular_and_plural_suffix": [
    [
      "tests/template_tests/filter_tests/test_pluralize.py",
      [
        "PluralizeTests",
        "test_singular_and_plural_suffix"
      ]
    ]
  ],
  "test_integers": [
    [
      "tests/template_tests/filter_tests/test_pluralize.py",
      [
        "FunctionTests",
        "test_integers"
      ]
    ]
  ],
  "test_floats": [
    [
      "tests/template_tests/filter_tests/test_pluralize.py",
      [
        "FunctionTests",
        "test_floats"
      ]
    ]
  ],
  "test_decimals": [
    [
      "tests/template_tests/filter_tests/test_pluralize.py",
      [
        "FunctionTests",
        "test_decimals"
      ]
    ]
  ],
  "test_lists": [
    [
      "tests/template_tests/filter_tests/test_pluralize.py",
      [
        "FunctionTests",
        "test_lists"
      ]
    ]
  ],
  "test_suffixes": [
    [
      "tests/template_tests/filter_tests/test_pluralize.py",
      [
        "FunctionTests",
        "test_suffixes"
      ]
    ]
  ],
  "test_no_len_type": [
    [
      "tests/template_tests/filter_tests/test_pluralize.py",
      [
        "FunctionTests",
        "test_no_len_type"
      ]
    ]
  ],
  "test_value_error": [
    [
      "tests/template_tests/filter_tests/test_pluralize.py",
      [
        "FunctionTests",
        "test_value_error"
      ]
    ]
  ],
  "test_random01": [
    [
      "tests/template_tests/filter_tests/test_random.py",
      [
        "RandomTests",
        "test_random01"
      ]
    ]
  ],
  "test_random02": [
    [
      "tests/template_tests/filter_tests/test_random.py",
      [
        "RandomTests",
        "test_random02"
      ]
    ]
  ],
  "test_rjust01": [
    [
      "tests/template_tests/filter_tests/test_rjust.py",
      [
        "RjustTests",
        "test_rjust01"
      ]
    ]
  ],
  "test_rjust02": [
    [
      "tests/template_tests/filter_tests/test_rjust.py",
      [
        "RjustTests",
        "test_rjust02"
      ]
    ]
  ],
  "test_rjust": [
    [
      "tests/template_tests/filter_tests/test_rjust.py",
      [
        "FunctionTests",
        "test_rjust"
      ]
    ]
  ],
  "test_safe01": [
    [
      "tests/template_tests/filter_tests/test_safe.py",
      [
        "SafeTests",
        "test_safe01"
      ]
    ]
  ],
  "test_safe02": [
    [
      "tests/template_tests/filter_tests/test_safe.py",
      [
        "SafeTests",
        "test_safe02"
      ]
    ]
  ],
  "test_safeseq01": [
    [
      "tests/template_tests/filter_tests/test_safeseq.py",
      [
        "SafeseqTests",
        "test_safeseq01"
      ]
    ]
  ],
  "test_safeseq02": [
    [
      "tests/template_tests/filter_tests/test_safeseq.py",
      [
        "SafeseqTests",
        "test_safeseq02"
      ]
    ]
  ],
  "test_slice01": [
    [
      "tests/template_tests/filter_tests/test_slice.py",
      [
        "SliceTests",
        "test_slice01"
      ]
    ]
  ],
  "test_slice02": [
    [
      "tests/template_tests/filter_tests/test_slice.py",
      [
        "SliceTests",
        "test_slice02"
      ]
    ]
  ],
  "test_zero_length": [
    [
      "tests/template_tests/filter_tests/test_slice.py",
      [
        "FunctionTests",
        "test_zero_length"
      ]
    ]
  ],
  "test_index_integer": [
    [
      "tests/template_tests/filter_tests/test_slice.py",
      [
        "FunctionTests",
        "test_index_integer"
      ]
    ]
  ],
  "test_negative_index": [
    [
      "tests/template_tests/filter_tests/test_slice.py",
      [
        "FunctionTests",
        "test_negative_index"
      ]
    ]
  ],
  "test_range": [
    [
      "tests/template_tests/filter_tests/test_slice.py",
      [
        "FunctionTests",
        "test_range"
      ]
    ]
  ],
  "test_range_multiple": [
    [
      "tests/template_tests/filter_tests/test_slice.py",
      [
        "FunctionTests",
        "test_range_multiple"
      ]
    ]
  ],
  "test_range_step": [
    [
      "tests/template_tests/filter_tests/test_slice.py",
      [
        "FunctionTests",
        "test_range_step"
      ]
    ]
  ],
  "test_slugify01": [
    [
      "tests/template_tests/filter_tests/test_slugify.py",
      [
        "SlugifyTests",
        "test_slugify01"
      ]
    ]
  ],
  "test_slugify02": [
    [
      "tests/template_tests/filter_tests/test_slugify.py",
      [
        "SlugifyTests",
        "test_slugify02"
      ]
    ]
  ],
  "test_slugify": [
    [
      "tests/template_tests/filter_tests/test_slugify.py",
      [
        "FunctionTests",
        "test_slugify"
      ]
    ],
    [
      "tests/utils_tests/test_text.py",
      [
        "TestUtilsText",
        "test_slugify"
      ]
    ]
  ],
  "test_slugify_lazy_string": [
    [
      "tests/template_tests/filter_tests/test_slugify.py",
      [
        "FunctionTests",
        "test_slugify_lazy_string"
      ]
    ]
  ],
  "test_stringformat01": [
    [
      "tests/template_tests/filter_tests/test_stringformat.py",
      [
        "StringformatTests",
        "test_stringformat01"
      ]
    ]
  ],
  "test_stringformat02": [
    [
      "tests/template_tests/filter_tests/test_stringformat.py",
      [
        "StringformatTests",
        "test_stringformat02"
      ]
    ]
  ],
  "test_striptags01": [
    [
      "tests/template_tests/filter_tests/test_striptags.py",
      [
        "StriptagsTests",
        "test_striptags01"
      ]
    ]
  ],
  "test_striptags02": [
    [
      "tests/template_tests/filter_tests/test_striptags.py",
      [
        "StriptagsTests",
        "test_striptags02"
      ]
    ]
  ],
  "test_strip": [
    [
      "tests/template_tests/filter_tests/test_striptags.py",
      [
        "FunctionTests",
        "test_strip"
      ]
    ]
  ],
  "test_strip_lazy_string": [
    [
      "tests/template_tests/filter_tests/test_striptags.py",
      [
        "FunctionTests",
        "test_strip_lazy_string"
      ]
    ]
  ],
  "test_time00": [
    [
      "tests/template_tests/filter_tests/test_time.py",
      [
        "TimeTests",
        "test_time00"
      ]
    ]
  ],
  "test_time00_l10n": [
    [
      "tests/template_tests/filter_tests/test_time.py",
      [
        "TimeTests",
        "test_time00_l10n"
      ]
    ]
  ],
  "test_time01": [
    [
      "tests/template_tests/filter_tests/test_time.py",
      [
        "TimeTests",
        "test_time01"
      ]
    ]
  ],
  "test_time02": [
    [
      "tests/template_tests/filter_tests/test_time.py",
      [
        "TimeTests",
        "test_time02"
      ]
    ]
  ],
  "test_time03": [
    [
      "tests/template_tests/filter_tests/test_time.py",
      [
        "TimeTests",
        "test_time03"
      ]
    ]
  ],
  "test_time04": [
    [
      "tests/template_tests/filter_tests/test_time.py",
      [
        "TimeTests",
        "test_time04"
      ]
    ]
  ],
  "test_time05": [
    [
      "tests/template_tests/filter_tests/test_time.py",
      [
        "TimeTests",
        "test_time05"
      ]
    ]
  ],
  "test_time06": [
    [
      "tests/template_tests/filter_tests/test_time.py",
      [
        "TimeTests",
        "test_time06"
      ]
    ]
  ],
  "test_timesince01": [
    [
      "tests/template_tests/filter_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_timesince01"
      ]
    ]
  ],
  "test_timesince02": [
    [
      "tests/template_tests/filter_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_timesince02"
      ]
    ]
  ],
  "test_timesince03": [
    [
      "tests/template_tests/filter_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_timesince03"
      ]
    ]
  ],
  "test_timesince04": [
    [
      "tests/template_tests/filter_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_timesince04"
      ]
    ]
  ],
  "test_timesince05": [
    [
      "tests/template_tests/filter_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_timesince05"
      ]
    ]
  ],
  "test_timesince06": [
    [
      "tests/template_tests/filter_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_timesince06"
      ]
    ]
  ],
  "test_timesince07": [
    [
      "tests/template_tests/filter_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_timesince07"
      ]
    ]
  ],
  "test_timesince08": [
    [
      "tests/template_tests/filter_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_timesince08"
      ]
    ]
  ],
  "test_timesince09": [
    [
      "tests/template_tests/filter_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_timesince09"
      ]
    ]
  ],
  "test_timesince10": [
    [
      "tests/template_tests/filter_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_timesince10"
      ]
    ]
  ],
  "test_timesince11": [
    [
      "tests/template_tests/filter_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_timesince11"
      ]
    ]
  ],
  "test_timesince12": [
    [
      "tests/template_tests/filter_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_timesince12"
      ]
    ]
  ],
  "test_timesince13": [
    [
      "tests/template_tests/filter_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_timesince13"
      ]
    ]
  ],
  "test_timesince14": [
    [
      "tests/template_tests/filter_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_timesince14"
      ]
    ]
  ],
  "test_timesince15": [
    [
      "tests/template_tests/filter_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_timesince15"
      ]
    ]
  ],
  "test_timesince16": [
    [
      "tests/template_tests/filter_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_timesince16"
      ]
    ]
  ],
  "test_timesince17": [
    [
      "tests/template_tests/filter_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_timesince17"
      ]
    ]
  ],
  "test_timesince18": [
    [
      "tests/template_tests/filter_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_timesince18"
      ]
    ]
  ],
  "test_since_now": [
    [
      "tests/template_tests/filter_tests/test_timesince.py",
      [
        "FunctionTests",
        "test_since_now"
      ]
    ]
  ],
  "test_explicit_date": [
    [
      "tests/template_tests/filter_tests/test_timesince.py",
      [
        "FunctionTests",
        "test_explicit_date"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_timeuntil.py",
      [
        "FunctionTests",
        "test_explicit_date"
      ]
    ]
  ],
  "test_timeuntil01": [
    [
      "tests/template_tests/filter_tests/test_timeuntil.py",
      [
        "TimeuntilTests",
        "test_timeuntil01"
      ]
    ]
  ],
  "test_timeuntil02": [
    [
      "tests/template_tests/filter_tests/test_timeuntil.py",
      [
        "TimeuntilTests",
        "test_timeuntil02"
      ]
    ]
  ],
  "test_timeuntil03": [
    [
      "tests/template_tests/filter_tests/test_timeuntil.py",
      [
        "TimeuntilTests",
        "test_timeuntil03"
      ]
    ]
  ],
  "test_timeuntil04": [
    [
      "tests/template_tests/filter_tests/test_timeuntil.py",
      [
        "TimeuntilTests",
        "test_timeuntil04"
      ]
    ]
  ],
  "test_timeuntil05": [
    [
      "tests/template_tests/filter_tests/test_timeuntil.py",
      [
        "TimeuntilTests",
        "test_timeuntil05"
      ]
    ]
  ],
  "test_timeuntil06": [
    [
      "tests/template_tests/filter_tests/test_timeuntil.py",
      [
        "TimeuntilTests",
        "test_timeuntil06"
      ]
    ]
  ],
  "test_timeuntil07": [
    [
      "tests/template_tests/filter_tests/test_timeuntil.py",
      [
        "TimeuntilTests",
        "test_timeuntil07"
      ]
    ]
  ],
  "test_timeuntil08": [
    [
      "tests/template_tests/filter_tests/test_timeuntil.py",
      [
        "TimeuntilTests",
        "test_timeuntil08"
      ]
    ]
  ],
  "test_timeuntil09": [
    [
      "tests/template_tests/filter_tests/test_timeuntil.py",
      [
        "TimeuntilTests",
        "test_timeuntil09"
      ]
    ]
  ],
  "test_timeuntil10": [
    [
      "tests/template_tests/filter_tests/test_timeuntil.py",
      [
        "TimeuntilTests",
        "test_timeuntil10"
      ]
    ]
  ],
  "test_timeuntil11": [
    [
      "tests/template_tests/filter_tests/test_timeuntil.py",
      [
        "TimeuntilTests",
        "test_timeuntil11"
      ]
    ]
  ],
  "test_timeuntil12": [
    [
      "tests/template_tests/filter_tests/test_timeuntil.py",
      [
        "TimeuntilTests",
        "test_timeuntil12"
      ]
    ]
  ],
  "test_timeuntil13": [
    [
      "tests/template_tests/filter_tests/test_timeuntil.py",
      [
        "TimeuntilTests",
        "test_timeuntil13"
      ]
    ]
  ],
  "test_timeuntil14": [
    [
      "tests/template_tests/filter_tests/test_timeuntil.py",
      [
        "TimeuntilTests",
        "test_timeuntil14"
      ]
    ]
  ],
  "test_naive_aware_type_error": [
    [
      "tests/template_tests/filter_tests/test_timeuntil.py",
      [
        "TimeuntilTests",
        "test_naive_aware_type_error"
      ]
    ]
  ],
  "test_aware_naive_type_error": [
    [
      "tests/template_tests/filter_tests/test_timeuntil.py",
      [
        "TimeuntilTests",
        "test_aware_naive_type_error"
      ]
    ]
  ],
  "test_until_now": [
    [
      "tests/template_tests/filter_tests/test_timeuntil.py",
      [
        "FunctionTests",
        "test_until_now"
      ]
    ]
  ],
  "test_title1": [
    [
      "tests/template_tests/filter_tests/test_title.py",
      [
        "TitleTests",
        "test_title1"
      ]
    ]
  ],
  "test_title2": [
    [
      "tests/template_tests/filter_tests/test_title.py",
      [
        "TitleTests",
        "test_title2"
      ]
    ]
  ],
  "test_title": [
    [
      "tests/template_tests/filter_tests/test_title.py",
      [
        "FunctionTests",
        "test_title"
      ]
    ]
  ],
  "test_truncatechars01": [
    [
      "tests/template_tests/filter_tests/test_truncatechars.py",
      [
        "TruncatecharsTests",
        "test_truncatechars01"
      ]
    ]
  ],
  "test_truncatechars02": [
    [
      "tests/template_tests/filter_tests/test_truncatechars.py",
      [
        "TruncatecharsTests",
        "test_truncatechars02"
      ]
    ]
  ],
  "test_fail_silently_incorrect_arg": [
    [
      "tests/template_tests/filter_tests/test_truncatechars.py",
      [
        "TruncatecharsTests",
        "test_fail_silently_incorrect_arg"
      ]
    ]
  ],
  "test_truncate_zero": [
    [
      "tests/template_tests/filter_tests/test_truncatechars_html.py",
      [
        "FunctionTests",
        "test_truncate_zero"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_truncatewords_html.py",
      [
        "FunctionTests",
        "test_truncate_zero"
      ]
    ]
  ],
  "test_truncate": [
    [
      "tests/template_tests/filter_tests/test_truncatechars_html.py",
      [
        "FunctionTests",
        "test_truncate"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_truncatewords.py",
      [
        "FunctionTests",
        "test_truncate"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_truncatewords_html.py",
      [
        "FunctionTests",
        "test_truncate"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_urlizetrunc.py",
      [
        "FunctionTests",
        "test_truncate"
      ]
    ]
  ],
  "test_truncate2": [
    [
      "tests/template_tests/filter_tests/test_truncatechars_html.py",
      [
        "FunctionTests",
        "test_truncate2"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_truncatewords.py",
      [
        "FunctionTests",
        "test_truncate2"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_truncatewords_html.py",
      [
        "FunctionTests",
        "test_truncate2"
      ]
    ]
  ],
  "test_truncate3": [
    [
      "tests/template_tests/filter_tests/test_truncatechars_html.py",
      [
        "FunctionTests",
        "test_truncate3"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_truncatewords_html.py",
      [
        "FunctionTests",
        "test_truncate3"
      ]
    ]
  ],
  "test_truncate_unicode": [
    [
      "tests/template_tests/filter_tests/test_truncatechars_html.py",
      [
        "FunctionTests",
        "test_truncate_unicode"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_truncatewords_html.py",
      [
        "FunctionTests",
        "test_truncate_unicode"
      ]
    ]
  ],
  "test_truncate_something": [
    [
      "tests/template_tests/filter_tests/test_truncatechars_html.py",
      [
        "FunctionTests",
        "test_truncate_something"
      ]
    ]
  ],
  "test_invalid_arg": [
    [
      "tests/template_tests/filter_tests/test_truncatechars_html.py",
      [
        "FunctionTests",
        "test_invalid_arg"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_truncatewords_html.py",
      [
        "FunctionTests",
        "test_invalid_arg"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/test_autoescape.py",
      [
        "AutoescapeTagTests",
        "test_invalid_arg"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_invalid_arg"
      ]
    ]
  ],
  "test_truncatewords01": [
    [
      "tests/template_tests/filter_tests/test_truncatewords.py",
      [
        "TruncatewordsTests",
        "test_truncatewords01"
      ]
    ]
  ],
  "test_truncatewords02": [
    [
      "tests/template_tests/filter_tests/test_truncatewords.py",
      [
        "TruncatewordsTests",
        "test_truncatewords02"
      ]
    ]
  ],
  "test_overtruncate": [
    [
      "tests/template_tests/filter_tests/test_truncatewords.py",
      [
        "FunctionTests",
        "test_overtruncate"
      ]
    ],
    [
      "tests/template_tests/filter_tests/test_urlizetrunc.py",
      [
        "FunctionTests",
        "test_overtruncate"
      ]
    ]
  ],
  "test_invalid_number": [
    [
      "tests/template_tests/filter_tests/test_truncatewords.py",
      [
        "FunctionTests",
        "test_invalid_number"
      ]
    ]
  ],
  "test_truncate4": [
    [
      "tests/template_tests/filter_tests/test_truncatewords_html.py",
      [
        "FunctionTests",
        "test_truncate4"
      ]
    ]
  ],
  "test_truncate_complex": [
    [
      "tests/template_tests/filter_tests/test_truncatewords_html.py",
      [
        "FunctionTests",
        "test_truncate_complex"
      ]
    ]
  ],
  "test_unordered_list01": [
    [
      "tests/template_tests/filter_tests/test_unordered_list.py",
      [
        "UnorderedListTests",
        "test_unordered_list01"
      ]
    ]
  ],
  "test_unordered_list02": [
    [
      "tests/template_tests/filter_tests/test_unordered_list.py",
      [
        "UnorderedListTests",
        "test_unordered_list02"
      ]
    ]
  ],
  "test_unordered_list03": [
    [
      "tests/template_tests/filter_tests/test_unordered_list.py",
      [
        "UnorderedListTests",
        "test_unordered_list03"
      ]
    ]
  ],
  "test_unordered_list04": [
    [
      "tests/template_tests/filter_tests/test_unordered_list.py",
      [
        "UnorderedListTests",
        "test_unordered_list04"
      ]
    ]
  ],
  "test_unordered_list05": [
    [
      "tests/template_tests/filter_tests/test_unordered_list.py",
      [
        "UnorderedListTests",
        "test_unordered_list05"
      ]
    ]
  ],
  "test_list_gettext": [
    [
      "tests/template_tests/filter_tests/test_unordered_list.py",
      [
        "FunctionTests",
        "test_list_gettext"
      ]
    ]
  ],
  "test_nested2": [
    [
      "tests/template_tests/filter_tests/test_unordered_list.py",
      [
        "FunctionTests",
        "test_nested2"
      ]
    ]
  ],
  "test_nested3": [
    [
      "tests/template_tests/filter_tests/test_unordered_list.py",
      [
        "FunctionTests",
        "test_nested3"
      ]
    ]
  ],
  "test_nested_multiple": [
    [
      "tests/template_tests/filter_tests/test_unordered_list.py",
      [
        "FunctionTests",
        "test_nested_multiple"
      ]
    ]
  ],
  "test_nested_multiple2": [
    [
      "tests/template_tests/filter_tests/test_unordered_list.py",
      [
        "FunctionTests",
        "test_nested_multiple2"
      ]
    ]
  ],
  "test_ulitem": [
    [
      "tests/template_tests/filter_tests/test_unordered_list.py",
      [
        "FunctionTests",
        "test_ulitem"
      ]
    ]
  ],
  "test_nested_generators": [
    [
      "tests/template_tests/filter_tests/test_unordered_list.py",
      [
        "FunctionTests",
        "test_nested_generators"
      ]
    ]
  ],
  "test_ulitem_autoescape_off": [
    [
      "tests/template_tests/filter_tests/test_unordered_list.py",
      [
        "FunctionTests",
        "test_ulitem_autoescape_off"
      ]
    ]
  ],
  "test_upper01": [
    [
      "tests/template_tests/filter_tests/test_upper.py",
      [
        "UpperTests",
        "test_upper01"
      ]
    ]
  ],
  "test_upper02": [
    [
      "tests/template_tests/filter_tests/test_upper.py",
      [
        "UpperTests",
        "test_upper02"
      ]
    ]
  ],
  "test_upper": [
    [
      "tests/template_tests/filter_tests/test_upper.py",
      [
        "FunctionTests",
        "test_upper"
      ]
    ]
  ],
  "test_urlencode01": [
    [
      "tests/template_tests/filter_tests/test_urlencode.py",
      [
        "UrlencodeTests",
        "test_urlencode01"
      ]
    ]
  ],
  "test_urlencode02": [
    [
      "tests/template_tests/filter_tests/test_urlencode.py",
      [
        "UrlencodeTests",
        "test_urlencode02"
      ]
    ]
  ],
  "test_urlize01": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "UrlizeTests",
        "test_urlize01"
      ]
    ]
  ],
  "test_urlize02": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "UrlizeTests",
        "test_urlize02"
      ]
    ]
  ],
  "test_urlize03": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "UrlizeTests",
        "test_urlize03"
      ]
    ]
  ],
  "test_urlize04": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "UrlizeTests",
        "test_urlize04"
      ]
    ]
  ],
  "test_urlize05": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "UrlizeTests",
        "test_urlize05"
      ]
    ]
  ],
  "test_urlize06": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "UrlizeTests",
        "test_urlize06"
      ]
    ]
  ],
  "test_urlize07": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "UrlizeTests",
        "test_urlize07"
      ]
    ]
  ],
  "test_urlize08": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "UrlizeTests",
        "test_urlize08"
      ]
    ]
  ],
  "test_urlize09": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "UrlizeTests",
        "test_urlize09"
      ]
    ]
  ],
  "test_urls": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "FunctionTests",
        "test_urls"
      ]
    ]
  ],
  "test_url_split_chars": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "FunctionTests",
        "test_url_split_chars"
      ]
    ]
  ],
  "test_email": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "FunctionTests",
        "test_email"
      ]
    ]
  ],
  "test_word_with_dot": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "FunctionTests",
        "test_word_with_dot"
      ]
    ]
  ],
  "test_quoting": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "FunctionTests",
        "test_quoting"
      ]
    ],
    [
      "tests/utils_tests/test_http.py",
      [
        "ETagProcessingTests",
        "test_quoting"
      ]
    ]
  ],
  "test_parenthesis": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "FunctionTests",
        "test_parenthesis"
      ]
    ]
  ],
  "test_nofollow": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "FunctionTests",
        "test_nofollow"
      ]
    ]
  ],
  "test_idn": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "FunctionTests",
        "test_idn"
      ]
    ]
  ],
  "test_malformed": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "FunctionTests",
        "test_malformed"
      ]
    ]
  ],
  "test_tlds": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "FunctionTests",
        "test_tlds"
      ]
    ]
  ],
  "test_uppercase": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "FunctionTests",
        "test_uppercase"
      ]
    ]
  ],
  "test_trailing_period": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "FunctionTests",
        "test_trailing_period"
      ]
    ]
  ],
  "test_trailing_multiple_punctuation": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "FunctionTests",
        "test_trailing_multiple_punctuation"
      ]
    ]
  ],
  "test_brackets": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "FunctionTests",
        "test_brackets"
      ]
    ]
  ],
  "test_wrapping_characters": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "FunctionTests",
        "test_wrapping_characters"
      ]
    ]
  ],
  "test_ipv4": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "FunctionTests",
        "test_ipv4"
      ]
    ]
  ],
  "test_ipv6": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "FunctionTests",
        "test_ipv6"
      ]
    ]
  ],
  "test_quotation_marks": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "FunctionTests",
        "test_quotation_marks"
      ]
    ]
  ],
  "test_quote_commas": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "FunctionTests",
        "test_quote_commas"
      ]
    ]
  ],
  "test_exclamation_marks": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "FunctionTests",
        "test_exclamation_marks"
      ]
    ]
  ],
  "test_lazystring": [
    [
      "tests/template_tests/filter_tests/test_urlize.py",
      [
        "FunctionTests",
        "test_lazystring"
      ]
    ]
  ],
  "test_urlizetrunc01": [
    [
      "tests/template_tests/filter_tests/test_urlizetrunc.py",
      [
        "UrlizetruncTests",
        "test_urlizetrunc01"
      ]
    ]
  ],
  "test_urlizetrunc02": [
    [
      "tests/template_tests/filter_tests/test_urlizetrunc.py",
      [
        "UrlizetruncTests",
        "test_urlizetrunc02"
      ]
    ]
  ],
  "test_query_string": [
    [
      "tests/template_tests/filter_tests/test_urlizetrunc.py",
      [
        "FunctionTests",
        "test_query_string"
      ]
    ]
  ],
  "test_wordcount01": [
    [
      "tests/template_tests/filter_tests/test_wordcount.py",
      [
        "WordcountTests",
        "test_wordcount01"
      ]
    ]
  ],
  "test_wordcount02": [
    [
      "tests/template_tests/filter_tests/test_wordcount.py",
      [
        "WordcountTests",
        "test_wordcount02"
      ]
    ]
  ],
  "test_count_one": [
    [
      "tests/template_tests/filter_tests/test_wordcount.py",
      [
        "FunctionTests",
        "test_count_one"
      ]
    ]
  ],
  "test_count_multiple": [
    [
      "tests/template_tests/filter_tests/test_wordcount.py",
      [
        "FunctionTests",
        "test_count_multiple"
      ]
    ]
  ],
  "test_wordwrap01": [
    [
      "tests/template_tests/filter_tests/test_wordwrap.py",
      [
        "WordwrapTests",
        "test_wordwrap01"
      ]
    ]
  ],
  "test_wordwrap02": [
    [
      "tests/template_tests/filter_tests/test_wordwrap.py",
      [
        "WordwrapTests",
        "test_wordwrap02"
      ]
    ]
  ],
  "test_wrap": [
    [
      "tests/template_tests/filter_tests/test_wordwrap.py",
      [
        "FunctionTests",
        "test_wrap"
      ]
    ],
    [
      "tests/utils_tests/test_text.py",
      [
        "TestUtilsText",
        "test_wrap"
      ]
    ]
  ],
  "test_indent": [
    [
      "tests/template_tests/filter_tests/test_wordwrap.py",
      [
        "FunctionTests",
        "test_indent"
      ]
    ]
  ],
  "test_indent2": [
    [
      "tests/template_tests/filter_tests/test_wordwrap.py",
      [
        "FunctionTests",
        "test_indent2"
      ]
    ]
  ],
  "test_wrap_lazy_string": [
    [
      "tests/template_tests/filter_tests/test_wordwrap.py",
      [
        "FunctionTests",
        "test_wrap_lazy_string"
      ]
    ]
  ],
  "test_true_arguments": [
    [
      "tests/template_tests/filter_tests/test_yesno.py",
      [
        "FunctionTests",
        "test_true_arguments"
      ]
    ]
  ],
  "test_false_arguments": [
    [
      "tests/template_tests/filter_tests/test_yesno.py",
      [
        "FunctionTests",
        "test_false_arguments"
      ]
    ]
  ],
  "test_none_two_arguments": [
    [
      "tests/template_tests/filter_tests/test_yesno.py",
      [
        "FunctionTests",
        "test_none_two_arguments"
      ]
    ]
  ],
  "test_none_three_arguments": [
    [
      "tests/template_tests/filter_tests/test_yesno.py",
      [
        "FunctionTests",
        "test_none_three_arguments"
      ]
    ]
  ],
  "test_i18n03": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_i18n03"
      ]
    ]
  ],
  "test_i18n04": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_i18n04"
      ]
    ]
  ],
  "test_legacyi18n04": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_legacyi18n04"
      ]
    ]
  ],
  "test_i18n05": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_i18n05"
      ]
    ]
  ],
  "test_i18n07": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_i18n07"
      ]
    ]
  ],
  "test_legacyi18n07": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_legacyi18n07"
      ]
    ]
  ],
  "test_i18n08": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_i18n08"
      ]
    ]
  ],
  "test_legacyi18n08": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_legacyi18n08"
      ]
    ]
  ],
  "test_i18n17": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_i18n17"
      ]
    ]
  ],
  "test_i18n18": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_i18n18"
      ]
    ]
  ],
  "test_i18n19": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_i18n19"
      ]
    ]
  ],
  "test_i18n21": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_i18n21"
      ]
    ]
  ],
  "test_legacyi18n17": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_legacyi18n17"
      ]
    ]
  ],
  "test_legacyi18n18": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_legacyi18n18"
      ]
    ]
  ],
  "test_i18n26": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_i18n26"
      ]
    ]
  ],
  "test_legacyi18n26": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_legacyi18n26"
      ]
    ]
  ],
  "test_i18n27": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_i18n27"
      ]
    ]
  ],
  "test_legacyi18n27": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_legacyi18n27"
      ]
    ]
  ],
  "test_i18n28": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_i18n28"
      ]
    ]
  ],
  "test_legacyi18n28": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_legacyi18n28"
      ]
    ]
  ],
  "test_i18n34": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_i18n34"
      ]
    ]
  ],
  "test_i18n34_2": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_i18n34_2"
      ]
    ]
  ],
  "test_i18n34_3": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_i18n34_3"
      ]
    ]
  ],
  "test_i18n37": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_i18n37"
      ]
    ]
  ],
  "test_i18n39": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_i18n39"
      ]
    ]
  ],
  "test_i18n40": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_i18n40"
      ]
    ]
  ],
  "test_i18n41": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_i18n41"
      ]
    ]
  ],
  "test_blocktrans_syntax_error_missing_assignment": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_blocktrans_syntax_error_missing_assignment"
      ]
    ]
  ],
  "test_blocktrans_tag_using_a_string_that_looks_like_str_fmt": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_blocktrans_tag_using_a_string_that_looks_like_str_fmt"
      ]
    ]
  ],
  "test_with_block": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_with_block"
      ]
    ]
  ],
  "test_with_for": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_with_for"
      ]
    ]
  ],
  "test_variable_twice": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_variable_twice"
      ]
    ]
  ],
  "test_no_args_with": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_no_args_with"
      ]
    ]
  ],
  "test_plural_bad_syntax": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "I18nBlockTransTagTests",
        "test_plural_bad_syntax"
      ]
    ]
  ],
  "test_template_tags_pgettext": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "TranslationBlockTranslateTagTests",
        "test_template_tags_pgettext"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/i18n/test_translate.py",
      [
        "TranslationTransTagTests",
        "test_template_tags_pgettext"
      ]
    ]
  ],
  "test_bad_placeholder_1": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "TranslationBlockTranslateTagTests",
        "test_bad_placeholder_1"
      ]
    ]
  ],
  "test_bad_placeholder_2": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "TranslationBlockTranslateTagTests",
        "test_bad_placeholder_2"
      ]
    ]
  ],
  "test_single_locale_activation": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "MultipleLocaleActivationBlockTranslateTests",
        "test_single_locale_activation"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/i18n/test_translate.py",
      [
        "MultipleLocaleActivationTransTagTests",
        "test_single_locale_activation"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      [
        "MultipleLocaleActivationTests",
        "test_single_locale_activation"
      ]
    ]
  ],
  "test_multiple_locale_btrans": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "MultipleLocaleActivationBlockTranslateTests",
        "test_multiple_locale_btrans"
      ]
    ]
  ],
  "test_multiple_locale_deactivate_btrans": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "MultipleLocaleActivationBlockTranslateTests",
        "test_multiple_locale_deactivate_btrans"
      ]
    ]
  ],
  "test_multiple_locale_direct_switch_btrans": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "MultipleLocaleActivationBlockTranslateTests",
        "test_multiple_locale_direct_switch_btrans"
      ]
    ]
  ],
  "test_percent_in_translatable_block": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "MiscTests",
        "test_percent_in_translatable_block"
      ]
    ]
  ],
  "test_percent_formatting_in_blocktranslate": [
    [
      "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py",
      [
        "MiscTests",
        "test_percent_formatting_in_blocktranslate"
      ]
    ]
  ],
  "test_i18n32": [
    [
      "tests/template_tests/syntax_tests/i18n/test_filters.py",
      [
        "I18nFiltersTests",
        "test_i18n32"
      ]
    ]
  ],
  "test_i18n33": [
    [
      "tests/template_tests/syntax_tests/i18n/test_filters.py",
      [
        "I18nFiltersTests",
        "test_i18n33"
      ]
    ]
  ],
  "test_i18n38_2": [
    [
      "tests/template_tests/syntax_tests/i18n/test_filters.py",
      [
        "I18nFiltersTests",
        "test_i18n38_2"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py",
      [
        "GetLanguageInfoListTests",
        "test_i18n38_2"
      ]
    ]
  ],
  "test_i18n12": [
    [
      "tests/template_tests/syntax_tests/i18n/test_get_available_languages.py",
      [
        "GetAvailableLanguagesTagTests",
        "test_i18n12"
      ]
    ]
  ],
  "test_no_as_var": [
    [
      "tests/template_tests/syntax_tests/i18n/test_get_available_languages.py",
      [
        "GetAvailableLanguagesTagTests",
        "test_no_as_var"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/i18n/test_get_current_language.py",
      [
        "I18nGetCurrentLanguageTagTests",
        "test_no_as_var"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/i18n/test_get_current_language_bidi.py",
      [
        "I18nGetCurrentLanguageBidiTagTests",
        "test_no_as_var"
      ]
    ]
  ],
  "test_i18n28_2": [
    [
      "tests/template_tests/syntax_tests/i18n/test_get_language_info.py",
      [
        "I18nGetLanguageInfoTagTests",
        "test_i18n28_2"
      ]
    ]
  ],
  "test_i18n29": [
    [
      "tests/template_tests/syntax_tests/i18n/test_get_language_info.py",
      [
        "I18nGetLanguageInfoTagTests",
        "test_i18n29"
      ]
    ]
  ],
  "test_i18n38": [
    [
      "tests/template_tests/syntax_tests/i18n/test_get_language_info.py",
      [
        "I18nGetLanguageInfoTagTests",
        "test_i18n38"
      ]
    ]
  ],
  "test_no_for_as": [
    [
      "tests/template_tests/syntax_tests/i18n/test_get_language_info.py",
      [
        "I18nGetLanguageInfoTagTests",
        "test_no_for_as"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py",
      [
        "GetLanguageInfoListTests",
        "test_no_for_as"
      ]
    ]
  ],
  "test_i18n30": [
    [
      "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py",
      [
        "GetLanguageInfoListTests",
        "test_i18n30"
      ]
    ]
  ],
  "test_i18n31": [
    [
      "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py",
      [
        "GetLanguageInfoListTests",
        "test_i18n31"
      ]
    ]
  ],
  "test_no_arg": [
    [
      "tests/template_tests/syntax_tests/i18n/test_language.py",
      [
        "I18nLanguageTagTests",
        "test_no_arg"
      ]
    ],
    [
      "tests/template_tests/syntax_tests/test_autoescape.py",
      [
        "AutoescapeTagTests",
        "test_no_arg"
      ]
    ]
  ],
  "test_i18n01": [
    [
      "tests/template_tests/syntax_tests/i18n/test_translate.py",
      [
        "I18nTransTagTests",
        "test_i18n01"
      ]
    ]
  ],
  "test_i18n02": [
    [
      "tests/template_tests/syntax_tests/i18n/test_translate.py",
      [
        "I18nTransTagTests",
        "test_i18n02"
      ]
    ]
  ],
  "test_i18n06": [
    [
      "tests/template_tests/syntax_tests/i18n/test_translate.py",
      [
        "I18nTransTagTests",
        "test_i18n06"
      ]
    ]
  ],
  "test_i18n09": [
    [
      "tests/template_tests/syntax_tests/i18n/test_translate.py",
      [
        "I18nTransTagTests",
        "test_i18n09"
      ]
    ]
  ],
  "test_i18n20": [
    [
      "tests/template_tests/syntax_tests/i18n/test_translate.py",
      [
        "I18nTransTagTests",
        "test_i18n20"
      ]
    ]
  ],
  "test_i18n22": [
    [
      "tests/template_tests/syntax_tests/i18n/test_translate.py",
      [
        "I18nTransTagTests",
        "test_i18n22"
      ]
    ]
  ],
  "test_i18n23": [
    [
      "tests/template_tests/syntax_tests/i18n/test_translate.py",
      [
        "I18nTransTagTests",
        "test_i18n23"
      ]
    ]
  ],
  "test_i18n24": [
    [
      "tests/template_tests/syntax_tests/i18n/test_translate.py",
      [
        "I18nTransTagTests",
        "test_i18n24"
      ]
    ]
  ],
  "test_i18n25": [
    [
      "tests/template_tests/syntax_tests/i18n/test_translate.py",
      [
        "I18nTransTagTests",
        "test_i18n25"
      ]
    ]
  ],
  "test_i18n35": [
    [
      "tests/template_tests/syntax_tests/i18n/test_translate.py",
      [
        "I18nTransTagTests",
        "test_i18n35"
      ]
    ]
  ],
  "test_i18n36": [
    [
      "tests/template_tests/syntax_tests/i18n/test_translate.py",
      [
        "I18nTransTagTests",
        "test_i18n36"
      ]
    ]
  ],
  "test_syntax_error_no_arguments": [
    [
      "tests/template_tests/syntax_tests/i18n/test_translate.py",
      [
        "I18nTransTagTests",
        "test_syntax_error_no_arguments"
      ]
    ]
  ],
  "test_syntax_error_bad_option": [
    [
      "tests/template_tests/syntax_tests/i18n/test_translate.py",
      [
        "I18nTransTagTests",
        "test_syntax_error_bad_option"
      ]
    ]
  ],
  "test_syntax_error_missing_assignment": [
    [
      "tests/template_tests/syntax_tests/i18n/test_translate.py",
      [
        "I18nTransTagTests",
        "test_syntax_error_missing_assignment"
      ]
    ]
  ],
  "test_syntax_error_missing_context": [
    [
      "tests/template_tests/syntax_tests/i18n/test_translate.py",
      [
        "I18nTransTagTests",
        "test_syntax_error_missing_context"
      ]
    ]
  ],
  "test_syntax_error_context_as": [
    [
      "tests/template_tests/syntax_tests/i18n/test_translate.py",
      [
        "I18nTransTagTests",
        "test_syntax_error_context_as"
      ]
    ]
  ],
  "test_syntax_error_context_noop": [
    [
      "tests/template_tests/syntax_tests/i18n/test_translate.py",
      [
        "I18nTransTagTests",
        "test_syntax_error_context_noop"
      ]
    ]
  ],
  "test_syntax_error_duplicate_option": [
    [
      "tests/template_tests/syntax_tests/i18n/test_translate.py",
      [
        "I18nTransTagTests",
        "test_syntax_error_duplicate_option"
      ]
    ]
  ],
  "test_trans_tag_using_a_string_that_looks_like_str_fmt": [
    [
      "tests/template_tests/syntax_tests/i18n/test_translate.py",
      [
        "I18nTransTagTests",
        "test_trans_tag_using_a_string_that_looks_like_str_fmt"
      ]
    ]
  ],
  "test_multiple_locale_trans": [
    [
      "tests/template_tests/syntax_tests/i18n/test_translate.py",
      [
        "MultipleLocaleActivationTransTagTests",
        "test_multiple_locale_trans"
      ]
    ]
  ],
  "test_multiple_locale_deactivate_trans": [
    [
      "tests/template_tests/syntax_tests/i18n/test_translate.py",
      [
        "MultipleLocaleActivationTransTagTests",
        "test_multiple_locale_deactivate_trans"
      ]
    ]
  ],
  "test_multiple_locale_direct_switch_trans": [
    [
      "tests/template_tests/syntax_tests/i18n/test_translate.py",
      [
        "MultipleLocaleActivationTransTagTests",
        "test_multiple_locale_direct_switch_trans"
      ]
    ]
  ],
  "test_multiple_locale_filter": [
    [
      "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      [
        "MultipleLocaleActivationTests",
        "test_multiple_locale_filter"
      ]
    ]
  ],
  "test_multiple_locale_filter_deactivate": [
    [
      "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      [
        "MultipleLocaleActivationTests",
        "test_multiple_locale_filter_deactivate"
      ]
    ]
  ],
  "test_multiple_locale_filter_direct_switch": [
    [
      "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      [
        "MultipleLocaleActivationTests",
        "test_multiple_locale_filter_direct_switch"
      ]
    ]
  ],
  "test_multiple_locale": [
    [
      "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      [
        "MultipleLocaleActivationTests",
        "test_multiple_locale"
      ]
    ]
  ],
  "test_multiple_locale_deactivate": [
    [
      "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      [
        "MultipleLocaleActivationTests",
        "test_multiple_locale_deactivate"
      ]
    ]
  ],
  "test_multiple_locale_direct_switch": [
    [
      "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      [
        "MultipleLocaleActivationTests",
        "test_multiple_locale_direct_switch"
      ]
    ]
  ],
  "test_multiple_locale_loadi18n": [
    [
      "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      [
        "MultipleLocaleActivationTests",
        "test_multiple_locale_loadi18n"
      ]
    ]
  ],
  "test_multiple_locale_loadi18n_deactivate": [
    [
      "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      [
        "MultipleLocaleActivationTests",
        "test_multiple_locale_loadi18n_deactivate"
      ]
    ]
  ],
  "test_multiple_locale_loadi18n_direct_switch": [
    [
      "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      [
        "MultipleLocaleActivationTests",
        "test_multiple_locale_loadi18n_direct_switch"
      ]
    ]
  ],
  "test_i18n13": [
    [
      "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      [
        "I18nStringLiteralTests",
        "test_i18n13"
      ]
    ]
  ],
  "test_i18n14": [
    [
      "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      [
        "I18nStringLiteralTests",
        "test_i18n14"
      ]
    ]
  ],
  "test_i18n15": [
    [
      "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      [
        "I18nStringLiteralTests",
        "test_i18n15"
      ]
    ]
  ],
  "test_i18n16": [
    [
      "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py",
      [
        "I18nStringLiteralTests",
        "test_i18n16"
      ]
    ]
  ],
  "test_autoescape_tag01": [
    [
      "tests/template_tests/syntax_tests/test_autoescape.py",
      [
        "AutoescapeTagTests",
        "test_autoescape_tag01"
      ]
    ]
  ],
  "test_autoescape_tag02": [
    [
      "tests/template_tests/syntax_tests/test_autoescape.py",
      [
        "AutoescapeTagTests",
        "test_autoescape_tag02"
      ]
    ]
  ],
  "test_autoescape_tag03": [
    [
      "tests/template_tests/syntax_tests/test_autoescape.py",
      [
        "AutoescapeTagTests",
        "test_autoescape_tag03"
      ]
    ]
  ],
  "test_autoescape_tag04": [
    [
      "tests/template_tests/syntax_tests/test_autoescape.py",
      [
        "AutoescapeTagTests",
        "test_autoescape_tag04"
      ]
    ]
  ],
  "test_autoescape_tag05": [
    [
      "tests/template_tests/syntax_tests/test_autoescape.py",
      [
        "AutoescapeTagTests",
        "test_autoescape_tag05"
      ]
    ]
  ],
  "test_autoescape_tag06": [
    [
      "tests/template_tests/syntax_tests/test_autoescape.py",
      [
        "AutoescapeTagTests",
        "test_autoescape_tag06"
      ]
    ]
  ],
  "test_autoescape_tag07": [
    [
      "tests/template_tests/syntax_tests/test_autoescape.py",
      [
        "AutoescapeTagTests",
        "test_autoescape_tag07"
      ]
    ]
  ],
  "test_autoescape_tag08": [
    [
      "tests/template_tests/syntax_tests/test_autoescape.py",
      [
        "AutoescapeTagTests",
        "test_autoescape_tag08"
      ]
    ]
  ],
  "test_autoescape_tag09": [
    [
      "tests/template_tests/syntax_tests/test_autoescape.py",
      [
        "AutoescapeTagTests",
        "test_autoescape_tag09"
      ]
    ]
  ],
  "test_autoescape_tag10": [
    [
      "tests/template_tests/syntax_tests/test_autoescape.py",
      [
        "AutoescapeTagTests",
        "test_autoescape_tag10"
      ]
    ]
  ],
  "test_autoescape_filtertag01": [
    [
      "tests/template_tests/syntax_tests/test_autoescape.py",
      [
        "AutoescapeTagTests",
        "test_autoescape_filtertag01"
      ]
    ]
  ],
  "test_autoescape_ifequal01": [
    [
      "tests/template_tests/syntax_tests/test_autoescape.py",
      [
        "AutoescapeTagTests",
        "test_autoescape_ifequal01"
      ]
    ]
  ],
  "test_autoescape_filters01": [
    [
      "tests/template_tests/syntax_tests/test_autoescape.py",
      [
        "AutoescapeTagTests",
        "test_autoescape_filters01"
      ]
    ]
  ],
  "test_autoescape_filters02": [
    [
      "tests/template_tests/syntax_tests/test_autoescape.py",
      [
        "AutoescapeTagTests",
        "test_autoescape_filters02"
      ]
    ]
  ],
  "test_autoescape_literals01": [
    [
      "tests/template_tests/syntax_tests/test_autoescape.py",
      [
        "AutoescapeTagTests",
        "test_autoescape_literals01"
      ]
    ]
  ],
  "test_autoescape_stringiterations01": [
    [
      "tests/template_tests/syntax_tests/test_autoescape.py",
      [
        "AutoescapeTagTests",
        "test_autoescape_stringiterations01"
      ]
    ]
  ],
  "test_autoescape_lookup01": [
    [
      "tests/template_tests/syntax_tests/test_autoescape.py",
      [
        "AutoescapeTagTests",
        "test_autoescape_lookup01"
      ]
    ]
  ],
  "test_basic_syntax01": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax01"
      ]
    ]
  ],
  "test_basic_syntax02": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax02"
      ]
    ]
  ],
  "test_basic_syntax03": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax03"
      ]
    ]
  ],
  "test_basic_syntax04": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax04"
      ]
    ]
  ],
  "test_basic_syntax06": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax06"
      ]
    ]
  ],
  "test_basic_syntax07": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax07"
      ]
    ]
  ],
  "test_basic_syntax08": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax08"
      ]
    ]
  ],
  "test_basic_syntax09": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax09"
      ]
    ]
  ],
  "test_basic_syntax10": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax10"
      ]
    ]
  ],
  "test_basic_syntax11": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax11"
      ]
    ]
  ],
  "test_basic_syntax12": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax12"
      ]
    ]
  ],
  "test_basic_syntax13": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax13"
      ]
    ]
  ],
  "test_basic_syntax14": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax14"
      ]
    ]
  ],
  "test_basic_syntax15": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax15"
      ]
    ]
  ],
  "test_basic_syntax16": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax16"
      ]
    ]
  ],
  "test_basic_syntax17": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax17"
      ]
    ]
  ],
  "test_basic_syntax18": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax18"
      ]
    ]
  ],
  "test_basic_syntax19": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax19"
      ]
    ]
  ],
  "test_basic_syntax20": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax20"
      ]
    ]
  ],
  "test_basic_syntax20b": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax20b"
      ]
    ]
  ],
  "test_basic_syntax21": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax21"
      ]
    ]
  ],
  "test_basic_syntax22": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax22"
      ]
    ]
  ],
  "test_basic_syntax23": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax23"
      ]
    ]
  ],
  "test_basic_syntax24": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax24"
      ]
    ]
  ],
  "test_basic_syntax25": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax25"
      ]
    ]
  ],
  "test_basic_syntax26": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax26"
      ]
    ]
  ],
  "test_basic_syntax27": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax27"
      ]
    ]
  ],
  "test_basic_syntax28": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax28"
      ]
    ]
  ],
  "test_basic_syntax29": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax29"
      ]
    ]
  ],
  "test_basic_syntax30": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax30"
      ]
    ]
  ],
  "test_basic_syntax31": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax31"
      ]
    ]
  ],
  "test_basic_syntax32": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax32"
      ]
    ]
  ],
  "test_basic_syntax33": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax33"
      ]
    ]
  ],
  "test_basic_syntax34": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax34"
      ]
    ]
  ],
  "test_basic_syntax35": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax35"
      ]
    ]
  ],
  "test_basic_syntax36": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax36"
      ]
    ]
  ],
  "test_basic_syntax37": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax37"
      ]
    ]
  ],
  "test_basic_syntax38": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_basic_syntax38"
      ]
    ]
  ],
  "test_unclosed_block": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_unclosed_block"
      ]
    ]
  ],
  "test_unclosed_block2": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_unclosed_block2"
      ]
    ]
  ],
  "test_ignores_strings_that_look_like_format_interpolation": [
    [
      "tests/template_tests/syntax_tests/test_basic.py",
      [
        "BasicSyntaxTests",
        "test_ignores_strings_that_look_like_format_interpolation"
      ]
    ]
  ],
  "test_builtins01": [
    [
      "tests/template_tests/syntax_tests/test_builtins.py",
      [
        "BuiltinsTests",
        "test_builtins01"
      ]
    ]
  ],
  "test_builtins02": [
    [
      "tests/template_tests/syntax_tests/test_builtins.py",
      [
        "BuiltinsTests",
        "test_builtins02"
      ]
    ]
  ],
  "test_builtins03": [
    [
      "tests/template_tests/syntax_tests/test_builtins.py",
      [
        "BuiltinsTests",
        "test_builtins03"
      ]
    ]
  ],
  "test_cache03": [
    [
      "tests/template_tests/syntax_tests/test_cache.py",
      [
        "CacheTagTests",
        "test_cache03"
      ]
    ]
  ],
  "test_cache04": [
    [
      "tests/template_tests/syntax_tests/test_cache.py",
      [
        "CacheTagTests",
        "test_cache04"
      ]
    ]
  ],
  "test_cache05": [
    [
      "tests/template_tests/syntax_tests/test_cache.py",
      [
        "CacheTagTests",
        "test_cache05"
      ]
    ]
  ],
  "test_cache06": [
    [
      "tests/template_tests/syntax_tests/test_cache.py",
      [
        "CacheTagTests",
        "test_cache06"
      ]
    ]
  ],
  "test_cache07": [
    [
      "tests/template_tests/syntax_tests/test_cache.py",
      [
        "CacheTagTests",
        "test_cache07"
      ]
    ]
  ],
  "test_cache08": [
    [
      "tests/template_tests/syntax_tests/test_cache.py",
      [
        "CacheTagTests",
        "test_cache08"
      ]
    ]
  ],
  "test_cache11": [
    [
      "tests/template_tests/syntax_tests/test_cache.py",
      [
        "CacheTagTests",
        "test_cache11"
      ]
    ]
  ],
  "test_cache12": [
    [
      "tests/template_tests/syntax_tests/test_cache.py",
      [
        "CacheTagTests",
        "test_cache12"
      ]
    ]
  ],
  "test_cache13": [
    [
      "tests/template_tests/syntax_tests/test_cache.py",
      [
        "CacheTagTests",
        "test_cache13"
      ]
    ]
  ],
  "test_cache14": [
    [
      "tests/template_tests/syntax_tests/test_cache.py",
      [
        "CacheTagTests",
        "test_cache14"
      ]
    ]
  ],
  "test_cache15": [
    [
      "tests/template_tests/syntax_tests/test_cache.py",
      [
        "CacheTagTests",
        "test_cache15"
      ]
    ]
  ],
  "test_cache16": [
    [
      "tests/template_tests/syntax_tests/test_cache.py",
      [
        "CacheTagTests",
        "test_cache16"
      ]
    ]
  ],
  "test_cache17": [
    [
      "tests/template_tests/syntax_tests/test_cache.py",
      [
        "CacheTagTests",
        "test_cache17"
      ]
    ]
  ],
  "test_cache18": [
    [
      "tests/template_tests/syntax_tests/test_cache.py",
      [
        "CacheTagTests",
        "test_cache18"
      ]
    ]
  ],
  "test_none_timeout": [
    [
      "tests/template_tests/syntax_tests/test_cache.py",
      [
        "CacheTagTests",
        "test_none_timeout"
      ]
    ]
  ],
  "test_cache_regression_20130": [
    [
      "tests/template_tests/syntax_tests/test_cache.py",
      [
        "CacheTests",
        "test_cache_regression_20130"
      ]
    ]
  ],
  "test_cache_fragment_cache": [
    [
      "tests/template_tests/syntax_tests/test_cache.py",
      [
        "CacheTests",
        "test_cache_fragment_cache"
      ]
    ]
  ],
  "test_cache_missing_backend": [
    [
      "tests/template_tests/syntax_tests/test_cache.py",
      [
        "CacheTests",
        "test_cache_missing_backend"
      ]
    ]
  ],
  "test_comment_syntax01": [
    [
      "tests/template_tests/syntax_tests/test_comment.py",
      [
        "CommentSyntaxTests",
        "test_comment_syntax01"
      ]
    ]
  ],
  "test_comment_syntax02": [
    [
      "tests/template_tests/syntax_tests/test_comment.py",
      [
        "CommentSyntaxTests",
        "test_comment_syntax02"
      ]
    ]
  ],
  "test_comment_syntax03": [
    [
      "tests/template_tests/syntax_tests/test_comment.py",
      [
        "CommentSyntaxTests",
        "test_comment_syntax03"
      ]
    ]
  ],
  "test_comment_syntax04": [
    [
      "tests/template_tests/syntax_tests/test_comment.py",
      [
        "CommentSyntaxTests",
        "test_comment_syntax04"
      ]
    ]
  ],
  "test_comment_syntax05": [
    [
      "tests/template_tests/syntax_tests/test_comment.py",
      [
        "CommentSyntaxTests",
        "test_comment_syntax05"
      ]
    ]
  ],
  "test_comment_syntax06": [
    [
      "tests/template_tests/syntax_tests/test_comment.py",
      [
        "CommentSyntaxTests",
        "test_comment_syntax06"
      ]
    ]
  ],
  "test_comment_syntax07": [
    [
      "tests/template_tests/syntax_tests/test_comment.py",
      [
        "CommentSyntaxTests",
        "test_comment_syntax07"
      ]
    ]
  ],
  "test_comment_syntax08": [
    [
      "tests/template_tests/syntax_tests/test_comment.py",
      [
        "CommentSyntaxTests",
        "test_comment_syntax08"
      ]
    ]
  ],
  "test_comment_syntax09": [
    [
      "tests/template_tests/syntax_tests/test_comment.py",
      [
        "CommentSyntaxTests",
        "test_comment_syntax09"
      ]
    ]
  ],
  "test_comment_syntax10": [
    [
      "tests/template_tests/syntax_tests/test_comment.py",
      [
        "CommentSyntaxTests",
        "test_comment_syntax10"
      ]
    ]
  ],
  "test_comment_syntax11": [
    [
      "tests/template_tests/syntax_tests/test_comment.py",
      [
        "CommentSyntaxTests",
        "test_comment_syntax11"
      ]
    ]
  ],
  "test_comment_syntax12": [
    [
      "tests/template_tests/syntax_tests/test_comment.py",
      [
        "CommentSyntaxTests",
        "test_comment_syntax12"
      ]
    ]
  ],
  "test_comment_tag01": [
    [
      "tests/template_tests/syntax_tests/test_comment.py",
      [
        "CommentSyntaxTests",
        "test_comment_tag01"
      ]
    ]
  ],
  "test_comment_tag02": [
    [
      "tests/template_tests/syntax_tests/test_comment.py",
      [
        "CommentSyntaxTests",
        "test_comment_tag02"
      ]
    ]
  ],
  "test_comment_tag03": [
    [
      "tests/template_tests/syntax_tests/test_comment.py",
      [
        "CommentSyntaxTests",
        "test_comment_tag03"
      ]
    ]
  ],
  "test_comment_tag04": [
    [
      "tests/template_tests/syntax_tests/test_comment.py",
      [
        "CommentSyntaxTests",
        "test_comment_tag04"
      ]
    ]
  ],
  "test_comment_tag05": [
    [
      "tests/template_tests/syntax_tests/test_comment.py",
      [
        "CommentSyntaxTests",
        "test_comment_tag05"
      ]
    ]
  ],
  "test_cycle01": [
    [
      "tests/template_tests/syntax_tests/test_cycle.py",
      [
        "CycleTagTests",
        "test_cycle01"
      ]
    ]
  ],
  "test_cycle05": [
    [
      "tests/template_tests/syntax_tests/test_cycle.py",
      [
        "CycleTagTests",
        "test_cycle05"
      ]
    ]
  ],
  "test_cycle07": [
    [
      "tests/template_tests/syntax_tests/test_cycle.py",
      [
        "CycleTagTests",
        "test_cycle07"
      ]
    ]
  ],
  "test_cycle10": [
    [
      "tests/template_tests/syntax_tests/test_cycle.py",
      [
        "CycleTagTests",
        "test_cycle10"
      ]
    ]
  ],
  "test_cycle11": [
    [
      "tests/template_tests/syntax_tests/test_cycle.py",
      [
        "CycleTagTests",
        "test_cycle11"
      ]
    ]
  ],
  "test_cycle12": [
    [
      "tests/template_tests/syntax_tests/test_cycle.py",
      [
        "CycleTagTests",
        "test_cycle12"
      ]
    ]
  ],
  "test_cycle13": [
    [
      "tests/template_tests/syntax_tests/test_cycle.py",
      [
        "CycleTagTests",
        "test_cycle13"
      ]
    ]
  ],
  "test_cycle14": [
    [
      "tests/template_tests/syntax_tests/test_cycle.py",
      [
        "CycleTagTests",
        "test_cycle14"
      ]
    ]
  ],
  "test_cycle15": [
    [
      "tests/template_tests/syntax_tests/test_cycle.py",
      [
        "CycleTagTests",
        "test_cycle15"
      ]
    ]
  ],
  "test_cycle16": [
    [
      "tests/template_tests/syntax_tests/test_cycle.py",
      [
        "CycleTagTests",
        "test_cycle16"
      ]
    ]
  ],
  "test_cycle17": [
    [
      "tests/template_tests/syntax_tests/test_cycle.py",
      [
        "CycleTagTests",
        "test_cycle17"
      ]
    ]
  ],
  "test_cycle18": [
    [
      "tests/template_tests/syntax_tests/test_cycle.py",
      [
        "CycleTagTests",
        "test_cycle18"
      ]
    ]
  ],
  "test_cycle19": [
    [
      "tests/template_tests/syntax_tests/test_cycle.py",
      [
        "CycleTagTests",
        "test_cycle19"
      ]
    ]
  ],
  "test_cycle20": [
    [
      "tests/template_tests/syntax_tests/test_cycle.py",
      [
        "CycleTagTests",
        "test_cycle20"
      ]
    ]
  ],
  "test_cycle21": [
    [
      "tests/template_tests/syntax_tests/test_cycle.py",
      [
        "CycleTagTests",
        "test_cycle21"
      ]
    ]
  ],
  "test_cycle22": [
    [
      "tests/template_tests/syntax_tests/test_cycle.py",
      [
        "CycleTagTests",
        "test_cycle22"
      ]
    ]
  ],
  "test_cycle23": [
    [
      "tests/template_tests/syntax_tests/test_cycle.py",
      [
        "CycleTagTests",
        "test_cycle23"
      ]
    ]
  ],
  "test_cycle24": [
    [
      "tests/template_tests/syntax_tests/test_cycle.py",
      [
        "CycleTagTests",
        "test_cycle24"
      ]
    ]
  ],
  "test_cycle25": [
    [
      "tests/template_tests/syntax_tests/test_cycle.py",
      [
        "CycleTagTests",
        "test_cycle25"
      ]
    ]
  ],
  "test_cycle26": [
    [
      "tests/template_tests/syntax_tests/test_cycle.py",
      [
        "CycleTagTests",
        "test_cycle26"
      ]
    ]
  ],
  "test_cycle27": [
    [
      "tests/template_tests/syntax_tests/test_cycle.py",
      [
        "CycleTagTests",
        "test_cycle27"
      ]
    ]
  ],
  "test_cycle28": [
    [
      "tests/template_tests/syntax_tests/test_cycle.py",
      [
        "CycleTagTests",
        "test_cycle28"
      ]
    ]
  ],
  "test_cycle29": [
    [
      "tests/template_tests/syntax_tests/test_cycle.py",
      [
        "CycleTagTests",
        "test_cycle29"
      ]
    ]
  ],
  "test_cycle30": [
    [
      "tests/template_tests/syntax_tests/test_cycle.py",
      [
        "CycleTagTests",
        "test_cycle30"
      ]
    ]
  ],
  "test_cycle_undefined": [
    [
      "tests/template_tests/syntax_tests/test_cycle.py",
      [
        "CycleTagTests",
        "test_cycle_undefined"
      ]
    ]
  ],
  "test_exception01": [
    [
      "tests/template_tests/syntax_tests/test_exceptions.py",
      [
        "ExceptionsTests",
        "test_exception01"
      ]
    ]
  ],
  "test_exception02": [
    [
      "tests/template_tests/syntax_tests/test_exceptions.py",
      [
        "ExceptionsTests",
        "test_exception02"
      ]
    ]
  ],
  "test_exception03": [
    [
      "tests/template_tests/syntax_tests/test_exceptions.py",
      [
        "ExceptionsTests",
        "test_exception03"
      ]
    ]
  ],
  "test_exception04": [
    [
      "tests/template_tests/syntax_tests/test_exceptions.py",
      [
        "ExceptionsTests",
        "test_exception04"
      ]
    ]
  ],
  "test_exception05": [
    [
      "tests/template_tests/syntax_tests/test_exceptions.py",
      [
        "ExceptionsTests",
        "test_exception05"
      ]
    ]
  ],
  "test_inheritance01": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance01"
      ]
    ]
  ],
  "test_inheritance02": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance02"
      ]
    ]
  ],
  "test_inheritance03": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance03"
      ]
    ]
  ],
  "test_inheritance04": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance04"
      ]
    ]
  ],
  "test_inheritance05": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance05"
      ]
    ]
  ],
  "test_inheritance06": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance06"
      ]
    ]
  ],
  "test_inheritance07": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance07"
      ]
    ]
  ],
  "test_inheritance08": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance08"
      ]
    ]
  ],
  "test_inheritance09": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance09"
      ]
    ]
  ],
  "test_inheritance10": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance10"
      ]
    ]
  ],
  "test_inheritance11": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance11"
      ]
    ]
  ],
  "test_inheritance12": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance12"
      ]
    ]
  ],
  "test_inheritance13": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance13"
      ]
    ]
  ],
  "test_inheritance14": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance14"
      ]
    ]
  ],
  "test_inheritance15": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance15"
      ]
    ]
  ],
  "test_inheritance16": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance16"
      ]
    ]
  ],
  "test_inheritance17": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance17"
      ]
    ]
  ],
  "test_inheritance18": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance18"
      ]
    ]
  ],
  "test_inheritance19": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance19"
      ]
    ]
  ],
  "test_inheritance20": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance20"
      ]
    ]
  ],
  "test_inheritance21": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance21"
      ]
    ]
  ],
  "test_inheritance22": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance22"
      ]
    ]
  ],
  "test_inheritance23": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance23"
      ]
    ]
  ],
  "test_inheritance24": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance24"
      ]
    ]
  ],
  "test_inheritance25": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance25"
      ]
    ]
  ],
  "test_inheritance26": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance26"
      ]
    ]
  ],
  "test_inheritance27": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance27"
      ]
    ]
  ],
  "test_inheritance_28": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance_28"
      ]
    ]
  ],
  "test_inheritance29": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance29"
      ]
    ]
  ],
  "test_inheritance30": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance30"
      ]
    ]
  ],
  "test_inheritance31": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance31"
      ]
    ]
  ],
  "test_inheritance32": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance32"
      ]
    ]
  ],
  "test_inheritance33": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance33"
      ]
    ]
  ],
  "test_inheritance34": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance34"
      ]
    ]
  ],
  "test_inheritance35": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance35"
      ]
    ]
  ],
  "test_inheritance36": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance36"
      ]
    ]
  ],
  "test_inheritance37": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance37"
      ]
    ]
  ],
  "test_inheritance38": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance38"
      ]
    ]
  ],
  "test_inheritance39": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance39"
      ]
    ]
  ],
  "test_inheritance40": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance40"
      ]
    ]
  ],
  "test_inheritance41": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance41"
      ]
    ]
  ],
  "test_inheritance42": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance42"
      ]
    ]
  ],
  "test_inheritance_empty": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_inheritance_empty"
      ]
    ]
  ],
  "test_extends_duplicate": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_extends_duplicate"
      ]
    ]
  ],
  "test_duplicate_block": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "InheritanceTests",
        "test_duplicate_block"
      ]
    ]
  ],
  "test_extends_node_repr": [
    [
      "tests/template_tests/syntax_tests/test_extends.py",
      [
        "ExtendsNodeTests",
        "test_extends_node_repr"
      ]
    ]
  ],
  "test_filter_syntax01": [
    [
      "tests/template_tests/syntax_tests/test_filter_syntax.py",
      [
        "FilterSyntaxTests",
        "test_filter_syntax01"
      ]
    ]
  ],
  "test_filter_syntax02": [
    [
      "tests/template_tests/syntax_tests/test_filter_syntax.py",
      [
        "FilterSyntaxTests",
        "test_filter_syntax02"
      ]
    ]
  ],
  "test_filter_syntax03": [
    [
      "tests/template_tests/syntax_tests/test_filter_syntax.py",
      [
        "FilterSyntaxTests",
        "test_filter_syntax03"
      ]
    ]
  ],
  "test_filter_syntax04": [
    [
      "tests/template_tests/syntax_tests/test_filter_syntax.py",
      [
        "FilterSyntaxTests",
        "test_filter_syntax04"
      ]
    ]
  ],
  "test_filter_syntax05": [
    [
      "tests/template_tests/syntax_tests/test_filter_syntax.py",
      [
        "FilterSyntaxTests",
        "test_filter_syntax05"
      ]
    ]
  ],
  "test_filter_syntax06": [
    [
      "tests/template_tests/syntax_tests/test_filter_syntax.py",
      [
        "FilterSyntaxTests",
        "test_filter_syntax06"
      ]
    ]
  ],
  "test_filter_syntax07": [
    [
      "tests/template_tests/syntax_tests/test_filter_syntax.py",
      [
        "FilterSyntaxTests",
        "test_filter_syntax07"
      ]
    ]
  ],
  "test_filter_syntax08": [
    [
      "tests/template_tests/syntax_tests/test_filter_syntax.py",
      [
        "FilterSyntaxTests",
        "test_filter_syntax08"
      ]
    ]
  ],
  "test_filter_syntax08_multi_line": [
    [
      "tests/template_tests/syntax_tests/test_filter_syntax.py",
      [
        "FilterSyntaxTests",
        "test_filter_syntax08_multi_line"
      ]
    ]
  ],
  "test_filter_syntax09": [
    [
      "tests/template_tests/syntax_tests/test_filter_syntax.py",
      [
        "FilterSyntaxTests",
        "test_filter_syntax09"
      ]
    ]
  ],
  "test_filter_syntax10": [
    [
      "tests/template_tests/syntax_tests/test_filter_syntax.py",
      [
        "FilterSyntaxTests",
        "test_filter_syntax10"
      ]
    ]
  ],
  "test_filter_syntax11": [
    [
      "tests/template_tests/syntax_tests/test_filter_syntax.py",
      [
        "FilterSyntaxTests",
        "test_filter_syntax11"
      ]
    ]
  ],
  "test_filter_syntax13": [
    [
      "tests/template_tests/syntax_tests/test_filter_syntax.py",
      [
        "FilterSyntaxTests",
        "test_filter_syntax13"
      ]
    ]
  ],
  "test_filter_syntax14": [
    [
      "tests/template_tests/syntax_tests/test_filter_syntax.py",
      [
        "FilterSyntaxTests",
        "test_filter_syntax14"
      ]
    ]
  ],
  "test_filter_syntax15": [
    [
      "tests/template_tests/syntax_tests/test_filter_syntax.py",
      [
        "FilterSyntaxTests",
        "test_filter_syntax15"
      ]
    ]
  ],
  "test_filter_syntax16": [
    [
      "tests/template_tests/syntax_tests/test_filter_syntax.py",
      [
        "FilterSyntaxTests",
        "test_filter_syntax16"
      ]
    ]
  ],
  "test_filter_syntax17": [
    [
      "tests/template_tests/syntax_tests/test_filter_syntax.py",
      [
        "FilterSyntaxTests",
        "test_filter_syntax17"
      ]
    ]
  ],
  "test_filter_syntax18": [
    [
      "tests/template_tests/syntax_tests/test_filter_syntax.py",
      [
        "FilterSyntaxTests",
        "test_filter_syntax18"
      ]
    ]
  ],
  "test_filter_syntax19": [
    [
      "tests/template_tests/syntax_tests/test_filter_syntax.py",
      [
        "FilterSyntaxTests",
        "test_filter_syntax19"
      ]
    ]
  ],
  "test_filter_syntax20": [
    [
      "tests/template_tests/syntax_tests/test_filter_syntax.py",
      [
        "FilterSyntaxTests",
        "test_filter_syntax20"
      ]
    ]
  ],
  "test_filter_syntax21": [
    [
      "tests/template_tests/syntax_tests/test_filter_syntax.py",
      [
        "FilterSyntaxTests",
        "test_filter_syntax21"
      ]
    ]
  ],
  "test_filter_syntax22": [
    [
      "tests/template_tests/syntax_tests/test_filter_syntax.py",
      [
        "FilterSyntaxTests",
        "test_filter_syntax22"
      ]
    ]
  ],
  "test_filter_syntax23": [
    [
      "tests/template_tests/syntax_tests/test_filter_syntax.py",
      [
        "FilterSyntaxTests",
        "test_filter_syntax23"
      ]
    ]
  ],
  "test_filter_syntax24": [
    [
      "tests/template_tests/syntax_tests/test_filter_syntax.py",
      [
        "FilterSyntaxTests",
        "test_filter_syntax24"
      ]
    ]
  ],
  "test_filter_syntax25": [
    [
      "tests/template_tests/syntax_tests/test_filter_syntax.py",
      [
        "FilterSyntaxTests",
        "test_filter_syntax25"
      ]
    ]
  ],
  "test_type_error_attribute": [
    [
      "tests/template_tests/syntax_tests/test_filter_syntax.py",
      [
        "FilterSyntaxTests",
        "test_type_error_attribute"
      ]
    ]
  ],
  "test_filter01": [
    [
      "tests/template_tests/syntax_tests/test_filter_tag.py",
      [
        "FilterTagTests",
        "test_filter01"
      ]
    ]
  ],
  "test_filter02": [
    [
      "tests/template_tests/syntax_tests/test_filter_tag.py",
      [
        "FilterTagTests",
        "test_filter02"
      ]
    ]
  ],
  "test_filter03": [
    [
      "tests/template_tests/syntax_tests/test_filter_tag.py",
      [
        "FilterTagTests",
        "test_filter03"
      ]
    ]
  ],
  "test_filter04": [
    [
      "tests/template_tests/syntax_tests/test_filter_tag.py",
      [
        "FilterTagTests",
        "test_filter04"
      ]
    ]
  ],
  "test_filter05": [
    [
      "tests/template_tests/syntax_tests/test_filter_tag.py",
      [
        "FilterTagTests",
        "test_filter05"
      ]
    ]
  ],
  "test_filter05bis": [
    [
      "tests/template_tests/syntax_tests/test_filter_tag.py",
      [
        "FilterTagTests",
        "test_filter05bis"
      ]
    ]
  ],
  "test_filter06": [
    [
      "tests/template_tests/syntax_tests/test_filter_tag.py",
      [
        "FilterTagTests",
        "test_filter06"
      ]
    ]
  ],
  "test_filter06bis": [
    [
      "tests/template_tests/syntax_tests/test_filter_tag.py",
      [
        "FilterTagTests",
        "test_filter06bis"
      ]
    ]
  ],
  "test_firstof01": [
    [
      "tests/template_tests/syntax_tests/test_firstof.py",
      [
        "FirstOfTagTests",
        "test_firstof01"
      ]
    ]
  ],
  "test_firstof02": [
    [
      "tests/template_tests/syntax_tests/test_firstof.py",
      [
        "FirstOfTagTests",
        "test_firstof02"
      ]
    ]
  ],
  "test_firstof03": [
    [
      "tests/template_tests/syntax_tests/test_firstof.py",
      [
        "FirstOfTagTests",
        "test_firstof03"
      ]
    ]
  ],
  "test_firstof04": [
    [
      "tests/template_tests/syntax_tests/test_firstof.py",
      [
        "FirstOfTagTests",
        "test_firstof04"
      ]
    ]
  ],
  "test_firstof05": [
    [
      "tests/template_tests/syntax_tests/test_firstof.py",
      [
        "FirstOfTagTests",
        "test_firstof05"
      ]
    ]
  ],
  "test_firstof06": [
    [
      "tests/template_tests/syntax_tests/test_firstof.py",
      [
        "FirstOfTagTests",
        "test_firstof06"
      ]
    ]
  ],
  "test_firstof07": [
    [
      "tests/template_tests/syntax_tests/test_firstof.py",
      [
        "FirstOfTagTests",
        "test_firstof07"
      ]
    ]
  ],
  "test_firstof08": [
    [
      "tests/template_tests/syntax_tests/test_firstof.py",
      [
        "FirstOfTagTests",
        "test_firstof08"
      ]
    ]
  ],
  "test_firstof09": [
    [
      "tests/template_tests/syntax_tests/test_firstof.py",
      [
        "FirstOfTagTests",
        "test_firstof09"
      ]
    ]
  ],
  "test_firstof10": [
    [
      "tests/template_tests/syntax_tests/test_firstof.py",
      [
        "FirstOfTagTests",
        "test_firstof10"
      ]
    ]
  ],
  "test_firstof11": [
    [
      "tests/template_tests/syntax_tests/test_firstof.py",
      [
        "FirstOfTagTests",
        "test_firstof11"
      ]
    ]
  ],
  "test_firstof12": [
    [
      "tests/template_tests/syntax_tests/test_firstof.py",
      [
        "FirstOfTagTests",
        "test_firstof12"
      ]
    ]
  ],
  "test_firstof13": [
    [
      "tests/template_tests/syntax_tests/test_firstof.py",
      [
        "FirstOfTagTests",
        "test_firstof13"
      ]
    ]
  ],
  "test_firstof14": [
    [
      "tests/template_tests/syntax_tests/test_firstof.py",
      [
        "FirstOfTagTests",
        "test_firstof14"
      ]
    ]
  ],
  "test_firstof15": [
    [
      "tests/template_tests/syntax_tests/test_firstof.py",
      [
        "FirstOfTagTests",
        "test_firstof15"
      ]
    ]
  ],
  "test_all_false_arguments_asvar": [
    [
      "tests/template_tests/syntax_tests/test_firstof.py",
      [
        "FirstOfTagTests",
        "test_all_false_arguments_asvar"
      ]
    ]
  ],
  "test_for_tag01": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_for_tag01"
      ]
    ]
  ],
  "test_for_tag02": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_for_tag02"
      ]
    ]
  ],
  "test_for_tag_vars01": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_for_tag_vars01"
      ]
    ]
  ],
  "test_for_tag_vars02": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_for_tag_vars02"
      ]
    ]
  ],
  "test_for_tag_vars03": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_for_tag_vars03"
      ]
    ]
  ],
  "test_for_tag_vars04": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_for_tag_vars04"
      ]
    ]
  ],
  "test_for_tag_vars05": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_for_tag_vars05"
      ]
    ]
  ],
  "test_for_tag_vars06": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_for_tag_vars06"
      ]
    ]
  ],
  "test_for_tag_unpack01": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_for_tag_unpack01"
      ]
    ]
  ],
  "test_for_tag_unpack03": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_for_tag_unpack03"
      ]
    ]
  ],
  "test_for_tag_unpack04": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_for_tag_unpack04"
      ]
    ]
  ],
  "test_for_tag_unpack05": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_for_tag_unpack05"
      ]
    ]
  ],
  "test_for_tag_unpack06": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_for_tag_unpack06"
      ]
    ]
  ],
  "test_for_tag_unpack07": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_for_tag_unpack07"
      ]
    ]
  ],
  "test_for_tag_unpack08": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_for_tag_unpack08"
      ]
    ]
  ],
  "test_unpack_double_quote": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_unpack_double_quote"
      ]
    ]
  ],
  "test_unpack_single_quote": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_unpack_single_quote"
      ]
    ]
  ],
  "test_unpack_vertical_bar": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_unpack_vertical_bar"
      ]
    ]
  ],
  "test_for_tag_unpack09": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_for_tag_unpack09"
      ]
    ]
  ],
  "test_for_tag_unpack13": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_for_tag_unpack13"
      ]
    ]
  ],
  "test_for_tag_empty01": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_for_tag_empty01"
      ]
    ]
  ],
  "test_for_tag_empty02": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_for_tag_empty02"
      ]
    ]
  ],
  "test_for_tag_empty03": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_for_tag_empty03"
      ]
    ]
  ],
  "test_for_tag_filter_ws": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_for_tag_filter_ws"
      ]
    ]
  ],
  "test_for_tag_unpack_strs": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_for_tag_unpack_strs"
      ]
    ]
  ],
  "test_for_tag_unpack10": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_for_tag_unpack10"
      ]
    ]
  ],
  "test_for_tag_unpack11": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_for_tag_unpack11"
      ]
    ]
  ],
  "test_for_tag_unpack12": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_for_tag_unpack12"
      ]
    ]
  ],
  "test_for_tag_unpack14": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_for_tag_unpack14"
      ]
    ]
  ],
  "test_for_tag_context": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_for_tag_context"
      ]
    ]
  ],
  "test_invalid_in_keyword": [
    [
      "tests/template_tests/syntax_tests/test_for.py",
      [
        "ForTagTests",
        "test_invalid_in_keyword"
      ]
    ]
  ],
  "test_if_tag01": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag01"
      ]
    ]
  ],
  "test_if_tag02": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag02"
      ]
    ]
  ],
  "test_if_tag03": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag03"
      ]
    ]
  ],
  "test_if_tag04": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag04"
      ]
    ]
  ],
  "test_if_tag05": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag05"
      ]
    ]
  ],
  "test_if_tag06": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag06"
      ]
    ]
  ],
  "test_if_tag07": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag07"
      ]
    ]
  ],
  "test_if_tag08": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag08"
      ]
    ]
  ],
  "test_if_tag09": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag09"
      ]
    ]
  ],
  "test_if_tag10": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag10"
      ]
    ]
  ],
  "test_if_tag11": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag11"
      ]
    ]
  ],
  "test_if_tag12": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag12"
      ]
    ]
  ],
  "test_if_tag13": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag13"
      ]
    ]
  ],
  "test_if_tag_filter01": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_filter01"
      ]
    ]
  ],
  "test_if_tag_filter02": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_filter02"
      ]
    ]
  ],
  "test_if_tag_eq01": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_eq01"
      ]
    ]
  ],
  "test_if_tag_eq02": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_eq02"
      ]
    ]
  ],
  "test_if_tag_eq03": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_eq03"
      ]
    ]
  ],
  "test_if_tag_eq04": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_eq04"
      ]
    ]
  ],
  "test_if_tag_eq05": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_eq05"
      ]
    ]
  ],
  "test_if_tag_noteq01": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_noteq01"
      ]
    ]
  ],
  "test_if_tag_noteq02": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_noteq02"
      ]
    ]
  ],
  "test_if_tag_noteq03": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_noteq03"
      ]
    ]
  ],
  "test_if_tag_noteq04": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_noteq04"
      ]
    ]
  ],
  "test_if_tag_noteq05": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_noteq05"
      ]
    ]
  ],
  "test_if_tag_gt_01": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_gt_01"
      ]
    ]
  ],
  "test_if_tag_gt_02": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_gt_02"
      ]
    ]
  ],
  "test_if_tag_gte_01": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_gte_01"
      ]
    ]
  ],
  "test_if_tag_gte_02": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_gte_02"
      ]
    ]
  ],
  "test_if_tag_lt_01": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_lt_01"
      ]
    ]
  ],
  "test_if_tag_lt_02": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_lt_02"
      ]
    ]
  ],
  "test_if_tag_lte_01": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_lte_01"
      ]
    ]
  ],
  "test_if_tag_lte_02": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_lte_02"
      ]
    ]
  ],
  "test_if_tag_in_01": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_in_01"
      ]
    ]
  ],
  "test_if_tag_in_02": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_in_02"
      ]
    ]
  ],
  "test_if_tag_not_in_01": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not_in_01"
      ]
    ]
  ],
  "test_if_tag_not_in_02": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not_in_02"
      ]
    ]
  ],
  "test_if_tag_and01": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_and01"
      ]
    ]
  ],
  "test_if_tag_and02": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_and02"
      ]
    ]
  ],
  "test_if_tag_and03": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_and03"
      ]
    ]
  ],
  "test_if_tag_and04": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_and04"
      ]
    ]
  ],
  "test_if_tag_and05": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_and05"
      ]
    ]
  ],
  "test_if_tag_and06": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_and06"
      ]
    ]
  ],
  "test_if_tag_and07": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_and07"
      ]
    ]
  ],
  "test_if_tag_and08": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_and08"
      ]
    ]
  ],
  "test_if_tag_or01": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_or01"
      ]
    ]
  ],
  "test_if_tag_or02": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_or02"
      ]
    ]
  ],
  "test_if_tag_or03": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_or03"
      ]
    ]
  ],
  "test_if_tag_or04": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_or04"
      ]
    ]
  ],
  "test_if_tag_or05": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_or05"
      ]
    ]
  ],
  "test_if_tag_or06": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_or06"
      ]
    ]
  ],
  "test_if_tag_or07": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_or07"
      ]
    ]
  ],
  "test_if_tag_or08": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_or08"
      ]
    ]
  ],
  "test_if_tag_or09": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_or09"
      ]
    ]
  ],
  "test_if_tag_not01": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not01"
      ]
    ]
  ],
  "test_if_tag_not02": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not02"
      ]
    ]
  ],
  "test_if_tag_not06": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not06"
      ]
    ]
  ],
  "test_if_tag_not07": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not07"
      ]
    ]
  ],
  "test_if_tag_not08": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not08"
      ]
    ]
  ],
  "test_if_tag_not09": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not09"
      ]
    ]
  ],
  "test_if_tag_not10": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not10"
      ]
    ]
  ],
  "test_if_tag_not11": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not11"
      ]
    ]
  ],
  "test_if_tag_not12": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not12"
      ]
    ]
  ],
  "test_if_tag_not13": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not13"
      ]
    ]
  ],
  "test_if_tag_not14": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not14"
      ]
    ]
  ],
  "test_if_tag_not15": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not15"
      ]
    ]
  ],
  "test_if_tag_not16": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not16"
      ]
    ]
  ],
  "test_if_tag_not17": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not17"
      ]
    ]
  ],
  "test_if_tag_not18": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not18"
      ]
    ]
  ],
  "test_if_tag_not19": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not19"
      ]
    ]
  ],
  "test_if_tag_not20": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not20"
      ]
    ]
  ],
  "test_if_tag_not21": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not21"
      ]
    ]
  ],
  "test_if_tag_not22": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not22"
      ]
    ]
  ],
  "test_if_tag_not23": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not23"
      ]
    ]
  ],
  "test_if_tag_not24": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not24"
      ]
    ]
  ],
  "test_if_tag_not25": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not25"
      ]
    ]
  ],
  "test_if_tag_not26": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not26"
      ]
    ]
  ],
  "test_if_tag_not27": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not27"
      ]
    ]
  ],
  "test_if_tag_not28": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not28"
      ]
    ]
  ],
  "test_if_tag_not29": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not29"
      ]
    ]
  ],
  "test_if_tag_not30": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not30"
      ]
    ]
  ],
  "test_if_tag_not31": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not31"
      ]
    ]
  ],
  "test_if_tag_not32": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not32"
      ]
    ]
  ],
  "test_if_tag_not33": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not33"
      ]
    ]
  ],
  "test_if_tag_not34": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not34"
      ]
    ]
  ],
  "test_if_tag_not35": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_not35"
      ]
    ]
  ],
  "test_if_tag_error01": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_error01"
      ]
    ]
  ],
  "test_if_tag_error02": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_error02"
      ]
    ]
  ],
  "test_if_tag_error03": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_error03"
      ]
    ]
  ],
  "test_if_tag_error04": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_error04"
      ]
    ]
  ],
  "test_if_tag_error05": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_error05"
      ]
    ]
  ],
  "test_if_tag_error06": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_error06"
      ]
    ]
  ],
  "test_if_tag_error07": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_error07"
      ]
    ]
  ],
  "test_if_tag_error08": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_error08"
      ]
    ]
  ],
  "test_if_tag_error09": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_error09"
      ]
    ]
  ],
  "test_if_tag_error10": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_error10"
      ]
    ]
  ],
  "test_if_tag_error11": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_error11"
      ]
    ]
  ],
  "test_if_tag_error12": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_error12"
      ]
    ]
  ],
  "test_else_if_tag_error01": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_else_if_tag_error01"
      ]
    ]
  ],
  "test_if_tag_shortcircuit01": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_shortcircuit01"
      ]
    ]
  ],
  "test_if_tag_shortcircuit02": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_shortcircuit02"
      ]
    ]
  ],
  "test_if_tag_badarg01": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_badarg01"
      ]
    ]
  ],
  "test_if_tag_badarg02": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_badarg02"
      ]
    ]
  ],
  "test_if_tag_badarg03": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_badarg03"
      ]
    ]
  ],
  "test_if_tag_badarg04": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_badarg04"
      ]
    ]
  ],
  "test_if_tag_single_eq": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_tag_single_eq"
      ]
    ]
  ],
  "test_if_is_match": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_is_match"
      ]
    ]
  ],
  "test_if_is_no_match": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_is_no_match"
      ]
    ]
  ],
  "test_if_is_variable_missing": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_is_variable_missing"
      ]
    ]
  ],
  "test_if_is_both_variables_missing": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_is_both_variables_missing"
      ]
    ]
  ],
  "test_if_is_not_match": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_is_not_match"
      ]
    ]
  ],
  "test_if_is_not_no_match": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_is_not_no_match"
      ]
    ]
  ],
  "test_if_is_not_variable_missing": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_is_not_variable_missing"
      ]
    ]
  ],
  "test_if_is_not_both_variables_missing": [
    [
      "tests/template_tests/syntax_tests/test_if.py",
      [
        "IfTagTests",
        "test_if_is_not_both_variables_missing"
      ]
    ]
  ],
  "test_ifchanged01": [
    [
      "tests/template_tests/syntax_tests/test_if_changed.py",
      [
        "IfChangedTagTests",
        "test_ifchanged01"
      ]
    ]
  ],
  "test_ifchanged02": [
    [
      "tests/template_tests/syntax_tests/test_if_changed.py",
      [
        "IfChangedTagTests",
        "test_ifchanged02"
      ]
    ]
  ],
  "test_ifchanged03": [
    [
      "tests/template_tests/syntax_tests/test_if_changed.py",
      [
        "IfChangedTagTests",
        "test_ifchanged03"
      ]
    ]
  ],
  "test_ifchanged04": [
    [
      "tests/template_tests/syntax_tests/test_if_changed.py",
      [
        "IfChangedTagTests",
        "test_ifchanged04"
      ]
    ]
  ],
  "test_ifchanged05": [
    [
      "tests/template_tests/syntax_tests/test_if_changed.py",
      [
        "IfChangedTagTests",
        "test_ifchanged05"
      ]
    ]
  ],
  "test_ifchanged06": [
    [
      "tests/template_tests/syntax_tests/test_if_changed.py",
      [
        "IfChangedTagTests",
        "test_ifchanged06"
      ]
    ]
  ],
  "test_ifchanged07": [
    [
      "tests/template_tests/syntax_tests/test_if_changed.py",
      [
        "IfChangedTagTests",
        "test_ifchanged07"
      ]
    ]
  ],
  "test_ifchanged08": [
    [
      "tests/template_tests/syntax_tests/test_if_changed.py",
      [
        "IfChangedTagTests",
        "test_ifchanged08"
      ]
    ]
  ],
  "test_ifchanged_param01": [
    [
      "tests/template_tests/syntax_tests/test_if_changed.py",
      [
        "IfChangedTagTests",
        "test_ifchanged_param01"
      ]
    ]
  ],
  "test_ifchanged_param02": [
    [
      "tests/template_tests/syntax_tests/test_if_changed.py",
      [
        "IfChangedTagTests",
        "test_ifchanged_param02"
      ]
    ]
  ],
  "test_ifchanged_param03": [
    [
      "tests/template_tests/syntax_tests/test_if_changed.py",
      [
        "IfChangedTagTests",
        "test_ifchanged_param03"
      ]
    ]
  ],
  "test_ifchanged_param04": [
    [
      "tests/template_tests/syntax_tests/test_if_changed.py",
      [
        "IfChangedTagTests",
        "test_ifchanged_param04"
      ]
    ]
  ],
  "test_ifchanged_param05": [
    [
      "tests/template_tests/syntax_tests/test_if_changed.py",
      [
        "IfChangedTagTests",
        "test_ifchanged_param05"
      ]
    ]
  ],
  "test_ifchanged_else01": [
    [
      "tests/template_tests/syntax_tests/test_if_changed.py",
      [
        "IfChangedTagTests",
        "test_ifchanged_else01"
      ]
    ]
  ],
  "test_ifchanged_else02": [
    [
      "tests/template_tests/syntax_tests/test_if_changed.py",
      [
        "IfChangedTagTests",
        "test_ifchanged_else02"
      ]
    ]
  ],
  "test_ifchanged_else03": [
    [
      "tests/template_tests/syntax_tests/test_if_changed.py",
      [
        "IfChangedTagTests",
        "test_ifchanged_else03"
      ]
    ]
  ],
  "test_ifchanged_else04": [
    [
      "tests/template_tests/syntax_tests/test_if_changed.py",
      [
        "IfChangedTagTests",
        "test_ifchanged_else04"
      ]
    ]
  ],
  "test_ifchanged_filter_ws": [
    [
      "tests/template_tests/syntax_tests/test_if_changed.py",
      [
        "IfChangedTagTests",
        "test_ifchanged_filter_ws"
      ]
    ]
  ],
  "gen": [
    [
      "tests/template_tests/syntax_tests/test_if_changed.py",
      [
        "IfChangedTests",
        "test_ifchanged_concurrency",
        "gen"
      ]
    ]
  ],
  "test_ifchanged_concurrency": [
    [
      "tests/template_tests/syntax_tests/test_if_changed.py",
      [
        "IfChangedTests",
        "test_ifchanged_concurrency"
      ]
    ]
  ],
  "test_ifchanged_render_once": [
    [
      "tests/template_tests/syntax_tests/test_if_changed.py",
      [
        "IfChangedTests",
        "test_ifchanged_render_once"
      ]
    ]
  ],
  "test_include": [
    [
      "tests/template_tests/syntax_tests/test_if_changed.py",
      [
        "IfChangedTests",
        "test_include"
      ]
    ]
  ],
  "test_include_state": [
    [
      "tests/template_tests/syntax_tests/test_if_changed.py",
      [
        "IfChangedTests",
        "test_include_state"
      ]
    ]
  ],
  "test_ifequal01": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal01"
      ]
    ]
  ],
  "test_ifequal02": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal02"
      ]
    ]
  ],
  "test_ifequal03": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal03"
      ]
    ]
  ],
  "test_ifequal04": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal04"
      ]
    ]
  ],
  "test_ifequal05": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal05"
      ]
    ]
  ],
  "test_ifequal06": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal06"
      ]
    ]
  ],
  "test_ifequal07": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal07"
      ]
    ]
  ],
  "test_ifequal08": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal08"
      ]
    ]
  ],
  "test_ifequal09": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal09"
      ]
    ]
  ],
  "test_ifequal10": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal10"
      ]
    ]
  ],
  "test_ifequal_split01": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal_split01"
      ]
    ]
  ],
  "test_ifequal_split02": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal_split02"
      ]
    ]
  ],
  "test_ifequal_split03": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal_split03"
      ]
    ]
  ],
  "test_ifequal_split04": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal_split04"
      ]
    ]
  ],
  "test_ifequal_split05": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal_split05"
      ]
    ]
  ],
  "test_ifequal_split06": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal_split06"
      ]
    ]
  ],
  "test_ifequal_split07": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal_split07"
      ]
    ]
  ],
  "test_ifequal_split08": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal_split08"
      ]
    ]
  ],
  "test_ifequal_split09": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal_split09"
      ]
    ]
  ],
  "test_ifequal_split10": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal_split10"
      ]
    ]
  ],
  "test_ifequal_numeric01": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal_numeric01"
      ]
    ]
  ],
  "test_ifequal_numeric02": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal_numeric02"
      ]
    ]
  ],
  "test_ifequal_numeric03": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal_numeric03"
      ]
    ]
  ],
  "test_ifequal_numeric04": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal_numeric04"
      ]
    ]
  ],
  "test_ifequal_numeric05": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal_numeric05"
      ]
    ]
  ],
  "test_ifequal_numeric06": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal_numeric06"
      ]
    ]
  ],
  "test_ifequal_numeric07": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal_numeric07"
      ]
    ]
  ],
  "test_ifequal_numeric08": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal_numeric08"
      ]
    ]
  ],
  "test_ifequal_numeric09": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal_numeric09"
      ]
    ]
  ],
  "test_ifequal_numeric10": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal_numeric10"
      ]
    ]
  ],
  "test_ifequal_numeric11": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal_numeric11"
      ]
    ]
  ],
  "test_ifequal_numeric12": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal_numeric12"
      ]
    ]
  ],
  "test_ifequal_filter01": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal_filter01"
      ]
    ]
  ],
  "test_ifequal_filter02": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal_filter02"
      ]
    ]
  ],
  "test_ifequal_filter03": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal_filter03"
      ]
    ]
  ],
  "test_ifequal_filter04": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal_filter04"
      ]
    ]
  ],
  "test_ifequal_filter05": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfEqualTagTests",
        "test_ifequal_filter05"
      ]
    ]
  ],
  "test_ifnotequal01": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfNotEqualTagTests",
        "test_ifnotequal01"
      ]
    ]
  ],
  "test_ifnotequal02": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfNotEqualTagTests",
        "test_ifnotequal02"
      ]
    ]
  ],
  "test_ifnotequal03": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfNotEqualTagTests",
        "test_ifnotequal03"
      ]
    ]
  ],
  "test_ifnotequal04": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfNotEqualTagTests",
        "test_ifnotequal04"
      ]
    ]
  ],
  "test_one_var": [
    [
      "tests/template_tests/syntax_tests/test_if_equal.py",
      [
        "IfNotEqualTagTests",
        "test_one_var"
      ]
    ]
  ],
  "test_include01": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTagTests",
        "test_include01"
      ]
    ]
  ],
  "test_include02": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTagTests",
        "test_include02"
      ]
    ]
  ],
  "test_include03": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTagTests",
        "test_include03"
      ]
    ]
  ],
  "test_include04": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTagTests",
        "test_include04"
      ]
    ]
  ],
  "test_include06": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTagTests",
        "test_include06"
      ]
    ]
  ],
  "test_include07": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTagTests",
        "test_include07"
      ]
    ]
  ],
  "test_include08": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTagTests",
        "test_include08"
      ]
    ]
  ],
  "test_include09": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTagTests",
        "test_include09"
      ]
    ]
  ],
  "test_include10": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTagTests",
        "test_include10"
      ]
    ]
  ],
  "test_include11": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTagTests",
        "test_include11"
      ]
    ]
  ],
  "test_include12": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTagTests",
        "test_include12"
      ]
    ]
  ],
  "test_include13": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTagTests",
        "test_include13"
      ]
    ]
  ],
  "test_include14": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTagTests",
        "test_include14"
      ]
    ]
  ],
  "test_include_error01": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTagTests",
        "test_include_error01"
      ]
    ]
  ],
  "test_include_error02": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTagTests",
        "test_include_error02"
      ]
    ]
  ],
  "test_include_error03": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTagTests",
        "test_include_error03"
      ]
    ]
  ],
  "test_include_error04": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTagTests",
        "test_include_error04"
      ]
    ]
  ],
  "test_include_error05": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTagTests",
        "test_include_error05"
      ]
    ]
  ],
  "test_include_error06": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTagTests",
        "test_include_error06"
      ]
    ]
  ],
  "test_include_fail1": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTagTests",
        "test_include_fail1"
      ]
    ]
  ],
  "test_include_fail2": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTagTests",
        "test_include_fail2"
      ]
    ]
  ],
  "test_include_error07": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTagTests",
        "test_include_error07"
      ]
    ]
  ],
  "test_include_error08": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTagTests",
        "test_include_error08"
      ]
    ]
  ],
  "test_include_error09": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTagTests",
        "test_include_error09"
      ]
    ]
  ],
  "test_include_error10": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTagTests",
        "test_include_error10"
      ]
    ]
  ],
  "test_include_empty": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTagTests",
        "test_include_empty"
      ]
    ]
  ],
  "test_include_missing_template": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTests",
        "test_include_missing_template"
      ]
    ]
  ],
  "test_extends_include_missing_baseloader": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTests",
        "test_extends_include_missing_baseloader"
      ]
    ]
  ],
  "test_extends_include_missing_cachedloader": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTests",
        "test_extends_include_missing_cachedloader"
      ]
    ]
  ],
  "test_include_template_argument": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTests",
        "test_include_template_argument"
      ]
    ]
  ],
  "test_include_template_iterable": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTests",
        "test_include_template_iterable"
      ]
    ]
  ],
  "test_include_template_none": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTests",
        "test_include_template_none"
      ]
    ]
  ],
  "test_include_from_loader_get_template": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTests",
        "test_include_from_loader_get_template"
      ]
    ]
  ],
  "test_include_immediate_missing": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTests",
        "test_include_immediate_missing"
      ]
    ]
  ],
  "test_include_recursive": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTests",
        "test_include_recursive"
      ]
    ]
  ],
  "test_include_cache": [
    [
      "tests/template_tests/syntax_tests/test_include.py",
      [
        "IncludeTests",
        "test_include_cache"
      ]
    ]
  ],
  "test_invalidstr01": [
    [
      "tests/template_tests/syntax_tests/test_invalid_string.py",
      [
        "InvalidStringTests",
        "test_invalidstr01"
      ]
    ]
  ],
  "test_invalidstr02": [
    [
      "tests/template_tests/syntax_tests/test_invalid_string.py",
      [
        "InvalidStringTests",
        "test_invalidstr02"
      ]
    ]
  ],
  "test_invalidstr03": [
    [
      "tests/template_tests/syntax_tests/test_invalid_string.py",
      [
        "InvalidStringTests",
        "test_invalidstr03"
      ]
    ]
  ],
  "test_invalidstr04": [
    [
      "tests/template_tests/syntax_tests/test_invalid_string.py",
      [
        "InvalidStringTests",
        "test_invalidstr04"
      ]
    ]
  ],
  "test_invalidstr04_2": [
    [
      "tests/template_tests/syntax_tests/test_invalid_string.py",
      [
        "InvalidStringTests",
        "test_invalidstr04_2"
      ]
    ]
  ],
  "test_invalidstr05": [
    [
      "tests/template_tests/syntax_tests/test_invalid_string.py",
      [
        "InvalidStringTests",
        "test_invalidstr05"
      ]
    ]
  ],
  "test_invalidstr06": [
    [
      "tests/template_tests/syntax_tests/test_invalid_string.py",
      [
        "InvalidStringTests",
        "test_invalidstr06"
      ]
    ]
  ],
  "test_invalidstr07": [
    [
      "tests/template_tests/syntax_tests/test_invalid_string.py",
      [
        "InvalidStringTests",
        "test_invalidstr07"
      ]
    ]
  ],
  "test_list_index01": [
    [
      "tests/template_tests/syntax_tests/test_list_index.py",
      [
        "ListIndexTests",
        "test_list_index01"
      ]
    ]
  ],
  "test_list_index02": [
    [
      "tests/template_tests/syntax_tests/test_list_index.py",
      [
        "ListIndexTests",
        "test_list_index02"
      ]
    ]
  ],
  "test_list_index03": [
    [
      "tests/template_tests/syntax_tests/test_list_index.py",
      [
        "ListIndexTests",
        "test_list_index03"
      ]
    ]
  ],
  "test_list_index04": [
    [
      "tests/template_tests/syntax_tests/test_list_index.py",
      [
        "ListIndexTests",
        "test_list_index04"
      ]
    ]
  ],
  "test_list_index05": [
    [
      "tests/template_tests/syntax_tests/test_list_index.py",
      [
        "ListIndexTests",
        "test_list_index05"
      ]
    ]
  ],
  "test_list_index06": [
    [
      "tests/template_tests/syntax_tests/test_list_index.py",
      [
        "ListIndexTests",
        "test_list_index06"
      ]
    ]
  ],
  "test_list_index07": [
    [
      "tests/template_tests/syntax_tests/test_list_index.py",
      [
        "ListIndexTests",
        "test_list_index07"
      ]
    ]
  ],
  "test_load01": [
    [
      "tests/template_tests/syntax_tests/test_load.py",
      [
        "LoadTagTests",
        "test_load01"
      ]
    ]
  ],
  "test_load02": [
    [
      "tests/template_tests/syntax_tests/test_load.py",
      [
        "LoadTagTests",
        "test_load02"
      ]
    ]
  ],
  "test_load03": [
    [
      "tests/template_tests/syntax_tests/test_load.py",
      [
        "LoadTagTests",
        "test_load03"
      ]
    ]
  ],
  "test_load04": [
    [
      "tests/template_tests/syntax_tests/test_load.py",
      [
        "LoadTagTests",
        "test_load04"
      ]
    ]
  ],
  "test_load05": [
    [
      "tests/template_tests/syntax_tests/test_load.py",
      [
        "LoadTagTests",
        "test_load05"
      ]
    ]
  ],
  "test_load06": [
    [
      "tests/template_tests/syntax_tests/test_load.py",
      [
        "LoadTagTests",
        "test_load06"
      ]
    ]
  ],
  "test_load07": [
    [
      "tests/template_tests/syntax_tests/test_load.py",
      [
        "LoadTagTests",
        "test_load07"
      ]
    ]
  ],
  "test_load08": [
    [
      "tests/template_tests/syntax_tests/test_load.py",
      [
        "LoadTagTests",
        "test_load08"
      ]
    ]
  ],
  "test_load09": [
    [
      "tests/template_tests/syntax_tests/test_load.py",
      [
        "LoadTagTests",
        "test_load09"
      ]
    ]
  ],
  "test_load10": [
    [
      "tests/template_tests/syntax_tests/test_load.py",
      [
        "LoadTagTests",
        "test_load10"
      ]
    ]
  ],
  "test_load12": [
    [
      "tests/template_tests/syntax_tests/test_load.py",
      [
        "LoadTagTests",
        "test_load12"
      ]
    ]
  ],
  "test_lorem1": [
    [
      "tests/template_tests/syntax_tests/test_lorem.py",
      [
        "LoremTagTests",
        "test_lorem1"
      ]
    ]
  ],
  "test_lorem_random": [
    [
      "tests/template_tests/syntax_tests/test_lorem.py",
      [
        "LoremTagTests",
        "test_lorem_random"
      ]
    ]
  ],
  "test_multiline01": [
    [
      "tests/template_tests/syntax_tests/test_multiline.py",
      [
        "MultilineTests",
        "test_multiline01"
      ]
    ]
  ],
  "test_namedendblocks01": [
    [
      "tests/template_tests/syntax_tests/test_named_endblock.py",
      [
        "NamedEndblockTests",
        "test_namedendblocks01"
      ]
    ]
  ],
  "test_namedendblocks02": [
    [
      "tests/template_tests/syntax_tests/test_named_endblock.py",
      [
        "NamedEndblockTests",
        "test_namedendblocks02"
      ]
    ]
  ],
  "test_namedendblocks03": [
    [
      "tests/template_tests/syntax_tests/test_named_endblock.py",
      [
        "NamedEndblockTests",
        "test_namedendblocks03"
      ]
    ]
  ],
  "test_namedendblocks04": [
    [
      "tests/template_tests/syntax_tests/test_named_endblock.py",
      [
        "NamedEndblockTests",
        "test_namedendblocks04"
      ]
    ]
  ],
  "test_namedendblocks05": [
    [
      "tests/template_tests/syntax_tests/test_named_endblock.py",
      [
        "NamedEndblockTests",
        "test_namedendblocks05"
      ]
    ]
  ],
  "test_namedendblocks06": [
    [
      "tests/template_tests/syntax_tests/test_named_endblock.py",
      [
        "NamedEndblockTests",
        "test_namedendblocks06"
      ]
    ]
  ],
  "test_namedendblocks07": [
    [
      "tests/template_tests/syntax_tests/test_named_endblock.py",
      [
        "NamedEndblockTests",
        "test_namedendblocks07"
      ]
    ]
  ],
  "test_now01": [
    [
      "tests/template_tests/syntax_tests/test_now.py",
      [
        "NowTagTests",
        "test_now01"
      ]
    ]
  ],
  "test_now02": [
    [
      "tests/template_tests/syntax_tests/test_now.py",
      [
        "NowTagTests",
        "test_now02"
      ]
    ]
  ],
  "test_now03": [
    [
      "tests/template_tests/syntax_tests/test_now.py",
      [
        "NowTagTests",
        "test_now03"
      ]
    ]
  ],
  "test_now04": [
    [
      "tests/template_tests/syntax_tests/test_now.py",
      [
        "NowTagTests",
        "test_now04"
      ]
    ]
  ],
  "test_now05": [
    [
      "tests/template_tests/syntax_tests/test_now.py",
      [
        "NowTagTests",
        "test_now05"
      ]
    ]
  ],
  "test_now06": [
    [
      "tests/template_tests/syntax_tests/test_now.py",
      [
        "NowTagTests",
        "test_now06"
      ]
    ]
  ],
  "test_now07": [
    [
      "tests/template_tests/syntax_tests/test_now.py",
      [
        "NowTagTests",
        "test_now07"
      ]
    ]
  ],
  "test_now_args": [
    [
      "tests/template_tests/syntax_tests/test_now.py",
      [
        "NowTagTests",
        "test_now_args"
      ]
    ]
  ],
  "test_numpy_array_index01": [
    [
      "tests/template_tests/syntax_tests/test_numpy.py",
      [
        "NumpyTests",
        "test_numpy_array_index01"
      ]
    ]
  ],
  "test_numpy_array_index02": [
    [
      "tests/template_tests/syntax_tests/test_numpy.py",
      [
        "NumpyTests",
        "test_numpy_array_index02"
      ]
    ]
  ],
  "test_regroup01": [
    [
      "tests/template_tests/syntax_tests/test_regroup.py",
      [
        "RegroupTagTests",
        "test_regroup01"
      ]
    ]
  ],
  "test_regroup02": [
    [
      "tests/template_tests/syntax_tests/test_regroup.py",
      [
        "RegroupTagTests",
        "test_regroup02"
      ]
    ]
  ],
  "test_regroup03": [
    [
      "tests/template_tests/syntax_tests/test_regroup.py",
      [
        "RegroupTagTests",
        "test_regroup03"
      ]
    ]
  ],
  "test_regroup04": [
    [
      "tests/template_tests/syntax_tests/test_regroup.py",
      [
        "RegroupTagTests",
        "test_regroup04"
      ]
    ]
  ],
  "test_regroup05": [
    [
      "tests/template_tests/syntax_tests/test_regroup.py",
      [
        "RegroupTagTests",
        "test_regroup05"
      ]
    ]
  ],
  "test_regroup06": [
    [
      "tests/template_tests/syntax_tests/test_regroup.py",
      [
        "RegroupTagTests",
        "test_regroup06"
      ]
    ]
  ],
  "test_regroup07": [
    [
      "tests/template_tests/syntax_tests/test_regroup.py",
      [
        "RegroupTagTests",
        "test_regroup07"
      ]
    ]
  ],
  "test_regroup08": [
    [
      "tests/template_tests/syntax_tests/test_regroup.py",
      [
        "RegroupTagTests",
        "test_regroup08"
      ]
    ]
  ],
  "test_regroup_unpack": [
    [
      "tests/template_tests/syntax_tests/test_regroup.py",
      [
        "RegroupTagTests",
        "test_regroup_unpack"
      ]
    ]
  ],
  "test_resetcycle01": [
    [
      "tests/template_tests/syntax_tests/test_resetcycle.py",
      [
        "ResetCycleTagTests",
        "test_resetcycle01"
      ]
    ]
  ],
  "test_resetcycle02": [
    [
      "tests/template_tests/syntax_tests/test_resetcycle.py",
      [
        "ResetCycleTagTests",
        "test_resetcycle02"
      ]
    ]
  ],
  "test_resetcycle03": [
    [
      "tests/template_tests/syntax_tests/test_resetcycle.py",
      [
        "ResetCycleTagTests",
        "test_resetcycle03"
      ]
    ]
  ],
  "test_resetcycle04": [
    [
      "tests/template_tests/syntax_tests/test_resetcycle.py",
      [
        "ResetCycleTagTests",
        "test_resetcycle04"
      ]
    ]
  ],
  "test_resetcycle05": [
    [
      "tests/template_tests/syntax_tests/test_resetcycle.py",
      [
        "ResetCycleTagTests",
        "test_resetcycle05"
      ]
    ]
  ],
  "test_resetcycle06": [
    [
      "tests/template_tests/syntax_tests/test_resetcycle.py",
      [
        "ResetCycleTagTests",
        "test_resetcycle06"
      ]
    ]
  ],
  "test_resetcycle07": [
    [
      "tests/template_tests/syntax_tests/test_resetcycle.py",
      [
        "ResetCycleTagTests",
        "test_resetcycle07"
      ]
    ]
  ],
  "test_resetcycle08": [
    [
      "tests/template_tests/syntax_tests/test_resetcycle.py",
      [
        "ResetCycleTagTests",
        "test_resetcycle08"
      ]
    ]
  ],
  "test_resetcycle09": [
    [
      "tests/template_tests/syntax_tests/test_resetcycle.py",
      [
        "ResetCycleTagTests",
        "test_resetcycle09"
      ]
    ]
  ],
  "test_resetcycle10": [
    [
      "tests/template_tests/syntax_tests/test_resetcycle.py",
      [
        "ResetCycleTagTests",
        "test_resetcycle10"
      ]
    ]
  ],
  "test_resetcycle11": [
    [
      "tests/template_tests/syntax_tests/test_resetcycle.py",
      [
        "ResetCycleTagTests",
        "test_resetcycle11"
      ]
    ]
  ],
  "test_setup": [
    [
      "tests/template_tests/syntax_tests/test_setup.py",
      [
        "SetupTests",
        "test_setup"
      ]
    ]
  ],
  "test_simpletag_renamed01": [
    [
      "tests/template_tests/syntax_tests/test_simple_tag.py",
      [
        "SimpleTagTests",
        "test_simpletag_renamed01"
      ]
    ]
  ],
  "test_simpletag_renamed02": [
    [
      "tests/template_tests/syntax_tests/test_simple_tag.py",
      [
        "SimpleTagTests",
        "test_simpletag_renamed02"
      ]
    ]
  ],
  "test_simpletag_renamed03": [
    [
      "tests/template_tests/syntax_tests/test_simple_tag.py",
      [
        "SimpleTagTests",
        "test_simpletag_renamed03"
      ]
    ]
  ],
  "test_spaceless01": [
    [
      "tests/template_tests/syntax_tests/test_spaceless.py",
      [
        "SpacelessTagTests",
        "test_spaceless01"
      ]
    ]
  ],
  "test_spaceless02": [
    [
      "tests/template_tests/syntax_tests/test_spaceless.py",
      [
        "SpacelessTagTests",
        "test_spaceless02"
      ]
    ]
  ],
  "test_spaceless03": [
    [
      "tests/template_tests/syntax_tests/test_spaceless.py",
      [
        "SpacelessTagTests",
        "test_spaceless03"
      ]
    ]
  ],
  "test_spaceless04": [
    [
      "tests/template_tests/syntax_tests/test_spaceless.py",
      [
        "SpacelessTagTests",
        "test_spaceless04"
      ]
    ]
  ],
  "test_spaceless05": [
    [
      "tests/template_tests/syntax_tests/test_spaceless.py",
      [
        "SpacelessTagTests",
        "test_spaceless05"
      ]
    ]
  ],
  "test_spaceless06": [
    [
      "tests/template_tests/syntax_tests/test_spaceless.py",
      [
        "SpacelessTagTests",
        "test_spaceless06"
      ]
    ]
  ],
  "test_static_prefixtag01": [
    [
      "tests/template_tests/syntax_tests/test_static.py",
      [
        "StaticTagTests",
        "test_static_prefixtag01"
      ]
    ]
  ],
  "test_static_prefixtag02": [
    [
      "tests/template_tests/syntax_tests/test_static.py",
      [
        "StaticTagTests",
        "test_static_prefixtag02"
      ]
    ]
  ],
  "test_static_prefixtag03": [
    [
      "tests/template_tests/syntax_tests/test_static.py",
      [
        "StaticTagTests",
        "test_static_prefixtag03"
      ]
    ]
  ],
  "test_static_prefixtag04": [
    [
      "tests/template_tests/syntax_tests/test_static.py",
      [
        "StaticTagTests",
        "test_static_prefixtag04"
      ]
    ]
  ],
  "test_static_prefixtag_without_as": [
    [
      "tests/template_tests/syntax_tests/test_static.py",
      [
        "StaticTagTests",
        "test_static_prefixtag_without_as"
      ]
    ]
  ],
  "test_static_statictag01": [
    [
      "tests/template_tests/syntax_tests/test_static.py",
      [
        "StaticTagTests",
        "test_static_statictag01"
      ]
    ]
  ],
  "test_static_statictag02": [
    [
      "tests/template_tests/syntax_tests/test_static.py",
      [
        "StaticTagTests",
        "test_static_statictag02"
      ]
    ]
  ],
  "test_static_statictag03": [
    [
      "tests/template_tests/syntax_tests/test_static.py",
      [
        "StaticTagTests",
        "test_static_statictag03"
      ]
    ]
  ],
  "test_static_statictag04": [
    [
      "tests/template_tests/syntax_tests/test_static.py",
      [
        "StaticTagTests",
        "test_static_statictag04"
      ]
    ]
  ],
  "test_static_quotes_urls": [
    [
      "tests/template_tests/syntax_tests/test_static.py",
      [
        "StaticTagTests",
        "test_static_quotes_urls"
      ]
    ]
  ],
  "test_static_statictag_without_path": [
    [
      "tests/template_tests/syntax_tests/test_static.py",
      [
        "StaticTagTests",
        "test_static_statictag_without_path"
      ]
    ]
  ],
  "test_templatetag01": [
    [
      "tests/template_tests/syntax_tests/test_template_tag.py",
      [
        "TemplateTagTests",
        "test_templatetag01"
      ]
    ]
  ],
  "test_templatetag02": [
    [
      "tests/template_tests/syntax_tests/test_template_tag.py",
      [
        "TemplateTagTests",
        "test_templatetag02"
      ]
    ]
  ],
  "test_templatetag03": [
    [
      "tests/template_tests/syntax_tests/test_template_tag.py",
      [
        "TemplateTagTests",
        "test_templatetag03"
      ]
    ]
  ],
  "test_templatetag04": [
    [
      "tests/template_tests/syntax_tests/test_template_tag.py",
      [
        "TemplateTagTests",
        "test_templatetag04"
      ]
    ]
  ],
  "test_templatetag05": [
    [
      "tests/template_tests/syntax_tests/test_template_tag.py",
      [
        "TemplateTagTests",
        "test_templatetag05"
      ]
    ]
  ],
  "test_templatetag06": [
    [
      "tests/template_tests/syntax_tests/test_template_tag.py",
      [
        "TemplateTagTests",
        "test_templatetag06"
      ]
    ]
  ],
  "test_templatetag07": [
    [
      "tests/template_tests/syntax_tests/test_template_tag.py",
      [
        "TemplateTagTests",
        "test_templatetag07"
      ]
    ]
  ],
  "test_templatetag08": [
    [
      "tests/template_tests/syntax_tests/test_template_tag.py",
      [
        "TemplateTagTests",
        "test_templatetag08"
      ]
    ]
  ],
  "test_templatetag09": [
    [
      "tests/template_tests/syntax_tests/test_template_tag.py",
      [
        "TemplateTagTests",
        "test_templatetag09"
      ]
    ]
  ],
  "test_templatetag10": [
    [
      "tests/template_tests/syntax_tests/test_template_tag.py",
      [
        "TemplateTagTests",
        "test_templatetag10"
      ]
    ]
  ],
  "test_templatetag11": [
    [
      "tests/template_tests/syntax_tests/test_template_tag.py",
      [
        "TemplateTagTests",
        "test_templatetag11"
      ]
    ]
  ],
  "test_templatetag12": [
    [
      "tests/template_tests/syntax_tests/test_template_tag.py",
      [
        "TemplateTagTests",
        "test_templatetag12"
      ]
    ]
  ],
  "test_url01": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url01"
      ]
    ]
  ],
  "test_url02": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url02"
      ]
    ]
  ],
  "test_url02a": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url02a"
      ]
    ]
  ],
  "test_url02b": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url02b"
      ]
    ]
  ],
  "test_url02c": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url02c"
      ]
    ]
  ],
  "test_url03": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url03"
      ]
    ]
  ],
  "test_url04": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url04"
      ]
    ]
  ],
  "test_url05": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url05"
      ]
    ]
  ],
  "test_url06": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url06"
      ]
    ]
  ],
  "test_url08": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url08"
      ]
    ]
  ],
  "test_url09": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url09"
      ]
    ]
  ],
  "test_url10": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url10"
      ]
    ]
  ],
  "test_url11": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url11"
      ]
    ]
  ],
  "test_url12": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url12"
      ]
    ]
  ],
  "test_url13": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url13"
      ]
    ]
  ],
  "test_url14": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url14"
      ]
    ]
  ],
  "test_url15": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url15"
      ]
    ]
  ],
  "test_url18": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url18"
      ]
    ]
  ],
  "test_url19": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url19"
      ]
    ]
  ],
  "test_url20": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url20"
      ]
    ]
  ],
  "test_url21": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url21"
      ]
    ]
  ],
  "test_url_fail01": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url_fail01"
      ]
    ]
  ],
  "test_url_fail02": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url_fail02"
      ]
    ]
  ],
  "test_url_fail03": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url_fail03"
      ]
    ]
  ],
  "test_url_fail04": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url_fail04"
      ]
    ]
  ],
  "test_url_fail05": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url_fail05"
      ]
    ]
  ],
  "test_url_fail06": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url_fail06"
      ]
    ]
  ],
  "test_url_fail07": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url_fail07"
      ]
    ]
  ],
  "test_url_fail08": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url_fail08"
      ]
    ]
  ],
  "test_url_fail09": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url_fail09"
      ]
    ]
  ],
  "test_url_fail11": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url_fail11"
      ]
    ]
  ],
  "test_url_fail12": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url_fail12"
      ]
    ]
  ],
  "test_url_fail13": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url_fail13"
      ]
    ]
  ],
  "test_url_fail14": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url_fail14"
      ]
    ]
  ],
  "test_url_fail15": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url_fail15"
      ]
    ]
  ],
  "test_url_fail16": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url_fail16"
      ]
    ]
  ],
  "test_url_fail17": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url_fail17"
      ]
    ]
  ],
  "test_url_fail18": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url_fail18"
      ]
    ]
  ],
  "test_url_fail19": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url_fail19"
      ]
    ]
  ],
  "test_url_asvar01": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url_asvar01"
      ]
    ]
  ],
  "test_url_asvar02": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url_asvar02"
      ]
    ]
  ],
  "test_url_asvar03": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url_asvar03"
      ]
    ]
  ],
  "test_url_namespace01": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url_namespace01"
      ]
    ]
  ],
  "test_url_namespace02": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url_namespace02"
      ]
    ]
  ],
  "test_url_namespace03": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url_namespace03"
      ]
    ]
  ],
  "test_url_namespace_no_current_app": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url_namespace_no_current_app"
      ]
    ]
  ],
  "test_url_namespace_explicit_current_app": [
    [
      "tests/template_tests/syntax_tests/test_url.py",
      [
        "UrlTagTests",
        "test_url_namespace_explicit_current_app"
      ]
    ]
  ],
  "test_verbatim_tag01": [
    [
      "tests/template_tests/syntax_tests/test_verbatim.py",
      [
        "VerbatimTagTests",
        "test_verbatim_tag01"
      ]
    ]
  ],
  "test_verbatim_tag02": [
    [
      "tests/template_tests/syntax_tests/test_verbatim.py",
      [
        "VerbatimTagTests",
        "test_verbatim_tag02"
      ]
    ]
  ],
  "test_verbatim_tag03": [
    [
      "tests/template_tests/syntax_tests/test_verbatim.py",
      [
        "VerbatimTagTests",
        "test_verbatim_tag03"
      ]
    ]
  ],
  "test_verbatim_tag04": [
    [
      "tests/template_tests/syntax_tests/test_verbatim.py",
      [
        "VerbatimTagTests",
        "test_verbatim_tag04"
      ]
    ]
  ],
  "test_verbatim_tag05": [
    [
      "tests/template_tests/syntax_tests/test_verbatim.py",
      [
        "VerbatimTagTests",
        "test_verbatim_tag05"
      ]
    ]
  ],
  "test_verbatim_tag06": [
    [
      "tests/template_tests/syntax_tests/test_verbatim.py",
      [
        "VerbatimTagTests",
        "test_verbatim_tag06"
      ]
    ]
  ],
  "test_widthratio01": [
    [
      "tests/template_tests/syntax_tests/test_width_ratio.py",
      [
        "WidthRatioTagTests",
        "test_widthratio01"
      ]
    ]
  ],
  "test_widthratio02": [
    [
      "tests/template_tests/syntax_tests/test_width_ratio.py",
      [
        "WidthRatioTagTests",
        "test_widthratio02"
      ]
    ]
  ],
  "test_widthratio03": [
    [
      "tests/template_tests/syntax_tests/test_width_ratio.py",
      [
        "WidthRatioTagTests",
        "test_widthratio03"
      ]
    ]
  ],
  "test_widthratio04": [
    [
      "tests/template_tests/syntax_tests/test_width_ratio.py",
      [
        "WidthRatioTagTests",
        "test_widthratio04"
      ]
    ]
  ],
  "test_widthratio05": [
    [
      "tests/template_tests/syntax_tests/test_width_ratio.py",
      [
        "WidthRatioTagTests",
        "test_widthratio05"
      ]
    ]
  ],
  "test_widthratio06": [
    [
      "tests/template_tests/syntax_tests/test_width_ratio.py",
      [
        "WidthRatioTagTests",
        "test_widthratio06"
      ]
    ]
  ],
  "test_widthratio07": [
    [
      "tests/template_tests/syntax_tests/test_width_ratio.py",
      [
        "WidthRatioTagTests",
        "test_widthratio07"
      ]
    ]
  ],
  "test_widthratio08": [
    [
      "tests/template_tests/syntax_tests/test_width_ratio.py",
      [
        "WidthRatioTagTests",
        "test_widthratio08"
      ]
    ]
  ],
  "test_widthratio09": [
    [
      "tests/template_tests/syntax_tests/test_width_ratio.py",
      [
        "WidthRatioTagTests",
        "test_widthratio09"
      ]
    ]
  ],
  "test_widthratio10": [
    [
      "tests/template_tests/syntax_tests/test_width_ratio.py",
      [
        "WidthRatioTagTests",
        "test_widthratio10"
      ]
    ]
  ],
  "test_widthratio11": [
    [
      "tests/template_tests/syntax_tests/test_width_ratio.py",
      [
        "WidthRatioTagTests",
        "test_widthratio11"
      ]
    ]
  ],
  "test_widthratio12a": [
    [
      "tests/template_tests/syntax_tests/test_width_ratio.py",
      [
        "WidthRatioTagTests",
        "test_widthratio12a"
      ]
    ]
  ],
  "test_widthratio12b": [
    [
      "tests/template_tests/syntax_tests/test_width_ratio.py",
      [
        "WidthRatioTagTests",
        "test_widthratio12b"
      ]
    ]
  ],
  "test_widthratio13a": [
    [
      "tests/template_tests/syntax_tests/test_width_ratio.py",
      [
        "WidthRatioTagTests",
        "test_widthratio13a"
      ]
    ]
  ],
  "test_widthratio13b": [
    [
      "tests/template_tests/syntax_tests/test_width_ratio.py",
      [
        "WidthRatioTagTests",
        "test_widthratio13b"
      ]
    ]
  ],
  "test_widthratio14a": [
    [
      "tests/template_tests/syntax_tests/test_width_ratio.py",
      [
        "WidthRatioTagTests",
        "test_widthratio14a"
      ]
    ]
  ],
  "test_widthratio14b": [
    [
      "tests/template_tests/syntax_tests/test_width_ratio.py",
      [
        "WidthRatioTagTests",
        "test_widthratio14b"
      ]
    ]
  ],
  "test_widthratio15": [
    [
      "tests/template_tests/syntax_tests/test_width_ratio.py",
      [
        "WidthRatioTagTests",
        "test_widthratio15"
      ]
    ]
  ],
  "test_widthratio16": [
    [
      "tests/template_tests/syntax_tests/test_width_ratio.py",
      [
        "WidthRatioTagTests",
        "test_widthratio16"
      ]
    ]
  ],
  "test_widthratio17": [
    [
      "tests/template_tests/syntax_tests/test_width_ratio.py",
      [
        "WidthRatioTagTests",
        "test_widthratio17"
      ]
    ]
  ],
  "test_widthratio18": [
    [
      "tests/template_tests/syntax_tests/test_width_ratio.py",
      [
        "WidthRatioTagTests",
        "test_widthratio18"
      ]
    ]
  ],
  "test_widthratio19": [
    [
      "tests/template_tests/syntax_tests/test_width_ratio.py",
      [
        "WidthRatioTagTests",
        "test_widthratio19"
      ]
    ]
  ],
  "test_widthratio20": [
    [
      "tests/template_tests/syntax_tests/test_width_ratio.py",
      [
        "WidthRatioTagTests",
        "test_widthratio20"
      ]
    ]
  ],
  "test_widthratio21": [
    [
      "tests/template_tests/syntax_tests/test_width_ratio.py",
      [
        "WidthRatioTagTests",
        "test_widthratio21"
      ]
    ]
  ],
  "test_zerodivisionerror_as_var": [
    [
      "tests/template_tests/syntax_tests/test_width_ratio.py",
      [
        "WidthRatioTagTests",
        "test_zerodivisionerror_as_var"
      ]
    ]
  ],
  "test_typeerror_as_var": [
    [
      "tests/template_tests/syntax_tests/test_width_ratio.py",
      [
        "WidthRatioTagTests",
        "test_typeerror_as_var"
      ]
    ]
  ],
  "test_with01": [
    [
      "tests/template_tests/syntax_tests/test_with.py",
      [
        "WithTagTests",
        "test_with01"
      ]
    ]
  ],
  "test_legacywith01": [
    [
      "tests/template_tests/syntax_tests/test_with.py",
      [
        "WithTagTests",
        "test_legacywith01"
      ]
    ]
  ],
  "test_with02": [
    [
      "tests/template_tests/syntax_tests/test_with.py",
      [
        "WithTagTests",
        "test_with02"
      ]
    ]
  ],
  "test_legacywith02": [
    [
      "tests/template_tests/syntax_tests/test_with.py",
      [
        "WithTagTests",
        "test_legacywith02"
      ]
    ]
  ],
  "test_with03": [
    [
      "tests/template_tests/syntax_tests/test_with.py",
      [
        "WithTagTests",
        "test_with03"
      ]
    ]
  ],
  "test_with_error01": [
    [
      "tests/template_tests/syntax_tests/test_with.py",
      [
        "WithTagTests",
        "test_with_error01"
      ]
    ]
  ],
  "test_with_error02": [
    [
      "tests/template_tests/syntax_tests/test_with.py",
      [
        "WithTagTests",
        "test_with_error02"
      ]
    ]
  ],
  "badtag": [
    [
      "tests/template_tests/templatetags/bad_tag.py",
      [
        "badtag"
      ]
    ],
    [
      "tests/template_tests/templatetags/tag_27584.py",
      [
        "badtag"
      ]
    ]
  ],
  "badsimpletag": [
    [
      "tests/template_tests/templatetags/bad_tag.py",
      [
        "badsimpletag"
      ]
    ]
  ],
  "make_data_div": [
    [
      "tests/template_tests/templatetags/custom.py",
      [
        "make_data_div"
      ]
    ]
  ],
  "context_stack_length": [
    [
      "tests/template_tests/templatetags/custom.py",
      [
        "context_stack_length"
      ]
    ]
  ],
  "no_params": [
    [
      "tests/template_tests/templatetags/custom.py",
      [
        "no_params"
      ]
    ]
  ],
  "one_param": [
    [
      "tests/template_tests/templatetags/custom.py",
      [
        "one_param"
      ]
    ]
  ],
  "explicit_no_context": [
    [
      "tests/template_tests/templatetags/custom.py",
      [
        "explicit_no_context"
      ]
    ]
  ],
  "no_params_with_context": [
    [
      "tests/template_tests/templatetags/custom.py",
      [
        "no_params_with_context"
      ]
    ]
  ],
  "params_and_context": [
    [
      "tests/template_tests/templatetags/custom.py",
      [
        "params_and_context"
      ]
    ]
  ],
  "simple_two_params": [
    [
      "tests/template_tests/templatetags/custom.py",
      [
        "simple_two_params"
      ]
    ]
  ],
  "simple_keyword_only_param": [
    [
      "tests/template_tests/templatetags/custom.py",
      [
        "simple_keyword_only_param"
      ]
    ]
  ],
  "simple_keyword_only_default": [
    [
      "tests/template_tests/templatetags/custom.py",
      [
        "simple_keyword_only_default"
      ]
    ]
  ],
  "simple_one_default": [
    [
      "tests/template_tests/templatetags/custom.py",
      [
        "simple_one_default"
      ]
    ]
  ],
  "simple_unlimited_args": [
    [
      "tests/template_tests/templatetags/custom.py",
      [
        "simple_unlimited_args"
      ]
    ]
  ],
  "simple_only_unlimited_args": [
    [
      "tests/template_tests/templatetags/custom.py",
      [
        "simple_only_unlimited_args"
      ]
    ]
  ],
  "simple_unlimited_args_kwargs": [
    [
      "tests/template_tests/templatetags/custom.py",
      [
        "simple_unlimited_args_kwargs"
      ]
    ]
  ],
  "simple_tag_without_context_parameter": [
    [
      "tests/template_tests/templatetags/custom.py",
      [
        "simple_tag_without_context_parameter"
      ]
    ]
  ],
  "escape_naive": [
    [
      "tests/template_tests/templatetags/custom.py",
      [
        "escape_naive"
      ]
    ]
  ],
  "escape_explicit": [
    [
      "tests/template_tests/templatetags/custom.py",
      [
        "escape_explicit"
      ]
    ]
  ],
  "escape_format_html": [
    [
      "tests/template_tests/templatetags/custom.py",
      [
        "escape_format_html"
      ]
    ]
  ],
  "current_app": [
    [
      "tests/template_tests/templatetags/custom.py",
      [
        "current_app"
      ]
    ]
  ],
  "use_l10n": [
    [
      "tests/template_tests/templatetags/custom.py",
      [
        "use_l10n"
      ]
    ]
  ],
  "minustwo_overridden_name": [
    [
      "tests/template_tests/templatetags/custom.py",
      [
        "minustwo_overridden_name"
      ]
    ]
  ],
  "counter": [
    [
      "tests/template_tests/templatetags/custom.py",
      [
        "counter"
      ]
    ]
  ],
  "inclusion_no_params": [
    [
      "tests/template_tests/templatetags/inclusion.py",
      [
        "inclusion_no_params"
      ]
    ]
  ],
  "inclusion_no_params_from_template": [
    [
      "tests/template_tests/templatetags/inclusion.py",
      [
        "inclusion_no_params_from_template"
      ]
    ]
  ],
  "inclusion_one_param": [
    [
      "tests/template_tests/templatetags/inclusion.py",
      [
        "inclusion_one_param"
      ]
    ]
  ],
  "inclusion_one_param_from_template": [
    [
      "tests/template_tests/templatetags/inclusion.py",
      [
        "inclusion_one_param_from_template"
      ]
    ]
  ],
  "inclusion_explicit_no_context": [
    [
      "tests/template_tests/templatetags/inclusion.py",
      [
        "inclusion_explicit_no_context"
      ]
    ]
  ],
  "inclusion_explicit_no_context_from_template": [
    [
      "tests/template_tests/templatetags/inclusion.py",
      [
        "inclusion_explicit_no_context_from_template"
      ]
    ]
  ],
  "inclusion_no_params_with_context": [
    [
      "tests/template_tests/templatetags/inclusion.py",
      [
        "inclusion_no_params_with_context"
      ]
    ]
  ],
  "inclusion_no_params_with_context_from_template": [
    [
      "tests/template_tests/templatetags/inclusion.py",
      [
        "inclusion_no_params_with_context_from_template"
      ]
    ]
  ],
  "inclusion_params_and_context": [
    [
      "tests/template_tests/templatetags/inclusion.py",
      [
        "inclusion_params_and_context"
      ]
    ]
  ],
  "inclusion_params_and_context_from_template": [
    [
      "tests/template_tests/templatetags/inclusion.py",
      [
        "inclusion_params_and_context_from_template"
      ]
    ]
  ],
  "inclusion_two_params": [
    [
      "tests/template_tests/templatetags/inclusion.py",
      [
        "inclusion_two_params"
      ]
    ]
  ],
  "inclusion_two_params_from_template": [
    [
      "tests/template_tests/templatetags/inclusion.py",
      [
        "inclusion_two_params_from_template"
      ]
    ]
  ],
  "inclusion_one_default": [
    [
      "tests/template_tests/templatetags/inclusion.py",
      [
        "inclusion_one_default"
      ]
    ]
  ],
  "inclusion_keyword_only_default": [
    [
      "tests/template_tests/templatetags/inclusion.py",
      [
        "inclusion_keyword_only_default"
      ]
    ]
  ],
  "inclusion_one_default_from_template": [
    [
      "tests/template_tests/templatetags/inclusion.py",
      [
        "inclusion_one_default_from_template"
      ]
    ]
  ],
  "inclusion_unlimited_args": [
    [
      "tests/template_tests/templatetags/inclusion.py",
      [
        "inclusion_unlimited_args"
      ]
    ]
  ],
  "inclusion_unlimited_args_from_template": [
    [
      "tests/template_tests/templatetags/inclusion.py",
      [
        "inclusion_unlimited_args_from_template"
      ]
    ]
  ],
  "inclusion_only_unlimited_args": [
    [
      "tests/template_tests/templatetags/inclusion.py",
      [
        "inclusion_only_unlimited_args"
      ]
    ]
  ],
  "inclusion_only_unlimited_args_from_template": [
    [
      "tests/template_tests/templatetags/inclusion.py",
      [
        "inclusion_only_unlimited_args_from_template"
      ]
    ]
  ],
  "inclusion_tag_use_l10n": [
    [
      "tests/template_tests/templatetags/inclusion.py",
      [
        "inclusion_tag_use_l10n"
      ]
    ]
  ],
  "inclusion_unlimited_args_kwargs": [
    [
      "tests/template_tests/templatetags/inclusion.py",
      [
        "inclusion_unlimited_args_kwargs"
      ]
    ]
  ],
  "inclusion_tag_without_context_parameter": [
    [
      "tests/template_tests/templatetags/inclusion.py",
      [
        "inclusion_tag_without_context_parameter"
      ]
    ]
  ],
  "inclusion_extends1": [
    [
      "tests/template_tests/templatetags/inclusion.py",
      [
        "inclusion_extends1"
      ]
    ]
  ],
  "inclusion_extends2": [
    [
      "tests/template_tests/templatetags/inclusion.py",
      [
        "inclusion_extends2"
      ]
    ]
  ],
  "echo2": [
    [
      "tests/template_tests/templatetags/subpackage/echo.py",
      [
        "echo2"
      ]
    ]
  ],
  "echo": [
    [
      "tests/template_tests/templatetags/testtags.py",
      [
        "echo"
      ]
    ]
  ],
  "test_lazy_template_string": [
    [
      "tests/template_tests/test_base.py",
      [
        "TemplateTests",
        "test_lazy_template_string"
      ]
    ]
  ],
  "test_integer_literals": [
    [
      "tests/template_tests/test_base.py",
      [
        "VariableTests",
        "test_integer_literals"
      ]
    ]
  ],
  "test_nonliterals": [
    [
      "tests/template_tests/test_base.py",
      [
        "VariableTests",
        "test_nonliterals"
      ]
    ]
  ],
  "test_alters_data": [
    [
      "tests/template_tests/test_callables.py",
      [
        "CallableVariablesTests",
        "test_alters_data"
      ]
    ]
  ],
  "test_do_not_call": [
    [
      "tests/template_tests/test_callables.py",
      [
        "CallableVariablesTests",
        "test_do_not_call"
      ]
    ]
  ],
  "test_do_not_call_and_alters_data": [
    [
      "tests/template_tests/test_callables.py",
      [
        "CallableVariablesTests",
        "test_do_not_call_and_alters_data"
      ]
    ]
  ],
  "test_push_context_manager": [
    [
      "tests/template_tests/test_context.py",
      [
        "ContextTests",
        "test_push_context_manager"
      ]
    ]
  ],
  "test_update_context_manager": [
    [
      "tests/template_tests/test_context.py",
      [
        "ContextTests",
        "test_update_context_manager"
      ]
    ]
  ],
  "test_push_context_manager_with_context_object": [
    [
      "tests/template_tests/test_context.py",
      [
        "ContextTests",
        "test_push_context_manager_with_context_object"
      ]
    ]
  ],
  "test_update_context_manager_with_context_object": [
    [
      "tests/template_tests/test_context.py",
      [
        "ContextTests",
        "test_update_context_manager_with_context_object"
      ]
    ]
  ],
  "test_push_proper_layering": [
    [
      "tests/template_tests/test_context.py",
      [
        "ContextTests",
        "test_push_proper_layering"
      ]
    ]
  ],
  "test_update_proper_layering": [
    [
      "tests/template_tests/test_context.py",
      [
        "ContextTests",
        "test_update_proper_layering"
      ]
    ]
  ],
  "test_resolve_on_context_method": [
    [
      "tests/template_tests/test_context.py",
      [
        "ContextTests",
        "test_resolve_on_context_method"
      ]
    ]
  ],
  "test_render_context": [
    [
      "tests/template_tests/test_context.py",
      [
        "ContextTests",
        "test_render_context"
      ]
    ]
  ],
  "test_flatten_context": [
    [
      "tests/template_tests/test_context.py",
      [
        "ContextTests",
        "test_flatten_context"
      ]
    ]
  ],
  "test_flatten_context_with_context": [
    [
      "tests/template_tests/test_context.py",
      [
        "ContextTests",
        "test_flatten_context_with_context"
      ]
    ]
  ],
  "test_context_comparable": [
    [
      "tests/template_tests/test_context.py",
      [
        "ContextTests",
        "test_context_comparable"
      ]
    ],
    [
      "tests/template_tests/test_context.py",
      [
        "RequestContextTests",
        "test_context_comparable"
      ]
    ]
  ],
  "test_copy_request_context_twice": [
    [
      "tests/template_tests/test_context.py",
      [
        "ContextTests",
        "test_copy_request_context_twice"
      ]
    ]
  ],
  "test_set_upward": [
    [
      "tests/template_tests/test_context.py",
      [
        "ContextTests",
        "test_set_upward"
      ]
    ]
  ],
  "test_set_upward_empty_context": [
    [
      "tests/template_tests/test_context.py",
      [
        "ContextTests",
        "test_set_upward_empty_context"
      ]
    ]
  ],
  "test_set_upward_with_push": [
    [
      "tests/template_tests/test_context.py",
      [
        "ContextTests",
        "test_set_upward_with_push"
      ]
    ]
  ],
  "test_set_upward_with_push_no_match": [
    [
      "tests/template_tests/test_context.py",
      [
        "ContextTests",
        "test_set_upward_with_push_no_match"
      ]
    ]
  ],
  "test_include_only": [
    [
      "tests/template_tests/test_context.py",
      [
        "RequestContextTests",
        "test_include_only"
      ]
    ]
  ],
  "test_stack_size": [
    [
      "tests/template_tests/test_context.py",
      [
        "RequestContextTests",
        "test_stack_size"
      ]
    ]
  ],
  "test_modify_context_and_render": [
    [
      "tests/template_tests/test_context.py",
      [
        "RequestContextTests",
        "test_modify_context_and_render"
      ]
    ]
  ],
  "test_decorated_filter": [
    [
      "tests/template_tests/test_custom.py",
      [
        "CustomFilterTests",
        "test_decorated_filter"
      ]
    ]
  ],
  "verify_tag": [
    [
      "tests/template_tests/test_custom.py",
      [
        "TagTestCase",
        "verify_tag"
      ]
    ]
  ],
  "test_simple_tags": [
    [
      "tests/template_tests/test_custom.py",
      [
        "SimpleTagTests",
        "test_simple_tags"
      ]
    ]
  ],
  "test_simple_tag_errors": [
    [
      "tests/template_tests/test_custom.py",
      [
        "SimpleTagTests",
        "test_simple_tag_errors"
      ]
    ]
  ],
  "test_simple_tag_escaping_autoescape_off": [
    [
      "tests/template_tests/test_custom.py",
      [
        "SimpleTagTests",
        "test_simple_tag_escaping_autoescape_off"
      ]
    ]
  ],
  "test_simple_tag_naive_escaping": [
    [
      "tests/template_tests/test_custom.py",
      [
        "SimpleTagTests",
        "test_simple_tag_naive_escaping"
      ]
    ]
  ],
  "test_simple_tag_explicit_escaping": [
    [
      "tests/template_tests/test_custom.py",
      [
        "SimpleTagTests",
        "test_simple_tag_explicit_escaping"
      ]
    ]
  ],
  "test_simple_tag_format_html_escaping": [
    [
      "tests/template_tests/test_custom.py",
      [
        "SimpleTagTests",
        "test_simple_tag_format_html_escaping"
      ]
    ]
  ],
  "test_simple_tag_registration": [
    [
      "tests/template_tests/test_custom.py",
      [
        "SimpleTagTests",
        "test_simple_tag_registration"
      ]
    ]
  ],
  "test_simple_tag_missing_context": [
    [
      "tests/template_tests/test_custom.py",
      [
        "SimpleTagTests",
        "test_simple_tag_missing_context"
      ]
    ]
  ],
  "test_inclusion_tags": [
    [
      "tests/template_tests/test_custom.py",
      [
        "InclusionTagTests",
        "test_inclusion_tags"
      ]
    ]
  ],
  "test_inclusion_tag_errors": [
    [
      "tests/template_tests/test_custom.py",
      [
        "InclusionTagTests",
        "test_inclusion_tag_errors"
      ]
    ]
  ],
  "test_include_tag_missing_context": [
    [
      "tests/template_tests/test_custom.py",
      [
        "InclusionTagTests",
        "test_include_tag_missing_context"
      ]
    ]
  ],
  "test_inclusion_tags_from_template": [
    [
      "tests/template_tests/test_custom.py",
      [
        "InclusionTagTests",
        "test_inclusion_tags_from_template"
      ]
    ]
  ],
  "test_inclusion_tag_registration": [
    [
      "tests/template_tests/test_custom.py",
      [
        "InclusionTagTests",
        "test_inclusion_tag_registration"
      ]
    ]
  ],
  "test_15070_use_l10n": [
    [
      "tests/template_tests/test_custom.py",
      [
        "InclusionTagTests",
        "test_15070_use_l10n"
      ]
    ]
  ],
  "test_no_render_side_effect": [
    [
      "tests/template_tests/test_custom.py",
      [
        "InclusionTagTests",
        "test_no_render_side_effect"
      ]
    ]
  ],
  "test_render_context_is_cleared": [
    [
      "tests/template_tests/test_custom.py",
      [
        "InclusionTagTests",
        "test_render_context_is_cleared"
      ]
    ]
  ],
  "test_load_error": [
    [
      "tests/template_tests/test_custom.py",
      [
        "TemplateTagLoadingTests",
        "test_load_error"
      ]
    ]
  ],
  "test_load_error_egg": [
    [
      "tests/template_tests/test_custom.py",
      [
        "TemplateTagLoadingTests",
        "test_load_error_egg"
      ]
    ]
  ],
  "test_load_working_egg": [
    [
      "tests/template_tests/test_custom.py",
      [
        "TemplateTagLoadingTests",
        "test_load_working_egg"
      ]
    ]
  ],
  "test_load_annotated_function": [
    [
      "tests/template_tests/test_custom.py",
      [
        "TemplateTagLoadingTests",
        "test_load_annotated_function"
      ]
    ]
  ],
  "test_basic_context": [
    [
      "tests/template_tests/test_engine.py",
      [
        "RenderToStringTest",
        "test_basic_context"
      ]
    ]
  ],
  "test_no_engines_configured": [
    [
      "tests/template_tests/test_engine.py",
      [
        "GetDefaultTests",
        "test_no_engines_configured"
      ]
    ]
  ],
  "test_single_engine_configured": [
    [
      "tests/template_tests/test_engine.py",
      [
        "GetDefaultTests",
        "test_single_engine_configured"
      ]
    ]
  ],
  "test_multiple_engines_configured": [
    [
      "tests/template_tests/test_engine.py",
      [
        "GetDefaultTests",
        "test_multiple_engines_configured"
      ]
    ]
  ],
  "test_loader_priority": [
    [
      "tests/template_tests/test_engine.py",
      [
        "LoaderTests",
        "test_loader_priority"
      ]
    ]
  ],
  "test_cached_loader_priority": [
    [
      "tests/template_tests/test_engine.py",
      [
        "LoaderTests",
        "test_cached_loader_priority"
      ]
    ]
  ],
  "test_normal_extend": [
    [
      "tests/template_tests/test_extends.py",
      [
        "ExtendsBehaviorTests",
        "test_normal_extend"
      ]
    ],
    [
      "tests/template_tests/test_extends_relative.py",
      [
        "ExtendsRelativeBehaviorTests",
        "test_normal_extend"
      ]
    ]
  ],
  "test_extend_recursive": [
    [
      "tests/template_tests/test_extends.py",
      [
        "ExtendsBehaviorTests",
        "test_extend_recursive"
      ]
    ]
  ],
  "test_extend_missing": [
    [
      "tests/template_tests/test_extends.py",
      [
        "ExtendsBehaviorTests",
        "test_extend_missing"
      ]
    ]
  ],
  "test_recursive_multiple_loaders": [
    [
      "tests/template_tests/test_extends.py",
      [
        "ExtendsBehaviorTests",
        "test_recursive_multiple_loaders"
      ]
    ]
  ],
  "test_extend_self_error": [
    [
      "tests/template_tests/test_extends.py",
      [
        "ExtendsBehaviorTests",
        "test_extend_self_error"
      ]
    ]
  ],
  "test_extend_cached": [
    [
      "tests/template_tests/test_extends.py",
      [
        "ExtendsBehaviorTests",
        "test_extend_cached"
      ]
    ]
  ],
  "test_unique_history_per_loader": [
    [
      "tests/template_tests/test_extends.py",
      [
        "ExtendsBehaviorTests",
        "test_unique_history_per_loader"
      ]
    ]
  ],
  "test_block_override_in_extended_included_template": [
    [
      "tests/template_tests/test_extends.py",
      [
        "ExtendsBehaviorTests",
        "test_block_override_in_extended_included_template"
      ]
    ]
  ],
  "test_dir1_extend": [
    [
      "tests/template_tests/test_extends_relative.py",
      [
        "ExtendsRelativeBehaviorTests",
        "test_dir1_extend"
      ]
    ]
  ],
  "test_dir1_extend1": [
    [
      "tests/template_tests/test_extends_relative.py",
      [
        "ExtendsRelativeBehaviorTests",
        "test_dir1_extend1"
      ]
    ]
  ],
  "test_dir1_extend2": [
    [
      "tests/template_tests/test_extends_relative.py",
      [
        "ExtendsRelativeBehaviorTests",
        "test_dir1_extend2"
      ]
    ]
  ],
  "test_dir1_extend3": [
    [
      "tests/template_tests/test_extends_relative.py",
      [
        "ExtendsRelativeBehaviorTests",
        "test_dir1_extend3"
      ]
    ]
  ],
  "test_dir2_extend": [
    [
      "tests/template_tests/test_extends_relative.py",
      [
        "ExtendsRelativeBehaviorTests",
        "test_dir2_extend"
      ]
    ]
  ],
  "test_extend_error": [
    [
      "tests/template_tests/test_extends_relative.py",
      [
        "ExtendsRelativeBehaviorTests",
        "test_extend_error"
      ]
    ]
  ],
  "test_normal_include": [
    [
      "tests/template_tests/test_extends_relative.py",
      [
        "IncludeRelativeBehaviorTests",
        "test_normal_include"
      ]
    ]
  ],
  "test_dir2_include": [
    [
      "tests/template_tests/test_extends_relative.py",
      [
        "IncludeRelativeBehaviorTests",
        "test_dir2_include"
      ]
    ]
  ],
  "test_include_error": [
    [
      "tests/template_tests/test_extends_relative.py",
      [
        "IncludeRelativeBehaviorTests",
        "test_include_error"
      ]
    ]
  ],
  "test_mixing1": [
    [
      "tests/template_tests/test_extends_relative.py",
      [
        "ExtendsMixedBehaviorTests",
        "test_mixing1"
      ]
    ]
  ],
  "test_mixing2": [
    [
      "tests/template_tests/test_extends_relative.py",
      [
        "ExtendsMixedBehaviorTests",
        "test_mixing2"
      ]
    ]
  ],
  "test_mixing_loop": [
    [
      "tests/template_tests/test_extends_relative.py",
      [
        "ExtendsMixedBehaviorTests",
        "test_mixing_loop"
      ]
    ]
  ],
  "test_filter_parens": [
    [
      "tests/template_tests/test_library.py",
      [
        "FilterRegistrationTests",
        "test_filter_parens"
      ]
    ]
  ],
  "test_filter_name_arg": [
    [
      "tests/template_tests/test_library.py",
      [
        "FilterRegistrationTests",
        "test_filter_name_arg"
      ]
    ]
  ],
  "test_filter_name_kwarg": [
    [
      "tests/template_tests/test_library.py",
      [
        "FilterRegistrationTests",
        "test_filter_name_kwarg"
      ]
    ]
  ],
  "test_filter_call": [
    [
      "tests/template_tests/test_library.py",
      [
        "FilterRegistrationTests",
        "test_filter_call"
      ]
    ]
  ],
  "test_filter_invalid": [
    [
      "tests/template_tests/test_library.py",
      [
        "FilterRegistrationTests",
        "test_filter_invalid"
      ]
    ]
  ],
  "test_inclusion_tag": [
    [
      "tests/template_tests/test_library.py",
      [
        "InclusionTagRegistrationTests",
        "test_inclusion_tag"
      ]
    ]
  ],
  "test_inclusion_tag_name": [
    [
      "tests/template_tests/test_library.py",
      [
        "InclusionTagRegistrationTests",
        "test_inclusion_tag_name"
      ]
    ]
  ],
  "test_inclusion_tag_wrapped": [
    [
      "tests/template_tests/test_library.py",
      [
        "InclusionTagRegistrationTests",
        "test_inclusion_tag_wrapped"
      ]
    ]
  ],
  "test_simple_tag": [
    [
      "tests/template_tests/test_library.py",
      [
        "SimpleTagRegistrationTests",
        "test_simple_tag"
      ]
    ]
  ],
  "test_simple_tag_parens": [
    [
      "tests/template_tests/test_library.py",
      [
        "SimpleTagRegistrationTests",
        "test_simple_tag_parens"
      ]
    ]
  ],
  "test_simple_tag_name_kwarg": [
    [
      "tests/template_tests/test_library.py",
      [
        "SimpleTagRegistrationTests",
        "test_simple_tag_name_kwarg"
      ]
    ]
  ],
  "test_simple_tag_invalid": [
    [
      "tests/template_tests/test_library.py",
      [
        "SimpleTagRegistrationTests",
        "test_simple_tag_invalid"
      ]
    ]
  ],
  "test_simple_tag_wrapped": [
    [
      "tests/template_tests/test_library.py",
      [
        "SimpleTagRegistrationTests",
        "test_simple_tag_wrapped"
      ]
    ]
  ],
  "test_tag": [
    [
      "tests/template_tests/test_library.py",
      [
        "TagRegistrationTests",
        "test_tag"
      ]
    ]
  ],
  "test_tag_parens": [
    [
      "tests/template_tests/test_library.py",
      [
        "TagRegistrationTests",
        "test_tag_parens"
      ]
    ]
  ],
  "test_tag_name_arg": [
    [
      "tests/template_tests/test_library.py",
      [
        "TagRegistrationTests",
        "test_tag_name_arg"
      ]
    ]
  ],
  "test_tag_name_kwarg": [
    [
      "tests/template_tests/test_library.py",
      [
        "TagRegistrationTests",
        "test_tag_name_kwarg"
      ]
    ]
  ],
  "test_tag_call": [
    [
      "tests/template_tests/test_library.py",
      [
        "TagRegistrationTests",
        "test_tag_call"
      ]
    ]
  ],
  "test_tag_invalid": [
    [
      "tests/template_tests/test_library.py",
      [
        "TagRegistrationTests",
        "test_tag_invalid"
      ]
    ]
  ],
  "test_get_template_missing_debug_off": [
    [
      "tests/template_tests/test_loaders.py",
      [
        "CachedLoaderTests",
        "test_get_template_missing_debug_off"
      ]
    ]
  ],
  "test_get_template_missing_debug_on": [
    [
      "tests/template_tests/test_loaders.py",
      [
        "CachedLoaderTests",
        "test_get_template_missing_debug_on"
      ]
    ]
  ],
  "test_cached_exception_no_traceback": [
    [
      "tests/template_tests/test_loaders.py",
      [
        "CachedLoaderTests",
        "test_cached_exception_no_traceback"
      ]
    ]
  ],
  "test_template_name_leading_dash_caching": [
    [
      "tests/template_tests/test_loaders.py",
      [
        "CachedLoaderTests",
        "test_template_name_leading_dash_caching"
      ]
    ]
  ],
  "test_template_name_lazy_string": [
    [
      "tests/template_tests/test_loaders.py",
      [
        "CachedLoaderTests",
        "test_template_name_lazy_string"
      ]
    ]
  ],
  "set_dirs": [
    [
      "tests/template_tests/test_loaders.py",
      [
        "FileSystemLoaderTests",
        "set_dirs"
      ]
    ]
  ],
  "source_checker": [
    [
      "tests/template_tests/test_loaders.py",
      [
        "FileSystemLoaderTests",
        "source_checker"
      ]
    ]
  ],
  "test_loaders_dirs": [
    [
      "tests/template_tests/test_loaders.py",
      [
        "FileSystemLoaderTests",
        "test_loaders_dirs"
      ]
    ]
  ],
  "test_loaders_dirs_empty": [
    [
      "tests/template_tests/test_loaders.py",
      [
        "FileSystemLoaderTests",
        "test_loaders_dirs_empty"
      ]
    ]
  ],
  "test_directory_security": [
    [
      "tests/template_tests/test_loaders.py",
      [
        "FileSystemLoaderTests",
        "test_directory_security"
      ]
    ]
  ],
  "test_unicode_template_name": [
    [
      "tests/template_tests/test_loaders.py",
      [
        "FileSystemLoaderTests",
        "test_unicode_template_name"
      ]
    ]
  ],
  "test_bytestring": [
    [
      "tests/template_tests/test_loaders.py",
      [
        "FileSystemLoaderTests",
        "test_bytestring"
      ]
    ]
  ],
  "test_unicode_dir_name": [
    [
      "tests/template_tests/test_loaders.py",
      [
        "FileSystemLoaderTests",
        "test_unicode_dir_name"
      ]
    ]
  ],
  "test_case_sensitivity": [
    [
      "tests/template_tests/test_loaders.py",
      [
        "FileSystemLoaderTests",
        "test_case_sensitivity"
      ]
    ]
  ],
  "test_file_does_not_exist": [
    [
      "tests/template_tests/test_loaders.py",
      [
        "FileSystemLoaderTests",
        "test_file_does_not_exist"
      ]
    ]
  ],
  "test_permissions_error": [
    [
      "tests/template_tests/test_loaders.py",
      [
        "FileSystemLoaderTests",
        "test_permissions_error"
      ]
    ]
  ],
  "test_notafile_error": [
    [
      "tests/template_tests/test_loaders.py",
      [
        "FileSystemLoaderTests",
        "test_notafile_error"
      ]
    ]
  ],
  "test_not_installed": [
    [
      "tests/template_tests/test_loaders.py",
      [
        "AppDirectoriesLoaderTests",
        "test_not_installed"
      ]
    ]
  ],
  "template": [
    [
      "tests/template_tests/test_logging.py",
      [
        "VariableResolveLoggingTests",
        "test_log_on_variable_does_not_exist_silent",
        "TestObject",
        "template"
      ]
    ]
  ],
  "article": [
    [
      "tests/template_tests/test_logging.py",
      [
        "VariableResolveLoggingTests",
        "test_log_on_variable_does_not_exist_silent",
        "TestObject",
        "article"
      ]
    ]
  ],
  "test_log_on_variable_does_not_exist_silent": [
    [
      "tests/template_tests/test_logging.py",
      [
        "VariableResolveLoggingTests",
        "test_log_on_variable_does_not_exist_silent"
      ]
    ]
  ],
  "test_log_on_variable_does_not_exist_not_silent": [
    [
      "tests/template_tests/test_logging.py",
      [
        "VariableResolveLoggingTests",
        "test_log_on_variable_does_not_exist_not_silent"
      ]
    ]
  ],
  "test_no_log_when_variable_exists": [
    [
      "tests/template_tests/test_logging.py",
      [
        "VariableResolveLoggingTests",
        "test_no_log_when_variable_exists"
      ]
    ]
  ],
  "test_for": [
    [
      "tests/template_tests/test_nodelist.py",
      [
        "NodelistTest",
        "test_for"
      ]
    ]
  ],
  "test_if": [
    [
      "tests/template_tests/test_nodelist.py",
      [
        "NodelistTest",
        "test_if"
      ]
    ]
  ],
  "test_ifequal": [
    [
      "tests/template_tests/test_nodelist.py",
      [
        "NodelistTest",
        "test_ifequal"
      ]
    ]
  ],
  "test_ifchanged": [
    [
      "tests/template_tests/test_nodelist.py",
      [
        "NodelistTest",
        "test_ifchanged"
      ]
    ]
  ],
  "test_textnode_repr": [
    [
      "tests/template_tests/test_nodelist.py",
      [
        "TextNodeTest",
        "test_textnode_repr"
      ]
    ]
  ],
  "test_correct_exception_index": [
    [
      "tests/template_tests/test_nodelist.py",
      [
        "ErrorIndexTest",
        "test_correct_exception_index"
      ]
    ]
  ],
  "test_origin_compares_equal": [
    [
      "tests/template_tests/test_origin.py",
      [
        "OriginTestCase",
        "test_origin_compares_equal"
      ]
    ]
  ],
  "test_origin_compares_not_equal": [
    [
      "tests/template_tests/test_origin.py",
      [
        "OriginTestCase",
        "test_origin_compares_not_equal"
      ]
    ]
  ],
  "test_token_smart_split": [
    [
      "tests/template_tests/test_parser.py",
      [
        "ParserTests",
        "test_token_smart_split"
      ]
    ]
  ],
  "test_filter_parsing": [
    [
      "tests/template_tests/test_parser.py",
      [
        "ParserTests",
        "test_filter_parsing"
      ]
    ]
  ],
  "test_variable_parsing": [
    [
      "tests/template_tests/test_parser.py",
      [
        "ParserTests",
        "test_variable_parsing"
      ]
    ]
  ],
  "no_arguments": [
    [
      "tests/template_tests/test_parser.py",
      [
        "ParserTests",
        "test_filter_args_count",
        "no_arguments"
      ]
    ],
    [
      "tests/utils_tests/test_inspect.py",
      [
        "Person",
        "no_arguments"
      ]
    ]
  ],
  "one_argument": [
    [
      "tests/template_tests/test_parser.py",
      [
        "ParserTests",
        "test_filter_args_count",
        "one_argument"
      ]
    ],
    [
      "tests/utils_tests/test_inspect.py",
      [
        "Person",
        "one_argument"
      ]
    ]
  ],
  "one_opt_argument": [
    [
      "tests/template_tests/test_parser.py",
      [
        "ParserTests",
        "test_filter_args_count",
        "one_opt_argument"
      ]
    ]
  ],
  "two_arguments": [
    [
      "tests/template_tests/test_parser.py",
      [
        "ParserTests",
        "test_filter_args_count",
        "two_arguments"
      ]
    ]
  ],
  "two_one_opt_arg": [
    [
      "tests/template_tests/test_parser.py",
      [
        "ParserTests",
        "test_filter_args_count",
        "two_one_opt_arg"
      ]
    ]
  ],
  "test_filter_args_count": [
    [
      "tests/template_tests/test_parser.py",
      [
        "ParserTests",
        "test_filter_args_count"
      ]
    ]
  ],
  "test_processor": [
    [
      "tests/template_tests/test_response.py",
      [
        "test_processor"
      ]
    ]
  ],
  "custom_urlconf_middleware": [
    [
      "tests/template_tests/test_response.py",
      [
        "custom_urlconf_middleware"
      ]
    ]
  ],
  "test_template_resolving": [
    [
      "tests/template_tests/test_response.py",
      [
        "SimpleTemplateResponseTest",
        "test_template_resolving"
      ]
    ]
  ],
  "test_explicit_baking": [
    [
      "tests/template_tests/test_response.py",
      [
        "SimpleTemplateResponseTest",
        "test_explicit_baking"
      ]
    ]
  ],
  "test_iteration_unrendered": [
    [
      "tests/template_tests/test_response.py",
      [
        "SimpleTemplateResponseTest",
        "test_iteration_unrendered"
      ]
    ]
  ],
  "test_iteration_rendered": [
    [
      "tests/template_tests/test_response.py",
      [
        "SimpleTemplateResponseTest",
        "test_iteration_rendered"
      ]
    ]
  ],
  "test_content_access_unrendered": [
    [
      "tests/template_tests/test_response.py",
      [
        "SimpleTemplateResponseTest",
        "test_content_access_unrendered"
      ]
    ]
  ],
  "test_content_access_rendered": [
    [
      "tests/template_tests/test_response.py",
      [
        "SimpleTemplateResponseTest",
        "test_content_access_rendered"
      ]
    ]
  ],
  "test_set_content": [
    [
      "tests/template_tests/test_response.py",
      [
        "SimpleTemplateResponseTest",
        "test_set_content"
      ]
    ]
  ],
  "test_dict_context": [
    [
      "tests/template_tests/test_response.py",
      [
        "SimpleTemplateResponseTest",
        "test_dict_context"
      ]
    ]
  ],
  "test_using": [
    [
      "tests/template_tests/test_response.py",
      [
        "SimpleTemplateResponseTest",
        "test_using"
      ]
    ],
    [
      "tests/template_tests/test_response.py",
      [
        "TemplateResponseTest",
        "test_using"
      ]
    ]
  ],
  "test_post_callbacks": [
    [
      "tests/template_tests/test_response.py",
      [
        "SimpleTemplateResponseTest",
        "test_post_callbacks"
      ]
    ]
  ],
  "test_repickling": [
    [
      "tests/template_tests/test_response.py",
      [
        "SimpleTemplateResponseTest",
        "test_repickling"
      ]
    ],
    [
      "tests/template_tests/test_response.py",
      [
        "TemplateResponseTest",
        "test_repickling"
      ]
    ]
  ],
  "test_pickling_cookie": [
    [
      "tests/template_tests/test_response.py",
      [
        "SimpleTemplateResponseTest",
        "test_pickling_cookie"
      ]
    ]
  ],
  "test_render_with_requestcontext": [
    [
      "tests/template_tests/test_response.py",
      [
        "TemplateResponseTest",
        "test_render_with_requestcontext"
      ]
    ]
  ],
  "test_context_processor_priority": [
    [
      "tests/template_tests/test_response.py",
      [
        "TemplateResponseTest",
        "test_context_processor_priority"
      ]
    ]
  ],
  "test_custom_urlconf": [
    [
      "tests/template_tests/test_response.py",
      [
        "CustomURLConfTest",
        "test_custom_urlconf"
      ]
    ]
  ],
  "test_middleware_caching": [
    [
      "tests/template_tests/test_response.py",
      [
        "CacheMiddlewareTest",
        "test_middleware_caching"
      ]
    ]
  ],
  "assertCalcEqual": [
    [
      "tests/template_tests/test_smartif.py",
      [
        "SmartIfTests",
        "assertCalcEqual"
      ]
    ]
  ],
  "test_not": [
    [
      "tests/template_tests/test_smartif.py",
      [
        "SmartIfTests",
        "test_not"
      ]
    ]
  ],
  "test_not_in": [
    [
      "tests/template_tests/test_smartif.py",
      [
        "SmartIfTests",
        "test_not_in"
      ]
    ]
  ],
  "test_string_origin": [
    [
      "tests/template_tests/tests.py",
      [
        "TemplateTests",
        "test_string_origin"
      ]
    ]
  ],
  "test_url_reverse_no_settings_module": [
    [
      "tests/template_tests/tests.py",
      [
        "TemplateTests",
        "test_url_reverse_no_settings_module"
      ]
    ]
  ],
  "test_url_reverse_view_name": [
    [
      "tests/template_tests/tests.py",
      [
        "TemplateTests",
        "test_url_reverse_view_name"
      ]
    ]
  ],
  "test_no_wrapped_exception": [
    [
      "tests/template_tests/tests.py",
      [
        "TemplateTests",
        "test_no_wrapped_exception"
      ]
    ]
  ],
  "test_invalid_block_suggestion": [
    [
      "tests/template_tests/tests.py",
      [
        "TemplateTests",
        "test_invalid_block_suggestion"
      ]
    ]
  ],
  "test_unknown_block_tag": [
    [
      "tests/template_tests/tests.py",
      [
        "TemplateTests",
        "test_unknown_block_tag"
      ]
    ]
  ],
  "test_compile_filter_expression_error": [
    [
      "tests/template_tests/tests.py",
      [
        "TemplateTests",
        "test_compile_filter_expression_error"
      ]
    ]
  ],
  "test_compile_tag_error": [
    [
      "tests/template_tests/tests.py",
      [
        "TemplateTests",
        "test_compile_tag_error"
      ]
    ]
  ],
  "test_compile_tag_error_27584": [
    [
      "tests/template_tests/tests.py",
      [
        "TemplateTests",
        "test_compile_tag_error_27584"
      ]
    ]
  ],
  "test_compile_tag_error_27956": [
    [
      "tests/template_tests/tests.py",
      [
        "TemplateTests",
        "test_compile_tag_error_27956"
      ]
    ]
  ],
  "test_super_errors": [
    [
      "tests/template_tests/tests.py",
      [
        "TemplateTests",
        "test_super_errors"
      ]
    ]
  ],
  "test_debug_tag_non_ascii": [
    [
      "tests/template_tests/tests.py",
      [
        "TemplateTests",
        "test_debug_tag_non_ascii"
      ]
    ]
  ],
  "test_extends_generic_template": [
    [
      "tests/template_tests/tests.py",
      [
        "TemplateTests",
        "test_extends_generic_template"
      ]
    ]
  ],
  "test_node_origin": [
    [
      "tests/template_tests/tests.py",
      [
        "TemplateTests",
        "test_node_origin"
      ]
    ]
  ],
  "method2": [
    [
      "tests/template_tests/utils.py",
      [
        "SomeClass",
        "method2"
      ]
    ]
  ],
  "method3": [
    [
      "tests/template_tests/utils.py",
      [
        "SomeClass",
        "method3"
      ]
    ]
  ],
  "method4": [
    [
      "tests/template_tests/utils.py",
      [
        "SomeClass",
        "method4"
      ]
    ]
  ],
  "method5": [
    [
      "tests/template_tests/utils.py",
      [
        "SomeClass",
        "method5"
      ]
    ]
  ],
  "silent_fail_attribute": [
    [
      "tests/template_tests/utils.py",
      [
        "SomeClass",
        "silent_fail_attribute"
      ]
    ]
  ],
  "noisy_fail_attribute": [
    [
      "tests/template_tests/utils.py",
      [
        "SomeClass",
        "noisy_fail_attribute"
      ]
    ]
  ],
  "attribute_error_attribute": [
    [
      "tests/template_tests/utils.py",
      [
        "SomeClass",
        "attribute_error_attribute"
      ]
    ]
  ],
  "type_error_attribute": [
    [
      "tests/template_tests/utils.py",
      [
        "SomeClass",
        "type_error_attribute"
      ]
    ]
  ],
  "is_true": [
    [
      "tests/template_tests/utils.py",
      [
        "TestObj",
        "is_true"
      ]
    ]
  ],
  "is_false": [
    [
      "tests/template_tests/utils.py",
      [
        "TestObj",
        "is_false"
      ]
    ]
  ],
  "is_bad": [
    [
      "tests/template_tests/utils.py",
      [
        "TestObj",
        "is_bad"
      ]
    ]
  ],
  "client_action": [
    [
      "tests/template_tests/views.py",
      [
        "client_action"
      ]
    ]
  ],
  "client2": [
    [
      "tests/template_tests/views.py",
      [
        "client2"
      ]
    ]
  ],
  "template_response_view": [
    [
      "tests/template_tests/views.py",
      [
        "template_response_view"
      ]
    ]
  ],
  "snark": [
    [
      "tests/template_tests/views.py",
      [
        "snark"
      ]
    ]
  ],
  "test_conditional_content_removal": [
    [
      "tests/test_client/test_conditional_content_removal.py",
      [
        "ConditionalContentTests",
        "test_conditional_content_removal"
      ]
    ]
  ],
  "test_write_after_read": [
    [
      "tests/test_client/test_fakepayload.py",
      [
        "FakePayloadTests",
        "test_write_after_read"
      ]
    ]
  ],
  "test_get_view": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_get_view"
      ]
    ]
  ],
  "test_query_string_encoding": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_query_string_encoding"
      ]
    ]
  ],
  "test_get_data_none": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_get_data_none"
      ]
    ]
  ],
  "test_get_post_view": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_get_post_view"
      ]
    ]
  ],
  "test_empty_post": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_empty_post"
      ]
    ]
  ],
  "test_post": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_post"
      ]
    ],
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestMethodTests",
        "test_post"
      ]
    ],
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestMethodStringDataTests",
        "test_post"
      ]
    ]
  ],
  "test_post_data_none": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_post_data_none"
      ]
    ]
  ],
  "test_json_serialization": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_json_serialization"
      ]
    ]
  ],
  "test_json_encoder_argument": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_json_encoder_argument"
      ]
    ]
  ],
  "test_put": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_put"
      ]
    ],
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestMethodTests",
        "test_put"
      ]
    ],
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestMethodStringDataTests",
        "test_put"
      ]
    ]
  ],
  "test_trace": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_trace"
      ]
    ],
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "SimpleLazyObjectTestCase",
        "test_trace"
      ]
    ]
  ],
  "test_response_headers": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_response_headers"
      ]
    ]
  ],
  "test_response_attached_request": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_response_attached_request"
      ]
    ]
  ],
  "test_response_resolver_match": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_response_resolver_match"
      ]
    ],
    [
      "tests/test_client/tests.py",
      [
        "AsyncClientTest",
        "test_response_resolver_match"
      ]
    ]
  ],
  "test_response_resolver_match_redirect_follow": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_response_resolver_match_redirect_follow"
      ]
    ]
  ],
  "test_response_resolver_match_regular_view": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_response_resolver_match_regular_view"
      ]
    ]
  ],
  "test_raw_post": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_raw_post"
      ]
    ]
  ],
  "test_insecure": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_insecure"
      ]
    ]
  ],
  "test_secure": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_secure"
      ]
    ]
  ],
  "test_redirect_with_query": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_redirect_with_query"
      ]
    ]
  ],
  "test_redirect_with_query_ordering": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_redirect_with_query_ordering"
      ]
    ]
  ],
  "test_redirect_to_strange_location": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_redirect_to_strange_location"
      ]
    ]
  ],
  "test_follow_redirect": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_follow_redirect"
      ]
    ]
  ],
  "test_follow_relative_redirect": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_follow_relative_redirect"
      ]
    ]
  ],
  "test_follow_relative_redirect_no_trailing_slash": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_follow_relative_redirect_no_trailing_slash"
      ]
    ]
  ],
  "test_follow_307_and_308_redirect": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_follow_307_and_308_redirect"
      ]
    ]
  ],
  "test_follow_307_and_308_preserves_post_data": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_follow_307_and_308_preserves_post_data"
      ]
    ]
  ],
  "test_follow_307_and_308_preserves_put_body": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_follow_307_and_308_preserves_put_body"
      ]
    ]
  ],
  "test_follow_307_and_308_preserves_get_params": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_follow_307_and_308_preserves_get_params"
      ]
    ]
  ],
  "test_redirect_http": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_redirect_http"
      ]
    ]
  ],
  "test_redirect_https": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_redirect_https"
      ]
    ]
  ],
  "test_notfound_response": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_notfound_response"
      ]
    ]
  ],
  "test_valid_form": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_valid_form"
      ]
    ]
  ],
  "test_valid_form_with_hints": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_valid_form_with_hints"
      ]
    ]
  ],
  "test_incomplete_data_form": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_incomplete_data_form"
      ]
    ]
  ],
  "test_form_error": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_form_error"
      ]
    ]
  ],
  "test_valid_form_with_template": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_valid_form_with_template"
      ]
    ]
  ],
  "test_incomplete_data_form_with_template": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_incomplete_data_form_with_template"
      ]
    ]
  ],
  "test_form_error_with_template": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_form_error_with_template"
      ]
    ]
  ],
  "test_unknown_page": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_unknown_page"
      ]
    ]
  ],
  "test_url_parameters": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_url_parameters"
      ]
    ]
  ],
  "test_view_with_login": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_view_with_login"
      ]
    ]
  ],
  "test_view_with_login_when_sessions_app_is_not_installed": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_view_with_login_when_sessions_app_is_not_installed"
      ]
    ]
  ],
  "test_view_with_force_login": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_view_with_force_login"
      ]
    ]
  ],
  "test_view_with_method_login": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_view_with_method_login"
      ]
    ]
  ],
  "test_view_with_method_force_login": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_view_with_method_force_login"
      ]
    ]
  ],
  "test_view_with_login_and_custom_redirect": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_view_with_login_and_custom_redirect"
      ]
    ]
  ],
  "test_view_with_force_login_and_custom_redirect": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_view_with_force_login_and_custom_redirect"
      ]
    ]
  ],
  "test_view_with_bad_login": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_view_with_bad_login"
      ]
    ]
  ],
  "test_view_with_inactive_login": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_view_with_inactive_login"
      ]
    ]
  ],
  "test_view_with_inactive_force_login": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_view_with_inactive_force_login"
      ]
    ]
  ],
  "test_logout_with_force_login": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_logout_with_force_login"
      ]
    ]
  ],
  "test_force_login_with_backend": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_force_login_with_backend"
      ]
    ]
  ],
  "test_force_login_without_backend": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_force_login_without_backend"
      ]
    ]
  ],
  "test_force_login_with_backend_missing_get_user": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_force_login_with_backend_missing_get_user"
      ]
    ]
  ],
  "test_logout_cookie_sessions": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_logout_cookie_sessions"
      ]
    ]
  ],
  "test_view_with_permissions": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_view_with_permissions"
      ]
    ]
  ],
  "test_view_with_permissions_exception": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_view_with_permissions_exception"
      ]
    ]
  ],
  "test_view_with_method_permissions": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_view_with_method_permissions"
      ]
    ]
  ],
  "test_external_redirect": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_external_redirect"
      ]
    ]
  ],
  "test_external_redirect_with_fetch_error_msg": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_external_redirect_with_fetch_error_msg"
      ]
    ]
  ],
  "test_session_modifying_view": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_session_modifying_view"
      ]
    ]
  ],
  "test_sessions_app_is_not_installed": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_sessions_app_is_not_installed"
      ]
    ]
  ],
  "test_session_engine_is_invalid": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_session_engine_is_invalid"
      ]
    ]
  ],
  "test_view_with_exception": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_view_with_exception"
      ]
    ]
  ],
  "test_exc_info": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_exc_info"
      ]
    ]
  ],
  "test_exc_info_none": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_exc_info_none"
      ]
    ]
  ],
  "test_mail_sending": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_mail_sending"
      ]
    ]
  ],
  "test_reverse_lazy_decodes": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_reverse_lazy_decodes"
      ]
    ]
  ],
  "test_relative_redirect": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_relative_redirect"
      ]
    ]
  ],
  "test_relative_redirect_no_trailing_slash": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_relative_redirect_no_trailing_slash"
      ]
    ]
  ],
  "test_mass_mail_sending": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_mass_mail_sending"
      ]
    ]
  ],
  "test_exception_following_nested_client_request": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_exception_following_nested_client_request"
      ]
    ]
  ],
  "test_response_raises_multi_arg_exception": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_response_raises_multi_arg_exception"
      ]
    ]
  ],
  "test_uploading_temp_file": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_uploading_temp_file"
      ]
    ]
  ],
  "test_uploading_named_temp_file": [
    [
      "tests/test_client/tests.py",
      [
        "ClientTest",
        "test_uploading_named_temp_file"
      ]
    ]
  ],
  "test_csrf_enabled_client": [
    [
      "tests/test_client/tests.py",
      [
        "CSRFEnabledClientTests",
        "test_csrf_enabled_client"
      ]
    ]
  ],
  "test_custom_test_client": [
    [
      "tests/test_client/tests.py",
      [
        "CustomTestClientTest",
        "test_custom_test_client"
      ]
    ]
  ],
  "_generic_view": [
    [
      "tests/test_client/tests.py",
      [
        "_generic_view"
      ]
    ]
  ],
  "test_request_factory": [
    [
      "tests/test_client/tests.py",
      [
        "RequestFactoryTest",
        "test_request_factory"
      ]
    ],
    [
      "tests/test_client/tests.py",
      [
        "AsyncRequestFactoryTest",
        "test_request_factory"
      ]
    ]
  ],
  "test_get_request_from_factory": [
    [
      "tests/test_client/tests.py",
      [
        "RequestFactoryTest",
        "test_get_request_from_factory"
      ]
    ]
  ],
  "test_trace_request_from_factory": [
    [
      "tests/test_client/tests.py",
      [
        "RequestFactoryTest",
        "test_trace_request_from_factory"
      ]
    ]
  ],
  "test_follow_parameter_not_implemented": [
    [
      "tests/test_client/tests.py",
      [
        "AsyncClientTest",
        "test_follow_parameter_not_implemented"
      ]
    ]
  ],
  "get_view": [
    [
      "tests/test_client/views.py",
      [
        "get_view"
      ]
    ],
    [
      "tests/test_client_regress/views.py",
      [
        "get_view"
      ]
    ]
  ],
  "async_get_view": [
    [
      "tests/test_client/views.py",
      [
        "async_get_view"
      ]
    ]
  ],
  "trace_view": [
    [
      "tests/test_client/views.py",
      [
        "trace_view"
      ]
    ]
  ],
  "put_view": [
    [
      "tests/test_client/views.py",
      [
        "put_view"
      ]
    ]
  ],
  "post_view": [
    [
      "tests/test_client/views.py",
      [
        "post_view"
      ]
    ]
  ],
  "json_view": [
    [
      "tests/test_client/views.py",
      [
        "json_view"
      ]
    ]
  ],
  "view_with_header": [
    [
      "tests/test_client/views.py",
      [
        "view_with_header"
      ]
    ]
  ],
  "raw_post_view": [
    [
      "tests/test_client/views.py",
      [
        "raw_post_view"
      ]
    ]
  ],
  "redirect_view": [
    [
      "tests/test_client/views.py",
      [
        "redirect_view"
      ]
    ]
  ],
  "_post_view_redirect": [
    [
      "tests/test_client/views.py",
      [
        "_post_view_redirect"
      ]
    ]
  ],
  "method_saving_307_redirect_view": [
    [
      "tests/test_client/views.py",
      [
        "method_saving_307_redirect_view"
      ]
    ]
  ],
  "method_saving_308_redirect_view": [
    [
      "tests/test_client/views.py",
      [
        "method_saving_308_redirect_view"
      ]
    ]
  ],
  "view_with_secure": [
    [
      "tests/test_client/views.py",
      [
        "view_with_secure"
      ]
    ]
  ],
  "double_redirect_view": [
    [
      "tests/test_client/views.py",
      [
        "double_redirect_view"
      ]
    ]
  ],
  "bad_view": [
    [
      "tests/test_client/views.py",
      [
        "bad_view"
      ]
    ],
    [
      "tests/urlpatterns_reverse/views.py",
      [
        "bad_view"
      ]
    ]
  ],
  "form_view": [
    [
      "tests/test_client/views.py",
      [
        "form_view"
      ]
    ]
  ],
  "form_view_with_template": [
    [
      "tests/test_client/views.py",
      [
        "form_view_with_template"
      ]
    ]
  ],
  "formset_view": [
    [
      "tests/test_client/views.py",
      [
        "formset_view"
      ]
    ]
  ],
  "login_protected_view": [
    [
      "tests/test_client/views.py",
      [
        "login_protected_view"
      ]
    ],
    [
      "tests/test_client/views.py",
      [
        "_ViewManager",
        "login_protected_view"
      ]
    ]
  ],
  "login_protected_view_changed_redirect": [
    [
      "tests/test_client/views.py",
      [
        "login_protected_view_changed_redirect"
      ]
    ]
  ],
  "_permission_protected_view": [
    [
      "tests/test_client/views.py",
      [
        "_permission_protected_view"
      ]
    ]
  ],
  "permission_protected_view": [
    [
      "tests/test_client/views.py",
      [
        "_ViewManager",
        "permission_protected_view"
      ]
    ]
  ],
  "session_view": [
    [
      "tests/test_client/views.py",
      [
        "session_view"
      ]
    ]
  ],
  "broken_view": [
    [
      "tests/test_client/views.py",
      [
        "broken_view"
      ]
    ]
  ],
  "mail_sending_view": [
    [
      "tests/test_client/views.py",
      [
        "mail_sending_view"
      ]
    ]
  ],
  "mass_mail_sending_view": [
    [
      "tests/test_client/views.py",
      [
        "mass_mail_sending_view"
      ]
    ]
  ],
  "nesting_exception_view": [
    [
      "tests/test_client/views.py",
      [
        "nesting_exception_view"
      ]
    ]
  ],
  "django_project_redirect": [
    [
      "tests/test_client/views.py",
      [
        "django_project_redirect"
      ]
    ]
  ],
  "upload_view": [
    [
      "tests/test_client/views.py",
      [
        "upload_view"
      ]
    ]
  ],
  "two_arg_exception": [
    [
      "tests/test_client/views.py",
      [
        "two_arg_exception"
      ]
    ]
  ],
  "special": [
    [
      "tests/test_client_regress/context_processors.py",
      [
        "special"
      ]
    ]
  ],
  "test_unicode_contains": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertContainsTests",
        "test_unicode_contains"
      ]
    ]
  ],
  "test_unicode_not_contains": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertContainsTests",
        "test_unicode_not_contains"
      ]
    ]
  ],
  "test_binary_contains": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertContainsTests",
        "test_binary_contains"
      ]
    ]
  ],
  "test_binary_not_contains": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertContainsTests",
        "test_binary_not_contains"
      ]
    ]
  ],
  "test_nontext_contains": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertContainsTests",
        "test_nontext_contains"
      ]
    ]
  ],
  "test_nontext_not_contains": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertContainsTests",
        "test_nontext_not_contains"
      ]
    ]
  ],
  "test_assert_contains_renders_template_response": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertContainsTests",
        "test_assert_contains_renders_template_response"
      ]
    ]
  ],
  "test_assert_contains_using_non_template_response": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertContainsTests",
        "test_assert_contains_using_non_template_response"
      ]
    ]
  ],
  "test_assert_not_contains_renders_template_response": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertContainsTests",
        "test_assert_not_contains_renders_template_response"
      ]
    ]
  ],
  "test_assert_not_contains_using_non_template_response": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertContainsTests",
        "test_assert_not_contains_using_non_template_response"
      ]
    ]
  ],
  "test_no_context": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertTemplateUsedTests",
        "test_no_context"
      ]
    ]
  ],
  "test_single_context": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertTemplateUsedTests",
        "test_single_context"
      ]
    ],
    [
      "tests/test_client_regress/tests.py",
      [
        "ContextTests",
        "test_single_context"
      ]
    ]
  ],
  "test_multiple_context": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertTemplateUsedTests",
        "test_multiple_context"
      ]
    ]
  ],
  "test_template_rendered_multiple_times": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertTemplateUsedTests",
        "test_template_rendered_multiple_times"
      ]
    ]
  ],
  "test_redirect_page": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertRedirectsTests",
        "test_redirect_page"
      ]
    ]
  ],
  "test_lost_query": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertRedirectsTests",
        "test_lost_query"
      ]
    ]
  ],
  "test_incorrect_target": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertRedirectsTests",
        "test_incorrect_target"
      ]
    ]
  ],
  "test_target_page": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertRedirectsTests",
        "test_target_page"
      ]
    ]
  ],
  "test_redirect_chain": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertRedirectsTests",
        "test_redirect_chain"
      ]
    ]
  ],
  "test_multiple_redirect_chain": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertRedirectsTests",
        "test_multiple_redirect_chain"
      ]
    ]
  ],
  "test_redirect_chain_to_non_existent": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertRedirectsTests",
        "test_redirect_chain_to_non_existent"
      ]
    ]
  ],
  "test_redirect_chain_to_self": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertRedirectsTests",
        "test_redirect_chain_to_self"
      ]
    ]
  ],
  "test_redirect_to_self_with_changing_query": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertRedirectsTests",
        "test_redirect_to_self_with_changing_query"
      ]
    ]
  ],
  "test_circular_redirect": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertRedirectsTests",
        "test_circular_redirect"
      ]
    ]
  ],
  "test_redirect_chain_post": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertRedirectsTests",
        "test_redirect_chain_post"
      ]
    ]
  ],
  "test_redirect_chain_head": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertRedirectsTests",
        "test_redirect_chain_head"
      ]
    ]
  ],
  "test_redirect_chain_options": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertRedirectsTests",
        "test_redirect_chain_options"
      ]
    ]
  ],
  "test_redirect_chain_put": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertRedirectsTests",
        "test_redirect_chain_put"
      ]
    ]
  ],
  "test_redirect_chain_delete": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertRedirectsTests",
        "test_redirect_chain_delete"
      ]
    ]
  ],
  "test_redirect_to_different_host": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertRedirectsTests",
        "test_redirect_to_different_host"
      ]
    ]
  ],
  "test_redirect_chain_on_non_redirect_page": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertRedirectsTests",
        "test_redirect_chain_on_non_redirect_page"
      ]
    ]
  ],
  "test_redirect_on_non_redirect_page": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertRedirectsTests",
        "test_redirect_on_non_redirect_page"
      ]
    ]
  ],
  "test_redirect_scheme": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertRedirectsTests",
        "test_redirect_scheme"
      ]
    ]
  ],
  "test_redirect_fetch_redirect_response": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertRedirectsTests",
        "test_redirect_fetch_redirect_response"
      ]
    ]
  ],
  "test_unknown_form": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertFormErrorTests",
        "test_unknown_form"
      ]
    ]
  ],
  "test_unknown_field": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertFormErrorTests",
        "test_unknown_field"
      ]
    ],
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertFormsetErrorTests",
        "test_unknown_field"
      ]
    ]
  ],
  "test_noerror_field": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertFormErrorTests",
        "test_noerror_field"
      ]
    ]
  ],
  "test_unknown_error": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertFormErrorTests",
        "test_unknown_error"
      ]
    ],
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertFormsetErrorTests",
        "test_unknown_error"
      ]
    ]
  ],
  "test_unknown_nonfield_error": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertFormErrorTests",
        "test_unknown_nonfield_error"
      ]
    ],
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertFormsetErrorTests",
        "test_unknown_nonfield_error"
      ]
    ]
  ],
  "getResponse": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertFormsetErrorTests",
        "getResponse"
      ]
    ]
  ],
  "test_unknown_formset": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertFormsetErrorTests",
        "test_unknown_formset"
      ]
    ]
  ],
  "test_no_error_field": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertFormsetErrorTests",
        "test_no_error_field"
      ]
    ]
  ],
  "test_no_nonfield_error": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertFormsetErrorTests",
        "test_no_nonfield_error"
      ]
    ]
  ],
  "test_nonfield_error": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertFormsetErrorTests",
        "test_nonfield_error"
      ]
    ]
  ],
  "test_no_nonform_error": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertFormsetErrorTests",
        "test_no_nonform_error"
      ]
    ]
  ],
  "test_unknown_nonform_error": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertFormsetErrorTests",
        "test_unknown_nonform_error"
      ]
    ]
  ],
  "test_nonform_error": [
    [
      "tests/test_client_regress/tests.py",
      [
        "AssertFormsetErrorTests",
        "test_nonform_error"
      ]
    ]
  ],
  "test_login_different_client": [
    [
      "tests/test_client_regress/tests.py",
      [
        "LoginTests",
        "test_login_different_client"
      ]
    ]
  ],
  "test_simple_argument_get": [
    [
      "tests/test_client_regress/tests.py",
      [
        "URLEscapingTests",
        "test_simple_argument_get"
      ]
    ]
  ],
  "test_argument_with_space_get": [
    [
      "tests/test_client_regress/tests.py",
      [
        "URLEscapingTests",
        "test_argument_with_space_get"
      ]
    ]
  ],
  "test_simple_argument_post": [
    [
      "tests/test_client_regress/tests.py",
      [
        "URLEscapingTests",
        "test_simple_argument_post"
      ]
    ]
  ],
  "test_argument_with_space_post": [
    [
      "tests/test_client_regress/tests.py",
      [
        "URLEscapingTests",
        "test_argument_with_space_post"
      ]
    ]
  ],
  "test_exception_cleared": [
    [
      "tests/test_client_regress/tests.py",
      [
        "ExceptionTests",
        "test_exception_cleared"
      ]
    ]
  ],
  "test_bad_404_template": [
    [
      "tests/test_client_regress/tests.py",
      [
        "TemplateExceptionTests",
        "test_bad_404_template"
      ]
    ]
  ],
  "test_urlconf_was_changed": [
    [
      "tests/test_client_regress/tests.py",
      [
        "UrlconfSubstitutionTests",
        "test_urlconf_was_changed"
      ]
    ]
  ],
  "test_urlconf_was_reverted": [
    [
      "tests/test_client_regress/tests.py",
      [
        "zzUrlconfSubstitutionTests",
        "test_urlconf_was_reverted"
      ]
    ]
  ],
  "test_inherited_context": [
    [
      "tests/test_client_regress/tests.py",
      [
        "ContextTests",
        "test_inherited_context"
      ]
    ]
  ],
  "test_contextlist_keys": [
    [
      "tests/test_client_regress/tests.py",
      [
        "ContextTests",
        "test_contextlist_keys"
      ]
    ]
  ],
  "test_contextlist_get": [
    [
      "tests/test_client_regress/tests.py",
      [
        "ContextTests",
        "test_contextlist_get"
      ]
    ]
  ],
  "test_15368": [
    [
      "tests/test_client_regress/tests.py",
      [
        "ContextTests",
        "test_15368"
      ]
    ]
  ],
  "test_nested_requests": [
    [
      "tests/test_client_regress/tests.py",
      [
        "ContextTests",
        "test_nested_requests"
      ]
    ]
  ],
  "test_session": [
    [
      "tests/test_client_regress/tests.py",
      [
        "SessionTests",
        "test_session"
      ]
    ]
  ],
  "test_session_initiated": [
    [
      "tests/test_client_regress/tests.py",
      [
        "SessionTests",
        "test_session_initiated"
      ]
    ]
  ],
  "test_logout_with_user": [
    [
      "tests/test_client_regress/tests.py",
      [
        "SessionTests",
        "test_logout_with_user"
      ]
    ]
  ],
  "test_logout_with_custom_user": [
    [
      "tests/test_client_regress/tests.py",
      [
        "SessionTests",
        "test_logout_with_custom_user"
      ]
    ]
  ],
  "test_logout_with_custom_auth_backend": [
    [
      "tests/test_client_regress/tests.py",
      [
        "SessionTests",
        "test_logout_with_custom_auth_backend"
      ]
    ]
  ],
  "test_logout_without_user": [
    [
      "tests/test_client_regress/tests.py",
      [
        "SessionTests",
        "test_logout_without_user"
      ]
    ]
  ],
  "test_login_with_user": [
    [
      "tests/test_client_regress/tests.py",
      [
        "SessionTests",
        "test_login_with_user"
      ]
    ]
  ],
  "test_login_without_signal": [
    [
      "tests/test_client_regress/tests.py",
      [
        "SessionTests",
        "test_login_without_signal"
      ]
    ]
  ],
  "test_patch": [
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestMethodTests",
        "test_patch"
      ]
    ],
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestMethodStringDataTests",
        "test_patch"
      ]
    ]
  ],
  "test_empty_string_data": [
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestMethodStringDataTests",
        "test_empty_string_data"
      ]
    ]
  ],
  "test_json_bytes": [
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestMethodStringDataTests",
        "test_json_bytes"
      ]
    ]
  ],
  "test_json_charset": [
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestMethodStringDataTests",
        "test_json_charset"
      ]
    ]
  ],
  "test_json_structured_suffixes": [
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestMethodStringDataTests",
        "test_json_structured_suffixes"
      ]
    ]
  ],
  "test_json_multiple_access": [
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestMethodStringDataTests",
        "test_json_multiple_access"
      ]
    ]
  ],
  "test_json_wrong_header": [
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestMethodStringDataTests",
        "test_json_wrong_header"
      ]
    ]
  ],
  "test_get_like_requests": [
    [
      "tests/test_client_regress/tests.py",
      [
        "QueryStringTests",
        "test_get_like_requests"
      ]
    ]
  ],
  "test_post_like_requests": [
    [
      "tests/test_client_regress/tests.py",
      [
        "QueryStringTests",
        "test_post_like_requests"
      ]
    ]
  ],
  "test_simple_payload": [
    [
      "tests/test_client_regress/tests.py",
      [
        "PayloadEncodingTests",
        "test_simple_payload"
      ]
    ]
  ],
  "test_utf8_payload": [
    [
      "tests/test_client_regress/tests.py",
      [
        "PayloadEncodingTests",
        "test_utf8_payload"
      ]
    ]
  ],
  "test_utf16_payload": [
    [
      "tests/test_client_regress/tests.py",
      [
        "PayloadEncodingTests",
        "test_utf16_payload"
      ]
    ]
  ],
  "test_non_utf_payload": [
    [
      "tests/test_client_regress/tests.py",
      [
        "PayloadEncodingTests",
        "test_non_utf_payload"
      ]
    ]
  ],
  "test_file_encoding": [
    [
      "tests/test_client_regress/tests.py",
      [
        "UploadedFileEncodingTest",
        "test_file_encoding"
      ]
    ]
  ],
  "test_guesses_content_type_on_file_encoding": [
    [
      "tests/test_client_regress/tests.py",
      [
        "UploadedFileEncodingTest",
        "test_guesses_content_type_on_file_encoding"
      ]
    ]
  ],
  "test_client_headers": [
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestHeadersTest",
        "test_client_headers"
      ]
    ]
  ],
  "test_client_headers_redirect": [
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestHeadersTest",
        "test_client_headers_redirect"
      ]
    ]
  ],
  "test_body_from_empty_request": [
    [
      "tests/test_client_regress/tests.py",
      [
        "ReadLimitedStreamTest",
        "test_body_from_empty_request"
      ]
    ]
  ],
  "test_read_from_empty_request": [
    [
      "tests/test_client_regress/tests.py",
      [
        "ReadLimitedStreamTest",
        "test_read_from_empty_request"
      ]
    ]
  ],
  "test_read_numbytes_from_empty_request": [
    [
      "tests/test_client_regress/tests.py",
      [
        "ReadLimitedStreamTest",
        "test_read_numbytes_from_empty_request"
      ]
    ]
  ],
  "test_read_from_nonempty_request": [
    [
      "tests/test_client_regress/tests.py",
      [
        "ReadLimitedStreamTest",
        "test_read_from_nonempty_request"
      ]
    ]
  ],
  "test_read_numbytes_from_nonempty_request": [
    [
      "tests/test_client_regress/tests.py",
      [
        "ReadLimitedStreamTest",
        "test_read_numbytes_from_nonempty_request"
      ]
    ]
  ],
  "common_test_that_should_always_pass": [
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestFactoryStateTest",
        "common_test_that_should_always_pass"
      ]
    ]
  ],
  "test_request_after_client": [
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestFactoryStateTest",
        "test_request_after_client"
      ]
    ]
  ],
  "test_request_after_client_2": [
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestFactoryStateTest",
        "test_request_after_client_2"
      ]
    ]
  ],
  "test_should_set_correct_env_variables": [
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestFactoryEnvironmentTests",
        "test_should_set_correct_env_variables"
      ]
    ]
  ],
  "test_cookies": [
    [
      "tests/test_client_regress/tests.py",
      [
        "RequestFactoryEnvironmentTests",
        "test_cookies"
      ]
    ]
  ],
  "no_template_view": [
    [
      "tests/test_client_regress/views.py",
      [
        "no_template_view"
      ]
    ]
  ],
  "staff_only_view": [
    [
      "tests/test_client_regress/views.py",
      [
        "staff_only_view"
      ]
    ]
  ],
  "request_data": [
    [
      "tests/test_client_regress/views.py",
      [
        "request_data"
      ]
    ]
  ],
  "view_with_argument": [
    [
      "tests/test_client_regress/views.py",
      [
        "view_with_argument"
      ]
    ]
  ],
  "nested_view": [
    [
      "tests/test_client_regress/views.py",
      [
        "nested_view"
      ]
    ],
    [
      "tests/urlpatterns_reverse/views.py",
      [
        "nested_view"
      ]
    ]
  ],
  "login_protected_redirect_view": [
    [
      "tests/test_client_regress/views.py",
      [
        "login_protected_redirect_view"
      ]
    ]
  ],
  "redirect_to_self_with_changing_query_view": [
    [
      "tests/test_client_regress/views.py",
      [
        "redirect_to_self_with_changing_query_view"
      ]
    ]
  ],
  "set_session_view": [
    [
      "tests/test_client_regress/views.py",
      [
        "set_session_view"
      ]
    ]
  ],
  "check_session_view": [
    [
      "tests/test_client_regress/views.py",
      [
        "check_session_view"
      ]
    ]
  ],
  "request_methods_view": [
    [
      "tests/test_client_regress/views.py",
      [
        "request_methods_view"
      ]
    ]
  ],
  "return_unicode": [
    [
      "tests/test_client_regress/views.py",
      [
        "return_unicode"
      ]
    ]
  ],
  "return_undecodable_binary": [
    [
      "tests/test_client_regress/views.py",
      [
        "return_undecodable_binary"
      ]
    ]
  ],
  "return_json_response": [
    [
      "tests/test_client_regress/views.py",
      [
        "return_json_response"
      ]
    ]
  ],
  "return_json_response_latin1": [
    [
      "tests/test_client_regress/views.py",
      [
        "return_json_response_latin1"
      ]
    ]
  ],
  "return_text_file": [
    [
      "tests/test_client_regress/views.py",
      [
        "return_text_file"
      ]
    ]
  ],
  "check_headers": [
    [
      "tests/test_client_regress/views.py",
      [
        "check_headers"
      ]
    ]
  ],
  "read_all": [
    [
      "tests/test_client_regress/views.py",
      [
        "read_all"
      ]
    ]
  ],
  "read_buffer": [
    [
      "tests/test_client_regress/views.py",
      [
        "read_buffer"
      ]
    ]
  ],
  "request_context_view": [
    [
      "tests/test_client_regress/views.py",
      [
        "request_context_view"
      ]
    ]
  ],
  "render_template_multiple_times": [
    [
      "tests/test_client_regress/views.py",
      [
        "render_template_multiple_times"
      ]
    ]
  ],
  "redirect_based_on_extra_headers_1_view": [
    [
      "tests/test_client_regress/views.py",
      [
        "redirect_based_on_extra_headers_1_view"
      ]
    ]
  ],
  "redirect_based_on_extra_headers_2_view": [
    [
      "tests/test_client_regress/views.py",
      [
        "redirect_based_on_extra_headers_2_view"
      ]
    ]
  ],
  "test_messages_concatenates_error_dict_values": [
    [
      "tests/test_exceptions/test_validation_error.py",
      [
        "TestValidationError",
        "test_messages_concatenates_error_dict_values"
      ]
    ]
  ],
  "runTest": [
    [
      "tests/test_runner/test_debug_sql.py",
      [
        "TestDebugSQL",
        "PassingTest",
        "runTest"
      ]
    ],
    [
      "tests/test_runner/test_debug_sql.py",
      [
        "TestDebugSQL",
        "FailingTest",
        "runTest"
      ]
    ],
    [
      "tests/test_runner/test_debug_sql.py",
      [
        "TestDebugSQL",
        "ErrorTest",
        "runTest"
      ]
    ],
    [
      "tests/test_runner/test_debug_sql.py",
      [
        "TestDebugSQL",
        "PassingSubTest",
        "runTest"
      ]
    ],
    [
      "tests/test_runner/test_debug_sql.py",
      [
        "TestDebugSQL",
        "FailingSubTest",
        "runTest"
      ]
    ],
    [
      "tests/test_runner/test_debug_sql.py",
      [
        "TestDebugSQL",
        "ErrorSubTest",
        "runTest"
      ]
    ]
  ],
  "_test_output": [
    [
      "tests/test_runner/test_debug_sql.py",
      [
        "TestDebugSQL",
        "_test_output"
      ]
    ]
  ],
  "test_output_normal": [
    [
      "tests/test_runner/test_debug_sql.py",
      [
        "TestDebugSQL",
        "test_output_normal"
      ]
    ]
  ],
  "test_output_verbose": [
    [
      "tests/test_runner/test_debug_sql.py",
      [
        "TestDebugSQL",
        "test_output_verbose"
      ]
    ]
  ],
  "change_cwd": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "change_cwd"
      ]
    ]
  ],
  "get_test_methods_names": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "get_test_methods_names"
      ]
    ]
  ],
  "test_init_debug_mode": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "test_init_debug_mode"
      ]
    ]
  ],
  "test_add_arguments_debug_mode": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "test_add_arguments_debug_mode"
      ]
    ]
  ],
  "test_dotted_test_module": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "test_dotted_test_module"
      ]
    ]
  ],
  "test_dotted_test_class_vanilla_unittest": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "test_dotted_test_class_vanilla_unittest"
      ]
    ]
  ],
  "test_dotted_test_class_django_testcase": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "test_dotted_test_class_django_testcase"
      ]
    ]
  ],
  "test_dotted_test_method_django_testcase": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "test_dotted_test_method_django_testcase"
      ]
    ]
  ],
  "test_pattern": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "test_pattern"
      ]
    ]
  ],
  "test_name_patterns": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "test_name_patterns"
      ]
    ]
  ],
  "test_empty_label": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "test_empty_label"
      ]
    ]
  ],
  "test_empty_test_case": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "test_empty_test_case"
      ]
    ]
  ],
  "test_discovery_on_package": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "test_discovery_on_package"
      ]
    ]
  ],
  "test_ignore_adjacent": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "test_ignore_adjacent"
      ]
    ]
  ],
  "test_testcase_ordering": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "test_testcase_ordering"
      ]
    ]
  ],
  "test_duplicates_ignored": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "test_duplicates_ignored"
      ]
    ]
  ],
  "test_reverse": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "test_reverse"
      ]
    ]
  ],
  "test_overridable_get_test_runner_kwargs": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "test_overridable_get_test_runner_kwargs"
      ]
    ]
  ],
  "test_overridable_test_suite": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "test_overridable_test_suite"
      ]
    ]
  ],
  "test_overridable_test_runner": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "test_overridable_test_runner"
      ]
    ]
  ],
  "test_overridable_test_loader": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "test_overridable_test_loader"
      ]
    ]
  ],
  "test_exclude_tags": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "test_exclude_tags"
      ]
    ]
  ],
  "test_tag_inheritance": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "test_tag_inheritance"
      ]
    ]
  ],
  "test_included_tags_displayed": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "test_included_tags_displayed"
      ]
    ]
  ],
  "test_excluded_tags_displayed": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "test_excluded_tags_displayed"
      ]
    ]
  ],
  "test_pdb_with_parallel": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "test_pdb_with_parallel"
      ]
    ]
  ],
  "test_buffer_with_parallel": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "test_buffer_with_parallel"
      ]
    ]
  ],
  "test_buffer_mode_test_pass": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "test_buffer_mode_test_pass"
      ]
    ]
  ],
  "test_buffer_mode_test_fail": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerTests",
        "test_buffer_mode_test_fail"
      ]
    ]
  ],
  "assertSkippedDatabases": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerGetDatabasesTests",
        "assertSkippedDatabases"
      ]
    ]
  ],
  "test_mixed": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerGetDatabasesTests",
        "test_mixed"
      ]
    ]
  ],
  "test_default_and_other": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerGetDatabasesTests",
        "test_default_and_other"
      ]
    ]
  ],
  "test_default_only": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerGetDatabasesTests",
        "test_default_only"
      ]
    ]
  ],
  "test_other_only": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerGetDatabasesTests",
        "test_other_only"
      ]
    ]
  ],
  "test_no_databases_required": [
    [
      "tests/test_runner/test_discover_runner.py",
      [
        "DiscoverRunnerGetDatabasesTests",
        "test_no_databases_required"
      ]
    ]
  ],
  "test_subtest": [
    [
      "tests/test_runner/test_parallel.py",
      [
        "ParallelTestRunnerTest",
        "test_subtest"
      ]
    ]
  ],
  "dummy_test": [
    [
      "tests/test_runner/test_parallel.py",
      [
        "SampleFailingSubtest",
        "dummy_test"
      ]
    ]
  ],
  "test_pickle_errors_detection": [
    [
      "tests/test_runner/test_parallel.py",
      [
        "RemoteTestResultTest",
        "test_pickle_errors_detection"
      ]
    ]
  ],
  "test_add_failing_subtests": [
    [
      "tests/test_runner/test_parallel.py",
      [
        "RemoteTestResultTest",
        "test_add_failing_subtests"
      ]
    ]
  ],
  "test_simple_dependencies": [
    [
      "tests/test_runner/tests.py",
      [
        "DependencyOrderingTests",
        "test_simple_dependencies"
      ]
    ]
  ],
  "test_chained_dependencies": [
    [
      "tests/test_runner/tests.py",
      [
        "DependencyOrderingTests",
        "test_chained_dependencies"
      ]
    ]
  ],
  "test_multiple_dependencies": [
    [
      "tests/test_runner/tests.py",
      [
        "DependencyOrderingTests",
        "test_multiple_dependencies"
      ]
    ]
  ],
  "test_circular_dependencies": [
    [
      "tests/test_runner/tests.py",
      [
        "DependencyOrderingTests",
        "test_circular_dependencies"
      ]
    ]
  ],
  "test_own_alias_dependency": [
    [
      "tests/test_runner/tests.py",
      [
        "DependencyOrderingTests",
        "test_own_alias_dependency"
      ]
    ]
  ],
  "test_custom_test_runner": [
    [
      "tests/test_runner/tests.py",
      [
        "ManageCommandTests",
        "test_custom_test_runner"
      ]
    ]
  ],
  "test_bad_test_runner": [
    [
      "tests/test_runner/tests.py",
      [
        "ManageCommandTests",
        "test_bad_test_runner"
      ]
    ]
  ],
  "test_default_options": [
    [
      "tests/test_runner/tests.py",
      [
        "CustomTestRunnerOptionsSettingsTests",
        "test_default_options"
      ]
    ]
  ],
  "test_default_and_given_options": [
    [
      "tests/test_runner/tests.py",
      [
        "CustomTestRunnerOptionsSettingsTests",
        "test_default_and_given_options"
      ]
    ]
  ],
  "test_option_name_and_value_separated": [
    [
      "tests/test_runner/tests.py",
      [
        "CustomTestRunnerOptionsSettingsTests",
        "test_option_name_and_value_separated"
      ]
    ]
  ],
  "test_all_options_given": [
    [
      "tests/test_runner/tests.py",
      [
        "CustomTestRunnerOptionsSettingsTests",
        "test_all_options_given"
      ]
    ]
  ],
  "test_testrunner_option": [
    [
      "tests/test_runner/tests.py",
      [
        "CustomTestRunnerOptionsCmdlineTests",
        "test_testrunner_option"
      ]
    ]
  ],
  "test_testrunner_equals": [
    [
      "tests/test_runner/tests.py",
      [
        "CustomTestRunnerOptionsCmdlineTests",
        "test_testrunner_equals"
      ]
    ]
  ],
  "test_no_testrunner": [
    [
      "tests/test_runner/tests.py",
      [
        "CustomTestRunnerOptionsCmdlineTests",
        "test_no_testrunner"
      ]
    ]
  ],
  "test_ticket_17477": [
    [
      "tests/test_runner/tests.py",
      [
        "Ticket17477RegressionTests",
        "test_ticket_17477"
      ]
    ]
  ],
  "test_transaction_support": [
    [
      "tests/test_runner/tests.py",
      [
        "SQLiteInMemoryTestDbs",
        "test_transaction_support"
      ]
    ]
  ],
  "test_setup_databases": [
    [
      "tests/test_runner/tests.py",
      [
        "DummyBackendTest",
        "test_setup_databases"
      ]
    ]
  ],
  "test_setup_aliased_default_database": [
    [
      "tests/test_runner/tests.py",
      [
        "AliasedDefaultTestSetupTest",
        "test_setup_aliased_default_database"
      ]
    ]
  ],
  "test_setup_aliased_databases": [
    [
      "tests/test_runner/tests.py",
      [
        "SetupDatabasesTests",
        "test_setup_aliased_databases"
      ]
    ]
  ],
  "test_destroy_test_db_restores_db_name": [
    [
      "tests/test_runner/tests.py",
      [
        "SetupDatabasesTests",
        "test_destroy_test_db_restores_db_name"
      ]
    ]
  ],
  "test_serialized_off": [
    [
      "tests/test_runner/tests.py",
      [
        "SetupDatabasesTests",
        "test_serialized_off"
      ]
    ]
  ],
  "test_autoincrement_reset1": [
    [
      "tests/test_runner/tests.py",
      [
        "AutoIncrementResetTest",
        "test_autoincrement_reset1"
      ]
    ]
  ],
  "test_autoincrement_reset2": [
    [
      "tests/test_runner/tests.py",
      [
        "AutoIncrementResetTest",
        "test_autoincrement_reset2"
      ]
    ]
  ],
  "test_empty_default_database": [
    [
      "tests/test_runner/tests.py",
      [
        "EmptyDefaultDatabaseTest",
        "test_empty_default_database"
      ]
    ]
  ],
  "test_run_checks_raises": [
    [
      "tests/test_runner/tests.py",
      [
        "RunTestsExceptionHandlingTests",
        "test_run_checks_raises"
      ]
    ]
  ],
  "test_run_checks_raises_and_teardown_raises": [
    [
      "tests/test_runner/tests.py",
      [
        "RunTestsExceptionHandlingTests",
        "test_run_checks_raises_and_teardown_raises"
      ]
    ]
  ],
  "test_run_checks_passes_and_teardown_raises": [
    [
      "tests/test_runner/tests.py",
      [
        "RunTestsExceptionHandlingTests",
        "test_run_checks_passes_and_teardown_raises"
      ]
    ]
  ],
  "test_pass": [
    [
      "tests/test_runner_apps/buffer/tests_buffer.py",
      [
        "WriteToStdoutStderrTestCase",
        "test_pass"
      ]
    ]
  ],
  "test_fail": [
    [
      "tests/test_runner_apps/buffer/tests_buffer.py",
      [
        "WriteToStdoutStderrTestCase",
        "test_fail"
      ]
    ]
  ],
  "test_nothing": [
    [
      "tests/test_runner_apps/databases/tests.py",
      [
        "NoDatabaseTests",
        "test_nothing"
      ]
    ]
  ],
  "factorial": [
    [
      "tests/test_runner_apps/sample/doctests.py",
      [
        "factorial"
      ]
    ]
  ],
  "test_sample": [
    [
      "tests/test_runner_apps/sample/pattern_tests.py",
      [
        "Test",
        "test_sample"
      ]
    ],
    [
      "tests/test_runner_apps/sample/tests/tests.py",
      [
        "Test",
        "test_sample"
      ]
    ],
    [
      "tests/test_runner_apps/sample/tests_sample.py",
      [
        "TestVanillaUnittest",
        "test_sample"
      ]
    ],
    [
      "tests/test_runner_apps/sample/tests_sample.py",
      [
        "TestDjangoTestCase",
        "test_sample"
      ]
    ],
    [
      "tests/test_runner_apps/sample/tests_sample.py",
      [
        "TestZimpleTestCase",
        "test_sample"
      ]
    ]
  ],
  "load_tests": [
    [
      "tests/test_runner_apps/sample/tests_sample.py",
      [
        "load_tests"
      ]
    ]
  ],
  "test_1": [
    [
      "tests/test_runner_apps/simple/tests.py",
      [
        "DjangoCase1",
        "test_1"
      ]
    ],
    [
      "tests/test_runner_apps/simple/tests.py",
      [
        "DjangoCase2",
        "test_1"
      ]
    ],
    [
      "tests/test_runner_apps/simple/tests.py",
      [
        "SimpleCase1",
        "test_1"
      ]
    ],
    [
      "tests/test_runner_apps/simple/tests.py",
      [
        "SimpleCase2",
        "test_1"
      ]
    ],
    [
      "tests/test_runner_apps/simple/tests.py",
      [
        "UnittestCase1",
        "test_1"
      ]
    ],
    [
      "tests/test_runner_apps/simple/tests.py",
      [
        "UnittestCase2",
        "test_1"
      ]
    ]
  ],
  "test_2": [
    [
      "tests/test_runner_apps/simple/tests.py",
      [
        "DjangoCase1",
        "test_2"
      ]
    ],
    [
      "tests/test_runner_apps/simple/tests.py",
      [
        "DjangoCase2",
        "test_2"
      ]
    ],
    [
      "tests/test_runner_apps/simple/tests.py",
      [
        "SimpleCase1",
        "test_2"
      ]
    ],
    [
      "tests/test_runner_apps/simple/tests.py",
      [
        "SimpleCase2",
        "test_2"
      ]
    ],
    [
      "tests/test_runner_apps/simple/tests.py",
      [
        "UnittestCase1",
        "test_2"
      ]
    ],
    [
      "tests/test_runner_apps/simple/tests.py",
      [
        "UnittestCase2",
        "test_2"
      ]
    ]
  ],
  "test_3_test": [
    [
      "tests/test_runner_apps/simple/tests.py",
      [
        "UnittestCase2",
        "test_3_test"
      ]
    ]
  ],
  "test_single_tag": [
    [
      "tests/test_runner_apps/tagged/tests.py",
      [
        "TaggedTestCase",
        "test_single_tag"
      ]
    ]
  ],
  "test_multiple_tags": [
    [
      "tests/test_runner_apps/tagged/tests.py",
      [
        "TaggedTestCase",
        "test_multiple_tags"
      ]
    ]
  ],
  "test_no_new_tags": [
    [
      "tests/test_runner_apps/tagged/tests_inheritance.py",
      [
        "Foo",
        "test_no_new_tags"
      ]
    ]
  ],
  "test_new_func_tag": [
    [
      "tests/test_runner_apps/tagged/tests_inheritance.py",
      [
        "Foo",
        "test_new_func_tag"
      ]
    ]
  ],
  "test_new_class_tag_only": [
    [
      "tests/test_runner_apps/tagged/tests_inheritance.py",
      [
        "FooBar",
        "test_new_class_tag_only"
      ]
    ]
  ],
  "test_new_class_and_func_tags": [
    [
      "tests/test_runner_apps/tagged/tests_inheritance.py",
      [
        "FooBar",
        "test_new_class_and_func_tags"
      ]
    ]
  ],
  "raising_test": [
    [
      "tests/test_utils/test_simpletestcase.py",
      [
        "ErrorTestCase",
        "raising_test"
      ]
    ]
  ],
  "simple_test": [
    [
      "tests/test_utils/test_simpletestcase.py",
      [
        "ErrorTestCase",
        "simple_test"
      ]
    ]
  ],
  "skipped_test": [
    [
      "tests/test_utils/test_simpletestcase.py",
      [
        "ErrorTestCase",
        "skipped_test"
      ]
    ]
  ],
  "isolate_debug_test": [
    [
      "tests/test_utils/test_simpletestcase.py",
      [
        "DebugInvocationTests",
        "isolate_debug_test"
      ]
    ]
  ],
  "test_run_cleanup": [
    [
      "tests/test_utils/test_simpletestcase.py",
      [
        "DebugInvocationTests",
        "test_run_cleanup"
      ]
    ]
  ],
  "test_run_pre_setup_error": [
    [
      "tests/test_utils/test_simpletestcase.py",
      [
        "DebugInvocationTests",
        "test_run_pre_setup_error"
      ]
    ]
  ],
  "test_run_post_teardown_error": [
    [
      "tests/test_utils/test_simpletestcase.py",
      [
        "DebugInvocationTests",
        "test_run_post_teardown_error"
      ]
    ]
  ],
  "test_run_skipped_test_no_cleanup": [
    [
      "tests/test_utils/test_simpletestcase.py",
      [
        "DebugInvocationTests",
        "test_run_skipped_test_no_cleanup"
      ]
    ]
  ],
  "test_debug_cleanup": [
    [
      "tests/test_utils/test_simpletestcase.py",
      [
        "DebugInvocationTests",
        "test_debug_cleanup"
      ]
    ]
  ],
  "test_debug_bubbles_error": [
    [
      "tests/test_utils/test_simpletestcase.py",
      [
        "DebugInvocationTests",
        "test_debug_bubbles_error"
      ]
    ]
  ],
  "test_debug_bubbles_pre_setup_error": [
    [
      "tests/test_utils/test_simpletestcase.py",
      [
        "DebugInvocationTests",
        "test_debug_bubbles_pre_setup_error"
      ]
    ]
  ],
  "test_debug_bubbles_post_teardown_error": [
    [
      "tests/test_utils/test_simpletestcase.py",
      [
        "DebugInvocationTests",
        "test_debug_bubbles_post_teardown_error"
      ]
    ]
  ],
  "test_debug_skipped_test_no_cleanup": [
    [
      "tests/test_utils/test_simpletestcase.py",
      [
        "DebugInvocationTests",
        "test_debug_skipped_test_no_cleanup"
      ]
    ]
  ],
  "test_fixture_teardown_checks_constraints": [
    [
      "tests/test_utils/test_testcase.py",
      [
        "TestTestCase",
        "test_fixture_teardown_checks_constraints"
      ]
    ]
  ],
  "test_disallowed_database_connection": [
    [
      "tests/test_utils/test_testcase.py",
      [
        "TestTestCase",
        "test_disallowed_database_connection"
      ]
    ]
  ],
  "test_disallowed_database_queries": [
    [
      "tests/test_utils/test_testcase.py",
      [
        "TestTestCase",
        "test_disallowed_database_queries"
      ]
    ],
    [
      "tests/test_utils/test_transactiontestcase.py",
      [
        "DisallowedDatabaseQueriesTests",
        "test_disallowed_database_queries"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "DisallowedDatabaseQueriesTests",
        "test_disallowed_database_queries"
      ]
    ]
  ],
  "test_queries_cleared": [
    [
      "tests/test_utils/test_transactiontestcase.py",
      [
        "TransactionTestCaseDatabasesTests",
        "test_queries_cleared"
      ]
    ]
  ],
  "_assert_skipping": [
    [
      "tests/test_utils/tests.py",
      [
        "SkippingTestCase",
        "_assert_skipping"
      ]
    ]
  ],
  "test_func2": [
    [
      "tests/test_utils/tests.py",
      [
        "SkippingTestCase",
        "test_skip_unless_db_feature",
        "test_func2"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "SkippingTestCase",
        "test_skip_if_db_feature",
        "test_func2"
      ]
    ]
  ],
  "test_func3": [
    [
      "tests/test_utils/tests.py",
      [
        "SkippingTestCase",
        "test_skip_unless_db_feature",
        "test_func3"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "SkippingTestCase",
        "test_skip_if_db_feature",
        "test_func3"
      ]
    ]
  ],
  "test_func4": [
    [
      "tests/test_utils/tests.py",
      [
        "SkippingTestCase",
        "test_skip_unless_db_feature",
        "test_func4"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "SkippingTestCase",
        "test_skip_if_db_feature",
        "test_func4"
      ]
    ]
  ],
  "test_foo": [
    [
      "tests/test_utils/tests.py",
      [
        "SkippingTestCase",
        "test_skip_unless_db_feature",
        "SkipTestCase",
        "test_foo"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "SkippingTestCase",
        "test_skip_if_db_feature",
        "SkipTestCase",
        "test_foo"
      ]
    ]
  ],
  "test_skip_unless_db_feature": [
    [
      "tests/test_utils/tests.py",
      [
        "SkippingTestCase",
        "test_skip_unless_db_feature"
      ]
    ]
  ],
  "test_func5": [
    [
      "tests/test_utils/tests.py",
      [
        "SkippingTestCase",
        "test_skip_if_db_feature",
        "test_func5"
      ]
    ]
  ],
  "test_skip_if_db_feature": [
    [
      "tests/test_utils/tests.py",
      [
        "SkippingTestCase",
        "test_skip_if_db_feature"
      ]
    ]
  ],
  "test_dummy": [
    [
      "tests/test_utils/tests.py",
      [
        "SkippingClassTestCase",
        "test_skip_class_unless_db_feature",
        "NotSkippedTests",
        "test_dummy"
      ]
    ]
  ],
  "test_will_be_skipped": [
    [
      "tests/test_utils/tests.py",
      [
        "SkippingClassTestCase",
        "test_skip_class_unless_db_feature",
        "SkippedTests",
        "test_will_be_skipped"
      ]
    ]
  ],
  "test_skip_class_unless_db_feature": [
    [
      "tests/test_utils/tests.py",
      [
        "SkippingClassTestCase",
        "test_skip_class_unless_db_feature"
      ]
    ]
  ],
  "test_missing_default_databases": [
    [
      "tests/test_utils/tests.py",
      [
        "SkippingClassTestCase",
        "test_missing_default_databases"
      ]
    ]
  ],
  "test_assert_num_queries": [
    [
      "tests/test_utils/tests.py",
      [
        "AssertNumQueriesTests",
        "test_assert_num_queries"
      ]
    ]
  ],
  "test_assert_num_queries_with_client": [
    [
      "tests/test_utils/tests.py",
      [
        "AssertNumQueriesTests",
        "test_assert_num_queries_with_client"
      ]
    ]
  ],
  "test_ignores_connection_configuration_queries": [
    [
      "tests/test_utils/tests.py",
      [
        "AssertNumQueriesUponConnectionTests",
        "test_ignores_connection_configuration_queries"
      ]
    ]
  ],
  "test_ordered": [
    [
      "tests/test_utils/tests.py",
      [
        "AssertQuerysetEqualTests",
        "test_ordered"
      ]
    ]
  ],
  "test_unordered": [
    [
      "tests/test_utils/tests.py",
      [
        "AssertQuerysetEqualTests",
        "test_unordered"
      ]
    ]
  ],
  "test_undefined_order": [
    [
      "tests/test_utils/tests.py",
      [
        "AssertQuerysetEqualTests",
        "test_undefined_order"
      ]
    ]
  ],
  "test_repeated_values": [
    [
      "tests/test_utils/tests.py",
      [
        "AssertQuerysetEqualTests",
        "test_repeated_values"
      ]
    ]
  ],
  "test_failure": [
    [
      "tests/test_utils/tests.py",
      [
        "CaptureQueriesContextManagerTests",
        "test_failure"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "AssertNumQueriesContextManagerTests",
        "test_failure"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "AssertTemplateUsedContextManagerTests",
        "test_failure"
      ]
    ]
  ],
  "test_with_client": [
    [
      "tests/test_utils/tests.py",
      [
        "CaptureQueriesContextManagerTests",
        "test_with_client"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "AssertNumQueriesContextManagerTests",
        "test_with_client"
      ]
    ]
  ],
  "test_usage": [
    [
      "tests/test_utils/tests.py",
      [
        "AssertTemplateUsedContextManagerTests",
        "test_usage"
      ]
    ]
  ],
  "test_nested_usage": [
    [
      "tests/test_utils/tests.py",
      [
        "AssertTemplateUsedContextManagerTests",
        "test_nested_usage"
      ]
    ]
  ],
  "test_not_used": [
    [
      "tests/test_utils/tests.py",
      [
        "AssertTemplateUsedContextManagerTests",
        "test_not_used"
      ]
    ]
  ],
  "test_assert_used_on_http_response": [
    [
      "tests/test_utils/tests.py",
      [
        "AssertTemplateUsedContextManagerTests",
        "test_assert_used_on_http_response"
      ]
    ]
  ],
  "test_html_parser": [
    [
      "tests/test_utils/tests.py",
      [
        "HTMLEqualTests",
        "test_html_parser"
      ]
    ]
  ],
  "test_parse_html_in_script": [
    [
      "tests/test_utils/tests.py",
      [
        "HTMLEqualTests",
        "test_parse_html_in_script"
      ]
    ]
  ],
  "test_self_closing_tags": [
    [
      "tests/test_utils/tests.py",
      [
        "HTMLEqualTests",
        "test_self_closing_tags"
      ]
    ]
  ],
  "test_simple_equal_html": [
    [
      "tests/test_utils/tests.py",
      [
        "HTMLEqualTests",
        "test_simple_equal_html"
      ]
    ]
  ],
  "test_ignore_comments": [
    [
      "tests/test_utils/tests.py",
      [
        "HTMLEqualTests",
        "test_ignore_comments"
      ]
    ]
  ],
  "test_unequal_html": [
    [
      "tests/test_utils/tests.py",
      [
        "HTMLEqualTests",
        "test_unequal_html"
      ]
    ]
  ],
  "test_class_attribute": [
    [
      "tests/test_utils/tests.py",
      [
        "HTMLEqualTests",
        "test_class_attribute"
      ]
    ]
  ],
  "test_normalize_refs": [
    [
      "tests/test_utils/tests.py",
      [
        "HTMLEqualTests",
        "test_normalize_refs"
      ]
    ]
  ],
  "test_complex_examples": [
    [
      "tests/test_utils/tests.py",
      [
        "HTMLEqualTests",
        "test_complex_examples"
      ]
    ]
  ],
  "test_html_contain": [
    [
      "tests/test_utils/tests.py",
      [
        "HTMLEqualTests",
        "test_html_contain"
      ]
    ]
  ],
  "test_contains_html": [
    [
      "tests/test_utils/tests.py",
      [
        "HTMLEqualTests",
        "test_contains_html"
      ]
    ]
  ],
  "test_unicode_handling": [
    [
      "tests/test_utils/tests.py",
      [
        "HTMLEqualTests",
        "test_unicode_handling"
      ]
    ]
  ],
  "test_simple_equal": [
    [
      "tests/test_utils/tests.py",
      [
        "JSONEqualTests",
        "test_simple_equal"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "XMLEqualTests",
        "test_simple_equal"
      ]
    ]
  ],
  "test_simple_equal_unordered": [
    [
      "tests/test_utils/tests.py",
      [
        "JSONEqualTests",
        "test_simple_equal_unordered"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "XMLEqualTests",
        "test_simple_equal_unordered"
      ]
    ]
  ],
  "test_simple_equal_raise": [
    [
      "tests/test_utils/tests.py",
      [
        "JSONEqualTests",
        "test_simple_equal_raise"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "XMLEqualTests",
        "test_simple_equal_raise"
      ]
    ]
  ],
  "test_equal_parsing_errors": [
    [
      "tests/test_utils/tests.py",
      [
        "JSONEqualTests",
        "test_equal_parsing_errors"
      ]
    ]
  ],
  "test_simple_not_equal": [
    [
      "tests/test_utils/tests.py",
      [
        "JSONEqualTests",
        "test_simple_not_equal"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "XMLEqualTests",
        "test_simple_not_equal"
      ]
    ]
  ],
  "test_simple_not_equal_raise": [
    [
      "tests/test_utils/tests.py",
      [
        "JSONEqualTests",
        "test_simple_not_equal_raise"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "XMLEqualTests",
        "test_simple_not_equal_raise"
      ]
    ]
  ],
  "test_not_equal_parsing_errors": [
    [
      "tests/test_utils/tests.py",
      [
        "JSONEqualTests",
        "test_not_equal_parsing_errors"
      ]
    ]
  ],
  "test_simple_equal_raises_message": [
    [
      "tests/test_utils/tests.py",
      [
        "XMLEqualTests",
        "test_simple_equal_raises_message"
      ]
    ]
  ],
  "test_comment_root": [
    [
      "tests/test_utils/tests.py",
      [
        "XMLEqualTests",
        "test_comment_root"
      ]
    ]
  ],
  "test_simple_equal_with_leading_or_trailing_whitespace": [
    [
      "tests/test_utils/tests.py",
      [
        "XMLEqualTests",
        "test_simple_equal_with_leading_or_trailing_whitespace"
      ]
    ]
  ],
  "test_simple_not_equal_with_whitespace_in_the_middle": [
    [
      "tests/test_utils/tests.py",
      [
        "XMLEqualTests",
        "test_simple_not_equal_with_whitespace_in_the_middle"
      ]
    ]
  ],
  "test_doctype_root": [
    [
      "tests/test_utils/tests.py",
      [
        "XMLEqualTests",
        "test_doctype_root"
      ]
    ]
  ],
  "test_processing_instruction": [
    [
      "tests/test_utils/tests.py",
      [
        "XMLEqualTests",
        "test_processing_instruction"
      ]
    ]
  ],
  "test_fixtures_are_skipped": [
    [
      "tests/test_utils/tests.py",
      [
        "SkippingExtraTests",
        "test_fixtures_are_skipped"
      ]
    ]
  ],
  "test_assert_raises_message": [
    [
      "tests/test_utils/tests.py",
      [
        "AssertRaisesMsgTest",
        "test_assert_raises_message"
      ]
    ]
  ],
  "test_special_re_chars": [
    [
      "tests/test_utils/tests.py",
      [
        "AssertRaisesMsgTest",
        "test_special_re_chars"
      ]
    ],
    [
      "tests/test_utils/tests.py",
      [
        "AssertWarnsMessageTests",
        "test_special_re_chars"
      ]
    ]
  ],
  "test_context_manager_failure": [
    [
      "tests/test_utils/tests.py",
      [
        "AssertWarnsMessageTests",
        "test_context_manager_failure"
      ]
    ]
  ],
  "test_assert_field_output": [
    [
      "tests/test_utils/tests.py",
      [
        "AssertFieldOutputTests",
        "test_assert_field_output"
      ]
    ]
  ],
  "test_custom_required_message": [
    [
      "tests/test_utils/tests.py",
      [
        "AssertFieldOutputTests",
        "test_custom_required_message"
      ]
    ]
  ],
  "test_not_equal": [
    [
      "tests/test_utils/tests.py",
      [
        "AssertURLEqualTests",
        "test_not_equal"
      ]
    ]
  ],
  "test_msg_prefix": [
    [
      "tests/test_utils/tests.py",
      [
        "AssertURLEqualTests",
        "test_msg_prefix"
      ]
    ]
  ],
  "test_setup_test_environment_calling_more_than_once": [
    [
      "tests/test_utils/tests.py",
      [
        "SetupTestEnvironmentTests",
        "test_setup_test_environment_calling_more_than_once"
      ]
    ]
  ],
  "test_allowed_hosts": [
    [
      "tests/test_utils/tests.py",
      [
        "SetupTestEnvironmentTests",
        "test_allowed_hosts"
      ]
    ]
  ],
  "test_urlconf_first": [
    [
      "tests/test_utils/tests.py",
      [
        "OverrideSettingsTests",
        "test_urlconf_first"
      ]
    ]
  ],
  "test_urlconf_second": [
    [
      "tests/test_utils/tests.py",
      [
        "OverrideSettingsTests",
        "test_urlconf_second"
      ]
    ]
  ],
  "test_urlconf_cache": [
    [
      "tests/test_utils/tests.py",
      [
        "OverrideSettingsTests",
        "test_urlconf_cache"
      ]
    ]
  ],
  "test_override_media_root": [
    [
      "tests/test_utils/tests.py",
      [
        "OverrideSettingsTests",
        "test_override_media_root"
      ]
    ]
  ],
  "test_override_media_url": [
    [
      "tests/test_utils/tests.py",
      [
        "OverrideSettingsTests",
        "test_override_media_url"
      ]
    ]
  ],
  "test_override_file_upload_permissions": [
    [
      "tests/test_utils/tests.py",
      [
        "OverrideSettingsTests",
        "test_override_file_upload_permissions"
      ]
    ]
  ],
  "test_override_file_upload_directory_permissions": [
    [
      "tests/test_utils/tests.py",
      [
        "OverrideSettingsTests",
        "test_override_file_upload_directory_permissions"
      ]
    ]
  ],
  "test_override_database_routers": [
    [
      "tests/test_utils/tests.py",
      [
        "OverrideSettingsTests",
        "test_override_database_routers"
      ]
    ]
  ],
  "test_override_static_url": [
    [
      "tests/test_utils/tests.py",
      [
        "OverrideSettingsTests",
        "test_override_static_url"
      ]
    ]
  ],
  "test_override_static_root": [
    [
      "tests/test_utils/tests.py",
      [
        "OverrideSettingsTests",
        "test_override_static_root"
      ]
    ]
  ],
  "test_override_staticfiles_storage": [
    [
      "tests/test_utils/tests.py",
      [
        "OverrideSettingsTests",
        "test_override_staticfiles_storage"
      ]
    ]
  ],
  "test_override_staticfiles_finders": [
    [
      "tests/test_utils/tests.py",
      [
        "OverrideSettingsTests",
        "test_override_staticfiles_finders"
      ]
    ]
  ],
  "test_override_staticfiles_dirs": [
    [
      "tests/test_utils/tests.py",
      [
        "OverrideSettingsTests",
        "test_override_staticfiles_dirs"
      ]
    ]
  ],
  "test_failure_in_setUpTestData_should_rollback_transaction": [
    [
      "tests/test_utils/tests.py",
      [
        "TestBadSetUpTestData",
        "test_failure_in_setUpTestData_should_rollback_transaction"
      ]
    ]
  ],
  "test_disallowed_database_connections": [
    [
      "tests/test_utils/tests.py",
      [
        "DisallowedDatabaseQueriesTests",
        "test_disallowed_database_connections"
      ]
    ]
  ],
  "test_disallowed_database_chunked_cursor_queries": [
    [
      "tests/test_utils/tests.py",
      [
        "DisallowedDatabaseQueriesTests",
        "test_disallowed_database_chunked_cursor_queries"
      ]
    ]
  ],
  "test_allowed_database_queries": [
    [
      "tests/test_utils/tests.py",
      [
        "AllowedDatabaseQueriesTests",
        "test_allowed_database_queries"
      ]
    ]
  ],
  "test_allowed_database_chunked_cursor_queries": [
    [
      "tests/test_utils/tests.py",
      [
        "AllowedDatabaseQueriesTests",
        "test_allowed_database_chunked_cursor_queries"
      ]
    ]
  ],
  "test_no_close_match": [
    [
      "tests/test_utils/tests.py",
      [
        "DatabaseAliasTests",
        "test_no_close_match"
      ]
    ]
  ],
  "test_close_match": [
    [
      "tests/test_utils/tests.py",
      [
        "DatabaseAliasTests",
        "test_close_match"
      ]
    ]
  ],
  "test_installed_apps": [
    [
      "tests/test_utils/tests.py",
      [
        "IsolatedAppsTests",
        "test_installed_apps"
      ]
    ]
  ],
  "test_method_decoration": [
    [
      "tests/test_utils/tests.py",
      [
        "IsolatedAppsTests",
        "test_method_decoration"
      ]
    ]
  ],
  "test_exception_in_setup": [
    [
      "tests/test_utils/tests.py",
      [
        "TestContextDecoratorTests",
        "test_exception_in_setup"
      ]
    ]
  ],
  "get_person": [
    [
      "tests/test_utils/views.py",
      [
        "get_person"
      ]
    ]
  ],
  "no_template_used": [
    [
      "tests/test_utils/views.py",
      [
        "no_template_used"
      ]
    ]
  ],
  "override_database_connection_timezone": [
    [
      "tests/timezones/tests.py",
      [
        "override_database_connection_timezone"
      ]
    ]
  ],
  "test_naive_datetime": [
    [
      "tests/timezones/tests.py",
      [
        "LegacyDatabaseTests",
        "test_naive_datetime"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "NewDatabaseTests",
        "test_naive_datetime"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "SerializationTests",
        "test_naive_datetime"
      ]
    ],
    [
      "tests/utils_tests/test_dateformat.py",
      [
        "DateFormatTests",
        "test_naive_datetime"
      ]
    ]
  ],
  "test_naive_datetime_with_microsecond": [
    [
      "tests/timezones/tests.py",
      [
        "LegacyDatabaseTests",
        "test_naive_datetime_with_microsecond"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "NewDatabaseTests",
        "test_naive_datetime_with_microsecond"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "SerializationTests",
        "test_naive_datetime_with_microsecond"
      ]
    ]
  ],
  "test_aware_datetime_in_local_timezone": [
    [
      "tests/timezones/tests.py",
      [
        "LegacyDatabaseTests",
        "test_aware_datetime_in_local_timezone"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "NewDatabaseTests",
        "test_aware_datetime_in_local_timezone"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "SerializationTests",
        "test_aware_datetime_in_local_timezone"
      ]
    ]
  ],
  "test_aware_datetime_in_local_timezone_with_microsecond": [
    [
      "tests/timezones/tests.py",
      [
        "LegacyDatabaseTests",
        "test_aware_datetime_in_local_timezone_with_microsecond"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "NewDatabaseTests",
        "test_aware_datetime_in_local_timezone_with_microsecond"
      ]
    ]
  ],
  "test_aware_datetime_in_utc": [
    [
      "tests/timezones/tests.py",
      [
        "LegacyDatabaseTests",
        "test_aware_datetime_in_utc"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "NewDatabaseTests",
        "test_aware_datetime_in_utc"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "SerializationTests",
        "test_aware_datetime_in_utc"
      ]
    ]
  ],
  "test_aware_datetime_in_other_timezone": [
    [
      "tests/timezones/tests.py",
      [
        "LegacyDatabaseTests",
        "test_aware_datetime_in_other_timezone"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "NewDatabaseTests",
        "test_aware_datetime_in_other_timezone"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "SerializationTests",
        "test_aware_datetime_in_other_timezone"
      ]
    ]
  ],
  "test_aware_datetime_unsupported": [
    [
      "tests/timezones/tests.py",
      [
        "LegacyDatabaseTests",
        "test_aware_datetime_unsupported"
      ]
    ]
  ],
  "test_auto_now_and_auto_now_add": [
    [
      "tests/timezones/tests.py",
      [
        "LegacyDatabaseTests",
        "test_auto_now_and_auto_now_add"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "NewDatabaseTests",
        "test_auto_now_and_auto_now_add"
      ]
    ]
  ],
  "test_query_filter": [
    [
      "tests/timezones/tests.py",
      [
        "LegacyDatabaseTests",
        "test_query_filter"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "NewDatabaseTests",
        "test_query_filter"
      ]
    ]
  ],
  "test_query_datetime_lookups": [
    [
      "tests/timezones/tests.py",
      [
        "LegacyDatabaseTests",
        "test_query_datetime_lookups"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "NewDatabaseTests",
        "test_query_datetime_lookups"
      ]
    ]
  ],
  "test_query_aggregation": [
    [
      "tests/timezones/tests.py",
      [
        "LegacyDatabaseTests",
        "test_query_aggregation"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "NewDatabaseTests",
        "test_query_aggregation"
      ]
    ]
  ],
  "test_query_annotation": [
    [
      "tests/timezones/tests.py",
      [
        "LegacyDatabaseTests",
        "test_query_annotation"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "NewDatabaseTests",
        "test_query_annotation"
      ]
    ]
  ],
  "test_query_datetimes": [
    [
      "tests/timezones/tests.py",
      [
        "LegacyDatabaseTests",
        "test_query_datetimes"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "NewDatabaseTests",
        "test_query_datetimes"
      ]
    ]
  ],
  "test_raw_sql": [
    [
      "tests/timezones/tests.py",
      [
        "LegacyDatabaseTests",
        "test_raw_sql"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "NewDatabaseTests",
        "test_raw_sql"
      ]
    ]
  ],
  "test_cursor_execute_accepts_naive_datetime": [
    [
      "tests/timezones/tests.py",
      [
        "LegacyDatabaseTests",
        "test_cursor_execute_accepts_naive_datetime"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "NewDatabaseTests",
        "test_cursor_execute_accepts_naive_datetime"
      ]
    ]
  ],
  "test_cursor_execute_returns_naive_datetime": [
    [
      "tests/timezones/tests.py",
      [
        "LegacyDatabaseTests",
        "test_cursor_execute_returns_naive_datetime"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "NewDatabaseTests",
        "test_cursor_execute_returns_naive_datetime"
      ]
    ]
  ],
  "test_filter_date_field_with_aware_datetime": [
    [
      "tests/timezones/tests.py",
      [
        "LegacyDatabaseTests",
        "test_filter_date_field_with_aware_datetime"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "NewDatabaseTests",
        "test_filter_date_field_with_aware_datetime"
      ]
    ]
  ],
  "test_datetime_from_date": [
    [
      "tests/timezones/tests.py",
      [
        "NewDatabaseTests",
        "test_datetime_from_date"
      ]
    ]
  ],
  "test_query_filter_with_pytz_timezones": [
    [
      "tests/timezones/tests.py",
      [
        "NewDatabaseTests",
        "test_query_filter_with_pytz_timezones"
      ]
    ]
  ],
  "test_query_convert_timezones": [
    [
      "tests/timezones/tests.py",
      [
        "NewDatabaseTests",
        "test_query_convert_timezones"
      ]
    ]
  ],
  "test_query_filter_with_naive_datetime": [
    [
      "tests/timezones/tests.py",
      [
        "NewDatabaseTests",
        "test_query_filter_with_naive_datetime"
      ]
    ]
  ],
  "test_query_datetime_lookups_in_other_timezone": [
    [
      "tests/timezones/tests.py",
      [
        "NewDatabaseTests",
        "test_query_datetime_lookups_in_other_timezone"
      ]
    ]
  ],
  "test_query_datetimes_in_other_timezone": [
    [
      "tests/timezones/tests.py",
      [
        "NewDatabaseTests",
        "test_query_datetimes_in_other_timezone"
      ]
    ]
  ],
  "test_cursor_execute_accepts_aware_datetime": [
    [
      "tests/timezones/tests.py",
      [
        "NewDatabaseTests",
        "test_cursor_execute_accepts_aware_datetime"
      ]
    ]
  ],
  "test_cursor_execute_returns_aware_datetime": [
    [
      "tests/timezones/tests.py",
      [
        "NewDatabaseTests",
        "test_cursor_execute_returns_aware_datetime"
      ]
    ]
  ],
  "test_cursor_explicit_time_zone": [
    [
      "tests/timezones/tests.py",
      [
        "NewDatabaseTests",
        "test_cursor_explicit_time_zone"
      ]
    ]
  ],
  "test_null_datetime": [
    [
      "tests/timezones/tests.py",
      [
        "NewDatabaseTests",
        "test_null_datetime"
      ]
    ]
  ],
  "test_update_with_timedelta": [
    [
      "tests/timezones/tests.py",
      [
        "NewDatabaseTests",
        "test_update_with_timedelta"
      ]
    ]
  ],
  "test_read_datetime": [
    [
      "tests/timezones/tests.py",
      [
        "ForcedTimeZoneDatabaseTests",
        "test_read_datetime"
      ]
    ]
  ],
  "test_write_datetime": [
    [
      "tests/timezones/tests.py",
      [
        "ForcedTimeZoneDatabaseTests",
        "test_write_datetime"
      ]
    ]
  ],
  "assert_python_contains_datetime": [
    [
      "tests/timezones/tests.py",
      [
        "SerializationTests",
        "assert_python_contains_datetime"
      ]
    ]
  ],
  "assert_json_contains_datetime": [
    [
      "tests/timezones/tests.py",
      [
        "SerializationTests",
        "assert_json_contains_datetime"
      ]
    ]
  ],
  "assert_xml_contains_datetime": [
    [
      "tests/timezones/tests.py",
      [
        "SerializationTests",
        "assert_xml_contains_datetime"
      ]
    ]
  ],
  "assert_yaml_contains_datetime": [
    [
      "tests/timezones/tests.py",
      [
        "SerializationTests",
        "assert_yaml_contains_datetime"
      ]
    ]
  ],
  "test_aware_datetime_with_microsecond": [
    [
      "tests/timezones/tests.py",
      [
        "SerializationTests",
        "test_aware_datetime_with_microsecond"
      ]
    ]
  ],
  "test_localtime_templatetag_and_filters": [
    [
      "tests/timezones/tests.py",
      [
        "TemplateTests",
        "test_localtime_templatetag_and_filters"
      ]
    ]
  ],
  "test_localtime_filters_with_pytz": [
    [
      "tests/timezones/tests.py",
      [
        "TemplateTests",
        "test_localtime_filters_with_pytz"
      ]
    ]
  ],
  "test_localtime_templatetag_invalid_argument": [
    [
      "tests/timezones/tests.py",
      [
        "TemplateTests",
        "test_localtime_templatetag_invalid_argument"
      ]
    ]
  ],
  "test_localtime_filters_do_not_raise_exceptions": [
    [
      "tests/timezones/tests.py",
      [
        "TemplateTests",
        "test_localtime_filters_do_not_raise_exceptions"
      ]
    ]
  ],
  "test_timezone_templatetag": [
    [
      "tests/timezones/tests.py",
      [
        "TemplateTests",
        "test_timezone_templatetag"
      ]
    ]
  ],
  "test_timezone_templatetag_with_pytz": [
    [
      "tests/timezones/tests.py",
      [
        "TemplateTests",
        "test_timezone_templatetag_with_pytz"
      ]
    ]
  ],
  "test_timezone_templatetag_invalid_argument": [
    [
      "tests/timezones/tests.py",
      [
        "TemplateTests",
        "test_timezone_templatetag_invalid_argument"
      ]
    ]
  ],
  "test_get_current_timezone_templatetag": [
    [
      "tests/timezones/tests.py",
      [
        "TemplateTests",
        "test_get_current_timezone_templatetag"
      ]
    ]
  ],
  "test_get_current_timezone_templatetag_with_pytz": [
    [
      "tests/timezones/tests.py",
      [
        "TemplateTests",
        "test_get_current_timezone_templatetag_with_pytz"
      ]
    ]
  ],
  "test_get_current_timezone_templatetag_invalid_argument": [
    [
      "tests/timezones/tests.py",
      [
        "TemplateTests",
        "test_get_current_timezone_templatetag_invalid_argument"
      ]
    ]
  ],
  "test_tz_template_context_processor": [
    [
      "tests/timezones/tests.py",
      [
        "TemplateTests",
        "test_tz_template_context_processor"
      ]
    ]
  ],
  "test_date_and_time_template_filters": [
    [
      "tests/timezones/tests.py",
      [
        "TemplateTests",
        "test_date_and_time_template_filters"
      ]
    ]
  ],
  "test_date_and_time_template_filters_honor_localtime": [
    [
      "tests/timezones/tests.py",
      [
        "TemplateTests",
        "test_date_and_time_template_filters_honor_localtime"
      ]
    ]
  ],
  "test_now_template_tag_uses_current_time_zone": [
    [
      "tests/timezones/tests.py",
      [
        "TemplateTests",
        "test_now_template_tag_uses_current_time_zone"
      ]
    ]
  ],
  "test_form_with_non_existent_time": [
    [
      "tests/timezones/tests.py",
      [
        "LegacyFormsTests",
        "test_form_with_non_existent_time"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "NewFormsTests",
        "test_form_with_non_existent_time"
      ]
    ]
  ],
  "test_form_with_ambiguous_time": [
    [
      "tests/timezones/tests.py",
      [
        "LegacyFormsTests",
        "test_form_with_ambiguous_time"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "NewFormsTests",
        "test_form_with_ambiguous_time"
      ]
    ]
  ],
  "test_split_form": [
    [
      "tests/timezones/tests.py",
      [
        "LegacyFormsTests",
        "test_split_form"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "NewFormsTests",
        "test_split_form"
      ]
    ]
  ],
  "test_model_form": [
    [
      "tests/timezones/tests.py",
      [
        "LegacyFormsTests",
        "test_model_form"
      ]
    ],
    [
      "tests/timezones/tests.py",
      [
        "NewFormsTests",
        "test_model_form"
      ]
    ]
  ],
  "test_form_with_other_timezone": [
    [
      "tests/timezones/tests.py",
      [
        "NewFormsTests",
        "test_form_with_other_timezone"
      ]
    ]
  ],
  "test_localized_form": [
    [
      "tests/timezones/tests.py",
      [
        "NewFormsTests",
        "test_localized_form"
      ]
    ]
  ],
  "test_localized_model_form": [
    [
      "tests/timezones/tests.py",
      [
        "NewFormsTests",
        "test_localized_model_form"
      ]
    ]
  ],
  "test_changelist": [
    [
      "tests/timezones/tests.py",
      [
        "AdminTests",
        "test_changelist"
      ]
    ]
  ],
  "test_changelist_in_other_timezone": [
    [
      "tests/timezones/tests.py",
      [
        "AdminTests",
        "test_changelist_in_other_timezone"
      ]
    ]
  ],
  "test_change_editable": [
    [
      "tests/timezones/tests.py",
      [
        "AdminTests",
        "test_change_editable"
      ]
    ]
  ],
  "test_change_editable_in_other_timezone": [
    [
      "tests/timezones/tests.py",
      [
        "AdminTests",
        "test_change_editable_in_other_timezone"
      ]
    ]
  ],
  "test_change_readonly": [
    [
      "tests/timezones/tests.py",
      [
        "AdminTests",
        "test_change_readonly"
      ]
    ]
  ],
  "test_change_readonly_in_other_timezone": [
    [
      "tests/timezones/tests.py",
      [
        "AdminTests",
        "test_change_readonly_in_other_timezone"
      ]
    ]
  ],
  "notify": [
    [
      "tests/transaction_hooks/tests.py",
      [
        "TestConnectionOnCommit",
        "notify"
      ]
    ]
  ],
  "do": [
    [
      "tests/transaction_hooks/tests.py",
      [
        "TestConnectionOnCommit",
        "do"
      ]
    ]
  ],
  "assertDone": [
    [
      "tests/transaction_hooks/tests.py",
      [
        "TestConnectionOnCommit",
        "assertDone"
      ]
    ]
  ],
  "assertNotified": [
    [
      "tests/transaction_hooks/tests.py",
      [
        "TestConnectionOnCommit",
        "assertNotified"
      ]
    ]
  ],
  "test_executes_immediately_if_no_transaction": [
    [
      "tests/transaction_hooks/tests.py",
      [
        "TestConnectionOnCommit",
        "test_executes_immediately_if_no_transaction"
      ]
    ]
  ],
  "test_delays_execution_until_after_transaction_commit": [
    [
      "tests/transaction_hooks/tests.py",
      [
        "TestConnectionOnCommit",
        "test_delays_execution_until_after_transaction_commit"
      ]
    ]
  ],
  "test_does_not_execute_if_transaction_rolled_back": [
    [
      "tests/transaction_hooks/tests.py",
      [
        "TestConnectionOnCommit",
        "test_does_not_execute_if_transaction_rolled_back"
      ]
    ]
  ],
  "test_executes_only_after_final_transaction_committed": [
    [
      "tests/transaction_hooks/tests.py",
      [
        "TestConnectionOnCommit",
        "test_executes_only_after_final_transaction_committed"
      ]
    ]
  ],
  "test_discards_hooks_from_rolled_back_savepoint": [
    [
      "tests/transaction_hooks/tests.py",
      [
        "TestConnectionOnCommit",
        "test_discards_hooks_from_rolled_back_savepoint"
      ]
    ]
  ],
  "test_no_hooks_run_from_failed_transaction": [
    [
      "tests/transaction_hooks/tests.py",
      [
        "TestConnectionOnCommit",
        "test_no_hooks_run_from_failed_transaction"
      ]
    ]
  ],
  "test_inner_savepoint_rolled_back_with_outer": [
    [
      "tests/transaction_hooks/tests.py",
      [
        "TestConnectionOnCommit",
        "test_inner_savepoint_rolled_back_with_outer"
      ]
    ]
  ],
  "test_no_savepoints_atomic_merged_with_outer": [
    [
      "tests/transaction_hooks/tests.py",
      [
        "TestConnectionOnCommit",
        "test_no_savepoints_atomic_merged_with_outer"
      ]
    ]
  ],
  "test_inner_savepoint_does_not_affect_outer": [
    [
      "tests/transaction_hooks/tests.py",
      [
        "TestConnectionOnCommit",
        "test_inner_savepoint_does_not_affect_outer"
      ]
    ]
  ],
  "test_runs_hooks_in_order_registered": [
    [
      "tests/transaction_hooks/tests.py",
      [
        "TestConnectionOnCommit",
        "test_runs_hooks_in_order_registered"
      ]
    ]
  ],
  "test_hooks_cleared_after_successful_commit": [
    [
      "tests/transaction_hooks/tests.py",
      [
        "TestConnectionOnCommit",
        "test_hooks_cleared_after_successful_commit"
      ]
    ]
  ],
  "test_hooks_cleared_after_rollback": [
    [
      "tests/transaction_hooks/tests.py",
      [
        "TestConnectionOnCommit",
        "test_hooks_cleared_after_rollback"
      ]
    ]
  ],
  "test_hooks_cleared_on_reconnect": [
    [
      "tests/transaction_hooks/tests.py",
      [
        "TestConnectionOnCommit",
        "test_hooks_cleared_on_reconnect"
      ]
    ]
  ],
  "test_error_in_hook_doesnt_prevent_clearing_hooks": [
    [
      "tests/transaction_hooks/tests.py",
      [
        "TestConnectionOnCommit",
        "test_error_in_hook_doesnt_prevent_clearing_hooks"
      ]
    ]
  ],
  "test_db_query_in_hook": [
    [
      "tests/transaction_hooks/tests.py",
      [
        "TestConnectionOnCommit",
        "test_db_query_in_hook"
      ]
    ]
  ],
  "test_transaction_in_hook": [
    [
      "tests/transaction_hooks/tests.py",
      [
        "TestConnectionOnCommit",
        "test_transaction_in_hook"
      ]
    ]
  ],
  "test_hook_in_hook": [
    [
      "tests/transaction_hooks/tests.py",
      [
        "TestConnectionOnCommit",
        "test_hook_in_hook"
      ]
    ]
  ],
  "test_raises_exception_non_autocommit_mode": [
    [
      "tests/transaction_hooks/tests.py",
      [
        "TestConnectionOnCommit",
        "test_raises_exception_non_autocommit_mode"
      ]
    ]
  ],
  "test_decorator_syntax_commit": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicTests",
        "test_decorator_syntax_commit"
      ]
    ]
  ],
  "test_decorator_syntax_rollback": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicTests",
        "test_decorator_syntax_rollback"
      ]
    ]
  ],
  "test_alternate_decorator_syntax_commit": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicTests",
        "test_alternate_decorator_syntax_commit"
      ]
    ]
  ],
  "test_alternate_decorator_syntax_rollback": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicTests",
        "test_alternate_decorator_syntax_rollback"
      ]
    ]
  ],
  "test_commit": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicTests",
        "test_commit"
      ]
    ]
  ],
  "test_rollback": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicTests",
        "test_rollback"
      ]
    ]
  ],
  "test_nested_commit_commit": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicTests",
        "test_nested_commit_commit"
      ]
    ]
  ],
  "test_nested_commit_rollback": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicTests",
        "test_nested_commit_rollback"
      ]
    ]
  ],
  "test_nested_rollback_commit": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicTests",
        "test_nested_rollback_commit"
      ]
    ]
  ],
  "test_nested_rollback_rollback": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicTests",
        "test_nested_rollback_rollback"
      ]
    ]
  ],
  "test_merged_commit_commit": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicTests",
        "test_merged_commit_commit"
      ]
    ]
  ],
  "test_merged_commit_rollback": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicTests",
        "test_merged_commit_rollback"
      ]
    ]
  ],
  "test_merged_rollback_commit": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicTests",
        "test_merged_rollback_commit"
      ]
    ]
  ],
  "test_merged_rollback_rollback": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicTests",
        "test_merged_rollback_rollback"
      ]
    ]
  ],
  "test_reuse_commit_commit": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicTests",
        "test_reuse_commit_commit"
      ]
    ]
  ],
  "test_reuse_commit_rollback": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicTests",
        "test_reuse_commit_rollback"
      ]
    ]
  ],
  "test_reuse_rollback_commit": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicTests",
        "test_reuse_rollback_commit"
      ]
    ]
  ],
  "test_reuse_rollback_rollback": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicTests",
        "test_reuse_rollback_rollback"
      ]
    ]
  ],
  "test_force_rollback": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicTests",
        "test_force_rollback"
      ]
    ]
  ],
  "test_prevent_rollback": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicTests",
        "test_prevent_rollback"
      ]
    ]
  ],
  "test_merged_outer_rollback": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicMergeTests",
        "test_merged_outer_rollback"
      ]
    ]
  ],
  "test_merged_inner_savepoint_rollback": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicMergeTests",
        "test_merged_inner_savepoint_rollback"
      ]
    ]
  ],
  "test_atomic_prevents_setting_autocommit": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicErrorsTests",
        "test_atomic_prevents_setting_autocommit"
      ]
    ]
  ],
  "test_atomic_prevents_calling_transaction_methods": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicErrorsTests",
        "test_atomic_prevents_calling_transaction_methods"
      ]
    ]
  ],
  "test_atomic_prevents_queries_in_broken_transaction": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicErrorsTests",
        "test_atomic_prevents_queries_in_broken_transaction"
      ]
    ]
  ],
  "test_atomic_allows_queries_after_fixing_transaction": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicErrorsTests",
        "test_atomic_allows_queries_after_fixing_transaction"
      ]
    ]
  ],
  "test_atomic_prevents_queries_in_broken_transaction_after_client_close": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicErrorsTests",
        "test_atomic_prevents_queries_in_broken_transaction_after_client_close"
      ]
    ]
  ],
  "other_thread": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicMySQLTests",
        "test_implicit_savepoint_rollback",
        "other_thread"
      ]
    ]
  ],
  "test_implicit_savepoint_rollback": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicMySQLTests",
        "test_implicit_savepoint_rollback"
      ]
    ]
  ],
  "test_wrap_callable_instance": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicMiscTests",
        "test_wrap_callable_instance"
      ]
    ]
  ],
  "test_atomic_does_not_leak_savepoints_on_failure": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicMiscTests",
        "test_atomic_does_not_leak_savepoints_on_failure"
      ]
    ]
  ],
  "test_mark_for_rollback_on_error_in_transaction": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicMiscTests",
        "test_mark_for_rollback_on_error_in_transaction"
      ]
    ]
  ],
  "test_mark_for_rollback_on_error_in_autocommit": [
    [
      "tests/transactions/tests.py",
      [
        "AtomicMiscTests",
        "test_mark_for_rollback_on_error_in_autocommit"
      ]
    ]
  ],
  "test_orm_query_after_error_and_rollback": [
    [
      "tests/transactions/tests.py",
      [
        "NonAutocommitTests",
        "test_orm_query_after_error_and_rollback"
      ]
    ]
  ],
  "test_orm_query_without_autocommit": [
    [
      "tests/transactions/tests.py",
      [
        "NonAutocommitTests",
        "test_orm_query_without_autocommit"
      ]
    ]
  ],
  "test_many_to_many_between_unmanaged": [
    [
      "tests/unmanaged_models/tests.py",
      [
        "ManyToManyUnmanagedTests",
        "test_many_to_many_between_unmanaged"
      ]
    ]
  ],
  "test_many_to_many_between_unmanaged_and_managed": [
    [
      "tests/unmanaged_models/tests.py",
      [
        "ManyToManyUnmanagedTests",
        "test_many_to_many_between_unmanaged_and_managed"
      ]
    ]
  ],
  "test_nonempty_update": [
    [
      "tests/update/tests.py",
      [
        "SimpleTest",
        "test_nonempty_update"
      ]
    ]
  ],
  "test_empty_update": [
    [
      "tests/update/tests.py",
      [
        "SimpleTest",
        "test_empty_update"
      ]
    ]
  ],
  "test_nonempty_update_with_inheritance": [
    [
      "tests/update/tests.py",
      [
        "SimpleTest",
        "test_nonempty_update_with_inheritance"
      ]
    ]
  ],
  "test_empty_update_with_inheritance": [
    [
      "tests/update/tests.py",
      [
        "SimpleTest",
        "test_empty_update_with_inheritance"
      ]
    ]
  ],
  "test_foreign_key_update_with_id": [
    [
      "tests/update/tests.py",
      [
        "SimpleTest",
        "test_foreign_key_update_with_id"
      ]
    ]
  ],
  "test_update_multiple_objects": [
    [
      "tests/update/tests.py",
      [
        "AdvancedTests",
        "test_update_multiple_objects"
      ]
    ]
  ],
  "test_update_multiple_fields": [
    [
      "tests/update/tests.py",
      [
        "AdvancedTests",
        "test_update_multiple_fields"
      ]
    ]
  ],
  "test_update_all": [
    [
      "tests/update/tests.py",
      [
        "AdvancedTests",
        "test_update_all"
      ]
    ]
  ],
  "test_update_slice_fail": [
    [
      "tests/update/tests.py",
      [
        "AdvancedTests",
        "test_update_slice_fail"
      ]
    ]
  ],
  "test_update_respects_to_field": [
    [
      "tests/update/tests.py",
      [
        "AdvancedTests",
        "test_update_respects_to_field"
      ]
    ]
  ],
  "test_update_m2m_field": [
    [
      "tests/update/tests.py",
      [
        "AdvancedTests",
        "test_update_m2m_field"
      ]
    ]
  ],
  "test_update_annotated_queryset": [
    [
      "tests/update/tests.py",
      [
        "AdvancedTests",
        "test_update_annotated_queryset"
      ]
    ]
  ],
  "test_update_annotated_multi_table_queryset": [
    [
      "tests/update/tests.py",
      [
        "AdvancedTests",
        "test_update_annotated_multi_table_queryset"
      ]
    ]
  ],
  "test_update_with_joined_field_annotation": [
    [
      "tests/update/tests.py",
      [
        "AdvancedTests",
        "test_update_with_joined_field_annotation"
      ]
    ]
  ],
  "test_update_fields_basic": [
    [
      "tests/update_only_fields/tests.py",
      [
        "UpdateOnlyFieldsTests",
        "test_update_fields_basic"
      ]
    ]
  ],
  "test_update_fields_deferred": [
    [
      "tests/update_only_fields/tests.py",
      [
        "UpdateOnlyFieldsTests",
        "test_update_fields_deferred"
      ]
    ]
  ],
  "test_update_fields_only_1": [
    [
      "tests/update_only_fields/tests.py",
      [
        "UpdateOnlyFieldsTests",
        "test_update_fields_only_1"
      ]
    ]
  ],
  "test_update_fields_only_2": [
    [
      "tests/update_only_fields/tests.py",
      [
        "UpdateOnlyFieldsTests",
        "test_update_fields_only_2"
      ]
    ]
  ],
  "test_update_fields_only_repeated": [
    [
      "tests/update_only_fields/tests.py",
      [
        "UpdateOnlyFieldsTests",
        "test_update_fields_only_repeated"
      ]
    ]
  ],
  "test_update_fields_inheritance_defer": [
    [
      "tests/update_only_fields/tests.py",
      [
        "UpdateOnlyFieldsTests",
        "test_update_fields_inheritance_defer"
      ]
    ]
  ],
  "test_update_fields_fk_defer": [
    [
      "tests/update_only_fields/tests.py",
      [
        "UpdateOnlyFieldsTests",
        "test_update_fields_fk_defer"
      ]
    ]
  ],
  "test_select_related_only_interaction": [
    [
      "tests/update_only_fields/tests.py",
      [
        "UpdateOnlyFieldsTests",
        "test_select_related_only_interaction"
      ]
    ]
  ],
  "test_update_fields_m2m": [
    [
      "tests/update_only_fields/tests.py",
      [
        "UpdateOnlyFieldsTests",
        "test_update_fields_m2m"
      ]
    ]
  ],
  "test_update_fields_inheritance": [
    [
      "tests/update_only_fields/tests.py",
      [
        "UpdateOnlyFieldsTests",
        "test_update_fields_inheritance"
      ]
    ]
  ],
  "test_update_fields_inheritance_with_proxy_model": [
    [
      "tests/update_only_fields/tests.py",
      [
        "UpdateOnlyFieldsTests",
        "test_update_fields_inheritance_with_proxy_model"
      ]
    ]
  ],
  "test_update_fields_signals": [
    [
      "tests/update_only_fields/tests.py",
      [
        "UpdateOnlyFieldsTests",
        "test_update_fields_signals"
      ]
    ]
  ],
  "test_update_fields_incorrect_params": [
    [
      "tests/update_only_fields/tests.py",
      [
        "UpdateOnlyFieldsTests",
        "test_update_fields_incorrect_params"
      ]
    ]
  ],
  "test_empty_update_fields": [
    [
      "tests/update_only_fields/tests.py",
      [
        "UpdateOnlyFieldsTests",
        "test_empty_update_fields"
      ]
    ]
  ],
  "test_num_queries_inheritance": [
    [
      "tests/update_only_fields/tests.py",
      [
        "UpdateOnlyFieldsTests",
        "test_num_queries_inheritance"
      ]
    ]
  ],
  "regex_1": [
    [
      "tests/urlpatterns/converters.py",
      [
        "DynamicConverter",
        "regex_1"
      ]
    ]
  ],
  "register_to_python": [
    [
      "tests/urlpatterns/converters.py",
      [
        "DynamicConverter",
        "register_to_python"
      ]
    ]
  ],
  "register_to_url": [
    [
      "tests/urlpatterns/converters.py",
      [
        "DynamicConverter",
        "register_to_url"
      ]
    ]
  ],
  "test_resolver_cache_default__root_urlconf": [
    [
      "tests/urlpatterns/test_resolvers.py",
      [
        "ResolverCacheTests",
        "test_resolver_cache_default__root_urlconf"
      ]
    ]
  ],
  "test_path_lookup_without_parameters": [
    [
      "tests/urlpatterns/tests.py",
      [
        "SimplifiedURLTests",
        "test_path_lookup_without_parameters"
      ]
    ]
  ],
  "test_path_lookup_with_typed_parameters": [
    [
      "tests/urlpatterns/tests.py",
      [
        "SimplifiedURLTests",
        "test_path_lookup_with_typed_parameters"
      ]
    ]
  ],
  "test_path_lookup_with_multiple_parameters": [
    [
      "tests/urlpatterns/tests.py",
      [
        "SimplifiedURLTests",
        "test_path_lookup_with_multiple_parameters"
      ]
    ]
  ],
  "test_two_variable_at_start_of_path_pattern": [
    [
      "tests/urlpatterns/tests.py",
      [
        "SimplifiedURLTests",
        "test_two_variable_at_start_of_path_pattern"
      ]
    ]
  ],
  "test_re_path": [
    [
      "tests/urlpatterns/tests.py",
      [
        "SimplifiedURLTests",
        "test_re_path"
      ]
    ]
  ],
  "test_re_path_with_optional_parameter": [
    [
      "tests/urlpatterns/tests.py",
      [
        "SimplifiedURLTests",
        "test_re_path_with_optional_parameter"
      ]
    ]
  ],
  "test_re_path_with_missing_optional_parameter": [
    [
      "tests/urlpatterns/tests.py",
      [
        "SimplifiedURLTests",
        "test_re_path_with_missing_optional_parameter"
      ]
    ]
  ],
  "test_path_lookup_with_inclusion": [
    [
      "tests/urlpatterns/tests.py",
      [
        "SimplifiedURLTests",
        "test_path_lookup_with_inclusion"
      ]
    ]
  ],
  "test_path_lookup_with_empty_string_inclusion": [
    [
      "tests/urlpatterns/tests.py",
      [
        "SimplifiedURLTests",
        "test_path_lookup_with_empty_string_inclusion"
      ]
    ]
  ],
  "test_path_lookup_with_double_inclusion": [
    [
      "tests/urlpatterns/tests.py",
      [
        "SimplifiedURLTests",
        "test_path_lookup_with_double_inclusion"
      ]
    ]
  ],
  "test_path_reverse_without_parameter": [
    [
      "tests/urlpatterns/tests.py",
      [
        "SimplifiedURLTests",
        "test_path_reverse_without_parameter"
      ]
    ]
  ],
  "test_path_reverse_with_parameter": [
    [
      "tests/urlpatterns/tests.py",
      [
        "SimplifiedURLTests",
        "test_path_reverse_with_parameter"
      ]
    ]
  ],
  "test_converter_resolve": [
    [
      "tests/urlpatterns/tests.py",
      [
        "SimplifiedURLTests",
        "test_converter_resolve"
      ]
    ]
  ],
  "test_converter_reverse": [
    [
      "tests/urlpatterns/tests.py",
      [
        "SimplifiedURLTests",
        "test_converter_reverse"
      ]
    ]
  ],
  "test_converter_reverse_with_second_layer_instance_namespace": [
    [
      "tests/urlpatterns/tests.py",
      [
        "SimplifiedURLTests",
        "test_converter_reverse_with_second_layer_instance_namespace"
      ]
    ]
  ],
  "test_path_inclusion_is_matchable": [
    [
      "tests/urlpatterns/tests.py",
      [
        "SimplifiedURLTests",
        "test_path_inclusion_is_matchable"
      ]
    ]
  ],
  "test_path_inclusion_is_reversible": [
    [
      "tests/urlpatterns/tests.py",
      [
        "SimplifiedURLTests",
        "test_path_inclusion_is_reversible"
      ]
    ]
  ],
  "test_invalid_converter": [
    [
      "tests/urlpatterns/tests.py",
      [
        "SimplifiedURLTests",
        "test_invalid_converter"
      ]
    ]
  ],
  "test_space_in_route": [
    [
      "tests/urlpatterns/tests.py",
      [
        "SimplifiedURLTests",
        "test_space_in_route"
      ]
    ]
  ],
  "no_converter": [
    [
      "tests/urlpatterns/tests.py",
      [
        "ConverterTests",
        "test_matching_urls",
        "no_converter"
      ]
    ]
  ],
  "test_matching_urls": [
    [
      "tests/urlpatterns/tests.py",
      [
        "ConverterTests",
        "test_matching_urls"
      ]
    ]
  ],
  "test_nonmatching_urls": [
    [
      "tests/urlpatterns/tests.py",
      [
        "ConverterTests",
        "test_nonmatching_urls"
      ]
    ]
  ],
  "requires_tiny_int": [
    [
      "tests/urlpatterns/tests.py",
      [
        "SameNameTests",
        "test_matching_urls_same_name",
        "requires_tiny_int"
      ]
    ]
  ],
  "test_matching_urls_same_name": [
    [
      "tests/urlpatterns/tests.py",
      [
        "SameNameTests",
        "test_matching_urls_same_name"
      ]
    ]
  ],
  "test_integer_parameter_name_causes_exception": [
    [
      "tests/urlpatterns/tests.py",
      [
        "ParameterRestrictionTests",
        "test_integer_parameter_name_causes_exception"
      ]
    ]
  ],
  "test_non_identifier_parameter_name_causes_exception": [
    [
      "tests/urlpatterns/tests.py",
      [
        "ParameterRestrictionTests",
        "test_non_identifier_parameter_name_causes_exception"
      ]
    ]
  ],
  "test_allows_non_ascii_but_valid_identifiers": [
    [
      "tests/urlpatterns/tests.py",
      [
        "ParameterRestrictionTests",
        "test_allows_non_ascii_but_valid_identifiers"
      ]
    ]
  ],
  "test_resolve_value_error_means_no_match": [
    [
      "tests/urlpatterns/tests.py",
      [
        "ConversionExceptionTests",
        "test_resolve_value_error_means_no_match"
      ]
    ]
  ],
  "test_resolve_type_error_propagates": [
    [
      "tests/urlpatterns/tests.py",
      [
        "ConversionExceptionTests",
        "test_resolve_type_error_propagates"
      ]
    ]
  ],
  "test_reverse_value_error_means_no_match": [
    [
      "tests/urlpatterns/tests.py",
      [
        "ConversionExceptionTests",
        "test_reverse_value_error_means_no_match"
      ]
    ]
  ],
  "test_reverse_type_error_propagates": [
    [
      "tests/urlpatterns/tests.py",
      [
        "ConversionExceptionTests",
        "test_reverse_type_error_propagates"
      ]
    ]
  ],
  "classmethod_view": [
    [
      "tests/urlpatterns_reverse/method_view_urls.py",
      [
        "ViewContainer",
        "classmethod_view"
      ]
    ]
  ],
  "view1": [
    [
      "tests/urlpatterns_reverse/nested_urls.py",
      [
        "view1"
      ]
    ]
  ],
  "view2": [
    [
      "tests/urlpatterns_reverse/nested_urls.py",
      [
        "view2"
      ]
    ]
  ],
  "test_translated_regex_compiled_per_language": [
    [
      "tests/urlpatterns_reverse/test_localeregexdescriptor.py",
      [
        "LocaleRegexDescriptorTests",
        "test_translated_regex_compiled_per_language"
      ]
    ]
  ],
  "test_nontranslated_regex_compiled_once": [
    [
      "tests/urlpatterns_reverse/test_localeregexdescriptor.py",
      [
        "LocaleRegexDescriptorTests",
        "test_nontranslated_regex_compiled_once"
      ]
    ]
  ],
  "test_regex_compile_error": [
    [
      "tests/urlpatterns_reverse/test_localeregexdescriptor.py",
      [
        "LocaleRegexDescriptorTests",
        "test_regex_compile_error"
      ]
    ]
  ],
  "test_access_locale_regex_descriptor": [
    [
      "tests/urlpatterns_reverse/test_localeregexdescriptor.py",
      [
        "LocaleRegexDescriptorTests",
        "test_access_locale_regex_descriptor"
      ]
    ]
  ],
  "test_no_urls_exception": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "NoURLPatternsTests",
        "test_no_urls_exception"
      ]
    ]
  ],
  "test_urlpattern_reverse": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "URLPatternReverse",
        "test_urlpattern_reverse"
      ]
    ]
  ],
  "test_reverse_none": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "URLPatternReverse",
        "test_reverse_none"
      ]
    ]
  ],
  "test_mixing_args_and_kwargs": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "URLPatternReverse",
        "test_mixing_args_and_kwargs"
      ]
    ]
  ],
  "test_prefix_braces": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "URLPatternReverse",
        "test_prefix_braces"
      ]
    ]
  ],
  "test_prefix_parenthesis": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "URLPatternReverse",
        "test_prefix_parenthesis"
      ]
    ]
  ],
  "test_prefix_format_char": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "URLPatternReverse",
        "test_prefix_format_char"
      ]
    ]
  ],
  "test_non_urlsafe_prefix_with_args": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "URLPatternReverse",
        "test_non_urlsafe_prefix_with_args"
      ]
    ]
  ],
  "test_patterns_reported": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "URLPatternReverse",
        "test_patterns_reported"
      ]
    ]
  ],
  "test_script_name_escaping": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "URLPatternReverse",
        "test_script_name_escaping"
      ]
    ]
  ],
  "test_view_not_found_message": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "URLPatternReverse",
        "test_view_not_found_message"
      ]
    ]
  ],
  "test_no_args_message": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "URLPatternReverse",
        "test_no_args_message"
      ]
    ]
  ],
  "test_illegal_args_message": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "URLPatternReverse",
        "test_illegal_args_message"
      ]
    ]
  ],
  "test_illegal_kwargs_message": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "URLPatternReverse",
        "test_illegal_kwargs_message"
      ]
    ]
  ],
  "test_resolver_repr": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ResolverTests",
        "test_resolver_repr"
      ]
    ]
  ],
  "test_reverse_lazy_object_coercion_by_resolve": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ResolverTests",
        "test_reverse_lazy_object_coercion_by_resolve"
      ]
    ]
  ],
  "test_resolver_reverse": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ResolverTests",
        "test_resolver_reverse"
      ]
    ]
  ],
  "test_resolver_reverse_conflict": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ResolverTests",
        "test_resolver_reverse_conflict"
      ]
    ]
  ],
  "test_non_regex": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ResolverTests",
        "test_non_regex"
      ]
    ]
  ],
  "test_404_tried_urls_have_names": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ResolverTests",
        "test_404_tried_urls_have_names"
      ]
    ]
  ],
  "test_populate_concurrency": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ResolverTests",
        "test_populate_concurrency"
      ]
    ]
  ],
  "test_redirect_with_lazy_reverse": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ReverseLazyTest",
        "test_redirect_with_lazy_reverse"
      ]
    ]
  ],
  "test_user_permission_with_lazy_reverse": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ReverseLazyTest",
        "test_user_permission_with_lazy_reverse"
      ]
    ]
  ],
  "test_inserting_reverse_lazy_into_string": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ReverseLazyTest",
        "test_inserting_reverse_lazy_into_string"
      ]
    ]
  ],
  "test_build_absolute_uri": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ReverseLazyTest",
        "test_build_absolute_uri"
      ]
    ]
  ],
  "test_lazy_in_settings": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ReverseLazySettingsTest",
        "test_lazy_in_settings"
      ]
    ]
  ],
  "test_redirect_to_object": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ReverseShortcutTests",
        "test_redirect_to_object"
      ]
    ]
  ],
  "test_redirect_to_view_name": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ReverseShortcutTests",
        "test_redirect_to_view_name"
      ]
    ]
  ],
  "test_redirect_to_url": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ReverseShortcutTests",
        "test_redirect_to_url"
      ]
    ]
  ],
  "test_no_illegal_imports": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ReverseShortcutTests",
        "test_no_illegal_imports"
      ]
    ]
  ],
  "test_reverse_by_path_nested": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ReverseShortcutTests",
        "test_reverse_by_path_nested"
      ]
    ]
  ],
  "test_redirect_view_object": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ReverseShortcutTests",
        "test_redirect_view_object"
      ]
    ]
  ],
  "test_ambiguous_object": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "NamespaceTests",
        "test_ambiguous_object"
      ]
    ]
  ],
  "test_ambiguous_urlpattern": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "NamespaceTests",
        "test_ambiguous_urlpattern"
      ]
    ]
  ],
  "test_non_existent_namespace": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "NamespaceTests",
        "test_non_existent_namespace"
      ]
    ]
  ],
  "test_normal_name": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "NamespaceTests",
        "test_normal_name"
      ]
    ]
  ],
  "test_simple_included_name": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "NamespaceTests",
        "test_simple_included_name"
      ]
    ]
  ],
  "test_namespace_object": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "NamespaceTests",
        "test_namespace_object"
      ]
    ]
  ],
  "test_app_object": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "NamespaceTests",
        "test_app_object"
      ]
    ]
  ],
  "test_app_object_default_namespace": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "NamespaceTests",
        "test_app_object_default_namespace"
      ]
    ]
  ],
  "test_embedded_namespace_object": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "NamespaceTests",
        "test_embedded_namespace_object"
      ]
    ]
  ],
  "test_namespace_pattern": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "NamespaceTests",
        "test_namespace_pattern"
      ]
    ]
  ],
  "test_app_name_pattern": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "NamespaceTests",
        "test_app_name_pattern"
      ]
    ]
  ],
  "test_namespace_pattern_with_variable_prefix": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "NamespaceTests",
        "test_namespace_pattern_with_variable_prefix"
      ]
    ]
  ],
  "test_multiple_namespace_pattern": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "NamespaceTests",
        "test_multiple_namespace_pattern"
      ]
    ]
  ],
  "test_nested_namespace_pattern": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "NamespaceTests",
        "test_nested_namespace_pattern"
      ]
    ]
  ],
  "test_app_lookup_object": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "NamespaceTests",
        "test_app_lookup_object"
      ]
    ]
  ],
  "test_app_lookup_object_with_default": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "NamespaceTests",
        "test_app_lookup_object_with_default"
      ]
    ]
  ],
  "test_app_lookup_object_without_default": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "NamespaceTests",
        "test_app_lookup_object_without_default"
      ]
    ]
  ],
  "test_special_chars_namespace": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "NamespaceTests",
        "test_special_chars_namespace"
      ]
    ]
  ],
  "test_namespaces_with_variables": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "NamespaceTests",
        "test_namespaces_with_variables"
      ]
    ]
  ],
  "test_nested_app_lookup": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "NamespaceTests",
        "test_nested_app_lookup"
      ]
    ]
  ],
  "test_current_app_no_partial_match": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "NamespaceTests",
        "test_current_app_no_partial_match"
      ]
    ]
  ],
  "test_urlconf": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "RequestURLconfTests",
        "test_urlconf"
      ]
    ]
  ],
  "test_urlconf_overridden": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "RequestURLconfTests",
        "test_urlconf_overridden"
      ]
    ]
  ],
  "test_urlconf_overridden_with_null": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "RequestURLconfTests",
        "test_urlconf_overridden_with_null"
      ]
    ]
  ],
  "test_reverse_inner_in_response_middleware": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "RequestURLconfTests",
        "test_reverse_inner_in_response_middleware"
      ]
    ]
  ],
  "test_reverse_outer_in_response_middleware": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "RequestURLconfTests",
        "test_reverse_outer_in_response_middleware"
      ]
    ]
  ],
  "test_reverse_inner_in_streaming": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "RequestURLconfTests",
        "test_reverse_inner_in_streaming"
      ]
    ]
  ],
  "test_reverse_outer_in_streaming": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "RequestURLconfTests",
        "test_reverse_outer_in_streaming"
      ]
    ]
  ],
  "test_urlconf_is_reset_after_request": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "RequestURLconfTests",
        "test_urlconf_is_reset_after_request"
      ]
    ]
  ],
  "test_named_handlers": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ErrorHandlerResolutionTests",
        "test_named_handlers"
      ]
    ]
  ],
  "test_callable_handlers": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ErrorHandlerResolutionTests",
        "test_callable_handlers"
      ]
    ]
  ],
  "test_default_handler": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "DefaultErrorHandlerTests",
        "test_default_handler"
      ]
    ]
  ],
  "test_no_handler_exception": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "NoRootUrlConfTests",
        "test_no_handler_exception"
      ]
    ]
  ],
  "test_urlpattern_resolve": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ResolverMatchTests",
        "test_urlpattern_resolve"
      ]
    ]
  ],
  "test_resolver_match_on_request": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ResolverMatchTests",
        "test_resolver_match_on_request"
      ]
    ]
  ],
  "test_resolver_match_on_request_before_resolution": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ResolverMatchTests",
        "test_resolver_match_on_request_before_resolution"
      ]
    ]
  ],
  "test_noncallable_view": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ErroneousViewTests",
        "test_noncallable_view"
      ]
    ]
  ],
  "test_invalid_regex": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ErroneousViewTests",
        "test_invalid_regex"
      ]
    ]
  ],
  "test_view_loading": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ViewLoadingTests",
        "test_view_loading"
      ]
    ]
  ],
  "test_view_does_not_exist": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ViewLoadingTests",
        "test_view_does_not_exist"
      ]
    ]
  ],
  "test_attributeerror_not_hidden": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ViewLoadingTests",
        "test_attributeerror_not_hidden"
      ]
    ]
  ],
  "test_non_string_value": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ViewLoadingTests",
        "test_non_string_value"
      ]
    ]
  ],
  "test_string_without_dot": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ViewLoadingTests",
        "test_string_without_dot"
      ]
    ]
  ],
  "test_module_does_not_exist": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ViewLoadingTests",
        "test_module_does_not_exist"
      ]
    ]
  ],
  "test_parent_module_does_not_exist": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "ViewLoadingTests",
        "test_parent_module_does_not_exist"
      ]
    ]
  ],
  "test_include_urls": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "IncludeTests",
        "test_include_urls"
      ]
    ]
  ],
  "test_include_namespace": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "IncludeTests",
        "test_include_namespace"
      ]
    ]
  ],
  "test_include_4_tuple": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "IncludeTests",
        "test_include_4_tuple"
      ]
    ]
  ],
  "test_include_3_tuple": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "IncludeTests",
        "test_include_3_tuple"
      ]
    ]
  ],
  "test_include_3_tuple_namespace": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "IncludeTests",
        "test_include_3_tuple_namespace"
      ]
    ]
  ],
  "test_include_2_tuple": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "IncludeTests",
        "test_include_2_tuple"
      ]
    ]
  ],
  "test_include_2_tuple_namespace": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "IncludeTests",
        "test_include_2_tuple_namespace"
      ]
    ]
  ],
  "test_include_app_name": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "IncludeTests",
        "test_include_app_name"
      ]
    ]
  ],
  "test_include_app_name_namespace": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "IncludeTests",
        "test_include_app_name_namespace"
      ]
    ]
  ],
  "test_valid_resolve": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "LookaheadTests",
        "test_valid_resolve"
      ]
    ]
  ],
  "test_invalid_resolve": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "LookaheadTests",
        "test_invalid_resolve"
      ]
    ]
  ],
  "test_valid_reverse": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "LookaheadTests",
        "test_valid_reverse"
      ]
    ]
  ],
  "test_invalid_reverse": [
    [
      "tests/urlpatterns_reverse/tests.py",
      [
        "LookaheadTests",
        "test_invalid_reverse"
      ]
    ]
  ],
  "inner_view": [
    [
      "tests/urlpatterns_reverse/urlconf_inner.py",
      [
        "inner_view"
      ]
    ]
  ],
  "app_urls": [
    [
      "tests/urlpatterns_reverse/utils.py",
      [
        "URLObject",
        "app_urls"
      ]
    ]
  ],
  "absolute_kwargs_view": [
    [
      "tests/urlpatterns_reverse/views.py",
      [
        "absolute_kwargs_view"
      ]
    ]
  ],
  "defaults_view": [
    [
      "tests/urlpatterns_reverse/views.py",
      [
        "defaults_view"
      ]
    ]
  ],
  "erroneous_view": [
    [
      "tests/urlpatterns_reverse/views.py",
      [
        "erroneous_view"
      ]
    ]
  ],
  "pass_resolver_match_view": [
    [
      "tests/urlpatterns_reverse/views.py",
      [
        "pass_resolver_match_view"
      ]
    ]
  ],
  "login_required_view": [
    [
      "tests/urlpatterns_reverse/views.py",
      [
        "login_required_view"
      ]
    ]
  ],
  "test_command": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandTests",
        "test_command"
      ]
    ]
  ],
  "test_command_style": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandTests",
        "test_command_style"
      ]
    ]
  ],
  "test_language_preserved": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandTests",
        "test_language_preserved"
      ]
    ]
  ],
  "test_explode": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandTests",
        "test_explode"
      ]
    ]
  ],
  "test_system_exit": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandTests",
        "test_system_exit"
      ]
    ]
  ],
  "test_no_translations_deactivate_translations": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandTests",
        "test_no_translations_deactivate_translations"
      ]
    ]
  ],
  "test_find_command_without_PATH": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandTests",
        "test_find_command_without_PATH"
      ]
    ]
  ],
  "test_discover_commands_in_eggs": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandTests",
        "test_discover_commands_in_eggs"
      ]
    ]
  ],
  "test_call_command_option_parsing": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandTests",
        "test_call_command_option_parsing"
      ]
    ]
  ],
  "test_call_command_option_parsing_non_string_arg": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandTests",
        "test_call_command_option_parsing_non_string_arg"
      ]
    ]
  ],
  "test_calling_a_command_with_only_empty_parameter_should_ends_gracefully": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandTests",
        "test_calling_a_command_with_only_empty_parameter_should_ends_gracefully"
      ]
    ]
  ],
  "test_calling_command_with_app_labels_and_parameters_should_be_ok": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandTests",
        "test_calling_command_with_app_labels_and_parameters_should_be_ok"
      ]
    ]
  ],
  "test_calling_command_with_parameters_and_app_labels_at_the_end_should_be_ok": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandTests",
        "test_calling_command_with_parameters_and_app_labels_at_the_end_should_be_ok"
      ]
    ]
  ],
  "test_calling_a_command_with_no_app_labels_and_parameters_should_raise_a_command_error": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandTests",
        "test_calling_a_command_with_no_app_labels_and_parameters_should_raise_a_command_error"
      ]
    ]
  ],
  "test_output_transaction": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandTests",
        "test_output_transaction"
      ]
    ]
  ],
  "test_call_command_no_checks": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandTests",
        "test_call_command_no_checks"
      ]
    ]
  ],
  "test_check_migrations": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandTests",
        "test_check_migrations"
      ]
    ]
  ],
  "test_call_command_unrecognized_option": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandTests",
        "test_call_command_unrecognized_option"
      ]
    ]
  ],
  "test_call_command_with_required_parameters_in_options": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandTests",
        "test_call_command_with_required_parameters_in_options"
      ]
    ]
  ],
  "test_call_command_with_required_parameters_in_mixed_options": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandTests",
        "test_call_command_with_required_parameters_in_mixed_options"
      ]
    ]
  ],
  "test_command_add_arguments_after_common_arguments": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandTests",
        "test_command_add_arguments_after_common_arguments"
      ]
    ]
  ],
  "test_mutually_exclusive_group_required_options": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandTests",
        "test_mutually_exclusive_group_required_options"
      ]
    ]
  ],
  "test_subparser": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandTests",
        "test_subparser"
      ]
    ]
  ],
  "test_subparser_dest_args": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandTests",
        "test_subparser_dest_args"
      ]
    ]
  ],
  "test_subparser_dest_required_args": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandTests",
        "test_subparser_dest_required_args"
      ]
    ]
  ],
  "test_subparser_invalid_option": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandTests",
        "test_subparser_invalid_option"
      ]
    ]
  ],
  "test_create_parser_kwargs": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandTests",
        "test_create_parser_kwargs"
      ]
    ]
  ],
  "test_script_prefix_set_in_commands": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandRunTests",
        "test_script_prefix_set_in_commands"
      ]
    ]
  ],
  "test_disallowed_abbreviated_options": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandRunTests",
        "test_disallowed_abbreviated_options"
      ]
    ]
  ],
  "test_skip_checks": [
    [
      "tests/user_commands/tests.py",
      [
        "CommandRunTests",
        "test_skip_checks"
      ]
    ]
  ],
  "test_no_existent_external_program": [
    [
      "tests/user_commands/tests.py",
      [
        "UtilsTests",
        "test_no_existent_external_program"
      ]
    ]
  ],
  "test_get_random_secret_key": [
    [
      "tests/user_commands/tests.py",
      [
        "UtilsTests",
        "test_get_random_secret_key"
      ]
    ]
  ],
  "test_is_ignored_path_true": [
    [
      "tests/user_commands/tests.py",
      [
        "UtilsTests",
        "test_is_ignored_path_true"
      ]
    ]
  ],
  "test_is_ignored_path_false": [
    [
      "tests/user_commands/tests.py",
      [
        "UtilsTests",
        "test_is_ignored_path_false"
      ]
    ]
  ],
  "test_normalize_path_patterns_truncates_wildcard_base": [
    [
      "tests/user_commands/tests.py",
      [
        "UtilsTests",
        "test_normalize_path_patterns_truncates_wildcard_base"
      ]
    ]
  ],
  "test_extract_function": [
    [
      "tests/utils_tests/test_archive.py",
      [
        "TestArchive",
        "test_extract_function"
      ]
    ]
  ],
  "test_extract_file_permissions": [
    [
      "tests/utils_tests/test_archive.py",
      [
        "TestArchive",
        "test_extract_file_permissions"
      ]
    ]
  ],
  "import_and_cleanup": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestIterModulesAndFiles",
        "import_and_cleanup"
      ]
    ]
  ],
  "clear_autoreload_caches": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestIterModulesAndFiles",
        "clear_autoreload_caches"
      ]
    ]
  ],
  "assertFileFound": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestIterModulesAndFiles",
        "assertFileFound"
      ]
    ]
  ],
  "temporary_file": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestIterModulesAndFiles",
        "temporary_file"
      ]
    ]
  ],
  "test_paths_are_pathlib_instances": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestIterModulesAndFiles",
        "test_paths_are_pathlib_instances"
      ]
    ]
  ],
  "test_file_added": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestIterModulesAndFiles",
        "test_file_added"
      ]
    ]
  ],
  "test_check_errors": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestIterModulesAndFiles",
        "test_check_errors"
      ]
    ]
  ],
  "test_check_errors_catches_all_exceptions": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestIterModulesAndFiles",
        "test_check_errors_catches_all_exceptions"
      ]
    ]
  ],
  "test_zip_reload": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestIterModulesAndFiles",
        "test_zip_reload"
      ]
    ]
  ],
  "test_bytecode_conversion_to_source": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestIterModulesAndFiles",
        "test_bytecode_conversion_to_source"
      ]
    ]
  ],
  "test_weakref_in_sys_module": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestIterModulesAndFiles",
        "test_weakref_in_sys_module"
      ]
    ]
  ],
  "test_module_without_spec": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestIterModulesAndFiles",
        "test_module_without_spec"
      ]
    ]
  ],
  "test_main_module_is_resolved": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestIterModulesAndFiles",
        "test_main_module_is_resolved"
      ]
    ]
  ],
  "test_main_module_without_file_is_not_resolved": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestIterModulesAndFiles",
        "test_main_module_without_file_is_not_resolved"
      ]
    ]
  ],
  "test_path_with_embedded_null_bytes": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestIterModulesAndFiles",
        "test_path_with_embedded_null_bytes"
      ]
    ]
  ],
  "test_common_roots": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestCommonRoots",
        "test_common_roots"
      ]
    ]
  ],
  "test_sys_paths_with_directories": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestSysPathDirectories",
        "test_sys_paths_with_directories"
      ]
    ]
  ],
  "test_sys_paths_non_existing": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestSysPathDirectories",
        "test_sys_paths_non_existing"
      ]
    ]
  ],
  "test_sys_paths_absolute": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestSysPathDirectories",
        "test_sys_paths_absolute"
      ]
    ]
  ],
  "test_sys_paths_directories": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestSysPathDirectories",
        "test_sys_paths_directories"
      ]
    ]
  ],
  "test_watchman_unavailable": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "GetReloaderTests",
        "test_watchman_unavailable"
      ]
    ]
  ],
  "test_watchman_available": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "GetReloaderTests",
        "test_watchman_available"
      ]
    ]
  ],
  "test_swallows_keyboard_interrupt": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "RunWithReloaderTests",
        "test_swallows_keyboard_interrupt"
      ]
    ]
  ],
  "test_calls_sys_exit": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "RunWithReloaderTests",
        "test_calls_sys_exit"
      ]
    ]
  ],
  "test_calls_start_django": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "RunWithReloaderTests",
        "test_calls_start_django"
      ]
    ]
  ],
  "test_watchman_becomes_unavailable": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "StartDjangoTests",
        "test_watchman_becomes_unavailable"
      ]
    ]
  ],
  "test_echo_on_called": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "StartDjangoTests",
        "test_echo_on_called"
      ]
    ]
  ],
  "test_check_errors_called": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "StartDjangoTests",
        "test_check_errors_called"
      ]
    ]
  ],
  "test_starts_thread_with_args": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "StartDjangoTests",
        "test_starts_thread_with_args"
      ]
    ]
  ],
  "test_mutates_error_files": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestCheckErrors",
        "test_mutates_error_files"
      ]
    ]
  ],
  "test_no_exception": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestRaiseLastException",
        "test_no_exception"
      ]
    ],
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterTests",
        "test_no_exception"
      ]
    ],
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "PlainTextReportTests",
        "test_no_exception"
      ]
    ]
  ],
  "test_raises_custom_exception": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestRaiseLastException",
        "test_raises_custom_exception"
      ]
    ]
  ],
  "test_raises_exception_with_context": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "TestRaiseLastException",
        "test_raises_exception_with_context"
      ]
    ]
  ],
  "patch_autoreload": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "RestartWithReloaderTests",
        "patch_autoreload"
      ]
    ]
  ],
  "test_python_m_django": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "RestartWithReloaderTests",
        "test_python_m_django"
      ]
    ]
  ],
  "ensure_file": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "ReloaderTests",
        "ensure_file"
      ]
    ]
  ],
  "set_mtime": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "ReloaderTests",
        "set_mtime"
      ]
    ]
  ],
  "increment_mtime": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "ReloaderTests",
        "increment_mtime"
      ]
    ]
  ],
  "tick_twice": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "ReloaderTests",
        "tick_twice"
      ]
    ]
  ],
  "test_glob": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "IntegrationTests",
        "test_glob"
      ]
    ]
  ],
  "test_multiple_globs": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "IntegrationTests",
        "test_multiple_globs"
      ]
    ]
  ],
  "test_overlapping_globs": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "IntegrationTests",
        "test_overlapping_globs"
      ]
    ]
  ],
  "test_glob_recursive": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "IntegrationTests",
        "test_glob_recursive"
      ]
    ]
  ],
  "test_multiple_recursive_globs": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "IntegrationTests",
        "test_multiple_recursive_globs"
      ]
    ]
  ],
  "test_nested_glob_recursive": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "IntegrationTests",
        "test_nested_glob_recursive"
      ]
    ]
  ],
  "test_overlapping_glob_recursive": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "IntegrationTests",
        "test_overlapping_glob_recursive"
      ]
    ]
  ],
  "test_watch_dir_with_unresolvable_path": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "BaseReloaderTests",
        "test_watch_dir_with_unresolvable_path"
      ]
    ]
  ],
  "test_watch_with_glob": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "BaseReloaderTests",
        "test_watch_with_glob"
      ]
    ]
  ],
  "test_watch_files_with_recursive_glob": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "BaseReloaderTests",
        "test_watch_files_with_recursive_glob"
      ]
    ]
  ],
  "test_run_loop_catches_stopiteration": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "BaseReloaderTests",
        "test_run_loop_catches_stopiteration"
      ]
    ]
  ],
  "test_run_loop_stop_and_return": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "BaseReloaderTests",
        "test_run_loop_stop_and_return"
      ]
    ]
  ],
  "test_wait_for_apps_ready_checks_for_exception": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "BaseReloaderTests",
        "test_wait_for_apps_ready_checks_for_exception"
      ]
    ]
  ],
  "test_wait_for_apps_ready_without_exception": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "BaseReloaderTests",
        "test_wait_for_apps_ready_without_exception"
      ]
    ]
  ],
  "skip_unless_watchman_available": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "skip_unless_watchman_available"
      ]
    ]
  ],
  "test_watch_glob_ignores_non_existing_directories_two_levels": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "WatchmanReloaderTests",
        "test_watch_glob_ignores_non_existing_directories_two_levels"
      ]
    ]
  ],
  "test_watch_glob_uses_existing_parent_directories": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "WatchmanReloaderTests",
        "test_watch_glob_uses_existing_parent_directories"
      ]
    ]
  ],
  "test_watch_glob_multiple_patterns": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "WatchmanReloaderTests",
        "test_watch_glob_multiple_patterns"
      ]
    ]
  ],
  "test_watched_roots_contains_files": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "WatchmanReloaderTests",
        "test_watched_roots_contains_files"
      ]
    ]
  ],
  "test_watched_roots_contains_directory_globs": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "WatchmanReloaderTests",
        "test_watched_roots_contains_directory_globs"
      ]
    ]
  ],
  "test_watched_roots_contains_sys_path": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "WatchmanReloaderTests",
        "test_watched_roots_contains_sys_path"
      ]
    ]
  ],
  "test_check_server_status": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "WatchmanReloaderTests",
        "test_check_server_status"
      ]
    ]
  ],
  "test_check_server_status_raises_error": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "WatchmanReloaderTests",
        "test_check_server_status_raises_error"
      ]
    ]
  ],
  "test_check_availability": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "WatchmanReloaderTests",
        "test_check_availability"
      ]
    ]
  ],
  "test_check_availability_lower_version": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "WatchmanReloaderTests",
        "test_check_availability_lower_version"
      ]
    ]
  ],
  "test_pywatchman_not_available": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "WatchmanReloaderTests",
        "test_pywatchman_not_available"
      ]
    ]
  ],
  "test_update_watches_raises_exceptions": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "WatchmanReloaderTests",
        "test_update_watches_raises_exceptions"
      ]
    ]
  ],
  "test_setting_timeout_from_environment_variable": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "WatchmanReloaderTests",
        "test_setting_timeout_from_environment_variable"
      ]
    ]
  ],
  "test_tick_does_not_trigger_twice": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "StatReloaderTests",
        "test_tick_does_not_trigger_twice"
      ]
    ]
  ],
  "test_snapshot_files_ignores_missing_files": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "StatReloaderTests",
        "test_snapshot_files_ignores_missing_files"
      ]
    ]
  ],
  "test_snapshot_files_updates": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "StatReloaderTests",
        "test_snapshot_files_updates"
      ]
    ]
  ],
  "test_snapshot_files_with_duplicates": [
    [
      "tests/utils_tests/test_autoreload.py",
      [
        "StatReloaderTests",
        "test_snapshot_files_with_duplicates"
      ]
    ]
  ],
  "test_baseconv": [
    [
      "tests/utils_tests/test_baseconv.py",
      [
        "TestBaseConv",
        "test_baseconv"
      ]
    ]
  ],
  "test_base11": [
    [
      "tests/utils_tests/test_baseconv.py",
      [
        "TestBaseConv",
        "test_base11"
      ]
    ]
  ],
  "test_base20": [
    [
      "tests/utils_tests/test_baseconv.py",
      [
        "TestBaseConv",
        "test_base20"
      ]
    ]
  ],
  "test_base64": [
    [
      "tests/utils_tests/test_baseconv.py",
      [
        "TestBaseConv",
        "test_base64"
      ]
    ]
  ],
  "test_base7": [
    [
      "tests/utils_tests/test_baseconv.py",
      [
        "TestBaseConv",
        "test_base7"
      ]
    ]
  ],
  "test_exception": [
    [
      "tests/utils_tests/test_baseconv.py",
      [
        "TestBaseConv",
        "test_exception"
      ]
    ]
  ],
  "test_constant_time_compare": [
    [
      "tests/utils_tests/test_crypto.py",
      [
        "TestUtilsCryptoMisc",
        "test_constant_time_compare"
      ]
    ]
  ],
  "test_salted_hmac": [
    [
      "tests/utils_tests/test_crypto.py",
      [
        "TestUtilsCryptoMisc",
        "test_salted_hmac"
      ]
    ]
  ],
  "test_public_vectors": [
    [
      "tests/utils_tests/test_crypto.py",
      [
        "TestUtilsCryptoPBKDF2",
        "test_public_vectors"
      ]
    ]
  ],
  "test_regression_vectors": [
    [
      "tests/utils_tests/test_crypto.py",
      [
        "TestUtilsCryptoPBKDF2",
        "test_regression_vectors"
      ]
    ]
  ],
  "test_default_hmac_alg": [
    [
      "tests/utils_tests/test_crypto.py",
      [
        "TestUtilsCryptoPBKDF2",
        "test_default_hmac_alg"
      ]
    ]
  ],
  "test_get_random_string": [
    [
      "tests/utils_tests/test_crypto.py",
      [
        "DeprecationTests",
        "test_get_random_string"
      ]
    ]
  ],
  "test_get_random_string_warning": [
    [
      "tests/utils_tests/test_crypto.py",
      [
        "DeprecationTests",
        "test_get_random_string_warning"
      ]
    ]
  ],
  "test_multivaluedict": [
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "MultiValueDictTests",
        "test_multivaluedict"
      ]
    ],
    [
      "tests/utils_tests/test_http.py",
      [
        "URLEncodeTests",
        "test_multivaluedict"
      ]
    ]
  ],
  "test_appendlist": [
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "MultiValueDictTests",
        "test_appendlist"
      ]
    ]
  ],
  "test_dict_translation": [
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "MultiValueDictTests",
        "test_dict_translation"
      ]
    ]
  ],
  "test_getlist_doesnt_mutate": [
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "MultiValueDictTests",
        "test_getlist_doesnt_mutate"
      ]
    ]
  ],
  "test_internal_getlist_does_mutate": [
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "MultiValueDictTests",
        "test_internal_getlist_does_mutate"
      ]
    ]
  ],
  "test_getlist_default": [
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "MultiValueDictTests",
        "test_getlist_default"
      ]
    ]
  ],
  "test_getlist_none_empty_values": [
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "MultiValueDictTests",
        "test_getlist_none_empty_values"
      ]
    ]
  ],
  "test_custom_warning": [
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "ImmutableListTests",
        "test_custom_warning"
      ]
    ]
  ],
  "test_dictwrapper": [
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "DictWrapperTests",
        "test_dictwrapper"
      ]
    ]
  ],
  "test_create_with_invalid_values": [
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "CaseInsensitiveMappingTests",
        "test_create_with_invalid_values"
      ]
    ]
  ],
  "test_create_with_invalid_key": [
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "CaseInsensitiveMappingTests",
        "test_create_with_invalid_key"
      ]
    ]
  ],
  "test_dict": [
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "CaseInsensitiveMappingTests",
        "test_dict"
      ]
    ],
    [
      "tests/utils_tests/test_http.py",
      [
        "URLEncodeTests",
        "test_dict"
      ]
    ],
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "SimpleLazyObjectTestCase",
        "test_dict"
      ]
    ]
  ],
  "test_del": [
    [
      "tests/utils_tests/test_datastructures.py",
      [
        "CaseInsensitiveMappingTests",
        "test_del"
      ]
    ]
  ],
  "test_naive_ambiguous_datetime": [
    [
      "tests/utils_tests/test_dateformat.py",
      [
        "DateFormatTests",
        "test_naive_ambiguous_datetime"
      ]
    ]
  ],
  "test_datetime_with_local_tzinfo": [
    [
      "tests/utils_tests/test_dateformat.py",
      [
        "DateFormatTests",
        "test_datetime_with_local_tzinfo"
      ]
    ]
  ],
  "test_datetime_with_tzinfo": [
    [
      "tests/utils_tests/test_dateformat.py",
      [
        "DateFormatTests",
        "test_datetime_with_tzinfo"
      ]
    ]
  ],
  "test_epoch": [
    [
      "tests/utils_tests/test_dateformat.py",
      [
        "DateFormatTests",
        "test_epoch"
      ]
    ]
  ],
  "test_empty_format": [
    [
      "tests/utils_tests/test_dateformat.py",
      [
        "DateFormatTests",
        "test_empty_format"
      ]
    ]
  ],
  "test_am_pm": [
    [
      "tests/utils_tests/test_dateformat.py",
      [
        "DateFormatTests",
        "test_am_pm"
      ]
    ]
  ],
  "test_microsecond": [
    [
      "tests/utils_tests/test_dateformat.py",
      [
        "DateFormatTests",
        "test_microsecond"
      ]
    ]
  ],
  "test_date_formats": [
    [
      "tests/utils_tests/test_dateformat.py",
      [
        "DateFormatTests",
        "test_date_formats"
      ]
    ]
  ],
  "test_time_formats": [
    [
      "tests/utils_tests/test_dateformat.py",
      [
        "DateFormatTests",
        "test_time_formats"
      ]
    ]
  ],
  "test_dateformat": [
    [
      "tests/utils_tests/test_dateformat.py",
      [
        "DateFormatTests",
        "test_dateformat"
      ]
    ]
  ],
  "test_futuredates": [
    [
      "tests/utils_tests/test_dateformat.py",
      [
        "DateFormatTests",
        "test_futuredates"
      ]
    ]
  ],
  "test_day_of_year_leap": [
    [
      "tests/utils_tests/test_dateformat.py",
      [
        "DateFormatTests",
        "test_day_of_year_leap"
      ]
    ]
  ],
  "test_invalid_time_format_specifiers": [
    [
      "tests/utils_tests/test_dateformat.py",
      [
        "DateFormatTests",
        "test_invalid_time_format_specifiers"
      ]
    ]
  ],
  "test_r_format_with_non_en_locale": [
    [
      "tests/utils_tests/test_dateformat.py",
      [
        "DateFormatTests",
        "test_r_format_with_non_en_locale"
      ]
    ]
  ],
  "test_parse_date": [
    [
      "tests/utils_tests/test_dateparse.py",
      [
        "DateParseTests",
        "test_parse_date"
      ]
    ]
  ],
  "test_parse_time": [
    [
      "tests/utils_tests/test_dateparse.py",
      [
        "DateParseTests",
        "test_parse_time"
      ]
    ]
  ],
  "test_parse_datetime": [
    [
      "tests/utils_tests/test_dateparse.py",
      [
        "DateParseTests",
        "test_parse_datetime"
      ]
    ]
  ],
  "test_parse_python_format": [
    [
      "tests/utils_tests/test_dateparse.py",
      [
        "DurationParseTests",
        "test_parse_python_format"
      ]
    ]
  ],
  "test_parse_postgresql_format": [
    [
      "tests/utils_tests/test_dateparse.py",
      [
        "DurationParseTests",
        "test_parse_postgresql_format"
      ]
    ]
  ],
  "test_seconds": [
    [
      "tests/utils_tests/test_dateparse.py",
      [
        "DurationParseTests",
        "test_seconds"
      ]
    ]
  ],
  "test_minutes_seconds": [
    [
      "tests/utils_tests/test_dateparse.py",
      [
        "DurationParseTests",
        "test_minutes_seconds"
      ]
    ]
  ],
  "test_hours_minutes_seconds": [
    [
      "tests/utils_tests/test_dateparse.py",
      [
        "DurationParseTests",
        "test_hours_minutes_seconds"
      ]
    ]
  ],
  "test_days": [
    [
      "tests/utils_tests/test_dateparse.py",
      [
        "DurationParseTests",
        "test_days"
      ]
    ],
    [
      "tests/utils_tests/test_duration.py",
      [
        "TestDurationString",
        "test_days"
      ]
    ],
    [
      "tests/utils_tests/test_duration.py",
      [
        "TestParseDurationRoundtrip",
        "test_days"
      ]
    ],
    [
      "tests/utils_tests/test_duration.py",
      [
        "TestISODurationString",
        "test_days"
      ]
    ],
    [
      "tests/utils_tests/test_duration.py",
      [
        "TestParseISODurationRoundtrip",
        "test_days"
      ]
    ]
  ],
  "test_fractions_of_seconds": [
    [
      "tests/utils_tests/test_dateparse.py",
      [
        "DurationParseTests",
        "test_fractions_of_seconds"
      ]
    ]
  ],
  "test_negative": [
    [
      "tests/utils_tests/test_dateparse.py",
      [
        "DurationParseTests",
        "test_negative"
      ]
    ],
    [
      "tests/utils_tests/test_duration.py",
      [
        "TestDurationString",
        "test_negative"
      ]
    ],
    [
      "tests/utils_tests/test_duration.py",
      [
        "TestParseDurationRoundtrip",
        "test_negative"
      ]
    ],
    [
      "tests/utils_tests/test_duration.py",
      [
        "TestISODurationString",
        "test_negative"
      ]
    ],
    [
      "tests/utils_tests/test_duration.py",
      [
        "TestParseISODurationRoundtrip",
        "test_negative"
      ]
    ]
  ],
  "test_iso_8601": [
    [
      "tests/utils_tests/test_dateparse.py",
      [
        "DurationParseTests",
        "test_iso_8601"
      ]
    ]
  ],
  "test_compare_datetimes": [
    [
      "tests/utils_tests/test_datetime_safe.py",
      [
        "DatetimeTests",
        "test_compare_datetimes"
      ]
    ]
  ],
  "test_safe_strftime": [
    [
      "tests/utils_tests/test_datetime_safe.py",
      [
        "DatetimeTests",
        "test_safe_strftime"
      ]
    ]
  ],
  "test_zero_padding": [
    [
      "tests/utils_tests/test_datetime_safe.py",
      [
        "DatetimeTests",
        "test_zero_padding"
      ]
    ]
  ],
  "test_process_view_middleware": [
    [
      "tests/utils_tests/test_decorators.py",
      [
        "DecoratorFromMiddlewareTests",
        "test_process_view_middleware"
      ]
    ]
  ],
  "test_callable_process_view_middleware": [
    [
      "tests/utils_tests/test_decorators.py",
      [
        "DecoratorFromMiddlewareTests",
        "test_callable_process_view_middleware"
      ]
    ]
  ],
  "test_full_dec_normal": [
    [
      "tests/utils_tests/test_decorators.py",
      [
        "DecoratorFromMiddlewareTests",
        "test_full_dec_normal"
      ]
    ]
  ],
  "test_full_dec_templateresponse": [
    [
      "tests/utils_tests/test_decorators.py",
      [
        "DecoratorFromMiddlewareTests",
        "test_full_dec_templateresponse"
      ]
    ]
  ],
  "test_microseconds": [
    [
      "tests/utils_tests/test_duration.py",
      [
        "TestDurationString",
        "test_microseconds"
      ]
    ],
    [
      "tests/utils_tests/test_duration.py",
      [
        "TestParseDurationRoundtrip",
        "test_microseconds"
      ]
    ],
    [
      "tests/utils_tests/test_duration.py",
      [
        "TestISODurationString",
        "test_microseconds"
      ]
    ],
    [
      "tests/utils_tests/test_duration.py",
      [
        "TestParseISODurationRoundtrip",
        "test_microseconds"
      ]
    ]
  ],
  "test_force_str_exception": [
    [
      "tests/utils_tests/test_encoding.py",
      [
        "TestEncodingUtils",
        "test_force_str_exception"
      ]
    ]
  ],
  "test_force_str_lazy": [
    [
      "tests/utils_tests/test_encoding.py",
      [
        "TestEncodingUtils",
        "test_force_str_lazy"
      ]
    ]
  ],
  "test_force_str_DjangoUnicodeDecodeError": [
    [
      "tests/utils_tests/test_encoding.py",
      [
        "TestEncodingUtils",
        "test_force_str_DjangoUnicodeDecodeError"
      ]
    ]
  ],
  "test_force_bytes_exception": [
    [
      "tests/utils_tests/test_encoding.py",
      [
        "TestEncodingUtils",
        "test_force_bytes_exception"
      ]
    ]
  ],
  "test_force_bytes_strings_only": [
    [
      "tests/utils_tests/test_encoding.py",
      [
        "TestEncodingUtils",
        "test_force_bytes_strings_only"
      ]
    ]
  ],
  "test_force_bytes_encoding": [
    [
      "tests/utils_tests/test_encoding.py",
      [
        "TestEncodingUtils",
        "test_force_bytes_encoding"
      ]
    ]
  ],
  "test_force_bytes_memory_view": [
    [
      "tests/utils_tests/test_encoding.py",
      [
        "TestEncodingUtils",
        "test_force_bytes_memory_view"
      ]
    ]
  ],
  "test_smart_bytes": [
    [
      "tests/utils_tests/test_encoding.py",
      [
        "TestEncodingUtils",
        "test_smart_bytes"
      ]
    ]
  ],
  "test_smart_str": [
    [
      "tests/utils_tests/test_encoding.py",
      [
        "TestEncodingUtils",
        "test_smart_str"
      ]
    ]
  ],
  "test_get_default_encoding": [
    [
      "tests/utils_tests/test_encoding.py",
      [
        "TestEncodingUtils",
        "test_get_default_encoding"
      ]
    ]
  ],
  "test_repercent_broken_unicode_recursion_error": [
    [
      "tests/utils_tests/test_encoding.py",
      [
        "TestEncodingUtils",
        "test_repercent_broken_unicode_recursion_error"
      ]
    ]
  ],
  "test_filepath_to_uri": [
    [
      "tests/utils_tests/test_encoding.py",
      [
        "TestRFC3987IEncodingUtils",
        "test_filepath_to_uri"
      ]
    ]
  ],
  "test_iri_to_uri": [
    [
      "tests/utils_tests/test_encoding.py",
      [
        "TestRFC3987IEncodingUtils",
        "test_iri_to_uri"
      ]
    ]
  ],
  "test_uri_to_iri": [
    [
      "tests/utils_tests/test_encoding.py",
      [
        "TestRFC3987IEncodingUtils",
        "test_uri_to_iri"
      ]
    ]
  ],
  "test_complementarity": [
    [
      "tests/utils_tests/test_encoding.py",
      [
        "TestRFC3987IEncodingUtils",
        "test_complementarity"
      ]
    ]
  ],
  "test_escape_uri_path": [
    [
      "tests/utils_tests/test_encoding.py",
      [
        "TestRFC3987IEncodingUtils",
        "test_escape_uri_path"
      ]
    ]
  ],
  "test_force_text": [
    [
      "tests/utils_tests/test_encoding_deprecations.py",
      [
        "TestDeprecatedEncodingUtils",
        "test_force_text"
      ]
    ]
  ],
  "test_smart_text": [
    [
      "tests/utils_tests/test_encoding_deprecations.py",
      [
        "TestDeprecatedEncodingUtils",
        "test_smart_text"
      ]
    ]
  ],
  "test_get_tag_uri": [
    [
      "tests/utils_tests/test_feedgenerator.py",
      [
        "FeedgeneratorTests",
        "test_get_tag_uri"
      ]
    ]
  ],
  "test_get_tag_uri_with_port": [
    [
      "tests/utils_tests/test_feedgenerator.py",
      [
        "FeedgeneratorTests",
        "test_get_tag_uri_with_port"
      ]
    ]
  ],
  "test_rfc2822_date": [
    [
      "tests/utils_tests/test_feedgenerator.py",
      [
        "FeedgeneratorTests",
        "test_rfc2822_date"
      ]
    ]
  ],
  "test_rfc2822_date_with_timezone": [
    [
      "tests/utils_tests/test_feedgenerator.py",
      [
        "FeedgeneratorTests",
        "test_rfc2822_date_with_timezone"
      ]
    ]
  ],
  "test_rfc2822_date_without_time": [
    [
      "tests/utils_tests/test_feedgenerator.py",
      [
        "FeedgeneratorTests",
        "test_rfc2822_date_without_time"
      ]
    ]
  ],
  "test_rfc3339_date": [
    [
      "tests/utils_tests/test_feedgenerator.py",
      [
        "FeedgeneratorTests",
        "test_rfc3339_date"
      ]
    ]
  ],
  "test_rfc3339_date_with_timezone": [
    [
      "tests/utils_tests/test_feedgenerator.py",
      [
        "FeedgeneratorTests",
        "test_rfc3339_date_with_timezone"
      ]
    ]
  ],
  "test_rfc3339_date_without_time": [
    [
      "tests/utils_tests/test_feedgenerator.py",
      [
        "FeedgeneratorTests",
        "test_rfc3339_date_without_time"
      ]
    ]
  ],
  "test_atom1_mime_type": [
    [
      "tests/utils_tests/test_feedgenerator.py",
      [
        "FeedgeneratorTests",
        "test_atom1_mime_type"
      ]
    ]
  ],
  "test_rss_mime_type": [
    [
      "tests/utils_tests/test_feedgenerator.py",
      [
        "FeedgeneratorTests",
        "test_rss_mime_type"
      ]
    ]
  ],
  "test_feed_without_feed_url_gets_rendered_without_atom_link": [
    [
      "tests/utils_tests/test_feedgenerator.py",
      [
        "FeedgeneratorTests",
        "test_feed_without_feed_url_gets_rendered_without_atom_link"
      ]
    ]
  ],
  "test_feed_with_feed_url_gets_rendered_with_atom_link": [
    [
      "tests/utils_tests/test_feedgenerator.py",
      [
        "FeedgeneratorTests",
        "test_feed_with_feed_url_gets_rendered_with_atom_link"
      ]
    ]
  ],
  "test_atom_add_item": [
    [
      "tests/utils_tests/test_feedgenerator.py",
      [
        "FeedgeneratorTests",
        "test_atom_add_item"
      ]
    ]
  ],
  "test_deterministic_attribute_order": [
    [
      "tests/utils_tests/test_feedgenerator.py",
      [
        "FeedgeneratorTests",
        "test_deterministic_attribute_order"
      ]
    ]
  ],
  "test_latest_post_date_returns_utc_time": [
    [
      "tests/utils_tests/test_feedgenerator.py",
      [
        "FeedgeneratorTests",
        "test_latest_post_date_returns_utc_time"
      ]
    ]
  ],
  "test_lazy_base_class": [
    [
      "tests/utils_tests/test_functional.py",
      [
        "FunctionalTests",
        "test_lazy_base_class"
      ]
    ]
  ],
  "test_lazy_base_class_override": [
    [
      "tests/utils_tests/test_functional.py",
      [
        "FunctionalTests",
        "test_lazy_base_class_override"
      ]
    ]
  ],
  "test_lazy_object_to_string": [
    [
      "tests/utils_tests/test_functional.py",
      [
        "FunctionalTests",
        "test_lazy_object_to_string"
      ]
    ]
  ],
  "assertCachedPropertyWorks": [
    [
      "tests/utils_tests/test_functional.py",
      [
        "FunctionalTests",
        "assertCachedPropertyWorks"
      ]
    ]
  ],
  "test_cached_property": [
    [
      "tests/utils_tests/test_functional.py",
      [
        "FunctionalTests",
        "test_cached_property"
      ]
    ]
  ],
  "__value": [
    [
      "tests/utils_tests/test_functional.py",
      [
        "FunctionalTests",
        "test_cached_property_auto_name",
        "Class",
        "__value"
      ]
    ]
  ],
  "other_value": [
    [
      "tests/utils_tests/test_functional.py",
      [
        "FunctionalTests",
        "test_cached_property_auto_name",
        "Class",
        "other_value"
      ]
    ]
  ],
  "test_cached_property_auto_name": [
    [
      "tests/utils_tests/test_functional.py",
      [
        "FunctionalTests",
        "test_cached_property_auto_name"
      ]
    ]
  ],
  "test_cached_property_reuse_different_names": [
    [
      "tests/utils_tests/test_functional.py",
      [
        "FunctionalTests",
        "test_cached_property_reuse_different_names"
      ]
    ]
  ],
  "test_cached_property_reuse_same_name": [
    [
      "tests/utils_tests/test_functional.py",
      [
        "FunctionalTests",
        "test_cached_property_reuse_same_name"
      ]
    ]
  ],
  "test_cached_property_set_name_not_called": [
    [
      "tests/utils_tests/test_functional.py",
      [
        "FunctionalTests",
        "test_cached_property_set_name_not_called"
      ]
    ]
  ],
  "test_lazy_equality": [
    [
      "tests/utils_tests/test_functional.py",
      [
        "FunctionalTests",
        "test_lazy_equality"
      ]
    ]
  ],
  "test_lazy_repr_text": [
    [
      "tests/utils_tests/test_functional.py",
      [
        "FunctionalTests",
        "test_lazy_repr_text"
      ]
    ]
  ],
  "test_lazy_repr_int": [
    [
      "tests/utils_tests/test_functional.py",
      [
        "FunctionalTests",
        "test_lazy_repr_int"
      ]
    ]
  ],
  "test_lazy_repr_bytes": [
    [
      "tests/utils_tests/test_functional.py",
      [
        "FunctionalTests",
        "test_lazy_repr_bytes"
      ]
    ]
  ],
  "test_lazy_class_preparation_caching": [
    [
      "tests/utils_tests/test_functional.py",
      [
        "FunctionalTests",
        "test_lazy_class_preparation_caching"
      ]
    ]
  ],
  "test_classproperty_getter": [
    [
      "tests/utils_tests/test_functional.py",
      [
        "FunctionalTests",
        "test_classproperty_getter"
      ]
    ]
  ],
  "test_classproperty_override_getter": [
    [
      "tests/utils_tests/test_functional.py",
      [
        "FunctionalTests",
        "test_classproperty_override_getter"
      ]
    ]
  ],
  "test_count_equal": [
    [
      "tests/utils_tests/test_hashable.py",
      [
        "TestHashable",
        "test_count_equal"
      ]
    ]
  ],
  "test_unhashable": [
    [
      "tests/utils_tests/test_hashable.py",
      [
        "TestHashable",
        "test_unhashable"
      ]
    ]
  ],
  "check_output": [
    [
      "tests/utils_tests/test_html.py",
      [
        "TestUtilsHtml",
        "check_output"
      ]
    ]
  ],
  "test_format_html": [
    [
      "tests/utils_tests/test_html.py",
      [
        "TestUtilsHtml",
        "test_format_html"
      ]
    ]
  ],
  "test_linebreaks": [
    [
      "tests/utils_tests/test_html.py",
      [
        "TestUtilsHtml",
        "test_linebreaks"
      ]
    ]
  ],
  "test_strip_tags": [
    [
      "tests/utils_tests/test_html.py",
      [
        "TestUtilsHtml",
        "test_strip_tags"
      ]
    ]
  ],
  "test_strip_tags_files": [
    [
      "tests/utils_tests/test_html.py",
      [
        "TestUtilsHtml",
        "test_strip_tags_files"
      ]
    ]
  ],
  "test_strip_spaces_between_tags": [
    [
      "tests/utils_tests/test_html.py",
      [
        "TestUtilsHtml",
        "test_strip_spaces_between_tags"
      ]
    ]
  ],
  "test_escapejs": [
    [
      "tests/utils_tests/test_html.py",
      [
        "TestUtilsHtml",
        "test_escapejs"
      ]
    ]
  ],
  "test_json_script": [
    [
      "tests/utils_tests/test_html.py",
      [
        "TestUtilsHtml",
        "test_json_script"
      ]
    ]
  ],
  "test_smart_urlquote": [
    [
      "tests/utils_tests/test_html.py",
      [
        "TestUtilsHtml",
        "test_smart_urlquote"
      ]
    ]
  ],
  "test_conditional_escape": [
    [
      "tests/utils_tests/test_html.py",
      [
        "TestUtilsHtml",
        "test_conditional_escape"
      ]
    ]
  ],
  "test_html_safe_subclass": [
    [
      "tests/utils_tests/test_html.py",
      [
        "TestUtilsHtml",
        "test_html_safe_subclass"
      ]
    ]
  ],
  "test_html_safe_defines_html_error": [
    [
      "tests/utils_tests/test_html.py",
      [
        "TestUtilsHtml",
        "test_html_safe_defines_html_error"
      ]
    ]
  ],
  "test_html_safe_doesnt_define_str": [
    [
      "tests/utils_tests/test_html.py",
      [
        "TestUtilsHtml",
        "test_html_safe_doesnt_define_str"
      ]
    ]
  ],
  "test_urlize": [
    [
      "tests/utils_tests/test_html.py",
      [
        "TestUtilsHtml",
        "test_urlize"
      ]
    ]
  ],
  "test_urlize_unchanged_inputs": [
    [
      "tests/utils_tests/test_html.py",
      [
        "TestUtilsHtml",
        "test_urlize_unchanged_inputs"
      ]
    ]
  ],
  "test_dict_containing_sequence_not_doseq": [
    [
      "tests/utils_tests/test_http.py",
      [
        "URLEncodeTests",
        "test_dict_containing_sequence_not_doseq"
      ]
    ]
  ],
  "test_dict_containing_tuple_not_doseq": [
    [
      "tests/utils_tests/test_http.py",
      [
        "URLEncodeTests",
        "test_dict_containing_tuple_not_doseq"
      ]
    ]
  ],
  "test_custom_iterable_not_doseq": [
    [
      "tests/utils_tests/test_http.py",
      [
        "URLEncodeTests",
        "test_custom_iterable_not_doseq"
      ]
    ]
  ],
  "test_dict_containing_sequence_doseq": [
    [
      "tests/utils_tests/test_http.py",
      [
        "URLEncodeTests",
        "test_dict_containing_sequence_doseq"
      ]
    ]
  ],
  "test_dict_containing_empty_sequence_doseq": [
    [
      "tests/utils_tests/test_http.py",
      [
        "URLEncodeTests",
        "test_dict_containing_empty_sequence_doseq"
      ]
    ]
  ],
  "test_dict_with_bytes_values": [
    [
      "tests/utils_tests/test_http.py",
      [
        "URLEncodeTests",
        "test_dict_with_bytes_values"
      ]
    ]
  ],
  "test_dict_with_sequence_of_bytes": [
    [
      "tests/utils_tests/test_http.py",
      [
        "URLEncodeTests",
        "test_dict_with_sequence_of_bytes"
      ]
    ]
  ],
  "test_dict_with_bytearray": [
    [
      "tests/utils_tests/test_http.py",
      [
        "URLEncodeTests",
        "test_dict_with_bytearray"
      ]
    ]
  ],
  "test_generator": [
    [
      "tests/utils_tests/test_http.py",
      [
        "URLEncodeTests",
        "test_generator"
      ]
    ]
  ],
  "test_none_in_sequence": [
    [
      "tests/utils_tests/test_http.py",
      [
        "URLEncodeTests",
        "test_none_in_sequence"
      ]
    ]
  ],
  "test_none_in_generator": [
    [
      "tests/utils_tests/test_http.py",
      [
        "URLEncodeTests",
        "test_none_in_generator"
      ]
    ]
  ],
  "test_roundtrip": [
    [
      "tests/utils_tests/test_http.py",
      [
        "Base36IntTests",
        "test_roundtrip"
      ]
    ],
    [
      "tests/utils_tests/test_http.py",
      [
        "URLSafeBase64Tests",
        "test_roundtrip"
      ]
    ]
  ],
  "test_negative_input": [
    [
      "tests/utils_tests/test_http.py",
      [
        "Base36IntTests",
        "test_negative_input"
      ]
    ]
  ],
  "test_to_base36_errors": [
    [
      "tests/utils_tests/test_http.py",
      [
        "Base36IntTests",
        "test_to_base36_errors"
      ]
    ]
  ],
  "test_invalid_literal": [
    [
      "tests/utils_tests/test_http.py",
      [
        "Base36IntTests",
        "test_invalid_literal"
      ]
    ]
  ],
  "test_input_too_large": [
    [
      "tests/utils_tests/test_http.py",
      [
        "Base36IntTests",
        "test_input_too_large"
      ]
    ]
  ],
  "test_to_int_errors": [
    [
      "tests/utils_tests/test_http.py",
      [
        "Base36IntTests",
        "test_to_int_errors"
      ]
    ]
  ],
  "test_bad_urls": [
    [
      "tests/utils_tests/test_http.py",
      [
        "IsSafeURLTests",
        "test_bad_urls"
      ]
    ]
  ],
  "test_good_urls": [
    [
      "tests/utils_tests/test_http.py",
      [
        "IsSafeURLTests",
        "test_good_urls"
      ]
    ]
  ],
  "test_basic_auth": [
    [
      "tests/utils_tests/test_http.py",
      [
        "IsSafeURLTests",
        "test_basic_auth"
      ]
    ]
  ],
  "test_no_allowed_hosts": [
    [
      "tests/utils_tests/test_http.py",
      [
        "IsSafeURLTests",
        "test_no_allowed_hosts"
      ]
    ]
  ],
  "test_allowed_hosts_str": [
    [
      "tests/utils_tests/test_http.py",
      [
        "IsSafeURLTests",
        "test_allowed_hosts_str"
      ]
    ]
  ],
  "test_secure_param_https_urls": [
    [
      "tests/utils_tests/test_http.py",
      [
        "IsSafeURLTests",
        "test_secure_param_https_urls"
      ]
    ]
  ],
  "test_secure_param_non_https_urls": [
    [
      "tests/utils_tests/test_http.py",
      [
        "IsSafeURLTests",
        "test_secure_param_non_https_urls"
      ]
    ]
  ],
  "test_is_safe_url_deprecated": [
    [
      "tests/utils_tests/test_http.py",
      [
        "IsSafeURLTests",
        "test_is_safe_url_deprecated"
      ]
    ]
  ],
  "test_unquote": [
    [
      "tests/utils_tests/test_http.py",
      [
        "URLQuoteTests",
        "test_unquote"
      ]
    ]
  ],
  "test_quote_plus": [
    [
      "tests/utils_tests/test_http.py",
      [
        "URLQuoteTests",
        "test_quote_plus"
      ]
    ]
  ],
  "test_unquote_plus": [
    [
      "tests/utils_tests/test_http.py",
      [
        "URLQuoteTests",
        "test_unquote_plus"
      ]
    ]
  ],
  "test_good": [
    [
      "tests/utils_tests/test_http.py",
      [
        "IsSameDomainTests",
        "test_good"
      ]
    ]
  ],
  "test_bad": [
    [
      "tests/utils_tests/test_http.py",
      [
        "IsSameDomainTests",
        "test_bad"
      ]
    ]
  ],
  "test_parsing": [
    [
      "tests/utils_tests/test_http.py",
      [
        "ETagProcessingTests",
        "test_parsing"
      ]
    ]
  ],
  "test_http_date": [
    [
      "tests/utils_tests/test_http.py",
      [
        "HttpDateProcessingTests",
        "test_http_date"
      ]
    ]
  ],
  "test_parsing_rfc1123": [
    [
      "tests/utils_tests/test_http.py",
      [
        "HttpDateProcessingTests",
        "test_parsing_rfc1123"
      ]
    ]
  ],
  "test_parsing_rfc850": [
    [
      "tests/utils_tests/test_http.py",
      [
        "HttpDateProcessingTests",
        "test_parsing_rfc850"
      ]
    ]
  ],
  "test_parsing_asctime": [
    [
      "tests/utils_tests/test_http.py",
      [
        "HttpDateProcessingTests",
        "test_parsing_asctime"
      ]
    ]
  ],
  "test_parsing_year_less_than_70": [
    [
      "tests/utils_tests/test_http.py",
      [
        "HttpDateProcessingTests",
        "test_parsing_year_less_than_70"
      ]
    ]
  ],
  "just_args": [
    [
      "tests/utils_tests/test_inspect.py",
      [
        "Person",
        "just_args"
      ]
    ]
  ],
  "all_kinds": [
    [
      "tests/utils_tests/test_inspect.py",
      [
        "Person",
        "all_kinds"
      ]
    ]
  ],
  "test_get_func_full_args_no_arguments": [
    [
      "tests/utils_tests/test_inspect.py",
      [
        "TestInspectMethods",
        "test_get_func_full_args_no_arguments"
      ]
    ]
  ],
  "test_get_func_full_args_one_argument": [
    [
      "tests/utils_tests/test_inspect.py",
      [
        "TestInspectMethods",
        "test_get_func_full_args_one_argument"
      ]
    ]
  ],
  "test_get_func_full_args_all_arguments": [
    [
      "tests/utils_tests/test_inspect.py",
      [
        "TestInspectMethods",
        "test_get_func_full_args_all_arguments"
      ]
    ]
  ],
  "test_func_accepts_var_args_has_var_args": [
    [
      "tests/utils_tests/test_inspect.py",
      [
        "TestInspectMethods",
        "test_func_accepts_var_args_has_var_args"
      ]
    ]
  ],
  "test_func_accepts_var_args_no_var_args": [
    [
      "tests/utils_tests/test_inspect.py",
      [
        "TestInspectMethods",
        "test_func_accepts_var_args_no_var_args"
      ]
    ]
  ],
  "test_method_has_no_args": [
    [
      "tests/utils_tests/test_inspect.py",
      [
        "TestInspectMethods",
        "test_method_has_no_args"
      ]
    ]
  ],
  "test_func_supports_parameter": [
    [
      "tests/utils_tests/test_inspect.py",
      [
        "TestInspectMethods",
        "test_func_supports_parameter"
      ]
    ]
  ],
  "test_func_accepts_kwargs": [
    [
      "tests/utils_tests/test_inspect.py",
      [
        "TestInspectMethods",
        "test_func_accepts_kwargs"
      ]
    ]
  ],
  "test_validates_correct_plain_address": [
    [
      "tests/utils_tests/test_ipv6.py",
      [
        "TestUtilsIPv6",
        "test_validates_correct_plain_address"
      ]
    ]
  ],
  "test_validates_correct_with_v4mapping": [
    [
      "tests/utils_tests/test_ipv6.py",
      [
        "TestUtilsIPv6",
        "test_validates_correct_with_v4mapping"
      ]
    ]
  ],
  "test_validates_incorrect_plain_address": [
    [
      "tests/utils_tests/test_ipv6.py",
      [
        "TestUtilsIPv6",
        "test_validates_incorrect_plain_address"
      ]
    ]
  ],
  "test_validates_incorrect_with_v4mapping": [
    [
      "tests/utils_tests/test_ipv6.py",
      [
        "TestUtilsIPv6",
        "test_validates_incorrect_with_v4mapping"
      ]
    ]
  ],
  "test_cleans_plain_address": [
    [
      "tests/utils_tests/test_ipv6.py",
      [
        "TestUtilsIPv6",
        "test_cleans_plain_address"
      ]
    ]
  ],
  "test_cleans_with_v4_mapping": [
    [
      "tests/utils_tests/test_ipv6.py",
      [
        "TestUtilsIPv6",
        "test_cleans_with_v4_mapping"
      ]
    ]
  ],
  "test_unpacks_ipv4": [
    [
      "tests/utils_tests/test_ipv6.py",
      [
        "TestUtilsIPv6",
        "test_unpacks_ipv4"
      ]
    ]
  ],
  "make_function": [
    [
      "tests/utils_tests/test_jslex.py",
      [
        "make_function"
      ]
    ]
  ],
  "make_function_1": [
    [
      "tests/utils_tests/test_jslex.py",
      [
        "make_function_1"
      ]
    ]
  ],
  "lazy_wrap": [
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase",
        "lazy_wrap"
      ]
    ],
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "SimpleLazyObjectTestCase",
        "lazy_wrap"
      ]
    ]
  ],
  "test_getattr": [
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase",
        "test_getattr"
      ]
    ]
  ],
  "test_setattr": [
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase",
        "test_setattr"
      ]
    ]
  ],
  "test_setattr2": [
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase",
        "test_setattr2"
      ]
    ]
  ],
  "test_delattr": [
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase",
        "test_delattr"
      ]
    ]
  ],
  "test_cmp": [
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase",
        "test_cmp"
      ]
    ]
  ],
  "test_text": [
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase",
        "test_text"
      ]
    ]
  ],
  "test_dir": [
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase",
        "test_dir"
      ]
    ]
  ],
  "test_class": [
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase",
        "test_class"
      ]
    ]
  ],
  "test_setitem": [
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase",
        "test_setitem"
      ]
    ]
  ],
  "test_delitem": [
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase",
        "test_delitem"
      ]
    ]
  ],
  "test_copy_list": [
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase",
        "test_copy_list"
      ]
    ]
  ],
  "test_copy_list_no_evaluation": [
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase",
        "test_copy_list_no_evaluation"
      ]
    ]
  ],
  "test_copy_class": [
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase",
        "test_copy_class"
      ]
    ]
  ],
  "test_copy_class_no_evaluation": [
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase",
        "test_copy_class_no_evaluation"
      ]
    ]
  ],
  "test_deepcopy_list": [
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase",
        "test_deepcopy_list"
      ]
    ]
  ],
  "test_deepcopy_list_no_evaluation": [
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase",
        "test_deepcopy_list_no_evaluation"
      ]
    ]
  ],
  "test_deepcopy_class": [
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase",
        "test_deepcopy_class"
      ]
    ]
  ],
  "test_deepcopy_class_no_evaluation": [
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "LazyObjectTestCase",
        "test_deepcopy_class_no_evaluation"
      ]
    ]
  ],
  "test_list_set": [
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "SimpleLazyObjectTestCase",
        "test_list_set"
      ]
    ]
  ],
  "test_pickle_with_reduce": [
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "SimpleLazyObjectPickleTestCase",
        "test_pickle_with_reduce"
      ]
    ]
  ],
  "test_pickle_model": [
    [
      "tests/utils_tests/test_lazyobject.py",
      [
        "SimpleLazyObjectPickleTestCase",
        "test_pickle_model"
      ]
    ]
  ],
  "test_negative_words": [
    [
      "tests/utils_tests/test_lorem_ipsum.py",
      [
        "LoremIpsumTests",
        "test_negative_words"
      ]
    ]
  ],
  "test_same_or_less_common_words": [
    [
      "tests/utils_tests/test_lorem_ipsum.py",
      [
        "LoremIpsumTests",
        "test_same_or_less_common_words"
      ]
    ]
  ],
  "test_common_words_in_string": [
    [
      "tests/utils_tests/test_lorem_ipsum.py",
      [
        "LoremIpsumTests",
        "test_common_words_in_string"
      ]
    ]
  ],
  "test_more_words_than_common": [
    [
      "tests/utils_tests/test_lorem_ipsum.py",
      [
        "LoremIpsumTests",
        "test_more_words_than_common"
      ]
    ]
  ],
  "test_common_large_number_of_words": [
    [
      "tests/utils_tests/test_lorem_ipsum.py",
      [
        "LoremIpsumTests",
        "test_common_large_number_of_words"
      ]
    ]
  ],
  "test_not_common_words": [
    [
      "tests/utils_tests/test_lorem_ipsum.py",
      [
        "LoremIpsumTests",
        "test_not_common_words"
      ]
    ]
  ],
  "test_sentence_starts_with_capital": [
    [
      "tests/utils_tests/test_lorem_ipsum.py",
      [
        "LoremIpsumTests",
        "test_sentence_starts_with_capital"
      ]
    ]
  ],
  "test_sentence": [
    [
      "tests/utils_tests/test_lorem_ipsum.py",
      [
        "LoremIpsumTests",
        "test_sentence"
      ]
    ]
  ],
  "test_sentence_ending": [
    [
      "tests/utils_tests/test_lorem_ipsum.py",
      [
        "LoremIpsumTests",
        "test_sentence_ending"
      ]
    ]
  ],
  "test_paragraph": [
    [
      "tests/utils_tests/test_lorem_ipsum.py",
      [
        "LoremIpsumTests",
        "test_paragraph"
      ]
    ]
  ],
  "test_paragraphs_not_common": [
    [
      "tests/utils_tests/test_lorem_ipsum.py",
      [
        "LoremIpsumTests",
        "test_paragraphs_not_common"
      ]
    ]
  ],
  "test_paragraphs": [
    [
      "tests/utils_tests/test_lorem_ipsum.py",
      [
        "LoremIpsumTests",
        "test_paragraphs"
      ]
    ]
  ],
  "test_loader": [
    [
      "tests/utils_tests/test_module_loading.py",
      [
        "DefaultLoader",
        "test_loader"
      ]
    ]
  ],
  "test_has_sumbodule_with_dotted_path": [
    [
      "tests/utils_tests/test_module_loading.py",
      [
        "DefaultLoader",
        "test_has_sumbodule_with_dotted_path"
      ]
    ]
  ],
  "test_shallow_loader": [
    [
      "tests/utils_tests/test_module_loading.py",
      [
        "EggLoader",
        "test_shallow_loader"
      ]
    ]
  ],
  "test_deep_loader": [
    [
      "tests/utils_tests/test_module_loading.py",
      [
        "EggLoader",
        "test_deep_loader"
      ]
    ]
  ],
  "test_import_string": [
    [
      "tests/utils_tests/test_module_loading.py",
      [
        "ModuleImportTests",
        "test_import_string"
      ]
    ]
  ],
  "test_autodiscover_modules_found": [
    [
      "tests/utils_tests/test_module_loading.py",
      [
        "AutodiscoverModulesTestCase",
        "test_autodiscover_modules_found"
      ]
    ]
  ],
  "test_autodiscover_modules_not_found": [
    [
      "tests/utils_tests/test_module_loading.py",
      [
        "AutodiscoverModulesTestCase",
        "test_autodiscover_modules_not_found"
      ]
    ]
  ],
  "test_autodiscover_modules_found_but_bad_module": [
    [
      "tests/utils_tests/test_module_loading.py",
      [
        "AutodiscoverModulesTestCase",
        "test_autodiscover_modules_found_but_bad_module"
      ]
    ]
  ],
  "test_autodiscover_modules_several_one_bad_module": [
    [
      "tests/utils_tests/test_module_loading.py",
      [
        "AutodiscoverModulesTestCase",
        "test_autodiscover_modules_several_one_bad_module"
      ]
    ]
  ],
  "test_autodiscover_modules_several_found": [
    [
      "tests/utils_tests/test_module_loading.py",
      [
        "AutodiscoverModulesTestCase",
        "test_autodiscover_modules_several_found"
      ]
    ]
  ],
  "test_autodiscover_modules_several_found_with_registry": [
    [
      "tests/utils_tests/test_module_loading.py",
      [
        "AutodiscoverModulesTestCase",
        "test_autodiscover_modules_several_found_with_registry"
      ]
    ]
  ],
  "test_validate_registry_keeps_intact": [
    [
      "tests/utils_tests/test_module_loading.py",
      [
        "AutodiscoverModulesTestCase",
        "test_validate_registry_keeps_intact"
      ]
    ]
  ],
  "test_validate_registry_resets_after_erroneous_module": [
    [
      "tests/utils_tests/test_module_loading.py",
      [
        "AutodiscoverModulesTestCase",
        "test_validate_registry_resets_after_erroneous_module"
      ]
    ]
  ],
  "test_validate_registry_resets_after_missing_module": [
    [
      "tests/utils_tests/test_module_loading.py",
      [
        "AutodiscoverModulesTestCase",
        "test_validate_registry_resets_after_missing_module"
      ]
    ]
  ],
  "find_module": [
    [
      "tests/utils_tests/test_module_loading.py",
      [
        "TestFinder",
        "find_module"
      ]
    ]
  ],
  "load_module": [
    [
      "tests/utils_tests/test_module_loading.py",
      [
        "TestLoader",
        "load_module"
      ]
    ]
  ],
  "test_format_string": [
    [
      "tests/utils_tests/test_numberformat.py",
      [
        "TestNumberFormat",
        "test_format_string"
      ]
    ]
  ],
  "test_large_number": [
    [
      "tests/utils_tests/test_numberformat.py",
      [
        "TestNumberFormat",
        "test_large_number"
      ]
    ]
  ],
  "test_float_numbers": [
    [
      "tests/utils_tests/test_numberformat.py",
      [
        "TestNumberFormat",
        "test_float_numbers"
      ]
    ]
  ],
  "test_decimal_numbers": [
    [
      "tests/utils_tests/test_numberformat.py",
      [
        "TestNumberFormat",
        "test_decimal_numbers"
      ]
    ]
  ],
  "test_decimal_subclass": [
    [
      "tests/utils_tests/test_numberformat.py",
      [
        "TestNumberFormat",
        "test_decimal_subclass"
      ]
    ]
  ],
  "test_base_path_ends_with_sep": [
    [
      "tests/utils_tests/test_os_utils.py",
      [
        "SafeJoinTests",
        "test_base_path_ends_with_sep"
      ]
    ]
  ],
  "test_root_path": [
    [
      "tests/utils_tests/test_os_utils.py",
      [
        "SafeJoinTests",
        "test_root_path"
      ]
    ]
  ],
  "test_parent_path": [
    [
      "tests/utils_tests/test_os_utils.py",
      [
        "SafeJoinTests",
        "test_parent_path"
      ]
    ]
  ],
  "test_to_path": [
    [
      "tests/utils_tests/test_os_utils.py",
      [
        "ToPathTests",
        "test_to_path"
      ]
    ]
  ],
  "test_to_path_invalid_value": [
    [
      "tests/utils_tests/test_os_utils.py",
      [
        "ToPathTests",
        "test_to_path_invalid_value"
      ]
    ]
  ],
  "test_group_positional": [
    [
      "tests/utils_tests/test_regex_helper.py",
      [
        "NormalizeTests",
        "test_group_positional"
      ]
    ]
  ],
  "test_group_noncapturing": [
    [
      "tests/utils_tests/test_regex_helper.py",
      [
        "NormalizeTests",
        "test_group_noncapturing"
      ]
    ]
  ],
  "test_group_named": [
    [
      "tests/utils_tests/test_regex_helper.py",
      [
        "NormalizeTests",
        "test_group_named"
      ]
    ]
  ],
  "test_group_backreference": [
    [
      "tests/utils_tests/test_regex_helper.py",
      [
        "NormalizeTests",
        "test_group_backreference"
      ]
    ]
  ],
  "assertRenderEqual": [
    [
      "tests/utils_tests/test_safestring.py",
      [
        "SafeStringTest",
        "assertRenderEqual"
      ]
    ]
  ],
  "test_mark_safe_str": [
    [
      "tests/utils_tests/test_safestring.py",
      [
        "SafeStringTest",
        "test_mark_safe_str"
      ]
    ]
  ],
  "test_mark_safe_object_implementing_dunder_html": [
    [
      "tests/utils_tests/test_safestring.py",
      [
        "SafeStringTest",
        "test_mark_safe_object_implementing_dunder_html"
      ]
    ]
  ],
  "test_mark_safe_lazy": [
    [
      "tests/utils_tests/test_safestring.py",
      [
        "SafeStringTest",
        "test_mark_safe_lazy"
      ]
    ]
  ],
  "test_mark_safe_object_implementing_dunder_str": [
    [
      "tests/utils_tests/test_safestring.py",
      [
        "SafeStringTest",
        "test_mark_safe_object_implementing_dunder_str"
      ]
    ]
  ],
  "test_mark_safe_result_implements_dunder_html": [
    [
      "tests/utils_tests/test_safestring.py",
      [
        "SafeStringTest",
        "test_mark_safe_result_implements_dunder_html"
      ]
    ]
  ],
  "test_mark_safe_lazy_result_implements_dunder_html": [
    [
      "tests/utils_tests/test_safestring.py",
      [
        "SafeStringTest",
        "test_mark_safe_lazy_result_implements_dunder_html"
      ]
    ]
  ],
  "test_add_lazy_safe_text_and_safe_text": [
    [
      "tests/utils_tests/test_safestring.py",
      [
        "SafeStringTest",
        "test_add_lazy_safe_text_and_safe_text"
      ]
    ]
  ],
  "test_mark_safe_as_decorator": [
    [
      "tests/utils_tests/test_safestring.py",
      [
        "SafeStringTest",
        "test_mark_safe_as_decorator"
      ]
    ]
  ],
  "test_mark_safe_decorator_does_not_affect_dunder_html": [
    [
      "tests/utils_tests/test_safestring.py",
      [
        "SafeStringTest",
        "test_mark_safe_decorator_does_not_affect_dunder_html"
      ]
    ]
  ],
  "test_mark_safe_decorator_does_not_affect_promises": [
    [
      "tests/utils_tests/test_safestring.py",
      [
        "SafeStringTest",
        "test_mark_safe_decorator_does_not_affect_promises"
      ]
    ]
  ],
  "test_simple_palette": [
    [
      "tests/utils_tests/test_termcolors.py",
      [
        "TermColorTests",
        "test_simple_palette"
      ]
    ]
  ],
  "test_fg": [
    [
      "tests/utils_tests/test_termcolors.py",
      [
        "TermColorTests",
        "test_fg"
      ]
    ]
  ],
  "test_fg_bg": [
    [
      "tests/utils_tests/test_termcolors.py",
      [
        "TermColorTests",
        "test_fg_bg"
      ]
    ]
  ],
  "test_fg_opts": [
    [
      "tests/utils_tests/test_termcolors.py",
      [
        "TermColorTests",
        "test_fg_opts"
      ]
    ]
  ],
  "test_fg_bg_opts": [
    [
      "tests/utils_tests/test_termcolors.py",
      [
        "TermColorTests",
        "test_fg_bg_opts"
      ]
    ]
  ],
  "test_override_palette": [
    [
      "tests/utils_tests/test_termcolors.py",
      [
        "TermColorTests",
        "test_override_palette"
      ]
    ]
  ],
  "test_override_nocolor": [
    [
      "tests/utils_tests/test_termcolors.py",
      [
        "TermColorTests",
        "test_override_nocolor"
      ]
    ]
  ],
  "test_reverse_override": [
    [
      "tests/utils_tests/test_termcolors.py",
      [
        "TermColorTests",
        "test_reverse_override"
      ]
    ]
  ],
  "test_multiple_roles": [
    [
      "tests/utils_tests/test_termcolors.py",
      [
        "TermColorTests",
        "test_multiple_roles"
      ]
    ]
  ],
  "test_override_with_multiple_roles": [
    [
      "tests/utils_tests/test_termcolors.py",
      [
        "TermColorTests",
        "test_override_with_multiple_roles"
      ]
    ]
  ],
  "test_empty_definition": [
    [
      "tests/utils_tests/test_termcolors.py",
      [
        "TermColorTests",
        "test_empty_definition"
      ]
    ]
  ],
  "test_empty_options": [
    [
      "tests/utils_tests/test_termcolors.py",
      [
        "TermColorTests",
        "test_empty_options"
      ]
    ]
  ],
  "test_bad_palette": [
    [
      "tests/utils_tests/test_termcolors.py",
      [
        "TermColorTests",
        "test_bad_palette"
      ]
    ]
  ],
  "test_bad_role": [
    [
      "tests/utils_tests/test_termcolors.py",
      [
        "TermColorTests",
        "test_bad_role"
      ]
    ]
  ],
  "test_bad_color": [
    [
      "tests/utils_tests/test_termcolors.py",
      [
        "TermColorTests",
        "test_bad_color"
      ]
    ]
  ],
  "test_bad_option": [
    [
      "tests/utils_tests/test_termcolors.py",
      [
        "TermColorTests",
        "test_bad_option"
      ]
    ]
  ],
  "test_role_case": [
    [
      "tests/utils_tests/test_termcolors.py",
      [
        "TermColorTests",
        "test_role_case"
      ]
    ]
  ],
  "test_color_case": [
    [
      "tests/utils_tests/test_termcolors.py",
      [
        "TermColorTests",
        "test_color_case"
      ]
    ]
  ],
  "test_opts_case": [
    [
      "tests/utils_tests/test_termcolors.py",
      [
        "TermColorTests",
        "test_opts_case"
      ]
    ]
  ],
  "test_colorize_empty_text": [
    [
      "tests/utils_tests/test_termcolors.py",
      [
        "TermColorTests",
        "test_colorize_empty_text"
      ]
    ]
  ],
  "test_get_text_list": [
    [
      "tests/utils_tests/test_text.py",
      [
        "TestUtilsText",
        "test_get_text_list"
      ]
    ]
  ],
  "test_smart_split": [
    [
      "tests/utils_tests/test_text.py",
      [
        "TestUtilsText",
        "test_smart_split"
      ]
    ]
  ],
  "test_truncate_chars": [
    [
      "tests/utils_tests/test_text.py",
      [
        "TestUtilsText",
        "test_truncate_chars"
      ]
    ]
  ],
  "test_truncate_chars_html": [
    [
      "tests/utils_tests/test_text.py",
      [
        "TestUtilsText",
        "test_truncate_chars_html"
      ]
    ]
  ],
  "test_truncate_words": [
    [
      "tests/utils_tests/test_text.py",
      [
        "TestUtilsText",
        "test_truncate_words"
      ]
    ]
  ],
  "test_truncate_html_words": [
    [
      "tests/utils_tests/test_text.py",
      [
        "TestUtilsText",
        "test_truncate_html_words"
      ]
    ]
  ],
  "test_normalize_newlines": [
    [
      "tests/utils_tests/test_text.py",
      [
        "TestUtilsText",
        "test_normalize_newlines"
      ]
    ]
  ],
  "test_unescape_entities": [
    [
      "tests/utils_tests/test_text.py",
      [
        "TestUtilsText",
        "test_unescape_entities"
      ]
    ]
  ],
  "test_unescape_entities_deprecated": [
    [
      "tests/utils_tests/test_text.py",
      [
        "TestUtilsText",
        "test_unescape_entities_deprecated"
      ]
    ]
  ],
  "test_unescape_string_literal": [
    [
      "tests/utils_tests/test_text.py",
      [
        "TestUtilsText",
        "test_unescape_string_literal"
      ]
    ]
  ],
  "test_get_valid_filename": [
    [
      "tests/utils_tests/test_text.py",
      [
        "TestUtilsText",
        "test_get_valid_filename"
      ]
    ]
  ],
  "test_compress_sequence": [
    [
      "tests/utils_tests/test_text.py",
      [
        "TestUtilsText",
        "test_compress_sequence"
      ]
    ]
  ],
  "test_format_lazy": [
    [
      "tests/utils_tests/test_text.py",
      [
        "TestUtilsText",
        "test_format_lazy"
      ]
    ]
  ],
  "test_equal_datetimes": [
    [
      "tests/utils_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_equal_datetimes"
      ]
    ]
  ],
  "test_ignore_microseconds_and_seconds": [
    [
      "tests/utils_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_ignore_microseconds_and_seconds"
      ]
    ]
  ],
  "test_other_units": [
    [
      "tests/utils_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_other_units"
      ]
    ]
  ],
  "test_multiple_units": [
    [
      "tests/utils_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_multiple_units"
      ]
    ]
  ],
  "test_display_first_unit": [
    [
      "tests/utils_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_display_first_unit"
      ]
    ]
  ],
  "test_display_second_before_first": [
    [
      "tests/utils_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_display_second_before_first"
      ]
    ]
  ],
  "test_second_before_equal_first_humanize_time_strings": [
    [
      "tests/utils_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_second_before_equal_first_humanize_time_strings"
      ]
    ]
  ],
  "test_different_timezones": [
    [
      "tests/utils_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_different_timezones"
      ]
    ]
  ],
  "test_date_objects": [
    [
      "tests/utils_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_date_objects"
      ]
    ]
  ],
  "test_both_date_objects": [
    [
      "tests/utils_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_both_date_objects"
      ]
    ]
  ],
  "test_leap_year": [
    [
      "tests/utils_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_leap_year"
      ]
    ]
  ],
  "test_leap_year_new_years_eve": [
    [
      "tests/utils_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_leap_year_new_years_eve"
      ]
    ]
  ],
  "test_naive_datetime_with_tzinfo_attribute": [
    [
      "tests/utils_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_naive_datetime_with_tzinfo_attribute"
      ]
    ]
  ],
  "test_thousand_years_ago": [
    [
      "tests/utils_tests/test_timesince.py",
      [
        "TimesinceTests",
        "test_thousand_years_ago"
      ]
    ]
  ],
  "test_now": [
    [
      "tests/utils_tests/test_timezone.py",
      [
        "TimezoneTests",
        "test_now"
      ]
    ]
  ],
  "test_localdate": [
    [
      "tests/utils_tests/test_timezone.py",
      [
        "TimezoneTests",
        "test_localdate"
      ]
    ]
  ],
  "func_tz_eat": [
    [
      "tests/utils_tests/test_timezone.py",
      [
        "TimezoneTests",
        "test_override_decorator",
        "func_tz_eat"
      ]
    ]
  ],
  "func_tz_none": [
    [
      "tests/utils_tests/test_timezone.py",
      [
        "TimezoneTests",
        "test_override_decorator",
        "func_tz_none"
      ]
    ]
  ],
  "test_override_string_tz": [
    [
      "tests/utils_tests/test_timezone.py",
      [
        "TimezoneTests",
        "test_override_string_tz"
      ]
    ]
  ],
  "test_override_fixed_offset": [
    [
      "tests/utils_tests/test_timezone.py",
      [
        "TimezoneTests",
        "test_override_fixed_offset"
      ]
    ]
  ],
  "test_activate_invalid_timezone": [
    [
      "tests/utils_tests/test_timezone.py",
      [
        "TimezoneTests",
        "test_activate_invalid_timezone"
      ]
    ]
  ],
  "test_is_aware": [
    [
      "tests/utils_tests/test_timezone.py",
      [
        "TimezoneTests",
        "test_is_aware"
      ]
    ]
  ],
  "test_is_naive": [
    [
      "tests/utils_tests/test_timezone.py",
      [
        "TimezoneTests",
        "test_is_naive"
      ]
    ]
  ],
  "test_make_aware": [
    [
      "tests/utils_tests/test_timezone.py",
      [
        "TimezoneTests",
        "test_make_aware"
      ]
    ]
  ],
  "test_make_naive": [
    [
      "tests/utils_tests/test_timezone.py",
      [
        "TimezoneTests",
        "test_make_naive"
      ]
    ]
  ],
  "test_make_naive_no_tz": [
    [
      "tests/utils_tests/test_timezone.py",
      [
        "TimezoneTests",
        "test_make_naive_no_tz"
      ]
    ]
  ],
  "test_make_aware_no_tz": [
    [
      "tests/utils_tests/test_timezone.py",
      [
        "TimezoneTests",
        "test_make_aware_no_tz"
      ]
    ]
  ],
  "test_make_aware2": [
    [
      "tests/utils_tests/test_timezone.py",
      [
        "TimezoneTests",
        "test_make_aware2"
      ]
    ]
  ],
  "test_make_aware_pytz": [
    [
      "tests/utils_tests/test_timezone.py",
      [
        "TimezoneTests",
        "test_make_aware_pytz"
      ]
    ]
  ],
  "test_make_aware_pytz_ambiguous": [
    [
      "tests/utils_tests/test_timezone.py",
      [
        "TimezoneTests",
        "test_make_aware_pytz_ambiguous"
      ]
    ]
  ],
  "test_make_aware_pytz_non_existent": [
    [
      "tests/utils_tests/test_timezone.py",
      [
        "TimezoneTests",
        "test_make_aware_pytz_non_existent"
      ]
    ]
  ],
  "test_get_default_timezone": [
    [
      "tests/utils_tests/test_timezone.py",
      [
        "TimezoneTests",
        "test_get_default_timezone"
      ]
    ]
  ],
  "test_get_default_timezone_utc": [
    [
      "tests/utils_tests/test_timezone.py",
      [
        "TimezoneTests",
        "test_get_default_timezone_utc"
      ]
    ]
  ],
  "test_fixedoffset_timedelta": [
    [
      "tests/utils_tests/test_timezone.py",
      [
        "TimezoneTests",
        "test_fixedoffset_timedelta"
      ]
    ]
  ],
  "test_fixedoffset_negative_timedelta": [
    [
      "tests/utils_tests/test_timezone.py",
      [
        "TimezoneTests",
        "test_fixedoffset_negative_timedelta"
      ]
    ]
  ],
  "test_cyclic_dependency": [
    [
      "tests/utils_tests/test_topological_sort.py",
      [
        "TopologicalSortTests",
        "test_cyclic_dependency"
      ]
    ]
  ],
  "test_negate": [
    [
      "tests/utils_tests/test_tree.py",
      [
        "NodeTests",
        "test_negate"
      ]
    ]
  ],
  "test_eq_children": [
    [
      "tests/utils_tests/test_tree.py",
      [
        "NodeTests",
        "test_eq_children"
      ]
    ]
  ],
  "test_eq_connector": [
    [
      "tests/utils_tests/test_tree.py",
      [
        "NodeTests",
        "test_eq_connector"
      ]
    ]
  ],
  "test_eq_negated": [
    [
      "tests/utils_tests/test_tree.py",
      [
        "NodeTests",
        "test_eq_negated"
      ]
    ]
  ],
  "on_macos_with_hfs": [
    [
      "tests/utils_tests/utils.py",
      [
        "on_macos_with_hfs"
      ]
    ]
  ],
  "assertFailsValidation": [
    [
      "tests/validation/__init__.py",
      [
        "ValidationAssertions",
        "assertFailsValidation"
      ]
    ]
  ],
  "assertFieldFailsValidationWithMessage": [
    [
      "tests/validation/__init__.py",
      [
        "ValidationAssertions",
        "assertFieldFailsValidationWithMessage"
      ]
    ]
  ],
  "validate_answer_to_universe": [
    [
      "tests/validation/models.py",
      [
        "validate_answer_to_universe"
      ]
    ]
  ],
  "test_custom_simple_validator_message": [
    [
      "tests/validation/test_custom_messages.py",
      [
        "CustomMessagesTests",
        "test_custom_simple_validator_message"
      ]
    ]
  ],
  "test_custom_null_message": [
    [
      "tests/validation/test_custom_messages.py",
      [
        "CustomMessagesTests",
        "test_custom_null_message"
      ]
    ]
  ],
  "_test_validation_messages": [
    [
      "tests/validation/test_error_messages.py",
      [
        "ValidationMessagesTest",
        "_test_validation_messages"
      ]
    ]
  ],
  "test_autofield_field_raises_error_message": [
    [
      "tests/validation/test_error_messages.py",
      [
        "ValidationMessagesTest",
        "test_autofield_field_raises_error_message"
      ]
    ]
  ],
  "test_integer_field_raises_error_message": [
    [
      "tests/validation/test_error_messages.py",
      [
        "ValidationMessagesTest",
        "test_integer_field_raises_error_message"
      ]
    ]
  ],
  "test_boolean_field_raises_error_message": [
    [
      "tests/validation/test_error_messages.py",
      [
        "ValidationMessagesTest",
        "test_boolean_field_raises_error_message"
      ]
    ]
  ],
  "test_nullable_boolean_field_raises_error_message": [
    [
      "tests/validation/test_error_messages.py",
      [
        "ValidationMessagesTest",
        "test_nullable_boolean_field_raises_error_message"
      ]
    ]
  ],
  "test_float_field_raises_error_message": [
    [
      "tests/validation/test_error_messages.py",
      [
        "ValidationMessagesTest",
        "test_float_field_raises_error_message"
      ]
    ]
  ],
  "test_decimal_field_raises_error_message": [
    [
      "tests/validation/test_error_messages.py",
      [
        "ValidationMessagesTest",
        "test_decimal_field_raises_error_message"
      ]
    ]
  ],
  "test_null_boolean_field_raises_error_message": [
    [
      "tests/validation/test_error_messages.py",
      [
        "ValidationMessagesTest",
        "test_null_boolean_field_raises_error_message"
      ]
    ]
  ],
  "test_date_field_raises_error_message": [
    [
      "tests/validation/test_error_messages.py",
      [
        "ValidationMessagesTest",
        "test_date_field_raises_error_message"
      ]
    ]
  ],
  "test_datetime_field_raises_error_message": [
    [
      "tests/validation/test_error_messages.py",
      [
        "ValidationMessagesTest",
        "test_datetime_field_raises_error_message"
      ]
    ]
  ],
  "test_time_field_raises_error_message": [
    [
      "tests/validation/test_error_messages.py",
      [
        "ValidationMessagesTest",
        "test_time_field_raises_error_message"
      ]
    ]
  ],
  "test_validationerror_is_picklable": [
    [
      "tests/validation/test_picklable.py",
      [
        "PickableValidationErrorTestCase",
        "test_validationerror_is_picklable"
      ]
    ]
  ],
  "test_unique_fields_get_collected": [
    [
      "tests/validation/test_unique.py",
      [
        "GetUniqueCheckTests",
        "test_unique_fields_get_collected"
      ]
    ]
  ],
  "test_unique_together_gets_picked_up_and_converted_to_tuple": [
    [
      "tests/validation/test_unique.py",
      [
        "GetUniqueCheckTests",
        "test_unique_together_gets_picked_up_and_converted_to_tuple"
      ]
    ]
  ],
  "test_unique_together_normalization": [
    [
      "tests/validation/test_unique.py",
      [
        "GetUniqueCheckTests",
        "test_unique_together_normalization"
      ]
    ]
  ],
  "test_primary_key_is_considered_unique": [
    [
      "tests/validation/test_unique.py",
      [
        "GetUniqueCheckTests",
        "test_primary_key_is_considered_unique"
      ]
    ]
  ],
  "test_unique_for_date_gets_picked_up": [
    [
      "tests/validation/test_unique.py",
      [
        "GetUniqueCheckTests",
        "test_unique_for_date_gets_picked_up"
      ]
    ]
  ],
  "test_unique_for_date_exclusion": [
    [
      "tests/validation/test_unique.py",
      [
        "GetUniqueCheckTests",
        "test_unique_for_date_exclusion"
      ]
    ]
  ],
  "test_primary_key_unique_check_not_performed_when_adding_and_pk_not_specified": [
    [
      "tests/validation/test_unique.py",
      [
        "PerformUniqueChecksTest",
        "test_primary_key_unique_check_not_performed_when_adding_and_pk_not_specified"
      ]
    ]
  ],
  "test_primary_key_unique_check_performed_when_adding_and_pk_specified": [
    [
      "tests/validation/test_unique.py",
      [
        "PerformUniqueChecksTest",
        "test_primary_key_unique_check_performed_when_adding_and_pk_specified"
      ]
    ]
  ],
  "test_primary_key_unique_check_not_performed_when_not_adding": [
    [
      "tests/validation/test_unique.py",
      [
        "PerformUniqueChecksTest",
        "test_primary_key_unique_check_not_performed_when_not_adding"
      ]
    ]
  ],
  "test_unique_errors": [
    [
      "tests/validation/test_unique.py",
      [
        "PerformUniqueChecksTest",
        "test_unique_errors"
      ]
    ]
  ],
  "test_custom_validator_passes_for_correct_value": [
    [
      "tests/validation/test_validators.py",
      [
        "TestModelsWithValidators",
        "test_custom_validator_passes_for_correct_value"
      ]
    ]
  ],
  "test_custom_validator_raises_error_for_incorrect_value": [
    [
      "tests/validation/test_validators.py",
      [
        "TestModelsWithValidators",
        "test_custom_validator_raises_error_for_incorrect_value"
      ]
    ]
  ],
  "test_missing_required_field_raises_error": [
    [
      "tests/validation/tests.py",
      [
        "BaseModelValidationTests",
        "test_missing_required_field_raises_error"
      ]
    ]
  ],
  "test_with_correct_value_model_validates": [
    [
      "tests/validation/tests.py",
      [
        "BaseModelValidationTests",
        "test_with_correct_value_model_validates"
      ]
    ]
  ],
  "test_custom_validate_method": [
    [
      "tests/validation/tests.py",
      [
        "BaseModelValidationTests",
        "test_custom_validate_method"
      ]
    ]
  ],
  "test_wrong_FK_value_raises_error": [
    [
      "tests/validation/tests.py",
      [
        "BaseModelValidationTests",
        "test_wrong_FK_value_raises_error"
      ]
    ]
  ],
  "test_correct_FK_value_validates": [
    [
      "tests/validation/tests.py",
      [
        "BaseModelValidationTests",
        "test_correct_FK_value_validates"
      ]
    ]
  ],
  "test_limited_FK_raises_error": [
    [
      "tests/validation/tests.py",
      [
        "BaseModelValidationTests",
        "test_limited_FK_raises_error"
      ]
    ]
  ],
  "test_wrong_email_value_raises_error": [
    [
      "tests/validation/tests.py",
      [
        "BaseModelValidationTests",
        "test_wrong_email_value_raises_error"
      ]
    ]
  ],
  "test_correct_email_value_passes": [
    [
      "tests/validation/tests.py",
      [
        "BaseModelValidationTests",
        "test_correct_email_value_passes"
      ]
    ]
  ],
  "test_wrong_url_value_raises_error": [
    [
      "tests/validation/tests.py",
      [
        "BaseModelValidationTests",
        "test_wrong_url_value_raises_error"
      ]
    ]
  ],
  "test_text_greater_that_charfields_max_length_raises_errors": [
    [
      "tests/validation/tests.py",
      [
        "BaseModelValidationTests",
        "test_text_greater_that_charfields_max_length_raises_errors"
      ]
    ]
  ],
  "test_malformed_slug_raises_error": [
    [
      "tests/validation/tests.py",
      [
        "BaseModelValidationTests",
        "test_malformed_slug_raises_error"
      ]
    ]
  ],
  "test_full_clean_does_not_mutate_exclude": [
    [
      "tests/validation/tests.py",
      [
        "BaseModelValidationTests",
        "test_full_clean_does_not_mutate_exclude"
      ]
    ]
  ],
  "test_partial_validation": [
    [
      "tests/validation/tests.py",
      [
        "ModelFormsTests",
        "test_partial_validation"
      ]
    ]
  ],
  "test_validation_with_empty_blank_field": [
    [
      "tests/validation/tests.py",
      [
        "ModelFormsTests",
        "test_validation_with_empty_blank_field"
      ]
    ]
  ],
  "test_validation_with_invalid_blank_field": [
    [
      "tests/validation/tests.py",
      [
        "ModelFormsTests",
        "test_validation_with_invalid_blank_field"
      ]
    ]
  ],
  "test_correct_generic_ip_passes": [
    [
      "tests/validation/tests.py",
      [
        "GenericIPAddressFieldTests",
        "test_correct_generic_ip_passes"
      ]
    ]
  ],
  "test_invalid_generic_ip_raises_error": [
    [
      "tests/validation/tests.py",
      [
        "GenericIPAddressFieldTests",
        "test_invalid_generic_ip_raises_error"
      ]
    ]
  ],
  "test_correct_v4_ip_passes": [
    [
      "tests/validation/tests.py",
      [
        "GenericIPAddressFieldTests",
        "test_correct_v4_ip_passes"
      ]
    ]
  ],
  "test_invalid_v4_ip_raises_error": [
    [
      "tests/validation/tests.py",
      [
        "GenericIPAddressFieldTests",
        "test_invalid_v4_ip_raises_error"
      ]
    ]
  ],
  "test_correct_v6_ip_passes": [
    [
      "tests/validation/tests.py",
      [
        "GenericIPAddressFieldTests",
        "test_correct_v6_ip_passes"
      ]
    ]
  ],
  "test_invalid_v6_ip_raises_error": [
    [
      "tests/validation/tests.py",
      [
        "GenericIPAddressFieldTests",
        "test_invalid_v6_ip_raises_error"
      ]
    ]
  ],
  "test_v6_uniqueness_detection": [
    [
      "tests/validation/tests.py",
      [
        "GenericIPAddressFieldTests",
        "test_v6_uniqueness_detection"
      ]
    ]
  ],
  "test_v4_unpack_uniqueness_detection": [
    [
      "tests/validation/tests.py",
      [
        "GenericIPAddressFieldTests",
        "test_v4_unpack_uniqueness_detection"
      ]
    ]
  ],
  "test_empty_generic_ip_passes": [
    [
      "tests/validation/tests.py",
      [
        "GenericIPAddressFieldTests",
        "test_empty_generic_ip_passes"
      ]
    ]
  ],
  "create_path": [
    [
      "tests/validators/tests.py",
      [
        "create_path"
      ]
    ]
  ],
  "test_validators": [
    [
      "tests/validators/tests.py",
      [
        "TestValidators",
        "test_validators"
      ]
    ]
  ],
  "test_single_message": [
    [
      "tests/validators/tests.py",
      [
        "TestValidators",
        "test_single_message"
      ]
    ]
  ],
  "test_message_list": [
    [
      "tests/validators/tests.py",
      [
        "TestValidators",
        "test_message_list"
      ]
    ]
  ],
  "test_message_dict": [
    [
      "tests/validators/tests.py",
      [
        "TestValidators",
        "test_message_dict"
      ]
    ]
  ],
  "test_regex_validator_flags": [
    [
      "tests/validators/tests.py",
      [
        "TestValidators",
        "test_regex_validator_flags"
      ]
    ]
  ],
  "test_max_length_validator_message": [
    [
      "tests/validators/tests.py",
      [
        "TestValidators",
        "test_max_length_validator_message"
      ]
    ]
  ],
  "test_regex_equality": [
    [
      "tests/validators/tests.py",
      [
        "TestValidatorEquality",
        "test_regex_equality"
      ]
    ]
  ],
  "test_regex_equality_nocache": [
    [
      "tests/validators/tests.py",
      [
        "TestValidatorEquality",
        "test_regex_equality_nocache"
      ]
    ]
  ],
  "test_regex_equality_blank": [
    [
      "tests/validators/tests.py",
      [
        "TestValidatorEquality",
        "test_regex_equality_blank"
      ]
    ]
  ],
  "test_email_equality": [
    [
      "tests/validators/tests.py",
      [
        "TestValidatorEquality",
        "test_email_equality"
      ]
    ]
  ],
  "test_basic_equality": [
    [
      "tests/validators/tests.py",
      [
        "TestValidatorEquality",
        "test_basic_equality"
      ]
    ]
  ],
  "test_decimal_equality": [
    [
      "tests/validators/tests.py",
      [
        "TestValidatorEquality",
        "test_decimal_equality"
      ]
    ]
  ],
  "test_file_extension_equality": [
    [
      "tests/validators/tests.py",
      [
        "TestValidatorEquality",
        "test_file_extension_equality"
      ]
    ]
  ],
  "test_prohibit_null_characters_validator_equality": [
    [
      "tests/validators/tests.py",
      [
        "TestValidatorEquality",
        "test_prohibit_null_characters_validator_equality"
      ]
    ]
  ],
  "test_development": [
    [
      "tests/version/tests.py",
      [
        "VersionTests",
        "test_development"
      ]
    ]
  ],
  "test_releases": [
    [
      "tests/version/tests.py",
      [
        "VersionTests",
        "test_releases"
      ]
    ]
  ],
  "test_get_version_tuple": [
    [
      "tests/version/tests.py",
      [
        "VersionTests",
        "test_get_version_tuple"
      ]
    ]
  ],
  "go_boom": [
    [
      "tests/view_tests/templatetags/debugtags.py",
      [
        "go_boom"
      ]
    ]
  ],
  "test_translation": [
    [
      "tests/view_tests/tests/test_csrf.py",
      [
        "CsrfViewTests",
        "test_translation"
      ]
    ]
  ],
  "test_no_referer": [
    [
      "tests/view_tests/tests/test_csrf.py",
      [
        "CsrfViewTests",
        "test_no_referer"
      ]
    ]
  ],
  "test_no_cookies": [
    [
      "tests/view_tests/tests/test_csrf.py",
      [
        "CsrfViewTests",
        "test_no_cookies"
      ]
    ]
  ],
  "test_no_django_template_engine": [
    [
      "tests/view_tests/tests/test_csrf.py",
      [
        "CsrfViewTests",
        "test_no_django_template_engine"
      ]
    ]
  ],
  "test_custom_template": [
    [
      "tests/view_tests/tests/test_csrf.py",
      [
        "CsrfViewTests",
        "test_custom_template"
      ]
    ]
  ],
  "test_custom_template_does_not_exist": [
    [
      "tests/view_tests/tests/test_csrf.py",
      [
        "CsrfViewTests",
        "test_custom_template_does_not_exist"
      ]
    ]
  ],
  "test_400": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "DebugViewTests",
        "test_400"
      ]
    ],
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "NonDjangoTemplatesDebugViewTests",
        "test_400"
      ]
    ]
  ],
  "test_403": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "DebugViewTests",
        "test_403"
      ]
    ],
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "NonDjangoTemplatesDebugViewTests",
        "test_403"
      ]
    ]
  ],
  "test_403_template": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "DebugViewTests",
        "test_403_template"
      ]
    ]
  ],
  "test_404_not_in_urls": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "DebugViewTests",
        "test_404_not_in_urls"
      ]
    ]
  ],
  "test_404_empty_path_not_in_urls": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "DebugViewTests",
        "test_404_empty_path_not_in_urls"
      ]
    ]
  ],
  "test_technical_404": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "DebugViewTests",
        "test_technical_404"
      ]
    ]
  ],
  "test_classbased_technical_404": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "DebugViewTests",
        "test_classbased_technical_404"
      ]
    ]
  ],
  "test_non_l10ned_numeric_ids": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "DebugViewTests",
        "test_non_l10ned_numeric_ids"
      ]
    ]
  ],
  "test_template_exceptions": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "DebugViewTests",
        "test_template_exceptions"
      ]
    ]
  ],
  "test_template_loader_postmortem": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "DebugViewTests",
        "test_template_loader_postmortem"
      ]
    ]
  ],
  "test_no_template_source_loaders": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "DebugViewTests",
        "test_no_template_source_loaders"
      ]
    ]
  ],
  "test_default_urlconf_template": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "DebugViewTests",
        "test_default_urlconf_template"
      ]
    ]
  ],
  "test_regression_21530": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "DebugViewTests",
        "test_regression_21530"
      ]
    ]
  ],
  "test_template_encoding": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "DebugViewTests",
        "test_template_encoding"
      ]
    ],
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterTests",
        "test_template_encoding"
      ]
    ]
  ],
  "test_technical_404_converter_raise_404": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "DebugViewTests",
        "test_technical_404_converter_raise_404"
      ]
    ]
  ],
  "test_exception_reporter_from_request": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "DebugViewTests",
        "test_exception_reporter_from_request"
      ]
    ]
  ],
  "test_exception_reporter_from_settings": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "DebugViewTests",
        "test_exception_reporter_from_settings"
      ]
    ]
  ],
  "test_handle_db_exception": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "DebugViewQueriesAllowedTests",
        "test_handle_db_exception"
      ]
    ]
  ],
  "test_template_not_found_error": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "NonDjangoTemplatesDebugViewTests",
        "test_template_not_found_error"
      ]
    ]
  ],
  "test_request_and_exception": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterTests",
        "test_request_and_exception"
      ]
    ],
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "PlainTextReportTests",
        "test_request_and_exception"
      ]
    ]
  ],
  "test_no_request": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterTests",
        "test_no_request"
      ]
    ],
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "PlainTextReportTests",
        "test_no_request"
      ]
    ]
  ],
  "test_eol_support": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterTests",
        "test_eol_support"
      ]
    ]
  ],
  "test_reporting_of_nested_exceptions": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterTests",
        "test_reporting_of_nested_exceptions"
      ]
    ]
  ],
  "test_reporting_frames_without_source": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterTests",
        "test_reporting_frames_without_source"
      ]
    ]
  ],
  "test_reporting_frames_source_not_match": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterTests",
        "test_reporting_frames_source_not_match"
      ]
    ]
  ],
  "generate_traceback_frames": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterTests",
        "test_reporting_frames_for_cyclic_reference",
        "generate_traceback_frames"
      ]
    ]
  ],
  "test_reporting_frames_for_cyclic_reference": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterTests",
        "test_reporting_frames_for_cyclic_reference"
      ]
    ]
  ],
  "test_request_and_message": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterTests",
        "test_request_and_message"
      ]
    ],
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "PlainTextReportTests",
        "test_request_and_message"
      ]
    ]
  ],
  "test_message_only": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterTests",
        "test_message_only"
      ]
    ],
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "PlainTextReportTests",
        "test_message_only"
      ]
    ]
  ],
  "test_non_utf8_values_handling": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterTests",
        "test_non_utf8_values_handling"
      ]
    ]
  ],
  "test_local_variable_escaping": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterTests",
        "test_local_variable_escaping"
      ]
    ]
  ],
  "test_unprintable_values_handling": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterTests",
        "test_unprintable_values_handling"
      ]
    ]
  ],
  "test_too_large_values_handling": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterTests",
        "test_too_large_values_handling"
      ]
    ]
  ],
  "test_encoding_error": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterTests",
        "test_encoding_error"
      ]
    ]
  ],
  "test_unfrozen_importlib": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterTests",
        "test_unfrozen_importlib"
      ]
    ]
  ],
  "test_ignore_traceback_evaluation_exceptions": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterTests",
        "test_ignore_traceback_evaluation_exceptions"
      ]
    ]
  ],
  "test_disallowed_host": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterTests",
        "test_disallowed_host"
      ]
    ],
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "PlainTextReportTests",
        "test_disallowed_host"
      ]
    ]
  ],
  "test_request_with_items_key": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterTests",
        "test_request_with_items_key"
      ]
    ],
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "PlainTextReportTests",
        "test_request_with_items_key"
      ]
    ]
  ],
  "test_exception_fetching_user": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterTests",
        "test_exception_fetching_user"
      ]
    ]
  ],
  "test_template_exception": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "PlainTextReportTests",
        "test_template_exception"
      ]
    ]
  ],
  "verify_unsafe_response": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReportTestMixin",
        "verify_unsafe_response"
      ]
    ]
  ],
  "verify_safe_response": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReportTestMixin",
        "verify_safe_response"
      ]
    ]
  ],
  "verify_paranoid_response": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReportTestMixin",
        "verify_paranoid_response"
      ]
    ]
  ],
  "verify_unsafe_email": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReportTestMixin",
        "verify_unsafe_email"
      ]
    ]
  ],
  "verify_safe_email": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReportTestMixin",
        "verify_safe_email"
      ]
    ]
  ],
  "verify_paranoid_email": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReportTestMixin",
        "verify_paranoid_email"
      ]
    ]
  ],
  "test_non_sensitive_request": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterFilterTests",
        "test_non_sensitive_request"
      ]
    ],
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "NonHTMLResponseExceptionReporterFilter",
        "test_non_sensitive_request"
      ]
    ]
  ],
  "test_sensitive_request": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterFilterTests",
        "test_sensitive_request"
      ]
    ],
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "NonHTMLResponseExceptionReporterFilter",
        "test_sensitive_request"
      ]
    ]
  ],
  "test_paranoid_request": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterFilterTests",
        "test_paranoid_request"
      ]
    ],
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "NonHTMLResponseExceptionReporterFilter",
        "test_paranoid_request"
      ]
    ]
  ],
  "test_multivalue_dict_key_error": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterFilterTests",
        "test_multivalue_dict_key_error"
      ]
    ]
  ],
  "test_custom_exception_reporter_filter": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterFilterTests",
        "test_custom_exception_reporter_filter"
      ]
    ],
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "NonHTMLResponseExceptionReporterFilter",
        "test_custom_exception_reporter_filter"
      ]
    ]
  ],
  "test_sensitive_method": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterFilterTests",
        "test_sensitive_method"
      ]
    ]
  ],
  "test_sensitive_function_arguments": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterFilterTests",
        "test_sensitive_function_arguments"
      ]
    ]
  ],
  "test_sensitive_function_keyword_arguments": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterFilterTests",
        "test_sensitive_function_keyword_arguments"
      ]
    ]
  ],
  "test_callable_settings": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterFilterTests",
        "test_callable_settings"
      ]
    ]
  ],
  "test_callable_settings_forbidding_to_set_attributes": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterFilterTests",
        "test_callable_settings_forbidding_to_set_attributes"
      ]
    ]
  ],
  "test_dict_setting_with_non_str_key": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterFilterTests",
        "test_dict_setting_with_non_str_key"
      ]
    ]
  ],
  "test_sensitive_settings": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterFilterTests",
        "test_sensitive_settings"
      ]
    ]
  ],
  "test_settings_with_sensitive_keys": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterFilterTests",
        "test_settings_with_sensitive_keys"
      ]
    ]
  ],
  "test_cleanse_setting_basic": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterFilterTests",
        "test_cleanse_setting_basic"
      ]
    ]
  ],
  "test_cleanse_setting_ignore_case": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterFilterTests",
        "test_cleanse_setting_ignore_case"
      ]
    ]
  ],
  "test_cleanse_setting_recurses_in_dictionary": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterFilterTests",
        "test_cleanse_setting_recurses_in_dictionary"
      ]
    ]
  ],
  "test_cleanse_setting_recurses_in_list_tuples": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterFilterTests",
        "test_cleanse_setting_recurses_in_list_tuples"
      ]
    ]
  ],
  "test_request_meta_filtering": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterFilterTests",
        "test_request_meta_filtering"
      ]
    ]
  ],
  "test_exception_report_uses_meta_filtering": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "ExceptionReporterFilterTests",
        "test_exception_report_uses_meta_filtering"
      ]
    ]
  ],
  "test_setting_allows_custom_subclass": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "CustomExceptionReporterFilterTests",
        "test_setting_allows_custom_subclass"
      ]
    ]
  ],
  "test_cleansed_substitute_override": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "CustomExceptionReporterFilterTests",
        "test_cleansed_substitute_override"
      ]
    ]
  ],
  "test_hidden_settings_override": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "CustomExceptionReporterFilterTests",
        "test_hidden_settings_override"
      ]
    ]
  ],
  "test_non_html_response_encoding": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "NonHTMLResponseExceptionReporterFilter",
        "test_non_html_response_encoding"
      ]
    ]
  ],
  "test_sensitive_variables_not_called": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "DecoratorsTests",
        "test_sensitive_variables_not_called"
      ]
    ]
  ],
  "test_sensitive_post_parameters_not_called": [
    [
      "tests/view_tests/tests/test_debug.py",
      [
        "DecoratorsTests",
        "test_sensitive_post_parameters_not_called"
      ]
    ]
  ],
  "test_page_not_found": [
    [
      "tests/view_tests/tests/test_defaults.py",
      [
        "DefaultsTests",
        "test_page_not_found"
      ]
    ]
  ],
  "test_csrf_token_in_404": [
    [
      "tests/view_tests/tests/test_defaults.py",
      [
        "DefaultsTests",
        "test_csrf_token_in_404"
      ]
    ]
  ],
  "test_server_error": [
    [
      "tests/view_tests/tests/test_defaults.py",
      [
        "DefaultsTests",
        "test_server_error"
      ]
    ]
  ],
  "test_bad_request": [
    [
      "tests/view_tests/tests/test_defaults.py",
      [
        "DefaultsTests",
        "test_bad_request"
      ]
    ]
  ],
  "test_custom_templates": [
    [
      "tests/view_tests/tests/test_defaults.py",
      [
        "DefaultsTests",
        "test_custom_templates"
      ]
    ]
  ],
  "test_get_absolute_url_attributes": [
    [
      "tests/view_tests/tests/test_defaults.py",
      [
        "DefaultsTests",
        "test_get_absolute_url_attributes"
      ]
    ]
  ],
  "test_custom_templates_wrong": [
    [
      "tests/view_tests/tests/test_defaults.py",
      [
        "DefaultsTests",
        "test_custom_templates_wrong"
      ]
    ]
  ],
  "test_error_pages": [
    [
      "tests/view_tests/tests/test_defaults.py",
      [
        "DefaultsTests",
        "test_error_pages"
      ]
    ]
  ],
  "_get_inactive_language_code": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "SetLanguageTests",
        "_get_inactive_language_code"
      ]
    ]
  ],
  "test_setlang": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "SetLanguageTests",
        "test_setlang"
      ]
    ]
  ],
  "test_setlang_unsafe_next": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "SetLanguageTests",
        "test_setlang_unsafe_next"
      ]
    ]
  ],
  "test_setlang_http_next": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "SetLanguageTests",
        "test_setlang_http_next"
      ]
    ]
  ],
  "test_setlang_redirect_to_referer": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "SetLanguageTests",
        "test_setlang_redirect_to_referer"
      ]
    ]
  ],
  "test_setlang_default_redirect": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "SetLanguageTests",
        "test_setlang_default_redirect"
      ]
    ]
  ],
  "test_setlang_performs_redirect_for_ajax_if_explicitly_requested": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "SetLanguageTests",
        "test_setlang_performs_redirect_for_ajax_if_explicitly_requested"
      ]
    ]
  ],
  "test_setlang_doesnt_perform_a_redirect_to_referer_for_ajax": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "SetLanguageTests",
        "test_setlang_doesnt_perform_a_redirect_to_referer_for_ajax"
      ]
    ]
  ],
  "test_setlang_doesnt_perform_a_default_redirect_for_ajax": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "SetLanguageTests",
        "test_setlang_doesnt_perform_a_default_redirect_for_ajax"
      ]
    ]
  ],
  "test_setlang_unsafe_next_for_ajax": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "SetLanguageTests",
        "test_setlang_unsafe_next_for_ajax"
      ]
    ]
  ],
  "test_session_language_deprecation": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "SetLanguageTests",
        "test_session_language_deprecation"
      ]
    ]
  ],
  "test_setlang_reversal": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "SetLanguageTests",
        "test_setlang_reversal"
      ]
    ]
  ],
  "test_setlang_cookie": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "SetLanguageTests",
        "test_setlang_cookie"
      ]
    ]
  ],
  "test_setlang_decodes_http_referer_url": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "SetLanguageTests",
        "test_setlang_decodes_http_referer_url"
      ]
    ]
  ],
  "test_lang_from_translated_i18n_pattern": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "SetLanguageTests",
        "test_lang_from_translated_i18n_pattern"
      ]
    ]
  ],
  "test_get_formats": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "I18NViewTests",
        "test_get_formats"
      ]
    ]
  ],
  "test_jsi18n": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "I18NViewTests",
        "test_jsi18n"
      ]
    ]
  ],
  "test_jsi18n_USE_I18N_False": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "I18NViewTests",
        "test_jsi18n_USE_I18N_False"
      ]
    ]
  ],
  "test_jsoni18n": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "I18NViewTests",
        "test_jsoni18n"
      ]
    ]
  ],
  "test_jsi18n_with_missing_en_files": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "I18NViewTests",
        "test_jsi18n_with_missing_en_files"
      ]
    ]
  ],
  "test_jsoni18n_with_missing_en_files": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "I18NViewTests",
        "test_jsoni18n_with_missing_en_files"
      ]
    ]
  ],
  "test_jsi18n_fallback_language": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "I18NViewTests",
        "test_jsi18n_fallback_language"
      ]
    ]
  ],
  "test_i18n_fallback_language_plural": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "I18NViewTests",
        "test_i18n_fallback_language_plural"
      ]
    ]
  ],
  "test_i18n_english_variant": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "I18NViewTests",
        "test_i18n_english_variant"
      ]
    ]
  ],
  "test_non_english_default_english_userpref": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "I18NViewTests",
        "test_non_english_default_english_userpref"
      ]
    ]
  ],
  "test_non_BMP_char": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "I18NViewTests",
        "test_non_BMP_char"
      ]
    ]
  ],
  "test_i18n_language_english_default": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "I18NViewTests",
        "test_i18n_language_english_default"
      ]
    ]
  ],
  "test_i18n_different_non_english_languages": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "I18NViewTests",
        "test_i18n_different_non_english_languages"
      ]
    ]
  ],
  "test_i18n_with_locale_paths": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "I18NViewTests",
        "test_i18n_with_locale_paths"
      ]
    ]
  ],
  "test_i18n_unknown_package_error": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "I18NViewTests",
        "test_i18n_unknown_package_error"
      ]
    ]
  ],
  "test_javascript_gettext": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "I18nSeleniumTests",
        "test_javascript_gettext"
      ]
    ]
  ],
  "test_multiple_catalogs": [
    [
      "tests/view_tests/tests/test_i18n.py",
      [
        "I18nSeleniumTests",
        "test_multiple_catalogs"
      ]
    ]
  ],
  "test_json_response": [
    [
      "tests/view_tests/tests/test_json.py",
      [
        "JsonResponseTests",
        "test_json_response"
      ]
    ]
  ],
  "test_nonascii_redirect": [
    [
      "tests/view_tests/tests/test_specials.py",
      [
        "URLHandling",
        "test_nonascii_redirect"
      ]
    ]
  ],
  "test_permanent_nonascii_redirect": [
    [
      "tests/view_tests/tests/test_specials.py",
      [
        "URLHandling",
        "test_permanent_nonascii_redirect"
      ]
    ]
  ],
  "test_serve": [
    [
      "tests/view_tests/tests/test_static.py",
      [
        "StaticTests",
        "test_serve"
      ]
    ]
  ],
  "test_chunked": [
    [
      "tests/view_tests/tests/test_static.py",
      [
        "StaticTests",
        "test_chunked"
      ]
    ]
  ],
  "test_unknown_mime_type": [
    [
      "tests/view_tests/tests/test_static.py",
      [
        "StaticTests",
        "test_unknown_mime_type"
      ]
    ]
  ],
  "test_copes_with_empty_path_component": [
    [
      "tests/view_tests/tests/test_static.py",
      [
        "StaticTests",
        "test_copes_with_empty_path_component"
      ]
    ]
  ],
  "test_is_modified_since": [
    [
      "tests/view_tests/tests/test_static.py",
      [
        "StaticTests",
        "test_is_modified_since"
      ]
    ]
  ],
  "test_not_modified_since": [
    [
      "tests/view_tests/tests/test_static.py",
      [
        "StaticTests",
        "test_not_modified_since"
      ]
    ]
  ],
  "test_invalid_if_modified_since": [
    [
      "tests/view_tests/tests/test_static.py",
      [
        "StaticTests",
        "test_invalid_if_modified_since"
      ]
    ]
  ],
  "test_invalid_if_modified_since2": [
    [
      "tests/view_tests/tests/test_static.py",
      [
        "StaticTests",
        "test_invalid_if_modified_since2"
      ]
    ]
  ],
  "test_index_subdir": [
    [
      "tests/view_tests/tests/test_static.py",
      [
        "StaticTests",
        "test_index_subdir"
      ]
    ]
  ],
  "test_index_custom_template": [
    [
      "tests/view_tests/tests/test_static.py",
      [
        "StaticTests",
        "test_index_custom_template"
      ]
    ]
  ],
  "test_debug_off": [
    [
      "tests/view_tests/tests/test_static.py",
      [
        "StaticHelperTest",
        "test_debug_off"
      ]
    ]
  ],
  "test_empty_prefix": [
    [
      "tests/view_tests/tests/test_static.py",
      [
        "StaticHelperTest",
        "test_empty_prefix"
      ]
    ]
  ],
  "test_special_prefix": [
    [
      "tests/view_tests/tests/test_static.py",
      [
        "StaticHelperTest",
        "test_special_prefix"
      ]
    ]
  ],
  "test_was_modified_since_fp": [
    [
      "tests/view_tests/tests/test_static.py",
      [
        "StaticUtilsTests",
        "test_was_modified_since_fp"
      ]
    ]
  ],
  "index_page": [
    [
      "tests/view_tests/views.py",
      [
        "index_page"
      ]
    ]
  ],
  "with_parameter": [
    [
      "tests/view_tests/views.py",
      [
        "with_parameter"
      ]
    ]
  ],
  "raises": [
    [
      "tests/view_tests/views.py",
      [
        "raises"
      ]
    ]
  ],
  "raises500": [
    [
      "tests/view_tests/views.py",
      [
        "raises500"
      ]
    ]
  ],
  "raises400": [
    [
      "tests/view_tests/views.py",
      [
        "raises400"
      ]
    ]
  ],
  "raises403": [
    [
      "tests/view_tests/views.py",
      [
        "raises403"
      ]
    ]
  ],
  "raises404": [
    [
      "tests/view_tests/views.py",
      [
        "raises404"
      ]
    ]
  ],
  "technical404": [
    [
      "tests/view_tests/views.py",
      [
        "technical404"
      ]
    ]
  ],
  "template_exception": [
    [
      "tests/view_tests/views.py",
      [
        "template_exception"
      ]
    ]
  ],
  "jsi18n": [
    [
      "tests/view_tests/views.py",
      [
        "jsi18n"
      ]
    ]
  ],
  "jsi18n_multi_catalogs": [
    [
      "tests/view_tests/views.py",
      [
        "jsi18n_multi_catalogs"
      ]
    ]
  ],
  "raises_template_does_not_exist": [
    [
      "tests/view_tests/views.py",
      [
        "raises_template_does_not_exist"
      ]
    ]
  ],
  "render_no_template": [
    [
      "tests/view_tests/views.py",
      [
        "render_no_template"
      ]
    ]
  ],
  "send_log": [
    [
      "tests/view_tests/views.py",
      [
        "send_log"
      ]
    ]
  ],
  "non_sensitive_view": [
    [
      "tests/view_tests/views.py",
      [
        "non_sensitive_view"
      ]
    ]
  ],
  "sensitive_view": [
    [
      "tests/view_tests/views.py",
      [
        "sensitive_view"
      ]
    ]
  ],
  "paranoid_view": [
    [
      "tests/view_tests/views.py",
      [
        "paranoid_view"
      ]
    ]
  ],
  "sensitive_args_function_caller": [
    [
      "tests/view_tests/views.py",
      [
        "sensitive_args_function_caller"
      ]
    ]
  ],
  "sensitive_args_function": [
    [
      "tests/view_tests/views.py",
      [
        "sensitive_args_function"
      ]
    ]
  ],
  "sensitive_kwargs_function_caller": [
    [
      "tests/view_tests/views.py",
      [
        "sensitive_kwargs_function_caller"
      ]
    ]
  ],
  "sensitive_kwargs_function": [
    [
      "tests/view_tests/views.py",
      [
        "sensitive_kwargs_function"
      ]
    ]
  ],
  "custom_exception_reporter_filter_view": [
    [
      "tests/view_tests/views.py",
      [
        "custom_exception_reporter_filter_view"
      ]
    ]
  ],
  "custom_reporter_class_view": [
    [
      "tests/view_tests/views.py",
      [
        "custom_reporter_class_view"
      ]
    ]
  ],
  "sensitive_method_view": [
    [
      "tests/view_tests/views.py",
      [
        "sensitive_method_view"
      ]
    ]
  ],
  "multivalue_dict_key_error": [
    [
      "tests/view_tests/views.py",
      [
        "multivalue_dict_key_error"
      ]
    ]
  ],
  "json_response_view": [
    [
      "tests/view_tests/views.py",
      [
        "json_response_view"
      ]
    ]
  ],
  "start_response": [
    [
      "tests/wsgi/tests.py",
      [
        "WSGITest",
        "test_get_wsgi_application",
        "start_response"
      ]
    ]
  ],
  "test_get_wsgi_application": [
    [
      "tests/wsgi/tests.py",
      [
        "WSGITest",
        "test_get_wsgi_application"
      ]
    ]
  ],
  "test_file_wrapper": [
    [
      "tests/wsgi/tests.py",
      [
        "WSGITest",
        "test_file_wrapper"
      ]
    ]
  ],
  "test_bad_module": [
    [
      "tests/wsgi/tests.py",
      [
        "GetInternalWSGIApplicationTest",
        "test_bad_module"
      ]
    ]
  ],
  "test_bad_name": [
    [
      "tests/wsgi/tests.py",
      [
        "GetInternalWSGIApplicationTest",
        "test_bad_name"
      ]
    ]
  ],
  "helloworld": [
    [
      "tests/wsgi/urls.py",
      [
        "helloworld"
      ]
    ]
  ]
}