{
  "_check_dependencies": [
    [
      "doc/conf.py",
      [
        "_check_dependencies"
      ]
    ]
  ],
  "matplotlib_reduced_latex_scraper": [
    [
      "doc/conf.py",
      [
        "matplotlib_reduced_latex_scraper"
      ]
    ]
  ],
  "css_tag_with_cache_busting": [
    [
      "doc/conf.py",
      [
        "add_html_cache_busting",
        "css_tag_with_cache_busting"
      ]
    ]
  ],
  "js_tag_with_cache_busting": [
    [
      "doc/conf.py",
      [
        "add_html_cache_busting",
        "js_tag_with_cache_busting"
      ]
    ]
  ],
  "add_html_cache_busting": [
    [
      "doc/conf.py",
      [
        "add_html_cache_busting"
      ]
    ]
  ],
  "linkcode_resolve": [
    [
      "doc/conf.py",
      [
        "if_link_github_",
        "linkcode_resolve"
      ]
    ]
  ],
  "setup": [
    [
      "doc/conf.py",
      [
        "setup"
      ]
    ],
    [
      "doc/sphinxext/custom_roles.py",
      [
        "setup"
      ]
    ],
    [
      "doc/sphinxext/github.py",
      [
        "setup"
      ]
    ],
    [
      "doc/sphinxext/math_symbol_table.py",
      [
        "setup"
      ]
    ],
    [
      "doc/sphinxext/missing_references.py",
      [
        "setup"
      ]
    ],
    [
      "doc/sphinxext/mock_gui_toolkits.py",
      [
        "setup"
      ]
    ],
    [
      "doc/sphinxext/redirect_from.py",
      [
        "setup"
      ]
    ],
    [
      "doc/sphinxext/skip_deprecated.py",
      [
        "setup"
      ]
    ],
    [
      "examples/ticks/tick-formatters.py",
      [
        "setup"
      ]
    ],
    [
      "examples/ticks/tick-locators.py",
      [
        "setup"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "AbstractMovieWriter",
        "setup"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "MovieWriter",
        "setup"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "FileMovieWriter",
        "setup"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "PillowWriter",
        "setup"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "HTMLWriter",
        "setup"
      ]
    ],
    [
      "lib/matplotlib/backends/qt_editor/_formlayout.py",
      [
        "FormWidget",
        "setup"
      ]
    ],
    [
      "lib/matplotlib/backends/qt_editor/_formlayout.py",
      [
        "FormComboWidget",
        "setup"
      ]
    ],
    [
      "lib/matplotlib/backends/qt_editor/_formlayout.py",
      [
        "FormTabWidget",
        "setup"
      ]
    ],
    [
      "lib/matplotlib/sphinxext/mathmpl.py",
      [
        "setup"
      ]
    ],
    [
      "lib/matplotlib/sphinxext/plot_directive.py",
      [
        "setup"
      ]
    ],
    [
      "lib/matplotlib/testing/__init__.py",
      [
        "setup"
      ]
    ],
    [
      "lib/matplotlib/tests/test_animation.py",
      [
        "NullMovieWriter",
        "setup"
      ]
    ],
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "Test_boxplot_stats",
        "setup"
      ]
    ],
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "Test_callback_registry",
        "setup"
      ]
    ],
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestDetrend",
        "setup"
      ]
    ]
  ],
  "to_query_string": [
    [
      "doc/sphinxext/custom_roles.py",
      [
        "QueryReference",
        "to_query_string"
      ]
    ]
  ],
  "visit_query_reference_node": [
    [
      "doc/sphinxext/custom_roles.py",
      [
        "visit_query_reference_node"
      ]
    ]
  ],
  "depart_query_reference_node": [
    [
      "doc/sphinxext/custom_roles.py",
      [
        "depart_query_reference_node"
      ]
    ]
  ],
  "rcparam_role": [
    [
      "doc/sphinxext/custom_roles.py",
      [
        "rcparam_role"
      ]
    ]
  ],
  "__call__": [
    [
      "doc/sphinxext/gallery_order.py",
      [
        "MplExplicitOrder",
        "__call__"
      ]
    ],
    [
      "doc/sphinxext/gallery_order.py",
      [
        "MplExplicitSubOrder",
        "__call__"
      ]
    ],
    [
      "examples/animation/bayes_update.py",
      [
        "UpdateDist",
        "__call__"
      ]
    ],
    [
      "examples/event_handling/viewlims.py",
      [
        "UpdatingRect",
        "__call__"
      ]
    ],
    [
      "examples/images_contours_and_fields/colormap_normalizations.py",
      [
        "MidpointNormalize",
        "__call__"
      ]
    ],
    [
      "examples/misc/custom_projection.py",
      [
        "GeoAxes",
        "ThetaFormatter",
        "__call__"
      ]
    ],
    [
      "examples/misc/demo_agg_filter.py",
      [
        "BaseFilter",
        "__call__"
      ]
    ],
    [
      "examples/misc/demo_agg_filter.py",
      [
        "GrowFilter",
        "__call__"
      ]
    ],
    [
      "examples/misc/multiprocess_sgskip.py",
      [
        "ProcessPlotter",
        "__call__"
      ]
    ],
    [
      "examples/ticks/date_index_formatter.py",
      [
        "MyFormatter",
        "__call__"
      ]
    ],
    [
      "examples/units/basic_units.py",
      [
        "PassThroughProxy",
        "__call__"
      ]
    ],
    [
      "examples/units/basic_units.py",
      [
        "ConvertArgsProxy",
        "__call__"
      ]
    ],
    [
      "examples/units/basic_units.py",
      [
        "ConvertReturnProxy",
        "__call__"
      ]
    ],
    [
      "examples/units/basic_units.py",
      [
        "ConvertAllProxy",
        "__call__"
      ]
    ],
    [
      "examples/units/basic_units.py",
      [
        "BasicUnit",
        "__call__"
      ]
    ],
    [
      "examples/units/basic_units.py",
      [
        "UnitResolver",
        "__call__"
      ]
    ],
    [
      "examples/userdemo/custom_boxstyle01.py",
      [
        "MyStyle",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/_docstring.py",
      [
        "Substitution",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/_docstring.py",
      [
        "_ArtistPropertiesSubstitution",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_TransformedBoundsLocator",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_process_plot_var_args",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "ShowBase",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/bezier.py",
      [
        "BezierSegment",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/blocking_input.py",
      [
        "BlockingInput",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/blocking_input.py",
      [
        "BlockingMouseInput",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/blocking_input.py",
      [
        "BlockingContourLabeler",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/blocking_input.py",
      [
        "BlockingKeyMouseInput",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/category.py",
      [
        "StrCategoryLocator",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/category.py",
      [
        "StrCategoryFormatter",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_StrongRef",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "Stack",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/cm.py",
      [
        "ColormapRegistry",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/colorbar.py",
      [
        "_ColorbarAxesLocator",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "Colormap",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "Normalize",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "TwoSlopeNorm",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "CenteredNorm",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "_make_norm_from_scale",
        "Norm",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "PowerNorm",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "BoundaryNorm",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "NoNorm",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/dates.py",
      [
        "DateFormatter",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/dates.py",
      [
        "ConciseDateFormatter",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/dates.py",
      [
        "AutoDateFormatter",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/dates.py",
      [
        "RRuleLocator",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/dates.py",
      [
        "AutoDateLocator",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/dates.py",
      [
        "MicrosecondLocator",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "BoxStyle",
        "Square",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "BoxStyle",
        "Circle",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "BoxStyle",
        "LArrow",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "BoxStyle",
        "RArrow",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "BoxStyle",
        "DArrow",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "BoxStyle",
        "Round",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "BoxStyle",
        "Round4",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "BoxStyle",
        "Sawtooth",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "BoxStyle",
        "Roundtooth",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "ConnectionStyle",
        "_Base",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "ArrowStyle",
        "_Base",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "GeoAxes",
        "ThetaFormatter",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "ThetaFormatter",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "ThetaLocator",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "RadialLocator",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/rcsetup.py",
      [
        "ValidateInStrings",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/testing/compare.py",
      [
        "_GSConverter",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/testing/compare.py",
      [
        "_SVGConverter",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/testing/compare.py",
      [
        "_SVGWithMatplotlibFontsConverter",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/UnitDblFormatter.py",
      [
        "UnitDblFormatter",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/tests/test_agg.py",
      [
        "test_agg_filter",
        "BaseFilter",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "OffsetFrom",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "Formatter",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "NullFormatter",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "FixedFormatter",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "FuncFormatter",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "FormatStrFormatter",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "StrMethodFormatter",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "ScalarFormatter",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "LogFormatter",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "LogFormatterMathtext",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "LogitFormatter",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "EngFormatter",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "PercentFormatter",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "Locator",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "IndexLocator",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "FixedLocator",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "NullLocator",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "LinearLocator",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "MultipleLocator",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "MaxNLocator",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "LogLocator",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "SymmetricalLogLocator",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "AsinhLocator",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "AutoMinorLocator",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/tri/trifinder.py",
      [
        "TrapezoidMapTriFinder",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "LinearTriInterpolator",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "CubicTriInterpolator",
        "__call__"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "LockDraw",
        "__call__"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "AxesLocator",
        "__call__"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_size.py",
      [
        "GetExtentHelper",
        "__call__"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/inset_locator.py",
      [
        "InsetPosition",
        "__call__"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/inset_locator.py",
      [
        "AnchoredLocatorBase",
        "__call__"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/mpl_axes.py",
      [
        "SimpleChainedObjects",
        "__call__"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/mpl_axes.py",
      [
        "Axes",
        "AxisDict",
        "__call__"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/angle_helper.py",
      [
        "LocatorHMS",
        "__call__"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/angle_helper.py",
      [
        "LocatorHM",
        "__call__"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/angle_helper.py",
      [
        "LocatorH",
        "__call__"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/angle_helper.py",
      [
        "LocatorDMS",
        "__call__"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/angle_helper.py",
      [
        "LocatorDM",
        "__call__"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/angle_helper.py",
      [
        "LocatorD",
        "__call__"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/angle_helper.py",
      [
        "FormatterDMS",
        "__call__"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/angle_helper.py",
      [
        "FormatterHMS",
        "__call__"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/angle_helper.py",
      [
        "ExtremeFinderCycle",
        "__call__"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axisline_style.py",
      [
        "AxislineStyle",
        "_Base",
        "__call__"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "Axes",
        "__call__"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/floating_axes.py",
      [
        "ExtremeFinderFixed",
        "__call__"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/grid_finder.py",
      [
        "ExtremeFinderSimple",
        "__call__"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/grid_finder.py",
      [
        "MaxNLocator",
        "__call__"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/grid_finder.py",
      [
        "FixedLocator",
        "__call__"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/grid_finder.py",
      [
        "FormatterPrettyPrint",
        "__call__"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/grid_finder.py",
      [
        "DictFormatter",
        "__call__"
      ]
    ],
    [
      "tools/memleak.py",
      [
        "MemleakTest",
        "__call__"
      ]
    ],
    [
      "tutorials/colors/colormapnorms.py",
      [
        "MidpointNormalize",
        "__call__"
      ]
    ]
  ],
  "make_link_node": [
    [
      "doc/sphinxext/github.py",
      [
        "make_link_node"
      ]
    ]
  ],
  "ghissue_role": [
    [
      "doc/sphinxext/github.py",
      [
        "ghissue_role"
      ]
    ]
  ],
  "ghuser_role": [
    [
      "doc/sphinxext/github.py",
      [
        "ghuser_role"
      ]
    ]
  ],
  "ghcommit_role": [
    [
      "doc/sphinxext/github.py",
      [
        "ghcommit_role"
      ]
    ]
  ],
  "render_symbol": [
    [
      "doc/sphinxext/math_symbol_table.py",
      [
        "run",
        "render_symbol"
      ]
    ]
  ],
  "run": [
    [
      "doc/sphinxext/math_symbol_table.py",
      [
        "run"
      ]
    ],
    [
      "doc/sphinxext/math_symbol_table.py",
      [
        "MathSymbolTableDirective",
        "run"
      ]
    ],
    [
      "doc/sphinxext/redirect_from.py",
      [
        "RedirectFrom",
        "run"
      ]
    ],
    [
      "examples/animation/animate_decay.py",
      [
        "run"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg.py",
      [
        "ServerThread",
        "run"
      ]
    ],
    [
      "lib/matplotlib/sphinxext/mathmpl.py",
      [
        "MathDirective",
        "run"
      ]
    ],
    [
      "lib/matplotlib/sphinxext/plot_directive.py",
      [
        "PlotDirective",
        "run"
      ]
    ],
    [
      "lib/matplotlib/sphinxext/plot_directive.py",
      [
        "run"
      ]
    ],
    [
      "setup.py",
      [
        "BuildPy",
        "run"
      ]
    ],
    [
      "tools/visualize_tests.py",
      [
        "run"
      ]
    ]
  ],
  "_record_reference": [
    [
      "doc/sphinxext/missing_references.py",
      [
        "MissingReferenceFilter",
        "_record_reference"
      ]
    ]
  ],
  "filter": [
    [
      "doc/sphinxext/missing_references.py",
      [
        "MissingReferenceFilter",
        "filter"
      ]
    ]
  ],
  "record_missing_reference": [
    [
      "doc/sphinxext/missing_references.py",
      [
        "record_missing_reference"
      ]
    ]
  ],
  "record_missing_reference_handler": [
    [
      "doc/sphinxext/missing_references.py",
      [
        "record_missing_reference_handler"
      ]
    ]
  ],
  "get_location": [
    [
      "doc/sphinxext/missing_references.py",
      [
        "get_location"
      ]
    ]
  ],
  "_truncate_location": [
    [
      "doc/sphinxext/missing_references.py",
      [
        "_truncate_location"
      ]
    ]
  ],
  "_warn_unused_missing_references": [
    [
      "doc/sphinxext/missing_references.py",
      [
        "_warn_unused_missing_references"
      ]
    ]
  ],
  "save_missing_references_handler": [
    [
      "doc/sphinxext/missing_references.py",
      [
        "save_missing_references_handler"
      ]
    ]
  ],
  "_write_missing_references_json": [
    [
      "doc/sphinxext/missing_references.py",
      [
        "_write_missing_references_json"
      ]
    ]
  ],
  "_read_missing_references_json": [
    [
      "doc/sphinxext/missing_references.py",
      [
        "_read_missing_references_json"
      ]
    ]
  ],
  "prepare_missing_references_handler": [
    [
      "doc/sphinxext/missing_references.py",
      [
        "prepare_missing_references_handler"
      ]
    ]
  ],
  "redirects": [
    [
      "doc/sphinxext/redirect_from.py",
      [
        "RedirectFromDomain",
        "redirects"
      ]
    ]
  ],
  "clear_doc": [
    [
      "doc/sphinxext/redirect_from.py",
      [
        "RedirectFromDomain",
        "clear_doc"
      ]
    ]
  ],
  "merge_domaindata": [
    [
      "doc/sphinxext/redirect_from.py",
      [
        "RedirectFromDomain",
        "merge_domaindata"
      ]
    ]
  ],
  "_generate_redirects": [
    [
      "doc/sphinxext/redirect_from.py",
      [
        "_generate_redirects"
      ]
    ]
  ],
  "skip_deprecated": [
    [
      "doc/sphinxext/skip_deprecated.py",
      [
        "skip_deprecated"
      ]
    ]
  ],
  "check_duplicates": [
    [
      "doc/users/generate_credits.py",
      [
        "check_duplicates"
      ]
    ]
  ],
  "generate_credits": [
    [
      "doc/users/generate_credits.py",
      [
        "generate_credits"
      ]
    ]
  ],
  "data_gen": [
    [
      "examples/animation/animate_decay.py",
      [
        "data_gen"
      ]
    ]
  ],
  "init": [
    [
      "examples/animation/animate_decay.py",
      [
        "init"
      ]
    ],
    [
      "lib/matplotlib/tests/test_animation.py",
      [
        "test_funcanimation_cache_frame_data",
        "init"
      ]
    ],
    [
      "lib/matplotlib/tests/test_animation.py",
      [
        "test_animation_frame",
        "init"
      ]
    ]
  ],
  "prepare_animation": [
    [
      "examples/animation/animated_histogram.py",
      [
        "prepare_animation"
      ]
    ]
  ],
  "beta_pdf": [
    [
      "examples/animation/bayes_update.py",
      [
        "beta_pdf"
      ]
    ]
  ],
  "derivs": [
    [
      "examples/animation/double_pendulum.py",
      [
        "derivs"
      ]
    ]
  ],
  "animate": [
    [
      "examples/animation/double_pendulum.py",
      [
        "animate"
      ]
    ],
    [
      "examples/animation/multiple_axes.py",
      [
        "animate"
      ]
    ],
    [
      "examples/animation/simple_anim.py",
      [
        "animate"
      ]
    ],
    [
      "lib/matplotlib/tests/test_animation.py",
      [
        "test_funcanimation_cache_frame_data",
        "animate"
      ]
    ],
    [
      "lib/matplotlib/tests/test_animation.py",
      [
        "test_draw_frame",
        "animate"
      ]
    ],
    [
      "lib/matplotlib/tests/test_animation.py",
      [
        "test_animation_frame",
        "animate"
      ]
    ]
  ],
  "f": [
    [
      "examples/animation/dynamic_image.py",
      [
        "f"
      ]
    ],
    [
      "examples/event_handling/ginput_manual_clabel_sgskip.py",
      [
        "f"
      ]
    ],
    [
      "examples/mplot3d/mixed_subplots.py",
      [
        "f"
      ]
    ],
    [
      "examples/pyplots/pyplot_two_subplots.py",
      [
        "f"
      ]
    ],
    [
      "examples/subplots_axes_and_figures/axes_margins.py",
      [
        "f"
      ]
    ],
    [
      "examples/widgets/slider_demo.py",
      [
        "f"
      ]
    ],
    [
      "lib/matplotlib/rcsetup.py",
      [
        "_listify_validator",
        "f"
      ]
    ],
    [
      "tutorials/introductory/pyplot.py",
      [
        "f"
      ]
    ]
  ],
  "toggle_pause": [
    [
      "examples/animation/pause_resume.py",
      [
        "PauseAnimation",
        "toggle_pause"
      ]
    ]
  ],
  "update": [
    [
      "examples/animation/pause_resume.py",
      [
        "PauseAnimation",
        "update"
      ]
    ],
    [
      "examples/animation/rain.py",
      [
        "update"
      ]
    ],
    [
      "examples/animation/strip_chart.py",
      [
        "Scope",
        "update"
      ]
    ],
    [
      "examples/animation/unchained.py",
      [
        "update"
      ]
    ],
    [
      "examples/event_handling/data_browser.py",
      [
        "PointBrowser",
        "update"
      ]
    ],
    [
      "examples/event_handling/image_slices_viewer.py",
      [
        "IndexTracker",
        "update"
      ]
    ],
    [
      "examples/event_handling/pong_sgskip.py",
      [
        "Puck",
        "update"
      ]
    ],
    [
      "examples/event_handling/resample.py",
      [
        "DataDisplayDownsampler",
        "update"
      ]
    ],
    [
      "examples/images_contours_and_fields/multi_image.py",
      [
        "update"
      ]
    ],
    [
      "examples/user_interfaces/pylab_with_gtk3_sgskip.py",
      [
        "update"
      ]
    ],
    [
      "examples/user_interfaces/pylab_with_gtk4_sgskip.py",
      [
        "update"
      ]
    ],
    [
      "examples/widgets/range_slider.py",
      [
        "update"
      ]
    ],
    [
      "examples/widgets/slider_demo.py",
      [
        "update"
      ]
    ],
    [
      "examples/widgets/slider_snap_demo.py",
      [
        "update"
      ]
    ],
    [
      "lib/matplotlib/_docstring.py",
      [
        "Substitution",
        "update"
      ]
    ],
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "update"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "NavigationToolbar2",
        "update"
      ]
    ],
    [
      "lib/matplotlib/category.py",
      [
        "UnitData",
        "update"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "SubplotParams",
        "update"
      ]
    ],
    [
      "lib/matplotlib/gridspec.py",
      [
        "GridSpec",
        "update"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "update"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "update"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/grid_finder.py",
      [
        "GridFinder",
        "update"
      ]
    ],
    [
      "tutorials/advanced/blitting.py",
      [
        "BlitManager",
        "update"
      ]
    ]
  ],
  "random_walk": [
    [
      "examples/animation/random_walk.py",
      [
        "random_walk"
      ]
    ]
  ],
  "update_lines": [
    [
      "examples/animation/random_walk.py",
      [
        "update_lines"
      ]
    ]
  ],
  "emitter": [
    [
      "examples/animation/strip_chart.py",
      [
        "emitter"
      ]
    ]
  ],
  "get_demo_image": [
    [
      "examples/axes_grid1/demo_axes_divider.py",
      [
        "get_demo_image"
      ]
    ],
    [
      "examples/axes_grid1/demo_axes_grid.py",
      [
        "get_demo_image"
      ]
    ],
    [
      "examples/axes_grid1/demo_edge_colorbar.py",
      [
        "get_demo_image"
      ]
    ],
    [
      "examples/axes_grid1/inset_locator_demo2.py",
      [
        "get_demo_image"
      ]
    ],
    [
      "examples/subplots_axes_and_figures/zoom_inset_axes.py",
      [
        "get_demo_image"
      ]
    ]
  ],
  "demo_simple_image": [
    [
      "examples/axes_grid1/demo_axes_divider.py",
      [
        "demo_simple_image"
      ]
    ]
  ],
  "demo_locatable_axes_hard": [
    [
      "examples/axes_grid1/demo_axes_divider.py",
      [
        "demo_locatable_axes_hard"
      ]
    ]
  ],
  "demo_locatable_axes_easy": [
    [
      "examples/axes_grid1/demo_axes_divider.py",
      [
        "demo_locatable_axes_easy"
      ]
    ]
  ],
  "demo_images_side_by_side": [
    [
      "examples/axes_grid1/demo_axes_divider.py",
      [
        "demo_images_side_by_side"
      ]
    ]
  ],
  "demo": [
    [
      "examples/axes_grid1/demo_axes_divider.py",
      [
        "demo"
      ]
    ],
    [
      "examples/user_interfaces/embedding_in_wx5_sgskip.py",
      [
        "demo"
      ]
    ],
    [
      "lib/matplotlib/_enums.py",
      [
        "JoinStyle",
        "demo"
      ]
    ],
    [
      "lib/matplotlib/_enums.py",
      [
        "CapStyle",
        "demo"
      ]
    ],
    [
      "tutorials/colors/colors.py",
      [
        "demo"
      ]
    ]
  ],
  "demo_simple_grid": [
    [
      "examples/axes_grid1/demo_axes_grid.py",
      [
        "demo_simple_grid"
      ]
    ]
  ],
  "demo_grid_with_single_cbar": [
    [
      "examples/axes_grid1/demo_axes_grid.py",
      [
        "demo_grid_with_single_cbar"
      ]
    ]
  ],
  "demo_grid_with_each_cbar": [
    [
      "examples/axes_grid1/demo_axes_grid.py",
      [
        "demo_grid_with_each_cbar"
      ]
    ]
  ],
  "demo_grid_with_each_cbar_labelled": [
    [
      "examples/axes_grid1/demo_axes_grid.py",
      [
        "demo_grid_with_each_cbar_labelled"
      ]
    ]
  ],
  "add_inner_title": [
    [
      "examples/axes_grid1/demo_axes_grid2.py",
      [
        "add_inner_title"
      ]
    ]
  ],
  "make_heights_equal": [
    [
      "examples/axes_grid1/demo_axes_hbox_divider.py",
      [
        "make_heights_equal"
      ]
    ]
  ],
  "get_rgb": [
    [
      "examples/axes_grid1/demo_axes_rgb.py",
      [
        "get_rgb"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "get_rgb"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "GraphicsContextCairo",
        "get_rgb"
      ]
    ]
  ],
  "make_cube": [
    [
      "examples/axes_grid1/demo_axes_rgb.py",
      [
        "make_cube"
      ]
    ]
  ],
  "demo_rgb1": [
    [
      "examples/axes_grid1/demo_axes_rgb.py",
      [
        "demo_rgb1"
      ]
    ]
  ],
  "demo_rgb2": [
    [
      "examples/axes_grid1/demo_axes_rgb.py",
      [
        "demo_rgb2"
      ]
    ]
  ],
  "demo_bottom_cbar": [
    [
      "examples/axes_grid1/demo_edge_colorbar.py",
      [
        "demo_bottom_cbar"
      ]
    ]
  ],
  "demo_right_cbar": [
    [
      "examples/axes_grid1/demo_edge_colorbar.py",
      [
        "demo_right_cbar"
      ]
    ]
  ],
  "add_sizebar": [
    [
      "examples/axes_grid1/inset_locator_demo2.py",
      [
        "add_sizebar"
      ]
    ]
  ],
  "draw_text": [
    [
      "examples/axes_grid1/simple_anchored_artists.py",
      [
        "draw_text"
      ]
    ],
    [
      "examples/misc/anchored_artists.py",
      [
        "draw_text"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "draw_text"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "RendererAgg",
        "draw_text"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "RendererCairo",
        "draw_text"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "RendererPdf",
        "draw_text"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "RendererPgf",
        "draw_text"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "RendererPS",
        "draw_text"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "draw_text"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_template.py",
      [
        "RendererTemplate",
        "draw_text"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "RendererWx",
        "draw_text"
      ]
    ]
  ],
  "draw_circle": [
    [
      "examples/axes_grid1/simple_anchored_artists.py",
      [
        "draw_circle"
      ]
    ]
  ],
  "draw_ellipse": [
    [
      "examples/axes_grid1/simple_anchored_artists.py",
      [
        "draw_ellipse"
      ]
    ],
    [
      "examples/misc/anchored_artists.py",
      [
        "draw_ellipse"
      ]
    ]
  ],
  "draw_sizebar": [
    [
      "examples/axes_grid1/simple_anchored_artists.py",
      [
        "draw_sizebar"
      ]
    ],
    [
      "examples/misc/anchored_artists.py",
      [
        "draw_sizebar"
      ]
    ]
  ],
  "label_axes": [
    [
      "examples/axes_grid1/simple_axes_divider1.py",
      [
        "label_axes"
      ]
    ]
  ],
  "setup_axes": [
    [
      "examples/axisartist/axis_direction.py",
      [
        "setup_axes"
      ]
    ],
    [
      "examples/axisartist/demo_axis_direction.py",
      [
        "setup_axes"
      ]
    ],
    [
      "examples/axisartist/demo_ticklabel_alignment.py",
      [
        "setup_axes"
      ]
    ],
    [
      "examples/axisartist/demo_ticklabel_direction.py",
      [
        "setup_axes"
      ]
    ],
    [
      "examples/axisartist/simple_axis_direction03.py",
      [
        "setup_axes"
      ]
    ],
    [
      "examples/axisartist/simple_axis_pad.py",
      [
        "setup_axes"
      ]
    ]
  ],
  "add_floating_axis1": [
    [
      "examples/axisartist/demo_axis_direction.py",
      [
        "add_floating_axis1"
      ]
    ],
    [
      "examples/axisartist/simple_axis_pad.py",
      [
        "add_floating_axis1"
      ]
    ]
  ],
  "add_floating_axis2": [
    [
      "examples/axisartist/demo_axis_direction.py",
      [
        "add_floating_axis2"
      ]
    ],
    [
      "examples/axisartist/simple_axis_pad.py",
      [
        "add_floating_axis2"
      ]
    ]
  ],
  "curvelinear_test1": [
    [
      "examples/axisartist/demo_curvelinear_grid.py",
      [
        "curvelinear_test1"
      ]
    ],
    [
      "examples/axisartist/demo_curvelinear_grid2.py",
      [
        "curvelinear_test1"
      ]
    ]
  ],
  "curvelinear_test2": [
    [
      "examples/axisartist/demo_curvelinear_grid.py",
      [
        "curvelinear_test2"
      ]
    ],
    [
      "examples/axisartist/demo_floating_axis.py",
      [
        "curvelinear_test2"
      ]
    ]
  ],
  "setup_axes1": [
    [
      "examples/axisartist/demo_floating_axes.py",
      [
        "setup_axes1"
      ]
    ]
  ],
  "setup_axes2": [
    [
      "examples/axisartist/demo_floating_axes.py",
      [
        "setup_axes2"
      ]
    ]
  ],
  "setup_axes3": [
    [
      "examples/axisartist/demo_floating_axes.py",
      [
        "setup_axes3"
      ]
    ]
  ],
  "ann": [
    [
      "examples/axisartist/simple_axis_pad.py",
      [
        "ann"
      ]
    ]
  ],
  "plot_color_gradients": [
    [
      "examples/color/colormap_reference.py",
      [
        "plot_color_gradients"
      ]
    ],
    [
      "tutorials/colors/colormaps.py",
      [
        "plot_color_gradients"
      ]
    ]
  ],
  "plot_colortable": [
    [
      "examples/color/named_colors.py",
      [
        "plot_colortable"
      ]
    ]
  ],
  "on_close": [
    [
      "examples/event_handling/close_event.py",
      [
        "on_close"
      ]
    ],
    [
      "examples/user_interfaces/embedding_webagg_sgskip.py",
      [
        "MyApplication",
        "WebSocket",
        "on_close"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_nbagg.py",
      [
        "CommSocket",
        "on_close"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg.py",
      [
        "WebAggApplication",
        "WebSocket",
        "on_close"
      ]
    ]
  ],
  "on_move": [
    [
      "examples/event_handling/coords_demo.py",
      [
        "on_move"
      ]
    ],
    [
      "examples/event_handling/looking_glass.py",
      [
        "EventHandler",
        "on_move"
      ]
    ],
    [
      "examples/widgets/menu.py",
      [
        "Menu",
        "on_move"
      ]
    ]
  ],
  "on_click": [
    [
      "examples/event_handling/coords_demo.py",
      [
        "on_click"
      ]
    ]
  ],
  "set_cross_hair_visible": [
    [
      "examples/event_handling/cursor_demo.py",
      [
        "Cursor",
        "set_cross_hair_visible"
      ]
    ],
    [
      "examples/event_handling/cursor_demo.py",
      [
        "BlittedCursor",
        "set_cross_hair_visible"
      ]
    ],
    [
      "examples/event_handling/cursor_demo.py",
      [
        "SnappingCursor",
        "set_cross_hair_visible"
      ]
    ]
  ],
  "on_mouse_move": [
    [
      "examples/event_handling/cursor_demo.py",
      [
        "Cursor",
        "on_mouse_move"
      ]
    ],
    [
      "examples/event_handling/cursor_demo.py",
      [
        "BlittedCursor",
        "on_mouse_move"
      ]
    ],
    [
      "examples/event_handling/cursor_demo.py",
      [
        "SnappingCursor",
        "on_mouse_move"
      ]
    ],
    [
      "examples/event_handling/path_editor.py",
      [
        "PathInteractor",
        "on_mouse_move"
      ]
    ],
    [
      "examples/event_handling/poly_editor.py",
      [
        "PolygonInteractor",
        "on_mouse_move"
      ]
    ],
    [
      "examples/event_handling/trifinder_event_demo.py",
      [
        "on_mouse_move"
      ]
    ]
  ],
  "on_draw": [
    [
      "examples/event_handling/cursor_demo.py",
      [
        "BlittedCursor",
        "on_draw"
      ]
    ],
    [
      "examples/event_handling/path_editor.py",
      [
        "PathInteractor",
        "on_draw"
      ]
    ],
    [
      "examples/event_handling/poly_editor.py",
      [
        "PolygonInteractor",
        "on_draw"
      ]
    ],
    [
      "examples/subplots_axes_and_figures/auto_subplots_adjust.py",
      [
        "on_draw"
      ]
    ],
    [
      "tutorials/advanced/blitting.py",
      [
        "BlitManager",
        "on_draw"
      ]
    ]
  ],
  "create_new_background": [
    [
      "examples/event_handling/cursor_demo.py",
      [
        "BlittedCursor",
        "create_new_background"
      ]
    ]
  ],
  "on_press": [
    [
      "examples/event_handling/data_browser.py",
      [
        "PointBrowser",
        "on_press"
      ]
    ],
    [
      "examples/event_handling/keypress_demo.py",
      [
        "on_press"
      ]
    ],
    [
      "examples/event_handling/lasso_demo.py",
      [
        "LassoManager",
        "on_press"
      ]
    ],
    [
      "examples/event_handling/looking_glass.py",
      [
        "EventHandler",
        "on_press"
      ]
    ],
    [
      "examples/event_handling/zoom_window.py",
      [
        "on_press"
      ]
    ]
  ],
  "on_pick": [
    [
      "examples/event_handling/data_browser.py",
      [
        "PointBrowser",
        "on_pick"
      ]
    ],
    [
      "examples/event_handling/legend_picking.py",
      [
        "on_pick"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "DraggableBase",
        "on_pick"
      ]
    ],
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_picking_callbacks_overlap",
        "on_pick"
      ]
    ]
  ],
  "on_enter_axes": [
    [
      "examples/event_handling/figure_axes_enter_leave.py",
      [
        "on_enter_axes"
      ]
    ]
  ],
  "on_leave_axes": [
    [
      "examples/event_handling/figure_axes_enter_leave.py",
      [
        "on_leave_axes"
      ]
    ]
  ],
  "on_enter_figure": [
    [
      "examples/event_handling/figure_axes_enter_leave.py",
      [
        "on_enter_figure"
      ]
    ]
  ],
  "on_leave_figure": [
    [
      "examples/event_handling/figure_axes_enter_leave.py",
      [
        "on_leave_figure"
      ]
    ]
  ],
  "tellme": [
    [
      "examples/event_handling/ginput_manual_clabel_sgskip.py",
      [
        "tellme"
      ]
    ]
  ],
  "on_scroll": [
    [
      "examples/event_handling/image_slices_viewer.py",
      [
        "IndexTracker",
        "on_scroll"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "on_scroll"
      ]
    ]
  ],
  "callback": [
    [
      "examples/event_handling/lasso_demo.py",
      [
        "LassoManager",
        "callback"
      ]
    ]
  ],
  "on_release": [
    [
      "examples/event_handling/looking_glass.py",
      [
        "EventHandler",
        "on_release"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "DraggableBase",
        "on_release"
      ]
    ]
  ],
  "get_ind_under_point": [
    [
      "examples/event_handling/path_editor.py",
      [
        "PathInteractor",
        "get_ind_under_point"
      ]
    ],
    [
      "examples/event_handling/poly_editor.py",
      [
        "PolygonInteractor",
        "get_ind_under_point"
      ]
    ]
  ],
  "on_button_press": [
    [
      "examples/event_handling/path_editor.py",
      [
        "PathInteractor",
        "on_button_press"
      ]
    ],
    [
      "examples/event_handling/poly_editor.py",
      [
        "PolygonInteractor",
        "on_button_press"
      ]
    ]
  ],
  "on_button_release": [
    [
      "examples/event_handling/path_editor.py",
      [
        "PathInteractor",
        "on_button_release"
      ]
    ],
    [
      "examples/event_handling/poly_editor.py",
      [
        "PolygonInteractor",
        "on_button_release"
      ]
    ]
  ],
  "on_key_press": [
    [
      "examples/event_handling/path_editor.py",
      [
        "PathInteractor",
        "on_key_press"
      ]
    ],
    [
      "examples/event_handling/poly_editor.py",
      [
        "PolygonInteractor",
        "on_key_press"
      ]
    ],
    [
      "examples/event_handling/pong_sgskip.py",
      [
        "Game",
        "on_key_press"
      ]
    ],
    [
      "lib/matplotlib/tests/test_backend_qt.py",
      [
        "test_correct_key",
        "on_key_press"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "on_key_press"
      ]
    ]
  ],
  "onpick1": [
    [
      "examples/event_handling/pick_event_demo.py",
      [
        "onpick1"
      ]
    ]
  ],
  "line_picker": [
    [
      "examples/event_handling/pick_event_demo.py",
      [
        "line_picker"
      ]
    ]
  ],
  "onpick2": [
    [
      "examples/event_handling/pick_event_demo.py",
      [
        "onpick2"
      ]
    ]
  ],
  "onpick3": [
    [
      "examples/event_handling/pick_event_demo.py",
      [
        "onpick3"
      ]
    ]
  ],
  "onpick4": [
    [
      "examples/event_handling/pick_event_demo.py",
      [
        "onpick4"
      ]
    ]
  ],
  "onpick": [
    [
      "examples/event_handling/pick_event_demo2.py",
      [
        "onpick"
      ]
    ],
    [
      "lib/matplotlib/lines.py",
      [
        "VertexSelector",
        "onpick"
      ]
    ]
  ],
  "dist": [
    [
      "examples/event_handling/poly_editor.py",
      [
        "dist"
      ]
    ]
  ],
  "dist_point_to_segment": [
    [
      "examples/event_handling/poly_editor.py",
      [
        "dist_point_to_segment"
      ]
    ]
  ],
  "poly_changed": [
    [
      "examples/event_handling/poly_editor.py",
      [
        "PolygonInteractor",
        "poly_changed"
      ]
    ]
  ],
  "contains": [
    [
      "examples/event_handling/pong_sgskip.py",
      [
        "Pad",
        "contains"
      ]
    ],
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "contains"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "contains"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "Tick",
        "contains"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "XAxis",
        "contains"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "YAxis",
        "contains"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "contains"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "contains"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "_ImageBase",
        "contains"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "BboxImage",
        "contains"
      ]
    ],
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "contains"
      ]
    ],
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "contains"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "OffsetBox",
        "contains"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AnnotationBbox",
        "contains"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "contains"
      ]
    ],
    [
      "lib/matplotlib/quiver.py",
      [
        "QuiverKey",
        "contains"
      ]
    ],
    [
      "lib/matplotlib/table.py",
      [
        "Table",
        "contains"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "contains"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Annotation",
        "contains"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "contains"
      ]
    ]
  ],
  "_reset": [
    [
      "examples/event_handling/pong_sgskip.py",
      [
        "Puck",
        "_reset"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "SubplotToolQt",
        "_reset"
      ]
    ]
  ],
  "_slower": [
    [
      "examples/event_handling/pong_sgskip.py",
      [
        "Puck",
        "_slower"
      ]
    ]
  ],
  "_faster": [
    [
      "examples/event_handling/pong_sgskip.py",
      [
        "Puck",
        "_faster"
      ]
    ]
  ],
  "_speedlimit": [
    [
      "examples/event_handling/pong_sgskip.py",
      [
        "Puck",
        "_speedlimit"
      ]
    ]
  ],
  "draw": [
    [
      "examples/event_handling/pong_sgskip.py",
      [
        "Game",
        "draw"
      ]
    ],
    [
      "examples/misc/demo_agg_filter.py",
      [
        "FilteredArtistList",
        "draw"
      ]
    ],
    [
      "examples/misc/demo_ribbon_box.py",
      [
        "RibbonBoxImage",
        "draw"
      ]
    ],
    [
      "examples/specialty_plots/skewt.py",
      [
        "SkewXTick",
        "draw"
      ]
    ],
    [
      "examples/text_labels_and_annotations/angle_annotation.py",
      [
        "AngleAnnotation",
        "draw"
      ]
    ],
    [
      "examples/text_labels_and_annotations/demo_text_path.py",
      [
        "PathClippedImagePatch",
        "draw"
      ]
    ],
    [
      "examples/text_labels_and_annotations/line_with_text.py",
      [
        "MyLine",
        "draw"
      ]
    ],
    [
      "examples/widgets/menu.py",
      [
        "MenuItem",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/axes/_secondary_axes.py",
      [
        "SecondaryAxis",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "Tick",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "FigureCanvasAgg",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "FigureCanvasGTK3",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "FigureCanvasGTK4",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_macosx.py",
      [
        "FigureCanvasMac",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "FigureCanvasPdf",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "FigureCanvasPgf",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "FigureCanvasPS",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureCanvasQT",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qtcairo.py",
      [
        "FigureCanvasQTCairo",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "FigureCanvasSVG",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_template.py",
      [
        "FigureCanvasTemplate",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_tkagg.py",
      [
        "FigureCanvasTkAgg",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_tkcairo.py",
      [
        "FigureCanvasTkCairo",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureCanvasWebAggCore",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "FigureCanvasWx",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wxagg.py",
      [
        "FigureCanvasWxAgg",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wxcairo.py",
      [
        "FigureCanvasWxCairo",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "_CollectionWithSizes",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "RegularPolyCollection",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "EllipseCollection",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "TriMesh",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "QuadMesh",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/colorbar.py",
      [
        "_ColorbarSpine",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "SubFigure",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "_ImageBase",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/lines.py",
      [
        "_AxLine",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "OffsetBox",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "PaddedBox",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "DrawingArea",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "TextArea",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AuxTransformBox",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AnchoredOffsetbox",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "OffsetImage",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AnnotationBbox",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Shadow",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Arc",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "FancyArrowPatch",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "ConnectionPatch",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "draw"
      ]
    ],
    [
      "lib/matplotlib/quiver.py",
      [
        "QuiverKey",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/quiver.py",
      [
        "Quiver",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/spines.py",
      [
        "Spine",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/table.py",
      [
        "Cell",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/table.py",
      [
        "Table",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/tests/test_skew.py",
      [
        "SkewXTick",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "draw"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Annotation",
        "draw"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/inset_locator.py",
      [
        "AnchoredLocatorBase",
        "draw"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/parasite_axes.py",
      [
        "HostAxesBase",
        "draw"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "Ticks",
        "draw"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "LabelBase",
        "draw"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisLabel",
        "draw"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "TickLabels",
        "draw"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "GridlinesCollection",
        "draw"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisArtist",
        "draw"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axisline_style.py",
      [
        "_FancyAxislineStyle",
        "SimpleArrow",
        "draw"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Text3D",
        "draw"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Line3D",
        "draw"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Path3DCollection",
        "draw"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "draw"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axis3d.py",
      [
        "Axis",
        "draw"
      ]
    ]
  ],
  "on_redraw": [
    [
      "examples/event_handling/pong_sgskip.py",
      [
        "on_redraw"
      ]
    ]
  ],
  "start_anim": [
    [
      "examples/event_handling/pong_sgskip.py",
      [
        "start_anim"
      ]
    ]
  ],
  "downsample": [
    [
      "examples/event_handling/resample.py",
      [
        "DataDisplayDownsampler",
        "downsample"
      ]
    ]
  ],
  "update_title": [
    [
      "examples/event_handling/timers.py",
      [
        "update_title"
      ]
    ]
  ],
  "update_polygon": [
    [
      "examples/event_handling/trifinder_event_demo.py",
      [
        "update_polygon"
      ]
    ]
  ],
  "compute_image": [
    [
      "examples/event_handling/viewlims.py",
      [
        "MandelbrotDisplay",
        "compute_image"
      ]
    ]
  ],
  "ax_update": [
    [
      "examples/event_handling/viewlims.py",
      [
        "MandelbrotDisplay",
        "ax_update"
      ]
    ]
  ],
  "get_image": [
    [
      "examples/images_contours_and_fields/affine_image.py",
      [
        "get_image"
      ]
    ]
  ],
  "do_plot": [
    [
      "examples/images_contours_and_fields/affine_image.py",
      [
        "do_plot"
      ]
    ],
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "bxp",
        "do_plot"
      ]
    ]
  ],
  "rbf": [
    [
      "examples/images_contours_and_fields/colormap_normalizations_symlognorm.py",
      [
        "rbf"
      ]
    ]
  ],
  "fmt": [
    [
      "examples/images_contours_and_fields/contour_label_demo.py",
      [
        "fmt"
      ]
    ]
  ],
  "heatmap": [
    [
      "examples/images_contours_and_fields/image_annotated_heatmap.py",
      [
        "heatmap"
      ]
    ]
  ],
  "annotate_heatmap": [
    [
      "examples/images_contours_and_fields/image_annotated_heatmap.py",
      [
        "annotate_heatmap"
      ]
    ]
  ],
  "func": [
    [
      "examples/images_contours_and_fields/image_annotated_heatmap.py",
      [
        "func"
      ]
    ],
    [
      "examples/pie_and_polar_charts/pie_and_donut_labels.py",
      [
        "func"
      ]
    ],
    [
      "examples/showcase/integral.py",
      [
        "func"
      ]
    ],
    [
      "examples/widgets/check_buttons.py",
      [
        "func"
      ]
    ],
    [
      "lib/matplotlib/tests/test_preprocess_data.py",
      [
        "test_compiletime_checks",
        "func"
      ]
    ],
    [
      "lib/matplotlib/tests/test_rcparams.py",
      [
        "test_rcparams",
        "func"
      ]
    ]
  ],
  "normal_pdf": [
    [
      "examples/images_contours_and_fields/image_transparency_blend.py",
      [
        "normal_pdf"
      ]
    ]
  ],
  "format_coord": [
    [
      "examples/images_contours_and_fields/image_zcoord.py",
      [
        "format_coord"
      ]
    ],
    [
      "examples/misc/custom_projection.py",
      [
        "GeoAxes",
        "format_coord"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "format_coord"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "GeoAxes",
        "format_coord"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "format_coord"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "format_coord"
      ]
    ]
  ],
  "func3": [
    [
      "examples/images_contours_and_fields/layer_images.py",
      [
        "func3"
      ]
    ]
  ],
  "_annotate": [
    [
      "examples/images_contours_and_fields/pcolormesh_grids.py",
      [
        "_annotate"
      ]
    ]
  ],
  "main": [
    [
      "examples/images_contours_and_fields/shading_example.py",
      [
        "main"
      ]
    ],
    [
      "examples/misc/demo_ribbon_box.py",
      [
        "main"
      ]
    ],
    [
      "examples/misc/multiprocess_sgskip.py",
      [
        "main"
      ]
    ],
    [
      "examples/user_interfaces/mpl_with_glade3_sgskip.py",
      [
        "main"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "main"
      ]
    ],
    [
      "tools/run_examples.py",
      [
        "main"
      ]
    ],
    [
      "tools/subset.py",
      [
        "main"
      ]
    ]
  ],
  "compare": [
    [
      "examples/images_contours_and_fields/shading_example.py",
      [
        "compare"
      ]
    ],
    [
      "lib/matplotlib/testing/decorators.py",
      [
        "_ImageComparisonBase",
        "compare"
      ]
    ]
  ],
  "experiment_res": [
    [
      "examples/images_contours_and_fields/tricontour_smooth_delaunay.py",
      [
        "experiment_res"
      ]
    ]
  ],
  "function_z": [
    [
      "examples/images_contours_and_fields/tricontour_smooth_user.py",
      [
        "function_z"
      ]
    ]
  ],
  "dipole_potential": [
    [
      "examples/images_contours_and_fields/trigradient_demo.py",
      [
        "dipole_potential"
      ]
    ],
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_tri_smooth_gradient",
        "dipole_potential"
      ]
    ]
  ],
  "draw_error_band": [
    [
      "examples/lines_bars_and_markers/curve_error_band.py",
      [
        "draw_error_band"
      ]
    ]
  ],
  "_koch_snowflake_complex": [
    [
      "examples/lines_bars_and_markers/fill.py",
      [
        "koch_snowflake",
        "_koch_snowflake_complex"
      ]
    ]
  ],
  "koch_snowflake": [
    [
      "examples/lines_bars_and_markers/fill.py",
      [
        "koch_snowflake"
      ]
    ]
  ],
  "filled_hist": [
    [
      "examples/lines_bars_and_markers/filled_step.py",
      [
        "filled_hist"
      ]
    ]
  ],
  "stack_hist": [
    [
      "examples/lines_bars_and_markers/filled_step.py",
      [
        "stack_hist"
      ]
    ]
  ],
  "gradient_image": [
    [
      "examples/lines_bars_and_markers/gradient_bar.py",
      [
        "gradient_image"
      ]
    ]
  ],
  "gradient_bar": [
    [
      "examples/lines_bars_and_markers/gradient_bar.py",
      [
        "gradient_bar"
      ]
    ]
  ],
  "label_bars": [
    [
      "examples/lines_bars_and_markers/hat_graph.py",
      [
        "hat_graph",
        "label_bars"
      ]
    ]
  ],
  "hat_graph": [
    [
      "examples/lines_bars_and_markers/hat_graph.py",
      [
        "hat_graph"
      ]
    ]
  ],
  "survey": [
    [
      "examples/lines_bars_and_markers/horizontal_barchart_distribution.py",
      [
        "survey"
      ]
    ]
  ],
  "plot_linestyles": [
    [
      "examples/lines_bars_and_markers/linestyles.py",
      [
        "plot_linestyles"
      ]
    ]
  ],
  "format_axes": [
    [
      "examples/lines_bars_and_markers/marker_reference.py",
      [
        "format_axes"
      ]
    ],
    [
      "examples/subplots_axes_and_figures/gridspec_multicolumn.py",
      [
        "format_axes"
      ]
    ],
    [
      "examples/subplots_axes_and_figures/gridspec_nested.py",
      [
        "format_axes"
      ]
    ]
  ],
  "split_list": [
    [
      "examples/lines_bars_and_markers/marker_reference.py",
      [
        "split_list"
      ]
    ]
  ],
  "scatter_hist": [
    [
      "examples/lines_bars_and_markers/scatter_hist.py",
      [
        "scatter_hist"
      ]
    ]
  ],
  "gaussian_mixture": [
    [
      "examples/lines_bars_and_markers/stackplot_demo.py",
      [
        "gaussian_mixture"
      ]
    ]
  ],
  "draw_circles": [
    [
      "examples/misc/anchored_artists.py",
      [
        "draw_circles"
      ]
    ]
  ],
  "millions": [
    [
      "examples/misc/coords_report.py",
      [
        "millions"
      ]
    ],
    [
      "examples/ticks/custom_ticker1.py",
      [
        "millions"
      ]
    ]
  ],
  "_init_axis": [
    [
      "examples/misc/custom_projection.py",
      [
        "GeoAxes",
        "_init_axis"
      ]
    ],
    [
      "examples/specialty_plots/skewt.py",
      [
        "SkewXAxes",
        "_init_axis"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "_init_axis"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "GeoAxes",
        "_init_axis"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "_init_axis"
      ]
    ],
    [
      "lib/matplotlib/tests/test_skew.py",
      [
        "SkewXAxes",
        "_init_axis"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "_init_axis"
      ]
    ]
  ],
  "clear": [
    [
      "examples/misc/custom_projection.py",
      [
        "GeoAxes",
        "clear"
      ]
    ],
    [
      "examples/widgets/annotated_cursor.py",
      [
        "AnnotatedCursor",
        "clear"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "clear"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "clear"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolViewsPositions",
        "clear"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "RendererAgg",
        "clear"
      ]
    ],
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "Stack",
        "clear"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "clear"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "clear"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "GeoAxes",
        "clear"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "LambertAxes",
        "clear"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "ThetaAxis",
        "clear"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "RadialAxis",
        "clear"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "clear"
      ]
    ],
    [
      "lib/matplotlib/spines.py",
      [
        "Spine",
        "clear"
      ]
    ],
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_subclass_clear_cla",
        "ClearAxes",
        "clear"
      ]
    ],
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_subclass_clear_cla",
        "ClearSuperAxes",
        "clear"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Affine2D",
        "clear"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "Cursor",
        "clear"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "MultiCursor",
        "clear"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "clear"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/mpl_axes.py",
      [
        "Axes",
        "clear"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/parasite_axes.py",
      [
        "ParasiteAxesBase",
        "clear"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/parasite_axes.py",
      [
        "HostAxesBase",
        "clear"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "Axes",
        "clear"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "AxesZero",
        "clear"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/floating_axes.py",
      [
        "FloatingAxesBase",
        "clear"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "clear"
      ]
    ]
  ],
  "_set_lim_and_transforms": [
    [
      "examples/misc/custom_projection.py",
      [
        "GeoAxes",
        "_set_lim_and_transforms"
      ]
    ],
    [
      "examples/specialty_plots/skewt.py",
      [
        "SkewXAxes",
        "_set_lim_and_transforms"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "_set_lim_and_transforms"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "GeoAxes",
        "_set_lim_and_transforms"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "_set_lim_and_transforms"
      ]
    ],
    [
      "lib/matplotlib/tests/test_skew.py",
      [
        "SkewXAxes",
        "_set_lim_and_transforms"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/parasite_axes.py",
      [
        "ParasiteAxesBase",
        "_set_lim_and_transforms"
      ]
    ]
  ],
  "_get_affine_transform": [
    [
      "examples/misc/custom_projection.py",
      [
        "GeoAxes",
        "_get_affine_transform"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "GeoAxes",
        "_get_affine_transform"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "LambertAxes",
        "_get_affine_transform"
      ]
    ]
  ],
  "get_xaxis_transform": [
    [
      "examples/misc/custom_projection.py",
      [
        "GeoAxes",
        "get_xaxis_transform"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_xaxis_transform"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "GeoAxes",
        "get_xaxis_transform"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "get_xaxis_transform"
      ]
    ]
  ],
  "get_xaxis_text1_transform": [
    [
      "examples/misc/custom_projection.py",
      [
        "GeoAxes",
        "get_xaxis_text1_transform"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_xaxis_text1_transform"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "GeoAxes",
        "get_xaxis_text1_transform"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "get_xaxis_text1_transform"
      ]
    ]
  ],
  "get_xaxis_text2_transform": [
    [
      "examples/misc/custom_projection.py",
      [
        "GeoAxes",
        "get_xaxis_text2_transform"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_xaxis_text2_transform"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "GeoAxes",
        "get_xaxis_text2_transform"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "get_xaxis_text2_transform"
      ]
    ]
  ],
  "get_yaxis_transform": [
    [
      "examples/misc/custom_projection.py",
      [
        "GeoAxes",
        "get_yaxis_transform"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_yaxis_transform"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "GeoAxes",
        "get_yaxis_transform"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "get_yaxis_transform"
      ]
    ]
  ],
  "get_yaxis_text1_transform": [
    [
      "examples/misc/custom_projection.py",
      [
        "GeoAxes",
        "get_yaxis_text1_transform"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_yaxis_text1_transform"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "GeoAxes",
        "get_yaxis_text1_transform"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "get_yaxis_text1_transform"
      ]
    ]
  ],
  "get_yaxis_text2_transform": [
    [
      "examples/misc/custom_projection.py",
      [
        "GeoAxes",
        "get_yaxis_text2_transform"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_yaxis_text2_transform"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "GeoAxes",
        "get_yaxis_text2_transform"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "get_yaxis_text2_transform"
      ]
    ]
  ],
  "_gen_axes_patch": [
    [
      "examples/misc/custom_projection.py",
      [
        "GeoAxes",
        "_gen_axes_patch"
      ]
    ],
    [
      "examples/specialty_plots/radar_chart.py",
      [
        "radar_factory",
        "RadarAxes",
        "_gen_axes_patch"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "_gen_axes_patch"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "GeoAxes",
        "_gen_axes_patch"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "_gen_axes_patch"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/floating_axes.py",
      [
        "FloatingAxesBase",
        "_gen_axes_patch"
      ]
    ]
  ],
  "_gen_axes_spines": [
    [
      "examples/misc/custom_projection.py",
      [
        "GeoAxes",
        "_gen_axes_spines"
      ]
    ],
    [
      "examples/specialty_plots/radar_chart.py",
      [
        "radar_factory",
        "RadarAxes",
        "_gen_axes_spines"
      ]
    ],
    [
      "examples/specialty_plots/skewt.py",
      [
        "SkewXAxes",
        "_gen_axes_spines"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "_gen_axes_spines"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "GeoAxes",
        "_gen_axes_spines"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "_gen_axes_spines"
      ]
    ],
    [
      "lib/matplotlib/tests/test_skew.py",
      [
        "SkewXAxes",
        "_gen_axes_spines"
      ]
    ]
  ],
  "set_yscale": [
    [
      "examples/misc/custom_projection.py",
      [
        "GeoAxes",
        "set_yscale"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "GeoAxes",
        "set_yscale"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "set_yscale"
      ]
    ]
  ],
  "set_xlim": [
    [
      "examples/misc/custom_projection.py",
      [
        "GeoAxes",
        "set_xlim"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "set_xlim"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "GeoAxes",
        "set_xlim"
      ]
    ]
  ],
  "set_longitude_grid": [
    [
      "examples/misc/custom_projection.py",
      [
        "GeoAxes",
        "set_longitude_grid"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "GeoAxes",
        "set_longitude_grid"
      ]
    ]
  ],
  "set_latitude_grid": [
    [
      "examples/misc/custom_projection.py",
      [
        "GeoAxes",
        "set_latitude_grid"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "GeoAxes",
        "set_latitude_grid"
      ]
    ]
  ],
  "set_longitude_grid_ends": [
    [
      "examples/misc/custom_projection.py",
      [
        "GeoAxes",
        "set_longitude_grid_ends"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "GeoAxes",
        "set_longitude_grid_ends"
      ]
    ]
  ],
  "get_data_ratio": [
    [
      "examples/misc/custom_projection.py",
      [
        "GeoAxes",
        "get_data_ratio"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_data_ratio"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "GeoAxes",
        "get_data_ratio"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "get_data_ratio"
      ]
    ]
  ],
  "can_zoom": [
    [
      "examples/misc/custom_projection.py",
      [
        "GeoAxes",
        "can_zoom"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "can_zoom"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "GeoAxes",
        "can_zoom"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "can_zoom"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "can_zoom"
      ]
    ]
  ],
  "can_pan": [
    [
      "examples/misc/custom_projection.py",
      [
        "GeoAxes",
        "can_pan"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "can_pan"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "GeoAxes",
        "can_pan"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "can_pan"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "can_pan"
      ]
    ]
  ],
  "start_pan": [
    [
      "examples/misc/custom_projection.py",
      [
        "GeoAxes",
        "start_pan"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "start_pan"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "GeoAxes",
        "start_pan"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "start_pan"
      ]
    ]
  ],
  "end_pan": [
    [
      "examples/misc/custom_projection.py",
      [
        "GeoAxes",
        "end_pan"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "end_pan"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "GeoAxes",
        "end_pan"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "end_pan"
      ]
    ]
  ],
  "drag_pan": [
    [
      "examples/misc/custom_projection.py",
      [
        "GeoAxes",
        "drag_pan"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "drag_pan"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "NavigationToolbar2",
        "drag_pan"
      ]
    ],
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "drag_pan"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "GeoAxes",
        "drag_pan"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "drag_pan"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "drag_pan"
      ]
    ]
  ],
  "transform_non_affine": [
    [
      "examples/misc/custom_projection.py",
      [
        "HammerAxes",
        "HammerTransform",
        "transform_non_affine"
      ]
    ],
    [
      "examples/misc/custom_projection.py",
      [
        "HammerAxes",
        "InvertedHammerTransform",
        "transform_non_affine"
      ]
    ],
    [
      "examples/scales/custom_scale.py",
      [
        "MercatorLatitudeScale",
        "MercatorLatitudeTransform",
        "transform_non_affine"
      ]
    ],
    [
      "examples/scales/custom_scale.py",
      [
        "MercatorLatitudeScale",
        "InvertedMercatorLatitudeTransform",
        "transform_non_affine"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "AitoffAxes",
        "AitoffTransform",
        "transform_non_affine"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "AitoffAxes",
        "InvertedAitoffTransform",
        "transform_non_affine"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "HammerAxes",
        "HammerTransform",
        "transform_non_affine"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "HammerAxes",
        "InvertedHammerTransform",
        "transform_non_affine"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "MollweideAxes",
        "MollweideTransform",
        "transform_non_affine"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "MollweideAxes",
        "InvertedMollweideTransform",
        "transform_non_affine"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "LambertAxes",
        "LambertTransform",
        "transform_non_affine"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "LambertAxes",
        "InvertedLambertTransform",
        "transform_non_affine"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarTransform",
        "transform_non_affine"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "InvertedPolarTransform",
        "transform_non_affine"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "FuncTransform",
        "transform_non_affine"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "LogTransform",
        "transform_non_affine"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "InvertedLogTransform",
        "transform_non_affine"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "SymmetricalLogTransform",
        "transform_non_affine"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "InvertedSymmetricalLogTransform",
        "transform_non_affine"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "AsinhTransform",
        "transform_non_affine"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "InvertedAsinhTransform",
        "transform_non_affine"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "LogitTransform",
        "transform_non_affine"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "LogisticTransform",
        "transform_non_affine"
      ]
    ],
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "test_non_affine_caching",
        "AssertingNonAffineTransform",
        "transform_non_affine"
      ]
    ],
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "NonAffineForTest",
        "transform_non_affine"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Transform",
        "transform_non_affine"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "AffineBase",
        "transform_non_affine"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "IdentityTransform",
        "transform_non_affine"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "BlendedGenericTransform",
        "transform_non_affine"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "CompositeGenericTransform",
        "transform_non_affine"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/grid_finder.py",
      [
        "_User2DTransform",
        "transform_non_affine"
      ]
    ]
  ],
  "transform_path_non_affine": [
    [
      "examples/misc/custom_projection.py",
      [
        "HammerAxes",
        "HammerTransform",
        "transform_path_non_affine"
      ]
    ],
    [
      "examples/specialty_plots/radar_chart.py",
      [
        "radar_factory",
        "RadarTransform",
        "transform_path_non_affine"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "_GeoTransform",
        "transform_path_non_affine"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarTransform",
        "transform_path_non_affine"
      ]
    ],
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "test_non_affine_caching",
        "AssertingNonAffineTransform",
        "transform_path_non_affine"
      ]
    ],
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "NonAffineForTest",
        "transform_path_non_affine"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Transform",
        "transform_path_non_affine"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "AffineBase",
        "transform_path_non_affine"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "IdentityTransform",
        "transform_path_non_affine"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "CompositeGenericTransform",
        "transform_path_non_affine"
      ]
    ]
  ],
  "inverted": [
    [
      "examples/misc/custom_projection.py",
      [
        "HammerAxes",
        "HammerTransform",
        "inverted"
      ]
    ],
    [
      "examples/misc/custom_projection.py",
      [
        "HammerAxes",
        "InvertedHammerTransform",
        "inverted"
      ]
    ],
    [
      "examples/scales/custom_scale.py",
      [
        "MercatorLatitudeScale",
        "MercatorLatitudeTransform",
        "inverted"
      ]
    ],
    [
      "examples/scales/custom_scale.py",
      [
        "MercatorLatitudeScale",
        "InvertedMercatorLatitudeTransform",
        "inverted"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "AitoffAxes",
        "AitoffTransform",
        "inverted"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "AitoffAxes",
        "InvertedAitoffTransform",
        "inverted"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "HammerAxes",
        "HammerTransform",
        "inverted"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "HammerAxes",
        "InvertedHammerTransform",
        "inverted"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "MollweideAxes",
        "MollweideTransform",
        "inverted"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "MollweideAxes",
        "InvertedMollweideTransform",
        "inverted"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "LambertAxes",
        "LambertTransform",
        "inverted"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "LambertAxes",
        "InvertedLambertTransform",
        "inverted"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarTransform",
        "inverted"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "InvertedPolarTransform",
        "inverted"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "FuncTransform",
        "inverted"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "LogTransform",
        "inverted"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "InvertedLogTransform",
        "inverted"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "SymmetricalLogTransform",
        "inverted"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "InvertedSymmetricalLogTransform",
        "inverted"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "AsinhTransform",
        "inverted"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "InvertedAsinhTransform",
        "inverted"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "LogitTransform",
        "inverted"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "LogisticTransform",
        "inverted"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Transform",
        "inverted"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Affine2DBase",
        "inverted"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "IdentityTransform",
        "inverted"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "BlendedGenericTransform",
        "inverted"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "CompositeGenericTransform",
        "inverted"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/grid_finder.py",
      [
        "_User2DTransform",
        "inverted"
      ]
    ],
    [
      "lib/mpl_toolkits/tests/test_axisartist_grid_helper_curvelinear.py",
      [
        "test_custom_transform",
        "MyTransform",
        "inverted"
      ]
    ],
    [
      "lib/mpl_toolkits/tests/test_axisartist_grid_helper_curvelinear.py",
      [
        "test_custom_transform",
        "MyTransformInv",
        "inverted"
      ]
    ]
  ],
  "_get_core_transform": [
    [
      "examples/misc/custom_projection.py",
      [
        "HammerAxes",
        "_get_core_transform"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "AitoffAxes",
        "_get_core_transform"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "HammerAxes",
        "_get_core_transform"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "MollweideAxes",
        "_get_core_transform"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "LambertAxes",
        "_get_core_transform"
      ]
    ]
  ],
  "smooth1d": [
    [
      "examples/misc/demo_agg_filter.py",
      [
        "smooth1d"
      ]
    ],
    [
      "lib/matplotlib/tests/test_agg.py",
      [
        "test_agg_filter",
        "smooth1d"
      ]
    ]
  ],
  "smooth2d": [
    [
      "examples/misc/demo_agg_filter.py",
      [
        "smooth2d"
      ]
    ],
    [
      "lib/matplotlib/tests/test_agg.py",
      [
        "test_agg_filter",
        "smooth2d"
      ]
    ]
  ],
  "get_pad": [
    [
      "examples/misc/demo_agg_filter.py",
      [
        "BaseFilter",
        "get_pad"
      ]
    ],
    [
      "examples/misc/demo_agg_filter.py",
      [
        "OffsetFilter",
        "get_pad"
      ]
    ],
    [
      "examples/misc/demo_agg_filter.py",
      [
        "GaussianFilter",
        "get_pad"
      ]
    ],
    [
      "examples/misc/demo_agg_filter.py",
      [
        "DropShadowFilter",
        "get_pad"
      ]
    ],
    [
      "examples/misc/demo_agg_filter.py",
      [
        "LightFilter",
        "get_pad"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "Tick",
        "get_pad"
      ]
    ],
    [
      "lib/matplotlib/tests/test_agg.py",
      [
        "test_agg_filter",
        "BaseFilter",
        "get_pad"
      ]
    ],
    [
      "lib/matplotlib/tests/test_agg.py",
      [
        "test_agg_filter",
        "OffsetFilter",
        "get_pad"
      ]
    ],
    [
      "lib/matplotlib/tests/test_agg.py",
      [
        "test_agg_filter",
        "GaussianFilter",
        "get_pad"
      ]
    ],
    [
      "lib/matplotlib/tests/test_agg.py",
      [
        "test_agg_filter",
        "DropShadowFilter",
        "get_pad"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisLabel",
        "get_pad"
      ]
    ]
  ],
  "process_image": [
    [
      "examples/misc/demo_agg_filter.py",
      [
        "BaseFilter",
        "process_image"
      ]
    ],
    [
      "examples/misc/demo_agg_filter.py",
      [
        "OffsetFilter",
        "process_image"
      ]
    ],
    [
      "examples/misc/demo_agg_filter.py",
      [
        "GaussianFilter",
        "process_image"
      ]
    ],
    [
      "examples/misc/demo_agg_filter.py",
      [
        "DropShadowFilter",
        "process_image"
      ]
    ],
    [
      "examples/misc/demo_agg_filter.py",
      [
        "LightFilter",
        "process_image"
      ]
    ],
    [
      "lib/matplotlib/tests/test_agg.py",
      [
        "test_agg_filter",
        "BaseFilter",
        "process_image"
      ]
    ],
    [
      "lib/matplotlib/tests/test_agg.py",
      [
        "test_agg_filter",
        "OffsetFilter",
        "process_image"
      ]
    ],
    [
      "lib/matplotlib/tests/test_agg.py",
      [
        "test_agg_filter",
        "GaussianFilter",
        "process_image"
      ]
    ],
    [
      "lib/matplotlib/tests/test_agg.py",
      [
        "test_agg_filter",
        "DropShadowFilter",
        "process_image"
      ]
    ]
  ],
  "filtered_text": [
    [
      "examples/misc/demo_agg_filter.py",
      [
        "filtered_text"
      ]
    ]
  ],
  "drop_shadow_line": [
    [
      "examples/misc/demo_agg_filter.py",
      [
        "drop_shadow_line"
      ]
    ]
  ],
  "drop_shadow_patches": [
    [
      "examples/misc/demo_agg_filter.py",
      [
        "drop_shadow_patches"
      ]
    ]
  ],
  "light_filter_pie": [
    [
      "examples/misc/demo_agg_filter.py",
      [
        "light_filter_pie"
      ]
    ]
  ],
  "get_stretched_image": [
    [
      "examples/misc/demo_ribbon_box.py",
      [
        "RibbonBox",
        "get_stretched_image"
      ]
    ]
  ],
  "myfunc": [
    [
      "examples/misc/findobj_demo.py",
      [
        "myfunc"
      ]
    ]
  ],
  "get_font_properties": [
    [
      "examples/misc/logos2.py",
      [
        "get_font_properties"
      ]
    ]
  ],
  "create_icon_axes": [
    [
      "examples/misc/logos2.py",
      [
        "create_icon_axes"
      ]
    ]
  ],
  "create_text_axes": [
    [
      "examples/misc/logos2.py",
      [
        "create_text_axes"
      ]
    ]
  ],
  "make_logo": [
    [
      "examples/misc/logos2.py",
      [
        "make_logo"
      ]
    ]
  ],
  "terminate": [
    [
      "examples/misc/multiprocess_sgskip.py",
      [
        "ProcessPlotter",
        "terminate"
      ]
    ]
  ],
  "call_back": [
    [
      "examples/misc/multiprocess_sgskip.py",
      [
        "ProcessPlotter",
        "call_back"
      ]
    ]
  ],
  "plot": [
    [
      "examples/misc/multiprocess_sgskip.py",
      [
        "NBPlot",
        "plot"
      ]
    ],
    [
      "examples/misc/packed_bubbles.py",
      [
        "BubbleChart",
        "plot"
      ]
    ],
    [
      "examples/specialty_plots/radar_chart.py",
      [
        "radar_factory",
        "RadarAxes",
        "plot"
      ]
    ],
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "plot"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "plot"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "plot"
      ]
    ]
  ],
  "center_of_mass": [
    [
      "examples/misc/packed_bubbles.py",
      [
        "BubbleChart",
        "center_of_mass"
      ]
    ]
  ],
  "center_distance": [
    [
      "examples/misc/packed_bubbles.py",
      [
        "BubbleChart",
        "center_distance"
      ]
    ]
  ],
  "outline_distance": [
    [
      "examples/misc/packed_bubbles.py",
      [
        "BubbleChart",
        "outline_distance"
      ]
    ]
  ],
  "check_collisions": [
    [
      "examples/misc/packed_bubbles.py",
      [
        "BubbleChart",
        "check_collisions"
      ]
    ]
  ],
  "collides_with": [
    [
      "examples/misc/packed_bubbles.py",
      [
        "BubbleChart",
        "collides_with"
      ]
    ]
  ],
  "collapse": [
    [
      "examples/misc/packed_bubbles.py",
      [
        "BubbleChart",
        "collapse"
      ]
    ]
  ],
  "lorenz": [
    [
      "examples/mplot3d/lorenz_attractor.py",
      [
        "lorenz"
      ]
    ]
  ],
  "text3d": [
    [
      "examples/mplot3d/pathpatch3d.py",
      [
        "text3d"
      ]
    ]
  ],
  "polygon_under_graph": [
    [
      "examples/mplot3d/polys3d.py",
      [
        "polygon_under_graph"
      ]
    ]
  ],
  "randrange": [
    [
      "examples/mplot3d/scatter3d.py",
      [
        "randrange"
      ]
    ]
  ],
  "annotate_axes": [
    [
      "examples/mplot3d/view_planes_3d.py",
      [
        "annotate_axes"
      ]
    ],
    [
      "examples/userdemo/demo_gridspec01.py",
      [
        "annotate_axes"
      ]
    ],
    [
      "examples/userdemo/demo_gridspec03.py",
      [
        "annotate_axes"
      ]
    ],
    [
      "tutorials/intermediate/arranging_axes.py",
      [
        "annotate_axes"
      ]
    ]
  ],
  "explode": [
    [
      "examples/mplot3d/voxels_numpy_logo.py",
      [
        "explode"
      ]
    ]
  ],
  "midpoints": [
    [
      "examples/mplot3d/voxels_rgb.py",
      [
        "midpoints"
      ]
    ],
    [
      "examples/mplot3d/voxels_torus.py",
      [
        "midpoints"
      ]
    ],
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "TestVoxels",
        "test_xyz",
        "midpoints"
      ]
    ]
  ],
  "get_transform": [
    [
      "examples/scales/custom_scale.py",
      [
        "MercatorLatitudeScale",
        "get_transform"
      ]
    ],
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "get_transform"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_transform"
      ]
    ],
    [
      "lib/matplotlib/contour.py",
      [
        "ContourSet",
        "get_transform"
      ]
    ],
    [
      "lib/matplotlib/lines.py",
      [
        "_AxLine",
        "get_transform"
      ]
    ],
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "get_transform"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "DrawingArea",
        "get_transform"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AuxTransformBox",
        "get_transform"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "get_transform"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "ScaleBase",
        "get_transform"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "LinearScale",
        "get_transform"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "FuncScale",
        "get_transform"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "LogScale",
        "get_transform"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "FuncScaleLog",
        "get_transform"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "SymmetricalLogScale",
        "get_transform"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "AsinhScale",
        "get_transform"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "LogitScale",
        "get_transform"
      ]
    ],
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_regularpolycollection_scale",
        "SquareCollection",
        "get_transform"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisArtist",
        "get_transform"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/grid_finder.py",
      [
        "GridFinder",
        "get_transform"
      ]
    ]
  ],
  "set_default_locators_and_formatters": [
    [
      "examples/scales/custom_scale.py",
      [
        "MercatorLatitudeScale",
        "set_default_locators_and_formatters"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "ScaleBase",
        "set_default_locators_and_formatters"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "LinearScale",
        "set_default_locators_and_formatters"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "FuncScale",
        "set_default_locators_and_formatters"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "LogScale",
        "set_default_locators_and_formatters"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "SymmetricalLogScale",
        "set_default_locators_and_formatters"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "AsinhScale",
        "set_default_locators_and_formatters"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "LogitScale",
        "set_default_locators_and_formatters"
      ]
    ]
  ],
  "limit_range_for_scale": [
    [
      "examples/scales/custom_scale.py",
      [
        "MercatorLatitudeScale",
        "limit_range_for_scale"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "limit_range_for_scale"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "ScaleBase",
        "limit_range_for_scale"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "LogScale",
        "limit_range_for_scale"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "LogitScale",
        "limit_range_for_scale"
      ]
    ]
  ],
  "forward": [
    [
      "examples/scales/scales.py",
      [
        "forward"
      ]
    ],
    [
      "examples/subplots_axes_and_figures/secondary_axis.py",
      [
        "forward"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "NavigationToolbar2",
        "forward"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolViewsPositions",
        "forward"
      ]
    ],
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "Stack",
        "forward"
      ]
    ]
  ],
  "inverse": [
    [
      "examples/scales/scales.py",
      [
        "inverse"
      ]
    ],
    [
      "examples/subplots_axes_and_figures/secondary_axis.py",
      [
        "inverse"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "Normalize",
        "inverse"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "TwoSlopeNorm",
        "inverse"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "_make_norm_from_scale",
        "Norm",
        "inverse"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "PowerNorm",
        "inverse"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "BoundaryNorm",
        "inverse"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "NoNorm",
        "inverse"
      ]
    ],
    [
      "tutorials/colors/colormapnorms.py",
      [
        "MidpointNormalize",
        "inverse"
      ]
    ]
  ],
  "forward_2": [
    [
      "examples/scales/scales.py",
      [
        "forward_2"
      ]
    ]
  ],
  "inverse_3": [
    [
      "examples/scales/scales.py",
      [
        "inverse_3"
      ]
    ]
  ],
  "label": [
    [
      "examples/shapes_and_collections/artist_reference.py",
      [
        "label"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "Tick",
        "label"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/mpl_axes.py",
      [
        "SimpleAxisArtist",
        "label"
      ]
    ]
  ],
  "wise": [
    [
      "examples/shapes_and_collections/donut.py",
      [
        "wise"
      ]
    ]
  ],
  "make_circle": [
    [
      "examples/shapes_and_collections/donut.py",
      [
        "make_circle"
      ]
    ]
  ],
  "add_fancy_patch_around": [
    [
      "examples/shapes_and_collections/fancybox_demo.py",
      [
        "add_fancy_patch_around"
      ]
    ]
  ],
  "draw_control_points_for_patches": [
    [
      "examples/shapes_and_collections/fancybox_demo.py",
      [
        "draw_control_points_for_patches"
      ]
    ]
  ],
  "hatches_plot": [
    [
      "examples/shapes_and_collections/hatch_style_reference.py",
      [
        "hatches_plot"
      ]
    ]
  ],
  "annotate": [
    [
      "examples/showcase/anatomy.py",
      [
        "annotate"
      ]
    ],
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "annotate"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "annotate"
      ]
    ]
  ],
  "svg_parse": [
    [
      "examples/showcase/firefox.py",
      [
        "svg_parse"
      ]
    ]
  ],
  "mandelbrot_set": [
    [
      "examples/showcase/mandelbrot.py",
      [
        "mandelbrot_set"
      ]
    ]
  ],
  "convertdate": [
    [
      "examples/showcase/stock_prices.py",
      [
        "convertdate"
      ]
    ]
  ],
  "display_colorbar": [
    [
      "examples/specialty_plots/advanced_hillshading.py",
      [
        "display_colorbar"
      ]
    ]
  ],
  "avoid_outliers": [
    [
      "examples/specialty_plots/advanced_hillshading.py",
      [
        "avoid_outliers"
      ]
    ]
  ],
  "shade_other_data": [
    [
      "examples/specialty_plots/advanced_hillshading.py",
      [
        "shade_other_data"
      ]
    ]
  ],
  "hinton": [
    [
      "examples/specialty_plots/hinton_demo.py",
      [
        "hinton"
      ]
    ]
  ],
  "bullseye_plot": [
    [
      "examples/specialty_plots/leftventricle_bulleye.py",
      [
        "bullseye_plot"
      ]
    ]
  ],
  "fill": [
    [
      "examples/specialty_plots/radar_chart.py",
      [
        "radar_factory",
        "RadarAxes",
        "fill"
      ]
    ],
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "fill"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "fill"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "GraphicsContextPdf",
        "fill"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "fill"
      ]
    ]
  ],
  "_close_line": [
    [
      "examples/specialty_plots/radar_chart.py",
      [
        "radar_factory",
        "RadarAxes",
        "_close_line"
      ]
    ]
  ],
  "set_varlabels": [
    [
      "examples/specialty_plots/radar_chart.py",
      [
        "radar_factory",
        "RadarAxes",
        "set_varlabels"
      ]
    ]
  ],
  "radar_factory": [
    [
      "examples/specialty_plots/radar_chart.py",
      [
        "radar_factory"
      ]
    ]
  ],
  "example_data": [
    [
      "examples/specialty_plots/radar_chart.py",
      [
        "example_data"
      ]
    ]
  ],
  "side": [
    [
      "examples/specialty_plots/sankey_links.py",
      [
        "side"
      ]
    ]
  ],
  "corner": [
    [
      "examples/specialty_plots/sankey_links.py",
      [
        "corner"
      ]
    ]
  ],
  "get_view_interval": [
    [
      "examples/specialty_plots/skewt.py",
      [
        "SkewXTick",
        "get_view_interval"
      ]
    ],
    [
      "examples/specialty_plots/skewt.py",
      [
        "SkewXAxis",
        "get_view_interval"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "Tick",
        "get_view_interval"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "XTick",
        "get_view_interval"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "YTick",
        "get_view_interval"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_view_interval"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "_AxisWrapper",
        "get_view_interval"
      ]
    ],
    [
      "lib/matplotlib/tests/test_skew.py",
      [
        "SkewXTick",
        "get_view_interval"
      ]
    ],
    [
      "lib/matplotlib/tests/test_skew.py",
      [
        "SkewXAxis",
        "get_view_interval"
      ]
    ],
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "FakeAxis",
        "get_view_interval"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "_DummyAxis",
        "get_view_interval"
      ]
    ]
  ],
  "_get_tick": [
    [
      "examples/specialty_plots/skewt.py",
      [
        "SkewXAxis",
        "_get_tick"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "_get_tick"
      ]
    ],
    [
      "lib/matplotlib/tests/test_skew.py",
      [
        "SkewXAxis",
        "_get_tick"
      ]
    ]
  ],
  "_adjust_location": [
    [
      "examples/specialty_plots/skewt.py",
      [
        "SkewSpine",
        "_adjust_location"
      ]
    ],
    [
      "lib/matplotlib/spines.py",
      [
        "Spine",
        "_adjust_location"
      ]
    ],
    [
      "lib/matplotlib/tests/test_skew.py",
      [
        "SkewSpine",
        "_adjust_location"
      ]
    ]
  ],
  "lower_xlim": [
    [
      "examples/specialty_plots/skewt.py",
      [
        "SkewXAxes",
        "lower_xlim"
      ]
    ],
    [
      "lib/matplotlib/tests/test_skew.py",
      [
        "SkewXAxes",
        "lower_xlim"
      ]
    ]
  ],
  "upper_xlim": [
    [
      "examples/specialty_plots/skewt.py",
      [
        "SkewXAxes",
        "upper_xlim"
      ]
    ],
    [
      "lib/matplotlib/tests/test_skew.py",
      [
        "SkewXAxes",
        "upper_xlim"
      ]
    ]
  ],
  "adjust_spines": [
    [
      "examples/spines/spine_placement_demo.py",
      [
        "adjust_spines"
      ]
    ]
  ],
  "to_ordinal": [
    [
      "examples/statistics/barchart_demo.py",
      [
        "to_ordinal"
      ]
    ]
  ],
  "format_score": [
    [
      "examples/statistics/barchart_demo.py",
      [
        "format_score"
      ]
    ]
  ],
  "plot_student_results": [
    [
      "examples/statistics/barchart_demo.py",
      [
        "plot_student_results"
      ]
    ]
  ],
  "fake_bootstrapper": [
    [
      "examples/statistics/boxplot_demo.py",
      [
        "fake_bootstrapper"
      ]
    ]
  ],
  "confidence_ellipse": [
    [
      "examples/statistics/confidence_ellipse.py",
      [
        "confidence_ellipse"
      ]
    ]
  ],
  "get_correlated_dataset": [
    [
      "examples/statistics/confidence_ellipse.py",
      [
        "get_correlated_dataset"
      ]
    ]
  ],
  "adjacent_values": [
    [
      "examples/statistics/customized_violin.py",
      [
        "adjacent_values"
      ]
    ]
  ],
  "set_axis_style": [
    [
      "examples/statistics/customized_violin.py",
      [
        "set_axis_style"
      ]
    ]
  ],
  "make_error_boxes": [
    [
      "examples/statistics/errorbars_and_boxes.py",
      [
        "make_error_boxes"
      ]
    ]
  ],
  "plot_beta_hist": [
    [
      "examples/style_sheets/bmh.py",
      [
        "plot_beta_hist"
      ]
    ]
  ],
  "color_cycle_example": [
    [
      "examples/style_sheets/grayscale.py",
      [
        "color_cycle_example"
      ]
    ]
  ],
  "image_and_patch_example": [
    [
      "examples/style_sheets/grayscale.py",
      [
        "image_and_patch_example"
      ]
    ]
  ],
  "plot_scatter": [
    [
      "examples/style_sheets/style_sheets_reference.py",
      [
        "plot_scatter"
      ]
    ]
  ],
  "plot_colored_lines": [
    [
      "examples/style_sheets/style_sheets_reference.py",
      [
        "plot_colored_lines"
      ]
    ]
  ],
  "plot_bar_graphs": [
    [
      "examples/style_sheets/style_sheets_reference.py",
      [
        "plot_bar_graphs"
      ]
    ]
  ],
  "plot_colored_circles": [
    [
      "examples/style_sheets/style_sheets_reference.py",
      [
        "plot_colored_circles"
      ]
    ]
  ],
  "plot_image_and_patch": [
    [
      "examples/style_sheets/style_sheets_reference.py",
      [
        "plot_image_and_patch"
      ]
    ]
  ],
  "plot_histograms": [
    [
      "examples/style_sheets/style_sheets_reference.py",
      [
        "plot_histograms"
      ]
    ]
  ],
  "plot_figure": [
    [
      "examples/style_sheets/style_sheets_reference.py",
      [
        "plot_figure"
      ]
    ]
  ],
  "connect_bbox": [
    [
      "examples/subplots_axes_and_figures/axes_zoom_effect.py",
      [
        "connect_bbox"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/inset_locator.py",
      [
        "BboxConnector",
        "connect_bbox"
      ]
    ]
  ],
  "zoom_effect01": [
    [
      "examples/subplots_axes_and_figures/axes_zoom_effect.py",
      [
        "zoom_effect01"
      ]
    ]
  ],
  "zoom_effect02": [
    [
      "examples/subplots_axes_and_figures/axes_zoom_effect.py",
      [
        "zoom_effect02"
      ]
    ]
  ],
  "example_plot": [
    [
      "examples/subplots_axes_and_figures/demo_constrained_layout.py",
      [
        "example_plot"
      ]
    ],
    [
      "examples/subplots_axes_and_figures/demo_tight_layout.py",
      [
        "example_plot"
      ]
    ],
    [
      "examples/subplots_axes_and_figures/subfigures.py",
      [
        "example_plot"
      ]
    ],
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "example_plot"
      ]
    ],
    [
      "lib/matplotlib/tests/test_tightlayout.py",
      [
        "example_plot"
      ]
    ],
    [
      "tutorials/intermediate/constrainedlayout_guide.py",
      [
        "example_plot"
      ]
    ],
    [
      "tutorials/intermediate/tight_layout_guide.py",
      [
        "example_plot"
      ]
    ]
  ],
  "fahrenheit2celsius": [
    [
      "examples/subplots_axes_and_figures/fahrenheit_celsius_scales.py",
      [
        "fahrenheit2celsius"
      ]
    ]
  ],
  "make_plot": [
    [
      "examples/subplots_axes_and_figures/fahrenheit_celsius_scales.py",
      [
        "make_plot"
      ]
    ],
    [
      "examples/text_labels_and_annotations/align_ylabels.py",
      [
        "make_plot"
      ]
    ]
  ],
  "deg2rad": [
    [
      "examples/subplots_axes_and_figures/secondary_axis.py",
      [
        "deg2rad"
      ]
    ]
  ],
  "rad2deg": [
    [
      "examples/subplots_axes_and_figures/secondary_axis.py",
      [
        "rad2deg"
      ]
    ]
  ],
  "one_over": [
    [
      "examples/subplots_axes_and_figures/secondary_axis.py",
      [
        "one_over"
      ]
    ]
  ],
  "date2yday": [
    [
      "examples/subplots_axes_and_figures/secondary_axis.py",
      [
        "date2yday"
      ]
    ]
  ],
  "yday2date": [
    [
      "examples/subplots_axes_and_figures/secondary_axis.py",
      [
        "yday2date"
      ]
    ]
  ],
  "celsius_to_fahrenheit": [
    [
      "examples/subplots_axes_and_figures/secondary_axis.py",
      [
        "celsius_to_fahrenheit"
      ]
    ]
  ],
  "fahrenheit_to_celsius": [
    [
      "examples/subplots_axes_and_figures/secondary_axis.py",
      [
        "fahrenheit_to_celsius"
      ]
    ]
  ],
  "celsius_to_anomaly": [
    [
      "examples/subplots_axes_and_figures/secondary_axis.py",
      [
        "celsius_to_anomaly"
      ]
    ]
  ],
  "anomaly_to_celsius": [
    [
      "examples/subplots_axes_and_figures/secondary_axis.py",
      [
        "anomaly_to_celsius"
      ]
    ]
  ],
  "get_size": [
    [
      "examples/text_labels_and_annotations/angle_annotation.py",
      [
        "AngleAnnotation",
        "get_size"
      ]
    ],
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontProperties",
        "get_size"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "_ImageBase",
        "get_size"
      ]
    ],
    [
      "lib/matplotlib/textpath.py",
      [
        "TextPath",
        "get_size"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_size.py",
      [
        "Add",
        "get_size"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_size.py",
      [
        "AddList",
        "get_size"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_size.py",
      [
        "Fixed",
        "get_size"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_size.py",
      [
        "Scaled",
        "get_size"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_size.py",
      [
        "AxesX",
        "get_size"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_size.py",
      [
        "AxesY",
        "get_size"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_size.py",
      [
        "MaxExtent",
        "get_size"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_size.py",
      [
        "Fraction",
        "get_size"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_size.py",
      [
        "Padded",
        "get_size"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_size.py",
      [
        "SizeFromFunc",
        "get_size"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_size.py",
      [
        "_AxesDecorationsSize",
        "get_size"
      ]
    ]
  ],
  "set_size": [
    [
      "examples/text_labels_and_annotations/angle_annotation.py",
      [
        "AngleAnnotation",
        "set_size"
      ]
    ],
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontProperties",
        "set_size"
      ]
    ],
    [
      "lib/matplotlib/textpath.py",
      [
        "TextPath",
        "set_size"
      ]
    ]
  ],
  "get_center_in_pixels": [
    [
      "examples/text_labels_and_annotations/angle_annotation.py",
      [
        "AngleAnnotation",
        "get_center_in_pixels"
      ]
    ]
  ],
  "set_center": [
    [
      "examples/text_labels_and_annotations/angle_annotation.py",
      [
        "AngleAnnotation",
        "set_center"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Wedge",
        "set_center"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Ellipse",
        "set_center"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Annulus",
        "set_center"
      ]
    ]
  ],
  "get_theta": [
    [
      "examples/text_labels_and_annotations/angle_annotation.py",
      [
        "AngleAnnotation",
        "get_theta"
      ]
    ]
  ],
  "get_theta1": [
    [
      "examples/text_labels_and_annotations/angle_annotation.py",
      [
        "AngleAnnotation",
        "get_theta1"
      ]
    ]
  ],
  "get_theta2": [
    [
      "examples/text_labels_and_annotations/angle_annotation.py",
      [
        "AngleAnnotation",
        "get_theta2"
      ]
    ]
  ],
  "set_theta": [
    [
      "examples/text_labels_and_annotations/angle_annotation.py",
      [
        "AngleAnnotation",
        "set_theta"
      ]
    ]
  ],
  "update_text": [
    [
      "examples/text_labels_and_annotations/angle_annotation.py",
      [
        "AngleAnnotation",
        "update_text"
      ]
    ],
    [
      "lib/matplotlib/backends/qt_editor/_formlayout.py",
      [
        "ColorLayout",
        "update_text"
      ]
    ]
  ],
  "plot_angle": [
    [
      "examples/text_labels_and_annotations/angle_annotation.py",
      [
        "plot_angle"
      ]
    ],
    [
      "lib/matplotlib/_enums.py",
      [
        "JoinStyle",
        "demo",
        "plot_angle"
      ]
    ]
  ],
  "make_arrow_graph": [
    [
      "examples/text_labels_and_annotations/arrow_demo.py",
      [
        "make_arrow_graph"
      ]
    ]
  ],
  "set_facecolor": [
    [
      "examples/text_labels_and_annotations/demo_text_path.py",
      [
        "PathClippedImagePatch",
        "set_facecolor"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "set_facecolor"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "set_facecolor"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "set_facecolor"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "set_facecolor"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Poly3DCollection",
        "set_facecolor"
      ]
    ]
  ],
  "test_rotation_mode": [
    [
      "examples/text_labels_and_annotations/demo_text_rotation_mode.py",
      [
        "test_rotation_mode"
      ]
    ]
  ],
  "print_text": [
    [
      "examples/text_labels_and_annotations/font_family_rc.py",
      [
        "print_text"
      ]
    ]
  ],
  "print_glyphs": [
    [
      "examples/text_labels_and_annotations/font_table.py",
      [
        "print_glyphs"
      ]
    ]
  ],
  "draw_font_table": [
    [
      "examples/text_labels_and_annotations/font_table.py",
      [
        "draw_font_table"
      ]
    ]
  ],
  "create_artists": [
    [
      "examples/text_labels_and_annotations/legend_demo.py",
      [
        "HandlerDashedLines",
        "create_artists"
      ]
    ],
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerBase",
        "create_artists"
      ]
    ],
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerLine2DCompound",
        "create_artists"
      ]
    ],
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerLine2D",
        "create_artists"
      ]
    ],
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerPatch",
        "create_artists"
      ]
    ],
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerStepPatch",
        "create_artists"
      ]
    ],
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerLineCollection",
        "create_artists"
      ]
    ],
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerRegularPolyCollection",
        "create_artists"
      ]
    ],
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerErrorbar",
        "create_artists"
      ]
    ],
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerStem",
        "create_artists"
      ]
    ],
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerTuple",
        "create_artists"
      ]
    ],
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerPolyCollection",
        "create_artists"
      ]
    ],
    [
      "tutorials/intermediate/legend_guide.py",
      [
        "HandlerEllipse",
        "create_artists"
      ]
    ]
  ],
  "set_figure": [
    [
      "examples/text_labels_and_annotations/line_with_text.py",
      [
        "MyLine",
        "set_figure"
      ]
    ],
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "set_figure"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "set_figure"
      ]
    ],
    [
      "lib/matplotlib/backend_managers.py",
      [
        "ToolManager",
        "set_figure"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolToggleBase",
        "set_figure"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "SetCursorBase",
        "set_figure"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolCursorPosition",
        "set_figure"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "OffsetBox",
        "set_figure"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AnnotationBbox",
        "set_figure"
      ]
    ],
    [
      "lib/matplotlib/quiver.py",
      [
        "QuiverKey",
        "set_figure"
      ]
    ],
    [
      "lib/matplotlib/table.py",
      [
        "Cell",
        "set_figure"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Annotation",
        "set_figure"
      ]
    ]
  ],
  "set_axes": [
    [
      "examples/text_labels_and_annotations/line_with_text.py",
      [
        "MyLine",
        "set_axes"
      ]
    ]
  ],
  "set_transform": [
    [
      "examples/text_labels_and_annotations/line_with_text.py",
      [
        "MyLine",
        "set_transform"
      ]
    ],
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "set_transform"
      ]
    ],
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "set_transform"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "DrawingArea",
        "set_transform"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "TextArea",
        "set_transform"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AuxTransformBox",
        "set_transform"
      ]
    ],
    [
      "lib/matplotlib/table.py",
      [
        "Cell",
        "set_transform"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/grid_finder.py",
      [
        "GridFinder",
        "set_transform"
      ]
    ]
  ],
  "set_data": [
    [
      "examples/text_labels_and_annotations/line_with_text.py",
      [
        "MyLine",
        "set_data"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "_ImageBase",
        "set_data"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "NonUniformImage",
        "set_data"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "PcolorImage",
        "set_data"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "FigureImage",
        "set_data"
      ]
    ],
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "set_data"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "OffsetImage",
        "set_data"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "StepPatch",
        "set_data"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "FancyArrow",
        "set_data"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "ToolLineHandles",
        "set_data"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "ToolHandles",
        "set_data"
      ]
    ]
  ],
  "text_to_rgba": [
    [
      "examples/text_labels_and_annotations/mathtext_asarray.py",
      [
        "text_to_rgba"
      ]
    ]
  ],
  "doall": [
    [
      "examples/text_labels_and_annotations/mathtext_examples.py",
      [
        "doall"
      ]
    ]
  ],
  "rainbow_text": [
    [
      "examples/text_labels_and_annotations/rainbow_text.py",
      [
        "rainbow_text"
      ]
    ]
  ],
  "addtext": [
    [
      "examples/text_labels_and_annotations/text_rotation.py",
      [
        "addtext"
      ]
    ]
  ],
  "setfont": [
    [
      "examples/text_labels_and_annotations/usetex_fonteffects.py",
      [
        "setfont"
      ]
    ]
  ],
  "plot_axis": [
    [
      "examples/ticks/date_formatters_locators.py",
      [
        "plot_axis"
      ]
    ]
  ],
  "format_date": [
    [
      "examples/ticks/date_index_formatter.py",
      [
        "format_date"
      ]
    ]
  ],
  "_reset_epoch_for_tutorial": [
    [
      "examples/ticks/date_precision_and_epochs.py",
      [
        "_reset_epoch_for_tutorial"
      ]
    ]
  ],
  "major_formatter": [
    [
      "examples/ticks/tick-formatters.py",
      [
        "major_formatter"
      ]
    ]
  ],
  "format_fn": [
    [
      "examples/ticks/tick_labels_from_values.py",
      [
        "format_fn"
      ]
    ]
  ],
  "__get__": [
    [
      "examples/units/basic_units.py",
      [
        "ProxyDelegate",
        "__get__"
      ]
    ],
    [
      "lib/matplotlib/_api/__init__.py",
      [
        "classproperty",
        "__get__"
      ]
    ],
    [
      "lib/matplotlib/_api/deprecation.py",
      [
        "deprecated",
        "deprecate",
        "if_isinstance_obj_type_",
        "elif_isinstance_obj_pro",
        "_deprecated_property",
        "__get__"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "_LazyTickList",
        "__get__"
      ]
    ]
  ],
  "__new__": [
    [
      "examples/units/basic_units.py",
      [
        "TaggedValue",
        "__new__"
      ]
    ],
    [
      "lib/matplotlib/container.py",
      [
        "Container",
        "__new__"
      ]
    ],
    [
      "lib/matplotlib/dviread.py",
      [
        "PsfontsMap",
        "__new__"
      ]
    ],
    [
      "lib/matplotlib/dviread.py",
      [
        "_LuatexKpsewhich",
        "__new__"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "_Style",
        "__new__"
      ]
    ],
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "QuantityND",
        "__new__"
      ]
    ],
    [
      "lib/matplotlib/texmanager.py",
      [
        "TexManager",
        "__new__"
      ]
    ]
  ],
  "__copy__": [
    [
      "examples/units/basic_units.py",
      [
        "TaggedValue",
        "__copy__"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "Colormap",
        "__copy__"
      ]
    ],
    [
      "lib/matplotlib/tests/test_units.py",
      [
        "Quantity",
        "__copy__"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "TransformNode",
        "__copy__"
      ]
    ]
  ],
  "__getattribute__": [
    [
      "examples/units/basic_units.py",
      [
        "TaggedValue",
        "__getattribute__"
      ]
    ],
    [
      "lib/matplotlib/patheffects.py",
      [
        "PathEffectRenderer",
        "__getattribute__"
      ]
    ]
  ],
  "__array__": [
    [
      "examples/units/basic_units.py",
      [
        "TaggedValue",
        "__array__"
      ]
    ],
    [
      "examples/units/basic_units.py",
      [
        "BasicUnit",
        "__array__"
      ]
    ],
    [
      "lib/matplotlib/tests/test_units.py",
      [
        "Quantity",
        "__array__"
      ]
    ],
    [
      "lib/matplotlib/tests/test_units.py",
      [
        "Kernel",
        "__array__"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "__array__"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Transform",
        "__array__"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "AffineBase",
        "__array__"
      ]
    ]
  ],
  "__array_wrap__": [
    [
      "examples/units/basic_units.py",
      [
        "TaggedValue",
        "__array_wrap__"
      ]
    ],
    [
      "examples/units/basic_units.py",
      [
        "BasicUnit",
        "__array_wrap__"
      ]
    ]
  ],
  "__repr__": [
    [
      "examples/units/basic_units.py",
      [
        "TaggedValue",
        "__repr__"
      ]
    ],
    [
      "examples/units/basic_units.py",
      [
        "BasicUnit",
        "__repr__"
      ]
    ],
    [
      "lib/matplotlib/__init__.py",
      [
        "RcParams",
        "__repr__"
      ]
    ],
    [
      "lib/matplotlib/_api/deprecation.py",
      [
        "_deprecated_parameter_class",
        "__repr__"
      ]
    ],
    [
      "lib/matplotlib/_layoutgrid.py",
      [
        "LayoutGrid",
        "__repr__"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Node",
        "__repr__"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Char",
        "__repr__"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "List",
        "__repr__"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Kern",
        "__repr__"
      ]
    ],
    [
      "lib/matplotlib/artist.py",
      [
        "_Unset",
        "__repr__"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "__repr__"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "ArtistList",
        "__repr__"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "Reference",
        "__repr__"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "Name",
        "__repr__"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "Operator",
        "__repr__"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "GraphicsContextPdf",
        "__repr__"
      ]
    ],
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "silent_list",
        "__repr__"
      ]
    ],
    [
      "lib/matplotlib/container.py",
      [
        "Container",
        "__repr__"
      ]
    ],
    [
      "lib/matplotlib/dviread.py",
      [
        "DviFont",
        "__repr__"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "__repr__"
      ]
    ],
    [
      "lib/matplotlib/gridspec.py",
      [
        "GridSpecBase",
        "__repr__"
      ]
    ],
    [
      "lib/matplotlib/gridspec.py",
      [
        "SubplotSpec",
        "__repr__"
      ]
    ],
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "__repr__"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/Duration.py",
      [
        "Duration",
        "__repr__"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/Epoch.py",
      [
        "Epoch",
        "__repr__"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/UnitDbl.py",
      [
        "UnitDbl",
        "__repr__"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "__repr__"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "__repr__"
      ]
    ],
    [
      "tools/boilerplate.py",
      [
        "value_formatter",
        "__repr__"
      ]
    ]
  ],
  "__str__": [
    [
      "examples/units/basic_units.py",
      [
        "TaggedValue",
        "__str__"
      ]
    ],
    [
      "examples/units/basic_units.py",
      [
        "BasicUnit",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/__init__.py",
      [
        "RcParams",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/_type1font.py",
      [
        "_Token",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "MouseEvent",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "_Mode",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "Name",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "LatexError",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/cm.py",
      [
        "ColormapRegistry",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "ColorSequenceRegistry",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontProperties",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "_ImageBase",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AnnotationBbox",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Shadow",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Rectangle",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "RegularPolygon",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "PathPatch",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Polygon",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Wedge",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Arrow",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "FancyArrow",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "CirclePolygon",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Ellipse",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Annulus",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Circle",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Arc",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "FancyBboxPatch",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "FancyArrowPatch",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "ConnectionPatch",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/projections/geo.py",
      [
        "_GeoTransform",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "LogTransform",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "InvertedLogTransform",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "LogitTransform",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/scale.py",
      [
        "LogisticTransform",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/spines.py",
      [
        "Spine",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/Duration.py",
      [
        "Duration",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/Epoch.py",
      [
        "Epoch",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/UnitDbl.py",
      [
        "UnitDbl",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Annotation",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Affine2D",
        "__str__"
      ]
    ],
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "_Sparse_Matrix_coo",
        "__str__"
      ]
    ],
    [
      "tools/run_examples.py",
      [
        "RunInfo",
        "__str__"
      ]
    ]
  ],
  "__len__": [
    [
      "examples/units/basic_units.py",
      [
        "TaggedValue",
        "__len__"
      ]
    ],
    [
      "lib/matplotlib/__init__.py",
      [
        "RcParams",
        "__len__"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "ArtistList",
        "__len__"
      ]
    ],
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "Stack",
        "__len__"
      ]
    ],
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_OrderedSet",
        "__len__"
      ]
    ],
    [
      "lib/matplotlib/cm.py",
      [
        "ColormapRegistry",
        "__len__"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "ColorSequenceRegistry",
        "__len__"
      ]
    ],
    [
      "lib/matplotlib/legend_handler.py",
      [
        "_Line2DHandleList",
        "__len__"
      ]
    ],
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "__len__"
      ]
    ],
    [
      "lib/matplotlib/spines.py",
      [
        "Spines",
        "__len__"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_grid.py",
      [
        "Grid",
        "__len__"
      ]
    ]
  ],
  "__iter__": [
    [
      "examples/units/basic_units.py",
      [
        "TaggedValue",
        "__iter__"
      ]
    ],
    [
      "lib/matplotlib/__init__.py",
      [
        "RcParams",
        "__iter__"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "MovieWriterRegistry",
        "__iter__"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "ArtistList",
        "__iter__"
      ]
    ],
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "Grouper",
        "__iter__"
      ]
    ],
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_OrderedSet",
        "__iter__"
      ]
    ],
    [
      "lib/matplotlib/cm.py",
      [
        "ColormapRegistry",
        "__iter__"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "ColorSequenceRegistry",
        "__iter__"
      ]
    ],
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "__iter__"
      ]
    ],
    [
      "lib/matplotlib/spines.py",
      [
        "Spines",
        "__iter__"
      ]
    ],
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_reshape2d",
        "ArraySubclass",
        "__iter__"
      ]
    ]
  ],
  "get_compressed_copy": [
    [
      "examples/units/basic_units.py",
      [
        "TaggedValue",
        "get_compressed_copy"
      ]
    ]
  ],
  "convert_to": [
    [
      "examples/units/basic_units.py",
      [
        "TaggedValue",
        "convert_to"
      ]
    ]
  ],
  "get_value": [
    [
      "examples/units/basic_units.py",
      [
        "TaggedValue",
        "get_value"
      ]
    ]
  ],
  "get_unit": [
    [
      "examples/units/basic_units.py",
      [
        "TaggedValue",
        "get_unit"
      ]
    ],
    [
      "examples/units/basic_units.py",
      [
        "BasicUnit",
        "get_unit"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "OffsetFrom",
        "get_unit"
      ]
    ]
  ],
  "__mul__": [
    [
      "examples/units/basic_units.py",
      [
        "BasicUnit",
        "__mul__"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/Duration.py",
      [
        "Duration",
        "__mul__"
      ]
    ]
  ],
  "__rmul__": [
    [
      "examples/units/basic_units.py",
      [
        "BasicUnit",
        "__rmul__"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_size.py",
      [
        "_Base",
        "__rmul__"
      ]
    ]
  ],
  "add_conversion_factor": [
    [
      "examples/units/basic_units.py",
      [
        "BasicUnit",
        "add_conversion_factor"
      ]
    ]
  ],
  "add_conversion_fn": [
    [
      "examples/units/basic_units.py",
      [
        "BasicUnit",
        "add_conversion_fn"
      ]
    ]
  ],
  "get_conversion_fn": [
    [
      "examples/units/basic_units.py",
      [
        "BasicUnit",
        "get_conversion_fn"
      ]
    ]
  ],
  "convert_value_to": [
    [
      "examples/units/basic_units.py",
      [
        "BasicUnit",
        "convert_value_to"
      ]
    ]
  ],
  "addition_rule": [
    [
      "examples/units/basic_units.py",
      [
        "UnitResolver",
        "addition_rule"
      ]
    ]
  ],
  "multiplication_rule": [
    [
      "examples/units/basic_units.py",
      [
        "UnitResolver",
        "multiplication_rule"
      ]
    ]
  ],
  "rad_fn": [
    [
      "examples/units/basic_units.py",
      [
        "rad_fn"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/UnitDblConverter.py",
      [
        "rad_fn"
      ]
    ]
  ],
  "axisinfo": [
    [
      "examples/units/basic_units.py",
      [
        "BasicUnitConverter",
        "axisinfo"
      ]
    ],
    [
      "examples/units/evans_test.py",
      [
        "FooConverter",
        "axisinfo"
      ]
    ],
    [
      "lib/matplotlib/category.py",
      [
        "StrCategoryConverter",
        "axisinfo"
      ]
    ],
    [
      "lib/matplotlib/dates.py",
      [
        "DateConverter",
        "axisinfo"
      ]
    ],
    [
      "lib/matplotlib/dates.py",
      [
        "ConciseDateConverter",
        "axisinfo"
      ]
    ],
    [
      "lib/matplotlib/dates.py",
      [
        "_SwitchableDateConverter",
        "axisinfo"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/EpochConverter.py",
      [
        "EpochConverter",
        "axisinfo"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/StrConverter.py",
      [
        "StrConverter",
        "axisinfo"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/UnitDblConverter.py",
      [
        "UnitDblConverter",
        "axisinfo"
      ]
    ],
    [
      "lib/matplotlib/units.py",
      [
        "ConversionInterface",
        "axisinfo"
      ]
    ]
  ],
  "convert": [
    [
      "examples/units/basic_units.py",
      [
        "BasicUnitConverter",
        "convert"
      ]
    ],
    [
      "examples/units/evans_test.py",
      [
        "FooConverter",
        "convert"
      ]
    ],
    [
      "lib/matplotlib/category.py",
      [
        "StrCategoryConverter",
        "convert"
      ]
    ],
    [
      "lib/matplotlib/dates.py",
      [
        "DateConverter",
        "convert"
      ]
    ],
    [
      "lib/matplotlib/dates.py",
      [
        "_SwitchableDateConverter",
        "convert"
      ]
    ],
    [
      "lib/matplotlib/testing/compare.py",
      [
        "convert"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/Epoch.py",
      [
        "Epoch",
        "convert"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/EpochConverter.py",
      [
        "EpochConverter",
        "convert"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/StrConverter.py",
      [
        "StrConverter",
        "convert"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/UnitDbl.py",
      [
        "UnitDbl",
        "convert"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/UnitDblConverter.py",
      [
        "UnitDblConverter",
        "convert"
      ]
    ],
    [
      "lib/matplotlib/tests/test_type1font.py",
      [
        "test_tokenize",
        "convert"
      ]
    ],
    [
      "lib/matplotlib/tests/test_units.py",
      [
        "quantity_converter",
        "convert"
      ]
    ],
    [
      "lib/matplotlib/units.py",
      [
        "ConversionInterface",
        "convert"
      ]
    ],
    [
      "lib/matplotlib/units.py",
      [
        "DecimalConverter",
        "convert"
      ]
    ]
  ],
  "default_units": [
    [
      "examples/units/basic_units.py",
      [
        "BasicUnitConverter",
        "default_units"
      ]
    ],
    [
      "examples/units/evans_test.py",
      [
        "FooConverter",
        "default_units"
      ]
    ],
    [
      "lib/matplotlib/category.py",
      [
        "StrCategoryConverter",
        "default_units"
      ]
    ],
    [
      "lib/matplotlib/dates.py",
      [
        "DateConverter",
        "default_units"
      ]
    ],
    [
      "lib/matplotlib/dates.py",
      [
        "_SwitchableDateConverter",
        "default_units"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/EpochConverter.py",
      [
        "EpochConverter",
        "default_units"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/StrConverter.py",
      [
        "StrConverter",
        "default_units"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/UnitDblConverter.py",
      [
        "UnitDblConverter",
        "default_units"
      ]
    ],
    [
      "lib/matplotlib/tests/test_units.py",
      [
        "quantity_converter",
        "default_units"
      ]
    ],
    [
      "lib/matplotlib/units.py",
      [
        "ConversionInterface",
        "default_units"
      ]
    ]
  ],
  "cos": [
    [
      "examples/units/basic_units.py",
      [
        "cos"
      ]
    ]
  ],
  "value": [
    [
      "examples/units/evans_test.py",
      [
        "Foo",
        "value"
      ]
    ],
    [
      "lib/matplotlib/_type1font.py",
      [
        "_Token",
        "value"
      ]
    ],
    [
      "lib/matplotlib/_type1font.py",
      [
        "_NameToken",
        "value"
      ]
    ],
    [
      "lib/matplotlib/_type1font.py",
      [
        "_BooleanToken",
        "value"
      ]
    ],
    [
      "lib/matplotlib/_type1font.py",
      [
        "_StringToken",
        "value"
      ]
    ],
    [
      "lib/matplotlib/_type1font.py",
      [
        "_BinaryToken",
        "value"
      ]
    ],
    [
      "lib/matplotlib/_type1font.py",
      [
        "_NumberToken",
        "value"
      ]
    ]
  ],
  "on_activate": [
    [
      "examples/user_interfaces/embedding_in_gtk4_panzoom_sgskip.py",
      [
        "on_activate"
      ]
    ],
    [
      "examples/user_interfaces/embedding_in_gtk4_sgskip.py",
      [
        "on_activate"
      ]
    ],
    [
      "examples/user_interfaces/gtk4_spreadsheet_sgskip.py",
      [
        "on_activate"
      ]
    ]
  ],
  "_update_canvas": [
    [
      "examples/user_interfaces/embedding_in_qt_sgskip.py",
      [
        "ApplicationWindow",
        "_update_canvas"
      ]
    ]
  ],
  "update_frequency": [
    [
      "examples/user_interfaces/embedding_in_tk_sgskip.py",
      [
        "update_frequency"
      ]
    ]
  ],
  "add_toolbar": [
    [
      "examples/user_interfaces/embedding_in_wx2_sgskip.py",
      [
        "CanvasFrame",
        "add_toolbar"
      ]
    ],
    [
      "examples/user_interfaces/mathtext_wx_sgskip.py",
      [
        "CanvasFrame",
        "add_toolbar"
      ]
    ]
  ],
  "OnInit": [
    [
      "examples/user_interfaces/embedding_in_wx2_sgskip.py",
      [
        "App",
        "OnInit"
      ]
    ],
    [
      "examples/user_interfaces/embedding_in_wx3_sgskip.py",
      [
        "MyApp",
        "OnInit"
      ]
    ],
    [
      "examples/user_interfaces/embedding_in_wx4_sgskip.py",
      [
        "App",
        "OnInit"
      ]
    ],
    [
      "examples/user_interfaces/fourier_demo_wx_sgskip.py",
      [
        "App",
        "OnInit"
      ]
    ],
    [
      "examples/user_interfaces/mathtext_wx_sgskip.py",
      [
        "MyApp",
        "OnInit"
      ]
    ],
    [
      "examples/user_interfaces/wxcursor_demo_sgskip.py",
      [
        "App",
        "OnInit"
      ]
    ]
  ],
  "init_plot_data": [
    [
      "examples/user_interfaces/embedding_in_wx3_sgskip.py",
      [
        "PlotPanel",
        "init_plot_data"
      ]
    ]
  ],
  "GetToolBar": [
    [
      "examples/user_interfaces/embedding_in_wx3_sgskip.py",
      [
        "PlotPanel",
        "GetToolBar"
      ]
    ]
  ],
  "OnWhiz": [
    [
      "examples/user_interfaces/embedding_in_wx3_sgskip.py",
      [
        "PlotPanel",
        "OnWhiz"
      ]
    ]
  ],
  "OnBang": [
    [
      "examples/user_interfaces/embedding_in_wx3_sgskip.py",
      [
        "MyApp",
        "OnBang"
      ]
    ]
  ],
  "_on_custom": [
    [
      "examples/user_interfaces/embedding_in_wx4_sgskip.py",
      [
        "MyNavigationToolbar",
        "_on_custom"
      ]
    ]
  ],
  "add": [
    [
      "examples/user_interfaces/embedding_in_wx5_sgskip.py",
      [
        "PlotNotebook",
        "add"
      ]
    ],
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_OrderedSet",
        "add"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "_AxesStack",
        "add"
      ]
    ],
    [
      "lib/matplotlib/sankey.py",
      [
        "Sankey",
        "add"
      ]
    ]
  ],
  "create_figure": [
    [
      "examples/user_interfaces/embedding_webagg_sgskip.py",
      [
        "create_figure"
      ]
    ],
    [
      "lib/matplotlib/tests/test_backend_pgf.py",
      [
        "create_figure"
      ]
    ]
  ],
  "get": [
    [
      "examples/user_interfaces/embedding_webagg_sgskip.py",
      [
        "MyApplication",
        "MainPage",
        "get"
      ]
    ],
    [
      "examples/user_interfaces/embedding_webagg_sgskip.py",
      [
        "MyApplication",
        "MplJs",
        "get"
      ]
    ],
    [
      "examples/user_interfaces/embedding_webagg_sgskip.py",
      [
        "MyApplication",
        "Download",
        "get"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg.py",
      [
        "WebAggApplication",
        "FavIcon",
        "get"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg.py",
      [
        "WebAggApplication",
        "SingleFigurePage",
        "get"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg.py",
      [
        "WebAggApplication",
        "AllFiguresPage",
        "get"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg.py",
      [
        "WebAggApplication",
        "MplJs",
        "get"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg.py",
      [
        "WebAggApplication",
        "Download",
        "get"
      ]
    ],
    [
      "lib/matplotlib/backends/qt_editor/_formlayout.py",
      [
        "FormWidget",
        "get"
      ]
    ],
    [
      "lib/matplotlib/backends/qt_editor/_formlayout.py",
      [
        "FormComboWidget",
        "get"
      ]
    ],
    [
      "lib/matplotlib/backends/qt_editor/_formlayout.py",
      [
        "FormTabWidget",
        "get"
      ]
    ],
    [
      "lib/matplotlib/backends/qt_editor/_formlayout.py",
      [
        "FormDialog",
        "get"
      ]
    ],
    [
      "lib/matplotlib/layout_engine.py",
      [
        "LayoutEngine",
        "get"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "get"
      ]
    ]
  ],
  "open": [
    [
      "examples/user_interfaces/embedding_webagg_sgskip.py",
      [
        "MyApplication",
        "WebSocket",
        "open"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg.py",
      [
        "WebAggApplication",
        "WebSocket",
        "open"
      ]
    ]
  ],
  "on_message": [
    [
      "examples/user_interfaces/embedding_webagg_sgskip.py",
      [
        "MyApplication",
        "WebSocket",
        "on_message"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_nbagg.py",
      [
        "CommSocket",
        "on_message"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg.py",
      [
        "WebAggApplication",
        "WebSocket",
        "on_message"
      ]
    ]
  ],
  "send_json": [
    [
      "examples/user_interfaces/embedding_webagg_sgskip.py",
      [
        "MyApplication",
        "WebSocket",
        "send_json"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_nbagg.py",
      [
        "CommSocket",
        "send_json"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg.py",
      [
        "WebAggApplication",
        "WebSocket",
        "send_json"
      ]
    ]
  ],
  "send_binary": [
    [
      "examples/user_interfaces/embedding_webagg_sgskip.py",
      [
        "MyApplication",
        "WebSocket",
        "send_binary"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_nbagg.py",
      [
        "CommSocket",
        "send_binary"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg.py",
      [
        "WebAggApplication",
        "WebSocket",
        "send_binary"
      ]
    ]
  ],
  "shutdown": [
    [
      "examples/user_interfaces/embedding_webagg_sgskip.py",
      [
        "if___name_____main___",
        "shutdown"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg.py",
      [
        "WebAggApplication",
        "start",
        "shutdown"
      ]
    ]
  ],
  "setKnob": [
    [
      "examples/user_interfaces/fourier_demo_wx_sgskip.py",
      [
        "Knob",
        "setKnob"
      ]
    ],
    [
      "examples/user_interfaces/fourier_demo_wx_sgskip.py",
      [
        "SliderGroup",
        "setKnob"
      ]
    ],
    [
      "examples/user_interfaces/fourier_demo_wx_sgskip.py",
      [
        "FourierDemoFrame",
        "setKnob"
      ]
    ]
  ],
  "attach": [
    [
      "examples/user_interfaces/fourier_demo_wx_sgskip.py",
      [
        "Param",
        "attach"
      ]
    ]
  ],
  "set": [
    [
      "examples/user_interfaces/fourier_demo_wx_sgskip.py",
      [
        "Param",
        "set"
      ]
    ],
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "set"
      ]
    ],
    [
      "lib/matplotlib/dates.py",
      [
        "rrulewrapper",
        "set"
      ]
    ],
    [
      "lib/matplotlib/layout_engine.py",
      [
        "LayoutEngine",
        "set"
      ]
    ],
    [
      "lib/matplotlib/layout_engine.py",
      [
        "TightLayoutEngine",
        "set"
      ]
    ],
    [
      "lib/matplotlib/layout_engine.py",
      [
        "ConstrainedLayoutEngine",
        "set"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "set"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "TransformWrapper",
        "set"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Affine2D",
        "set"
      ]
    ]
  ],
  "constrain": [
    [
      "examples/user_interfaces/fourier_demo_wx_sgskip.py",
      [
        "Param",
        "constrain"
      ]
    ]
  ],
  "sliderHandler": [
    [
      "examples/user_interfaces/fourier_demo_wx_sgskip.py",
      [
        "SliderGroup",
        "sliderHandler"
      ]
    ]
  ],
  "sliderTextHandler": [
    [
      "examples/user_interfaces/fourier_demo_wx_sgskip.py",
      [
        "SliderGroup",
        "sliderTextHandler"
      ]
    ]
  ],
  "createCanvas": [
    [
      "examples/user_interfaces/fourier_demo_wx_sgskip.py",
      [
        "FourierDemoFrame",
        "createCanvas"
      ]
    ]
  ],
  "createSliders": [
    [
      "examples/user_interfaces/fourier_demo_wx_sgskip.py",
      [
        "FourierDemoFrame",
        "createSliders"
      ]
    ]
  ],
  "mouseDown": [
    [
      "examples/user_interfaces/fourier_demo_wx_sgskip.py",
      [
        "FourierDemoFrame",
        "mouseDown"
      ]
    ]
  ],
  "mouseMotion": [
    [
      "examples/user_interfaces/fourier_demo_wx_sgskip.py",
      [
        "FourierDemoFrame",
        "mouseMotion"
      ]
    ]
  ],
  "mouseUp": [
    [
      "examples/user_interfaces/fourier_demo_wx_sgskip.py",
      [
        "FourierDemoFrame",
        "mouseUp"
      ]
    ]
  ],
  "createPlots": [
    [
      "examples/user_interfaces/fourier_demo_wx_sgskip.py",
      [
        "FourierDemoFrame",
        "createPlots"
      ]
    ]
  ],
  "compute": [
    [
      "examples/user_interfaces/fourier_demo_wx_sgskip.py",
      [
        "FourierDemoFrame",
        "compute"
      ]
    ]
  ],
  "plot_row": [
    [
      "examples/user_interfaces/gtk3_spreadsheet_sgskip.py",
      [
        "DataManager",
        "plot_row"
      ]
    ],
    [
      "examples/user_interfaces/gtk4_spreadsheet_sgskip.py",
      [
        "DataManager",
        "plot_row"
      ]
    ]
  ],
  "add_columns": [
    [
      "examples/user_interfaces/gtk3_spreadsheet_sgskip.py",
      [
        "DataManager",
        "add_columns"
      ]
    ],
    [
      "examples/user_interfaces/gtk4_spreadsheet_sgskip.py",
      [
        "DataManager",
        "add_columns"
      ]
    ]
  ],
  "create_model": [
    [
      "examples/user_interfaces/gtk3_spreadsheet_sgskip.py",
      [
        "DataManager",
        "create_model"
      ]
    ],
    [
      "examples/user_interfaces/gtk4_spreadsheet_sgskip.py",
      [
        "DataManager",
        "create_model"
      ]
    ]
  ],
  "mathtext_to_wxbitmap": [
    [
      "examples/user_interfaces/mathtext_wx_sgskip.py",
      [
        "mathtext_to_wxbitmap"
      ]
    ]
  ],
  "add_buttonbar": [
    [
      "examples/user_interfaces/mathtext_wx_sgskip.py",
      [
        "CanvasFrame",
        "add_buttonbar"
      ]
    ]
  ],
  "OnChangePlot": [
    [
      "examples/user_interfaces/mathtext_wx_sgskip.py",
      [
        "CanvasFrame",
        "OnChangePlot"
      ]
    ]
  ],
  "change_plot": [
    [
      "examples/user_interfaces/mathtext_wx_sgskip.py",
      [
        "CanvasFrame",
        "change_plot"
      ]
    ]
  ],
  "OnClose": [
    [
      "examples/user_interfaces/mathtext_wx_sgskip.py",
      [
        "CanvasFrame",
        "OnClose"
      ]
    ]
  ],
  "on_window1_destroy": [
    [
      "examples/user_interfaces/mpl_with_glade3_sgskip.py",
      [
        "Window1Signals",
        "on_window1_destroy"
      ]
    ]
  ],
  "trigger": [
    [
      "examples/user_interfaces/toolmanager_sgskip.py",
      [
        "ListTools",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolBase",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolToggleBase",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "RubberbandBase",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolQuit",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolQuitAll",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolGrid",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolMinorGrid",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolFullScreen",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "AxisScaleBase",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ViewsPositionsBase",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ZoomPanBase",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolCopyToClipboardBase",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_gtk.py",
      [
        "ConfigureSubplotsGTK",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "SaveFigureTk",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "ConfigureSubplotsTk",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "HelpTk",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "SaveFigureGTK3",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "HelpGTK3",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "ToolCopyToClipboardGTK3",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "SaveFigureGTK4",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "HelpGTK4",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "ToolCopyToClipboardGTK4",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "ConfigureSubplotsQt",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "SaveFigureQt",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "HelpQt",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "ToolCopyToClipboardQT",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "ConfigureSubplotsWx",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "SaveFigureWx",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "HelpWx",
        "trigger"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "ToolCopyToClipboardWx",
        "trigger"
      ]
    ]
  ],
  "enable": [
    [
      "examples/user_interfaces/toolmanager_sgskip.py",
      [
        "GroupHideTool",
        "enable"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolToggleBase",
        "enable"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "AxisScaleBase",
        "enable"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ZoomPanBase",
        "enable"
      ]
    ]
  ],
  "disable": [
    [
      "examples/user_interfaces/toolmanager_sgskip.py",
      [
        "GroupHideTool",
        "disable"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolToggleBase",
        "disable"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "AxisScaleBase",
        "disable"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ZoomPanBase",
        "disable"
      ]
    ]
  ],
  "set_lines_visibility": [
    [
      "examples/user_interfaces/toolmanager_sgskip.py",
      [
        "GroupHideTool",
        "set_lines_visibility"
      ]
    ]
  ],
  "hello": [
    [
      "examples/user_interfaces/web_application_server_sgskip.py",
      [
        "hello"
      ]
    ]
  ],
  "ChangeCursor": [
    [
      "examples/user_interfaces/wxcursor_demo_sgskip.py",
      [
        "CanvasFrame",
        "ChangeCursor"
      ]
    ]
  ],
  "UpdateStatusBar": [
    [
      "examples/user_interfaces/wxcursor_demo_sgskip.py",
      [
        "CanvasFrame",
        "UpdateStatusBar"
      ]
    ]
  ],
  "demo_con_style": [
    [
      "examples/userdemo/connectionstyle_demo.py",
      [
        "demo_con_style"
      ]
    ]
  ],
  "custom_box_style": [
    [
      "examples/userdemo/custom_boxstyle01.py",
      [
        "custom_box_style"
      ]
    ]
  ],
  "squiggle_xy": [
    [
      "examples/userdemo/demo_gridspec06.py",
      [
        "squiggle_xy"
      ]
    ],
    [
      "tutorials/intermediate/arranging_axes.py",
      [
        "squiggle_xy"
      ]
    ]
  ],
  "onmove": [
    [
      "examples/widgets/annotated_cursor.py",
      [
        "AnnotatedCursor",
        "onmove"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "Cursor",
        "onmove"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "MultiCursor",
        "onmove"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "onmove"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "PolygonSelector",
        "onmove"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "Lasso",
        "onmove"
      ]
    ]
  ],
  "set_position": [
    [
      "examples/widgets/annotated_cursor.py",
      [
        "AnnotatedCursor",
        "set_position"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "set_position"
      ]
    ],
    [
      "lib/matplotlib/spines.py",
      [
        "Spine",
        "set_position"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "set_position"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "Divider",
        "set_position"
      ]
    ]
  ],
  "_update": [
    [
      "examples/widgets/annotated_cursor.py",
      [
        "AnnotatedCursor",
        "_update"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "Slider",
        "_update"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "RangeSlider",
        "_update"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "Cursor",
        "_update"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "MultiCursor",
        "_update"
      ]
    ]
  ],
  "next": [
    [
      "examples/widgets/buttons.py",
      [
        "Index",
        "next"
      ]
    ]
  ],
  "prev": [
    [
      "examples/widgets/buttons.py",
      [
        "Index",
        "prev"
      ]
    ]
  ],
  "onselect": [
    [
      "examples/widgets/lasso_selector_demo_sgskip.py",
      [
        "SelectFromCollection",
        "onselect"
      ]
    ],
    [
      "examples/widgets/polygon_selector_demo.py",
      [
        "SelectFromCollection",
        "onselect"
      ]
    ],
    [
      "examples/widgets/span_selector.py",
      [
        "onselect"
      ]
    ]
  ],
  "disconnect": [
    [
      "examples/widgets/lasso_selector_demo_sgskip.py",
      [
        "SelectFromCollection",
        "disconnect"
      ]
    ],
    [
      "examples/widgets/polygon_selector_demo.py",
      [
        "SelectFromCollection",
        "disconnect"
      ]
    ],
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "CallbackRegistry",
        "disconnect"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "DraggableBase",
        "disconnect"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "disconnect"
      ]
    ],
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "Test_callback_registry",
        "disconnect"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "Button",
        "disconnect"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "SliderBase",
        "disconnect"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "CheckButtons",
        "disconnect"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "TextBox",
        "disconnect"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "RadioButtons",
        "disconnect"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "MultiCursor",
        "disconnect"
      ]
    ]
  ],
  "accept": [
    [
      "examples/widgets/lasso_selector_demo_sgskip.py",
      [
        "if___name_____main___",
        "accept"
      ]
    ],
    [
      "lib/matplotlib/backends/qt_editor/_formlayout.py",
      [
        "FormDialog",
        "accept"
      ]
    ],
    [
      "tools/triage_tests.py",
      [
        "Entry",
        "accept"
      ]
    ]
  ],
  "check_select": [
    [
      "examples/widgets/menu.py",
      [
        "MenuItem",
        "check_select"
      ]
    ]
  ],
  "set_extent": [
    [
      "examples/widgets/menu.py",
      [
        "MenuItem",
        "set_extent"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "AxesImage",
        "set_extent"
      ]
    ]
  ],
  "set_hover_props": [
    [
      "examples/widgets/menu.py",
      [
        "MenuItem",
        "set_hover_props"
      ]
    ]
  ],
  "set_hover": [
    [
      "examples/widgets/menu.py",
      [
        "MenuItem",
        "set_hover"
      ]
    ]
  ],
  "hover": [
    [
      "examples/widgets/mouse_cursor.py",
      [
        "hover"
      ]
    ]
  ],
  "hzfunc": [
    [
      "examples/widgets/radio_buttons.py",
      [
        "hzfunc"
      ]
    ]
  ],
  "colorfunc": [
    [
      "examples/widgets/radio_buttons.py",
      [
        "colorfunc"
      ]
    ]
  ],
  "stylefunc": [
    [
      "examples/widgets/radio_buttons.py",
      [
        "stylefunc"
      ]
    ]
  ],
  "select_callback": [
    [
      "examples/widgets/rectangle_selector.py",
      [
        "select_callback"
      ]
    ]
  ],
  "toggle_selector": [
    [
      "examples/widgets/rectangle_selector.py",
      [
        "toggle_selector"
      ]
    ]
  ],
  "reset": [
    [
      "examples/widgets/slider_demo.py",
      [
        "reset"
      ]
    ],
    [
      "examples/widgets/slider_snap_demo.py",
      [
        "reset"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "SliderBase",
        "reset"
      ]
    ]
  ],
  "submit": [
    [
      "examples/widgets/textbox.py",
      [
        "submit"
      ]
    ]
  ],
  "_parse_to_version_info": [
    [
      "lib/matplotlib/__init__.py",
      [
        "_parse_to_version_info"
      ]
    ]
  ],
  "_get_version": [
    [
      "lib/matplotlib/__init__.py",
      [
        "_get_version"
      ]
    ]
  ],
  "_check_versions": [
    [
      "lib/matplotlib/__init__.py",
      [
        "_check_versions"
      ]
    ]
  ],
  "_ensure_handler": [
    [
      "lib/matplotlib/__init__.py",
      [
        "_ensure_handler"
      ]
    ]
  ],
  "set_loglevel": [
    [
      "lib/matplotlib/__init__.py",
      [
        "set_loglevel"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "set_loglevel"
      ]
    ]
  ],
  "wrapper": [
    [
      "lib/matplotlib/__init__.py",
      [
        "_logged_cached",
        "wrapper"
      ]
    ],
    [
      "lib/matplotlib/_api/deprecation.py",
      [
        "deprecated",
        "deprecate",
        "wrapper"
      ]
    ],
    [
      "lib/matplotlib/_api/deprecation.py",
      [
        "rename_parameter",
        "wrapper"
      ]
    ],
    [
      "lib/matplotlib/_api/deprecation.py",
      [
        "delete_parameter",
        "wrapper"
      ]
    ],
    [
      "lib/matplotlib/_api/deprecation.py",
      [
        "make_keyword_only",
        "wrapper"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_axis_method_wrapper",
        "__set_name__",
        "wrapper"
      ]
    ],
    [
      "lib/matplotlib/testing/decorators.py",
      [
        "_pytest_image_comparison",
        "decorator",
        "wrapper"
      ]
    ],
    [
      "lib/matplotlib/testing/decorators.py",
      [
        "check_figures_equal",
        "decorator",
        "wrapper"
      ]
    ]
  ],
  "_logged_cached": [
    [
      "lib/matplotlib/__init__.py",
      [
        "_logged_cached"
      ]
    ]
  ],
  "impl": [
    [
      "lib/matplotlib/__init__.py",
      [
        "_get_executable_info",
        "impl"
      ]
    ]
  ],
  "_get_executable_info": [
    [
      "lib/matplotlib/__init__.py",
      [
        "_get_executable_info"
      ]
    ]
  ],
  "checkdep_usetex": [
    [
      "lib/matplotlib/__init__.py",
      [
        "checkdep_usetex"
      ]
    ]
  ],
  "_get_xdg_config_dir": [
    [
      "lib/matplotlib/__init__.py",
      [
        "_get_xdg_config_dir"
      ]
    ]
  ],
  "_get_xdg_cache_dir": [
    [
      "lib/matplotlib/__init__.py",
      [
        "_get_xdg_cache_dir"
      ]
    ],
    [
      "setupext.py",
      [
        "_get_xdg_cache_dir"
      ]
    ],
    [
      "tools/cache_zenodo_svg.py",
      [
        "_get_xdg_cache_dir"
      ]
    ]
  ],
  "_get_config_or_cache_dir": [
    [
      "lib/matplotlib/__init__.py",
      [
        "_get_config_or_cache_dir"
      ]
    ]
  ],
  "get_configdir": [
    [
      "lib/matplotlib/__init__.py",
      [
        "get_configdir"
      ]
    ]
  ],
  "get_cachedir": [
    [
      "lib/matplotlib/__init__.py",
      [
        "get_cachedir"
      ]
    ]
  ],
  "get_data_path": [
    [
      "lib/matplotlib/__init__.py",
      [
        "get_data_path"
      ]
    ]
  ],
  "gen_candidates": [
    [
      "lib/matplotlib/__init__.py",
      [
        "matplotlib_fname",
        "gen_candidates"
      ]
    ]
  ],
  "matplotlib_fname": [
    [
      "lib/matplotlib/__init__.py",
      [
        "matplotlib_fname"
      ]
    ]
  ],
  "__setitem__": [
    [
      "lib/matplotlib/__init__.py",
      [
        "RcParams",
        "__setitem__"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "ArtistList",
        "__setitem__"
      ]
    ],
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "maxdict",
        "__setitem__"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "_ColorMapping",
        "__setitem__"
      ]
    ],
    [
      "lib/matplotlib/spines.py",
      [
        "Spines",
        "__setitem__"
      ]
    ],
    [
      "lib/matplotlib/table.py",
      [
        "Table",
        "__setitem__"
      ]
    ]
  ],
  "__getitem__": [
    [
      "lib/matplotlib/__init__.py",
      [
        "RcParams",
        "__getitem__"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "MovieWriterRegistry",
        "__getitem__"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "ArtistList",
        "__getitem__"
      ]
    ],
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "Stack",
        "__getitem__"
      ]
    ],
    [
      "lib/matplotlib/cm.py",
      [
        "ColormapRegistry",
        "__getitem__"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "ColorSequenceRegistry",
        "__getitem__"
      ]
    ],
    [
      "lib/matplotlib/dviread.py",
      [
        "Vf",
        "__getitem__"
      ]
    ],
    [
      "lib/matplotlib/dviread.py",
      [
        "PsfontsMap",
        "__getitem__"
      ]
    ],
    [
      "lib/matplotlib/gridspec.py",
      [
        "GridSpecBase",
        "__getitem__"
      ]
    ],
    [
      "lib/matplotlib/legend_handler.py",
      [
        "_Line2DHandleList",
        "__getitem__"
      ]
    ],
    [
      "lib/matplotlib/spines.py",
      [
        "Spines",
        "__getitem__"
      ]
    ],
    [
      "lib/matplotlib/streamplot.py",
      [
        "StreamMask",
        "__getitem__"
      ]
    ],
    [
      "lib/matplotlib/table.py",
      [
        "Table",
        "__getitem__"
      ]
    ],
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_reshape2d",
        "ArraySubclass",
        "__getitem__"
      ]
    ],
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_iterability_axes_argument",
        "MyClass",
        "__getitem__"
      ]
    ],
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "QuantityND",
        "__getitem__"
      ]
    ],
    [
      "lib/matplotlib/tests/test_units.py",
      [
        "Quantity",
        "__getitem__"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_grid.py",
      [
        "Grid",
        "__getitem__"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/mpl_axes.py",
      [
        "Axes",
        "AxisDict",
        "__getitem__"
      ]
    ]
  ],
  "_get_backend_or_none": [
    [
      "lib/matplotlib/__init__.py",
      [
        "RcParams",
        "_get_backend_or_none"
      ]
    ]
  ],
  "find_all": [
    [
      "lib/matplotlib/__init__.py",
      [
        "RcParams",
        "find_all"
      ]
    ]
  ],
  "copy": [
    [
      "lib/matplotlib/__init__.py",
      [
        "RcParams",
        "copy"
      ]
    ],
    [
      "lib/matplotlib/_docstring.py",
      [
        "copy"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "ParserState",
        "copy"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "Colormap",
        "copy"
      ]
    ],
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontProperties",
        "copy"
      ]
    ],
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "copy"
      ]
    ]
  ],
  "rc_params": [
    [
      "lib/matplotlib/__init__.py",
      [
        "rc_params"
      ]
    ]
  ],
  "is_url": [
    [
      "lib/matplotlib/__init__.py",
      [
        "is_url"
      ]
    ]
  ],
  "_get_ssl_context": [
    [
      "lib/matplotlib/__init__.py",
      [
        "_get_ssl_context"
      ]
    ],
    [
      "setupext.py",
      [
        "_get_ssl_context"
      ]
    ]
  ],
  "_open_file_or_url": [
    [
      "lib/matplotlib/__init__.py",
      [
        "_open_file_or_url"
      ]
    ]
  ],
  "_rc_params_in_file": [
    [
      "lib/matplotlib/__init__.py",
      [
        "_rc_params_in_file"
      ]
    ]
  ],
  "rc_params_from_file": [
    [
      "lib/matplotlib/__init__.py",
      [
        "rc_params_from_file"
      ]
    ]
  ],
  "rc": [
    [
      "lib/matplotlib/__init__.py",
      [
        "rc"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "rc"
      ]
    ]
  ],
  "rcdefaults": [
    [
      "lib/matplotlib/__init__.py",
      [
        "rcdefaults"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "rcdefaults"
      ]
    ]
  ],
  "rc_file_defaults": [
    [
      "lib/matplotlib/__init__.py",
      [
        "rc_file_defaults"
      ]
    ]
  ],
  "rc_file": [
    [
      "lib/matplotlib/__init__.py",
      [
        "rc_file"
      ]
    ]
  ],
  "rc_context": [
    [
      "lib/matplotlib/__init__.py",
      [
        "rc_context"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "rc_context"
      ]
    ]
  ],
  "use": [
    [
      "lib/matplotlib/__init__.py",
      [
        "use"
      ]
    ],
    [
      "lib/matplotlib/style/core.py",
      [
        "use"
      ]
    ]
  ],
  "get_backend": [
    [
      "lib/matplotlib/__init__.py",
      [
        "get_backend"
      ]
    ]
  ],
  "interactive": [
    [
      "lib/matplotlib/__init__.py",
      [
        "interactive"
      ]
    ]
  ],
  "is_interactive": [
    [
      "lib/matplotlib/__init__.py",
      [
        "is_interactive"
      ]
    ]
  ],
  "_init_tests": [
    [
      "lib/matplotlib/__init__.py",
      [
        "_init_tests"
      ]
    ]
  ],
  "test": [
    [
      "lib/matplotlib/__init__.py",
      [
        "test"
      ]
    ]
  ],
  "_replacer": [
    [
      "lib/matplotlib/__init__.py",
      [
        "_replacer"
      ]
    ]
  ],
  "_label_from_arg": [
    [
      "lib/matplotlib/__init__.py",
      [
        "_label_from_arg"
      ]
    ]
  ],
  "_add_data_doc": [
    [
      "lib/matplotlib/__init__.py",
      [
        "_add_data_doc"
      ]
    ]
  ],
  "inner": [
    [
      "lib/matplotlib/__init__.py",
      [
        "_preprocess_data",
        "inner"
      ]
    ]
  ],
  "_preprocess_data": [
    [
      "lib/matplotlib/__init__.py",
      [
        "_preprocess_data"
      ]
    ]
  ],
  "_to_int": [
    [
      "lib/matplotlib/_afm.py",
      [
        "_to_int"
      ]
    ]
  ],
  "_to_float": [
    [
      "lib/matplotlib/_afm.py",
      [
        "_to_float"
      ]
    ]
  ],
  "_to_str": [
    [
      "lib/matplotlib/_afm.py",
      [
        "_to_str"
      ]
    ]
  ],
  "_to_list_of_ints": [
    [
      "lib/matplotlib/_afm.py",
      [
        "_to_list_of_ints"
      ]
    ]
  ],
  "_to_list_of_floats": [
    [
      "lib/matplotlib/_afm.py",
      [
        "_to_list_of_floats"
      ]
    ]
  ],
  "_to_bool": [
    [
      "lib/matplotlib/_afm.py",
      [
        "_to_bool"
      ]
    ]
  ],
  "_parse_header": [
    [
      "lib/matplotlib/_afm.py",
      [
        "_parse_header"
      ]
    ]
  ],
  "_parse_char_metrics": [
    [
      "lib/matplotlib/_afm.py",
      [
        "_parse_char_metrics"
      ]
    ]
  ],
  "_parse_kern_pairs": [
    [
      "lib/matplotlib/_afm.py",
      [
        "_parse_kern_pairs"
      ]
    ]
  ],
  "_parse_composites": [
    [
      "lib/matplotlib/_afm.py",
      [
        "_parse_composites"
      ]
    ]
  ],
  "_parse_optional": [
    [
      "lib/matplotlib/_afm.py",
      [
        "_parse_optional"
      ]
    ]
  ],
  "get_bbox_char": [
    [
      "lib/matplotlib/_afm.py",
      [
        "AFM",
        "get_bbox_char"
      ]
    ]
  ],
  "string_width_height": [
    [
      "lib/matplotlib/_afm.py",
      [
        "AFM",
        "string_width_height"
      ]
    ]
  ],
  "get_str_bbox_and_descent": [
    [
      "lib/matplotlib/_afm.py",
      [
        "AFM",
        "get_str_bbox_and_descent"
      ]
    ]
  ],
  "get_str_bbox": [
    [
      "lib/matplotlib/_afm.py",
      [
        "AFM",
        "get_str_bbox"
      ]
    ]
  ],
  "get_name_char": [
    [
      "lib/matplotlib/_afm.py",
      [
        "AFM",
        "get_name_char"
      ]
    ]
  ],
  "get_width_char": [
    [
      "lib/matplotlib/_afm.py",
      [
        "AFM",
        "get_width_char"
      ]
    ]
  ],
  "get_width_from_char_name": [
    [
      "lib/matplotlib/_afm.py",
      [
        "AFM",
        "get_width_from_char_name"
      ]
    ]
  ],
  "get_height_char": [
    [
      "lib/matplotlib/_afm.py",
      [
        "AFM",
        "get_height_char"
      ]
    ]
  ],
  "get_kern_dist": [
    [
      "lib/matplotlib/_afm.py",
      [
        "AFM",
        "get_kern_dist"
      ]
    ]
  ],
  "get_kern_dist_from_name": [
    [
      "lib/matplotlib/_afm.py",
      [
        "AFM",
        "get_kern_dist_from_name"
      ]
    ]
  ],
  "get_fontname": [
    [
      "lib/matplotlib/_afm.py",
      [
        "AFM",
        "get_fontname"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "get_fontname"
      ]
    ]
  ],
  "postscript_name": [
    [
      "lib/matplotlib/_afm.py",
      [
        "AFM",
        "postscript_name"
      ]
    ]
  ],
  "get_fullname": [
    [
      "lib/matplotlib/_afm.py",
      [
        "AFM",
        "get_fullname"
      ]
    ]
  ],
  "get_familyname": [
    [
      "lib/matplotlib/_afm.py",
      [
        "AFM",
        "get_familyname"
      ]
    ]
  ],
  "family_name": [
    [
      "lib/matplotlib/_afm.py",
      [
        "AFM",
        "family_name"
      ]
    ]
  ],
  "get_weight": [
    [
      "lib/matplotlib/_afm.py",
      [
        "AFM",
        "get_weight"
      ]
    ],
    [
      "lib/matplotlib/font_manager.py",
      [
        "ttfFontProperty",
        "get_weight"
      ]
    ],
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontProperties",
        "get_weight"
      ]
    ]
  ],
  "get_angle": [
    [
      "lib/matplotlib/_afm.py",
      [
        "AFM",
        "get_angle"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Rectangle",
        "get_angle"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Ellipse",
        "get_angle"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Annulus",
        "get_angle"
      ]
    ]
  ],
  "get_capheight": [
    [
      "lib/matplotlib/_afm.py",
      [
        "AFM",
        "get_capheight"
      ]
    ]
  ],
  "get_xheight": [
    [
      "lib/matplotlib/_afm.py",
      [
        "AFM",
        "get_xheight"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Fonts",
        "get_xheight"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "TruetypeFonts",
        "get_xheight"
      ]
    ]
  ],
  "get_underline_thickness": [
    [
      "lib/matplotlib/_afm.py",
      [
        "AFM",
        "get_underline_thickness"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Fonts",
        "get_underline_thickness"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "TruetypeFonts",
        "get_underline_thickness"
      ]
    ]
  ],
  "get_horizontal_stem_width": [
    [
      "lib/matplotlib/_afm.py",
      [
        "AFM",
        "get_horizontal_stem_width"
      ]
    ]
  ],
  "get_vertical_stem_width": [
    [
      "lib/matplotlib/_afm.py",
      [
        "AFM",
        "get_vertical_stem_width"
      ]
    ]
  ],
  "fget": [
    [
      "lib/matplotlib/_api/__init__.py",
      [
        "classproperty",
        "fget"
      ]
    ]
  ],
  "type_name": [
    [
      "lib/matplotlib/_api/__init__.py",
      [
        "check_isinstance",
        "type_name"
      ]
    ]
  ],
  "check_isinstance": [
    [
      "lib/matplotlib/_api/__init__.py",
      [
        "check_isinstance"
      ]
    ]
  ],
  "check_in_list": [
    [
      "lib/matplotlib/_api/__init__.py",
      [
        "check_in_list"
      ]
    ]
  ],
  "check_shape": [
    [
      "lib/matplotlib/_api/__init__.py",
      [
        "check_shape"
      ]
    ]
  ],
  "check_getitem": [
    [
      "lib/matplotlib/_api/__init__.py",
      [
        "check_getitem"
      ]
    ]
  ],
  "__getattr__": [
    [
      "lib/matplotlib/_api/__init__.py",
      [
        "caching_module_getattr",
        "__getattr__"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_mixed.py",
      [
        "MixedModeRenderer",
        "__getattr__"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt5.py",
      [
        "__getattr__"
      ]
    ],
    [
      "lib/matplotlib/dates.py",
      [
        "rrulewrapper",
        "__getattr__"
      ]
    ],
    [
      "lib/matplotlib/spines.py",
      [
        "SpinesProxy",
        "__getattr__"
      ]
    ],
    [
      "lib/matplotlib/spines.py",
      [
        "Spines",
        "__getattr__"
      ]
    ],
    [
      "lib/matplotlib/tests/test_units.py",
      [
        "Quantity",
        "__getattr__"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/mpl_axes.py",
      [
        "SimpleChainedObjects",
        "__getattr__"
      ]
    ],
    [
      "tools/gh_api.py",
      [
        "Obj",
        "__getattr__"
      ]
    ]
  ],
  "caching_module_getattr": [
    [
      "lib/matplotlib/_api/__init__.py",
      [
        "caching_module_getattr"
      ]
    ]
  ],
  "make_alias": [
    [
      "lib/matplotlib/_api/__init__.py",
      [
        "define_aliases",
        "make_alias"
      ]
    ]
  ],
  "get_aliased_and_aliases": [
    [
      "lib/matplotlib/_api/__init__.py",
      [
        "define_aliases",
        "get_aliased_and_aliases"
      ]
    ]
  ],
  "define_aliases": [
    [
      "lib/matplotlib/_api/__init__.py",
      [
        "define_aliases"
      ]
    ]
  ],
  "select_matching_signature": [
    [
      "lib/matplotlib/_api/__init__.py",
      [
        "select_matching_signature"
      ]
    ]
  ],
  "recursive_subclasses": [
    [
      "lib/matplotlib/_api/__init__.py",
      [
        "recursive_subclasses"
      ]
    ]
  ],
  "warn_external": [
    [
      "lib/matplotlib/_api/__init__.py",
      [
        "warn_external"
      ]
    ]
  ],
  "_generate_deprecation_warning": [
    [
      "lib/matplotlib/_api/deprecation.py",
      [
        "_generate_deprecation_warning"
      ]
    ]
  ],
  "warn_deprecated": [
    [
      "lib/matplotlib/_api/deprecation.py",
      [
        "warn_deprecated"
      ]
    ]
  ],
  "finalize": [
    [
      "lib/matplotlib/_api/deprecation.py",
      [
        "deprecated",
        "deprecate",
        "if_isinstance_obj_type_",
        "finalize"
      ]
    ],
    [
      "lib/matplotlib/_api/deprecation.py",
      [
        "deprecated",
        "deprecate",
        "if_isinstance_obj_type_",
        "elif_isinstance_obj_pro",
        "finalize"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "finalize"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "RendererPdf",
        "finalize"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "GraphicsContextPdf",
        "finalize"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "finalize"
      ]
    ]
  ],
  "__set__": [
    [
      "lib/matplotlib/_api/deprecation.py",
      [
        "deprecated",
        "deprecate",
        "if_isinstance_obj_type_",
        "elif_isinstance_obj_pro",
        "_deprecated_property",
        "__set__"
      ]
    ]
  ],
  "__delete__": [
    [
      "lib/matplotlib/_api/deprecation.py",
      [
        "deprecated",
        "deprecate",
        "if_isinstance_obj_type_",
        "elif_isinstance_obj_pro",
        "_deprecated_property",
        "__delete__"
      ]
    ]
  ],
  "__set_name__": [
    [
      "lib/matplotlib/_api/deprecation.py",
      [
        "deprecated",
        "deprecate",
        "if_isinstance_obj_type_",
        "elif_isinstance_obj_pro",
        "_deprecated_property",
        "__set_name__"
      ]
    ],
    [
      "lib/matplotlib/_api/deprecation.py",
      [
        "deprecate_privatize_attribute",
        "__set_name__"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_axis_method_wrapper",
        "__set_name__"
      ]
    ],
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "GrouperView",
        "_GrouperMethodForwarder",
        "__set_name__"
      ]
    ]
  ],
  "emit_warning": [
    [
      "lib/matplotlib/_api/deprecation.py",
      [
        "deprecated",
        "deprecate",
        "emit_warning"
      ]
    ]
  ],
  "deprecate": [
    [
      "lib/matplotlib/_api/deprecation.py",
      [
        "deprecated",
        "deprecate"
      ]
    ]
  ],
  "deprecated": [
    [
      "lib/matplotlib/_api/deprecation.py",
      [
        "deprecated"
      ]
    ]
  ],
  "rename_parameter": [
    [
      "lib/matplotlib/_api/deprecation.py",
      [
        "rename_parameter"
      ]
    ]
  ],
  "delete_parameter": [
    [
      "lib/matplotlib/_api/deprecation.py",
      [
        "delete_parameter"
      ]
    ]
  ],
  "make_keyword_only": [
    [
      "lib/matplotlib/_api/deprecation.py",
      [
        "make_keyword_only"
      ]
    ]
  ],
  "empty": [
    [
      "lib/matplotlib/_api/deprecation.py",
      [
        "deprecate_method_override",
        "empty"
      ]
    ],
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "Stack",
        "empty"
      ]
    ]
  ],
  "empty_with_docstring": [
    [
      "lib/matplotlib/_api/deprecation.py",
      [
        "deprecate_method_override",
        "empty_with_docstring"
      ]
    ]
  ],
  "deprecate_method_override": [
    [
      "lib/matplotlib/_api/deprecation.py",
      [
        "deprecate_method_override"
      ]
    ]
  ],
  "suppress_matplotlib_deprecation_warning": [
    [
      "lib/matplotlib/_api/deprecation.py",
      [
        "suppress_matplotlib_deprecation_warning"
      ]
    ]
  ],
  "blocking_input_loop": [
    [
      "lib/matplotlib/_blocking_input.py",
      [
        "blocking_input_loop"
      ]
    ]
  ],
  "_flag_red": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_flag_red"
      ]
    ]
  ],
  "_flag_green": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_flag_green"
      ]
    ]
  ],
  "_flag_blue": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_flag_blue"
      ]
    ]
  ],
  "_prism_red": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_prism_red"
      ]
    ]
  ],
  "_prism_green": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_prism_green"
      ]
    ]
  ],
  "_prism_blue": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_prism_blue"
      ]
    ]
  ],
  "_ch_helper": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_ch_helper"
      ]
    ]
  ],
  "cubehelix": [
    [
      "lib/matplotlib/_cm.py",
      [
        "cubehelix"
      ]
    ]
  ],
  "_g0": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g0"
      ]
    ]
  ],
  "_g1": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g1"
      ]
    ]
  ],
  "_g2": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g2"
      ]
    ]
  ],
  "_g3": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g3"
      ]
    ]
  ],
  "_g4": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g4"
      ]
    ]
  ],
  "_g5": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g5"
      ]
    ]
  ],
  "_g6": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g6"
      ]
    ]
  ],
  "_g7": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g7"
      ]
    ]
  ],
  "_g8": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g8"
      ]
    ]
  ],
  "_g9": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g9"
      ]
    ]
  ],
  "_g10": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g10"
      ]
    ]
  ],
  "_g11": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g11"
      ]
    ]
  ],
  "_g12": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g12"
      ]
    ]
  ],
  "_g13": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g13"
      ]
    ]
  ],
  "_g14": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g14"
      ]
    ]
  ],
  "_g15": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g15"
      ]
    ]
  ],
  "_g16": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g16"
      ]
    ]
  ],
  "_g17": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g17"
      ]
    ]
  ],
  "_g18": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g18"
      ]
    ]
  ],
  "_g19": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g19"
      ]
    ]
  ],
  "_g20": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g20"
      ]
    ]
  ],
  "_g21": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g21"
      ]
    ]
  ],
  "_g22": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g22"
      ]
    ]
  ],
  "_g23": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g23"
      ]
    ]
  ],
  "_g24": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g24"
      ]
    ]
  ],
  "_g25": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g25"
      ]
    ]
  ],
  "_g26": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g26"
      ]
    ]
  ],
  "_g27": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g27"
      ]
    ]
  ],
  "_g28": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g28"
      ]
    ]
  ],
  "_g29": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g29"
      ]
    ]
  ],
  "_g30": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g30"
      ]
    ]
  ],
  "_g31": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g31"
      ]
    ]
  ],
  "_g32": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g32"
      ]
    ]
  ],
  "_g33": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g33"
      ]
    ]
  ],
  "_g34": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g34"
      ]
    ]
  ],
  "_g35": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g35"
      ]
    ]
  ],
  "_g36": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_g36"
      ]
    ]
  ],
  "_gist_heat_red": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_gist_heat_red"
      ]
    ]
  ],
  "_gist_heat_green": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_gist_heat_green"
      ]
    ]
  ],
  "_gist_heat_blue": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_gist_heat_blue"
      ]
    ]
  ],
  "_gist_yarg": [
    [
      "lib/matplotlib/_cm.py",
      [
        "_gist_yarg"
      ]
    ]
  ],
  "do_constrained_layout": [
    [
      "lib/matplotlib/_constrained_layout.py",
      [
        "do_constrained_layout"
      ]
    ]
  ],
  "make_layoutgrids": [
    [
      "lib/matplotlib/_constrained_layout.py",
      [
        "make_layoutgrids"
      ]
    ]
  ],
  "make_layoutgrids_gs": [
    [
      "lib/matplotlib/_constrained_layout.py",
      [
        "make_layoutgrids_gs"
      ]
    ]
  ],
  "check_no_collapsed_axes": [
    [
      "lib/matplotlib/_constrained_layout.py",
      [
        "check_no_collapsed_axes"
      ]
    ]
  ],
  "compress_fixed_aspect": [
    [
      "lib/matplotlib/_constrained_layout.py",
      [
        "compress_fixed_aspect"
      ]
    ]
  ],
  "get_margin_from_padding": [
    [
      "lib/matplotlib/_constrained_layout.py",
      [
        "get_margin_from_padding"
      ]
    ]
  ],
  "make_layout_margins": [
    [
      "lib/matplotlib/_constrained_layout.py",
      [
        "make_layout_margins"
      ]
    ]
  ],
  "make_margin_suptitles": [
    [
      "lib/matplotlib/_constrained_layout.py",
      [
        "make_margin_suptitles"
      ]
    ]
  ],
  "match_submerged_margins": [
    [
      "lib/matplotlib/_constrained_layout.py",
      [
        "match_submerged_margins"
      ]
    ]
  ],
  "get_cb_parent_spans": [
    [
      "lib/matplotlib/_constrained_layout.py",
      [
        "get_cb_parent_spans"
      ]
    ]
  ],
  "get_pos_and_bbox": [
    [
      "lib/matplotlib/_constrained_layout.py",
      [
        "get_pos_and_bbox"
      ]
    ]
  ],
  "reposition_axes": [
    [
      "lib/matplotlib/_constrained_layout.py",
      [
        "reposition_axes"
      ]
    ]
  ],
  "reposition_colorbar": [
    [
      "lib/matplotlib/_constrained_layout.py",
      [
        "reposition_colorbar"
      ]
    ]
  ],
  "reset_margins": [
    [
      "lib/matplotlib/_constrained_layout.py",
      [
        "reset_margins"
      ]
    ],
    [
      "lib/matplotlib/_layoutgrid.py",
      [
        "LayoutGrid",
        "reset_margins"
      ]
    ]
  ],
  "colorbar_get_pad": [
    [
      "lib/matplotlib/_constrained_layout.py",
      [
        "colorbar_get_pad"
      ]
    ]
  ],
  "__missing__": [
    [
      "lib/matplotlib/_docstring.py",
      [
        "_ArtistKwdocLoader",
        "__missing__"
      ]
    ]
  ],
  "_generate_next_value_": [
    [
      "lib/matplotlib/_enums.py",
      [
        "_AutoStringNameEnum",
        "_generate_next_value_"
      ]
    ]
  ],
  "__hash__": [
    [
      "lib/matplotlib/_enums.py",
      [
        "_AutoStringNameEnum",
        "__hash__"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "Name",
        "__hash__"
      ]
    ],
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_StrongRef",
        "__hash__"
      ]
    ],
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontProperties",
        "__hash__"
      ]
    ],
    [
      "lib/matplotlib/gridspec.py",
      [
        "SubplotSpec",
        "__hash__"
      ]
    ]
  ],
  "parse": [
    [
      "lib/matplotlib/_fontconfig_pattern.py",
      [
        "FontconfigPatternParser",
        "parse"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "parse"
      ]
    ],
    [
      "lib/matplotlib/mathtext.py",
      [
        "MathTextParser",
        "parse"
      ]
    ]
  ],
  "_family": [
    [
      "lib/matplotlib/_fontconfig_pattern.py",
      [
        "FontconfigPatternParser",
        "_family"
      ]
    ]
  ],
  "_size": [
    [
      "lib/matplotlib/_fontconfig_pattern.py",
      [
        "FontconfigPatternParser",
        "_size"
      ]
    ]
  ],
  "_name": [
    [
      "lib/matplotlib/_fontconfig_pattern.py",
      [
        "FontconfigPatternParser",
        "_name"
      ]
    ]
  ],
  "_value": [
    [
      "lib/matplotlib/_fontconfig_pattern.py",
      [
        "FontconfigPatternParser",
        "_value"
      ]
    ]
  ],
  "_families": [
    [
      "lib/matplotlib/_fontconfig_pattern.py",
      [
        "FontconfigPatternParser",
        "_families"
      ]
    ]
  ],
  "_point_sizes": [
    [
      "lib/matplotlib/_fontconfig_pattern.py",
      [
        "FontconfigPatternParser",
        "_point_sizes"
      ]
    ]
  ],
  "_property": [
    [
      "lib/matplotlib/_fontconfig_pattern.py",
      [
        "FontconfigPatternParser",
        "_property"
      ]
    ]
  ],
  "_escape_val": [
    [
      "lib/matplotlib/_fontconfig_pattern.py",
      [
        "_escape_val"
      ]
    ]
  ],
  "generate_fontconfig_pattern": [
    [
      "lib/matplotlib/_fontconfig_pattern.py",
      [
        "generate_fontconfig_pattern"
      ]
    ]
  ],
  "recurse": [
    [
      "lib/matplotlib/_internal_utils.py",
      [
        "graphviz_dump_transform",
        "recurse"
      ]
    ],
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "print_cycles",
        "recurse"
      ]
    ]
  ],
  "graphviz_dump_transform": [
    [
      "lib/matplotlib/_internal_utils.py",
      [
        "graphviz_dump_transform"
      ]
    ]
  ],
  "add_constraints": [
    [
      "lib/matplotlib/_layoutgrid.py",
      [
        "LayoutGrid",
        "add_constraints"
      ]
    ]
  ],
  "hard_constraints": [
    [
      "lib/matplotlib/_layoutgrid.py",
      [
        "LayoutGrid",
        "hard_constraints"
      ]
    ]
  ],
  "add_child": [
    [
      "lib/matplotlib/_layoutgrid.py",
      [
        "LayoutGrid",
        "add_child"
      ]
    ]
  ],
  "parent_constraints": [
    [
      "lib/matplotlib/_layoutgrid.py",
      [
        "LayoutGrid",
        "parent_constraints"
      ]
    ]
  ],
  "grid_constraints": [
    [
      "lib/matplotlib/_layoutgrid.py",
      [
        "LayoutGrid",
        "grid_constraints"
      ]
    ]
  ],
  "edit_margin": [
    [
      "lib/matplotlib/_layoutgrid.py",
      [
        "LayoutGrid",
        "edit_margin"
      ]
    ]
  ],
  "edit_margin_min": [
    [
      "lib/matplotlib/_layoutgrid.py",
      [
        "LayoutGrid",
        "edit_margin_min"
      ]
    ]
  ],
  "edit_margins": [
    [
      "lib/matplotlib/_layoutgrid.py",
      [
        "LayoutGrid",
        "edit_margins"
      ]
    ]
  ],
  "edit_all_margins_min": [
    [
      "lib/matplotlib/_layoutgrid.py",
      [
        "LayoutGrid",
        "edit_all_margins_min"
      ]
    ]
  ],
  "edit_outer_margin_mins": [
    [
      "lib/matplotlib/_layoutgrid.py",
      [
        "LayoutGrid",
        "edit_outer_margin_mins"
      ]
    ]
  ],
  "get_margins": [
    [
      "lib/matplotlib/_layoutgrid.py",
      [
        "LayoutGrid",
        "get_margins"
      ]
    ]
  ],
  "get_outer_bbox": [
    [
      "lib/matplotlib/_layoutgrid.py",
      [
        "LayoutGrid",
        "get_outer_bbox"
      ]
    ]
  ],
  "get_inner_bbox": [
    [
      "lib/matplotlib/_layoutgrid.py",
      [
        "LayoutGrid",
        "get_inner_bbox"
      ]
    ]
  ],
  "get_bbox_for_cb": [
    [
      "lib/matplotlib/_layoutgrid.py",
      [
        "LayoutGrid",
        "get_bbox_for_cb"
      ]
    ]
  ],
  "get_left_margin_bbox": [
    [
      "lib/matplotlib/_layoutgrid.py",
      [
        "LayoutGrid",
        "get_left_margin_bbox"
      ]
    ]
  ],
  "get_bottom_margin_bbox": [
    [
      "lib/matplotlib/_layoutgrid.py",
      [
        "LayoutGrid",
        "get_bottom_margin_bbox"
      ]
    ]
  ],
  "get_right_margin_bbox": [
    [
      "lib/matplotlib/_layoutgrid.py",
      [
        "LayoutGrid",
        "get_right_margin_bbox"
      ]
    ]
  ],
  "get_top_margin_bbox": [
    [
      "lib/matplotlib/_layoutgrid.py",
      [
        "LayoutGrid",
        "get_top_margin_bbox"
      ]
    ]
  ],
  "update_variables": [
    [
      "lib/matplotlib/_layoutgrid.py",
      [
        "LayoutGrid",
        "update_variables"
      ]
    ]
  ],
  "seq_id": [
    [
      "lib/matplotlib/_layoutgrid.py",
      [
        "seq_id"
      ]
    ]
  ],
  "plot_children": [
    [
      "lib/matplotlib/_layoutgrid.py",
      [
        "plot_children"
      ]
    ]
  ],
  "get_unicode_index": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "get_unicode_index"
      ]
    ]
  ],
  "to_vector": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Output",
        "to_vector"
      ]
    ]
  ],
  "to_raster": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Output",
        "to_raster"
      ]
    ]
  ],
  "get_kern": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Fonts",
        "get_kern"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "TruetypeFonts",
        "get_kern"
      ]
    ]
  ],
  "get_metrics": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Fonts",
        "get_metrics"
      ]
    ]
  ],
  "render_glyph": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Fonts",
        "render_glyph"
      ]
    ],
    [
      "lib/matplotlib/mathtext.py",
      [
        "MathtextBackend",
        "render_glyph"
      ]
    ],
    [
      "lib/matplotlib/mathtext.py",
      [
        "MathtextBackendAgg",
        "render_glyph"
      ]
    ],
    [
      "lib/matplotlib/mathtext.py",
      [
        "MathtextBackendPath",
        "render_glyph"
      ]
    ]
  ],
  "render_rect_filled": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Fonts",
        "render_rect_filled"
      ]
    ],
    [
      "lib/matplotlib/mathtext.py",
      [
        "MathtextBackend",
        "render_rect_filled"
      ]
    ],
    [
      "lib/matplotlib/mathtext.py",
      [
        "MathtextBackendAgg",
        "render_rect_filled"
      ]
    ],
    [
      "lib/matplotlib/mathtext.py",
      [
        "MathtextBackendPath",
        "render_rect_filled"
      ]
    ]
  ],
  "get_used_characters": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Fonts",
        "get_used_characters"
      ]
    ]
  ],
  "get_sized_alternatives_for_symbol": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Fonts",
        "get_sized_alternatives_for_symbol"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "BakomaFonts",
        "get_sized_alternatives_for_symbol"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "UnicodeFonts",
        "get_sized_alternatives_for_symbol"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "StixFonts",
        "get_sized_alternatives_for_symbol"
      ]
    ]
  ],
  "_get_font": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "TruetypeFonts",
        "_get_font"
      ]
    ],
    [
      "lib/matplotlib/font_manager.py",
      [
        "_get_font"
      ]
    ],
    [
      "lib/matplotlib/textpath.py",
      [
        "TextToPath",
        "_get_font"
      ]
    ]
  ],
  "_get_offset": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "TruetypeFonts",
        "_get_offset"
      ]
    ]
  ],
  "_get_info": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "TruetypeFonts",
        "_get_info"
      ]
    ]
  ],
  "_get_glyph": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "BakomaFonts",
        "_get_glyph"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "UnicodeFonts",
        "_get_glyph"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "DejaVuFonts",
        "_get_glyph"
      ]
    ]
  ],
  "_map_virtual_font": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "UnicodeFonts",
        "_map_virtual_font"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "StixFonts",
        "_map_virtual_font"
      ]
    ]
  ],
  "_get_font_constant_set": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "_get_font_constant_set"
      ]
    ]
  ],
  "get_kerning": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Node",
        "get_kerning"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Char",
        "get_kerning"
      ]
    ]
  ],
  "shrink": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Node",
        "shrink"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Box",
        "shrink"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Char",
        "shrink"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Accent",
        "shrink"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "List",
        "shrink"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Glue",
        "shrink"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Kern",
        "shrink"
      ]
    ]
  ],
  "render": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Node",
        "render"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Box",
        "render"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Char",
        "render"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Accent",
        "render"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Rule",
        "render"
      ]
    ]
  ],
  "_update_metrics": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Char",
        "_update_metrics"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Accent",
        "_update_metrics"
      ]
    ]
  ],
  "is_slanted": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Char",
        "is_slanted"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "is_slanted"
      ]
    ]
  ],
  "_set_glue": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "List",
        "_set_glue"
      ]
    ]
  ],
  "kern": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Hlist",
        "kern"
      ]
    ]
  ],
  "hpack": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Hlist",
        "hpack"
      ]
    ]
  ],
  "vpack": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Vlist",
        "vpack"
      ]
    ]
  ],
  "clamp": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "ship",
        "clamp"
      ]
    ]
  ],
  "hlist_out": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "ship",
        "hlist_out"
      ]
    ]
  ],
  "vlist_out": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "ship",
        "vlist_out"
      ]
    ]
  ],
  "ship": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "ship"
      ]
    ]
  ],
  "Error": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Error"
      ]
    ]
  ],
  "font": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "ParserState",
        "font"
      ]
    ],
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "font"
      ]
    ]
  ],
  "font_2": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "ParserState",
        "font_2"
      ]
    ]
  ],
  "get_current_underline_thickness": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "ParserState",
        "get_current_underline_thickness"
      ]
    ]
  ],
  "cmd": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "cmd"
      ]
    ]
  ],
  "set_names_and_parse_actions": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "__init__",
        "set_names_and_parse_actions"
      ]
    ]
  ],
  "csnames": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "__init__",
        "csnames"
      ]
    ]
  ],
  "get_state": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "get_state"
      ]
    ]
  ],
  "pop_state": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "pop_state"
      ]
    ]
  ],
  "push_state": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "push_state"
      ]
    ]
  ],
  "math_string": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "math_string"
      ]
    ]
  ],
  "math": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "math"
      ]
    ]
  ],
  "non_math": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "non_math"
      ]
    ]
  ],
  "_make_space": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "_make_space"
      ]
    ]
  ],
  "space": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "space"
      ]
    ]
  ],
  "customspace": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "customspace"
      ]
    ]
  ],
  "symbol": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "symbol"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "PercentFormatter",
        "symbol"
      ]
    ]
  ],
  "unknown_symbol": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "unknown_symbol"
      ]
    ]
  ],
  "accent": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "accent"
      ]
    ]
  ],
  "function": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "function"
      ]
    ]
  ],
  "operatorname": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "operatorname"
      ]
    ]
  ],
  "start_group": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "start_group"
      ]
    ]
  ],
  "group": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "group"
      ]
    ]
  ],
  "required_group": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "required_group"
      ]
    ]
  ],
  "end_group": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "end_group"
      ]
    ]
  ],
  "is_overunder": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "is_overunder"
      ]
    ]
  ],
  "is_dropsub": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "is_dropsub"
      ]
    ]
  ],
  "is_between_brackets": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "is_between_brackets"
      ]
    ]
  ],
  "subsuper": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "subsuper"
      ]
    ]
  ],
  "_genfrac": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "_genfrac"
      ]
    ]
  ],
  "style_literal": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "style_literal"
      ]
    ]
  ],
  "genfrac": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "genfrac"
      ]
    ]
  ],
  "frac": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "frac"
      ]
    ]
  ],
  "dfrac": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "dfrac"
      ]
    ]
  ],
  "binom": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "binom"
      ]
    ]
  ],
  "_genset": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "_genset"
      ]
    ]
  ],
  "sqrt": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "sqrt"
      ]
    ]
  ],
  "overline": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "overline"
      ]
    ]
  ],
  "_auto_sized_delimiter": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "_auto_sized_delimiter"
      ]
    ]
  ],
  "auto_delim": [
    [
      "lib/matplotlib/_mathtext.py",
      [
        "Parser",
        "auto_delim"
      ]
    ]
  ],
  "get_fig_manager": [
    [
      "lib/matplotlib/_pylab_helpers.py",
      [
        "Gcf",
        "get_fig_manager"
      ]
    ]
  ],
  "destroy": [
    [
      "lib/matplotlib/_pylab_helpers.py",
      [
        "Gcf",
        "destroy"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureManagerBase",
        "destroy"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolBase",
        "destroy"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_gtk.py",
      [
        "_FigureManagerGTK",
        "destroy"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureManagerTk",
        "destroy"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "FigureCanvasGTK3",
        "destroy"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "FigureCanvasGTK4",
        "destroy"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_nbagg.py",
      [
        "FigureManagerNbAgg",
        "destroy"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureManagerQT",
        "destroy"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "FigureManagerWx",
        "destroy"
      ]
    ]
  ],
  "destroy_fig": [
    [
      "lib/matplotlib/_pylab_helpers.py",
      [
        "Gcf",
        "destroy_fig"
      ]
    ]
  ],
  "destroy_all": [
    [
      "lib/matplotlib/_pylab_helpers.py",
      [
        "Gcf",
        "destroy_all"
      ]
    ]
  ],
  "has_fignum": [
    [
      "lib/matplotlib/_pylab_helpers.py",
      [
        "Gcf",
        "has_fignum"
      ]
    ]
  ],
  "get_all_fig_managers": [
    [
      "lib/matplotlib/_pylab_helpers.py",
      [
        "Gcf",
        "get_all_fig_managers"
      ]
    ]
  ],
  "get_num_fig_managers": [
    [
      "lib/matplotlib/_pylab_helpers.py",
      [
        "Gcf",
        "get_num_fig_managers"
      ]
    ]
  ],
  "get_active": [
    [
      "lib/matplotlib/_pylab_helpers.py",
      [
        "Gcf",
        "get_active"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "Widget",
        "get_active"
      ]
    ]
  ],
  "_set_new_active_manager": [
    [
      "lib/matplotlib/_pylab_helpers.py",
      [
        "Gcf",
        "_set_new_active_manager"
      ]
    ]
  ],
  "set_active": [
    [
      "lib/matplotlib/_pylab_helpers.py",
      [
        "Gcf",
        "set_active"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "Widget",
        "set_active"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "CheckButtons",
        "set_active"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "RadioButtons",
        "set_active"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "set_active"
      ]
    ]
  ],
  "draw_all": [
    [
      "lib/matplotlib/_pylab_helpers.py",
      [
        "Gcf",
        "draw_all"
      ]
    ],
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "draw_all"
      ]
    ]
  ],
  "warn_on_missing_glyph": [
    [
      "lib/matplotlib/_text_helpers.py",
      [
        "warn_on_missing_glyph"
      ]
    ]
  ],
  "layout": [
    [
      "lib/matplotlib/_text_helpers.py",
      [
        "layout"
      ]
    ]
  ],
  "restore_bbox": [
    [
      "lib/matplotlib/_tight_bbox.py",
      [
        "adjust_bbox",
        "restore_bbox"
      ]
    ]
  ],
  "adjust_bbox": [
    [
      "lib/matplotlib/_tight_bbox.py",
      [
        "adjust_bbox"
      ]
    ]
  ],
  "process_figure_for_rasterizing": [
    [
      "lib/matplotlib/_tight_bbox.py",
      [
        "process_figure_for_rasterizing"
      ]
    ]
  ],
  "_auto_adjust_subplotpars": [
    [
      "lib/matplotlib/_tight_layout.py",
      [
        "_auto_adjust_subplotpars"
      ]
    ]
  ],
  "auto_adjust_subplotpars": [
    [
      "lib/matplotlib/_tight_layout.py",
      [
        "auto_adjust_subplotpars"
      ]
    ]
  ],
  "get_subplotspec_list": [
    [
      "lib/matplotlib/_tight_layout.py",
      [
        "get_subplotspec_list"
      ]
    ]
  ],
  "get_tight_layout_figure": [
    [
      "lib/matplotlib/_tight_layout.py",
      [
        "get_tight_layout_figure"
      ]
    ]
  ],
  "endpos": [
    [
      "lib/matplotlib/_type1font.py",
      [
        "_Token",
        "endpos"
      ]
    ]
  ],
  "is_keyword": [
    [
      "lib/matplotlib/_type1font.py",
      [
        "_Token",
        "is_keyword"
      ]
    ],
    [
      "lib/matplotlib/_type1font.py",
      [
        "_KeywordToken",
        "is_keyword"
      ]
    ]
  ],
  "is_slash_name": [
    [
      "lib/matplotlib/_type1font.py",
      [
        "_Token",
        "is_slash_name"
      ]
    ],
    [
      "lib/matplotlib/_type1font.py",
      [
        "_NameToken",
        "is_slash_name"
      ]
    ]
  ],
  "is_delim": [
    [
      "lib/matplotlib/_type1font.py",
      [
        "_Token",
        "is_delim"
      ]
    ],
    [
      "lib/matplotlib/_type1font.py",
      [
        "_DelimiterToken",
        "is_delim"
      ]
    ]
  ],
  "is_number": [
    [
      "lib/matplotlib/_type1font.py",
      [
        "_Token",
        "is_number"
      ]
    ],
    [
      "lib/matplotlib/_type1font.py",
      [
        "_NumberToken",
        "is_number"
      ]
    ]
  ],
  "opposite": [
    [
      "lib/matplotlib/_type1font.py",
      [
        "_DelimiterToken",
        "opposite"
      ]
    ]
  ],
  "_escape": [
    [
      "lib/matplotlib/_type1font.py",
      [
        "_StringToken",
        "_escape"
      ]
    ]
  ],
  "_tokenize": [
    [
      "lib/matplotlib/_type1font.py",
      [
        "_tokenize"
      ]
    ]
  ],
  "_expression": [
    [
      "lib/matplotlib/_type1font.py",
      [
        "_expression"
      ]
    ]
  ],
  "_read": [
    [
      "lib/matplotlib/_type1font.py",
      [
        "Type1Font",
        "_read"
      ]
    ],
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_read"
      ]
    ],
    [
      "lib/matplotlib/dviread.py",
      [
        "Vf",
        "_read"
      ]
    ]
  ],
  "_split": [
    [
      "lib/matplotlib/_type1font.py",
      [
        "Type1Font",
        "_split"
      ]
    ]
  ],
  "_decrypt": [
    [
      "lib/matplotlib/_type1font.py",
      [
        "Type1Font",
        "_decrypt"
      ]
    ]
  ],
  "_encrypt": [
    [
      "lib/matplotlib/_type1font.py",
      [
        "Type1Font",
        "_encrypt"
      ]
    ]
  ],
  "_parse": [
    [
      "lib/matplotlib/_type1font.py",
      [
        "Type1Font",
        "_parse"
      ]
    ]
  ],
  "_parse_subrs": [
    [
      "lib/matplotlib/_type1font.py",
      [
        "Type1Font",
        "_parse_subrs"
      ]
    ]
  ],
  "_parse_charstrings": [
    [
      "lib/matplotlib/_type1font.py",
      [
        "Type1Font",
        "_parse_charstrings"
      ]
    ]
  ],
  "_parse_encoding": [
    [
      "lib/matplotlib/_type1font.py",
      [
        "Type1Font",
        "_parse_encoding"
      ]
    ]
  ],
  "_parse_othersubrs": [
    [
      "lib/matplotlib/_type1font.py",
      [
        "Type1Font",
        "_parse_othersubrs"
      ]
    ]
  ],
  "transform": [
    [
      "lib/matplotlib/_type1font.py",
      [
        "Type1Font",
        "transform"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Transform",
        "transform"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "AffineBase",
        "transform"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "IdentityTransform",
        "transform"
      ]
    ],
    [
      "lib/mpl_toolkits/tests/test_axisartist_grid_helper_curvelinear.py",
      [
        "test_custom_transform",
        "MyTransform",
        "transform"
      ]
    ],
    [
      "lib/mpl_toolkits/tests/test_axisartist_grid_helper_curvelinear.py",
      [
        "test_custom_transform",
        "MyTransformInv",
        "transform"
      ]
    ]
  ],
  "correct_roundoff": [
    [
      "lib/matplotlib/animation.py",
      [
        "adjusted_figsize",
        "correct_roundoff"
      ]
    ]
  ],
  "adjusted_figsize": [
    [
      "lib/matplotlib/animation.py",
      [
        "adjusted_figsize"
      ]
    ]
  ],
  "register": [
    [
      "lib/matplotlib/animation.py",
      [
        "MovieWriterRegistry",
        "register"
      ]
    ],
    [
      "lib/matplotlib/cm.py",
      [
        "ColormapRegistry",
        "register"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "ColorSequenceRegistry",
        "register"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "_Style",
        "register"
      ]
    ],
    [
      "lib/matplotlib/projections/__init__.py",
      [
        "ProjectionRegistry",
        "register"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/__init__.py",
      [
        "register"
      ]
    ]
  ],
  "is_available": [
    [
      "lib/matplotlib/animation.py",
      [
        "MovieWriterRegistry",
        "is_available"
      ]
    ]
  ],
  "list": [
    [
      "lib/matplotlib/animation.py",
      [
        "MovieWriterRegistry",
        "list"
      ]
    ]
  ],
  "frame_size": [
    [
      "lib/matplotlib/animation.py",
      [
        "AbstractMovieWriter",
        "frame_size"
      ]
    ]
  ],
  "grab_frame": [
    [
      "lib/matplotlib/animation.py",
      [
        "AbstractMovieWriter",
        "grab_frame"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "MovieWriter",
        "grab_frame"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "FileMovieWriter",
        "grab_frame"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "PillowWriter",
        "grab_frame"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "HTMLWriter",
        "grab_frame"
      ]
    ],
    [
      "lib/matplotlib/tests/test_animation.py",
      [
        "NullMovieWriter",
        "grab_frame"
      ]
    ]
  ],
  "finish": [
    [
      "lib/matplotlib/animation.py",
      [
        "AbstractMovieWriter",
        "finish"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "MovieWriter",
        "finish"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "FileMovieWriter",
        "finish"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "PillowWriter",
        "finish"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "HTMLWriter",
        "finish"
      ]
    ],
    [
      "lib/matplotlib/sankey.py",
      [
        "Sankey",
        "finish"
      ]
    ],
    [
      "lib/matplotlib/tests/test_animation.py",
      [
        "NullMovieWriter",
        "finish"
      ]
    ]
  ],
  "saving": [
    [
      "lib/matplotlib/animation.py",
      [
        "AbstractMovieWriter",
        "saving"
      ]
    ]
  ],
  "_adjust_frame_size": [
    [
      "lib/matplotlib/animation.py",
      [
        "MovieWriter",
        "_adjust_frame_size"
      ]
    ]
  ],
  "_run": [
    [
      "lib/matplotlib/animation.py",
      [
        "MovieWriter",
        "_run"
      ]
    ]
  ],
  "_args": [
    [
      "lib/matplotlib/animation.py",
      [
        "MovieWriter",
        "_args"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "FFMpegWriter",
        "_args"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "FFMpegFileWriter",
        "_args"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "ImageMagickBase",
        "_args"
      ]
    ]
  ],
  "bin_path": [
    [
      "lib/matplotlib/animation.py",
      [
        "MovieWriter",
        "bin_path"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "ImageMagickBase",
        "bin_path"
      ]
    ]
  ],
  "isAvailable": [
    [
      "lib/matplotlib/animation.py",
      [
        "MovieWriter",
        "isAvailable"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "PillowWriter",
        "isAvailable"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "ImageMagickBase",
        "isAvailable"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "HTMLWriter",
        "isAvailable"
      ]
    ],
    [
      "lib/matplotlib/tests/test_animation.py",
      [
        "RegisteredNullMovieWriter",
        "isAvailable"
      ]
    ]
  ],
  "__del__": [
    [
      "lib/matplotlib/animation.py",
      [
        "FileMovieWriter",
        "__del__"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "Animation",
        "__del__"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "TimerBase",
        "__del__"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "TimerQT",
        "__del__"
      ]
    ],
    [
      "lib/matplotlib/testing/compare.py",
      [
        "_Converter",
        "__del__"
      ]
    ],
    [
      "lib/matplotlib/testing/compare.py",
      [
        "_SVGConverter",
        "__del__"
      ]
    ]
  ],
  "frame_format": [
    [
      "lib/matplotlib/animation.py",
      [
        "FileMovieWriter",
        "frame_format"
      ]
    ]
  ],
  "frame_format_3": [
    [
      "lib/matplotlib/animation.py",
      [
        "FileMovieWriter",
        "frame_format_3"
      ]
    ]
  ],
  "_base_temp_name": [
    [
      "lib/matplotlib/animation.py",
      [
        "FileMovieWriter",
        "_base_temp_name"
      ]
    ]
  ],
  "output_args": [
    [
      "lib/matplotlib/animation.py",
      [
        "FFMpegBase",
        "output_args"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "ImageMagickBase",
        "output_args"
      ]
    ]
  ],
  "delay": [
    [
      "lib/matplotlib/animation.py",
      [
        "ImageMagickBase",
        "delay"
      ]
    ]
  ],
  "_included_frames": [
    [
      "lib/matplotlib/animation.py",
      [
        "_included_frames"
      ]
    ]
  ],
  "_embedded_frames": [
    [
      "lib/matplotlib/animation.py",
      [
        "_embedded_frames"
      ]
    ]
  ],
  "_start": [
    [
      "lib/matplotlib/animation.py",
      [
        "Animation",
        "_start"
      ]
    ]
  ],
  "_stop": [
    [
      "lib/matplotlib/animation.py",
      [
        "Animation",
        "_stop"
      ]
    ]
  ],
  "save": [
    [
      "lib/matplotlib/animation.py",
      [
        "Animation",
        "save"
      ]
    ]
  ],
  "_step": [
    [
      "lib/matplotlib/animation.py",
      [
        "Animation",
        "_step"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "TimedAnimation",
        "_step"
      ]
    ]
  ],
  "new_frame_seq": [
    [
      "lib/matplotlib/animation.py",
      [
        "Animation",
        "new_frame_seq"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "FuncAnimation",
        "new_frame_seq"
      ]
    ]
  ],
  "new_saved_frame_seq": [
    [
      "lib/matplotlib/animation.py",
      [
        "Animation",
        "new_saved_frame_seq"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "FuncAnimation",
        "new_saved_frame_seq"
      ]
    ]
  ],
  "_draw_next_frame": [
    [
      "lib/matplotlib/animation.py",
      [
        "Animation",
        "_draw_next_frame"
      ]
    ]
  ],
  "_init_draw": [
    [
      "lib/matplotlib/animation.py",
      [
        "Animation",
        "_init_draw"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "ArtistAnimation",
        "_init_draw"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "FuncAnimation",
        "_init_draw"
      ]
    ]
  ],
  "_pre_draw": [
    [
      "lib/matplotlib/animation.py",
      [
        "Animation",
        "_pre_draw"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "ArtistAnimation",
        "_pre_draw"
      ]
    ]
  ],
  "_draw_frame": [
    [
      "lib/matplotlib/animation.py",
      [
        "Animation",
        "_draw_frame"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "ArtistAnimation",
        "_draw_frame"
      ]
    ],
    [
      "lib/matplotlib/animation.py",
      [
        "FuncAnimation",
        "_draw_frame"
      ]
    ]
  ],
  "_post_draw": [
    [
      "lib/matplotlib/animation.py",
      [
        "Animation",
        "_post_draw"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "FigureCanvasGTK3",
        "_post_draw"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "FigureCanvasGTK4",
        "_post_draw"
      ]
    ]
  ],
  "_blit_draw": [
    [
      "lib/matplotlib/animation.py",
      [
        "Animation",
        "_blit_draw"
      ]
    ]
  ],
  "_blit_clear": [
    [
      "lib/matplotlib/animation.py",
      [
        "Animation",
        "_blit_clear"
      ]
    ]
  ],
  "_setup_blit": [
    [
      "lib/matplotlib/animation.py",
      [
        "Animation",
        "_setup_blit"
      ]
    ]
  ],
  "_on_resize": [
    [
      "lib/matplotlib/animation.py",
      [
        "Animation",
        "_on_resize"
      ]
    ]
  ],
  "_end_redraw": [
    [
      "lib/matplotlib/animation.py",
      [
        "Animation",
        "_end_redraw"
      ]
    ]
  ],
  "to_html5_video": [
    [
      "lib/matplotlib/animation.py",
      [
        "Animation",
        "to_html5_video"
      ]
    ]
  ],
  "to_jshtml": [
    [
      "lib/matplotlib/animation.py",
      [
        "Animation",
        "to_jshtml"
      ]
    ]
  ],
  "_repr_html_": [
    [
      "lib/matplotlib/animation.py",
      [
        "Animation",
        "_repr_html_"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "Colormap",
        "_repr_html_"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "_repr_html_"
      ]
    ]
  ],
  "pause": [
    [
      "lib/matplotlib/animation.py",
      [
        "Animation",
        "pause"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "pause"
      ]
    ]
  ],
  "resume": [
    [
      "lib/matplotlib/animation.py",
      [
        "Animation",
        "resume"
      ]
    ]
  ],
  "draw_wrapper": [
    [
      "lib/matplotlib/artist.py",
      [
        "allow_rasterization",
        "draw_wrapper"
      ]
    ]
  ],
  "allow_rasterization": [
    [
      "lib/matplotlib/artist.py",
      [
        "allow_rasterization"
      ]
    ]
  ],
  "_finalize_rasterization": [
    [
      "lib/matplotlib/artist.py",
      [
        "_finalize_rasterization"
      ]
    ]
  ],
  "_stale_axes_callback": [
    [
      "lib/matplotlib/artist.py",
      [
        "_stale_axes_callback"
      ]
    ]
  ],
  "__init_subclass__": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "__init_subclass__"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "__init_subclass__"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "_Style",
        "__init_subclass__"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Transform",
        "__init_subclass__"
      ]
    ]
  ],
  "_update_set_signature_and_docstring": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "_update_set_signature_and_docstring"
      ]
    ]
  ],
  "__getstate__": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "__getstate__"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_process_plot_var_args",
        "__getstate__"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "__getstate__"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "RendererAgg",
        "__getstate__"
      ]
    ],
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "CallbackRegistry",
        "__getstate__"
      ]
    ],
    [
      "lib/matplotlib/contour.py",
      [
        "ContourSet",
        "__getstate__"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "__getstate__"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "_ImageBase",
        "__getstate__"
      ]
    ],
    [
      "lib/matplotlib/spines.py",
      [
        "Spines",
        "__getstate__"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "__getstate__"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "TransformNode",
        "__getstate__"
      ]
    ]
  ],
  "remove": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "remove"
      ]
    ],
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "Stack",
        "remove"
      ]
    ],
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "Grouper",
        "remove"
      ]
    ],
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "remove"
      ]
    ],
    [
      "lib/matplotlib/container.py",
      [
        "Container",
        "remove"
      ]
    ],
    [
      "lib/matplotlib/contour.py",
      [
        "ContourLabeler",
        "remove"
      ]
    ],
    [
      "lib/matplotlib/contour.py",
      [
        "ContourSet",
        "remove"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "_AxesStack",
        "remove"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "ToolLineHandles",
        "remove"
      ]
    ]
  ],
  "have_units": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "have_units"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "have_units"
      ]
    ]
  ],
  "convert_xunits": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "convert_xunits"
      ]
    ]
  ],
  "convert_yunits": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "convert_yunits"
      ]
    ]
  ],
  "axes": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "axes"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "SubFigure",
        "axes"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "axes"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "OffsetBox",
        "axes"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "axes"
      ]
    ]
  ],
  "axes_8": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "axes_8"
      ]
    ]
  ],
  "stale": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "stale"
      ]
    ]
  ],
  "stale_10": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "stale_10"
      ]
    ]
  ],
  "get_window_extent": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "get_window_extent"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_window_extent"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "get_window_extent"
      ]
    ],
    [
      "lib/matplotlib/colorbar.py",
      [
        "_ColorbarSpine",
        "get_window_extent"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "get_window_extent"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "AxesImage",
        "get_window_extent"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "BboxImage",
        "get_window_extent"
      ]
    ],
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "get_window_extent"
      ]
    ],
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "get_window_extent"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "OffsetBox",
        "get_window_extent"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AnnotationBbox",
        "get_window_extent"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "get_window_extent"
      ]
    ],
    [
      "lib/matplotlib/spines.py",
      [
        "Spine",
        "get_window_extent"
      ]
    ],
    [
      "lib/matplotlib/table.py",
      [
        "Table",
        "get_window_extent"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "get_window_extent"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Annotation",
        "get_window_extent"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "LabelBase",
        "get_window_extent"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisLabel",
        "get_window_extent"
      ]
    ]
  ],
  "get_tightbbox": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "get_tightbbox"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_tightbbox"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_tightbbox"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "get_tightbbox"
      ]
    ],
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "get_tightbbox"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AnnotationBbox",
        "get_tightbbox"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Annotation",
        "get_tightbbox"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/parasite_axes.py",
      [
        "HostAxesBase",
        "get_tightbbox"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisArtist",
        "get_tightbbox"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Text3D",
        "get_tightbbox"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "get_tightbbox"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axis3d.py",
      [
        "Axis",
        "get_tightbbox"
      ]
    ]
  ],
  "add_callback": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "add_callback"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "TimerBase",
        "add_callback"
      ]
    ]
  ],
  "remove_callback": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "remove_callback"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "TimerBase",
        "remove_callback"
      ]
    ]
  ],
  "pchanged": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "pchanged"
      ]
    ]
  ],
  "is_transform_set": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "is_transform_set"
      ]
    ]
  ],
  "get_children": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "get_children"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_children"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "Tick",
        "get_children"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_children"
      ]
    ],
    [
      "lib/matplotlib/container.py",
      [
        "Container",
        "get_children"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "get_children"
      ]
    ],
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "get_children"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "OffsetBox",
        "get_children"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AnchoredOffsetbox",
        "get_children"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "OffsetImage",
        "get_children"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AnnotationBbox",
        "get_children"
      ]
    ],
    [
      "lib/matplotlib/table.py",
      [
        "Table",
        "get_children"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "Axes",
        "get_children"
      ]
    ]
  ],
  "_default_contains": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "_default_contains"
      ]
    ]
  ],
  "pickable": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "pickable"
      ]
    ]
  ],
  "pick": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "pick"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "pick"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "pick"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/parasite_axes.py",
      [
        "ParasiteAxesBase",
        "pick"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/parasite_axes.py",
      [
        "HostAxesBase",
        "pick"
      ]
    ]
  ],
  "set_picker": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "set_picker"
      ]
    ],
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "set_picker"
      ]
    ]
  ],
  "get_picker": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "get_picker"
      ]
    ]
  ],
  "get_url": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "get_url"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "get_url"
      ]
    ]
  ],
  "set_url": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "set_url"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "Tick",
        "set_url"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "set_url"
      ]
    ]
  ],
  "get_gid": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "get_gid"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "get_gid"
      ]
    ]
  ],
  "set_gid": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "set_gid"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "set_gid"
      ]
    ]
  ],
  "get_snap": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "get_snap"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "get_snap"
      ]
    ]
  ],
  "set_snap": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "set_snap"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "set_snap"
      ]
    ]
  ],
  "get_sketch_params": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "get_sketch_params"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "get_sketch_params"
      ]
    ]
  ],
  "set_sketch_params": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "set_sketch_params"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "set_sketch_params"
      ]
    ]
  ],
  "set_path_effects": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "set_path_effects"
      ]
    ]
  ],
  "get_path_effects": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "get_path_effects"
      ]
    ]
  ],
  "get_figure": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "get_figure"
      ]
    ]
  ],
  "set_clip_box": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "set_clip_box"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "set_clip_box"
      ]
    ]
  ],
  "set_clip_path": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "set_clip_path"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "Tick",
        "set_clip_path"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "set_clip_path"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "set_clip_path"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "GraphicsContextCairo",
        "set_clip_path"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "set_clip_path"
      ]
    ]
  ],
  "get_alpha": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "get_alpha"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "get_alpha"
      ]
    ],
    [
      "lib/matplotlib/cm.py",
      [
        "ScalarMappable",
        "get_alpha"
      ]
    ],
    [
      "lib/matplotlib/contour.py",
      [
        "ContourSet",
        "get_alpha"
      ]
    ]
  ],
  "get_visible": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "get_visible"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "get_visible"
      ]
    ]
  ],
  "get_animated": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "get_animated"
      ]
    ]
  ],
  "get_in_layout": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "get_in_layout"
      ]
    ]
  ],
  "_fully_clipped_to_axes": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "_fully_clipped_to_axes"
      ]
    ]
  ],
  "get_clip_on": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "get_clip_on"
      ]
    ]
  ],
  "get_clip_box": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "get_clip_box"
      ]
    ]
  ],
  "get_clip_path": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "get_clip_path"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "get_clip_path"
      ]
    ]
  ],
  "get_transformed_clip_path_and_affine": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "get_transformed_clip_path_and_affine"
      ]
    ]
  ],
  "set_clip_on": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "set_clip_on"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "set_clip_on"
      ]
    ]
  ],
  "_set_gc_clip": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "_set_gc_clip"
      ]
    ]
  ],
  "get_rasterized": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "get_rasterized"
      ]
    ]
  ],
  "set_rasterized": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "set_rasterized"
      ]
    ]
  ],
  "get_agg_filter": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "get_agg_filter"
      ]
    ]
  ],
  "set_agg_filter": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "set_agg_filter"
      ]
    ]
  ],
  "set_alpha": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "set_alpha"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "set_alpha"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "GraphicsContextCairo",
        "set_alpha"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "set_alpha"
      ]
    ],
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "set_alpha"
      ]
    ],
    [
      "lib/matplotlib/contour.py",
      [
        "ContourSet",
        "set_alpha"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "_ImageBase",
        "set_alpha"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "set_alpha"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Poly3DCollection",
        "set_alpha"
      ]
    ]
  ],
  "_set_alpha_for_array": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "_set_alpha_for_array"
      ]
    ]
  ],
  "set_visible": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "set_visible"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "set_visible"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "ToolLineHandles",
        "set_visible"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "ToolHandles",
        "set_visible"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/mpl_axes.py",
      [
        "SimpleAxisArtist",
        "set_visible"
      ]
    ]
  ],
  "set_animated": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "set_animated"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "ToolLineHandles",
        "set_animated"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "ToolHandles",
        "set_animated"
      ]
    ]
  ],
  "set_in_layout": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "set_in_layout"
      ]
    ]
  ],
  "get_label": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "get_label"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_label"
      ]
    ]
  ],
  "set_label": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "set_label"
      ]
    ],
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "set_label"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/mpl_axes.py",
      [
        "SimpleAxisArtist",
        "set_label"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisArtist",
        "set_label"
      ]
    ]
  ],
  "get_zorder": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "get_zorder"
      ]
    ]
  ],
  "set_zorder": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "set_zorder"
      ]
    ]
  ],
  "sticky_edges": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "sticky_edges"
      ]
    ]
  ],
  "update_from": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "update_from"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "update_from"
      ]
    ],
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "update_from"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "update_from"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "update_from"
      ]
    ]
  ],
  "properties": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "properties"
      ]
    ],
    [
      "lib/matplotlib/artist.py",
      [
        "ArtistInspector",
        "properties"
      ]
    ]
  ],
  "_update_props": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "_update_props"
      ]
    ]
  ],
  "_internal_update": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "_internal_update"
      ]
    ]
  ],
  "_cm_set": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "_cm_set"
      ]
    ]
  ],
  "findobj": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "findobj"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "findobj"
      ]
    ]
  ],
  "get_cursor_data": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "get_cursor_data"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "QuadMesh",
        "get_cursor_data"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "AxesImage",
        "get_cursor_data"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "PcolorImage",
        "get_cursor_data"
      ]
    ]
  ],
  "format_cursor_data": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "format_cursor_data"
      ]
    ]
  ],
  "get_mouseover": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "get_mouseover"
      ]
    ]
  ],
  "set_mouseover": [
    [
      "lib/matplotlib/artist.py",
      [
        "Artist",
        "set_mouseover"
      ]
    ]
  ],
  "_get_tightbbox_for_layout_only": [
    [
      "lib/matplotlib/artist.py",
      [
        "_get_tightbbox_for_layout_only"
      ]
    ]
  ],
  "get_aliases": [
    [
      "lib/matplotlib/artist.py",
      [
        "ArtistInspector",
        "get_aliases"
      ]
    ]
  ],
  "get_valid_values": [
    [
      "lib/matplotlib/artist.py",
      [
        "ArtistInspector",
        "get_valid_values"
      ]
    ]
  ],
  "_replace_path": [
    [
      "lib/matplotlib/artist.py",
      [
        "ArtistInspector",
        "_replace_path"
      ]
    ]
  ],
  "get_setters": [
    [
      "lib/matplotlib/artist.py",
      [
        "ArtistInspector",
        "get_setters"
      ]
    ]
  ],
  "number_of_parameters": [
    [
      "lib/matplotlib/artist.py",
      [
        "ArtistInspector",
        "number_of_parameters"
      ]
    ]
  ],
  "is_alias": [
    [
      "lib/matplotlib/artist.py",
      [
        "ArtistInspector",
        "is_alias"
      ]
    ]
  ],
  "aliased_name": [
    [
      "lib/matplotlib/artist.py",
      [
        "ArtistInspector",
        "aliased_name"
      ]
    ]
  ],
  "aliased_name_rest": [
    [
      "lib/matplotlib/artist.py",
      [
        "ArtistInspector",
        "aliased_name_rest"
      ]
    ]
  ],
  "pprint_setters": [
    [
      "lib/matplotlib/artist.py",
      [
        "ArtistInspector",
        "pprint_setters"
      ]
    ]
  ],
  "pprint_setters_rest": [
    [
      "lib/matplotlib/artist.py",
      [
        "ArtistInspector",
        "pprint_setters_rest"
      ]
    ]
  ],
  "pprint_getters": [
    [
      "lib/matplotlib/artist.py",
      [
        "ArtistInspector",
        "pprint_getters"
      ]
    ]
  ],
  "getp": [
    [
      "lib/matplotlib/artist.py",
      [
        "getp"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "getp"
      ]
    ]
  ],
  "setp": [
    [
      "lib/matplotlib/artist.py",
      [
        "setp"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "setp"
      ]
    ]
  ],
  "kwdoc": [
    [
      "lib/matplotlib/artist.py",
      [
        "kwdoc"
      ]
    ]
  ],
  "get_title": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "get_title"
      ]
    ],
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "get_title"
      ]
    ]
  ],
  "set_title": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "set_title"
      ]
    ],
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "set_title"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "set_title"
      ]
    ]
  ],
  "get_legend_handles_labels": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "get_legend_handles_labels"
      ]
    ]
  ],
  "legend": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "legend"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "legend"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "legend"
      ]
    ]
  ],
  "_remove_legend": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "_remove_legend"
      ]
    ]
  ],
  "inset_axes": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "inset_axes"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/inset_locator.py",
      [
        "inset_axes"
      ]
    ]
  ],
  "indicate_inset": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "indicate_inset"
      ]
    ]
  ],
  "indicate_inset_zoom": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "indicate_inset_zoom"
      ]
    ]
  ],
  "secondary_xaxis": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "secondary_xaxis"
      ]
    ]
  ],
  "secondary_yaxis": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "secondary_yaxis"
      ]
    ]
  ],
  "text": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "text"
      ]
    ],
    [
      "lib/matplotlib/backends/qt_editor/_formlayout.py",
      [
        "ColorLayout",
        "text"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "text"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "text"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "TextBox",
        "text"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "text"
      ]
    ]
  ],
  "axhline": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "axhline"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "axhline"
      ]
    ]
  ],
  "axvline": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "axvline"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "axvline"
      ]
    ]
  ],
  "_check_no_units": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "_check_no_units"
      ]
    ]
  ],
  "axline": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "axline"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "axline"
      ]
    ]
  ],
  "axhspan": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "axhspan"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "axhspan"
      ]
    ]
  ],
  "axvspan": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "axvspan"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "axvspan"
      ]
    ]
  ],
  "hlines": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "hlines"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "hlines"
      ]
    ]
  ],
  "vlines": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "vlines"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "vlines"
      ]
    ]
  ],
  "eventplot": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "eventplot"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "eventplot"
      ]
    ]
  ],
  "plot_date": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "plot_date"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "plot_date"
      ]
    ]
  ],
  "loglog": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "loglog"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "loglog"
      ]
    ]
  ],
  "semilogx": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "semilogx"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "semilogx"
      ]
    ]
  ],
  "semilogy": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "semilogy"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "semilogy"
      ]
    ]
  ],
  "acorr": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "acorr"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "acorr"
      ]
    ]
  ],
  "xcorr": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "xcorr"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "xcorr"
      ]
    ]
  ],
  "step": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "step"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "step"
      ]
    ]
  ],
  "_convert_dx": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "_convert_dx"
      ]
    ]
  ],
  "bar": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "bar"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "bar"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "bar"
      ]
    ]
  ],
  "barh": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "barh"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "barh"
      ]
    ]
  ],
  "sign": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "bar_label",
        "sign"
      ]
    ]
  ],
  "bar_label": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "bar_label"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "bar_label"
      ]
    ]
  ],
  "broken_barh": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "broken_barh"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "broken_barh"
      ]
    ]
  ],
  "stem": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "stem"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "stem"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "stem"
      ]
    ]
  ],
  "pie": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "pie"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "pie"
      ]
    ]
  ],
  "_errorevery_to_mask": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "_errorevery_to_mask"
      ]
    ]
  ],
  "_upcast_err": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "errorbar",
        "_upcast_err"
      ]
    ]
  ],
  "apply_mask": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "errorbar",
        "apply_mask"
      ]
    ]
  ],
  "errorbar": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "errorbar"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "errorbar"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "errorbar"
      ]
    ]
  ],
  "boxplot": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "boxplot"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "boxplot"
      ]
    ]
  ],
  "merge_kw_rc": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "bxp",
        "merge_kw_rc"
      ]
    ]
  ],
  "do_patch": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "bxp",
        "do_patch"
      ]
    ]
  ],
  "bxp": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "bxp"
      ]
    ]
  ],
  "invalid_shape_exception": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "_parse_scatter_color_args",
        "invalid_shape_exception"
      ]
    ]
  ],
  "_parse_scatter_color_args": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "_parse_scatter_color_args"
      ]
    ]
  ],
  "scatter": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "scatter"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "scatter"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "scatter"
      ]
    ]
  ],
  "on_changed": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "hexbin",
        "on_changed"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "Slider",
        "on_changed"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "RangeSlider",
        "on_changed"
      ]
    ]
  ],
  "hexbin": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "hexbin"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "hexbin"
      ]
    ]
  ],
  "arrow": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "arrow"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "arrow"
      ]
    ]
  ],
  "quiverkey": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "quiverkey"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "quiverkey"
      ]
    ]
  ],
  "_quiver_units": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "_quiver_units"
      ]
    ]
  ],
  "quiver": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "quiver"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "quiver"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "quiver"
      ]
    ]
  ],
  "barbs": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "barbs"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "barbs"
      ]
    ]
  ],
  "get_interp_point": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "_fill_between_x_or_y",
        "for_idx0_idx1_in_cbook_c",
        "if_interpolate_",
        "get_interp_point"
      ]
    ]
  ],
  "_fill_between_x_or_y": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "_fill_between_x_or_y"
      ]
    ]
  ],
  "fill_between": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "fill_between"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "fill_between"
      ]
    ]
  ],
  "fill_betweenx": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "fill_betweenx"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "fill_betweenx"
      ]
    ]
  ],
  "imshow": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "imshow"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "imshow"
      ]
    ]
  ],
  "_interp_grid": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "_pcolorargs",
        "if_shading_flat_",
        "else_nearest_g",
        "if_shading_nearest_",
        "_interp_grid"
      ]
    ]
  ],
  "_pcolorargs": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "_pcolorargs"
      ]
    ]
  ],
  "_pcolor_grid_deprecation_helper": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "_pcolor_grid_deprecation_helper"
      ]
    ]
  ],
  "pcolor": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "pcolor"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "pcolor"
      ]
    ]
  ],
  "pcolormesh": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "pcolormesh"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "pcolormesh"
      ]
    ]
  ],
  "pcolorfast": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "pcolorfast"
      ]
    ]
  ],
  "contour": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "contour"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "contour"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "contour"
      ]
    ]
  ],
  "contourf": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "contourf"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "contourf"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "contourf"
      ]
    ]
  ],
  "clabel": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "clabel"
      ]
    ],
    [
      "lib/matplotlib/contour.py",
      [
        "ContourLabeler",
        "clabel"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "clabel"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "clabel"
      ]
    ]
  ],
  "hist": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "hist"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "hist"
      ]
    ]
  ],
  "stairs": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "stairs"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "stairs"
      ]
    ]
  ],
  "hist2d": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "hist2d"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "hist2d"
      ]
    ]
  ],
  "psd": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "psd"
      ]
    ],
    [
      "lib/matplotlib/mlab.py",
      [
        "psd"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "psd"
      ]
    ]
  ],
  "csd": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "csd"
      ]
    ],
    [
      "lib/matplotlib/mlab.py",
      [
        "csd"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "csd"
      ]
    ]
  ],
  "magnitude_spectrum": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "magnitude_spectrum"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "magnitude_spectrum"
      ]
    ]
  ],
  "angle_spectrum": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "angle_spectrum"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "angle_spectrum"
      ]
    ]
  ],
  "phase_spectrum": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "phase_spectrum"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "phase_spectrum"
      ]
    ]
  ],
  "cohere": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "cohere"
      ]
    ],
    [
      "lib/matplotlib/mlab.py",
      [
        "cohere"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "cohere"
      ]
    ]
  ],
  "specgram": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "specgram"
      ]
    ],
    [
      "lib/matplotlib/mlab.py",
      [
        "specgram"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "specgram"
      ]
    ]
  ],
  "spy": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "spy"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "spy"
      ]
    ]
  ],
  "matshow": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "matshow"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "matshow"
      ]
    ]
  ],
  "_kde_method": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "violinplot",
        "_kde_method"
      ]
    ]
  ],
  "violinplot": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "violinplot"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "violinplot"
      ]
    ]
  ],
  "violin": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "violin"
      ]
    ]
  ],
  "_get_aspect_ratio": [
    [
      "lib/matplotlib/axes/_axes.py",
      [
        "Axes",
        "_get_aspect_ratio"
      ]
    ]
  ],
  "_process_plot_format": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_process_plot_format"
      ]
    ]
  ],
  "__setstate__": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_process_plot_var_args",
        "__setstate__"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "__setstate__"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "RendererAgg",
        "__setstate__"
      ]
    ],
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "CallbackRegistry",
        "__setstate__"
      ]
    ],
    [
      "lib/matplotlib/dates.py",
      [
        "rrulewrapper",
        "__setstate__"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "__setstate__"
      ]
    ],
    [
      "lib/matplotlib/spines.py",
      [
        "Spines",
        "__setstate__"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "TransformNode",
        "__setstate__"
      ]
    ]
  ],
  "set_prop_cycle": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_process_plot_var_args",
        "set_prop_cycle"
      ]
    ],
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "set_prop_cycle"
      ]
    ]
  ],
  "get_next_color": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_process_plot_var_args",
        "get_next_color"
      ]
    ]
  ],
  "_getdefaults": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_process_plot_var_args",
        "_getdefaults"
      ]
    ]
  ],
  "_setdefaults": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_process_plot_var_args",
        "_setdefaults"
      ]
    ]
  ],
  "_makeline": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_process_plot_var_args",
        "_makeline"
      ]
    ]
  ],
  "_makefill": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_process_plot_var_args",
        "_makefill"
      ]
    ]
  ],
  "_plot_args": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_process_plot_var_args",
        "_plot_args"
      ]
    ]
  ],
  "_axis_map": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "_axis_map"
      ]
    ]
  ],
  "_unstale_viewLim": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "_unstale_viewLim"
      ]
    ]
  ],
  "viewLim": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "viewLim"
      ]
    ]
  ],
  "_request_autoscale_view": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "_request_autoscale_view"
      ]
    ]
  ],
  "_update_transScale": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "_update_transScale"
      ]
    ]
  ],
  "get_position": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_position"
      ]
    ],
    [
      "lib/matplotlib/gridspec.py",
      [
        "SubplotSpec",
        "get_position"
      ]
    ],
    [
      "lib/matplotlib/spines.py",
      [
        "Spine",
        "get_position"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "get_position"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "Divider",
        "get_position"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "SubplotDivider",
        "get_position"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "AxesDivider",
        "get_position"
      ]
    ]
  ],
  "_set_position": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "_set_position"
      ]
    ]
  ],
  "reset_position": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "reset_position"
      ]
    ]
  ],
  "set_axes_locator": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "set_axes_locator"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_grid.py",
      [
        "Grid",
        "set_axes_locator"
      ]
    ]
  ],
  "get_axes_locator": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_axes_locator"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_grid.py",
      [
        "Grid",
        "get_axes_locator"
      ]
    ]
  ],
  "_set_artist_props": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "_set_artist_props"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "Tick",
        "_set_artist_props"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "_set_artist_props"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "_set_artist_props"
      ]
    ],
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "_set_artist_props"
      ]
    ]
  ],
  "sharex": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "sharex"
      ]
    ]
  ],
  "sharey": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "sharey"
      ]
    ]
  ],
  "__clear": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "__clear"
      ]
    ]
  ],
  "cla": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "cla"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "cla"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_grid.py",
      [
        "CbarAxesBase",
        "cla"
      ]
    ]
  ],
  "__add__": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "ArtistList",
        "__add__"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/Duration.py",
      [
        "Duration",
        "__add__"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/Epoch.py",
      [
        "Epoch",
        "__add__"
      ]
    ],
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_date2num_dst",
        "dt_tzaware",
        "__add__"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Transform",
        "__add__"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_size.py",
      [
        "_Base",
        "__add__"
      ]
    ]
  ],
  "__radd__": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "ArtistList",
        "__radd__"
      ]
    ]
  ],
  "insert": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "ArtistList",
        "insert"
      ]
    ]
  ],
  "__delitem__": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "ArtistList",
        "__delitem__"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "_ColorMapping",
        "__delitem__"
      ]
    ],
    [
      "lib/matplotlib/spines.py",
      [
        "Spines",
        "__delitem__"
      ]
    ]
  ],
  "artists": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "artists"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "artists"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "ToolLineHandles",
        "artists"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "ToolHandles",
        "artists"
      ]
    ]
  ],
  "collections": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "collections"
      ]
    ]
  ],
  "images": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "images"
      ]
    ]
  ],
  "lines": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "lines"
      ]
    ]
  ],
  "patches": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "patches"
      ]
    ]
  ],
  "tables": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "tables"
      ]
    ]
  ],
  "texts": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "texts"
      ]
    ]
  ],
  "get_facecolor": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_facecolor"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "get_facecolor"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "get_facecolor"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "get_facecolor"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Patch3DCollection",
        "get_facecolor"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Path3DCollection",
        "get_facecolor"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Poly3DCollection",
        "get_facecolor"
      ]
    ]
  ],
  "_set_title_offset_trans": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "_set_title_offset_trans"
      ]
    ]
  ],
  "get_aspect": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_aspect"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "Divider",
        "get_aspect"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "AxesDivider",
        "get_aspect"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_grid.py",
      [
        "Grid",
        "get_aspect"
      ]
    ]
  ],
  "set_aspect": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "set_aspect"
      ]
    ],
    [
      "lib/matplotlib/axes/_secondary_axes.py",
      [
        "SecondaryAxis",
        "set_aspect"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "Divider",
        "set_aspect"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_grid.py",
      [
        "Grid",
        "set_aspect"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "set_aspect"
      ]
    ]
  ],
  "get_adjustable": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_adjustable"
      ]
    ]
  ],
  "set_adjustable": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "set_adjustable"
      ]
    ]
  ],
  "get_box_aspect": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_box_aspect"
      ]
    ]
  ],
  "set_box_aspect": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "set_box_aspect"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "set_box_aspect"
      ]
    ]
  ],
  "get_anchor": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_anchor"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "Divider",
        "get_anchor"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "AxesDivider",
        "get_anchor"
      ]
    ]
  ],
  "set_anchor": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "set_anchor"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "Divider",
        "set_anchor"
      ]
    ]
  ],
  "apply_aspect": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "apply_aspect"
      ]
    ],
    [
      "lib/matplotlib/axes/_secondary_axes.py",
      [
        "SecondaryAxis",
        "apply_aspect"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/parasite_axes.py",
      [
        "ParasiteAxesBase",
        "apply_aspect"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "apply_aspect"
      ]
    ]
  ],
  "axis": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "axis"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "axis"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/mpl_axes.py",
      [
        "Axes",
        "axis"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "Axes",
        "axis"
      ]
    ]
  ],
  "get_legend": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_legend"
      ]
    ]
  ],
  "get_images": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_images"
      ]
    ]
  ],
  "get_lines": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_lines"
      ]
    ],
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "get_lines"
      ]
    ]
  ],
  "get_xaxis": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_xaxis"
      ]
    ]
  ],
  "get_yaxis": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_yaxis"
      ]
    ]
  ],
  "_sci": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "_sci"
      ]
    ]
  ],
  "_gci": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "_gci"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "_gci"
      ]
    ]
  ],
  "has_data": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "has_data"
      ]
    ]
  ],
  "_deprecate_noninstance": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "_deprecate_noninstance"
      ]
    ]
  ],
  "add_artist": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "add_artist"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "add_artist"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "DrawingArea",
        "add_artist"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AuxTransformBox",
        "add_artist"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_size.py",
      [
        "MaxExtent",
        "add_artist"
      ]
    ],
    [
      "tutorials/advanced/blitting.py",
      [
        "BlitManager",
        "add_artist"
      ]
    ]
  ],
  "add_child_axes": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "add_child_axes"
      ]
    ]
  ],
  "add_collection": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "add_collection"
      ]
    ]
  ],
  "add_image": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "add_image"
      ]
    ]
  ],
  "_update_image_limits": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "_update_image_limits"
      ]
    ]
  ],
  "add_line": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "add_line"
      ]
    ]
  ],
  "_add_text": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "_add_text"
      ]
    ]
  ],
  "_update_line_limits": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "_update_line_limits"
      ]
    ]
  ],
  "add_patch": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "add_patch"
      ]
    ]
  ],
  "_update_patch_limits": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "_update_patch_limits"
      ]
    ]
  ],
  "add_table": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "add_table"
      ]
    ]
  ],
  "add_container": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "add_container"
      ]
    ]
  ],
  "_unit_change_handler": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "_unit_change_handler"
      ]
    ]
  ],
  "relim": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "relim"
      ]
    ]
  ],
  "update_datalim": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "update_datalim"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "update_datalim"
      ]
    ]
  ],
  "_process_unit_info": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "_process_unit_info"
      ]
    ]
  ],
  "in_axes": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "in_axes"
      ]
    ]
  ],
  "get_autoscale_on": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_autoscale_on"
      ]
    ]
  ],
  "set_autoscale_on": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "set_autoscale_on"
      ]
    ]
  ],
  "use_sticky_edges": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "use_sticky_edges"
      ]
    ]
  ],
  "use_sticky_edges_85": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "use_sticky_edges_85"
      ]
    ]
  ],
  "set_xmargin": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "set_xmargin"
      ]
    ]
  ],
  "set_ymargin": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "set_ymargin"
      ]
    ]
  ],
  "margins": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "margins"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "margins"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "margins"
      ]
    ]
  ],
  "set_rasterization_zorder": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "set_rasterization_zorder"
      ]
    ]
  ],
  "get_rasterization_zorder": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_rasterization_zorder"
      ]
    ]
  ],
  "autoscale": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "autoscale"
      ]
    ],
    [
      "lib/matplotlib/cm.py",
      [
        "ScalarMappable",
        "autoscale"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "Normalize",
        "autoscale"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "CenteredNorm",
        "autoscale"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "_make_norm_from_scale",
        "Norm",
        "autoscale"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "autoscale"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "autoscale"
      ]
    ]
  ],
  "handle_single_axis": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "autoscale_view",
        "handle_single_axis"
      ]
    ]
  ],
  "autoscale_view": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "autoscale_view"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "autoscale_view"
      ]
    ]
  ],
  "_update_title_position": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "_update_title_position"
      ]
    ]
  ],
  "draw_artist": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "draw_artist"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "draw_artist"
      ]
    ]
  ],
  "redraw_in_frame": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "redraw_in_frame"
      ]
    ]
  ],
  "get_renderer_cache": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_renderer_cache"
      ]
    ]
  ],
  "get_frame_on": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_frame_on"
      ]
    ],
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "get_frame_on"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "get_frame_on"
      ]
    ]
  ],
  "set_frame_on": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "set_frame_on"
      ]
    ],
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "set_frame_on"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "set_frame_on"
      ]
    ]
  ],
  "get_axisbelow": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_axisbelow"
      ]
    ]
  ],
  "set_axisbelow": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "set_axisbelow"
      ]
    ]
  ],
  "grid": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "grid"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "grid"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "grid"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "Axes",
        "grid"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "grid"
      ]
    ]
  ],
  "ticklabel_format": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "ticklabel_format"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "ticklabel_format"
      ]
    ]
  ],
  "locator_params": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "locator_params"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "locator_params"
      ]
    ]
  ],
  "tick_params": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "tick_params"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "tick_params"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "tick_params"
      ]
    ]
  ],
  "set_axis_off": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "set_axis_off"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "set_axis_off"
      ]
    ]
  ],
  "set_axis_on": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "set_axis_on"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "set_axis_on"
      ]
    ]
  ],
  "get_xlabel": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_xlabel"
      ]
    ]
  ],
  "set_xlabel": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "set_xlabel"
      ]
    ]
  ],
  "invert_xaxis": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "invert_xaxis"
      ]
    ]
  ],
  "get_xbound": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_xbound"
      ]
    ]
  ],
  "set_xbound": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "set_xbound"
      ]
    ]
  ],
  "get_xlim": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_xlim"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "get_xlim"
      ]
    ]
  ],
  "_validate_converted_limits": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "_validate_converted_limits"
      ]
    ]
  ],
  "get_ylabel": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_ylabel"
      ]
    ]
  ],
  "set_ylabel": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "set_ylabel"
      ]
    ]
  ],
  "invert_yaxis": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "invert_yaxis"
      ]
    ]
  ],
  "get_ybound": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_ybound"
      ]
    ]
  ],
  "set_ybound": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "set_ybound"
      ]
    ]
  ],
  "get_ylim": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_ylim"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "get_ylim"
      ]
    ]
  ],
  "set_ylim": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "set_ylim"
      ]
    ]
  ],
  "format_xdata": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "format_xdata"
      ]
    ]
  ],
  "format_ydata": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "format_ydata"
      ]
    ]
  ],
  "minorticks_on": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "minorticks_on"
      ]
    ],
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "minorticks_on"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "minorticks_on"
      ]
    ]
  ],
  "minorticks_off": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "minorticks_off"
      ]
    ],
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "minorticks_off"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "minorticks_off"
      ]
    ]
  ],
  "get_navigate": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_navigate"
      ]
    ]
  ],
  "set_navigate": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "set_navigate"
      ]
    ]
  ],
  "get_navigate_mode": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_navigate_mode"
      ]
    ]
  ],
  "set_navigate_mode": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "set_navigate_mode"
      ]
    ]
  ],
  "_get_view": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "_get_view"
      ]
    ],
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "_get_view"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "_get_view"
      ]
    ]
  ],
  "_set_view": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "_set_view"
      ]
    ],
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "_set_view"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "_set_view"
      ]
    ]
  ],
  "_prepare_view_from_bbox": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "_prepare_view_from_bbox"
      ]
    ]
  ],
  "_set_view_from_bbox": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "_set_view_from_bbox"
      ]
    ],
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "_set_view_from_bbox"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "_set_view_from_bbox"
      ]
    ]
  ],
  "format_deltas": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "_get_pan_points",
        "format_deltas"
      ]
    ]
  ],
  "_get_pan_points": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "_get_pan_points"
      ]
    ]
  ],
  "contains_point": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "contains_point"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "contains_point"
      ]
    ],
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "contains_point"
      ]
    ]
  ],
  "get_default_bbox_extra_artists": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_default_bbox_extra_artists"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "get_default_bbox_extra_artists"
      ]
    ]
  ],
  "_make_twin_axes": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "_make_twin_axes"
      ]
    ],
    [
      "lib/matplotlib/axes/_subplots.py",
      [
        "SubplotBase",
        "_make_twin_axes"
      ]
    ]
  ],
  "twinx": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "twinx"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "twinx"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/parasite_axes.py",
      [
        "HostAxesBase",
        "twinx"
      ]
    ]
  ],
  "twiny": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "twiny"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "twiny"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/parasite_axes.py",
      [
        "HostAxesBase",
        "twiny"
      ]
    ]
  ],
  "get_shared_x_axes": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_shared_x_axes"
      ]
    ]
  ],
  "get_shared_y_axes": [
    [
      "lib/matplotlib/axes/_base.py",
      [
        "_AxesBase",
        "get_shared_y_axes"
      ]
    ]
  ],
  "set_alignment": [
    [
      "lib/matplotlib/axes/_secondary_axes.py",
      [
        "SecondaryAxis",
        "set_alignment"
      ]
    ],
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "set_alignment"
      ]
    ]
  ],
  "set_location": [
    [
      "lib/matplotlib/axes/_secondary_axes.py",
      [
        "SecondaryAxis",
        "set_location"
      ]
    ]
  ],
  "set_ticks": [
    [
      "lib/matplotlib/axes/_secondary_axes.py",
      [
        "SecondaryAxis",
        "set_ticks"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "set_ticks"
      ]
    ],
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "set_ticks"
      ]
    ]
  ],
  "set_functions": [
    [
      "lib/matplotlib/axes/_secondary_axes.py",
      [
        "SecondaryAxis",
        "set_functions"
      ]
    ]
  ],
  "_set_scale": [
    [
      "lib/matplotlib/axes/_secondary_axes.py",
      [
        "SecondaryAxis",
        "_set_scale"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "_set_scale"
      ]
    ],
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "_set_scale"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "ThetaAxis",
        "_set_scale"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "RadialAxis",
        "_set_scale"
      ]
    ]
  ],
  "_set_lims": [
    [
      "lib/matplotlib/axes/_secondary_axes.py",
      [
        "SecondaryAxis",
        "_set_lims"
      ]
    ]
  ],
  "set_color": [
    [
      "lib/matplotlib/axes/_secondary_axes.py",
      [
        "SecondaryAxis",
        "set_color"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "RendererPS",
        "set_color"
      ]
    ],
    [
      "lib/matplotlib/backends/qt_editor/_formlayout.py",
      [
        "ColorButton",
        "set_color"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "set_color"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "LineCollection",
        "set_color"
      ]
    ],
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "set_color"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "set_color"
      ]
    ],
    [
      "lib/matplotlib/spines.py",
      [
        "Spine",
        "set_color"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "set_color"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "Ticks",
        "set_color"
      ]
    ]
  ],
  "get_subplotspec": [
    [
      "lib/matplotlib/axes/_subplots.py",
      [
        "SubplotBase",
        "get_subplotspec"
      ]
    ],
    [
      "lib/matplotlib/colorbar.py",
      [
        "_ColorbarAxesLocator",
        "get_subplotspec"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "AxesLocator",
        "get_subplotspec"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "SubplotDivider",
        "get_subplotspec"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "AxesDivider",
        "get_subplotspec"
      ]
    ]
  ],
  "set_subplotspec": [
    [
      "lib/matplotlib/axes/_subplots.py",
      [
        "SubplotBase",
        "set_subplotspec"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "SubplotDivider",
        "set_subplotspec"
      ]
    ]
  ],
  "get_gridspec": [
    [
      "lib/matplotlib/axes/_subplots.py",
      [
        "SubplotBase",
        "get_gridspec"
      ]
    ],
    [
      "lib/matplotlib/gridspec.py",
      [
        "SubplotSpec",
        "get_gridspec"
      ]
    ]
  ],
  "label_outer": [
    [
      "lib/matplotlib/axes/_subplots.py",
      [
        "SubplotBase",
        "label_outer"
      ]
    ]
  ],
  "_label_outer_xaxis": [
    [
      "lib/matplotlib/axes/_subplots.py",
      [
        "SubplotBase",
        "_label_outer_xaxis"
      ]
    ]
  ],
  "_label_outer_yaxis": [
    [
      "lib/matplotlib/axes/_subplots.py",
      [
        "SubplotBase",
        "_label_outer_yaxis"
      ]
    ]
  ],
  "_set_labelrotation": [
    [
      "lib/matplotlib/axis.py",
      [
        "Tick",
        "_set_labelrotation"
      ]
    ]
  ],
  "_apply_tickdir": [
    [
      "lib/matplotlib/axis.py",
      [
        "Tick",
        "_apply_tickdir"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "XTick",
        "_apply_tickdir"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "YTick",
        "_apply_tickdir"
      ]
    ]
  ],
  "apply_tickdir": [
    [
      "lib/matplotlib/axis.py",
      [
        "Tick",
        "apply_tickdir"
      ]
    ]
  ],
  "get_tickdir": [
    [
      "lib/matplotlib/axis.py",
      [
        "Tick",
        "get_tickdir"
      ]
    ]
  ],
  "get_tick_padding": [
    [
      "lib/matplotlib/axis.py",
      [
        "Tick",
        "get_tick_padding"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_tick_padding"
      ]
    ]
  ],
  "get_pad_pixels": [
    [
      "lib/matplotlib/axis.py",
      [
        "Tick",
        "get_pad_pixels"
      ]
    ]
  ],
  "set_pad": [
    [
      "lib/matplotlib/axis.py",
      [
        "Tick",
        "set_pad"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisLabel",
        "set_pad"
      ]
    ]
  ],
  "_get_text1": [
    [
      "lib/matplotlib/axis.py",
      [
        "Tick",
        "_get_text1"
      ]
    ]
  ],
  "_get_text2": [
    [
      "lib/matplotlib/axis.py",
      [
        "Tick",
        "_get_text2"
      ]
    ]
  ],
  "_get_tick1line": [
    [
      "lib/matplotlib/axis.py",
      [
        "Tick",
        "_get_tick1line"
      ]
    ]
  ],
  "_get_tick2line": [
    [
      "lib/matplotlib/axis.py",
      [
        "Tick",
        "_get_tick2line"
      ]
    ]
  ],
  "_get_gridline": [
    [
      "lib/matplotlib/axis.py",
      [
        "Tick",
        "_get_gridline"
      ]
    ]
  ],
  "get_loc": [
    [
      "lib/matplotlib/axis.py",
      [
        "Tick",
        "get_loc"
      ]
    ]
  ],
  "set_label1": [
    [
      "lib/matplotlib/axis.py",
      [
        "Tick",
        "set_label1"
      ]
    ]
  ],
  "set_label2": [
    [
      "lib/matplotlib/axis.py",
      [
        "Tick",
        "set_label2"
      ]
    ]
  ],
  "_apply_params": [
    [
      "lib/matplotlib/axis.py",
      [
        "Tick",
        "_apply_params"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "ThetaTick",
        "_apply_params"
      ]
    ]
  ],
  "update_position": [
    [
      "lib/matplotlib/axis.py",
      [
        "Tick",
        "update_position"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "XTick",
        "update_position"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "YTick",
        "update_position"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "ThetaTick",
        "update_position"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "RadialTick",
        "update_position"
      ]
    ]
  ],
  "_get_text1_transform": [
    [
      "lib/matplotlib/axis.py",
      [
        "Tick",
        "_get_text1_transform"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "XTick",
        "_get_text1_transform"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "YTick",
        "_get_text1_transform"
      ]
    ]
  ],
  "_get_text2_transform": [
    [
      "lib/matplotlib/axis.py",
      [
        "Tick",
        "_get_text2_transform"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "XTick",
        "_get_text2_transform"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "YTick",
        "_get_text2_transform"
      ]
    ]
  ],
  "locator": [
    [
      "lib/matplotlib/axis.py",
      [
        "Ticker",
        "locator"
      ]
    ],
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "locator"
      ]
    ]
  ],
  "locator_1": [
    [
      "lib/matplotlib/axis.py",
      [
        "Ticker",
        "locator_1"
      ]
    ],
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "locator_1"
      ]
    ]
  ],
  "formatter": [
    [
      "lib/matplotlib/axis.py",
      [
        "Ticker",
        "formatter"
      ]
    ],
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "formatter"
      ]
    ]
  ],
  "formatter_3": [
    [
      "lib/matplotlib/axis.py",
      [
        "Ticker",
        "formatter_3"
      ]
    ]
  ],
  "isDefault_majloc": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "isDefault_majloc"
      ]
    ]
  ],
  "isDefault_majloc_2": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "isDefault_majloc_2"
      ]
    ]
  ],
  "isDefault_majfmt": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "isDefault_majfmt"
      ]
    ]
  ],
  "isDefault_majfmt_4": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "isDefault_majfmt_4"
      ]
    ]
  ],
  "isDefault_minloc": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "isDefault_minloc"
      ]
    ]
  ],
  "isDefault_minloc_6": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "isDefault_minloc_6"
      ]
    ]
  ],
  "isDefault_minfmt": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "isDefault_minfmt"
      ]
    ]
  ],
  "isDefault_minfmt_8": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "isDefault_minfmt_8"
      ]
    ]
  ],
  "get_remove_overlapping_locs": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_remove_overlapping_locs"
      ]
    ]
  ],
  "set_remove_overlapping_locs": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "set_remove_overlapping_locs"
      ]
    ]
  ],
  "set_label_coords": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "set_label_coords"
      ]
    ]
  ],
  "get_scale": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_scale"
      ]
    ]
  ],
  "_set_axes_scale": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "_set_axes_scale"
      ]
    ]
  ],
  "_get_autoscale_on": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "_get_autoscale_on"
      ]
    ]
  ],
  "_set_autoscale_on": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "_set_autoscale_on"
      ]
    ]
  ],
  "_reset_major_tick_kw": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "_reset_major_tick_kw"
      ]
    ]
  ],
  "_reset_minor_tick_kw": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "_reset_minor_tick_kw"
      ]
    ]
  ],
  "reset_ticks": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "reset_ticks"
      ]
    ]
  ],
  "set_tick_params": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "set_tick_params"
      ]
    ]
  ],
  "_translate_tick_params": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "_translate_tick_params"
      ]
    ]
  ],
  "set_view_interval": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "set_view_interval"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "_AxisWrapper",
        "set_view_interval"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "_DummyAxis",
        "set_view_interval"
      ]
    ]
  ],
  "get_data_interval": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_data_interval"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "_AxisWrapper",
        "get_data_interval"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "_DummyAxis",
        "get_data_interval"
      ]
    ]
  ],
  "set_data_interval": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "set_data_interval"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "_AxisWrapper",
        "set_data_interval"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "_DummyAxis",
        "set_data_interval"
      ]
    ]
  ],
  "get_inverted": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_inverted"
      ]
    ]
  ],
  "set_inverted": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "set_inverted"
      ]
    ]
  ],
  "set_default_intervals": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "set_default_intervals"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "XAxis",
        "set_default_intervals"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "YAxis",
        "set_default_intervals"
      ]
    ]
  ],
  "_set_lim": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "_set_lim"
      ]
    ]
  ],
  "get_ticklabel_extents": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_ticklabel_extents"
      ]
    ]
  ],
  "_update_ticks": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "_update_ticks"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisArtist",
        "_update_ticks"
      ]
    ]
  ],
  "_get_ticklabel_bboxes": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "_get_ticklabel_bboxes"
      ]
    ]
  ],
  "get_gridlines": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_gridlines"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "GridHelperBase",
        "get_gridlines"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "GridHelperRectlinear",
        "get_gridlines"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/floating_axes.py",
      [
        "GridHelperCurveLinear",
        "get_gridlines"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/grid_helper_curvelinear.py",
      [
        "GridHelperCurveLinear",
        "get_gridlines"
      ]
    ]
  ],
  "get_offset_text": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_offset_text"
      ]
    ]
  ],
  "get_pickradius": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_pickradius"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "get_pickradius"
      ]
    ],
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "get_pickradius"
      ]
    ]
  ],
  "get_majorticklabels": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_majorticklabels"
      ]
    ]
  ],
  "get_minorticklabels": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_minorticklabels"
      ]
    ]
  ],
  "get_ticklabels": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_ticklabels"
      ]
    ]
  ],
  "get_majorticklines": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_majorticklines"
      ]
    ]
  ],
  "get_minorticklines": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_minorticklines"
      ]
    ]
  ],
  "get_ticklines": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_ticklines"
      ]
    ]
  ],
  "get_majorticklocs": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_majorticklocs"
      ]
    ]
  ],
  "get_minorticklocs": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_minorticklocs"
      ]
    ]
  ],
  "get_ticklocs": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_ticklocs"
      ]
    ]
  ],
  "get_ticks_direction": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_ticks_direction"
      ]
    ]
  ],
  "_get_tick_label_size": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "_get_tick_label_size"
      ]
    ]
  ],
  "_copy_tick_props": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "_copy_tick_props"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "ThetaAxis",
        "_copy_tick_props"
      ]
    ]
  ],
  "get_label_text": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_label_text"
      ]
    ]
  ],
  "get_major_locator": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_major_locator"
      ]
    ]
  ],
  "get_minor_locator": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_minor_locator"
      ]
    ]
  ],
  "get_major_formatter": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_major_formatter"
      ]
    ]
  ],
  "get_minor_formatter": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_minor_formatter"
      ]
    ]
  ],
  "get_major_ticks": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_major_ticks"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axis3d.py",
      [
        "Axis",
        "get_major_ticks"
      ]
    ]
  ],
  "get_minor_ticks": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_minor_ticks"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axis3d.py",
      [
        "Axis",
        "get_minor_ticks"
      ]
    ]
  ],
  "update_units": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "update_units"
      ]
    ]
  ],
  "_update_axisinfo": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "_update_axisinfo"
      ]
    ]
  ],
  "convert_units": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "convert_units"
      ]
    ]
  ],
  "set_units": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "set_units"
      ]
    ]
  ],
  "get_units": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_units"
      ]
    ]
  ],
  "set_label_text": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "set_label_text"
      ]
    ]
  ],
  "set_major_formatter": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "set_major_formatter"
      ]
    ]
  ],
  "set_minor_formatter": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "set_minor_formatter"
      ]
    ]
  ],
  "_set_formatter": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "_set_formatter"
      ]
    ]
  ],
  "set_major_locator": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "set_major_locator"
      ]
    ]
  ],
  "set_minor_locator": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "set_minor_locator"
      ]
    ]
  ],
  "set_pickradius": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "set_pickradius"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "set_pickradius"
      ]
    ],
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "set_pickradius"
      ]
    ]
  ],
  "_format_with_dict": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "_format_with_dict"
      ]
    ]
  ],
  "set_ticklabels": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "set_ticklabels"
      ]
    ],
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "set_ticklabels"
      ]
    ]
  ],
  "_set_ticklabels": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "_set_ticklabels"
      ]
    ]
  ],
  "_set_tick_locations": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "_set_tick_locations"
      ]
    ]
  ],
  "_get_tick_boxes_siblings": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "_get_tick_boxes_siblings"
      ]
    ]
  ],
  "_update_label_position": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "_update_label_position"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "XAxis",
        "_update_label_position"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "YAxis",
        "_update_label_position"
      ]
    ]
  ],
  "_update_offset_text_position": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "_update_offset_text_position"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "XAxis",
        "_update_offset_text_position"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "YAxis",
        "_update_offset_text_position"
      ]
    ]
  ],
  "axis_date": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "axis_date"
      ]
    ]
  ],
  "get_tick_space": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_tick_space"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "XAxis",
        "get_tick_space"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "YAxis",
        "get_tick_space"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "_AxisWrapper",
        "get_tick_space"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "_DummyAxis",
        "get_tick_space"
      ]
    ]
  ],
  "_get_ticks_position": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "_get_ticks_position"
      ]
    ]
  ],
  "get_label_position": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_label_position"
      ]
    ]
  ],
  "set_label_position": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "set_label_position"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "XAxis",
        "set_label_position"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "YAxis",
        "set_label_position"
      ]
    ]
  ],
  "get_minpos": [
    [
      "lib/matplotlib/axis.py",
      [
        "Axis",
        "get_minpos"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "XAxis",
        "get_minpos"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "YAxis",
        "get_minpos"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "_AxisWrapper",
        "get_minpos"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "_DummyAxis",
        "get_minpos"
      ]
    ]
  ],
  "getter": [
    [
      "lib/matplotlib/axis.py",
      [
        "_make_getset_interval",
        "getter"
      ]
    ]
  ],
  "setter": [
    [
      "lib/matplotlib/axis.py",
      [
        "_make_getset_interval",
        "setter"
      ]
    ]
  ],
  "_make_getset_interval": [
    [
      "lib/matplotlib/axis.py",
      [
        "_make_getset_interval"
      ]
    ]
  ],
  "_init": [
    [
      "lib/matplotlib/axis.py",
      [
        "XAxis",
        "_init"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "YAxis",
        "_init"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "Colormap",
        "_init"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "LinearSegmentedColormap",
        "_init"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "ListedColormap",
        "_init"
      ]
    ],
    [
      "lib/matplotlib/quiver.py",
      [
        "QuiverKey",
        "_init"
      ]
    ],
    [
      "lib/matplotlib/quiver.py",
      [
        "Quiver",
        "_init"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "TransformWrapper",
        "_init"
      ]
    ]
  ],
  "get_text_heights": [
    [
      "lib/matplotlib/axis.py",
      [
        "XAxis",
        "get_text_heights"
      ]
    ]
  ],
  "set_ticks_position": [
    [
      "lib/matplotlib/axis.py",
      [
        "XAxis",
        "set_ticks_position"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "YAxis",
        "set_ticks_position"
      ]
    ]
  ],
  "tick_top": [
    [
      "lib/matplotlib/axis.py",
      [
        "XAxis",
        "tick_top"
      ]
    ]
  ],
  "tick_bottom": [
    [
      "lib/matplotlib/axis.py",
      [
        "XAxis",
        "tick_bottom"
      ]
    ]
  ],
  "get_ticks_position": [
    [
      "lib/matplotlib/axis.py",
      [
        "XAxis",
        "get_ticks_position"
      ]
    ],
    [
      "lib/matplotlib/axis.py",
      [
        "YAxis",
        "get_ticks_position"
      ]
    ]
  ],
  "set_offset_position": [
    [
      "lib/matplotlib/axis.py",
      [
        "YAxis",
        "set_offset_position"
      ]
    ]
  ],
  "get_text_widths": [
    [
      "lib/matplotlib/axis.py",
      [
        "YAxis",
        "get_text_widths"
      ]
    ]
  ],
  "tick_right": [
    [
      "lib/matplotlib/axis.py",
      [
        "YAxis",
        "tick_right"
      ]
    ]
  ],
  "tick_left": [
    [
      "lib/matplotlib/axis.py",
      [
        "YAxis",
        "tick_left"
      ]
    ]
  ],
  "_safe_pyplot_import": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "_safe_pyplot_import"
      ]
    ]
  ],
  "register_backend": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "register_backend"
      ]
    ]
  ],
  "get_registered_canvas_class": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "get_registered_canvas_class"
      ]
    ]
  ],
  "open_group": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "open_group"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "open_group"
      ]
    ]
  ],
  "close_group": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "close_group"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "close_group"
      ]
    ]
  ],
  "draw_path": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "draw_path"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "RendererAgg",
        "draw_path"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "RendererCairo",
        "draw_path"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "RendererPdf",
        "draw_path"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "RendererPgf",
        "draw_path"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "RendererPS",
        "draw_path"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "draw_path"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_template.py",
      [
        "RendererTemplate",
        "draw_path"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "RendererWx",
        "draw_path"
      ]
    ],
    [
      "lib/matplotlib/patheffects.py",
      [
        "AbstractPathEffect",
        "draw_path"
      ]
    ],
    [
      "lib/matplotlib/patheffects.py",
      [
        "PathEffectRenderer",
        "draw_path"
      ]
    ],
    [
      "lib/matplotlib/patheffects.py",
      [
        "_subclass_with_normal",
        "withEffect",
        "draw_path"
      ]
    ],
    [
      "lib/matplotlib/patheffects.py",
      [
        "Stroke",
        "draw_path"
      ]
    ],
    [
      "lib/matplotlib/patheffects.py",
      [
        "SimplePatchShadow",
        "draw_path"
      ]
    ],
    [
      "lib/matplotlib/patheffects.py",
      [
        "SimpleLineShadow",
        "draw_path"
      ]
    ],
    [
      "lib/matplotlib/patheffects.py",
      [
        "PathPatchEffect",
        "draw_path"
      ]
    ],
    [
      "lib/matplotlib/patheffects.py",
      [
        "TickedStroke",
        "draw_path"
      ]
    ]
  ],
  "draw_markers": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "draw_markers"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "RendererCairo",
        "draw_markers"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "RendererPdf",
        "draw_markers"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "RendererPgf",
        "draw_markers"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "RendererPS",
        "draw_markers"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "draw_markers"
      ]
    ],
    [
      "lib/matplotlib/patheffects.py",
      [
        "PathEffectRenderer",
        "draw_markers"
      ]
    ]
  ],
  "draw_path_collection": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "draw_path_collection"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "RendererPdf",
        "draw_path_collection"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "RendererPS",
        "draw_path_collection"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "draw_path_collection"
      ]
    ],
    [
      "lib/matplotlib/patheffects.py",
      [
        "PathEffectRenderer",
        "draw_path_collection"
      ]
    ]
  ],
  "draw_quad_mesh": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "draw_quad_mesh"
      ]
    ]
  ],
  "draw_gouraud_triangle": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "draw_gouraud_triangle"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "RendererPdf",
        "draw_gouraud_triangle"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "RendererPS",
        "draw_gouraud_triangle"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "draw_gouraud_triangle"
      ]
    ]
  ],
  "draw_gouraud_triangles": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "draw_gouraud_triangles"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "RendererPdf",
        "draw_gouraud_triangles"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "RendererPS",
        "draw_gouraud_triangles"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "draw_gouraud_triangles"
      ]
    ]
  ],
  "_iter_collection_raw_paths": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "_iter_collection_raw_paths"
      ]
    ]
  ],
  "_iter_collection_uses_per_path": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "_iter_collection_uses_per_path"
      ]
    ]
  ],
  "cycle_or_default": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "_iter_collection",
        "cycle_or_default"
      ]
    ]
  ],
  "_iter_collection": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "_iter_collection"
      ]
    ]
  ],
  "get_image_magnification": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "get_image_magnification"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "RendererPdf",
        "get_image_magnification"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "RendererPS",
        "get_image_magnification"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "get_image_magnification"
      ]
    ]
  ],
  "draw_image": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "draw_image"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "RendererCairo",
        "draw_image"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "RendererPdf",
        "draw_image"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "RendererPgf",
        "draw_image"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "RendererPS",
        "draw_image"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "draw_image"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_template.py",
      [
        "RendererTemplate",
        "draw_image"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "RendererWx",
        "draw_image"
      ]
    ]
  ],
  "option_image_nocomposite": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "option_image_nocomposite"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_pdf_ps.py",
      [
        "RendererPDFPSBase",
        "option_image_nocomposite"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "RendererAgg",
        "option_image_nocomposite"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "RendererPgf",
        "option_image_nocomposite"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "option_image_nocomposite"
      ]
    ]
  ],
  "option_scale_image": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "option_scale_image"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_pdf_ps.py",
      [
        "RendererPDFPSBase",
        "option_scale_image"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "RendererAgg",
        "option_scale_image"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "RendererPgf",
        "option_scale_image"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "option_scale_image"
      ]
    ]
  ],
  "draw_tex": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "draw_tex"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "RendererAgg",
        "draw_tex"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "RendererPdf",
        "draw_tex"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "RendererPgf",
        "draw_tex"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "RendererPS",
        "draw_tex"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "draw_tex"
      ]
    ]
  ],
  "_get_text_path_transform": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "_get_text_path_transform"
      ]
    ]
  ],
  "_draw_text_as_path": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "_draw_text_as_path"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "_draw_text_as_path"
      ]
    ],
    [
      "lib/matplotlib/patheffects.py",
      [
        "PathEffectRenderer",
        "_draw_text_as_path"
      ]
    ]
  ],
  "get_text_width_height_descent": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "get_text_width_height_descent"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_pdf_ps.py",
      [
        "RendererPDFPSBase",
        "get_text_width_height_descent"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "RendererAgg",
        "get_text_width_height_descent"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "RendererCairo",
        "get_text_width_height_descent"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "RendererPgf",
        "get_text_width_height_descent"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "get_text_width_height_descent"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_template.py",
      [
        "RendererTemplate",
        "get_text_width_height_descent"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "RendererWx",
        "get_text_width_height_descent"
      ]
    ],
    [
      "lib/matplotlib/texmanager.py",
      [
        "TexManager",
        "get_text_width_height_descent"
      ]
    ],
    [
      "lib/matplotlib/textpath.py",
      [
        "TextToPath",
        "get_text_width_height_descent"
      ]
    ]
  ],
  "flipy": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "flipy"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_pdf_ps.py",
      [
        "RendererPDFPSBase",
        "flipy"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "RendererPgf",
        "flipy"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "flipy"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_template.py",
      [
        "RendererTemplate",
        "flipy"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "RendererWx",
        "flipy"
      ]
    ]
  ],
  "get_canvas_width_height": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "get_canvas_width_height"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_pdf_ps.py",
      [
        "RendererPDFPSBase",
        "get_canvas_width_height"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "RendererAgg",
        "get_canvas_width_height"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "RendererCairo",
        "get_canvas_width_height"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "RendererPgf",
        "get_canvas_width_height"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "get_canvas_width_height"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_template.py",
      [
        "RendererTemplate",
        "get_canvas_width_height"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "RendererWx",
        "get_canvas_width_height"
      ]
    ]
  ],
  "get_texmanager": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "get_texmanager"
      ]
    ],
    [
      "lib/matplotlib/textpath.py",
      [
        "TextToPath",
        "get_texmanager"
      ]
    ]
  ],
  "new_gc": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "new_gc"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "RendererCairo",
        "new_gc"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "RendererPdf",
        "new_gc"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_template.py",
      [
        "RendererTemplate",
        "new_gc"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "RendererWx",
        "new_gc"
      ]
    ]
  ],
  "points_to_pixels": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "points_to_pixels"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "RendererAgg",
        "points_to_pixels"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "RendererCairo",
        "points_to_pixels"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "RendererPgf",
        "points_to_pixels"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_template.py",
      [
        "RendererTemplate",
        "points_to_pixels"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "RendererWx",
        "points_to_pixels"
      ]
    ]
  ],
  "start_rasterizing": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "start_rasterizing"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_mixed.py",
      [
        "MixedModeRenderer",
        "start_rasterizing"
      ]
    ]
  ],
  "stop_rasterizing": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "stop_rasterizing"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_mixed.py",
      [
        "MixedModeRenderer",
        "stop_rasterizing"
      ]
    ]
  ],
  "start_filter": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "start_filter"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "RendererAgg",
        "start_filter"
      ]
    ]
  ],
  "stop_filter": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "stop_filter"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "RendererAgg",
        "stop_filter"
      ]
    ]
  ],
  "_draw_disabled": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "RendererBase",
        "_draw_disabled"
      ]
    ]
  ],
  "copy_properties": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "copy_properties"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "GraphicsContextPdf",
        "copy_properties"
      ]
    ]
  ],
  "restore": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "restore"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "GraphicsContextCairo",
        "restore"
      ]
    ]
  ],
  "get_antialiased": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "get_antialiased"
      ]
    ],
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "get_antialiased"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "get_antialiased"
      ]
    ]
  ],
  "get_capstyle": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "get_capstyle"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "get_capstyle"
      ]
    ],
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "get_capstyle"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "get_capstyle"
      ]
    ]
  ],
  "get_clip_rectangle": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "get_clip_rectangle"
      ]
    ]
  ],
  "get_dashes": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "get_dashes"
      ]
    ]
  ],
  "get_forced_alpha": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "get_forced_alpha"
      ]
    ]
  ],
  "get_joinstyle": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "get_joinstyle"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "get_joinstyle"
      ]
    ],
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "get_joinstyle"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "get_joinstyle"
      ]
    ]
  ],
  "get_linewidth": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "get_linewidth"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "get_linewidth"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "EventCollection",
        "get_linewidth"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "get_linewidth"
      ]
    ],
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "get_linewidth"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "get_linewidth"
      ]
    ]
  ],
  "set_antialiased": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "set_antialiased"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "GraphicsContextCairo",
        "set_antialiased"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "set_antialiased"
      ]
    ],
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "set_antialiased"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "set_antialiased"
      ]
    ]
  ],
  "set_capstyle": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "set_capstyle"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "GraphicsContextCairo",
        "set_capstyle"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "GraphicsContextWx",
        "set_capstyle"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "set_capstyle"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "set_capstyle"
      ]
    ]
  ],
  "set_clip_rectangle": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "set_clip_rectangle"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "GraphicsContextCairo",
        "set_clip_rectangle"
      ]
    ]
  ],
  "set_dashes": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "set_dashes"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "GraphicsContextCairo",
        "set_dashes"
      ]
    ],
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "set_dashes"
      ]
    ]
  ],
  "set_foreground": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "set_foreground"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "GraphicsContextCairo",
        "set_foreground"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "GraphicsContextWx",
        "set_foreground"
      ]
    ]
  ],
  "set_joinstyle": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "set_joinstyle"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "GraphicsContextCairo",
        "set_joinstyle"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "GraphicsContextWx",
        "set_joinstyle"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "set_joinstyle"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "set_joinstyle"
      ]
    ]
  ],
  "set_linewidth": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "set_linewidth"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "GraphicsContextCairo",
        "set_linewidth"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "RendererPS",
        "set_linewidth"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "GraphicsContextWx",
        "set_linewidth"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "set_linewidth"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "set_linewidth"
      ]
    ],
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "set_linewidth"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "set_linewidth"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Path3DCollection",
        "set_linewidth"
      ]
    ]
  ],
  "set_hatch": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "set_hatch"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "set_hatch"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "set_hatch"
      ]
    ]
  ],
  "get_hatch": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "get_hatch"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "get_hatch"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "get_hatch"
      ]
    ]
  ],
  "get_hatch_path": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "get_hatch_path"
      ]
    ]
  ],
  "get_hatch_color": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "get_hatch_color"
      ]
    ]
  ],
  "set_hatch_color": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "set_hatch_color"
      ]
    ]
  ],
  "get_hatch_linewidth": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "GraphicsContextBase",
        "get_hatch_linewidth"
      ]
    ]
  ],
  "start": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "TimerBase",
        "start"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "XMLWriter",
        "start"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg.py",
      [
        "WebAggApplication",
        "start"
      ]
    ]
  ],
  "stop": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "TimerBase",
        "stop"
      ]
    ]
  ],
  "_timer_start": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "TimerBase",
        "_timer_start"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_gtk.py",
      [
        "TimerGTK",
        "_timer_start"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "TimerTk",
        "_timer_start"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "TimerQT",
        "_timer_start"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "TimerTornado",
        "_timer_start"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "TimerAsyncio",
        "_timer_start"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "TimerWx",
        "_timer_start"
      ]
    ]
  ],
  "_timer_stop": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "TimerBase",
        "_timer_stop"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_gtk.py",
      [
        "TimerGTK",
        "_timer_stop"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "TimerTk",
        "_timer_stop"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "TimerQT",
        "_timer_stop"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "TimerTornado",
        "_timer_stop"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "TimerAsyncio",
        "_timer_stop"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "TimerWx",
        "_timer_stop"
      ]
    ]
  ],
  "interval": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "TimerBase",
        "interval"
      ]
    ]
  ],
  "interval_6": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "TimerBase",
        "interval_6"
      ]
    ]
  ],
  "single_shot": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "TimerBase",
        "single_shot"
      ]
    ]
  ],
  "single_shot_8": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "TimerBase",
        "single_shot_8"
      ]
    ]
  ],
  "_timer_set_interval": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "TimerBase",
        "_timer_set_interval"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_gtk.py",
      [
        "TimerGTK",
        "_timer_set_interval"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "TimerQT",
        "_timer_set_interval"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "TimerTornado",
        "_timer_set_interval"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "TimerAsyncio",
        "_timer_set_interval"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "TimerWx",
        "_timer_set_interval"
      ]
    ]
  ],
  "_timer_set_single_shot": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "TimerBase",
        "_timer_set_single_shot"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "TimerQT",
        "_timer_set_single_shot"
      ]
    ]
  ],
  "_on_timer": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "TimerBase",
        "_on_timer"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_gtk.py",
      [
        "TimerGTK",
        "_on_timer"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "TimerTk",
        "_on_timer"
      ]
    ]
  ],
  "_process": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "Event",
        "_process"
      ]
    ]
  ],
  "_key_handler": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "_key_handler"
      ]
    ]
  ],
  "_mouse_handler": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "_mouse_handler"
      ]
    ]
  ],
  "_draw": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "_get_renderer",
        "_draw"
      ]
    ]
  ],
  "_get_renderer": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "_get_renderer"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "SubFigure",
        "_get_renderer"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "_get_renderer"
      ]
    ]
  ],
  "_no_output_draw": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "_no_output_draw"
      ]
    ]
  ],
  "_is_non_interactive_terminal_ipython": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "_is_non_interactive_terminal_ipython"
      ]
    ]
  ],
  "supports_blit": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "supports_blit"
      ]
    ]
  ],
  "_fix_ipython_backend2gui": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "_fix_ipython_backend2gui"
      ]
    ]
  ],
  "new_manager": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "new_manager"
      ]
    ]
  ],
  "_idle_draw_cntx": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "_idle_draw_cntx"
      ]
    ]
  ],
  "is_saving": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "is_saving"
      ]
    ]
  ],
  "blit": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "blit"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "blit"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk3agg.py",
      [
        "FigureCanvasGTK3Agg",
        "blit"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_macosx.py",
      [
        "FigureCanvasMac",
        "blit"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureCanvasQT",
        "blit"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_tkagg.py",
      [
        "FigureCanvasTkAgg",
        "blit"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureCanvasWebAggCore",
        "blit"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wxagg.py",
      [
        "FigureCanvasWxAgg",
        "blit"
      ]
    ]
  ],
  "resize": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "resize"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureManagerBase",
        "resize"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_gtk.py",
      [
        "_FigureManagerGTK",
        "resize"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureCanvasTk",
        "resize"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureManagerTk",
        "resize"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_macosx.py",
      [
        "FigureCanvasMac",
        "resize"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureManagerQT",
        "resize"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureManagerWebAgg",
        "resize"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "FigureManagerWx",
        "resize"
      ]
    ]
  ],
  "draw_event": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "draw_event"
      ]
    ]
  ],
  "resize_event": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "resize_event"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "FigureCanvasGTK4",
        "resize_event"
      ]
    ]
  ],
  "close_event": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "close_event"
      ]
    ]
  ],
  "key_press_event": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "key_press_event"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "FigureCanvasGTK3",
        "key_press_event"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "FigureCanvasGTK4",
        "key_press_event"
      ]
    ]
  ],
  "key_release_event": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "key_release_event"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "FigureCanvasGTK3",
        "key_release_event"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "FigureCanvasGTK4",
        "key_release_event"
      ]
    ]
  ],
  "pick_event": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "pick_event"
      ]
    ]
  ],
  "scroll_event": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "scroll_event"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureCanvasTk",
        "scroll_event"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "FigureCanvasGTK3",
        "scroll_event"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "FigureCanvasGTK4",
        "scroll_event"
      ]
    ]
  ],
  "button_press_event": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "button_press_event"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureCanvasTk",
        "button_press_event"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "FigureCanvasGTK3",
        "button_press_event"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "FigureCanvasGTK4",
        "button_press_event"
      ]
    ]
  ],
  "button_release_event": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "button_release_event"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureCanvasTk",
        "button_release_event"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "FigureCanvasGTK3",
        "button_release_event"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "FigureCanvasGTK4",
        "button_release_event"
      ]
    ]
  ],
  "motion_notify_event": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "motion_notify_event"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureCanvasTk",
        "motion_notify_event"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "FigureCanvasGTK3",
        "motion_notify_event"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "FigureCanvasGTK4",
        "motion_notify_event"
      ]
    ]
  ],
  "leave_notify_event": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "leave_notify_event"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureCanvasTk",
        "leave_notify_event"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "FigureCanvasGTK3",
        "leave_notify_event"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "FigureCanvasGTK4",
        "leave_notify_event"
      ]
    ]
  ],
  "enter_notify_event": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "enter_notify_event"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureCanvasTk",
        "enter_notify_event"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "FigureCanvasGTK3",
        "enter_notify_event"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "FigureCanvasGTK4",
        "enter_notify_event"
      ]
    ]
  ],
  "inaxes": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "inaxes"
      ]
    ]
  ],
  "grab_mouse": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "grab_mouse"
      ]
    ]
  ],
  "release_mouse": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "release_mouse"
      ]
    ]
  ],
  "set_cursor": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "set_cursor"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "NavigationToolbar2",
        "set_cursor"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "SetCursorBase",
        "set_cursor"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureCanvasTk",
        "set_cursor"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "SetCursorTk",
        "set_cursor"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "FigureCanvasGTK3",
        "set_cursor"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "SetCursorGTK3",
        "set_cursor"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "FigureCanvasGTK4",
        "set_cursor"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureCanvasQT",
        "set_cursor"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "SetCursorQt",
        "set_cursor"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureCanvasWebAggCore",
        "set_cursor"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "_FigureCanvasWxBase",
        "set_cursor"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "SetCursorWx",
        "set_cursor"
      ]
    ]
  ],
  "draw_idle": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "draw_idle"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureCanvasTk",
        "draw_idle"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "FigureCanvasGTK3",
        "draw_idle"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "FigureCanvasGTK4",
        "draw_idle"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_macosx.py",
      [
        "FigureCanvasMac",
        "draw_idle"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureCanvasQT",
        "draw_idle"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureCanvasWebAggCore",
        "draw_idle"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "_FigureCanvasWxBase",
        "draw_idle"
      ]
    ]
  ],
  "device_pixel_ratio": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "device_pixel_ratio"
      ]
    ]
  ],
  "_set_device_pixel_ratio": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "_set_device_pixel_ratio"
      ]
    ]
  ],
  "get_width_height": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "get_width_height"
      ]
    ]
  ],
  "get_supported_filetypes": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "get_supported_filetypes"
      ]
    ]
  ],
  "get_supported_filetypes_grouped": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "get_supported_filetypes_grouped"
      ]
    ]
  ],
  "_switch_canvas_and_return_print_method": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "_switch_canvas_and_return_print_method"
      ]
    ]
  ],
  "print_figure": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "print_figure"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qtagg.py",
      [
        "FigureCanvasQTAgg",
        "print_figure"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "_FigureCanvasWxBase",
        "print_figure"
      ]
    ]
  ],
  "get_default_filetype": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "get_default_filetype"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "FigureCanvasPdf",
        "get_default_filetype"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "FigureCanvasPgf",
        "get_default_filetype"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "FigureCanvasPS",
        "get_default_filetype"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "FigureCanvasSVG",
        "get_default_filetype"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_template.py",
      [
        "FigureCanvasTemplate",
        "get_default_filetype"
      ]
    ]
  ],
  "get_default_filename": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "get_default_filename"
      ]
    ]
  ],
  "switch_backends": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "switch_backends"
      ]
    ]
  ],
  "mpl_connect": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "mpl_connect"
      ]
    ]
  ],
  "mpl_disconnect": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "mpl_disconnect"
      ]
    ]
  ],
  "new_timer": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "new_timer"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureCanvasTk",
        "new_timer"
      ]
    ]
  ],
  "flush_events": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "flush_events"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureCanvasTk",
        "flush_events"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "FigureCanvasGTK3",
        "flush_events"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "FigureCanvasGTK4",
        "flush_events"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureCanvasQT",
        "flush_events"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "_FigureCanvasWxBase",
        "flush_events"
      ]
    ]
  ],
  "start_event_loop": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "start_event_loop"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureCanvasTk",
        "start_event_loop"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureCanvasQT",
        "start_event_loop"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "_FigureCanvasWxBase",
        "start_event_loop"
      ]
    ]
  ],
  "stop_event_loop": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureCanvasBase",
        "stop_event_loop"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureCanvasTk",
        "stop_event_loop"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureCanvasQT",
        "stop_event_loop"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "_FigureCanvasWxBase",
        "stop_event_loop"
      ]
    ]
  ],
  "_get_uniform_gridstate": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "key_press_handler",
        "_get_uniform_gridstate"
      ]
    ]
  ],
  "key_press_handler": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "key_press_handler"
      ]
    ]
  ],
  "button_press_handler": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "button_press_handler"
      ]
    ]
  ],
  "notify_axes_change": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureManagerBase",
        "__init__",
        "notify_axes_change"
      ]
    ]
  ],
  "create_with_canvas": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureManagerBase",
        "create_with_canvas"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureManagerTk",
        "create_with_canvas"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_nbagg.py",
      [
        "FigureManagerNbAgg",
        "create_with_canvas"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "FigureManagerWx",
        "create_with_canvas"
      ]
    ]
  ],
  "show": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureManagerBase",
        "show"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "_Backend",
        "show"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_gtk.py",
      [
        "_FigureManagerGTK",
        "show"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureManagerTk",
        "show"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_macosx.py",
      [
        "FigureManagerMac",
        "show"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_nbagg.py",
      [
        "FigureManagerNbAgg",
        "show"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureManagerQT",
        "show"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_template.py",
      [
        "show"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg.py",
      [
        "_BackendWebAgg",
        "show"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureCanvasWebAggCore",
        "show"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureManagerWebAgg",
        "show"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "FigureManagerWx",
        "show"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "_HelpDialog",
        "show"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "show"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "show"
      ]
    ]
  ],
  "full_screen_toggle": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureManagerBase",
        "full_screen_toggle"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_gtk.py",
      [
        "_FigureManagerGTK",
        "full_screen_toggle"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureManagerTk",
        "full_screen_toggle"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureManagerQT",
        "full_screen_toggle"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "FigureManagerWx",
        "full_screen_toggle"
      ]
    ]
  ],
  "get_window_title": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureManagerBase",
        "get_window_title"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_gtk.py",
      [
        "_FigureManagerGTK",
        "get_window_title"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureManagerTk",
        "get_window_title"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureManagerQT",
        "get_window_title"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "FigureManagerWx",
        "get_window_title"
      ]
    ]
  ],
  "set_window_title": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "FigureManagerBase",
        "set_window_title"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_gtk.py",
      [
        "_FigureManagerGTK",
        "set_window_title"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureManagerTk",
        "set_window_title"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureManagerQT",
        "set_window_title"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureManagerWebAgg",
        "set_window_title"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "FigureManagerWx",
        "set_window_title"
      ]
    ]
  ],
  "_navigate_mode": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "_Mode",
        "_navigate_mode"
      ]
    ]
  ],
  "set_message": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "NavigationToolbar2",
        "set_message"
      ]
    ],
    [
      "lib/matplotlib/backend_bases.py",
      [
        "ToolContainerBase",
        "set_message"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_gtk.py",
      [
        "_NavigationToolbar2GTK",
        "set_message"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "NavigationToolbar2Tk",
        "set_message"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "ToolbarTk",
        "set_message"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "ToolbarGTK3",
        "set_message"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "ToolbarGTK4",
        "set_message"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "NavigationToolbar2QT",
        "set_message"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "ToolbarQt",
        "set_message"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "NavigationToolbar2WebAgg",
        "set_message"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "NavigationToolbar2Wx",
        "set_message"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "ToolbarWx",
        "set_message"
      ]
    ]
  ],
  "draw_rubberband": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "NavigationToolbar2",
        "draw_rubberband"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "RubberbandBase",
        "draw_rubberband"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_gtk.py",
      [
        "_NavigationToolbar2GTK",
        "draw_rubberband"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_gtk.py",
      [
        "RubberbandGTK",
        "draw_rubberband"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "NavigationToolbar2Tk",
        "draw_rubberband"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "RubberbandTk",
        "draw_rubberband"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_macosx.py",
      [
        "NavigationToolbar2Mac",
        "draw_rubberband"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "NavigationToolbar2QT",
        "draw_rubberband"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "RubberbandQt",
        "draw_rubberband"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "NavigationToolbar2WebAgg",
        "draw_rubberband"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "NavigationToolbar2Wx",
        "draw_rubberband"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "RubberbandWx",
        "draw_rubberband"
      ]
    ]
  ],
  "remove_rubberband": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "NavigationToolbar2",
        "remove_rubberband"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "RubberbandBase",
        "remove_rubberband"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_gtk.py",
      [
        "_NavigationToolbar2GTK",
        "remove_rubberband"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_gtk.py",
      [
        "RubberbandGTK",
        "remove_rubberband"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "NavigationToolbar2Tk",
        "remove_rubberband"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "RubberbandTk",
        "remove_rubberband"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_macosx.py",
      [
        "NavigationToolbar2Mac",
        "remove_rubberband"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "NavigationToolbar2QT",
        "remove_rubberband"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "RubberbandQt",
        "remove_rubberband"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "NavigationToolbar2WebAgg",
        "remove_rubberband"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "NavigationToolbar2Wx",
        "remove_rubberband"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "RubberbandWx",
        "remove_rubberband"
      ]
    ]
  ],
  "home": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "NavigationToolbar2",
        "home"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolViewsPositions",
        "home"
      ]
    ],
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "Stack",
        "home"
      ]
    ]
  ],
  "back": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "NavigationToolbar2",
        "back"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolViewsPositions",
        "back"
      ]
    ],
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "Stack",
        "back"
      ]
    ]
  ],
  "_update_cursor": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "NavigationToolbar2",
        "_update_cursor"
      ]
    ]
  ],
  "_wait_cursor_for_draw_cm": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "NavigationToolbar2",
        "_wait_cursor_for_draw_cm"
      ]
    ]
  ],
  "_mouse_event_to_message": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "NavigationToolbar2",
        "_mouse_event_to_message"
      ]
    ]
  ],
  "mouse_move": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "NavigationToolbar2",
        "mouse_move"
      ]
    ]
  ],
  "_zoom_pan_handler": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "NavigationToolbar2",
        "_zoom_pan_handler"
      ]
    ]
  ],
  "pan": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "NavigationToolbar2",
        "pan"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_gtk.py",
      [
        "_NavigationToolbar2GTK",
        "pan"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "NavigationToolbar2Tk",
        "pan"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "NavigationToolbar2QT",
        "pan"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "NavigationToolbar2WebAgg",
        "pan"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "NavigationToolbar2Wx",
        "pan"
      ]
    ]
  ],
  "press_pan": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "NavigationToolbar2",
        "press_pan"
      ]
    ]
  ],
  "release_pan": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "NavigationToolbar2",
        "release_pan"
      ]
    ]
  ],
  "zoom": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "NavigationToolbar2",
        "zoom"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_gtk.py",
      [
        "_NavigationToolbar2GTK",
        "zoom"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "NavigationToolbar2Tk",
        "zoom"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "NavigationToolbar2QT",
        "zoom"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "NavigationToolbar2WebAgg",
        "zoom"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "NavigationToolbar2Wx",
        "zoom"
      ]
    ]
  ],
  "press_zoom": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "NavigationToolbar2",
        "press_zoom"
      ]
    ]
  ],
  "drag_zoom": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "NavigationToolbar2",
        "drag_zoom"
      ]
    ]
  ],
  "release_zoom": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "NavigationToolbar2",
        "release_zoom"
      ]
    ]
  ],
  "push_current": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "NavigationToolbar2",
        "push_current"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolViewsPositions",
        "push_current"
      ]
    ]
  ],
  "_update_view": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "NavigationToolbar2",
        "_update_view"
      ]
    ]
  ],
  "configure_subplots": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "NavigationToolbar2",
        "configure_subplots"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "NavigationToolbar2QT",
        "configure_subplots"
      ]
    ]
  ],
  "save_figure": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "NavigationToolbar2",
        "save_figure"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "NavigationToolbar2Tk",
        "save_figure"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "NavigationToolbar2GTK3",
        "save_figure"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "NavigationToolbar2GTK4",
        "save_figure"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_macosx.py",
      [
        "NavigationToolbar2Mac",
        "save_figure"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "NavigationToolbar2QT",
        "save_figure"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "NavigationToolbar2WebAgg",
        "save_figure"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "NavigationToolbar2Wx",
        "save_figure"
      ]
    ]
  ],
  "set_history_buttons": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "NavigationToolbar2",
        "set_history_buttons"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_gtk.py",
      [
        "_NavigationToolbar2GTK",
        "set_history_buttons"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "NavigationToolbar2Tk",
        "set_history_buttons"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "NavigationToolbar2QT",
        "set_history_buttons"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "NavigationToolbar2WebAgg",
        "set_history_buttons"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "NavigationToolbar2Wx",
        "set_history_buttons"
      ]
    ]
  ],
  "_tool_toggled_cbk": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "ToolContainerBase",
        "_tool_toggled_cbk"
      ]
    ]
  ],
  "add_tool": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "ToolContainerBase",
        "add_tool"
      ]
    ],
    [
      "lib/matplotlib/backend_managers.py",
      [
        "ToolManager",
        "add_tool"
      ]
    ]
  ],
  "_get_image_filename": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "ToolContainerBase",
        "_get_image_filename"
      ]
    ]
  ],
  "trigger_tool": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "ToolContainerBase",
        "trigger_tool"
      ]
    ],
    [
      "lib/matplotlib/backend_managers.py",
      [
        "ToolManager",
        "trigger_tool"
      ]
    ]
  ],
  "add_toolitem": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "ToolContainerBase",
        "add_toolitem"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "ToolbarTk",
        "add_toolitem"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "ToolbarGTK3",
        "add_toolitem"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "ToolbarGTK4",
        "add_toolitem"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "ToolbarQt",
        "add_toolitem"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "ToolbarWx",
        "add_toolitem"
      ]
    ]
  ],
  "toggle_toolitem": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "ToolContainerBase",
        "toggle_toolitem"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "ToolbarTk",
        "toggle_toolitem"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "ToolbarGTK3",
        "toggle_toolitem"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "ToolbarGTK4",
        "toggle_toolitem"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "ToolbarQt",
        "toggle_toolitem"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "ToolbarWx",
        "toggle_toolitem"
      ]
    ]
  ],
  "remove_toolitem": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "ToolContainerBase",
        "remove_toolitem"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "ToolbarTk",
        "remove_toolitem"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "ToolbarGTK3",
        "remove_toolitem"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "ToolbarGTK4",
        "remove_toolitem"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "ToolbarQt",
        "remove_toolitem"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "ToolbarWx",
        "remove_toolitem"
      ]
    ]
  ],
  "new_figure_manager": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "_Backend",
        "new_figure_manager"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "new_figure_manager"
      ]
    ]
  ],
  "new_figure_manager_given_figure": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "_Backend",
        "new_figure_manager_given_figure"
      ]
    ]
  ],
  "draw_if_interactive": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "_Backend",
        "draw_if_interactive"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "draw_if_interactive"
      ]
    ]
  ],
  "export": [
    [
      "lib/matplotlib/backend_bases.py",
      [
        "_Backend",
        "export"
      ]
    ]
  ],
  "canvas": [
    [
      "lib/matplotlib/backend_managers.py",
      [
        "ToolManager",
        "canvas"
      ]
    ]
  ],
  "figure": [
    [
      "lib/matplotlib/backend_managers.py",
      [
        "ToolManager",
        "figure"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolBase",
        "figure"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "figure"
      ]
    ]
  ],
  "figure_2": [
    [
      "lib/matplotlib/backend_managers.py",
      [
        "ToolManager",
        "figure_2"
      ]
    ]
  ],
  "toolmanager_connect": [
    [
      "lib/matplotlib/backend_managers.py",
      [
        "ToolManager",
        "toolmanager_connect"
      ]
    ]
  ],
  "toolmanager_disconnect": [
    [
      "lib/matplotlib/backend_managers.py",
      [
        "ToolManager",
        "toolmanager_disconnect"
      ]
    ]
  ],
  "message_event": [
    [
      "lib/matplotlib/backend_managers.py",
      [
        "ToolManager",
        "message_event"
      ]
    ]
  ],
  "active_toggle": [
    [
      "lib/matplotlib/backend_managers.py",
      [
        "ToolManager",
        "active_toggle"
      ]
    ]
  ],
  "get_tool_keymap": [
    [
      "lib/matplotlib/backend_managers.py",
      [
        "ToolManager",
        "get_tool_keymap"
      ]
    ]
  ],
  "_remove_keys": [
    [
      "lib/matplotlib/backend_managers.py",
      [
        "ToolManager",
        "_remove_keys"
      ]
    ]
  ],
  "update_keymap": [
    [
      "lib/matplotlib/backend_managers.py",
      [
        "ToolManager",
        "update_keymap"
      ]
    ]
  ],
  "remove_tool": [
    [
      "lib/matplotlib/backend_managers.py",
      [
        "ToolManager",
        "remove_tool"
      ]
    ]
  ],
  "_handle_toggle": [
    [
      "lib/matplotlib/backend_managers.py",
      [
        "ToolManager",
        "_handle_toggle"
      ]
    ]
  ],
  "_key_press": [
    [
      "lib/matplotlib/backend_managers.py",
      [
        "ToolManager",
        "_key_press"
      ]
    ]
  ],
  "tools": [
    [
      "lib/matplotlib/backend_managers.py",
      [
        "ToolManager",
        "tools"
      ]
    ]
  ],
  "get_tool": [
    [
      "lib/matplotlib/backend_managers.py",
      [
        "ToolManager",
        "get_tool"
      ]
    ]
  ],
  "_register_tool_class": [
    [
      "lib/matplotlib/backend_tools.py",
      [
        "_register_tool_class"
      ]
    ]
  ],
  "_find_tool_class": [
    [
      "lib/matplotlib/backend_tools.py",
      [
        "_find_tool_class"
      ]
    ]
  ],
  "figure_1": [
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolBase",
        "figure_1"
      ]
    ]
  ],
  "_make_classic_style_pseudo_toolbar": [
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolBase",
        "_make_classic_style_pseudo_toolbar"
      ]
    ]
  ],
  "toggled": [
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolToggleBase",
        "toggled"
      ]
    ]
  ],
  "_tool_trigger_cbk": [
    [
      "lib/matplotlib/backend_tools.py",
      [
        "SetCursorBase",
        "_tool_trigger_cbk"
      ]
    ]
  ],
  "_add_tool": [
    [
      "lib/matplotlib/backend_tools.py",
      [
        "SetCursorBase",
        "_add_tool"
      ]
    ]
  ],
  "_add_tool_cbk": [
    [
      "lib/matplotlib/backend_tools.py",
      [
        "SetCursorBase",
        "_add_tool_cbk"
      ]
    ]
  ],
  "_set_cursor_cbk": [
    [
      "lib/matplotlib/backend_tools.py",
      [
        "SetCursorBase",
        "_set_cursor_cbk"
      ]
    ]
  ],
  "send_message": [
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolCursorPosition",
        "send_message"
      ]
    ]
  ],
  "set_scale": [
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolYScale",
        "set_scale"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolXScale",
        "set_scale"
      ]
    ]
  ],
  "add_figure": [
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolViewsPositions",
        "add_figure"
      ]
    ]
  ],
  "update_view": [
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolViewsPositions",
        "update_view"
      ]
    ]
  ],
  "_axes_pos": [
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolViewsPositions",
        "_axes_pos"
      ]
    ]
  ],
  "update_home_views": [
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolViewsPositions",
        "update_home_views"
      ]
    ]
  ],
  "scroll_zoom": [
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ZoomPanBase",
        "scroll_zoom"
      ]
    ]
  ],
  "_cancel_action": [
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolZoom",
        "_cancel_action"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolPan",
        "_cancel_action"
      ]
    ]
  ],
  "_press": [
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolZoom",
        "_press"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolPan",
        "_press"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "_press"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "SpanSelector",
        "_press"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "RectangleSelector",
        "_press"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "LassoSelector",
        "_press"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "PolygonSelector",
        "_press"
      ]
    ]
  ],
  "_switch_on_zoom_mode": [
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolZoom",
        "_switch_on_zoom_mode"
      ]
    ]
  ],
  "_switch_off_zoom_mode": [
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolZoom",
        "_switch_off_zoom_mode"
      ]
    ]
  ],
  "_mouse_move": [
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolZoom",
        "_mouse_move"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolPan",
        "_mouse_move"
      ]
    ]
  ],
  "_release": [
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolZoom",
        "_release"
      ]
    ],
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolPan",
        "_release"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "Button",
        "_release"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "TextBox",
        "_release"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "_release"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "SpanSelector",
        "_release"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "RectangleSelector",
        "_release"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "LassoSelector",
        "_release"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "PolygonSelector",
        "_release"
      ]
    ]
  ],
  "format_shortcut": [
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolHelpBase",
        "format_shortcut"
      ]
    ]
  ],
  "_format_tool_keymap": [
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolHelpBase",
        "_format_tool_keymap"
      ]
    ]
  ],
  "_get_help_entries": [
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolHelpBase",
        "_get_help_entries"
      ]
    ]
  ],
  "_get_help_text": [
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolHelpBase",
        "_get_help_text"
      ]
    ]
  ],
  "_get_help_html": [
    [
      "lib/matplotlib/backend_tools.py",
      [
        "ToolHelpBase",
        "_get_help_html"
      ]
    ]
  ],
  "add_tools_to_manager": [
    [
      "lib/matplotlib/backend_tools.py",
      [
        "add_tools_to_manager"
      ]
    ]
  ],
  "add_tools_to_container": [
    [
      "lib/matplotlib/backend_tools.py",
      [
        "add_tools_to_container"
      ]
    ]
  ],
  "_shutdown_application": [
    [
      "lib/matplotlib/backends/_backend_gtk.py",
      [
        "_shutdown_application"
      ]
    ]
  ],
  "_create_application": [
    [
      "lib/matplotlib/backends/_backend_gtk.py",
      [
        "_create_application"
      ]
    ]
  ],
  "mpl_to_gtk_cursor_name": [
    [
      "lib/matplotlib/backends/_backend_gtk.py",
      [
        "mpl_to_gtk_cursor_name"
      ]
    ]
  ],
  "_update_buttons_checked": [
    [
      "lib/matplotlib/backends/_backend_gtk.py",
      [
        "_NavigationToolbar2GTK",
        "_update_buttons_checked"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "NavigationToolbar2Tk",
        "_update_buttons_checked"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "NavigationToolbar2QT",
        "_update_buttons_checked"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "NavigationToolbar2Wx",
        "_update_buttons_checked"
      ]
    ]
  ],
  "mainloop": [
    [
      "lib/matplotlib/backends/_backend_gtk.py",
      [
        "_BackendGTK",
        "mainloop"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "_BackendTk",
        "mainloop"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_macosx.py",
      [
        "_BackendMac",
        "mainloop"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "_BackendQT",
        "mainloop"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "_BackendWx",
        "mainloop"
      ]
    ]
  ],
  "_cached_get_afm_from_fname": [
    [
      "lib/matplotlib/backends/_backend_pdf_ps.py",
      [
        "_cached_get_afm_from_fname"
      ]
    ]
  ],
  "get_glyphs_subset": [
    [
      "lib/matplotlib/backends/_backend_pdf_ps.py",
      [
        "get_glyphs_subset"
      ]
    ]
  ],
  "track": [
    [
      "lib/matplotlib/backends/_backend_pdf_ps.py",
      [
        "CharacterTracker",
        "track"
      ]
    ]
  ],
  "track_glyph": [
    [
      "lib/matplotlib/backends/_backend_pdf_ps.py",
      [
        "CharacterTracker",
        "track_glyph"
      ]
    ]
  ],
  "_get_font_afm": [
    [
      "lib/matplotlib/backends/_backend_pdf_ps.py",
      [
        "RendererPDFPSBase",
        "_get_font_afm"
      ]
    ]
  ],
  "_get_font_ttf": [
    [
      "lib/matplotlib/backends/_backend_pdf_ps.py",
      [
        "RendererPDFPSBase",
        "_get_font_ttf"
      ]
    ]
  ],
  "_restore_foreground_window_at_end": [
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "_restore_foreground_window_at_end"
      ]
    ]
  ],
  "_blit": [
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "_blit"
      ]
    ]
  ],
  "filter_destroy": [
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureCanvasTk",
        "__init__",
        "filter_destroy"
      ]
    ]
  ],
  "_update_device_pixel_ratio": [
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureCanvasTk",
        "_update_device_pixel_ratio"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "FigureCanvasGTK3",
        "_update_device_pixel_ratio"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "FigureCanvasGTK4",
        "_update_device_pixel_ratio"
      ]
    ]
  ],
  "get_tk_widget": [
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureCanvasTk",
        "get_tk_widget"
      ]
    ]
  ],
  "_event_mpl_coords": [
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureCanvasTk",
        "_event_mpl_coords"
      ]
    ]
  ],
  "button_dblclick_event": [
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureCanvasTk",
        "button_dblclick_event"
      ]
    ]
  ],
  "scroll_event_windows": [
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureCanvasTk",
        "scroll_event_windows"
      ]
    ]
  ],
  "_get_key": [
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureCanvasTk",
        "_get_key"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "FigureCanvasGTK3",
        "_get_key"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "FigureCanvasGTK4",
        "_get_key"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureCanvasQT",
        "_get_key"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "_FigureCanvasWxBase",
        "_get_key"
      ]
    ]
  ],
  "key_press": [
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureCanvasTk",
        "key_press"
      ]
    ]
  ],
  "key_release": [
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureCanvasTk",
        "key_release"
      ]
    ]
  ],
  "_update_window_dpi": [
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "FigureManagerTk",
        "_update_window_dpi"
      ]
    ]
  ],
  "_rescale": [
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "NavigationToolbar2Tk",
        "_rescale"
      ]
    ],
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "ToolbarTk",
        "_rescale"
      ]
    ]
  ],
  "_get_color": [
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "NavigationToolbar2Tk",
        "_set_image_for_button",
        "_get_color"
      ]
    ]
  ],
  "_is_dark": [
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "NavigationToolbar2Tk",
        "_set_image_for_button",
        "_is_dark"
      ]
    ]
  ],
  "_recolor_icon": [
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "NavigationToolbar2Tk",
        "_set_image_for_button",
        "_recolor_icon"
      ]
    ]
  ],
  "_set_image_for_button": [
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "NavigationToolbar2Tk",
        "_set_image_for_button"
      ]
    ]
  ],
  "_Button": [
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "NavigationToolbar2Tk",
        "_Button"
      ]
    ]
  ],
  "_Spacer": [
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "NavigationToolbar2Tk",
        "_Spacer"
      ]
    ]
  ],
  "createToolTip": [
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "ToolTip",
        "createToolTip"
      ]
    ]
  ],
  "showtip": [
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "ToolTip",
        "showtip"
      ]
    ]
  ],
  "hidetip": [
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "ToolTip",
        "hidetip"
      ]
    ]
  ],
  "_get_groupframe": [
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "ToolbarTk",
        "_get_groupframe"
      ]
    ]
  ],
  "_add_separator": [
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "ToolbarTk",
        "_add_separator"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "ToolbarGTK3",
        "_add_separator"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "ToolbarGTK4",
        "_add_separator"
      ]
    ]
  ],
  "_button_click": [
    [
      "lib/matplotlib/backends/_backend_tk.py",
      [
        "ToolbarTk",
        "_button_click"
      ]
    ]
  ],
  "get_hinting_flag": [
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "get_hinting_flag"
      ]
    ]
  ],
  "_update_methods": [
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "RendererAgg",
        "_update_methods"
      ]
    ]
  ],
  "draw_mathtext": [
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "RendererAgg",
        "draw_mathtext"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "RendererPdf",
        "draw_mathtext"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "RendererPS",
        "draw_mathtext"
      ]
    ]
  ],
  "_prepare_font": [
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "RendererAgg",
        "_prepare_font"
      ]
    ]
  ],
  "buffer_rgba": [
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "RendererAgg",
        "buffer_rgba"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "FigureCanvasAgg",
        "buffer_rgba"
      ]
    ]
  ],
  "tostring_argb": [
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "RendererAgg",
        "tostring_argb"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "FigureCanvasAgg",
        "tostring_argb"
      ]
    ]
  ],
  "tostring_rgb": [
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "RendererAgg",
        "tostring_rgb"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "FigureCanvasAgg",
        "tostring_rgb"
      ]
    ]
  ],
  "restore_region": [
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "RendererAgg",
        "restore_region"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "FigureCanvasAgg",
        "restore_region"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "FigureCanvasCairo",
        "restore_region"
      ]
    ]
  ],
  "copy_from_bbox": [
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "FigureCanvasAgg",
        "copy_from_bbox"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "FigureCanvasCairo",
        "copy_from_bbox"
      ]
    ]
  ],
  "get_renderer": [
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "FigureCanvasAgg",
        "get_renderer"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "FigureCanvasCairo",
        "get_renderer"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "FigureCanvasPgf",
        "get_renderer"
      ]
    ]
  ],
  "print_raw": [
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "FigureCanvasAgg",
        "print_raw"
      ]
    ]
  ],
  "_print_pil": [
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "FigureCanvasAgg",
        "_print_pil"
      ]
    ]
  ],
  "print_png": [
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "FigureCanvasAgg",
        "print_png"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "FigureCanvasCairo",
        "print_png"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "FigureCanvasPgf",
        "print_png"
      ]
    ]
  ],
  "print_to_buffer": [
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "FigureCanvasAgg",
        "print_to_buffer"
      ]
    ]
  ],
  "print_jpg": [
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "FigureCanvasAgg",
        "print_jpg"
      ]
    ]
  ],
  "print_tif": [
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "FigureCanvasAgg",
        "print_tif"
      ]
    ]
  ],
  "print_webp": [
    [
      "lib/matplotlib/backends/backend_agg.py",
      [
        "FigureCanvasAgg",
        "print_webp"
      ]
    ]
  ],
  "_append_path": [
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "_append_path"
      ]
    ]
  ],
  "_cairo_font_args_from_font_prop": [
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "_cairo_font_args_from_font_prop"
      ]
    ]
  ],
  "set_context": [
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "RendererCairo",
        "set_context"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "_RendererGTKCairo",
        "set_context"
      ]
    ]
  ],
  "set_ctx_from_surface": [
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "RendererCairo",
        "set_ctx_from_surface"
      ]
    ]
  ],
  "set_width_height": [
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "RendererCairo",
        "set_width_height"
      ]
    ]
  ],
  "_fill_and_stroke": [
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "RendererCairo",
        "_fill_and_stroke"
      ]
    ]
  ],
  "_draw_mathtext": [
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "RendererCairo",
        "_draw_mathtext"
      ]
    ]
  ],
  "_renderer": [
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "FigureCanvasCairo",
        "_renderer"
      ]
    ]
  ],
  "print_rgba": [
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "FigureCanvasCairo",
        "print_rgba"
      ]
    ]
  ],
  "_get_printed_image_surface": [
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "FigureCanvasCairo",
        "_get_printed_image_surface"
      ]
    ]
  ],
  "_save": [
    [
      "lib/matplotlib/backends/backend_cairo.py",
      [
        "FigureCanvasCairo",
        "_save"
      ]
    ]
  ],
  "cursord": [
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "__getattr__",
        "cursord"
      ]
    ]
  ],
  "_mpl_to_gtk_cursor": [
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "_mpl_to_gtk_cursor"
      ]
    ]
  ],
  "_mpl_coords": [
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "FigureCanvasGTK3",
        "_mpl_coords"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "FigureCanvasGTK4",
        "_mpl_coords"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "_FigureCanvasWxBase",
        "_mpl_coords"
      ]
    ]
  ],
  "size_allocate": [
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "FigureCanvasGTK3",
        "size_allocate"
      ]
    ]
  ],
  "configure_event": [
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "FigureCanvasGTK3",
        "configure_event"
      ]
    ]
  ],
  "_draw_rubberband": [
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "FigureCanvasGTK3",
        "_draw_rubberband"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "FigureCanvasGTK4",
        "_draw_rubberband"
      ]
    ]
  ],
  "on_draw_event": [
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "FigureCanvasGTK3",
        "on_draw_event"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk3agg.py",
      [
        "FigureCanvasGTK3Agg",
        "on_draw_event"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk3cairo.py",
      [
        "FigureCanvasGTK3Cairo",
        "on_draw_event"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "FigureCanvasGTK4",
        "on_draw_event"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4agg.py",
      [
        "FigureCanvasGTK4Agg",
        "on_draw_event"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4cairo.py",
      [
        "FigureCanvasGTK4Cairo",
        "on_draw_event"
      ]
    ]
  ],
  "on_notify_filter": [
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "NavigationToolbar2GTK3",
        "save_figure",
        "on_notify_filter"
      ]
    ]
  ],
  "_add_button": [
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "ToolbarGTK3",
        "_add_button"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "ToolbarGTK4",
        "_add_button"
      ]
    ]
  ],
  "_call_tool": [
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "ToolbarGTK3",
        "_call_tool"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "ToolbarGTK4",
        "_call_tool"
      ]
    ]
  ],
  "_normalize_shortcut": [
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "HelpGTK3",
        "_normalize_shortcut"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "HelpGTK4",
        "_normalize_shortcut"
      ]
    ]
  ],
  "_is_valid_shortcut": [
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "HelpGTK3",
        "_is_valid_shortcut"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "HelpGTK4",
        "_is_valid_shortcut"
      ]
    ]
  ],
  "_show_shortcuts_window": [
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "HelpGTK3",
        "_show_shortcuts_window"
      ]
    ]
  ],
  "_show_shortcuts_dialog": [
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "HelpGTK3",
        "_show_shortcuts_dialog"
      ]
    ]
  ],
  "error_msg_gtk": [
    [
      "lib/matplotlib/backends/backend_gtk3.py",
      [
        "error_msg_gtk"
      ]
    ]
  ],
  "_draw_func": [
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "FigureCanvasGTK4",
        "_draw_func"
      ]
    ]
  ],
  "on_response": [
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "NavigationToolbar2GTK4",
        "save_figure",
        "on_response"
      ]
    ]
  ],
  "_find_child_at_position": [
    [
      "lib/matplotlib/backends/backend_gtk4.py",
      [
        "ToolbarGTK4",
        "_find_child_at_position"
      ]
    ]
  ],
  "_single_shot_timer": [
    [
      "lib/matplotlib/backends/backend_macosx.py",
      [
        "FigureCanvasMac",
        "_single_shot_timer"
      ]
    ]
  ],
  "_draw_idle": [
    [
      "lib/matplotlib/backends/backend_macosx.py",
      [
        "FigureCanvasMac",
        "_draw_idle"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureCanvasQT",
        "_draw_idle"
      ]
    ]
  ],
  "prepare_configure_subplots": [
    [
      "lib/matplotlib/backends/backend_macosx.py",
      [
        "NavigationToolbar2Mac",
        "prepare_configure_subplots"
      ]
    ]
  ],
  "_close_button_pressed": [
    [
      "lib/matplotlib/backends/backend_macosx.py",
      [
        "FigureManagerMac",
        "_close_button_pressed"
      ]
    ]
  ],
  "close": [
    [
      "lib/matplotlib/backends/backend_macosx.py",
      [
        "FigureManagerMac",
        "close"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "close"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfPages",
        "close"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "PdfPages",
        "close"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "XMLWriter",
        "close"
      ]
    ],
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "close"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "close"
      ]
    ]
  ],
  "connection_info": [
    [
      "lib/matplotlib/backends/backend_nbagg.py",
      [
        "connection_info"
      ]
    ]
  ],
  "display_js": [
    [
      "lib/matplotlib/backends/backend_nbagg.py",
      [
        "FigureManagerNbAgg",
        "display_js"
      ]
    ]
  ],
  "reshow": [
    [
      "lib/matplotlib/backends/backend_nbagg.py",
      [
        "FigureManagerNbAgg",
        "reshow"
      ]
    ]
  ],
  "connected": [
    [
      "lib/matplotlib/backends/backend_nbagg.py",
      [
        "FigureManagerNbAgg",
        "connected"
      ]
    ]
  ],
  "get_javascript": [
    [
      "lib/matplotlib/backends/backend_nbagg.py",
      [
        "FigureManagerNbAgg",
        "get_javascript"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureManagerWebAgg",
        "get_javascript"
      ]
    ]
  ],
  "_create_comm": [
    [
      "lib/matplotlib/backends/backend_nbagg.py",
      [
        "FigureManagerNbAgg",
        "_create_comm"
      ]
    ]
  ],
  "clearup_closed": [
    [
      "lib/matplotlib/backends/backend_nbagg.py",
      [
        "FigureManagerNbAgg",
        "clearup_closed"
      ]
    ]
  ],
  "remove_comm": [
    [
      "lib/matplotlib/backends/backend_nbagg.py",
      [
        "FigureManagerNbAgg",
        "remove_comm"
      ]
    ]
  ],
  "is_open": [
    [
      "lib/matplotlib/backends/backend_nbagg.py",
      [
        "CommSocket",
        "is_open"
      ]
    ]
  ],
  "_fill": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "_fill"
      ]
    ]
  ],
  "is_string_like": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "_create_pdf_info_dict",
        "is_string_like"
      ]
    ]
  ],
  "is_date": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "_create_pdf_info_dict",
        "is_date"
      ]
    ]
  ],
  "check_trapped": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "_create_pdf_info_dict",
        "check_trapped"
      ]
    ]
  ],
  "_create_pdf_info_dict": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "_create_pdf_info_dict"
      ]
    ]
  ],
  "_datetime_to_pdf": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "_datetime_to_pdf"
      ]
    ]
  ],
  "_calculate_quad_point_coordinates": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "_calculate_quad_point_coordinates"
      ]
    ]
  ],
  "_get_coordinates_of_block": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "_get_coordinates_of_block"
      ]
    ]
  ],
  "_get_link_annotation": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "_get_link_annotation"
      ]
    ]
  ],
  "pdfRepr": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "pdfRepr"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "Reference",
        "pdfRepr"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "Name",
        "pdfRepr"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "Operator",
        "pdfRepr"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "Verbatim",
        "pdfRepr"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "Op",
        "pdfRepr"
      ]
    ]
  ],
  "_font_supports_glyph": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "_font_supports_glyph"
      ]
    ]
  ],
  "write": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "Reference",
        "write"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "Stream",
        "write"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "write"
      ]
    ]
  ],
  "__eq__": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "Name",
        "__eq__"
      ]
    ],
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_StrongRef",
        "__eq__"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "Colormap",
        "__eq__"
      ]
    ],
    [
      "lib/matplotlib/dviread.py",
      [
        "DviFont",
        "__eq__"
      ]
    ],
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontProperties",
        "__eq__"
      ]
    ],
    [
      "lib/matplotlib/gridspec.py",
      [
        "SubplotSpec",
        "__eq__"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "TransformWrapper",
        "__eq__"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "AffineBase",
        "__eq__"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "_BlendedMixin",
        "__eq__"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "CompositeGenericTransform",
        "__eq__"
      ]
    ]
  ],
  "__lt__": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "Name",
        "__lt__"
      ]
    ]
  ],
  "hexify": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "Name",
        "hexify"
      ]
    ]
  ],
  "paint_path": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "Op",
        "paint_path"
      ]
    ]
  ],
  "_writeHeader": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "Stream",
        "_writeHeader"
      ]
    ]
  ],
  "end": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "Stream",
        "end"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "XMLWriter",
        "end"
      ]
    ]
  ],
  "_flush": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "Stream",
        "_flush"
      ]
    ]
  ],
  "_get_pdf_charprocs": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "_get_pdf_charprocs"
      ]
    ]
  ],
  "newPage": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "newPage"
      ]
    ]
  ],
  "newTextnote": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "newTextnote"
      ]
    ]
  ],
  "_get_subsetted_psname": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "_get_subsetted_psname"
      ]
    ]
  ],
  "output": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "output"
      ]
    ]
  ],
  "beginStream": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "beginStream"
      ]
    ]
  ],
  "endStream": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "endStream"
      ]
    ]
  ],
  "outputStream": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "outputStream"
      ]
    ]
  ],
  "_write_annotations": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "_write_annotations"
      ]
    ]
  ],
  "fontName": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "fontName"
      ]
    ]
  ],
  "dviFontName": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "dviFontName"
      ]
    ]
  ],
  "writeFonts": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "writeFonts"
      ]
    ]
  ],
  "_write_afm_font": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "_write_afm_font"
      ]
    ]
  ],
  "_embedTeXFont": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "_embedTeXFont"
      ]
    ]
  ],
  "createType1Descriptor": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "createType1Descriptor"
      ]
    ]
  ],
  "_get_xobject_glyph_name": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "_get_xobject_glyph_name"
      ]
    ]
  ],
  "cvt": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "embedTTF",
        "cvt"
      ]
    ]
  ],
  "get_char_width": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "embedTTF",
        "embedTTFType3",
        "get_char_width"
      ]
    ]
  ],
  "embedTTFType3": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "embedTTF",
        "embedTTFType3"
      ]
    ]
  ],
  "embedTTFType42": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "embedTTF",
        "embedTTFType42"
      ]
    ]
  ],
  "embedTTF": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "embedTTF"
      ]
    ]
  ],
  "alphaState": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "alphaState"
      ]
    ]
  ],
  "_soft_mask_state": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "_soft_mask_state"
      ]
    ]
  ],
  "writeExtGSTates": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "writeExtGSTates"
      ]
    ]
  ],
  "_write_soft_mask_groups": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "_write_soft_mask_groups"
      ]
    ]
  ],
  "hatchPattern": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "hatchPattern"
      ]
    ]
  ],
  "writeHatches": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "writeHatches"
      ]
    ]
  ],
  "addGouraudTriangles": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "addGouraudTriangles"
      ]
    ]
  ],
  "writeGouraudTriangles": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "writeGouraudTriangles"
      ]
    ]
  ],
  "imageObject": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "imageObject"
      ]
    ]
  ],
  "_unpack": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "_unpack"
      ]
    ]
  ],
  "_writePng": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "_writePng"
      ]
    ]
  ],
  "_writeImg": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "_writeImg"
      ]
    ]
  ],
  "writeImages": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "writeImages"
      ]
    ]
  ],
  "markerObject": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "markerObject"
      ]
    ]
  ],
  "writeMarkers": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "writeMarkers"
      ]
    ]
  ],
  "pathCollectionObject": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "pathCollectionObject"
      ]
    ]
  ],
  "writePathCollectionTemplates": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "writePathCollectionTemplates"
      ]
    ]
  ],
  "pathOperations": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "pathOperations"
      ]
    ]
  ],
  "writePath": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "writePath"
      ]
    ]
  ],
  "reserveObject": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "reserveObject"
      ]
    ]
  ],
  "recordXref": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "recordXref"
      ]
    ]
  ],
  "writeObject": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "writeObject"
      ]
    ]
  ],
  "writeXref": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "writeXref"
      ]
    ]
  ],
  "writeInfoDict": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "writeInfoDict"
      ]
    ]
  ],
  "writeTrailer": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfFile",
        "writeTrailer"
      ]
    ]
  ],
  "check_gc": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "RendererPdf",
        "check_gc"
      ]
    ]
  ],
  "_setup_textpos": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "RendererPdf",
        "_setup_textpos"
      ]
    ]
  ],
  "encode_string": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "RendererPdf",
        "encode_string"
      ]
    ]
  ],
  "_draw_xobject_glyph": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "RendererPdf",
        "_draw_xobject_glyph"
      ]
    ]
  ],
  "stroke": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "GraphicsContextPdf",
        "stroke"
      ]
    ]
  ],
  "paint": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "GraphicsContextPdf",
        "paint"
      ]
    ]
  ],
  "capstyle_cmd": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "GraphicsContextPdf",
        "capstyle_cmd"
      ]
    ]
  ],
  "joinstyle_cmd": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "GraphicsContextPdf",
        "joinstyle_cmd"
      ]
    ]
  ],
  "linewidth_cmd": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "GraphicsContextPdf",
        "linewidth_cmd"
      ]
    ]
  ],
  "dash_cmd": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "GraphicsContextPdf",
        "dash_cmd"
      ]
    ]
  ],
  "alpha_cmd": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "GraphicsContextPdf",
        "alpha_cmd"
      ]
    ]
  ],
  "hatch_cmd": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "GraphicsContextPdf",
        "hatch_cmd"
      ]
    ]
  ],
  "rgb_cmd": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "GraphicsContextPdf",
        "rgb_cmd"
      ]
    ]
  ],
  "fillcolor_cmd": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "GraphicsContextPdf",
        "fillcolor_cmd"
      ]
    ]
  ],
  "push": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "GraphicsContextPdf",
        "push"
      ]
    ],
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "Stack",
        "push"
      ]
    ]
  ],
  "pop": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "GraphicsContextPdf",
        "pop"
      ]
    ],
    [
      "lib/matplotlib/blocking_input.py",
      [
        "BlockingMouseInput",
        "pop"
      ]
    ]
  ],
  "clip_cmd": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "GraphicsContextPdf",
        "clip_cmd"
      ]
    ]
  ],
  "delta": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "GraphicsContextPdf",
        "delta"
      ]
    ]
  ],
  "__enter__": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfPages",
        "__enter__"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "PdfPages",
        "__enter__"
      ]
    ],
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "__enter__"
      ]
    ]
  ],
  "__exit__": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfPages",
        "__exit__"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "PdfPages",
        "__exit__"
      ]
    ],
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "__exit__"
      ]
    ]
  ],
  "infodict": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfPages",
        "infodict"
      ]
    ]
  ],
  "savefig": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfPages",
        "savefig"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "PdfPages",
        "savefig"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "savefig"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "savefig"
      ]
    ]
  ],
  "get_pagecount": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfPages",
        "get_pagecount"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "PdfPages",
        "get_pagecount"
      ]
    ]
  ],
  "attach_note": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "PdfPages",
        "attach_note"
      ]
    ]
  ],
  "print_pdf": [
    [
      "lib/matplotlib/backends/backend_pdf.py",
      [
        "FigureCanvasPdf",
        "print_pdf"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "FigureCanvasPgf",
        "print_pdf"
      ]
    ]
  ],
  "get_fontspec": [
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "get_fontspec"
      ]
    ]
  ],
  "get_preamble": [
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "get_preamble"
      ]
    ]
  ],
  "_get_preamble": [
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "_get_preamble"
      ]
    ]
  ],
  "common_texification": [
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "common_texification"
      ]
    ]
  ],
  "_tex_escape": [
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "_tex_escape"
      ]
    ]
  ],
  "writeln": [
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "writeln"
      ]
    ]
  ],
  "_writeln": [
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "_writeln"
      ]
    ]
  ],
  "_escape_and_apply_props": [
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "_escape_and_apply_props"
      ]
    ]
  ],
  "_metadata_to_str": [
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "_metadata_to_str"
      ]
    ]
  ],
  "make_pdf_to_png_converter": [
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "make_pdf_to_png_converter"
      ]
    ]
  ],
  "_build_latex_header": [
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "LatexManager",
        "_build_latex_header"
      ]
    ]
  ],
  "_get_cached_or_new": [
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "LatexManager",
        "_get_cached_or_new"
      ]
    ]
  ],
  "_get_cached_or_new_impl": [
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "LatexManager",
        "_get_cached_or_new_impl"
      ]
    ]
  ],
  "_stdin_writeln": [
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "LatexManager",
        "_stdin_writeln"
      ]
    ]
  ],
  "_expect": [
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "LatexManager",
        "_expect"
      ]
    ]
  ],
  "_expect_prompt": [
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "LatexManager",
        "_expect_prompt"
      ]
    ]
  ],
  "_setup_latex_process": [
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "LatexManager",
        "_setup_latex_process"
      ]
    ]
  ],
  "get_width_height_descent": [
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "LatexManager",
        "get_width_height_descent"
      ]
    ]
  ],
  "_get_box_metrics": [
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "LatexManager",
        "_get_box_metrics"
      ]
    ]
  ],
  "_get_image_inclusion_command": [
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "_get_image_inclusion_command"
      ]
    ]
  ],
  "_print_pgf_clip": [
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "RendererPgf",
        "_print_pgf_clip"
      ]
    ]
  ],
  "_print_pgf_path_styles": [
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "RendererPgf",
        "_print_pgf_path_styles"
      ]
    ]
  ],
  "_print_pgf_path": [
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "RendererPgf",
        "_print_pgf_path"
      ]
    ]
  ],
  "_pgf_path_draw": [
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "RendererPgf",
        "_pgf_path_draw"
      ]
    ]
  ],
  "_print_pgf_to_fh": [
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "FigureCanvasPgf",
        "_print_pgf_to_fh"
      ]
    ]
  ],
  "print_pgf": [
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "FigureCanvasPgf",
        "print_pgf"
      ]
    ]
  ],
  "_write_header": [
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "PdfPages",
        "_write_header"
      ]
    ]
  ],
  "_run_latex": [
    [
      "lib/matplotlib/backends/backend_pgf.py",
      [
        "PdfPages",
        "_run_latex"
      ]
    ]
  ],
  "_get_papertype": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "_get_papertype"
      ]
    ]
  ],
  "_nums_to_str": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "_nums_to_str"
      ]
    ]
  ],
  "quote_ps_string": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "quote_ps_string"
      ]
    ]
  ],
  "_move_path_to_path_or_stream": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "_move_path_to_path_or_stream"
      ]
    ]
  ],
  "_font_to_ps_type3": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "_font_to_ps_type3"
      ]
    ]
  ],
  "_font_to_ps_type42": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "_font_to_ps_type42"
      ]
    ]
  ],
  "_log_if_debug_on": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "_log_if_debug_on"
      ]
    ]
  ],
  "_is_transparent": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "RendererPS",
        "_is_transparent"
      ]
    ]
  ],
  "_linejoin_cmd": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "RendererPS",
        "_linejoin_cmd"
      ]
    ]
  ],
  "set_linejoin": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "RendererPS",
        "set_linejoin"
      ]
    ]
  ],
  "_linecap_cmd": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "RendererPS",
        "_linecap_cmd"
      ]
    ]
  ],
  "set_linecap": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "RendererPS",
        "set_linecap"
      ]
    ]
  ],
  "set_linedash": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "RendererPS",
        "set_linedash"
      ]
    ]
  ],
  "set_font": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "RendererPS",
        "set_font"
      ]
    ]
  ],
  "create_hatch": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "RendererPS",
        "create_hatch"
      ]
    ]
  ],
  "_convert_path": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "RendererPS",
        "_convert_path"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "_convert_path"
      ]
    ]
  ],
  "_get_clip_cmd": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "RendererPS",
        "_get_clip_cmd"
      ]
    ]
  ],
  "_draw_ps": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "RendererPS",
        "_draw_ps"
      ]
    ]
  ],
  "swap_if_landscape": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "_Orientation",
        "swap_if_landscape"
      ]
    ]
  ],
  "_print_ps": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "FigureCanvasPS",
        "_print_ps"
      ]
    ]
  ],
  "print_figure_impl": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "FigureCanvasPS",
        "_print_figure",
        "print_figure_impl"
      ]
    ]
  ],
  "_print_figure": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "FigureCanvasPS",
        "_print_figure"
      ]
    ]
  ],
  "_print_figure_tex": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "FigureCanvasPS",
        "_print_figure_tex"
      ]
    ]
  ],
  "convert_psfrags": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "convert_psfrags"
      ]
    ]
  ],
  "_convert_psfrags": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "_convert_psfrags"
      ]
    ]
  ],
  "_try_distill": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "_try_distill"
      ]
    ]
  ],
  "gs_distill": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "gs_distill"
      ]
    ]
  ],
  "xpdf_distill": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "xpdf_distill"
      ]
    ]
  ],
  "get_bbox_header": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "get_bbox_header"
      ]
    ]
  ],
  "pstoeps": [
    [
      "lib/matplotlib/backends/backend_ps.py",
      [
        "pstoeps"
      ]
    ]
  ],
  "_create_qApp": [
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "_create_qApp"
      ]
    ]
  ],
  "_update_pixel_ratio": [
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureCanvasQT",
        "_update_pixel_ratio"
      ]
    ]
  ],
  "_update_screen": [
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureCanvasQT",
        "_update_screen"
      ]
    ]
  ],
  "showEvent": [
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureCanvasQT",
        "showEvent"
      ]
    ]
  ],
  "mouseEventCoords": [
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureCanvasQT",
        "mouseEventCoords"
      ]
    ]
  ],
  "enterEvent": [
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureCanvasQT",
        "enterEvent"
      ]
    ]
  ],
  "leaveEvent": [
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureCanvasQT",
        "leaveEvent"
      ]
    ]
  ],
  "mousePressEvent": [
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureCanvasQT",
        "mousePressEvent"
      ]
    ],
    [
      "tools/triage_tests.py",
      [
        "Thumbnail",
        "mousePressEvent"
      ]
    ]
  ],
  "mouseDoubleClickEvent": [
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureCanvasQT",
        "mouseDoubleClickEvent"
      ]
    ]
  ],
  "mouseMoveEvent": [
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureCanvasQT",
        "mouseMoveEvent"
      ]
    ]
  ],
  "mouseReleaseEvent": [
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureCanvasQT",
        "mouseReleaseEvent"
      ]
    ]
  ],
  "wheelEvent": [
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureCanvasQT",
        "wheelEvent"
      ]
    ]
  ],
  "keyPressEvent": [
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureCanvasQT",
        "keyPressEvent"
      ]
    ],
    [
      "tools/triage_tests.py",
      [
        "Dialog",
        "keyPressEvent"
      ]
    ]
  ],
  "keyReleaseEvent": [
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureCanvasQT",
        "keyReleaseEvent"
      ]
    ]
  ],
  "resizeEvent": [
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureCanvasQT",
        "resizeEvent"
      ]
    ]
  ],
  "sizeHint": [
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureCanvasQT",
        "sizeHint"
      ]
    ]
  ],
  "minumumSizeHint": [
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureCanvasQT",
        "minumumSizeHint"
      ]
    ]
  ],
  "_draw_rect_callback": [
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureCanvasQT",
        "drawRectangle",
        "if_rect_is_not_None_",
        "_draw_rect_callback"
      ]
    ]
  ],
  "drawRectangle": [
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureCanvasQT",
        "drawRectangle"
      ]
    ]
  ],
  "closeEvent": [
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "MainWindow",
        "closeEvent"
      ]
    ]
  ],
  "_widgetclosed": [
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "FigureManagerQT",
        "_widgetclosed"
      ]
    ]
  ],
  "_icon": [
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "NavigationToolbar2QT",
        "_icon"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "NavigationToolbar2Wx",
        "_icon"
      ]
    ]
  ],
  "edit_parameters": [
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "NavigationToolbar2QT",
        "edit_parameters"
      ]
    ]
  ],
  "update_from_current_subplotpars": [
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "SubplotToolQt",
        "update_from_current_subplotpars"
      ]
    ]
  ],
  "_export_values": [
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "SubplotToolQt",
        "_export_values"
      ]
    ]
  ],
  "_on_value_changed": [
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "SubplotToolQt",
        "_on_value_changed"
      ]
    ]
  ],
  "_tight_layout": [
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "SubplotToolQt",
        "_tight_layout"
      ]
    ]
  ],
  "_add_to_group": [
    [
      "lib/matplotlib/backends/backend_qt.py",
      [
        "ToolbarQt",
        "_add_to_group"
      ]
    ]
  ],
  "paintEvent": [
    [
      "lib/matplotlib/backends/backend_qtagg.py",
      [
        "FigureCanvasQTAgg",
        "paintEvent"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_qtcairo.py",
      [
        "FigureCanvasQTCairo",
        "paintEvent"
      ]
    ]
  ],
  "escape_cdata": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "escape_cdata"
      ]
    ]
  ],
  "_escape_cdata": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "_escape_cdata"
      ]
    ]
  ],
  "escape_comment": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "escape_comment"
      ]
    ]
  ],
  "_escape_comment": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "_escape_comment"
      ]
    ]
  ],
  "escape_attrib": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "escape_attrib"
      ]
    ]
  ],
  "_escape_attrib": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "_escape_attrib"
      ]
    ]
  ],
  "_quote_escape_attrib": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "_quote_escape_attrib"
      ]
    ]
  ],
  "short_float_fmt": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "short_float_fmt"
      ]
    ]
  ],
  "_short_float_fmt": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "_short_float_fmt"
      ]
    ]
  ],
  "__flush": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "XMLWriter",
        "__flush"
      ]
    ]
  ],
  "comment": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "XMLWriter",
        "comment"
      ]
    ]
  ],
  "data": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "XMLWriter",
        "data"
      ]
    ]
  ],
  "element": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "XMLWriter",
        "element"
      ]
    ]
  ],
  "flush": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "XMLWriter",
        "flush"
      ]
    ]
  ],
  "_generate_transform": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "_generate_transform"
      ]
    ]
  ],
  "generate_transform": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "generate_transform"
      ]
    ]
  ],
  "_generate_css": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "_generate_css"
      ]
    ]
  ],
  "generate_css": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "generate_css"
      ]
    ]
  ],
  "_check_is_str": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "_check_is_str"
      ]
    ]
  ],
  "_check_is_iterable_of_str": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "_check_is_iterable_of_str"
      ]
    ]
  ],
  "ensure_metadata": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "_write_metadata",
        "ensure_metadata"
      ]
    ]
  ],
  "_write_metadata": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "_write_metadata"
      ]
    ]
  ],
  "_write_default_style": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "_write_default_style"
      ]
    ]
  ],
  "_make_id": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "_make_id"
      ]
    ]
  ],
  "_make_flip_transform": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "_make_flip_transform"
      ]
    ]
  ],
  "_get_hatch": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "_get_hatch"
      ]
    ]
  ],
  "_write_hatches": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "_write_hatches"
      ]
    ]
  ],
  "_get_style_dict": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "_get_style_dict"
      ]
    ]
  ],
  "_get_style": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "_get_style"
      ]
    ]
  ],
  "_get_clip_attrs": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "_get_clip_attrs"
      ]
    ]
  ],
  "_write_clips": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "_write_clips"
      ]
    ]
  ],
  "_draw_gouraud_triangle": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "_draw_gouraud_triangle"
      ]
    ]
  ],
  "_update_glyph_map_defs": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "_update_glyph_map_defs"
      ]
    ]
  ],
  "_adjust_char_id": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "_adjust_char_id"
      ]
    ]
  ],
  "_normalize_sans": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "_draw_text_as_text",
        "if_not_ismath_",
        "_normalize_sans"
      ]
    ]
  ],
  "_expand_family_entry": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "_draw_text_as_text",
        "if_not_ismath_",
        "_expand_family_entry"
      ]
    ]
  ],
  "_get_all_quoted_names": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "_draw_text_as_text",
        "if_not_ismath_",
        "_get_all_quoted_names"
      ]
    ]
  ],
  "_draw_text_as_text": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "RendererSVG",
        "_draw_text_as_text"
      ]
    ]
  ],
  "print_svg": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "FigureCanvasSVG",
        "print_svg"
      ]
    ]
  ],
  "print_svgz": [
    [
      "lib/matplotlib/backends/backend_svg.py",
      [
        "FigureCanvasSVG",
        "print_svgz"
      ]
    ]
  ],
  "print_foo": [
    [
      "lib/matplotlib/backends/backend_template.py",
      [
        "FigureCanvasTemplate",
        "print_foo"
      ]
    ]
  ],
  "random_ports": [
    [
      "lib/matplotlib/backends/backend_webagg.py",
      [
        "WebAggApplication",
        "initialize",
        "random_ports"
      ]
    ]
  ],
  "initialize": [
    [
      "lib/matplotlib/backends/backend_webagg.py",
      [
        "WebAggApplication",
        "initialize"
      ]
    ]
  ],
  "catch_sigint": [
    [
      "lib/matplotlib/backends/backend_webagg.py",
      [
        "WebAggApplication",
        "start",
        "catch_sigint"
      ]
    ]
  ],
  "ipython_inline_display": [
    [
      "lib/matplotlib/backends/backend_webagg.py",
      [
        "ipython_inline_display"
      ]
    ]
  ],
  "_handle_key": [
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "_handle_key"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureCanvasWebAggCore",
        "_handle_key"
      ]
    ]
  ],
  "_timer_task": [
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "TimerAsyncio",
        "_timer_task"
      ]
    ]
  ],
  "set_image_mode": [
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureCanvasWebAggCore",
        "set_image_mode"
      ]
    ]
  ],
  "get_diff_image": [
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureCanvasWebAggCore",
        "get_diff_image"
      ]
    ]
  ],
  "handle_event": [
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureCanvasWebAggCore",
        "handle_event"
      ]
    ]
  ],
  "handle_unknown_event": [
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureCanvasWebAggCore",
        "handle_unknown_event"
      ]
    ]
  ],
  "handle_ack": [
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureCanvasWebAggCore",
        "handle_ack"
      ]
    ]
  ],
  "handle_draw": [
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureCanvasWebAggCore",
        "handle_draw"
      ]
    ]
  ],
  "_handle_mouse": [
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureCanvasWebAggCore",
        "_handle_mouse"
      ]
    ]
  ],
  "handle_toolbar_button": [
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureCanvasWebAggCore",
        "handle_toolbar_button"
      ]
    ]
  ],
  "handle_refresh": [
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureCanvasWebAggCore",
        "handle_refresh"
      ]
    ]
  ],
  "handle_resize": [
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureCanvasWebAggCore",
        "handle_resize"
      ]
    ]
  ],
  "handle_send_image_mode": [
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureCanvasWebAggCore",
        "handle_send_image_mode"
      ]
    ]
  ],
  "handle_set_device_pixel_ratio": [
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureCanvasWebAggCore",
        "handle_set_device_pixel_ratio"
      ]
    ]
  ],
  "handle_set_dpi_ratio": [
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureCanvasWebAggCore",
        "handle_set_dpi_ratio"
      ]
    ]
  ],
  "_handle_set_device_pixel_ratio": [
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureCanvasWebAggCore",
        "_handle_set_device_pixel_ratio"
      ]
    ]
  ],
  "send_event": [
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureCanvasWebAggCore",
        "send_event"
      ]
    ]
  ],
  "add_web_socket": [
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureManagerWebAgg",
        "add_web_socket"
      ]
    ]
  ],
  "remove_web_socket": [
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureManagerWebAgg",
        "remove_web_socket"
      ]
    ]
  ],
  "handle_json": [
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureManagerWebAgg",
        "handle_json"
      ]
    ]
  ],
  "refresh_all": [
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureManagerWebAgg",
        "refresh_all"
      ]
    ]
  ],
  "get_static_file_path": [
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureManagerWebAgg",
        "get_static_file_path"
      ]
    ]
  ],
  "_send_event": [
    [
      "lib/matplotlib/backends/backend_webagg_core.py",
      [
        "FigureManagerWebAgg",
        "_send_event"
      ]
    ]
  ],
  "error_msg_wx": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "error_msg_wx"
      ]
    ]
  ],
  "_create_wxapp": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "_create_wxapp"
      ]
    ]
  ],
  "offset_text_height": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "RendererWx",
        "offset_text_height"
      ]
    ]
  ],
  "handle_clip_rectangle": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "RendererWx",
        "handle_clip_rectangle"
      ]
    ]
  ],
  "convert_path": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "RendererWx",
        "convert_path"
      ]
    ]
  ],
  "get_wx_font": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "RendererWx",
        "get_wx_font"
      ]
    ]
  ],
  "select": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "GraphicsContextWx",
        "select"
      ]
    ]
  ],
  "unselect": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "GraphicsContextWx",
        "unselect"
      ]
    ]
  ],
  "get_wxcolour": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "GraphicsContextWx",
        "get_wxcolour"
      ]
    ]
  ],
  "Copy_to_Clipboard": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "_FigureCanvasWxBase",
        "Copy_to_Clipboard"
      ]
    ]
  ],
  "_get_imagesave_wildcards": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "_FigureCanvasWxBase",
        "_get_imagesave_wildcards"
      ]
    ]
  ],
  "gui_repaint": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "_FigureCanvasWxBase",
        "gui_repaint"
      ]
    ]
  ],
  "_on_paint": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "_FigureCanvasWxBase",
        "_on_paint"
      ]
    ]
  ],
  "_on_size": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "_FigureCanvasWxBase",
        "_on_size"
      ]
    ]
  ],
  "_on_key_down": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "_FigureCanvasWxBase",
        "_on_key_down"
      ]
    ]
  ],
  "_on_key_up": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "_FigureCanvasWxBase",
        "_on_key_up"
      ]
    ]
  ],
  "_set_capture": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "_FigureCanvasWxBase",
        "_set_capture"
      ]
    ]
  ],
  "_on_capture_lost": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "_FigureCanvasWxBase",
        "_on_capture_lost"
      ]
    ]
  ],
  "_on_mouse_button": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "_FigureCanvasWxBase",
        "_on_mouse_button"
      ]
    ]
  ],
  "_on_mouse_wheel": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "_FigureCanvasWxBase",
        "_on_mouse_wheel"
      ]
    ]
  ],
  "_on_motion": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "_FigureCanvasWxBase",
        "_on_motion"
      ]
    ]
  ],
  "_on_enter": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "_FigureCanvasWxBase",
        "_on_enter"
      ]
    ]
  ],
  "_on_leave": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "_FigureCanvasWxBase",
        "_on_leave"
      ]
    ]
  ],
  "_print_image": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "FigureCanvasWx",
        "_print_image"
      ]
    ]
  ],
  "get_canvas": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "FigureFrameWx",
        "get_canvas"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wxagg.py",
      [
        "FigureFrameWxAgg",
        "get_canvas"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wxcairo.py",
      [
        "FigureFrameWxCairo",
        "get_canvas"
      ]
    ]
  ],
  "get_figure_manager": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "FigureFrameWx",
        "get_figure_manager"
      ]
    ]
  ],
  "_on_close": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "FigureFrameWx",
        "_on_close"
      ]
    ],
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "_HelpDialog",
        "_on_close"
      ]
    ]
  ],
  "_load_bitmap": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "_load_bitmap"
      ]
    ]
  ],
  "_set_frame_icon": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "_set_frame_icon"
      ]
    ]
  ],
  "_get_tool_pos": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "ToolbarWx",
        "_get_tool_pos"
      ]
    ]
  ],
  "handler": [
    [
      "lib/matplotlib/backends/backend_wx.py",
      [
        "ToolbarWx",
        "add_toolitem",
        "handler"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "ginput",
        "handler"
      ]
    ]
  ],
  "_rgba_to_wx_bitmap": [
    [
      "lib/matplotlib/backends/backend_wxagg.py",
      [
        "_rgba_to_wx_bitmap"
      ]
    ]
  ],
  "_setup_pyqt5plus": [
    [
      "lib/matplotlib/backends/qt_compat.py",
      [
        "_setup_pyqt5plus"
      ]
    ]
  ],
  "_enum": [
    [
      "lib/matplotlib/backends/qt_compat.py",
      [
        "_enum"
      ]
    ]
  ],
  "_exec": [
    [
      "lib/matplotlib/backends/qt_compat.py",
      [
        "_exec"
      ]
    ]
  ],
  "_devicePixelRatioF": [
    [
      "lib/matplotlib/backends/qt_compat.py",
      [
        "_devicePixelRatioF"
      ]
    ]
  ],
  "_setDevicePixelRatio": [
    [
      "lib/matplotlib/backends/qt_compat.py",
      [
        "_setDevicePixelRatio"
      ]
    ]
  ],
  "_may_clear_sock": [
    [
      "lib/matplotlib/backends/qt_compat.py",
      [
        "_maybe_allow_interrupt",
        "if_old_sigint_handler_in_",
        "else_",
        "_may_clear_sock"
      ]
    ]
  ],
  "handle": [
    [
      "lib/matplotlib/backends/qt_compat.py",
      [
        "_maybe_allow_interrupt",
        "if_old_sigint_handler_in_",
        "else_",
        "handle"
      ]
    ]
  ],
  "_maybe_allow_interrupt": [
    [
      "lib/matplotlib/backends/qt_compat.py",
      [
        "_maybe_allow_interrupt"
      ]
    ]
  ],
  "choose_color": [
    [
      "lib/matplotlib/backends/qt_editor/_formlayout.py",
      [
        "ColorButton",
        "choose_color"
      ]
    ]
  ],
  "get_color": [
    [
      "lib/matplotlib/backends/qt_editor/_formlayout.py",
      [
        "ColorButton",
        "get_color"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "LineCollection",
        "get_color"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "EventCollection",
        "get_color"
      ]
    ],
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "get_color"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "get_color"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "Ticks",
        "get_color"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisLabel",
        "get_color"
      ]
    ],
    [
      "tutorials/intermediate/imshow_extent.py",
      [
        "get_color"
      ]
    ]
  ],
  "to_qcolor": [
    [
      "lib/matplotlib/backends/qt_editor/_formlayout.py",
      [
        "to_qcolor"
      ]
    ]
  ],
  "update_color": [
    [
      "lib/matplotlib/backends/qt_editor/_formlayout.py",
      [
        "ColorLayout",
        "update_color"
      ]
    ]
  ],
  "font_is_installed": [
    [
      "lib/matplotlib/backends/qt_editor/_formlayout.py",
      [
        "font_is_installed"
      ]
    ]
  ],
  "tuple_to_qfont": [
    [
      "lib/matplotlib/backends/qt_editor/_formlayout.py",
      [
        "tuple_to_qfont"
      ]
    ]
  ],
  "qfont_to_tuple": [
    [
      "lib/matplotlib/backends/qt_editor/_formlayout.py",
      [
        "qfont_to_tuple"
      ]
    ]
  ],
  "get_font": [
    [
      "lib/matplotlib/backends/qt_editor/_formlayout.py",
      [
        "FontLayout",
        "get_font"
      ]
    ],
    [
      "lib/matplotlib/font_manager.py",
      [
        "get_font"
      ]
    ]
  ],
  "is_edit_valid": [
    [
      "lib/matplotlib/backends/qt_editor/_formlayout.py",
      [
        "is_edit_valid"
      ]
    ]
  ],
  "get_dialog": [
    [
      "lib/matplotlib/backends/qt_editor/_formlayout.py",
      [
        "FormWidget",
        "get_dialog"
      ]
    ]
  ],
  "register_float_field": [
    [
      "lib/matplotlib/backends/qt_editor/_formlayout.py",
      [
        "FormDialog",
        "register_float_field"
      ]
    ]
  ],
  "update_buttons": [
    [
      "lib/matplotlib/backends/qt_editor/_formlayout.py",
      [
        "FormDialog",
        "update_buttons"
      ]
    ]
  ],
  "reject": [
    [
      "lib/matplotlib/backends/qt_editor/_formlayout.py",
      [
        "FormDialog",
        "reject"
      ]
    ],
    [
      "tools/triage_tests.py",
      [
        "Entry",
        "reject"
      ]
    ]
  ],
  "apply": [
    [
      "lib/matplotlib/backends/qt_editor/_formlayout.py",
      [
        "FormDialog",
        "apply"
      ]
    ]
  ],
  "fedit": [
    [
      "lib/matplotlib/backends/qt_editor/_formlayout.py",
      [
        "fedit"
      ]
    ]
  ],
  "create_datalist_example": [
    [
      "lib/matplotlib/backends/qt_editor/_formlayout.py",
      [
        "if___name_____main___",
        "create_datalist_example"
      ]
    ]
  ],
  "create_datagroup_example": [
    [
      "lib/matplotlib/backends/qt_editor/_formlayout.py",
      [
        "if___name_____main___",
        "create_datagroup_example"
      ]
    ]
  ],
  "apply_test": [
    [
      "lib/matplotlib/backends/qt_editor/_formlayout.py",
      [
        "if___name_____main___",
        "apply_test"
      ]
    ]
  ],
  "convert_limits": [
    [
      "lib/matplotlib/backends/qt_editor/figureoptions.py",
      [
        "figure_edit",
        "convert_limits"
      ]
    ]
  ],
  "prepare_data": [
    [
      "lib/matplotlib/backends/qt_editor/figureoptions.py",
      [
        "figure_edit",
        "prepare_data"
      ]
    ]
  ],
  "apply_callback": [
    [
      "lib/matplotlib/backends/qt_editor/figureoptions.py",
      [
        "figure_edit",
        "apply_callback"
      ]
    ]
  ],
  "figure_edit": [
    [
      "lib/matplotlib/backends/qt_editor/figureoptions.py",
      [
        "figure_edit"
      ]
    ]
  ],
  "_comb": [
    [
      "lib/matplotlib/bezier.py",
      [
        "_comb"
      ]
    ]
  ],
  "get_intersection": [
    [
      "lib/matplotlib/bezier.py",
      [
        "get_intersection"
      ]
    ]
  ],
  "get_normal_points": [
    [
      "lib/matplotlib/bezier.py",
      [
        "get_normal_points"
      ]
    ]
  ],
  "_de_casteljau1": [
    [
      "lib/matplotlib/bezier.py",
      [
        "_de_casteljau1"
      ]
    ]
  ],
  "split_de_casteljau": [
    [
      "lib/matplotlib/bezier.py",
      [
        "split_de_casteljau"
      ]
    ]
  ],
  "find_bezier_t_intersecting_with_closedpath": [
    [
      "lib/matplotlib/bezier.py",
      [
        "find_bezier_t_intersecting_with_closedpath"
      ]
    ]
  ],
  "point_at_t": [
    [
      "lib/matplotlib/bezier.py",
      [
        "BezierSegment",
        "point_at_t"
      ]
    ]
  ],
  "control_points": [
    [
      "lib/matplotlib/bezier.py",
      [
        "BezierSegment",
        "control_points"
      ]
    ]
  ],
  "dimension": [
    [
      "lib/matplotlib/bezier.py",
      [
        "BezierSegment",
        "dimension"
      ]
    ]
  ],
  "degree": [
    [
      "lib/matplotlib/bezier.py",
      [
        "BezierSegment",
        "degree"
      ]
    ]
  ],
  "polynomial_coefficients": [
    [
      "lib/matplotlib/bezier.py",
      [
        "BezierSegment",
        "polynomial_coefficients"
      ]
    ]
  ],
  "axis_aligned_extrema": [
    [
      "lib/matplotlib/bezier.py",
      [
        "BezierSegment",
        "axis_aligned_extrema"
      ]
    ]
  ],
  "split_bezier_intersecting_with_closedpath": [
    [
      "lib/matplotlib/bezier.py",
      [
        "split_bezier_intersecting_with_closedpath"
      ]
    ]
  ],
  "split_path_inout": [
    [
      "lib/matplotlib/bezier.py",
      [
        "split_path_inout"
      ]
    ]
  ],
  "inside_circle": [
    [
      "lib/matplotlib/bezier.py",
      [
        "inside_circle"
      ]
    ]
  ],
  "get_cos_sin": [
    [
      "lib/matplotlib/bezier.py",
      [
        "get_cos_sin"
      ]
    ]
  ],
  "check_if_parallel": [
    [
      "lib/matplotlib/bezier.py",
      [
        "check_if_parallel"
      ]
    ]
  ],
  "get_parallels": [
    [
      "lib/matplotlib/bezier.py",
      [
        "get_parallels"
      ]
    ]
  ],
  "find_control_points": [
    [
      "lib/matplotlib/bezier.py",
      [
        "find_control_points"
      ]
    ]
  ],
  "make_wedged_bezier2": [
    [
      "lib/matplotlib/bezier.py",
      [
        "make_wedged_bezier2"
      ]
    ]
  ],
  "on_event": [
    [
      "lib/matplotlib/blocking_input.py",
      [
        "BlockingInput",
        "on_event"
      ]
    ]
  ],
  "post_event": [
    [
      "lib/matplotlib/blocking_input.py",
      [
        "BlockingInput",
        "post_event"
      ]
    ],
    [
      "lib/matplotlib/blocking_input.py",
      [
        "BlockingMouseInput",
        "post_event"
      ]
    ],
    [
      "lib/matplotlib/blocking_input.py",
      [
        "BlockingKeyMouseInput",
        "post_event"
      ]
    ]
  ],
  "cleanup": [
    [
      "lib/matplotlib/blocking_input.py",
      [
        "BlockingInput",
        "cleanup"
      ]
    ],
    [
      "lib/matplotlib/blocking_input.py",
      [
        "BlockingMouseInput",
        "cleanup"
      ]
    ],
    [
      "lib/matplotlib/testing/decorators.py",
      [
        "cleanup"
      ]
    ]
  ],
  "add_event": [
    [
      "lib/matplotlib/blocking_input.py",
      [
        "BlockingInput",
        "add_event"
      ]
    ]
  ],
  "pop_event": [
    [
      "lib/matplotlib/blocking_input.py",
      [
        "BlockingInput",
        "pop_event"
      ]
    ]
  ],
  "mouse_event": [
    [
      "lib/matplotlib/blocking_input.py",
      [
        "BlockingMouseInput",
        "mouse_event"
      ]
    ]
  ],
  "key_event": [
    [
      "lib/matplotlib/blocking_input.py",
      [
        "BlockingMouseInput",
        "key_event"
      ]
    ]
  ],
  "mouse_event_add": [
    [
      "lib/matplotlib/blocking_input.py",
      [
        "BlockingMouseInput",
        "mouse_event_add"
      ]
    ]
  ],
  "mouse_event_stop": [
    [
      "lib/matplotlib/blocking_input.py",
      [
        "BlockingMouseInput",
        "mouse_event_stop"
      ]
    ]
  ],
  "mouse_event_pop": [
    [
      "lib/matplotlib/blocking_input.py",
      [
        "BlockingMouseInput",
        "mouse_event_pop"
      ]
    ]
  ],
  "add_click": [
    [
      "lib/matplotlib/blocking_input.py",
      [
        "BlockingMouseInput",
        "add_click"
      ]
    ],
    [
      "lib/matplotlib/blocking_input.py",
      [
        "BlockingContourLabeler",
        "add_click"
      ]
    ]
  ],
  "pop_click": [
    [
      "lib/matplotlib/blocking_input.py",
      [
        "BlockingMouseInput",
        "pop_click"
      ]
    ],
    [
      "lib/matplotlib/blocking_input.py",
      [
        "BlockingContourLabeler",
        "pop_click"
      ]
    ]
  ],
  "button1": [
    [
      "lib/matplotlib/blocking_input.py",
      [
        "BlockingContourLabeler",
        "button1"
      ]
    ]
  ],
  "button3": [
    [
      "lib/matplotlib/blocking_input.py",
      [
        "BlockingContourLabeler",
        "button3"
      ]
    ]
  ],
  "_validate_unit": [
    [
      "lib/matplotlib/category.py",
      [
        "StrCategoryConverter",
        "_validate_unit"
      ]
    ]
  ],
  "tick_values": [
    [
      "lib/matplotlib/category.py",
      [
        "StrCategoryLocator",
        "tick_values"
      ]
    ],
    [
      "lib/matplotlib/dates.py",
      [
        "RRuleLocator",
        "tick_values"
      ]
    ],
    [
      "lib/matplotlib/dates.py",
      [
        "AutoDateLocator",
        "tick_values"
      ]
    ],
    [
      "lib/matplotlib/dates.py",
      [
        "MicrosecondLocator",
        "tick_values"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "Locator",
        "tick_values"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "IndexLocator",
        "tick_values"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "FixedLocator",
        "tick_values"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "NullLocator",
        "tick_values"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "LinearLocator",
        "tick_values"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "MultipleLocator",
        "tick_values"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "MaxNLocator",
        "tick_values"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "LogLocator",
        "tick_values"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "SymmetricalLogLocator",
        "tick_values"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "AsinhLocator",
        "tick_values"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "LogitLocator",
        "tick_values"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "AutoMinorLocator",
        "tick_values"
      ]
    ]
  ],
  "format_ticks": [
    [
      "lib/matplotlib/category.py",
      [
        "StrCategoryFormatter",
        "format_ticks"
      ]
    ],
    [
      "lib/matplotlib/dates.py",
      [
        "ConciseDateFormatter",
        "format_ticks"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "Formatter",
        "format_ticks"
      ]
    ]
  ],
  "_text": [
    [
      "lib/matplotlib/category.py",
      [
        "StrCategoryFormatter",
        "_text"
      ]
    ]
  ],
  "_str_is_convertible": [
    [
      "lib/matplotlib/category.py",
      [
        "UnitData",
        "_str_is_convertible"
      ]
    ]
  ],
  "_get_running_interactive_framework": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_get_running_interactive_framework"
      ]
    ]
  ],
  "_exception_printer": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_exception_printer"
      ]
    ]
  ],
  "_weak_or_strong_ref": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_weak_or_strong_ref"
      ]
    ]
  ],
  "connect": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "CallbackRegistry",
        "connect"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "ConnectionStyle",
        "Arc3",
        "connect"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "ConnectionStyle",
        "Angle3",
        "connect"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "ConnectionStyle",
        "Angle",
        "connect"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "ConnectionStyle",
        "Arc",
        "connect"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "ConnectionStyle",
        "Bar",
        "connect"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "connect"
      ]
    ],
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "Test_callback_registry",
        "connect"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "MultiCursor",
        "connect"
      ]
    ]
  ],
  "_connect_picklable": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "CallbackRegistry",
        "_connect_picklable"
      ]
    ]
  ],
  "_remove_proxy": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "CallbackRegistry",
        "_remove_proxy"
      ]
    ]
  ],
  "process": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "CallbackRegistry",
        "process"
      ]
    ]
  ],
  "blocked": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "CallbackRegistry",
        "blocked"
      ]
    ]
  ],
  "_local_over_kwdict": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_local_over_kwdict"
      ]
    ]
  ],
  "strip_math": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "strip_math"
      ]
    ]
  ],
  "_strip_comment": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_strip_comment"
      ]
    ]
  ],
  "is_writable_file_like": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "is_writable_file_like"
      ]
    ]
  ],
  "file_requires_unicode": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "file_requires_unicode"
      ]
    ]
  ],
  "to_filehandle": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "to_filehandle"
      ]
    ]
  ],
  "open_file_cm": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "open_file_cm"
      ]
    ]
  ],
  "is_scalar_or_string": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "is_scalar_or_string"
      ]
    ]
  ],
  "get_sample_data": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "get_sample_data"
      ]
    ]
  ],
  "_get_data_path": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_get_data_path"
      ]
    ]
  ],
  "flatten": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "flatten"
      ]
    ]
  ],
  "bubble": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "Stack",
        "bubble"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "_AxesStack",
        "bubble"
      ]
    ]
  ],
  "call": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "report_memory",
        "call"
      ]
    ],
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_metrics_cache",
        "call"
      ]
    ]
  ],
  "report_memory": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "report_memory"
      ]
    ]
  ],
  "safe_masked_invalid": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "safe_masked_invalid"
      ]
    ]
  ],
  "print_path": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "print_cycles",
        "print_path"
      ]
    ]
  ],
  "print_cycles": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "print_cycles"
      ]
    ]
  ],
  "__contains__": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "Grouper",
        "__contains__"
      ]
    ],
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_OrderedSet",
        "__contains__"
      ]
    ]
  ],
  "clean": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "Grouper",
        "clean"
      ]
    ]
  ],
  "join": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "Grouper",
        "join"
      ]
    ]
  ],
  "joined": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "Grouper",
        "joined"
      ]
    ]
  ],
  "get_siblings": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "Grouper",
        "get_siblings"
      ]
    ]
  ],
  "simple_linear_interpolation": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "simple_linear_interpolation"
      ]
    ]
  ],
  "delete_masked_points": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "delete_masked_points"
      ]
    ]
  ],
  "_combine_masks": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_combine_masks"
      ]
    ]
  ],
  "_bootstrap_median": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "boxplot_stats",
        "_bootstrap_median"
      ]
    ]
  ],
  "_compute_conf_interval": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "boxplot_stats",
        "_compute_conf_interval"
      ]
    ]
  ],
  "boxplot_stats": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "boxplot_stats"
      ]
    ]
  ],
  "contiguous_regions": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "contiguous_regions"
      ]
    ]
  ],
  "is_math_text": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "is_math_text"
      ]
    ]
  ],
  "_to_unmasked_float_array": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_to_unmasked_float_array"
      ]
    ]
  ],
  "_check_1d": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_check_1d"
      ]
    ]
  ],
  "_reshape_2D": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_reshape_2D"
      ]
    ]
  ],
  "violin_stats": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "violin_stats"
      ]
    ]
  ],
  "pts_to_prestep": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "pts_to_prestep"
      ]
    ]
  ],
  "pts_to_poststep": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "pts_to_poststep"
      ]
    ]
  ],
  "pts_to_midstep": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "pts_to_midstep"
      ]
    ]
  ],
  "index_of": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "index_of"
      ]
    ]
  ],
  "safe_first_element": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "safe_first_element"
      ]
    ]
  ],
  "safe_isfinite": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_safe_first_finite",
        "safe_isfinite"
      ]
    ]
  ],
  "_safe_first_finite": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_safe_first_finite"
      ]
    ]
  ],
  "sanitize_sequence": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "sanitize_sequence"
      ]
    ]
  ],
  "normalize_kwargs": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "normalize_kwargs"
      ]
    ]
  ],
  "_lock_path": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_lock_path"
      ]
    ]
  ],
  "_topmost_artist": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_topmost_artist"
      ]
    ]
  ],
  "_str_equal": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_str_equal"
      ]
    ]
  ],
  "_str_lower_equal": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_str_lower_equal"
      ]
    ]
  ],
  "_array_perimeter": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_array_perimeter"
      ]
    ]
  ],
  "_unfold": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_unfold"
      ]
    ]
  ],
  "_array_patch_perimeters": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_array_patch_perimeters"
      ]
    ]
  ],
  "_setattr_cm": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_setattr_cm"
      ]
    ]
  ],
  "discard": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_OrderedSet",
        "discard"
      ]
    ]
  ],
  "_premultiplied_argb32_to_unmultiplied_rgba8888": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_premultiplied_argb32_to_unmultiplied_rgba8888"
      ]
    ]
  ],
  "_unmultiplied_rgba8888_to_premultiplied_argb32": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_unmultiplied_rgba8888_to_premultiplied_argb32"
      ]
    ]
  ],
  "_get_nonzero_slices": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_get_nonzero_slices"
      ]
    ]
  ],
  "_pformat_subprocess": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_pformat_subprocess"
      ]
    ]
  ],
  "_check_and_log_subprocess": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_check_and_log_subprocess"
      ]
    ]
  ],
  "_backend_module_name": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_backend_module_name"
      ]
    ]
  ],
  "_setup_new_guiapp": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_setup_new_guiapp"
      ]
    ]
  ],
  "_format_approx": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_format_approx"
      ]
    ]
  ],
  "_g_sig_digits": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_g_sig_digits"
      ]
    ]
  ],
  "_unikey_or_keysym_to_mplkey": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_unikey_or_keysym_to_mplkey"
      ]
    ]
  ],
  "class_factory": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_make_class_factory",
        "class_factory"
      ]
    ]
  ],
  "_make_class_factory": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_make_class_factory"
      ]
    ]
  ],
  "_picklable_class_constructor": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_picklable_class_constructor"
      ]
    ]
  ],
  "_unpack_to_numpy": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_unpack_to_numpy"
      ]
    ]
  ],
  "_auto_format_str": [
    [
      "lib/matplotlib/cbook/__init__.py",
      [
        "_auto_format_str"
      ]
    ]
  ],
  "_gen_cmap_registry": [
    [
      "lib/matplotlib/cm.py",
      [
        "_gen_cmap_registry"
      ]
    ]
  ],
  "unregister": [
    [
      "lib/matplotlib/cm.py",
      [
        "ColormapRegistry",
        "unregister"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "ColorSequenceRegistry",
        "unregister"
      ]
    ]
  ],
  "get_cmap": [
    [
      "lib/matplotlib/cm.py",
      [
        "ColormapRegistry",
        "get_cmap"
      ]
    ],
    [
      "lib/matplotlib/cm.py",
      [
        "ScalarMappable",
        "get_cmap"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "get_cmap"
      ]
    ]
  ],
  "register_cmap": [
    [
      "lib/matplotlib/cm.py",
      [
        "register_cmap"
      ]
    ]
  ],
  "_get_cmap": [
    [
      "lib/matplotlib/cm.py",
      [
        "_get_cmap"
      ]
    ]
  ],
  "unregister_cmap": [
    [
      "lib/matplotlib/cm.py",
      [
        "unregister_cmap"
      ]
    ]
  ],
  "_auto_norm_from_scale": [
    [
      "lib/matplotlib/cm.py",
      [
        "_auto_norm_from_scale"
      ]
    ]
  ],
  "_scale_norm": [
    [
      "lib/matplotlib/cm.py",
      [
        "ScalarMappable",
        "_scale_norm"
      ]
    ]
  ],
  "to_rgba": [
    [
      "lib/matplotlib/cm.py",
      [
        "ScalarMappable",
        "to_rgba"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "to_rgba"
      ]
    ]
  ],
  "set_array": [
    [
      "lib/matplotlib/cm.py",
      [
        "ScalarMappable",
        "set_array"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "QuadMesh",
        "set_array"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "_ImageBase",
        "set_array"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "NonUniformImage",
        "set_array"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "PcolorImage",
        "set_array"
      ]
    ]
  ],
  "get_array": [
    [
      "lib/matplotlib/cm.py",
      [
        "ScalarMappable",
        "get_array"
      ]
    ]
  ],
  "get_clim": [
    [
      "lib/matplotlib/cm.py",
      [
        "ScalarMappable",
        "get_clim"
      ]
    ]
  ],
  "set_clim": [
    [
      "lib/matplotlib/cm.py",
      [
        "ScalarMappable",
        "set_clim"
      ]
    ]
  ],
  "set_cmap": [
    [
      "lib/matplotlib/cm.py",
      [
        "ScalarMappable",
        "set_cmap"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "NonUniformImage",
        "set_cmap"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "set_cmap"
      ]
    ]
  ],
  "norm": [
    [
      "lib/matplotlib/cm.py",
      [
        "ScalarMappable",
        "norm"
      ]
    ]
  ],
  "norm_10": [
    [
      "lib/matplotlib/cm.py",
      [
        "ScalarMappable",
        "norm_10"
      ]
    ]
  ],
  "set_norm": [
    [
      "lib/matplotlib/cm.py",
      [
        "ScalarMappable",
        "set_norm"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "NonUniformImage",
        "set_norm"
      ]
    ]
  ],
  "autoscale_None": [
    [
      "lib/matplotlib/cm.py",
      [
        "ScalarMappable",
        "autoscale_None"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "Normalize",
        "autoscale_None"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "TwoSlopeNorm",
        "autoscale_None"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "CenteredNorm",
        "autoscale_None"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "_make_norm_from_scale",
        "Norm",
        "autoscale_None"
      ]
    ]
  ],
  "changed": [
    [
      "lib/matplotlib/cm.py",
      [
        "ScalarMappable",
        "changed"
      ]
    ],
    [
      "lib/matplotlib/contour.py",
      [
        "ContourSet",
        "changed"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "_ImageBase",
        "changed"
      ]
    ]
  ],
  "_ensure_cmap": [
    [
      "lib/matplotlib/cm.py",
      [
        "_ensure_cmap"
      ]
    ]
  ],
  "get_paths": [
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "get_paths"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "PathCollection",
        "get_paths"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "TriMesh",
        "get_paths"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "QuadMesh",
        "get_paths"
      ]
    ]
  ],
  "set_paths": [
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "set_paths"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "PathCollection",
        "set_paths"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "PatchCollection",
        "set_paths"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "TriMesh",
        "set_paths"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "QuadMesh",
        "set_paths"
      ]
    ]
  ],
  "get_transforms": [
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "get_transforms"
      ]
    ]
  ],
  "get_offset_transform": [
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "get_offset_transform"
      ]
    ]
  ],
  "set_offset_transform": [
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "set_offset_transform"
      ]
    ]
  ],
  "get_datalim": [
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "get_datalim"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "QuadMesh",
        "get_datalim"
      ]
    ],
    [
      "lib/matplotlib/quiver.py",
      [
        "Quiver",
        "get_datalim"
      ]
    ]
  ],
  "_prepare_points": [
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "_prepare_points"
      ]
    ]
  ],
  "set_urls": [
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "set_urls"
      ]
    ]
  ],
  "get_urls": [
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "get_urls"
      ]
    ]
  ],
  "set_offsets": [
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "set_offsets"
      ]
    ],
    [
      "lib/matplotlib/quiver.py",
      [
        "Barbs",
        "set_offsets"
      ]
    ]
  ],
  "get_offsets": [
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "get_offsets"
      ]
    ]
  ],
  "_get_default_linewidth": [
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "_get_default_linewidth"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "LineCollection",
        "_get_default_linewidth"
      ]
    ]
  ],
  "set_linestyle": [
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "set_linestyle"
      ]
    ],
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "set_linestyle"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "set_linestyle"
      ]
    ]
  ],
  "_bcast_lwls": [
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "_bcast_lwls"
      ]
    ]
  ],
  "_get_default_antialiased": [
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "_get_default_antialiased"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "LineCollection",
        "_get_default_antialiased"
      ]
    ]
  ],
  "_get_default_facecolor": [
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "_get_default_facecolor"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "LineCollection",
        "_get_default_facecolor"
      ]
    ]
  ],
  "_set_facecolor": [
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "_set_facecolor"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "_set_facecolor"
      ]
    ]
  ],
  "get_edgecolor": [
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "get_edgecolor"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "get_edgecolor"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "get_edgecolor"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Patch3DCollection",
        "get_edgecolor"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Path3DCollection",
        "get_edgecolor"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Poly3DCollection",
        "get_edgecolor"
      ]
    ]
  ],
  "_get_default_edgecolor": [
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "_get_default_edgecolor"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "LineCollection",
        "_get_default_edgecolor"
      ]
    ]
  ],
  "_set_edgecolor": [
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "_set_edgecolor"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "_set_edgecolor"
      ]
    ]
  ],
  "set_edgecolor": [
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "set_edgecolor"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "set_edgecolor"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "set_edgecolor"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Poly3DCollection",
        "set_edgecolor"
      ]
    ]
  ],
  "get_linestyle": [
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "get_linestyle"
      ]
    ],
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "get_linestyle"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "get_linestyle"
      ]
    ]
  ],
  "_set_mappable_flags": [
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "_set_mappable_flags"
      ]
    ]
  ],
  "update_scalarmappable": [
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "update_scalarmappable"
      ]
    ]
  ],
  "get_fill": [
    [
      "lib/matplotlib/collections.py",
      [
        "Collection",
        "get_fill"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "get_fill"
      ]
    ]
  ],
  "get_sizes": [
    [
      "lib/matplotlib/collections.py",
      [
        "_CollectionWithSizes",
        "get_sizes"
      ]
    ],
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerRegularPolyCollection",
        "get_sizes"
      ]
    ]
  ],
  "set_sizes": [
    [
      "lib/matplotlib/collections.py",
      [
        "_CollectionWithSizes",
        "set_sizes"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Path3DCollection",
        "set_sizes"
      ]
    ]
  ],
  "legend_elements": [
    [
      "lib/matplotlib/collections.py",
      [
        "PathCollection",
        "legend_elements"
      ]
    ],
    [
      "lib/matplotlib/contour.py",
      [
        "ContourSet",
        "legend_elements"
      ]
    ]
  ],
  "set_verts": [
    [
      "lib/matplotlib/collections.py",
      [
        "PolyCollection",
        "set_verts"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Poly3DCollection",
        "set_verts"
      ]
    ]
  ],
  "set_verts_and_codes": [
    [
      "lib/matplotlib/collections.py",
      [
        "PolyCollection",
        "set_verts_and_codes"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Poly3DCollection",
        "set_verts_and_codes"
      ]
    ]
  ],
  "span_where": [
    [
      "lib/matplotlib/collections.py",
      [
        "BrokenBarHCollection",
        "span_where"
      ]
    ]
  ],
  "get_numsides": [
    [
      "lib/matplotlib/collections.py",
      [
        "RegularPolyCollection",
        "get_numsides"
      ]
    ]
  ],
  "get_rotation": [
    [
      "lib/matplotlib/collections.py",
      [
        "RegularPolyCollection",
        "get_rotation"
      ]
    ],
    [
      "lib/matplotlib/contour.py",
      [
        "ClabelText",
        "get_rotation"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "get_rotation"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "get_rotation"
      ]
    ]
  ],
  "set_segments": [
    [
      "lib/matplotlib/collections.py",
      [
        "LineCollection",
        "set_segments"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Line3DCollection",
        "set_segments"
      ]
    ]
  ],
  "get_segments": [
    [
      "lib/matplotlib/collections.py",
      [
        "LineCollection",
        "get_segments"
      ]
    ]
  ],
  "get_positions": [
    [
      "lib/matplotlib/collections.py",
      [
        "EventCollection",
        "get_positions"
      ]
    ]
  ],
  "set_positions": [
    [
      "lib/matplotlib/collections.py",
      [
        "EventCollection",
        "set_positions"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "FancyArrowPatch",
        "set_positions"
      ]
    ]
  ],
  "add_positions": [
    [
      "lib/matplotlib/collections.py",
      [
        "EventCollection",
        "add_positions"
      ]
    ]
  ],
  "is_horizontal": [
    [
      "lib/matplotlib/collections.py",
      [
        "EventCollection",
        "is_horizontal"
      ]
    ]
  ],
  "get_orientation": [
    [
      "lib/matplotlib/collections.py",
      [
        "EventCollection",
        "get_orientation"
      ]
    ]
  ],
  "switch_orientation": [
    [
      "lib/matplotlib/collections.py",
      [
        "EventCollection",
        "switch_orientation"
      ]
    ]
  ],
  "set_orientation": [
    [
      "lib/matplotlib/collections.py",
      [
        "EventCollection",
        "set_orientation"
      ]
    ]
  ],
  "get_linelength": [
    [
      "lib/matplotlib/collections.py",
      [
        "EventCollection",
        "get_linelength"
      ]
    ]
  ],
  "set_linelength": [
    [
      "lib/matplotlib/collections.py",
      [
        "EventCollection",
        "set_linelength"
      ]
    ]
  ],
  "get_lineoffset": [
    [
      "lib/matplotlib/collections.py",
      [
        "EventCollection",
        "get_lineoffset"
      ]
    ]
  ],
  "set_lineoffset": [
    [
      "lib/matplotlib/collections.py",
      [
        "EventCollection",
        "set_lineoffset"
      ]
    ]
  ],
  "get_linewidths": [
    [
      "lib/matplotlib/collections.py",
      [
        "EventCollection",
        "get_linewidths"
      ]
    ]
  ],
  "_set_transforms": [
    [
      "lib/matplotlib/collections.py",
      [
        "EllipseCollection",
        "_set_transforms"
      ]
    ]
  ],
  "convert_mesh_to_paths": [
    [
      "lib/matplotlib/collections.py",
      [
        "TriMesh",
        "convert_mesh_to_paths"
      ]
    ],
    [
      "lib/matplotlib/collections.py",
      [
        "QuadMesh",
        "convert_mesh_to_paths"
      ]
    ]
  ],
  "get_coordinates": [
    [
      "lib/matplotlib/collections.py",
      [
        "QuadMesh",
        "get_coordinates"
      ]
    ]
  ],
  "_convert_mesh_to_paths": [
    [
      "lib/matplotlib/collections.py",
      [
        "QuadMesh",
        "_convert_mesh_to_paths"
      ]
    ]
  ],
  "convert_mesh_to_triangles": [
    [
      "lib/matplotlib/collections.py",
      [
        "QuadMesh",
        "convert_mesh_to_triangles"
      ]
    ]
  ],
  "_convert_mesh_to_triangles": [
    [
      "lib/matplotlib/collections.py",
      [
        "QuadMesh",
        "_convert_mesh_to_triangles"
      ]
    ]
  ],
  "_set_ticks_on_axis_warn": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "_set_ticks_on_axis_warn"
      ]
    ]
  ],
  "set_xy": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "_ColorbarSpine",
        "set_xy"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Rectangle",
        "set_xy"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Polygon",
        "set_xy"
      ]
    ]
  ],
  "minorlocator": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "minorlocator"
      ]
    ]
  ],
  "minorlocator_3": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "minorlocator_3"
      ]
    ]
  ],
  "formatter_5": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "formatter_5"
      ]
    ]
  ],
  "minorformatter": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "minorformatter"
      ]
    ]
  ],
  "minorformatter_7": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "minorformatter_7"
      ]
    ]
  ],
  "_cbar_cla": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "_cbar_cla"
      ]
    ]
  ],
  "update_normal": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "update_normal"
      ]
    ]
  ],
  "_draw_all": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "_draw_all"
      ]
    ]
  ],
  "_add_solids": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "_add_solids"
      ]
    ]
  ],
  "_update_dividers": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "_update_dividers"
      ]
    ]
  ],
  "_add_solids_patches": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "_add_solids_patches"
      ]
    ]
  ],
  "_do_extends": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "_do_extends"
      ]
    ]
  ],
  "add_lines": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "add_lines"
      ]
    ]
  ],
  "update_ticks": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "update_ticks"
      ]
    ]
  ],
  "_get_ticker_locator_formatter": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "_get_ticker_locator_formatter"
      ]
    ]
  ],
  "get_ticks": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "get_ticks"
      ]
    ]
  ],
  "_process_values": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "_process_values"
      ]
    ]
  ],
  "_mesh": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "_mesh"
      ]
    ]
  ],
  "_forward_boundaries": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "_forward_boundaries"
      ]
    ]
  ],
  "_inverse_boundaries": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "_inverse_boundaries"
      ]
    ]
  ],
  "_reset_locator_formatter_scale": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "_reset_locator_formatter_scale"
      ]
    ]
  ],
  "_locate": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "_locate"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "_locate"
      ]
    ]
  ],
  "_uniform_y": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "_uniform_y"
      ]
    ]
  ],
  "_proportional_y": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "_proportional_y"
      ]
    ]
  ],
  "_get_extension_lengths": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "_get_extension_lengths"
      ]
    ]
  ],
  "_extend_lower": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "_extend_lower"
      ]
    ]
  ],
  "_extend_upper": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "_extend_upper"
      ]
    ]
  ],
  "_long_axis": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "_long_axis"
      ]
    ]
  ],
  "_short_axis": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "Colorbar",
        "_short_axis"
      ]
    ]
  ],
  "_normalize_location_orientation": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "_normalize_location_orientation"
      ]
    ]
  ],
  "make_axes": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "make_axes"
      ]
    ]
  ],
  "make_axes_gridspec": [
    [
      "lib/matplotlib/colorbar.py",
      [
        "make_axes_gridspec"
      ]
    ]
  ],
  "get_named_colors_mapping": [
    [
      "lib/matplotlib/colors.py",
      [
        "get_named_colors_mapping"
      ]
    ]
  ],
  "_sanitize_extrema": [
    [
      "lib/matplotlib/colors.py",
      [
        "_sanitize_extrema"
      ]
    ]
  ],
  "_is_nth_color": [
    [
      "lib/matplotlib/colors.py",
      [
        "_is_nth_color"
      ]
    ]
  ],
  "is_color_like": [
    [
      "lib/matplotlib/colors.py",
      [
        "is_color_like"
      ]
    ]
  ],
  "_has_alpha_channel": [
    [
      "lib/matplotlib/colors.py",
      [
        "_has_alpha_channel"
      ]
    ]
  ],
  "_check_color_like": [
    [
      "lib/matplotlib/colors.py",
      [
        "_check_color_like"
      ]
    ]
  ],
  "same_color": [
    [
      "lib/matplotlib/colors.py",
      [
        "same_color"
      ]
    ]
  ],
  "_to_rgba_no_colorcycle": [
    [
      "lib/matplotlib/colors.py",
      [
        "_to_rgba_no_colorcycle"
      ]
    ]
  ],
  "to_rgba_array": [
    [
      "lib/matplotlib/colors.py",
      [
        "to_rgba_array"
      ]
    ]
  ],
  "to_rgb": [
    [
      "lib/matplotlib/colors.py",
      [
        "to_rgb"
      ]
    ]
  ],
  "to_hex": [
    [
      "lib/matplotlib/colors.py",
      [
        "to_hex"
      ]
    ]
  ],
  "_create_lookup_table": [
    [
      "lib/matplotlib/colors.py",
      [
        "_create_lookup_table"
      ]
    ]
  ],
  "get_bad": [
    [
      "lib/matplotlib/colors.py",
      [
        "Colormap",
        "get_bad"
      ]
    ]
  ],
  "set_bad": [
    [
      "lib/matplotlib/colors.py",
      [
        "Colormap",
        "set_bad"
      ]
    ]
  ],
  "get_under": [
    [
      "lib/matplotlib/colors.py",
      [
        "Colormap",
        "get_under"
      ]
    ]
  ],
  "set_under": [
    [
      "lib/matplotlib/colors.py",
      [
        "Colormap",
        "set_under"
      ]
    ]
  ],
  "get_over": [
    [
      "lib/matplotlib/colors.py",
      [
        "Colormap",
        "get_over"
      ]
    ]
  ],
  "set_over": [
    [
      "lib/matplotlib/colors.py",
      [
        "Colormap",
        "set_over"
      ]
    ]
  ],
  "set_extremes": [
    [
      "lib/matplotlib/colors.py",
      [
        "Colormap",
        "set_extremes"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/grid_helper_curvelinear.py",
      [
        "FloatingAxisArtistHelper",
        "set_extremes"
      ]
    ]
  ],
  "with_extremes": [
    [
      "lib/matplotlib/colors.py",
      [
        "Colormap",
        "with_extremes"
      ]
    ]
  ],
  "_set_extremes": [
    [
      "lib/matplotlib/colors.py",
      [
        "Colormap",
        "_set_extremes"
      ]
    ]
  ],
  "is_gray": [
    [
      "lib/matplotlib/colors.py",
      [
        "Colormap",
        "is_gray"
      ]
    ]
  ],
  "resampled": [
    [
      "lib/matplotlib/colors.py",
      [
        "Colormap",
        "resampled"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "LinearSegmentedColormap",
        "resampled"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "ListedColormap",
        "resampled"
      ]
    ]
  ],
  "reversed": [
    [
      "lib/matplotlib/colors.py",
      [
        "Colormap",
        "reversed"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "LinearSegmentedColormap",
        "reversed"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "ListedColormap",
        "reversed"
      ]
    ]
  ],
  "_repr_png_": [
    [
      "lib/matplotlib/colors.py",
      [
        "Colormap",
        "_repr_png_"
      ]
    ]
  ],
  "color_block": [
    [
      "lib/matplotlib/colors.py",
      [
        "Colormap",
        "_repr_html_",
        "color_block"
      ]
    ]
  ],
  "set_gamma": [
    [
      "lib/matplotlib/colors.py",
      [
        "LinearSegmentedColormap",
        "set_gamma"
      ]
    ]
  ],
  "from_list": [
    [
      "lib/matplotlib/colors.py",
      [
        "LinearSegmentedColormap",
        "from_list"
      ]
    ]
  ],
  "_reverser": [
    [
      "lib/matplotlib/colors.py",
      [
        "LinearSegmentedColormap",
        "_reverser"
      ]
    ]
  ],
  "vmin": [
    [
      "lib/matplotlib/colors.py",
      [
        "Normalize",
        "vmin"
      ]
    ]
  ],
  "vmin_1": [
    [
      "lib/matplotlib/colors.py",
      [
        "Normalize",
        "vmin_1"
      ]
    ]
  ],
  "vmax": [
    [
      "lib/matplotlib/colors.py",
      [
        "Normalize",
        "vmax"
      ]
    ]
  ],
  "vmax_3": [
    [
      "lib/matplotlib/colors.py",
      [
        "Normalize",
        "vmax_3"
      ]
    ]
  ],
  "clip": [
    [
      "lib/matplotlib/colors.py",
      [
        "Normalize",
        "clip"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/clip_path.py",
      [
        "clip"
      ]
    ]
  ],
  "clip_5": [
    [
      "lib/matplotlib/colors.py",
      [
        "Normalize",
        "clip_5"
      ]
    ]
  ],
  "_changed": [
    [
      "lib/matplotlib/colors.py",
      [
        "Normalize",
        "_changed"
      ]
    ]
  ],
  "process_value": [
    [
      "lib/matplotlib/colors.py",
      [
        "Normalize",
        "process_value"
      ]
    ]
  ],
  "scaled": [
    [
      "lib/matplotlib/colors.py",
      [
        "Normalize",
        "scaled"
      ]
    ],
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "scaled"
      ]
    ]
  ],
  "vcenter": [
    [
      "lib/matplotlib/colors.py",
      [
        "TwoSlopeNorm",
        "vcenter"
      ]
    ],
    [
      "lib/matplotlib/colors.py",
      [
        "CenteredNorm",
        "vcenter"
      ]
    ]
  ],
  "vcenter_1": [
    [
      "lib/matplotlib/colors.py",
      [
        "TwoSlopeNorm",
        "vcenter_1"
      ]
    ]
  ],
  "_set_vmin_vmax": [
    [
      "lib/matplotlib/colors.py",
      [
        "CenteredNorm",
        "_set_vmin_vmax"
      ]
    ]
  ],
  "vcenter_4": [
    [
      "lib/matplotlib/colors.py",
      [
        "CenteredNorm",
        "vcenter_4"
      ]
    ]
  ],
  "halfrange": [
    [
      "lib/matplotlib/colors.py",
      [
        "CenteredNorm",
        "halfrange"
      ]
    ]
  ],
  "halfrange_6": [
    [
      "lib/matplotlib/colors.py",
      [
        "CenteredNorm",
        "halfrange_6"
      ]
    ]
  ],
  "make_norm_from_scale": [
    [
      "lib/matplotlib/colors.py",
      [
        "make_norm_from_scale"
      ]
    ]
  ],
  "__reduce__": [
    [
      "lib/matplotlib/colors.py",
      [
        "_make_norm_from_scale",
        "Norm",
        "__reduce__"
      ]
    ]
  ],
  "_make_norm_from_scale": [
    [
      "lib/matplotlib/colors.py",
      [
        "_make_norm_from_scale"
      ]
    ]
  ],
  "_create_empty_object_of_class": [
    [
      "lib/matplotlib/colors.py",
      [
        "_create_empty_object_of_class"
      ]
    ]
  ],
  "_picklable_norm_constructor": [
    [
      "lib/matplotlib/colors.py",
      [
        "_picklable_norm_constructor"
      ]
    ]
  ],
  "linthresh": [
    [
      "lib/matplotlib/colors.py",
      [
        "SymLogNorm",
        "linthresh"
      ]
    ]
  ],
  "linthresh_1": [
    [
      "lib/matplotlib/colors.py",
      [
        "SymLogNorm",
        "linthresh_1"
      ]
    ]
  ],
  "linear_width": [
    [
      "lib/matplotlib/colors.py",
      [
        "AsinhNorm",
        "linear_width"
      ]
    ]
  ],
  "linear_width_1": [
    [
      "lib/matplotlib/colors.py",
      [
        "AsinhNorm",
        "linear_width_1"
      ]
    ]
  ],
  "rgb_to_hsv": [
    [
      "lib/matplotlib/colors.py",
      [
        "rgb_to_hsv"
      ]
    ]
  ],
  "hsv_to_rgb": [
    [
      "lib/matplotlib/colors.py",
      [
        "hsv_to_rgb"
      ]
    ]
  ],
  "_vector_magnitude": [
    [
      "lib/matplotlib/colors.py",
      [
        "_vector_magnitude"
      ]
    ]
  ],
  "direction": [
    [
      "lib/matplotlib/colors.py",
      [
        "LightSource",
        "direction"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "SpanSelector",
        "direction"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "ToolLineHandles",
        "direction"
      ]
    ]
  ],
  "hillshade": [
    [
      "lib/matplotlib/colors.py",
      [
        "LightSource",
        "hillshade"
      ]
    ]
  ],
  "shade_normals": [
    [
      "lib/matplotlib/colors.py",
      [
        "LightSource",
        "shade_normals"
      ]
    ]
  ],
  "shade": [
    [
      "lib/matplotlib/colors.py",
      [
        "LightSource",
        "shade"
      ]
    ]
  ],
  "shade_rgb": [
    [
      "lib/matplotlib/colors.py",
      [
        "LightSource",
        "shade_rgb"
      ]
    ]
  ],
  "blend_hsv": [
    [
      "lib/matplotlib/colors.py",
      [
        "LightSource",
        "blend_hsv"
      ]
    ]
  ],
  "blend_soft_light": [
    [
      "lib/matplotlib/colors.py",
      [
        "LightSource",
        "blend_soft_light"
      ]
    ]
  ],
  "blend_overlay": [
    [
      "lib/matplotlib/colors.py",
      [
        "LightSource",
        "blend_overlay"
      ]
    ]
  ],
  "from_levels_and_colors": [
    [
      "lib/matplotlib/colors.py",
      [
        "from_levels_and_colors"
      ]
    ]
  ],
  "_contour_labeler_event_handler": [
    [
      "lib/matplotlib/contour.py",
      [
        "_contour_labeler_event_handler"
      ]
    ]
  ],
  "print_label": [
    [
      "lib/matplotlib/contour.py",
      [
        "ContourLabeler",
        "print_label"
      ]
    ]
  ],
  "too_close": [
    [
      "lib/matplotlib/contour.py",
      [
        "ContourLabeler",
        "too_close"
      ]
    ]
  ],
  "_get_nth_label_width": [
    [
      "lib/matplotlib/contour.py",
      [
        "ContourLabeler",
        "_get_nth_label_width"
      ]
    ]
  ],
  "get_label_width": [
    [
      "lib/matplotlib/contour.py",
      [
        "ContourLabeler",
        "get_label_width"
      ]
    ]
  ],
  "set_label_props": [
    [
      "lib/matplotlib/contour.py",
      [
        "ContourLabeler",
        "set_label_props"
      ]
    ]
  ],
  "get_text": [
    [
      "lib/matplotlib/contour.py",
      [
        "ContourLabeler",
        "get_text"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "TextArea",
        "get_text"
      ]
    ],
    [
      "lib/matplotlib/table.py",
      [
        "Cell",
        "get_text"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "get_text"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisLabel",
        "get_text"
      ]
    ]
  ],
  "locate_label": [
    [
      "lib/matplotlib/contour.py",
      [
        "ContourLabeler",
        "locate_label"
      ]
    ]
  ],
  "calc_label_rot_and_inline": [
    [
      "lib/matplotlib/contour.py",
      [
        "ContourLabeler",
        "calc_label_rot_and_inline"
      ]
    ]
  ],
  "add_label": [
    [
      "lib/matplotlib/contour.py",
      [
        "ContourLabeler",
        "add_label"
      ]
    ]
  ],
  "add_label_clabeltext": [
    [
      "lib/matplotlib/contour.py",
      [
        "ContourLabeler",
        "add_label_clabeltext"
      ]
    ]
  ],
  "add_label_near": [
    [
      "lib/matplotlib/contour.py",
      [
        "ContourLabeler",
        "add_label_near"
      ]
    ]
  ],
  "pop_label": [
    [
      "lib/matplotlib/contour.py",
      [
        "ContourLabeler",
        "pop_label"
      ]
    ]
  ],
  "labels": [
    [
      "lib/matplotlib/contour.py",
      [
        "ContourLabeler",
        "labels"
      ]
    ]
  ],
  "_is_closed_polygon": [
    [
      "lib/matplotlib/contour.py",
      [
        "_is_closed_polygon"
      ]
    ]
  ],
  "_find_closest_point_on_path": [
    [
      "lib/matplotlib/contour.py",
      [
        "_find_closest_point_on_path"
      ]
    ]
  ],
  "_process_args": [
    [
      "lib/matplotlib/contour.py",
      [
        "ContourSet",
        "_process_args"
      ]
    ],
    [
      "lib/matplotlib/contour.py",
      [
        "QuadContourSet",
        "_process_args"
      ]
    ],
    [
      "lib/matplotlib/tri/tricontour.py",
      [
        "TriContourSet",
        "_process_args"
      ]
    ]
  ],
  "_get_allsegs_and_allkinds": [
    [
      "lib/matplotlib/contour.py",
      [
        "ContourSet",
        "_get_allsegs_and_allkinds"
      ]
    ]
  ],
  "_get_lowers_and_uppers": [
    [
      "lib/matplotlib/contour.py",
      [
        "ContourSet",
        "_get_lowers_and_uppers"
      ]
    ]
  ],
  "_make_paths": [
    [
      "lib/matplotlib/contour.py",
      [
        "ContourSet",
        "_make_paths"
      ]
    ]
  ],
  "_autolev": [
    [
      "lib/matplotlib/contour.py",
      [
        "ContourSet",
        "_autolev"
      ]
    ]
  ],
  "_process_contour_level_args": [
    [
      "lib/matplotlib/contour.py",
      [
        "ContourSet",
        "_process_contour_level_args"
      ]
    ]
  ],
  "_process_levels": [
    [
      "lib/matplotlib/contour.py",
      [
        "ContourSet",
        "_process_levels"
      ]
    ]
  ],
  "_process_colors": [
    [
      "lib/matplotlib/contour.py",
      [
        "ContourSet",
        "_process_colors"
      ]
    ]
  ],
  "_process_linewidths": [
    [
      "lib/matplotlib/contour.py",
      [
        "ContourSet",
        "_process_linewidths"
      ]
    ]
  ],
  "_process_linestyles": [
    [
      "lib/matplotlib/contour.py",
      [
        "ContourSet",
        "_process_linestyles"
      ]
    ]
  ],
  "find_nearest_contour": [
    [
      "lib/matplotlib/contour.py",
      [
        "ContourSet",
        "find_nearest_contour"
      ]
    ]
  ],
  "_contour_args": [
    [
      "lib/matplotlib/contour.py",
      [
        "QuadContourSet",
        "_contour_args"
      ]
    ],
    [
      "lib/matplotlib/tri/tricontour.py",
      [
        "TriContourSet",
        "_contour_args"
      ]
    ]
  ],
  "_check_xyz": [
    [
      "lib/matplotlib/contour.py",
      [
        "QuadContourSet",
        "_check_xyz"
      ]
    ]
  ],
  "_initialize_x_y": [
    [
      "lib/matplotlib/contour.py",
      [
        "QuadContourSet",
        "_initialize_x_y"
      ]
    ]
  ],
  "_get_tzinfo": [
    [
      "lib/matplotlib/dates.py",
      [
        "_get_tzinfo"
      ]
    ]
  ],
  "_reset_epoch_test_example": [
    [
      "lib/matplotlib/dates.py",
      [
        "_reset_epoch_test_example"
      ]
    ]
  ],
  "set_epoch": [
    [
      "lib/matplotlib/dates.py",
      [
        "set_epoch"
      ]
    ]
  ],
  "get_epoch": [
    [
      "lib/matplotlib/dates.py",
      [
        "get_epoch"
      ]
    ]
  ],
  "_dt64_to_ordinalf": [
    [
      "lib/matplotlib/dates.py",
      [
        "_dt64_to_ordinalf"
      ]
    ]
  ],
  "_from_ordinalf": [
    [
      "lib/matplotlib/dates.py",
      [
        "_from_ordinalf"
      ]
    ]
  ],
  "datestr2num": [
    [
      "lib/matplotlib/dates.py",
      [
        "datestr2num"
      ]
    ]
  ],
  "date2num": [
    [
      "lib/matplotlib/dates.py",
      [
        "date2num"
      ]
    ]
  ],
  "julian2num": [
    [
      "lib/matplotlib/dates.py",
      [
        "julian2num"
      ]
    ]
  ],
  "num2julian": [
    [
      "lib/matplotlib/dates.py",
      [
        "num2julian"
      ]
    ]
  ],
  "num2date": [
    [
      "lib/matplotlib/dates.py",
      [
        "num2date"
      ]
    ]
  ],
  "num2timedelta": [
    [
      "lib/matplotlib/dates.py",
      [
        "num2timedelta"
      ]
    ]
  ],
  "drange": [
    [
      "lib/matplotlib/dates.py",
      [
        "drange"
      ]
    ]
  ],
  "_wrap_in_tex": [
    [
      "lib/matplotlib/dates.py",
      [
        "_wrap_in_tex"
      ]
    ]
  ],
  "set_tzinfo": [
    [
      "lib/matplotlib/dates.py",
      [
        "DateFormatter",
        "set_tzinfo"
      ]
    ],
    [
      "lib/matplotlib/dates.py",
      [
        "DateLocator",
        "set_tzinfo"
      ]
    ]
  ],
  "get_offset": [
    [
      "lib/matplotlib/dates.py",
      [
        "ConciseDateFormatter",
        "get_offset"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "OffsetBox",
        "get_offset"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "DrawingArea",
        "get_offset"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "TextArea",
        "get_offset"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AuxTransformBox",
        "get_offset"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AnchoredOffsetbox",
        "get_offset"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "OffsetImage",
        "get_offset"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "Formatter",
        "get_offset"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "FixedFormatter",
        "get_offset"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "FuncFormatter",
        "get_offset"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "ScalarFormatter",
        "get_offset"
      ]
    ]
  ],
  "format_data_short": [
    [
      "lib/matplotlib/dates.py",
      [
        "ConciseDateFormatter",
        "format_data_short"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/UnitDblFormatter.py",
      [
        "UnitDblFormatter",
        "format_data_short"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "Formatter",
        "format_data_short"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "ScalarFormatter",
        "format_data_short"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "LogFormatter",
        "format_data_short"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "LogitFormatter",
        "format_data_short"
      ]
    ]
  ],
  "_set_locator": [
    [
      "lib/matplotlib/dates.py",
      [
        "AutoDateFormatter",
        "_set_locator"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "Formatter",
        "_set_locator"
      ]
    ]
  ],
  "_update_rrule": [
    [
      "lib/matplotlib/dates.py",
      [
        "rrulewrapper",
        "_update_rrule"
      ]
    ]
  ],
  "_attach_tzinfo": [
    [
      "lib/matplotlib/dates.py",
      [
        "rrulewrapper",
        "_attach_tzinfo"
      ]
    ]
  ],
  "normalize_arg": [
    [
      "lib/matplotlib/dates.py",
      [
        "rrulewrapper",
        "_aware_return_wrapper",
        "normalize_arg"
      ]
    ]
  ],
  "normalize_args": [
    [
      "lib/matplotlib/dates.py",
      [
        "rrulewrapper",
        "_aware_return_wrapper",
        "normalize_args"
      ]
    ]
  ],
  "_aware_return_wrapper": [
    [
      "lib/matplotlib/dates.py",
      [
        "rrulewrapper",
        "_aware_return_wrapper"
      ]
    ]
  ],
  "datalim_to_dt": [
    [
      "lib/matplotlib/dates.py",
      [
        "DateLocator",
        "datalim_to_dt"
      ]
    ]
  ],
  "viewlim_to_dt": [
    [
      "lib/matplotlib/dates.py",
      [
        "DateLocator",
        "viewlim_to_dt"
      ]
    ]
  ],
  "_get_unit": [
    [
      "lib/matplotlib/dates.py",
      [
        "DateLocator",
        "_get_unit"
      ]
    ],
    [
      "lib/matplotlib/dates.py",
      [
        "RRuleLocator",
        "_get_unit"
      ]
    ],
    [
      "lib/matplotlib/dates.py",
      [
        "AutoDateLocator",
        "_get_unit"
      ]
    ],
    [
      "lib/matplotlib/dates.py",
      [
        "MicrosecondLocator",
        "_get_unit"
      ]
    ]
  ],
  "_get_interval": [
    [
      "lib/matplotlib/dates.py",
      [
        "DateLocator",
        "_get_interval"
      ]
    ],
    [
      "lib/matplotlib/dates.py",
      [
        "RRuleLocator",
        "_get_interval"
      ]
    ],
    [
      "lib/matplotlib/dates.py",
      [
        "MicrosecondLocator",
        "_get_interval"
      ]
    ]
  ],
  "nonsingular": [
    [
      "lib/matplotlib/dates.py",
      [
        "DateLocator",
        "nonsingular"
      ]
    ],
    [
      "lib/matplotlib/dates.py",
      [
        "AutoDateLocator",
        "nonsingular"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "RadialLocator",
        "nonsingular"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "Locator",
        "nonsingular"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "LogLocator",
        "nonsingular"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "LogitLocator",
        "nonsingular"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "nonsingular"
      ]
    ]
  ],
  "_create_rrule": [
    [
      "lib/matplotlib/dates.py",
      [
        "RRuleLocator",
        "_create_rrule"
      ]
    ],
    [
      "lib/matplotlib/dates.py",
      [
        "YearLocator",
        "_create_rrule"
      ]
    ]
  ],
  "get_unit_generic": [
    [
      "lib/matplotlib/dates.py",
      [
        "RRuleLocator",
        "get_unit_generic"
      ]
    ]
  ],
  "get_locator": [
    [
      "lib/matplotlib/dates.py",
      [
        "AutoDateLocator",
        "get_locator"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "Divider",
        "get_locator"
      ]
    ]
  ],
  "set_axis": [
    [
      "lib/matplotlib/dates.py",
      [
        "MicrosecondLocator",
        "set_axis"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "ThetaLocator",
        "set_axis"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "RadialLocator",
        "set_axis"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "TickHelper",
        "set_axis"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "GridlinesCollection",
        "set_axis"
      ]
    ]
  ],
  "date_ticker_factory": [
    [
      "lib/matplotlib/dates.py",
      [
        "date_ticker_factory"
      ]
    ]
  ],
  "_get_converter": [
    [
      "lib/matplotlib/dates.py",
      [
        "_SwitchableDateConverter",
        "_get_converter"
      ]
    ]
  ],
  "_get_pdftexmap_entry": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Text",
        "_get_pdftexmap_entry"
      ]
    ]
  ],
  "font_path": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Text",
        "font_path"
      ]
    ]
  ],
  "font_size": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Text",
        "font_size"
      ]
    ]
  ],
  "font_effects": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Text",
        "font_effects"
      ]
    ]
  ],
  "glyph_name_or_index": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Text",
        "glyph_name_or_index"
      ]
    ]
  ],
  "_arg_raw": [
    [
      "lib/matplotlib/dviread.py",
      [
        "_arg_raw"
      ]
    ]
  ],
  "_arg": [
    [
      "lib/matplotlib/dviread.py",
      [
        "_arg"
      ]
    ],
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_arg"
      ]
    ]
  ],
  "_arg_slen": [
    [
      "lib/matplotlib/dviread.py",
      [
        "_arg_slen"
      ]
    ]
  ],
  "_arg_slen1": [
    [
      "lib/matplotlib/dviread.py",
      [
        "_arg_slen1"
      ]
    ]
  ],
  "_arg_ulen1": [
    [
      "lib/matplotlib/dviread.py",
      [
        "_arg_ulen1"
      ]
    ]
  ],
  "_arg_olen1": [
    [
      "lib/matplotlib/dviread.py",
      [
        "_arg_olen1"
      ]
    ]
  ],
  "decorate": [
    [
      "lib/matplotlib/dviread.py",
      [
        "_dispatch",
        "decorate"
      ]
    ]
  ],
  "_dispatch": [
    [
      "lib/matplotlib/dviread.py",
      [
        "_dispatch"
      ]
    ]
  ],
  "_output": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_output"
      ]
    ]
  ],
  "_set_char_immediate": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_set_char_immediate"
      ]
    ]
  ],
  "_set_char": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_set_char"
      ]
    ]
  ],
  "_set_rule": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_set_rule"
      ]
    ]
  ],
  "_put_char": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_put_char"
      ]
    ]
  ],
  "_put_char_real": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_put_char_real"
      ]
    ]
  ],
  "_put_rule": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_put_rule"
      ]
    ]
  ],
  "_put_rule_real": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_put_rule_real"
      ]
    ]
  ],
  "_nop": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_nop"
      ]
    ]
  ],
  "_bop": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_bop"
      ]
    ]
  ],
  "_eop": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_eop"
      ]
    ]
  ],
  "_push": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_push"
      ]
    ]
  ],
  "_pop": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_pop"
      ]
    ]
  ],
  "_right": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_right"
      ]
    ]
  ],
  "_right_w": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_right_w"
      ]
    ]
  ],
  "_right_x": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_right_x"
      ]
    ]
  ],
  "_down": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_down"
      ]
    ]
  ],
  "_down_y": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_down_y"
      ]
    ]
  ],
  "_down_z": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_down_z"
      ]
    ]
  ],
  "_fnt_num_immediate": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_fnt_num_immediate"
      ]
    ]
  ],
  "_fnt_num": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_fnt_num"
      ]
    ]
  ],
  "_xxx": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_xxx"
      ]
    ]
  ],
  "_fnt_def": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_fnt_def"
      ]
    ]
  ],
  "_fnt_def_real": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_fnt_def_real"
      ]
    ]
  ],
  "_pre": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_pre"
      ]
    ],
    [
      "lib/matplotlib/dviread.py",
      [
        "Vf",
        "_pre"
      ]
    ]
  ],
  "_post": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_post"
      ]
    ]
  ],
  "_post_post": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_post_post"
      ]
    ]
  ],
  "_malformed": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Dvi",
        "_malformed"
      ]
    ]
  ],
  "__ne__": [
    [
      "lib/matplotlib/dviread.py",
      [
        "DviFont",
        "__ne__"
      ]
    ]
  ],
  "_width_of": [
    [
      "lib/matplotlib/dviread.py",
      [
        "DviFont",
        "_width_of"
      ]
    ]
  ],
  "_height_depth_of": [
    [
      "lib/matplotlib/dviread.py",
      [
        "DviFont",
        "_height_depth_of"
      ]
    ]
  ],
  "_init_packet": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Vf",
        "_init_packet"
      ]
    ]
  ],
  "_finalize_packet": [
    [
      "lib/matplotlib/dviread.py",
      [
        "Vf",
        "_finalize_packet"
      ]
    ]
  ],
  "_mul2012": [
    [
      "lib/matplotlib/dviread.py",
      [
        "_mul2012"
      ]
    ]
  ],
  "_parse_and_cache_line": [
    [
      "lib/matplotlib/dviread.py",
      [
        "PsfontsMap",
        "_parse_and_cache_line"
      ]
    ]
  ],
  "_parse_enc": [
    [
      "lib/matplotlib/dviread.py",
      [
        "_parse_enc"
      ]
    ]
  ],
  "_new_proc": [
    [
      "lib/matplotlib/dviread.py",
      [
        "_LuatexKpsewhich",
        "_new_proc"
      ]
    ]
  ],
  "search": [
    [
      "lib/matplotlib/dviread.py",
      [
        "_LuatexKpsewhich",
        "search"
      ]
    ]
  ],
  "_find_tex_file": [
    [
      "lib/matplotlib/dviread.py",
      [
        "_find_tex_file"
      ]
    ]
  ],
  "find_tex_file": [
    [
      "lib/matplotlib/dviread.py",
      [
        "find_tex_file"
      ]
    ]
  ],
  "_fontfile": [
    [
      "lib/matplotlib/dviread.py",
      [
        "_fontfile"
      ]
    ]
  ],
  "_stale_figure_callback": [
    [
      "lib/matplotlib/figure.py",
      [
        "_stale_figure_callback"
      ]
    ]
  ],
  "as_list": [
    [
      "lib/matplotlib/figure.py",
      [
        "_AxesStack",
        "as_list"
      ]
    ]
  ],
  "current": [
    [
      "lib/matplotlib/figure.py",
      [
        "_AxesStack",
        "current"
      ]
    ]
  ],
  "_get_draw_artists": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "_get_draw_artists"
      ]
    ]
  ],
  "autofmt_xdate": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "autofmt_xdate"
      ]
    ]
  ],
  "_suplabels": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "_suplabels"
      ]
    ]
  ],
  "suptitle": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "suptitle"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "suptitle"
      ]
    ]
  ],
  "supxlabel": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "supxlabel"
      ]
    ]
  ],
  "supylabel": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "supylabel"
      ]
    ]
  ],
  "get_frameon": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "get_frameon"
      ]
    ]
  ],
  "set_frameon": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "set_frameon"
      ]
    ]
  ],
  "add_axes": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "add_axes"
      ]
    ]
  ],
  "add_subplot": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "add_subplot"
      ]
    ]
  ],
  "_add_axes_internal": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "_add_axes_internal"
      ]
    ]
  ],
  "subplots": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "subplots"
      ]
    ],
    [
      "lib/matplotlib/gridspec.py",
      [
        "GridSpecBase",
        "subplots"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "subplots"
      ]
    ]
  ],
  "_reset_locators_and_formatters": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "delaxes",
        "_reset_locators_and_formatters"
      ]
    ]
  ],
  "_break_share_link": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "delaxes",
        "_break_share_link"
      ]
    ]
  ],
  "delaxes": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "delaxes"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "delaxes"
      ]
    ]
  ],
  "clf": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "clf"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "clf"
      ]
    ]
  ],
  "colorbar": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "colorbar"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "colorbar"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_grid.py",
      [
        "CbarAxesBase",
        "colorbar"
      ]
    ]
  ],
  "subplots_adjust": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "subplots_adjust"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "subplots_adjust"
      ]
    ]
  ],
  "align_xlabels": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "align_xlabels"
      ]
    ]
  ],
  "align_ylabels": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "align_ylabels"
      ]
    ]
  ],
  "align_labels": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "align_labels"
      ]
    ]
  ],
  "add_gridspec": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "add_gridspec"
      ]
    ]
  ],
  "subfigures": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "subfigures"
      ]
    ]
  ],
  "add_subfigure": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "add_subfigure"
      ]
    ]
  ],
  "sca": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "sca"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "sca"
      ]
    ]
  ],
  "gca": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "gca"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "gca"
      ]
    ]
  ],
  "_process_projection_requirements": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "_process_projection_requirements"
      ]
    ]
  ],
  "_normalize_grid_string": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "_normalize_grid_string"
      ]
    ]
  ],
  "_make_array": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "subplot_mosaic",
        "_make_array"
      ]
    ]
  ],
  "_identify_keys_and_nested": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "subplot_mosaic",
        "_identify_keys_and_nested"
      ]
    ]
  ],
  "_do_layout": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "subplot_mosaic",
        "_do_layout"
      ]
    ]
  ],
  "subplot_mosaic": [
    [
      "lib/matplotlib/figure.py",
      [
        "FigureBase",
        "subplot_mosaic"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "subplot_mosaic"
      ]
    ]
  ],
  "dpi": [
    [
      "lib/matplotlib/figure.py",
      [
        "SubFigure",
        "dpi"
      ]
    ]
  ],
  "dpi_1": [
    [
      "lib/matplotlib/figure.py",
      [
        "SubFigure",
        "dpi_1"
      ]
    ]
  ],
  "get_dpi": [
    [
      "lib/matplotlib/figure.py",
      [
        "SubFigure",
        "get_dpi"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "get_dpi"
      ]
    ]
  ],
  "set_dpi": [
    [
      "lib/matplotlib/figure.py",
      [
        "SubFigure",
        "set_dpi"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "set_dpi"
      ]
    ]
  ],
  "_redo_transform_rel_fig": [
    [
      "lib/matplotlib/figure.py",
      [
        "SubFigure",
        "_redo_transform_rel_fig"
      ]
    ]
  ],
  "get_constrained_layout": [
    [
      "lib/matplotlib/figure.py",
      [
        "SubFigure",
        "get_constrained_layout"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "get_constrained_layout"
      ]
    ]
  ],
  "get_constrained_layout_pads": [
    [
      "lib/matplotlib/figure.py",
      [
        "SubFigure",
        "get_constrained_layout_pads"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "get_constrained_layout_pads"
      ]
    ]
  ],
  "get_layout_engine": [
    [
      "lib/matplotlib/figure.py",
      [
        "SubFigure",
        "get_layout_engine"
      ]
    ],
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "get_layout_engine"
      ]
    ]
  ],
  "_check_layout_engines_compat": [
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "_check_layout_engines_compat"
      ]
    ]
  ],
  "set_layout_engine": [
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "set_layout_engine"
      ]
    ]
  ],
  "_get_dpi": [
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "_get_dpi"
      ]
    ]
  ],
  "_set_dpi": [
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "_set_dpi"
      ]
    ]
  ],
  "get_tight_layout": [
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "get_tight_layout"
      ]
    ]
  ],
  "set_tight_layout": [
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "set_tight_layout"
      ]
    ]
  ],
  "set_constrained_layout": [
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "set_constrained_layout"
      ]
    ]
  ],
  "set_constrained_layout_pads": [
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "set_constrained_layout_pads"
      ]
    ]
  ],
  "set_canvas": [
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "set_canvas"
      ]
    ]
  ],
  "figimage": [
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "figimage"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "figimage"
      ]
    ]
  ],
  "set_size_inches": [
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "set_size_inches"
      ]
    ]
  ],
  "get_size_inches": [
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "get_size_inches"
      ]
    ]
  ],
  "get_figwidth": [
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "get_figwidth"
      ]
    ]
  ],
  "get_figheight": [
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "get_figheight"
      ]
    ]
  ],
  "set_figwidth": [
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "set_figwidth"
      ]
    ]
  ],
  "set_figheight": [
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "set_figheight"
      ]
    ]
  ],
  "draw_without_rendering": [
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "draw_without_rendering"
      ]
    ]
  ],
  "add_axobserver": [
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "add_axobserver"
      ]
    ]
  ],
  "ginput": [
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "ginput"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "ginput"
      ]
    ]
  ],
  "waitforbuttonpress": [
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "waitforbuttonpress"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "waitforbuttonpress"
      ]
    ]
  ],
  "execute_constrained_layout": [
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "execute_constrained_layout"
      ]
    ]
  ],
  "tight_layout": [
    [
      "lib/matplotlib/figure.py",
      [
        "Figure",
        "tight_layout"
      ]
    ],
    [
      "lib/matplotlib/gridspec.py",
      [
        "GridSpec",
        "tight_layout"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "tight_layout"
      ]
    ]
  ],
  "figaspect": [
    [
      "lib/matplotlib/figure.py",
      [
        "figaspect"
      ]
    ]
  ],
  "get_fontext_synonyms": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "get_fontext_synonyms"
      ]
    ]
  ],
  "list_fonts": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "list_fonts"
      ]
    ]
  ],
  "win32FontDirectory": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "win32FontDirectory"
      ]
    ]
  ],
  "_win32RegistryFonts": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "_win32RegistryFonts"
      ]
    ]
  ],
  "win32InstalledFonts": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "win32InstalledFonts"
      ]
    ]
  ],
  "_get_win32_installed_fonts": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "_get_win32_installed_fonts"
      ]
    ]
  ],
  "_get_fontconfig_fonts": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "_get_fontconfig_fonts"
      ]
    ]
  ],
  "get_fontconfig_fonts": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "get_fontconfig_fonts"
      ]
    ]
  ],
  "findSystemFonts": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "findSystemFonts"
      ]
    ]
  ],
  "_fontentry_helper_repr_png": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "_fontentry_helper_repr_png"
      ]
    ]
  ],
  "_fontentry_helper_repr_html": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "_fontentry_helper_repr_html"
      ]
    ]
  ],
  "ttfFontProperty": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "ttfFontProperty"
      ]
    ]
  ],
  "afmFontProperty": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "afmFontProperty"
      ]
    ]
  ],
  "_from_any": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontProperties",
        "_from_any"
      ]
    ]
  ],
  "get_family": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontProperties",
        "get_family"
      ]
    ]
  ],
  "get_name": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontProperties",
        "get_name"
      ]
    ]
  ],
  "get_style": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontProperties",
        "get_style"
      ]
    ]
  ],
  "get_variant": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontProperties",
        "get_variant"
      ]
    ]
  ],
  "get_stretch": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontProperties",
        "get_stretch"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "get_stretch"
      ]
    ]
  ],
  "get_file": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontProperties",
        "get_file"
      ]
    ]
  ],
  "get_fontconfig_pattern": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontProperties",
        "get_fontconfig_pattern"
      ]
    ]
  ],
  "set_family": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontProperties",
        "set_family"
      ]
    ]
  ],
  "set_style": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontProperties",
        "set_style"
      ]
    ]
  ],
  "set_variant": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontProperties",
        "set_variant"
      ]
    ]
  ],
  "set_weight": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontProperties",
        "set_weight"
      ]
    ]
  ],
  "set_stretch": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontProperties",
        "set_stretch"
      ]
    ]
  ],
  "set_file": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontProperties",
        "set_file"
      ]
    ]
  ],
  "set_fontconfig_pattern": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontProperties",
        "set_fontconfig_pattern"
      ]
    ]
  ],
  "get_math_fontfamily": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontProperties",
        "get_math_fontfamily"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "get_math_fontfamily"
      ]
    ]
  ],
  "set_math_fontfamily": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontProperties",
        "set_math_fontfamily"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "set_math_fontfamily"
      ]
    ]
  ],
  "default": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "_JSONEncoder",
        "default"
      ]
    ]
  ],
  "_json_decode": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "_json_decode"
      ]
    ]
  ],
  "json_dump": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "json_dump"
      ]
    ]
  ],
  "json_load": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "json_load"
      ]
    ]
  ],
  "addfont": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontManager",
        "addfont"
      ]
    ]
  ],
  "defaultFont": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontManager",
        "defaultFont"
      ]
    ]
  ],
  "get_default_weight": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontManager",
        "get_default_weight"
      ]
    ]
  ],
  "get_default_size": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontManager",
        "get_default_size"
      ]
    ]
  ],
  "set_default_weight": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontManager",
        "set_default_weight"
      ]
    ]
  ],
  "_expand_aliases": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontManager",
        "_expand_aliases"
      ]
    ]
  ],
  "score_family": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontManager",
        "score_family"
      ]
    ]
  ],
  "score_style": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontManager",
        "score_style"
      ]
    ]
  ],
  "score_variant": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontManager",
        "score_variant"
      ]
    ]
  ],
  "score_stretch": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontManager",
        "score_stretch"
      ]
    ]
  ],
  "score_weight": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontManager",
        "score_weight"
      ]
    ]
  ],
  "score_size": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontManager",
        "score_size"
      ]
    ]
  ],
  "findfont": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontManager",
        "findfont"
      ]
    ]
  ],
  "get_font_names": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontManager",
        "get_font_names"
      ]
    ]
  ],
  "_find_fonts_by_props": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontManager",
        "_find_fonts_by_props"
      ]
    ]
  ],
  "_findfont_cached": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "FontManager",
        "_findfont_cached"
      ]
    ]
  ],
  "is_opentype_cff_font": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "is_opentype_cff_font"
      ]
    ]
  ],
  "_cached_realpath": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "_cached_realpath"
      ]
    ]
  ],
  "_load_fontmanager": [
    [
      "lib/matplotlib/font_manager.py",
      [
        "_load_fontmanager"
      ]
    ]
  ],
  "get_geometry": [
    [
      "lib/matplotlib/gridspec.py",
      [
        "GridSpecBase",
        "get_geometry"
      ]
    ],
    [
      "lib/matplotlib/gridspec.py",
      [
        "SubplotSpec",
        "get_geometry"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_grid.py",
      [
        "Grid",
        "get_geometry"
      ]
    ]
  ],
  "get_subplot_params": [
    [
      "lib/matplotlib/gridspec.py",
      [
        "GridSpecBase",
        "get_subplot_params"
      ]
    ],
    [
      "lib/matplotlib/gridspec.py",
      [
        "GridSpec",
        "get_subplot_params"
      ]
    ],
    [
      "lib/matplotlib/gridspec.py",
      [
        "GridSpecFromSubplotSpec",
        "get_subplot_params"
      ]
    ]
  ],
  "new_subplotspec": [
    [
      "lib/matplotlib/gridspec.py",
      [
        "GridSpecBase",
        "new_subplotspec"
      ]
    ]
  ],
  "set_width_ratios": [
    [
      "lib/matplotlib/gridspec.py",
      [
        "GridSpecBase",
        "set_width_ratios"
      ]
    ]
  ],
  "get_width_ratios": [
    [
      "lib/matplotlib/gridspec.py",
      [
        "GridSpecBase",
        "get_width_ratios"
      ]
    ]
  ],
  "set_height_ratios": [
    [
      "lib/matplotlib/gridspec.py",
      [
        "GridSpecBase",
        "set_height_ratios"
      ]
    ]
  ],
  "get_height_ratios": [
    [
      "lib/matplotlib/gridspec.py",
      [
        "GridSpecBase",
        "get_height_ratios"
      ]
    ]
  ],
  "get_grid_positions": [
    [
      "lib/matplotlib/gridspec.py",
      [
        "GridSpecBase",
        "get_grid_positions"
      ]
    ]
  ],
  "_check_gridspec_exists": [
    [
      "lib/matplotlib/gridspec.py",
      [
        "GridSpecBase",
        "_check_gridspec_exists"
      ]
    ]
  ],
  "_normalize": [
    [
      "lib/matplotlib/gridspec.py",
      [
        "GridSpecBase",
        "__getitem__",
        "_normalize"
      ]
    ]
  ],
  "locally_modified_subplot_params": [
    [
      "lib/matplotlib/gridspec.py",
      [
        "GridSpec",
        "locally_modified_subplot_params"
      ]
    ]
  ],
  "get_topmost_subplotspec": [
    [
      "lib/matplotlib/gridspec.py",
      [
        "GridSpecFromSubplotSpec",
        "get_topmost_subplotspec"
      ]
    ],
    [
      "lib/matplotlib/gridspec.py",
      [
        "SubplotSpec",
        "get_topmost_subplotspec"
      ]
    ]
  ],
  "_from_subplot_args": [
    [
      "lib/matplotlib/gridspec.py",
      [
        "SubplotSpec",
        "_from_subplot_args"
      ]
    ]
  ],
  "num2": [
    [
      "lib/matplotlib/gridspec.py",
      [
        "SubplotSpec",
        "num2"
      ]
    ]
  ],
  "num2_3": [
    [
      "lib/matplotlib/gridspec.py",
      [
        "SubplotSpec",
        "num2_3"
      ]
    ]
  ],
  "rowspan": [
    [
      "lib/matplotlib/gridspec.py",
      [
        "SubplotSpec",
        "rowspan"
      ]
    ]
  ],
  "colspan": [
    [
      "lib/matplotlib/gridspec.py",
      [
        "SubplotSpec",
        "colspan"
      ]
    ]
  ],
  "is_first_row": [
    [
      "lib/matplotlib/gridspec.py",
      [
        "SubplotSpec",
        "is_first_row"
      ]
    ]
  ],
  "is_last_row": [
    [
      "lib/matplotlib/gridspec.py",
      [
        "SubplotSpec",
        "is_last_row"
      ]
    ]
  ],
  "is_first_col": [
    [
      "lib/matplotlib/gridspec.py",
      [
        "SubplotSpec",
        "is_first_col"
      ]
    ]
  ],
  "is_last_col": [
    [
      "lib/matplotlib/gridspec.py",
      [
        "SubplotSpec",
        "is_last_col"
      ]
    ]
  ],
  "subgridspec": [
    [
      "lib/matplotlib/gridspec.py",
      [
        "SubplotSpec",
        "subgridspec"
      ]
    ]
  ],
  "set_vertices_and_codes": [
    [
      "lib/matplotlib/hatch.py",
      [
        "HorizontalHatch",
        "set_vertices_and_codes"
      ]
    ],
    [
      "lib/matplotlib/hatch.py",
      [
        "VerticalHatch",
        "set_vertices_and_codes"
      ]
    ],
    [
      "lib/matplotlib/hatch.py",
      [
        "NorthEastHatch",
        "set_vertices_and_codes"
      ]
    ],
    [
      "lib/matplotlib/hatch.py",
      [
        "SouthEastHatch",
        "set_vertices_and_codes"
      ]
    ],
    [
      "lib/matplotlib/hatch.py",
      [
        "Shapes",
        "set_vertices_and_codes"
      ]
    ]
  ],
  "_validate_hatch_pattern": [
    [
      "lib/matplotlib/hatch.py",
      [
        "_validate_hatch_pattern"
      ]
    ]
  ],
  "get_path": [
    [
      "lib/matplotlib/hatch.py",
      [
        "get_path"
      ]
    ],
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "get_path"
      ]
    ],
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "get_path"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "get_path"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Shadow",
        "get_path"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Rectangle",
        "get_path"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "RegularPolygon",
        "get_path"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "PathPatch",
        "get_path"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Polygon",
        "get_path"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Wedge",
        "get_path"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Arrow",
        "get_path"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Ellipse",
        "get_path"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Annulus",
        "get_path"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "FancyBboxPatch",
        "get_path"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "FancyArrowPatch",
        "get_path"
      ]
    ],
    [
      "lib/matplotlib/spines.py",
      [
        "Spine",
        "get_path"
      ]
    ],
    [
      "lib/matplotlib/table.py",
      [
        "Cell",
        "get_path"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/inset_locator.py",
      [
        "BboxPatch",
        "get_path"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/inset_locator.py",
      [
        "BboxConnector",
        "get_path"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/inset_locator.py",
      [
        "BboxConnectorPatch",
        "get_path"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Patch3D",
        "get_path"
      ]
    ]
  ],
  "composite_images": [
    [
      "lib/matplotlib/image.py",
      [
        "composite_images"
      ]
    ]
  ],
  "flush_images": [
    [
      "lib/matplotlib/image.py",
      [
        "_draw_list_compositing_images",
        "if_not_composite_or_not_h",
        "else_",
        "flush_images"
      ]
    ]
  ],
  "_draw_list_compositing_images": [
    [
      "lib/matplotlib/image.py",
      [
        "_draw_list_compositing_images"
      ]
    ]
  ],
  "_resample": [
    [
      "lib/matplotlib/image.py",
      [
        "_resample"
      ]
    ]
  ],
  "_rgb_to_rgba": [
    [
      "lib/matplotlib/image.py",
      [
        "_rgb_to_rgba"
      ]
    ]
  ],
  "_get_scalar_alpha": [
    [
      "lib/matplotlib/image.py",
      [
        "_ImageBase",
        "_get_scalar_alpha"
      ]
    ]
  ],
  "_make_image": [
    [
      "lib/matplotlib/image.py",
      [
        "_ImageBase",
        "_make_image"
      ]
    ]
  ],
  "make_image": [
    [
      "lib/matplotlib/image.py",
      [
        "_ImageBase",
        "make_image"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "AxesImage",
        "make_image"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "NonUniformImage",
        "make_image"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "PcolorImage",
        "make_image"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "FigureImage",
        "make_image"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "BboxImage",
        "make_image"
      ]
    ]
  ],
  "_check_unsampled_image": [
    [
      "lib/matplotlib/image.py",
      [
        "_ImageBase",
        "_check_unsampled_image"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "AxesImage",
        "_check_unsampled_image"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "NonUniformImage",
        "_check_unsampled_image"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "PcolorImage",
        "_check_unsampled_image"
      ]
    ]
  ],
  "write_png": [
    [
      "lib/matplotlib/image.py",
      [
        "_ImageBase",
        "write_png"
      ]
    ]
  ],
  "get_interpolation": [
    [
      "lib/matplotlib/image.py",
      [
        "_ImageBase",
        "get_interpolation"
      ]
    ]
  ],
  "set_interpolation": [
    [
      "lib/matplotlib/image.py",
      [
        "_ImageBase",
        "set_interpolation"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "NonUniformImage",
        "set_interpolation"
      ]
    ]
  ],
  "set_interpolation_stage": [
    [
      "lib/matplotlib/image.py",
      [
        "_ImageBase",
        "set_interpolation_stage"
      ]
    ]
  ],
  "can_composite": [
    [
      "lib/matplotlib/image.py",
      [
        "_ImageBase",
        "can_composite"
      ]
    ]
  ],
  "set_resample": [
    [
      "lib/matplotlib/image.py",
      [
        "_ImageBase",
        "set_resample"
      ]
    ]
  ],
  "get_resample": [
    [
      "lib/matplotlib/image.py",
      [
        "_ImageBase",
        "get_resample"
      ]
    ]
  ],
  "set_filternorm": [
    [
      "lib/matplotlib/image.py",
      [
        "_ImageBase",
        "set_filternorm"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "NonUniformImage",
        "set_filternorm"
      ]
    ]
  ],
  "get_filternorm": [
    [
      "lib/matplotlib/image.py",
      [
        "_ImageBase",
        "get_filternorm"
      ]
    ]
  ],
  "set_filterrad": [
    [
      "lib/matplotlib/image.py",
      [
        "_ImageBase",
        "set_filterrad"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "NonUniformImage",
        "set_filterrad"
      ]
    ]
  ],
  "get_filterrad": [
    [
      "lib/matplotlib/image.py",
      [
        "_ImageBase",
        "get_filterrad"
      ]
    ]
  ],
  "get_extent": [
    [
      "lib/matplotlib/image.py",
      [
        "AxesImage",
        "get_extent"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "NonUniformImage",
        "get_extent"
      ]
    ],
    [
      "lib/matplotlib/image.py",
      [
        "FigureImage",
        "get_extent"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "OffsetBox",
        "get_extent"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "DrawingArea",
        "get_extent"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "TextArea",
        "get_extent"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AuxTransformBox",
        "get_extent"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AnchoredOffsetbox",
        "get_extent"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "OffsetImage",
        "get_extent"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/inset_locator.py",
      [
        "AnchoredSizeLocator",
        "get_extent"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/inset_locator.py",
      [
        "AnchoredZoomLocator",
        "get_extent"
      ]
    ]
  ],
  "imread": [
    [
      "lib/matplotlib/image.py",
      [
        "imread"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "imread"
      ]
    ]
  ],
  "imsave": [
    [
      "lib/matplotlib/image.py",
      [
        "imsave"
      ]
    ],
    [
      "lib/matplotlib/pyplot.py",
      [
        "imsave"
      ]
    ]
  ],
  "pil_to_array": [
    [
      "lib/matplotlib/image.py",
      [
        "pil_to_array"
      ]
    ]
  ],
  "_pil_png_to_float_array": [
    [
      "lib/matplotlib/image.py",
      [
        "_pil_png_to_float_array"
      ]
    ]
  ],
  "thumbnail": [
    [
      "lib/matplotlib/image.py",
      [
        "thumbnail"
      ]
    ]
  ],
  "colorbar_gridspec": [
    [
      "lib/matplotlib/layout_engine.py",
      [
        "LayoutEngine",
        "colorbar_gridspec"
      ]
    ]
  ],
  "adjust_compatible": [
    [
      "lib/matplotlib/layout_engine.py",
      [
        "LayoutEngine",
        "adjust_compatible"
      ]
    ]
  ],
  "execute": [
    [
      "lib/matplotlib/layout_engine.py",
      [
        "LayoutEngine",
        "execute"
      ]
    ],
    [
      "lib/matplotlib/layout_engine.py",
      [
        "PlaceHolderLayoutEngine",
        "execute"
      ]
    ],
    [
      "lib/matplotlib/layout_engine.py",
      [
        "TightLayoutEngine",
        "execute"
      ]
    ],
    [
      "lib/matplotlib/layout_engine.py",
      [
        "ConstrainedLayoutEngine",
        "execute"
      ]
    ]
  ],
  "finalize_offset": [
    [
      "lib/matplotlib/legend.py",
      [
        "DraggableLegend",
        "finalize_offset"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "DraggableBase",
        "finalize_offset"
      ]
    ]
  ],
  "_update_loc": [
    [
      "lib/matplotlib/legend.py",
      [
        "DraggableLegend",
        "_update_loc"
      ]
    ]
  ],
  "_update_bbox_to_anchor": [
    [
      "lib/matplotlib/legend.py",
      [
        "DraggableLegend",
        "_update_bbox_to_anchor"
      ]
    ]
  ],
  "val_or_rc": [
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "__init__",
        "val_or_rc"
      ]
    ]
  ],
  "_set_loc": [
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "_set_loc"
      ]
    ]
  ],
  "set_ncols": [
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "set_ncols"
      ]
    ]
  ],
  "_get_loc": [
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "_get_loc"
      ]
    ]
  ],
  "_findoffset": [
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "_findoffset"
      ]
    ]
  ],
  "get_default_handler_map": [
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "get_default_handler_map"
      ]
    ]
  ],
  "set_default_handler_map": [
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "set_default_handler_map"
      ]
    ]
  ],
  "update_default_handler_map": [
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "update_default_handler_map"
      ]
    ]
  ],
  "get_legend_handler_map": [
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "get_legend_handler_map"
      ]
    ]
  ],
  "get_legend_handler": [
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "get_legend_handler"
      ]
    ]
  ],
  "_init_legend_box": [
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "_init_legend_box"
      ]
    ]
  ],
  "_auto_legend_data": [
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "_auto_legend_data"
      ]
    ]
  ],
  "get_frame": [
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "get_frame"
      ]
    ]
  ],
  "get_patches": [
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "get_patches"
      ]
    ]
  ],
  "get_texts": [
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "get_texts"
      ]
    ]
  ],
  "get_alignment": [
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "get_alignment"
      ]
    ]
  ],
  "get_bbox_to_anchor": [
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "get_bbox_to_anchor"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AnchoredOffsetbox",
        "get_bbox_to_anchor"
      ]
    ]
  ],
  "set_bbox_to_anchor": [
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "set_bbox_to_anchor"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AnchoredOffsetbox",
        "set_bbox_to_anchor"
      ]
    ]
  ],
  "_get_anchored_bbox": [
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "_get_anchored_bbox"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "_get_anchored_bbox"
      ]
    ]
  ],
  "_find_best_position": [
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "_find_best_position"
      ]
    ]
  ],
  "set_draggable": [
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "set_draggable"
      ]
    ]
  ],
  "get_draggable": [
    [
      "lib/matplotlib/legend.py",
      [
        "Legend",
        "get_draggable"
      ]
    ]
  ],
  "_get_legend_handles": [
    [
      "lib/matplotlib/legend.py",
      [
        "_get_legend_handles"
      ]
    ]
  ],
  "_get_legend_handles_labels": [
    [
      "lib/matplotlib/legend.py",
      [
        "_get_legend_handles_labels"
      ]
    ]
  ],
  "_parse_legend_args": [
    [
      "lib/matplotlib/legend.py",
      [
        "_parse_legend_args"
      ]
    ]
  ],
  "update_from_first_child": [
    [
      "lib/matplotlib/legend_handler.py",
      [
        "update_from_first_child"
      ]
    ]
  ],
  "_update_prop": [
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerBase",
        "_update_prop"
      ]
    ],
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerPolyCollection",
        "_update_prop"
      ]
    ]
  ],
  "_default_update_prop": [
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerBase",
        "_default_update_prop"
      ]
    ],
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerLineCollection",
        "_default_update_prop"
      ]
    ]
  ],
  "update_prop": [
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerBase",
        "update_prop"
      ]
    ],
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerRegularPolyCollection",
        "update_prop"
      ]
    ]
  ],
  "adjust_drawing_area": [
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerBase",
        "adjust_drawing_area"
      ]
    ]
  ],
  "legend_artist": [
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerBase",
        "legend_artist"
      ]
    ],
    [
      "tutorials/intermediate/legend_guide.py",
      [
        "AnyObjectHandler",
        "legend_artist"
      ]
    ]
  ],
  "get_numpoints": [
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerNpoints",
        "get_numpoints"
      ]
    ],
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerLineCollection",
        "get_numpoints"
      ]
    ],
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerRegularPolyCollection",
        "get_numpoints"
      ]
    ]
  ],
  "get_xdata": [
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerNpoints",
        "get_xdata"
      ]
    ],
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "get_xdata"
      ]
    ]
  ],
  "get_ydata": [
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerNpointsYoffsets",
        "get_ydata"
      ]
    ],
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerStem",
        "get_ydata"
      ]
    ],
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "get_ydata"
      ]
    ]
  ],
  "_create_patch": [
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerPatch",
        "_create_patch"
      ]
    ],
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerStepPatch",
        "_create_patch"
      ]
    ]
  ],
  "_create_line": [
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerStepPatch",
        "_create_line"
      ]
    ]
  ],
  "create_collection": [
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerRegularPolyCollection",
        "create_collection"
      ]
    ],
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerPathCollection",
        "create_collection"
      ]
    ],
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerCircleCollection",
        "create_collection"
      ]
    ]
  ],
  "get_err_size": [
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerErrorbar",
        "get_err_size"
      ]
    ]
  ],
  "_copy_collection_props": [
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerStem",
        "_copy_collection_props"
      ]
    ]
  ],
  "first_color": [
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerPolyCollection",
        "_update_prop",
        "first_color"
      ]
    ]
  ],
  "get_first": [
    [
      "lib/matplotlib/legend_handler.py",
      [
        "HandlerPolyCollection",
        "_update_prop",
        "get_first"
      ]
    ]
  ],
  "_get_dash_pattern": [
    [
      "lib/matplotlib/lines.py",
      [
        "_get_dash_pattern"
      ]
    ]
  ],
  "_scale_dashes": [
    [
      "lib/matplotlib/lines.py",
      [
        "_scale_dashes"
      ]
    ]
  ],
  "segment_hits": [
    [
      "lib/matplotlib/lines.py",
      [
        "segment_hits"
      ]
    ]
  ],
  "_slice_or_none": [
    [
      "lib/matplotlib/lines.py",
      [
        "_mark_every_path",
        "_slice_or_none"
      ]
    ]
  ],
  "_mark_every_path": [
    [
      "lib/matplotlib/lines.py",
      [
        "_mark_every_path"
      ]
    ]
  ],
  "get_fillstyle": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "get_fillstyle"
      ]
    ],
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "get_fillstyle"
      ]
    ]
  ],
  "set_fillstyle": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "set_fillstyle"
      ]
    ]
  ],
  "set_markevery": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "set_markevery"
      ]
    ]
  ],
  "get_markevery": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "get_markevery"
      ]
    ]
  ],
  "get_bbox": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "get_bbox"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Rectangle",
        "get_bbox"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "FancyBboxPatch",
        "get_bbox"
      ]
    ]
  ],
  "recache_always": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "recache_always"
      ]
    ]
  ],
  "recache": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "recache"
      ]
    ]
  ],
  "_transform_path": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "_transform_path"
      ]
    ]
  ],
  "_get_transformed_path": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "_get_transformed_path"
      ]
    ]
  ],
  "_is_sorted": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "_is_sorted"
      ]
    ]
  ],
  "get_drawstyle": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "get_drawstyle"
      ]
    ]
  ],
  "get_gapcolor": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "get_gapcolor"
      ]
    ]
  ],
  "get_marker": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "get_marker"
      ]
    ],
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "get_marker"
      ]
    ]
  ],
  "get_markeredgecolor": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "get_markeredgecolor"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "Ticks",
        "get_markeredgecolor"
      ]
    ]
  ],
  "get_markeredgewidth": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "get_markeredgewidth"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "Ticks",
        "get_markeredgewidth"
      ]
    ]
  ],
  "_get_markerfacecolor": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "_get_markerfacecolor"
      ]
    ]
  ],
  "get_markerfacecolor": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "get_markerfacecolor"
      ]
    ]
  ],
  "get_markerfacecoloralt": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "get_markerfacecoloralt"
      ]
    ]
  ],
  "get_markersize": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "get_markersize"
      ]
    ]
  ],
  "get_data": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "get_data"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "OffsetImage",
        "get_data"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "StepPatch",
        "get_data"
      ]
    ]
  ],
  "get_xydata": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "get_xydata"
      ]
    ]
  ],
  "set_drawstyle": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "set_drawstyle"
      ]
    ]
  ],
  "set_gapcolor": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "set_gapcolor"
      ]
    ]
  ],
  "set_marker": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "set_marker"
      ]
    ]
  ],
  "_set_markercolor": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "_set_markercolor"
      ]
    ]
  ],
  "set_markeredgecolor": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "set_markeredgecolor"
      ]
    ]
  ],
  "set_markerfacecolor": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "set_markerfacecolor"
      ]
    ]
  ],
  "set_markerfacecoloralt": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "set_markerfacecoloralt"
      ]
    ]
  ],
  "set_markeredgewidth": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "set_markeredgewidth"
      ]
    ]
  ],
  "set_markersize": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "set_markersize"
      ]
    ]
  ],
  "set_xdata": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "set_xdata"
      ]
    ]
  ],
  "set_ydata": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "set_ydata"
      ]
    ]
  ],
  "set_dash_joinstyle": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "set_dash_joinstyle"
      ]
    ]
  ],
  "set_solid_joinstyle": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "set_solid_joinstyle"
      ]
    ]
  ],
  "get_dash_joinstyle": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "get_dash_joinstyle"
      ]
    ]
  ],
  "get_solid_joinstyle": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "get_solid_joinstyle"
      ]
    ]
  ],
  "set_dash_capstyle": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "set_dash_capstyle"
      ]
    ]
  ],
  "set_solid_capstyle": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "set_solid_capstyle"
      ]
    ]
  ],
  "get_dash_capstyle": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "get_dash_capstyle"
      ]
    ]
  ],
  "get_solid_capstyle": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "get_solid_capstyle"
      ]
    ]
  ],
  "is_dashed": [
    [
      "lib/matplotlib/lines.py",
      [
        "Line2D",
        "is_dashed"
      ]
    ]
  ],
  "process_selected": [
    [
      "lib/matplotlib/lines.py",
      [
        "VertexSelector",
        "process_selected"
      ]
    ]
  ],
  "_recache": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_recache"
      ]
    ],
    [
      "lib/matplotlib/tests/test_marker.py",
      [
        "UnsnappedMarkerStyle",
        "_recache"
      ]
    ]
  ],
  "__bool__": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "__bool__"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/Duration.py",
      [
        "Duration",
        "__bool__"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/UnitDbl.py",
      [
        "UnitDbl",
        "__bool__"
      ]
    ]
  ],
  "is_filled": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "is_filled"
      ]
    ]
  ],
  "_set_fillstyle": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_fillstyle"
      ]
    ]
  ],
  "_set_marker": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_marker"
      ]
    ]
  ],
  "get_alt_path": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "get_alt_path"
      ]
    ]
  ],
  "get_alt_transform": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "get_alt_transform"
      ]
    ]
  ],
  "get_snap_threshold": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "get_snap_threshold"
      ]
    ]
  ],
  "get_user_transform": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "get_user_transform"
      ]
    ]
  ],
  "transformed": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "transformed"
      ]
    ],
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "transformed"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "transformed"
      ]
    ]
  ],
  "rotated": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "rotated"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "rotated"
      ]
    ]
  ],
  "_set_nothing": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_nothing"
      ]
    ]
  ],
  "_set_custom_marker": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_custom_marker"
      ]
    ]
  ],
  "_set_path_marker": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_path_marker"
      ]
    ]
  ],
  "_set_vertices": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_vertices"
      ]
    ]
  ],
  "_set_tuple_marker": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_tuple_marker"
      ]
    ]
  ],
  "_set_mathtext_path": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_mathtext_path"
      ]
    ]
  ],
  "_half_fill": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_half_fill"
      ]
    ]
  ],
  "_set_circle": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_circle"
      ]
    ]
  ],
  "_set_point": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_point"
      ]
    ]
  ],
  "_set_pixel": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_pixel"
      ]
    ]
  ],
  "_set_triangle": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_triangle"
      ]
    ]
  ],
  "_set_triangle_up": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_triangle_up"
      ]
    ]
  ],
  "_set_triangle_down": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_triangle_down"
      ]
    ]
  ],
  "_set_triangle_left": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_triangle_left"
      ]
    ]
  ],
  "_set_triangle_right": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_triangle_right"
      ]
    ]
  ],
  "_set_square": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_square"
      ]
    ]
  ],
  "_set_diamond": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_diamond"
      ]
    ]
  ],
  "_set_thin_diamond": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_thin_diamond"
      ]
    ]
  ],
  "_set_pentagon": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_pentagon"
      ]
    ]
  ],
  "_set_star": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_star"
      ]
    ]
  ],
  "_set_hexagon1": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_hexagon1"
      ]
    ]
  ],
  "_set_hexagon2": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_hexagon2"
      ]
    ]
  ],
  "_set_octagon": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_octagon"
      ]
    ]
  ],
  "_set_vline": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_vline"
      ]
    ]
  ],
  "_set_hline": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_hline"
      ]
    ]
  ],
  "_set_tickleft": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_tickleft"
      ]
    ]
  ],
  "_set_tickright": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_tickright"
      ]
    ]
  ],
  "_set_tickup": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_tickup"
      ]
    ]
  ],
  "_set_tickdown": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_tickdown"
      ]
    ]
  ],
  "_set_tri_down": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_tri_down"
      ]
    ]
  ],
  "_set_tri_up": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_tri_up"
      ]
    ]
  ],
  "_set_tri_left": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_tri_left"
      ]
    ]
  ],
  "_set_tri_right": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_tri_right"
      ]
    ]
  ],
  "_set_caretdown": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_caretdown"
      ]
    ]
  ],
  "_set_caretup": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_caretup"
      ]
    ]
  ],
  "_set_caretleft": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_caretleft"
      ]
    ]
  ],
  "_set_caretright": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_caretright"
      ]
    ]
  ],
  "_set_caretdownbase": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_caretdownbase"
      ]
    ]
  ],
  "_set_caretupbase": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_caretupbase"
      ]
    ]
  ],
  "_set_caretleftbase": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_caretleftbase"
      ]
    ]
  ],
  "_set_caretrightbase": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_caretrightbase"
      ]
    ]
  ],
  "_set_plus": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_plus"
      ]
    ]
  ],
  "_set_x": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_x"
      ]
    ]
  ],
  "_set_plus_filled": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_plus_filled"
      ]
    ]
  ],
  "_set_x_filled": [
    [
      "lib/matplotlib/markers.py",
      [
        "MarkerStyle",
        "_set_x_filled"
      ]
    ]
  ],
  "set_canvas_size": [
    [
      "lib/matplotlib/mathtext.py",
      [
        "MathtextBackend",
        "set_canvas_size"
      ]
    ],
    [
      "lib/matplotlib/mathtext.py",
      [
        "MathtextBackendAgg",
        "set_canvas_size"
      ]
    ]
  ],
  "get_results": [
    [
      "lib/matplotlib/mathtext.py",
      [
        "MathtextBackend",
        "get_results"
      ]
    ],
    [
      "lib/matplotlib/mathtext.py",
      [
        "MathtextBackendAgg",
        "get_results"
      ]
    ],
    [
      "lib/matplotlib/mathtext.py",
      [
        "MathtextBackendPath",
        "get_results"
      ]
    ]
  ],
  "get_hinting_type": [
    [
      "lib/matplotlib/mathtext.py",
      [
        "MathtextBackend",
        "get_hinting_type"
      ]
    ],
    [
      "lib/matplotlib/mathtext.py",
      [
        "MathtextBackendAgg",
        "get_hinting_type"
      ]
    ]
  ],
  "_update_bbox": [
    [
      "lib/matplotlib/mathtext.py",
      [
        "MathtextBackendAgg",
        "_update_bbox"
      ]
    ]
  ],
  "_parse_cached": [
    [
      "lib/matplotlib/mathtext.py",
      [
        "MathTextParser",
        "_parse_cached"
      ]
    ]
  ],
  "math_to_image": [
    [
      "lib/matplotlib/mathtext.py",
      [
        "math_to_image"
      ]
    ]
  ],
  "window_hanning": [
    [
      "lib/matplotlib/mlab.py",
      [
        "window_hanning"
      ]
    ]
  ],
  "window_none": [
    [
      "lib/matplotlib/mlab.py",
      [
        "window_none"
      ]
    ]
  ],
  "detrend": [
    [
      "lib/matplotlib/mlab.py",
      [
        "detrend"
      ]
    ]
  ],
  "detrend_mean": [
    [
      "lib/matplotlib/mlab.py",
      [
        "detrend_mean"
      ]
    ]
  ],
  "detrend_none": [
    [
      "lib/matplotlib/mlab.py",
      [
        "detrend_none"
      ]
    ]
  ],
  "detrend_linear": [
    [
      "lib/matplotlib/mlab.py",
      [
        "detrend_linear"
      ]
    ]
  ],
  "stride_windows": [
    [
      "lib/matplotlib/mlab.py",
      [
        "stride_windows"
      ]
    ]
  ],
  "_stride_windows": [
    [
      "lib/matplotlib/mlab.py",
      [
        "_stride_windows"
      ]
    ]
  ],
  "_spectral_helper": [
    [
      "lib/matplotlib/mlab.py",
      [
        "_spectral_helper"
      ]
    ]
  ],
  "_single_spectrum_helper": [
    [
      "lib/matplotlib/mlab.py",
      [
        "_single_spectrum_helper"
      ]
    ]
  ],
  "scotts_factor": [
    [
      "lib/matplotlib/mlab.py",
      [
        "GaussianKDE",
        "scotts_factor"
      ]
    ]
  ],
  "silverman_factor": [
    [
      "lib/matplotlib/mlab.py",
      [
        "GaussianKDE",
        "silverman_factor"
      ]
    ]
  ],
  "evaluate": [
    [
      "lib/matplotlib/mlab.py",
      [
        "GaussianKDE",
        "evaluate"
      ]
    ]
  ],
  "bbox_artist": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "bbox_artist"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "bbox_artist"
      ]
    ]
  ],
  "_get_packed_offsets": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "_get_packed_offsets"
      ]
    ]
  ],
  "_get_aligned_offsets": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "_get_aligned_offsets"
      ]
    ]
  ],
  "set_offset": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "OffsetBox",
        "set_offset"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "DrawingArea",
        "set_offset"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "TextArea",
        "set_offset"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AuxTransformBox",
        "set_offset"
      ]
    ]
  ],
  "set_width": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "OffsetBox",
        "set_width"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Rectangle",
        "set_width"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Wedge",
        "set_width"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Ellipse",
        "set_width"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Annulus",
        "set_width"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "FancyBboxPatch",
        "set_width"
      ]
    ]
  ],
  "set_height": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "OffsetBox",
        "set_height"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Rectangle",
        "set_height"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Ellipse",
        "set_height"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "FancyBboxPatch",
        "set_height"
      ]
    ]
  ],
  "get_visible_children": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "OffsetBox",
        "get_visible_children"
      ]
    ]
  ],
  "get_extent_offsets": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "OffsetBox",
        "get_extent_offsets"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "VPacker",
        "get_extent_offsets"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "HPacker",
        "get_extent_offsets"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "PaddedBox",
        "get_extent_offsets"
      ]
    ]
  ],
  "update_frame": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "PaddedBox",
        "update_frame"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AnchoredOffsetbox",
        "update_frame"
      ]
    ]
  ],
  "draw_frame": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "PaddedBox",
        "draw_frame"
      ]
    ]
  ],
  "clip_children": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "DrawingArea",
        "clip_children"
      ]
    ]
  ],
  "clip_children_1": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "DrawingArea",
        "clip_children_1"
      ]
    ]
  ],
  "set_text": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "TextArea",
        "set_text"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "set_text"
      ]
    ]
  ],
  "set_multilinebaseline": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "TextArea",
        "set_multilinebaseline"
      ]
    ]
  ],
  "get_multilinebaseline": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "TextArea",
        "get_multilinebaseline"
      ]
    ]
  ],
  "set_child": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AnchoredOffsetbox",
        "set_child"
      ]
    ]
  ],
  "get_child": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AnchoredOffsetbox",
        "get_child"
      ]
    ]
  ],
  "set_zoom": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "OffsetImage",
        "set_zoom"
      ]
    ]
  ],
  "get_zoom": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "OffsetImage",
        "get_zoom"
      ]
    ]
  ],
  "xyann": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AnnotationBbox",
        "xyann"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Annotation",
        "xyann"
      ]
    ]
  ],
  "xyann_2": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AnnotationBbox",
        "xyann_2"
      ]
    ]
  ],
  "anncoords": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AnnotationBbox",
        "anncoords"
      ]
    ]
  ],
  "anncoords_4": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AnnotationBbox",
        "anncoords_4"
      ]
    ]
  ],
  "set_fontsize": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AnnotationBbox",
        "set_fontsize"
      ]
    ],
    [
      "lib/matplotlib/table.py",
      [
        "Cell",
        "set_fontsize"
      ]
    ],
    [
      "lib/matplotlib/table.py",
      [
        "Table",
        "set_fontsize"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "set_fontsize"
      ]
    ]
  ],
  "get_fontsize": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AnnotationBbox",
        "get_fontsize"
      ]
    ],
    [
      "lib/matplotlib/table.py",
      [
        "Cell",
        "get_fontsize"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "get_fontsize"
      ]
    ]
  ],
  "update_positions": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "AnnotationBbox",
        "update_positions"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Annotation",
        "update_positions"
      ]
    ]
  ],
  "on_motion": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "DraggableBase",
        "on_motion"
      ]
    ]
  ],
  "_check_still_parented": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "DraggableBase",
        "_check_still_parented"
      ]
    ]
  ],
  "save_offset": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "DraggableBase",
        "save_offset"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "DraggableOffsetBox",
        "save_offset"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "DraggableAnnotation",
        "save_offset"
      ]
    ]
  ],
  "update_offset": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "DraggableBase",
        "update_offset"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "DraggableOffsetBox",
        "update_offset"
      ]
    ],
    [
      "lib/matplotlib/offsetbox.py",
      [
        "DraggableAnnotation",
        "update_offset"
      ]
    ]
  ],
  "get_loc_in_canvas": [
    [
      "lib/matplotlib/offsetbox.py",
      [
        "DraggableOffsetBox",
        "get_loc_in_canvas"
      ]
    ]
  ],
  "get_verts": [
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "get_verts"
      ]
    ]
  ],
  "_process_radius": [
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "_process_radius"
      ]
    ]
  ],
  "contains_points": [
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "contains_points"
      ]
    ],
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "contains_points"
      ]
    ]
  ],
  "get_extents": [
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "get_extents"
      ]
    ],
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "get_extents"
      ]
    ]
  ],
  "get_data_transform": [
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "get_data_transform"
      ]
    ]
  ],
  "get_patch_transform": [
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "get_patch_transform"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Shadow",
        "get_patch_transform"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Rectangle",
        "get_patch_transform"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "RegularPolygon",
        "get_patch_transform"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Arrow",
        "get_patch_transform"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Ellipse",
        "get_patch_transform"
      ]
    ],
    [
      "lib/matplotlib/spines.py",
      [
        "Spine",
        "get_patch_transform"
      ]
    ]
  ],
  "set_fill": [
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "set_fill"
      ]
    ]
  ],
  "_draw_paths_with_artist_properties": [
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "_draw_paths_with_artist_properties"
      ]
    ]
  ],
  "_convert_xy_units": [
    [
      "lib/matplotlib/patches.py",
      [
        "Patch",
        "_convert_xy_units"
      ]
    ]
  ],
  "_update_transform": [
    [
      "lib/matplotlib/patches.py",
      [
        "Shadow",
        "_update_transform"
      ]
    ]
  ],
  "_convert_units": [
    [
      "lib/matplotlib/patches.py",
      [
        "Rectangle",
        "_convert_units"
      ]
    ]
  ],
  "rotation_point": [
    [
      "lib/matplotlib/patches.py",
      [
        "Rectangle",
        "rotation_point"
      ]
    ]
  ],
  "rotation_point_5": [
    [
      "lib/matplotlib/patches.py",
      [
        "Rectangle",
        "rotation_point_5"
      ]
    ]
  ],
  "get_x": [
    [
      "lib/matplotlib/patches.py",
      [
        "Rectangle",
        "get_x"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "FancyBboxPatch",
        "get_x"
      ]
    ]
  ],
  "get_y": [
    [
      "lib/matplotlib/patches.py",
      [
        "Rectangle",
        "get_y"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "FancyBboxPatch",
        "get_y"
      ]
    ]
  ],
  "get_xy": [
    [
      "lib/matplotlib/patches.py",
      [
        "Rectangle",
        "get_xy"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Polygon",
        "get_xy"
      ]
    ]
  ],
  "get_corners": [
    [
      "lib/matplotlib/patches.py",
      [
        "Rectangle",
        "get_corners"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Ellipse",
        "get_corners"
      ]
    ]
  ],
  "get_center": [
    [
      "lib/matplotlib/patches.py",
      [
        "Rectangle",
        "get_center"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Ellipse",
        "get_center"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Annulus",
        "get_center"
      ]
    ]
  ],
  "get_width": [
    [
      "lib/matplotlib/patches.py",
      [
        "Rectangle",
        "get_width"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Ellipse",
        "get_width"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Annulus",
        "get_width"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "FancyBboxPatch",
        "get_width"
      ]
    ]
  ],
  "get_height": [
    [
      "lib/matplotlib/patches.py",
      [
        "Rectangle",
        "get_height"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Ellipse",
        "get_height"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "FancyBboxPatch",
        "get_height"
      ]
    ]
  ],
  "set_x": [
    [
      "lib/matplotlib/patches.py",
      [
        "Rectangle",
        "set_x"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "FancyBboxPatch",
        "set_x"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "set_x"
      ]
    ]
  ],
  "set_y": [
    [
      "lib/matplotlib/patches.py",
      [
        "Rectangle",
        "set_y"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "FancyBboxPatch",
        "set_y"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "set_y"
      ]
    ]
  ],
  "set_angle": [
    [
      "lib/matplotlib/patches.py",
      [
        "Rectangle",
        "set_angle"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Ellipse",
        "set_angle"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Annulus",
        "set_angle"
      ]
    ]
  ],
  "set_bounds": [
    [
      "lib/matplotlib/patches.py",
      [
        "Rectangle",
        "set_bounds"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "FancyBboxPatch",
        "set_bounds"
      ]
    ],
    [
      "lib/matplotlib/spines.py",
      [
        "Spine",
        "set_bounds"
      ]
    ]
  ],
  "set_path": [
    [
      "lib/matplotlib/patches.py",
      [
        "PathPatch",
        "set_path"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axisline_style.py",
      [
        "_FancyAxislineStyle",
        "SimpleArrow",
        "set_path"
      ]
    ]
  ],
  "_update_path": [
    [
      "lib/matplotlib/patches.py",
      [
        "StepPatch",
        "_update_path"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Arc",
        "_update_path"
      ]
    ]
  ],
  "get_closed": [
    [
      "lib/matplotlib/patches.py",
      [
        "Polygon",
        "get_closed"
      ]
    ]
  ],
  "set_closed": [
    [
      "lib/matplotlib/patches.py",
      [
        "Polygon",
        "set_closed"
      ]
    ]
  ],
  "_recompute_path": [
    [
      "lib/matplotlib/patches.py",
      [
        "Wedge",
        "_recompute_path"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Annulus",
        "_recompute_path"
      ]
    ]
  ],
  "set_radius": [
    [
      "lib/matplotlib/patches.py",
      [
        "Wedge",
        "set_radius"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "Circle",
        "set_radius"
      ]
    ]
  ],
  "set_theta1": [
    [
      "lib/matplotlib/patches.py",
      [
        "Wedge",
        "set_theta1"
      ]
    ]
  ],
  "set_theta2": [
    [
      "lib/matplotlib/patches.py",
      [
        "Wedge",
        "set_theta2"
      ]
    ]
  ],
  "_make_verts": [
    [
      "lib/matplotlib/patches.py",
      [
        "FancyArrow",
        "_make_verts"
      ]
    ],
    [
      "lib/matplotlib/quiver.py",
      [
        "Quiver",
        "_make_verts"
      ]
    ]
  ],
  "_recompute_transform": [
    [
      "lib/matplotlib/patches.py",
      [
        "Ellipse",
        "_recompute_transform"
      ]
    ],
    [
      "lib/matplotlib/spines.py",
      [
        "Spine",
        "_recompute_transform"
      ]
    ]
  ],
  "set_semimajor": [
    [
      "lib/matplotlib/patches.py",
      [
        "Annulus",
        "set_semimajor"
      ]
    ]
  ],
  "set_semiminor": [
    [
      "lib/matplotlib/patches.py",
      [
        "Annulus",
        "set_semiminor"
      ]
    ]
  ],
  "set_radii": [
    [
      "lib/matplotlib/patches.py",
      [
        "Annulus",
        "set_radii"
      ]
    ]
  ],
  "get_radii": [
    [
      "lib/matplotlib/patches.py",
      [
        "Annulus",
        "get_radii"
      ]
    ]
  ],
  "_transform_verts": [
    [
      "lib/matplotlib/patches.py",
      [
        "Annulus",
        "_transform_verts"
      ]
    ]
  ],
  "get_radius": [
    [
      "lib/matplotlib/patches.py",
      [
        "Circle",
        "get_radius"
      ]
    ]
  ],
  "line_circle_intersect": [
    [
      "lib/matplotlib/patches.py",
      [
        "Arc",
        "draw",
        "line_circle_intersect"
      ]
    ]
  ],
  "segment_circle_intersect": [
    [
      "lib/matplotlib/patches.py",
      [
        "Arc",
        "draw",
        "segment_circle_intersect"
      ]
    ]
  ],
  "theta_stretch": [
    [
      "lib/matplotlib/patches.py",
      [
        "Arc",
        "_theta_stretch",
        "theta_stretch"
      ]
    ]
  ],
  "_theta_stretch": [
    [
      "lib/matplotlib/patches.py",
      [
        "Arc",
        "_theta_stretch"
      ]
    ]
  ],
  "draw_bbox": [
    [
      "lib/matplotlib/patches.py",
      [
        "draw_bbox"
      ]
    ]
  ],
  "get_styles": [
    [
      "lib/matplotlib/patches.py",
      [
        "_Style",
        "get_styles"
      ]
    ]
  ],
  "pprint_styles": [
    [
      "lib/matplotlib/patches.py",
      [
        "_Style",
        "pprint_styles"
      ]
    ]
  ],
  "_register_style": [
    [
      "lib/matplotlib/patches.py",
      [
        "_register_style"
      ]
    ]
  ],
  "_get_sawtooth_vertices": [
    [
      "lib/matplotlib/patches.py",
      [
        "BoxStyle",
        "Sawtooth",
        "_get_sawtooth_vertices"
      ]
    ]
  ],
  "_clip": [
    [
      "lib/matplotlib/patches.py",
      [
        "ConnectionStyle",
        "_Base",
        "_clip"
      ]
    ]
  ],
  "_shrink": [
    [
      "lib/matplotlib/patches.py",
      [
        "ConnectionStyle",
        "_Base",
        "_shrink"
      ]
    ]
  ],
  "_point_along_a_line": [
    [
      "lib/matplotlib/patches.py",
      [
        "_point_along_a_line"
      ]
    ]
  ],
  "ensure_quadratic_bezier": [
    [
      "lib/matplotlib/patches.py",
      [
        "ArrowStyle",
        "_Base",
        "ensure_quadratic_bezier"
      ]
    ]
  ],
  "transmute": [
    [
      "lib/matplotlib/patches.py",
      [
        "ArrowStyle",
        "_Base",
        "transmute"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "ArrowStyle",
        "_Curve",
        "transmute"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "ArrowStyle",
        "Simple",
        "transmute"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "ArrowStyle",
        "Fancy",
        "transmute"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "ArrowStyle",
        "Wedge",
        "transmute"
      ]
    ]
  ],
  "_get_arrow_wedge": [
    [
      "lib/matplotlib/patches.py",
      [
        "ArrowStyle",
        "_Curve",
        "_get_arrow_wedge"
      ]
    ]
  ],
  "_get_bracket": [
    [
      "lib/matplotlib/patches.py",
      [
        "ArrowStyle",
        "_Curve",
        "_get_bracket"
      ]
    ]
  ],
  "set_boxstyle": [
    [
      "lib/matplotlib/patches.py",
      [
        "FancyBboxPatch",
        "set_boxstyle"
      ]
    ]
  ],
  "get_boxstyle": [
    [
      "lib/matplotlib/patches.py",
      [
        "FancyBboxPatch",
        "get_boxstyle"
      ]
    ]
  ],
  "set_mutation_scale": [
    [
      "lib/matplotlib/patches.py",
      [
        "FancyBboxPatch",
        "set_mutation_scale"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "FancyArrowPatch",
        "set_mutation_scale"
      ]
    ]
  ],
  "get_mutation_scale": [
    [
      "lib/matplotlib/patches.py",
      [
        "FancyBboxPatch",
        "get_mutation_scale"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "FancyArrowPatch",
        "get_mutation_scale"
      ]
    ]
  ],
  "set_mutation_aspect": [
    [
      "lib/matplotlib/patches.py",
      [
        "FancyBboxPatch",
        "set_mutation_aspect"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "FancyArrowPatch",
        "set_mutation_aspect"
      ]
    ]
  ],
  "get_mutation_aspect": [
    [
      "lib/matplotlib/patches.py",
      [
        "FancyBboxPatch",
        "get_mutation_aspect"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "FancyArrowPatch",
        "get_mutation_aspect"
      ]
    ]
  ],
  "set_patchA": [
    [
      "lib/matplotlib/patches.py",
      [
        "FancyArrowPatch",
        "set_patchA"
      ]
    ]
  ],
  "set_patchB": [
    [
      "lib/matplotlib/patches.py",
      [
        "FancyArrowPatch",
        "set_patchB"
      ]
    ]
  ],
  "set_connectionstyle": [
    [
      "lib/matplotlib/patches.py",
      [
        "FancyArrowPatch",
        "set_connectionstyle"
      ]
    ]
  ],
  "get_connectionstyle": [
    [
      "lib/matplotlib/patches.py",
      [
        "FancyArrowPatch",
        "get_connectionstyle"
      ]
    ]
  ],
  "set_arrowstyle": [
    [
      "lib/matplotlib/patches.py",
      [
        "FancyArrowPatch",
        "set_arrowstyle"
      ]
    ]
  ],
  "get_arrowstyle": [
    [
      "lib/matplotlib/patches.py",
      [
        "FancyArrowPatch",
        "get_arrowstyle"
      ]
    ]
  ],
  "_get_path_in_displaycoord": [
    [
      "lib/matplotlib/patches.py",
      [
        "FancyArrowPatch",
        "_get_path_in_displaycoord"
      ]
    ],
    [
      "lib/matplotlib/patches.py",
      [
        "ConnectionPatch",
        "_get_path_in_displaycoord"
      ]
    ]
  ],
  "_get_xy": [
    [
      "lib/matplotlib/patches.py",
      [
        "ConnectionPatch",
        "_get_xy"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "_AnnotationBase",
        "_get_xy"
      ]
    ]
  ],
  "set_annotation_clip": [
    [
      "lib/matplotlib/patches.py",
      [
        "ConnectionPatch",
        "set_annotation_clip"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "_AnnotationBase",
        "set_annotation_clip"
      ]
    ]
  ],
  "get_annotation_clip": [
    [
      "lib/matplotlib/patches.py",
      [
        "ConnectionPatch",
        "get_annotation_clip"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "_AnnotationBase",
        "get_annotation_clip"
      ]
    ]
  ],
  "_check_xy": [
    [
      "lib/matplotlib/patches.py",
      [
        "ConnectionPatch",
        "_check_xy"
      ]
    ],
    [
      "lib/matplotlib/text.py",
      [
        "_AnnotationBase",
        "_check_xy"
      ]
    ]
  ],
  "_fast_from_codes_and_verts": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "_fast_from_codes_and_verts"
      ]
    ]
  ],
  "_create_closed": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "_create_closed"
      ]
    ]
  ],
  "_update_values": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "_update_values"
      ]
    ]
  ],
  "vertices": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "vertices"
      ]
    ],
    [
      "lib/matplotlib/textpath.py",
      [
        "TextPath",
        "vertices"
      ]
    ]
  ],
  "vertices_4": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "vertices_4"
      ]
    ]
  ],
  "codes": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "codes"
      ]
    ],
    [
      "lib/matplotlib/textpath.py",
      [
        "TextPath",
        "codes"
      ]
    ]
  ],
  "codes_6": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "codes_6"
      ]
    ]
  ],
  "simplify_threshold": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "simplify_threshold"
      ]
    ]
  ],
  "simplify_threshold_8": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "simplify_threshold_8"
      ]
    ]
  ],
  "should_simplify": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "should_simplify"
      ]
    ]
  ],
  "should_simplify_10": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "should_simplify_10"
      ]
    ]
  ],
  "readonly": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "readonly"
      ]
    ]
  ],
  "__deepcopy__": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "__deepcopy__"
      ]
    ]
  ],
  "make_compound_path_from_polys": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "make_compound_path_from_polys"
      ]
    ]
  ],
  "make_compound_path": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "make_compound_path"
      ]
    ]
  ],
  "iter_segments": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "iter_segments"
      ]
    ]
  ],
  "iter_bezier": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "iter_bezier"
      ]
    ]
  ],
  "cleaned": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "cleaned"
      ]
    ]
  ],
  "contains_path": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "contains_path"
      ]
    ]
  ],
  "intersects_path": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "intersects_path"
      ]
    ]
  ],
  "intersects_bbox": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "intersects_bbox"
      ]
    ]
  ],
  "interpolated": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "interpolated"
      ]
    ]
  ],
  "to_polygons": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "to_polygons"
      ]
    ]
  ],
  "unit_rectangle": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "unit_rectangle"
      ]
    ]
  ],
  "unit_regular_polygon": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "unit_regular_polygon"
      ]
    ]
  ],
  "unit_regular_star": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "unit_regular_star"
      ]
    ]
  ],
  "unit_regular_asterisk": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "unit_regular_asterisk"
      ]
    ]
  ],
  "unit_circle": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "unit_circle"
      ]
    ]
  ],
  "circle": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "circle"
      ]
    ]
  ],
  "unit_circle_righthalf": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "unit_circle_righthalf"
      ]
    ]
  ],
  "arc": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "arc"
      ]
    ]
  ],
  "wedge": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "wedge"
      ]
    ]
  ],
  "hatch": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "hatch"
      ]
    ]
  ],
  "clip_to_bbox": [
    [
      "lib/matplotlib/path.py",
      [
        "Path",
        "clip_to_bbox"
      ]
    ]
  ],
  "get_path_collection_extents": [
    [
      "lib/matplotlib/path.py",
      [
        "get_path_collection_extents"
      ]
    ]
  ],
  "_offset_transform": [
    [
      "lib/matplotlib/patheffects.py",
      [
        "AbstractPathEffect",
        "_offset_transform"
      ]
    ]
  ],
  "_update_gc": [
    [
      "lib/matplotlib/patheffects.py",
      [
        "AbstractPathEffect",
        "_update_gc"
      ]
    ]
  ],
  "copy_with_path_effect": [
    [
      "lib/matplotlib/patheffects.py",
      [
        "PathEffectRenderer",
        "copy_with_path_effect"
      ]
    ]
  ],
  "_subclass_with_normal": [
    [
      "lib/matplotlib/patheffects.py",
      [
        "_subclass_with_normal"
      ]
    ]
  ],
  "get_projection_class": [
    [
      "lib/matplotlib/projections/__init__.py",
      [
        "ProjectionRegistry",
        "get_projection_class"
      ]
    ],
    [
      "lib/matplotlib/projections/__init__.py",
      [
        "get_projection_class"
      ]
    ]
  ],
  "get_projection_names": [
    [
      "lib/matplotlib/projections/__init__.py",
      [
        "ProjectionRegistry",
        "get_projection_names"
      ]
    ]
  ],
  "register_projection": [
    [
      "lib/matplotlib/projections/__init__.py",
      [
        "register_projection"
      ]
    ]
  ],
  "d": [
    [
      "lib/matplotlib/projections/geo.py",
      [
        "MollweideAxes",
        "MollweideTransform",
        "transform_non_affine",
        "d"
      ]
    ]
  ],
  "get_matrix": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAffine",
        "get_matrix"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "_ThetaShift",
        "get_matrix"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Transform",
        "get_matrix"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Affine2D",
        "get_matrix"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "IdentityTransform",
        "get_matrix"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "BlendedAffine2D",
        "get_matrix"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "CompositeAffine2D",
        "get_matrix"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxTransform",
        "get_matrix"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxTransformTo",
        "get_matrix"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxTransformToMaxOnly",
        "get_matrix"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxTransformFrom",
        "get_matrix"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "ScaledTranslation",
        "get_matrix"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "AffineDeltaTransform",
        "get_matrix"
      ]
    ]
  ],
  "refresh": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "ThetaLocator",
        "refresh"
      ]
    ]
  ],
  "view_limits": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "ThetaLocator",
        "view_limits"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "RadialLocator",
        "view_limits"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "Locator",
        "view_limits"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "LinearLocator",
        "view_limits"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "MultipleLocator",
        "view_limits"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "MaxNLocator",
        "view_limits"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "LogLocator",
        "view_limits"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "SymmetricalLogLocator",
        "view_limits"
      ]
    ]
  ],
  "_update_padding": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "ThetaTick",
        "_update_padding"
      ]
    ]
  ],
  "_wrap_locator_formatter": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "ThetaAxis",
        "_wrap_locator_formatter"
      ]
    ],
    [
      "lib/matplotlib/projections/polar.py",
      [
        "RadialAxis",
        "_wrap_locator_formatter"
      ]
    ]
  ],
  "_determine_anchor": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "RadialTick",
        "_determine_anchor"
      ]
    ]
  ],
  "_is_full_circle_deg": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "_is_full_circle_deg"
      ]
    ]
  ],
  "_is_full_circle_rad": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "_is_full_circle_rad"
      ]
    ]
  ],
  "get_points": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "_WedgeBbox",
        "get_points"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "get_points"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "get_points"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "TransformedBbox",
        "get_points"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "LockableBbox",
        "get_points"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/inset_locator.py",
      [
        "_TransformedBboxWithCallback",
        "get_points"
      ]
    ]
  ],
  "set_thetamax": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "set_thetamax"
      ]
    ]
  ],
  "get_thetamax": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "get_thetamax"
      ]
    ]
  ],
  "set_thetamin": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "set_thetamin"
      ]
    ]
  ],
  "get_thetamin": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "get_thetamin"
      ]
    ]
  ],
  "set_thetalim": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "set_thetalim"
      ]
    ]
  ],
  "set_theta_offset": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "set_theta_offset"
      ]
    ]
  ],
  "get_theta_offset": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "get_theta_offset"
      ]
    ]
  ],
  "set_theta_zero_location": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "set_theta_zero_location"
      ]
    ]
  ],
  "set_theta_direction": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "set_theta_direction"
      ]
    ]
  ],
  "get_theta_direction": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "get_theta_direction"
      ]
    ]
  ],
  "set_rmax": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "set_rmax"
      ]
    ]
  ],
  "get_rmax": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "get_rmax"
      ]
    ]
  ],
  "set_rmin": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "set_rmin"
      ]
    ]
  ],
  "get_rmin": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "get_rmin"
      ]
    ]
  ],
  "set_rorigin": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "set_rorigin"
      ]
    ]
  ],
  "get_rorigin": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "get_rorigin"
      ]
    ]
  ],
  "get_rsign": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "get_rsign"
      ]
    ]
  ],
  "set_rlim": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "set_rlim"
      ]
    ]
  ],
  "get_rlabel_position": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "get_rlabel_position"
      ]
    ]
  ],
  "set_rlabel_position": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "set_rlabel_position"
      ]
    ]
  ],
  "set_rscale": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "set_rscale"
      ]
    ]
  ],
  "set_rticks": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "set_rticks"
      ]
    ]
  ],
  "set_thetagrids": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "set_thetagrids"
      ]
    ]
  ],
  "set_rgrids": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "set_rgrids"
      ]
    ]
  ],
  "format_sig": [
    [
      "lib/matplotlib/projections/polar.py",
      [
        "PolarAxes",
        "format_coord",
        "format_sig"
      ]
    ]
  ],
  "_copy_docstring_and_deprecators": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "_copy_docstring_and_deprecators"
      ]
    ]
  ],
  "_draw_all_if_interactive": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "_draw_all_if_interactive"
      ]
    ]
  ],
  "install_repl_displayhook": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "install_repl_displayhook"
      ]
    ]
  ],
  "uninstall_repl_displayhook": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "uninstall_repl_displayhook"
      ]
    ]
  ],
  "_get_required_interactive_framework": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "_get_required_interactive_framework"
      ]
    ]
  ],
  "_get_backend_mod": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "_get_backend_mod"
      ]
    ]
  ],
  "switch_backend": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "switch_backend"
      ]
    ]
  ],
  "_warn_if_gui_out_of_main_thread": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "_warn_if_gui_out_of_main_thread"
      ]
    ]
  ],
  "isinteractive": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "isinteractive"
      ]
    ]
  ],
  "ioff": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "ioff"
      ]
    ]
  ],
  "ion": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "ion"
      ]
    ]
  ],
  "xkcd": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "xkcd"
      ]
    ]
  ],
  "_auto_draw_if_interactive": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "_auto_draw_if_interactive"
      ]
    ]
  ],
  "gcf": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "gcf"
      ]
    ]
  ],
  "fignum_exists": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "fignum_exists"
      ]
    ]
  ],
  "get_fignums": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "get_fignums"
      ]
    ]
  ],
  "get_figlabels": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "get_figlabels"
      ]
    ]
  ],
  "get_current_fig_manager": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "get_current_fig_manager"
      ]
    ]
  ],
  "figlegend": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "figlegend"
      ]
    ]
  ],
  "subplot": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "subplot"
      ]
    ]
  ],
  "subplot2grid": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "subplot2grid"
      ]
    ]
  ],
  "subplot_tool": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "subplot_tool"
      ]
    ]
  ],
  "box": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "box"
      ]
    ]
  ],
  "xlim": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "xlim"
      ]
    ]
  ],
  "ylim": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "ylim"
      ]
    ]
  ],
  "xticks": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "xticks"
      ]
    ]
  ],
  "yticks": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "yticks"
      ]
    ]
  ],
  "rgrids": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "rgrids"
      ]
    ]
  ],
  "thetagrids": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "thetagrids"
      ]
    ]
  ],
  "get_plot_commands": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "get_plot_commands"
      ]
    ]
  ],
  "clim": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "clim"
      ]
    ]
  ],
  "polar": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "polar"
      ]
    ]
  ],
  "figtext": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "figtext"
      ]
    ]
  ],
  "gci": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "gci"
      ]
    ]
  ],
  "stackplot": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "stackplot"
      ]
    ],
    [
      "lib/matplotlib/stackplot.py",
      [
        "stackplot"
      ]
    ]
  ],
  "streamplot": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "streamplot"
      ]
    ],
    [
      "lib/matplotlib/streamplot.py",
      [
        "streamplot"
      ]
    ]
  ],
  "table": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "table"
      ]
    ],
    [
      "lib/matplotlib/table.py",
      [
        "table"
      ]
    ]
  ],
  "tricontour": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "tricontour"
      ]
    ],
    [
      "lib/matplotlib/tri/tricontour.py",
      [
        "tricontour"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "tricontour"
      ]
    ]
  ],
  "tricontourf": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "tricontourf"
      ]
    ],
    [
      "lib/matplotlib/tri/tricontour.py",
      [
        "tricontourf"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "tricontourf"
      ]
    ]
  ],
  "tripcolor": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "tripcolor"
      ]
    ],
    [
      "lib/matplotlib/tri/tripcolor.py",
      [
        "tripcolor"
      ]
    ]
  ],
  "triplot": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "triplot"
      ]
    ],
    [
      "lib/matplotlib/tri/triplot.py",
      [
        "triplot"
      ]
    ]
  ],
  "sci": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "sci"
      ]
    ]
  ],
  "title": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "title"
      ]
    ]
  ],
  "xlabel": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "xlabel"
      ]
    ]
  ],
  "ylabel": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "ylabel"
      ]
    ]
  ],
  "xscale": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "xscale"
      ]
    ]
  ],
  "yscale": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "yscale"
      ]
    ]
  ],
  "autumn": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "autumn"
      ]
    ]
  ],
  "bone": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "bone"
      ]
    ]
  ],
  "cool": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "cool"
      ]
    ]
  ],
  "copper": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "copper"
      ]
    ]
  ],
  "flag": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "flag"
      ]
    ]
  ],
  "gray": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "gray"
      ]
    ]
  ],
  "hot": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "hot"
      ]
    ]
  ],
  "hsv": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "hsv"
      ]
    ]
  ],
  "jet": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "jet"
      ]
    ]
  ],
  "pink": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "pink"
      ]
    ]
  ],
  "prism": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "prism"
      ]
    ]
  ],
  "spring": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "spring"
      ]
    ]
  ],
  "summer": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "summer"
      ]
    ]
  ],
  "winter": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "winter"
      ]
    ]
  ],
  "magma": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "magma"
      ]
    ]
  ],
  "inferno": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "inferno"
      ]
    ]
  ],
  "plasma": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "plasma"
      ]
    ]
  ],
  "viridis": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "viridis"
      ]
    ]
  ],
  "nipy_spectral": [
    [
      "lib/matplotlib/pyplot.py",
      [
        "nipy_spectral"
      ]
    ]
  ],
  "labelsep": [
    [
      "lib/matplotlib/quiver.py",
      [
        "QuiverKey",
        "labelsep"
      ]
    ]
  ],
  "_text_x": [
    [
      "lib/matplotlib/quiver.py",
      [
        "QuiverKey",
        "_text_x"
      ]
    ]
  ],
  "_text_y": [
    [
      "lib/matplotlib/quiver.py",
      [
        "QuiverKey",
        "_text_y"
      ]
    ]
  ],
  "_set_transform": [
    [
      "lib/matplotlib/quiver.py",
      [
        "QuiverKey",
        "_set_transform"
      ]
    ],
    [
      "lib/matplotlib/quiver.py",
      [
        "Quiver",
        "_set_transform"
      ]
    ]
  ],
  "_parse_args": [
    [
      "lib/matplotlib/quiver.py",
      [
        "_parse_args"
      ]
    ]
  ],
  "_check_consistent_shapes": [
    [
      "lib/matplotlib/quiver.py",
      [
        "_check_consistent_shapes"
      ]
    ]
  ],
  "set_UVC": [
    [
      "lib/matplotlib/quiver.py",
      [
        "Quiver",
        "set_UVC"
      ]
    ],
    [
      "lib/matplotlib/quiver.py",
      [
        "Barbs",
        "set_UVC"
      ]
    ]
  ],
  "_dots_per_unit": [
    [
      "lib/matplotlib/quiver.py",
      [
        "Quiver",
        "_dots_per_unit"
      ]
    ]
  ],
  "_angles_lengths": [
    [
      "lib/matplotlib/quiver.py",
      [
        "Quiver",
        "_angles_lengths"
      ]
    ]
  ],
  "_h_arrows": [
    [
      "lib/matplotlib/quiver.py",
      [
        "Quiver",
        "_h_arrows"
      ]
    ]
  ],
  "_find_tails": [
    [
      "lib/matplotlib/quiver.py",
      [
        "Barbs",
        "_find_tails"
      ]
    ]
  ],
  "_make_barbs": [
    [
      "lib/matplotlib/quiver.py",
      [
        "Barbs",
        "_make_barbs"
      ]
    ]
  ],
  "_listify_validator": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "_listify_validator"
      ]
    ]
  ],
  "validate_any": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "validate_any"
      ]
    ]
  ],
  "_validate_date": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "_validate_date"
      ]
    ]
  ],
  "validate_bool": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "validate_bool"
      ]
    ]
  ],
  "validate_axisbelow": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "validate_axisbelow"
      ]
    ]
  ],
  "validate_dpi": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "validate_dpi"
      ]
    ]
  ],
  "validator": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "_make_type_validator",
        "validator"
      ]
    ]
  ],
  "_make_type_validator": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "_make_type_validator"
      ]
    ]
  ],
  "_validate_pathlike": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "_validate_pathlike"
      ]
    ]
  ],
  "validate_fonttype": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "validate_fonttype"
      ]
    ]
  ],
  "validate_backend": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "validate_backend"
      ]
    ]
  ],
  "_validate_toolbar": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "_validate_toolbar"
      ]
    ]
  ],
  "validate_color_or_inherit": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "validate_color_or_inherit"
      ]
    ]
  ],
  "validate_color_or_auto": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "validate_color_or_auto"
      ]
    ]
  ],
  "validate_color_for_prop_cycle": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "validate_color_for_prop_cycle"
      ]
    ]
  ],
  "_validate_color_or_linecolor": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "_validate_color_or_linecolor"
      ]
    ]
  ],
  "validate_color": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "validate_color"
      ]
    ]
  ],
  "_validate_cmap": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "_validate_cmap"
      ]
    ]
  ],
  "validate_aspect": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "validate_aspect"
      ]
    ]
  ],
  "validate_fontsize_None": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "validate_fontsize_None"
      ]
    ]
  ],
  "validate_fontsize": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "validate_fontsize"
      ]
    ]
  ],
  "validate_fontweight": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "validate_fontweight"
      ]
    ]
  ],
  "validate_fontstretch": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "validate_fontstretch"
      ]
    ]
  ],
  "validate_font_properties": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "validate_font_properties"
      ]
    ]
  ],
  "_validate_mathtext_fallback": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "_validate_mathtext_fallback"
      ]
    ]
  ],
  "validate_whiskers": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "validate_whiskers"
      ]
    ]
  ],
  "validate_ps_distiller": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "validate_ps_distiller"
      ]
    ]
  ],
  "_is_iterable_not_string_like": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "_validate_linestyle",
        "_is_iterable_not_string_like"
      ]
    ]
  ],
  "_validate_linestyle": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "_validate_linestyle"
      ]
    ]
  ],
  "validate_markevery": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "validate_markevery"
      ]
    ]
  ],
  "validate_bbox": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "validate_bbox"
      ]
    ]
  ],
  "validate_sketch": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "validate_sketch"
      ]
    ]
  ],
  "_validate_greaterequal0_lessthan1": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "_validate_greaterequal0_lessthan1"
      ]
    ]
  ],
  "_validate_greaterequal0_lessequal1": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "_validate_greaterequal0_lessequal1"
      ]
    ]
  ],
  "validate_hatch": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "validate_hatch"
      ]
    ]
  ],
  "cycler": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "cycler"
      ]
    ]
  ],
  "visit_Attribute": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "_DunderChecker",
        "visit_Attribute"
      ]
    ]
  ],
  "validate_cycler": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "validate_cycler"
      ]
    ]
  ],
  "validate_hist_bins": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "validate_hist_bins"
      ]
    ]
  ],
  "_convert_validator_spec": [
    [
      "lib/matplotlib/rcsetup.py",
      [
        "_convert_validator_spec"
      ]
    ]
  ],
  "_arc": [
    [
      "lib/matplotlib/sankey.py",
      [
        "Sankey",
        "_arc"
      ]
    ]
  ],
  "_add_input": [
    [
      "lib/matplotlib/sankey.py",
      [
        "Sankey",
        "_add_input"
      ]
    ]
  ],
  "_add_output": [
    [
      "lib/matplotlib/sankey.py",
      [
        "Sankey",
        "_add_output"
      ]
    ]
  ],
  "_revert": [
    [
      "lib/matplotlib/sankey.py",
      [
        "Sankey",
        "_revert"
      ]
    ]
  ],
  "_get_angle": [
    [
      "lib/matplotlib/sankey.py",
      [
        "Sankey",
        "add",
        "_get_angle"
      ]
    ]
  ],
  "base": [
    [
      "lib/matplotlib/scale.py",
      [
        "FuncScaleLog",
        "base"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "LogFormatter",
        "base"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "LogLocator",
        "base"
      ]
    ]
  ],
  "get_scale_names": [
    [
      "lib/matplotlib/scale.py",
      [
        "get_scale_names"
      ]
    ]
  ],
  "scale_factory": [
    [
      "lib/matplotlib/scale.py",
      [
        "scale_factory"
      ]
    ]
  ],
  "register_scale": [
    [
      "lib/matplotlib/scale.py",
      [
        "register_scale"
      ]
    ]
  ],
  "_get_scale_docs": [
    [
      "lib/matplotlib/scale.py",
      [
        "_get_scale_docs"
      ]
    ]
  ],
  "fontset_choice": [
    [
      "lib/matplotlib/sphinxext/mathmpl.py",
      [
        "fontset_choice"
      ]
    ]
  ],
  "math_role": [
    [
      "lib/matplotlib/sphinxext/mathmpl.py",
      [
        "math_role"
      ]
    ]
  ],
  "latex2png": [
    [
      "lib/matplotlib/sphinxext/mathmpl.py",
      [
        "latex2png"
      ]
    ]
  ],
  "latex2html": [
    [
      "lib/matplotlib/sphinxext/mathmpl.py",
      [
        "latex2html"
      ]
    ]
  ],
  "_config_inited": [
    [
      "lib/matplotlib/sphinxext/mathmpl.py",
      [
        "_config_inited"
      ]
    ]
  ],
  "visit_latex_math_html": [
    [
      "lib/matplotlib/sphinxext/mathmpl.py",
      [
        "setup",
        "visit_latex_math_html"
      ]
    ]
  ],
  "depart_latex_math_html": [
    [
      "lib/matplotlib/sphinxext/mathmpl.py",
      [
        "setup",
        "depart_latex_math_html"
      ]
    ]
  ],
  "visit_latex_math_latex": [
    [
      "lib/matplotlib/sphinxext/mathmpl.py",
      [
        "setup",
        "visit_latex_math_latex"
      ]
    ]
  ],
  "depart_latex_math_latex": [
    [
      "lib/matplotlib/sphinxext/mathmpl.py",
      [
        "setup",
        "depart_latex_math_latex"
      ]
    ]
  ],
  "_option_boolean": [
    [
      "lib/matplotlib/sphinxext/plot_directive.py",
      [
        "_option_boolean"
      ]
    ]
  ],
  "_option_context": [
    [
      "lib/matplotlib/sphinxext/plot_directive.py",
      [
        "_option_context"
      ]
    ]
  ],
  "_option_format": [
    [
      "lib/matplotlib/sphinxext/plot_directive.py",
      [
        "_option_format"
      ]
    ]
  ],
  "_deprecated_option_encoding": [
    [
      "lib/matplotlib/sphinxext/plot_directive.py",
      [
        "_deprecated_option_encoding"
      ]
    ]
  ],
  "mark_plot_labels": [
    [
      "lib/matplotlib/sphinxext/plot_directive.py",
      [
        "mark_plot_labels"
      ]
    ]
  ],
  "_copy_css_file": [
    [
      "lib/matplotlib/sphinxext/plot_directive.py",
      [
        "_copy_css_file"
      ]
    ]
  ],
  "contains_doctest": [
    [
      "lib/matplotlib/sphinxext/plot_directive.py",
      [
        "contains_doctest"
      ]
    ]
  ],
  "unescape_doctest": [
    [
      "lib/matplotlib/sphinxext/plot_directive.py",
      [
        "unescape_doctest"
      ]
    ]
  ],
  "split_code_at_show": [
    [
      "lib/matplotlib/sphinxext/plot_directive.py",
      [
        "split_code_at_show"
      ]
    ]
  ],
  "_split_code_at_show": [
    [
      "lib/matplotlib/sphinxext/plot_directive.py",
      [
        "_split_code_at_show"
      ]
    ]
  ],
  "filename": [
    [
      "lib/matplotlib/sphinxext/plot_directive.py",
      [
        "ImageFile",
        "filename"
      ]
    ]
  ],
  "filenames": [
    [
      "lib/matplotlib/sphinxext/plot_directive.py",
      [
        "ImageFile",
        "filenames"
      ]
    ]
  ],
  "out_of_date": [
    [
      "lib/matplotlib/sphinxext/plot_directive.py",
      [
        "out_of_date"
      ]
    ]
  ],
  "run_code": [
    [
      "lib/matplotlib/sphinxext/plot_directive.py",
      [
        "run_code"
      ]
    ]
  ],
  "_run_code": [
    [
      "lib/matplotlib/sphinxext/plot_directive.py",
      [
        "_run_code"
      ]
    ]
  ],
  "clear_state": [
    [
      "lib/matplotlib/sphinxext/plot_directive.py",
      [
        "clear_state"
      ]
    ]
  ],
  "get_plot_formats": [
    [
      "lib/matplotlib/sphinxext/plot_directive.py",
      [
        "get_plot_formats"
      ]
    ]
  ],
  "render_figures": [
    [
      "lib/matplotlib/sphinxext/plot_directive.py",
      [
        "render_figures"
      ]
    ]
  ],
  "set_patch_arc": [
    [
      "lib/matplotlib/spines.py",
      [
        "Spine",
        "set_patch_arc"
      ]
    ]
  ],
  "set_patch_circle": [
    [
      "lib/matplotlib/spines.py",
      [
        "Spine",
        "set_patch_circle"
      ]
    ]
  ],
  "set_patch_line": [
    [
      "lib/matplotlib/spines.py",
      [
        "Spine",
        "set_patch_line"
      ]
    ]
  ],
  "_ensure_position_is_set": [
    [
      "lib/matplotlib/spines.py",
      [
        "Spine",
        "_ensure_position_is_set"
      ]
    ]
  ],
  "register_axis": [
    [
      "lib/matplotlib/spines.py",
      [
        "Spine",
        "register_axis"
      ]
    ]
  ],
  "get_spine_transform": [
    [
      "lib/matplotlib/spines.py",
      [
        "Spine",
        "get_spine_transform"
      ]
    ]
  ],
  "get_bounds": [
    [
      "lib/matplotlib/spines.py",
      [
        "Spine",
        "get_bounds"
      ]
    ]
  ],
  "linear_spine": [
    [
      "lib/matplotlib/spines.py",
      [
        "Spine",
        "linear_spine"
      ]
    ]
  ],
  "arc_spine": [
    [
      "lib/matplotlib/spines.py",
      [
        "Spine",
        "arc_spine"
      ]
    ]
  ],
  "circular_spine": [
    [
      "lib/matplotlib/spines.py",
      [
        "Spine",
        "circular_spine"
      ]
    ]
  ],
  "__dir__": [
    [
      "lib/matplotlib/spines.py",
      [
        "SpinesProxy",
        "__dir__"
      ]
    ]
  ],
  "from_dict": [
    [
      "lib/matplotlib/spines.py",
      [
        "Spines",
        "from_dict"
      ]
    ]
  ],
  "grid2mask": [
    [
      "lib/matplotlib/streamplot.py",
      [
        "DomainMap",
        "grid2mask"
      ]
    ]
  ],
  "mask2grid": [
    [
      "lib/matplotlib/streamplot.py",
      [
        "DomainMap",
        "mask2grid"
      ]
    ]
  ],
  "data2grid": [
    [
      "lib/matplotlib/streamplot.py",
      [
        "DomainMap",
        "data2grid"
      ]
    ]
  ],
  "grid2data": [
    [
      "lib/matplotlib/streamplot.py",
      [
        "DomainMap",
        "grid2data"
      ]
    ]
  ],
  "start_trajectory": [
    [
      "lib/matplotlib/streamplot.py",
      [
        "DomainMap",
        "start_trajectory"
      ]
    ]
  ],
  "reset_start_point": [
    [
      "lib/matplotlib/streamplot.py",
      [
        "DomainMap",
        "reset_start_point"
      ]
    ]
  ],
  "update_trajectory": [
    [
      "lib/matplotlib/streamplot.py",
      [
        "DomainMap",
        "update_trajectory"
      ]
    ]
  ],
  "undo_trajectory": [
    [
      "lib/matplotlib/streamplot.py",
      [
        "DomainMap",
        "undo_trajectory"
      ]
    ]
  ],
  "shape": [
    [
      "lib/matplotlib/streamplot.py",
      [
        "Grid",
        "shape"
      ]
    ],
    [
      "lib/matplotlib/tests/test_units.py",
      [
        "Kernel",
        "shape"
      ]
    ]
  ],
  "within_grid": [
    [
      "lib/matplotlib/streamplot.py",
      [
        "Grid",
        "within_grid"
      ]
    ]
  ],
  "_start_trajectory": [
    [
      "lib/matplotlib/streamplot.py",
      [
        "StreamMask",
        "_start_trajectory"
      ]
    ]
  ],
  "_undo_trajectory": [
    [
      "lib/matplotlib/streamplot.py",
      [
        "StreamMask",
        "_undo_trajectory"
      ]
    ]
  ],
  "_update_trajectory": [
    [
      "lib/matplotlib/streamplot.py",
      [
        "StreamMask",
        "_update_trajectory"
      ]
    ]
  ],
  "forward_time": [
    [
      "lib/matplotlib/streamplot.py",
      [
        "_get_integrator",
        "forward_time"
      ]
    ]
  ],
  "backward_time": [
    [
      "lib/matplotlib/streamplot.py",
      [
        "_get_integrator",
        "backward_time"
      ]
    ]
  ],
  "integrate": [
    [
      "lib/matplotlib/streamplot.py",
      [
        "_get_integrator",
        "integrate"
      ]
    ]
  ],
  "_get_integrator": [
    [
      "lib/matplotlib/streamplot.py",
      [
        "_get_integrator"
      ]
    ]
  ],
  "get_integrator": [
    [
      "lib/matplotlib/streamplot.py",
      [
        "get_integrator"
      ]
    ]
  ],
  "_integrate_rk12": [
    [
      "lib/matplotlib/streamplot.py",
      [
        "_integrate_rk12"
      ]
    ]
  ],
  "_euler_step": [
    [
      "lib/matplotlib/streamplot.py",
      [
        "_euler_step"
      ]
    ]
  ],
  "interpgrid": [
    [
      "lib/matplotlib/streamplot.py",
      [
        "interpgrid"
      ]
    ]
  ],
  "_gen_starting_points": [
    [
      "lib/matplotlib/streamplot.py",
      [
        "_gen_starting_points"
      ]
    ]
  ],
  "_remove_blacklisted_style_params": [
    [
      "lib/matplotlib/style/core.py",
      [
        "_remove_blacklisted_style_params"
      ]
    ]
  ],
  "_apply_style": [
    [
      "lib/matplotlib/style/core.py",
      [
        "_apply_style"
      ]
    ]
  ],
  "fix_style": [
    [
      "lib/matplotlib/style/core.py",
      [
        "use",
        "fix_style"
      ]
    ]
  ],
  "context": [
    [
      "lib/matplotlib/style/core.py",
      [
        "context"
      ]
    ]
  ],
  "load_base_library": [
    [
      "lib/matplotlib/style/core.py",
      [
        "load_base_library"
      ]
    ]
  ],
  "iter_user_libraries": [
    [
      "lib/matplotlib/style/core.py",
      [
        "iter_user_libraries"
      ]
    ]
  ],
  "update_user_library": [
    [
      "lib/matplotlib/style/core.py",
      [
        "update_user_library"
      ]
    ]
  ],
  "read_style_directory": [
    [
      "lib/matplotlib/style/core.py",
      [
        "read_style_directory"
      ]
    ]
  ],
  "update_nested_dict": [
    [
      "lib/matplotlib/style/core.py",
      [
        "update_nested_dict"
      ]
    ]
  ],
  "reload_library": [
    [
      "lib/matplotlib/style/core.py",
      [
        "reload_library"
      ]
    ]
  ],
  "auto_set_font_size": [
    [
      "lib/matplotlib/table.py",
      [
        "Cell",
        "auto_set_font_size"
      ]
    ],
    [
      "lib/matplotlib/table.py",
      [
        "Table",
        "auto_set_font_size"
      ]
    ]
  ],
  "_set_text_position": [
    [
      "lib/matplotlib/table.py",
      [
        "Cell",
        "_set_text_position"
      ]
    ]
  ],
  "get_text_bounds": [
    [
      "lib/matplotlib/table.py",
      [
        "Cell",
        "get_text_bounds"
      ]
    ]
  ],
  "get_required_width": [
    [
      "lib/matplotlib/table.py",
      [
        "Cell",
        "get_required_width"
      ]
    ]
  ],
  "set_text_props": [
    [
      "lib/matplotlib/table.py",
      [
        "Cell",
        "set_text_props"
      ]
    ]
  ],
  "visible_edges": [
    [
      "lib/matplotlib/table.py",
      [
        "Cell",
        "visible_edges"
      ]
    ]
  ],
  "visible_edges_12": [
    [
      "lib/matplotlib/table.py",
      [
        "Cell",
        "visible_edges_12"
      ]
    ]
  ],
  "add_cell": [
    [
      "lib/matplotlib/table.py",
      [
        "Table",
        "add_cell"
      ]
    ]
  ],
  "edges": [
    [
      "lib/matplotlib/table.py",
      [
        "Table",
        "edges"
      ]
    ],
    [
      "lib/matplotlib/tri/triangulation.py",
      [
        "Triangulation",
        "edges"
      ]
    ]
  ],
  "edges_4": [
    [
      "lib/matplotlib/table.py",
      [
        "Table",
        "edges_4"
      ]
    ]
  ],
  "_approx_text_height": [
    [
      "lib/matplotlib/table.py",
      [
        "Table",
        "_approx_text_height"
      ]
    ]
  ],
  "_get_grid_bbox": [
    [
      "lib/matplotlib/table.py",
      [
        "Table",
        "_get_grid_bbox"
      ]
    ]
  ],
  "_do_cell_alignment": [
    [
      "lib/matplotlib/table.py",
      [
        "Table",
        "_do_cell_alignment"
      ]
    ]
  ],
  "auto_set_column_width": [
    [
      "lib/matplotlib/table.py",
      [
        "Table",
        "auto_set_column_width"
      ]
    ]
  ],
  "_auto_set_column_width": [
    [
      "lib/matplotlib/table.py",
      [
        "Table",
        "_auto_set_column_width"
      ]
    ]
  ],
  "_auto_set_font_size": [
    [
      "lib/matplotlib/table.py",
      [
        "Table",
        "_auto_set_font_size"
      ]
    ]
  ],
  "scale": [
    [
      "lib/matplotlib/table.py",
      [
        "Table",
        "scale"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Affine2D",
        "scale"
      ]
    ]
  ],
  "_offset": [
    [
      "lib/matplotlib/table.py",
      [
        "Table",
        "_offset"
      ]
    ]
  ],
  "_update_positions": [
    [
      "lib/matplotlib/table.py",
      [
        "Table",
        "_update_positions"
      ]
    ]
  ],
  "get_celld": [
    [
      "lib/matplotlib/table.py",
      [
        "Table",
        "get_celld"
      ]
    ]
  ],
  "set_font_settings_for_testing": [
    [
      "lib/matplotlib/testing/__init__.py",
      [
        "set_font_settings_for_testing"
      ]
    ]
  ],
  "set_reproducibility_for_testing": [
    [
      "lib/matplotlib/testing/__init__.py",
      [
        "set_reproducibility_for_testing"
      ]
    ]
  ],
  "subprocess_run_helper": [
    [
      "lib/matplotlib/testing/__init__.py",
      [
        "subprocess_run_helper"
      ]
    ]
  ],
  "_check_for_pgf": [
    [
      "lib/matplotlib/testing/__init__.py",
      [
        "_check_for_pgf"
      ]
    ]
  ],
  "_has_tex_package": [
    [
      "lib/matplotlib/testing/__init__.py",
      [
        "_has_tex_package"
      ]
    ]
  ],
  "_checkdep_usetex": [
    [
      "lib/matplotlib/testing/_markers.py",
      [
        "_checkdep_usetex"
      ]
    ]
  ],
  "make_test_filename": [
    [
      "lib/matplotlib/testing/compare.py",
      [
        "make_test_filename"
      ]
    ]
  ],
  "_get_cache_path": [
    [
      "lib/matplotlib/testing/compare.py",
      [
        "_get_cache_path"
      ]
    ]
  ],
  "get_cache_dir": [
    [
      "lib/matplotlib/testing/compare.py",
      [
        "get_cache_dir"
      ]
    ]
  ],
  "get_file_hash": [
    [
      "lib/matplotlib/testing/compare.py",
      [
        "get_file_hash"
      ]
    ]
  ],
  "_read_until": [
    [
      "lib/matplotlib/testing/compare.py",
      [
        "_Converter",
        "_read_until"
      ]
    ]
  ],
  "encode_and_escape": [
    [
      "lib/matplotlib/testing/compare.py",
      [
        "_GSConverter",
        "__call__",
        "encode_and_escape"
      ]
    ]
  ],
  "_update_converter": [
    [
      "lib/matplotlib/testing/compare.py",
      [
        "_update_converter"
      ]
    ]
  ],
  "comparable_formats": [
    [
      "lib/matplotlib/testing/compare.py",
      [
        "comparable_formats"
      ]
    ]
  ],
  "_clean_conversion_cache": [
    [
      "lib/matplotlib/testing/compare.py",
      [
        "_clean_conversion_cache"
      ]
    ]
  ],
  "_register_conversion_cache_cleaner_once": [
    [
      "lib/matplotlib/testing/compare.py",
      [
        "_register_conversion_cache_cleaner_once"
      ]
    ]
  ],
  "crop_to_same": [
    [
      "lib/matplotlib/testing/compare.py",
      [
        "crop_to_same"
      ]
    ]
  ],
  "calculate_rms": [
    [
      "lib/matplotlib/testing/compare.py",
      [
        "calculate_rms"
      ]
    ]
  ],
  "_load_image": [
    [
      "lib/matplotlib/testing/compare.py",
      [
        "_load_image"
      ]
    ]
  ],
  "compare_images": [
    [
      "lib/matplotlib/testing/compare.py",
      [
        "compare_images"
      ]
    ]
  ],
  "save_diff_image": [
    [
      "lib/matplotlib/testing/compare.py",
      [
        "save_diff_image"
      ]
    ]
  ],
  "pytest_configure": [
    [
      "lib/matplotlib/testing/conftest.py",
      [
        "pytest_configure"
      ]
    ]
  ],
  "pytest_unconfigure": [
    [
      "lib/matplotlib/testing/conftest.py",
      [
        "pytest_unconfigure"
      ]
    ]
  ],
  "mpl_test_settings": [
    [
      "lib/matplotlib/testing/conftest.py",
      [
        "mpl_test_settings"
      ]
    ]
  ],
  "mpl_image_comparison_parameters": [
    [
      "lib/matplotlib/testing/conftest.py",
      [
        "mpl_image_comparison_parameters"
      ]
    ]
  ],
  "pd": [
    [
      "lib/matplotlib/testing/conftest.py",
      [
        "pd"
      ]
    ]
  ],
  "xr": [
    [
      "lib/matplotlib/testing/conftest.py",
      [
        "xr"
      ]
    ]
  ],
  "_cleanup_cm": [
    [
      "lib/matplotlib/testing/decorators.py",
      [
        "_cleanup_cm"
      ]
    ]
  ],
  "setUpClass": [
    [
      "lib/matplotlib/testing/decorators.py",
      [
        "CleanupTestCase",
        "setUpClass"
      ]
    ]
  ],
  "tearDownClass": [
    [
      "lib/matplotlib/testing/decorators.py",
      [
        "CleanupTestCase",
        "tearDownClass"
      ]
    ]
  ],
  "make_cleanup": [
    [
      "lib/matplotlib/testing/decorators.py",
      [
        "cleanup",
        "make_cleanup"
      ]
    ]
  ],
  "check_freetype_version": [
    [
      "lib/matplotlib/testing/decorators.py",
      [
        "check_freetype_version"
      ]
    ]
  ],
  "_check_freetype_version": [
    [
      "lib/matplotlib/testing/decorators.py",
      [
        "_check_freetype_version"
      ]
    ]
  ],
  "_checked_on_freetype_version": [
    [
      "lib/matplotlib/testing/decorators.py",
      [
        "_checked_on_freetype_version"
      ]
    ]
  ],
  "remove_ticks_and_titles": [
    [
      "lib/matplotlib/testing/decorators.py",
      [
        "remove_ticks_and_titles"
      ]
    ]
  ],
  "_collect_new_figures": [
    [
      "lib/matplotlib/testing/decorators.py",
      [
        "_collect_new_figures"
      ]
    ]
  ],
  "_raise_on_image_difference": [
    [
      "lib/matplotlib/testing/decorators.py",
      [
        "_raise_on_image_difference"
      ]
    ]
  ],
  "copy_baseline": [
    [
      "lib/matplotlib/testing/decorators.py",
      [
        "_ImageComparisonBase",
        "copy_baseline"
      ]
    ]
  ],
  "decorator": [
    [
      "lib/matplotlib/testing/decorators.py",
      [
        "_pytest_image_comparison",
        "decorator"
      ]
    ],
    [
      "lib/matplotlib/testing/decorators.py",
      [
        "check_figures_equal",
        "decorator"
      ]
    ]
  ],
  "_pytest_image_comparison": [
    [
      "lib/matplotlib/testing/decorators.py",
      [
        "_pytest_image_comparison"
      ]
    ]
  ],
  "image_comparison": [
    [
      "lib/matplotlib/testing/decorators.py",
      [
        "image_comparison"
      ]
    ]
  ],
  "check_figures_equal": [
    [
      "lib/matplotlib/testing/decorators.py",
      [
        "check_figures_equal"
      ]
    ]
  ],
  "_image_directories": [
    [
      "lib/matplotlib/testing/decorators.py",
      [
        "_image_directories"
      ]
    ]
  ],
  "frame": [
    [
      "lib/matplotlib/testing/jpl_units/Duration.py",
      [
        "Duration",
        "frame"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/Epoch.py",
      [
        "Epoch",
        "frame"
      ]
    ]
  ],
  "__abs__": [
    [
      "lib/matplotlib/testing/jpl_units/Duration.py",
      [
        "Duration",
        "__abs__"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/UnitDbl.py",
      [
        "UnitDbl",
        "__abs__"
      ]
    ]
  ],
  "__neg__": [
    [
      "lib/matplotlib/testing/jpl_units/Duration.py",
      [
        "Duration",
        "__neg__"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/UnitDbl.py",
      [
        "UnitDbl",
        "__neg__"
      ]
    ]
  ],
  "seconds": [
    [
      "lib/matplotlib/testing/jpl_units/Duration.py",
      [
        "Duration",
        "seconds"
      ]
    ]
  ],
  "_cmp": [
    [
      "lib/matplotlib/testing/jpl_units/Duration.py",
      [
        "Duration",
        "_cmp"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/Epoch.py",
      [
        "Epoch",
        "_cmp"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/UnitDbl.py",
      [
        "UnitDbl",
        "_cmp"
      ]
    ]
  ],
  "__sub__": [
    [
      "lib/matplotlib/testing/jpl_units/Duration.py",
      [
        "Duration",
        "__sub__"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/Epoch.py",
      [
        "Epoch",
        "__sub__"
      ]
    ],
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_date2num_dst",
        "dt_tzaware",
        "__sub__"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Transform",
        "__sub__"
      ]
    ]
  ],
  "checkSameFrame": [
    [
      "lib/matplotlib/testing/jpl_units/Duration.py",
      [
        "Duration",
        "checkSameFrame"
      ]
    ]
  ],
  "julianDate": [
    [
      "lib/matplotlib/testing/jpl_units/Epoch.py",
      [
        "Epoch",
        "julianDate"
      ]
    ]
  ],
  "secondsPast": [
    [
      "lib/matplotlib/testing/jpl_units/Epoch.py",
      [
        "Epoch",
        "secondsPast"
      ]
    ]
  ],
  "range": [
    [
      "lib/matplotlib/testing/jpl_units/Epoch.py",
      [
        "Epoch",
        "range"
      ]
    ],
    [
      "lib/matplotlib/testing/jpl_units/UnitDbl.py",
      [
        "UnitDbl",
        "range"
      ]
    ]
  ],
  "float2epoch": [
    [
      "lib/matplotlib/testing/jpl_units/EpochConverter.py",
      [
        "EpochConverter",
        "float2epoch"
      ]
    ]
  ],
  "epoch2float": [
    [
      "lib/matplotlib/testing/jpl_units/EpochConverter.py",
      [
        "EpochConverter",
        "epoch2float"
      ]
    ]
  ],
  "duration2float": [
    [
      "lib/matplotlib/testing/jpl_units/EpochConverter.py",
      [
        "EpochConverter",
        "duration2float"
      ]
    ]
  ],
  "_binop_unit_unit": [
    [
      "lib/matplotlib/testing/jpl_units/UnitDbl.py",
      [
        "UnitDbl",
        "_binop_unit_unit"
      ]
    ]
  ],
  "_binop_unit_scalar": [
    [
      "lib/matplotlib/testing/jpl_units/UnitDbl.py",
      [
        "UnitDbl",
        "_binop_unit_scalar"
      ]
    ]
  ],
  "type": [
    [
      "lib/matplotlib/testing/jpl_units/UnitDbl.py",
      [
        "UnitDbl",
        "type"
      ]
    ]
  ],
  "checkSameUnits": [
    [
      "lib/matplotlib/testing/jpl_units/UnitDbl.py",
      [
        "UnitDbl",
        "checkSameUnits"
      ]
    ]
  ],
  "format_data": [
    [
      "lib/matplotlib/testing/jpl_units/UnitDblFormatter.py",
      [
        "UnitDblFormatter",
        "format_data"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "Formatter",
        "format_data"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "ScalarFormatter",
        "format_data"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "LogFormatter",
        "format_data"
      ]
    ]
  ],
  "get_ax": [
    [
      "lib/matplotlib/testing/widgets.py",
      [
        "get_ax"
      ]
    ]
  ],
  "noop": [
    [
      "lib/matplotlib/testing/widgets.py",
      [
        "noop"
      ]
    ]
  ],
  "mock_event": [
    [
      "lib/matplotlib/testing/widgets.py",
      [
        "mock_event"
      ]
    ]
  ],
  "do_event": [
    [
      "lib/matplotlib/testing/widgets.py",
      [
        "do_event"
      ]
    ]
  ],
  "click_and_drag": [
    [
      "lib/matplotlib/testing/widgets.py",
      [
        "click_and_drag"
      ]
    ]
  ],
  "test_nonascii_str": [
    [
      "lib/matplotlib/tests/test_afm.py",
      [
        "test_nonascii_str"
      ]
    ]
  ],
  "test_parse_header": [
    [
      "lib/matplotlib/tests/test_afm.py",
      [
        "test_parse_header"
      ]
    ]
  ],
  "test_parse_char_metrics": [
    [
      "lib/matplotlib/tests/test_afm.py",
      [
        "test_parse_char_metrics"
      ]
    ]
  ],
  "test_get_familyname_guessed": [
    [
      "lib/matplotlib/tests/test_afm.py",
      [
        "test_get_familyname_guessed"
      ]
    ]
  ],
  "test_font_manager_weight_normalization": [
    [
      "lib/matplotlib/tests/test_afm.py",
      [
        "test_font_manager_weight_normalization"
      ]
    ]
  ],
  "test_bad_afm": [
    [
      "lib/matplotlib/tests/test_afm.py",
      [
        "test_bad_afm"
      ]
    ]
  ],
  "test_malformed_header": [
    [
      "lib/matplotlib/tests/test_afm.py",
      [
        "test_malformed_header"
      ]
    ]
  ],
  "test_repeated_save_with_alpha": [
    [
      "lib/matplotlib/tests/test_agg.py",
      [
        "test_repeated_save_with_alpha"
      ]
    ]
  ],
  "test_large_single_path_collection": [
    [
      "lib/matplotlib/tests/test_agg.py",
      [
        "test_large_single_path_collection"
      ]
    ]
  ],
  "test_marker_with_nan": [
    [
      "lib/matplotlib/tests/test_agg.py",
      [
        "test_marker_with_nan"
      ]
    ]
  ],
  "test_long_path": [
    [
      "lib/matplotlib/tests/test_agg.py",
      [
        "test_long_path"
      ]
    ]
  ],
  "test_agg_filter": [
    [
      "lib/matplotlib/tests/test_agg.py",
      [
        "test_agg_filter"
      ]
    ]
  ],
  "test_too_large_image": [
    [
      "lib/matplotlib/tests/test_agg.py",
      [
        "test_too_large_image"
      ]
    ]
  ],
  "test_chunksize": [
    [
      "lib/matplotlib/tests/test_agg.py",
      [
        "test_chunksize"
      ]
    ]
  ],
  "test_jpeg_dpi": [
    [
      "lib/matplotlib/tests/test_agg.py",
      [
        "test_jpeg_dpi"
      ]
    ]
  ],
  "test_pil_kwargs_png": [
    [
      "lib/matplotlib/tests/test_agg.py",
      [
        "test_pil_kwargs_png"
      ]
    ]
  ],
  "test_pil_kwargs_tiff": [
    [
      "lib/matplotlib/tests/test_agg.py",
      [
        "test_pil_kwargs_tiff"
      ]
    ]
  ],
  "test_pil_kwargs_webp": [
    [
      "lib/matplotlib/tests/test_agg.py",
      [
        "test_pil_kwargs_webp"
      ]
    ]
  ],
  "test_webp_alpha": [
    [
      "lib/matplotlib/tests/test_agg.py",
      [
        "test_webp_alpha"
      ]
    ]
  ],
  "test_draw_path_collection_error_handling": [
    [
      "lib/matplotlib/tests/test_agg.py",
      [
        "test_draw_path_collection_error_handling"
      ]
    ]
  ],
  "test_chunksize_fails": [
    [
      "lib/matplotlib/tests/test_agg.py",
      [
        "test_chunksize_fails"
      ]
    ]
  ],
  "test_non_tuple_rgbaface": [
    [
      "lib/matplotlib/tests/test_agg.py",
      [
        "test_non_tuple_rgbaface"
      ]
    ]
  ],
  "manual_alpha": [
    [
      "lib/matplotlib/tests/test_agg_filter.py",
      [
        "test_agg_filter_alpha",
        "manual_alpha"
      ]
    ]
  ],
  "test_agg_filter_alpha": [
    [
      "lib/matplotlib/tests/test_agg_filter.py",
      [
        "test_agg_filter_alpha"
      ]
    ]
  ],
  "anim": [
    [
      "lib/matplotlib/tests/test_animation.py",
      [
        "anim"
      ]
    ]
  ],
  "test_null_movie_writer": [
    [
      "lib/matplotlib/tests/test_animation.py",
      [
        "test_null_movie_writer"
      ]
    ]
  ],
  "test_animation_delete": [
    [
      "lib/matplotlib/tests/test_animation.py",
      [
        "test_animation_delete"
      ]
    ]
  ],
  "test_movie_writer_dpi_default": [
    [
      "lib/matplotlib/tests/test_animation.py",
      [
        "test_movie_writer_dpi_default"
      ]
    ]
  ],
  "gen_writers": [
    [
      "lib/matplotlib/tests/test_animation.py",
      [
        "gen_writers"
      ]
    ]
  ],
  "test_save_animation_smoketest": [
    [
      "lib/matplotlib/tests/test_animation.py",
      [
        "test_save_animation_smoketest"
      ]
    ]
  ],
  "test_animation_repr_html": [
    [
      "lib/matplotlib/tests/test_animation.py",
      [
        "test_animation_repr_html"
      ]
    ]
  ],
  "test_no_length_frames": [
    [
      "lib/matplotlib/tests/test_animation.py",
      [
        "test_no_length_frames"
      ]
    ]
  ],
  "test_movie_writer_registry": [
    [
      "lib/matplotlib/tests/test_animation.py",
      [
        "test_movie_writer_registry"
      ]
    ]
  ],
  "test_embed_limit": [
    [
      "lib/matplotlib/tests/test_animation.py",
      [
        "test_embed_limit"
      ]
    ]
  ],
  "test_cleanup_temporaries": [
    [
      "lib/matplotlib/tests/test_animation.py",
      [
        "test_cleanup_temporaries"
      ]
    ]
  ],
  "test_failing_ffmpeg": [
    [
      "lib/matplotlib/tests/test_animation.py",
      [
        "test_failing_ffmpeg"
      ]
    ]
  ],
  "frames_generator": [
    [
      "lib/matplotlib/tests/test_animation.py",
      [
        "test_funcanimation_cache_frame_data",
        "frames_generator"
      ]
    ]
  ],
  "test_funcanimation_cache_frame_data": [
    [
      "lib/matplotlib/tests/test_animation.py",
      [
        "test_funcanimation_cache_frame_data"
      ]
    ]
  ],
  "test_draw_frame": [
    [
      "lib/matplotlib/tests/test_animation.py",
      [
        "test_draw_frame"
      ]
    ]
  ],
  "test_exhausted_animation": [
    [
      "lib/matplotlib/tests/test_animation.py",
      [
        "test_exhausted_animation"
      ]
    ]
  ],
  "test_no_frame_warning": [
    [
      "lib/matplotlib/tests/test_animation.py",
      [
        "test_no_frame_warning"
      ]
    ]
  ],
  "test_animation_frame": [
    [
      "lib/matplotlib/tests/test_animation.py",
      [
        "test_animation_frame"
      ]
    ]
  ],
  "test_check_shape": [
    [
      "lib/matplotlib/tests/test_api.py",
      [
        "test_check_shape"
      ]
    ]
  ],
  "test_classproperty_deprecation": [
    [
      "lib/matplotlib/tests/test_api.py",
      [
        "test_classproperty_deprecation"
      ]
    ]
  ],
  "test_deprecate_privatize_attribute": [
    [
      "lib/matplotlib/tests/test_api.py",
      [
        "test_deprecate_privatize_attribute"
      ]
    ]
  ],
  "test_delete_parameter": [
    [
      "lib/matplotlib/tests/test_api.py",
      [
        "test_delete_parameter"
      ]
    ]
  ],
  "test_make_keyword_only": [
    [
      "lib/matplotlib/tests/test_api.py",
      [
        "test_make_keyword_only"
      ]
    ]
  ],
  "test_deprecation_alternative": [
    [
      "lib/matplotlib/tests/test_api.py",
      [
        "test_deprecation_alternative"
      ]
    ]
  ],
  "test_empty_check_in_list": [
    [
      "lib/matplotlib/tests/test_api.py",
      [
        "test_empty_check_in_list"
      ]
    ]
  ],
  "draw_arrow": [
    [
      "lib/matplotlib/tests/test_arrow_patches.py",
      [
        "draw_arrow"
      ]
    ]
  ],
  "test_fancyarrow": [
    [
      "lib/matplotlib/tests/test_arrow_patches.py",
      [
        "test_fancyarrow"
      ]
    ]
  ],
  "test_boxarrow": [
    [
      "lib/matplotlib/tests/test_arrow_patches.py",
      [
        "test_boxarrow"
      ]
    ]
  ],
  "__prepare_fancyarrow_dpi_cor_test": [
    [
      "lib/matplotlib/tests/test_arrow_patches.py",
      [
        "__prepare_fancyarrow_dpi_cor_test"
      ]
    ]
  ],
  "test_fancyarrow_dpi_cor_100dpi": [
    [
      "lib/matplotlib/tests/test_arrow_patches.py",
      [
        "test_fancyarrow_dpi_cor_100dpi"
      ]
    ]
  ],
  "test_fancyarrow_dpi_cor_200dpi": [
    [
      "lib/matplotlib/tests/test_arrow_patches.py",
      [
        "test_fancyarrow_dpi_cor_200dpi"
      ]
    ]
  ],
  "test_fancyarrow_dash": [
    [
      "lib/matplotlib/tests/test_arrow_patches.py",
      [
        "test_fancyarrow_dash"
      ]
    ]
  ],
  "test_arrow_styles": [
    [
      "lib/matplotlib/tests/test_arrow_patches.py",
      [
        "test_arrow_styles"
      ]
    ]
  ],
  "test_connection_styles": [
    [
      "lib/matplotlib/tests/test_arrow_patches.py",
      [
        "test_connection_styles"
      ]
    ]
  ],
  "test_invalid_intersection": [
    [
      "lib/matplotlib/tests/test_arrow_patches.py",
      [
        "test_invalid_intersection"
      ]
    ]
  ],
  "test_patch_transform_of_none": [
    [
      "lib/matplotlib/tests/test_artist.py",
      [
        "test_patch_transform_of_none"
      ]
    ]
  ],
  "test_collection_transform_of_none": [
    [
      "lib/matplotlib/tests/test_artist.py",
      [
        "test_collection_transform_of_none"
      ]
    ]
  ],
  "test_clipping": [
    [
      "lib/matplotlib/tests/test_artist.py",
      [
        "test_clipping"
      ]
    ],
    [
      "lib/matplotlib/tests/test_simplification.py",
      [
        "test_clipping"
      ]
    ]
  ],
  "test_clipping_zoom": [
    [
      "lib/matplotlib/tests/test_artist.py",
      [
        "test_clipping_zoom"
      ]
    ]
  ],
  "test_cull_markers": [
    [
      "lib/matplotlib/tests/test_artist.py",
      [
        "test_cull_markers"
      ]
    ]
  ],
  "test_hatching": [
    [
      "lib/matplotlib/tests/test_artist.py",
      [
        "test_hatching"
      ]
    ],
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_hatching"
      ]
    ]
  ],
  "test_remove": [
    [
      "lib/matplotlib/tests/test_artist.py",
      [
        "test_remove"
      ]
    ]
  ],
  "test_default_edges": [
    [
      "lib/matplotlib/tests/test_artist.py",
      [
        "test_default_edges"
      ]
    ]
  ],
  "test_properties": [
    [
      "lib/matplotlib/tests/test_artist.py",
      [
        "test_properties"
      ]
    ]
  ],
  "test_setp": [
    [
      "lib/matplotlib/tests/test_artist.py",
      [
        "test_setp"
      ]
    ]
  ],
  "test_None_zorder": [
    [
      "lib/matplotlib/tests/test_artist.py",
      [
        "test_None_zorder"
      ]
    ]
  ],
  "test_artist_inspector_get_valid_values": [
    [
      "lib/matplotlib/tests/test_artist.py",
      [
        "test_artist_inspector_get_valid_values"
      ]
    ]
  ],
  "test_artist_inspector_get_aliases": [
    [
      "lib/matplotlib/tests/test_artist.py",
      [
        "test_artist_inspector_get_aliases"
      ]
    ]
  ],
  "test_set_alpha": [
    [
      "lib/matplotlib/tests/test_artist.py",
      [
        "test_set_alpha"
      ]
    ]
  ],
  "test_set_alpha_for_array": [
    [
      "lib/matplotlib/tests/test_artist.py",
      [
        "test_set_alpha_for_array"
      ]
    ]
  ],
  "test_callbacks": [
    [
      "lib/matplotlib/tests/test_artist.py",
      [
        "test_callbacks"
      ]
    ]
  ],
  "test_set_signature": [
    [
      "lib/matplotlib/tests/test_artist.py",
      [
        "test_set_signature"
      ]
    ]
  ],
  "test_set_is_overwritten": [
    [
      "lib/matplotlib/tests/test_artist.py",
      [
        "test_set_is_overwritten"
      ]
    ]
  ],
  "test_format_cursor_data_BoundaryNorm": [
    [
      "lib/matplotlib/tests/test_artist.py",
      [
        "test_format_cursor_data_BoundaryNorm"
      ]
    ]
  ],
  "test_invisible_axes": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_invisible_axes"
      ]
    ],
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_invisible_axes"
      ]
    ]
  ],
  "test_get_labels": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_get_labels"
      ]
    ]
  ],
  "test_repr": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_repr"
      ]
    ],
    [
      "lib/matplotlib/tests/test_gridspec.py",
      [
        "test_repr"
      ]
    ]
  ],
  "test_label_loc_vertical": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_label_loc_vertical"
      ]
    ]
  ],
  "test_label_loc_horizontal": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_label_loc_horizontal"
      ]
    ]
  ],
  "test_label_loc_rc": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_label_loc_rc"
      ]
    ]
  ],
  "test_label_shift": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_label_shift"
      ]
    ]
  ],
  "test_acorr": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_acorr"
      ]
    ]
  ],
  "test_spy": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_spy"
      ]
    ]
  ],
  "test_spy_invalid_kwargs": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_spy_invalid_kwargs"
      ]
    ]
  ],
  "test_matshow": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_matshow"
      ]
    ]
  ],
  "test_formatter_ticker": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_formatter_ticker"
      ]
    ]
  ],
  "test_funcformatter_auto_formatter": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_funcformatter_auto_formatter"
      ]
    ]
  ],
  "test_strmethodformatter_auto_formatter": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_strmethodformatter_auto_formatter"
      ]
    ]
  ],
  "test_twin_axis_locators_formatters": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_twin_axis_locators_formatters"
      ]
    ]
  ],
  "test_twinx_cla": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_twinx_cla"
      ]
    ]
  ],
  "test_twin_logscale": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_twin_logscale"
      ]
    ]
  ],
  "test_twinx_axis_scales": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_twinx_axis_scales"
      ]
    ]
  ],
  "test_twin_inherit_autoscale_setting": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_twin_inherit_autoscale_setting"
      ]
    ]
  ],
  "test_inverted_cla": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_inverted_cla"
      ]
    ],
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_inverted_cla"
      ]
    ]
  ],
  "test_subclass_clear_cla": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_subclass_clear_cla"
      ]
    ]
  ],
  "test_cla_not_redefined_internally": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_cla_not_redefined_internally"
      ]
    ]
  ],
  "test_minorticks_on_rcParams_both": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_minorticks_on_rcParams_both"
      ]
    ]
  ],
  "test_autoscale_tiny_range": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_autoscale_tiny_range"
      ]
    ]
  ],
  "test_autoscale_tight": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_autoscale_tight"
      ]
    ]
  ],
  "test_autoscale_log_shared": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_autoscale_log_shared"
      ]
    ]
  ],
  "test_use_sticky_edges": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_use_sticky_edges"
      ]
    ]
  ],
  "test_sticky_shared_axes": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_sticky_shared_axes"
      ]
    ]
  ],
  "test_basic_annotate": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_basic_annotate"
      ]
    ]
  ],
  "test_arrow_simple": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_arrow_simple"
      ]
    ]
  ],
  "test_arrow_empty": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_arrow_empty"
      ]
    ]
  ],
  "test_arrow_in_view": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_arrow_in_view"
      ]
    ]
  ],
  "test_annotate_default_arrow": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_annotate_default_arrow"
      ]
    ]
  ],
  "test_annotate_signature": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_annotate_signature"
      ]
    ]
  ],
  "test_fill_units": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_fill_units"
      ]
    ]
  ],
  "test_plot_format_kwarg_redundant": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_plot_format_kwarg_redundant"
      ]
    ]
  ],
  "test_errorbar_dashes": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_errorbar_dashes"
      ]
    ]
  ],
  "test_single_point": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_single_point"
      ]
    ]
  ],
  "test_single_date": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_single_date"
      ]
    ]
  ],
  "test_shaped_data": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_shaped_data"
      ]
    ]
  ],
  "test_structured_data": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_structured_data"
      ]
    ]
  ],
  "test_aitoff_proj": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_aitoff_proj"
      ]
    ]
  ],
  "test_axvspan_epoch": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_axvspan_epoch"
      ]
    ]
  ],
  "test_axhspan_epoch": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_axhspan_epoch"
      ]
    ]
  ],
  "test_hexbin_extent": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hexbin_extent"
      ]
    ]
  ],
  "test_hexbin_empty": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hexbin_empty"
      ]
    ]
  ],
  "test_hexbin_pickable": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hexbin_pickable"
      ]
    ]
  ],
  "test_hexbin_log": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hexbin_log"
      ]
    ]
  ],
  "test_hexbin_linear": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hexbin_linear"
      ]
    ]
  ],
  "test_hexbin_log_clim": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hexbin_log_clim"
      ]
    ]
  ],
  "test_inverted_limits": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_inverted_limits"
      ]
    ]
  ],
  "test_nonfinite_limits": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_nonfinite_limits"
      ]
    ]
  ],
  "test_limits_empty_data": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_limits_empty_data"
      ]
    ]
  ],
  "test_imshow": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_imshow"
      ]
    ],
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_imshow"
      ]
    ]
  ],
  "test_imshow_clip": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_imshow_clip"
      ]
    ]
  ],
  "test_imshow_norm_vminvmax": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_imshow_norm_vminvmax"
      ]
    ]
  ],
  "test_polycollection_joinstyle": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_polycollection_joinstyle"
      ]
    ]
  ],
  "test_fill_between_input": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_fill_between_input"
      ]
    ]
  ],
  "test_fill_betweenx_input": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_fill_betweenx_input"
      ]
    ]
  ],
  "test_fill_between_interpolate": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_fill_between_interpolate"
      ]
    ]
  ],
  "test_fill_between_interpolate_decreasing": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_fill_between_interpolate_decreasing"
      ]
    ]
  ],
  "test_fill_between_interpolate_nan": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_fill_between_interpolate_nan"
      ]
    ]
  ],
  "test_symlog": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_symlog"
      ]
    ]
  ],
  "test_symlog2": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_symlog2"
      ]
    ]
  ],
  "test_pcolorargs_5205": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pcolorargs_5205"
      ]
    ]
  ],
  "test_pcolormesh": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pcolormesh"
      ]
    ]
  ],
  "test_pcolormesh_small": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pcolormesh_small"
      ]
    ]
  ],
  "test_pcolormesh_alpha": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pcolormesh_alpha"
      ]
    ]
  ],
  "test_pcolormesh_datetime_axis": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pcolormesh_datetime_axis"
      ]
    ]
  ],
  "test_pcolor_datetime_axis": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pcolor_datetime_axis"
      ]
    ]
  ],
  "test_pcolorargs": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pcolorargs"
      ]
    ]
  ],
  "test_pcolornearest": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pcolornearest"
      ]
    ]
  ],
  "test_pcolornearestunits": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pcolornearestunits"
      ]
    ]
  ],
  "test_pcolorflaterror": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pcolorflaterror"
      ]
    ]
  ],
  "test_pcolorauto": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pcolorauto"
      ]
    ]
  ],
  "test_canonical": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_canonical"
      ]
    ]
  ],
  "test_arc_angles": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_arc_angles"
      ]
    ]
  ],
  "test_arc_ellipse": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_arc_ellipse"
      ]
    ]
  ],
  "test_marker_as_markerstyle": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_marker_as_markerstyle"
      ]
    ],
    [
      "lib/matplotlib/tests/test_lines.py",
      [
        "test_marker_as_markerstyle"
      ]
    ]
  ],
  "test_markevery": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_markevery"
      ]
    ],
    [
      "lib/matplotlib/tests/test_lines.py",
      [
        "test_markevery"
      ]
    ]
  ],
  "test_markevery_line": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_markevery_line"
      ]
    ]
  ],
  "test_markevery_linear_scales": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_markevery_linear_scales"
      ]
    ]
  ],
  "test_markevery_linear_scales_zoomed": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_markevery_linear_scales_zoomed"
      ]
    ]
  ],
  "test_markevery_log_scales": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_markevery_log_scales"
      ]
    ]
  ],
  "test_markevery_polar": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_markevery_polar"
      ]
    ]
  ],
  "test_markevery_linear_scales_nans": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_markevery_linear_scales_nans"
      ]
    ]
  ],
  "test_marker_edges": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_marker_edges"
      ]
    ]
  ],
  "test_bar_tick_label_single": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_tick_label_single"
      ]
    ]
  ],
  "test_nan_bar_values": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_nan_bar_values"
      ]
    ]
  ],
  "test_bar_ticklabel_fail": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_ticklabel_fail"
      ]
    ]
  ],
  "test_bar_tick_label_multiple": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_tick_label_multiple"
      ]
    ]
  ],
  "test_bar_tick_label_multiple_old_alignment": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_tick_label_multiple_old_alignment"
      ]
    ]
  ],
  "test_bar_decimal_center": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_decimal_center"
      ]
    ]
  ],
  "test_barh_decimal_center": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_barh_decimal_center"
      ]
    ]
  ],
  "test_bar_decimal_width": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_decimal_width"
      ]
    ]
  ],
  "test_barh_decimal_height": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_barh_decimal_height"
      ]
    ]
  ],
  "test_bar_color_none_alpha": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_color_none_alpha"
      ]
    ]
  ],
  "test_bar_edgecolor_none_alpha": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_edgecolor_none_alpha"
      ]
    ]
  ],
  "test_barh_tick_label": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_barh_tick_label"
      ]
    ]
  ],
  "test_bar_timedelta": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_timedelta"
      ]
    ]
  ],
  "test_boxplot_dates_pandas": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_boxplot_dates_pandas"
      ]
    ]
  ],
  "test_boxplot_capwidths": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_boxplot_capwidths"
      ]
    ]
  ],
  "test_pcolor_regression": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pcolor_regression"
      ]
    ]
  ],
  "test_bar_pandas": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_pandas"
      ]
    ]
  ],
  "test_bar_pandas_indexed": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_pandas_indexed"
      ]
    ]
  ],
  "test_bar_hatches": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_hatches"
      ]
    ]
  ],
  "test_bar_labels": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_labels"
      ]
    ]
  ],
  "test_bar_labels_length": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_labels_length"
      ]
    ]
  ],
  "test_pandas_minimal_plot": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pandas_minimal_plot"
      ]
    ]
  ],
  "test_hist_log": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_log"
      ]
    ]
  ],
  "test_hist_log_2": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_log_2"
      ]
    ]
  ],
  "test_hist_log_barstacked": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_log_barstacked"
      ]
    ]
  ],
  "test_hist_bar_empty": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_bar_empty"
      ]
    ]
  ],
  "test_hist_float16": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_float16"
      ]
    ]
  ],
  "test_hist_step_empty": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_step_empty"
      ]
    ]
  ],
  "test_hist_step_filled": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_step_filled"
      ]
    ]
  ],
  "test_hist_density": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_density"
      ]
    ]
  ],
  "test_hist_unequal_bins_density": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_unequal_bins_density"
      ]
    ]
  ],
  "test_hist_datetime_datasets": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_datetime_datasets"
      ]
    ]
  ],
  "test_hist_datetime_datasets_bins": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_datetime_datasets_bins"
      ]
    ]
  ],
  "test_hist_with_empty_input": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_with_empty_input"
      ]
    ]
  ],
  "test_hist_zorder": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_zorder"
      ]
    ]
  ],
  "test_stairs": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_stairs"
      ]
    ]
  ],
  "test_stairs_fill": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_stairs_fill"
      ]
    ]
  ],
  "test_stairs_update": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_stairs_update"
      ]
    ]
  ],
  "test_stairs_baseline_0": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_stairs_baseline_0"
      ]
    ]
  ],
  "test_stairs_empty": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_stairs_empty"
      ]
    ]
  ],
  "test_stairs_invalid_nan": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_stairs_invalid_nan"
      ]
    ]
  ],
  "test_stairs_invalid_mismatch": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_stairs_invalid_mismatch"
      ]
    ]
  ],
  "test_stairs_invalid_update": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_stairs_invalid_update"
      ]
    ]
  ],
  "test_stairs_invalid_update2": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_stairs_invalid_update2"
      ]
    ]
  ],
  "test_stairs_options": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_stairs_options"
      ]
    ]
  ],
  "test_stairs_datetime": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_stairs_datetime"
      ]
    ]
  ],
  "test_stairs_edge_handling": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_stairs_edge_handling"
      ]
    ]
  ],
  "contour_dat": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "contour_dat"
      ]
    ]
  ],
  "test_contour_hatching": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_contour_hatching"
      ]
    ]
  ],
  "test_contour_colorbar": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_contour_colorbar"
      ]
    ],
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_contour_colorbar"
      ]
    ]
  ],
  "test_hist2d": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist2d"
      ]
    ]
  ],
  "test_hist2d_transpose": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist2d_transpose"
      ]
    ]
  ],
  "test_hist2d_density": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist2d_density"
      ]
    ]
  ],
  "test_scatter_plot": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "TestScatter",
        "test_scatter_plot"
      ]
    ]
  ],
  "test_scatter_marker": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "TestScatter",
        "test_scatter_marker"
      ]
    ]
  ],
  "test_scatter_2D": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "TestScatter",
        "test_scatter_2D"
      ]
    ]
  ],
  "test_scatter_decimal": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "TestScatter",
        "test_scatter_decimal"
      ]
    ]
  ],
  "test_scatter_color": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "TestScatter",
        "test_scatter_color"
      ]
    ]
  ],
  "test_scatter_color_warning": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "TestScatter",
        "test_scatter_color_warning"
      ]
    ]
  ],
  "test_scatter_unfilled": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "TestScatter",
        "test_scatter_unfilled"
      ]
    ]
  ],
  "test_scatter_unfillable": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "TestScatter",
        "test_scatter_unfillable"
      ]
    ]
  ],
  "test_scatter_size_arg_size": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "TestScatter",
        "test_scatter_size_arg_size"
      ]
    ]
  ],
  "test_scatter_edgecolor_RGB": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "TestScatter",
        "test_scatter_edgecolor_RGB"
      ]
    ]
  ],
  "test_scatter_invalid_color": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "TestScatter",
        "test_scatter_invalid_color"
      ]
    ]
  ],
  "test_scatter_no_invalid_color": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "TestScatter",
        "test_scatter_no_invalid_color"
      ]
    ]
  ],
  "test_scatter_norm_vminvmax": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "TestScatter",
        "test_scatter_norm_vminvmax"
      ]
    ]
  ],
  "test_scatter_single_point": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "TestScatter",
        "test_scatter_single_point"
      ]
    ]
  ],
  "test_scatter_different_shapes": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "TestScatter",
        "test_scatter_different_shapes"
      ]
    ]
  ],
  "test_scatter_c": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "TestScatter",
        "test_scatter_c"
      ]
    ]
  ],
  "test_scatter_single_color_c": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "TestScatter",
        "test_scatter_single_color_c"
      ]
    ]
  ],
  "test_scatter_linewidths": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "TestScatter",
        "test_scatter_linewidths"
      ]
    ]
  ],
  "_params": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "_params"
      ]
    ]
  ],
  "test_parse_scatter_color_args": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_parse_scatter_color_args"
      ]
    ]
  ],
  "test_parse_scatter_color_args_edgecolors": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_parse_scatter_color_args_edgecolors"
      ]
    ]
  ],
  "test_parse_scatter_color_args_error": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_parse_scatter_color_args_error"
      ]
    ]
  ],
  "test_as_mpl_axes_api": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_as_mpl_axes_api"
      ]
    ]
  ],
  "test_pyplot_axes": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pyplot_axes"
      ]
    ]
  ],
  "test_log_scales": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_log_scales"
      ]
    ],
    [
      "lib/matplotlib/tests/test_scale.py",
      [
        "test_log_scales"
      ]
    ]
  ],
  "test_log_scales_no_data": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_log_scales_no_data"
      ]
    ]
  ],
  "test_log_scales_invalid": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_log_scales_invalid"
      ]
    ]
  ],
  "test_stackplot": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_stackplot"
      ]
    ]
  ],
  "test_stackplot_baseline": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_stackplot_baseline"
      ]
    ]
  ],
  "_bxp_test_helper": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "_bxp_test_helper"
      ]
    ]
  ],
  "test_bxp_baseline": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bxp_baseline"
      ]
    ]
  ],
  "test_bxp_rangewhis": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bxp_rangewhis"
      ]
    ]
  ],
  "test_bxp_percentilewhis": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bxp_percentilewhis"
      ]
    ]
  ],
  "test_bxp_with_xlabels": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bxp_with_xlabels"
      ]
    ]
  ],
  "test_bxp_horizontal": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bxp_horizontal"
      ]
    ]
  ],
  "test_bxp_with_ylabels": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bxp_with_ylabels"
      ]
    ]
  ],
  "test_bxp_patchartist": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bxp_patchartist"
      ]
    ]
  ],
  "test_bxp_custompatchartist": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bxp_custompatchartist"
      ]
    ]
  ],
  "test_bxp_customoutlier": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bxp_customoutlier"
      ]
    ]
  ],
  "test_bxp_showcustommean": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bxp_showcustommean"
      ]
    ]
  ],
  "test_bxp_custombox": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bxp_custombox"
      ]
    ]
  ],
  "test_bxp_custommedian": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bxp_custommedian"
      ]
    ]
  ],
  "test_bxp_customcap": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bxp_customcap"
      ]
    ]
  ],
  "test_bxp_customwhisker": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bxp_customwhisker"
      ]
    ]
  ],
  "test_bxp_shownotches": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bxp_shownotches"
      ]
    ]
  ],
  "test_bxp_nocaps": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bxp_nocaps"
      ]
    ]
  ],
  "test_bxp_nobox": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bxp_nobox"
      ]
    ]
  ],
  "test_bxp_no_flier_stats": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bxp_no_flier_stats"
      ]
    ]
  ],
  "test_bxp_showmean": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bxp_showmean"
      ]
    ]
  ],
  "test_bxp_showmeanasline": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bxp_showmeanasline"
      ]
    ]
  ],
  "test_bxp_scalarwidth": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bxp_scalarwidth"
      ]
    ]
  ],
  "test_bxp_customwidths": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bxp_customwidths"
      ]
    ]
  ],
  "test_bxp_custompositions": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bxp_custompositions"
      ]
    ]
  ],
  "test_bxp_bad_widths": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bxp_bad_widths"
      ]
    ]
  ],
  "test_bxp_bad_positions": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bxp_bad_positions"
      ]
    ]
  ],
  "test_bxp_custom_capwidths": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bxp_custom_capwidths"
      ]
    ]
  ],
  "test_bxp_custom_capwidth": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bxp_custom_capwidth"
      ]
    ]
  ],
  "test_bxp_bad_capwidths": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bxp_bad_capwidths"
      ]
    ]
  ],
  "test_boxplot": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_boxplot"
      ]
    ]
  ],
  "test_boxplot_custom_capwidths": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_boxplot_custom_capwidths"
      ]
    ]
  ],
  "test_boxplot_sym2": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_boxplot_sym2"
      ]
    ]
  ],
  "test_boxplot_sym": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_boxplot_sym"
      ]
    ]
  ],
  "test_boxplot_autorange_whiskers": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_boxplot_autorange_whiskers"
      ]
    ]
  ],
  "_rc_test_bxp_helper": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "_rc_test_bxp_helper"
      ]
    ]
  ],
  "test_boxplot_rc_parameters": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_boxplot_rc_parameters"
      ]
    ]
  ],
  "test_boxplot_with_CIarray": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_boxplot_with_CIarray"
      ]
    ]
  ],
  "test_boxplot_no_weird_whisker": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_boxplot_no_weird_whisker"
      ]
    ]
  ],
  "test_boxplot_bad_medians": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_boxplot_bad_medians"
      ]
    ]
  ],
  "test_boxplot_bad_ci": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_boxplot_bad_ci"
      ]
    ]
  ],
  "test_boxplot_zorder": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_boxplot_zorder"
      ]
    ]
  ],
  "test_boxplot_marker_behavior": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_boxplot_marker_behavior"
      ]
    ]
  ],
  "test_boxplot_mod_artist_after_plotting": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_boxplot_mod_artist_after_plotting"
      ]
    ]
  ],
  "test_vert_violinplot_baseline": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_vert_violinplot_baseline"
      ]
    ]
  ],
  "test_vert_violinplot_showmeans": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_vert_violinplot_showmeans"
      ]
    ]
  ],
  "test_vert_violinplot_showextrema": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_vert_violinplot_showextrema"
      ]
    ]
  ],
  "test_vert_violinplot_showmedians": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_vert_violinplot_showmedians"
      ]
    ]
  ],
  "test_vert_violinplot_showall": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_vert_violinplot_showall"
      ]
    ]
  ],
  "test_vert_violinplot_custompoints_10": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_vert_violinplot_custompoints_10"
      ]
    ]
  ],
  "test_vert_violinplot_custompoints_200": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_vert_violinplot_custompoints_200"
      ]
    ]
  ],
  "test_horiz_violinplot_baseline": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_horiz_violinplot_baseline"
      ]
    ]
  ],
  "test_horiz_violinplot_showmedians": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_horiz_violinplot_showmedians"
      ]
    ]
  ],
  "test_horiz_violinplot_showmeans": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_horiz_violinplot_showmeans"
      ]
    ]
  ],
  "test_horiz_violinplot_showextrema": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_horiz_violinplot_showextrema"
      ]
    ]
  ],
  "test_horiz_violinplot_showall": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_horiz_violinplot_showall"
      ]
    ]
  ],
  "test_horiz_violinplot_custompoints_10": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_horiz_violinplot_custompoints_10"
      ]
    ]
  ],
  "test_horiz_violinplot_custompoints_200": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_horiz_violinplot_custompoints_200"
      ]
    ]
  ],
  "test_violinplot_bad_positions": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_violinplot_bad_positions"
      ]
    ]
  ],
  "test_violinplot_bad_widths": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_violinplot_bad_widths"
      ]
    ]
  ],
  "test_violinplot_bad_quantiles": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_violinplot_bad_quantiles"
      ]
    ]
  ],
  "test_violinplot_outofrange_quantiles": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_violinplot_outofrange_quantiles"
      ]
    ]
  ],
  "test_violinplot_single_list_quantiles": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_violinplot_single_list_quantiles"
      ]
    ]
  ],
  "test_violinplot_pandas_series": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_violinplot_pandas_series"
      ]
    ]
  ],
  "test_manage_xticks": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_manage_xticks"
      ]
    ]
  ],
  "test_boxplot_not_single": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_boxplot_not_single"
      ]
    ]
  ],
  "test_tick_space_size_0": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_tick_space_size_0"
      ]
    ]
  ],
  "test_errorbar": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_errorbar"
      ]
    ]
  ],
  "test_mixed_errorbar_polar_caps": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_mixed_errorbar_polar_caps"
      ]
    ]
  ],
  "test_errorbar_colorcycle": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_errorbar_colorcycle"
      ]
    ]
  ],
  "test_errorbar_cycle_ecolor": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_errorbar_cycle_ecolor"
      ]
    ]
  ],
  "test_errorbar_shape": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_errorbar_shape"
      ]
    ]
  ],
  "test_errorbar_limits": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_errorbar_limits"
      ]
    ]
  ],
  "test_errorbar_nonefmt": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_errorbar_nonefmt"
      ]
    ]
  ],
  "test_errorbar_line_specific_kwargs": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_errorbar_line_specific_kwargs"
      ]
    ]
  ],
  "test_errorbar_with_prop_cycle": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_errorbar_with_prop_cycle"
      ]
    ]
  ],
  "test_errorbar_every_invalid": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_errorbar_every_invalid"
      ]
    ]
  ],
  "test_xerr_yerr_not_negative": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_xerr_yerr_not_negative"
      ]
    ]
  ],
  "test_errorbar_every": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_errorbar_every"
      ]
    ]
  ],
  "test_errorbar_linewidth_type": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_errorbar_linewidth_type"
      ]
    ]
  ],
  "test_errorbar_nan": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_errorbar_nan"
      ]
    ]
  ],
  "test_hist_stacked_stepfilled": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_stacked_stepfilled"
      ]
    ]
  ],
  "test_hist_offset": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_offset"
      ]
    ]
  ],
  "test_hist_step": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_step"
      ]
    ]
  ],
  "test_hist_step_horiz": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_step_horiz"
      ]
    ]
  ],
  "test_hist_stacked_weighted": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_stacked_weighted"
      ]
    ]
  ],
  "test_stem": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_stem"
      ]
    ]
  ],
  "test_stem_args": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_stem_args"
      ]
    ]
  ],
  "_assert_equal": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_stem_markerfmt",
        "_assert_equal"
      ]
    ]
  ],
  "test_stem_markerfmt": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_stem_markerfmt"
      ]
    ]
  ],
  "test_stem_dates": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_stem_dates"
      ]
    ]
  ],
  "test_stem_orientation": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_stem_orientation"
      ]
    ]
  ],
  "test_hist_stacked_stepfilled_alpha": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_stacked_stepfilled_alpha"
      ]
    ]
  ],
  "test_hist_stacked_step": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_stacked_step"
      ]
    ]
  ],
  "test_hist_stacked_density": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_stacked_density"
      ]
    ]
  ],
  "test_hist_step_bottom": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_step_bottom"
      ]
    ]
  ],
  "test_hist_stepfilled_geometry": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_stepfilled_geometry"
      ]
    ]
  ],
  "test_hist_step_geometry": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_step_geometry"
      ]
    ]
  ],
  "test_hist_stepfilled_bottom_geometry": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_stepfilled_bottom_geometry"
      ]
    ]
  ],
  "test_hist_step_bottom_geometry": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_step_bottom_geometry"
      ]
    ]
  ],
  "test_hist_stacked_stepfilled_geometry": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_stacked_stepfilled_geometry"
      ]
    ]
  ],
  "test_hist_stacked_step_geometry": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_stacked_step_geometry"
      ]
    ]
  ],
  "test_hist_stacked_stepfilled_bottom_geometry": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_stacked_stepfilled_bottom_geometry"
      ]
    ]
  ],
  "test_hist_stacked_step_bottom_geometry": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_stacked_step_bottom_geometry"
      ]
    ]
  ],
  "test_hist_stacked_bar": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_stacked_bar"
      ]
    ]
  ],
  "test_hist_barstacked_bottom_unchanged": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_barstacked_bottom_unchanged"
      ]
    ]
  ],
  "test_hist_emptydata": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_emptydata"
      ]
    ]
  ],
  "test_hist_labels": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_labels"
      ]
    ]
  ],
  "test_transparent_markers": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_transparent_markers"
      ]
    ]
  ],
  "test_rgba_markers": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_rgba_markers"
      ]
    ]
  ],
  "test_mollweide_grid": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_mollweide_grid"
      ]
    ]
  ],
  "test_mollweide_forward_inverse_closure": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_mollweide_forward_inverse_closure"
      ]
    ]
  ],
  "test_mollweide_inverse_forward_closure": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_mollweide_inverse_forward_closure"
      ]
    ]
  ],
  "test_alpha": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_alpha"
      ]
    ],
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_alpha"
      ]
    ],
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "TestVoxels",
        "test_alpha"
      ]
    ]
  ],
  "test_eventplot": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_eventplot"
      ]
    ]
  ],
  "test_eventplot_defaults": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_eventplot_defaults"
      ]
    ]
  ],
  "test_eventplot_colors": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_eventplot_colors"
      ]
    ]
  ],
  "test_eventplot_problem_kwargs": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_eventplot_problem_kwargs"
      ]
    ]
  ],
  "test_empty_eventplot": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_empty_eventplot"
      ]
    ]
  ],
  "test_eventplot_orientation": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_eventplot_orientation"
      ]
    ]
  ],
  "test_eventplot_units_list": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_eventplot_units_list"
      ]
    ]
  ],
  "test_marker_styles": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_marker_styles"
      ]
    ]
  ],
  "test_markers_fillstyle_rcparams": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_markers_fillstyle_rcparams"
      ]
    ]
  ],
  "test_vertex_markers": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_vertex_markers"
      ]
    ]
  ],
  "test_eb_line_zorder": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_eb_line_zorder"
      ]
    ]
  ],
  "test_axline_loglog": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_axline_loglog"
      ]
    ]
  ],
  "test_axline": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_axline"
      ]
    ]
  ],
  "test_axline_transaxes": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_axline_transaxes"
      ]
    ]
  ],
  "test_axline_transaxes_panzoom": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_axline_transaxes_panzoom"
      ]
    ]
  ],
  "test_axline_args": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_axline_args"
      ]
    ]
  ],
  "test_vlines": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_vlines"
      ]
    ]
  ],
  "test_vlines_default": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_vlines_default"
      ]
    ]
  ],
  "test_hlines": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hlines"
      ]
    ]
  ],
  "test_hlines_default": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hlines_default"
      ]
    ]
  ],
  "test_lines_with_colors": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_lines_with_colors"
      ]
    ]
  ],
  "test_step_linestyle": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_step_linestyle"
      ]
    ]
  ],
  "test_mixed_collection": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_mixed_collection"
      ]
    ]
  ],
  "test_subplot_key_hash": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_subplot_key_hash"
      ]
    ]
  ],
  "test_specgram": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_specgram"
      ]
    ],
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestSpectral",
        "test_specgram"
      ]
    ]
  ],
  "test_specgram_magnitude": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_specgram_magnitude"
      ]
    ]
  ],
  "test_specgram_angle": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_specgram_angle"
      ]
    ]
  ],
  "test_specgram_fs_none": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_specgram_fs_none"
      ]
    ]
  ],
  "test_specgram_origin_rcparam": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_specgram_origin_rcparam"
      ]
    ]
  ],
  "test_specgram_origin_kwarg": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_specgram_origin_kwarg"
      ]
    ]
  ],
  "test_psd_csd": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_psd_csd"
      ]
    ]
  ],
  "test_spectrum": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_spectrum"
      ]
    ],
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestSpectral",
        "test_spectrum"
      ]
    ]
  ],
  "test_psd_csd_edge_cases": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_psd_csd_edge_cases"
      ]
    ]
  ],
  "test_twin_remove": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_twin_remove"
      ]
    ]
  ],
  "make_patch_spines_invisible": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_twin_spines",
        "make_patch_spines_invisible"
      ]
    ]
  ],
  "test_twin_spines": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_twin_spines"
      ]
    ]
  ],
  "test_twin_spines_on_top": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_twin_spines_on_top"
      ]
    ]
  ],
  "test_rcparam_grid_minor": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_rcparam_grid_minor"
      ]
    ]
  ],
  "test_grid": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_grid"
      ]
    ]
  ],
  "test_reset_grid": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_reset_grid"
      ]
    ]
  ],
  "test_reset_ticks": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_reset_ticks"
      ]
    ]
  ],
  "test_vline_limit": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_vline_limit"
      ]
    ]
  ],
  "test_axline_minmax": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_axline_minmax"
      ]
    ]
  ],
  "test_empty_shared_subplots": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_empty_shared_subplots"
      ]
    ]
  ],
  "test_shared_with_aspect_1": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_shared_with_aspect_1"
      ]
    ]
  ],
  "test_shared_with_aspect_2": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_shared_with_aspect_2"
      ]
    ]
  ],
  "test_shared_with_aspect_3": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_shared_with_aspect_3"
      ]
    ]
  ],
  "test_shared_aspect_error": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_shared_aspect_error"
      ]
    ]
  ],
  "test_axis_errors": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_axis_errors"
      ]
    ]
  ],
  "test_axis_method_errors": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_axis_method_errors"
      ]
    ]
  ],
  "test_twin_with_aspect": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_twin_with_aspect"
      ]
    ]
  ],
  "test_relim_visible_only": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_relim_visible_only"
      ]
    ]
  ],
  "test_text_labelsize": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_text_labelsize"
      ]
    ]
  ],
  "test_pie_default": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pie_default"
      ]
    ]
  ],
  "test_pie_linewidth_0": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pie_linewidth_0"
      ]
    ]
  ],
  "test_pie_center_radius": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pie_center_radius"
      ]
    ]
  ],
  "test_pie_linewidth_2": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pie_linewidth_2"
      ]
    ]
  ],
  "test_pie_ccw_true": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pie_ccw_true"
      ]
    ]
  ],
  "test_pie_frame_grid": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pie_frame_grid"
      ]
    ]
  ],
  "test_pie_rotatelabels_true": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pie_rotatelabels_true"
      ]
    ]
  ],
  "test_pie_nolabel_but_legend": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pie_nolabel_but_legend"
      ]
    ]
  ],
  "test_pie_textprops": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pie_textprops"
      ]
    ]
  ],
  "test_pie_get_negative_values": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pie_get_negative_values"
      ]
    ]
  ],
  "test_normalize_kwarg_pie": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_normalize_kwarg_pie"
      ]
    ]
  ],
  "test_set_get_ticklabels": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_set_get_ticklabels"
      ]
    ]
  ],
  "test_set_ticks_with_labels": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_set_ticks_with_labels"
      ]
    ]
  ],
  "test_set_noniterable_ticklabels": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_set_noniterable_ticklabels"
      ]
    ]
  ],
  "test_subsampled_ticklabels": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_subsampled_ticklabels"
      ]
    ]
  ],
  "test_mismatched_ticklabels": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_mismatched_ticklabels"
      ]
    ]
  ],
  "test_empty_ticks_fixed_loc": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_empty_ticks_fixed_loc"
      ]
    ]
  ],
  "test_retain_tick_visibility": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_retain_tick_visibility"
      ]
    ]
  ],
  "test_tick_label_update": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_tick_label_update"
      ]
    ]
  ],
  "test_o_marker_path_snap": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_o_marker_path_snap"
      ]
    ]
  ],
  "test_margins": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_margins"
      ]
    ],
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_margins"
      ]
    ]
  ],
  "test_set_margin_updates_limits": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_set_margin_updates_limits"
      ]
    ]
  ],
  "test_margins_errors": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_margins_errors"
      ]
    ],
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_margins_errors"
      ]
    ]
  ],
  "test_length_one_hist": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_length_one_hist"
      ]
    ]
  ],
  "test_set_xy_bound": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_set_xy_bound"
      ]
    ]
  ],
  "test_pathological_hexbin": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pathological_hexbin"
      ]
    ]
  ],
  "test_color_None": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_color_None"
      ]
    ]
  ],
  "test_color_alias": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_color_alias"
      ]
    ]
  ],
  "test_numerical_hist_label": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_numerical_hist_label"
      ]
    ]
  ],
  "test_unicode_hist_label": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_unicode_hist_label"
      ]
    ]
  ],
  "test_move_offsetlabel": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_move_offsetlabel"
      ]
    ]
  ],
  "test_rc_spines": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_rc_spines"
      ]
    ]
  ],
  "test_rc_grid": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_rc_grid"
      ]
    ]
  ],
  "test_rc_tick": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_rc_tick"
      ]
    ]
  ],
  "test_rc_major_minor_tick": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_rc_major_minor_tick"
      ]
    ]
  ],
  "test_square_plot": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_square_plot"
      ]
    ]
  ],
  "test_bad_plot_args": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bad_plot_args"
      ]
    ]
  ],
  "test_pcolorfast": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pcolorfast"
      ]
    ]
  ],
  "test_shared_scale": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_shared_scale"
      ]
    ]
  ],
  "test_shared_bool": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_shared_bool"
      ]
    ]
  ],
  "test_violin_point_mass": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_violin_point_mass"
      ]
    ]
  ],
  "generate_errorbar_inputs": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "generate_errorbar_inputs"
      ]
    ]
  ],
  "test_errorbar_inputs_shotgun": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_errorbar_inputs_shotgun"
      ]
    ]
  ],
  "test_dash_offset": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_dash_offset"
      ]
    ]
  ],
  "test_title_pad": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_title_pad"
      ]
    ]
  ],
  "test_title_location_roundtrip": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_title_location_roundtrip"
      ]
    ]
  ],
  "test_title_location_shared": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_title_location_shared"
      ]
    ]
  ],
  "test_loglog": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_loglog"
      ]
    ]
  ],
  "test_loglog_nonpos": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_loglog_nonpos"
      ]
    ]
  ],
  "test_axes_margins": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_axes_margins"
      ]
    ]
  ],
  "shared_axis_remover": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "shared_axis_remover"
      ]
    ]
  ],
  "shared_axes_generator": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "shared_axes_generator"
      ]
    ]
  ],
  "test_remove_shared_axes": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_remove_shared_axes"
      ]
    ]
  ],
  "test_remove_shared_axes_relim": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_remove_shared_axes_relim"
      ]
    ]
  ],
  "test_shared_axes_autoscale": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_shared_axes_autoscale"
      ]
    ]
  ],
  "test_adjust_numtick_aspect": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_adjust_numtick_aspect"
      ]
    ]
  ],
  "test_auto_numticks": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_auto_numticks"
      ]
    ]
  ],
  "test_auto_numticks_log": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_auto_numticks_log"
      ]
    ]
  ],
  "test_broken_barh_empty": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_broken_barh_empty"
      ]
    ]
  ],
  "test_broken_barh_timedelta": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_broken_barh_timedelta"
      ]
    ]
  ],
  "test_pandas_pcolormesh": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pandas_pcolormesh"
      ]
    ]
  ],
  "test_pandas_indexing_dates": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pandas_indexing_dates"
      ]
    ]
  ],
  "test_pandas_errorbar_indexing": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pandas_errorbar_indexing"
      ]
    ]
  ],
  "test_pandas_index_shape": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pandas_index_shape"
      ]
    ]
  ],
  "test_pandas_indexing_hist": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pandas_indexing_hist"
      ]
    ]
  ],
  "test_pandas_bar_align_center": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_pandas_bar_align_center"
      ]
    ]
  ],
  "test_tick_apply_tickdir_deprecation": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_tick_apply_tickdir_deprecation"
      ]
    ]
  ],
  "test_axis_set_tick_params_labelsize_labelcolor": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_axis_set_tick_params_labelsize_labelcolor"
      ]
    ]
  ],
  "test_axes_tick_params_gridlines": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_axes_tick_params_gridlines"
      ]
    ]
  ],
  "test_axes_tick_params_ylabelside": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_axes_tick_params_ylabelside"
      ]
    ]
  ],
  "test_axes_tick_params_xlabelside": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_axes_tick_params_xlabelside"
      ]
    ]
  ],
  "test_none_kwargs": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_none_kwargs"
      ]
    ]
  ],
  "test_bar_uint8": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_uint8"
      ]
    ]
  ],
  "test_date_timezone_x": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_date_timezone_x"
      ]
    ]
  ],
  "test_date_timezone_y": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_date_timezone_y"
      ]
    ]
  ],
  "test_date_timezone_x_and_y": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_date_timezone_x_and_y"
      ]
    ]
  ],
  "test_axisbelow": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_axisbelow"
      ]
    ]
  ],
  "test_titletwiny": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_titletwiny"
      ]
    ]
  ],
  "test_titlesetpos": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_titlesetpos"
      ]
    ]
  ],
  "test_title_xticks_top": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_title_xticks_top"
      ]
    ]
  ],
  "test_title_xticks_top_both": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_title_xticks_top_both"
      ]
    ]
  ],
  "test_title_above_offset": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_title_above_offset"
      ]
    ]
  ],
  "test_title_no_move_off_page": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_title_no_move_off_page"
      ]
    ]
  ],
  "test_offset_label_color": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_offset_label_color"
      ]
    ]
  ],
  "test_offset_text_visible": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_offset_text_visible"
      ]
    ]
  ],
  "test_large_offset": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_large_offset"
      ]
    ]
  ],
  "test_barb_units": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_barb_units"
      ]
    ]
  ],
  "test_quiver_units": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_quiver_units"
      ]
    ]
  ],
  "test_bar_color_cycle": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_color_cycle"
      ]
    ]
  ],
  "test_tick_param_label_rotation": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_tick_param_label_rotation"
      ]
    ]
  ],
  "test_fillbetween_cycle": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_fillbetween_cycle"
      ]
    ]
  ],
  "test_log_margins": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_log_margins"
      ]
    ]
  ],
  "test_color_length_mismatch": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_color_length_mismatch"
      ]
    ]
  ],
  "test_eventplot_legend": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_eventplot_legend"
      ]
    ]
  ],
  "test_bar_broadcast_args": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_broadcast_args"
      ]
    ]
  ],
  "test_invalid_axis_limits": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_invalid_axis_limits"
      ]
    ]
  ],
  "test_minorticks_on": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_minorticks_on"
      ]
    ]
  ],
  "test_twinx_knows_limits": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_twinx_knows_limits"
      ]
    ]
  ],
  "test_zero_linewidth": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_zero_linewidth"
      ]
    ]
  ],
  "test_empty_errorbar_legend": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_empty_errorbar_legend"
      ]
    ]
  ],
  "test_plot_decimal": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_plot_decimal"
      ]
    ]
  ],
  "test_markerfacecolor_none_alpha": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_markerfacecolor_none_alpha"
      ]
    ]
  ],
  "test_tick_padding_tightbbox": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_tick_padding_tightbbox"
      ]
    ]
  ],
  "test_inset": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_inset"
      ]
    ]
  ],
  "test_zoom_inset": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_zoom_inset"
      ]
    ]
  ],
  "test_inset_polar": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_inset_polar"
      ]
    ]
  ],
  "test_inset_projection": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_inset_projection"
      ]
    ]
  ],
  "test_inset_subclass": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_inset_subclass"
      ]
    ]
  ],
  "test_indicate_inset_inverted": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_indicate_inset_inverted"
      ]
    ]
  ],
  "test_set_position": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_set_position"
      ]
    ],
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_set_position"
      ]
    ]
  ],
  "test_spines_properbbox_after_zoom": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_spines_properbbox_after_zoom"
      ]
    ]
  ],
  "test_gettightbbox_ignore_nan": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_gettightbbox_ignore_nan"
      ]
    ]
  ],
  "test_scatter_series_non_zero_index": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_scatter_series_non_zero_index"
      ]
    ]
  ],
  "test_scatter_empty_data": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_scatter_empty_data"
      ]
    ]
  ],
  "test_annotate_across_transforms": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_annotate_across_transforms"
      ]
    ]
  ],
  "test_secondary_xy": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_secondary_xy"
      ]
    ]
  ],
  "test_secondary_fail": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_secondary_fail"
      ]
    ]
  ],
  "test_secondary_resize": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_secondary_resize"
      ]
    ]
  ],
  "test_secondary_minorloc": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_secondary_minorloc"
      ]
    ]
  ],
  "test_secondary_formatter": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_secondary_formatter"
      ]
    ]
  ],
  "test_secondary_repr": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_secondary_repr"
      ]
    ]
  ],
  "color_boxes": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "color_boxes"
      ]
    ]
  ],
  "test_normal_axes": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_normal_axes"
      ]
    ]
  ],
  "test_nodecorator": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_nodecorator"
      ]
    ]
  ],
  "test_displaced_spine": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_displaced_spine"
      ]
    ]
  ],
  "test_tickdirs": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_tickdirs"
      ]
    ]
  ],
  "test_minor_accountedfor": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_minor_accountedfor"
      ]
    ]
  ],
  "test_axis_bool_arguments": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_axis_bool_arguments"
      ]
    ]
  ],
  "test_axis_extent_arg": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_axis_extent_arg"
      ]
    ]
  ],
  "test_axis_extent_arg2": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_axis_extent_arg2"
      ]
    ]
  ],
  "test_hist_auto_bins": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_auto_bins"
      ]
    ]
  ],
  "test_hist_nan_data": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_nan_data"
      ]
    ]
  ],
  "test_hist_range_and_density": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_hist_range_and_density"
      ]
    ]
  ],
  "test_bar_errbar_zorder": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_errbar_zorder"
      ]
    ]
  ],
  "test_set_ticks_inverted": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_set_ticks_inverted"
      ]
    ]
  ],
  "test_aspect_nonlinear_adjustable_box": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_aspect_nonlinear_adjustable_box"
      ]
    ]
  ],
  "test_aspect_nonlinear_adjustable_datalim": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_aspect_nonlinear_adjustable_datalim"
      ]
    ]
  ],
  "test_box_aspect": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_box_aspect"
      ]
    ]
  ],
  "test_box_aspect_custom_position": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_box_aspect_custom_position"
      ]
    ]
  ],
  "test_bbox_aspect_axes_init": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bbox_aspect_axes_init"
      ]
    ]
  ],
  "test_redraw_in_frame": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_redraw_in_frame"
      ]
    ]
  ],
  "test_invisible_axes_events": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_invisible_axes_events"
      ]
    ]
  ],
  "test_xtickcolor_is_not_markercolor": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_xtickcolor_is_not_markercolor"
      ]
    ]
  ],
  "test_ytickcolor_is_not_markercolor": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_ytickcolor_is_not_markercolor"
      ]
    ]
  ],
  "test_unautoscale": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_unautoscale"
      ]
    ],
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_unautoscale"
      ]
    ]
  ],
  "test_polar_interpolation_steps_variable_r": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_polar_interpolation_steps_variable_r"
      ]
    ],
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_polar_interpolation_steps_variable_r"
      ]
    ]
  ],
  "test_autoscale_tiny_sticky": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_autoscale_tiny_sticky"
      ]
    ]
  ],
  "test_xtickcolor_is_not_xticklabelcolor": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_xtickcolor_is_not_xticklabelcolor"
      ]
    ]
  ],
  "test_ytickcolor_is_not_yticklabelcolor": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_ytickcolor_is_not_yticklabelcolor"
      ]
    ]
  ],
  "test_relative_ticklabel_sizes": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_relative_ticklabel_sizes"
      ]
    ]
  ],
  "test_multiplot_autoscale": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_multiplot_autoscale"
      ]
    ]
  ],
  "test_sharing_does_not_link_positions": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_sharing_does_not_link_positions"
      ]
    ]
  ],
  "test_2dcolor_plot": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_2dcolor_plot"
      ]
    ]
  ],
  "test_shared_axes_clear": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_shared_axes_clear"
      ]
    ]
  ],
  "test_shared_axes_retick": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_shared_axes_retick"
      ]
    ],
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_shared_axes_retick"
      ]
    ]
  ],
  "test_ylabel_ha_with_position": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_ylabel_ha_with_position"
      ]
    ]
  ],
  "test_bar_label_location_vertical": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_label_location_vertical"
      ]
    ]
  ],
  "test_bar_label_location_vertical_yinverted": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_label_location_vertical_yinverted"
      ]
    ]
  ],
  "test_bar_label_location_horizontal": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_label_location_horizontal"
      ]
    ]
  ],
  "test_bar_label_location_horizontal_yinverted": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_label_location_horizontal_yinverted"
      ]
    ]
  ],
  "test_bar_label_location_horizontal_xinverted": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_label_location_horizontal_xinverted"
      ]
    ]
  ],
  "test_bar_label_location_horizontal_xyinverted": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_label_location_horizontal_xyinverted"
      ]
    ]
  ],
  "test_bar_label_location_center": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_label_location_center"
      ]
    ]
  ],
  "test_centered_bar_label_nonlinear": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_centered_bar_label_nonlinear"
      ]
    ]
  ],
  "test_bar_label_location_errorbars": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_label_location_errorbars"
      ]
    ]
  ],
  "test_bar_label_fmt": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_label_fmt"
      ]
    ]
  ],
  "test_bar_label_fmt_error": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_label_fmt_error"
      ]
    ]
  ],
  "test_bar_label_labels": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_label_labels"
      ]
    ]
  ],
  "test_bar_label_nan_ydata": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_label_nan_ydata"
      ]
    ]
  ],
  "test_bar_label_nan_ydata_inverted": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_label_nan_ydata_inverted"
      ]
    ]
  ],
  "test_nan_barlabels": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_nan_barlabels"
      ]
    ]
  ],
  "test_patch_bounds": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_patch_bounds"
      ]
    ]
  ],
  "test_warn_ignored_scatter_kwargs": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_warn_ignored_scatter_kwargs"
      ]
    ]
  ],
  "test_artist_sublists": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_artist_sublists"
      ]
    ]
  ],
  "test_empty_line_plots": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_empty_line_plots"
      ]
    ]
  ],
  "test_plot_format_errors": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_plot_format_errors"
      ]
    ]
  ],
  "test_plot_format": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_plot_format"
      ]
    ]
  ],
  "test_automatic_legend": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_automatic_legend"
      ]
    ]
  ],
  "test_plot_errors": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_plot_errors"
      ]
    ]
  ],
  "test_clim": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_clim"
      ]
    ]
  ],
  "test_bezier_autoscale": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bezier_autoscale"
      ]
    ]
  ],
  "test_get_xticklabel": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_get_xticklabel"
      ]
    ]
  ],
  "test_bar_leading_nan": [
    [
      "lib/matplotlib/tests/test_axes.py",
      [
        "test_bar_leading_nan"
      ]
    ]
  ],
  "check": [
    [
      "lib/matplotlib/tests/test_backend_bases.py",
      [
        "test_uses_per_path",
        "check"
      ]
    ],
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_array_patch_perimeters",
        "check"
      ]
    ],
    [
      "setupext.py",
      [
        "SetupPackage",
        "check"
      ]
    ],
    [
      "setupext.py",
      [
        "OptionalPackage",
        "check"
      ]
    ],
    [
      "setupext.py",
      [
        "Platform",
        "check"
      ]
    ],
    [
      "setupext.py",
      [
        "Python",
        "check"
      ]
    ],
    [
      "setupext.py",
      [
        "BackendMacOSX",
        "check"
      ]
    ]
  ],
  "test_uses_per_path": [
    [
      "lib/matplotlib/tests/test_backend_bases.py",
      [
        "test_uses_per_path"
      ]
    ]
  ],
  "test_canvas_ctor": [
    [
      "lib/matplotlib/tests/test_backend_bases.py",
      [
        "test_canvas_ctor"
      ]
    ]
  ],
  "test_get_default_filename": [
    [
      "lib/matplotlib/tests/test_backend_bases.py",
      [
        "test_get_default_filename"
      ]
    ]
  ],
  "test_canvas_change": [
    [
      "lib/matplotlib/tests/test_backend_bases.py",
      [
        "test_canvas_change"
      ]
    ]
  ],
  "test_non_gui_warning": [
    [
      "lib/matplotlib/tests/test_backend_bases.py",
      [
        "test_non_gui_warning"
      ]
    ]
  ],
  "test_location_event_position": [
    [
      "lib/matplotlib/tests/test_backend_bases.py",
      [
        "test_location_event_position"
      ]
    ]
  ],
  "test_pick": [
    [
      "lib/matplotlib/tests/test_backend_bases.py",
      [
        "test_pick"
      ]
    ]
  ],
  "test_interactive_zoom": [
    [
      "lib/matplotlib/tests/test_backend_bases.py",
      [
        "test_interactive_zoom"
      ]
    ]
  ],
  "test_widgetlock_zoompan": [
    [
      "lib/matplotlib/tests/test_backend_bases.py",
      [
        "test_widgetlock_zoompan"
      ]
    ]
  ],
  "test_interactive_colorbar": [
    [
      "lib/matplotlib/tests/test_backend_bases.py",
      [
        "test_interactive_colorbar"
      ]
    ]
  ],
  "test_toolbar_zoompan": [
    [
      "lib/matplotlib/tests/test_backend_bases.py",
      [
        "test_toolbar_zoompan"
      ]
    ]
  ],
  "test_draw": [
    [
      "lib/matplotlib/tests/test_backend_bases.py",
      [
        "test_draw"
      ]
    ]
  ],
  "test_interactive_pan": [
    [
      "lib/matplotlib/tests/test_backend_bases.py",
      [
        "test_interactive_pan"
      ]
    ]
  ],
  "test_patch_alpha_coloring": [
    [
      "lib/matplotlib/tests/test_backend_cairo.py",
      [
        "test_patch_alpha_coloring"
      ]
    ],
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_patch_alpha_coloring"
      ]
    ]
  ],
  "send": [
    [
      "lib/matplotlib/tests/test_backend_gtk3.py",
      [
        "test_correct_key",
        "send"
      ]
    ]
  ],
  "receive": [
    [
      "lib/matplotlib/tests/test_backend_gtk3.py",
      [
        "test_correct_key",
        "receive"
      ]
    ]
  ],
  "test_correct_key": [
    [
      "lib/matplotlib/tests/test_backend_gtk3.py",
      [
        "test_correct_key"
      ]
    ],
    [
      "lib/matplotlib/tests/test_backend_qt.py",
      [
        "test_correct_key"
      ]
    ]
  ],
  "test_cached_renderer": [
    [
      "lib/matplotlib/tests/test_backend_macosx.py",
      [
        "test_cached_renderer"
      ]
    ]
  ],
  "test_savefig_rcparam": [
    [
      "lib/matplotlib/tests/test_backend_macosx.py",
      [
        "test_savefig_rcparam"
      ]
    ]
  ],
  "test_ipynb": [
    [
      "lib/matplotlib/tests/test_backend_nbagg.py",
      [
        "test_ipynb"
      ]
    ]
  ],
  "test_use14corefonts": [
    [
      "lib/matplotlib/tests/test_backend_pdf.py",
      [
        "test_use14corefonts"
      ]
    ]
  ],
  "test_embed_fonts": [
    [
      "lib/matplotlib/tests/test_backend_pdf.py",
      [
        "test_embed_fonts"
      ]
    ]
  ],
  "test_multipage_pagecount": [
    [
      "lib/matplotlib/tests/test_backend_pdf.py",
      [
        "test_multipage_pagecount"
      ]
    ]
  ],
  "test_multipage_properfinalize": [
    [
      "lib/matplotlib/tests/test_backend_pdf.py",
      [
        "test_multipage_properfinalize"
      ]
    ]
  ],
  "test_multipage_keep_empty": [
    [
      "lib/matplotlib/tests/test_backend_pdf.py",
      [
        "test_multipage_keep_empty"
      ]
    ]
  ],
  "test_composite_image": [
    [
      "lib/matplotlib/tests/test_backend_pdf.py",
      [
        "test_composite_image"
      ]
    ]
  ],
  "test_savefig_metadata": [
    [
      "lib/matplotlib/tests/test_backend_pdf.py",
      [
        "test_savefig_metadata"
      ]
    ]
  ],
  "test_invalid_metadata": [
    [
      "lib/matplotlib/tests/test_backend_pdf.py",
      [
        "test_invalid_metadata"
      ]
    ]
  ],
  "test_multipage_metadata": [
    [
      "lib/matplotlib/tests/test_backend_pdf.py",
      [
        "test_multipage_metadata"
      ]
    ]
  ],
  "test_text_urls": [
    [
      "lib/matplotlib/tests/test_backend_pdf.py",
      [
        "test_text_urls"
      ]
    ],
    [
      "lib/matplotlib/tests/test_backend_svg.py",
      [
        "test_text_urls"
      ]
    ]
  ],
  "test_text_rotated_urls": [
    [
      "lib/matplotlib/tests/test_backend_pdf.py",
      [
        "test_text_rotated_urls"
      ]
    ]
  ],
  "test_text_urls_tex": [
    [
      "lib/matplotlib/tests/test_backend_pdf.py",
      [
        "test_text_urls_tex"
      ]
    ]
  ],
  "test_pdfpages_fspath": [
    [
      "lib/matplotlib/tests/test_backend_pdf.py",
      [
        "test_pdfpages_fspath"
      ]
    ]
  ],
  "test_hatching_legend": [
    [
      "lib/matplotlib/tests/test_backend_pdf.py",
      [
        "test_hatching_legend"
      ]
    ]
  ],
  "test_grayscale_alpha": [
    [
      "lib/matplotlib/tests/test_backend_pdf.py",
      [
        "test_grayscale_alpha"
      ]
    ]
  ],
  "test_pdf_eps_savefig_when_color_is_none": [
    [
      "lib/matplotlib/tests/test_backend_pdf.py",
      [
        "test_pdf_eps_savefig_when_color_is_none"
      ]
    ]
  ],
  "test_failing_latex": [
    [
      "lib/matplotlib/tests/test_backend_pdf.py",
      [
        "test_failing_latex"
      ]
    ],
    [
      "lib/matplotlib/tests/test_backend_ps.py",
      [
        "test_failing_latex"
      ]
    ]
  ],
  "test_empty_rasterized": [
    [
      "lib/matplotlib/tests/test_backend_pdf.py",
      [
        "test_empty_rasterized"
      ]
    ]
  ],
  "test_kerning": [
    [
      "lib/matplotlib/tests/test_backend_pdf.py",
      [
        "test_kerning"
      ]
    ]
  ],
  "test_glyphs_subset": [
    [
      "lib/matplotlib/tests/test_backend_pdf.py",
      [
        "test_glyphs_subset"
      ]
    ]
  ],
  "test_multi_font_type3": [
    [
      "lib/matplotlib/tests/test_backend_pdf.py",
      [
        "test_multi_font_type3"
      ]
    ],
    [
      "lib/matplotlib/tests/test_backend_ps.py",
      [
        "test_multi_font_type3"
      ]
    ],
    [
      "lib/matplotlib/tests/test_backend_svg.py",
      [
        "test_multi_font_type3"
      ]
    ]
  ],
  "test_multi_font_type42": [
    [
      "lib/matplotlib/tests/test_backend_pdf.py",
      [
        "test_multi_font_type42"
      ]
    ],
    [
      "lib/matplotlib/tests/test_backend_ps.py",
      [
        "test_multi_font_type42"
      ]
    ],
    [
      "lib/matplotlib/tests/test_backend_svg.py",
      [
        "test_multi_font_type42"
      ]
    ]
  ],
  "compare_figure": [
    [
      "lib/matplotlib/tests/test_backend_pgf.py",
      [
        "compare_figure"
      ]
    ]
  ],
  "test_tex_escape": [
    [
      "lib/matplotlib/tests/test_backend_pgf.py",
      [
        "test_tex_escape"
      ]
    ]
  ],
  "test_tex_special_chars": [
    [
      "lib/matplotlib/tests/test_backend_pgf.py",
      [
        "test_tex_special_chars"
      ]
    ]
  ],
  "test_xelatex": [
    [
      "lib/matplotlib/tests/test_backend_pgf.py",
      [
        "test_xelatex"
      ]
    ]
  ],
  "test_pdflatex": [
    [
      "lib/matplotlib/tests/test_backend_pgf.py",
      [
        "test_pdflatex"
      ]
    ]
  ],
  "test_rcupdate": [
    [
      "lib/matplotlib/tests/test_backend_pgf.py",
      [
        "test_rcupdate"
      ]
    ]
  ],
  "test_pathclip": [
    [
      "lib/matplotlib/tests/test_backend_pgf.py",
      [
        "test_pathclip"
      ]
    ]
  ],
  "test_mixedmode": [
    [
      "lib/matplotlib/tests/test_backend_pgf.py",
      [
        "test_mixedmode"
      ]
    ]
  ],
  "test_bbox_inches": [
    [
      "lib/matplotlib/tests/test_backend_pgf.py",
      [
        "test_bbox_inches"
      ]
    ]
  ],
  "test_pdf_pages": [
    [
      "lib/matplotlib/tests/test_backend_pgf.py",
      [
        "test_pdf_pages"
      ]
    ]
  ],
  "test_pdf_pages_metadata_check": [
    [
      "lib/matplotlib/tests/test_backend_pgf.py",
      [
        "test_pdf_pages_metadata_check"
      ]
    ]
  ],
  "test_tex_restart_after_error": [
    [
      "lib/matplotlib/tests/test_backend_pgf.py",
      [
        "test_tex_restart_after_error"
      ]
    ]
  ],
  "test_bbox_inches_tight": [
    [
      "lib/matplotlib/tests/test_backend_pgf.py",
      [
        "test_bbox_inches_tight"
      ]
    ],
    [
      "lib/matplotlib/tests/test_bbox_tight.py",
      [
        "test_bbox_inches_tight"
      ]
    ]
  ],
  "test_png_transparency": [
    [
      "lib/matplotlib/tests/test_backend_pgf.py",
      [
        "test_png_transparency"
      ]
    ]
  ],
  "test_unknown_font": [
    [
      "lib/matplotlib/tests/test_backend_pgf.py",
      [
        "test_unknown_font"
      ]
    ]
  ],
  "test_minus_signs_with_tex": [
    [
      "lib/matplotlib/tests/test_backend_pgf.py",
      [
        "test_minus_signs_with_tex"
      ]
    ]
  ],
  "test_sketch_params": [
    [
      "lib/matplotlib/tests/test_backend_pgf.py",
      [
        "test_sketch_params"
      ]
    ]
  ],
  "test_savefig_to_stringio": [
    [
      "lib/matplotlib/tests/test_backend_ps.py",
      [
        "test_savefig_to_stringio"
      ]
    ]
  ],
  "test_patheffects": [
    [
      "lib/matplotlib/tests/test_backend_ps.py",
      [
        "test_patheffects"
      ]
    ]
  ],
  "test_tilde_in_tempfilename": [
    [
      "lib/matplotlib/tests/test_backend_ps.py",
      [
        "test_tilde_in_tempfilename"
      ]
    ]
  ],
  "test_transparency": [
    [
      "lib/matplotlib/tests/test_backend_ps.py",
      [
        "test_transparency"
      ]
    ]
  ],
  "test_transparency_tex": [
    [
      "lib/matplotlib/tests/test_backend_ps.py",
      [
        "test_transparency_tex"
      ]
    ]
  ],
  "test_bbox": [
    [
      "lib/matplotlib/tests/test_backend_ps.py",
      [
        "test_bbox"
      ]
    ],
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_bbox"
      ]
    ]
  ],
  "test_partial_usetex": [
    [
      "lib/matplotlib/tests/test_backend_ps.py",
      [
        "test_partial_usetex"
      ]
    ]
  ],
  "test_usetex_preamble": [
    [
      "lib/matplotlib/tests/test_backend_ps.py",
      [
        "test_usetex_preamble"
      ]
    ]
  ],
  "test_useafm": [
    [
      "lib/matplotlib/tests/test_backend_ps.py",
      [
        "test_useafm"
      ]
    ]
  ],
  "test_type3_font": [
    [
      "lib/matplotlib/tests/test_backend_ps.py",
      [
        "test_type3_font"
      ]
    ]
  ],
  "test_colored_hatch_zero_linewidth": [
    [
      "lib/matplotlib/tests/test_backend_ps.py",
      [
        "test_colored_hatch_zero_linewidth"
      ]
    ]
  ],
  "test_text_clip": [
    [
      "lib/matplotlib/tests/test_backend_ps.py",
      [
        "test_text_clip"
      ]
    ]
  ],
  "test_d_glyph": [
    [
      "lib/matplotlib/tests/test_backend_ps.py",
      [
        "test_d_glyph"
      ]
    ]
  ],
  "test_type42_font_without_prep": [
    [
      "lib/matplotlib/tests/test_backend_ps.py",
      [
        "test_type42_font_without_prep"
      ]
    ]
  ],
  "test_fonttype": [
    [
      "lib/matplotlib/tests/test_backend_ps.py",
      [
        "test_fonttype"
      ]
    ]
  ],
  "test_linedash": [
    [
      "lib/matplotlib/tests/test_backend_ps.py",
      [
        "test_linedash"
      ]
    ]
  ],
  "test_empty_line": [
    [
      "lib/matplotlib/tests/test_backend_ps.py",
      [
        "test_empty_line"
      ]
    ]
  ],
  "test_no_duplicate_definition": [
    [
      "lib/matplotlib/tests/test_backend_ps.py",
      [
        "test_no_duplicate_definition"
      ]
    ]
  ],
  "test_path_collection": [
    [
      "lib/matplotlib/tests/test_backend_ps.py",
      [
        "test_path_collection"
      ]
    ]
  ],
  "qt_core": [
    [
      "lib/matplotlib/tests/test_backend_qt.py",
      [
        "qt_core"
      ]
    ]
  ],
  "test_fig_close": [
    [
      "lib/matplotlib/tests/test_backend_qt.py",
      [
        "test_fig_close"
      ]
    ]
  ],
  "wait_for": [
    [
      "lib/matplotlib/tests/test_backend_qt.py",
      [
        "WaitForStringPopen",
        "wait_for"
      ]
    ]
  ],
  "interrupter": [
    [
      "lib/matplotlib/tests/test_backend_qt.py",
      [
        "_test_sigint_impl",
        "interrupter"
      ]
    ]
  ],
  "_test_sigint_impl": [
    [
      "lib/matplotlib/tests/test_backend_qt.py",
      [
        "_test_sigint_impl"
      ]
    ]
  ],
  "test_sigint": [
    [
      "lib/matplotlib/tests/test_backend_qt.py",
      [
        "test_sigint"
      ]
    ]
  ],
  "_test_other_signal_before_sigint_impl": [
    [
      "lib/matplotlib/tests/test_backend_qt.py",
      [
        "_test_other_signal_before_sigint_impl"
      ]
    ]
  ],
  "test_other_signal_before_sigint": [
    [
      "lib/matplotlib/tests/test_backend_qt.py",
      [
        "test_other_signal_before_sigint"
      ]
    ]
  ],
  "fire_signal_and_quit": [
    [
      "lib/matplotlib/tests/test_backend_qt.py",
      [
        "test_fig_sigint_override",
        "fire_signal_and_quit"
      ]
    ]
  ],
  "custom_handler": [
    [
      "lib/matplotlib/tests/test_backend_qt.py",
      [
        "test_fig_sigint_override",
        "custom_handler"
      ]
    ]
  ],
  "test_fig_sigint_override": [
    [
      "lib/matplotlib/tests/test_backend_qt.py",
      [
        "test_fig_sigint_override"
      ]
    ]
  ],
  "isAutoRepeat": [
    [
      "lib/matplotlib/tests/test_backend_qt.py",
      [
        "test_correct_key",
        "_Event",
        "isAutoRepeat"
      ]
    ]
  ],
  "key": [
    [
      "lib/matplotlib/tests/test_backend_qt.py",
      [
        "test_correct_key",
        "_Event",
        "key"
      ]
    ]
  ],
  "modifiers": [
    [
      "lib/matplotlib/tests/test_backend_qt.py",
      [
        "test_correct_key",
        "_Event",
        "modifiers"
      ]
    ]
  ],
  "set_device_pixel_ratio": [
    [
      "lib/matplotlib/tests/test_backend_qt.py",
      [
        "test_device_pixel_ratio_change",
        "with_mock_patch_prop_as_",
        "set_device_pixel_ratio"
      ]
    ]
  ],
  "test_device_pixel_ratio_change": [
    [
      "lib/matplotlib/tests/test_backend_qt.py",
      [
        "test_device_pixel_ratio_change"
      ]
    ]
  ],
  "test_subplottool": [
    [
      "lib/matplotlib/tests/test_backend_qt.py",
      [
        "test_subplottool"
      ]
    ]
  ],
  "test_figureoptions": [
    [
      "lib/matplotlib/tests/test_backend_qt.py",
      [
        "test_figureoptions"
      ]
    ]
  ],
  "test_figureoptions_with_datetime_axes": [
    [
      "lib/matplotlib/tests/test_backend_qt.py",
      [
        "test_figureoptions_with_datetime_axes"
      ]
    ]
  ],
  "test_double_resize": [
    [
      "lib/matplotlib/tests/test_backend_qt.py",
      [
        "test_double_resize"
      ]
    ]
  ],
  "test_canvas_reinit": [
    [
      "lib/matplotlib/tests/test_backend_qt.py",
      [
        "test_canvas_reinit"
      ]
    ]
  ],
  "test_form_widget_get_with_datetime_and_date_fields": [
    [
      "lib/matplotlib/tests/test_backend_qt.py",
      [
        "test_form_widget_get_with_datetime_and_date_fields"
      ]
    ]
  ],
  "_test_enums_impl": [
    [
      "lib/matplotlib/tests/test_backend_qt.py",
      [
        "_test_enums_impl"
      ]
    ]
  ],
  "_get_testable_qt_backends": [
    [
      "lib/matplotlib/tests/test_backend_qt.py",
      [
        "_get_testable_qt_backends"
      ]
    ]
  ],
  "test_enums_available": [
    [
      "lib/matplotlib/tests/test_backend_qt.py",
      [
        "test_enums_available"
      ]
    ]
  ],
  "test_visibility": [
    [
      "lib/matplotlib/tests/test_backend_svg.py",
      [
        "test_visibility"
      ]
    ]
  ],
  "test_fill_black_with_alpha": [
    [
      "lib/matplotlib/tests/test_backend_svg.py",
      [
        "test_fill_black_with_alpha"
      ]
    ]
  ],
  "test_noscale": [
    [
      "lib/matplotlib/tests/test_backend_svg.py",
      [
        "test_noscale"
      ]
    ]
  ],
  "test_bold_font_output": [
    [
      "lib/matplotlib/tests/test_backend_svg.py",
      [
        "test_bold_font_output"
      ]
    ]
  ],
  "test_bold_font_output_with_none_fonttype": [
    [
      "lib/matplotlib/tests/test_backend_svg.py",
      [
        "test_bold_font_output_with_none_fonttype"
      ]
    ]
  ],
  "test_rasterized": [
    [
      "lib/matplotlib/tests/test_backend_svg.py",
      [
        "test_rasterized"
      ]
    ]
  ],
  "test_rasterized_ordering": [
    [
      "lib/matplotlib/tests/test_backend_svg.py",
      [
        "test_rasterized_ordering"
      ]
    ]
  ],
  "count_tag": [
    [
      "lib/matplotlib/tests/test_backend_svg.py",
      [
        "test_count_bitmaps",
        "count_tag"
      ]
    ]
  ],
  "test_count_bitmaps": [
    [
      "lib/matplotlib/tests/test_backend_svg.py",
      [
        "test_count_bitmaps"
      ]
    ]
  ],
  "test_unicode_won": [
    [
      "lib/matplotlib/tests/test_backend_svg.py",
      [
        "test_unicode_won"
      ]
    ]
  ],
  "test_svgnone_with_data_coordinates": [
    [
      "lib/matplotlib/tests/test_backend_svg.py",
      [
        "test_svgnone_with_data_coordinates"
      ]
    ]
  ],
  "include": [
    [
      "lib/matplotlib/tests/test_backend_svg.py",
      [
        "test_gid",
        "include"
      ]
    ]
  ],
  "test_gid": [
    [
      "lib/matplotlib/tests/test_backend_svg.py",
      [
        "test_gid"
      ]
    ]
  ],
  "test_savefig_tight": [
    [
      "lib/matplotlib/tests/test_backend_svg.py",
      [
        "test_savefig_tight"
      ]
    ]
  ],
  "test_url": [
    [
      "lib/matplotlib/tests/test_backend_svg.py",
      [
        "test_url"
      ]
    ]
  ],
  "test_url_tick": [
    [
      "lib/matplotlib/tests/test_backend_svg.py",
      [
        "test_url_tick"
      ]
    ]
  ],
  "test_svg_default_metadata": [
    [
      "lib/matplotlib/tests/test_backend_svg.py",
      [
        "test_svg_default_metadata"
      ]
    ]
  ],
  "test_svg_clear_default_metadata": [
    [
      "lib/matplotlib/tests/test_backend_svg.py",
      [
        "test_svg_clear_default_metadata"
      ]
    ]
  ],
  "test_svg_clear_all_metadata": [
    [
      "lib/matplotlib/tests/test_backend_svg.py",
      [
        "test_svg_clear_all_metadata"
      ]
    ]
  ],
  "test_svg_metadata": [
    [
      "lib/matplotlib/tests/test_backend_svg.py",
      [
        "test_svg_metadata"
      ]
    ]
  ],
  "test_svg_incorrect_metadata": [
    [
      "lib/matplotlib/tests/test_backend_svg.py",
      [
        "test_svg_incorrect_metadata"
      ]
    ]
  ],
  "test_svg_escape": [
    [
      "lib/matplotlib/tests/test_backend_svg.py",
      [
        "test_svg_escape"
      ]
    ]
  ],
  "test_svg_font_string": [
    [
      "lib/matplotlib/tests/test_backend_svg.py",
      [
        "test_svg_font_string"
      ]
    ]
  ],
  "test_load_template": [
    [
      "lib/matplotlib/tests/test_backend_template.py",
      [
        "test_load_template"
      ]
    ]
  ],
  "test_load_old_api": [
    [
      "lib/matplotlib/tests/test_backend_template.py",
      [
        "test_load_old_api"
      ]
    ]
  ],
  "test_func": [
    [
      "lib/matplotlib/tests/test_backend_tk.py",
      [
        "_isolated_tk_test",
        "test_func"
      ]
    ]
  ],
  "_isolated_tk_test": [
    [
      "lib/matplotlib/tests/test_backend_tk.py",
      [
        "_isolated_tk_test"
      ]
    ]
  ],
  "test_blit": [
    [
      "lib/matplotlib/tests/test_backend_tk.py",
      [
        "test_blit"
      ]
    ]
  ],
  "test_figuremanager_preserves_host_mainloop": [
    [
      "lib/matplotlib/tests/test_backend_tk.py",
      [
        "test_figuremanager_preserves_host_mainloop"
      ]
    ]
  ],
  "target": [
    [
      "lib/matplotlib/tests/test_backend_tk.py",
      [
        "test_figuremanager_cleans_own_mainloop",
        "target"
      ]
    ]
  ],
  "test_figuremanager_cleans_own_mainloop": [
    [
      "lib/matplotlib/tests/test_backend_tk.py",
      [
        "test_figuremanager_cleans_own_mainloop"
      ]
    ]
  ],
  "test_never_update": [
    [
      "lib/matplotlib/tests/test_backend_tk.py",
      [
        "test_never_update"
      ]
    ]
  ],
  "test_missing_back_button": [
    [
      "lib/matplotlib/tests/test_backend_tk.py",
      [
        "test_missing_back_button"
      ]
    ]
  ],
  "check_focus": [
    [
      "lib/matplotlib/tests/test_backend_tk.py",
      [
        "test_canvas_focus",
        "check_focus"
      ]
    ]
  ],
  "test_canvas_focus": [
    [
      "lib/matplotlib/tests/test_backend_tk.py",
      [
        "test_canvas_focus"
      ]
    ]
  ],
  "test_figure": [
    [
      "lib/matplotlib/tests/test_backend_tk.py",
      [
        "test_embedding",
        "test_figure"
      ]
    ],
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_figure"
      ]
    ]
  ],
  "test_embedding": [
    [
      "lib/matplotlib/tests/test_backend_tk.py",
      [
        "test_embedding"
      ]
    ]
  ],
  "test_format_shortcut": [
    [
      "lib/matplotlib/tests/test_backend_tools.py",
      [
        "test_format_shortcut"
      ]
    ]
  ],
  "test_webagg_fallback": [
    [
      "lib/matplotlib/tests/test_backend_webagg.py",
      [
        "test_webagg_fallback"
      ]
    ]
  ],
  "test_webagg_core_no_toolbar": [
    [
      "lib/matplotlib/tests/test_backend_webagg.py",
      [
        "test_webagg_core_no_toolbar"
      ]
    ]
  ],
  "_get_testable_interactive_backends": [
    [
      "lib/matplotlib/tests/test_backends_interactive.py",
      [
        "_get_testable_interactive_backends"
      ]
    ]
  ],
  "check_alt_backend": [
    [
      "lib/matplotlib/tests/test_backends_interactive.py",
      [
        "_test_interactive_impl",
        "if_backend_endswith_agg_",
        "check_alt_backend"
      ]
    ]
  ],
  "_test_interactive_impl": [
    [
      "lib/matplotlib/tests/test_backends_interactive.py",
      [
        "_test_interactive_impl"
      ]
    ]
  ],
  "test_interactive_backend": [
    [
      "lib/matplotlib/tests/test_backends_interactive.py",
      [
        "test_interactive_backend"
      ]
    ]
  ],
  "_test_thread_impl": [
    [
      "lib/matplotlib/tests/test_backends_interactive.py",
      [
        "_test_thread_impl"
      ]
    ]
  ],
  "test_interactive_thread_safety": [
    [
      "lib/matplotlib/tests/test_backends_interactive.py",
      [
        "test_interactive_thread_safety"
      ]
    ]
  ],
  "_impl_test_lazy_auto_backend_selection": [
    [
      "lib/matplotlib/tests/test_backends_interactive.py",
      [
        "_impl_test_lazy_auto_backend_selection"
      ]
    ]
  ],
  "test_lazy_auto_backend_selection": [
    [
      "lib/matplotlib/tests/test_backends_interactive.py",
      [
        "test_lazy_auto_backend_selection"
      ]
    ]
  ],
  "_implqt5agg": [
    [
      "lib/matplotlib/tests/test_backends_interactive.py",
      [
        "_implqt5agg"
      ]
    ]
  ],
  "_implcairo": [
    [
      "lib/matplotlib/tests/test_backends_interactive.py",
      [
        "_implcairo"
      ]
    ]
  ],
  "_implcore": [
    [
      "lib/matplotlib/tests/test_backends_interactive.py",
      [
        "_implcore"
      ]
    ]
  ],
  "test_qt5backends_uses_qt5": [
    [
      "lib/matplotlib/tests/test_backends_interactive.py",
      [
        "test_qt5backends_uses_qt5"
      ]
    ]
  ],
  "_impl_test_cross_Qt_imports": [
    [
      "lib/matplotlib/tests/test_backends_interactive.py",
      [
        "_impl_test_cross_Qt_imports"
      ]
    ]
  ],
  "test_cross_Qt_imports": [
    [
      "lib/matplotlib/tests/test_backends_interactive.py",
      [
        "test_cross_Qt_imports"
      ]
    ]
  ],
  "test_webagg": [
    [
      "lib/matplotlib/tests/test_backends_interactive.py",
      [
        "test_webagg"
      ]
    ]
  ],
  "_lazy_headless": [
    [
      "lib/matplotlib/tests/test_backends_interactive.py",
      [
        "_lazy_headless"
      ]
    ]
  ],
  "test_lazy_linux_headless": [
    [
      "lib/matplotlib/tests/test_backends_interactive.py",
      [
        "test_lazy_linux_headless"
      ]
    ]
  ],
  "_qApp_warn_impl": [
    [
      "lib/matplotlib/tests/test_backends_interactive.py",
      [
        "_qApp_warn_impl"
      ]
    ]
  ],
  "test_qApp_warn": [
    [
      "lib/matplotlib/tests/test_backends_interactive.py",
      [
        "test_qApp_warn"
      ]
    ]
  ],
  "_test_number_of_draws_script": [
    [
      "lib/matplotlib/tests/test_backends_interactive.py",
      [
        "_test_number_of_draws_script"
      ]
    ]
  ],
  "test_blitting_events": [
    [
      "lib/matplotlib/tests/test_backends_interactive.py",
      [
        "test_blitting_events"
      ]
    ]
  ],
  "_test_figure_leak": [
    [
      "lib/matplotlib/tests/test_backends_interactive.py",
      [
        "_test_figure_leak"
      ]
    ]
  ],
  "test_figure_leak_20490": [
    [
      "lib/matplotlib/tests/test_backends_interactive.py",
      [
        "test_figure_leak_20490"
      ]
    ]
  ],
  "test_simple": [
    [
      "lib/matplotlib/tests/test_basic.py",
      [
        "test_simple"
      ]
    ],
    [
      "lib/matplotlib/tests/test_pickle.py",
      [
        "test_simple"
      ]
    ],
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "TestVoxels",
        "test_simple"
      ]
    ]
  ],
  "test_override_builtins": [
    [
      "lib/matplotlib/tests/test_basic.py",
      [
        "test_override_builtins"
      ]
    ]
  ],
  "test_lazy_imports": [
    [
      "lib/matplotlib/tests/test_basic.py",
      [
        "test_lazy_imports"
      ]
    ]
  ],
  "test_bbox_inches_tight_suptile_legend": [
    [
      "lib/matplotlib/tests/test_bbox_tight.py",
      [
        "test_bbox_inches_tight_suptile_legend"
      ]
    ]
  ],
  "test_bbox_inches_tight_suptitle_non_default": [
    [
      "lib/matplotlib/tests/test_bbox_tight.py",
      [
        "test_bbox_inches_tight_suptitle_non_default"
      ]
    ]
  ],
  "test_bbox_inches_tight_clipping": [
    [
      "lib/matplotlib/tests/test_bbox_tight.py",
      [
        "test_bbox_inches_tight_clipping"
      ]
    ]
  ],
  "test_bbox_inches_tight_raster": [
    [
      "lib/matplotlib/tests/test_bbox_tight.py",
      [
        "test_bbox_inches_tight_raster"
      ]
    ]
  ],
  "test_only_on_non_finite_bbox": [
    [
      "lib/matplotlib/tests/test_bbox_tight.py",
      [
        "test_only_on_non_finite_bbox"
      ]
    ]
  ],
  "test_tight_pcolorfast": [
    [
      "lib/matplotlib/tests/test_bbox_tight.py",
      [
        "test_tight_pcolorfast"
      ]
    ]
  ],
  "test_noop_tight_bbox": [
    [
      "lib/matplotlib/tests/test_bbox_tight.py",
      [
        "test_noop_tight_bbox"
      ]
    ]
  ],
  "test_unit": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "TestUnitData",
        "test_unit"
      ]
    ]
  ],
  "test_update": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "TestUnitData",
        "test_update"
      ]
    ]
  ],
  "test_non_string_fails": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "TestUnitData",
        "test_non_string_fails"
      ]
    ]
  ],
  "test_non_string_update_fails": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "TestUnitData",
        "test_non_string_update_fails"
      ]
    ]
  ],
  "mock_axis": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "TestStrCategoryConverter",
        "mock_axis"
      ]
    ]
  ],
  "test_convert": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "TestStrCategoryConverter",
        "test_convert"
      ]
    ]
  ],
  "test_convert_one_string": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "TestStrCategoryConverter",
        "test_convert_one_string"
      ]
    ]
  ],
  "test_convert_one_number": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "TestStrCategoryConverter",
        "test_convert_one_number"
      ]
    ]
  ],
  "test_convert_float_array": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "TestStrCategoryConverter",
        "test_convert_float_array"
      ]
    ]
  ],
  "test_convert_fail": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "TestStrCategoryConverter",
        "test_convert_fail"
      ]
    ]
  ],
  "test_axisinfo": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "TestStrCategoryConverter",
        "test_axisinfo"
      ]
    ]
  ],
  "test_default_units": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "TestStrCategoryConverter",
        "test_default_units"
      ]
    ]
  ],
  "test_StrCategoryLocator": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "TestStrCategoryLocator",
        "test_StrCategoryLocator"
      ]
    ]
  ],
  "test_StrCategoryLocatorPlot": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "TestStrCategoryLocator",
        "test_StrCategoryLocatorPlot"
      ]
    ]
  ],
  "test_StrCategoryFormatter": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "TestStrCategoryFormatter",
        "test_StrCategoryFormatter"
      ]
    ]
  ],
  "test_StrCategoryFormatterPlot": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "TestStrCategoryFormatter",
        "test_StrCategoryFormatterPlot"
      ]
    ]
  ],
  "axis_test": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "axis_test"
      ]
    ]
  ],
  "test_plot_bytes": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "TestPlotBytes",
        "test_plot_bytes"
      ]
    ]
  ],
  "test_plot_numlike": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "TestPlotNumlike",
        "test_plot_numlike"
      ]
    ]
  ],
  "test_plot_unicode": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "TestPlotTypes",
        "test_plot_unicode"
      ]
    ]
  ],
  "test_data": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "TestPlotTypes",
        "test_data"
      ]
    ]
  ],
  "test_plot_xaxis": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "TestPlotTypes",
        "test_plot_xaxis"
      ]
    ]
  ],
  "test_plot_yaxis": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "TestPlotTypes",
        "test_plot_yaxis"
      ]
    ]
  ],
  "test_plot_xyaxis": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "TestPlotTypes",
        "test_plot_xyaxis"
      ]
    ]
  ],
  "test_update_plot": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "TestPlotTypes",
        "test_update_plot"
      ]
    ]
  ],
  "test_mixed_type_exception": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "TestPlotTypes",
        "test_mixed_type_exception"
      ]
    ]
  ],
  "test_mixed_type_update_exception": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "TestPlotTypes",
        "test_mixed_type_update_exception"
      ]
    ]
  ],
  "test_overriding_units_in_plot": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "test_overriding_units_in_plot"
      ]
    ]
  ],
  "test_no_deprecation_on_empty_data": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "test_no_deprecation_on_empty_data"
      ]
    ]
  ],
  "test_hist": [
    [
      "lib/matplotlib/tests/test_category.py",
      [
        "test_hist"
      ]
    ]
  ],
  "test_bad_first_arg": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "Test_delete_masked_points",
        "test_bad_first_arg"
      ]
    ]
  ],
  "test_string_seq": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "Test_delete_masked_points",
        "test_string_seq"
      ]
    ]
  ],
  "test_datetime": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "Test_delete_masked_points",
        "test_datetime"
      ]
    ]
  ],
  "test_rgba": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "Test_delete_masked_points",
        "test_rgba"
      ]
    ]
  ],
  "test_form_main_list": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "Test_boxplot_stats",
        "test_form_main_list"
      ]
    ]
  ],
  "test_form_each_dict": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "Test_boxplot_stats",
        "test_form_each_dict"
      ]
    ]
  ],
  "test_form_dict_keys": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "Test_boxplot_stats",
        "test_form_dict_keys"
      ]
    ]
  ],
  "test_results_baseline": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "Test_boxplot_stats",
        "test_results_baseline"
      ]
    ]
  ],
  "test_results_bootstrapped": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "Test_boxplot_stats",
        "test_results_bootstrapped"
      ]
    ]
  ],
  "test_results_whiskers_float": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "Test_boxplot_stats",
        "test_results_whiskers_float"
      ]
    ]
  ],
  "test_results_whiskers_range": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "Test_boxplot_stats",
        "test_results_whiskers_range"
      ]
    ]
  ],
  "test_results_whiskers_percentiles": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "Test_boxplot_stats",
        "test_results_whiskers_percentiles"
      ]
    ]
  ],
  "test_results_withlabels": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "Test_boxplot_stats",
        "test_results_withlabels"
      ]
    ]
  ],
  "test_label_error": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "Test_boxplot_stats",
        "test_label_error"
      ]
    ]
  ],
  "test_bad_dims": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "Test_boxplot_stats",
        "test_bad_dims"
      ]
    ]
  ],
  "test_boxplot_stats_autorange_false": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "Test_boxplot_stats",
        "test_boxplot_stats_autorange_false"
      ]
    ]
  ],
  "count": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "Test_callback_registry",
        "count"
      ]
    ]
  ],
  "is_empty": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "Test_callback_registry",
        "is_empty"
      ]
    ]
  ],
  "is_not_empty": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "Test_callback_registry",
        "is_not_empty"
      ]
    ]
  ],
  "test_callback_complete": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "Test_callback_registry",
        "test_callback_complete"
      ]
    ]
  ],
  "test_callback_disconnect": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "Test_callback_registry",
        "test_callback_disconnect"
      ]
    ]
  ],
  "test_callback_wrong_disconnect": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "Test_callback_registry",
        "test_callback_wrong_disconnect"
      ]
    ]
  ],
  "test_registration_on_non_empty_registry": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "Test_callback_registry",
        "test_registration_on_non_empty_registry"
      ]
    ]
  ],
  "dummy": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "Test_callback_registry",
        "dummy"
      ]
    ]
  ],
  "test_pickling": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "Test_callback_registry",
        "test_pickling"
      ]
    ]
  ],
  "test_callbackregistry_default_exception_handler": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_callbackregistry_default_exception_handler"
      ]
    ]
  ],
  "raise_runtime_error": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "raising_cb_reg",
        "raise_runtime_error"
      ]
    ]
  ],
  "raise_value_error": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "raising_cb_reg",
        "raise_value_error"
      ]
    ]
  ],
  "transformer": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "raising_cb_reg",
        "transformer"
      ]
    ]
  ],
  "raising_cb_reg": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "raising_cb_reg"
      ]
    ]
  ],
  "test_callbackregistry_custom_exception_handler": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_callbackregistry_custom_exception_handler"
      ]
    ]
  ],
  "test_callbackregistry_signals": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_callbackregistry_signals"
      ]
    ]
  ],
  "raise_handler": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_callbackregistry_blocking",
        "raise_handler"
      ]
    ]
  ],
  "test_func1": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_callbackregistry_blocking",
        "test_func1"
      ]
    ]
  ],
  "test_func2": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_callbackregistry_blocking",
        "test_func2"
      ]
    ]
  ],
  "test_callbackregistry_blocking": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_callbackregistry_blocking"
      ]
    ]
  ],
  "test_strip_comment": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_strip_comment"
      ]
    ]
  ],
  "test_strip_comment_invalid": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_strip_comment_invalid"
      ]
    ]
  ],
  "test_sanitize_sequence": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_sanitize_sequence"
      ]
    ]
  ],
  "test_normalize_kwargs_fail": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_normalize_kwargs_fail"
      ]
    ]
  ],
  "test_normalize_kwargs_pass": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_normalize_kwargs_pass"
      ]
    ]
  ],
  "test_warn_external_frame_embedded_python": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_warn_external_frame_embedded_python"
      ]
    ]
  ],
  "test_to_prestep": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_to_prestep"
      ]
    ]
  ],
  "test_to_prestep_empty": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_to_prestep_empty"
      ]
    ]
  ],
  "test_to_poststep": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_to_poststep"
      ]
    ]
  ],
  "test_to_poststep_empty": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_to_poststep_empty"
      ]
    ]
  ],
  "test_to_midstep": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_to_midstep"
      ]
    ]
  ],
  "test_to_midstep_empty": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_to_midstep_empty"
      ]
    ]
  ],
  "test_step_fails": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_step_fails"
      ]
    ]
  ],
  "test_grouper": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_grouper"
      ]
    ]
  ],
  "test_grouper_private": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_grouper_private"
      ]
    ]
  ],
  "test_flatiter": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_flatiter"
      ]
    ]
  ],
  "test_reshape2d": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_reshape2d"
      ]
    ]
  ],
  "test_reshape2d_pandas": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_reshape2d_pandas"
      ]
    ]
  ],
  "test_reshape2d_xarray": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_reshape2d_xarray"
      ]
    ]
  ],
  "test_index_of_pandas": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_index_of_pandas"
      ]
    ]
  ],
  "test_index_of_xarray": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_index_of_xarray"
      ]
    ]
  ],
  "test_contiguous_regions": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_contiguous_regions"
      ]
    ]
  ],
  "test_safe_first_element_pandas_series": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_safe_first_element_pandas_series"
      ]
    ]
  ],
  "test_warn_external": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_warn_external"
      ]
    ]
  ],
  "divisors": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_array_patch_perimeters",
        "divisors"
      ]
    ]
  ],
  "test_array_patch_perimeters": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_array_patch_perimeters"
      ]
    ]
  ],
  "meth": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_setattr_cm",
        "A",
        "meth"
      ]
    ]
  ],
  "classy": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_setattr_cm",
        "A",
        "classy"
      ]
    ]
  ],
  "static": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_setattr_cm",
        "A",
        "static"
      ]
    ]
  ],
  "prop": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_setattr_cm",
        "A",
        "prop"
      ]
    ]
  ],
  "prop_4": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_setattr_cm",
        "A",
        "prop_4"
      ]
    ]
  ],
  "verify_pre_post_state": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_setattr_cm",
        "verify_pre_post_state"
      ]
    ]
  ],
  "test_setattr_cm": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_setattr_cm"
      ]
    ]
  ],
  "test_format_approx": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_format_approx"
      ]
    ]
  ],
  "test_safe_first_element_with_none": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_safe_first_element_with_none"
      ]
    ]
  ],
  "test_auto_format_str": [
    [
      "lib/matplotlib/tests/test_cbook.py",
      [
        "test_auto_format_str"
      ]
    ]
  ],
  "generate_EventCollection_plot": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "generate_EventCollection_plot"
      ]
    ]
  ],
  "test__EventCollection__get_props": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test__EventCollection__get_props"
      ]
    ]
  ],
  "test__EventCollection__set_positions": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test__EventCollection__set_positions"
      ]
    ]
  ],
  "test__EventCollection__add_positions": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test__EventCollection__add_positions"
      ]
    ]
  ],
  "test__EventCollection__append_positions": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test__EventCollection__append_positions"
      ]
    ]
  ],
  "test__EventCollection__extend_positions": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test__EventCollection__extend_positions"
      ]
    ]
  ],
  "test__EventCollection__switch_orientation": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test__EventCollection__switch_orientation"
      ]
    ]
  ],
  "test__EventCollection__switch_orientation_2x": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test__EventCollection__switch_orientation_2x"
      ]
    ]
  ],
  "test__EventCollection__set_orientation": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test__EventCollection__set_orientation"
      ]
    ]
  ],
  "test__EventCollection__set_linelength": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test__EventCollection__set_linelength"
      ]
    ]
  ],
  "test__EventCollection__set_lineoffset": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test__EventCollection__set_lineoffset"
      ]
    ]
  ],
  "test__EventCollection__set_prop": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test__EventCollection__set_prop"
      ]
    ]
  ],
  "test__EventCollection__set_color": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test__EventCollection__set_color"
      ]
    ]
  ],
  "check_segments": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "check_segments"
      ]
    ]
  ],
  "test_null_collection_datalim": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_null_collection_datalim"
      ]
    ]
  ],
  "test_no_offsets_datalim": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_no_offsets_datalim"
      ]
    ]
  ],
  "test_add_collection": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_add_collection"
      ]
    ]
  ],
  "test_collection_log_datalim": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_collection_log_datalim"
      ]
    ]
  ],
  "test_quiver_limits": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_quiver_limits"
      ]
    ]
  ],
  "test_barb_limits": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_barb_limits"
      ]
    ]
  ],
  "test_EllipseCollection": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_EllipseCollection"
      ]
    ]
  ],
  "test_polycollection_close": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_polycollection_close"
      ]
    ]
  ],
  "test_regularpolycollection_rotate": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_regularpolycollection_rotate"
      ]
    ]
  ],
  "test_regularpolycollection_scale": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_regularpolycollection_scale"
      ]
    ]
  ],
  "test_picking": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_picking"
      ]
    ],
    [
      "lib/matplotlib/tests/test_lines.py",
      [
        "test_picking"
      ]
    ],
    [
      "lib/matplotlib/tests/test_offsetbox.py",
      [
        "test_picking"
      ]
    ]
  ],
  "test_quadmesh_contains": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_quadmesh_contains"
      ]
    ]
  ],
  "test_quadmesh_contains_concave": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_quadmesh_contains_concave"
      ]
    ]
  ],
  "test_quadmesh_cursor_data": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_quadmesh_cursor_data"
      ]
    ]
  ],
  "test_quadmesh_cursor_data_multiple_points": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_quadmesh_cursor_data_multiple_points"
      ]
    ]
  ],
  "test_linestyle_single_dashes": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_linestyle_single_dashes"
      ]
    ]
  ],
  "test_size_in_xy": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_size_in_xy"
      ]
    ]
  ],
  "test_pandas_indexing": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_pandas_indexing"
      ]
    ]
  ],
  "test_lslw_bcast": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_lslw_bcast"
      ]
    ]
  ],
  "test_capstyle": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_capstyle"
      ]
    ]
  ],
  "test_joinstyle": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_joinstyle"
      ]
    ]
  ],
  "test_cap_and_joinstyle_image": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_cap_and_joinstyle_image"
      ]
    ]
  ],
  "test_scatter_post_alpha": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_scatter_post_alpha"
      ]
    ]
  ],
  "test_scatter_alpha_array": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_scatter_alpha_array"
      ]
    ]
  ],
  "test_pathcollection_legend_elements": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_pathcollection_legend_elements"
      ]
    ]
  ],
  "test_EventCollection_nosort": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_EventCollection_nosort"
      ]
    ]
  ],
  "test_collection_set_verts_array": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_collection_set_verts_array"
      ]
    ]
  ],
  "test_collection_set_array": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_collection_set_array"
      ]
    ]
  ],
  "test_blended_collection_autolim": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_blended_collection_autolim"
      ]
    ]
  ],
  "test_singleton_autolim": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_singleton_autolim"
      ]
    ]
  ],
  "test_autolim_with_zeros": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_autolim_with_zeros"
      ]
    ]
  ],
  "test_quadmesh_deprecated_signature": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_quadmesh_deprecated_signature"
      ]
    ]
  ],
  "test_quadmesh_deprecated_positional": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_quadmesh_deprecated_positional"
      ]
    ]
  ],
  "test_quadmesh_set_array_validation": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_quadmesh_set_array_validation"
      ]
    ]
  ],
  "test_quadmesh_get_coordinates": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_quadmesh_get_coordinates"
      ]
    ]
  ],
  "test_quadmesh_set_array": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_quadmesh_set_array"
      ]
    ]
  ],
  "test_quadmesh_vmin_vmax": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_quadmesh_vmin_vmax"
      ]
    ]
  ],
  "test_quadmesh_alpha_array": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_quadmesh_alpha_array"
      ]
    ]
  ],
  "test_alpha_validation": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_alpha_validation"
      ]
    ]
  ],
  "test_legend_inverse_size_label_relationship": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_legend_inverse_size_label_relationship"
      ]
    ]
  ],
  "test_color_logic": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_color_logic"
      ]
    ]
  ],
  "test_LineCollection_args": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_LineCollection_args"
      ]
    ]
  ],
  "test_array_wrong_dimensions": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_array_wrong_dimensions"
      ]
    ]
  ],
  "test_get_segments": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_get_segments"
      ]
    ]
  ],
  "test_set_offsets_late": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_set_offsets_late"
      ]
    ]
  ],
  "test_set_offset_transform": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_set_offset_transform"
      ]
    ]
  ],
  "test_set_offset_units": [
    [
      "lib/matplotlib/tests/test_collections.py",
      [
        "test_set_offset_units"
      ]
    ]
  ],
  "_get_cmap_norms": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "_get_cmap_norms"
      ]
    ]
  ],
  "_colorbar_extension_shape": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "_colorbar_extension_shape"
      ]
    ]
  ],
  "_colorbar_extension_length": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "_colorbar_extension_length"
      ]
    ]
  ],
  "test_colorbar_extension_shape": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbar_extension_shape"
      ]
    ]
  ],
  "test_colorbar_extension_length": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbar_extension_length"
      ]
    ]
  ],
  "test_colorbar_extension_inverted_axis": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbar_extension_inverted_axis"
      ]
    ]
  ],
  "test_colorbar_positioning": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbar_positioning"
      ]
    ]
  ],
  "test_colorbar_single_ax_panchor_false": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbar_single_ax_panchor_false"
      ]
    ]
  ],
  "test_colorbar_single_ax_panchor_east": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbar_single_ax_panchor_east"
      ]
    ]
  ],
  "test_gridspec_make_colorbar": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_gridspec_make_colorbar"
      ]
    ]
  ],
  "test_colorbar_single_scatter": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbar_single_scatter"
      ]
    ]
  ],
  "test_remove_from_figure": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_remove_from_figure"
      ]
    ]
  ],
  "test_remove_from_figure_cl": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_remove_from_figure_cl"
      ]
    ]
  ],
  "test_colorbarbase": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbarbase"
      ]
    ]
  ],
  "test_parentless_mappable": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_parentless_mappable"
      ]
    ]
  ],
  "test_colorbar_closed_patch": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbar_closed_patch"
      ]
    ]
  ],
  "test_colorbar_ticks": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbar_ticks"
      ]
    ]
  ],
  "test_colorbar_minorticks_on_off": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbar_minorticks_on_off"
      ]
    ]
  ],
  "test_cbar_minorticks_for_rc_xyminortickvisible": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_cbar_minorticks_for_rc_xyminortickvisible"
      ]
    ]
  ],
  "test_colorbar_autoticks": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbar_autoticks"
      ]
    ]
  ],
  "test_colorbar_autotickslog": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbar_autotickslog"
      ]
    ]
  ],
  "test_colorbar_get_ticks": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbar_get_ticks"
      ]
    ]
  ],
  "test_colorbar_lognorm_extension": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbar_lognorm_extension"
      ]
    ]
  ],
  "test_colorbar_powernorm_extension": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbar_powernorm_extension"
      ]
    ]
  ],
  "test_colorbar_axes_kw": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbar_axes_kw"
      ]
    ]
  ],
  "test_colorbar_log_minortick_labels": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbar_log_minortick_labels"
      ]
    ]
  ],
  "test_colorbar_renorm": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbar_renorm"
      ]
    ]
  ],
  "test_colorbar_format": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbar_format"
      ]
    ]
  ],
  "test_colorbar_scale_reset": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbar_scale_reset"
      ]
    ]
  ],
  "test_colorbar_get_ticks_2": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbar_get_ticks_2"
      ]
    ]
  ],
  "test_colorbar_inverted_ticks": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbar_inverted_ticks"
      ]
    ]
  ],
  "test_mappable_no_alpha": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_mappable_no_alpha"
      ]
    ]
  ],
  "test_mappable_2d_alpha": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_mappable_2d_alpha"
      ]
    ]
  ],
  "test_colorbar_label": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbar_label"
      ]
    ]
  ],
  "test_keeping_xlabel": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_keeping_xlabel"
      ]
    ]
  ],
  "test_colorbar_int": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbar_int"
      ]
    ]
  ],
  "test_anchored_cbar_position_using_specgrid": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_anchored_cbar_position_using_specgrid"
      ]
    ]
  ],
  "test_colorbar_change_lim_scale": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbar_change_lim_scale"
      ]
    ]
  ],
  "test_axes_handles_same_functions": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_axes_handles_same_functions"
      ]
    ]
  ],
  "test_inset_colorbar_layout": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_inset_colorbar_layout"
      ]
    ]
  ],
  "test_twoslope_colorbar": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_twoslope_colorbar"
      ]
    ]
  ],
  "test_remove_cb_whose_mappable_has_no_figure": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_remove_cb_whose_mappable_has_no_figure"
      ]
    ]
  ],
  "test_aspects": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_aspects"
      ]
    ],
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_aspects"
      ]
    ]
  ],
  "test_proportional_colorbars": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_proportional_colorbars"
      ]
    ]
  ],
  "test_colorbar_extend_drawedges": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbar_extend_drawedges"
      ]
    ]
  ],
  "test_colorbar_contourf_extend_patches": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbar_contourf_extend_patches"
      ]
    ]
  ],
  "test_negative_boundarynorm": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_negative_boundarynorm"
      ]
    ]
  ],
  "test_nonorm": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_nonorm"
      ]
    ]
  ],
  "test_boundaries": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_boundaries"
      ]
    ]
  ],
  "test_colorbar_no_warning_rcparams_grid_true": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbar_no_warning_rcparams_grid_true"
      ]
    ]
  ],
  "test_colorbar_set_formatter_locator": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_colorbar_set_formatter_locator"
      ]
    ]
  ],
  "test_offset_text_loc": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_offset_text_loc"
      ]
    ]
  ],
  "test_title_text_loc": [
    [
      "lib/matplotlib/tests/test_colorbar.py",
      [
        "test_title_text_loc"
      ]
    ]
  ],
  "test_create_lookup_table": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_create_lookup_table"
      ]
    ]
  ],
  "test_resampled": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_resampled"
      ]
    ]
  ],
  "test_register_cmap": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_register_cmap"
      ]
    ]
  ],
  "test_colormaps_get_cmap": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_colormaps_get_cmap"
      ]
    ]
  ],
  "test_double_register_builtin_cmap": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_double_register_builtin_cmap"
      ]
    ]
  ],
  "test_unregister_builtin_cmap": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_unregister_builtin_cmap"
      ]
    ]
  ],
  "test_colormap_copy": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_colormap_copy"
      ]
    ]
  ],
  "test_colormap_equals": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_colormap_equals"
      ]
    ]
  ],
  "test_colormap_endian": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_colormap_endian"
      ]
    ]
  ],
  "test_colormap_invalid": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_colormap_invalid"
      ]
    ]
  ],
  "test_colormap_return_types": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_colormap_return_types"
      ]
    ]
  ],
  "test_BoundaryNorm": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_BoundaryNorm"
      ]
    ]
  ],
  "test_CenteredNorm": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_CenteredNorm"
      ]
    ]
  ],
  "test_lognorm_invalid": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_lognorm_invalid"
      ]
    ]
  ],
  "test_LogNorm": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_LogNorm"
      ]
    ]
  ],
  "test_LogNorm_inverse": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_LogNorm_inverse"
      ]
    ]
  ],
  "test_PowerNorm": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_PowerNorm"
      ]
    ]
  ],
  "test_PowerNorm_translation_invariance": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_PowerNorm_translation_invariance"
      ]
    ]
  ],
  "test_Normalize": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_Normalize"
      ]
    ]
  ],
  "test_FuncNorm": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_FuncNorm"
      ]
    ]
  ],
  "test_TwoSlopeNorm_autoscale": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_TwoSlopeNorm_autoscale"
      ]
    ]
  ],
  "test_TwoSlopeNorm_autoscale_None_vmin": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_TwoSlopeNorm_autoscale_None_vmin"
      ]
    ]
  ],
  "test_TwoSlopeNorm_autoscale_None_vmax": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_TwoSlopeNorm_autoscale_None_vmax"
      ]
    ]
  ],
  "test_TwoSlopeNorm_scale": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_TwoSlopeNorm_scale"
      ]
    ]
  ],
  "test_TwoSlopeNorm_scaleout_center": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_TwoSlopeNorm_scaleout_center"
      ]
    ]
  ],
  "test_TwoSlopeNorm_scaleout_center_max": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_TwoSlopeNorm_scaleout_center_max"
      ]
    ]
  ],
  "test_TwoSlopeNorm_Even": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_TwoSlopeNorm_Even"
      ]
    ]
  ],
  "test_TwoSlopeNorm_Odd": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_TwoSlopeNorm_Odd"
      ]
    ]
  ],
  "test_TwoSlopeNorm_VminEqualsVcenter": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_TwoSlopeNorm_VminEqualsVcenter"
      ]
    ]
  ],
  "test_TwoSlopeNorm_VmaxEqualsVcenter": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_TwoSlopeNorm_VmaxEqualsVcenter"
      ]
    ]
  ],
  "test_TwoSlopeNorm_VminGTVcenter": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_TwoSlopeNorm_VminGTVcenter"
      ]
    ]
  ],
  "test_TwoSlopeNorm_TwoSlopeNorm_VminGTVmax": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_TwoSlopeNorm_TwoSlopeNorm_VminGTVmax"
      ]
    ]
  ],
  "test_TwoSlopeNorm_VcenterGTVmax": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_TwoSlopeNorm_VcenterGTVmax"
      ]
    ]
  ],
  "test_TwoSlopeNorm_premature_scaling": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_TwoSlopeNorm_premature_scaling"
      ]
    ]
  ],
  "test_SymLogNorm": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_SymLogNorm"
      ]
    ]
  ],
  "test_SymLogNorm_colorbar": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_SymLogNorm_colorbar"
      ]
    ]
  ],
  "test_SymLogNorm_single_zero": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_SymLogNorm_single_zero"
      ]
    ]
  ],
  "test_init": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "TestAsinhNorm",
        "test_init"
      ]
    ],
    [
      "lib/matplotlib/tests/test_scale.py",
      [
        "TestAsinhScale",
        "test_init"
      ]
    ],
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestAsinhLocator",
        "test_init"
      ]
    ]
  ],
  "test_norm": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "TestAsinhNorm",
        "test_norm"
      ]
    ]
  ],
  "_inverse_tester": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "_inverse_tester"
      ]
    ]
  ],
  "_scalar_tester": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "_scalar_tester"
      ]
    ]
  ],
  "_mask_tester": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "_mask_tester"
      ]
    ]
  ],
  "test_cmap_and_norm_from_levels_and_colors": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_cmap_and_norm_from_levels_and_colors"
      ]
    ]
  ],
  "test_boundarynorm_and_colorbarbase": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_boundarynorm_and_colorbarbase"
      ]
    ]
  ],
  "test_cmap_and_norm_from_levels_and_colors2": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_cmap_and_norm_from_levels_and_colors2"
      ]
    ]
  ],
  "test_rgb_hsv_round_trip": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_rgb_hsv_round_trip"
      ]
    ]
  ],
  "test_autoscale_masked": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_autoscale_masked"
      ]
    ]
  ],
  "test_light_source_topo_surface": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_light_source_topo_surface"
      ]
    ]
  ],
  "test_light_source_shading_default": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_light_source_shading_default"
      ]
    ]
  ],
  "test_light_source_shading_empty_mask": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_light_source_shading_empty_mask"
      ]
    ]
  ],
  "test_light_source_masked_shading": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_light_source_masked_shading"
      ]
    ]
  ],
  "alternative_hillshade": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_light_source_hillshading",
        "alternative_hillshade"
      ]
    ]
  ],
  "test_light_source_hillshading": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_light_source_hillshading"
      ]
    ]
  ],
  "plane": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_light_source_planar_hillshading",
        "plane"
      ]
    ]
  ],
  "angled_plane": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_light_source_planar_hillshading",
        "angled_plane"
      ]
    ]
  ],
  "test_light_source_planar_hillshading": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_light_source_planar_hillshading"
      ]
    ]
  ],
  "test_color_names": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_color_names"
      ]
    ]
  ],
  "_sph2cart": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "_sph2cart"
      ]
    ]
  ],
  "_azimuth2math": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "_azimuth2math"
      ]
    ]
  ],
  "test_pandas_iterable": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_pandas_iterable"
      ]
    ]
  ],
  "test_colormap_reversing": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_colormap_reversing"
      ]
    ]
  ],
  "test_has_alpha_channel": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_has_alpha_channel"
      ]
    ]
  ],
  "test_cn": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_cn"
      ]
    ]
  ],
  "test_conversions": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_conversions"
      ]
    ]
  ],
  "test_conversions_masked": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_conversions_masked"
      ]
    ]
  ],
  "test_to_rgba_array_single_str": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_to_rgba_array_single_str"
      ]
    ]
  ],
  "test_to_rgba_array_alpha_array": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_to_rgba_array_alpha_array"
      ]
    ]
  ],
  "test_failed_conversions": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_failed_conversions"
      ]
    ]
  ],
  "test_grey_gray": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_grey_gray"
      ]
    ]
  ],
  "test_tableau_order": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_tableau_order"
      ]
    ]
  ],
  "test_ndarray_subclass_norm": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_ndarray_subclass_norm"
      ]
    ]
  ],
  "test_same_color": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_same_color"
      ]
    ]
  ],
  "test_hex_shorthand_notation": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_hex_shorthand_notation"
      ]
    ]
  ],
  "test_repr_png": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_repr_png"
      ]
    ]
  ],
  "test_repr_html": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_repr_html"
      ]
    ]
  ],
  "test_get_under_over_bad": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_get_under_over_bad"
      ]
    ]
  ],
  "test_non_mutable_get_values": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_non_mutable_get_values"
      ]
    ]
  ],
  "test_colormap_alpha_array": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_colormap_alpha_array"
      ]
    ]
  ],
  "test_colormap_bad_data_with_alpha": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_colormap_bad_data_with_alpha"
      ]
    ]
  ],
  "test_2d_to_rgba": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_2d_to_rgba"
      ]
    ]
  ],
  "test_set_dict_to_rgba": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_set_dict_to_rgba"
      ]
    ]
  ],
  "test_norm_deepcopy": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_norm_deepcopy"
      ]
    ]
  ],
  "test_norm_callback": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_norm_callback"
      ]
    ]
  ],
  "test_scalarmappable_norm_update": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_scalarmappable_norm_update"
      ]
    ]
  ],
  "test_norm_update_figs": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_norm_update_figs"
      ]
    ]
  ],
  "test_make_norm_from_scale_name": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_make_norm_from_scale_name"
      ]
    ]
  ],
  "test_color_sequences": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_color_sequences"
      ]
    ]
  ],
  "test_cm_set_cmap_error": [
    [
      "lib/matplotlib/tests/test_colors.py",
      [
        "test_cm_set_cmap_error"
      ]
    ]
  ],
  "test_image_comparison_expect_rms": [
    [
      "lib/matplotlib/tests/test_compare_images.py",
      [
        "test_image_comparison_expect_rms"
      ]
    ]
  ],
  "example_pcolor": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "example_pcolor"
      ]
    ]
  ],
  "test_constrained_layout1": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_constrained_layout1"
      ]
    ]
  ],
  "test_constrained_layout2": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_constrained_layout2"
      ]
    ]
  ],
  "test_constrained_layout3": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_constrained_layout3"
      ]
    ]
  ],
  "test_constrained_layout4": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_constrained_layout4"
      ]
    ]
  ],
  "test_constrained_layout5": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_constrained_layout5"
      ]
    ]
  ],
  "test_constrained_layout6": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_constrained_layout6"
      ]
    ]
  ],
  "test_identical_subgridspec": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_identical_subgridspec"
      ]
    ]
  ],
  "test_constrained_layout7": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_constrained_layout7"
      ]
    ]
  ],
  "test_constrained_layout8": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_constrained_layout8"
      ]
    ]
  ],
  "test_constrained_layout9": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_constrained_layout9"
      ]
    ]
  ],
  "test_constrained_layout10": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_constrained_layout10"
      ]
    ]
  ],
  "test_constrained_layout11": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_constrained_layout11"
      ]
    ]
  ],
  "test_constrained_layout11rat": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_constrained_layout11rat"
      ]
    ]
  ],
  "test_constrained_layout12": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_constrained_layout12"
      ]
    ]
  ],
  "test_constrained_layout13": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_constrained_layout13"
      ]
    ]
  ],
  "test_constrained_layout14": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_constrained_layout14"
      ]
    ]
  ],
  "test_constrained_layout15": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_constrained_layout15"
      ]
    ]
  ],
  "test_constrained_layout16": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_constrained_layout16"
      ]
    ]
  ],
  "test_constrained_layout17": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_constrained_layout17"
      ]
    ]
  ],
  "test_constrained_layout18": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_constrained_layout18"
      ]
    ]
  ],
  "test_constrained_layout19": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_constrained_layout19"
      ]
    ]
  ],
  "test_constrained_layout20": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_constrained_layout20"
      ]
    ]
  ],
  "test_constrained_layout21": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_constrained_layout21"
      ]
    ]
  ],
  "test_constrained_layout22": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_constrained_layout22"
      ]
    ]
  ],
  "test_constrained_layout23": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_constrained_layout23"
      ]
    ]
  ],
  "test_colorbar_location": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_colorbar_location"
      ]
    ]
  ],
  "test_hidden_axes": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_hidden_axes"
      ]
    ]
  ],
  "test_colorbar_align": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_colorbar_align"
      ]
    ]
  ],
  "test_colorbars_no_overlapV": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_colorbars_no_overlapV"
      ]
    ]
  ],
  "test_colorbars_no_overlapH": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_colorbars_no_overlapH"
      ]
    ]
  ],
  "test_manually_set_position": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_manually_set_position"
      ]
    ]
  ],
  "test_bboxtight": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_bboxtight"
      ]
    ]
  ],
  "test_align_labels": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_align_labels"
      ]
    ],
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_align_labels"
      ]
    ]
  ],
  "test_suplabels": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_suplabels"
      ]
    ]
  ],
  "test_gridspec_addressing": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_gridspec_addressing"
      ]
    ]
  ],
  "test_discouraged_api": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_discouraged_api"
      ]
    ]
  ],
  "test_kwargs": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_kwargs"
      ]
    ]
  ],
  "test_rect": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_rect"
      ]
    ]
  ],
  "test_compressed1": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_compressed1"
      ]
    ]
  ],
  "test_set_constrained_layout": [
    [
      "lib/matplotlib/tests/test_constrainedlayout.py",
      [
        "test_set_constrained_layout"
      ]
    ]
  ],
  "test_stem_remove": [
    [
      "lib/matplotlib/tests/test_container.py",
      [
        "test_stem_remove"
      ]
    ]
  ],
  "test_errorbar_remove": [
    [
      "lib/matplotlib/tests/test_container.py",
      [
        "test_errorbar_remove"
      ]
    ]
  ],
  "test_contour_shape_1d_valid": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_contour_shape_1d_valid"
      ]
    ]
  ],
  "test_contour_shape_2d_valid": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_contour_shape_2d_valid"
      ]
    ]
  ],
  "test_contour_shape_error": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_contour_shape_error"
      ]
    ]
  ],
  "test_contour_empty_levels": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_contour_empty_levels"
      ]
    ]
  ],
  "test_contour_Nlevels": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_contour_Nlevels"
      ]
    ]
  ],
  "test_contour_badlevel_fmt": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_contour_badlevel_fmt"
      ]
    ]
  ],
  "test_contour_uniform_z": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_contour_uniform_z"
      ]
    ]
  ],
  "test_contour_manual_labels": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_contour_manual_labels"
      ]
    ]
  ],
  "test_given_colors_levels_and_extends": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_given_colors_levels_and_extends"
      ]
    ]
  ],
  "test_contour_datetime_axis": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_contour_datetime_axis"
      ]
    ]
  ],
  "test_labels": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_labels"
      ]
    ]
  ],
  "test_corner_mask": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_corner_mask"
      ]
    ]
  ],
  "test_contourf_decreasing_levels": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_contourf_decreasing_levels"
      ]
    ]
  ],
  "test_contourf_symmetric_locator": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_contourf_symmetric_locator"
      ]
    ]
  ],
  "test_circular_contour_warning": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_circular_contour_warning"
      ]
    ]
  ],
  "test_clabel_zorder": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_clabel_zorder"
      ]
    ]
  ],
  "test_contourf_log_extension": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_contourf_log_extension"
      ]
    ]
  ],
  "test_contour_addlines": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_contour_addlines"
      ]
    ]
  ],
  "test_contour_uneven": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_contour_uneven"
      ]
    ]
  ],
  "test_contour_linewidth": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_contour_linewidth"
      ]
    ]
  ],
  "test_label_nonagg": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_label_nonagg"
      ]
    ]
  ],
  "test_contour_closed_line_loop": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_contour_closed_line_loop"
      ]
    ]
  ],
  "test_quadcontourset_reuse": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_quadcontourset_reuse"
      ]
    ]
  ],
  "test_contour_manual": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_contour_manual"
      ]
    ]
  ],
  "test_contour_line_start_on_corner_edge": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_contour_line_start_on_corner_edge"
      ]
    ]
  ],
  "test_find_nearest_contour": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_find_nearest_contour"
      ]
    ]
  ],
  "test_find_nearest_contour_no_filled": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_find_nearest_contour_no_filled"
      ]
    ]
  ],
  "test_contour_autolabel_beyond_powerlimits": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_contour_autolabel_beyond_powerlimits"
      ]
    ]
  ],
  "test_contourf_legend_elements": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_contourf_legend_elements"
      ]
    ]
  ],
  "test_contour_legend_elements": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_contour_legend_elements"
      ]
    ]
  ],
  "test_algorithm_name": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_algorithm_name"
      ]
    ]
  ],
  "test_algorithm_supports_corner_mask": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_algorithm_supports_corner_mask"
      ]
    ]
  ],
  "test_all_algorithms": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_all_algorithms"
      ]
    ]
  ],
  "test_subfigure_clabel": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_subfigure_clabel"
      ]
    ]
  ],
  "test_linestyles": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_linestyles"
      ]
    ]
  ],
  "test_negative_linestyles": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_negative_linestyles"
      ]
    ]
  ],
  "test_contour_remove": [
    [
      "lib/matplotlib/tests/test_contour.py",
      [
        "test_contour_remove"
      ]
    ]
  ],
  "test_colorcycle_basic": [
    [
      "lib/matplotlib/tests/test_cycles.py",
      [
        "test_colorcycle_basic"
      ]
    ]
  ],
  "test_marker_cycle": [
    [
      "lib/matplotlib/tests/test_cycles.py",
      [
        "test_marker_cycle"
      ]
    ]
  ],
  "test_marker_cycle_kwargs_arrays_iterators": [
    [
      "lib/matplotlib/tests/test_cycles.py",
      [
        "test_marker_cycle_kwargs_arrays_iterators"
      ]
    ]
  ],
  "test_linestylecycle_basic": [
    [
      "lib/matplotlib/tests/test_cycles.py",
      [
        "test_linestylecycle_basic"
      ]
    ]
  ],
  "test_fillcycle_basic": [
    [
      "lib/matplotlib/tests/test_cycles.py",
      [
        "test_fillcycle_basic"
      ]
    ]
  ],
  "test_fillcycle_ignore": [
    [
      "lib/matplotlib/tests/test_cycles.py",
      [
        "test_fillcycle_ignore"
      ]
    ]
  ],
  "test_property_collision_plot": [
    [
      "lib/matplotlib/tests/test_cycles.py",
      [
        "test_property_collision_plot"
      ]
    ]
  ],
  "test_property_collision_fill": [
    [
      "lib/matplotlib/tests/test_cycles.py",
      [
        "test_property_collision_fill"
      ]
    ]
  ],
  "test_valid_input_forms": [
    [
      "lib/matplotlib/tests/test_cycles.py",
      [
        "test_valid_input_forms"
      ]
    ]
  ],
  "test_cycle_reset": [
    [
      "lib/matplotlib/tests/test_cycles.py",
      [
        "test_cycle_reset"
      ]
    ]
  ],
  "test_invalid_input_forms": [
    [
      "lib/matplotlib/tests/test_cycles.py",
      [
        "test_invalid_input_forms"
      ]
    ]
  ],
  "test_date_numpyx": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_date_numpyx"
      ]
    ]
  ],
  "test_date_date2num_numpy": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_date_date2num_numpy"
      ]
    ]
  ],
  "test_date2num_NaT": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_date2num_NaT"
      ]
    ]
  ],
  "test_date2num_NaT_scalar": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_date2num_NaT_scalar"
      ]
    ]
  ],
  "test_date_empty": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_date_empty"
      ]
    ]
  ],
  "test_date_not_empty": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_date_not_empty"
      ]
    ]
  ],
  "test_axhline": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_axhline"
      ]
    ]
  ],
  "test_date_axhspan": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_date_axhspan"
      ]
    ]
  ],
  "test_date_axvspan": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_date_axvspan"
      ]
    ]
  ],
  "test_date_axhline": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_date_axhline"
      ]
    ]
  ],
  "test_date_axvline": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_date_axvline"
      ]
    ]
  ],
  "test_too_many_date_ticks": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_too_many_date_ticks"
      ]
    ]
  ],
  "_new_epoch_decorator": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "_new_epoch_decorator"
      ]
    ]
  ],
  "test_RRuleLocator": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_RRuleLocator"
      ]
    ]
  ],
  "test_RRuleLocator_dayrange": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_RRuleLocator_dayrange"
      ]
    ]
  ],
  "test_RRuleLocator_close_minmax": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_RRuleLocator_close_minmax"
      ]
    ]
  ],
  "test_DateFormatter": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_DateFormatter"
      ]
    ]
  ],
  "test_locator_set_formatter": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_locator_set_formatter"
      ]
    ]
  ],
  "test_date_formatter_callable": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_date_formatter_callable"
      ]
    ]
  ],
  "test_date_formatter_usetex": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_date_formatter_usetex"
      ]
    ]
  ],
  "test_drange": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_drange"
      ]
    ]
  ],
  "_create_auto_date_locator": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_auto_date_locator",
        "_create_auto_date_locator"
      ]
    ],
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_auto_date_locator_intmult",
        "_create_auto_date_locator"
      ]
    ],
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_concise_formatter",
        "_create_auto_date_locator"
      ]
    ],
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_concise_formatter_formats",
        "_create_auto_date_locator"
      ]
    ],
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_concise_formatter_zformats",
        "_create_auto_date_locator"
      ]
    ],
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_concise_formatter_tz",
        "_create_auto_date_locator"
      ]
    ],
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_auto_date_locator_intmult_tz",
        "_create_auto_date_locator"
      ]
    ]
  ],
  "test_auto_date_locator": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_auto_date_locator"
      ]
    ]
  ],
  "test_auto_date_locator_intmult": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_auto_date_locator_intmult"
      ]
    ]
  ],
  "test_concise_formatter_subsecond": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_concise_formatter_subsecond"
      ]
    ]
  ],
  "test_concise_formatter": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_concise_formatter"
      ]
    ]
  ],
  "test_concise_formatter_show_offset": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_concise_formatter_show_offset"
      ]
    ]
  ],
  "test_offset_changes": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_offset_changes"
      ]
    ]
  ],
  "test_concise_formatter_usetex": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_concise_formatter_usetex"
      ]
    ]
  ],
  "test_concise_formatter_formats": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_concise_formatter_formats"
      ]
    ]
  ],
  "test_concise_formatter_zformats": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_concise_formatter_zformats"
      ]
    ]
  ],
  "test_concise_formatter_tz": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_concise_formatter_tz"
      ]
    ]
  ],
  "test_auto_date_locator_intmult_tz": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_auto_date_locator_intmult_tz"
      ]
    ]
  ],
  "test_date_inverted_limit": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_date_inverted_limit"
      ]
    ]
  ],
  "_test_date2num_dst": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "_test_date2num_dst"
      ]
    ]
  ],
  "astimezone": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_date2num_dst",
        "dt_tzaware",
        "astimezone"
      ]
    ]
  ],
  "mk_tzaware": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_date2num_dst",
        "dt_tzaware",
        "mk_tzaware"
      ]
    ]
  ],
  "date_range": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_date2num_dst",
        "date_range"
      ]
    ]
  ],
  "tz_convert": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_date2num_dst",
        "tz_convert"
      ]
    ]
  ],
  "test_date2num_dst": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_date2num_dst"
      ]
    ]
  ],
  "test_date2num_dst_pandas": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_date2num_dst_pandas"
      ]
    ]
  ],
  "_test_rrulewrapper": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "_test_rrulewrapper"
      ]
    ]
  ],
  "test_rrulewrapper": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_rrulewrapper"
      ]
    ],
    [
      "lib/matplotlib/tests/test_pickle.py",
      [
        "test_rrulewrapper"
      ]
    ]
  ],
  "test_rrulewrapper_pytz": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_rrulewrapper_pytz"
      ]
    ]
  ],
  "test_yearlocator_pytz": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_yearlocator_pytz"
      ]
    ]
  ],
  "_create_year_locator": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_YearLocator",
        "_create_year_locator"
      ]
    ]
  ],
  "test_YearLocator": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_YearLocator"
      ]
    ]
  ],
  "test_DayLocator": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_DayLocator"
      ]
    ]
  ],
  "test_tz_utc": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_tz_utc"
      ]
    ]
  ],
  "test_num2timedelta": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_num2timedelta"
      ]
    ]
  ],
  "test_datetime64_in_list": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_datetime64_in_list"
      ]
    ]
  ],
  "test_change_epoch": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_change_epoch"
      ]
    ]
  ],
  "test_warn_notintervals": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_warn_notintervals"
      ]
    ]
  ],
  "test_change_converter": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_change_converter"
      ]
    ]
  ],
  "test_change_interval_multiples": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_change_interval_multiples"
      ]
    ]
  ],
  "test_julian2num": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_julian2num"
      ]
    ]
  ],
  "test_DateLocator": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_DateLocator"
      ]
    ]
  ],
  "test_datestr2num": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_datestr2num"
      ]
    ]
  ],
  "test_concise_formatter_exceptions": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_concise_formatter_exceptions"
      ]
    ]
  ],
  "test_concise_formatter_call": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_concise_formatter_call"
      ]
    ]
  ],
  "test_date_ticker_factory": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_date_ticker_factory"
      ]
    ]
  ],
  "test_datetime_masked": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_datetime_masked"
      ]
    ]
  ],
  "test_num2date_error": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_num2date_error"
      ]
    ]
  ],
  "test_num2date_roundoff": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_num2date_roundoff"
      ]
    ]
  ],
  "test_DateFormatter_settz": [
    [
      "lib/matplotlib/tests/test_dates.py",
      [
        "test_DateFormatter_settz"
      ]
    ]
  ],
  "_save_figure": [
    [
      "lib/matplotlib/tests/test_determinism.py",
      [
        "_save_figure"
      ]
    ]
  ],
  "test_determinism_check": [
    [
      "lib/matplotlib/tests/test_determinism.py",
      [
        "test_determinism_check"
      ]
    ]
  ],
  "test_determinism_source_date_epoch": [
    [
      "lib/matplotlib/tests/test_determinism.py",
      [
        "test_determinism_source_date_epoch"
      ]
    ]
  ],
  "test_sphinx_gallery_example_header": [
    [
      "lib/matplotlib/tests/test_doc.py",
      [
        "test_sphinx_gallery_example_header"
      ]
    ]
  ],
  "test_PsfontsMap": [
    [
      "lib/matplotlib/tests/test_dviread.py",
      [
        "test_PsfontsMap"
      ]
    ]
  ],
  "test_dviread": [
    [
      "lib/matplotlib/tests/test_dviread.py",
      [
        "test_dviread"
      ]
    ]
  ],
  "test_align_labels_stray_axes": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_align_labels_stray_axes"
      ]
    ]
  ],
  "test_figure_label": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_figure_label"
      ]
    ]
  ],
  "test_fignum_exists": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_fignum_exists"
      ]
    ]
  ],
  "test_clf_keyword": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_clf_keyword"
      ]
    ]
  ],
  "test_figure_legend": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_figure_legend"
      ]
    ]
  ],
  "test_gca": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_gca"
      ]
    ],
    [
      "lib/matplotlib/tests/test_pyplot.py",
      [
        "test_gca"
      ]
    ]
  ],
  "test_add_subplot_subclass": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_add_subplot_subclass"
      ]
    ]
  ],
  "test_add_subplot_invalid": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_add_subplot_invalid"
      ]
    ]
  ],
  "test_suptitle": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_suptitle"
      ]
    ],
    [
      "lib/matplotlib/tests/test_tightlayout.py",
      [
        "test_suptitle"
      ]
    ]
  ],
  "test_suptitle_fontproperties": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_suptitle_fontproperties"
      ]
    ]
  ],
  "test_too_many_figures": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_too_many_figures"
      ]
    ]
  ],
  "_as_mpl_axes": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_iterability_axes_argument",
        "MyClass",
        "_as_mpl_axes"
      ]
    ]
  ],
  "test_iterability_axes_argument": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_iterability_axes_argument"
      ]
    ]
  ],
  "test_set_fig_size": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_set_fig_size"
      ]
    ]
  ],
  "test_axes_remove": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_axes_remove"
      ]
    ]
  ],
  "test_figaspect": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_figaspect"
      ]
    ]
  ],
  "test_autofmt_xdate": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_autofmt_xdate"
      ]
    ]
  ],
  "test_change_dpi": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_change_dpi"
      ]
    ]
  ],
  "test_invalid_figure_size": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_invalid_figure_size"
      ]
    ]
  ],
  "test_invalid_figure_add_axes": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_invalid_figure_add_axes"
      ]
    ]
  ],
  "test_subplots_shareax_loglabels": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_subplots_shareax_loglabels"
      ]
    ]
  ],
  "test_savefig": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_savefig"
      ]
    ]
  ],
  "test_savefig_warns": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_savefig_warns"
      ]
    ]
  ],
  "test_savefig_backend": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_savefig_backend"
      ]
    ]
  ],
  "test_savefig_pixel_ratio": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_savefig_pixel_ratio"
      ]
    ]
  ],
  "test_figure_repr": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_figure_repr"
      ]
    ]
  ],
  "test_valid_layouts": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_valid_layouts"
      ]
    ]
  ],
  "test_invalid_layouts": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_invalid_layouts"
      ]
    ]
  ],
  "test_add_artist": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_add_artist"
      ]
    ]
  ],
  "test_fspath": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_fspath"
      ]
    ]
  ],
  "test_tightbbox": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_tightbbox"
      ]
    ]
  ],
  "test_axes_removal": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_axes_removal"
      ]
    ]
  ],
  "test_removed_axis": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_removed_axis"
      ]
    ]
  ],
  "test_figure_clear": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_figure_clear"
      ]
    ]
  ],
  "test_clf_not_redefined": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_clf_not_redefined"
      ]
    ]
  ],
  "test_picking_does_not_stale": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_picking_does_not_stale"
      ]
    ]
  ],
  "test_add_subplot_twotuple": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_add_subplot_twotuple"
      ]
    ]
  ],
  "test_tightbbox_box_aspect": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_tightbbox_box_aspect"
      ]
    ]
  ],
  "test_animated_with_canvas_change": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_animated_with_canvas_change"
      ]
    ]
  ],
  "test_basic": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "TestSubplotMosaic",
        "test_basic"
      ]
    ],
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestMaxNLocator",
        "test_basic"
      ]
    ],
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLinearLocator",
        "test_basic"
      ]
    ],
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestMultipleLocator",
        "test_basic"
      ]
    ],
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestAutoMinorLocator",
        "test_basic"
      ]
    ],
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLogLocator",
        "test_basic"
      ]
    ],
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLogFormatterExponent",
        "test_basic"
      ]
    ],
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLogFormatterSciNotation",
        "test_basic"
      ]
    ],
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLogitFormatter",
        "test_basic"
      ]
    ],
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestFormatStrFormatter",
        "test_basic"
      ]
    ],
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestStrMethodFormatter",
        "test_basic"
      ]
    ],
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestPercentFormatter",
        "test_basic"
      ]
    ]
  ],
  "test_all_nested": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "TestSubplotMosaic",
        "test_all_nested"
      ]
    ]
  ],
  "test_nested": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "TestSubplotMosaic",
        "test_nested"
      ]
    ]
  ],
  "test_nested_tuple": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "TestSubplotMosaic",
        "test_nested_tuple"
      ]
    ]
  ],
  "test_empty": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "TestSubplotMosaic",
        "test_empty"
      ]
    ],
    [
      "lib/matplotlib/tests/test_usetex.py",
      [
        "test_empty"
      ]
    ]
  ],
  "test_fail_list_of_str": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "TestSubplotMosaic",
        "test_fail_list_of_str"
      ]
    ]
  ],
  "test_subplot_kw": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "TestSubplotMosaic",
        "test_subplot_kw"
      ]
    ]
  ],
  "test_string_parser": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "TestSubplotMosaic",
        "test_string_parser"
      ]
    ]
  ],
  "test_single_str_input": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "TestSubplotMosaic",
        "test_single_str_input"
      ]
    ]
  ],
  "test_fail": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "TestSubplotMosaic",
        "test_fail"
      ]
    ]
  ],
  "test_hashable_keys": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "TestSubplotMosaic",
        "test_hashable_keys"
      ]
    ]
  ],
  "test_user_order": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "TestSubplotMosaic",
        "test_user_order"
      ]
    ]
  ],
  "test_nested_user_order": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "TestSubplotMosaic",
        "test_nested_user_order"
      ]
    ]
  ],
  "test_share_all": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "TestSubplotMosaic",
        "test_share_all"
      ]
    ]
  ],
  "test_reused_gridspec": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_reused_gridspec"
      ]
    ]
  ],
  "test_subfigure": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_subfigure"
      ]
    ]
  ],
  "test_subfigure_tightbbox": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_subfigure_tightbbox"
      ]
    ]
  ],
  "test_subfigure_dpi": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_subfigure_dpi"
      ]
    ]
  ],
  "test_subfigure_ss": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_subfigure_ss"
      ]
    ]
  ],
  "test_subfigure_double": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_subfigure_double"
      ]
    ]
  ],
  "test_subfigure_spanning": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_subfigure_spanning"
      ]
    ]
  ],
  "test_subfigure_ticks": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_subfigure_ticks"
      ]
    ]
  ],
  "test_subfigure_scatter_size": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_subfigure_scatter_size"
      ]
    ]
  ],
  "test_subfigure_pdf": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_subfigure_pdf"
      ]
    ]
  ],
  "test_add_subplot_kwargs": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_add_subplot_kwargs"
      ]
    ]
  ],
  "test_add_axes_kwargs": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_add_axes_kwargs"
      ]
    ]
  ],
  "test_ginput": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_ginput"
      ]
    ]
  ],
  "test_waitforbuttonpress": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_waitforbuttonpress"
      ]
    ]
  ],
  "test_kwargs_pass": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_kwargs_pass"
      ]
    ]
  ],
  "test_rcparams": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_rcparams"
      ]
    ],
    [
      "lib/matplotlib/tests/test_rcparams.py",
      [
        "test_rcparams"
      ]
    ]
  ],
  "test_deepcopy": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_deepcopy"
      ]
    ],
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "test_deepcopy"
      ]
    ]
  ],
  "test_unpickle_with_device_pixel_ratio": [
    [
      "lib/matplotlib/tests/test_figure.py",
      [
        "test_unpickle_with_device_pixel_ratio"
      ]
    ]
  ],
  "test_font_priority": [
    [
      "lib/matplotlib/tests/test_font_manager.py",
      [
        "test_font_priority"
      ]
    ]
  ],
  "test_score_weight": [
    [
      "lib/matplotlib/tests/test_font_manager.py",
      [
        "test_score_weight"
      ]
    ]
  ],
  "test_json_serialization": [
    [
      "lib/matplotlib/tests/test_font_manager.py",
      [
        "test_json_serialization"
      ]
    ]
  ],
  "test_otf": [
    [
      "lib/matplotlib/tests/test_font_manager.py",
      [
        "test_otf"
      ]
    ]
  ],
  "test_get_fontconfig_fonts": [
    [
      "lib/matplotlib/tests/test_font_manager.py",
      [
        "test_get_fontconfig_fonts"
      ]
    ]
  ],
  "test_hinting_factor": [
    [
      "lib/matplotlib/tests/test_font_manager.py",
      [
        "test_hinting_factor"
      ]
    ]
  ],
  "test_utf16m_sfnt": [
    [
      "lib/matplotlib/tests/test_font_manager.py",
      [
        "test_utf16m_sfnt"
      ]
    ]
  ],
  "test_find_ttc": [
    [
      "lib/matplotlib/tests/test_font_manager.py",
      [
        "test_find_ttc"
      ]
    ]
  ],
  "test_find_noto": [
    [
      "lib/matplotlib/tests/test_font_manager.py",
      [
        "test_find_noto"
      ]
    ]
  ],
  "test_find_invalid": [
    [
      "lib/matplotlib/tests/test_font_manager.py",
      [
        "test_find_invalid"
      ]
    ]
  ],
  "test_user_fonts_linux": [
    [
      "lib/matplotlib/tests/test_font_manager.py",
      [
        "test_user_fonts_linux"
      ]
    ]
  ],
  "test_addfont_as_path": [
    [
      "lib/matplotlib/tests/test_font_manager.py",
      [
        "test_addfont_as_path"
      ]
    ]
  ],
  "test_user_fonts_win32": [
    [
      "lib/matplotlib/tests/test_font_manager.py",
      [
        "test_user_fonts_win32"
      ]
    ]
  ],
  "_model_handler": [
    [
      "lib/matplotlib/tests/test_font_manager.py",
      [
        "_model_handler"
      ]
    ]
  ],
  "test_fork": [
    [
      "lib/matplotlib/tests/test_font_manager.py",
      [
        "test_fork"
      ]
    ]
  ],
  "test_missing_family": [
    [
      "lib/matplotlib/tests/test_font_manager.py",
      [
        "test_missing_family"
      ]
    ]
  ],
  "_test_threading": [
    [
      "lib/matplotlib/tests/test_font_manager.py",
      [
        "_test_threading"
      ]
    ]
  ],
  "test_fontcache_thread_safe": [
    [
      "lib/matplotlib/tests/test_font_manager.py",
      [
        "test_fontcache_thread_safe"
      ]
    ]
  ],
  "test_fontentry_dataclass": [
    [
      "lib/matplotlib/tests/test_font_manager.py",
      [
        "test_fontentry_dataclass"
      ]
    ]
  ],
  "test_fontentry_dataclass_invalid_path": [
    [
      "lib/matplotlib/tests/test_font_manager.py",
      [
        "test_fontentry_dataclass_invalid_path"
      ]
    ]
  ],
  "test_get_font_names": [
    [
      "lib/matplotlib/tests/test_font_manager.py",
      [
        "test_get_font_names"
      ]
    ]
  ],
  "test_fontconfig_pattern": [
    [
      "lib/matplotlib/tests/test_fontconfig_pattern.py",
      [
        "test_fontconfig_pattern"
      ]
    ]
  ],
  "test_fontconfig_str": [
    [
      "lib/matplotlib/tests/test_fontconfig_pattern.py",
      [
        "test_fontconfig_str"
      ]
    ]
  ],
  "test_fallback_errors": [
    [
      "lib/matplotlib/tests/test_ft2font.py",
      [
        "test_fallback_errors"
      ]
    ]
  ],
  "test_ft2font_positive_hinting_factor": [
    [
      "lib/matplotlib/tests/test_ft2font.py",
      [
        "test_ft2font_positive_hinting_factor"
      ]
    ]
  ],
  "test_fallback_smoke": [
    [
      "lib/matplotlib/tests/test_ft2font.py",
      [
        "test_fallback_smoke"
      ]
    ]
  ],
  "test_font_fallback_chinese": [
    [
      "lib/matplotlib/tests/test_ft2font.py",
      [
        "test_font_fallback_chinese"
      ]
    ]
  ],
  "test__get_fontmap": [
    [
      "lib/matplotlib/tests/test_ft2font.py",
      [
        "test__get_fontmap"
      ]
    ]
  ],
  "test_getattr": [
    [
      "lib/matplotlib/tests/test_getattr.py",
      [
        "test_getattr"
      ]
    ]
  ],
  "test_equal": [
    [
      "lib/matplotlib/tests/test_gridspec.py",
      [
        "test_equal"
      ]
    ]
  ],
  "test_width_ratios": [
    [
      "lib/matplotlib/tests/test_gridspec.py",
      [
        "test_width_ratios"
      ]
    ]
  ],
  "test_height_ratios": [
    [
      "lib/matplotlib/tests/test_gridspec.py",
      [
        "test_height_ratios"
      ]
    ]
  ],
  "test_image_interps": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_image_interps"
      ]
    ]
  ],
  "test_alpha_interp": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_alpha_interp"
      ]
    ]
  ],
  "test_interp_nearest_vs_none": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_interp_nearest_vs_none"
      ]
    ]
  ],
  "test_figimage": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_figimage"
      ]
    ]
  ],
  "test_image_python_io": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_image_python_io"
      ]
    ]
  ],
  "test_imshow_antialiased": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_imshow_antialiased"
      ]
    ]
  ],
  "test_imshow_zoom": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_imshow_zoom"
      ]
    ]
  ],
  "test_imshow_pil": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_imshow_pil"
      ]
    ]
  ],
  "test_imread_pil_uint16": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_imread_pil_uint16"
      ]
    ]
  ],
  "test_imread_fspath": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_imread_fspath"
      ]
    ]
  ],
  "test_imsave": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_imsave"
      ]
    ]
  ],
  "test_imsave_fspath": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_imsave_fspath"
      ]
    ]
  ],
  "test_imsave_color_alpha": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_imsave_color_alpha"
      ]
    ]
  ],
  "test_imsave_pil_kwargs_png": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_imsave_pil_kwargs_png"
      ]
    ]
  ],
  "test_imsave_pil_kwargs_tiff": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_imsave_pil_kwargs_tiff"
      ]
    ]
  ],
  "test_image_alpha": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_image_alpha"
      ]
    ]
  ],
  "test_cursor_data": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_cursor_data"
      ]
    ]
  ],
  "test_format_cursor_data": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_format_cursor_data"
      ]
    ]
  ],
  "test_image_clip": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_image_clip"
      ]
    ]
  ],
  "test_image_cliprect": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_image_cliprect"
      ]
    ]
  ],
  "test_imshow_10_10_1": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_imshow_10_10_1"
      ]
    ]
  ],
  "test_imshow_10_10_2": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_imshow_10_10_2"
      ]
    ]
  ],
  "test_imshow_10_10_5": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_imshow_10_10_5"
      ]
    ]
  ],
  "test_no_interpolation_origin": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_no_interpolation_origin"
      ]
    ]
  ],
  "test_image_shift": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_image_shift"
      ]
    ]
  ],
  "test_image_edges": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_image_edges"
      ]
    ]
  ],
  "test_image_composite_background": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_image_composite_background"
      ]
    ]
  ],
  "test_image_composite_alpha": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_image_composite_alpha"
      ]
    ]
  ],
  "test_clip_path_disables_compositing": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_clip_path_disables_compositing"
      ]
    ]
  ],
  "test_rasterize_dpi": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_rasterize_dpi"
      ]
    ]
  ],
  "test_bbox_image_inverted": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_bbox_image_inverted"
      ]
    ]
  ],
  "test_get_window_extent_for_AxisImage": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_get_window_extent_for_AxisImage"
      ]
    ]
  ],
  "test_zoom_and_clip_upper_origin": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_zoom_and_clip_upper_origin"
      ]
    ]
  ],
  "test_nonuniformimage_setcmap": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_nonuniformimage_setcmap"
      ]
    ]
  ],
  "test_nonuniformimage_setnorm": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_nonuniformimage_setnorm"
      ]
    ]
  ],
  "test_jpeg_2d": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_jpeg_2d"
      ]
    ]
  ],
  "test_jpeg_alpha": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_jpeg_alpha"
      ]
    ]
  ],
  "test_axesimage_setdata": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_axesimage_setdata"
      ]
    ]
  ],
  "test_figureimage_setdata": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_figureimage_setdata"
      ]
    ]
  ],
  "test_setdata_xya": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_setdata_xya"
      ]
    ]
  ],
  "test_minimized_rasterized": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_minimized_rasterized"
      ]
    ]
  ],
  "test_load_from_url": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_load_from_url"
      ]
    ]
  ],
  "test_log_scale_image": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_log_scale_image"
      ]
    ]
  ],
  "test_rotate_image": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_rotate_image"
      ]
    ]
  ],
  "test_image_preserve_size": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_image_preserve_size"
      ]
    ]
  ],
  "test_image_preserve_size2": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_image_preserve_size2"
      ]
    ]
  ],
  "test_mask_image_over_under": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_mask_image_over_under"
      ]
    ]
  ],
  "test_mask_image": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_mask_image"
      ]
    ]
  ],
  "test_mask_image_all": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_mask_image_all"
      ]
    ]
  ],
  "test_imshow_endianess": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_imshow_endianess"
      ]
    ]
  ],
  "test_imshow_masked_interpolation": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_imshow_masked_interpolation"
      ]
    ]
  ],
  "test_imshow_no_warn_invalid": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_imshow_no_warn_invalid"
      ]
    ]
  ],
  "test_imshow_clips_rgb_to_valid_range": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_imshow_clips_rgb_to_valid_range"
      ]
    ]
  ],
  "test_imshow_flatfield": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_imshow_flatfield"
      ]
    ]
  ],
  "test_imshow_bignumbers": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_imshow_bignumbers"
      ]
    ]
  ],
  "test_imshow_bignumbers_real": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_imshow_bignumbers_real"
      ]
    ]
  ],
  "test_empty_imshow": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_empty_imshow"
      ]
    ]
  ],
  "test_imshow_float16": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_imshow_float16"
      ]
    ]
  ],
  "test_imshow_float128": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_imshow_float128"
      ]
    ]
  ],
  "test_imshow_bool": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_imshow_bool"
      ]
    ]
  ],
  "test_full_invalid": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_full_invalid"
      ]
    ]
  ],
  "test_composite": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_composite"
      ]
    ]
  ],
  "test_relim": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_relim"
      ]
    ]
  ],
  "test_unclipped": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_unclipped"
      ]
    ]
  ],
  "test_respects_bbox": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_respects_bbox"
      ]
    ]
  ],
  "test_image_cursor_formatting": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_image_cursor_formatting"
      ]
    ]
  ],
  "test_image_array_alpha": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_image_array_alpha"
      ]
    ]
  ],
  "test_image_array_alpha_validation": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_image_array_alpha_validation"
      ]
    ]
  ],
  "test_exact_vmin": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_exact_vmin"
      ]
    ]
  ],
  "__array_finalize__": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "QuantityND",
        "__array_finalize__"
      ]
    ]
  ],
  "__array_ufunc__": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "QuantityND",
        "__array_ufunc__"
      ]
    ]
  ],
  "v": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "QuantityND",
        "v"
      ]
    ]
  ],
  "test_quantitynd": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_quantitynd"
      ]
    ]
  ],
  "test_imshow_quantitynd": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_imshow_quantitynd"
      ]
    ]
  ],
  "test_norm_change": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_norm_change"
      ]
    ]
  ],
  "test_huge_range_log": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_huge_range_log"
      ]
    ]
  ],
  "test_spy_box": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_spy_box"
      ]
    ]
  ],
  "test_nonuniform_and_pcolor": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_nonuniform_and_pcolor"
      ]
    ]
  ],
  "test_rgba_antialias": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_rgba_antialias"
      ]
    ]
  ],
  "test_large_image": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_large_image"
      ]
    ]
  ],
  "test_str_norms": [
    [
      "lib/matplotlib/tests/test_image.py",
      [
        "test_str_norms"
      ]
    ]
  ],
  "test_legend_ordereddict": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_legend_ordereddict"
      ]
    ]
  ],
  "test_legend_auto1": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_legend_auto1"
      ]
    ]
  ],
  "test_legend_auto2": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_legend_auto2"
      ]
    ]
  ],
  "test_legend_auto3": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_legend_auto3"
      ]
    ]
  ],
  "test_various_labels": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_various_labels"
      ]
    ]
  ],
  "test_legend_label_with_leading_underscore": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_legend_label_with_leading_underscore"
      ]
    ]
  ],
  "test_labels_first": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_labels_first"
      ]
    ]
  ],
  "test_multiple_keys": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_multiple_keys"
      ]
    ]
  ],
  "test_alpha_rgba": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_alpha_rgba"
      ]
    ]
  ],
  "test_alpha_rcparam": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_alpha_rcparam"
      ]
    ]
  ],
  "test_fancy": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_fancy"
      ]
    ]
  ],
  "test_framealpha": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_framealpha"
      ]
    ]
  ],
  "test_rc": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_rc"
      ]
    ]
  ],
  "test_legend_expand": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_legend_expand"
      ]
    ]
  ],
  "test_legend_remove": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_legend_remove"
      ]
    ]
  ],
  "test_legend_no_args": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "TestLegendFunction",
        "test_legend_no_args"
      ]
    ],
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "TestLegendFigureFunction",
        "test_legend_no_args"
      ]
    ]
  ],
  "test_legend_positional_handles_labels": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "TestLegendFunction",
        "test_legend_positional_handles_labels"
      ]
    ]
  ],
  "test_legend_positional_handles_only": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "TestLegendFunction",
        "test_legend_positional_handles_only"
      ]
    ]
  ],
  "test_legend_positional_labels_only": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "TestLegendFunction",
        "test_legend_positional_labels_only"
      ]
    ]
  ],
  "test_legend_three_args": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "TestLegendFunction",
        "test_legend_three_args"
      ]
    ]
  ],
  "test_legend_handler_map": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "TestLegendFunction",
        "test_legend_handler_map"
      ]
    ]
  ],
  "test_legend_kwargs_handles_only": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "TestLegendFunction",
        "test_legend_kwargs_handles_only"
      ]
    ]
  ],
  "test_legend_kwargs_labels_only": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "TestLegendFunction",
        "test_legend_kwargs_labels_only"
      ]
    ]
  ],
  "test_legend_kwargs_handles_labels": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "TestLegendFunction",
        "test_legend_kwargs_handles_labels"
      ]
    ]
  ],
  "test_warn_mixed_args_and_kwargs": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "TestLegendFunction",
        "test_warn_mixed_args_and_kwargs"
      ]
    ]
  ],
  "test_parasite": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "TestLegendFunction",
        "test_parasite"
      ]
    ]
  ],
  "test_legend_handle_label": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "TestLegendFigureFunction",
        "test_legend_handle_label"
      ]
    ]
  ],
  "test_legend_label_arg": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "TestLegendFigureFunction",
        "test_legend_label_arg"
      ]
    ]
  ],
  "test_legend_label_three_args": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "TestLegendFigureFunction",
        "test_legend_label_three_args"
      ]
    ]
  ],
  "test_legend_label_three_args_pluskw": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "TestLegendFigureFunction",
        "test_legend_label_three_args_pluskw"
      ]
    ]
  ],
  "test_legend_kw_args": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "TestLegendFigureFunction",
        "test_legend_kw_args"
      ]
    ]
  ],
  "test_warn_args_kwargs": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "TestLegendFigureFunction",
        "test_warn_args_kwargs"
      ]
    ]
  ],
  "test_legend_stackplot": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_legend_stackplot"
      ]
    ]
  ],
  "test_cross_figure_patch_legend": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_cross_figure_patch_legend"
      ]
    ]
  ],
  "test_nanscatter": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_nanscatter"
      ]
    ]
  ],
  "test_legend_repeatcheckok": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_legend_repeatcheckok"
      ]
    ]
  ],
  "test_not_covering_scatter": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_not_covering_scatter"
      ]
    ]
  ],
  "test_not_covering_scatter_transform": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_not_covering_scatter_transform"
      ]
    ]
  ],
  "test_linecollection_scaled_dashes": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_linecollection_scaled_dashes"
      ]
    ]
  ],
  "test_handler_numpoints": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_handler_numpoints"
      ]
    ]
  ],
  "test_text_nohandler_warning": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_text_nohandler_warning"
      ]
    ]
  ],
  "test_empty_bar_chart_with_legend": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_empty_bar_chart_with_legend"
      ]
    ]
  ],
  "test_shadow_framealpha": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_shadow_framealpha"
      ]
    ]
  ],
  "test_legend_title_empty": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_legend_title_empty"
      ]
    ]
  ],
  "test_legend_proper_window_extent": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_legend_proper_window_extent"
      ]
    ]
  ],
  "test_window_extent_cached_renderer": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_window_extent_cached_renderer"
      ]
    ]
  ],
  "test_legend_title_fontprop_fontsize": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_legend_title_fontprop_fontsize"
      ]
    ]
  ],
  "test_legend_alignment": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_legend_alignment"
      ]
    ]
  ],
  "test_legend_set_alignment": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_legend_set_alignment"
      ]
    ]
  ],
  "test_legend_labelcolor_single": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_legend_labelcolor_single"
      ]
    ]
  ],
  "test_legend_labelcolor_list": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_legend_labelcolor_list"
      ]
    ]
  ],
  "test_legend_labelcolor_linecolor": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_legend_labelcolor_linecolor"
      ]
    ]
  ],
  "test_legend_labelcolor_markeredgecolor": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_legend_labelcolor_markeredgecolor"
      ]
    ]
  ],
  "test_legend_labelcolor_markerfacecolor": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_legend_labelcolor_markerfacecolor"
      ]
    ]
  ],
  "test_legend_labelcolor_rcparam_single": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_legend_labelcolor_rcparam_single"
      ]
    ]
  ],
  "test_legend_labelcolor_rcparam_linecolor": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_legend_labelcolor_rcparam_linecolor"
      ]
    ]
  ],
  "test_legend_labelcolor_rcparam_markeredgecolor": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_legend_labelcolor_rcparam_markeredgecolor"
      ]
    ]
  ],
  "test_legend_labelcolor_rcparam_markeredgecolor_short": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_legend_labelcolor_rcparam_markeredgecolor_short"
      ]
    ]
  ],
  "test_legend_labelcolor_rcparam_markerfacecolor": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_legend_labelcolor_rcparam_markerfacecolor"
      ]
    ]
  ],
  "test_legend_labelcolor_rcparam_markerfacecolor_short": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_legend_labelcolor_rcparam_markerfacecolor_short"
      ]
    ]
  ],
  "test_get_set_draggable": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_get_set_draggable"
      ]
    ]
  ],
  "test_legend_draggable": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_legend_draggable"
      ]
    ]
  ],
  "test_alpha_handles": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_alpha_handles"
      ]
    ]
  ],
  "test_usetex_no_warn": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_usetex_no_warn"
      ]
    ]
  ],
  "test_warn_big_data_best_loc": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_warn_big_data_best_loc"
      ]
    ]
  ],
  "test_no_warn_big_data_when_loc_specified": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_no_warn_big_data_when_loc_specified"
      ]
    ]
  ],
  "test_plot_multiple_input_multiple_label": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_plot_multiple_input_multiple_label"
      ]
    ]
  ],
  "test_plot_multiple_input_single_label": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_plot_multiple_input_single_label"
      ]
    ]
  ],
  "test_plot_single_input_multiple_label": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_plot_single_input_multiple_label"
      ]
    ]
  ],
  "test_plot_multiple_label_incorrect_length_exception": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_plot_multiple_label_incorrect_length_exception"
      ]
    ]
  ],
  "test_legend_face_edgecolor": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_legend_face_edgecolor"
      ]
    ]
  ],
  "test_legend_text_axes": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_legend_text_axes"
      ]
    ]
  ],
  "test_handlerline2d": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_handlerline2d"
      ]
    ]
  ],
  "test_subfigure_legend": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_subfigure_legend"
      ]
    ]
  ],
  "test_setting_alpha_keeps_polycollection_color": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_setting_alpha_keeps_polycollection_color"
      ]
    ]
  ],
  "test_legend_markers_from_line2d": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_legend_markers_from_line2d"
      ]
    ]
  ],
  "test_ncol_ncols": [
    [
      "lib/matplotlib/tests/test_legend.py",
      [
        "test_ncol_ncols"
      ]
    ]
  ],
  "test_segment_hits": [
    [
      "lib/matplotlib/tests/test_lines.py",
      [
        "test_segment_hits"
      ]
    ]
  ],
  "test_invisible_Line_rendering": [
    [
      "lib/matplotlib/tests/test_lines.py",
      [
        "test_invisible_Line_rendering"
      ]
    ]
  ],
  "test_set_line_coll_dash": [
    [
      "lib/matplotlib/tests/test_lines.py",
      [
        "test_set_line_coll_dash"
      ]
    ]
  ],
  "test_line_dashes": [
    [
      "lib/matplotlib/tests/test_lines.py",
      [
        "test_line_dashes"
      ]
    ]
  ],
  "test_line_colors": [
    [
      "lib/matplotlib/tests/test_lines.py",
      [
        "test_line_colors"
      ]
    ]
  ],
  "test_valid_colors": [
    [
      "lib/matplotlib/tests/test_lines.py",
      [
        "test_valid_colors"
      ]
    ]
  ],
  "test_linestyle_variants": [
    [
      "lib/matplotlib/tests/test_lines.py",
      [
        "test_linestyle_variants"
      ]
    ]
  ],
  "test_valid_linestyles": [
    [
      "lib/matplotlib/tests/test_lines.py",
      [
        "test_valid_linestyles"
      ]
    ]
  ],
  "test_drawstyle_variants": [
    [
      "lib/matplotlib/tests/test_lines.py",
      [
        "test_drawstyle_variants"
      ]
    ]
  ],
  "test_no_subslice_with_transform": [
    [
      "lib/matplotlib/tests/test_lines.py",
      [
        "test_no_subslice_with_transform"
      ]
    ]
  ],
  "test_valid_drawstyles": [
    [
      "lib/matplotlib/tests/test_lines.py",
      [
        "test_valid_drawstyles"
      ]
    ]
  ],
  "test_set_drawstyle": [
    [
      "lib/matplotlib/tests/test_lines.py",
      [
        "test_set_drawstyle"
      ]
    ]
  ],
  "test_set_line_coll_dash_image": [
    [
      "lib/matplotlib/tests/test_lines.py",
      [
        "test_set_line_coll_dash_image"
      ]
    ],
    [
      "lib/matplotlib/tests/test_skew.py",
      [
        "test_set_line_coll_dash_image"
      ]
    ]
  ],
  "test_marker_fill_styles": [
    [
      "lib/matplotlib/tests/test_lines.py",
      [
        "test_marker_fill_styles"
      ]
    ]
  ],
  "test_markerfacecolor_fillstyle": [
    [
      "lib/matplotlib/tests/test_lines.py",
      [
        "test_markerfacecolor_fillstyle"
      ]
    ]
  ],
  "test_lw_scaling": [
    [
      "lib/matplotlib/tests/test_lines.py",
      [
        "test_lw_scaling"
      ]
    ]
  ],
  "test_nan_is_sorted": [
    [
      "lib/matplotlib/tests/test_lines.py",
      [
        "test_nan_is_sorted"
      ]
    ]
  ],
  "test_step_markers": [
    [
      "lib/matplotlib/tests/test_lines.py",
      [
        "test_step_markers"
      ]
    ]
  ],
  "test_markevery_figure_line_unsupported_relsize": [
    [
      "lib/matplotlib/tests/test_lines.py",
      [
        "test_markevery_figure_line_unsupported_relsize"
      ]
    ]
  ],
  "test_striped_lines": [
    [
      "lib/matplotlib/tests/test_lines.py",
      [
        "test_striped_lines"
      ]
    ]
  ],
  "test_odd_dashes": [
    [
      "lib/matplotlib/tests/test_lines.py",
      [
        "test_odd_dashes"
      ]
    ]
  ],
  "test_input_copy": [
    [
      "lib/matplotlib/tests/test_lines.py",
      [
        "test_input_copy"
      ]
    ]
  ],
  "test_markevery_prop_cycle": [
    [
      "lib/matplotlib/tests/test_lines.py",
      [
        "test_markevery_prop_cycle"
      ]
    ]
  ],
  "test_marker_fillstyle": [
    [
      "lib/matplotlib/tests/test_marker.py",
      [
        "test_marker_fillstyle"
      ]
    ]
  ],
  "test_markers_valid": [
    [
      "lib/matplotlib/tests/test_marker.py",
      [
        "test_markers_valid"
      ]
    ]
  ],
  "test_deprecated_marker": [
    [
      "lib/matplotlib/tests/test_marker.py",
      [
        "test_deprecated_marker"
      ]
    ]
  ],
  "test_markers_invalid": [
    [
      "lib/matplotlib/tests/test_marker.py",
      [
        "test_markers_invalid"
      ]
    ]
  ],
  "test_poly_marker": [
    [
      "lib/matplotlib/tests/test_marker.py",
      [
        "test_poly_marker"
      ]
    ]
  ],
  "test_star_marker": [
    [
      "lib/matplotlib/tests/test_marker.py",
      [
        "test_star_marker"
      ]
    ]
  ],
  "draw_ref_marker": [
    [
      "lib/matplotlib/tests/test_marker.py",
      [
        "test_asterisk_marker",
        "draw_ref_marker"
      ]
    ]
  ],
  "test_asterisk_marker": [
    [
      "lib/matplotlib/tests/test_marker.py",
      [
        "test_asterisk_marker"
      ]
    ]
  ],
  "test_marker_clipping": [
    [
      "lib/matplotlib/tests/test_marker.py",
      [
        "test_marker_clipping"
      ]
    ]
  ],
  "test_marker_init_transforms": [
    [
      "lib/matplotlib/tests/test_marker.py",
      [
        "test_marker_init_transforms"
      ]
    ]
  ],
  "test_marker_init_joinstyle": [
    [
      "lib/matplotlib/tests/test_marker.py",
      [
        "test_marker_init_joinstyle"
      ]
    ]
  ],
  "test_marker_init_captyle": [
    [
      "lib/matplotlib/tests/test_marker.py",
      [
        "test_marker_init_captyle"
      ]
    ]
  ],
  "test_marker_transformed": [
    [
      "lib/matplotlib/tests/test_marker.py",
      [
        "test_marker_transformed"
      ]
    ]
  ],
  "test_marker_rotated_invalid": [
    [
      "lib/matplotlib/tests/test_marker.py",
      [
        "test_marker_rotated_invalid"
      ]
    ]
  ],
  "test_marker_rotated": [
    [
      "lib/matplotlib/tests/test_marker.py",
      [
        "test_marker_rotated"
      ]
    ]
  ],
  "test_marker_scaled": [
    [
      "lib/matplotlib/tests/test_marker.py",
      [
        "test_marker_scaled"
      ]
    ]
  ],
  "test_alt_transform": [
    [
      "lib/matplotlib/tests/test_marker.py",
      [
        "test_alt_transform"
      ]
    ]
  ],
  "baseline_images": [
    [
      "lib/matplotlib/tests/test_mathtext.py",
      [
        "baseline_images"
      ]
    ]
  ],
  "test_mathtext_rendering": [
    [
      "lib/matplotlib/tests/test_mathtext.py",
      [
        "test_mathtext_rendering"
      ]
    ]
  ],
  "test_mathtext_rendering_svgastext": [
    [
      "lib/matplotlib/tests/test_mathtext.py",
      [
        "test_mathtext_rendering_svgastext"
      ]
    ]
  ],
  "test_mathtext_rendering_lightweight": [
    [
      "lib/matplotlib/tests/test_mathtext.py",
      [
        "test_mathtext_rendering_lightweight"
      ]
    ]
  ],
  "test_mathfont_rendering": [
    [
      "lib/matplotlib/tests/test_mathtext.py",
      [
        "test_mathfont_rendering"
      ]
    ]
  ],
  "test_short_long_accents": [
    [
      "lib/matplotlib/tests/test_mathtext.py",
      [
        "test_short_long_accents"
      ]
    ]
  ],
  "test_fontinfo": [
    [
      "lib/matplotlib/tests/test_mathtext.py",
      [
        "test_fontinfo"
      ]
    ]
  ],
  "test_mathtext_exceptions": [
    [
      "lib/matplotlib/tests/test_mathtext.py",
      [
        "test_mathtext_exceptions"
      ]
    ]
  ],
  "test_get_unicode_index_exception": [
    [
      "lib/matplotlib/tests/test_mathtext.py",
      [
        "test_get_unicode_index_exception"
      ]
    ]
  ],
  "test_single_minus_sign": [
    [
      "lib/matplotlib/tests/test_mathtext.py",
      [
        "test_single_minus_sign"
      ]
    ]
  ],
  "test_spaces": [
    [
      "lib/matplotlib/tests/test_mathtext.py",
      [
        "test_spaces"
      ]
    ]
  ],
  "test_operator_space": [
    [
      "lib/matplotlib/tests/test_mathtext.py",
      [
        "test_operator_space"
      ]
    ]
  ],
  "test_inverted_delimiters": [
    [
      "lib/matplotlib/tests/test_mathtext.py",
      [
        "test_inverted_delimiters"
      ]
    ]
  ],
  "test_genfrac_displaystyle": [
    [
      "lib/matplotlib/tests/test_mathtext.py",
      [
        "test_genfrac_displaystyle"
      ]
    ]
  ],
  "test_mathtext_fallback_valid": [
    [
      "lib/matplotlib/tests/test_mathtext.py",
      [
        "test_mathtext_fallback_valid"
      ]
    ]
  ],
  "test_mathtext_fallback_invalid": [
    [
      "lib/matplotlib/tests/test_mathtext.py",
      [
        "test_mathtext_fallback_invalid"
      ]
    ]
  ],
  "test_mathtext_fallback": [
    [
      "lib/matplotlib/tests/test_mathtext.py",
      [
        "test_mathtext_fallback"
      ]
    ]
  ],
  "test_math_to_image": [
    [
      "lib/matplotlib/tests/test_mathtext.py",
      [
        "test_math_to_image"
      ]
    ]
  ],
  "test_math_fontfamily": [
    [
      "lib/matplotlib/tests/test_mathtext.py",
      [
        "test_math_fontfamily"
      ]
    ]
  ],
  "test_default_math_fontfamily": [
    [
      "lib/matplotlib/tests/test_mathtext.py",
      [
        "test_default_math_fontfamily"
      ]
    ]
  ],
  "test_argument_order": [
    [
      "lib/matplotlib/tests/test_mathtext.py",
      [
        "test_argument_order"
      ]
    ]
  ],
  "test_mathtext_cmr10_minus_sign": [
    [
      "lib/matplotlib/tests/test_mathtext.py",
      [
        "test_mathtext_cmr10_minus_sign"
      ]
    ]
  ],
  "test_parse_to_version_info": [
    [
      "lib/matplotlib/tests/test_matplotlib.py",
      [
        "test_parse_to_version_info"
      ]
    ]
  ],
  "test_tmpconfigdir_warning": [
    [
      "lib/matplotlib/tests/test_matplotlib.py",
      [
        "test_tmpconfigdir_warning"
      ]
    ]
  ],
  "test_importable_with_no_home": [
    [
      "lib/matplotlib/tests/test_matplotlib.py",
      [
        "test_importable_with_no_home"
      ]
    ]
  ],
  "test_use_doc_standard_backends": [
    [
      "lib/matplotlib/tests/test_matplotlib.py",
      [
        "test_use_doc_standard_backends"
      ]
    ]
  ],
  "test_importable_with__OO": [
    [
      "lib/matplotlib/tests/test_matplotlib.py",
      [
        "test_importable_with__OO"
      ]
    ]
  ],
  "get_base": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestStride",
        "get_base"
      ]
    ]
  ],
  "stride_is_deprecated": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestStride",
        "stride_is_deprecated"
      ]
    ]
  ],
  "calc_window_target": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestStride",
        "calc_window_target"
      ]
    ]
  ],
  "test_stride_windows_invalid_input_shape": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestStride",
        "test_stride_windows_invalid_input_shape"
      ]
    ]
  ],
  "test_stride_windows_invalid_params": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestStride",
        "test_stride_windows_invalid_params"
      ]
    ]
  ],
  "test_stride_windows": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestStride",
        "test_stride_windows"
      ]
    ]
  ],
  "test_stride_windows_n32_noverlap0_unflatten": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestStride",
        "test_stride_windows_n32_noverlap0_unflatten"
      ]
    ]
  ],
  "test_window": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "test_window"
      ]
    ]
  ],
  "allclose": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestDetrend",
        "allclose"
      ]
    ]
  ],
  "test_detrend_none": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestDetrend",
        "test_detrend_none"
      ]
    ]
  ],
  "test_detrend_mean": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestDetrend",
        "test_detrend_mean"
      ]
    ]
  ],
  "test_detrend_mean_1d_base_slope_off_list_andor_axis0": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestDetrend",
        "test_detrend_mean_1d_base_slope_off_list_andor_axis0"
      ]
    ]
  ],
  "test_detrend_mean_2d": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestDetrend",
        "test_detrend_mean_2d"
      ]
    ]
  ],
  "test_detrend_ValueError": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestDetrend",
        "test_detrend_ValueError"
      ]
    ]
  ],
  "test_detrend_mean_ValueError": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestDetrend",
        "test_detrend_mean_ValueError"
      ]
    ]
  ],
  "test_detrend_linear": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestDetrend",
        "test_detrend_linear"
      ]
    ]
  ],
  "test_detrend_str_linear_1d": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestDetrend",
        "test_detrend_str_linear_1d"
      ]
    ]
  ],
  "test_detrend_linear_2d": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestDetrend",
        "test_detrend_linear_2d"
      ]
    ]
  ],
  "stim": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestSpectral",
        "stim"
      ]
    ]
  ],
  "check_freqs": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestSpectral",
        "check_freqs"
      ]
    ]
  ],
  "check_maxfreq": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestSpectral",
        "check_maxfreq"
      ]
    ]
  ],
  "test_spectral_helper_raises": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestSpectral",
        "test_spectral_helper_raises"
      ]
    ]
  ],
  "test_single_spectrum_helper_unsupported_modes": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestSpectral",
        "test_single_spectrum_helper_unsupported_modes"
      ]
    ]
  ],
  "test_spectral_helper_psd": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestSpectral",
        "test_spectral_helper_psd"
      ]
    ]
  ],
  "test_csd": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestSpectral",
        "test_csd"
      ]
    ]
  ],
  "test_csd_padding": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestSpectral",
        "test_csd_padding"
      ]
    ]
  ],
  "test_psd": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestSpectral",
        "test_psd"
      ]
    ]
  ],
  "test_psd_detrend": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestSpectral",
        "test_psd_detrend"
      ]
    ]
  ],
  "test_psd_window_hanning": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestSpectral",
        "test_psd_window_hanning"
      ]
    ]
  ],
  "test_psd_window_hanning_detrend_linear": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestSpectral",
        "test_psd_window_hanning_detrend_linear"
      ]
    ]
  ],
  "test_psd_windowarray": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestSpectral",
        "test_psd_windowarray"
      ]
    ]
  ],
  "test_psd_windowarray_scale_by_freq": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestSpectral",
        "test_psd_windowarray_scale_by_freq"
      ]
    ]
  ],
  "test_specgram_warn_only1seg": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestSpectral",
        "test_specgram_warn_only1seg"
      ]
    ]
  ],
  "test_psd_csd_equal": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestSpectral",
        "test_psd_csd_equal"
      ]
    ]
  ],
  "test_specgram_auto_default_psd_equal": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestSpectral",
        "test_specgram_auto_default_psd_equal"
      ]
    ]
  ],
  "test_specgram_complex_equivalent": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestSpectral",
        "test_specgram_complex_equivalent"
      ]
    ]
  ],
  "test_psd_windowarray_equal": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestSpectral",
        "test_psd_windowarray_equal"
      ]
    ]
  ],
  "test_cohere": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "test_cohere"
      ]
    ]
  ],
  "test_kde_integer_input": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestGaussianKDE",
        "test_kde_integer_input"
      ]
    ]
  ],
  "test_gaussian_kde_covariance_caching": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestGaussianKDE",
        "test_gaussian_kde_covariance_caching"
      ]
    ]
  ],
  "test_kde_bandwidth_method": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestGaussianKDE",
        "test_kde_bandwidth_method"
      ]
    ]
  ],
  "test_no_data": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestGaussianKDECustom",
        "test_no_data"
      ]
    ]
  ],
  "test_single_dataset_element": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestGaussianKDECustom",
        "test_single_dataset_element"
      ]
    ]
  ],
  "test_silverman_multidim_dataset": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestGaussianKDECustom",
        "test_silverman_multidim_dataset"
      ]
    ]
  ],
  "test_silverman_singledim_dataset": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestGaussianKDECustom",
        "test_silverman_singledim_dataset"
      ]
    ]
  ],
  "test_scott_multidim_dataset": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestGaussianKDECustom",
        "test_scott_multidim_dataset"
      ]
    ]
  ],
  "test_scott_singledim_dataset": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestGaussianKDECustom",
        "test_scott_singledim_dataset"
      ]
    ]
  ],
  "test_scalar_empty_dataset": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestGaussianKDECustom",
        "test_scalar_empty_dataset"
      ]
    ]
  ],
  "test_scalar_covariance_dataset": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestGaussianKDECustom",
        "test_scalar_covariance_dataset"
      ]
    ]
  ],
  "test_callable_covariance_dataset": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestGaussianKDECustom",
        "test_callable_covariance_dataset"
      ]
    ]
  ],
  "test_callable_singledim_dataset": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestGaussianKDECustom",
        "test_callable_singledim_dataset"
      ]
    ]
  ],
  "test_wrong_bw_method": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestGaussianKDECustom",
        "test_wrong_bw_method"
      ]
    ]
  ],
  "test_evaluate_diff_dim": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestGaussianKDEEvaluate",
        "test_evaluate_diff_dim"
      ]
    ]
  ],
  "test_evaluate_inv_dim": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestGaussianKDEEvaluate",
        "test_evaluate_inv_dim"
      ]
    ]
  ],
  "test_evaluate_dim_and_num": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestGaussianKDEEvaluate",
        "test_evaluate_dim_and_num"
      ]
    ]
  ],
  "test_evaluate_point_dim_not_one": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestGaussianKDEEvaluate",
        "test_evaluate_point_dim_not_one"
      ]
    ]
  ],
  "test_evaluate_equal_dim_and_num_lt": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "TestGaussianKDEEvaluate",
        "test_evaluate_equal_dim_and_num_lt"
      ]
    ]
  ],
  "test_psd_onesided_norm": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "test_psd_onesided_norm"
      ]
    ]
  ],
  "test_psd_oversampling": [
    [
      "lib/matplotlib/tests/test_mlab.py",
      [
        "test_psd_oversampling"
      ]
    ]
  ],
  "test_offsetbox_clipping": [
    [
      "lib/matplotlib/tests/test_offsetbox.py",
      [
        "test_offsetbox_clipping"
      ]
    ]
  ],
  "test_offsetbox_clip_children": [
    [
      "lib/matplotlib/tests/test_offsetbox.py",
      [
        "test_offsetbox_clip_children"
      ]
    ]
  ],
  "test_offsetbox_loc_codes": [
    [
      "lib/matplotlib/tests/test_offsetbox.py",
      [
        "test_offsetbox_loc_codes"
      ]
    ]
  ],
  "test_expand_with_tight_layout": [
    [
      "lib/matplotlib/tests/test_offsetbox.py",
      [
        "test_expand_with_tight_layout"
      ]
    ]
  ],
  "test_get_packed_offsets": [
    [
      "lib/matplotlib/tests/test_offsetbox.py",
      [
        "test_get_packed_offsets"
      ]
    ]
  ],
  "test_get_packed_offsets_fixed": [
    [
      "lib/matplotlib/tests/test_offsetbox.py",
      [
        "test_get_packed_offsets_fixed"
      ]
    ]
  ],
  "test_get_packed_offsets_expand": [
    [
      "lib/matplotlib/tests/test_offsetbox.py",
      [
        "test_get_packed_offsets_expand"
      ]
    ]
  ],
  "test_get_packed_offsets_equal": [
    [
      "lib/matplotlib/tests/test_offsetbox.py",
      [
        "test_get_packed_offsets_equal"
      ]
    ]
  ],
  "test_get_packed_offsets_equal_total_none_sep_none": [
    [
      "lib/matplotlib/tests/test_offsetbox.py",
      [
        "test_get_packed_offsets_equal_total_none_sep_none"
      ]
    ]
  ],
  "test_anchoredtext_horizontal_alignment": [
    [
      "lib/matplotlib/tests/test_offsetbox.py",
      [
        "test_anchoredtext_horizontal_alignment"
      ]
    ]
  ],
  "test_annotationbbox_extents": [
    [
      "lib/matplotlib/tests/test_offsetbox.py",
      [
        "test_annotationbbox_extents"
      ]
    ]
  ],
  "test_zorder": [
    [
      "lib/matplotlib/tests/test_offsetbox.py",
      [
        "test_zorder"
      ]
    ],
    [
      "lib/matplotlib/tests/test_table.py",
      [
        "test_zorder"
      ]
    ]
  ],
  "test_arrowprops_copied": [
    [
      "lib/matplotlib/tests/test_offsetbox.py",
      [
        "test_arrowprops_copied"
      ]
    ]
  ],
  "test_Polygon_close": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_Polygon_close"
      ]
    ]
  ],
  "test_corner_center": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_corner_center"
      ]
    ]
  ],
  "test_rotate_rect": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_rotate_rect"
      ]
    ]
  ],
  "test_rotate_rect_draw": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_rotate_rect_draw"
      ]
    ]
  ],
  "test_dash_offset_patch_draw": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_dash_offset_patch_draw"
      ]
    ]
  ],
  "test_negative_rect": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_negative_rect"
      ]
    ]
  ],
  "test_clip_to_bbox": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_clip_to_bbox"
      ]
    ]
  ],
  "test_patch_alpha_override": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_patch_alpha_override"
      ]
    ]
  ],
  "test_patch_color_none": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_patch_color_none"
      ]
    ]
  ],
  "test_patch_custom_linestyle": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_patch_custom_linestyle"
      ]
    ]
  ],
  "test_patch_linestyle_accents": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_patch_linestyle_accents"
      ]
    ]
  ],
  "test_patch_linestyle_none": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_patch_linestyle_none"
      ]
    ]
  ],
  "test_wedge_movement": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_wedge_movement"
      ]
    ]
  ],
  "test_wedge_range": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_wedge_range"
      ]
    ]
  ],
  "test_patch_str": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_patch_str"
      ]
    ]
  ],
  "test_multi_color_hatch": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_multi_color_hatch"
      ]
    ]
  ],
  "test_units_rectangle": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_units_rectangle"
      ]
    ]
  ],
  "test_connection_patch": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_connection_patch"
      ]
    ]
  ],
  "test_connection_patch_fig": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_connection_patch_fig"
      ]
    ]
  ],
  "test_datetime_rectangle": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_datetime_rectangle"
      ]
    ]
  ],
  "test_datetime_datetime_fails": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_datetime_datetime_fails"
      ]
    ]
  ],
  "test_contains_point": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_contains_point"
      ]
    ]
  ],
  "test_contains_points": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_contains_points"
      ]
    ]
  ],
  "test_shadow": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_shadow"
      ]
    ]
  ],
  "test_fancyarrow_units": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_fancyarrow_units"
      ]
    ]
  ],
  "test_fancyarrow_setdata": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_fancyarrow_setdata"
      ]
    ]
  ],
  "test_large_arc": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_large_arc"
      ]
    ]
  ],
  "test_rotated_arcs": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_rotated_arcs"
      ]
    ]
  ],
  "test_fancyarrow_shape_error": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_fancyarrow_shape_error"
      ]
    ]
  ],
  "test_boxstyle_errors": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_boxstyle_errors"
      ]
    ]
  ],
  "test_annulus": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_annulus"
      ]
    ]
  ],
  "test_annulus_setters": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_annulus_setters"
      ]
    ]
  ],
  "test_annulus_setters2": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_annulus_setters2"
      ]
    ]
  ],
  "test_degenerate_polygon": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_degenerate_polygon"
      ]
    ]
  ],
  "test_color_override_warning": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_color_override_warning"
      ]
    ]
  ],
  "test_empty_verts": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_empty_verts"
      ]
    ]
  ],
  "test_default_antialiased": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_default_antialiased"
      ]
    ]
  ],
  "test_default_linestyle": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_default_linestyle"
      ]
    ]
  ],
  "test_default_capstyle": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_default_capstyle"
      ]
    ]
  ],
  "test_default_joinstyle": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_default_joinstyle"
      ]
    ]
  ],
  "test_autoscale_arc": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_autoscale_arc"
      ]
    ]
  ],
  "test_arc_in_collection": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_arc_in_collection"
      ]
    ]
  ],
  "test_modifying_arc": [
    [
      "lib/matplotlib/tests/test_patches.py",
      [
        "test_modifying_arc"
      ]
    ]
  ],
  "test_empty_closed_path": [
    [
      "lib/matplotlib/tests/test_path.py",
      [
        "test_empty_closed_path"
      ]
    ]
  ],
  "test_readonly_path": [
    [
      "lib/matplotlib/tests/test_path.py",
      [
        "test_readonly_path"
      ]
    ]
  ],
  "test_path_exceptions": [
    [
      "lib/matplotlib/tests/test_path.py",
      [
        "test_path_exceptions"
      ]
    ]
  ],
  "test_point_in_path": [
    [
      "lib/matplotlib/tests/test_path.py",
      [
        "test_point_in_path"
      ]
    ]
  ],
  "test_contains_points_negative_radius": [
    [
      "lib/matplotlib/tests/test_path.py",
      [
        "test_contains_points_negative_radius"
      ]
    ]
  ],
  "test_exact_extents": [
    [
      "lib/matplotlib/tests/test_path.py",
      [
        "test_exact_extents"
      ]
    ]
  ],
  "test_extents_with_ignored_codes": [
    [
      "lib/matplotlib/tests/test_path.py",
      [
        "test_extents_with_ignored_codes"
      ]
    ]
  ],
  "test_point_in_path_nan": [
    [
      "lib/matplotlib/tests/test_path.py",
      [
        "test_point_in_path_nan"
      ]
    ]
  ],
  "test_nonlinear_containment": [
    [
      "lib/matplotlib/tests/test_path.py",
      [
        "test_nonlinear_containment"
      ]
    ]
  ],
  "test_arrow_contains_point": [
    [
      "lib/matplotlib/tests/test_path.py",
      [
        "test_arrow_contains_point"
      ]
    ]
  ],
  "test_path_clipping": [
    [
      "lib/matplotlib/tests/test_path.py",
      [
        "test_path_clipping"
      ]
    ]
  ],
  "test_log_transform_with_zero": [
    [
      "lib/matplotlib/tests/test_path.py",
      [
        "test_log_transform_with_zero"
      ]
    ]
  ],
  "test_make_compound_path_empty": [
    [
      "lib/matplotlib/tests/test_path.py",
      [
        "test_make_compound_path_empty"
      ]
    ]
  ],
  "test_make_compound_path_stops": [
    [
      "lib/matplotlib/tests/test_path.py",
      [
        "test_make_compound_path_stops"
      ]
    ]
  ],
  "test_xkcd": [
    [
      "lib/matplotlib/tests/test_path.py",
      [
        "test_xkcd"
      ]
    ]
  ],
  "test_xkcd_marker": [
    [
      "lib/matplotlib/tests/test_path.py",
      [
        "test_xkcd_marker"
      ]
    ]
  ],
  "test_marker_paths_pdf": [
    [
      "lib/matplotlib/tests/test_path.py",
      [
        "test_marker_paths_pdf"
      ]
    ]
  ],
  "test_nan_isolated_points": [
    [
      "lib/matplotlib/tests/test_path.py",
      [
        "test_nan_isolated_points"
      ]
    ]
  ],
  "test_path_no_doubled_point_in_to_polygon": [
    [
      "lib/matplotlib/tests/test_path.py",
      [
        "test_path_no_doubled_point_in_to_polygon"
      ]
    ]
  ],
  "test_path_to_polygons": [
    [
      "lib/matplotlib/tests/test_path.py",
      [
        "test_path_to_polygons"
      ]
    ]
  ],
  "test_path_deepcopy": [
    [
      "lib/matplotlib/tests/test_path.py",
      [
        "test_path_deepcopy"
      ]
    ]
  ],
  "test_path_shallowcopy": [
    [
      "lib/matplotlib/tests/test_path.py",
      [
        "test_path_shallowcopy"
      ]
    ]
  ],
  "test_path_intersect_path": [
    [
      "lib/matplotlib/tests/test_path.py",
      [
        "test_path_intersect_path"
      ]
    ]
  ],
  "test_full_arc": [
    [
      "lib/matplotlib/tests/test_path.py",
      [
        "test_full_arc"
      ]
    ]
  ],
  "test_disjoint_zero_length_segment": [
    [
      "lib/matplotlib/tests/test_path.py",
      [
        "test_disjoint_zero_length_segment"
      ]
    ]
  ],
  "test_intersect_zero_length_segment": [
    [
      "lib/matplotlib/tests/test_path.py",
      [
        "test_intersect_zero_length_segment"
      ]
    ]
  ],
  "test_cleanup_closepoly": [
    [
      "lib/matplotlib/tests/test_path.py",
      [
        "test_cleanup_closepoly"
      ]
    ]
  ],
  "test_patheffect1": [
    [
      "lib/matplotlib/tests/test_patheffects.py",
      [
        "test_patheffect1"
      ]
    ]
  ],
  "test_patheffect2": [
    [
      "lib/matplotlib/tests/test_patheffects.py",
      [
        "test_patheffect2"
      ]
    ]
  ],
  "test_patheffect3": [
    [
      "lib/matplotlib/tests/test_patheffects.py",
      [
        "test_patheffect3"
      ]
    ]
  ],
  "test_patheffects_stroked_text": [
    [
      "lib/matplotlib/tests/test_patheffects.py",
      [
        "test_patheffects_stroked_text"
      ]
    ]
  ],
  "test_PathEffect_points_to_pixels": [
    [
      "lib/matplotlib/tests/test_patheffects.py",
      [
        "test_PathEffect_points_to_pixels"
      ]
    ]
  ],
  "test_SimplePatchShadow_offset": [
    [
      "lib/matplotlib/tests/test_patheffects.py",
      [
        "test_SimplePatchShadow_offset"
      ]
    ]
  ],
  "test_collection": [
    [
      "lib/matplotlib/tests/test_patheffects.py",
      [
        "test_collection"
      ]
    ]
  ],
  "test_tickedstroke": [
    [
      "lib/matplotlib/tests/test_patheffects.py",
      [
        "test_tickedstroke"
      ]
    ]
  ],
  "test_patheffects_spaces_and_newlines": [
    [
      "lib/matplotlib/tests/test_patheffects.py",
      [
        "test_patheffects_spaces_and_newlines"
      ]
    ]
  ],
  "_generate_complete_test_figure": [
    [
      "lib/matplotlib/tests/test_pickle.py",
      [
        "_generate_complete_test_figure"
      ]
    ]
  ],
  "test_complete": [
    [
      "lib/matplotlib/tests/test_pickle.py",
      [
        "test_complete"
      ]
    ]
  ],
  "_pickle_load_subprocess": [
    [
      "lib/matplotlib/tests/test_pickle.py",
      [
        "_pickle_load_subprocess"
      ]
    ]
  ],
  "test_pickle_load_from_subprocess": [
    [
      "lib/matplotlib/tests/test_pickle.py",
      [
        "test_pickle_load_from_subprocess"
      ]
    ]
  ],
  "test_gcf": [
    [
      "lib/matplotlib/tests/test_pickle.py",
      [
        "test_gcf"
      ]
    ]
  ],
  "test_no_pyplot": [
    [
      "lib/matplotlib/tests/test_pickle.py",
      [
        "test_no_pyplot"
      ]
    ]
  ],
  "test_renderer": [
    [
      "lib/matplotlib/tests/test_pickle.py",
      [
        "test_renderer"
      ]
    ]
  ],
  "test_image": [
    [
      "lib/matplotlib/tests/test_pickle.py",
      [
        "test_image"
      ]
    ]
  ],
  "test_polar": [
    [
      "lib/matplotlib/tests/test_pickle.py",
      [
        "test_polar"
      ]
    ]
  ],
  "test_transform": [
    [
      "lib/matplotlib/tests/test_pickle.py",
      [
        "test_transform"
      ]
    ]
  ],
  "test_shared": [
    [
      "lib/matplotlib/tests/test_pickle.py",
      [
        "test_shared"
      ]
    ],
    [
      "lib/matplotlib/tests/test_subplots.py",
      [
        "test_shared"
      ]
    ]
  ],
  "test_inset_and_secondary": [
    [
      "lib/matplotlib/tests/test_pickle.py",
      [
        "test_inset_and_secondary"
      ]
    ]
  ],
  "test_cmap": [
    [
      "lib/matplotlib/tests/test_pickle.py",
      [
        "test_cmap"
      ]
    ]
  ],
  "test_unpickle_canvas": [
    [
      "lib/matplotlib/tests/test_pickle.py",
      [
        "test_unpickle_canvas"
      ]
    ]
  ],
  "test_mpl_toolkits": [
    [
      "lib/matplotlib/tests/test_pickle.py",
      [
        "test_mpl_toolkits"
      ]
    ]
  ],
  "test_standard_norm": [
    [
      "lib/matplotlib/tests/test_pickle.py",
      [
        "test_standard_norm"
      ]
    ]
  ],
  "test_dynamic_norm": [
    [
      "lib/matplotlib/tests/test_pickle.py",
      [
        "test_dynamic_norm"
      ]
    ]
  ],
  "test_vertexselector": [
    [
      "lib/matplotlib/tests/test_pickle.py",
      [
        "test_vertexselector"
      ]
    ]
  ],
  "test_pngsuite": [
    [
      "lib/matplotlib/tests/test_png.py",
      [
        "test_pngsuite"
      ]
    ]
  ],
  "test_truncated_file": [
    [
      "lib/matplotlib/tests/test_png.py",
      [
        "test_truncated_file"
      ]
    ]
  ],
  "test_truncated_buffer": [
    [
      "lib/matplotlib/tests/test_png.py",
      [
        "test_truncated_buffer"
      ]
    ]
  ],
  "test_polar_annotations": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_polar_annotations"
      ]
    ]
  ],
  "test_polar_coord_annotations": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_polar_coord_annotations"
      ]
    ]
  ],
  "test_polar_alignment": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_polar_alignment"
      ]
    ]
  ],
  "test_polar_twice": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_polar_twice"
      ]
    ]
  ],
  "test_polar_wrap": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_polar_wrap"
      ]
    ]
  ],
  "test_polar_units_1": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_polar_units_1"
      ]
    ]
  ],
  "test_polar_units_2": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_polar_units_2"
      ]
    ]
  ],
  "test_polar_rmin": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_polar_rmin"
      ]
    ]
  ],
  "test_polar_negative_rmin": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_polar_negative_rmin"
      ]
    ]
  ],
  "test_polar_rorigin": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_polar_rorigin"
      ]
    ]
  ],
  "test_polar_invertedylim": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_polar_invertedylim"
      ]
    ]
  ],
  "test_polar_invertedylim_rorigin": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_polar_invertedylim_rorigin"
      ]
    ]
  ],
  "test_polar_theta_position": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_polar_theta_position"
      ]
    ]
  ],
  "test_polar_rlabel_position": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_polar_rlabel_position"
      ]
    ]
  ],
  "test_polar_theta_limits": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_polar_theta_limits"
      ]
    ]
  ],
  "test_polar_rlim": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_polar_rlim"
      ]
    ]
  ],
  "test_polar_rlim_bottom": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_polar_rlim_bottom"
      ]
    ]
  ],
  "test_polar_rlim_zero": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_polar_rlim_zero"
      ]
    ]
  ],
  "test_polar_no_data": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_polar_no_data"
      ]
    ]
  ],
  "test_polar_not_datalim_adjustable": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_polar_not_datalim_adjustable"
      ]
    ]
  ],
  "test_polar_gridlines": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_polar_gridlines"
      ]
    ]
  ],
  "test_get_tightbbox_polar": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_get_tightbbox_polar"
      ]
    ]
  ],
  "test_polar_interpolation_steps_constant_r": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_polar_interpolation_steps_constant_r"
      ]
    ]
  ],
  "test_thetalim_valid_invalid": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_thetalim_valid_invalid"
      ]
    ]
  ],
  "test_thetalim_args": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_thetalim_args"
      ]
    ]
  ],
  "test_default_thetalocator": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_default_thetalocator"
      ]
    ]
  ],
  "test_axvspan": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_axvspan"
      ]
    ]
  ],
  "test_remove_shared_polar": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_remove_shared_polar"
      ]
    ]
  ],
  "test_shared_polar_keeps_ticklabels": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_shared_polar_keeps_ticklabels"
      ]
    ]
  ],
  "test_axvline_axvspan_do_not_modify_rlims": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_axvline_axvspan_do_not_modify_rlims"
      ]
    ]
  ],
  "test_cursor_precision": [
    [
      "lib/matplotlib/tests/test_polar.py",
      [
        "test_cursor_precision"
      ]
    ],
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestScalarFormatter",
        "test_cursor_precision"
      ]
    ]
  ],
  "plot_func": [
    [
      "lib/matplotlib/tests/test_preprocess_data.py",
      [
        "plot_func"
      ]
    ]
  ],
  "func_args": [
    [
      "lib/matplotlib/tests/test_preprocess_data.py",
      [
        "test_compiletime_checks",
        "func_args"
      ]
    ]
  ],
  "func_kwargs": [
    [
      "lib/matplotlib/tests/test_preprocess_data.py",
      [
        "test_compiletime_checks",
        "func_kwargs"
      ]
    ]
  ],
  "func_no_ax_args": [
    [
      "lib/matplotlib/tests/test_preprocess_data.py",
      [
        "test_compiletime_checks",
        "func_no_ax_args"
      ]
    ]
  ],
  "test_compiletime_checks": [
    [
      "lib/matplotlib/tests/test_preprocess_data.py",
      [
        "test_compiletime_checks"
      ]
    ]
  ],
  "test_function_call_without_data": [
    [
      "lib/matplotlib/tests/test_preprocess_data.py",
      [
        "test_function_call_without_data"
      ]
    ]
  ],
  "test_function_call_with_dict_input": [
    [
      "lib/matplotlib/tests/test_preprocess_data.py",
      [
        "test_function_call_with_dict_input"
      ]
    ]
  ],
  "test_function_call_with_dict_data": [
    [
      "lib/matplotlib/tests/test_preprocess_data.py",
      [
        "test_function_call_with_dict_data"
      ]
    ]
  ],
  "test_function_call_with_dict_data_not_in_data": [
    [
      "lib/matplotlib/tests/test_preprocess_data.py",
      [
        "test_function_call_with_dict_data_not_in_data"
      ]
    ]
  ],
  "test_function_call_with_pandas_data": [
    [
      "lib/matplotlib/tests/test_preprocess_data.py",
      [
        "test_function_call_with_pandas_data"
      ]
    ]
  ],
  "test_function_call_replace_all": [
    [
      "lib/matplotlib/tests/test_preprocess_data.py",
      [
        "test_function_call_replace_all"
      ]
    ]
  ],
  "test_no_label_replacements": [
    [
      "lib/matplotlib/tests/test_preprocess_data.py",
      [
        "test_no_label_replacements"
      ]
    ]
  ],
  "test_more_args_than_pos_parameter": [
    [
      "lib/matplotlib/tests/test_preprocess_data.py",
      [
        "test_more_args_than_pos_parameter"
      ]
    ]
  ],
  "funcy": [
    [
      "lib/matplotlib/tests/test_preprocess_data.py",
      [
        "test_docstring_addition",
        "funcy"
      ]
    ]
  ],
  "funcy_1": [
    [
      "lib/matplotlib/tests/test_preprocess_data.py",
      [
        "test_docstring_addition",
        "funcy_1"
      ]
    ]
  ],
  "funcy_2": [
    [
      "lib/matplotlib/tests/test_preprocess_data.py",
      [
        "test_docstring_addition",
        "funcy_2"
      ]
    ]
  ],
  "funcy_3": [
    [
      "lib/matplotlib/tests/test_preprocess_data.py",
      [
        "test_docstring_addition",
        "funcy_3"
      ]
    ]
  ],
  "test_docstring_addition": [
    [
      "lib/matplotlib/tests/test_preprocess_data.py",
      [
        "test_docstring_addition"
      ]
    ]
  ],
  "test_data_parameter_replacement": [
    [
      "lib/matplotlib/tests/test_preprocess_data.py",
      [
        "test_data_parameter_replacement"
      ]
    ]
  ],
  "test_dict_unpack": [
    [
      "lib/matplotlib/tests/test_preprocess_data.py",
      [
        "TestPlotTypes",
        "test_dict_unpack"
      ]
    ]
  ],
  "test_data_kwarg": [
    [
      "lib/matplotlib/tests/test_preprocess_data.py",
      [
        "TestPlotTypes",
        "test_data_kwarg"
      ]
    ]
  ],
  "test_pyplot_up_to_date": [
    [
      "lib/matplotlib/tests/test_pyplot.py",
      [
        "test_pyplot_up_to_date"
      ]
    ]
  ],
  "test_copy_docstring_and_deprecators": [
    [
      "lib/matplotlib/tests/test_pyplot.py",
      [
        "test_copy_docstring_and_deprecators"
      ]
    ]
  ],
  "test_pyplot_box": [
    [
      "lib/matplotlib/tests/test_pyplot.py",
      [
        "test_pyplot_box"
      ]
    ]
  ],
  "test_stackplot_smoke": [
    [
      "lib/matplotlib/tests/test_pyplot.py",
      [
        "test_stackplot_smoke"
      ]
    ]
  ],
  "test_nrows_error": [
    [
      "lib/matplotlib/tests/test_pyplot.py",
      [
        "test_nrows_error"
      ]
    ]
  ],
  "test_ioff": [
    [
      "lib/matplotlib/tests/test_pyplot.py",
      [
        "test_ioff"
      ]
    ]
  ],
  "test_ion": [
    [
      "lib/matplotlib/tests/test_pyplot.py",
      [
        "test_ion"
      ]
    ]
  ],
  "test_nested_ion_ioff": [
    [
      "lib/matplotlib/tests/test_pyplot.py",
      [
        "test_nested_ion_ioff"
      ]
    ]
  ],
  "test_close": [
    [
      "lib/matplotlib/tests/test_pyplot.py",
      [
        "test_close"
      ]
    ]
  ],
  "test_subplot_reuse": [
    [
      "lib/matplotlib/tests/test_pyplot.py",
      [
        "test_subplot_reuse"
      ]
    ]
  ],
  "test_axes_kwargs": [
    [
      "lib/matplotlib/tests/test_pyplot.py",
      [
        "test_axes_kwargs"
      ]
    ]
  ],
  "test_subplot_replace_projection": [
    [
      "lib/matplotlib/tests/test_pyplot.py",
      [
        "test_subplot_replace_projection"
      ]
    ]
  ],
  "test_subplot_kwarg_collision": [
    [
      "lib/matplotlib/tests/test_pyplot.py",
      [
        "test_subplot_kwarg_collision"
      ]
    ]
  ],
  "test_subplot_projection_reuse": [
    [
      "lib/matplotlib/tests/test_pyplot.py",
      [
        "test_subplot_projection_reuse"
      ]
    ]
  ],
  "test_subplot_polar_normalization": [
    [
      "lib/matplotlib/tests/test_pyplot.py",
      [
        "test_subplot_polar_normalization"
      ]
    ]
  ],
  "test_subplot_change_projection": [
    [
      "lib/matplotlib/tests/test_pyplot.py",
      [
        "test_subplot_change_projection"
      ]
    ]
  ],
  "test_polar_second_call": [
    [
      "lib/matplotlib/tests/test_pyplot.py",
      [
        "test_polar_second_call"
      ]
    ]
  ],
  "test_fallback_position": [
    [
      "lib/matplotlib/tests/test_pyplot.py",
      [
        "test_fallback_position"
      ]
    ]
  ],
  "test_set_current_figure_via_subfigure": [
    [
      "lib/matplotlib/tests/test_pyplot.py",
      [
        "test_set_current_figure_via_subfigure"
      ]
    ]
  ],
  "test_set_current_axes_on_subfigure": [
    [
      "lib/matplotlib/tests/test_pyplot.py",
      [
        "test_set_current_axes_on_subfigure"
      ]
    ]
  ],
  "test_pylab_integration": [
    [
      "lib/matplotlib/tests/test_pyplot.py",
      [
        "test_pylab_integration"
      ]
    ]
  ],
  "test_doc_pyplot_summary": [
    [
      "lib/matplotlib/tests/test_pyplot.py",
      [
        "test_doc_pyplot_summary"
      ]
    ]
  ],
  "test_minor_ticks": [
    [
      "lib/matplotlib/tests/test_pyplot.py",
      [
        "test_minor_ticks"
      ]
    ],
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_minor_ticks"
      ]
    ]
  ],
  "draw_quiver": [
    [
      "lib/matplotlib/tests/test_quiver.py",
      [
        "draw_quiver"
      ]
    ]
  ],
  "test_quiver_memory_leak": [
    [
      "lib/matplotlib/tests/test_quiver.py",
      [
        "test_quiver_memory_leak"
      ]
    ]
  ],
  "test_quiver_key_memory_leak": [
    [
      "lib/matplotlib/tests/test_quiver.py",
      [
        "test_quiver_key_memory_leak"
      ]
    ]
  ],
  "test_quiver_number_of_args": [
    [
      "lib/matplotlib/tests/test_quiver.py",
      [
        "test_quiver_number_of_args"
      ]
    ]
  ],
  "test_quiver_arg_sizes": [
    [
      "lib/matplotlib/tests/test_quiver.py",
      [
        "test_quiver_arg_sizes"
      ]
    ]
  ],
  "test_no_warnings": [
    [
      "lib/matplotlib/tests/test_quiver.py",
      [
        "test_no_warnings"
      ]
    ]
  ],
  "test_zero_headlength": [
    [
      "lib/matplotlib/tests/test_quiver.py",
      [
        "test_zero_headlength"
      ]
    ]
  ],
  "test_quiver_animate": [
    [
      "lib/matplotlib/tests/test_quiver.py",
      [
        "test_quiver_animate"
      ]
    ]
  ],
  "test_quiver_with_key": [
    [
      "lib/matplotlib/tests/test_quiver.py",
      [
        "test_quiver_with_key"
      ]
    ]
  ],
  "test_quiver_single": [
    [
      "lib/matplotlib/tests/test_quiver.py",
      [
        "test_quiver_single"
      ]
    ]
  ],
  "test_quiver_copy": [
    [
      "lib/matplotlib/tests/test_quiver.py",
      [
        "test_quiver_copy"
      ]
    ]
  ],
  "test_quiver_key_pivot": [
    [
      "lib/matplotlib/tests/test_quiver.py",
      [
        "test_quiver_key_pivot"
      ]
    ]
  ],
  "test_quiver_key_xy": [
    [
      "lib/matplotlib/tests/test_quiver.py",
      [
        "test_quiver_key_xy"
      ]
    ]
  ],
  "test_barbs": [
    [
      "lib/matplotlib/tests/test_quiver.py",
      [
        "test_barbs"
      ]
    ]
  ],
  "test_barbs_pivot": [
    [
      "lib/matplotlib/tests/test_quiver.py",
      [
        "test_barbs_pivot"
      ]
    ]
  ],
  "test_barbs_flip": [
    [
      "lib/matplotlib/tests/test_quiver.py",
      [
        "test_barbs_flip"
      ]
    ]
  ],
  "test_barb_copy": [
    [
      "lib/matplotlib/tests/test_quiver.py",
      [
        "test_barb_copy"
      ]
    ]
  ],
  "test_bad_masked_sizes": [
    [
      "lib/matplotlib/tests/test_quiver.py",
      [
        "test_bad_masked_sizes"
      ]
    ]
  ],
  "test_angles_and_scale": [
    [
      "lib/matplotlib/tests/test_quiver.py",
      [
        "test_angles_and_scale"
      ]
    ]
  ],
  "test_quiver_xy": [
    [
      "lib/matplotlib/tests/test_quiver.py",
      [
        "test_quiver_xy"
      ]
    ]
  ],
  "test_quiverkey_angles": [
    [
      "lib/matplotlib/tests/test_quiver.py",
      [
        "test_quiverkey_angles"
      ]
    ]
  ],
  "test_quiver_setuvc_numbers": [
    [
      "lib/matplotlib/tests/test_quiver.py",
      [
        "test_quiver_setuvc_numbers"
      ]
    ]
  ],
  "test_RcParams_class": [
    [
      "lib/matplotlib/tests/test_rcparams.py",
      [
        "test_RcParams_class"
      ]
    ]
  ],
  "test_rcparams_update": [
    [
      "lib/matplotlib/tests/test_rcparams.py",
      [
        "test_rcparams_update"
      ]
    ]
  ],
  "test_rcparams_init": [
    [
      "lib/matplotlib/tests/test_rcparams.py",
      [
        "test_rcparams_init"
      ]
    ]
  ],
  "test_Bug_2543": [
    [
      "lib/matplotlib/tests/test_rcparams.py",
      [
        "test_Bug_2543"
      ]
    ]
  ],
  "test_legend_colors": [
    [
      "lib/matplotlib/tests/test_rcparams.py",
      [
        "test_legend_colors"
      ]
    ]
  ],
  "test_mfc_rcparams": [
    [
      "lib/matplotlib/tests/test_rcparams.py",
      [
        "test_mfc_rcparams"
      ]
    ]
  ],
  "test_mec_rcparams": [
    [
      "lib/matplotlib/tests/test_rcparams.py",
      [
        "test_mec_rcparams"
      ]
    ]
  ],
  "test_axes_titlecolor_rcparams": [
    [
      "lib/matplotlib/tests/test_rcparams.py",
      [
        "test_axes_titlecolor_rcparams"
      ]
    ]
  ],
  "test_Issue_1713": [
    [
      "lib/matplotlib/tests/test_rcparams.py",
      [
        "test_Issue_1713"
      ]
    ]
  ],
  "test_animation_frame_formats": [
    [
      "lib/matplotlib/tests/test_rcparams.py",
      [
        "test_animation_frame_formats"
      ]
    ]
  ],
  "generate_validator_testcases": [
    [
      "lib/matplotlib/tests/test_rcparams.py",
      [
        "generate_validator_testcases"
      ]
    ]
  ],
  "test_validator_valid": [
    [
      "lib/matplotlib/tests/test_rcparams.py",
      [
        "test_validator_valid"
      ]
    ]
  ],
  "test_validator_invalid": [
    [
      "lib/matplotlib/tests/test_rcparams.py",
      [
        "test_validator_invalid"
      ]
    ]
  ],
  "test_validate_fontweight": [
    [
      "lib/matplotlib/tests/test_rcparams.py",
      [
        "test_validate_fontweight"
      ]
    ]
  ],
  "test_validate_fontstretch": [
    [
      "lib/matplotlib/tests/test_rcparams.py",
      [
        "test_validate_fontstretch"
      ]
    ]
  ],
  "test_keymaps": [
    [
      "lib/matplotlib/tests/test_rcparams.py",
      [
        "test_keymaps"
      ]
    ]
  ],
  "test_no_backend_reset_rccontext": [
    [
      "lib/matplotlib/tests/test_rcparams.py",
      [
        "test_no_backend_reset_rccontext"
      ]
    ]
  ],
  "test_rcparams_reset_after_fail": [
    [
      "lib/matplotlib/tests/test_rcparams.py",
      [
        "test_rcparams_reset_after_fail"
      ]
    ]
  ],
  "test_backend_fallback_headless": [
    [
      "lib/matplotlib/tests/test_rcparams.py",
      [
        "test_backend_fallback_headless"
      ]
    ]
  ],
  "test_backend_fallback_headful": [
    [
      "lib/matplotlib/tests/test_rcparams.py",
      [
        "test_backend_fallback_headful"
      ]
    ]
  ],
  "test_deprecation": [
    [
      "lib/matplotlib/tests/test_rcparams.py",
      [
        "test_deprecation"
      ]
    ]
  ],
  "test_sankey": [
    [
      "lib/matplotlib/tests/test_sankey.py",
      [
        "test_sankey"
      ]
    ]
  ],
  "test_label": [
    [
      "lib/matplotlib/tests/test_sankey.py",
      [
        "test_label"
      ]
    ]
  ],
  "test_format_using_callable": [
    [
      "lib/matplotlib/tests/test_sankey.py",
      [
        "test_format_using_callable"
      ]
    ]
  ],
  "test_sankey_errors": [
    [
      "lib/matplotlib/tests/test_sankey.py",
      [
        "test_sankey_errors"
      ]
    ]
  ],
  "test_sankey_add_errors": [
    [
      "lib/matplotlib/tests/test_sankey.py",
      [
        "test_sankey_add_errors"
      ]
    ]
  ],
  "test_sankey2": [
    [
      "lib/matplotlib/tests/test_sankey.py",
      [
        "test_sankey2"
      ]
    ]
  ],
  "test_sankey3": [
    [
      "lib/matplotlib/tests/test_sankey.py",
      [
        "test_sankey3"
      ]
    ]
  ],
  "test_symlog_mask_nan": [
    [
      "lib/matplotlib/tests/test_scale.py",
      [
        "test_symlog_mask_nan"
      ]
    ]
  ],
  "test_logit_scales": [
    [
      "lib/matplotlib/tests/test_scale.py",
      [
        "test_logit_scales"
      ]
    ]
  ],
  "test_log_scatter": [
    [
      "lib/matplotlib/tests/test_scale.py",
      [
        "test_log_scatter"
      ]
    ]
  ],
  "test_logscale_subs": [
    [
      "lib/matplotlib/tests/test_scale.py",
      [
        "test_logscale_subs"
      ]
    ]
  ],
  "test_logscale_mask": [
    [
      "lib/matplotlib/tests/test_scale.py",
      [
        "test_logscale_mask"
      ]
    ]
  ],
  "test_extra_kwargs_raise": [
    [
      "lib/matplotlib/tests/test_scale.py",
      [
        "test_extra_kwargs_raise"
      ]
    ]
  ],
  "test_logscale_invert_transform": [
    [
      "lib/matplotlib/tests/test_scale.py",
      [
        "test_logscale_invert_transform"
      ]
    ]
  ],
  "test_logscale_transform_repr": [
    [
      "lib/matplotlib/tests/test_scale.py",
      [
        "test_logscale_transform_repr"
      ]
    ]
  ],
  "test_logscale_nonpos_values": [
    [
      "lib/matplotlib/tests/test_scale.py",
      [
        "test_logscale_nonpos_values"
      ]
    ]
  ],
  "test_invalid_log_lims": [
    [
      "lib/matplotlib/tests/test_scale.py",
      [
        "test_invalid_log_lims"
      ]
    ]
  ],
  "test_function_scale": [
    [
      "lib/matplotlib/tests/test_scale.py",
      [
        "test_function_scale"
      ]
    ]
  ],
  "test_pass_scale": [
    [
      "lib/matplotlib/tests/test_scale.py",
      [
        "test_pass_scale"
      ]
    ]
  ],
  "test_scale_deepcopy": [
    [
      "lib/matplotlib/tests/test_scale.py",
      [
        "test_scale_deepcopy"
      ]
    ]
  ],
  "test_transforms": [
    [
      "lib/matplotlib/tests/test_scale.py",
      [
        "TestAsinhScale",
        "test_transforms"
      ]
    ]
  ],
  "test_base_init": [
    [
      "lib/matplotlib/tests/test_scale.py",
      [
        "TestAsinhScale",
        "test_base_init"
      ]
    ]
  ],
  "test_fmtloc": [
    [
      "lib/matplotlib/tests/test_scale.py",
      [
        "TestAsinhScale",
        "test_fmtloc"
      ]
    ]
  ],
  "test_bad_scale": [
    [
      "lib/matplotlib/tests/test_scale.py",
      [
        "TestAsinhScale",
        "test_bad_scale"
      ]
    ]
  ],
  "test_overflow": [
    [
      "lib/matplotlib/tests/test_simplification.py",
      [
        "test_overflow"
      ]
    ]
  ],
  "test_diamond": [
    [
      "lib/matplotlib/tests/test_simplification.py",
      [
        "test_diamond"
      ]
    ]
  ],
  "test_clipping_out_of_bounds": [
    [
      "lib/matplotlib/tests/test_simplification.py",
      [
        "test_clipping_out_of_bounds"
      ]
    ]
  ],
  "test_noise": [
    [
      "lib/matplotlib/tests/test_simplification.py",
      [
        "test_noise"
      ]
    ]
  ],
  "_get_simplified": [
    [
      "lib/matplotlib/tests/test_simplification.py",
      [
        "test_antiparallel_simplification",
        "_get_simplified"
      ]
    ]
  ],
  "test_antiparallel_simplification": [
    [
      "lib/matplotlib/tests/test_simplification.py",
      [
        "test_antiparallel_simplification"
      ]
    ]
  ],
  "test_angled_antiparallel": [
    [
      "lib/matplotlib/tests/test_simplification.py",
      [
        "test_angled_antiparallel"
      ]
    ]
  ],
  "test_sine_plus_noise": [
    [
      "lib/matplotlib/tests/test_simplification.py",
      [
        "test_sine_plus_noise"
      ]
    ]
  ],
  "test_simplify_curve": [
    [
      "lib/matplotlib/tests/test_simplification.py",
      [
        "test_simplify_curve"
      ]
    ]
  ],
  "test_closed_path_nan_removal": [
    [
      "lib/matplotlib/tests/test_simplification.py",
      [
        "test_closed_path_nan_removal"
      ]
    ]
  ],
  "test_closed_path_clipping": [
    [
      "lib/matplotlib/tests/test_simplification.py",
      [
        "test_closed_path_clipping"
      ]
    ]
  ],
  "test_hatch": [
    [
      "lib/matplotlib/tests/test_simplification.py",
      [
        "test_hatch"
      ]
    ]
  ],
  "test_fft_peaks": [
    [
      "lib/matplotlib/tests/test_simplification.py",
      [
        "test_fft_peaks"
      ]
    ]
  ],
  "test_start_with_moveto": [
    [
      "lib/matplotlib/tests/test_simplification.py",
      [
        "test_start_with_moveto"
      ]
    ]
  ],
  "test_throw_rendering_complexity_exceeded": [
    [
      "lib/matplotlib/tests/test_simplification.py",
      [
        "test_throw_rendering_complexity_exceeded"
      ]
    ]
  ],
  "test_clipper": [
    [
      "lib/matplotlib/tests/test_simplification.py",
      [
        "test_clipper"
      ]
    ]
  ],
  "test_para_equal_perp": [
    [
      "lib/matplotlib/tests/test_simplification.py",
      [
        "test_para_equal_perp"
      ]
    ]
  ],
  "test_clipping_with_nans": [
    [
      "lib/matplotlib/tests/test_simplification.py",
      [
        "test_clipping_with_nans"
      ]
    ]
  ],
  "test_clipping_full": [
    [
      "lib/matplotlib/tests/test_simplification.py",
      [
        "test_clipping_full"
      ]
    ]
  ],
  "test_skew_rectangle": [
    [
      "lib/matplotlib/tests/test_skew.py",
      [
        "test_skew_rectangle"
      ]
    ]
  ],
  "plot_file": [
    [
      "lib/matplotlib/tests/test_sphinxext.py",
      [
        "test_tinypages",
        "plot_file"
      ]
    ]
  ],
  "plot_directive_file": [
    [
      "lib/matplotlib/tests/test_sphinxext.py",
      [
        "test_tinypages",
        "plot_directive_file"
      ]
    ]
  ],
  "test_tinypages": [
    [
      "lib/matplotlib/tests/test_sphinxext.py",
      [
        "test_tinypages"
      ]
    ]
  ],
  "test_plot_html_show_source_link": [
    [
      "lib/matplotlib/tests/test_sphinxext.py",
      [
        "test_plot_html_show_source_link"
      ]
    ]
  ],
  "build_sphinx_html": [
    [
      "lib/matplotlib/tests/test_sphinxext.py",
      [
        "build_sphinx_html"
      ]
    ]
  ],
  "set_val": [
    [
      "lib/matplotlib/tests/test_spines.py",
      [
        "test_spine_class",
        "SpineMock",
        "set_val"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "Slider",
        "set_val"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "RangeSlider",
        "set_val"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "TextBox",
        "set_val"
      ]
    ]
  ],
  "test_spine_class": [
    [
      "lib/matplotlib/tests/test_spines.py",
      [
        "test_spine_class"
      ]
    ]
  ],
  "test_spines_axes_positions": [
    [
      "lib/matplotlib/tests/test_spines.py",
      [
        "test_spines_axes_positions"
      ]
    ]
  ],
  "test_spines_data_positions": [
    [
      "lib/matplotlib/tests/test_spines.py",
      [
        "test_spines_data_positions"
      ]
    ]
  ],
  "test_spine_nonlinear_data_positions": [
    [
      "lib/matplotlib/tests/test_spines.py",
      [
        "test_spine_nonlinear_data_positions"
      ]
    ]
  ],
  "test_spines_capstyle": [
    [
      "lib/matplotlib/tests/test_spines.py",
      [
        "test_spines_capstyle"
      ]
    ]
  ],
  "test_label_without_ticks": [
    [
      "lib/matplotlib/tests/test_spines.py",
      [
        "test_label_without_ticks"
      ]
    ]
  ],
  "velocity_field": [
    [
      "lib/matplotlib/tests/test_streamplot.py",
      [
        "velocity_field"
      ]
    ]
  ],
  "swirl_velocity_field": [
    [
      "lib/matplotlib/tests/test_streamplot.py",
      [
        "swirl_velocity_field"
      ]
    ]
  ],
  "test_startpoints": [
    [
      "lib/matplotlib/tests/test_streamplot.py",
      [
        "test_startpoints"
      ]
    ]
  ],
  "test_colormap": [
    [
      "lib/matplotlib/tests/test_streamplot.py",
      [
        "test_colormap"
      ]
    ]
  ],
  "test_linewidth": [
    [
      "lib/matplotlib/tests/test_streamplot.py",
      [
        "test_linewidth"
      ]
    ]
  ],
  "test_masks_and_nans": [
    [
      "lib/matplotlib/tests/test_streamplot.py",
      [
        "test_masks_and_nans"
      ]
    ]
  ],
  "test_maxlength": [
    [
      "lib/matplotlib/tests/test_streamplot.py",
      [
        "test_maxlength"
      ]
    ]
  ],
  "test_maxlength_no_broken": [
    [
      "lib/matplotlib/tests/test_streamplot.py",
      [
        "test_maxlength_no_broken"
      ]
    ]
  ],
  "test_direction": [
    [
      "lib/matplotlib/tests/test_streamplot.py",
      [
        "test_direction"
      ]
    ]
  ],
  "test_streamplot_limits": [
    [
      "lib/matplotlib/tests/test_streamplot.py",
      [
        "test_streamplot_limits"
      ]
    ]
  ],
  "test_streamplot_grid": [
    [
      "lib/matplotlib/tests/test_streamplot.py",
      [
        "test_streamplot_grid"
      ]
    ]
  ],
  "test_streamplot_inputs": [
    [
      "lib/matplotlib/tests/test_streamplot.py",
      [
        "test_streamplot_inputs"
      ]
    ]
  ],
  "temp_style": [
    [
      "lib/matplotlib/tests/test_style.py",
      [
        "temp_style"
      ]
    ]
  ],
  "test_invalid_rc_warning_includes_filename": [
    [
      "lib/matplotlib/tests/test_style.py",
      [
        "test_invalid_rc_warning_includes_filename"
      ]
    ]
  ],
  "test_available": [
    [
      "lib/matplotlib/tests/test_style.py",
      [
        "test_available"
      ]
    ]
  ],
  "test_use": [
    [
      "lib/matplotlib/tests/test_style.py",
      [
        "test_use"
      ]
    ]
  ],
  "test_use_url": [
    [
      "lib/matplotlib/tests/test_style.py",
      [
        "test_use_url"
      ]
    ]
  ],
  "test_single_path": [
    [
      "lib/matplotlib/tests/test_style.py",
      [
        "test_single_path"
      ]
    ]
  ],
  "test_context": [
    [
      "lib/matplotlib/tests/test_style.py",
      [
        "test_context"
      ]
    ]
  ],
  "test_context_with_dict": [
    [
      "lib/matplotlib/tests/test_style.py",
      [
        "test_context_with_dict"
      ]
    ]
  ],
  "test_context_with_dict_after_namedstyle": [
    [
      "lib/matplotlib/tests/test_style.py",
      [
        "test_context_with_dict_after_namedstyle"
      ]
    ]
  ],
  "test_context_with_dict_before_namedstyle": [
    [
      "lib/matplotlib/tests/test_style.py",
      [
        "test_context_with_dict_before_namedstyle"
      ]
    ]
  ],
  "test_context_with_union_of_dict_and_namedstyle": [
    [
      "lib/matplotlib/tests/test_style.py",
      [
        "test_context_with_union_of_dict_and_namedstyle"
      ]
    ]
  ],
  "test_context_with_badparam": [
    [
      "lib/matplotlib/tests/test_style.py",
      [
        "test_context_with_badparam"
      ]
    ]
  ],
  "test_alias": [
    [
      "lib/matplotlib/tests/test_style.py",
      [
        "test_alias"
      ]
    ]
  ],
  "test_xkcd_no_cm": [
    [
      "lib/matplotlib/tests/test_style.py",
      [
        "test_xkcd_no_cm"
      ]
    ]
  ],
  "test_xkcd_cm": [
    [
      "lib/matplotlib/tests/test_style.py",
      [
        "test_xkcd_cm"
      ]
    ]
  ],
  "test_deprecated_seaborn_styles": [
    [
      "lib/matplotlib/tests/test_style.py",
      [
        "test_deprecated_seaborn_styles"
      ]
    ]
  ],
  "test_up_to_date_blacklist": [
    [
      "lib/matplotlib/tests/test_style.py",
      [
        "test_up_to_date_blacklist"
      ]
    ]
  ],
  "check_shared": [
    [
      "lib/matplotlib/tests/test_subplots.py",
      [
        "check_shared"
      ]
    ]
  ],
  "check_visible": [
    [
      "lib/matplotlib/tests/test_subplots.py",
      [
        "check_visible"
      ]
    ]
  ],
  "test_label_outer_span": [
    [
      "lib/matplotlib/tests/test_subplots.py",
      [
        "test_label_outer_span"
      ]
    ]
  ],
  "test_shared_and_moved": [
    [
      "lib/matplotlib/tests/test_subplots.py",
      [
        "test_shared_and_moved"
      ]
    ]
  ],
  "test_exceptions": [
    [
      "lib/matplotlib/tests/test_subplots.py",
      [
        "test_exceptions"
      ]
    ]
  ],
  "test_subplots_offsettext": [
    [
      "lib/matplotlib/tests/test_subplots.py",
      [
        "test_subplots_offsettext"
      ]
    ]
  ],
  "test_subplots_hide_ticklabels": [
    [
      "lib/matplotlib/tests/test_subplots.py",
      [
        "test_subplots_hide_ticklabels"
      ]
    ]
  ],
  "test_subplots_hide_axislabels": [
    [
      "lib/matplotlib/tests/test_subplots.py",
      [
        "test_subplots_hide_axislabels"
      ]
    ]
  ],
  "test_get_gridspec": [
    [
      "lib/matplotlib/tests/test_subplots.py",
      [
        "test_get_gridspec"
      ]
    ]
  ],
  "test_dont_mutate_kwargs": [
    [
      "lib/matplotlib/tests/test_subplots.py",
      [
        "test_dont_mutate_kwargs"
      ]
    ]
  ],
  "test_subplot_factory_reapplication": [
    [
      "lib/matplotlib/tests/test_subplots.py",
      [
        "test_subplot_factory_reapplication"
      ]
    ]
  ],
  "test_width_and_height_ratios": [
    [
      "lib/matplotlib/tests/test_subplots.py",
      [
        "test_width_and_height_ratios"
      ]
    ]
  ],
  "test_width_and_height_ratios_mosaic": [
    [
      "lib/matplotlib/tests/test_subplots.py",
      [
        "test_width_and_height_ratios_mosaic"
      ]
    ]
  ],
  "test_ratio_overlapping_kws": [
    [
      "lib/matplotlib/tests/test_subplots.py",
      [
        "test_ratio_overlapping_kws"
      ]
    ]
  ],
  "test_non_square": [
    [
      "lib/matplotlib/tests/test_table.py",
      [
        "test_non_square"
      ]
    ]
  ],
  "test_label_colours": [
    [
      "lib/matplotlib/tests/test_table.py",
      [
        "test_label_colours"
      ]
    ]
  ],
  "test_diff_cell_table": [
    [
      "lib/matplotlib/tests/test_table.py",
      [
        "test_diff_cell_table"
      ]
    ]
  ],
  "test_customcell": [
    [
      "lib/matplotlib/tests/test_table.py",
      [
        "test_customcell"
      ]
    ]
  ],
  "test_auto_column": [
    [
      "lib/matplotlib/tests/test_table.py",
      [
        "test_auto_column"
      ]
    ]
  ],
  "test_table_cells": [
    [
      "lib/matplotlib/tests/test_table.py",
      [
        "test_table_cells"
      ]
    ]
  ],
  "test_warn_to_fail": [
    [
      "lib/matplotlib/tests/test_testing.py",
      [
        "test_warn_to_fail"
      ]
    ]
  ],
  "test_parametrize_with_check_figure_equal": [
    [
      "lib/matplotlib/tests/test_testing.py",
      [
        "test_parametrize_with_check_figure_equal"
      ]
    ]
  ],
  "test_wrap_failure": [
    [
      "lib/matplotlib/tests/test_testing.py",
      [
        "test_wrap_failure"
      ]
    ]
  ],
  "test_check_figures_equal_extra_fig": [
    [
      "lib/matplotlib/tests/test_testing.py",
      [
        "test_check_figures_equal_extra_fig"
      ]
    ]
  ],
  "test_check_figures_equal_closed_fig": [
    [
      "lib/matplotlib/tests/test_testing.py",
      [
        "test_check_figures_equal_closed_fig"
      ]
    ]
  ],
  "test_fontconfig_preamble": [
    [
      "lib/matplotlib/tests/test_texmanager.py",
      [
        "test_fontconfig_preamble"
      ]
    ]
  ],
  "test_font_selection": [
    [
      "lib/matplotlib/tests/test_texmanager.py",
      [
        "test_font_selection"
      ]
    ]
  ],
  "test_unicode_characters": [
    [
      "lib/matplotlib/tests/test_texmanager.py",
      [
        "test_unicode_characters"
      ]
    ]
  ],
  "test_openin_any_paranoid": [
    [
      "lib/matplotlib/tests/test_texmanager.py",
      [
        "test_openin_any_paranoid"
      ]
    ]
  ],
  "find_matplotlib_font": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_font_styles",
        "find_matplotlib_font"
      ]
    ]
  ],
  "test_font_styles": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_font_styles"
      ]
    ]
  ],
  "test_multiline": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_multiline"
      ]
    ]
  ],
  "draw_box": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_multiline2",
        "draw_box"
      ]
    ]
  ],
  "test_multiline2": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_multiline2"
      ]
    ]
  ],
  "test_antialiasing": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_antialiasing"
      ]
    ]
  ],
  "test_afm_kerning": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_afm_kerning"
      ]
    ]
  ],
  "test_contains": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_contains"
      ]
    ]
  ],
  "test_annotation_contains": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_annotation_contains"
      ]
    ]
  ],
  "test_annotate_errors": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_annotate_errors"
      ]
    ]
  ],
  "test_titles": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_titles"
      ]
    ]
  ],
  "test_alignment": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_alignment"
      ]
    ]
  ],
  "test_axes_titles": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_axes_titles"
      ]
    ]
  ],
  "test_non_default_dpi": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_non_default_dpi"
      ]
    ]
  ],
  "test_get_rotation_string": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_get_rotation_string"
      ]
    ]
  ],
  "test_get_rotation_float": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_get_rotation_float"
      ]
    ]
  ],
  "test_get_rotation_int": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_get_rotation_int"
      ]
    ]
  ],
  "test_get_rotation_raises": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_get_rotation_raises"
      ]
    ]
  ],
  "test_get_rotation_none": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_get_rotation_none"
      ]
    ]
  ],
  "test_get_rotation_mod360": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_get_rotation_mod360"
      ]
    ]
  ],
  "test_null_rotation_with_rotation_mode": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_null_rotation_with_rotation_mode"
      ]
    ]
  ],
  "test_bbox_clipping": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_bbox_clipping"
      ]
    ]
  ],
  "test_annotation_negative_ax_coords": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_annotation_negative_ax_coords"
      ]
    ]
  ],
  "test_annotation_negative_fig_coords": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_annotation_negative_fig_coords"
      ]
    ]
  ],
  "test_text_stale": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_text_stale"
      ]
    ]
  ],
  "test_agg_text_clip": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_agg_text_clip"
      ]
    ]
  ],
  "test_text_size_binding": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_text_size_binding"
      ]
    ]
  ],
  "test_font_scaling": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_font_scaling"
      ]
    ]
  ],
  "test_two_2line_texts": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_two_2line_texts"
      ]
    ]
  ],
  "test_validate_linespacing": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_validate_linespacing"
      ]
    ]
  ],
  "test_nonfinite_pos": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_nonfinite_pos"
      ]
    ]
  ],
  "test_hinting_factor_backends": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_hinting_factor_backends"
      ]
    ]
  ],
  "test_usetex_is_copied": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_usetex_is_copied"
      ]
    ]
  ],
  "test_single_artist_usetex": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_single_artist_usetex"
      ]
    ]
  ],
  "test_single_artist_usenotex": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_single_artist_usenotex"
      ]
    ]
  ],
  "test_text_as_path_opacity": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_text_as_path_opacity"
      ]
    ]
  ],
  "test_text_as_text_opacity": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_text_as_text_opacity"
      ]
    ]
  ],
  "test_text_repr": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_text_repr"
      ]
    ]
  ],
  "test_annotation_update": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_annotation_update"
      ]
    ]
  ],
  "test_annotation_units": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_annotation_units"
      ]
    ]
  ],
  "test_large_subscript_title": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_large_subscript_title"
      ]
    ]
  ],
  "test_wrap": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_wrap"
      ]
    ]
  ],
  "test_long_word_wrap": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_long_word_wrap"
      ]
    ]
  ],
  "test_wrap_no_wrap": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_wrap_no_wrap"
      ]
    ]
  ],
  "test_buffer_size": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_buffer_size"
      ]
    ]
  ],
  "test_fontproperties_kwarg_precedence": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_fontproperties_kwarg_precedence"
      ]
    ]
  ],
  "test_transform_rotates_text": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_transform_rotates_text"
      ]
    ]
  ],
  "test_update_mutate_input": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_update_mutate_input"
      ]
    ]
  ],
  "test_invalid_rotation_values": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_invalid_rotation_values"
      ]
    ]
  ],
  "test_invalid_color": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_invalid_color"
      ]
    ]
  ],
  "test_pdf_kerning": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_pdf_kerning"
      ]
    ]
  ],
  "test_unsupported_script": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_unsupported_script"
      ]
    ]
  ],
  "test_parse_math": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_parse_math"
      ]
    ]
  ],
  "test_parse_math_rcparams": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_parse_math_rcparams"
      ]
    ]
  ],
  "test_pdf_font42_kerning": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_pdf_font42_kerning"
      ]
    ]
  ],
  "test_pdf_chars_beyond_bmp": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_pdf_chars_beyond_bmp"
      ]
    ]
  ],
  "test_metrics_cache": [
    [
      "lib/matplotlib/tests/test_text.py",
      [
        "test_metrics_cache"
      ]
    ]
  ],
  "test_copy": [
    [
      "lib/matplotlib/tests/test_textpath.py",
      [
        "test_copy"
      ]
    ],
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "test_copy"
      ]
    ]
  ],
  "test_integer": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestMaxNLocator",
        "test_integer"
      ]
    ]
  ],
  "test_set_params": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLinearLocator",
        "test_set_params"
      ]
    ],
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestMultipleLocator",
        "test_set_params"
      ]
    ],
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLogLocator",
        "test_set_params"
      ]
    ],
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestNullLocator",
        "test_set_params"
      ]
    ],
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestFixedLocator",
        "test_set_params"
      ]
    ],
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestIndexLocator",
        "test_set_params"
      ]
    ],
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestSymmetricalLogLocator",
        "test_set_params"
      ]
    ],
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestAsinhLocator",
        "test_set_params"
      ]
    ]
  ],
  "test_view_limits": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestMultipleLocator",
        "test_view_limits"
      ]
    ]
  ],
  "test_view_limits_round_numbers": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestMultipleLocator",
        "test_view_limits_round_numbers"
      ]
    ]
  ],
  "test_low_number_of_majorticks": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestAutoMinorLocator",
        "test_low_number_of_majorticks"
      ]
    ]
  ],
  "test_using_all_default_major_steps": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestAutoMinorLocator",
        "test_using_all_default_major_steps"
      ]
    ]
  ],
  "test_number_of_minor_ticks": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestAutoMinorLocator",
        "test_number_of_minor_ticks"
      ]
    ]
  ],
  "test_additional": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestAutoMinorLocator",
        "test_additional"
      ]
    ]
  ],
  "test_switch_to_autolocator": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLogLocator",
        "test_switch_to_autolocator"
      ]
    ]
  ],
  "isclose": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "_LogitHelper",
        "isclose"
      ]
    ]
  ],
  "assert_almost_equal": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "_LogitHelper",
        "assert_almost_equal"
      ]
    ]
  ],
  "test_basic_major": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLogitLocator",
        "test_basic_major"
      ]
    ]
  ],
  "test_maxn_major": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLogitLocator",
        "test_maxn_major"
      ]
    ]
  ],
  "test_nbins_major": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLogitLocator",
        "test_nbins_major"
      ]
    ]
  ],
  "test_minor": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLogitLocator",
        "test_minor"
      ]
    ]
  ],
  "test_minor_attr": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLogitLocator",
        "test_minor_attr"
      ]
    ]
  ],
  "test_nonsingular_ok": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLogitLocator",
        "test_nonsingular_ok"
      ]
    ]
  ],
  "test_nonsingular_nok": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLogitLocator",
        "test_nonsingular_nok"
      ]
    ]
  ],
  "test_linear_values": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestAsinhLocator",
        "test_linear_values"
      ]
    ]
  ],
  "test_wide_values": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestAsinhLocator",
        "test_wide_values"
      ]
    ]
  ],
  "test_near_zero": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestAsinhLocator",
        "test_near_zero"
      ]
    ]
  ],
  "test_fallback": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestAsinhLocator",
        "test_fallback"
      ]
    ]
  ],
  "test_symmetrizing": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestAsinhLocator",
        "test_symmetrizing"
      ]
    ]
  ],
  "test_base_rounding": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestAsinhLocator",
        "test_base_rounding"
      ]
    ]
  ],
  "test_unicode_minus": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestScalarFormatter",
        "test_unicode_minus"
      ]
    ],
    [
      "lib/matplotlib/tests/test_usetex.py",
      [
        "test_unicode_minus"
      ]
    ]
  ],
  "test_offset_value": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestScalarFormatter",
        "test_offset_value"
      ]
    ]
  ],
  "test_use_offset": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestScalarFormatter",
        "test_use_offset"
      ]
    ]
  ],
  "test_useMathText": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestScalarFormatter",
        "test_useMathText"
      ]
    ]
  ],
  "test_set_use_offset_float": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestScalarFormatter",
        "test_set_use_offset_float"
      ]
    ]
  ],
  "test_use_locale": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestScalarFormatter",
        "test_use_locale"
      ]
    ]
  ],
  "test_scilimits": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestScalarFormatter",
        "test_scilimits"
      ]
    ]
  ],
  "test_format_data": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestScalarFormatter",
        "test_format_data"
      ]
    ]
  ],
  "test_cursor_dummy_axis": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestScalarFormatter",
        "test_cursor_dummy_axis"
      ]
    ]
  ],
  "test_mathtext_ticks": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestScalarFormatter",
        "test_mathtext_ticks"
      ]
    ]
  ],
  "test_cmr10_substitutions": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestScalarFormatter",
        "test_cmr10_substitutions"
      ]
    ]
  ],
  "test_empty_locs": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestScalarFormatter",
        "test_empty_locs"
      ]
    ]
  ],
  "test_blank": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLogFormatterExponent",
        "test_blank"
      ]
    ]
  ],
  "test_min_exponent": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLogFormatterMathtext",
        "test_min_exponent"
      ]
    ]
  ],
  "test_pprint": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLogFormatter",
        "test_pprint"
      ]
    ]
  ],
  "_sub_labels": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLogFormatter",
        "_sub_labels"
      ]
    ]
  ],
  "test_sublabel": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLogFormatter",
        "test_sublabel"
      ]
    ]
  ],
  "test_LogFormatter_call": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLogFormatter",
        "test_LogFormatter_call"
      ]
    ]
  ],
  "test_LogFormatter_call_tiny": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLogFormatter",
        "test_LogFormatter_call_tiny"
      ]
    ]
  ],
  "logit_deformatter": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLogitFormatter",
        "logit_deformatter"
      ]
    ]
  ],
  "test_logit_deformater": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLogitFormatter",
        "test_logit_deformater"
      ]
    ]
  ],
  "test_invalid": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLogitFormatter",
        "test_invalid"
      ]
    ]
  ],
  "test_variablelength": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLogitFormatter",
        "test_variablelength"
      ]
    ]
  ],
  "test_minor_vs_major": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLogitFormatter",
        "test_minor_vs_major"
      ]
    ]
  ],
  "test_minor_number": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLogitFormatter",
        "test_minor_number"
      ]
    ]
  ],
  "test_use_overline": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLogitFormatter",
        "test_use_overline"
      ]
    ]
  ],
  "test_one_half": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLogitFormatter",
        "test_one_half"
      ]
    ]
  ],
  "test_format_data_short": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestLogitFormatter",
        "test_format_data_short"
      ]
    ]
  ],
  "test_params": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestEngFormatter",
        "test_params"
      ]
    ]
  ],
  "test_engformatter_usetex_useMathText": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "test_engformatter_usetex_useMathText"
      ]
    ]
  ],
  "test_latex": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "TestPercentFormatter",
        "test_latex"
      ]
    ]
  ],
  "test_majformatter_type": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "test_majformatter_type"
      ]
    ]
  ],
  "test_minformatter_type": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "test_minformatter_type"
      ]
    ]
  ],
  "test_majlocator_type": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "test_majlocator_type"
      ]
    ]
  ],
  "test_minlocator_type": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "test_minlocator_type"
      ]
    ]
  ],
  "test_minorticks_rc": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "test_minorticks_rc"
      ]
    ]
  ],
  "test_remove_overlap": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "test_remove_overlap"
      ]
    ]
  ],
  "test_bad_locator_subs": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "test_bad_locator_subs"
      ]
    ]
  ],
  "test_small_range_loglocator": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "test_small_range_loglocator"
      ]
    ]
  ],
  "test_NullFormatter": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "test_NullFormatter"
      ]
    ]
  ],
  "test_set_offset_string": [
    [
      "lib/matplotlib/tests/test_ticker.py",
      [
        "test_set_offset_string"
      ]
    ]
  ],
  "test_tight_layout1": [
    [
      "lib/matplotlib/tests/test_tightlayout.py",
      [
        "test_tight_layout1"
      ]
    ]
  ],
  "test_tight_layout2": [
    [
      "lib/matplotlib/tests/test_tightlayout.py",
      [
        "test_tight_layout2"
      ]
    ]
  ],
  "test_tight_layout3": [
    [
      "lib/matplotlib/tests/test_tightlayout.py",
      [
        "test_tight_layout3"
      ]
    ]
  ],
  "test_tight_layout4": [
    [
      "lib/matplotlib/tests/test_tightlayout.py",
      [
        "test_tight_layout4"
      ]
    ]
  ],
  "test_tight_layout5": [
    [
      "lib/matplotlib/tests/test_tightlayout.py",
      [
        "test_tight_layout5"
      ]
    ]
  ],
  "test_tight_layout6": [
    [
      "lib/matplotlib/tests/test_tightlayout.py",
      [
        "test_tight_layout6"
      ]
    ]
  ],
  "test_tight_layout7": [
    [
      "lib/matplotlib/tests/test_tightlayout.py",
      [
        "test_tight_layout7"
      ]
    ]
  ],
  "test_tight_layout8": [
    [
      "lib/matplotlib/tests/test_tightlayout.py",
      [
        "test_tight_layout8"
      ]
    ]
  ],
  "test_tight_layout9": [
    [
      "lib/matplotlib/tests/test_tightlayout.py",
      [
        "test_tight_layout9"
      ]
    ]
  ],
  "test_outward_ticks": [
    [
      "lib/matplotlib/tests/test_tightlayout.py",
      [
        "test_outward_ticks"
      ]
    ]
  ],
  "add_offsetboxes": [
    [
      "lib/matplotlib/tests/test_tightlayout.py",
      [
        "add_offsetboxes"
      ]
    ]
  ],
  "_subplots": [
    [
      "lib/matplotlib/tests/test_tightlayout.py",
      [
        "test_tight_layout_offsetboxes",
        "_subplots"
      ]
    ]
  ],
  "test_tight_layout_offsetboxes": [
    [
      "lib/matplotlib/tests/test_tightlayout.py",
      [
        "test_tight_layout_offsetboxes"
      ]
    ]
  ],
  "test_empty_layout": [
    [
      "lib/matplotlib/tests/test_tightlayout.py",
      [
        "test_empty_layout"
      ]
    ]
  ],
  "test_verybig_decorators": [
    [
      "lib/matplotlib/tests/test_tightlayout.py",
      [
        "test_verybig_decorators"
      ]
    ]
  ],
  "test_big_decorators_horizontal": [
    [
      "lib/matplotlib/tests/test_tightlayout.py",
      [
        "test_big_decorators_horizontal"
      ]
    ]
  ],
  "test_big_decorators_vertical": [
    [
      "lib/matplotlib/tests/test_tightlayout.py",
      [
        "test_big_decorators_vertical"
      ]
    ]
  ],
  "test_badsubplotgrid": [
    [
      "lib/matplotlib/tests/test_tightlayout.py",
      [
        "test_badsubplotgrid"
      ]
    ]
  ],
  "test_collapsed": [
    [
      "lib/matplotlib/tests/test_tightlayout.py",
      [
        "test_collapsed"
      ]
    ]
  ],
  "test_non_agg_renderer": [
    [
      "lib/matplotlib/tests/test_tightlayout.py",
      [
        "test_non_agg_renderer"
      ]
    ]
  ],
  "test_manual_colorbar": [
    [
      "lib/matplotlib/tests/test_tightlayout.py",
      [
        "test_manual_colorbar"
      ]
    ]
  ],
  "test_clipped_to_axes": [
    [
      "lib/matplotlib/tests/test_tightlayout.py",
      [
        "test_clipped_to_axes"
      ]
    ]
  ],
  "test_tight_pads": [
    [
      "lib/matplotlib/tests/test_tightlayout.py",
      [
        "test_tight_pads"
      ]
    ]
  ],
  "test_tight_kwargs": [
    [
      "lib/matplotlib/tests/test_tightlayout.py",
      [
        "test_tight_kwargs"
      ]
    ]
  ],
  "test_non_affine_caching": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "test_non_affine_caching"
      ]
    ]
  ],
  "test_external_transform_api": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "test_external_transform_api"
      ]
    ]
  ],
  "test_pre_transform_plotting": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "test_pre_transform_plotting"
      ]
    ]
  ],
  "test_contour_pre_transform_limits": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "test_contour_pre_transform_limits"
      ]
    ]
  ],
  "test_pcolor_pre_transform_limits": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "test_pcolor_pre_transform_limits"
      ]
    ]
  ],
  "test_pcolormesh_pre_transform_limits": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "test_pcolormesh_pre_transform_limits"
      ]
    ]
  ],
  "test_Affine2D_from_values": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "test_Affine2D_from_values"
      ]
    ]
  ],
  "test_affine_inverted_invalidated": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "test_affine_inverted_invalidated"
      ]
    ]
  ],
  "test_clipping_of_log": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "test_clipping_of_log"
      ]
    ]
  ],
  "setup_method": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "TestBasicTransform",
        "setup_method"
      ]
    ]
  ],
  "test_transform_depth": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "TestBasicTransform",
        "test_transform_depth"
      ]
    ]
  ],
  "test_left_to_right_iteration": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "TestBasicTransform",
        "test_left_to_right_iteration"
      ]
    ]
  ],
  "test_transform_shortcuts": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "TestBasicTransform",
        "test_transform_shortcuts"
      ]
    ]
  ],
  "test_contains_branch": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "TestBasicTransform",
        "test_contains_branch"
      ]
    ]
  ],
  "test_affine_simplification": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "TestBasicTransform",
        "test_affine_simplification"
      ]
    ]
  ],
  "test_line_extent_axes_coords": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "TestTransformPlotInterface",
        "test_line_extent_axes_coords"
      ]
    ]
  ],
  "test_line_extent_data_coords": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "TestTransformPlotInterface",
        "test_line_extent_data_coords"
      ]
    ]
  ],
  "test_line_extent_compound_coords1": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "TestTransformPlotInterface",
        "test_line_extent_compound_coords1"
      ]
    ]
  ],
  "test_line_extent_predata_transform_coords": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "TestTransformPlotInterface",
        "test_line_extent_predata_transform_coords"
      ]
    ]
  ],
  "test_line_extent_compound_coords2": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "TestTransformPlotInterface",
        "test_line_extent_compound_coords2"
      ]
    ]
  ],
  "test_line_extents_affine": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "TestTransformPlotInterface",
        "test_line_extents_affine"
      ]
    ]
  ],
  "test_line_extents_non_affine": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "TestTransformPlotInterface",
        "test_line_extents_non_affine"
      ]
    ]
  ],
  "test_pathc_extents_non_affine": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "TestTransformPlotInterface",
        "test_pathc_extents_non_affine"
      ]
    ]
  ],
  "test_pathc_extents_affine": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "TestTransformPlotInterface",
        "test_pathc_extents_affine"
      ]
    ]
  ],
  "test_line_extents_for_non_affine_transData": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "TestTransformPlotInterface",
        "test_line_extents_for_non_affine_transData"
      ]
    ]
  ],
  "assert_bbox_eq": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "assert_bbox_eq"
      ]
    ]
  ],
  "test_bbox_frozen_copies_minpos": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "test_bbox_frozen_copies_minpos"
      ]
    ]
  ],
  "test_bbox_intersection": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "test_bbox_intersection"
      ]
    ]
  ],
  "test_bbox_as_strings": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "test_bbox_as_strings"
      ]
    ]
  ],
  "test_str_transform": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "test_str_transform"
      ]
    ]
  ],
  "test_transform_single_point": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "test_transform_single_point"
      ]
    ]
  ],
  "test_log_transform": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "test_log_transform"
      ]
    ]
  ],
  "test_nan_overlap": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "test_nan_overlap"
      ]
    ]
  ],
  "test_transform_angles": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "test_transform_angles"
      ]
    ]
  ],
  "test_nonsingular": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "test_nonsingular"
      ]
    ]
  ],
  "test_invalid_arguments": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "test_invalid_arguments"
      ]
    ]
  ],
  "test_transformed_path": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "test_transformed_path"
      ]
    ]
  ],
  "test_transformed_patch_path": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "test_transformed_patch_path"
      ]
    ]
  ],
  "test_lockable_bbox": [
    [
      "lib/matplotlib/tests/test_transforms.py",
      [
        "test_lockable_bbox"
      ]
    ]
  ],
  "test_extract_triangulation_params": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "TestTriangulationParams",
        "test_extract_triangulation_params"
      ]
    ]
  ],
  "test_extract_triangulation_positional_mask": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_extract_triangulation_positional_mask"
      ]
    ]
  ],
  "test_triangulation_init": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_triangulation_init"
      ]
    ]
  ],
  "test_delaunay": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_delaunay"
      ]
    ]
  ],
  "test_delaunay_duplicate_points": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_delaunay_duplicate_points"
      ]
    ]
  ],
  "test_delaunay_points_in_line": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_delaunay_points_in_line"
      ]
    ]
  ],
  "test_delaunay_insufficient_points": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_delaunay_insufficient_points"
      ]
    ]
  ],
  "tri_contains_point": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_delaunay_robust",
        "tri_contains_point"
      ]
    ]
  ],
  "tris_contain_point": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_delaunay_robust",
        "tris_contain_point"
      ]
    ]
  ],
  "test_delaunay_robust": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_delaunay_robust"
      ]
    ]
  ],
  "test_tripcolor": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_tripcolor"
      ]
    ]
  ],
  "test_tripcolor_color": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_tripcolor_color"
      ]
    ]
  ],
  "test_tripcolor_clim": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_tripcolor_clim"
      ]
    ]
  ],
  "test_tripcolor_warnings": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_tripcolor_warnings"
      ]
    ]
  ],
  "test_no_modify": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_no_modify"
      ]
    ]
  ],
  "test_trifinder": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_trifinder"
      ]
    ]
  ],
  "quad": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_triinterp",
        "quad"
      ]
    ]
  ],
  "gradient_quad": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_triinterp",
        "gradient_quad"
      ]
    ]
  ],
  "test_triinterp": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_triinterp"
      ]
    ]
  ],
  "check_continuity": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_triinterpcubic_C1_continuity",
        "check_continuity"
      ]
    ]
  ],
  "test_triinterpcubic_C1_continuity": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_triinterpcubic_C1_continuity"
      ]
    ]
  ],
  "poisson_sparse_matrix": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_triinterpcubic_cg_solver",
        "poisson_sparse_matrix"
      ]
    ]
  ],
  "test_triinterpcubic_cg_solver": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_triinterpcubic_cg_solver"
      ]
    ]
  ],
  "test_triinterpcubic_geom_weights": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_triinterpcubic_geom_weights"
      ]
    ]
  ],
  "test_triinterp_colinear": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_triinterp_colinear"
      ]
    ]
  ],
  "z": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_triinterp_transformations",
        "z"
      ]
    ],
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_tri_smooth_contouring",
        "z"
      ]
    ]
  ],
  "test_triinterp_transformations": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_triinterp_transformations"
      ]
    ]
  ],
  "test_tri_smooth_contouring": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_tri_smooth_contouring"
      ]
    ]
  ],
  "test_tri_smooth_gradient": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_tri_smooth_gradient"
      ]
    ]
  ],
  "power": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_tritools",
        "power"
      ]
    ]
  ],
  "test_tritools": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_tritools"
      ]
    ]
  ],
  "test_trirefine": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_trirefine"
      ]
    ]
  ],
  "test_trirefine_masked": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_trirefine_masked"
      ]
    ]
  ],
  "meshgrid_triangles": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "meshgrid_triangles"
      ]
    ]
  ],
  "test_triplot_return": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_triplot_return"
      ]
    ]
  ],
  "test_trirefiner_fortran_contiguous_triangles": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_trirefiner_fortran_contiguous_triangles"
      ]
    ]
  ],
  "test_qhull_triangle_orientation": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_qhull_triangle_orientation"
      ]
    ]
  ],
  "test_trianalyzer_mismatched_indices": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_trianalyzer_mismatched_indices"
      ]
    ]
  ],
  "test_tricontourf_decreasing_levels": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_tricontourf_decreasing_levels"
      ]
    ]
  ],
  "test_internal_cpp_api": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_internal_cpp_api"
      ]
    ]
  ],
  "test_qhull_large_offset": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_qhull_large_offset"
      ]
    ]
  ],
  "test_tricontour_non_finite_z": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_tricontour_non_finite_z"
      ]
    ]
  ],
  "test_tricontourset_reuse": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_tricontourset_reuse"
      ]
    ]
  ],
  "test_triplot_with_ls": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_triplot_with_ls"
      ]
    ]
  ],
  "test_triplot_label": [
    [
      "lib/matplotlib/tests/test_triangulation.py",
      [
        "test_triplot_label"
      ]
    ]
  ],
  "test_truetype_conversion": [
    [
      "lib/matplotlib/tests/test_ttconv.py",
      [
        "test_truetype_conversion"
      ]
    ]
  ],
  "test_Type1Font": [
    [
      "lib/matplotlib/tests/test_type1font.py",
      [
        "test_Type1Font"
      ]
    ]
  ],
  "test_Type1Font_2": [
    [
      "lib/matplotlib/tests/test_type1font.py",
      [
        "test_Type1Font_2"
      ]
    ]
  ],
  "bin_after": [
    [
      "lib/matplotlib/tests/test_type1font.py",
      [
        "test_tokenize",
        "bin_after"
      ]
    ]
  ],
  "test_tokenize": [
    [
      "lib/matplotlib/tests/test_type1font.py",
      [
        "test_tokenize"
      ]
    ]
  ],
  "test_tokenize_errors": [
    [
      "lib/matplotlib/tests/test_type1font.py",
      [
        "test_tokenize_errors"
      ]
    ]
  ],
  "test_overprecision": [
    [
      "lib/matplotlib/tests/test_type1font.py",
      [
        "test_overprecision"
      ]
    ]
  ],
  "test_encrypt_decrypt_roundtrip": [
    [
      "lib/matplotlib/tests/test_type1font.py",
      [
        "test_encrypt_decrypt_roundtrip"
      ]
    ]
  ],
  "to": [
    [
      "lib/matplotlib/tests/test_units.py",
      [
        "Quantity",
        "to"
      ]
    ]
  ],
  "quantity_converter": [
    [
      "lib/matplotlib/tests/test_units.py",
      [
        "quantity_converter"
      ]
    ]
  ],
  "test_numpy_facade": [
    [
      "lib/matplotlib/tests/test_units.py",
      [
        "test_numpy_facade"
      ]
    ]
  ],
  "test_plot_masked_units": [
    [
      "lib/matplotlib/tests/test_units.py",
      [
        "test_plot_masked_units"
      ]
    ]
  ],
  "test_empty_set_limits_with_units": [
    [
      "lib/matplotlib/tests/test_units.py",
      [
        "test_empty_set_limits_with_units"
      ]
    ]
  ],
  "test_jpl_bar_units": [
    [
      "lib/matplotlib/tests/test_units.py",
      [
        "test_jpl_bar_units"
      ]
    ]
  ],
  "test_jpl_barh_units": [
    [
      "lib/matplotlib/tests/test_units.py",
      [
        "test_jpl_barh_units"
      ]
    ]
  ],
  "test_empty_arrays": [
    [
      "lib/matplotlib/tests/test_units.py",
      [
        "test_empty_arrays"
      ]
    ]
  ],
  "test_scatter_element0_masked": [
    [
      "lib/matplotlib/tests/test_units.py",
      [
        "test_scatter_element0_masked"
      ]
    ]
  ],
  "test_errorbar_mixed_units": [
    [
      "lib/matplotlib/tests/test_units.py",
      [
        "test_errorbar_mixed_units"
      ]
    ]
  ],
  "test_subclass": [
    [
      "lib/matplotlib/tests/test_units.py",
      [
        "test_subclass"
      ]
    ]
  ],
  "test_shared_axis_quantity": [
    [
      "lib/matplotlib/tests/test_units.py",
      [
        "test_shared_axis_quantity"
      ]
    ]
  ],
  "test_shared_axis_datetime": [
    [
      "lib/matplotlib/tests/test_units.py",
      [
        "test_shared_axis_datetime"
      ]
    ]
  ],
  "test_shared_axis_categorical": [
    [
      "lib/matplotlib/tests/test_units.py",
      [
        "test_shared_axis_categorical"
      ]
    ]
  ],
  "test_empty_default_limits": [
    [
      "lib/matplotlib/tests/test_units.py",
      [
        "test_empty_default_limits"
      ]
    ]
  ],
  "test_plot_kernel": [
    [
      "lib/matplotlib/tests/test_units.py",
      [
        "test_plot_kernel"
      ]
    ]
  ],
  "test_usetex": [
    [
      "lib/matplotlib/tests/test_usetex.py",
      [
        "test_usetex"
      ]
    ]
  ],
  "test_mathdefault": [
    [
      "lib/matplotlib/tests/test_usetex.py",
      [
        "test_mathdefault"
      ]
    ]
  ],
  "test_multiline_eqnarray": [
    [
      "lib/matplotlib/tests/test_usetex.py",
      [
        "test_multiline_eqnarray"
      ]
    ]
  ],
  "test_minus_no_descent": [
    [
      "lib/matplotlib/tests/test_usetex.py",
      [
        "test_minus_no_descent"
      ]
    ]
  ],
  "test_usetex_packages": [
    [
      "lib/matplotlib/tests/test_usetex.py",
      [
        "test_usetex_packages"
      ]
    ]
  ],
  "test_latex_pkg_already_loaded": [
    [
      "lib/matplotlib/tests/test_usetex.py",
      [
        "test_latex_pkg_already_loaded"
      ]
    ]
  ],
  "test_usetex_with_underscore": [
    [
      "lib/matplotlib/tests/test_usetex.py",
      [
        "test_usetex_with_underscore"
      ]
    ]
  ],
  "test_missing_psfont": [
    [
      "lib/matplotlib/tests/test_usetex.py",
      [
        "test_missing_psfont"
      ]
    ]
  ],
  "ax": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "ax"
      ]
    ]
  ],
  "test_rectangle_selector": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_rectangle_selector"
      ]
    ]
  ],
  "test_rectangle_minspan": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_rectangle_minspan"
      ]
    ]
  ],
  "test_deprecation_selector_visible_attribute": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_deprecation_selector_visible_attribute"
      ]
    ]
  ],
  "test_rectangle_drag": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_rectangle_drag"
      ]
    ]
  ],
  "test_rectangle_selector_set_props_handle_props": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_rectangle_selector_set_props_handle_props"
      ]
    ]
  ],
  "test_rectangle_resize": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_rectangle_resize"
      ]
    ]
  ],
  "test_rectangle_add_state": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_rectangle_add_state"
      ]
    ]
  ],
  "test_rectangle_resize_center": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_rectangle_resize_center"
      ]
    ]
  ],
  "test_rectangle_resize_square": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_rectangle_resize_square"
      ]
    ]
  ],
  "test_rectangle_resize_square_center": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_rectangle_resize_square_center"
      ]
    ]
  ],
  "test_rectangle_rotate": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_rectangle_rotate"
      ]
    ]
  ],
  "test_rectangle_add_remove_set": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_rectangle_add_remove_set"
      ]
    ]
  ],
  "test_rectangle_resize_square_center_aspect": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_rectangle_resize_square_center_aspect"
      ]
    ]
  ],
  "test_ellipse": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_ellipse"
      ]
    ]
  ],
  "test_rectangle_handles": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_rectangle_handles"
      ]
    ]
  ],
  "test_rectangle_selector_onselect": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_rectangle_selector_onselect"
      ]
    ]
  ],
  "test_rectangle_selector_ignore_outside": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_rectangle_selector_ignore_outside"
      ]
    ]
  ],
  "test_span_selector": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_span_selector"
      ]
    ]
  ],
  "test_span_selector_onselect": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_span_selector_onselect"
      ]
    ]
  ],
  "test_span_selector_ignore_outside": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_span_selector_ignore_outside"
      ]
    ]
  ],
  "test_span_selector_drag": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_span_selector_drag"
      ]
    ]
  ],
  "test_span_selector_direction": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_span_selector_direction"
      ]
    ]
  ],
  "test_span_selector_set_props_handle_props": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_span_selector_set_props_handle_props"
      ]
    ]
  ],
  "test_selector_clear": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_selector_clear"
      ]
    ]
  ],
  "test_selector_clear_method": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_selector_clear_method"
      ]
    ]
  ],
  "test_span_selector_add_state": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_span_selector_add_state"
      ]
    ]
  ],
  "test_tool_line_handle": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_tool_line_handle"
      ]
    ]
  ],
  "test_span_selector_bound": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_span_selector_bound"
      ]
    ]
  ],
  "mean": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_span_selector_animated_artists_callback",
        "mean"
      ]
    ]
  ],
  "test_span_selector_animated_artists_callback": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_span_selector_animated_artists_callback"
      ]
    ]
  ],
  "test_snapping_values_span_selector": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_snapping_values_span_selector"
      ]
    ]
  ],
  "test_span_selector_snap": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_span_selector_snap"
      ]
    ]
  ],
  "test_lasso_selector": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_lasso_selector"
      ]
    ]
  ],
  "test_CheckButtons": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_CheckButtons"
      ]
    ]
  ],
  "test_TextBox": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_TextBox"
      ]
    ]
  ],
  "test_check_radio_buttons_image": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_check_radio_buttons_image"
      ]
    ]
  ],
  "test_check_bunch_of_radio_buttons": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_check_bunch_of_radio_buttons"
      ]
    ]
  ],
  "test_slider_slidermin_slidermax_invalid": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_slider_slidermin_slidermax_invalid"
      ]
    ]
  ],
  "test_slider_slidermin_slidermax": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_slider_slidermin_slidermax"
      ]
    ]
  ],
  "test_slider_valmin_valmax": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_slider_valmin_valmax"
      ]
    ]
  ],
  "test_slider_valstep_snapping": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_slider_valstep_snapping"
      ]
    ]
  ],
  "test_slider_horizontal_vertical": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_slider_horizontal_vertical"
      ]
    ]
  ],
  "test_slider_reset": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_slider_reset"
      ]
    ]
  ],
  "handle_positions": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_range_slider",
        "handle_positions"
      ]
    ]
  ],
  "test_range_slider": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_range_slider"
      ]
    ]
  ],
  "test_range_slider_same_init_values": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_range_slider_same_init_values"
      ]
    ]
  ],
  "check_polygon_selector": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "check_polygon_selector"
      ]
    ]
  ],
  "polygon_place_vertex": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "polygon_place_vertex"
      ]
    ]
  ],
  "polygon_remove_vertex": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "polygon_remove_vertex"
      ]
    ]
  ],
  "test_polygon_selector": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_polygon_selector"
      ]
    ]
  ],
  "test_polygon_selector_set_props_handle_props": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_polygon_selector_set_props_handle_props"
      ]
    ]
  ],
  "test_rect_visibility": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_rect_visibility"
      ]
    ]
  ],
  "test_polygon_selector_remove": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_polygon_selector_remove"
      ]
    ]
  ],
  "test_polygon_selector_remove_first_point": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_polygon_selector_remove_first_point"
      ]
    ]
  ],
  "test_polygon_selector_redraw": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_polygon_selector_redraw"
      ]
    ]
  ],
  "test_polygon_selector_verts_setter": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_polygon_selector_verts_setter"
      ]
    ]
  ],
  "test_polygon_selector_box": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_polygon_selector_box"
      ]
    ]
  ],
  "test_MultiCursor": [
    [
      "lib/matplotlib/tests/test_widgets.py",
      [
        "test_MultiCursor"
      ]
    ]
  ],
  "range4": [
    [
      "lib/matplotlib/tests/tinypages/range6.py",
      [
        "range4"
      ]
    ]
  ],
  "range6": [
    [
      "lib/matplotlib/tests/tinypages/range6.py",
      [
        "range6"
      ]
    ]
  ],
  "_usepackage_if_not_loaded": [
    [
      "lib/matplotlib/texmanager.py",
      [
        "_usepackage_if_not_loaded"
      ]
    ]
  ],
  "get_font_config": [
    [
      "lib/matplotlib/texmanager.py",
      [
        "TexManager",
        "get_font_config"
      ]
    ]
  ],
  "_get_font_family_and_reduced": [
    [
      "lib/matplotlib/texmanager.py",
      [
        "TexManager",
        "_get_font_family_and_reduced"
      ]
    ]
  ],
  "_get_font_preamble_and_command": [
    [
      "lib/matplotlib/texmanager.py",
      [
        "TexManager",
        "_get_font_preamble_and_command"
      ]
    ]
  ],
  "get_basefile": [
    [
      "lib/matplotlib/texmanager.py",
      [
        "TexManager",
        "get_basefile"
      ]
    ]
  ],
  "get_font_preamble": [
    [
      "lib/matplotlib/texmanager.py",
      [
        "TexManager",
        "get_font_preamble"
      ]
    ]
  ],
  "get_custom_preamble": [
    [
      "lib/matplotlib/texmanager.py",
      [
        "TexManager",
        "get_custom_preamble"
      ]
    ]
  ],
  "_get_tex_source": [
    [
      "lib/matplotlib/texmanager.py",
      [
        "TexManager",
        "_get_tex_source"
      ]
    ]
  ],
  "make_tex": [
    [
      "lib/matplotlib/texmanager.py",
      [
        "TexManager",
        "make_tex"
      ]
    ]
  ],
  "_run_checked_subprocess": [
    [
      "lib/matplotlib/texmanager.py",
      [
        "TexManager",
        "_run_checked_subprocess"
      ]
    ]
  ],
  "make_dvi": [
    [
      "lib/matplotlib/texmanager.py",
      [
        "TexManager",
        "make_dvi"
      ]
    ]
  ],
  "make_png": [
    [
      "lib/matplotlib/texmanager.py",
      [
        "TexManager",
        "make_png"
      ]
    ]
  ],
  "get_grey": [
    [
      "lib/matplotlib/texmanager.py",
      [
        "TexManager",
        "get_grey"
      ]
    ]
  ],
  "get_rgba": [
    [
      "lib/matplotlib/texmanager.py",
      [
        "TexManager",
        "get_rgba"
      ]
    ]
  ],
  "_get_textbox": [
    [
      "lib/matplotlib/text.py",
      [
        "_get_textbox"
      ]
    ]
  ],
  "_get_text_metrics_with_cache": [
    [
      "lib/matplotlib/text.py",
      [
        "_get_text_metrics_with_cache"
      ]
    ]
  ],
  "_get_text_metrics_with_cache_impl": [
    [
      "lib/matplotlib/text.py",
      [
        "_get_text_metrics_with_cache_impl"
      ]
    ]
  ],
  "_reset_visual_defaults": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "_reset_visual_defaults"
      ]
    ]
  ],
  "_get_xy_display": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "_get_xy_display"
      ]
    ]
  ],
  "_get_multialignment": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "_get_multialignment"
      ]
    ]
  ],
  "get_transform_rotates_text": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "get_transform_rotates_text"
      ]
    ]
  ],
  "set_rotation_mode": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "set_rotation_mode"
      ]
    ]
  ],
  "get_rotation_mode": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "get_rotation_mode"
      ]
    ]
  ],
  "_get_layout": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "_get_layout"
      ]
    ]
  ],
  "set_bbox": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "set_bbox"
      ]
    ]
  ],
  "get_bbox_patch": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "get_bbox_patch"
      ]
    ]
  ],
  "update_bbox_position_size": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "update_bbox_position_size"
      ]
    ]
  ],
  "_update_clip_properties": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "_update_clip_properties"
      ]
    ]
  ],
  "get_wrap": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "get_wrap"
      ]
    ]
  ],
  "set_wrap": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "set_wrap"
      ]
    ]
  ],
  "_get_wrap_line_width": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "_get_wrap_line_width"
      ]
    ]
  ],
  "_get_dist_to_box": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "_get_dist_to_box"
      ]
    ]
  ],
  "_get_rendered_text_width": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "_get_rendered_text_width"
      ]
    ]
  ],
  "_get_wrapped_text": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "_get_wrapped_text"
      ]
    ]
  ],
  "get_fontproperties": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "get_fontproperties"
      ]
    ]
  ],
  "get_fontfamily": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "get_fontfamily"
      ]
    ]
  ],
  "get_fontstyle": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "get_fontstyle"
      ]
    ]
  ],
  "get_fontvariant": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "get_fontvariant"
      ]
    ]
  ],
  "get_fontweight": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "get_fontweight"
      ]
    ]
  ],
  "get_horizontalalignment": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "get_horizontalalignment"
      ]
    ]
  ],
  "get_unitless_position": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "get_unitless_position"
      ]
    ]
  ],
  "get_prop_tup": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "get_prop_tup"
      ]
    ]
  ],
  "get_verticalalignment": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "get_verticalalignment"
      ]
    ]
  ],
  "set_backgroundcolor": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "set_backgroundcolor"
      ]
    ]
  ],
  "set_horizontalalignment": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "set_horizontalalignment"
      ]
    ]
  ],
  "set_multialignment": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "set_multialignment"
      ]
    ]
  ],
  "set_linespacing": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "set_linespacing"
      ]
    ]
  ],
  "set_fontfamily": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "set_fontfamily"
      ]
    ]
  ],
  "set_fontvariant": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "set_fontvariant"
      ]
    ]
  ],
  "set_fontstyle": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "set_fontstyle"
      ]
    ]
  ],
  "set_fontweight": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "set_fontweight"
      ]
    ]
  ],
  "set_fontstretch": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "set_fontstretch"
      ]
    ]
  ],
  "set_rotation": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "set_rotation"
      ]
    ]
  ],
  "set_transform_rotates_text": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "set_transform_rotates_text"
      ]
    ]
  ],
  "set_verticalalignment": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "set_verticalalignment"
      ]
    ]
  ],
  "_preprocess_math": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "_preprocess_math"
      ]
    ]
  ],
  "set_fontproperties": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "set_fontproperties"
      ]
    ]
  ],
  "set_usetex": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "set_usetex"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "EngFormatter",
        "set_usetex"
      ]
    ]
  ],
  "get_usetex": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "get_usetex"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "EngFormatter",
        "get_usetex"
      ]
    ]
  ],
  "set_parse_math": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "set_parse_math"
      ]
    ]
  ],
  "get_parse_math": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "get_parse_math"
      ]
    ]
  ],
  "set_fontname": [
    [
      "lib/matplotlib/text.py",
      [
        "Text",
        "set_fontname"
      ]
    ]
  ],
  "set_unit": [
    [
      "lib/matplotlib/text.py",
      [
        "OffsetFrom",
        "set_unit"
      ]
    ]
  ],
  "_get_scale": [
    [
      "lib/matplotlib/text.py",
      [
        "OffsetFrom",
        "_get_scale"
      ]
    ]
  ],
  "_get_xy_transform": [
    [
      "lib/matplotlib/text.py",
      [
        "_AnnotationBase",
        "_get_xy_transform"
      ]
    ]
  ],
  "_get_ref_xy": [
    [
      "lib/matplotlib/text.py",
      [
        "_AnnotationBase",
        "_get_ref_xy"
      ]
    ]
  ],
  "_get_position_xy": [
    [
      "lib/matplotlib/text.py",
      [
        "_AnnotationBase",
        "_get_position_xy"
      ]
    ]
  ],
  "draggable": [
    [
      "lib/matplotlib/text.py",
      [
        "_AnnotationBase",
        "draggable"
      ]
    ]
  ],
  "xycoords": [
    [
      "lib/matplotlib/text.py",
      [
        "Annotation",
        "xycoords"
      ]
    ]
  ],
  "xycoords_3": [
    [
      "lib/matplotlib/text.py",
      [
        "Annotation",
        "xycoords_3"
      ]
    ]
  ],
  "xyann_5": [
    [
      "lib/matplotlib/text.py",
      [
        "Annotation",
        "xyann_5"
      ]
    ]
  ],
  "get_anncoords": [
    [
      "lib/matplotlib/text.py",
      [
        "Annotation",
        "get_anncoords"
      ]
    ]
  ],
  "set_anncoords": [
    [
      "lib/matplotlib/text.py",
      [
        "Annotation",
        "set_anncoords"
      ]
    ]
  ],
  "_get_hinting_flag": [
    [
      "lib/matplotlib/textpath.py",
      [
        "TextToPath",
        "_get_hinting_flag"
      ]
    ]
  ],
  "_get_char_id": [
    [
      "lib/matplotlib/textpath.py",
      [
        "TextToPath",
        "_get_char_id"
      ]
    ]
  ],
  "get_text_path": [
    [
      "lib/matplotlib/textpath.py",
      [
        "TextToPath",
        "get_text_path"
      ]
    ]
  ],
  "get_glyphs_with_font": [
    [
      "lib/matplotlib/textpath.py",
      [
        "TextToPath",
        "get_glyphs_with_font"
      ]
    ]
  ],
  "get_glyphs_mathtext": [
    [
      "lib/matplotlib/textpath.py",
      [
        "TextToPath",
        "get_glyphs_mathtext"
      ]
    ]
  ],
  "get_glyphs_tex": [
    [
      "lib/matplotlib/textpath.py",
      [
        "TextToPath",
        "get_glyphs_tex"
      ]
    ]
  ],
  "_select_native_charmap": [
    [
      "lib/matplotlib/textpath.py",
      [
        "TextToPath",
        "_select_native_charmap"
      ]
    ]
  ],
  "_revalidate_path": [
    [
      "lib/matplotlib/textpath.py",
      [
        "TextPath",
        "_revalidate_path"
      ]
    ]
  ],
  "create_dummy_axis": [
    [
      "lib/matplotlib/ticker.py",
      [
        "TickHelper",
        "create_dummy_axis"
      ]
    ]
  ],
  "set_locs": [
    [
      "lib/matplotlib/ticker.py",
      [
        "Formatter",
        "set_locs"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "ScalarFormatter",
        "set_locs"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "LogFormatter",
        "set_locs"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "LogitFormatter",
        "set_locs"
      ]
    ]
  ],
  "fix_minus": [
    [
      "lib/matplotlib/ticker.py",
      [
        "Formatter",
        "fix_minus"
      ]
    ]
  ],
  "set_offset_string": [
    [
      "lib/matplotlib/ticker.py",
      [
        "FixedFormatter",
        "set_offset_string"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "FuncFormatter",
        "set_offset_string"
      ]
    ]
  ],
  "get_useOffset": [
    [
      "lib/matplotlib/ticker.py",
      [
        "ScalarFormatter",
        "get_useOffset"
      ]
    ]
  ],
  "set_useOffset": [
    [
      "lib/matplotlib/ticker.py",
      [
        "ScalarFormatter",
        "set_useOffset"
      ]
    ]
  ],
  "get_useLocale": [
    [
      "lib/matplotlib/ticker.py",
      [
        "ScalarFormatter",
        "get_useLocale"
      ]
    ]
  ],
  "set_useLocale": [
    [
      "lib/matplotlib/ticker.py",
      [
        "ScalarFormatter",
        "set_useLocale"
      ]
    ]
  ],
  "_format_maybe_minus_and_locale": [
    [
      "lib/matplotlib/ticker.py",
      [
        "ScalarFormatter",
        "_format_maybe_minus_and_locale"
      ]
    ]
  ],
  "get_useMathText": [
    [
      "lib/matplotlib/ticker.py",
      [
        "ScalarFormatter",
        "get_useMathText"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "EngFormatter",
        "get_useMathText"
      ]
    ]
  ],
  "set_useMathText": [
    [
      "lib/matplotlib/ticker.py",
      [
        "ScalarFormatter",
        "set_useMathText"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "EngFormatter",
        "set_useMathText"
      ]
    ]
  ],
  "set_scientific": [
    [
      "lib/matplotlib/ticker.py",
      [
        "ScalarFormatter",
        "set_scientific"
      ]
    ]
  ],
  "set_powerlimits": [
    [
      "lib/matplotlib/ticker.py",
      [
        "ScalarFormatter",
        "set_powerlimits"
      ]
    ]
  ],
  "_compute_offset": [
    [
      "lib/matplotlib/ticker.py",
      [
        "ScalarFormatter",
        "_compute_offset"
      ]
    ]
  ],
  "_set_order_of_magnitude": [
    [
      "lib/matplotlib/ticker.py",
      [
        "ScalarFormatter",
        "_set_order_of_magnitude"
      ]
    ]
  ],
  "_set_format": [
    [
      "lib/matplotlib/ticker.py",
      [
        "ScalarFormatter",
        "_set_format"
      ]
    ]
  ],
  "set_base": [
    [
      "lib/matplotlib/ticker.py",
      [
        "LogFormatter",
        "set_base"
      ]
    ]
  ],
  "label_minor": [
    [
      "lib/matplotlib/ticker.py",
      [
        "LogFormatter",
        "label_minor"
      ]
    ]
  ],
  "set_label_minor": [
    [
      "lib/matplotlib/ticker.py",
      [
        "LogFormatter",
        "set_label_minor"
      ]
    ]
  ],
  "_num_to_string": [
    [
      "lib/matplotlib/ticker.py",
      [
        "LogFormatter",
        "_num_to_string"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "LogFormatterExponent",
        "_num_to_string"
      ]
    ]
  ],
  "_pprint_val": [
    [
      "lib/matplotlib/ticker.py",
      [
        "LogFormatter",
        "_pprint_val"
      ]
    ]
  ],
  "_non_decade_format": [
    [
      "lib/matplotlib/ticker.py",
      [
        "LogFormatterMathtext",
        "_non_decade_format"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "LogFormatterSciNotation",
        "_non_decade_format"
      ]
    ]
  ],
  "use_overline": [
    [
      "lib/matplotlib/ticker.py",
      [
        "LogitFormatter",
        "use_overline"
      ]
    ]
  ],
  "set_one_half": [
    [
      "lib/matplotlib/ticker.py",
      [
        "LogitFormatter",
        "set_one_half"
      ]
    ]
  ],
  "set_minor_threshold": [
    [
      "lib/matplotlib/ticker.py",
      [
        "LogitFormatter",
        "set_minor_threshold"
      ]
    ]
  ],
  "set_minor_number": [
    [
      "lib/matplotlib/ticker.py",
      [
        "LogitFormatter",
        "set_minor_number"
      ]
    ]
  ],
  "_format_value": [
    [
      "lib/matplotlib/ticker.py",
      [
        "LogitFormatter",
        "_format_value"
      ]
    ]
  ],
  "_one_minus": [
    [
      "lib/matplotlib/ticker.py",
      [
        "LogitFormatter",
        "_one_minus"
      ]
    ]
  ],
  "format_eng": [
    [
      "lib/matplotlib/ticker.py",
      [
        "EngFormatter",
        "format_eng"
      ]
    ]
  ],
  "format_pct": [
    [
      "lib/matplotlib/ticker.py",
      [
        "PercentFormatter",
        "format_pct"
      ]
    ]
  ],
  "convert_to_pct": [
    [
      "lib/matplotlib/ticker.py",
      [
        "PercentFormatter",
        "convert_to_pct"
      ]
    ]
  ],
  "symbol_4": [
    [
      "lib/matplotlib/ticker.py",
      [
        "PercentFormatter",
        "symbol_4"
      ]
    ]
  ],
  "set_params": [
    [
      "lib/matplotlib/ticker.py",
      [
        "Locator",
        "set_params"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "IndexLocator",
        "set_params"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "FixedLocator",
        "set_params"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "LinearLocator",
        "set_params"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "MultipleLocator",
        "set_params"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "MaxNLocator",
        "set_params"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "LogLocator",
        "set_params"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "SymmetricalLogLocator",
        "set_params"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "AsinhLocator",
        "set_params"
      ]
    ],
    [
      "lib/matplotlib/ticker.py",
      [
        "LogitLocator",
        "set_params"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/angle_helper.py",
      [
        "LocatorBase",
        "set_params"
      ]
    ]
  ],
  "raise_if_exceeds": [
    [
      "lib/matplotlib/ticker.py",
      [
        "Locator",
        "raise_if_exceeds"
      ]
    ]
  ],
  "numticks": [
    [
      "lib/matplotlib/ticker.py",
      [
        "LinearLocator",
        "numticks"
      ]
    ]
  ],
  "numticks_1": [
    [
      "lib/matplotlib/ticker.py",
      [
        "LinearLocator",
        "numticks_1"
      ]
    ]
  ],
  "scale_range": [
    [
      "lib/matplotlib/ticker.py",
      [
        "scale_range"
      ]
    ]
  ],
  "closeto": [
    [
      "lib/matplotlib/ticker.py",
      [
        "_Edge_integer",
        "closeto"
      ]
    ]
  ],
  "le": [
    [
      "lib/matplotlib/ticker.py",
      [
        "_Edge_integer",
        "le"
      ]
    ]
  ],
  "ge": [
    [
      "lib/matplotlib/ticker.py",
      [
        "_Edge_integer",
        "ge"
      ]
    ]
  ],
  "_validate_steps": [
    [
      "lib/matplotlib/ticker.py",
      [
        "MaxNLocator",
        "_validate_steps"
      ]
    ]
  ],
  "_staircase": [
    [
      "lib/matplotlib/ticker.py",
      [
        "MaxNLocator",
        "_staircase"
      ]
    ]
  ],
  "_raw_ticks": [
    [
      "lib/matplotlib/ticker.py",
      [
        "MaxNLocator",
        "_raw_ticks"
      ]
    ]
  ],
  "is_decade": [
    [
      "lib/matplotlib/ticker.py",
      [
        "is_decade"
      ]
    ]
  ],
  "_is_decade": [
    [
      "lib/matplotlib/ticker.py",
      [
        "_is_decade"
      ]
    ]
  ],
  "_decade_less_equal": [
    [
      "lib/matplotlib/ticker.py",
      [
        "_decade_less_equal"
      ]
    ]
  ],
  "_decade_greater_equal": [
    [
      "lib/matplotlib/ticker.py",
      [
        "_decade_greater_equal"
      ]
    ]
  ],
  "_decade_less": [
    [
      "lib/matplotlib/ticker.py",
      [
        "_decade_less"
      ]
    ]
  ],
  "_decade_greater": [
    [
      "lib/matplotlib/ticker.py",
      [
        "_decade_greater"
      ]
    ]
  ],
  "is_close_to_int": [
    [
      "lib/matplotlib/ticker.py",
      [
        "is_close_to_int"
      ]
    ]
  ],
  "_is_close_to_int": [
    [
      "lib/matplotlib/ticker.py",
      [
        "_is_close_to_int"
      ]
    ]
  ],
  "subs": [
    [
      "lib/matplotlib/ticker.py",
      [
        "LogLocator",
        "subs"
      ]
    ]
  ],
  "_set_subs": [
    [
      "lib/matplotlib/ticker.py",
      [
        "LogLocator",
        "_set_subs"
      ]
    ]
  ],
  "get_log_range": [
    [
      "lib/matplotlib/ticker.py",
      [
        "SymmetricalLogLocator",
        "tick_values",
        "get_log_range"
      ]
    ]
  ],
  "minor": [
    [
      "lib/matplotlib/ticker.py",
      [
        "LogitLocator",
        "minor"
      ]
    ]
  ],
  "minor_2": [
    [
      "lib/matplotlib/ticker.py",
      [
        "LogitLocator",
        "minor_2"
      ]
    ]
  ],
  "ideal_ticks": [
    [
      "lib/matplotlib/ticker.py",
      [
        "LogitLocator",
        "tick_values",
        "ideal_ticks"
      ]
    ]
  ],
  "strrepr": [
    [
      "lib/matplotlib/transforms.py",
      [
        "_make_str_method",
        "strrepr"
      ]
    ]
  ],
  "_make_str_method": [
    [
      "lib/matplotlib/transforms.py",
      [
        "_make_str_method"
      ]
    ]
  ],
  "invalidate": [
    [
      "lib/matplotlib/transforms.py",
      [
        "TransformNode",
        "invalidate"
      ]
    ]
  ],
  "_invalidate_internal": [
    [
      "lib/matplotlib/transforms.py",
      [
        "TransformNode",
        "_invalidate_internal"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "CompositeGenericTransform",
        "_invalidate_internal"
      ]
    ]
  ],
  "set_children": [
    [
      "lib/matplotlib/transforms.py",
      [
        "TransformNode",
        "set_children"
      ]
    ]
  ],
  "frozen": [
    [
      "lib/matplotlib/transforms.py",
      [
        "TransformNode",
        "frozen"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "frozen"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "frozen"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "TransformWrapper",
        "frozen"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Affine2DBase",
        "frozen"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "IdentityTransform",
        "frozen"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "BlendedGenericTransform",
        "frozen"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "CompositeGenericTransform",
        "frozen"
      ]
    ]
  ],
  "x0": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "x0"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "x0"
      ]
    ]
  ],
  "y0": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "y0"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "y0"
      ]
    ]
  ],
  "x1": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "x1"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "x1"
      ]
    ]
  ],
  "y1": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "y1"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "y1"
      ]
    ]
  ],
  "p0": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "p0"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "p0"
      ]
    ]
  ],
  "p1": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "p1"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "p1"
      ]
    ]
  ],
  "xmin": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "xmin"
      ]
    ]
  ],
  "ymin": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "ymin"
      ]
    ]
  ],
  "xmax": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "xmax"
      ]
    ]
  ],
  "ymax": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "ymax"
      ]
    ]
  ],
  "min": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "min"
      ]
    ]
  ],
  "max": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "max"
      ]
    ]
  ],
  "intervalx": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "intervalx"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "intervalx"
      ]
    ]
  ],
  "intervaly": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "intervaly"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "intervaly"
      ]
    ]
  ],
  "width": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "width"
      ]
    ]
  ],
  "height": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "height"
      ]
    ]
  ],
  "size": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "size"
      ]
    ]
  ],
  "bounds": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "bounds"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "bounds"
      ]
    ]
  ],
  "extents": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "extents"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "SpanSelector",
        "extents"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "RectangleSelector",
        "extents"
      ]
    ]
  ],
  "containsx": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "containsx"
      ]
    ]
  ],
  "containsy": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "containsy"
      ]
    ]
  ],
  "overlaps": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "overlaps"
      ]
    ]
  ],
  "fully_containsx": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "fully_containsx"
      ]
    ]
  ],
  "fully_containsy": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "fully_containsy"
      ]
    ]
  ],
  "fully_contains": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "fully_contains"
      ]
    ]
  ],
  "fully_overlaps": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "fully_overlaps"
      ]
    ]
  ],
  "anchored": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "anchored"
      ]
    ]
  ],
  "shrunk": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "shrunk"
      ]
    ]
  ],
  "shrunk_to_aspect": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "shrunk_to_aspect"
      ]
    ]
  ],
  "splitx": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "splitx"
      ]
    ]
  ],
  "splity": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "splity"
      ]
    ]
  ],
  "count_contains": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "count_contains"
      ]
    ]
  ],
  "count_overlaps": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "count_overlaps"
      ]
    ]
  ],
  "expanded": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "expanded"
      ]
    ]
  ],
  "padded": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "padded"
      ]
    ]
  ],
  "translated": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "translated"
      ]
    ]
  ],
  "corners": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "corners"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "RectangleSelector",
        "corners"
      ]
    ]
  ],
  "union": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "union"
      ]
    ]
  ],
  "intersection": [
    [
      "lib/matplotlib/transforms.py",
      [
        "BboxBase",
        "intersection"
      ]
    ]
  ],
  "unit": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "unit"
      ]
    ]
  ],
  "null": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "null"
      ]
    ]
  ],
  "from_bounds": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "from_bounds"
      ]
    ]
  ],
  "from_extents": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "from_extents"
      ]
    ]
  ],
  "__format__": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "__format__"
      ]
    ]
  ],
  "ignore": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "ignore"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "Widget",
        "ignore"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "ignore"
      ]
    ]
  ],
  "update_from_path": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "update_from_path"
      ]
    ]
  ],
  "update_from_data_x": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "update_from_data_x"
      ]
    ]
  ],
  "update_from_data_y": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "update_from_data_y"
      ]
    ]
  ],
  "update_from_data_xy": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "update_from_data_xy"
      ]
    ]
  ],
  "minpos": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "minpos"
      ]
    ]
  ],
  "minposx": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "minposx"
      ]
    ]
  ],
  "minposy": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "minposy"
      ]
    ]
  ],
  "set_points": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "set_points"
      ]
    ]
  ],
  "mutated": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "mutated"
      ]
    ]
  ],
  "mutatedx": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "mutatedx"
      ]
    ]
  ],
  "mutatedy": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Bbox",
        "mutatedy"
      ]
    ]
  ],
  "locked_x0": [
    [
      "lib/matplotlib/transforms.py",
      [
        "LockableBbox",
        "locked_x0"
      ]
    ]
  ],
  "locked_x0_2": [
    [
      "lib/matplotlib/transforms.py",
      [
        "LockableBbox",
        "locked_x0_2"
      ]
    ]
  ],
  "locked_y0": [
    [
      "lib/matplotlib/transforms.py",
      [
        "LockableBbox",
        "locked_y0"
      ]
    ]
  ],
  "locked_y0_4": [
    [
      "lib/matplotlib/transforms.py",
      [
        "LockableBbox",
        "locked_y0_4"
      ]
    ]
  ],
  "locked_x1": [
    [
      "lib/matplotlib/transforms.py",
      [
        "LockableBbox",
        "locked_x1"
      ]
    ]
  ],
  "locked_x1_6": [
    [
      "lib/matplotlib/transforms.py",
      [
        "LockableBbox",
        "locked_x1_6"
      ]
    ]
  ],
  "locked_y1": [
    [
      "lib/matplotlib/transforms.py",
      [
        "LockableBbox",
        "locked_y1"
      ]
    ]
  ],
  "locked_y1_8": [
    [
      "lib/matplotlib/transforms.py",
      [
        "LockableBbox",
        "locked_y1_8"
      ]
    ]
  ],
  "_iter_break_from_left_to_right": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Transform",
        "_iter_break_from_left_to_right"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "CompositeGenericTransform",
        "_iter_break_from_left_to_right"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "CompositeAffine2D",
        "_iter_break_from_left_to_right"
      ]
    ]
  ],
  "depth": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Transform",
        "depth"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "BlendedGenericTransform",
        "depth"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "CompositeAffine2D",
        "depth"
      ]
    ]
  ],
  "contains_branch": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Transform",
        "contains_branch"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "BlendedGenericTransform",
        "contains_branch"
      ]
    ]
  ],
  "contains_branch_seperately": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Transform",
        "contains_branch_seperately"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "_BlendedMixin",
        "contains_branch_seperately"
      ]
    ]
  ],
  "transform_affine": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Transform",
        "transform_affine"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "AffineBase",
        "transform_affine"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "Affine2DBase",
        "transform_affine"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "IdentityTransform",
        "transform_affine"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "CompositeGenericTransform",
        "transform_affine"
      ]
    ]
  ],
  "transform_bbox": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Transform",
        "transform_bbox"
      ]
    ]
  ],
  "get_affine": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Transform",
        "get_affine"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "AffineBase",
        "get_affine"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "IdentityTransform",
        "get_affine"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "BlendedGenericTransform",
        "get_affine"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "CompositeGenericTransform",
        "get_affine"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "TransformedPath",
        "get_affine"
      ]
    ]
  ],
  "transform_point": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Transform",
        "transform_point"
      ]
    ]
  ],
  "transform_path": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Transform",
        "transform_path"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "AffineBase",
        "transform_path"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "IdentityTransform",
        "transform_path"
      ]
    ],
    [
      "lib/mpl_toolkits/tests/test_axisartist_grid_helper_curvelinear.py",
      [
        "test_custom_transform",
        "MyTransform",
        "transform_path"
      ]
    ]
  ],
  "transform_path_affine": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Transform",
        "transform_path_affine"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "AffineBase",
        "transform_path_affine"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "IdentityTransform",
        "transform_path_affine"
      ]
    ]
  ],
  "transform_angles": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Transform",
        "transform_angles"
      ]
    ]
  ],
  "_set": [
    [
      "lib/matplotlib/transforms.py",
      [
        "TransformWrapper",
        "_set"
      ]
    ]
  ],
  "is_separable": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Affine2DBase",
        "is_separable"
      ]
    ]
  ],
  "to_values": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Affine2DBase",
        "to_values"
      ]
    ]
  ],
  "from_values": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Affine2D",
        "from_values"
      ]
    ]
  ],
  "set_matrix": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Affine2D",
        "set_matrix"
      ]
    ]
  ],
  "identity": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Affine2D",
        "identity"
      ]
    ]
  ],
  "rotate": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Affine2D",
        "rotate"
      ]
    ]
  ],
  "rotate_deg": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Affine2D",
        "rotate_deg"
      ]
    ]
  ],
  "rotate_around": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Affine2D",
        "rotate_around"
      ]
    ]
  ],
  "rotate_deg_around": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Affine2D",
        "rotate_deg_around"
      ]
    ]
  ],
  "translate": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Affine2D",
        "translate"
      ]
    ]
  ],
  "skew": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Affine2D",
        "skew"
      ]
    ]
  ],
  "skew_deg": [
    [
      "lib/matplotlib/transforms.py",
      [
        "Affine2D",
        "skew_deg"
      ]
    ]
  ],
  "blended_transform_factory": [
    [
      "lib/matplotlib/transforms.py",
      [
        "blended_transform_factory"
      ]
    ]
  ],
  "composite_transform_factory": [
    [
      "lib/matplotlib/transforms.py",
      [
        "composite_transform_factory"
      ]
    ]
  ],
  "_revalidate": [
    [
      "lib/matplotlib/transforms.py",
      [
        "TransformedPath",
        "_revalidate"
      ]
    ],
    [
      "lib/matplotlib/transforms.py",
      [
        "TransformedPatchPath",
        "_revalidate"
      ]
    ]
  ],
  "get_transformed_points_and_affine": [
    [
      "lib/matplotlib/transforms.py",
      [
        "TransformedPath",
        "get_transformed_points_and_affine"
      ]
    ]
  ],
  "get_transformed_path_and_affine": [
    [
      "lib/matplotlib/transforms.py",
      [
        "TransformedPath",
        "get_transformed_path_and_affine"
      ]
    ]
  ],
  "get_fully_transformed_path": [
    [
      "lib/matplotlib/transforms.py",
      [
        "TransformedPath",
        "get_fully_transformed_path"
      ]
    ]
  ],
  "interval_contains": [
    [
      "lib/matplotlib/transforms.py",
      [
        "interval_contains"
      ]
    ]
  ],
  "_interval_contains_close": [
    [
      "lib/matplotlib/transforms.py",
      [
        "_interval_contains_close"
      ]
    ]
  ],
  "interval_contains_open": [
    [
      "lib/matplotlib/transforms.py",
      [
        "interval_contains_open"
      ]
    ]
  ],
  "offset_copy": [
    [
      "lib/matplotlib/transforms.py",
      [
        "offset_copy"
      ]
    ]
  ],
  "calculate_plane_coefficients": [
    [
      "lib/matplotlib/tri/triangulation.py",
      [
        "Triangulation",
        "calculate_plane_coefficients"
      ]
    ]
  ],
  "get_cpp_triangulation": [
    [
      "lib/matplotlib/tri/triangulation.py",
      [
        "Triangulation",
        "get_cpp_triangulation"
      ]
    ]
  ],
  "get_masked_triangles": [
    [
      "lib/matplotlib/tri/triangulation.py",
      [
        "Triangulation",
        "get_masked_triangles"
      ]
    ]
  ],
  "get_from_args_and_kwargs": [
    [
      "lib/matplotlib/tri/triangulation.py",
      [
        "Triangulation",
        "get_from_args_and_kwargs"
      ]
    ]
  ],
  "_extract_triangulation_params": [
    [
      "lib/matplotlib/tri/triangulation.py",
      [
        "Triangulation",
        "_extract_triangulation_params"
      ]
    ]
  ],
  "get_trifinder": [
    [
      "lib/matplotlib/tri/triangulation.py",
      [
        "Triangulation",
        "get_trifinder"
      ]
    ]
  ],
  "neighbors": [
    [
      "lib/matplotlib/tri/triangulation.py",
      [
        "Triangulation",
        "neighbors"
      ]
    ]
  ],
  "set_mask": [
    [
      "lib/matplotlib/tri/triangulation.py",
      [
        "Triangulation",
        "set_mask"
      ]
    ]
  ],
  "_get_tree_stats": [
    [
      "lib/matplotlib/tri/trifinder.py",
      [
        "TrapezoidMapTriFinder",
        "_get_tree_stats"
      ]
    ]
  ],
  "_initialize": [
    [
      "lib/matplotlib/tri/trifinder.py",
      [
        "TrapezoidMapTriFinder",
        "_initialize"
      ]
    ]
  ],
  "_print_tree": [
    [
      "lib/matplotlib/tri/trifinder.py",
      [
        "TrapezoidMapTriFinder",
        "_print_tree"
      ]
    ]
  ],
  "_interpolate_multikeys": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "TriInterpolator",
        "_interpolate_multikeys"
      ]
    ]
  ],
  "_interpolate_single_key": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "TriInterpolator",
        "_interpolate_single_key"
      ]
    ],
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "LinearTriInterpolator",
        "_interpolate_single_key"
      ]
    ],
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "CubicTriInterpolator",
        "_interpolate_single_key"
      ]
    ]
  ],
  "gradient": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "LinearTriInterpolator",
        "gradient"
      ]
    ],
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "CubicTriInterpolator",
        "gradient"
      ]
    ]
  ],
  "_compute_dof": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "CubicTriInterpolator",
        "_compute_dof"
      ]
    ]
  ],
  "_get_alpha_vec": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "CubicTriInterpolator",
        "_get_alpha_vec"
      ]
    ]
  ],
  "_get_jacobian": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "CubicTriInterpolator",
        "_get_jacobian"
      ]
    ]
  ],
  "_compute_tri_eccentricities": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "CubicTriInterpolator",
        "_compute_tri_eccentricities"
      ]
    ]
  ],
  "get_function_values": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "_ReducedHCT_Element",
        "get_function_values"
      ]
    ]
  ],
  "get_function_derivatives": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "_ReducedHCT_Element",
        "get_function_derivatives"
      ]
    ]
  ],
  "get_function_hessians": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "_ReducedHCT_Element",
        "get_function_hessians"
      ]
    ]
  ],
  "get_d2Sidksij2": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "_ReducedHCT_Element",
        "get_d2Sidksij2"
      ]
    ]
  ],
  "get_bending_matrices": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "_ReducedHCT_Element",
        "get_bending_matrices"
      ]
    ]
  ],
  "get_Hrot_from_J": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "_ReducedHCT_Element",
        "get_Hrot_from_J"
      ]
    ]
  ],
  "get_Kff_and_Ff": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "_ReducedHCT_Element",
        "get_Kff_and_Ff"
      ]
    ]
  ],
  "compute_dz": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "_DOF_estimator",
        "compute_dz"
      ]
    ],
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "_DOF_estimator_user",
        "compute_dz"
      ]
    ],
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "_DOF_estimator_geom",
        "compute_dz"
      ]
    ],
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "_DOF_estimator_min_E",
        "compute_dz"
      ]
    ]
  ],
  "compute_dof_from_df": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "_DOF_estimator",
        "compute_dof_from_df"
      ]
    ]
  ],
  "get_dof_vec": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "_DOF_estimator",
        "get_dof_vec"
      ]
    ]
  ],
  "compute_geom_weights": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "_DOF_estimator_geom",
        "compute_geom_weights"
      ]
    ]
  ],
  "compute_geom_grads": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "_DOF_estimator_geom",
        "compute_geom_grads"
      ]
    ]
  ],
  "dot": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "_Sparse_Matrix_coo",
        "dot"
      ]
    ]
  ],
  "compress_csc": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "_Sparse_Matrix_coo",
        "compress_csc"
      ]
    ]
  ],
  "compress_csr": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "_Sparse_Matrix_coo",
        "compress_csr"
      ]
    ]
  ],
  "to_dense": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "_Sparse_Matrix_coo",
        "to_dense"
      ]
    ]
  ],
  "diag": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "_Sparse_Matrix_coo",
        "diag"
      ]
    ]
  ],
  "_cg": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "_cg"
      ]
    ]
  ],
  "_safe_inv22_vectorized": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "_safe_inv22_vectorized"
      ]
    ]
  ],
  "_pseudo_inv22sym_vectorized": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "_pseudo_inv22sym_vectorized"
      ]
    ]
  ],
  "_scalar_vectorized": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "_scalar_vectorized"
      ]
    ]
  ],
  "_transpose_vectorized": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "_transpose_vectorized"
      ]
    ]
  ],
  "_roll_vectorized": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "_roll_vectorized"
      ]
    ]
  ],
  "_to_matrix_vectorized": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "_to_matrix_vectorized"
      ]
    ]
  ],
  "_extract_submatrices": [
    [
      "lib/matplotlib/tri/triinterpolate.py",
      [
        "_extract_submatrices"
      ]
    ]
  ],
  "refine_triangulation": [
    [
      "lib/matplotlib/tri/trirefine.py",
      [
        "UniformTriRefiner",
        "refine_triangulation"
      ]
    ]
  ],
  "refine_field": [
    [
      "lib/matplotlib/tri/trirefine.py",
      [
        "UniformTriRefiner",
        "refine_field"
      ]
    ]
  ],
  "_refine_triangulation_once": [
    [
      "lib/matplotlib/tri/trirefine.py",
      [
        "UniformTriRefiner",
        "_refine_triangulation_once"
      ]
    ]
  ],
  "scale_factors": [
    [
      "lib/matplotlib/tri/tritools.py",
      [
        "TriAnalyzer",
        "scale_factors"
      ]
    ]
  ],
  "circle_ratios": [
    [
      "lib/matplotlib/tri/tritools.py",
      [
        "TriAnalyzer",
        "circle_ratios"
      ]
    ]
  ],
  "get_flat_tri_mask": [
    [
      "lib/matplotlib/tri/tritools.py",
      [
        "TriAnalyzer",
        "get_flat_tri_mask"
      ]
    ]
  ],
  "_get_compressed_triangulation": [
    [
      "lib/matplotlib/tri/tritools.py",
      [
        "TriAnalyzer",
        "_get_compressed_triangulation"
      ]
    ]
  ],
  "_total_to_compress_renum": [
    [
      "lib/matplotlib/tri/tritools.py",
      [
        "TriAnalyzer",
        "_total_to_compress_renum"
      ]
    ]
  ],
  "_is_natively_supported": [
    [
      "lib/matplotlib/units.py",
      [
        "_is_natively_supported"
      ]
    ]
  ],
  "is_numlike": [
    [
      "lib/matplotlib/units.py",
      [
        "ConversionInterface",
        "is_numlike"
      ]
    ]
  ],
  "get_converter": [
    [
      "lib/matplotlib/units.py",
      [
        "Registry",
        "get_converter"
      ]
    ]
  ],
  "release": [
    [
      "lib/matplotlib/widgets.py",
      [
        "LockDraw",
        "release"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "release"
      ]
    ]
  ],
  "available": [
    [
      "lib/matplotlib/widgets.py",
      [
        "LockDraw",
        "available"
      ]
    ]
  ],
  "isowner": [
    [
      "lib/matplotlib/widgets.py",
      [
        "LockDraw",
        "isowner"
      ]
    ]
  ],
  "locked": [
    [
      "lib/matplotlib/widgets.py",
      [
        "LockDraw",
        "locked"
      ]
    ]
  ],
  "connect_event": [
    [
      "lib/matplotlib/widgets.py",
      [
        "AxesWidget",
        "connect_event"
      ]
    ]
  ],
  "disconnect_events": [
    [
      "lib/matplotlib/widgets.py",
      [
        "AxesWidget",
        "disconnect_events"
      ]
    ]
  ],
  "_click": [
    [
      "lib/matplotlib/widgets.py",
      [
        "Button",
        "_click"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "TextBox",
        "_click"
      ]
    ]
  ],
  "_motion": [
    [
      "lib/matplotlib/widgets.py",
      [
        "Button",
        "_motion"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "TextBox",
        "_motion"
      ]
    ]
  ],
  "on_clicked": [
    [
      "lib/matplotlib/widgets.py",
      [
        "Button",
        "on_clicked"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "CheckButtons",
        "on_clicked"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "RadioButtons",
        "on_clicked"
      ]
    ]
  ],
  "_stepped_value": [
    [
      "lib/matplotlib/widgets.py",
      [
        "SliderBase",
        "_stepped_value"
      ]
    ]
  ],
  "_value_in_bounds": [
    [
      "lib/matplotlib/widgets.py",
      [
        "Slider",
        "_value_in_bounds"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "RangeSlider",
        "_value_in_bounds"
      ]
    ]
  ],
  "_format": [
    [
      "lib/matplotlib/widgets.py",
      [
        "Slider",
        "_format"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "RangeSlider",
        "_format"
      ]
    ]
  ],
  "_update_selection_poly": [
    [
      "lib/matplotlib/widgets.py",
      [
        "RangeSlider",
        "_update_selection_poly"
      ]
    ]
  ],
  "_min_in_bounds": [
    [
      "lib/matplotlib/widgets.py",
      [
        "RangeSlider",
        "_min_in_bounds"
      ]
    ]
  ],
  "_max_in_bounds": [
    [
      "lib/matplotlib/widgets.py",
      [
        "RangeSlider",
        "_max_in_bounds"
      ]
    ]
  ],
  "_update_val_from_pos": [
    [
      "lib/matplotlib/widgets.py",
      [
        "RangeSlider",
        "_update_val_from_pos"
      ]
    ]
  ],
  "set_min": [
    [
      "lib/matplotlib/widgets.py",
      [
        "RangeSlider",
        "set_min"
      ]
    ]
  ],
  "set_max": [
    [
      "lib/matplotlib/widgets.py",
      [
        "RangeSlider",
        "set_max"
      ]
    ]
  ],
  "_clicked": [
    [
      "lib/matplotlib/widgets.py",
      [
        "CheckButtons",
        "_clicked"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "RadioButtons",
        "_clicked"
      ]
    ]
  ],
  "get_status": [
    [
      "lib/matplotlib/widgets.py",
      [
        "CheckButtons",
        "get_status"
      ]
    ]
  ],
  "_rendercursor": [
    [
      "lib/matplotlib/widgets.py",
      [
        "TextBox",
        "_rendercursor"
      ]
    ]
  ],
  "_keypress": [
    [
      "lib/matplotlib/widgets.py",
      [
        "TextBox",
        "_keypress"
      ]
    ]
  ],
  "begin_typing": [
    [
      "lib/matplotlib/widgets.py",
      [
        "TextBox",
        "begin_typing"
      ]
    ]
  ],
  "stop_typing": [
    [
      "lib/matplotlib/widgets.py",
      [
        "TextBox",
        "stop_typing"
      ]
    ]
  ],
  "position_cursor": [
    [
      "lib/matplotlib/widgets.py",
      [
        "TextBox",
        "position_cursor"
      ]
    ]
  ],
  "_resize": [
    [
      "lib/matplotlib/widgets.py",
      [
        "TextBox",
        "_resize"
      ]
    ]
  ],
  "on_text_change": [
    [
      "lib/matplotlib/widgets.py",
      [
        "TextBox",
        "on_text_change"
      ]
    ]
  ],
  "on_submit": [
    [
      "lib/matplotlib/widgets.py",
      [
        "TextBox",
        "on_submit"
      ]
    ]
  ],
  "_on_slider_changed": [
    [
      "lib/matplotlib/widgets.py",
      [
        "SubplotTool",
        "_on_slider_changed"
      ]
    ]
  ],
  "_on_reset": [
    [
      "lib/matplotlib/widgets.py",
      [
        "SubplotTool",
        "_on_reset"
      ]
    ]
  ],
  "_get_animated_artists": [
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "_get_animated_artists"
      ]
    ]
  ],
  "update_background": [
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "update_background"
      ]
    ]
  ],
  "connect_default_events": [
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "connect_default_events"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "SpanSelector",
        "connect_default_events"
      ]
    ]
  ],
  "_get_data": [
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "_get_data"
      ]
    ]
  ],
  "_clean_event": [
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "_clean_event"
      ]
    ]
  ],
  "press": [
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "press"
      ]
    ]
  ],
  "_onmove": [
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "_onmove"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "SpanSelector",
        "_onmove"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "RectangleSelector",
        "_onmove"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "LassoSelector",
        "_onmove"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "PolygonSelector",
        "_onmove"
      ]
    ]
  ],
  "_on_scroll": [
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "_on_scroll"
      ]
    ]
  ],
  "_on_key_press": [
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "_on_key_press"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "PolygonSelector",
        "_on_key_press"
      ]
    ]
  ],
  "on_key_release": [
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "on_key_release"
      ]
    ]
  ],
  "_on_key_release": [
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "_on_key_release"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "PolygonSelector",
        "_on_key_release"
      ]
    ]
  ],
  "visible": [
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "visible"
      ]
    ]
  ],
  "visible_23": [
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "visible_23"
      ]
    ]
  ],
  "_clear_without_update": [
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "_clear_without_update"
      ]
    ]
  ],
  "set_props": [
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "set_props"
      ]
    ]
  ],
  "set_handle_props": [
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "set_handle_props"
      ]
    ]
  ],
  "_validate_state": [
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "_validate_state"
      ]
    ]
  ],
  "add_state": [
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "add_state"
      ]
    ]
  ],
  "remove_state": [
    [
      "lib/matplotlib/widgets.py",
      [
        "_SelectorWidget",
        "remove_state"
      ]
    ]
  ],
  "new_axes": [
    [
      "lib/matplotlib/widgets.py",
      [
        "SpanSelector",
        "new_axes"
      ]
    ]
  ],
  "_setup_edge_handles": [
    [
      "lib/matplotlib/widgets.py",
      [
        "SpanSelector",
        "_setup_edge_handles"
      ]
    ]
  ],
  "_handles_artists": [
    [
      "lib/matplotlib/widgets.py",
      [
        "SpanSelector",
        "_handles_artists"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "RectangleSelector",
        "_handles_artists"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "PolygonSelector",
        "_handles_artists"
      ]
    ]
  ],
  "_set_cursor": [
    [
      "lib/matplotlib/widgets.py",
      [
        "SpanSelector",
        "_set_cursor"
      ]
    ]
  ],
  "direction_7": [
    [
      "lib/matplotlib/widgets.py",
      [
        "SpanSelector",
        "direction_7"
      ]
    ]
  ],
  "_hover": [
    [
      "lib/matplotlib/widgets.py",
      [
        "SpanSelector",
        "_hover"
      ]
    ]
  ],
  "_draw_shape": [
    [
      "lib/matplotlib/widgets.py",
      [
        "SpanSelector",
        "_draw_shape"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "RectangleSelector",
        "_draw_shape"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "EllipseSelector",
        "_draw_shape"
      ]
    ]
  ],
  "_set_active_handle": [
    [
      "lib/matplotlib/widgets.py",
      [
        "SpanSelector",
        "_set_active_handle"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "RectangleSelector",
        "_set_active_handle"
      ]
    ]
  ],
  "_contains": [
    [
      "lib/matplotlib/widgets.py",
      [
        "SpanSelector",
        "_contains"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "RectangleSelector",
        "_contains"
      ]
    ]
  ],
  "_snap": [
    [
      "lib/matplotlib/widgets.py",
      [
        "SpanSelector",
        "_snap"
      ]
    ]
  ],
  "extents_16": [
    [
      "lib/matplotlib/widgets.py",
      [
        "SpanSelector",
        "extents_16"
      ]
    ]
  ],
  "positions": [
    [
      "lib/matplotlib/widgets.py",
      [
        "ToolLineHandles",
        "positions"
      ]
    ]
  ],
  "closest": [
    [
      "lib/matplotlib/widgets.py",
      [
        "ToolLineHandles",
        "closest"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "ToolHandles",
        "closest"
      ]
    ]
  ],
  "x": [
    [
      "lib/matplotlib/widgets.py",
      [
        "ToolHandles",
        "x"
      ]
    ]
  ],
  "y": [
    [
      "lib/matplotlib/widgets.py",
      [
        "ToolHandles",
        "y"
      ]
    ]
  ],
  "_init_shape": [
    [
      "lib/matplotlib/widgets.py",
      [
        "RectangleSelector",
        "_init_shape"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "EllipseSelector",
        "_init_shape"
      ]
    ]
  ],
  "_rect_bbox": [
    [
      "lib/matplotlib/widgets.py",
      [
        "RectangleSelector",
        "_rect_bbox"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "EllipseSelector",
        "_rect_bbox"
      ]
    ]
  ],
  "_set_aspect_ratio_correction": [
    [
      "lib/matplotlib/widgets.py",
      [
        "RectangleSelector",
        "_set_aspect_ratio_correction"
      ]
    ]
  ],
  "_get_rotation_transform": [
    [
      "lib/matplotlib/widgets.py",
      [
        "RectangleSelector",
        "_get_rotation_transform"
      ]
    ]
  ],
  "edge_centers": [
    [
      "lib/matplotlib/widgets.py",
      [
        "RectangleSelector",
        "edge_centers"
      ]
    ]
  ],
  "center": [
    [
      "lib/matplotlib/widgets.py",
      [
        "RectangleSelector",
        "center"
      ]
    ]
  ],
  "extents_12": [
    [
      "lib/matplotlib/widgets.py",
      [
        "RectangleSelector",
        "extents_12"
      ]
    ]
  ],
  "rotation": [
    [
      "lib/matplotlib/widgets.py",
      [
        "RectangleSelector",
        "rotation"
      ]
    ]
  ],
  "rotation_14": [
    [
      "lib/matplotlib/widgets.py",
      [
        "RectangleSelector",
        "rotation_14"
      ]
    ]
  ],
  "geometry": [
    [
      "lib/matplotlib/widgets.py",
      [
        "RectangleSelector",
        "geometry"
      ]
    ]
  ],
  "onpress": [
    [
      "lib/matplotlib/widgets.py",
      [
        "LassoSelector",
        "onpress"
      ]
    ]
  ],
  "onrelease": [
    [
      "lib/matplotlib/widgets.py",
      [
        "LassoSelector",
        "onrelease"
      ]
    ],
    [
      "lib/matplotlib/widgets.py",
      [
        "Lasso",
        "onrelease"
      ]
    ]
  ],
  "_get_bbox": [
    [
      "lib/matplotlib/widgets.py",
      [
        "PolygonSelector",
        "_get_bbox"
      ]
    ]
  ],
  "_add_box": [
    [
      "lib/matplotlib/widgets.py",
      [
        "PolygonSelector",
        "_add_box"
      ]
    ]
  ],
  "_remove_box": [
    [
      "lib/matplotlib/widgets.py",
      [
        "PolygonSelector",
        "_remove_box"
      ]
    ]
  ],
  "_update_box": [
    [
      "lib/matplotlib/widgets.py",
      [
        "PolygonSelector",
        "_update_box"
      ]
    ]
  ],
  "_scale_polygon": [
    [
      "lib/matplotlib/widgets.py",
      [
        "PolygonSelector",
        "_scale_polygon"
      ]
    ]
  ],
  "_remove_vertex": [
    [
      "lib/matplotlib/widgets.py",
      [
        "PolygonSelector",
        "_remove_vertex"
      ]
    ]
  ],
  "_draw_polygon": [
    [
      "lib/matplotlib/widgets.py",
      [
        "PolygonSelector",
        "_draw_polygon"
      ]
    ]
  ],
  "verts": [
    [
      "lib/matplotlib/widgets.py",
      [
        "PolygonSelector",
        "verts"
      ]
    ]
  ],
  "verts_15": [
    [
      "lib/matplotlib/widgets.py",
      [
        "PolygonSelector",
        "verts_15"
      ]
    ]
  ],
  "get_horizontal_sizes": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "Divider",
        "get_horizontal_sizes"
      ]
    ]
  ],
  "get_vertical_sizes": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "Divider",
        "get_vertical_sizes"
      ]
    ]
  ],
  "get_vsize_hsize": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "Divider",
        "get_vsize_hsize"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_grid.py",
      [
        "Grid",
        "get_vsize_hsize"
      ]
    ]
  ],
  "_calc_k": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "Divider",
        "_calc_k"
      ]
    ]
  ],
  "_calc_offsets": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "Divider",
        "_calc_offsets"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "_calc_offsets"
      ]
    ]
  ],
  "set_horizontal": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "Divider",
        "set_horizontal"
      ]
    ]
  ],
  "get_horizontal": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "Divider",
        "get_horizontal"
      ]
    ]
  ],
  "set_vertical": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "Divider",
        "set_vertical"
      ]
    ]
  ],
  "get_vertical": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "Divider",
        "get_vertical"
      ]
    ]
  ],
  "set_locator": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "Divider",
        "set_locator"
      ]
    ]
  ],
  "get_position_runtime": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "Divider",
        "get_position_runtime"
      ]
    ]
  ],
  "locate": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "Divider",
        "locate"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "HBoxDivider",
        "locate"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "VBoxDivider",
        "locate"
      ]
    ]
  ],
  "new_locator": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "Divider",
        "new_locator"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "HBoxDivider",
        "new_locator"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "VBoxDivider",
        "new_locator"
      ]
    ]
  ],
  "append_size": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "Divider",
        "append_size"
      ]
    ]
  ],
  "add_auto_adjustable_area": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "Divider",
        "add_auto_adjustable_area"
      ]
    ]
  ],
  "_get_new_axes": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "AxesDivider",
        "_get_new_axes"
      ]
    ]
  ],
  "new_horizontal": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "AxesDivider",
        "new_horizontal"
      ]
    ]
  ],
  "new_vertical": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "AxesDivider",
        "new_vertical"
      ]
    ]
  ],
  "append_axes": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "AxesDivider",
        "append_axes"
      ]
    ]
  ],
  "_determine_karray": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "_determine_karray"
      ]
    ]
  ],
  "make_axes_locatable": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "make_axes_locatable"
      ]
    ]
  ],
  "make_axes_area_auto_adjustable": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_divider.py",
      [
        "make_axes_area_auto_adjustable"
      ]
    ]
  ],
  "_tick_only": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_grid.py",
      [
        "_tick_only"
      ]
    ]
  ],
  "toggle_label": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_grid.py",
      [
        "CbarAxesBase",
        "toggle_label"
      ]
    ]
  ],
  "_init_locators": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_grid.py",
      [
        "Grid",
        "_init_locators"
      ]
    ],
    [
      "lib/mpl_toolkits/axes_grid1/axes_grid.py",
      [
        "ImageGrid",
        "_init_locators"
      ]
    ]
  ],
  "_get_col_row": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_grid.py",
      [
        "Grid",
        "_get_col_row"
      ]
    ]
  ],
  "set_axes_pad": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_grid.py",
      [
        "Grid",
        "set_axes_pad"
      ]
    ]
  ],
  "get_axes_pad": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_grid.py",
      [
        "Grid",
        "get_axes_pad"
      ]
    ]
  ],
  "set_label_mode": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_grid.py",
      [
        "Grid",
        "set_label_mode"
      ]
    ]
  ],
  "get_divider": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_grid.py",
      [
        "Grid",
        "get_divider"
      ]
    ]
  ],
  "make_rgb_axes": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_rgb.py",
      [
        "make_rgb_axes"
      ]
    ]
  ],
  "imshow_rgb": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_rgb.py",
      [
        "RGBAxes",
        "imshow_rgb"
      ]
    ]
  ],
  "_get_axes_aspect": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_size.py",
      [
        "_get_axes_aspect"
      ]
    ]
  ],
  "from_any": [
    [
      "lib/mpl_toolkits/axes_grid1/axes_size.py",
      [
        "from_any"
      ]
    ]
  ],
  "get_bbox_edge_pos": [
    [
      "lib/mpl_toolkits/axes_grid1/inset_locator.py",
      [
        "BboxConnector",
        "get_bbox_edge_pos"
      ]
    ]
  ],
  "_add_inset_axes": [
    [
      "lib/mpl_toolkits/axes_grid1/inset_locator.py",
      [
        "_add_inset_axes"
      ]
    ]
  ],
  "zoomed_inset_axes": [
    [
      "lib/mpl_toolkits/axes_grid1/inset_locator.py",
      [
        "zoomed_inset_axes"
      ]
    ]
  ],
  "mark_inset": [
    [
      "lib/mpl_toolkits/axes_grid1/inset_locator.py",
      [
        "mark_inset"
      ]
    ]
  ],
  "major_ticks": [
    [
      "lib/mpl_toolkits/axes_grid1/mpl_axes.py",
      [
        "SimpleAxisArtist",
        "major_ticks"
      ]
    ]
  ],
  "major_ticklabels": [
    [
      "lib/mpl_toolkits/axes_grid1/mpl_axes.py",
      [
        "SimpleAxisArtist",
        "major_ticklabels"
      ]
    ]
  ],
  "toggle": [
    [
      "lib/mpl_toolkits/axes_grid1/mpl_axes.py",
      [
        "SimpleAxisArtist",
        "toggle"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisArtist",
        "toggle"
      ]
    ]
  ],
  "get_images_artists": [
    [
      "lib/mpl_toolkits/axes_grid1/parasite_axes.py",
      [
        "ParasiteAxesBase",
        "get_images_artists"
      ]
    ]
  ],
  "set_viewlim_mode": [
    [
      "lib/mpl_toolkits/axes_grid1/parasite_axes.py",
      [
        "ParasiteAxesBase",
        "set_viewlim_mode"
      ]
    ]
  ],
  "get_viewlim_mode": [
    [
      "lib/mpl_toolkits/axes_grid1/parasite_axes.py",
      [
        "ParasiteAxesBase",
        "get_viewlim_mode"
      ]
    ]
  ],
  "_update_viewlim": [
    [
      "lib/mpl_toolkits/axes_grid1/parasite_axes.py",
      [
        "ParasiteAxesBase",
        "_update_viewlim"
      ]
    ]
  ],
  "get_aux_axes": [
    [
      "lib/mpl_toolkits/axes_grid1/parasite_axes.py",
      [
        "HostAxesBase",
        "get_aux_axes"
      ]
    ]
  ],
  "twin": [
    [
      "lib/mpl_toolkits/axes_grid1/parasite_axes.py",
      [
        "HostAxesBase",
        "twin"
      ]
    ]
  ],
  "_add_twin_axes": [
    [
      "lib/mpl_toolkits/axes_grid1/parasite_axes.py",
      [
        "HostAxesBase",
        "_add_twin_axes"
      ]
    ]
  ],
  "_remove_any_twin": [
    [
      "lib/mpl_toolkits/axes_grid1/parasite_axes.py",
      [
        "HostAxesBase",
        "_remove_any_twin"
      ]
    ]
  ],
  "host_subplot_class_factory": [
    [
      "lib/mpl_toolkits/axes_grid1/parasite_axes.py",
      [
        "host_subplot_class_factory"
      ]
    ]
  ],
  "host_axes": [
    [
      "lib/mpl_toolkits/axes_grid1/parasite_axes.py",
      [
        "host_axes"
      ]
    ]
  ],
  "host_subplot": [
    [
      "lib/mpl_toolkits/axes_grid1/parasite_axes.py",
      [
        "host_subplot"
      ]
    ]
  ],
  "select_step_degree": [
    [
      "lib/mpl_toolkits/axisartist/angle_helper.py",
      [
        "select_step_degree"
      ]
    ]
  ],
  "select_step_hour": [
    [
      "lib/mpl_toolkits/axisartist/angle_helper.py",
      [
        "select_step_hour"
      ]
    ]
  ],
  "select_step_sub": [
    [
      "lib/mpl_toolkits/axisartist/angle_helper.py",
      [
        "select_step_sub"
      ]
    ]
  ],
  "select_step": [
    [
      "lib/mpl_toolkits/axisartist/angle_helper.py",
      [
        "select_step"
      ]
    ]
  ],
  "select_step24": [
    [
      "lib/mpl_toolkits/axisartist/angle_helper.py",
      [
        "select_step24"
      ]
    ]
  ],
  "select_step360": [
    [
      "lib/mpl_toolkits/axisartist/angle_helper.py",
      [
        "select_step360"
      ]
    ]
  ],
  "_get_number_fraction": [
    [
      "lib/mpl_toolkits/axisartist/angle_helper.py",
      [
        "FormatterDMS",
        "_get_number_fraction"
      ]
    ]
  ],
  "get_ref_artist": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AttributeCopier",
        "get_ref_artist"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "Ticks",
        "get_ref_artist"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisLabel",
        "get_ref_artist"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "TickLabels",
        "get_ref_artist"
      ]
    ]
  ],
  "get_attribute_from_ref_artist": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AttributeCopier",
        "get_attribute_from_ref_artist"
      ]
    ]
  ],
  "set_tick_out": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "Ticks",
        "set_tick_out"
      ]
    ]
  ],
  "get_tick_out": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "Ticks",
        "get_tick_out"
      ]
    ]
  ],
  "set_ticksize": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "Ticks",
        "set_ticksize"
      ]
    ]
  ],
  "get_ticksize": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "Ticks",
        "get_ticksize"
      ]
    ]
  ],
  "set_locs_angles": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "Ticks",
        "set_locs_angles"
      ]
    ]
  ],
  "_text_ref_angle": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "LabelBase",
        "_text_ref_angle"
      ]
    ]
  ],
  "_offset_ref_angle": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "LabelBase",
        "_offset_ref_angle"
      ]
    ]
  ],
  "set_default_alignment": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisLabel",
        "set_default_alignment"
      ]
    ]
  ],
  "set_default_angle": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisLabel",
        "set_default_angle"
      ]
    ]
  ],
  "set_axis_direction": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisLabel",
        "set_axis_direction"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "TickLabels",
        "set_axis_direction"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisArtist",
        "set_axis_direction"
      ]
    ]
  ],
  "invert_axis_direction": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "TickLabels",
        "invert_axis_direction"
      ]
    ]
  ],
  "_get_ticklabels_offsets": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "TickLabels",
        "_get_ticklabels_offsets"
      ]
    ]
  ],
  "set_locs_angles_labels": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "TickLabels",
        "set_locs_angles_labels"
      ]
    ]
  ],
  "get_window_extents": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "TickLabels",
        "get_window_extents"
      ]
    ]
  ],
  "get_texts_widths_heights_descents": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "TickLabels",
        "get_texts_widths_heights_descents"
      ]
    ]
  ],
  "set_which": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "GridlinesCollection",
        "set_which"
      ]
    ]
  ],
  "set_grid_helper": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "GridlinesCollection",
        "set_grid_helper"
      ]
    ]
  ],
  "LABELPAD": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisArtist",
        "LABELPAD"
      ]
    ]
  ],
  "LABELPAD_1": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisArtist",
        "LABELPAD_1"
      ]
    ]
  ],
  "set_ticklabel_direction": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisArtist",
        "set_ticklabel_direction"
      ]
    ]
  ],
  "invert_ticklabel_direction": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisArtist",
        "invert_ticklabel_direction"
      ]
    ]
  ],
  "set_axislabel_direction": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisArtist",
        "set_axislabel_direction"
      ]
    ]
  ],
  "get_helper": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisArtist",
        "get_helper"
      ]
    ]
  ],
  "set_axisline_style": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisArtist",
        "set_axisline_style"
      ]
    ]
  ],
  "get_axisline_style": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisArtist",
        "get_axisline_style"
      ]
    ]
  ],
  "_init_line": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisArtist",
        "_init_line"
      ]
    ]
  ],
  "_draw_line": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisArtist",
        "_draw_line"
      ]
    ]
  ],
  "_init_ticks": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisArtist",
        "_init_ticks"
      ]
    ]
  ],
  "_get_tick_info": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisArtist",
        "_get_tick_info"
      ]
    ]
  ],
  "_draw_ticks": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisArtist",
        "_draw_ticks"
      ]
    ]
  ],
  "_init_offsetText": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisArtist",
        "_init_offsetText"
      ]
    ]
  ],
  "_update_offsetText": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisArtist",
        "_update_offsetText"
      ]
    ]
  ],
  "_draw_offsetText": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisArtist",
        "_draw_offsetText"
      ]
    ]
  ],
  "_init_label": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisArtist",
        "_init_label"
      ]
    ]
  ],
  "_update_label": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisArtist",
        "_update_label"
      ]
    ]
  ],
  "_draw_label": [
    [
      "lib/mpl_toolkits/axisartist/axis_artist.py",
      [
        "AxisArtist",
        "_draw_label"
      ]
    ]
  ],
  "set_line_mutation_scale": [
    [
      "lib/mpl_toolkits/axisartist/axisline_style.py",
      [
        "_FancyAxislineStyle",
        "SimpleArrow",
        "set_line_mutation_scale"
      ]
    ]
  ],
  "_extend_path": [
    [
      "lib/mpl_toolkits/axisartist/axisline_style.py",
      [
        "_FancyAxislineStyle",
        "SimpleArrow",
        "_extend_path"
      ]
    ]
  ],
  "new_line": [
    [
      "lib/mpl_toolkits/axisartist/axisline_style.py",
      [
        "AxislineStyle",
        "SimpleArrow",
        "new_line"
      ]
    ]
  ],
  "update_lim": [
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "AxisArtistHelper",
        "_Base",
        "update_lim"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "GridHelperBase",
        "update_lim"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/floating_axes.py",
      [
        "FixedAxisArtistHelper",
        "update_lim"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/grid_helper_curvelinear.py",
      [
        "FixedAxisArtistHelper",
        "update_lim"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/grid_helper_curvelinear.py",
      [
        "FloatingAxisArtistHelper",
        "update_lim"
      ]
    ]
  ],
  "get_nth_coord": [
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "AxisArtistHelper",
        "Fixed",
        "get_nth_coord"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "AxisArtistHelper",
        "Floating",
        "get_nth_coord"
      ]
    ]
  ],
  "get_line": [
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "AxisArtistHelper",
        "Fixed",
        "get_line"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "AxisArtistHelper",
        "Floating",
        "get_line"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "AxisArtistHelperRectlinear",
        "Floating",
        "get_line"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/floating_axes.py",
      [
        "FixedAxisArtistHelper",
        "get_line"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/grid_helper_curvelinear.py",
      [
        "FloatingAxisArtistHelper",
        "get_line"
      ]
    ]
  ],
  "get_line_transform": [
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "AxisArtistHelper",
        "Fixed",
        "get_line_transform"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "AxisArtistHelperRectlinear",
        "Floating",
        "get_line_transform"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/grid_helper_curvelinear.py",
      [
        "FloatingAxisArtistHelper",
        "get_line_transform"
      ]
    ]
  ],
  "get_axislabel_transform": [
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "AxisArtistHelper",
        "Fixed",
        "get_axislabel_transform"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "AxisArtistHelperRectlinear",
        "Floating",
        "get_axislabel_transform"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/grid_helper_curvelinear.py",
      [
        "FloatingAxisArtistHelper",
        "get_axislabel_transform"
      ]
    ]
  ],
  "get_axislabel_pos_angle": [
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "AxisArtistHelper",
        "Fixed",
        "get_axislabel_pos_angle"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "AxisArtistHelperRectlinear",
        "Floating",
        "get_axislabel_pos_angle"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/grid_helper_curvelinear.py",
      [
        "FloatingAxisArtistHelper",
        "get_axislabel_pos_angle"
      ]
    ]
  ],
  "get_tick_transform": [
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "AxisArtistHelper",
        "Fixed",
        "get_tick_transform"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "AxisArtistHelperRectlinear",
        "Floating",
        "get_tick_transform"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/grid_helper_curvelinear.py",
      [
        "FixedAxisArtistHelper",
        "get_tick_transform"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/grid_helper_curvelinear.py",
      [
        "FloatingAxisArtistHelper",
        "get_tick_transform"
      ]
    ]
  ],
  "_f": [
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "AxisArtistHelperRectlinear",
        "Fixed",
        "get_tick_iterators",
        "_f"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "AxisArtistHelperRectlinear",
        "Floating",
        "get_tick_iterators",
        "_f"
      ]
    ]
  ],
  "get_tick_iterators": [
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "AxisArtistHelperRectlinear",
        "Fixed",
        "get_tick_iterators"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "AxisArtistHelperRectlinear",
        "Floating",
        "get_tick_iterators"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/floating_axes.py",
      [
        "FixedAxisArtistHelper",
        "get_tick_iterators"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/grid_helper_curvelinear.py",
      [
        "FixedAxisArtistHelper",
        "get_tick_iterators"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/grid_helper_curvelinear.py",
      [
        "FloatingAxisArtistHelper",
        "get_tick_iterators"
      ]
    ]
  ],
  "_update_grid": [
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "GridHelperBase",
        "_update_grid"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/floating_axes.py",
      [
        "GridHelperCurveLinear",
        "_update_grid"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/grid_helper_curvelinear.py",
      [
        "GridHelperCurveLinear",
        "_update_grid"
      ]
    ]
  ],
  "new_gridlines": [
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "GridHelperBase",
        "new_gridlines"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "Axes",
        "new_gridlines"
      ]
    ]
  ],
  "new_fixed_axis": [
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "GridHelperRectlinear",
        "new_fixed_axis"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "Axes",
        "new_fixed_axis"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/floating_axes.py",
      [
        "GridHelperCurveLinear",
        "new_fixed_axis"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/grid_helper_curvelinear.py",
      [
        "GridHelperCurveLinear",
        "new_fixed_axis"
      ]
    ]
  ],
  "new_floating_axis": [
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "GridHelperRectlinear",
        "new_floating_axis"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "Axes",
        "new_floating_axis"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/grid_helper_curvelinear.py",
      [
        "GridHelperCurveLinear",
        "new_floating_axis"
      ]
    ]
  ],
  "toggle_axisline": [
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "Axes",
        "toggle_axisline"
      ]
    ]
  ],
  "get_grid_helper": [
    [
      "lib/mpl_toolkits/axisartist/axislines.py",
      [
        "Axes",
        "get_grid_helper"
      ]
    ]
  ],
  "atan2": [
    [
      "lib/mpl_toolkits/axisartist/clip_path.py",
      [
        "atan2"
      ]
    ]
  ],
  "clip_line_to_rect": [
    [
      "lib/mpl_toolkits/axisartist/clip_path.py",
      [
        "clip_line_to_rect"
      ]
    ]
  ],
  "transform_xy": [
    [
      "lib/mpl_toolkits/axisartist/floating_axes.py",
      [
        "FixedAxisArtistHelper",
        "get_tick_iterators",
        "transform_xy"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/grid_finder.py",
      [
        "GridFinder",
        "transform_xy"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/grid_helper_curvelinear.py",
      [
        "FloatingAxisArtistHelper",
        "get_tick_iterators",
        "transform_xy"
      ]
    ]
  ],
  "f1": [
    [
      "lib/mpl_toolkits/axisartist/floating_axes.py",
      [
        "FixedAxisArtistHelper",
        "get_tick_iterators",
        "f1"
      ]
    ],
    [
      "lib/mpl_toolkits/axisartist/grid_helper_curvelinear.py",
      [
        "FloatingAxisArtistHelper",
        "get_tick_iterators",
        "f1"
      ]
    ]
  ],
  "get_data_boundary": [
    [
      "lib/mpl_toolkits/axisartist/floating_axes.py",
      [
        "GridHelperCurveLinear",
        "get_data_boundary"
      ]
    ]
  ],
  "get_boundary": [
    [
      "lib/mpl_toolkits/axisartist/floating_axes.py",
      [
        "GridHelperCurveLinear",
        "get_boundary"
      ]
    ]
  ],
  "adjust_axes_lim": [
    [
      "lib/mpl_toolkits/axisartist/floating_axes.py",
      [
        "FloatingAxesBase",
        "adjust_axes_lim"
      ]
    ]
  ],
  "_find_line_box_crossings": [
    [
      "lib/mpl_toolkits/axisartist/grid_finder.py",
      [
        "_find_line_box_crossings"
      ]
    ]
  ],
  "_add_pad": [
    [
      "lib/mpl_toolkits/axisartist/grid_finder.py",
      [
        "ExtremeFinderSimple",
        "_add_pad"
      ]
    ]
  ],
  "get_grid_info": [
    [
      "lib/mpl_toolkits/axisartist/grid_finder.py",
      [
        "GridFinder",
        "get_grid_info"
      ]
    ]
  ],
  "_get_raw_grid_lines": [
    [
      "lib/mpl_toolkits/axisartist/grid_finder.py",
      [
        "GridFinder",
        "_get_raw_grid_lines"
      ]
    ]
  ],
  "_clip_grid_lines_and_find_ticks": [
    [
      "lib/mpl_toolkits/axisartist/grid_finder.py",
      [
        "GridFinder",
        "_clip_grid_lines_and_find_ticks"
      ]
    ]
  ],
  "inv_transform_xy": [
    [
      "lib/mpl_toolkits/axisartist/grid_finder.py",
      [
        "GridFinder",
        "inv_transform_xy"
      ]
    ]
  ],
  "change_tick_coord": [
    [
      "lib/mpl_toolkits/axisartist/grid_helper_curvelinear.py",
      [
        "FixedAxisArtistHelper",
        "change_tick_coord"
      ]
    ]
  ],
  "update_grid_finder": [
    [
      "lib/mpl_toolkits/axisartist/grid_helper_curvelinear.py",
      [
        "GridHelperCurveLinear",
        "update_grid_finder"
      ]
    ]
  ],
  "get_tick_iterator": [
    [
      "lib/mpl_toolkits/axisartist/grid_helper_curvelinear.py",
      [
        "GridHelperCurveLinear",
        "get_tick_iterator"
      ]
    ]
  ],
  "_norm_angle": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "_norm_angle"
      ]
    ]
  ],
  "_norm_text_angle": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "_norm_text_angle"
      ]
    ]
  ],
  "get_dir_vector": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "get_dir_vector"
      ]
    ]
  ],
  "get_position_3d": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Text3D",
        "get_position_3d"
      ]
    ]
  ],
  "set_position_3d": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Text3D",
        "set_position_3d"
      ]
    ]
  ],
  "set_z": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Text3D",
        "set_z"
      ]
    ]
  ],
  "set_3d_properties": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Text3D",
        "set_3d_properties"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Line3D",
        "set_3d_properties"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Patch3D",
        "set_3d_properties"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "PathPatch3D",
        "set_3d_properties"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Patch3DCollection",
        "set_3d_properties"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Path3DCollection",
        "set_3d_properties"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Poly3DCollection",
        "set_3d_properties"
      ]
    ]
  ],
  "text_2d_to_3d": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "text_2d_to_3d"
      ]
    ]
  ],
  "set_data_3d": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Line3D",
        "set_data_3d"
      ]
    ]
  ],
  "get_data_3d": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Line3D",
        "get_data_3d"
      ]
    ]
  ],
  "line_2d_to_3d": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "line_2d_to_3d"
      ]
    ]
  ],
  "_path_to_3d_segment": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "_path_to_3d_segment"
      ]
    ]
  ],
  "_paths_to_3d_segments": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "_paths_to_3d_segments"
      ]
    ]
  ],
  "_path_to_3d_segment_with_codes": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "_path_to_3d_segment_with_codes"
      ]
    ]
  ],
  "_paths_to_3d_segments_with_codes": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "_paths_to_3d_segments_with_codes"
      ]
    ]
  ],
  "set_sort_zpos": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Line3DCollection",
        "set_sort_zpos"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Patch3DCollection",
        "set_sort_zpos"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Path3DCollection",
        "set_sort_zpos"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Poly3DCollection",
        "set_sort_zpos"
      ]
    ]
  ],
  "do_3d_projection": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Line3DCollection",
        "do_3d_projection"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Patch3D",
        "do_3d_projection"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "PathPatch3D",
        "do_3d_projection"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Patch3DCollection",
        "do_3d_projection"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Path3DCollection",
        "do_3d_projection"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Poly3DCollection",
        "do_3d_projection"
      ]
    ]
  ],
  "line_collection_2d_to_3d": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "line_collection_2d_to_3d"
      ]
    ]
  ],
  "_get_patch_verts": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "_get_patch_verts"
      ]
    ]
  ],
  "patch_2d_to_3d": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "patch_2d_to_3d"
      ]
    ]
  ],
  "pathpatch_2d_to_3d": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "pathpatch_2d_to_3d"
      ]
    ]
  ],
  "get_depthshade": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Patch3DCollection",
        "get_depthshade"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Path3DCollection",
        "get_depthshade"
      ]
    ]
  ],
  "set_depthshade": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Patch3DCollection",
        "set_depthshade"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Path3DCollection",
        "set_depthshade"
      ]
    ]
  ],
  "_maybe_depth_shade_and_sort_colors": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Patch3DCollection",
        "_maybe_depth_shade_and_sort_colors"
      ]
    ],
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Path3DCollection",
        "_maybe_depth_shade_and_sort_colors"
      ]
    ]
  ],
  "patch_collection_2d_to_3d": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "patch_collection_2d_to_3d"
      ]
    ]
  ],
  "set_zsort": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Poly3DCollection",
        "set_zsort"
      ]
    ]
  ],
  "get_vector": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "Poly3DCollection",
        "get_vector"
      ]
    ]
  ],
  "poly_collection_2d_to_3d": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "poly_collection_2d_to_3d"
      ]
    ]
  ],
  "juggle_axes": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "juggle_axes"
      ]
    ]
  ],
  "rotate_axes": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "rotate_axes"
      ]
    ]
  ],
  "_zalpha": [
    [
      "lib/mpl_toolkits/mplot3d/art3d.py",
      [
        "_zalpha"
      ]
    ]
  ],
  "convert_zunits": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "convert_zunits"
      ]
    ]
  ],
  "set_top_view": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "set_top_view"
      ]
    ]
  ],
  "get_zaxis": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "get_zaxis"
      ]
    ]
  ],
  "unit_cube": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "unit_cube"
      ]
    ]
  ],
  "tunit_cube": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "tunit_cube"
      ]
    ]
  ],
  "tunit_edges": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "tunit_edges"
      ]
    ]
  ],
  "_equal_aspect_axis_indices": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "_equal_aspect_axis_indices"
      ]
    ]
  ],
  "get_axis_position": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "get_axis_position"
      ]
    ]
  ],
  "set_zmargin": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "set_zmargin"
      ]
    ]
  ],
  "auto_scale_xyz": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "auto_scale_xyz"
      ]
    ]
  ],
  "get_w_lims": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "get_w_lims"
      ]
    ]
  ],
  "set_zlim": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "set_zlim"
      ]
    ]
  ],
  "get_zlim": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "get_zlim"
      ]
    ]
  ],
  "view_init": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "view_init"
      ]
    ]
  ],
  "set_proj_type": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "set_proj_type"
      ]
    ]
  ],
  "_roll_to_vertical": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "_roll_to_vertical"
      ]
    ]
  ],
  "get_proj": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "get_proj"
      ]
    ]
  ],
  "mouse_init": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "mouse_init"
      ]
    ]
  ],
  "disable_mouse_rotation": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "disable_mouse_rotation"
      ]
    ]
  ],
  "sharez": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "sharez"
      ]
    ]
  ],
  "_button_press": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "_button_press"
      ]
    ]
  ],
  "_button_release": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "_button_release"
      ]
    ]
  ],
  "format_zdata": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "format_zdata"
      ]
    ]
  ],
  "_on_move": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "_on_move"
      ]
    ]
  ],
  "_calc_view_axes": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "_calc_view_axes"
      ]
    ]
  ],
  "_zoom_data_limits": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "_zoom_data_limits"
      ]
    ]
  ],
  "_scale_axis_limits": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "_scale_axis_limits"
      ]
    ]
  ],
  "set_zlabel": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "set_zlabel"
      ]
    ]
  ],
  "get_zlabel": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "get_zlabel"
      ]
    ]
  ],
  "invert_zaxis": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "invert_zaxis"
      ]
    ]
  ],
  "zaxis_inverted": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "zaxis_inverted"
      ]
    ]
  ],
  "get_zbound": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "get_zbound"
      ]
    ]
  ],
  "set_zbound": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "set_zbound"
      ]
    ]
  ],
  "plot_surface": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "plot_surface"
      ]
    ]
  ],
  "_generate_normals": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "_generate_normals"
      ]
    ]
  ],
  "_shade_colors": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "_shade_colors"
      ]
    ]
  ],
  "plot_wireframe": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "plot_wireframe"
      ]
    ]
  ],
  "plot_trisurf": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "plot_trisurf"
      ]
    ]
  ],
  "_3d_extend_contour": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "_3d_extend_contour"
      ]
    ]
  ],
  "add_contour_set": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "add_contour_set"
      ]
    ]
  ],
  "add_contourf_set": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "add_contourf_set"
      ]
    ]
  ],
  "_add_contourf_set": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "_add_contourf_set"
      ]
    ]
  ],
  "_auto_scale_contourf": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "_auto_scale_contourf"
      ]
    ]
  ],
  "add_collection3d": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "add_collection3d"
      ]
    ]
  ],
  "bar3d": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "bar3d"
      ]
    ]
  ],
  "calc_arrows": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "quiver",
        "calc_arrows"
      ]
    ]
  ],
  "_broadcast_color_arg": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "voxels",
        "_broadcast_color_arg"
      ]
    ]
  ],
  "permutation_matrices": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "voxels",
        "permutation_matrices"
      ]
    ]
  ],
  "voxels": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "voxels"
      ]
    ]
  ],
  "_apply_mask": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "errorbar",
        "_apply_mask"
      ]
    ]
  ],
  "_extract_errs": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "errorbar",
        "_extract_errs"
      ]
    ]
  ],
  "_digout_minmax": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "Axes3D",
        "errorbar",
        "_digout_minmax"
      ]
    ]
  ],
  "get_test_data": [
    [
      "lib/mpl_toolkits/mplot3d/axes3d.py",
      [
        "get_test_data"
      ]
    ]
  ],
  "move_from_center": [
    [
      "lib/mpl_toolkits/mplot3d/axis3d.py",
      [
        "move_from_center"
      ]
    ]
  ],
  "_move_from_center": [
    [
      "lib/mpl_toolkits/mplot3d/axis3d.py",
      [
        "_move_from_center"
      ]
    ]
  ],
  "tick_update_position": [
    [
      "lib/mpl_toolkits/mplot3d/axis3d.py",
      [
        "tick_update_position"
      ]
    ]
  ],
  "_tick_update_position": [
    [
      "lib/mpl_toolkits/mplot3d/axis3d.py",
      [
        "_tick_update_position"
      ]
    ]
  ],
  "_old_init": [
    [
      "lib/mpl_toolkits/mplot3d/axis3d.py",
      [
        "Axis",
        "_old_init"
      ]
    ]
  ],
  "_new_init": [
    [
      "lib/mpl_toolkits/mplot3d/axis3d.py",
      [
        "Axis",
        "_new_init"
      ]
    ]
  ],
  "_init3d": [
    [
      "lib/mpl_toolkits/mplot3d/axis3d.py",
      [
        "Axis",
        "_init3d"
      ]
    ]
  ],
  "init3d": [
    [
      "lib/mpl_toolkits/mplot3d/axis3d.py",
      [
        "Axis",
        "init3d"
      ]
    ]
  ],
  "set_pane_pos": [
    [
      "lib/mpl_toolkits/mplot3d/axis3d.py",
      [
        "Axis",
        "set_pane_pos"
      ]
    ]
  ],
  "_set_pane_pos": [
    [
      "lib/mpl_toolkits/mplot3d/axis3d.py",
      [
        "Axis",
        "_set_pane_pos"
      ]
    ]
  ],
  "set_pane_color": [
    [
      "lib/mpl_toolkits/mplot3d/axis3d.py",
      [
        "Axis",
        "set_pane_color"
      ]
    ]
  ],
  "set_rotate_label": [
    [
      "lib/mpl_toolkits/mplot3d/axis3d.py",
      [
        "Axis",
        "set_rotate_label"
      ]
    ]
  ],
  "get_rotate_label": [
    [
      "lib/mpl_toolkits/mplot3d/axis3d.py",
      [
        "Axis",
        "get_rotate_label"
      ]
    ]
  ],
  "_get_coord_info": [
    [
      "lib/mpl_toolkits/mplot3d/axis3d.py",
      [
        "Axis",
        "_get_coord_info"
      ]
    ]
  ],
  "_get_axis_line_edge_points": [
    [
      "lib/mpl_toolkits/mplot3d/axis3d.py",
      [
        "Axis",
        "_get_axis_line_edge_points"
      ]
    ]
  ],
  "_get_tickdir": [
    [
      "lib/mpl_toolkits/mplot3d/axis3d.py",
      [
        "Axis",
        "_get_tickdir"
      ]
    ]
  ],
  "draw_pane": [
    [
      "lib/mpl_toolkits/mplot3d/axis3d.py",
      [
        "Axis",
        "draw_pane"
      ]
    ]
  ],
  "_line2d_seg_dist": [
    [
      "lib/mpl_toolkits/mplot3d/proj3d.py",
      [
        "_line2d_seg_dist"
      ]
    ]
  ],
  "world_transformation": [
    [
      "lib/mpl_toolkits/mplot3d/proj3d.py",
      [
        "world_transformation"
      ]
    ]
  ],
  "rotation_about_vector": [
    [
      "lib/mpl_toolkits/mplot3d/proj3d.py",
      [
        "rotation_about_vector"
      ]
    ]
  ],
  "_view_axes": [
    [
      "lib/mpl_toolkits/mplot3d/proj3d.py",
      [
        "_view_axes"
      ]
    ]
  ],
  "_view_transformation_uvw": [
    [
      "lib/mpl_toolkits/mplot3d/proj3d.py",
      [
        "_view_transformation_uvw"
      ]
    ]
  ],
  "view_transformation": [
    [
      "lib/mpl_toolkits/mplot3d/proj3d.py",
      [
        "view_transformation"
      ]
    ]
  ],
  "persp_transformation": [
    [
      "lib/mpl_toolkits/mplot3d/proj3d.py",
      [
        "persp_transformation"
      ]
    ]
  ],
  "ortho_transformation": [
    [
      "lib/mpl_toolkits/mplot3d/proj3d.py",
      [
        "ortho_transformation"
      ]
    ]
  ],
  "_proj_transform_vec": [
    [
      "lib/mpl_toolkits/mplot3d/proj3d.py",
      [
        "_proj_transform_vec"
      ]
    ]
  ],
  "_proj_transform_vec_clip": [
    [
      "lib/mpl_toolkits/mplot3d/proj3d.py",
      [
        "_proj_transform_vec_clip"
      ]
    ]
  ],
  "inv_transform": [
    [
      "lib/mpl_toolkits/mplot3d/proj3d.py",
      [
        "inv_transform"
      ]
    ]
  ],
  "_vec_pad_ones": [
    [
      "lib/mpl_toolkits/mplot3d/proj3d.py",
      [
        "_vec_pad_ones"
      ]
    ]
  ],
  "proj_transform": [
    [
      "lib/mpl_toolkits/mplot3d/proj3d.py",
      [
        "proj_transform"
      ]
    ]
  ],
  "proj_transform_clip": [
    [
      "lib/mpl_toolkits/mplot3d/proj3d.py",
      [
        "proj_transform_clip"
      ]
    ]
  ],
  "proj_points": [
    [
      "lib/mpl_toolkits/mplot3d/proj3d.py",
      [
        "proj_points"
      ]
    ]
  ],
  "proj_trans_points": [
    [
      "lib/mpl_toolkits/mplot3d/proj3d.py",
      [
        "proj_trans_points"
      ]
    ]
  ],
  "rot_x": [
    [
      "lib/mpl_toolkits/mplot3d/proj3d.py",
      [
        "rot_x"
      ]
    ]
  ],
  "test_divider_append_axes": [
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_divider_append_axes"
      ]
    ]
  ],
  "test_twin_axes_empty_and_removed": [
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_twin_axes_empty_and_removed"
      ]
    ]
  ],
  "test_axesgrid_colorbar_log_smoketest": [
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_axesgrid_colorbar_log_smoketest"
      ]
    ]
  ],
  "test_inset_colorbar_tight_layout_smoketest": [
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_inset_colorbar_tight_layout_smoketest"
      ]
    ]
  ],
  "test_inset_locator": [
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_inset_locator"
      ]
    ]
  ],
  "test_inset_axes": [
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_inset_axes"
      ]
    ]
  ],
  "test_inset_axes_complete": [
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_inset_axes_complete"
      ]
    ]
  ],
  "test_fill_facecolor": [
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_fill_facecolor"
      ]
    ]
  ],
  "test_zooming_with_inverted_axes": [
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_zooming_with_inverted_axes"
      ]
    ]
  ],
  "test_anchored_direction_arrows": [
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_anchored_direction_arrows"
      ]
    ]
  ],
  "test_anchored_direction_arrows_many_args": [
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_anchored_direction_arrows_many_args"
      ]
    ]
  ],
  "test_axes_locatable_position": [
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_axes_locatable_position"
      ]
    ]
  ],
  "test_image_grid_each_left_label_mode_all": [
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_image_grid_each_left_label_mode_all"
      ]
    ]
  ],
  "test_image_grid_single_bottom": [
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_image_grid_single_bottom"
      ]
    ]
  ],
  "test_image_grid": [
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_image_grid"
      ]
    ]
  ],
  "test_gettightbbox": [
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_gettightbbox"
      ]
    ]
  ],
  "test_picking_callbacks_overlap": [
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_picking_callbacks_overlap"
      ]
    ]
  ],
  "test_hbox_divider": [
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_hbox_divider"
      ]
    ]
  ],
  "test_axes_class_tuple": [
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_axes_class_tuple"
      ]
    ]
  ],
  "test_grid_axes_lists": [
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_grid_axes_lists"
      ]
    ]
  ],
  "test_grid_axes_position": [
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_grid_axes_position"
      ]
    ]
  ],
  "test_grid_errors": [
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_grid_errors"
      ]
    ]
  ],
  "test_divider_errors": [
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_divider_errors"
      ]
    ]
  ],
  "test_mark_inset_unstales_viewlim": [
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_mark_inset_unstales_viewlim"
      ]
    ]
  ],
  "test_auto_adjustable": [
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_auto_adjustable"
      ]
    ]
  ],
  "test_rgb_axes": [
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_rgb_axes"
      ]
    ]
  ],
  "test_insetposition": [
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_insetposition"
      ]
    ]
  ],
  "test_imagegrid_cbar_mode_edge": [
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_imagegrid_cbar_mode_edge"
      ]
    ]
  ],
  "test_imagegrid": [
    [
      "lib/mpl_toolkits/tests/test_axes_grid1.py",
      [
        "test_imagegrid"
      ]
    ]
  ],
  "dms2float": [
    [
      "lib/mpl_toolkits/tests/test_axisartist_angle_helper.py",
      [
        "dms2float"
      ]
    ]
  ],
  "test_select_step": [
    [
      "lib/mpl_toolkits/tests/test_axisartist_angle_helper.py",
      [
        "test_select_step"
      ]
    ]
  ],
  "test_select_step24": [
    [
      "lib/mpl_toolkits/tests/test_axisartist_angle_helper.py",
      [
        "test_select_step24"
      ]
    ]
  ],
  "test_select_step360": [
    [
      "lib/mpl_toolkits/tests/test_axisartist_angle_helper.py",
      [
        "test_select_step360"
      ]
    ]
  ],
  "test_formatters": [
    [
      "lib/mpl_toolkits/tests/test_axisartist_angle_helper.py",
      [
        "test_formatters"
      ]
    ]
  ],
  "test_ticks": [
    [
      "lib/mpl_toolkits/tests/test_axisartist_axis_artist.py",
      [
        "test_ticks"
      ]
    ]
  ],
  "test_labelbase": [
    [
      "lib/mpl_toolkits/tests/test_axisartist_axis_artist.py",
      [
        "test_labelbase"
      ]
    ]
  ],
  "test_ticklabels": [
    [
      "lib/mpl_toolkits/tests/test_axisartist_axis_artist.py",
      [
        "test_ticklabels"
      ]
    ]
  ],
  "test_axis_artist": [
    [
      "lib/mpl_toolkits/tests/test_axisartist_axis_artist.py",
      [
        "test_axis_artist"
      ]
    ]
  ],
  "test_SubplotZero": [
    [
      "lib/mpl_toolkits/tests/test_axisartist_axislines.py",
      [
        "test_SubplotZero"
      ]
    ]
  ],
  "test_Subplot": [
    [
      "lib/mpl_toolkits/tests/test_axisartist_axislines.py",
      [
        "test_Subplot"
      ]
    ]
  ],
  "test_Axes": [
    [
      "lib/mpl_toolkits/tests/test_axisartist_axislines.py",
      [
        "test_Axes"
      ]
    ]
  ],
  "test_ParasiteAxesAuxTrans": [
    [
      "lib/mpl_toolkits/tests/test_axisartist_axislines.py",
      [
        "test_ParasiteAxesAuxTrans"
      ]
    ]
  ],
  "test_clip_path": [
    [
      "lib/mpl_toolkits/tests/test_axisartist_clip_path.py",
      [
        "test_clip_path"
      ]
    ]
  ],
  "test_subplot": [
    [
      "lib/mpl_toolkits/tests/test_axisartist_floating_axes.py",
      [
        "test_subplot"
      ]
    ]
  ],
  "test_curvelinear3": [
    [
      "lib/mpl_toolkits/tests/test_axisartist_floating_axes.py",
      [
        "test_curvelinear3"
      ]
    ]
  ],
  "test_curvelinear4": [
    [
      "lib/mpl_toolkits/tests/test_axisartist_floating_axes.py",
      [
        "test_curvelinear4"
      ]
    ]
  ],
  "test_axis_direction": [
    [
      "lib/mpl_toolkits/tests/test_axisartist_floating_axes.py",
      [
        "test_axis_direction"
      ]
    ],
    [
      "lib/mpl_toolkits/tests/test_axisartist_grid_helper_curvelinear.py",
      [
        "test_axis_direction"
      ]
    ]
  ],
  "test_find_line_box_crossings": [
    [
      "lib/mpl_toolkits/tests/test_axisartist_grid_finder.py",
      [
        "test_find_line_box_crossings"
      ]
    ]
  ],
  "test_pretty_print_format": [
    [
      "lib/mpl_toolkits/tests/test_axisartist_grid_finder.py",
      [
        "test_pretty_print_format"
      ]
    ]
  ],
  "test_custom_transform": [
    [
      "lib/mpl_toolkits/tests/test_axisartist_grid_helper_curvelinear.py",
      [
        "test_custom_transform"
      ]
    ]
  ],
  "test_polar_box": [
    [
      "lib/mpl_toolkits/tests/test_axisartist_grid_helper_curvelinear.py",
      [
        "test_polar_box"
      ]
    ]
  ],
  "test_aspects_adjust_box": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_aspects_adjust_box"
      ]
    ]
  ],
  "test_axes3d_repr": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_axes3d_repr"
      ]
    ]
  ],
  "test_axes3d_primary_views": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_axes3d_primary_views"
      ]
    ]
  ],
  "test_bar3d": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_bar3d"
      ]
    ]
  ],
  "test_bar3d_colors": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_bar3d_colors"
      ]
    ]
  ],
  "test_bar3d_shaded": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_bar3d_shaded"
      ]
    ]
  ],
  "test_bar3d_notshaded": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_bar3d_notshaded"
      ]
    ]
  ],
  "test_bar3d_lightsource": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_bar3d_lightsource"
      ]
    ]
  ],
  "test_contour3d": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_contour3d"
      ]
    ]
  ],
  "test_contour3d_extend3d": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_contour3d_extend3d"
      ]
    ]
  ],
  "test_contourf3d": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_contourf3d"
      ]
    ]
  ],
  "test_contourf3d_fill": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_contourf3d_fill"
      ]
    ]
  ],
  "test_contourf3d_extend": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_contourf3d_extend"
      ]
    ]
  ],
  "test_tricontour": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_tricontour"
      ]
    ]
  ],
  "test_contour3d_1d_input": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_contour3d_1d_input"
      ]
    ]
  ],
  "test_lines3d": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_lines3d"
      ]
    ]
  ],
  "test_plot_scalar": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_plot_scalar"
      ]
    ]
  ],
  "test_mixedsubplots": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_mixedsubplots"
      ]
    ]
  ],
  "test_tight_layout_text": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_tight_layout_text"
      ]
    ]
  ],
  "test_scatter3d": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_scatter3d"
      ]
    ]
  ],
  "test_scatter3d_color": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_scatter3d_color"
      ]
    ]
  ],
  "test_scatter3d_linewidth": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_scatter3d_linewidth"
      ]
    ]
  ],
  "test_scatter3d_linewidth_modification": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_scatter3d_linewidth_modification"
      ]
    ]
  ],
  "test_scatter3d_modification": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_scatter3d_modification"
      ]
    ]
  ],
  "test_scatter3d_sorting": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_scatter3d_sorting"
      ]
    ]
  ],
  "test_marker_draw_order_data_reversed": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_marker_draw_order_data_reversed"
      ]
    ]
  ],
  "test_marker_draw_order_view_rotated": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_marker_draw_order_view_rotated"
      ]
    ]
  ],
  "test_plot_3d_from_2d": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_plot_3d_from_2d"
      ]
    ]
  ],
  "test_surface3d": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_surface3d"
      ]
    ]
  ],
  "test_surface3d_shaded": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_surface3d_shaded"
      ]
    ]
  ],
  "test_surface3d_masked": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_surface3d_masked"
      ]
    ]
  ],
  "test_surface3d_masked_strides": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_surface3d_masked_strides"
      ]
    ]
  ],
  "test_text3d": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_text3d"
      ]
    ]
  ],
  "test_text3d_modification": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_text3d_modification"
      ]
    ]
  ],
  "test_trisurf3d": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_trisurf3d"
      ]
    ]
  ],
  "test_trisurf3d_shaded": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_trisurf3d_shaded"
      ]
    ]
  ],
  "test_wireframe3d": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_wireframe3d"
      ]
    ]
  ],
  "test_wireframe3dzerocstride": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_wireframe3dzerocstride"
      ]
    ]
  ],
  "test_wireframe3dzerorstride": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_wireframe3dzerorstride"
      ]
    ]
  ],
  "test_wireframe3dzerostrideraises": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_wireframe3dzerostrideraises"
      ]
    ]
  ],
  "test_mixedsamplesraises": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_mixedsamplesraises"
      ]
    ]
  ],
  "test_quiver3d": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_quiver3d"
      ]
    ]
  ],
  "test_quiver3d_empty": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_quiver3d_empty"
      ]
    ]
  ],
  "test_quiver3d_masked": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_quiver3d_masked"
      ]
    ]
  ],
  "test_patch_modification": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_patch_modification"
      ]
    ]
  ],
  "test_patch_collection_modification": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_patch_collection_modification"
      ]
    ]
  ],
  "test_poly3dcollection_verts_validation": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_poly3dcollection_verts_validation"
      ]
    ]
  ],
  "test_poly3dcollection_closed": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_poly3dcollection_closed"
      ]
    ]
  ],
  "test_poly_collection_2d_to_3d_empty": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_poly_collection_2d_to_3d_empty"
      ]
    ]
  ],
  "test_poly3dcollection_alpha": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_poly3dcollection_alpha"
      ]
    ]
  ],
  "test_add_collection3d_zs_array": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_add_collection3d_zs_array"
      ]
    ]
  ],
  "test_add_collection3d_zs_scalar": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_add_collection3d_zs_scalar"
      ]
    ]
  ],
  "test_axes3d_labelpad": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_axes3d_labelpad"
      ]
    ]
  ],
  "test_axes3d_cla": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_axes3d_cla"
      ]
    ]
  ],
  "test_axes3d_rotated": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_axes3d_rotated"
      ]
    ]
  ],
  "test_plotsurface_1d_raises": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_plotsurface_1d_raises"
      ]
    ]
  ],
  "_test_proj_make_M": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "_test_proj_make_M"
      ]
    ]
  ],
  "test_proj_transform": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_proj_transform"
      ]
    ]
  ],
  "_test_proj_draw_axes": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "_test_proj_draw_axes"
      ]
    ]
  ],
  "test_proj_axes_cube": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_proj_axes_cube"
      ]
    ]
  ],
  "test_proj_axes_cube_ortho": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_proj_axes_cube_ortho"
      ]
    ]
  ],
  "test_rot": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_rot"
      ]
    ]
  ],
  "test_world": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_world"
      ]
    ]
  ],
  "test_lines_dists": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_lines_dists"
      ]
    ]
  ],
  "test_lines_dists_nowarning": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_lines_dists_nowarning"
      ]
    ]
  ],
  "test_autoscale": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_autoscale"
      ]
    ]
  ],
  "test_axes3d_focal_length_checks": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_axes3d_focal_length_checks"
      ]
    ]
  ],
  "test_axes3d_focal_length": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_axes3d_focal_length"
      ]
    ]
  ],
  "test_axes3d_ortho": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_axes3d_ortho"
      ]
    ]
  ],
  "test_axes3d_isometric": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_axes3d_isometric"
      ]
    ]
  ],
  "test_invalid_axes_limits": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_invalid_axes_limits"
      ]
    ]
  ],
  "test_edge_style": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "TestVoxels",
        "test_edge_style"
      ]
    ]
  ],
  "test_named_colors": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "TestVoxels",
        "test_named_colors"
      ]
    ]
  ],
  "test_rgb_data": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "TestVoxels",
        "test_rgb_data"
      ]
    ]
  ],
  "test_xyz": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "TestVoxels",
        "test_xyz"
      ]
    ]
  ],
  "test_calling_conventions": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "TestVoxels",
        "test_calling_conventions"
      ]
    ]
  ],
  "test_line3d_set_get_data_3d": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_line3d_set_get_data_3d"
      ]
    ]
  ],
  "test_inverted": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_inverted"
      ]
    ]
  ],
  "test_ax3d_tickcolour": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_ax3d_tickcolour"
      ]
    ]
  ],
  "get_formatters": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_ticklabel_format",
        "get_formatters"
      ]
    ]
  ],
  "test_ticklabel_format": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_ticklabel_format"
      ]
    ]
  ],
  "test_quiver3D_smoke": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_quiver3D_smoke"
      ]
    ]
  ],
  "test_errorbar3d_errorevery": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_errorbar3d_errorevery"
      ]
    ]
  ],
  "test_errorbar3d": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_errorbar3d"
      ]
    ]
  ],
  "test_stem3d": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_stem3d"
      ]
    ]
  ],
  "test_equal_box_aspect": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_equal_box_aspect"
      ]
    ]
  ],
  "test_colorbar_pos": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_colorbar_pos"
      ]
    ]
  ],
  "test_inverted_zaxis": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_inverted_zaxis"
      ]
    ]
  ],
  "test_set_zlim": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_set_zlim"
      ]
    ]
  ],
  "convert_lim": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_pan",
        "convert_lim"
      ]
    ]
  ],
  "test_pan": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_pan"
      ]
    ]
  ],
  "test_toolbar_zoom_pan": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_toolbar_zoom_pan"
      ]
    ]
  ],
  "test_scalarmap_update": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_scalarmap_update"
      ]
    ]
  ],
  "test_subfigure_simple": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_subfigure_simple"
      ]
    ]
  ],
  "test_computed_zorder": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_computed_zorder"
      ]
    ]
  ],
  "test_format_coord": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_format_coord"
      ]
    ]
  ],
  "test_get_axis_position": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_get_axis_position"
      ]
    ]
  ],
  "test_text_3d": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_text_3d"
      ]
    ]
  ],
  "test_draw_single_lines_from_Nx1": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_draw_single_lines_from_Nx1"
      ]
    ]
  ],
  "test_pathpatch_3d": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_pathpatch_3d"
      ]
    ]
  ],
  "test_scatter_spiral": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_scatter_spiral"
      ]
    ]
  ],
  "test_Poly3DCollection_get_facecolor": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_Poly3DCollection_get_facecolor"
      ]
    ]
  ],
  "test_Poly3DCollection_get_edgecolor": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_Poly3DCollection_get_edgecolor"
      ]
    ]
  ],
  "test_view_init_vertical_axis": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_view_init_vertical_axis"
      ]
    ]
  ],
  "test_arc_pathpatch": [
    [
      "lib/mpl_toolkits/tests/test_mplot3d.py",
      [
        "test_arc_pathpatch"
      ]
    ]
  ],
  "has_flag": [
    [
      "setup.py",
      [
        "has_flag"
      ]
    ]
  ],
  "finalize_options": [
    [
      "setup.py",
      [
        "BuildExtraLibraries",
        "finalize_options"
      ]
    ]
  ],
  "prepare_flags": [
    [
      "setup.py",
      [
        "BuildExtraLibraries",
        "add_optimization_flags",
        "prepare_flags"
      ]
    ]
  ],
  "add_optimization_flags": [
    [
      "setup.py",
      [
        "BuildExtraLibraries",
        "add_optimization_flags"
      ]
    ]
  ],
  "build_extensions": [
    [
      "setup.py",
      [
        "BuildExtraLibraries",
        "build_extensions"
      ]
    ]
  ],
  "build_extension": [
    [
      "setup.py",
      [
        "BuildExtraLibraries",
        "build_extension"
      ]
    ]
  ],
  "update_matplotlibrc": [
    [
      "setup.py",
      [
        "update_matplotlibrc"
      ]
    ]
  ],
  "make_release_tree": [
    [
      "setup.py",
      [
        "Sdist",
        "make_release_tree"
      ]
    ]
  ],
  "_get_hash": [
    [
      "setupext.py",
      [
        "_get_hash"
      ]
    ]
  ],
  "get_from_cache_or_download": [
    [
      "setupext.py",
      [
        "get_from_cache_or_download"
      ]
    ]
  ],
  "get_and_extract_tarball": [
    [
      "setupext.py",
      [
        "get_and_extract_tarball"
      ]
    ]
  ],
  "print_status": [
    [
      "setupext.py",
      [
        "print_status"
      ]
    ]
  ],
  "get_pkg_config": [
    [
      "setupext.py",
      [
        "get_pkg_config"
      ]
    ]
  ],
  "pkg_config_setup_extension": [
    [
      "setupext.py",
      [
        "pkg_config_setup_extension"
      ]
    ]
  ],
  "get_package_data": [
    [
      "setupext.py",
      [
        "SetupPackage",
        "get_package_data"
      ]
    ],
    [
      "setupext.py",
      [
        "Matplotlib",
        "get_package_data"
      ]
    ],
    [
      "setupext.py",
      [
        "Tests",
        "get_package_data"
      ]
    ]
  ],
  "get_extensions": [
    [
      "setupext.py",
      [
        "SetupPackage",
        "get_extensions"
      ]
    ],
    [
      "setupext.py",
      [
        "Matplotlib",
        "get_extensions"
      ]
    ],
    [
      "setupext.py",
      [
        "BackendMacOSX",
        "get_extensions"
      ]
    ]
  ],
  "do_custom_build": [
    [
      "setupext.py",
      [
        "SetupPackage",
        "do_custom_build"
      ]
    ],
    [
      "setupext.py",
      [
        "FreeType",
        "do_custom_build"
      ]
    ],
    [
      "setupext.py",
      [
        "Qhull",
        "do_custom_build"
      ]
    ]
  ],
  "_pkg_data_helper": [
    [
      "setupext.py",
      [
        "_pkg_data_helper"
      ]
    ]
  ],
  "add_numpy_flags": [
    [
      "setupext.py",
      [
        "add_numpy_flags"
      ]
    ]
  ],
  "add_libagg_flags": [
    [
      "setupext.py",
      [
        "add_libagg_flags"
      ]
    ]
  ],
  "add_libagg_flags_and_sources": [
    [
      "setupext.py",
      [
        "add_libagg_flags_and_sources"
      ]
    ]
  ],
  "get_ccompiler": [
    [
      "setupext.py",
      [
        "get_ccompiler"
      ]
    ]
  ],
  "add_flags": [
    [
      "setupext.py",
      [
        "FreeType",
        "add_flags"
      ]
    ],
    [
      "setupext.py",
      [
        "Qhull",
        "add_flags"
      ]
    ]
  ],
  "enum_str_back_compat_patch": [
    [
      "tools/boilerplate.py",
      [
        "enum_str_back_compat_patch"
      ]
    ]
  ],
  "generate_function": [
    [
      "tools/boilerplate.py",
      [
        "generate_function"
      ]
    ]
  ],
  "boilerplate_gen": [
    [
      "tools/boilerplate.py",
      [
        "boilerplate_gen"
      ]
    ]
  ],
  "build_pyplot": [
    [
      "tools/boilerplate.py",
      [
        "build_pyplot"
      ]
    ]
  ],
  "download_or_cache": [
    [
      "tools/cache_zenodo_svg.py",
      [
        "download_or_cache"
      ]
    ]
  ],
  "safe_name": [
    [
      "tools/embed_js.py",
      [
        "safe_name"
      ]
    ]
  ],
  "prep_package": [
    [
      "tools/embed_js.py",
      [
        "prep_package"
      ]
    ]
  ],
  "gen_embedded_lines": [
    [
      "tools/embed_js.py",
      [
        "gen_embedded_lines"
      ]
    ]
  ],
  "build_mpljs": [
    [
      "tools/embed_js.py",
      [
        "build_mpljs"
      ]
    ]
  ],
  "__setattr__": [
    [
      "tools/gh_api.py",
      [
        "Obj",
        "__setattr__"
      ]
    ]
  ],
  "get_auth_token": [
    [
      "tools/gh_api.py",
      [
        "get_auth_token"
      ]
    ]
  ],
  "make_auth_header": [
    [
      "tools/gh_api.py",
      [
        "make_auth_header"
      ]
    ]
  ],
  "post_issue_comment": [
    [
      "tools/gh_api.py",
      [
        "post_issue_comment"
      ]
    ]
  ],
  "post_gist": [
    [
      "tools/gh_api.py",
      [
        "post_gist"
      ]
    ]
  ],
  "get_pull_request": [
    [
      "tools/gh_api.py",
      [
        "get_pull_request"
      ]
    ]
  ],
  "get_pull_request_files": [
    [
      "tools/gh_api.py",
      [
        "get_pull_request_files"
      ]
    ]
  ],
  "get_paged_request": [
    [
      "tools/gh_api.py",
      [
        "get_paged_request"
      ]
    ]
  ],
  "get_pulls_list": [
    [
      "tools/gh_api.py",
      [
        "get_pulls_list"
      ]
    ]
  ],
  "get_issues_list": [
    [
      "tools/gh_api.py",
      [
        "get_issues_list"
      ]
    ]
  ],
  "get_milestones": [
    [
      "tools/gh_api.py",
      [
        "get_milestones"
      ]
    ]
  ],
  "get_milestone_id": [
    [
      "tools/gh_api.py",
      [
        "get_milestone_id"
      ]
    ]
  ],
  "is_pull_request": [
    [
      "tools/gh_api.py",
      [
        "is_pull_request"
      ]
    ]
  ],
  "get_authors": [
    [
      "tools/gh_api.py",
      [
        "get_authors"
      ]
    ]
  ],
  "iter_fields": [
    [
      "tools/gh_api.py",
      [
        "iter_fields"
      ]
    ]
  ],
  "encode_multipart_formdata": [
    [
      "tools/gh_api.py",
      [
        "encode_multipart_formdata"
      ]
    ]
  ],
  "post_download": [
    [
      "tools/gh_api.py",
      [
        "post_download"
      ]
    ]
  ],
  "round_hour": [
    [
      "tools/github_stats.py",
      [
        "round_hour"
      ]
    ]
  ],
  "_parse_datetime": [
    [
      "tools/github_stats.py",
      [
        "_parse_datetime"
      ]
    ]
  ],
  "issues2dict": [
    [
      "tools/github_stats.py",
      [
        "issues2dict"
      ]
    ]
  ],
  "split_pulls": [
    [
      "tools/github_stats.py",
      [
        "split_pulls"
      ]
    ]
  ],
  "issues_closed_since": [
    [
      "tools/github_stats.py",
      [
        "issues_closed_since"
      ]
    ]
  ],
  "sorted_by_field": [
    [
      "tools/github_stats.py",
      [
        "sorted_by_field"
      ]
    ]
  ],
  "report": [
    [
      "tools/github_stats.py",
      [
        "report"
      ]
    ]
  ],
  "get_fontawesome": [
    [
      "tools/make_icons.py",
      [
        "get_fontawesome"
      ]
    ]
  ],
  "save_icon": [
    [
      "tools/make_icons.py",
      [
        "save_icon"
      ]
    ]
  ],
  "make_icon": [
    [
      "tools/make_icons.py",
      [
        "make_icon"
      ]
    ]
  ],
  "make_matplotlib_icon": [
    [
      "tools/make_icons.py",
      [
        "make_matplotlib_icon"
      ]
    ]
  ],
  "make_icons": [
    [
      "tools/make_icons.py",
      [
        "make_icons"
      ]
    ]
  ],
  "run_memleak_test": [
    [
      "tools/memleak.py",
      [
        "run_memleak_test"
      ]
    ]
  ],
  "log_namelist": [
    [
      "tools/subset.py",
      [
        "log_namelist"
      ]
    ]
  ],
  "select_with_refs": [
    [
      "tools/subset.py",
      [
        "select_with_refs"
      ]
    ]
  ],
  "subset_font_raw": [
    [
      "tools/subset.py",
      [
        "subset_font_raw"
      ]
    ]
  ],
  "subset_font": [
    [
      "tools/subset.py",
      [
        "subset_font"
      ]
    ]
  ],
  "getsubset": [
    [
      "tools/subset.py",
      [
        "getsubset"
      ]
    ]
  ],
  "hhea": [
    [
      "tools/subset.py",
      [
        "Sfnt",
        "hhea"
      ]
    ]
  ],
  "os2": [
    [
      "tools/subset.py",
      [
        "Sfnt",
        "os2"
      ]
    ]
  ],
  "set_os2": [
    [
      "tools/subset.py",
      [
        "set_os2"
      ]
    ]
  ],
  "set_os2_vert": [
    [
      "tools/subset.py",
      [
        "set_os2_vert"
      ]
    ]
  ],
  "extract_vert_to_script": [
    [
      "tools/subset.py",
      [
        "extract_vert_to_script"
      ]
    ]
  ],
  "eventFilter": [
    [
      "tools/triage_tests.py",
      [
        "EventFilter",
        "eventFilter"
      ]
    ]
  ],
  "set_entry": [
    [
      "tools/triage_tests.py",
      [
        "Dialog",
        "set_entry"
      ]
    ]
  ],
  "set_large_image": [
    [
      "tools/triage_tests.py",
      [
        "Dialog",
        "set_large_image"
      ]
    ]
  ],
  "accept_test": [
    [
      "tools/triage_tests.py",
      [
        "Dialog",
        "accept_test"
      ]
    ]
  ],
  "reject_test": [
    [
      "tools/triage_tests.py",
      [
        "Dialog",
        "reject_test"
      ]
    ]
  ],
  "get_dest_dir": [
    [
      "tools/triage_tests.py",
      [
        "Entry",
        "get_dest_dir"
      ]
    ]
  ],
  "display": [
    [
      "tools/triage_tests.py",
      [
        "Entry",
        "display"
      ]
    ]
  ],
  "copy_file": [
    [
      "tools/triage_tests.py",
      [
        "copy_file"
      ]
    ]
  ],
  "find_failing_tests": [
    [
      "tools/triage_tests.py",
      [
        "find_failing_tests"
      ]
    ]
  ],
  "launch": [
    [
      "tools/triage_tests.py",
      [
        "launch"
      ]
    ]
  ],
  "_draw_animated": [
    [
      "tutorials/advanced/blitting.py",
      [
        "BlitManager",
        "_draw_animated"
      ]
    ]
  ],
  "plot_examples": [
    [
      "tutorials/colors/colormap-manipulation.py",
      [
        "plot_examples"
      ]
    ]
  ],
  "plot_linearmap": [
    [
      "tutorials/colors/colormap-manipulation.py",
      [
        "plot_linearmap"
      ]
    ]
  ],
  "_forward": [
    [
      "tutorials/colors/colormapnorms.py",
      [
        "_forward"
      ]
    ]
  ],
  "_inverse": [
    [
      "tutorials/colors/colormapnorms.py",
      [
        "_inverse"
      ]
    ]
  ],
  "plot_color_gradients_1": [
    [
      "tutorials/colors/colormaps.py",
      [
        "plot_color_gradients_1"
      ]
    ]
  ],
  "index_to_coordinate": [
    [
      "tutorials/intermediate/imshow_extent.py",
      [
        "index_to_coordinate"
      ]
    ]
  ],
  "get_index_label_pos": [
    [
      "tutorials/intermediate/imshow_extent.py",
      [
        "get_index_label_pos"
      ]
    ]
  ],
  "lookup_extent": [
    [
      "tutorials/intermediate/imshow_extent.py",
      [
        "lookup_extent"
      ]
    ]
  ],
  "set_extent_None_text": [
    [
      "tutorials/intermediate/imshow_extent.py",
      [
        "set_extent_None_text"
      ]
    ]
  ],
  "plot_imshow_with_labels": [
    [
      "tutorials/intermediate/imshow_extent.py",
      [
        "plot_imshow_with_labels"
      ]
    ]
  ],
  "generate_imshow_demo_grid": [
    [
      "tutorials/intermediate/imshow_extent.py",
      [
        "generate_imshow_demo_grid"
      ]
    ]
  ],
  "plotting_function": [
    [
      "tutorials/introductory/customizing.py",
      [
        "plotting_function"
      ]
    ]
  ],
  "currency": [
    [
      "tutorials/introductory/lifecycle.py",
      [
        "currency"
      ]
    ]
  ],
  "my_plotter": [
    [
      "tutorials/introductory/quick_start.py",
      [
        "my_plotter"
      ]
    ]
  ],
  "identify_axes": [
    [
      "tutorials/provisional/mosaic.py",
      [
        "identify_axes"
      ]
    ]
  ],
  "formatoddticks": [
    [
      "tutorials/text/text_intro.py",
      [
        "formatoddticks"
      ]
    ]
  ]
}