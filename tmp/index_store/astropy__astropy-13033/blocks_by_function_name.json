{
  "_is_astropy_source": [
    [
      "astropy/__init__.py",
      [
        "_is_astropy_source"
      ]
    ]
  ],
  "validate": [
    [
      "astropy/__init__.py",
      [
        "base_constants_version",
        "validate"
      ]
    ],
    [
      "astropy/coordinates/builtin_frames/galactocentric.py",
      [
        "galactocentric_frame_defaults",
        "validate"
      ]
    ],
    [
      "astropy/coordinates/erfa_astrom.py",
      [
        "erfa_astrom",
        "validate"
      ]
    ],
    [
      "astropy/coordinates/name_resolve.py",
      [
        "sesame_url",
        "validate"
      ]
    ],
    [
      "astropy/coordinates/name_resolve.py",
      [
        "sesame_database",
        "validate"
      ]
    ],
    [
      "astropy/coordinates/solar_system.py",
      [
        "solar_system_ephemeris",
        "validate"
      ]
    ],
    [
      "astropy/cosmology/parameter.py",
      [
        "Parameter",
        "validate"
      ]
    ],
    [
      "astropy/cosmology/realizations.py",
      [
        "default_cosmology",
        "validate"
      ]
    ],
    [
      "astropy/extern/configobj/configobj.py",
      [
        "ConfigObj",
        "validate"
      ]
    ],
    [
      "astropy/io/votable/table.py",
      [
        "validate"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "_Interval",
        "validate"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "ModelBoundingBox",
        "validate"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "_SelectorArgument",
        "validate"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "_SelectorArguments",
        "validate"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "CompoundBoundingBox",
        "validate"
      ]
    ],
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "validate"
      ]
    ],
    [
      "astropy/modeling/projections.py",
      [
        "_ParameterDS",
        "validate"
      ]
    ],
    [
      "astropy/utils/iers/iers.py",
      [
        "earth_orientation_table",
        "validate"
      ]
    ],
    [
      "astropy/utils/state.py",
      [
        "ScienceState",
        "validate"
      ]
    ],
    [
      "astropy/wcs/wcs.py",
      [
        "validate"
      ]
    ]
  ],
  "set": [
    [
      "astropy/__init__.py",
      [
        "base_constants_version",
        "set"
      ]
    ],
    [
      "astropy/config/configuration.py",
      [
        "ConfigItem",
        "set"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "set"
      ]
    ],
    [
      "astropy/table/bst.py",
      [
        "Node",
        "set"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "PprintIncludeExclude",
        "set"
      ]
    ],
    [
      "astropy/utils/decorators.py",
      [
        "deprecated_attribute",
        "set"
      ]
    ],
    [
      "astropy/utils/state.py",
      [
        "ScienceState",
        "set"
      ]
    ]
  ],
  "_initialize_astropy": [
    [
      "astropy/__init__.py",
      [
        "_initialize_astropy"
      ]
    ]
  ],
  "_get_bibtex": [
    [
      "astropy/__init__.py",
      [
        "_get_bibtex"
      ]
    ]
  ],
  "online_help": [
    [
      "astropy/__init__.py",
      [
        "online_help"
      ]
    ]
  ],
  "__iter__": [
    [
      "astropy/config/configuration.py",
      [
        "ConfigNamespace",
        "__iter__"
      ]
    ],
    [
      "astropy/coordinates/sites.py",
      [
        "SiteRegistry",
        "__iter__"
      ]
    ],
    [
      "astropy/extern/ply/lex.py",
      [
        "Lexer",
        "__iter__"
      ]
    ],
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "__iter__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "__iter__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "_BasicHeader",
        "__iter__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "_CardAccessor",
        "__iter__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "_HeaderComments",
        "__iter__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "_HeaderCommentaryCards",
        "__iter__"
      ]
    ],
    [
      "astropy/modeling/utils.py",
      [
        "AliasDict",
        "__iter__"
      ]
    ],
    [
      "astropy/table/groups.py",
      [
        "BaseGroups",
        "__iter__"
      ]
    ],
    [
      "astropy/table/row.py",
      [
        "Row",
        "__iter__"
      ]
    ],
    [
      "astropy/table/tests/test_init_table.py",
      [
        "DictLike",
        "__iter__"
      ]
    ],
    [
      "astropy/units/physical.py",
      [
        "PhysicalType",
        "__iter__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "QuantityIterator",
        "__iter__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__iter__"
      ]
    ],
    [
      "astropy/units/structured.py",
      [
        "StructuredUnit",
        "__iter__"
      ]
    ],
    [
      "astropy/utils/console.py",
      [
        "ProgressBar",
        "__iter__"
      ]
    ],
    [
      "astropy/utils/console.py",
      [
        "Spinner",
        "__iter__"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedIterator",
        "__iter__"
      ]
    ],
    [
      "astropy/utils/shapes.py",
      [
        "ShapedLikeNDArray",
        "__iter__"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/coordinates_map.py",
      [
        "CoordinatesMap",
        "__iter__"
      ]
    ],
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "__iter__"
      ]
    ]
  ],
  "values": [
    [
      "astropy/config/configuration.py",
      [
        "ConfigNamespace",
        "values"
      ]
    ],
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "values"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "values"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "values"
      ]
    ],
    [
      "astropy/table/row.py",
      [
        "Row",
        "values"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "values"
      ]
    ],
    [
      "astropy/table/tests/test_subclass.py",
      [
        "ParamsRow",
        "values"
      ]
    ],
    [
      "astropy/units/structured.py",
      [
        "StructuredUnit",
        "values"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/formatter_locator.py",
      [
        "BaseFormatterLocator",
        "values"
      ]
    ]
  ],
  "items": [
    [
      "astropy/config/configuration.py",
      [
        "ConfigNamespace",
        "items"
      ]
    ],
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "items"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "items"
      ]
    ],
    [
      "astropy/table/bst.py",
      [
        "BST",
        "items"
      ]
    ],
    [
      "astropy/table/meta.py",
      [
        "ColumnDict",
        "items"
      ]
    ],
    [
      "astropy/table/soco.py",
      [
        "SCEngine",
        "items"
      ]
    ],
    [
      "astropy/table/sorted_array.py",
      [
        "SortedArray",
        "items"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "items"
      ]
    ],
    [
      "astropy/units/structured.py",
      [
        "StructuredUnit",
        "items"
      ]
    ]
  ],
  "set_temp": [
    [
      "astropy/config/configuration.py",
      [
        "ConfigNamespace",
        "set_temp"
      ]
    ],
    [
      "astropy/config/configuration.py",
      [
        "ConfigItem",
        "set_temp"
      ]
    ]
  ],
  "reload": [
    [
      "astropy/config/configuration.py",
      [
        "ConfigNamespace",
        "reload"
      ]
    ],
    [
      "astropy/config/configuration.py",
      [
        "ConfigItem",
        "reload"
      ]
    ],
    [
      "astropy/extern/configobj/configobj.py",
      [
        "ConfigObj",
        "reload"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "Index",
        "reload"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "SlicedIndex",
        "reload"
      ]
    ]
  ],
  "reset": [
    [
      "astropy/config/configuration.py",
      [
        "ConfigNamespace",
        "reset"
      ]
    ],
    [
      "astropy/extern/configobj/configobj.py",
      [
        "ConfigObj",
        "reset"
      ]
    ]
  ],
  "__set__": [
    [
      "astropy/config/configuration.py",
      [
        "ConfigItem",
        "__set__"
      ]
    ],
    [
      "astropy/coordinates/attributes.py",
      [
        "Attribute",
        "__set__"
      ]
    ],
    [
      "astropy/cosmology/parameter.py",
      [
        "Parameter",
        "__set__"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "ColumnAttribute",
        "__set__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "_DelayedHeader",
        "__set__"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "PprintIncludeExclude",
        "__set__"
      ]
    ],
    [
      "astropy/utils/data_info.py",
      [
        "InfoAttribute",
        "__set__"
      ]
    ],
    [
      "astropy/utils/data_info.py",
      [
        "ParentAttribute",
        "__set__"
      ]
    ],
    [
      "astropy/utils/data_info.py",
      [
        "DataInfo",
        "__set__"
      ]
    ],
    [
      "astropy/utils/data_info.py",
      [
        "BaseColumnInfo",
        "__set__"
      ]
    ],
    [
      "astropy/utils/decorators.py",
      [
        "lazyproperty",
        "__set__"
      ]
    ],
    [
      "astropy/utils/metadata.py",
      [
        "MetaData",
        "__set__"
      ]
    ],
    [
      "astropy/utils/metadata.py",
      [
        "MetaAttribute",
        "__set__"
      ]
    ]
  ],
  "__get__": [
    [
      "astropy/config/configuration.py",
      [
        "ConfigItem",
        "__get__"
      ]
    ],
    [
      "astropy/coordinates/attributes.py",
      [
        "Attribute",
        "__get__"
      ]
    ],
    [
      "astropy/cosmology/parameter.py",
      [
        "Parameter",
        "__get__"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "ColumnAttribute",
        "__get__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "_DelayedHeader",
        "__get__"
      ]
    ],
    [
      "astropy/io/registry/interface.py",
      [
        "UnifiedReadWriteMethod",
        "__get__"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "PprintIncludeExclude",
        "__get__"
      ]
    ],
    [
      "astropy/utils/data_info.py",
      [
        "InfoAttribute",
        "__get__"
      ]
    ],
    [
      "astropy/utils/data_info.py",
      [
        "ParentAttribute",
        "__get__"
      ]
    ],
    [
      "astropy/utils/data_info.py",
      [
        "DataInfo",
        "__get__"
      ]
    ],
    [
      "astropy/utils/decorators.py",
      [
        "classproperty",
        "__get__"
      ]
    ],
    [
      "astropy/utils/decorators.py",
      [
        "lazyproperty",
        "__get__"
      ]
    ],
    [
      "astropy/utils/decorators.py",
      [
        "sharedmethod",
        "__get__"
      ]
    ],
    [
      "astropy/utils/metadata.py",
      [
        "MetaData",
        "__get__"
      ]
    ],
    [
      "astropy/utils/metadata.py",
      [
        "MetaAttribute",
        "__get__"
      ]
    ]
  ],
  "__repr__": [
    [
      "astropy/config/configuration.py",
      [
        "ConfigItem",
        "__repr__"
      ]
    ],
    [
      "astropy/constants/constant.py",
      [
        "Constant",
        "__repr__"
      ]
    ],
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "__repr__"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferential",
        "__repr__"
      ]
    ],
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "__repr__"
      ]
    ],
    [
      "astropy/coordinates/spectral_coordinate.py",
      [
        "SpectralCoord",
        "__repr__"
      ]
    ],
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_representation_subclass",
        "NewUnitSphericalRepresentation",
        "__repr__"
      ]
    ],
    [
      "astropy/cosmology/core.py",
      [
        "Cosmology",
        "__repr__"
      ]
    ],
    [
      "astropy/cosmology/parameter.py",
      [
        "Parameter",
        "__repr__"
      ]
    ],
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "__repr__"
      ]
    ],
    [
      "astropy/extern/configobj/configobj.py",
      [
        "ConfigObj",
        "__repr__"
      ]
    ],
    [
      "astropy/extern/ply/lex.py",
      [
        "LexToken",
        "__repr__"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "YaccSymbol",
        "__repr__"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "Production",
        "__repr__"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "MiniProduction",
        "__repr__"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "LRItem",
        "__repr__"
      ]
    ],
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "__repr__"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "ColumnAttribute",
        "__repr__"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "Column",
        "__repr__"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "ColDefs",
        "__repr__"
      ]
    ],
    [
      "astropy/io/fits/file.py",
      [
        "_File",
        "__repr__"
      ]
    ],
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_record",
        "__repr__"
      ]
    ],
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "__repr__"
      ]
    ],
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "__repr__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "__repr__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "_CardAccessor",
        "__repr__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "_HeaderComments",
        "__repr__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "_HeaderCommentaryCards",
        "__repr__"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "SimpleElement",
        "__repr__"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Values",
        "__repr__"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Group",
        "__repr__"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "__repr__"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Resource",
        "__repr__"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "VOTableFile",
        "__repr__"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "_Interval",
        "__repr__"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "ModelBoundingBox",
        "__repr__"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "CompoundBoundingBox",
        "__repr__"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "_ModelMeta",
        "__repr__"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "__repr__"
      ]
    ],
    [
      "astropy/modeling/fitting.py",
      [
        "Covariance",
        "__repr__"
      ]
    ],
    [
      "astropy/modeling/fitting.py",
      [
        "StandardDeviations",
        "__repr__"
      ]
    ],
    [
      "astropy/modeling/fitting.py",
      [
        "FittingWithOutlierRemoval",
        "__repr__"
      ]
    ],
    [
      "astropy/modeling/mappings.py",
      [
        "Mapping",
        "__repr__"
      ]
    ],
    [
      "astropy/modeling/mappings.py",
      [
        "Identity",
        "__repr__"
      ]
    ],
    [
      "astropy/modeling/mappings.py",
      [
        "UnitsMapping",
        "__repr__"
      ]
    ],
    [
      "astropy/modeling/optimizers.py",
      [
        "Optimization",
        "__repr__"
      ]
    ],
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "__repr__"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "_PolyDomainWindow1D",
        "__repr__"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "OrthoPolynomialBase",
        "__repr__"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Polynomial2D",
        "__repr__"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "_SIP1D",
        "__repr__"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "SIP",
        "__repr__"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "InverseSIP",
        "__repr__"
      ]
    ],
    [
      "astropy/modeling/tabular.py",
      [
        "_Tabular",
        "__repr__"
      ]
    ],
    [
      "astropy/modeling/utils.py",
      [
        "AliasDict",
        "__repr__"
      ]
    ],
    [
      "astropy/nddata/bitmask.py",
      [
        "BitFlagNameMeta",
        "__repr__"
      ]
    ],
    [
      "astropy/nddata/nddata.py",
      [
        "NDData",
        "__repr__"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "NDUncertainty",
        "__repr__"
      ]
    ],
    [
      "astropy/stats/sigma_clipping.py",
      [
        "SigmaClip",
        "__repr__"
      ]
    ],
    [
      "astropy/table/bst.py",
      [
        "MaxValue",
        "__repr__"
      ]
    ],
    [
      "astropy/table/bst.py",
      [
        "MinValue",
        "__repr__"
      ]
    ],
    [
      "astropy/table/bst.py",
      [
        "Epsilon",
        "__repr__"
      ]
    ],
    [
      "astropy/table/bst.py",
      [
        "Node",
        "__repr__"
      ]
    ],
    [
      "astropy/table/bst.py",
      [
        "BST",
        "__repr__"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "__repr__"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "Column",
        "__repr__"
      ]
    ],
    [
      "astropy/table/groups.py",
      [
        "BaseGroups",
        "__repr__"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "Index",
        "__repr__"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "SlicedIndex",
        "__repr__"
      ]
    ],
    [
      "astropy/table/row.py",
      [
        "Row",
        "__repr__"
      ]
    ],
    [
      "astropy/table/soco.py",
      [
        "Node",
        "__repr__"
      ]
    ],
    [
      "astropy/table/soco.py",
      [
        "SCEngine",
        "__repr__"
      ]
    ],
    [
      "astropy/table/sorted_array.py",
      [
        "SortedArray",
        "__repr__"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "TableColumns",
        "__repr__"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "PprintIncludeExclude",
        "__repr__"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "PprintIncludeExclude",
        "set",
        "_Context",
        "__repr__"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "__repr__"
      ]
    ],
    [
      "astropy/table/table_helpers.py",
      [
        "ArrayWrapper",
        "__repr__"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "__repr__"
      ]
    ],
    [
      "astropy/timeseries/periodograms/bls/core.py",
      [
        "BoxLeastSquaresResults",
        "__repr__"
      ]
    ],
    [
      "astropy/uncertainty/core.py",
      [
        "_DistributionRepr",
        "__repr__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "__repr__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "EquivalentUnitsList",
        "__repr__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnrecognizedUnit",
        "__repr__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "CompositeUnit",
        "__repr__"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "__repr__"
      ]
    ],
    [
      "astropy/units/physical.py",
      [
        "PhysicalType",
        "__repr__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__repr__"
      ]
    ],
    [
      "astropy/units/structured.py",
      [
        "StructuredUnit",
        "__repr__"
      ]
    ],
    [
      "astropy/utils/data_info.py",
      [
        "DataInfo",
        "__repr__"
      ]
    ],
    [
      "astropy/utils/exceptions.py",
      [
        "_NoValue",
        "__repr__"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "__repr__"
      ]
    ],
    [
      "astropy/utils/metadata.py",
      [
        "MetaAttribute",
        "__repr__"
      ]
    ],
    [
      "astropy/utils/state.py",
      [
        "_ScienceStateContext",
        "__repr__"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/coordinates_map.py",
      [
        "CoordinatesMap",
        "__repr__"
      ]
    ],
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "__repr__"
      ]
    ],
    [
      "astropy/wcs/wcs.py",
      [
        "validate",
        "_WcsValidateWcsResult",
        "__repr__"
      ]
    ],
    [
      "astropy/wcs/wcs.py",
      [
        "validate",
        "_WcsValidateHduResult",
        "__repr__"
      ]
    ],
    [
      "astropy/wcs/wcs.py",
      [
        "validate",
        "_WcsValidateResults",
        "__repr__"
      ]
    ],
    [
      "astropy/wcs/wcsapi/high_level_wcs_wrapper.py",
      [
        "HighLevelWCSWrapper",
        "__repr__"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/base.py",
      [
        "BaseWCSWrapper",
        "__repr__"
      ]
    ]
  ],
  "__str__": [
    [
      "astropy/config/configuration.py",
      [
        "ConfigItem",
        "__str__"
      ]
    ],
    [
      "astropy/constants/constant.py",
      [
        "Constant",
        "__str__"
      ]
    ],
    [
      "astropy/coordinates/angles.py",
      [
        "Angle",
        "__str__"
      ]
    ],
    [
      "astropy/coordinates/errors.py",
      [
        "IllegalHourError",
        "__str__"
      ]
    ],
    [
      "astropy/coordinates/errors.py",
      [
        "IllegalHourWarning",
        "__str__"
      ]
    ],
    [
      "astropy/coordinates/errors.py",
      [
        "IllegalMinuteError",
        "__str__"
      ]
    ],
    [
      "astropy/coordinates/errors.py",
      [
        "IllegalMinuteWarning",
        "__str__"
      ]
    ],
    [
      "astropy/coordinates/errors.py",
      [
        "IllegalSecondError",
        "__str__"
      ]
    ],
    [
      "astropy/coordinates/errors.py",
      [
        "IllegalSecondWarning",
        "__str__"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferential",
        "__str__"
      ]
    ],
    [
      "astropy/extern/ply/lex.py",
      [
        "LexToken",
        "__str__"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "YaccSymbol",
        "__str__"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "Production",
        "__str__"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "MiniProduction",
        "__str__"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "LRItem",
        "__str__"
      ]
    ],
    [
      "astropy/io/ascii/ipac.py",
      [
        "IpacFormatErrorDBMS",
        "__str__"
      ]
    ],
    [
      "astropy/io/ascii/ipac.py",
      [
        "IpacFormatError",
        "__str__"
      ]
    ],
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "__str__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "__str__"
      ]
    ],
    [
      "astropy/io/fits/verify.py",
      [
        "_ErrList",
        "__str__"
      ]
    ],
    [
      "astropy/io/votable/exceptions.py",
      [
        "VOWarning",
        "__str__"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "__str__"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "__str__"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "__str__"
      ]
    ],
    [
      "astropy/modeling/fitting.py",
      [
        "FittingWithOutlierRemoval",
        "__str__"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "_PolyDomainWindow1D",
        "__str__"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "OrthoPolynomialBase",
        "__str__"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Polynomial2D",
        "__str__"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "_SIP1D",
        "__str__"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "SIP",
        "__str__"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "InverseSIP",
        "__str__"
      ]
    ],
    [
      "astropy/modeling/tabular.py",
      [
        "_Tabular",
        "__str__"
      ]
    ],
    [
      "astropy/nddata/nddata.py",
      [
        "NDData",
        "__str__"
      ]
    ],
    [
      "astropy/stats/sigma_clipping.py",
      [
        "SigmaClip",
        "__str__"
      ]
    ],
    [
      "astropy/table/bst.py",
      [
        "Node",
        "__str__"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "Column",
        "__str__"
      ]
    ],
    [
      "astropy/table/row.py",
      [
        "Row",
        "__str__"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "__str__"
      ]
    ],
    [
      "astropy/table/tests/test_subclass.py",
      [
        "MyRow",
        "__str__"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "__str__"
      ]
    ],
    [
      "astropy/uncertainty/core.py",
      [
        "_DistributionRepr",
        "__str__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "__str__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnrecognizedUnit",
        "__str__"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "__str__"
      ]
    ],
    [
      "astropy/units/physical.py",
      [
        "PhysicalType",
        "__str__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__str__"
      ]
    ],
    [
      "astropy/units/structured.py",
      [
        "StructuredUnit",
        "__str__"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "__str__"
      ]
    ],
    [
      "astropy/wcs/wcsapi/high_level_wcs_wrapper.py",
      [
        "HighLevelWCSWrapper",
        "__str__"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/base.py",
      [
        "BaseWCSWrapper",
        "__str__"
      ]
    ]
  ],
  "section_name": [
    [
      "astropy/config/configuration.py",
      [
        "ConfigItem",
        "__call__",
        "section_name"
      ]
    ]
  ],
  "__call__": [
    [
      "astropy/config/configuration.py",
      [
        "ConfigItem",
        "__call__"
      ]
    ],
    [
      "astropy/config/paths.py",
      [
        "_SetTempPath",
        "__call__"
      ]
    ],
    [
      "astropy/coordinates/transformations.py",
      [
        "CoordinateTransform",
        "__call__"
      ]
    ],
    [
      "astropy/coordinates/transformations.py",
      [
        "FunctionTransform",
        "__call__"
      ]
    ],
    [
      "astropy/coordinates/transformations.py",
      [
        "FunctionTransformWithFiniteDifference",
        "__call__"
      ]
    ],
    [
      "astropy/coordinates/transformations.py",
      [
        "BaseAffineTransform",
        "__call__"
      ]
    ],
    [
      "astropy/coordinates/transformations.py",
      [
        "CompositeTransform",
        "__call__"
      ]
    ],
    [
      "astropy/cosmology/connect.py",
      [
        "CosmologyRead",
        "__call__"
      ]
    ],
    [
      "astropy/cosmology/connect.py",
      [
        "CosmologyWrite",
        "__call__"
      ]
    ],
    [
      "astropy/cosmology/connect.py",
      [
        "CosmologyFromFormat",
        "__call__"
      ]
    ],
    [
      "astropy/cosmology/connect.py",
      [
        "CosmologyToFormat",
        "__call__"
      ]
    ],
    [
      "astropy/extern/ply/lex.py",
      [
        "NullLogger",
        "__call__"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "NullLogger",
        "__call__"
      ]
    ],
    [
      "astropy/io/ascii/core.py",
      [
        "BaseSplitter",
        "__call__"
      ]
    ],
    [
      "astropy/io/ascii/core.py",
      [
        "DefaultSplitter",
        "__call__"
      ]
    ],
    [
      "astropy/io/ascii/core.py",
      [
        "TableOutputter",
        "__call__"
      ]
    ],
    [
      "astropy/io/ascii/ecsv.py",
      [
        "EcsvOutputter",
        "__call__"
      ]
    ],
    [
      "astropy/io/ascii/fixedwidth.py",
      [
        "FixedWidthSplitter",
        "__call__"
      ]
    ],
    [
      "astropy/io/ascii/html.py",
      [
        "HTMLSplitter",
        "__call__"
      ]
    ],
    [
      "astropy/io/ascii/html.py",
      [
        "HTMLOutputter",
        "__call__"
      ]
    ],
    [
      "astropy/io/ascii/latex.py",
      [
        "LatexSplitter",
        "__call__"
      ]
    ],
    [
      "astropy/io/ascii/latex.py",
      [
        "AASTexHeaderSplitter",
        "__call__"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "ColumnAttribute",
        "__call__"
      ]
    ],
    [
      "astropy/io/fits/scripts/fitsdiff.py",
      [
        "StoreListAction",
        "__call__"
      ]
    ],
    [
      "astropy/io/fits/scripts/fitsheader.py",
      [
        "KeywordAppendAction",
        "__call__"
      ]
    ],
    [
      "astropy/io/fits/util.py",
      [
        "ignore_sigint",
        "wrapped",
        "SigintHandler",
        "__call__"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "_BoundingDomain",
        "__call__"
      ]
    ],
    [
      "astropy/modeling/convolution.py",
      [
        "Convolution",
        "__call__"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "_ModelMeta",
        "_create_bounding_box_subclass",
        "__call__"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "_ModelMeta",
        "_handle_special_methods",
        "if___call___not_in_mem",
        "__call__"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "__call__"
      ]
    ],
    [
      "astropy/modeling/fitting.py",
      [
        "Fitter",
        "__call__"
      ]
    ],
    [
      "astropy/modeling/fitting.py",
      [
        "LinearLSQFitter",
        "__call__"
      ]
    ],
    [
      "astropy/modeling/fitting.py",
      [
        "FittingWithOutlierRemoval",
        "__call__"
      ]
    ],
    [
      "astropy/modeling/fitting.py",
      [
        "LevMarLSQFitter",
        "__call__"
      ]
    ],
    [
      "astropy/modeling/fitting.py",
      [
        "SLSQPLSQFitter",
        "__call__"
      ]
    ],
    [
      "astropy/modeling/fitting.py",
      [
        "SimplexLSQFitter",
        "__call__"
      ]
    ],
    [
      "astropy/modeling/fitting.py",
      [
        "JointFitter",
        "__call__"
      ]
    ],
    [
      "astropy/modeling/optimizers.py",
      [
        "Optimization",
        "__call__"
      ]
    ],
    [
      "astropy/modeling/optimizers.py",
      [
        "SLSQP",
        "__call__"
      ]
    ],
    [
      "astropy/modeling/optimizers.py",
      [
        "Simplex",
        "__call__"
      ]
    ],
    [
      "astropy/modeling/spline.py",
      [
        "_Spline",
        "__call__"
      ]
    ],
    [
      "astropy/modeling/spline.py",
      [
        "_SplineFitter",
        "__call__"
      ]
    ],
    [
      "astropy/modeling/tests/test_input.py",
      [
        "test_more_outputs",
        "M",
        "__call__"
      ]
    ],
    [
      "astropy/nddata/mixins/ndio.py",
      [
        "NDDataRead",
        "__call__"
      ]
    ],
    [
      "astropy/nddata/mixins/ndio.py",
      [
        "NDDataWrite",
        "__call__"
      ]
    ],
    [
      "astropy/samp/utils.py",
      [
        "_ServerProxyPoolMethod",
        "__call__"
      ]
    ],
    [
      "astropy/samp/utils.py",
      [
        "SAMPMsgReplierWrapper",
        "__call__"
      ]
    ],
    [
      "astropy/samp/utils.py",
      [
        "_HubAsClientMethod",
        "__call__"
      ]
    ],
    [
      "astropy/stats/histogram.py",
      [
        "_KnuthF",
        "__call__"
      ]
    ],
    [
      "astropy/stats/sigma_clipping.py",
      [
        "SigmaClip",
        "__call__"
      ]
    ],
    [
      "astropy/stats/spatial.py",
      [
        "RipleysKEstimator",
        "__call__"
      ]
    ],
    [
      "astropy/table/connect.py",
      [
        "TableRead",
        "__call__"
      ]
    ],
    [
      "astropy/table/connect.py",
      [
        "TableWrite",
        "__call__"
      ]
    ],
    [
      "astropy/table/info.py",
      [
        "TableInfo",
        "__call__"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "PprintIncludeExclude",
        "__call__"
      ]
    ],
    [
      "astropy/tests/helper.py",
      [
        "raises",
        "__call__"
      ]
    ],
    [
      "astropy/tests/helper.py",
      [
        "ignore_warnings",
        "__call__"
      ]
    ],
    [
      "astropy/tests/runner.py",
      [
        "keyword",
        "__call__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "_UnitMetaClass",
        "__call__"
      ]
    ],
    [
      "astropy/units/decorators.py",
      [
        "QuantityInput",
        "__call__"
      ]
    ],
    [
      "astropy/units/function/mixin.py",
      [
        "FunctionMixin",
        "__call__"
      ]
    ],
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "FunctionAssigner",
        "__call__"
      ]
    ],
    [
      "astropy/utils/console.py",
      [
        "_mapfunc",
        "__call__"
      ]
    ],
    [
      "astropy/utils/console.py",
      [
        "Getch",
        "__call__"
      ]
    ],
    [
      "astropy/utils/console.py",
      [
        "_GetchUnix",
        "__call__"
      ]
    ],
    [
      "astropy/utils/console.py",
      [
        "_GetchWindows",
        "__call__"
      ]
    ],
    [
      "astropy/utils/console.py",
      [
        "_GetchMacCarbon",
        "__call__"
      ]
    ],
    [
      "astropy/utils/data_info.py",
      [
        "DataInfo",
        "__call__"
      ]
    ],
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "MaskedFormat",
        "__call__"
      ]
    ],
    [
      "astropy/visualization/interval.py",
      [
        "BaseInterval",
        "__call__"
      ]
    ],
    [
      "astropy/visualization/mpl_normalize.py",
      [
        "ImageNormalize",
        "__call__"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "BaseStretch",
        "__call__"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "LinearStretch",
        "__call__"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "SqrtStretch",
        "__call__"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "PowerStretch",
        "__call__"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "PowerDistStretch",
        "__call__"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "InvertedPowerDistStretch",
        "__call__"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "LogStretch",
        "__call__"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "InvertedLogStretch",
        "__call__"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "AsinhStretch",
        "__call__"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "SinhStretch",
        "__call__"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "HistEqStretch",
        "__call__"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "InvertedHistEqStretch",
        "__call__"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "ContrastBiasStretch",
        "__call__"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "InvertedContrastBiasStretch",
        "__call__"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "CompositeStretch",
        "__call__"
      ]
    ],
    [
      "astropy/visualization/time.py",
      [
        "time_support",
        "AstropyTimeLocator",
        "__call__"
      ]
    ],
    [
      "astropy/visualization/time.py",
      [
        "time_support",
        "AstropyTimeFormatter",
        "__call__"
      ]
    ],
    [
      "astropy/visualization/transform.py",
      [
        "CompositeTransform",
        "__call__"
      ]
    ]
  ],
  "_validate_val": [
    [
      "astropy/config/configuration.py",
      [
        "ConfigItem",
        "_validate_val"
      ]
    ]
  ],
  "get_config_filename": [
    [
      "astropy/config/configuration.py",
      [
        "get_config_filename"
      ]
    ]
  ],
  "get_config": [
    [
      "astropy/config/configuration.py",
      [
        "get_config"
      ]
    ]
  ],
  "generate_config": [
    [
      "astropy/config/configuration.py",
      [
        "generate_config"
      ]
    ]
  ],
  "reload_config": [
    [
      "astropy/config/configuration.py",
      [
        "reload_config"
      ]
    ]
  ],
  "is_unedited_config_file": [
    [
      "astropy/config/configuration.py",
      [
        "is_unedited_config_file"
      ]
    ]
  ],
  "update_default_config": [
    [
      "astropy/config/configuration.py",
      [
        "update_default_config"
      ]
    ]
  ],
  "create_config_file": [
    [
      "astropy/config/configuration.py",
      [
        "create_config_file"
      ]
    ]
  ],
  "_find_home": [
    [
      "astropy/config/paths.py",
      [
        "_find_home"
      ]
    ]
  ],
  "get_config_dir": [
    [
      "astropy/config/paths.py",
      [
        "get_config_dir"
      ]
    ]
  ],
  "get_cache_dir": [
    [
      "astropy/config/paths.py",
      [
        "get_cache_dir"
      ]
    ]
  ],
  "__enter__": [
    [
      "astropy/config/paths.py",
      [
        "_SetTempPath",
        "__enter__"
      ]
    ],
    [
      "astropy/config/paths.py",
      [
        "set_temp_config",
        "__enter__"
      ]
    ],
    [
      "astropy/io/fits/file.py",
      [
        "_File",
        "__enter__"
      ]
    ],
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "__enter__"
      ]
    ],
    [
      "astropy/io/fits/hdu/streaming.py",
      [
        "StreamingHDU",
        "__enter__"
      ]
    ],
    [
      "astropy/io/votable/validator/result.py",
      [
        "Result",
        "__enter__"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "_IndexModeContext",
        "__enter__"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "PprintIncludeExclude",
        "set",
        "_Context",
        "__enter__"
      ]
    ],
    [
      "astropy/tests/helper.py",
      [
        "raises",
        "__enter__"
      ]
    ],
    [
      "astropy/tests/helper.py",
      [
        "catch_warnings",
        "__enter__"
      ]
    ],
    [
      "astropy/tests/helper.py",
      [
        "ignore_warnings",
        "__enter__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "_UnitContext",
        "__enter__"
      ]
    ],
    [
      "astropy/utils/console.py",
      [
        "ProgressBar",
        "__enter__"
      ]
    ],
    [
      "astropy/utils/console.py",
      [
        "Spinner",
        "__enter__"
      ]
    ],
    [
      "astropy/utils/console.py",
      [
        "ProgressBarOrSpinner",
        "__enter__"
      ]
    ],
    [
      "astropy/utils/metadata.py",
      [
        "_EnableMergeStrategies",
        "__enter__"
      ]
    ],
    [
      "astropy/utils/misc.py",
      [
        "NumpyRNGContext",
        "__enter__"
      ]
    ],
    [
      "astropy/utils/state.py",
      [
        "_ScienceStateContext",
        "__enter__"
      ]
    ],
    [
      "astropy/visualization/time.py",
      [
        "time_support",
        "MplTimeConverter",
        "__enter__"
      ]
    ],
    [
      "astropy/visualization/units.py",
      [
        "quantity_support",
        "MplQuantityConverter",
        "__enter__"
      ]
    ],
    [
      "astropy/wcs/utils.py",
      [
        "custom_wcs_to_frame_mappings",
        "__enter__"
      ]
    ],
    [
      "astropy/wcs/utils.py",
      [
        "custom_frame_to_wcs_mappings",
        "__enter__"
      ]
    ],
    [
      "astropy/wcs/wcsapi/fitswcs.py",
      [
        "custom_ctype_to_ucd_mapping",
        "__enter__"
      ]
    ]
  ],
  "__exit__": [
    [
      "astropy/config/paths.py",
      [
        "_SetTempPath",
        "__exit__"
      ]
    ],
    [
      "astropy/config/paths.py",
      [
        "set_temp_config",
        "__exit__"
      ]
    ],
    [
      "astropy/io/fits/file.py",
      [
        "_File",
        "__exit__"
      ]
    ],
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "__exit__"
      ]
    ],
    [
      "astropy/io/fits/hdu/streaming.py",
      [
        "StreamingHDU",
        "__exit__"
      ]
    ],
    [
      "astropy/io/votable/validator/result.py",
      [
        "Result",
        "__exit__"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "_IndexModeContext",
        "__exit__"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "PprintIncludeExclude",
        "set",
        "_Context",
        "__exit__"
      ]
    ],
    [
      "astropy/tests/helper.py",
      [
        "raises",
        "__exit__"
      ]
    ],
    [
      "astropy/tests/helper.py",
      [
        "catch_warnings",
        "__exit__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "_UnitContext",
        "__exit__"
      ]
    ],
    [
      "astropy/utils/console.py",
      [
        "ProgressBar",
        "__exit__"
      ]
    ],
    [
      "astropy/utils/console.py",
      [
        "Spinner",
        "__exit__"
      ]
    ],
    [
      "astropy/utils/console.py",
      [
        "ProgressBarOrSpinner",
        "__exit__"
      ]
    ],
    [
      "astropy/utils/metadata.py",
      [
        "_EnableMergeStrategies",
        "__exit__"
      ]
    ],
    [
      "astropy/utils/misc.py",
      [
        "NumpyRNGContext",
        "__exit__"
      ]
    ],
    [
      "astropy/utils/state.py",
      [
        "_ScienceStateContext",
        "__exit__"
      ]
    ],
    [
      "astropy/visualization/time.py",
      [
        "time_support",
        "MplTimeConverter",
        "__exit__"
      ]
    ],
    [
      "astropy/visualization/units.py",
      [
        "quantity_support",
        "MplQuantityConverter",
        "__exit__"
      ]
    ],
    [
      "astropy/wcs/utils.py",
      [
        "custom_wcs_to_frame_mappings",
        "__exit__"
      ]
    ],
    [
      "astropy/wcs/utils.py",
      [
        "custom_frame_to_wcs_mappings",
        "__exit__"
      ]
    ],
    [
      "astropy/wcs/wcsapi/fitswcs.py",
      [
        "custom_ctype_to_ucd_mapping",
        "__exit__"
      ]
    ]
  ],
  "_find_or_create_root_dir": [
    [
      "astropy/config/paths.py",
      [
        "_find_or_create_root_dir"
      ]
    ]
  ],
  "setup_module": [
    [
      "astropy/config/tests/test_configs.py",
      [
        "setup_module"
      ]
    ],
    [
      "astropy/samp/tests/test_client.py",
      [
        "setup_module"
      ]
    ],
    [
      "astropy/samp/tests/test_errors.py",
      [
        "setup_module"
      ]
    ],
    [
      "astropy/samp/tests/test_hub.py",
      [
        "setup_module"
      ]
    ],
    [
      "astropy/samp/tests/test_hub_proxy.py",
      [
        "setup_module"
      ]
    ],
    [
      "astropy/samp/tests/test_hub_script.py",
      [
        "setup_module"
      ]
    ],
    [
      "astropy/samp/tests/test_standard_profile.py",
      [
        "setup_module"
      ]
    ],
    [
      "astropy/samp/tests/test_web_profile.py",
      [
        "setup_module"
      ]
    ],
    [
      "astropy/time/tests/test_delta.py",
      [
        "setup_module"
      ]
    ],
    [
      "astropy/time/tests/test_precision.py",
      [
        "setup_module"
      ]
    ],
    [
      "astropy/utils/iers/tests/test_iers.py",
      [
        "setup_module"
      ]
    ]
  ],
  "teardown_module": [
    [
      "astropy/config/tests/test_configs.py",
      [
        "teardown_module"
      ]
    ],
    [
      "astropy/time/tests/test_delta.py",
      [
        "teardown_module"
      ]
    ],
    [
      "astropy/utils/iers/tests/test_iers.py",
      [
        "teardown_module"
      ]
    ]
  ],
  "test_paths": [
    [
      "astropy/config/tests/test_configs.py",
      [
        "test_paths"
      ]
    ]
  ],
  "test_func": [
    [
      "astropy/config/tests/test_configs.py",
      [
        "test_set_temp_config",
        "test_func"
      ]
    ]
  ],
  "test_set_temp_config": [
    [
      "astropy/config/tests/test_configs.py",
      [
        "test_set_temp_config"
      ]
    ]
  ],
  "test_set_temp_cache": [
    [
      "astropy/config/tests/test_configs.py",
      [
        "test_set_temp_cache"
      ]
    ]
  ],
  "test_set_temp_cache_resets_on_exception": [
    [
      "astropy/config/tests/test_configs.py",
      [
        "test_set_temp_cache_resets_on_exception"
      ]
    ]
  ],
  "test_config_file": [
    [
      "astropy/config/tests/test_configs.py",
      [
        "test_config_file"
      ]
    ]
  ],
  "check_config": [
    [
      "astropy/config/tests/test_configs.py",
      [
        "check_config"
      ]
    ]
  ],
  "test_generate_config": [
    [
      "astropy/config/tests/test_configs.py",
      [
        "test_generate_config"
      ]
    ]
  ],
  "test_generate_config2": [
    [
      "astropy/config/tests/test_configs.py",
      [
        "test_generate_config2"
      ]
    ]
  ],
  "test_create_config_file": [
    [
      "astropy/config/tests/test_configs.py",
      [
        "test_create_config_file"
      ]
    ]
  ],
  "test_configitem": [
    [
      "astropy/config/tests/test_configs.py",
      [
        "test_configitem"
      ]
    ]
  ],
  "test_configitem_types": [
    [
      "astropy/config/tests/test_configs.py",
      [
        "test_configitem_types"
      ]
    ]
  ],
  "test_configitem_options": [
    [
      "astropy/config/tests/test_configs.py",
      [
        "test_configitem_options"
      ]
    ]
  ],
  "osraiser": [
    [
      "astropy/config/tests/test_configs.py",
      [
        "test_config_noastropy_fallback",
        "osraiser"
      ]
    ],
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_data_noastropy_fallback",
        "osraiser"
      ]
    ]
  ],
  "test_config_noastropy_fallback": [
    [
      "astropy/config/tests/test_configs.py",
      [
        "test_config_noastropy_fallback"
      ]
    ]
  ],
  "test_configitem_setters": [
    [
      "astropy/config/tests/test_configs.py",
      [
        "test_configitem_setters"
      ]
    ]
  ],
  "test_empty_config_file": [
    [
      "astropy/config/tests/test_configs.py",
      [
        "test_empty_config_file"
      ]
    ]
  ],
  "setup_class": [
    [
      "astropy/config/tests/test_configs.py",
      [
        "TestAliasRead",
        "setup_class"
      ]
    ],
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "TestGetLocationGCRS",
        "setup_class"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestInfo",
        "setup_class"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestArithmeticWithDifferentials",
        "setup_class"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation_methods.py",
      [
        "ShapeSetup",
        "setup_class"
      ]
    ],
    [
      "astropy/coordinates/tests/test_shape_manipulation.py",
      [
        "TestManipulation",
        "setup_class"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "TestFLRW",
        "setup_class"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "FLRWSubclassTest",
        "setup_class"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "FlatFLRWMixinTest",
        "setup_class"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_lambdacdm.py",
      [
        "TestLambdaCDM",
        "setup_class"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_lambdacdm.py",
      [
        "TestFlatLambdaCDM",
        "setup_class"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_w0cdm.py",
      [
        "TestwCDM",
        "setup_class"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_w0cdm.py",
      [
        "TestFlatwCDM",
        "setup_class"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_w0wacdm.py",
      [
        "Testw0waCDM",
        "setup_class"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_w0wacdm.py",
      [
        "TestFlatw0waCDM",
        "setup_class"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_w0wzcdm.py",
      [
        "Testw0wzCDM",
        "setup_class"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_wpwazpcdm.py",
      [
        "TestwpwaCDM",
        "setup_class"
      ]
    ],
    [
      "astropy/cosmology/io/tests/test_cosmology.py",
      [
        "TestToFromCosmology",
        "setup_class"
      ]
    ],
    [
      "astropy/cosmology/io/tests/test_ecsv.py",
      [
        "TestReadWriteECSV",
        "setup_class"
      ]
    ],
    [
      "astropy/cosmology/io/tests/test_json.py",
      [
        "TestReadWriteJSON",
        "setup_class"
      ]
    ],
    [
      "astropy/cosmology/io/tests/test_mapping.py",
      [
        "TestToFromMapping",
        "setup_class"
      ]
    ],
    [
      "astropy/cosmology/io/tests/test_model.py",
      [
        "TestToFromModel",
        "setup_class"
      ]
    ],
    [
      "astropy/cosmology/io/tests/test_row.py",
      [
        "TestToFromTable",
        "setup_class"
      ]
    ],
    [
      "astropy/cosmology/io/tests/test_table.py",
      [
        "TestToFromTable",
        "setup_class"
      ]
    ],
    [
      "astropy/cosmology/io/tests/test_yaml.py",
      [
        "TestToFromYAML",
        "setup_class"
      ]
    ],
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "TestCosmology",
        "setup_class"
      ]
    ],
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "CosmologySubclassTest",
        "setup_class"
      ]
    ],
    [
      "astropy/cosmology/tests/test_funcs.py",
      [
        "Test_ZatValue",
        "setup_class"
      ]
    ],
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "TestParameter",
        "setup_class"
      ]
    ],
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestSingleTable",
        "setup_class"
      ]
    ],
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestMultipleHDU",
        "setup_class"
      ]
    ],
    [
      "astropy/io/fits/tests/test_fitstime.py",
      [
        "TestFitsTime",
        "setup_class"
      ]
    ],
    [
      "astropy/io/fits/tests/test_uint.py",
      [
        "TestUintFunctions",
        "setup_class"
      ]
    ],
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedIORegistryBase",
        "setup_class"
      ]
    ],
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedInputRegistry",
        "setup_class"
      ]
    ],
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedOutputRegistry",
        "setup_class"
      ]
    ],
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedIORegistry",
        "setup_class"
      ]
    ],
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestDefaultRegistry",
        "setup_class"
      ]
    ],
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestFixups",
        "setup_class"
      ]
    ],
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestReferences",
        "setup_class"
      ]
    ],
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "setup_class"
      ]
    ],
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestThroughTableData",
        "setup_class"
      ]
    ],
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestThroughBinary",
        "setup_class"
      ]
    ],
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestThroughBinary2",
        "setup_class"
      ]
    ],
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "TestNonLinearConstraints",
        "setup_class"
      ]
    ],
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "TestBounds",
        "setup_class"
      ]
    ],
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "TestLinearConstraints",
        "setup_class"
      ]
    ],
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestPolynomial2D",
        "setup_class"
      ]
    ],
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestICheb2D",
        "setup_class"
      ]
    ],
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestJointFitter",
        "setup_class"
      ]
    ],
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestNonLinearFitters",
        "setup_class"
      ]
    ],
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestEntryPoint",
        "setup_class"
      ]
    ],
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "Test1DFittingWithOutlierRemoval",
        "setup_class"
      ]
    ],
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "Test2DFittingWithOutlierRemoval",
        "setup_class"
      ]
    ],
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestWeightedFittingWithOutlierRemoval",
        "setup_class"
      ]
    ],
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestFittingUncertanties",
        "setup_class"
      ]
    ],
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestInputType",
        "setup_class"
      ]
    ],
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestFitting",
        "setup_class"
      ]
    ],
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestEvaluation",
        "setup_class"
      ]
    ],
    [
      "astropy/modeling/tests/test_model_sets.py",
      [
        "Test1ModelSet",
        "setup_class"
      ]
    ],
    [
      "astropy/modeling/tests/test_models.py",
      [
        "Fittable2DModelTester",
        "setup_class"
      ]
    ],
    [
      "astropy/modeling/tests/test_models.py",
      [
        "Fittable1DModelTester",
        "setup_class"
      ]
    ],
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "setup_class"
      ]
    ],
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestMultipleParameterSets",
        "setup_class"
      ]
    ],
    [
      "astropy/modeling/tests/test_polynomial.py",
      [
        "TestFitting",
        "setup_class"
      ]
    ],
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "TestZenithalPerspective",
        "setup_class"
      ]
    ],
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "TestCylindricalPerspective",
        "setup_class"
      ]
    ],
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline",
        "setup_class"
      ]
    ],
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "setup_class"
      ]
    ],
    [
      "astropy/modeling/tests/test_statistics.py",
      [
        "TestLeastSquare_XD",
        "setup_class"
      ]
    ],
    [
      "astropy/modeling/tests/test_statistics.py",
      [
        "TestLeastSquare_ND",
        "setup_class"
      ]
    ],
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "TestCutout2D",
        "setup_class"
      ]
    ],
    [
      "astropy/time/tests/test_corrs.py",
      [
        "TestHelioBaryCentric",
        "setup_class"
      ]
    ],
    [
      "astropy/time/tests/test_functions.py",
      [
        "TestFunctionsTime",
        "setup_class"
      ]
    ],
    [
      "astropy/time/tests/test_functions.py",
      [
        "TestFunctionsTimeDelta",
        "setup_class"
      ]
    ],
    [
      "astropy/time/tests/test_methods.py",
      [
        "ShapeSetup",
        "setup_class"
      ]
    ],
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestArithmetic",
        "setup_class"
      ]
    ],
    [
      "astropy/time/tests/test_sidereal.py",
      [
        "TestERFATestCases",
        "setup_class"
      ]
    ],
    [
      "astropy/time/tests/test_sidereal.py",
      [
        "TestST",
        "setup_class"
      ]
    ],
    [
      "astropy/time/tests/test_sidereal.py",
      [
        "TestModelInterpretation",
        "setup_class"
      ]
    ],
    [
      "astropy/time/tests/test_ut1.py",
      [
        "TestTimeUT1Remote",
        "setup_class"
      ]
    ],
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "TestInit",
        "setup_class"
      ]
    ],
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "TestDistributionStatistics",
        "setup_class"
      ]
    ],
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantitySubclassAboveAndBelow",
        "setup_class"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "StructuredTestBase",
        "setup_class"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "StructuredTestBaseWithUnits",
        "setup_class"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredQuantityFunctions",
        "setup_class"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredSpecificTypeQuantity",
        "setup_class"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredLogUnit",
        "setup_class"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredMaskedQuantity",
        "setup_class"
      ]
    ],
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestPVUfuncs",
        "setup_class"
      ]
    ],
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestEraStructUfuncs",
        "setup_class"
      ]
    ],
    [
      "astropy/utils/iers/tests/test_iers.py",
      [
        "TestIERS_Auto",
        "setup_class"
      ]
    ],
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestRemoteURLs",
        "setup_class"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_containers.py",
      [
        "TestRepresentations",
        "setup_class"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_containers.py",
      [
        "TestSkyCoord",
        "setup_class"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_containers.py",
      [
        "TestTime",
        "setup_class"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestIndicesFrom",
        "setup_class"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestRealImag",
        "setup_class"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestSplit",
        "setup_class"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestUfuncLikeTests",
        "setup_class"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestPartitionLikeFunctions",
        "setup_class"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestSpaceFunctions",
        "setup_class"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestStringFunctions",
        "setup_class"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestBitFunctions",
        "setup_class"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestDatetimeFunctions",
        "setup_class"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestNaNFunctions",
        "setup_class"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "ArraySetup",
        "setup_class"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "QuantitySetup",
        "setup_class"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "LongitudeSetup",
        "setup_class"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedClassCreation",
        "setup_class"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedNDArraySubclassCreation",
        "setup_class"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "MaskedArraySetup",
        "setup_class"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayItems",
        "setup_class"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedRecarray",
        "setup_class"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_table.py",
      [
        "MaskedArrayTableSetup",
        "setup_class"
      ]
    ],
    [
      "astropy/visualization/scripts/tests/test_fits2bitmap.py",
      [
        "TestFits2Bitmap",
        "setup_class"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "BaseImageTests",
        "setup_class"
      ]
    ]
  ],
  "test_alias_read": [
    [
      "astropy/config/tests/test_configs.py",
      [
        "TestAliasRead",
        "test_alias_read"
      ]
    ]
  ],
  "teardown_class": [
    [
      "astropy/config/tests/test_configs.py",
      [
        "TestAliasRead",
        "teardown_class"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "TestFLRW",
        "teardown_class"
      ]
    ],
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "TestCosmology",
        "teardown_class"
      ]
    ],
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "TestParameter",
        "teardown_class"
      ]
    ],
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestMultipleHDU",
        "teardown_class"
      ]
    ],
    [
      "astropy/time/tests/test_corrs.py",
      [
        "TestHelioBaryCentric",
        "teardown_class"
      ]
    ],
    [
      "astropy/time/tests/test_sidereal.py",
      [
        "TestST",
        "teardown_class"
      ]
    ],
    [
      "astropy/time/tests/test_sidereal.py",
      [
        "TestModelInterpretation",
        "teardown_class"
      ]
    ],
    [
      "astropy/time/tests/test_ut1.py",
      [
        "TestTimeUT1Remote",
        "teardown_class"
      ]
    ],
    [
      "astropy/units/tests/test_aliases.py",
      [
        "TestAliases",
        "teardown_class"
      ]
    ],
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestRemoteURLs",
        "teardown_class"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedClassCreation",
        "teardown_class"
      ]
    ]
  ],
  "test_configitem_unicode": [
    [
      "astropy/config/tests/test_configs.py",
      [
        "test_configitem_unicode"
      ]
    ]
  ],
  "test_warning_move_to_top_level": [
    [
      "astropy/config/tests/test_configs.py",
      [
        "test_warning_move_to_top_level"
      ]
    ]
  ],
  "test_no_home": [
    [
      "astropy/config/tests/test_configs.py",
      [
        "test_no_home"
      ]
    ]
  ],
  "ignore_matplotlibrc": [
    [
      "astropy/conftest.py",
      [
        "ignore_matplotlibrc"
      ]
    ]
  ],
  "fast_thread_switching": [
    [
      "astropy/conftest.py",
      [
        "fast_thread_switching"
      ]
    ]
  ],
  "pytest_configure": [
    [
      "astropy/conftest.py",
      [
        "pytest_configure"
      ]
    ],
    [
      "conftest.py",
      [
        "pytest_configure"
      ]
    ]
  ],
  "pytest_unconfigure": [
    [
      "astropy/conftest.py",
      [
        "pytest_unconfigure"
      ]
    ]
  ],
  "pytest_terminal_summary": [
    [
      "astropy/conftest.py",
      [
        "pytest_terminal_summary"
      ]
    ]
  ],
  "__new__": [
    [
      "astropy/constants/codata2010.py",
      [
        "CODATA2010",
        "__new__"
      ]
    ],
    [
      "astropy/constants/constant.py",
      [
        "ConstantMeta",
        "__new__"
      ]
    ],
    [
      "astropy/constants/constant.py",
      [
        "Constant",
        "__new__"
      ]
    ],
    [
      "astropy/coordinates/angles.py",
      [
        "Angle",
        "__new__"
      ]
    ],
    [
      "astropy/coordinates/angles.py",
      [
        "Latitude",
        "__new__"
      ]
    ],
    [
      "astropy/coordinates/angles.py",
      [
        "Longitude",
        "__new__"
      ]
    ],
    [
      "astropy/coordinates/baseframe.py",
      [
        "RepresentationMapping",
        "__new__"
      ]
    ],
    [
      "astropy/coordinates/builtin_frames/skyoffset.py",
      [
        "SkyOffsetFrame",
        "__new__"
      ]
    ],
    [
      "astropy/coordinates/distances.py",
      [
        "Distance",
        "__new__"
      ]
    ],
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocation",
        "__new__"
      ]
    ],
    [
      "astropy/coordinates/spectral_coordinate.py",
      [
        "SpectralCoord",
        "__new__"
      ]
    ],
    [
      "astropy/coordinates/spectral_quantity.py",
      [
        "SpectralQuantity",
        "__new__"
      ]
    ],
    [
      "astropy/coordinates/tests/test_unit_representation.py",
      [
        "test_unit_representation_subclass",
        "Longitude180",
        "__new__"
      ]
    ],
    [
      "astropy/io/ascii/html.py",
      [
        "SoupString",
        "__new__"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "_ColumnFormat",
        "__new__"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "_AsciiColumnFormat",
        "__new__"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "_FormatX",
        "__new__"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "_FormatP",
        "__new__"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "ColDefs",
        "__new__"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "_VLF",
        "__new__"
      ]
    ],
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "__new__"
      ]
    ],
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHeader",
        "__new__"
      ]
    ],
    [
      "astropy/io/fits/hdu/groups.py",
      [
        "GroupData",
        "__new__"
      ]
    ],
    [
      "astropy/io/misc/asdf/types.py",
      [
        "AstropyTypeMeta",
        "__new__"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "_SelectorArgument",
        "__new__"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "_SelectorArguments",
        "__new__"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "_ModelMeta",
        "__new__"
      ]
    ],
    [
      "astropy/modeling/fitting.py",
      [
        "_FitterMeta",
        "__new__"
      ]
    ],
    [
      "astropy/modeling/projections.py",
      [
        "Pix2SkyProjection",
        "__new__"
      ]
    ],
    [
      "astropy/modeling/projections.py",
      [
        "Sky2PixProjection",
        "__new__"
      ]
    ],
    [
      "astropy/nddata/bitmask.py",
      [
        "BitFlag",
        "__new__"
      ]
    ],
    [
      "astropy/nddata/bitmask.py",
      [
        "BitFlagNameMeta",
        "__new__"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "FalseArray",
        "__new__"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "__new__"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "Column",
        "__new__"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "MaskedColumn",
        "__new__"
      ]
    ],
    [
      "astropy/table/ndarray_mixin.py",
      [
        "NdarrayMixin",
        "__new__"
      ]
    ],
    [
      "astropy/table/tests/test_masked.py",
      [
        "test_mask_slicing_count_array_finalize",
        "MyMaskedColumn",
        "__new__"
      ]
    ],
    [
      "astropy/tests/runner.py",
      [
        "TestRunnerBase",
        "__new__"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "Time",
        "__new__"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeDelta",
        "__new__"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeAstropyTime",
        "__new__"
      ]
    ],
    [
      "astropy/uncertainty/core.py",
      [
        "Distribution",
        "__new__"
      ]
    ],
    [
      "astropy/units/format/base.py",
      [
        "Base",
        "__new__"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionQuantity",
        "__new__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__new__"
      ]
    ],
    [
      "astropy/units/structured.py",
      [
        "StructuredUnit",
        "__new__"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "CoverageMeta",
        "__new__"
      ]
    ],
    [
      "astropy/utils/data_info.py",
      [
        "DataInfoMeta",
        "__new__"
      ]
    ],
    [
      "astropy/utils/decorators.py",
      [
        "classproperty",
        "__new__"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "Masked",
        "__new__"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "__new__"
      ]
    ],
    [
      "astropy/utils/metadata.py",
      [
        "MergeStrategyMeta",
        "__new__"
      ]
    ],
    [
      "astropy/utils/tests/test_console.py",
      [
        "FakeTTY",
        "__new__"
      ]
    ],
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_deprecated_class_with_new_method",
        "A",
        "__new__"
      ]
    ],
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_deprecated_class_with_new_method",
        "B",
        "__new__"
      ]
    ]
  ],
  "wrapper": [
    [
      "astropy/constants/constant.py",
      [
        "ConstantMeta",
        "__new__",
        "wrap",
        "wrapper"
      ]
    ],
    [
      "astropy/cosmology/utils.py",
      [
        "vectorize_redshift_method",
        "wrapper"
      ]
    ],
    [
      "astropy/modeling/fitting.py",
      [
        "fitter_unit_support",
        "wrapper"
      ]
    ],
    [
      "astropy/nddata/decorators.py",
      [
        "support_nddata",
        "support_nddata_decorator",
        "wrapper"
      ]
    ],
    [
      "astropy/units/decorators.py",
      [
        "QuantityInput",
        "__call__",
        "wrapper"
      ]
    ],
    [
      "astropy/utils/decorators.py",
      [
        "deprecated_renamed_argument",
        "decorator",
        "wrapper"
      ]
    ]
  ],
  "wrap": [
    [
      "astropy/constants/constant.py",
      [
        "ConstantMeta",
        "__new__",
        "wrap"
      ]
    ]
  ],
  "__quantity_subclass__": [
    [
      "astropy/constants/constant.py",
      [
        "Constant",
        "__quantity_subclass__"
      ]
    ],
    [
      "astropy/coordinates/spectral_quantity.py",
      [
        "SpectralQuantity",
        "__quantity_subclass__"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionQuantity",
        "__quantity_subclass__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__quantity_subclass__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "SpecificTypeQuantity",
        "__quantity_subclass__"
      ]
    ]
  ],
  "copy": [
    [
      "astropy/constants/constant.py",
      [
        "Constant",
        "copy"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "Column",
        "copy"
      ]
    ],
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "copy"
      ]
    ],
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_ValidHDU",
        "copy"
      ]
    ],
    [
      "astropy/io/fits/hdu/table.py",
      [
        "_TableBaseHDU",
        "copy"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "copy"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "_Interval",
        "copy"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "ModelBoundingBox",
        "copy"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "CompoundBoundingBox",
        "copy"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "copy"
      ]
    ],
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "copy"
      ]
    ],
    [
      "astropy/nddata/ccddata.py",
      [
        "CCDData",
        "copy"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "copy"
      ]
    ],
    [
      "astropy/table/mixins/dask.py",
      [
        "DaskColumn",
        "copy"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "copy"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "copy"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "QuantityIterator",
        "copy"
      ]
    ],
    [
      "astropy/utils/shapes.py",
      [
        "NDArrayShapeMethods",
        "copy"
      ]
    ],
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "copy"
      ]
    ]
  ],
  "abbrev": [
    [
      "astropy/constants/constant.py",
      [
        "Constant",
        "abbrev"
      ]
    ]
  ],
  "name": [
    [
      "astropy/constants/constant.py",
      [
        "Constant",
        "name"
      ]
    ],
    [
      "astropy/cosmology/core.py",
      [
        "Cosmology",
        "name"
      ]
    ],
    [
      "astropy/cosmology/parameter.py",
      [
        "Parameter",
        "name"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "Column",
        "name"
      ]
    ],
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "name"
      ]
    ],
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHDU",
        "name"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "_NameProperty",
        "name"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Info",
        "name"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "_SelectorArgument",
        "name"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "_ModelMeta",
        "name"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "name"
      ]
    ],
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "name"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "name"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "name"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "NamedUnit",
        "name"
      ]
    ],
    [
      "astropy/utils/data_info.py",
      [
        "MixinInfo",
        "name"
      ]
    ]
  ],
  "_unit": [
    [
      "astropy/constants/constant.py",
      [
        "Constant",
        "_unit"
      ]
    ]
  ],
  "uncertainty": [
    [
      "astropy/constants/constant.py",
      [
        "Constant",
        "uncertainty"
      ]
    ],
    [
      "astropy/nddata/ccddata.py",
      [
        "CCDData",
        "uncertainty"
      ]
    ],
    [
      "astropy/nddata/compat.py",
      [
        "NDDataArray",
        "uncertainty"
      ]
    ],
    [
      "astropy/nddata/nddata.py",
      [
        "NDData",
        "uncertainty"
      ]
    ],
    [
      "astropy/nddata/nddata_base.py",
      [
        "NDDataBase",
        "uncertainty"
      ]
    ],
    [
      "astropy/nddata/tests/test_nddata_base.py",
      [
        "MinimalSubclass",
        "uncertainty"
      ]
    ]
  ],
  "reference": [
    [
      "astropy/constants/constant.py",
      [
        "Constant",
        "reference"
      ]
    ]
  ],
  "system": [
    [
      "astropy/constants/constant.py",
      [
        "Constant",
        "system"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "CooSys",
        "system"
      ]
    ]
  ],
  "_instance_or_super": [
    [
      "astropy/constants/constant.py",
      [
        "Constant",
        "_instance_or_super"
      ]
    ]
  ],
  "si": [
    [
      "astropy/constants/constant.py",
      [
        "Constant",
        "si"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "si"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "si"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionQuantity",
        "si"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "si"
      ]
    ],
    [
      "astropy/units/structured.py",
      [
        "StructuredUnit",
        "si"
      ]
    ]
  ],
  "cgs": [
    [
      "astropy/constants/constant.py",
      [
        "Constant",
        "cgs"
      ]
    ],
    [
      "astropy/constants/constant.py",
      [
        "EMConstant",
        "cgs"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "cgs"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "cgs"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionQuantity",
        "cgs"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "cgs"
      ]
    ],
    [
      "astropy/units/structured.py",
      [
        "StructuredUnit",
        "cgs"
      ]
    ]
  ],
  "__array_finalize__": [
    [
      "astropy/constants/constant.py",
      [
        "Constant",
        "__array_finalize__"
      ]
    ],
    [
      "astropy/coordinates/angles.py",
      [
        "Longitude",
        "__array_finalize__"
      ]
    ],
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocation",
        "__array_finalize__"
      ]
    ],
    [
      "astropy/coordinates/spectral_coordinate.py",
      [
        "SpectralCoord",
        "__array_finalize__"
      ]
    ],
    [
      "astropy/coordinates/spectral_quantity.py",
      [
        "SpectralQuantity",
        "__array_finalize__"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "_VLF",
        "__array_finalize__"
      ]
    ],
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "__array_finalize__"
      ]
    ],
    [
      "astropy/io/fits/hdu/groups.py",
      [
        "GroupData",
        "__array_finalize__"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "__array_finalize__"
      ]
    ],
    [
      "astropy/table/ndarray_mixin.py",
      [
        "NdarrayMixin",
        "__array_finalize__"
      ]
    ],
    [
      "astropy/table/tests/test_masked.py",
      [
        "test_mask_slicing_count_array_finalize",
        "MyBaseColumn",
        "__array_finalize__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__array_finalize__"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "__array_finalize__"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedRecarray",
        "__array_finalize__"
      ]
    ]
  ],
  "test_c": [
    [
      "astropy/constants/tests/test_constant.py",
      [
        "test_c"
      ]
    ],
    [
      "astropy/constants/tests/test_prior_version.py",
      [
        "test_c"
      ]
    ],
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_c"
      ]
    ]
  ],
  "test_h": [
    [
      "astropy/constants/tests/test_constant.py",
      [
        "test_h"
      ]
    ],
    [
      "astropy/constants/tests/test_prior_version.py",
      [
        "test_h"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "TestFLRW",
        "test_h"
      ]
    ]
  ],
  "test_e": [
    [
      "astropy/constants/tests/test_constant.py",
      [
        "test_e"
      ]
    ],
    [
      "astropy/constants/tests/test_prior_version.py",
      [
        "test_e"
      ]
    ]
  ],
  "test_g0": [
    [
      "astropy/constants/tests/test_constant.py",
      [
        "test_g0"
      ]
    ],
    [
      "astropy/constants/tests/test_prior_version.py",
      [
        "test_g0"
      ]
    ]
  ],
  "test_b_wien": [
    [
      "astropy/constants/tests/test_constant.py",
      [
        "test_b_wien"
      ]
    ],
    [
      "astropy/constants/tests/test_prior_version.py",
      [
        "test_b_wien"
      ]
    ]
  ],
  "test_unit": [
    [
      "astropy/constants/tests/test_constant.py",
      [
        "test_unit"
      ]
    ],
    [
      "astropy/constants/tests/test_prior_version.py",
      [
        "test_unit"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/unit/tests/test_unit.py",
      [
        "test_unit"
      ]
    ],
    [
      "astropy/io/misc/tests/test_yaml.py",
      [
        "test_unit"
      ]
    ],
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_unit"
      ]
    ]
  ],
  "test_copy": [
    [
      "astropy/constants/tests/test_constant.py",
      [
        "test_copy"
      ]
    ],
    [
      "astropy/constants/tests/test_prior_version.py",
      [
        "test_copy"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation_methods.py",
      [
        "TestManipulation",
        "test_copy"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_Interval",
        "test_copy"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestModelBoundingBox",
        "test_copy"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestCompoundBoundingBox",
        "test_copy"
      ]
    ],
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_copy"
      ]
    ],
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_copy"
      ]
    ],
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "TestCutout2D",
        "test_copy"
      ]
    ],
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestColumnsShowHide",
        "test_copy"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "test_copy"
      ]
    ],
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestCopyReplicate",
        "test_copy"
      ]
    ],
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityCreation",
        "test_copy"
      ]
    ],
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_copy"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestCopyAndCreation",
        "test_copy"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitsCopyPickle",
        "test_copy"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestCopyAndCreation",
        "test_copy"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayCopyFilled",
        "test_copy"
      ]
    ]
  ],
  "test_view": [
    [
      "astropy/constants/tests/test_constant.py",
      [
        "test_view"
      ]
    ],
    [
      "astropy/constants/tests/test_prior_version.py",
      [
        "test_view"
      ]
    ],
    [
      "astropy/nddata/tests/test_blocks.py",
      [
        "TestReshapeAsBlocks",
        "test_view"
      ]
    ],
    [
      "astropy/table/tests/test_column.py",
      [
        "TestColumn",
        "test_view"
      ]
    ],
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestSpecificTypeQuantity",
        "test_view"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestArrayConversion",
        "test_view"
      ]
    ]
  ],
  "test_new_constant": [
    [
      "astropy/constants/tests/test_pickle.py",
      [
        "test_new_constant"
      ]
    ]
  ],
  "test_pc": [
    [
      "astropy/constants/tests/test_prior_version.py",
      [
        "test_pc"
      ]
    ],
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_pc"
      ]
    ]
  ],
  "test_masses": [
    [
      "astropy/constants/tests/test_prior_version.py",
      [
        "test_masses"
      ]
    ]
  ],
  "test_version_match": [
    [
      "astropy/constants/tests/test_sciencestate.py",
      [
        "test_version_match"
      ]
    ]
  ],
  "test_previously_imported": [
    [
      "astropy/constants/tests/test_sciencestate.py",
      [
        "test_previously_imported"
      ]
    ]
  ],
  "_get_c": [
    [
      "astropy/constants/utils.py",
      [
        "_get_c"
      ]
    ]
  ],
  "_set_c": [
    [
      "astropy/constants/utils.py",
      [
        "_set_c"
      ]
    ]
  ],
  "_next_fast_lengths": [
    [
      "astropy/convolution/convolve.py",
      [
        "_next_fast_lengths"
      ]
    ]
  ],
  "_copy_input_if_needed": [
    [
      "astropy/convolution/convolve.py",
      [
        "_copy_input_if_needed"
      ]
    ]
  ],
  "convolve": [
    [
      "astropy/convolution/convolve.py",
      [
        "convolve"
      ]
    ]
  ],
  "convolve_fft": [
    [
      "astropy/convolution/convolve.py",
      [
        "convolve_fft"
      ]
    ]
  ],
  "interpolate_replace_nans": [
    [
      "astropy/convolution/convolve.py",
      [
        "interpolate_replace_nans"
      ]
    ]
  ],
  "convolve_models": [
    [
      "astropy/convolution/convolve.py",
      [
        "convolve_models"
      ]
    ]
  ],
  "convolve_models_fft": [
    [
      "astropy/convolution/convolve.py",
      [
        "convolve_models_fft"
      ]
    ]
  ],
  "truncation": [
    [
      "astropy/convolution/core.py",
      [
        "Kernel",
        "truncation"
      ]
    ]
  ],
  "is_bool": [
    [
      "astropy/convolution/core.py",
      [
        "Kernel",
        "is_bool"
      ]
    ]
  ],
  "model": [
    [
      "astropy/convolution/core.py",
      [
        "Kernel",
        "model"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "_BoundingDomain",
        "model"
      ]
    ],
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "model"
      ]
    ],
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_custom_model_n_outputs",
        "model"
      ]
    ],
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_custom_model_settable_parameters",
        "model"
      ]
    ],
    [
      "astropy/timeseries/periodograms/bls/core.py",
      [
        "BoxLeastSquares",
        "model"
      ]
    ],
    [
      "astropy/timeseries/periodograms/lombscargle/core.py",
      [
        "LombScargle",
        "model"
      ]
    ]
  ],
  "dimension": [
    [
      "astropy/convolution/core.py",
      [
        "Kernel",
        "dimension"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "ModelBoundingBox",
        "dimension"
      ]
    ]
  ],
  "center": [
    [
      "astropy/convolution/core.py",
      [
        "Kernel",
        "center"
      ]
    ]
  ],
  "normalize": [
    [
      "astropy/convolution/core.py",
      [
        "Kernel",
        "normalize"
      ]
    ]
  ],
  "shape": [
    [
      "astropy/convolution/core.py",
      [
        "Kernel",
        "shape"
      ]
    ],
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "shape"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferential",
        "shape"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentation",
        "shape"
      ]
    ],
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "shape"
      ]
    ],
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHDU",
        "shape"
      ]
    ],
    [
      "astropy/io/fits/hdu/image.py",
      [
        "_ImageBaseHDU",
        "shape"
      ]
    ],
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "shape"
      ]
    ],
    [
      "astropy/nddata/compat.py",
      [
        "NDDataArray",
        "shape"
      ]
    ],
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "FakeNumpyArray",
        "shape"
      ]
    ],
    [
      "astropy/table/table_helpers.py",
      [
        "ArrayWrapper",
        "shape"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "shape"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "shape"
      ]
    ],
    [
      "astropy/utils/shapes.py",
      [
        "ShapedLikeNDArray",
        "shape"
      ]
    ]
  ],
  "separable": [
    [
      "astropy/convolution/core.py",
      [
        "Kernel",
        "separable"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "separable"
      ]
    ]
  ],
  "array": [
    [
      "astropy/convolution/core.py",
      [
        "Kernel",
        "array"
      ]
    ],
    [
      "astropy/convolution/kernels.py",
      [
        "CustomKernel",
        "array"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "Column",
        "array"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "NDUncertainty",
        "array"
      ]
    ],
    [
      "astropy/table/tests/test_array.py",
      [
        "array"
      ]
    ]
  ],
  "__add__": [
    [
      "astropy/convolution/core.py",
      [
        "Kernel",
        "__add__"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferential",
        "__add__"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "ColDefs",
        "__add__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "__add__"
      ]
    ],
    [
      "astropy/nddata/bitmask.py",
      [
        "BitFlagNameMeta",
        "__add__"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "Time",
        "__add__"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeDelta",
        "__add__"
      ]
    ],
    [
      "astropy/units/equivalencies.py",
      [
        "Equivalency",
        "__add__"
      ]
    ],
    [
      "astropy/units/function/logarithmic.py",
      [
        "LogUnit",
        "__add__"
      ]
    ],
    [
      "astropy/units/function/logarithmic.py",
      [
        "LogQuantity",
        "__add__"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "BaseStretch",
        "__add__"
      ]
    ],
    [
      "astropy/visualization/transform.py",
      [
        "BaseTransform",
        "__add__"
      ]
    ]
  ],
  "__sub__": [
    [
      "astropy/convolution/core.py",
      [
        "Kernel",
        "__sub__"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferential",
        "__sub__"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseDifferential",
        "__sub__"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "ColDefs",
        "__sub__"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "Time",
        "__sub__"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeDelta",
        "__sub__"
      ]
    ],
    [
      "astropy/units/function/logarithmic.py",
      [
        "LogUnit",
        "__sub__"
      ]
    ],
    [
      "astropy/units/function/logarithmic.py",
      [
        "LogQuantity",
        "__sub__"
      ]
    ]
  ],
  "__mul__": [
    [
      "astropy/convolution/core.py",
      [
        "Kernel",
        "__mul__"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferential",
        "__mul__"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "RadialRepresentation",
        "__mul__"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeDelta",
        "__mul__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "__mul__"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "__mul__"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionQuantity",
        "__mul__"
      ]
    ],
    [
      "astropy/units/function/logarithmic.py",
      [
        "LogQuantity",
        "__mul__"
      ]
    ],
    [
      "astropy/units/physical.py",
      [
        "PhysicalType",
        "__mul__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__mul__"
      ]
    ],
    [
      "astropy/units/structured.py",
      [
        "StructuredUnit",
        "__mul__"
      ]
    ]
  ],
  "__rmul__": [
    [
      "astropy/convolution/core.py",
      [
        "Kernel",
        "__rmul__"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferential",
        "__rmul__"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeDelta",
        "__rmul__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "__rmul__"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "__rmul__"
      ]
    ],
    [
      "astropy/units/function/logarithmic.py",
      [
        "LogQuantity",
        "__rmul__"
      ]
    ],
    [
      "astropy/units/physical.py",
      [
        "PhysicalType",
        "__rmul__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__rmul__"
      ]
    ],
    [
      "astropy/units/structured.py",
      [
        "StructuredUnit",
        "__rmul__"
      ]
    ]
  ],
  "__array__": [
    [
      "astropy/convolution/core.py",
      [
        "Kernel",
        "__array__"
      ]
    ],
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "__array__"
      ]
    ],
    [
      "astropy/nddata/compat.py",
      [
        "NDDataArray",
        "__array__"
      ]
    ],
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "FakeNumpyArray",
        "__array__"
      ]
    ],
    [
      "astropy/table/row.py",
      [
        "Row",
        "__array__"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "__array__"
      ]
    ],
    [
      "astropy/units/tests/test_quantity.py",
      [
        "QuantityMimic",
        "__array__"
      ]
    ]
  ],
  "__array_wrap__": [
    [
      "astropy/convolution/core.py",
      [
        "Kernel",
        "__array_wrap__"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "__array_wrap__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__array_wrap__"
      ]
    ]
  ],
  "kernel_arithmetics": [
    [
      "astropy/convolution/core.py",
      [
        "kernel_arithmetics"
      ]
    ]
  ],
  "_round_up_to_odd_integer": [
    [
      "astropy/convolution/kernels.py",
      [
        "_round_up_to_odd_integer"
      ]
    ]
  ],
  "array_1": [
    [
      "astropy/convolution/kernels.py",
      [
        "CustomKernel",
        "array_1"
      ]
    ]
  ],
  "get_extensions": [
    [
      "astropy/convolution/setup_package.py",
      [
        "get_extensions"
      ]
    ],
    [
      "astropy/io/ascii/setup_package.py",
      [
        "get_extensions"
      ]
    ],
    [
      "astropy/io/fits/setup_package.py",
      [
        "get_extensions"
      ]
    ],
    [
      "astropy/io/votable/setup_package.py",
      [
        "get_extensions"
      ]
    ],
    [
      "astropy/stats/setup_package.py",
      [
        "get_extensions"
      ]
    ],
    [
      "astropy/table/setup_package.py",
      [
        "get_extensions"
      ]
    ],
    [
      "astropy/time/setup_package.py",
      [
        "get_extensions"
      ]
    ],
    [
      "astropy/timeseries/periodograms/bls/setup_package.py",
      [
        "get_extensions"
      ]
    ],
    [
      "astropy/utils/setup_package.py",
      [
        "get_extensions"
      ]
    ],
    [
      "astropy/utils/xml/setup_package.py",
      [
        "get_extensions"
      ]
    ],
    [
      "astropy/wcs/setup_package.py",
      [
        "get_extensions"
      ]
    ]
  ],
  "test_list": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve1D",
        "test_list"
      ]
    ],
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve2D",
        "test_list"
      ]
    ],
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve3D",
        "test_list"
      ]
    ]
  ],
  "test_tuple": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve1D",
        "test_tuple"
      ]
    ]
  ],
  "test_quantity": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve1D",
        "test_quantity"
      ]
    ],
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "TestConvolve1D",
        "test_quantity"
      ]
    ],
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_quantity"
      ]
    ],
    [
      "astropy/nddata/tests/test_nduncertainty.py",
      [
        "test_quantity"
      ]
    ]
  ],
  "test_input_unmodified": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve1D",
        "test_input_unmodified"
      ]
    ],
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "test_input_unmodified"
      ]
    ]
  ],
  "test_input_unmodified_with_nan": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve1D",
        "test_input_unmodified_with_nan"
      ]
    ],
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "test_input_unmodified_with_nan"
      ]
    ]
  ],
  "test_dtype": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve1D",
        "test_dtype"
      ]
    ],
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve2D",
        "test_dtype"
      ]
    ],
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve3D",
        "test_dtype"
      ]
    ]
  ],
  "test_unity_1_none": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve1D",
        "test_unity_1_none"
      ]
    ],
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "TestConvolve1D",
        "test_unity_1_none"
      ]
    ]
  ],
  "test_unity_3": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve1D",
        "test_unity_3"
      ]
    ],
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "TestConvolve1D",
        "test_unity_3"
      ]
    ]
  ],
  "test_uniform_3": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve1D",
        "test_uniform_3"
      ]
    ],
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "TestConvolve1D",
        "test_uniform_3"
      ]
    ]
  ],
  "test_unity_3_withnan": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve1D",
        "test_unity_3_withnan"
      ]
    ],
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "TestConvolve1D",
        "test_unity_3_withnan"
      ]
    ]
  ],
  "test_uniform_3_withnan": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve1D",
        "test_uniform_3_withnan"
      ]
    ],
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "TestConvolve1D",
        "test_uniform_3_withnan"
      ]
    ]
  ],
  "test_zero_sum_kernel": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve1D",
        "test_zero_sum_kernel"
      ]
    ]
  ],
  "test_int_masked_kernel": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve1D",
        "test_int_masked_kernel"
      ]
    ]
  ],
  "test_int_masked_array": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve1D",
        "test_int_masked_array"
      ]
    ]
  ],
  "test_unity_1x1_none": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve2D",
        "test_unity_1x1_none"
      ]
    ],
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "TestConvolve2D",
        "test_unity_1x1_none"
      ]
    ]
  ],
  "test_unity_3x3": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve2D",
        "test_unity_3x3"
      ]
    ],
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "TestConvolve2D",
        "test_unity_3x3"
      ]
    ]
  ],
  "test_uniform_3x3": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve2D",
        "test_uniform_3x3"
      ]
    ],
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "TestConvolve2D",
        "test_uniform_3x3"
      ]
    ]
  ],
  "test_unity_3x3_withnan": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve2D",
        "test_unity_3x3_withnan"
      ]
    ],
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "TestConvolve2D",
        "test_unity_3x3_withnan"
      ]
    ]
  ],
  "test_uniform_3x3_withnanfilled": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve2D",
        "test_uniform_3x3_withnanfilled"
      ]
    ]
  ],
  "test_uniform_3x3_withnaninterped": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve2D",
        "test_uniform_3x3_withnaninterped"
      ]
    ]
  ],
  "test_non_normalized_kernel_2D": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve2D",
        "test_non_normalized_kernel_2D"
      ]
    ]
  ],
  "test_unity_1x1x1_none": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve3D",
        "test_unity_1x1x1_none"
      ]
    ]
  ],
  "test_unity_3x3x3": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve3D",
        "test_unity_3x3x3"
      ]
    ]
  ],
  "test_uniform_3x3x3": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve3D",
        "test_uniform_3x3x3"
      ]
    ]
  ],
  "test_unity_3x3x3_withnan": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve3D",
        "test_unity_3x3x3_withnan"
      ]
    ]
  ],
  "test_uniform_3x3x3_withnan_filled": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve3D",
        "test_uniform_3x3x3_withnan_filled"
      ]
    ]
  ],
  "test_uniform_3x3x3_withnan_interped": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "TestConvolve3D",
        "test_uniform_3x3x3_withnan_interped"
      ]
    ]
  ],
  "test_asymmetric_kernel": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "test_asymmetric_kernel"
      ]
    ],
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "test_asymmetric_kernel"
      ]
    ]
  ],
  "test_convolution_consistency": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "test_convolution_consistency"
      ]
    ]
  ],
  "test_astropy_convolution_against_numpy": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "test_astropy_convolution_against_numpy"
      ]
    ]
  ],
  "test_astropy_convolution_against_scipy": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "test_astropy_convolution_against_scipy"
      ]
    ]
  ],
  "test_regression_6099": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "test_regression_6099"
      ]
    ]
  ],
  "test_invalid_array_convolve": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "test_invalid_array_convolve"
      ]
    ]
  ],
  "test_non_square_kernel_asymmetric": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "test_non_square_kernel_asymmetric"
      ]
    ]
  ],
  "test_uninterpolated_nan_regions": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "test_uninterpolated_nan_regions"
      ]
    ]
  ],
  "test_regressiontest_issue9168": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "test_regressiontest_issue9168"
      ]
    ]
  ],
  "test_convolve_nan_zero_sum_kernel": [
    [
      "astropy/convolution/tests/test_convolve.py",
      [
        "test_convolve_nan_zero_sum_kernel"
      ]
    ]
  ],
  "expected_boundary_warning": [
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "expected_boundary_warning"
      ]
    ]
  ],
  "expected_dealias_error": [
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "expected_dealias_error"
      ]
    ]
  ],
  "assert_floatclose": [
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "assert_floatclose"
      ]
    ]
  ],
  "test_halfity_3": [
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "TestConvolve1D",
        "test_halfity_3"
      ]
    ]
  ],
  "test_unity_1_withnan": [
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "TestConvolve1D",
        "test_unity_1_withnan"
      ]
    ]
  ],
  "test_nan_interpolate": [
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "TestConvolve1D",
        "test_nan_interpolate"
      ]
    ]
  ],
  "test_nan_fill": [
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "TestConvolve1D",
        "test_nan_fill"
      ]
    ]
  ],
  "test_nan_fill_two": [
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "TestConvolve1D",
        "test_nan_fill_two"
      ]
    ]
  ],
  "test_masked_array": [
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "TestConvolve1D",
        "test_masked_array"
      ]
    ]
  ],
  "test_normalize_function": [
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "TestConvolve1D",
        "test_normalize_function"
      ]
    ]
  ],
  "test_normalization_is_respected": [
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "TestConvolve1D",
        "test_normalization_is_respected"
      ]
    ]
  ],
  "test_uniform_3x3_withnan": [
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "TestConvolve2D",
        "test_uniform_3x3_withnan"
      ]
    ]
  ],
  "test_big_fail": [
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "TestConvolve2D",
        "test_big_fail"
      ]
    ]
  ],
  "test_padding": [
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "TestConvolve2D",
        "test_padding"
      ]
    ]
  ],
  "test_non_normalized_kernel": [
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "TestConvolve2D",
        "test_non_normalized_kernel"
      ]
    ]
  ],
  "test_convolve_fft_boundary_wrap_error": [
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "test_convolve_fft_boundary_wrap_error"
      ]
    ]
  ],
  "test_convolve_fft_boundary_extend_error": [
    [
      "astropy/convolution/tests/test_convolve_fft.py",
      [
        "test_convolve_fft_boundary_extend_error"
      ]
    ]
  ],
  "test_centered_makekernel": [
    [
      "astropy/convolution/tests/test_convolve_kernels.py",
      [
        "Test2DConvolutions",
        "test_centered_makekernel"
      ]
    ]
  ],
  "test_random_makekernel": [
    [
      "astropy/convolution/tests/test_convolve_kernels.py",
      [
        "Test2DConvolutions",
        "test_random_makekernel"
      ]
    ]
  ],
  "test_uniform_smallkernel": [
    [
      "astropy/convolution/tests/test_convolve_kernels.py",
      [
        "Test2DConvolutions",
        "test_uniform_smallkernel"
      ]
    ],
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_uniform_smallkernel"
      ]
    ]
  ],
  "test_smallkernel_Box2DKernel": [
    [
      "astropy/convolution/tests/test_convolve_kernels.py",
      [
        "Test2DConvolutions",
        "test_smallkernel_Box2DKernel"
      ]
    ]
  ],
  "test_gaussian_2d_kernel_quantity": [
    [
      "astropy/convolution/tests/test_convolve_kernels.py",
      [
        "test_gaussian_2d_kernel_quantity"
      ]
    ]
  ],
  "test_deprecated_hat": [
    [
      "astropy/convolution/tests/test_convolve_kernels.py",
      [
        "test_deprecated_hat"
      ]
    ]
  ],
  "test_is_consistency_with_astropy_convolution": [
    [
      "astropy/convolution/tests/test_convolve_models.py",
      [
        "TestConvolve1DModels",
        "test_is_consistency_with_astropy_convolution"
      ]
    ]
  ],
  "test_against_scipy": [
    [
      "astropy/convolution/tests/test_convolve_models.py",
      [
        "TestConvolve1DModels",
        "test_against_scipy"
      ]
    ]
  ],
  "test_against_scipy_with_additional_keywords": [
    [
      "astropy/convolution/tests/test_convolve_models.py",
      [
        "TestConvolve1DModels",
        "test_against_scipy_with_additional_keywords"
      ]
    ]
  ],
  "test_sum_of_gaussians": [
    [
      "astropy/convolution/tests/test_convolve_models.py",
      [
        "TestConvolve1DModels",
        "test_sum_of_gaussians"
      ]
    ]
  ],
  "test_convolve_box_models": [
    [
      "astropy/convolution/tests/test_convolve_models.py",
      [
        "TestConvolve1DModels",
        "test_convolve_box_models"
      ]
    ]
  ],
  "test_fitting_convolve_models": [
    [
      "astropy/convolution/tests/test_convolve_models.py",
      [
        "TestConvolve1DModels",
        "test_fitting_convolve_models"
      ]
    ]
  ],
  "test_basic_nddata": [
    [
      "astropy/convolution/tests/test_convolve_nddata.py",
      [
        "test_basic_nddata"
      ]
    ]
  ],
  "test_masked_nddata": [
    [
      "astropy/convolution/tests/test_convolve_nddata.py",
      [
        "test_masked_nddata"
      ]
    ]
  ],
  "test_pixel_sum_1D": [
    [
      "astropy/convolution/tests/test_discretize.py",
      [
        "test_pixel_sum_1D"
      ]
    ]
  ],
  "test_gaussian_eval_1D": [
    [
      "astropy/convolution/tests/test_discretize.py",
      [
        "test_gaussian_eval_1D"
      ]
    ]
  ],
  "test_pixel_sum_2D": [
    [
      "astropy/convolution/tests/test_discretize.py",
      [
        "test_pixel_sum_2D"
      ]
    ]
  ],
  "test_pixel_sum_compound_2D": [
    [
      "astropy/convolution/tests/test_discretize.py",
      [
        "test_pixel_sum_compound_2D"
      ]
    ]
  ],
  "test_gaussian_eval_2D": [
    [
      "astropy/convolution/tests/test_discretize.py",
      [
        "test_gaussian_eval_2D"
      ]
    ]
  ],
  "test_gaussian_eval_2D_integrate_mode": [
    [
      "astropy/convolution/tests/test_discretize.py",
      [
        "test_gaussian_eval_2D_integrate_mode"
      ]
    ]
  ],
  "test_subpixel_gauss_1D": [
    [
      "astropy/convolution/tests/test_discretize.py",
      [
        "test_subpixel_gauss_1D"
      ]
    ]
  ],
  "test_subpixel_gauss_2D": [
    [
      "astropy/convolution/tests/test_discretize.py",
      [
        "test_subpixel_gauss_2D"
      ]
    ]
  ],
  "test_discretize_callable_1d": [
    [
      "astropy/convolution/tests/test_discretize.py",
      [
        "test_discretize_callable_1d"
      ]
    ]
  ],
  "test_discretize_callable_2d": [
    [
      "astropy/convolution/tests/test_discretize.py",
      [
        "test_discretize_callable_2d"
      ]
    ]
  ],
  "test_type_exception": [
    [
      "astropy/convolution/tests/test_discretize.py",
      [
        "test_type_exception"
      ]
    ]
  ],
  "test_dim_exception_1d": [
    [
      "astropy/convolution/tests/test_discretize.py",
      [
        "test_dim_exception_1d"
      ]
    ]
  ],
  "test_dim_exception_2d": [
    [
      "astropy/convolution/tests/test_discretize.py",
      [
        "test_dim_exception_2d"
      ]
    ]
  ],
  "test_float_x_range_exception": [
    [
      "astropy/convolution/tests/test_discretize.py",
      [
        "test_float_x_range_exception"
      ]
    ]
  ],
  "test_float_y_range_exception": [
    [
      "astropy/convolution/tests/test_discretize.py",
      [
        "test_float_y_range_exception"
      ]
    ]
  ],
  "test_discretize_oversample": [
    [
      "astropy/convolution/tests/test_discretize.py",
      [
        "test_discretize_oversample"
      ]
    ]
  ],
  "test_scipy_filter_gaussian": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_scipy_filter_gaussian"
      ]
    ]
  ],
  "test_scipy_filter_gaussian_laplace": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_scipy_filter_gaussian_laplace"
      ]
    ]
  ],
  "test_delta_data": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_delta_data"
      ]
    ]
  ],
  "test_random_data": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_random_data"
      ]
    ]
  ],
  "test_smallkernel_vs_Box2DKernel": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_smallkernel_vs_Box2DKernel"
      ]
    ]
  ],
  "test_convolve_1D_kernels": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_convolve_1D_kernels"
      ]
    ]
  ],
  "test_convolve_2D_kernels": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_convolve_2D_kernels"
      ]
    ]
  ],
  "test_multiply_scalar": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_multiply_scalar"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_multiply_scalar"
      ]
    ]
  ],
  "test_multiply_scalar_type": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_multiply_scalar_type"
      ]
    ]
  ],
  "test_rmultiply_scalar_type": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_rmultiply_scalar_type"
      ]
    ]
  ],
  "test_multiply_kernel1d": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_multiply_kernel1d"
      ]
    ]
  ],
  "test_multiply_kernel2d": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_multiply_kernel2d"
      ]
    ]
  ],
  "test_multiply_kernel1d_kernel2d": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_multiply_kernel1d_kernel2d"
      ]
    ]
  ],
  "test_add_kernel_scalar": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_add_kernel_scalar"
      ]
    ]
  ],
  "test_model_1D_kernel": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_model_1D_kernel"
      ]
    ]
  ],
  "test_model_2D_kernel": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_model_2D_kernel"
      ]
    ]
  ],
  "test_custom_1D_kernel": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_custom_1D_kernel"
      ]
    ]
  ],
  "test_custom_2D_kernel": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_custom_2D_kernel"
      ]
    ]
  ],
  "test_custom_1D_kernel_list": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_custom_1D_kernel_list"
      ]
    ]
  ],
  "test_custom_2D_kernel_list": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_custom_2D_kernel_list"
      ]
    ]
  ],
  "test_custom_1D_kernel_zerosum": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_custom_1D_kernel_zerosum"
      ]
    ]
  ],
  "test_custom_2D_kernel_zerosum": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_custom_2D_kernel_zerosum"
      ]
    ]
  ],
  "test_custom_kernel_odd_error": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_custom_kernel_odd_error"
      ]
    ]
  ],
  "test_add_1D_kernels": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_add_1D_kernels"
      ]
    ]
  ],
  "test_add_2D_kernels": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_add_2D_kernels"
      ]
    ]
  ],
  "test_Gaussian1DKernel_even_size": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_Gaussian1DKernel_even_size"
      ]
    ]
  ],
  "test_Gaussian2DKernel_even_size": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_Gaussian2DKernel_even_size"
      ]
    ]
  ],
  "test_Gaussian2DKernel_rotated": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_Gaussian2DKernel_rotated"
      ]
    ]
  ],
  "test_normalize_peak": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_normalize_peak"
      ]
    ]
  ],
  "test_check_kernel_attributes": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_check_kernel_attributes"
      ]
    ]
  ],
  "test_discretize_modes": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_discretize_modes"
      ]
    ]
  ],
  "test_box_kernels_even_size": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_box_kernels_even_size"
      ]
    ]
  ],
  "test_kernel_normalization": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_kernel_normalization"
      ]
    ]
  ],
  "test_kernel_normalization_mode": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_kernel_normalization_mode"
      ]
    ]
  ],
  "test_kernel1d_int_size": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_kernel1d_int_size"
      ]
    ]
  ],
  "test_kernel2d_int_xsize": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_kernel2d_int_xsize"
      ]
    ]
  ],
  "test_kernel2d_int_ysize": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_kernel2d_int_ysize"
      ]
    ]
  ],
  "test_kernel1d_initialization": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_kernel1d_initialization"
      ]
    ]
  ],
  "test_kernel2d_initialization": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_kernel2d_initialization"
      ]
    ]
  ],
  "test_array_keyword_not_allowed": [
    [
      "astropy/convolution/tests/test_kernel_class.py",
      [
        "TestKernels",
        "test_array_keyword_not_allowed"
      ]
    ]
  ],
  "test_simple_object": [
    [
      "astropy/convolution/tests/test_pickle.py",
      [
        "test_simple_object"
      ]
    ],
    [
      "astropy/coordinates/tests/test_pickle.py",
      [
        "test_simple_object"
      ]
    ]
  ],
  "has_even_axis": [
    [
      "astropy/convolution/utils.py",
      [
        "has_even_axis"
      ]
    ]
  ],
  "raise_even_kernel_exception": [
    [
      "astropy/convolution/utils.py",
      [
        "raise_even_kernel_exception"
      ]
    ]
  ],
  "add_kernel_arrays_1D": [
    [
      "astropy/convolution/utils.py",
      [
        "add_kernel_arrays_1D"
      ]
    ]
  ],
  "add_kernel_arrays_2D": [
    [
      "astropy/convolution/utils.py",
      [
        "add_kernel_arrays_2D"
      ]
    ]
  ],
  "discretize_model": [
    [
      "astropy/convolution/utils.py",
      [
        "discretize_model"
      ]
    ]
  ],
  "discretize_center_1D": [
    [
      "astropy/convolution/utils.py",
      [
        "discretize_center_1D"
      ]
    ]
  ],
  "discretize_center_2D": [
    [
      "astropy/convolution/utils.py",
      [
        "discretize_center_2D"
      ]
    ]
  ],
  "discretize_linear_1D": [
    [
      "astropy/convolution/utils.py",
      [
        "discretize_linear_1D"
      ]
    ]
  ],
  "discretize_bilinear_2D": [
    [
      "astropy/convolution/utils.py",
      [
        "discretize_bilinear_2D"
      ]
    ]
  ],
  "discretize_oversample_1D": [
    [
      "astropy/convolution/utils.py",
      [
        "discretize_oversample_1D"
      ]
    ]
  ],
  "discretize_oversample_2D": [
    [
      "astropy/convolution/utils.py",
      [
        "discretize_oversample_2D"
      ]
    ]
  ],
  "discretize_integrate_1D": [
    [
      "astropy/convolution/utils.py",
      [
        "discretize_integrate_1D"
      ]
    ]
  ],
  "discretize_integrate_2D": [
    [
      "astropy/convolution/utils.py",
      [
        "discretize_integrate_2D"
      ]
    ]
  ],
  "_get_simple_unit_names": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "_AngleParser",
        "_get_simple_unit_names"
      ]
    ]
  ],
  "t_UFLOAT": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "_AngleParser",
        "_make_parser",
        "t_UFLOAT"
      ]
    ],
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "_make_lexer",
        "t_UFLOAT"
      ]
    ],
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_lexer",
        "t_UFLOAT"
      ]
    ],
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_make_lexer",
        "t_UFLOAT"
      ]
    ]
  ],
  "t_UINT": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "_AngleParser",
        "_make_parser",
        "t_UINT"
      ]
    ],
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "_make_lexer",
        "t_UINT"
      ]
    ],
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_lexer",
        "t_UINT"
      ]
    ],
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_make_lexer",
        "t_UINT"
      ]
    ]
  ],
  "t_SIGN": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "_AngleParser",
        "_make_parser",
        "t_SIGN"
      ]
    ],
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "_make_lexer",
        "t_SIGN"
      ]
    ],
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_lexer",
        "t_SIGN"
      ]
    ],
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_make_lexer",
        "t_SIGN"
      ]
    ]
  ],
  "t_EASTWEST": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "_AngleParser",
        "_make_parser",
        "t_EASTWEST"
      ]
    ]
  ],
  "t_NORTHSOUTH": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "_AngleParser",
        "_make_parser",
        "t_NORTHSOUTH"
      ]
    ]
  ],
  "t_SIMPLE_UNIT": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "_AngleParser",
        "_make_parser",
        "t_SIMPLE_UNIT"
      ]
    ]
  ],
  "t_error": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "_AngleParser",
        "_make_parser",
        "t_error"
      ]
    ],
    [
      "astropy/extern/ply/cpp.py",
      [
        "t_error"
      ]
    ],
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "_make_lexer",
        "t_error"
      ]
    ],
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_lexer",
        "t_error"
      ]
    ],
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_make_lexer",
        "t_error"
      ]
    ]
  ],
  "p_angle": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "_AngleParser",
        "_make_parser",
        "p_angle"
      ]
    ]
  ],
  "p_sign": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "_AngleParser",
        "_make_parser",
        "p_sign"
      ]
    ],
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "_make_parser",
        "p_sign"
      ]
    ],
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_parser",
        "p_sign"
      ]
    ],
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_make_parser",
        "p_sign"
      ]
    ]
  ],
  "p_eastwest": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "_AngleParser",
        "_make_parser",
        "p_eastwest"
      ]
    ]
  ],
  "p_dir": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "_AngleParser",
        "_make_parser",
        "p_dir"
      ]
    ]
  ],
  "p_ufloat": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "_AngleParser",
        "_make_parser",
        "p_ufloat"
      ]
    ]
  ],
  "p_colon": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "_AngleParser",
        "_make_parser",
        "p_colon"
      ]
    ]
  ],
  "p_spaced": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "_AngleParser",
        "_make_parser",
        "p_spaced"
      ]
    ]
  ],
  "p_generic": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "_AngleParser",
        "_make_parser",
        "p_generic"
      ]
    ]
  ],
  "p_hms": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "_AngleParser",
        "_make_parser",
        "p_hms"
      ]
    ]
  ],
  "p_dms": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "_AngleParser",
        "_make_parser",
        "p_dms"
      ]
    ]
  ],
  "p_simple": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "_AngleParser",
        "_make_parser",
        "p_simple"
      ]
    ]
  ],
  "p_arcsecond": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "_AngleParser",
        "_make_parser",
        "p_arcsecond"
      ]
    ]
  ],
  "p_arcminute": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "_AngleParser",
        "_make_parser",
        "p_arcminute"
      ]
    ]
  ],
  "p_error": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "_AngleParser",
        "_make_parser",
        "p_error"
      ]
    ],
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "_make_parser",
        "p_error"
      ]
    ],
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_parser",
        "p_error"
      ]
    ],
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_make_parser",
        "p_error"
      ]
    ]
  ],
  "_make_parser": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "_AngleParser",
        "_make_parser"
      ]
    ],
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "_make_parser"
      ]
    ],
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_parser"
      ]
    ],
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_make_parser"
      ]
    ]
  ],
  "parse": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "_AngleParser",
        "parse"
      ]
    ],
    [
      "astropy/extern/ply/cpp.py",
      [
        "Preprocessor",
        "parse"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "LRParser",
        "parse"
      ]
    ],
    [
      "astropy/io/fits/scripts/fitsheader.py",
      [
        "HeaderFormatter",
        "parse"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "Converter",
        "parse"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "Char",
        "parse"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "UnicodeChar",
        "parse"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "ArrayVarArray",
        "parse"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "ScalarVarArray",
        "parse"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "NumericArray",
        "parse"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "Integer",
        "parse"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "ComplexArrayVarArray",
        "parse"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "ComplexVarArray",
        "parse"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "ComplexArray",
        "parse"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "Complex",
        "parse"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "Bit",
        "parse"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "Boolean",
        "parse"
      ]
    ],
    [
      "astropy/io/votable/table.py",
      [
        "parse"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Element",
        "parse"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "SimpleElement",
        "parse"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "SimpleElementWithContent",
        "parse"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Values",
        "parse"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "parse"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Group",
        "parse"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "parse"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Resource",
        "parse"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "VOTableFile",
        "parse"
      ]
    ],
    [
      "astropy/units/format/base.py",
      [
        "Base",
        "parse"
      ]
    ],
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "parse"
      ]
    ],
    [
      "astropy/units/format/fits.py",
      [
        "Fits",
        "parse"
      ]
    ],
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "parse"
      ]
    ],
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "parse"
      ]
    ],
    [
      "astropy/units/format/vounit.py",
      [
        "VOUnit",
        "parse"
      ]
    ],
    [
      "astropy/utils/parsing.py",
      [
        "ThreadSafeParser",
        "parse"
      ]
    ]
  ],
  "_check_hour_range": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "_check_hour_range"
      ]
    ]
  ],
  "_check_minute_range": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "_check_minute_range"
      ]
    ]
  ],
  "_check_second_range": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "_check_second_range"
      ]
    ]
  ],
  "check_hms_ranges": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "check_hms_ranges"
      ]
    ]
  ],
  "parse_angle": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "parse_angle"
      ]
    ]
  ],
  "degrees_to_dms": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "degrees_to_dms"
      ]
    ]
  ],
  "dms_to_degrees": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "dms_to_degrees"
      ]
    ]
  ],
  "hms_to_hours": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "hms_to_hours"
      ]
    ]
  ],
  "hms_to_degrees": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "hms_to_degrees"
      ]
    ]
  ],
  "hms_to_radians": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "hms_to_radians"
      ]
    ]
  ],
  "hms_to_dms": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "hms_to_dms"
      ]
    ]
  ],
  "hours_to_decimal": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "hours_to_decimal"
      ]
    ]
  ],
  "hours_to_radians": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "hours_to_radians"
      ]
    ]
  ],
  "hours_to_hms": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "hours_to_hms"
      ]
    ]
  ],
  "radians_to_degrees": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "radians_to_degrees"
      ]
    ]
  ],
  "radians_to_hours": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "radians_to_hours"
      ]
    ]
  ],
  "radians_to_hms": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "radians_to_hms"
      ]
    ]
  ],
  "radians_to_dms": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "radians_to_dms"
      ]
    ]
  ],
  "sexagesimal_to_string": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "sexagesimal_to_string"
      ]
    ]
  ],
  "hours_to_string": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "hours_to_string"
      ]
    ]
  ],
  "degrees_to_string": [
    [
      "astropy/coordinates/angle_formats.py",
      [
        "degrees_to_string"
      ]
    ]
  ],
  "angular_separation": [
    [
      "astropy/coordinates/angle_utilities.py",
      [
        "angular_separation"
      ]
    ]
  ],
  "position_angle": [
    [
      "astropy/coordinates/angle_utilities.py",
      [
        "position_angle"
      ]
    ],
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "position_angle"
      ]
    ]
  ],
  "offset_by": [
    [
      "astropy/coordinates/angle_utilities.py",
      [
        "offset_by"
      ]
    ]
  ],
  "golden_spiral_grid": [
    [
      "astropy/coordinates/angle_utilities.py",
      [
        "golden_spiral_grid"
      ]
    ]
  ],
  "uniform_spherical_random_surface": [
    [
      "astropy/coordinates/angle_utilities.py",
      [
        "uniform_spherical_random_surface"
      ]
    ]
  ],
  "uniform_spherical_random_volume": [
    [
      "astropy/coordinates/angle_utilities.py",
      [
        "uniform_spherical_random_volume"
      ]
    ]
  ],
  "_tuple_to_float": [
    [
      "astropy/coordinates/angles.py",
      [
        "Angle",
        "_tuple_to_float"
      ]
    ]
  ],
  "_convert_unit_to_angle_unit": [
    [
      "astropy/coordinates/angles.py",
      [
        "Angle",
        "_convert_unit_to_angle_unit"
      ]
    ]
  ],
  "_set_unit": [
    [
      "astropy/coordinates/angles.py",
      [
        "Angle",
        "_set_unit"
      ]
    ],
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "_set_unit"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionQuantity",
        "_set_unit"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "_set_unit"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "SpecificTypeQuantity",
        "_set_unit"
      ]
    ]
  ],
  "hour": [
    [
      "astropy/coordinates/angles.py",
      [
        "Angle",
        "hour"
      ]
    ]
  ],
  "hms": [
    [
      "astropy/coordinates/angles.py",
      [
        "Angle",
        "hms"
      ]
    ]
  ],
  "dms": [
    [
      "astropy/coordinates/angles.py",
      [
        "Angle",
        "dms"
      ]
    ]
  ],
  "signed_dms": [
    [
      "astropy/coordinates/angles.py",
      [
        "Angle",
        "signed_dms"
      ]
    ]
  ],
  "do_format": [
    [
      "astropy/coordinates/angles.py",
      [
        "Angle",
        "to_string",
        "do_format"
      ]
    ]
  ],
  "to_string": [
    [
      "astropy/coordinates/angles.py",
      [
        "Angle",
        "to_string"
      ]
    ],
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "to_string"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "to_string"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnrecognizedUnit",
        "to_string"
      ]
    ],
    [
      "astropy/units/format/base.py",
      [
        "Base",
        "to_string"
      ]
    ],
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "to_string"
      ]
    ],
    [
      "astropy/units/format/console.py",
      [
        "Console",
        "to_string"
      ]
    ],
    [
      "astropy/units/format/fits.py",
      [
        "Fits",
        "to_string"
      ]
    ],
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "to_string"
      ]
    ],
    [
      "astropy/units/format/latex.py",
      [
        "Latex",
        "to_string"
      ]
    ],
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "to_string"
      ]
    ],
    [
      "astropy/units/format/vounit.py",
      [
        "VOUnit",
        "to_string"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "to_string"
      ]
    ],
    [
      "astropy/units/function/logarithmic.py",
      [
        "DexUnit",
        "to_string"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "to_string"
      ]
    ],
    [
      "astropy/units/structured.py",
      [
        "StructuredUnit",
        "to_string"
      ]
    ]
  ],
  "_wrap_at": [
    [
      "astropy/coordinates/angles.py",
      [
        "Angle",
        "_wrap_at"
      ]
    ]
  ],
  "wrap_at": [
    [
      "astropy/coordinates/angles.py",
      [
        "Angle",
        "wrap_at"
      ]
    ]
  ],
  "is_within_bounds": [
    [
      "astropy/coordinates/angles.py",
      [
        "Angle",
        "is_within_bounds"
      ]
    ]
  ],
  "_str_helper": [
    [
      "astropy/coordinates/angles.py",
      [
        "Angle",
        "_str_helper"
      ]
    ]
  ],
  "_repr_latex_": [
    [
      "astropy/coordinates/angles.py",
      [
        "Angle",
        "_repr_latex_"
      ]
    ],
    [
      "astropy/uncertainty/core.py",
      [
        "_DistributionRepr",
        "_repr_latex_"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "_repr_latex_"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "_repr_latex_"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "_repr_latex_"
      ]
    ],
    [
      "astropy/units/structured.py",
      [
        "StructuredUnit",
        "_repr_latex_"
      ]
    ]
  ],
  "_no_angle_subclass": [
    [
      "astropy/coordinates/angles.py",
      [
        "_no_angle_subclass"
      ]
    ]
  ],
  "_validate_angles": [
    [
      "astropy/coordinates/angles.py",
      [
        "Latitude",
        "_validate_angles"
      ]
    ]
  ],
  "__setitem__": [
    [
      "astropy/coordinates/angles.py",
      [
        "Latitude",
        "__setitem__"
      ]
    ],
    [
      "astropy/coordinates/angles.py",
      [
        "Longitude",
        "__setitem__"
      ]
    ],
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "__setitem__"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferential",
        "__setitem__"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentation",
        "__setitem__"
      ]
    ],
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "__setitem__"
      ]
    ],
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "__setitem__"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "YaccProduction",
        "__setitem__"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "_VLF",
        "__setitem__"
      ]
    ],
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_record",
        "__setitem__"
      ]
    ],
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "__setitem__"
      ]
    ],
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHeader",
        "__setitem__"
      ]
    ],
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "__setitem__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "__setitem__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "_HeaderComments",
        "__setitem__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "_HeaderCommentaryCards",
        "__setitem__"
      ]
    ],
    [
      "astropy/io/votable/validator/result.py",
      [
        "Result",
        "__setitem__"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "ModelBoundingBox",
        "__setitem__"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "CompoundBoundingBox",
        "__setitem__"
      ]
    ],
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "__setitem__"
      ]
    ],
    [
      "astropy/modeling/utils.py",
      [
        "AliasDict",
        "__setitem__"
      ]
    ],
    [
      "astropy/modeling/utils.py",
      [
        "_ConstraintsDict",
        "__setitem__"
      ]
    ],
    [
      "astropy/modeling/utils.py",
      [
        "_SpecialOperatorsDict",
        "__setitem__"
      ]
    ],
    [
      "astropy/nddata/flag_collection.py",
      [
        "FlagCollection",
        "__setitem__"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "FalseArray",
        "__setitem__"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "Column",
        "__setitem__"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "MaskedColumn",
        "__setitem__"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "TableLoc",
        "__setitem__"
      ]
    ],
    [
      "astropy/table/row.py",
      [
        "Row",
        "__setitem__"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "TableColumns",
        "__setitem__"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "__setitem__"
      ]
    ],
    [
      "astropy/table/table_helpers.py",
      [
        "ArrayWrapper",
        "__setitem__"
      ]
    ],
    [
      "astropy/table/tests/test_init_table.py",
      [
        "DictLike",
        "__setitem__"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "__setitem__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "QuantityIterator",
        "__setitem__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__setitem__"
      ]
    ],
    [
      "astropy/units/quantity_helper/converters.py",
      [
        "UfuncHelpers",
        "__setitem__"
      ]
    ],
    [
      "astropy/utils/collections.py",
      [
        "HomogeneousList",
        "__setitem__"
      ]
    ],
    [
      "astropy/utils/data.py",
      [
        "ReadOnlyDict",
        "__setitem__"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "Masked",
        "__setitem__"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedIterator",
        "__setitem__"
      ]
    ]
  ],
  "__array_ufunc__": [
    [
      "astropy/coordinates/angles.py",
      [
        "Latitude",
        "__array_ufunc__"
      ]
    ],
    [
      "astropy/coordinates/angles.py",
      [
        "Longitude",
        "__array_ufunc__"
      ]
    ],
    [
      "astropy/coordinates/spectral_quantity.py",
      [
        "SpectralQuantity",
        "__array_ufunc__"
      ]
    ],
    [
      "astropy/uncertainty/core.py",
      [
        "Distribution",
        "__array_ufunc__"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionQuantity",
        "__array_ufunc__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__array_ufunc__"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "__array_ufunc__"
      ]
    ]
  ],
  "wrap_angle": [
    [
      "astropy/coordinates/angles.py",
      [
        "Longitude",
        "wrap_angle"
      ]
    ]
  ],
  "wrap_angle_3": [
    [
      "astropy/coordinates/angles.py",
      [
        "Longitude",
        "wrap_angle_3"
      ]
    ]
  ],
  "__set_name__": [
    [
      "astropy/coordinates/attributes.py",
      [
        "Attribute",
        "__set_name__"
      ]
    ],
    [
      "astropy/cosmology/parameter.py",
      [
        "Parameter",
        "__set_name__"
      ]
    ],
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "__set_name__"
      ]
    ],
    [
      "astropy/utils/metadata.py",
      [
        "MetaAttribute",
        "__set_name__"
      ]
    ]
  ],
  "convert_input": [
    [
      "astropy/coordinates/attributes.py",
      [
        "Attribute",
        "convert_input"
      ]
    ],
    [
      "astropy/coordinates/attributes.py",
      [
        "TimeAttribute",
        "convert_input"
      ]
    ],
    [
      "astropy/coordinates/attributes.py",
      [
        "CartesianRepresentationAttribute",
        "convert_input"
      ]
    ],
    [
      "astropy/coordinates/attributes.py",
      [
        "QuantityAttribute",
        "convert_input"
      ]
    ],
    [
      "astropy/coordinates/attributes.py",
      [
        "EarthLocationAttribute",
        "convert_input"
      ]
    ],
    [
      "astropy/coordinates/attributes.py",
      [
        "CoordinateAttribute",
        "convert_input"
      ]
    ],
    [
      "astropy/coordinates/attributes.py",
      [
        "DifferentialAttribute",
        "convert_input"
      ]
    ]
  ],
  "_get_repr_cls": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "_get_repr_cls"
      ]
    ]
  ],
  "_get_diff_cls": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "_get_diff_cls"
      ]
    ]
  ],
  "_get_repr_classes": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "_get_repr_classes"
      ]
    ]
  ],
  "__init_subclass__": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "__init_subclass__"
      ]
    ],
    [
      "astropy/coordinates/earth.py",
      [
        "BaseGeodeticRepresentation",
        "__init_subclass__"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentation",
        "__init_subclass__"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseDifferential",
        "__init_subclass__"
      ]
    ],
    [
      "astropy/cosmology/core.py",
      [
        "Cosmology",
        "__init_subclass__"
      ]
    ],
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FlatFLRWMixin",
        "__init_subclass__"
      ]
    ],
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "__init_subclass__"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "__init_subclass__"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeFormat",
        "__init_subclass__"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeString",
        "__init_subclass__"
      ]
    ],
    [
      "astropy/units/format/base.py",
      [
        "Base",
        "__init_subclass__"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "Masked",
        "__init_subclass__"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "__init_subclass__"
      ]
    ]
  ],
  "_infer_representation": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "_infer_representation"
      ]
    ]
  ],
  "_infer_data": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "_infer_data"
      ]
    ]
  ],
  "_infer_repr_info": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "_infer_repr_info"
      ]
    ]
  ],
  "_create_readonly_property": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "_create_readonly_property"
      ]
    ]
  ],
  "cache": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "cache"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "cache"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeFormat",
        "cache"
      ]
    ]
  ],
  "data": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "data"
      ]
    ],
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_NonstandardHDU",
        "data"
      ]
    ],
    [
      "astropy/io/fits/hdu/base.py",
      [
        "NonstandardExtHDU",
        "data"
      ]
    ],
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHDU",
        "data"
      ]
    ],
    [
      "astropy/io/fits/hdu/groups.py",
      [
        "Group",
        "data"
      ]
    ],
    [
      "astropy/io/fits/hdu/groups.py",
      [
        "GroupData",
        "data"
      ]
    ],
    [
      "astropy/io/fits/hdu/groups.py",
      [
        "GroupsHDU",
        "data"
      ]
    ],
    [
      "astropy/io/fits/hdu/image.py",
      [
        "_ImageBaseHDU",
        "data"
      ]
    ],
    [
      "astropy/io/fits/hdu/table.py",
      [
        "_TableBaseHDU",
        "data"
      ]
    ],
    [
      "astropy/io/fits/tests/__init__.py",
      [
        "FitsTestCase",
        "data"
      ]
    ],
    [
      "astropy/nddata/ccddata.py",
      [
        "CCDData",
        "data"
      ]
    ],
    [
      "astropy/nddata/nddata.py",
      [
        "NDData",
        "data"
      ]
    ],
    [
      "astropy/nddata/nddata_base.py",
      [
        "NDDataBase",
        "data"
      ]
    ],
    [
      "astropy/nddata/tests/test_nddata_base.py",
      [
        "MinimalSubclass",
        "data"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "data"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "MaskedColumn",
        "data"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "SlicedIndex",
        "data"
      ]
    ],
    [
      "astropy/timeseries/periodograms/bls/tests/test_bls.py",
      [
        "data"
      ]
    ],
    [
      "astropy/timeseries/periodograms/lombscargle/tests/test_lombscargle.py",
      [
        "data"
      ]
    ],
    [
      "astropy/timeseries/periodograms/lombscargle/tests/test_utils.py",
      [
        "data"
      ]
    ],
    [
      "astropy/utils/xml/writer.py",
      [
        "XMLWriter",
        "data"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "Spine",
        "data"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "SpineXAligned",
        "data"
      ]
    ]
  ],
  "has_data": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "has_data"
      ]
    ]
  ],
  "__len__": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "__len__"
      ]
    ],
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocation",
        "__len__"
      ]
    ],
    [
      "astropy/coordinates/sites.py",
      [
        "SiteRegistry",
        "__len__"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "YaccProduction",
        "__len__"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "Production",
        "__len__"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "Grammar",
        "__len__"
      ]
    ],
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "__len__"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "ColDefs",
        "__len__"
      ]
    ],
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_record",
        "__len__"
      ]
    ],
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "__len__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "__len__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "_BasicHeader",
        "__len__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "_CardAccessor",
        "__len__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "_HeaderCommentaryCards",
        "__len__"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "ModelBoundingBox",
        "__len__"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "__len__"
      ]
    ],
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "__len__"
      ]
    ],
    [
      "astropy/modeling/utils.py",
      [
        "AliasDict",
        "__len__"
      ]
    ],
    [
      "astropy/table/groups.py",
      [
        "BaseGroups",
        "__len__"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "Index",
        "__len__"
      ]
    ],
    [
      "astropy/table/row.py",
      [
        "Row",
        "__len__"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "__len__"
      ]
    ],
    [
      "astropy/table/table_helpers.py",
      [
        "ArrayWrapper",
        "__len__"
      ]
    ],
    [
      "astropy/table/tests/test_init_table.py",
      [
        "DictLike",
        "__len__"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeFormat",
        "__len__"
      ]
    ],
    [
      "astropy/units/physical.py",
      [
        "PhysicalType",
        "__len__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "QuantityIterator",
        "__len__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__len__"
      ]
    ],
    [
      "astropy/units/structured.py",
      [
        "StructuredUnit",
        "__len__"
      ]
    ],
    [
      "astropy/utils/shapes.py",
      [
        "ShapedLikeNDArray",
        "__len__"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/ticks.py",
      [
        "Ticks",
        "__len__"
      ]
    ]
  ],
  "__bool__": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "__bool__"
      ]
    ],
    [
      "astropy/io/fits/diff.py",
      [
        "_BaseDiff",
        "__bool__"
      ]
    ],
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "__bool__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__bool__"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "__bool__"
      ]
    ],
    [
      "astropy/utils/shapes.py",
      [
        "ShapedLikeNDArray",
        "__bool__"
      ]
    ]
  ],
  "size": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "size"
      ]
    ],
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_CorruptedHDU",
        "size"
      ]
    ],
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_NonstandardHDU",
        "size"
      ]
    ],
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_ValidHDU",
        "size"
      ]
    ],
    [
      "astropy/io/fits/hdu/groups.py",
      [
        "GroupsHDU",
        "size"
      ]
    ],
    [
      "astropy/io/fits/hdu/streaming.py",
      [
        "StreamingHDU",
        "size"
      ]
    ],
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "DummyNonstandardExtHDU",
        "size"
      ]
    ],
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "size"
      ]
    ],
    [
      "astropy/nddata/compat.py",
      [
        "NDDataArray",
        "size"
      ]
    ],
    [
      "astropy/utils/shapes.py",
      [
        "ShapedLikeNDArray",
        "size"
      ]
    ]
  ],
  "isscalar": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "isscalar"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "isscalar"
      ]
    ],
    [
      "astropy/utils/shapes.py",
      [
        "ShapedLikeNDArray",
        "isscalar"
      ]
    ]
  ],
  "get_frame_attr_names": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "get_frame_attr_names"
      ]
    ]
  ],
  "get_representation_cls": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "get_representation_cls"
      ]
    ]
  ],
  "set_representation_cls": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "set_representation_cls"
      ]
    ]
  ],
  "differential_type": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "differential_type"
      ]
    ]
  ],
  "differential_type_17": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "differential_type_17"
      ]
    ]
  ],
  "_get_representation_info": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "_get_representation_info"
      ]
    ]
  ],
  "representation_info": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "representation_info"
      ]
    ]
  ],
  "get_representation_component_names": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "get_representation_component_names"
      ]
    ]
  ],
  "get_representation_component_units": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "get_representation_component_units"
      ]
    ]
  ],
  "_replicate": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "_replicate"
      ]
    ]
  ],
  "replicate": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "replicate"
      ]
    ],
    [
      "astropy/coordinates/spectral_coordinate.py",
      [
        "SpectralCoord",
        "replicate"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "replicate"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeDelta",
        "replicate"
      ]
    ]
  ],
  "replicate_without_data": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "replicate_without_data"
      ]
    ]
  ],
  "realize_frame": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "realize_frame"
      ]
    ]
  ],
  "represent_as": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "represent_as"
      ]
    ],
    [
      "astropy/coordinates/builtin_frames/hadec.py",
      [
        "HADec",
        "represent_as"
      ]
    ],
    [
      "astropy/coordinates/builtin_frames/skyoffset.py",
      [
        "SkyOffsetFrame",
        "represent_as"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentation",
        "represent_as"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalRepresentation",
        "represent_as"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "SphericalRepresentation",
        "represent_as"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "PhysicsSphericalRepresentation",
        "represent_as"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseDifferential",
        "represent_as"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalDifferential",
        "represent_as"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "SphericalDifferential",
        "represent_as"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalCosLatDifferential",
        "represent_as"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "SphericalCosLatDifferential",
        "represent_as"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "PhysicsSphericalDifferential",
        "represent_as"
      ]
    ]
  ],
  "transform_to": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "transform_to"
      ]
    ],
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "transform_to"
      ]
    ]
  ],
  "is_transformable_to": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "is_transformable_to"
      ]
    ],
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "is_transformable_to"
      ]
    ]
  ],
  "is_frame_attr_default": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "is_frame_attr_default"
      ]
    ]
  ],
  "_frameattr_equiv": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "_frameattr_equiv"
      ]
    ]
  ],
  "is_equivalent_frame": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "is_equivalent_frame"
      ]
    ],
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "is_equivalent_frame"
      ]
    ]
  ],
  "_data_repr": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "_data_repr"
      ]
    ]
  ],
  "_frame_attrs_repr": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "_frame_attrs_repr"
      ]
    ]
  ],
  "apply_method": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "_apply",
        "apply_method"
      ]
    ],
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "_apply",
        "apply_method"
      ]
    ]
  ],
  "_apply": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "_apply"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferential",
        "_apply"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentation",
        "_apply"
      ]
    ],
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "_apply"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "_apply"
      ]
    ],
    [
      "astropy/timeseries/periodograms/bls/methods.py",
      [
        "_apply"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "Masked",
        "_apply"
      ]
    ],
    [
      "astropy/utils/shapes.py",
      [
        "ShapedLikeNDArray",
        "_apply"
      ]
    ]
  ],
  "__dir__": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "__dir__"
      ]
    ],
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "__dir__"
      ]
    ],
    [
      "astropy/cosmology/__init__.py",
      [
        "__dir__"
      ]
    ],
    [
      "astropy/cosmology/parameters.py",
      [
        "__dir__"
      ]
    ],
    [
      "astropy/cosmology/realizations.py",
      [
        "__dir__"
      ]
    ],
    [
      "astropy/io/registry/compat.py",
      [
        "__dir__"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "__dir__"
      ]
    ],
    [
      "astropy/timeseries/periodograms/bls/core.py",
      [
        "BoxLeastSquaresResults",
        "__dir__"
      ]
    ],
    [
      "astropy/units/physical.py",
      [
        "__dir__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__dir__"
      ]
    ]
  ],
  "__getattr__": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "__getattr__"
      ]
    ],
    [
      "astropy/coordinates/baseframe.py",
      [
        "GenericFrame",
        "__getattr__"
      ]
    ],
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "__getattr__"
      ]
    ],
    [
      "astropy/cosmology/__init__.py",
      [
        "__getattr__"
      ]
    ],
    [
      "astropy/cosmology/core.py",
      [
        "__getattr__"
      ]
    ],
    [
      "astropy/cosmology/parameters.py",
      [
        "__getattr__"
      ]
    ],
    [
      "astropy/cosmology/realizations.py",
      [
        "__getattr__"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "ColDefs",
        "__getattr__"
      ]
    ],
    [
      "astropy/io/registry/compat.py",
      [
        "__getattr__"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "__getattr__"
      ]
    ],
    [
      "astropy/nddata/bitmask.py",
      [
        "BitFlagNameMeta",
        "__getattr__"
      ]
    ],
    [
      "astropy/samp/utils.py",
      [
        "_ServerProxyPoolMethod",
        "__getattr__"
      ]
    ],
    [
      "astropy/samp/utils.py",
      [
        "ServerProxyPool",
        "__getattr__"
      ]
    ],
    [
      "astropy/samp/utils.py",
      [
        "_HubAsClient",
        "__getattr__"
      ]
    ],
    [
      "astropy/samp/utils.py",
      [
        "_HubAsClientMethod",
        "__getattr__"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "__getattr__"
      ]
    ],
    [
      "astropy/timeseries/periodograms/bls/core.py",
      [
        "BoxLeastSquaresResults",
        "__getattr__"
      ]
    ],
    [
      "astropy/units/__init__.py",
      [
        "__getattr__"
      ]
    ],
    [
      "astropy/units/astrophys.py",
      [
        "__getattr__"
      ]
    ],
    [
      "astropy/units/equivalencies.py",
      [
        "__getattr__"
      ]
    ],
    [
      "astropy/units/physical.py",
      [
        "PhysicalType",
        "__getattr__"
      ]
    ],
    [
      "astropy/units/physical.py",
      [
        "__getattr__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__getattr__"
      ]
    ],
    [
      "astropy/utils/compat/optional_deps.py",
      [
        "__getattr__"
      ]
    ],
    [
      "astropy/utils/xml/tests/test_iterparse.py",
      [
        "UngzipFileWrapper",
        "__getattr__"
      ]
    ]
  ],
  "__setattr__": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "__setattr__"
      ]
    ],
    [
      "astropy/coordinates/baseframe.py",
      [
        "GenericFrame",
        "__setattr__"
      ]
    ],
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "__setattr__"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "__setattr__"
      ]
    ],
    [
      "astropy/nddata/bitmask.py",
      [
        "BitFlagNameMeta",
        "__setattr__"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "Column",
        "__setattr__"
      ]
    ]
  ],
  "__eq__": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "__eq__"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferential",
        "__eq__"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentation",
        "__eq__"
      ]
    ],
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "__eq__"
      ]
    ],
    [
      "astropy/cosmology/core.py",
      [
        "Cosmology",
        "__eq__"
      ]
    ],
    [
      "astropy/cosmology/parameter.py",
      [
        "Parameter",
        "__eq__"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "_BaseColumnFormat",
        "__eq__"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "Column",
        "__eq__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "__eq__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "_CardAccessor",
        "__eq__"
      ]
    ],
    [
      "astropy/io/misc/tests/test_pickle_helpers.py",
      [
        "ToBePickled",
        "__eq__"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "ModelBoundingBox",
        "__eq__"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "CompoundBoundingBox",
        "__eq__"
      ]
    ],
    [
      "astropy/table/bst.py",
      [
        "Epsilon",
        "__eq__"
      ]
    ],
    [
      "astropy/table/row.py",
      [
        "Row",
        "__eq__"
      ]
    ],
    [
      "astropy/table/soco.py",
      [
        "Node",
        "__eq__"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "__eq__"
      ]
    ],
    [
      "astropy/table/table_helpers.py",
      [
        "ArrayWrapper",
        "__eq__"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "__eq__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "__eq__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnrecognizedUnit",
        "__eq__"
      ]
    ],
    [
      "astropy/units/equivalencies.py",
      [
        "Equivalency",
        "__eq__"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "__eq__"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionQuantity",
        "__eq__"
      ]
    ],
    [
      "astropy/units/physical.py",
      [
        "PhysicalType",
        "__eq__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__eq__"
      ]
    ],
    [
      "astropy/units/structured.py",
      [
        "StructuredUnit",
        "__eq__"
      ]
    ],
    [
      "astropy/units/structured.py",
      [
        "Structure",
        "__eq__"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "__eq__"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/wcsapi.py",
      [
        "WCSWorld2PixelTransform",
        "__eq__"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/wcsapi.py",
      [
        "WCSPixel2WorldTransform",
        "__eq__"
      ]
    ]
  ],
  "__ne__": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "__ne__"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferential",
        "__ne__"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentation",
        "__ne__"
      ]
    ],
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "__ne__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "_CardAccessor",
        "__ne__"
      ]
    ],
    [
      "astropy/table/row.py",
      [
        "Row",
        "__ne__"
      ]
    ],
    [
      "astropy/table/soco.py",
      [
        "Node",
        "__ne__"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "__ne__"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "__ne__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "__ne__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnrecognizedUnit",
        "__ne__"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "__ne__"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionQuantity",
        "__ne__"
      ]
    ],
    [
      "astropy/units/physical.py",
      [
        "PhysicalType",
        "__ne__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__ne__"
      ]
    ],
    [
      "astropy/units/structured.py",
      [
        "StructuredUnit",
        "__ne__"
      ]
    ],
    [
      "astropy/units/structured.py",
      [
        "Structure",
        "__ne__"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "__ne__"
      ]
    ]
  ],
  "separation": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "separation"
      ]
    ],
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "separation"
      ]
    ]
  ],
  "separation_3d": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "separation_3d"
      ]
    ],
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "separation_3d"
      ]
    ]
  ],
  "cartesian": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "cartesian"
      ]
    ]
  ],
  "cylindrical": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "cylindrical"
      ]
    ]
  ],
  "spherical": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "spherical"
      ]
    ]
  ],
  "sphericalcoslat": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "sphericalcoslat"
      ]
    ]
  ],
  "velocity": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "velocity"
      ]
    ]
  ],
  "proper_motion": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "proper_motion"
      ]
    ]
  ],
  "radial_velocity": [
    [
      "astropy/coordinates/baseframe.py",
      [
        "BaseCoordinateFrame",
        "radial_velocity"
      ]
    ],
    [
      "astropy/coordinates/spectral_coordinate.py",
      [
        "SpectralCoord",
        "radial_velocity"
      ]
    ]
  ],
  "make_transform_graph_docs": [
    [
      "astropy/coordinates/builtin_frames/__init__.py",
      [
        "make_transform_graph_docs"
      ]
    ]
  ],
  "secz": [
    [
      "astropy/coordinates/builtin_frames/altaz.py",
      [
        "AltAz",
        "secz"
      ]
    ]
  ],
  "zen": [
    [
      "astropy/coordinates/builtin_frames/altaz.py",
      [
        "AltAz",
        "zen"
      ]
    ]
  ],
  "cirs_to_observed": [
    [
      "astropy/coordinates/builtin_frames/cirs_observed_transforms.py",
      [
        "cirs_to_observed"
      ]
    ]
  ],
  "observed_to_cirs": [
    [
      "astropy/coordinates/builtin_frames/cirs_observed_transforms.py",
      [
        "observed_to_cirs"
      ]
    ]
  ],
  "_mean_ecliptic_rotation_matrix": [
    [
      "astropy/coordinates/builtin_frames/ecliptic_transforms.py",
      [
        "_mean_ecliptic_rotation_matrix"
      ]
    ]
  ],
  "_true_ecliptic_rotation_matrix": [
    [
      "astropy/coordinates/builtin_frames/ecliptic_transforms.py",
      [
        "_true_ecliptic_rotation_matrix"
      ]
    ]
  ],
  "_obliquity_only_rotation_matrix": [
    [
      "astropy/coordinates/builtin_frames/ecliptic_transforms.py",
      [
        "_obliquity_only_rotation_matrix"
      ]
    ]
  ],
  "gcrs_to_geoecliptic": [
    [
      "astropy/coordinates/builtin_frames/ecliptic_transforms.py",
      [
        "gcrs_to_geoecliptic"
      ]
    ]
  ],
  "geoecliptic_to_gcrs": [
    [
      "astropy/coordinates/builtin_frames/ecliptic_transforms.py",
      [
        "geoecliptic_to_gcrs"
      ]
    ]
  ],
  "icrs_to_baryecliptic": [
    [
      "astropy/coordinates/builtin_frames/ecliptic_transforms.py",
      [
        "icrs_to_baryecliptic"
      ]
    ]
  ],
  "baryecliptic_to_icrs": [
    [
      "astropy/coordinates/builtin_frames/ecliptic_transforms.py",
      [
        "baryecliptic_to_icrs"
      ]
    ]
  ],
  "icrs_to_helioecliptic": [
    [
      "astropy/coordinates/builtin_frames/ecliptic_transforms.py",
      [
        "icrs_to_helioecliptic"
      ]
    ]
  ],
  "helioecliptic_to_icrs": [
    [
      "astropy/coordinates/builtin_frames/ecliptic_transforms.py",
      [
        "helioecliptic_to_icrs"
      ]
    ]
  ],
  "gcrs_to_true_geoecliptic": [
    [
      "astropy/coordinates/builtin_frames/ecliptic_transforms.py",
      [
        "gcrs_to_true_geoecliptic"
      ]
    ]
  ],
  "true_geoecliptic_to_gcrs": [
    [
      "astropy/coordinates/builtin_frames/ecliptic_transforms.py",
      [
        "true_geoecliptic_to_gcrs"
      ]
    ]
  ],
  "icrs_to_true_baryecliptic": [
    [
      "astropy/coordinates/builtin_frames/ecliptic_transforms.py",
      [
        "icrs_to_true_baryecliptic"
      ]
    ]
  ],
  "true_baryecliptic_to_icrs": [
    [
      "astropy/coordinates/builtin_frames/ecliptic_transforms.py",
      [
        "true_baryecliptic_to_icrs"
      ]
    ]
  ],
  "icrs_to_true_helioecliptic": [
    [
      "astropy/coordinates/builtin_frames/ecliptic_transforms.py",
      [
        "icrs_to_true_helioecliptic"
      ]
    ]
  ],
  "true_helioecliptic_to_icrs": [
    [
      "astropy/coordinates/builtin_frames/ecliptic_transforms.py",
      [
        "true_helioecliptic_to_icrs"
      ]
    ]
  ],
  "ecliptic_to_iau76_icrs": [
    [
      "astropy/coordinates/builtin_frames/ecliptic_transforms.py",
      [
        "ecliptic_to_iau76_icrs"
      ]
    ]
  ],
  "icrs_to_iau76_ecliptic": [
    [
      "astropy/coordinates/builtin_frames/ecliptic_transforms.py",
      [
        "icrs_to_iau76_ecliptic"
      ]
    ]
  ],
  "icrs_to_custombaryecliptic": [
    [
      "astropy/coordinates/builtin_frames/ecliptic_transforms.py",
      [
        "icrs_to_custombaryecliptic"
      ]
    ]
  ],
  "custombaryecliptic_to_icrs": [
    [
      "astropy/coordinates/builtin_frames/ecliptic_transforms.py",
      [
        "custombaryecliptic_to_icrs"
      ]
    ]
  ],
  "fk4_to_fk4": [
    [
      "astropy/coordinates/builtin_frames/fk4.py",
      [
        "fk4_to_fk4"
      ]
    ]
  ],
  "_precession_matrix": [
    [
      "astropy/coordinates/builtin_frames/fk4.py",
      [
        "FK4NoETerms",
        "_precession_matrix"
      ]
    ],
    [
      "astropy/coordinates/builtin_frames/fk5.py",
      [
        "FK5",
        "_precession_matrix"
      ]
    ]
  ],
  "fk4noe_to_fk4noe": [
    [
      "astropy/coordinates/builtin_frames/fk4.py",
      [
        "fk4noe_to_fk4noe"
      ]
    ]
  ],
  "fk4_e_terms": [
    [
      "astropy/coordinates/builtin_frames/fk4.py",
      [
        "fk4_e_terms"
      ]
    ]
  ],
  "fk4_to_fk4_no_e": [
    [
      "astropy/coordinates/builtin_frames/fk4.py",
      [
        "fk4_to_fk4_no_e"
      ]
    ]
  ],
  "fk4_no_e_to_fk4": [
    [
      "astropy/coordinates/builtin_frames/fk4.py",
      [
        "fk4_no_e_to_fk4"
      ]
    ]
  ],
  "_fk4_B_matrix": [
    [
      "astropy/coordinates/builtin_frames/fk4_fk5_transforms.py",
      [
        "_fk4_B_matrix"
      ]
    ]
  ],
  "fk4_no_e_to_fk5": [
    [
      "astropy/coordinates/builtin_frames/fk4_fk5_transforms.py",
      [
        "fk4_no_e_to_fk5"
      ]
    ]
  ],
  "fk5_to_fk4_no_e": [
    [
      "astropy/coordinates/builtin_frames/fk4_fk5_transforms.py",
      [
        "fk5_to_fk4_no_e"
      ]
    ]
  ],
  "fk5_to_fk5": [
    [
      "astropy/coordinates/builtin_frames/fk5.py",
      [
        "fk5_to_fk5"
      ]
    ]
  ],
  "fk5_to_gal": [
    [
      "astropy/coordinates/builtin_frames/galactic_transforms.py",
      [
        "fk5_to_gal"
      ]
    ]
  ],
  "_gal_to_fk5": [
    [
      "astropy/coordinates/builtin_frames/galactic_transforms.py",
      [
        "_gal_to_fk5"
      ]
    ]
  ],
  "fk4_to_gal": [
    [
      "astropy/coordinates/builtin_frames/galactic_transforms.py",
      [
        "fk4_to_gal"
      ]
    ]
  ],
  "gal_to_fk4": [
    [
      "astropy/coordinates/builtin_frames/galactic_transforms.py",
      [
        "gal_to_fk4"
      ]
    ]
  ],
  "__getitem__": [
    [
      "astropy/coordinates/builtin_frames/galactocentric.py",
      [
        "_StateProxy",
        "__getitem__"
      ]
    ],
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocation",
        "__getitem__"
      ]
    ],
    [
      "astropy/coordinates/sites.py",
      [
        "SiteRegistry",
        "__getitem__"
      ]
    ],
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "__getitem__"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "YaccProduction",
        "__getitem__"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "Production",
        "__getitem__"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "Grammar",
        "__getitem__"
      ]
    ],
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "__getitem__"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "Delayed",
        "__getitem__"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "ColDefs",
        "__getitem__"
      ]
    ],
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_record",
        "__getitem__"
      ]
    ],
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "__getitem__"
      ]
    ],
    [
      "astropy/io/fits/hdu/groups.py",
      [
        "GroupData",
        "__getitem__"
      ]
    ],
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "__getitem__"
      ]
    ],
    [
      "astropy/io/fits/hdu/image.py",
      [
        "Section",
        "__getitem__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "__getitem__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "_BasicHeaderCards",
        "__getitem__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "_BasicHeader",
        "__getitem__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "_CardAccessor",
        "__getitem__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "_HeaderComments",
        "__getitem__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "_HeaderCommentaryCards",
        "__getitem__"
      ]
    ],
    [
      "astropy/io/votable/validator/result.py",
      [
        "Result",
        "__getitem__"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "ModelBoundingBox",
        "__getitem__"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "CompoundBoundingBox",
        "__getitem__"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "__getitem__"
      ]
    ],
    [
      "astropy/modeling/fitting.py",
      [
        "Covariance",
        "__getitem__"
      ]
    ],
    [
      "astropy/modeling/fitting.py",
      [
        "StandardDeviations",
        "__getitem__"
      ]
    ],
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "__getitem__"
      ]
    ],
    [
      "astropy/modeling/utils.py",
      [
        "AliasDict",
        "__getitem__"
      ]
    ],
    [
      "astropy/nddata/bitmask.py",
      [
        "BitFlagNameMeta",
        "__getitem__"
      ]
    ],
    [
      "astropy/nddata/mixins/ndslicing.py",
      [
        "NDSlicingMixin",
        "__getitem__"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "NDUncertainty",
        "__getitem__"
      ]
    ],
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "FakeNumpyArray",
        "__getitem__"
      ]
    ],
    [
      "astropy/table/groups.py",
      [
        "BaseGroups",
        "__getitem__"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "Index",
        "__getitem__"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "SlicedIndex",
        "__getitem__"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "_IndexModeContext",
        "_get_copy_on_getitem_shim",
        "__getitem__"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "TableIndices",
        "__getitem__"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "TableLoc",
        "__getitem__"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "TableLocIndices",
        "__getitem__"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "TableILoc",
        "__getitem__"
      ]
    ],
    [
      "astropy/table/mixins/dask.py",
      [
        "DaskColumn",
        "__getitem__"
      ]
    ],
    [
      "astropy/table/row.py",
      [
        "Row",
        "__getitem__"
      ]
    ],
    [
      "astropy/table/sorted_array.py",
      [
        "SortedArray",
        "__getitem__"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "TableColumns",
        "__getitem__"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "__getitem__"
      ]
    ],
    [
      "astropy/table/table_helpers.py",
      [
        "ArrayWrapper",
        "__getitem__"
      ]
    ],
    [
      "astropy/table/tests/test_init_table.py",
      [
        "DictLike",
        "__getitem__"
      ]
    ],
    [
      "astropy/table/tests/test_subclass.py",
      [
        "ParamsRow",
        "__getitem__"
      ]
    ],
    [
      "astropy/timeseries/binned.py",
      [
        "BinnedTimeSeries",
        "__getitem__"
      ]
    ],
    [
      "astropy/timeseries/sampled.py",
      [
        "TimeSeries",
        "__getitem__"
      ]
    ],
    [
      "astropy/uncertainty/core.py",
      [
        "ArrayDistribution",
        "__getitem__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "QuantityIterator",
        "__getitem__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__getitem__"
      ]
    ],
    [
      "astropy/units/structured.py",
      [
        "StructuredUnit",
        "__getitem__"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedIterator",
        "__getitem__"
      ]
    ],
    [
      "astropy/utils/shapes.py",
      [
        "NDArrayShapeMethods",
        "__getitem__"
      ]
    ],
    [
      "astropy/utils/shapes.py",
      [
        "ShapedLikeNDArray",
        "__getitem__"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/coordinates_map.py",
      [
        "CoordinatesMap",
        "__getitem__"
      ]
    ],
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "__getitem__"
      ]
    ]
  ],
  "__deepcopy__": [
    [
      "astropy/coordinates/builtin_frames/galactocentric.py",
      [
        "_StateProxy",
        "__deepcopy__"
      ]
    ],
    [
      "astropy/io/ascii/core.py",
      [
        "MaskedConstant",
        "__deepcopy__"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "ColDefs",
        "__deepcopy__"
      ]
    ],
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "__deepcopy__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "__deepcopy__"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "Index",
        "__deepcopy__"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "__deepcopy__"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "__deepcopy__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "__deepcopy__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__deepcopy__"
      ]
    ],
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "__deepcopy__"
      ]
    ]
  ],
  "parameters": [
    [
      "astropy/coordinates/builtin_frames/galactocentric.py",
      [
        "galactocentric_frame_defaults",
        "parameters"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "parameters"
      ]
    ]
  ],
  "references": [
    [
      "astropy/coordinates/builtin_frames/galactocentric.py",
      [
        "galactocentric_frame_defaults",
        "references"
      ]
    ]
  ],
  "get_from_registry": [
    [
      "astropy/coordinates/builtin_frames/galactocentric.py",
      [
        "galactocentric_frame_defaults",
        "get_from_registry"
      ]
    ]
  ],
  "get_solar_params_from_string": [
    [
      "astropy/coordinates/builtin_frames/galactocentric.py",
      [
        "galactocentric_frame_defaults",
        "get_solar_params_from_string"
      ]
    ]
  ],
  "register": [
    [
      "astropy/coordinates/builtin_frames/galactocentric.py",
      [
        "galactocentric_frame_defaults",
        "register"
      ]
    ],
    [
      "astropy/coordinates/transformations.py",
      [
        "CoordinateTransform",
        "register"
      ]
    ],
    [
      "astropy/cosmology/parameter.py",
      [
        "Parameter",
        "register_validator",
        "register"
      ]
    ],
    [
      "astropy/samp/client.py",
      [
        "SAMPClient",
        "register"
      ]
    ],
    [
      "astropy/samp/hub_proxy.py",
      [
        "SAMPHubProxy",
        "register"
      ]
    ],
    [
      "astropy/samp/tests/web_profile_test_helpers.py",
      [
        "SAMPWebHubProxy",
        "register"
      ]
    ],
    [
      "astropy/samp/tests/web_profile_test_helpers.py",
      [
        "SAMPWebClient",
        "register"
      ]
    ]
  ],
  "get_roll0": [
    [
      "astropy/coordinates/builtin_frames/galactocentric.py",
      [
        "Galactocentric",
        "get_roll0"
      ]
    ]
  ],
  "get_matrix_vectors": [
    [
      "astropy/coordinates/builtin_frames/galactocentric.py",
      [
        "get_matrix_vectors"
      ]
    ]
  ],
  "_check_coord_repr_diff_types": [
    [
      "astropy/coordinates/builtin_frames/galactocentric.py",
      [
        "_check_coord_repr_diff_types"
      ]
    ]
  ],
  "icrs_to_galactocentric": [
    [
      "astropy/coordinates/builtin_frames/galactocentric.py",
      [
        "icrs_to_galactocentric"
      ]
    ]
  ],
  "galactocentric_to_icrs": [
    [
      "astropy/coordinates/builtin_frames/galactocentric.py",
      [
        "galactocentric_to_icrs"
      ]
    ]
  ],
  "_set_data_lon_wrap_angle": [
    [
      "astropy/coordinates/builtin_frames/hadec.py",
      [
        "HADec",
        "_set_data_lon_wrap_angle"
      ]
    ]
  ],
  "icrs_to_cirs": [
    [
      "astropy/coordinates/builtin_frames/icrs_cirs_transforms.py",
      [
        "icrs_to_cirs"
      ]
    ]
  ],
  "cirs_to_icrs": [
    [
      "astropy/coordinates/builtin_frames/icrs_cirs_transforms.py",
      [
        "cirs_to_icrs"
      ]
    ]
  ],
  "icrs_to_gcrs": [
    [
      "astropy/coordinates/builtin_frames/icrs_cirs_transforms.py",
      [
        "icrs_to_gcrs"
      ]
    ]
  ],
  "gcrs_to_icrs": [
    [
      "astropy/coordinates/builtin_frames/icrs_cirs_transforms.py",
      [
        "gcrs_to_icrs"
      ]
    ]
  ],
  "gcrs_to_hcrs": [
    [
      "astropy/coordinates/builtin_frames/icrs_cirs_transforms.py",
      [
        "gcrs_to_hcrs"
      ]
    ]
  ],
  "hcrs_to_icrs": [
    [
      "astropy/coordinates/builtin_frames/icrs_cirs_transforms.py",
      [
        "hcrs_to_icrs"
      ]
    ]
  ],
  "icrs_to_hcrs": [
    [
      "astropy/coordinates/builtin_frames/icrs_cirs_transforms.py",
      [
        "icrs_to_hcrs"
      ]
    ]
  ],
  "_icrs_to_fk5_matrix": [
    [
      "astropy/coordinates/builtin_frames/icrs_fk5_transforms.py",
      [
        "_icrs_to_fk5_matrix"
      ]
    ]
  ],
  "icrs_to_fk5": [
    [
      "astropy/coordinates/builtin_frames/icrs_fk5_transforms.py",
      [
        "icrs_to_fk5"
      ]
    ]
  ],
  "fk5_to_icrs": [
    [
      "astropy/coordinates/builtin_frames/icrs_fk5_transforms.py",
      [
        "fk5_to_icrs"
      ]
    ]
  ],
  "icrs_to_observed": [
    [
      "astropy/coordinates/builtin_frames/icrs_observed_transforms.py",
      [
        "icrs_to_observed"
      ]
    ]
  ],
  "observed_to_icrs": [
    [
      "astropy/coordinates/builtin_frames/icrs_observed_transforms.py",
      [
        "observed_to_icrs"
      ]
    ]
  ],
  "teme_to_itrs_mat": [
    [
      "astropy/coordinates/builtin_frames/intermediate_rotation_transforms.py",
      [
        "teme_to_itrs_mat"
      ]
    ]
  ],
  "gcrs_to_cirs_mat": [
    [
      "astropy/coordinates/builtin_frames/intermediate_rotation_transforms.py",
      [
        "gcrs_to_cirs_mat"
      ]
    ]
  ],
  "cirs_to_itrs_mat": [
    [
      "astropy/coordinates/builtin_frames/intermediate_rotation_transforms.py",
      [
        "cirs_to_itrs_mat"
      ]
    ]
  ],
  "tete_to_itrs_mat": [
    [
      "astropy/coordinates/builtin_frames/intermediate_rotation_transforms.py",
      [
        "tete_to_itrs_mat"
      ]
    ]
  ],
  "gcrs_precession_mat": [
    [
      "astropy/coordinates/builtin_frames/intermediate_rotation_transforms.py",
      [
        "gcrs_precession_mat"
      ]
    ]
  ],
  "get_location_gcrs": [
    [
      "astropy/coordinates/builtin_frames/intermediate_rotation_transforms.py",
      [
        "get_location_gcrs"
      ]
    ]
  ],
  "gcrs_to_tete": [
    [
      "astropy/coordinates/builtin_frames/intermediate_rotation_transforms.py",
      [
        "gcrs_to_tete"
      ]
    ]
  ],
  "tete_to_gcrs": [
    [
      "astropy/coordinates/builtin_frames/intermediate_rotation_transforms.py",
      [
        "tete_to_gcrs"
      ]
    ]
  ],
  "tete_to_itrs": [
    [
      "astropy/coordinates/builtin_frames/intermediate_rotation_transforms.py",
      [
        "tete_to_itrs"
      ]
    ]
  ],
  "itrs_to_tete": [
    [
      "astropy/coordinates/builtin_frames/intermediate_rotation_transforms.py",
      [
        "itrs_to_tete"
      ]
    ]
  ],
  "gcrs_to_cirs": [
    [
      "astropy/coordinates/builtin_frames/intermediate_rotation_transforms.py",
      [
        "gcrs_to_cirs"
      ]
    ]
  ],
  "cirs_to_gcrs": [
    [
      "astropy/coordinates/builtin_frames/intermediate_rotation_transforms.py",
      [
        "cirs_to_gcrs"
      ]
    ]
  ],
  "cirs_to_itrs": [
    [
      "astropy/coordinates/builtin_frames/intermediate_rotation_transforms.py",
      [
        "cirs_to_itrs"
      ]
    ]
  ],
  "itrs_to_cirs": [
    [
      "astropy/coordinates/builtin_frames/intermediate_rotation_transforms.py",
      [
        "itrs_to_cirs"
      ]
    ]
  ],
  "gcrs_to_precessedgeo": [
    [
      "astropy/coordinates/builtin_frames/intermediate_rotation_transforms.py",
      [
        "gcrs_to_precessedgeo"
      ]
    ]
  ],
  "precessedgeo_to_gcrs": [
    [
      "astropy/coordinates/builtin_frames/intermediate_rotation_transforms.py",
      [
        "precessedgeo_to_gcrs"
      ]
    ]
  ],
  "teme_to_itrs": [
    [
      "astropy/coordinates/builtin_frames/intermediate_rotation_transforms.py",
      [
        "teme_to_itrs"
      ]
    ]
  ],
  "itrs_to_teme": [
    [
      "astropy/coordinates/builtin_frames/intermediate_rotation_transforms.py",
      [
        "itrs_to_teme"
      ]
    ]
  ],
  "earth_location": [
    [
      "astropy/coordinates/builtin_frames/itrs.py",
      [
        "ITRS",
        "earth_location"
      ]
    ]
  ],
  "icrs_to_lsr": [
    [
      "astropy/coordinates/builtin_frames/lsr.py",
      [
        "icrs_to_lsr"
      ]
    ],
    [
      "astropy/coordinates/tests/test_finite_difference_velocities.py",
      [
        "test_faux_lsr",
        "icrs_to_lsr"
      ]
    ]
  ],
  "lsr_to_icrs": [
    [
      "astropy/coordinates/builtin_frames/lsr.py",
      [
        "lsr_to_icrs"
      ]
    ],
    [
      "astropy/coordinates/tests/test_finite_difference_velocities.py",
      [
        "test_faux_lsr",
        "lsr_to_icrs"
      ]
    ]
  ],
  "galactic_to_galacticlsr": [
    [
      "astropy/coordinates/builtin_frames/lsr.py",
      [
        "galactic_to_galacticlsr"
      ]
    ]
  ],
  "galacticlsr_to_galactic": [
    [
      "astropy/coordinates/builtin_frames/lsr.py",
      [
        "galacticlsr_to_galactic"
      ]
    ]
  ],
  "icrs_to_lsrk": [
    [
      "astropy/coordinates/builtin_frames/lsr.py",
      [
        "icrs_to_lsrk"
      ]
    ]
  ],
  "lsrk_to_icrs": [
    [
      "astropy/coordinates/builtin_frames/lsr.py",
      [
        "lsrk_to_icrs"
      ]
    ]
  ],
  "icrs_to_lsrd": [
    [
      "astropy/coordinates/builtin_frames/lsr.py",
      [
        "icrs_to_lsrd"
      ]
    ]
  ],
  "lsrd_to_icrs": [
    [
      "astropy/coordinates/builtin_frames/lsr.py",
      [
        "lsrd_to_icrs"
      ]
    ]
  ],
  "skyoffset_to_skyoffset": [
    [
      "astropy/coordinates/builtin_frames/skyoffset.py",
      [
        "make_skyoffset_cls",
        "skyoffset_to_skyoffset"
      ]
    ]
  ],
  "reference_to_skyoffset": [
    [
      "astropy/coordinates/builtin_frames/skyoffset.py",
      [
        "make_skyoffset_cls",
        "reference_to_skyoffset"
      ]
    ]
  ],
  "skyoffset_to_reference": [
    [
      "astropy/coordinates/builtin_frames/skyoffset.py",
      [
        "make_skyoffset_cls",
        "skyoffset_to_reference"
      ]
    ]
  ],
  "make_skyoffset_cls": [
    [
      "astropy/coordinates/builtin_frames/skyoffset.py",
      [
        "make_skyoffset_cls"
      ]
    ]
  ],
  "_set_skyoffset_data_lon_wrap_angle": [
    [
      "astropy/coordinates/builtin_frames/skyoffset.py",
      [
        "SkyOffsetFrame",
        "_set_skyoffset_data_lon_wrap_angle"
      ]
    ]
  ],
  "gal_to_supergal": [
    [
      "astropy/coordinates/builtin_frames/supergalactic_transforms.py",
      [
        "gal_to_supergal"
      ]
    ]
  ],
  "supergal_to_gal": [
    [
      "astropy/coordinates/builtin_frames/supergalactic_transforms.py",
      [
        "supergal_to_gal"
      ]
    ]
  ],
  "get_polar_motion": [
    [
      "astropy/coordinates/builtin_frames/utils.py",
      [
        "get_polar_motion"
      ]
    ]
  ],
  "_warn_iers": [
    [
      "astropy/coordinates/builtin_frames/utils.py",
      [
        "_warn_iers"
      ]
    ]
  ],
  "get_dut1utc": [
    [
      "astropy/coordinates/builtin_frames/utils.py",
      [
        "get_dut1utc"
      ]
    ]
  ],
  "get_jd12": [
    [
      "astropy/coordinates/builtin_frames/utils.py",
      [
        "get_jd12"
      ]
    ]
  ],
  "norm": [
    [
      "astropy/coordinates/builtin_frames/utils.py",
      [
        "norm"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentation",
        "norm"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "CartesianRepresentation",
        "norm"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalRepresentation",
        "norm"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "RadialRepresentation",
        "norm"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "SphericalRepresentation",
        "norm"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "PhysicsSphericalRepresentation",
        "norm"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseDifferential",
        "norm"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "RadialDifferential",
        "norm"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "unitphysics",
        "UnitPhysicsSphericalRepresentation",
        "norm"
      ]
    ],
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "norm"
      ]
    ]
  ],
  "pav2pv": [
    [
      "astropy/coordinates/builtin_frames/utils.py",
      [
        "pav2pv"
      ]
    ]
  ],
  "get_cip": [
    [
      "astropy/coordinates/builtin_frames/utils.py",
      [
        "get_cip"
      ]
    ]
  ],
  "aticq": [
    [
      "astropy/coordinates/builtin_frames/utils.py",
      [
        "aticq"
      ]
    ]
  ],
  "atciqz": [
    [
      "astropy/coordinates/builtin_frames/utils.py",
      [
        "atciqz"
      ]
    ]
  ],
  "prepare_earth_position_vel": [
    [
      "astropy/coordinates/builtin_frames/utils.py",
      [
        "prepare_earth_position_vel"
      ]
    ]
  ],
  "get_offset_sun_from_barycenter": [
    [
      "astropy/coordinates/builtin_frames/utils.py",
      [
        "get_offset_sun_from_barycenter"
      ]
    ]
  ],
  "get_sign": [
    [
      "astropy/coordinates/calculation.py",
      [
        "get_sign"
      ]
    ]
  ],
  "_get_zodiac": [
    [
      "astropy/coordinates/calculation.py",
      [
        "_get_zodiac"
      ]
    ]
  ],
  "horoscope": [
    [
      "astropy/coordinates/calculation.py",
      [
        "horoscope"
      ]
    ]
  ],
  "inject_horoscope": [
    [
      "astropy/coordinates/calculation.py",
      [
        "inject_horoscope"
      ]
    ]
  ],
  "z": [
    [
      "astropy/coordinates/distances.py",
      [
        "Distance",
        "z"
      ]
    ],
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocation",
        "z"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "CylindricalRepresentation",
        "z"
      ]
    ]
  ],
  "compute_z": [
    [
      "astropy/coordinates/distances.py",
      [
        "Distance",
        "compute_z"
      ]
    ]
  ],
  "distmod": [
    [
      "astropy/coordinates/distances.py",
      [
        "Distance",
        "distmod"
      ]
    ],
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "distmod"
      ]
    ]
  ],
  "_distmod_to_pc": [
    [
      "astropy/coordinates/distances.py",
      [
        "Distance",
        "_distmod_to_pc"
      ]
    ]
  ],
  "parallax": [
    [
      "astropy/coordinates/distances.py",
      [
        "Distance",
        "parallax"
      ]
    ],
    [
      "astropy/units/equivalencies.py",
      [
        "parallax"
      ]
    ]
  ],
  "_check_ellipsoid": [
    [
      "astropy/coordinates/earth.py",
      [
        "_check_ellipsoid"
      ]
    ]
  ],
  "_get_json_result": [
    [
      "astropy/coordinates/earth.py",
      [
        "_get_json_result"
      ]
    ]
  ],
  "_construct_from_dict": [
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocationInfo",
        "_construct_from_dict"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "RepresentationInfo",
        "_construct_from_dict"
      ]
    ],
    [
      "astropy/table/ndarray_mixin.py",
      [
        "NdarrayMixinInfo",
        "_construct_from_dict"
      ]
    ],
    [
      "astropy/table/table_helpers.py",
      [
        "ArrayWrapperInfo",
        "_construct_from_dict"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeInfo",
        "_construct_from_dict"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeDeltaInfo",
        "_construct_from_dict"
      ]
    ],
    [
      "astropy/utils/data_info.py",
      [
        "DataInfo",
        "_construct_from_dict"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArrayInfo",
        "_construct_from_dict"
      ]
    ]
  ],
  "new_like": [
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocationInfo",
        "new_like"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferentialInfo",
        "new_like"
      ]
    ],
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoordInfo",
        "new_like"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "ColumnInfo",
        "new_like"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeInfo",
        "new_like"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeDeltaInfo",
        "new_like"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "QuantityInfo",
        "new_like"
      ]
    ]
  ],
  "from_geocentric": [
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocation",
        "from_geocentric"
      ]
    ]
  ],
  "from_geodetic": [
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocation",
        "from_geodetic"
      ]
    ]
  ],
  "of_site": [
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocation",
        "of_site"
      ]
    ]
  ],
  "of_address": [
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocation",
        "of_address"
      ]
    ]
  ],
  "get_site_names": [
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocation",
        "get_site_names"
      ]
    ]
  ],
  "_get_site_registry": [
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocation",
        "_get_site_registry"
      ]
    ]
  ],
  "ellipsoid": [
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocation",
        "ellipsoid"
      ]
    ],
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_render_model_3d",
        "ellipsoid"
      ]
    ],
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_custom_model_bounding_box",
        "ellipsoid"
      ]
    ]
  ],
  "ellipsoid_8": [
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocation",
        "ellipsoid_8"
      ]
    ]
  ],
  "geodetic": [
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocation",
        "geodetic"
      ]
    ]
  ],
  "to_geodetic": [
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocation",
        "to_geodetic"
      ]
    ]
  ],
  "lon": [
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocation",
        "lon"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalRepresentation",
        "lon"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "SphericalRepresentation",
        "lon"
      ]
    ]
  ],
  "lat": [
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocation",
        "lat"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalRepresentation",
        "lat"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "SphericalRepresentation",
        "lat"
      ]
    ]
  ],
  "height": [
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocation",
        "height"
      ]
    ],
    [
      "astropy/table/bst.py",
      [
        "BST",
        "height"
      ]
    ]
  ],
  "geocentric": [
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocation",
        "geocentric"
      ]
    ]
  ],
  "to_geocentric": [
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocation",
        "to_geocentric"
      ]
    ]
  ],
  "get_itrs": [
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocation",
        "get_itrs"
      ]
    ]
  ],
  "get_gcrs": [
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocation",
        "get_gcrs"
      ]
    ]
  ],
  "_get_gcrs_posvel": [
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocation",
        "_get_gcrs_posvel"
      ]
    ]
  ],
  "get_gcrs_posvel": [
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocation",
        "get_gcrs_posvel"
      ]
    ]
  ],
  "gravitational_redshift": [
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocation",
        "gravitational_redshift"
      ]
    ]
  ],
  "x": [
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocation",
        "x"
      ]
    ]
  ],
  "y": [
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocation",
        "y"
      ]
    ]
  ],
  "_to_value": [
    [
      "astropy/coordinates/earth.py",
      [
        "EarthLocation",
        "_to_value"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "_to_value"
      ]
    ]
  ],
  "to_cartesian": [
    [
      "astropy/coordinates/earth.py",
      [
        "BaseGeodeticRepresentation",
        "to_cartesian"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferential",
        "to_cartesian"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "CartesianRepresentation",
        "to_cartesian"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalRepresentation",
        "to_cartesian"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "RadialRepresentation",
        "to_cartesian"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "SphericalRepresentation",
        "to_cartesian"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "PhysicsSphericalRepresentation",
        "to_cartesian"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "CylindricalRepresentation",
        "to_cartesian"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseDifferential",
        "to_cartesian"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "CartesianDifferential",
        "to_cartesian"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalDifferential",
        "to_cartesian"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalCosLatDifferential",
        "to_cartesian"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "RadialDifferential",
        "to_cartesian"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "test_minimal_subclass",
        "LogDRepresentation",
        "to_cartesian"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "unitphysics",
        "UnitPhysicsSphericalRepresentation",
        "to_cartesian"
      ]
    ]
  ],
  "from_cartesian": [
    [
      "astropy/coordinates/earth.py",
      [
        "BaseGeodeticRepresentation",
        "from_cartesian"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferential",
        "from_cartesian"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "CartesianRepresentation",
        "from_cartesian"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalRepresentation",
        "from_cartesian"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "RadialRepresentation",
        "from_cartesian"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "SphericalRepresentation",
        "from_cartesian"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "PhysicsSphericalRepresentation",
        "from_cartesian"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "CylindricalRepresentation",
        "from_cartesian"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseDifferential",
        "from_cartesian"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "CartesianDifferential",
        "from_cartesian"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalDifferential",
        "from_cartesian"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalCosLatDifferential",
        "from_cartesian"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "RadialDifferential",
        "from_cartesian"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "test_minimal_subclass",
        "LogDRepresentation",
        "from_cartesian"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "unitphysics",
        "UnitPhysicsSphericalRepresentation",
        "from_cartesian"
      ]
    ]
  ],
  "eccentricity": [
    [
      "astropy/coordinates/earth_orientation.py",
      [
        "eccentricity"
      ]
    ]
  ],
  "mean_lon_of_perigee": [
    [
      "astropy/coordinates/earth_orientation.py",
      [
        "mean_lon_of_perigee"
      ]
    ]
  ],
  "obliquity": [
    [
      "astropy/coordinates/earth_orientation.py",
      [
        "obliquity"
      ]
    ]
  ],
  "precession_matrix_Capitaine": [
    [
      "astropy/coordinates/earth_orientation.py",
      [
        "precession_matrix_Capitaine"
      ]
    ]
  ],
  "_precess_from_J2000_Capitaine": [
    [
      "astropy/coordinates/earth_orientation.py",
      [
        "_precess_from_J2000_Capitaine"
      ]
    ]
  ],
  "_precession_matrix_besselian": [
    [
      "astropy/coordinates/earth_orientation.py",
      [
        "_precession_matrix_besselian"
      ]
    ]
  ],
  "_load_nutation_data": [
    [
      "astropy/coordinates/earth_orientation.py",
      [
        "_load_nutation_data"
      ]
    ]
  ],
  "nutation_components2000B": [
    [
      "astropy/coordinates/earth_orientation.py",
      [
        "nutation_components2000B"
      ]
    ]
  ],
  "nutation_matrix": [
    [
      "astropy/coordinates/earth_orientation.py",
      [
        "nutation_matrix"
      ]
    ]
  ],
  "apco": [
    [
      "astropy/coordinates/erfa_astrom.py",
      [
        "ErfaAstrom",
        "apco"
      ]
    ],
    [
      "astropy/coordinates/erfa_astrom.py",
      [
        "ErfaAstromInterpolator",
        "apco"
      ]
    ]
  ],
  "apcs": [
    [
      "astropy/coordinates/erfa_astrom.py",
      [
        "ErfaAstrom",
        "apcs"
      ]
    ],
    [
      "astropy/coordinates/erfa_astrom.py",
      [
        "ErfaAstromInterpolator",
        "apcs"
      ]
    ]
  ],
  "apio": [
    [
      "astropy/coordinates/erfa_astrom.py",
      [
        "ErfaAstrom",
        "apio"
      ]
    ]
  ],
  "_get_support_points": [
    [
      "astropy/coordinates/erfa_astrom.py",
      [
        "ErfaAstromInterpolator",
        "_get_support_points"
      ]
    ]
  ],
  "_prepare_earth_position_vel": [
    [
      "astropy/coordinates/erfa_astrom.py",
      [
        "ErfaAstromInterpolator",
        "_prepare_earth_position_vel"
      ]
    ]
  ],
  "_get_c2i": [
    [
      "astropy/coordinates/erfa_astrom.py",
      [
        "ErfaAstromInterpolator",
        "_get_c2i"
      ]
    ]
  ],
  "_get_cip": [
    [
      "astropy/coordinates/erfa_astrom.py",
      [
        "ErfaAstromInterpolator",
        "_get_cip"
      ]
    ]
  ],
  "_get_polar_motion": [
    [
      "astropy/coordinates/erfa_astrom.py",
      [
        "ErfaAstromInterpolator",
        "_get_polar_motion"
      ]
    ]
  ],
  "cartesian_to_spherical": [
    [
      "astropy/coordinates/funcs.py",
      [
        "cartesian_to_spherical"
      ]
    ]
  ],
  "spherical_to_cartesian": [
    [
      "astropy/coordinates/funcs.py",
      [
        "spherical_to_cartesian"
      ]
    ]
  ],
  "get_sun": [
    [
      "astropy/coordinates/funcs.py",
      [
        "get_sun"
      ]
    ]
  ],
  "get_constellation": [
    [
      "astropy/coordinates/funcs.py",
      [
        "get_constellation"
      ]
    ],
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "get_constellation"
      ]
    ]
  ],
  "_concatenate_components": [
    [
      "astropy/coordinates/funcs.py",
      [
        "_concatenate_components"
      ]
    ]
  ],
  "concatenate_representations": [
    [
      "astropy/coordinates/funcs.py",
      [
        "concatenate_representations"
      ]
    ]
  ],
  "concatenate": [
    [
      "astropy/coordinates/funcs.py",
      [
        "concatenate"
      ]
    ],
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "concatenate"
      ]
    ],
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "concatenate"
      ]
    ]
  ],
  "_sexagesimal": [
    [
      "astropy/coordinates/jparser.py",
      [
        "_sexagesimal"
      ]
    ]
  ],
  "search": [
    [
      "astropy/coordinates/jparser.py",
      [
        "search"
      ]
    ]
  ],
  "to_ra_dec_angles": [
    [
      "astropy/coordinates/jparser.py",
      [
        "to_ra_dec_angles"
      ]
    ]
  ],
  "to_skycoord": [
    [
      "astropy/coordinates/jparser.py",
      [
        "to_skycoord"
      ]
    ]
  ],
  "shorten": [
    [
      "astropy/coordinates/jparser.py",
      [
        "shorten"
      ]
    ]
  ],
  "match_coordinates_3d": [
    [
      "astropy/coordinates/matching.py",
      [
        "match_coordinates_3d"
      ]
    ]
  ],
  "match_coordinates_sky": [
    [
      "astropy/coordinates/matching.py",
      [
        "match_coordinates_sky"
      ]
    ]
  ],
  "search_around_3d": [
    [
      "astropy/coordinates/matching.py",
      [
        "search_around_3d"
      ]
    ],
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "search_around_3d"
      ]
    ]
  ],
  "search_around_sky": [
    [
      "astropy/coordinates/matching.py",
      [
        "search_around_sky"
      ]
    ],
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "search_around_sky"
      ]
    ]
  ],
  "_get_cartesian_kdtree": [
    [
      "astropy/coordinates/matching.py",
      [
        "_get_cartesian_kdtree"
      ]
    ]
  ],
  "matrix_product": [
    [
      "astropy/coordinates/matrix_utilities.py",
      [
        "matrix_product"
      ]
    ]
  ],
  "matrix_transpose": [
    [
      "astropy/coordinates/matrix_utilities.py",
      [
        "matrix_transpose"
      ]
    ]
  ],
  "rotation_matrix": [
    [
      "astropy/coordinates/matrix_utilities.py",
      [
        "rotation_matrix"
      ]
    ]
  ],
  "angle_axis": [
    [
      "astropy/coordinates/matrix_utilities.py",
      [
        "angle_axis"
      ]
    ]
  ],
  "is_O3": [
    [
      "astropy/coordinates/matrix_utilities.py",
      [
        "is_O3"
      ]
    ]
  ],
  "is_rotation": [
    [
      "astropy/coordinates/matrix_utilities.py",
      [
        "is_rotation"
      ]
    ]
  ],
  "_parse_response": [
    [
      "astropy/coordinates/name_resolve.py",
      [
        "_parse_response"
      ]
    ]
  ],
  "get_icrs_coordinates": [
    [
      "astropy/coordinates/name_resolve.py",
      [
        "get_icrs_coordinates"
      ]
    ]
  ],
  "calc_moon": [
    [
      "astropy/coordinates/orbital_elements.py",
      [
        "calc_moon"
      ]
    ]
  ],
  "_fqn_class": [
    [
      "astropy/coordinates/representation.py",
      [
        "_fqn_class"
      ]
    ]
  ],
  "get_reprdiff_cls_hash": [
    [
      "astropy/coordinates/representation.py",
      [
        "get_reprdiff_cls_hash"
      ]
    ]
  ],
  "_invalidate_reprdiff_cls_hash": [
    [
      "astropy/coordinates/representation.py",
      [
        "_invalidate_reprdiff_cls_hash"
      ]
    ]
  ],
  "_array2string": [
    [
      "astropy/coordinates/representation.py",
      [
        "_array2string"
      ]
    ],
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "_array2string"
      ]
    ]
  ],
  "default_format": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferentialInfo",
        "default_format"
      ]
    ],
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoordInfo",
        "default_format"
      ]
    ],
    [
      "astropy/table/mixins/dask.py",
      [
        "DaskInfo",
        "default_format"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "QuantityInfoBase",
        "default_format"
      ]
    ]
  ],
  "_represent_as_dict_attrs": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferentialInfo",
        "_represent_as_dict_attrs"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "RepresentationInfo",
        "_represent_as_dict_attrs"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeInfo",
        "_represent_as_dict_attrs"
      ]
    ]
  ],
  "unit": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferentialInfo",
        "unit"
      ]
    ],
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoordInfo",
        "unit"
      ]
    ],
    [
      "astropy/cosmology/parameter.py",
      [
        "Parameter",
        "unit"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Info",
        "unit"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "unit"
      ]
    ],
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "unit"
      ]
    ],
    [
      "astropy/nddata/ccddata.py",
      [
        "CCDData",
        "unit"
      ]
    ],
    [
      "astropy/nddata/compat.py",
      [
        "NDDataArray",
        "unit"
      ]
    ],
    [
      "astropy/nddata/nddata.py",
      [
        "NDData",
        "unit"
      ]
    ],
    [
      "astropy/nddata/nddata_base.py",
      [
        "NDDataBase",
        "unit"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "NDUncertainty",
        "unit"
      ]
    ],
    [
      "astropy/nddata/tests/test_nddata_base.py",
      [
        "MinimalSubclass",
        "unit"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "unit"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeInfo",
        "unit"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "unit"
      ]
    ]
  ],
  "get_name": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferential",
        "get_name"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "get_name"
      ]
    ]
  ],
  "components": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferential",
        "components"
      ]
    ]
  ],
  "shape_9": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferential",
        "shape_9"
      ]
    ]
  ],
  "_scale_operation": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferential",
        "_scale_operation"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentation",
        "_scale_operation"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalRepresentation",
        "_scale_operation"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "SphericalRepresentation",
        "_scale_operation"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "PhysicsSphericalRepresentation",
        "_scale_operation"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "CylindricalRepresentation",
        "_scale_operation"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseDifferential",
        "_scale_operation"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalDifferential",
        "_scale_operation"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "SphericalDifferential",
        "_scale_operation"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalCosLatDifferential",
        "_scale_operation"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "SphericalCosLatDifferential",
        "_scale_operation"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "PhysicsSphericalDifferential",
        "_scale_operation"
      ]
    ]
  ],
  "__truediv__": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferential",
        "__truediv__"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeDelta",
        "__truediv__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "__truediv__"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "__truediv__"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionQuantity",
        "__truediv__"
      ]
    ],
    [
      "astropy/units/function/logarithmic.py",
      [
        "LogQuantity",
        "__truediv__"
      ]
    ],
    [
      "astropy/units/physical.py",
      [
        "PhysicalType",
        "__truediv__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__truediv__"
      ]
    ],
    [
      "astropy/units/structured.py",
      [
        "StructuredUnit",
        "__truediv__"
      ]
    ]
  ],
  "__neg__": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferential",
        "__neg__"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalRepresentation",
        "__neg__"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeDelta",
        "__neg__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "__neg__"
      ]
    ],
    [
      "astropy/units/function/logarithmic.py",
      [
        "LogUnit",
        "__neg__"
      ]
    ]
  ],
  "__pos__": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferential",
        "__pos__"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "__pos__"
      ]
    ]
  ],
  "_combine_operation": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferential",
        "_combine_operation"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentation",
        "_combine_operation"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "CartesianRepresentation",
        "_combine_operation"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalRepresentation",
        "_combine_operation"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "RadialRepresentation",
        "_combine_operation"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseDifferential",
        "_combine_operation"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseSphericalDifferential",
        "_combine_operation"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseSphericalCosLatDifferential",
        "_combine_operation"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "RadialDifferential",
        "_combine_operation"
      ]
    ]
  ],
  "__radd__": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferential",
        "__radd__"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "ColDefs",
        "__radd__"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "Time",
        "__radd__"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeDelta",
        "__radd__"
      ]
    ],
    [
      "astropy/units/function/logarithmic.py",
      [
        "LogUnit",
        "__radd__"
      ]
    ],
    [
      "astropy/units/function/logarithmic.py",
      [
        "LogQuantity",
        "__radd__"
      ]
    ]
  ],
  "__rsub__": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferential",
        "__rsub__"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeDelta",
        "__rsub__"
      ]
    ],
    [
      "astropy/units/function/logarithmic.py",
      [
        "LogUnit",
        "__rsub__"
      ]
    ],
    [
      "astropy/units/function/logarithmic.py",
      [
        "LogQuantity",
        "__rsub__"
      ]
    ]
  ],
  "_values": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferential",
        "_values"
      ]
    ]
  ],
  "_units": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferential",
        "_units"
      ]
    ],
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "_units"
      ]
    ],
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_units"
      ]
    ]
  ],
  "_unitstr": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentationOrDifferential",
        "_unitstr"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "_unitstr"
      ]
    ]
  ],
  "_make_getter": [
    [
      "astropy/coordinates/representation.py",
      [
        "_make_getter"
      ]
    ]
  ],
  "_represent_as_dict": [
    [
      "astropy/coordinates/representation.py",
      [
        "RepresentationInfo",
        "_represent_as_dict"
      ]
    ],
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoordInfo",
        "_represent_as_dict"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "MaskedColumnInfo",
        "_represent_as_dict"
      ]
    ],
    [
      "astropy/table/ndarray_mixin.py",
      [
        "NdarrayMixinInfo",
        "_represent_as_dict"
      ]
    ],
    [
      "astropy/table/table_helpers.py",
      [
        "ArrayWrapperInfo",
        "_represent_as_dict"
      ]
    ],
    [
      "astropy/utils/data_info.py",
      [
        "DataInfo",
        "_represent_as_dict"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArrayInfo",
        "_represent_as_dict"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedArraySubclassInfo",
        "_represent_as_dict"
      ]
    ]
  ],
  "_validate_differentials": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentation",
        "_validate_differentials"
      ]
    ]
  ],
  "_raise_if_has_differentials": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentation",
        "_raise_if_has_differentials"
      ]
    ]
  ],
  "_compatible_differentials": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentation",
        "_compatible_differentials"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalRepresentation",
        "_compatible_differentials"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "SphericalRepresentation",
        "_compatible_differentials"
      ]
    ]
  ],
  "differentials": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentation",
        "differentials"
      ]
    ]
  ],
  "unit_vectors": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentation",
        "unit_vectors"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "CartesianRepresentation",
        "unit_vectors"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalRepresentation",
        "unit_vectors"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "RadialRepresentation",
        "unit_vectors"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "SphericalRepresentation",
        "unit_vectors"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "PhysicsSphericalRepresentation",
        "unit_vectors"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "CylindricalRepresentation",
        "unit_vectors"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "unitphysics",
        "UnitPhysicsSphericalRepresentation",
        "unit_vectors"
      ]
    ]
  ],
  "scale_factors": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentation",
        "scale_factors"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "CartesianRepresentation",
        "scale_factors"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalRepresentation",
        "scale_factors"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "RadialRepresentation",
        "scale_factors"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "SphericalRepresentation",
        "scale_factors"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "PhysicsSphericalRepresentation",
        "scale_factors"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "CylindricalRepresentation",
        "scale_factors"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "unitphysics",
        "UnitPhysicsSphericalRepresentation",
        "scale_factors"
      ]
    ]
  ],
  "_re_represent_differentials": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentation",
        "_re_represent_differentials"
      ]
    ]
  ],
  "transform": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentation",
        "transform"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "CartesianRepresentation",
        "transform"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalRepresentation",
        "transform"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "RadialRepresentation",
        "transform"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "SphericalRepresentation",
        "transform"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "PhysicsSphericalRepresentation",
        "transform"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseDifferential",
        "transform"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "CartesianDifferential",
        "transform"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalDifferential",
        "transform"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalCosLatDifferential",
        "transform"
      ]
    ],
    [
      "astropy/coordinates/transformations.py",
      [
        "TransformGraph",
        "transform"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "BaseFrame",
        "transform"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/tests/test_transform_coord_meta.py",
      [
        "DistanceToLonLat",
        "transform"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/tests/test_transform_coord_meta.py",
      [
        "LonLatToDistance",
        "transform"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/transforms.py",
      [
        "CurvedTransform",
        "transform"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/transforms.py",
      [
        "CoordinateTransform",
        "transform"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/transforms.py",
      [
        "World2PixelTransform",
        "transform"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/transforms.py",
      [
        "Pixel2WorldTransform",
        "transform"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/wcsapi.py",
      [
        "WCSWorld2PixelTransform",
        "transform"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/wcsapi.py",
      [
        "WCSPixel2WorldTransform",
        "transform"
      ]
    ]
  ],
  "with_differentials": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentation",
        "with_differentials"
      ]
    ]
  ],
  "without_differentials": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentation",
        "without_differentials"
      ]
    ]
  ],
  "from_representation": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentation",
        "from_representation"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseDifferential",
        "from_representation"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalDifferential",
        "from_representation"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "SphericalDifferential",
        "from_representation"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalCosLatDifferential",
        "from_representation"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "SphericalCosLatDifferential",
        "from_representation"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "RadialDifferential",
        "from_representation"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "PhysicsSphericalDifferential",
        "from_representation"
      ]
    ]
  ],
  "mean": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentation",
        "mean"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "CartesianRepresentation",
        "mean"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalRepresentation",
        "mean"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "mean"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "mean"
      ]
    ]
  ],
  "sum": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentation",
        "sum"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "CartesianRepresentation",
        "sum"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalRepresentation",
        "sum"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionQuantity",
        "sum"
      ]
    ]
  ],
  "dot": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentation",
        "dot"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "CartesianRepresentation",
        "dot"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "dot"
      ]
    ]
  ],
  "cross": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseRepresentation",
        "cross"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "CartesianRepresentation",
        "cross"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalRepresentation",
        "cross"
      ]
    ]
  ],
  "get_xyz": [
    [
      "astropy/coordinates/representation.py",
      [
        "CartesianRepresentation",
        "get_xyz"
      ]
    ]
  ],
  "_dimensional_representation": [
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalRepresentation",
        "_dimensional_representation"
      ]
    ]
  ],
  "distance": [
    [
      "astropy/coordinates/representation.py",
      [
        "RadialRepresentation",
        "distance"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "SphericalRepresentation",
        "distance"
      ]
    ]
  ],
  "_spherical_op_funcs": [
    [
      "astropy/coordinates/representation.py",
      [
        "_spherical_op_funcs"
      ]
    ]
  ],
  "phi": [
    [
      "astropy/coordinates/representation.py",
      [
        "PhysicsSphericalRepresentation",
        "phi"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "CylindricalRepresentation",
        "phi"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "unitphysics",
        "UnitPhysicsSphericalRepresentation",
        "phi"
      ]
    ]
  ],
  "theta": [
    [
      "astropy/coordinates/representation.py",
      [
        "PhysicsSphericalRepresentation",
        "theta"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "unitphysics",
        "UnitPhysicsSphericalRepresentation",
        "theta"
      ]
    ]
  ],
  "r": [
    [
      "astropy/coordinates/representation.py",
      [
        "PhysicsSphericalRepresentation",
        "r"
      ]
    ]
  ],
  "rho": [
    [
      "astropy/coordinates/representation.py",
      [
        "CylindricalRepresentation",
        "rho"
      ]
    ]
  ],
  "_check_base": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseDifferential",
        "_check_base"
      ]
    ]
  ],
  "_get_deriv_key": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseDifferential",
        "_get_deriv_key"
      ]
    ]
  ],
  "_get_base_vectors": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseDifferential",
        "_get_base_vectors"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "BaseSphericalCosLatDifferential",
        "_get_base_vectors"
      ]
    ]
  ],
  "get_d_xyz": [
    [
      "astropy/coordinates/representation.py",
      [
        "CartesianDifferential",
        "get_d_xyz"
      ]
    ]
  ],
  "_d_lon_coslat": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseSphericalDifferential",
        "_d_lon_coslat"
      ]
    ]
  ],
  "_get_d_lon": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseSphericalDifferential",
        "_get_d_lon"
      ]
    ]
  ],
  "_dimensional_differential": [
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalDifferential",
        "_dimensional_differential"
      ]
    ],
    [
      "astropy/coordinates/representation.py",
      [
        "UnitSphericalCosLatDifferential",
        "_dimensional_differential"
      ]
    ]
  ],
  "_d_lon": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseSphericalCosLatDifferential",
        "_d_lon"
      ]
    ]
  ],
  "_get_d_lon_coslat": [
    [
      "astropy/coordinates/representation.py",
      [
        "BaseSphericalCosLatDifferential",
        "_get_d_lon_coslat"
      ]
    ]
  ],
  "__contains__": [
    [
      "astropy/coordinates/sites.py",
      [
        "SiteRegistry",
        "__contains__"
      ]
    ],
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "__contains__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "__contains__"
      ]
    ],
    [
      "astropy/io/votable/validator/result.py",
      [
        "Result",
        "__contains__"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "ModelBoundingBox",
        "__contains__"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "CompoundBoundingBox",
        "__contains__"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/coordinates_map.py",
      [
        "CoordinatesMap",
        "__contains__"
      ]
    ]
  ],
  "names": [
    [
      "astropy/coordinates/sites.py",
      [
        "SiteRegistry",
        "names"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "ColDefs",
        "names"
      ]
    ],
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "names"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "names"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "NamedUnit",
        "names"
      ]
    ]
  ],
  "add_site": [
    [
      "astropy/coordinates/sites.py",
      [
        "SiteRegistry",
        "add_site"
      ]
    ]
  ],
  "from_json": [
    [
      "astropy/coordinates/sites.py",
      [
        "SiteRegistry",
        "from_json"
      ]
    ]
  ],
  "get_builtin_sites": [
    [
      "astropy/coordinates/sites.py",
      [
        "get_builtin_sites"
      ]
    ]
  ],
  "get_downloaded_sites": [
    [
      "astropy/coordinates/sites.py",
      [
        "get_downloaded_sites"
      ]
    ]
  ],
  "_repr_data": [
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoordInfo",
        "_repr_data"
      ]
    ]
  ],
  "frame": [
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "frame"
      ]
    ]
  ],
  "representation_type": [
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "representation_type"
      ]
    ]
  ],
  "representation_type_2": [
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "representation_type_2"
      ]
    ]
  ],
  "representation": [
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "representation"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_representation.py",
      [
        "representation"
      ]
    ]
  ],
  "representation_4": [
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "representation_4"
      ]
    ]
  ],
  "insert": [
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "insert"
      ]
    ],
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHeader",
        "insert"
      ]
    ],
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "insert"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "insert"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "Column",
        "insert"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "MaskedColumn",
        "insert"
      ]
    ],
    [
      "astropy/table/mixins/dask.py",
      [
        "DaskColumn",
        "insert"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "insert"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "insert"
      ]
    ],
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "insert"
      ]
    ],
    [
      "astropy/utils/collections.py",
      [
        "HomogeneousList",
        "insert"
      ]
    ],
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "insert"
      ]
    ]
  ],
  "apply_space_motion": [
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "apply_space_motion"
      ]
    ]
  ],
  "_is_name": [
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "_is_name"
      ]
    ]
  ],
  "__delattr__": [
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "__delattr__"
      ]
    ],
    [
      "astropy/nddata/bitmask.py",
      [
        "BitFlagNameMeta",
        "__delattr__"
      ]
    ]
  ],
  "to_table": [
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "to_table"
      ]
    ],
    [
      "astropy/cosmology/io/table.py",
      [
        "to_table"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "to_table"
      ]
    ]
  ],
  "spherical_offsets_to": [
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "spherical_offsets_to"
      ]
    ]
  ],
  "spherical_offsets_by": [
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "spherical_offsets_by"
      ]
    ]
  ],
  "directional_offset_by": [
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "directional_offset_by"
      ]
    ]
  ],
  "match_to_catalog_sky": [
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "match_to_catalog_sky"
      ]
    ]
  ],
  "match_to_catalog_3d": [
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "match_to_catalog_3d"
      ]
    ]
  ],
  "skyoffset_frame": [
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "skyoffset_frame"
      ]
    ]
  ],
  "to_pixel": [
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "to_pixel"
      ]
    ]
  ],
  "from_pixel": [
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "from_pixel"
      ]
    ]
  ],
  "contained_by": [
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "contained_by"
      ]
    ]
  ],
  "radial_velocity_correction": [
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "radial_velocity_correction"
      ]
    ]
  ],
  "guess_from_table": [
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "guess_from_table"
      ]
    ]
  ],
  "from_name": [
    [
      "astropy/coordinates/sky_coordinate.py",
      [
        "SkyCoord",
        "from_name"
      ]
    ]
  ],
  "_get_frame_class": [
    [
      "astropy/coordinates/sky_coordinate_parsers.py",
      [
        "_get_frame_class"
      ]
    ]
  ],
  "_get_frame_without_data": [
    [
      "astropy/coordinates/sky_coordinate_parsers.py",
      [
        "_get_frame_without_data"
      ]
    ]
  ],
  "_parse_coordinate_data": [
    [
      "astropy/coordinates/sky_coordinate_parsers.py",
      [
        "_parse_coordinate_data"
      ]
    ]
  ],
  "_get_representation_component_units": [
    [
      "astropy/coordinates/sky_coordinate_parsers.py",
      [
        "_get_representation_component_units"
      ]
    ]
  ],
  "_parse_coordinate_arg": [
    [
      "astropy/coordinates/sky_coordinate_parsers.py",
      [
        "_parse_coordinate_arg"
      ]
    ]
  ],
  "_get_representation_attrs": [
    [
      "astropy/coordinates/sky_coordinate_parsers.py",
      [
        "_get_representation_attrs"
      ]
    ]
  ],
  "_parse_ra_dec": [
    [
      "astropy/coordinates/sky_coordinate_parsers.py",
      [
        "_parse_ra_dec"
      ]
    ]
  ],
  "get_kernel": [
    [
      "astropy/coordinates/solar_system.py",
      [
        "solar_system_ephemeris",
        "get_kernel"
      ]
    ]
  ],
  "kernel": [
    [
      "astropy/coordinates/solar_system.py",
      [
        "solar_system_ephemeris",
        "kernel"
      ]
    ]
  ],
  "bodies": [
    [
      "astropy/coordinates/solar_system.py",
      [
        "solar_system_ephemeris",
        "bodies"
      ]
    ]
  ],
  "_get_kernel": [
    [
      "astropy/coordinates/solar_system.py",
      [
        "_get_kernel"
      ]
    ]
  ],
  "_get_body_barycentric_posvel": [
    [
      "astropy/coordinates/solar_system.py",
      [
        "_get_body_barycentric_posvel"
      ]
    ]
  ],
  "get_body_barycentric_posvel": [
    [
      "astropy/coordinates/solar_system.py",
      [
        "get_body_barycentric_posvel"
      ]
    ]
  ],
  "get_body_barycentric": [
    [
      "astropy/coordinates/solar_system.py",
      [
        "get_body_barycentric"
      ]
    ]
  ],
  "_get_apparent_body_position": [
    [
      "astropy/coordinates/solar_system.py",
      [
        "_get_apparent_body_position"
      ]
    ]
  ],
  "get_body": [
    [
      "astropy/coordinates/solar_system.py",
      [
        "get_body"
      ]
    ]
  ],
  "get_moon": [
    [
      "astropy/coordinates/solar_system.py",
      [
        "get_moon"
      ]
    ]
  ],
  "_apparent_position_in_true_coordinates": [
    [
      "astropy/coordinates/solar_system.py",
      [
        "_apparent_position_in_true_coordinates"
      ]
    ]
  ],
  "_apply_relativistic_doppler_shift": [
    [
      "astropy/coordinates/spectral_coordinate.py",
      [
        "_apply_relativistic_doppler_shift"
      ]
    ]
  ],
  "update_differentials_to_match": [
    [
      "astropy/coordinates/spectral_coordinate.py",
      [
        "update_differentials_to_match"
      ]
    ]
  ],
  "attach_zero_velocities": [
    [
      "astropy/coordinates/spectral_coordinate.py",
      [
        "attach_zero_velocities"
      ]
    ]
  ],
  "_get_velocities": [
    [
      "astropy/coordinates/spectral_coordinate.py",
      [
        "_get_velocities"
      ]
    ]
  ],
  "_validate_coordinate": [
    [
      "astropy/coordinates/spectral_coordinate.py",
      [
        "SpectralCoord",
        "_validate_coordinate"
      ]
    ]
  ],
  "quantity": [
    [
      "astropy/coordinates/spectral_coordinate.py",
      [
        "SpectralCoord",
        "quantity"
      ]
    ],
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "quantity"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "NDUncertainty",
        "quantity"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "quantity"
      ]
    ]
  ],
  "observer": [
    [
      "astropy/coordinates/spectral_coordinate.py",
      [
        "SpectralCoord",
        "observer"
      ]
    ],
    [
      "astropy/coordinates/tests/test_spectral_coordinate.py",
      [
        "observer"
      ]
    ]
  ],
  "observer_6": [
    [
      "astropy/coordinates/spectral_coordinate.py",
      [
        "SpectralCoord",
        "observer_6"
      ]
    ]
  ],
  "target": [
    [
      "astropy/coordinates/spectral_coordinate.py",
      [
        "SpectralCoord",
        "target"
      ]
    ],
    [
      "astropy/coordinates/tests/test_spectral_coordinate.py",
      [
        "target"
      ]
    ]
  ],
  "target_8": [
    [
      "astropy/coordinates/spectral_coordinate.py",
      [
        "SpectralCoord",
        "target_8"
      ]
    ]
  ],
  "redshift": [
    [
      "astropy/coordinates/spectral_coordinate.py",
      [
        "SpectralCoord",
        "redshift"
      ]
    ]
  ],
  "_calculate_radial_velocity": [
    [
      "astropy/coordinates/spectral_coordinate.py",
      [
        "SpectralCoord",
        "_calculate_radial_velocity"
      ]
    ]
  ],
  "_normalized_position_vector": [
    [
      "astropy/coordinates/spectral_coordinate.py",
      [
        "SpectralCoord",
        "_normalized_position_vector"
      ]
    ]
  ],
  "with_observer_stationary_relative_to": [
    [
      "astropy/coordinates/spectral_coordinate.py",
      [
        "SpectralCoord",
        "with_observer_stationary_relative_to"
      ]
    ]
  ],
  "with_radial_velocity_shift": [
    [
      "astropy/coordinates/spectral_coordinate.py",
      [
        "SpectralCoord",
        "with_radial_velocity_shift"
      ]
    ]
  ],
  "to_rest": [
    [
      "astropy/coordinates/spectral_coordinate.py",
      [
        "SpectralCoord",
        "to_rest"
      ]
    ]
  ],
  "doppler_rest": [
    [
      "astropy/coordinates/spectral_quantity.py",
      [
        "SpectralQuantity",
        "doppler_rest"
      ]
    ]
  ],
  "doppler_rest_5": [
    [
      "astropy/coordinates/spectral_quantity.py",
      [
        "SpectralQuantity",
        "doppler_rest_5"
      ]
    ]
  ],
  "doppler_convention": [
    [
      "astropy/coordinates/spectral_quantity.py",
      [
        "SpectralQuantity",
        "doppler_convention"
      ]
    ]
  ],
  "doppler_convention_7": [
    [
      "astropy/coordinates/spectral_quantity.py",
      [
        "SpectralQuantity",
        "doppler_convention_7"
      ]
    ]
  ],
  "to": [
    [
      "astropy/coordinates/spectral_quantity.py",
      [
        "SpectralQuantity",
        "to"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "to"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeDelta",
        "to"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "to"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "to"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "to"
      ]
    ],
    [
      "astropy/units/structured.py",
      [
        "StructuredUnit",
        "to"
      ]
    ],
    [
      "astropy/units/tests/test_quantity.py",
      [
        "QuantityMimic2",
        "to"
      ]
    ]
  ],
  "to_value": [
    [
      "astropy/coordinates/spectral_quantity.py",
      [
        "SpectralQuantity",
        "to_value"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "to_value"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeDelta",
        "to_value"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeFormat",
        "to_value"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeNumeric",
        "to_value"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeMJD",
        "to_value"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeDecimalYear",
        "to_value"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeFromEpoch",
        "to_value"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeDatetime",
        "to_value"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeEpochDate",
        "to_value"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeDeltaNumeric",
        "to_value"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "to_value"
      ]
    ],
    [
      "astropy/units/tests/test_quantity.py",
      [
        "QuantityMimic2",
        "to_value"
      ]
    ]
  ],
  "ref_fk4_no_e_fk4": [
    [
      "astropy/coordinates/tests/accuracy/generate_ref_ast.py",
      [
        "ref_fk4_no_e_fk4"
      ]
    ]
  ],
  "ref_fk4_no_e_fk5": [
    [
      "astropy/coordinates/tests/accuracy/generate_ref_ast.py",
      [
        "ref_fk4_no_e_fk5"
      ]
    ]
  ],
  "ref_galactic_fk4": [
    [
      "astropy/coordinates/tests/accuracy/generate_ref_ast.py",
      [
        "ref_galactic_fk4"
      ]
    ]
  ],
  "ref_icrs_fk5": [
    [
      "astropy/coordinates/tests/accuracy/generate_ref_ast.py",
      [
        "ref_icrs_fk5"
      ]
    ]
  ],
  "test_against_hor2eq": [
    [
      "astropy/coordinates/tests/accuracy/test_altaz_icrs.py",
      [
        "test_against_hor2eq"
      ]
    ]
  ],
  "run_pyephem": [
    [
      "astropy/coordinates/tests/accuracy/test_altaz_icrs.py",
      [
        "run_pyephem"
      ]
    ]
  ],
  "test_against_pyephem": [
    [
      "astropy/coordinates/tests/accuracy/test_altaz_icrs.py",
      [
        "test_against_pyephem"
      ]
    ]
  ],
  "test_against_jpl_horizons": [
    [
      "astropy/coordinates/tests/accuracy/test_altaz_icrs.py",
      [
        "test_against_jpl_horizons"
      ]
    ]
  ],
  "test_fk5_equinox_and_epoch_j2000_0_to_topocentric_observed": [
    [
      "astropy/coordinates/tests/accuracy/test_altaz_icrs.py",
      [
        "test_fk5_equinox_and_epoch_j2000_0_to_topocentric_observed"
      ]
    ]
  ],
  "test_against_pytpm_doc_example": [
    [
      "astropy/coordinates/tests/accuracy/test_ecliptic.py",
      [
        "test_against_pytpm_doc_example"
      ]
    ]
  ],
  "test_ecliptic_heliobary": [
    [
      "astropy/coordinates/tests/accuracy/test_ecliptic.py",
      [
        "test_ecliptic_heliobary"
      ]
    ]
  ],
  "test_ecliptic_roundtrips": [
    [
      "astropy/coordinates/tests/accuracy/test_ecliptic.py",
      [
        "test_ecliptic_roundtrips"
      ]
    ]
  ],
  "test_ecliptic_true_mean_preserve_latitude": [
    [
      "astropy/coordinates/tests/accuracy/test_ecliptic.py",
      [
        "test_ecliptic_true_mean_preserve_latitude"
      ]
    ]
  ],
  "test_helioecliptic_induced_velocity": [
    [
      "astropy/coordinates/tests/accuracy/test_ecliptic.py",
      [
        "test_helioecliptic_induced_velocity"
      ]
    ]
  ],
  "test_ecl_geo": [
    [
      "astropy/coordinates/tests/accuracy/test_ecliptic.py",
      [
        "test_ecl_geo"
      ]
    ]
  ],
  "test_arraytransforms": [
    [
      "astropy/coordinates/tests/accuracy/test_ecliptic.py",
      [
        "test_arraytransforms"
      ]
    ]
  ],
  "test_roundtrip_scalar": [
    [
      "astropy/coordinates/tests/accuracy/test_ecliptic.py",
      [
        "test_roundtrip_scalar"
      ]
    ]
  ],
  "test_loopback_obstime": [
    [
      "astropy/coordinates/tests/accuracy/test_ecliptic.py",
      [
        "test_loopback_obstime"
      ]
    ]
  ],
  "test_loopback_equinox": [
    [
      "astropy/coordinates/tests/accuracy/test_ecliptic.py",
      [
        "test_loopback_equinox"
      ]
    ]
  ],
  "test_loopback_obliquity": [
    [
      "astropy/coordinates/tests/accuracy/test_ecliptic.py",
      [
        "test_loopback_obliquity"
      ]
    ]
  ],
  "test_fk4_no_e_fk4": [
    [
      "astropy/coordinates/tests/accuracy/test_fk4_no_e_fk4.py",
      [
        "test_fk4_no_e_fk4"
      ]
    ]
  ],
  "test_fk4_no_e_fk5": [
    [
      "astropy/coordinates/tests/accuracy/test_fk4_no_e_fk5.py",
      [
        "test_fk4_no_e_fk5"
      ]
    ]
  ],
  "test_galactic_fk4": [
    [
      "astropy/coordinates/tests/accuracy/test_galactic_fk4.py",
      [
        "test_galactic_fk4"
      ]
    ]
  ],
  "test_icrs_fk5": [
    [
      "astropy/coordinates/tests/accuracy/test_icrs_fk5.py",
      [
        "test_icrs_fk5"
      ]
    ]
  ],
  "skycoord_equal": [
    [
      "astropy/coordinates/tests/helper.py",
      [
        "skycoord_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/helpers.py",
      [
        "skycoord_equal"
      ]
    ]
  ],
  "test_golden_spiral_grid_input": [
    [
      "astropy/coordinates/tests/test_angle_generators.py",
      [
        "test_golden_spiral_grid_input"
      ]
    ]
  ],
  "test_uniform_spherical_random_input": [
    [
      "astropy/coordinates/tests/test_angle_generators.py",
      [
        "test_uniform_spherical_random_input"
      ]
    ]
  ],
  "test_uniform_spherical_random_volume_input": [
    [
      "astropy/coordinates/tests/test_angle_generators.py",
      [
        "test_uniform_spherical_random_volume_input"
      ]
    ]
  ],
  "test_create_angles": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_create_angles"
      ]
    ]
  ],
  "test_angle_from_view": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_angle_from_view"
      ]
    ]
  ],
  "test_angle_ops": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_angle_ops"
      ]
    ]
  ],
  "test_angle_methods": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_angle_methods"
      ]
    ]
  ],
  "test_angle_convert": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_angle_convert"
      ]
    ]
  ],
  "test_angle_formatting": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_angle_formatting"
      ]
    ]
  ],
  "test_to_string_vector": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_to_string_vector"
      ]
    ]
  ],
  "test_angle_format_roundtripping": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_angle_format_roundtripping"
      ]
    ]
  ],
  "test_radec": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_radec"
      ]
    ]
  ],
  "test_negative_zero_dms": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_negative_zero_dms"
      ]
    ]
  ],
  "test_negative_zero_dm": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_negative_zero_dm"
      ]
    ]
  ],
  "test_negative_zero_hms": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_negative_zero_hms"
      ]
    ]
  ],
  "test_negative_zero_hm": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_negative_zero_hm"
      ]
    ]
  ],
  "test_negative_sixty_hm": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_negative_sixty_hm"
      ]
    ]
  ],
  "test_plus_sixty_hm": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_plus_sixty_hm"
      ]
    ]
  ],
  "test_negative_fifty_nine_sixty_dms": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_negative_fifty_nine_sixty_dms"
      ]
    ]
  ],
  "test_plus_fifty_nine_sixty_dms": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_plus_fifty_nine_sixty_dms"
      ]
    ]
  ],
  "test_negative_sixty_dms": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_negative_sixty_dms"
      ]
    ]
  ],
  "test_plus_sixty_dms": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_plus_sixty_dms"
      ]
    ]
  ],
  "test_angle_to_is_angle": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_angle_to_is_angle"
      ]
    ]
  ],
  "test_angle_to_quantity": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_angle_to_quantity"
      ]
    ]
  ],
  "test_quantity_to_angle": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_quantity_to_angle"
      ]
    ]
  ],
  "test_angle_string": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_angle_string"
      ]
    ]
  ],
  "test_angle_repr": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_angle_repr"
      ]
    ]
  ],
  "test_large_angle_representation": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_large_angle_representation"
      ]
    ]
  ],
  "test_wrap_at_inplace": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_wrap_at_inplace"
      ]
    ]
  ],
  "test_latitude": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_latitude"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_angle.py",
      [
        "test_latitude"
      ]
    ]
  ],
  "test_longitude": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_longitude"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_angle.py",
      [
        "test_longitude"
      ]
    ]
  ],
  "test_wrap_at": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_wrap_at"
      ]
    ]
  ],
  "test_is_within_bounds": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_is_within_bounds"
      ]
    ]
  ],
  "test_angle_mismatched_unit": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_angle_mismatched_unit"
      ]
    ]
  ],
  "test_regression_formatting_negative": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_regression_formatting_negative"
      ]
    ]
  ],
  "test_regression_formatting_default_precision": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_regression_formatting_default_precision"
      ]
    ]
  ],
  "test_empty_sep": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_empty_sep"
      ]
    ]
  ],
  "test_create_tuple": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_create_tuple"
      ]
    ]
  ],
  "test_list_of_quantities": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_list_of_quantities"
      ]
    ]
  ],
  "test_multiply_divide": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_multiply_divide"
      ]
    ]
  ],
  "test_mixed_string_and_quantity": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_mixed_string_and_quantity"
      ]
    ]
  ],
  "test_array_angle_tostring": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_array_angle_tostring"
      ]
    ]
  ],
  "test_wrap_at_without_new": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_wrap_at_without_new"
      ]
    ]
  ],
  "test__str__": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test__str__"
      ]
    ]
  ],
  "test_repr_latex": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_repr_latex"
      ]
    ],
    [
      "astropy/coordinates/tests/test_earth.py",
      [
        "test_repr_latex"
      ]
    ],
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityDisplay",
        "test_repr_latex"
      ]
    ],
    [
      "astropy/units/tests/test_units.py",
      [
        "test_repr_latex"
      ]
    ]
  ],
  "test_angle_with_cds_units_enabled": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_angle_with_cds_units_enabled"
      ]
    ]
  ],
  "test_longitude_nan": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_longitude_nan"
      ]
    ]
  ],
  "test_latitude_nan": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_latitude_nan"
      ]
    ]
  ],
  "test_angle_wrap_at_nan": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_angle_wrap_at_nan"
      ]
    ]
  ],
  "test_angle_multithreading": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_angle_multithreading"
      ]
    ]
  ],
  "test_str_repr_angles_nan": [
    [
      "astropy/coordinates/tests/test_angles.py",
      [
        "test_str_repr_angles_nan"
      ]
    ]
  ],
  "test_angsep": [
    [
      "astropy/coordinates/tests/test_angular_separation.py",
      [
        "test_angsep"
      ]
    ]
  ],
  "test_fk5_seps": [
    [
      "astropy/coordinates/tests/test_angular_separation.py",
      [
        "test_fk5_seps"
      ]
    ]
  ],
  "test_proj_separations": [
    [
      "astropy/coordinates/tests/test_angular_separation.py",
      [
        "test_proj_separations"
      ]
    ]
  ],
  "test_3d_separations": [
    [
      "astropy/coordinates/tests/test_angular_separation.py",
      [
        "test_3d_separations"
      ]
    ]
  ],
  "test_representations_api": [
    [
      "astropy/coordinates/tests/test_api_ape5.py",
      [
        "test_representations_api"
      ]
    ]
  ],
  "test_frame_api": [
    [
      "astropy/coordinates/tests/test_api_ape5.py",
      [
        "test_frame_api"
      ]
    ]
  ],
  "new_to_fk5": [
    [
      "astropy/coordinates/tests/test_api_ape5.py",
      [
        "test_transform_api",
        "new_to_fk5"
      ]
    ]
  ],
  "test_transform_api": [
    [
      "astropy/coordinates/tests/test_api_ape5.py",
      [
        "test_transform_api"
      ]
    ]
  ],
  "test_highlevel_api": [
    [
      "astropy/coordinates/tests/test_api_ape5.py",
      [
        "test_highlevel_api"
      ]
    ]
  ],
  "test_highlevel_api_remote": [
    [
      "astropy/coordinates/tests/test_api_ape5.py",
      [
        "test_highlevel_api_remote"
      ]
    ]
  ],
  "test_angle_arrays": [
    [
      "astropy/coordinates/tests/test_arrays.py",
      [
        "test_angle_arrays"
      ]
    ]
  ],
  "test_dms": [
    [
      "astropy/coordinates/tests/test_arrays.py",
      [
        "test_dms"
      ]
    ]
  ],
  "test_hms": [
    [
      "astropy/coordinates/tests/test_arrays.py",
      [
        "test_hms"
      ]
    ]
  ],
  "test_array_coordinates_creation": [
    [
      "astropy/coordinates/tests/test_arrays.py",
      [
        "test_array_coordinates_creation"
      ]
    ]
  ],
  "test_array_coordinates_distances": [
    [
      "astropy/coordinates/tests/test_arrays.py",
      [
        "test_array_coordinates_distances"
      ]
    ]
  ],
  "test_array_coordinates_transformations": [
    [
      "astropy/coordinates/tests/test_arrays.py",
      [
        "test_array_coordinates_transformations"
      ]
    ]
  ],
  "test_array_precession": [
    [
      "astropy/coordinates/tests/test_arrays.py",
      [
        "test_array_precession"
      ]
    ]
  ],
  "test_array_separation": [
    [
      "astropy/coordinates/tests/test_arrays.py",
      [
        "test_array_separation"
      ]
    ]
  ],
  "test_array_indexing": [
    [
      "astropy/coordinates/tests/test_arrays.py",
      [
        "test_array_indexing"
      ]
    ]
  ],
  "test_array_len": [
    [
      "astropy/coordinates/tests/test_arrays.py",
      [
        "test_array_len"
      ]
    ]
  ],
  "test_array_eq": [
    [
      "astropy/coordinates/tests/test_arrays.py",
      [
        "test_array_eq"
      ]
    ]
  ],
  "test_atciqz_aticq": [
    [
      "astropy/coordinates/tests/test_atc_replacements.py",
      [
        "test_atciqz_aticq"
      ]
    ]
  ],
  "test_m31_coord_transforms": [
    [
      "astropy/coordinates/tests/test_celestial_transformations.py",
      [
        "test_m31_coord_transforms"
      ]
    ],
    [
      "astropy/coordinates/tests/test_skyoffset_transformations.py",
      [
        "test_m31_coord_transforms"
      ]
    ]
  ],
  "test_precession": [
    [
      "astropy/coordinates/tests/test_celestial_transformations.py",
      [
        "test_precession"
      ]
    ]
  ],
  "test_fk5_galactic": [
    [
      "astropy/coordinates/tests/test_celestial_transformations.py",
      [
        "test_fk5_galactic"
      ]
    ]
  ],
  "test_galactocentric": [
    [
      "astropy/coordinates/tests/test_celestial_transformations.py",
      [
        "test_galactocentric"
      ]
    ]
  ],
  "test_supergalactic": [
    [
      "astropy/coordinates/tests/test_celestial_transformations.py",
      [
        "test_supergalactic"
      ]
    ]
  ],
  "setup": [
    [
      "astropy/coordinates/tests/test_celestial_transformations.py",
      [
        "TestHCRS",
        "setup"
      ]
    ],
    [
      "astropy/coordinates/tests/test_celestial_transformations.py",
      [
        "TestHelioBaryCentric",
        "setup"
      ]
    ],
    [
      "astropy/coordinates/tests/test_earth.py",
      [
        "TestInput",
        "setup"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestArithmetic",
        "setup"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestRadialDifferential",
        "setup"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestPhysicsSphericalDifferential",
        "setup"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestCylindricalDifferential",
        "setup"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestCartesianDifferential",
        "setup"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestDifferentialConversion",
        "setup"
      ]
    ],
    [
      "astropy/coordinates/tests/test_solar_system.py",
      [
        "TestPositionsGeocentric",
        "setup"
      ]
    ],
    [
      "astropy/coordinates/tests/test_solar_system.py",
      [
        "TestPositionKittPeak",
        "setup"
      ]
    ],
    [
      "astropy/cosmology/io/tests/base.py",
      [
        "IODirectTestBase",
        "setup"
      ]
    ],
    [
      "astropy/cosmology/io/tests/test_yaml.py",
      [
        "TestToFromYAML",
        "setup"
      ]
    ],
    [
      "astropy/io/fits/tests/__init__.py",
      [
        "FitsTestCase",
        "setup"
      ]
    ],
    [
      "astropy/io/fits/tests/test_checksum.py",
      [
        "TestChecksumFunctions",
        "setup"
      ]
    ],
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestRecordValuedKeywordCards",
        "setup"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_BoundingDomain",
        "setup"
      ]
    ],
    [
      "astropy/modeling/tests/test_utils.py",
      [
        "Test_SpecialOperatorsDict",
        "setup"
      ]
    ],
    [
      "astropy/time/tests/test_comparisons.py",
      [
        "TestTimeComparisons",
        "setup"
      ]
    ],
    [
      "astropy/time/tests/test_corrs.py",
      [
        "TestHelioBaryCentric",
        "setup"
      ]
    ],
    [
      "astropy/time/tests/test_delta.py",
      [
        "TestTimeDelta",
        "setup"
      ]
    ],
    [
      "astropy/time/tests/test_delta.py",
      [
        "TestTimeDeltaScales",
        "setup"
      ]
    ],
    [
      "astropy/time/tests/test_update_leap_seconds.py",
      [
        "TestUpdateLeapSeconds",
        "setup"
      ]
    ],
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantityViews",
        "setup"
      ]
    ],
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantityMethods",
        "setup"
      ]
    ],
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestSpecificTypeQuantity",
        "setup"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestRecArray",
        "setup"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "BasicTestSetup",
        "setup"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestRealImag",
        "setup"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestConcatenate",
        "setup"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSplit",
        "setup"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncLikeTests",
        "setup"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestNanFunctions",
        "setup"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestHistogramFunctions",
        "setup"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestStringFunctions",
        "setup"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestBitAndIndexFunctions",
        "setup"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSetOpsFcuntions",
        "setup"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestFFT",
        "setup"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestLinAlg",
        "setup"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestClip",
        "setup"
      ]
    ],
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestDefaultAutoOpen",
        "setup"
      ]
    ],
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "ERFALeapSecondsSafe",
        "setup"
      ]
    ],
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestUpdateLeapSeconds",
        "setup"
      ]
    ],
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "TestMaps",
        "setup"
      ]
    ],
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "TestSpectra",
        "setup"
      ]
    ],
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "TestWcsWithTime",
        "setup"
      ]
    ],
    [
      "docs/conf.py",
      [
        "setup"
      ]
    ]
  ],
  "test_from_hcrs": [
    [
      "astropy/coordinates/tests/test_celestial_transformations.py",
      [
        "TestHCRS",
        "test_from_hcrs"
      ]
    ]
  ],
  "test_from_icrs": [
    [
      "astropy/coordinates/tests/test_celestial_transformations.py",
      [
        "TestHCRS",
        "test_from_icrs"
      ]
    ]
  ],
  "test_heliocentric": [
    [
      "astropy/coordinates/tests/test_celestial_transformations.py",
      [
        "TestHelioBaryCentric",
        "test_heliocentric"
      ]
    ],
    [
      "astropy/time/tests/test_corrs.py",
      [
        "TestHelioBaryCentric",
        "test_heliocentric"
      ]
    ]
  ],
  "test_barycentric": [
    [
      "astropy/coordinates/tests/test_celestial_transformations.py",
      [
        "TestHelioBaryCentric",
        "test_barycentric"
      ]
    ],
    [
      "astropy/time/tests/test_corrs.py",
      [
        "TestHelioBaryCentric",
        "test_barycentric"
      ]
    ]
  ],
  "test_lsr_sanity": [
    [
      "astropy/coordinates/tests/test_celestial_transformations.py",
      [
        "test_lsr_sanity"
      ]
    ]
  ],
  "test_hcrs_icrs_differentials": [
    [
      "astropy/coordinates/tests/test_celestial_transformations.py",
      [
        "test_hcrs_icrs_differentials"
      ]
    ]
  ],
  "test_cirs_icrs": [
    [
      "astropy/coordinates/tests/test_celestial_transformations.py",
      [
        "test_cirs_icrs"
      ]
    ]
  ],
  "test_lsr_loopback": [
    [
      "astropy/coordinates/tests/test_celestial_transformations.py",
      [
        "test_lsr_loopback"
      ]
    ]
  ],
  "test_galactocentric_loopback": [
    [
      "astropy/coordinates/tests/test_celestial_transformations.py",
      [
        "test_galactocentric_loopback"
      ]
    ]
  ],
  "test_distances": [
    [
      "astropy/coordinates/tests/test_distance.py",
      [
        "test_distances"
      ]
    ],
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_distances"
      ]
    ]
  ],
  "test_distances_scipy": [
    [
      "astropy/coordinates/tests/test_distance.py",
      [
        "test_distances_scipy"
      ]
    ]
  ],
  "test_distance_change": [
    [
      "astropy/coordinates/tests/test_distance.py",
      [
        "test_distance_change"
      ]
    ]
  ],
  "test_distance_is_quantity": [
    [
      "astropy/coordinates/tests/test_distance.py",
      [
        "test_distance_is_quantity"
      ]
    ]
  ],
  "test_distmod": [
    [
      "astropy/coordinates/tests/test_distance.py",
      [
        "test_distmod"
      ]
    ],
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_distmod"
      ]
    ]
  ],
  "test_parallax": [
    [
      "astropy/coordinates/tests/test_distance.py",
      [
        "test_parallax"
      ]
    ],
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_parallax"
      ]
    ]
  ],
  "test_distance_in_coordinates": [
    [
      "astropy/coordinates/tests/test_distance.py",
      [
        "test_distance_in_coordinates"
      ]
    ]
  ],
  "test_negative_distance": [
    [
      "astropy/coordinates/tests/test_distance.py",
      [
        "test_negative_distance"
      ]
    ],
    [
      "astropy/coordinates/tests/test_frames_with_velocity.py",
      [
        "test_negative_distance"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestSphericalRepresentation",
        "test_negative_distance"
      ]
    ]
  ],
  "test_distance_comparison": [
    [
      "astropy/coordinates/tests/test_distance.py",
      [
        "test_distance_comparison"
      ]
    ]
  ],
  "test_distance_to_quantity_when_not_units_of_length": [
    [
      "astropy/coordinates/tests/test_distance.py",
      [
        "test_distance_to_quantity_when_not_units_of_length"
      ]
    ]
  ],
  "test_distance_nan": [
    [
      "astropy/coordinates/tests/test_distance.py",
      [
        "test_distance_nan"
      ]
    ]
  ],
  "allclose_m14": [
    [
      "astropy/coordinates/tests/test_earth.py",
      [
        "allclose_m14"
      ]
    ]
  ],
  "allclose_m8": [
    [
      "astropy/coordinates/tests/test_earth.py",
      [
        "allclose_m8"
      ]
    ]
  ],
  "isclose_m14": [
    [
      "astropy/coordinates/tests/test_earth.py",
      [
        "isclose_m14"
      ]
    ]
  ],
  "isclose_m8": [
    [
      "astropy/coordinates/tests/test_earth.py",
      [
        "isclose_m8"
      ]
    ]
  ],
  "vvd": [
    [
      "astropy/coordinates/tests/test_earth.py",
      [
        "vvd"
      ]
    ],
    [
      "astropy/coordinates/tests/test_geodetic_representations.py",
      [
        "vvd"
      ]
    ]
  ],
  "test_gc2gd": [
    [
      "astropy/coordinates/tests/test_earth.py",
      [
        "test_gc2gd"
      ]
    ]
  ],
  "test_gd2gc": [
    [
      "astropy/coordinates/tests/test_earth.py",
      [
        "test_gd2gc"
      ]
    ]
  ],
  "test_default_ellipsoid": [
    [
      "astropy/coordinates/tests/test_earth.py",
      [
        "TestInput",
        "test_default_ellipsoid"
      ]
    ]
  ],
  "test_geo_attributes": [
    [
      "astropy/coordinates/tests/test_earth.py",
      [
        "TestInput",
        "test_geo_attributes"
      ]
    ]
  ],
  "test_attribute_classes": [
    [
      "astropy/coordinates/tests/test_earth.py",
      [
        "TestInput",
        "test_attribute_classes"
      ]
    ]
  ],
  "test_input": [
    [
      "astropy/coordinates/tests/test_earth.py",
      [
        "TestInput",
        "test_input"
      ]
    ]
  ],
  "test_invalid_input": [
    [
      "astropy/coordinates/tests/test_earth.py",
      [
        "TestInput",
        "test_invalid_input"
      ]
    ]
  ],
  "test_slicing": [
    [
      "astropy/coordinates/tests/test_earth.py",
      [
        "TestInput",
        "test_slicing"
      ]
    ],
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_slicing"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredMaskedQuantity",
        "test_slicing"
      ]
    ]
  ],
  "test_invalid_ellipsoid": [
    [
      "astropy/coordinates/tests/test_earth.py",
      [
        "TestInput",
        "test_invalid_ellipsoid"
      ]
    ]
  ],
  "test_to_value": [
    [
      "astropy/coordinates/tests/test_earth.py",
      [
        "TestInput",
        "test_ellipsoid",
        "test_to_value"
      ]
    ],
    [
      "astropy/time/tests/test_delta.py",
      [
        "TestTimeDelta",
        "test_to_value"
      ]
    ]
  ],
  "test_ellipsoid": [
    [
      "astropy/coordinates/tests/test_earth.py",
      [
        "TestInput",
        "test_ellipsoid"
      ]
    ]
  ],
  "test_pickling": [
    [
      "astropy/coordinates/tests/test_earth.py",
      [
        "test_pickling"
      ]
    ],
    [
      "astropy/units/tests/test_physical.py",
      [
        "test_pickling"
      ]
    ],
    [
      "astropy/units/tests/test_units.py",
      [
        "test_pickling"
      ]
    ]
  ],
  "test_of_address": [
    [
      "astropy/coordinates/tests/test_earth.py",
      [
        "test_of_address"
      ]
    ]
  ],
  "test_geodetic_tuple": [
    [
      "astropy/coordinates/tests/test_earth.py",
      [
        "test_geodetic_tuple"
      ]
    ]
  ],
  "test_gravitational_redshift": [
    [
      "astropy/coordinates/tests/test_earth.py",
      [
        "test_gravitational_redshift"
      ]
    ]
  ],
  "test_read_only_input": [
    [
      "astropy/coordinates/tests/test_earth.py",
      [
        "test_read_only_input"
      ]
    ]
  ],
  "test_info": [
    [
      "astropy/coordinates/tests/test_earth.py",
      [
        "test_info"
      ]
    ],
    [
      "astropy/table/tests/test_showtable.py",
      [
        "test_info"
      ]
    ]
  ],
  "test_science_state": [
    [
      "astropy/coordinates/tests/test_erfa_astrom.py",
      [
        "test_science_state"
      ]
    ]
  ],
  "test_warnings": [
    [
      "astropy/coordinates/tests/test_erfa_astrom.py",
      [
        "test_warnings"
      ]
    ]
  ],
  "test_erfa_astrom": [
    [
      "astropy/coordinates/tests/test_erfa_astrom.py",
      [
        "test_erfa_astrom"
      ]
    ]
  ],
  "test_interpolation_nd": [
    [
      "astropy/coordinates/tests/test_erfa_astrom.py",
      [
        "test_interpolation_nd"
      ]
    ]
  ],
  "test_interpolation_broadcasting": [
    [
      "astropy/coordinates/tests/test_erfa_astrom.py",
      [
        "test_interpolation_broadcasting"
      ]
    ]
  ],
  "test_faux_lsr": [
    [
      "astropy/coordinates/tests/test_finite_difference_velocities.py",
      [
        "test_faux_lsr"
      ]
    ]
  ],
  "fk5_to_gal2": [
    [
      "astropy/coordinates/tests/test_finite_difference_velocities.py",
      [
        "test_faux_fk5_galactic",
        "fk5_to_gal2"
      ]
    ]
  ],
  "gal2_to_fk5": [
    [
      "astropy/coordinates/tests/test_finite_difference_velocities.py",
      [
        "test_faux_fk5_galactic",
        "gal2_to_fk5"
      ]
    ]
  ],
  "test_faux_fk5_galactic": [
    [
      "astropy/coordinates/tests/test_finite_difference_velocities.py",
      [
        "test_faux_fk5_galactic"
      ]
    ]
  ],
  "test_gcrs_diffs": [
    [
      "astropy/coordinates/tests/test_finite_difference_velocities.py",
      [
        "test_gcrs_diffs"
      ]
    ]
  ],
  "test_altaz_diffs": [
    [
      "astropy/coordinates/tests/test_finite_difference_velocities.py",
      [
        "test_altaz_diffs"
      ]
    ]
  ],
  "test_numerical_limits": [
    [
      "astropy/coordinates/tests/test_finite_difference_velocities.py",
      [
        "test_numerical_limits"
      ]
    ]
  ],
  "diff_info_plot": [
    [
      "astropy/coordinates/tests/test_finite_difference_velocities.py",
      [
        "diff_info_plot"
      ]
    ]
  ],
  "test_to_string_precision": [
    [
      "astropy/coordinates/tests/test_formatting.py",
      [
        "test_to_string_precision"
      ]
    ]
  ],
  "test_to_string_decimal": [
    [
      "astropy/coordinates/tests/test_formatting.py",
      [
        "test_to_string_decimal"
      ]
    ]
  ],
  "test_to_string_formats": [
    [
      "astropy/coordinates/tests/test_formatting.py",
      [
        "test_to_string_formats"
      ]
    ]
  ],
  "test_to_string_fields": [
    [
      "astropy/coordinates/tests/test_formatting.py",
      [
        "test_to_string_fields"
      ]
    ]
  ],
  "test_to_string_padding": [
    [
      "astropy/coordinates/tests/test_formatting.py",
      [
        "test_to_string_padding"
      ]
    ]
  ],
  "test_sexagesimal_rounding_up": [
    [
      "astropy/coordinates/tests/test_formatting.py",
      [
        "test_sexagesimal_rounding_up"
      ]
    ]
  ],
  "test_to_string_scalar": [
    [
      "astropy/coordinates/tests/test_formatting.py",
      [
        "test_to_string_scalar"
      ]
    ]
  ],
  "test_to_string_radian_with_precision": [
    [
      "astropy/coordinates/tests/test_formatting.py",
      [
        "test_to_string_radian_with_precision"
      ]
    ]
  ],
  "test_sexagesimal_round_down": [
    [
      "astropy/coordinates/tests/test_formatting.py",
      [
        "test_sexagesimal_round_down"
      ]
    ]
  ],
  "test_to_string_fields_colon": [
    [
      "astropy/coordinates/tests/test_formatting.py",
      [
        "test_to_string_fields_colon"
      ]
    ]
  ],
  "setup_function": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "setup_function"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "setup_function"
      ]
    ],
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "setup_function"
      ]
    ],
    [
      "astropy/coordinates/tests/test_unit_representation.py",
      [
        "setup_function"
      ]
    ],
    [
      "astropy/io/ascii/tests/common.py",
      [
        "setup_function"
      ]
    ],
    [
      "astropy/samp/tests/test_hub_script.py",
      [
        "setup_function"
      ]
    ],
    [
      "astropy/table/mixins/tests/test_registry.py",
      [
        "setup_function"
      ]
    ],
    [
      "astropy/tests/test_logger.py",
      [
        "setup_function"
      ]
    ],
    [
      "astropy/time/tests/test_basic.py",
      [
        "setup_function"
      ]
    ]
  ],
  "teardown_function": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "teardown_function"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "teardown_function"
      ]
    ],
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "teardown_function"
      ]
    ],
    [
      "astropy/coordinates/tests/test_unit_representation.py",
      [
        "teardown_function"
      ]
    ],
    [
      "astropy/io/ascii/tests/common.py",
      [
        "teardown_function"
      ]
    ],
    [
      "astropy/samp/tests/test_hub_script.py",
      [
        "teardown_function"
      ]
    ],
    [
      "astropy/table/mixins/tests/test_registry.py",
      [
        "teardown_function"
      ]
    ],
    [
      "astropy/time/tests/test_basic.py",
      [
        "teardown_function"
      ]
    ],
    [
      "astropy/visualization/tests/test_time.py",
      [
        "teardown_function"
      ]
    ],
    [
      "astropy/visualization/tests/test_units.py",
      [
        "teardown_function"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/tests/test_coordinate_helpers.py",
      [
        "teardown_function"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/tests/test_misc.py",
      [
        "teardown_function"
      ]
    ]
  ],
  "test_frame_attribute_descriptor": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_frame_attribute_descriptor"
      ]
    ]
  ],
  "test_frame_subclass_attribute_descriptor": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_frame_subclass_attribute_descriptor"
      ]
    ]
  ],
  "test_frame_multiple_inheritance_attribute_descriptor": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_frame_multiple_inheritance_attribute_descriptor"
      ]
    ]
  ],
  "test_differentialattribute": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_differentialattribute"
      ]
    ]
  ],
  "test_create_data_frames": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_create_data_frames"
      ]
    ]
  ],
  "test_create_orderered_data": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_create_orderered_data"
      ]
    ]
  ],
  "test_create_nodata_frames": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_create_nodata_frames"
      ]
    ]
  ],
  "test_no_data_nonscalar_frames": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_no_data_nonscalar_frames"
      ]
    ]
  ],
  "test_frame_repr": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_frame_repr"
      ]
    ]
  ],
  "test_frame_repr_vels": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_frame_repr_vels"
      ]
    ]
  ],
  "test_converting_units": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_converting_units"
      ]
    ]
  ],
  "test_representation_info": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_representation_info"
      ]
    ]
  ],
  "test_realizing": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_realizing"
      ]
    ]
  ],
  "test_replicating": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_replicating"
      ]
    ]
  ],
  "test_getitem": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_getitem"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestUnitSphericalRepresentation",
        "test_getitem"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestPhysicsSphericalRepresentation",
        "test_getitem"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentation",
        "test_getitem"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCylindricalRepresentation",
        "test_getitem"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentationWithDifferential",
        "test_getitem"
      ]
    ],
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestBasic",
        "test_getitem"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredQuantity",
        "test_getitem"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "MaskedItemTests",
        "test_getitem"
      ]
    ]
  ],
  "test_transform": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_transform"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestRadialRepresentation",
        "test_transform"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestSphericalRepresentation",
        "test_transform"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestUnitSphericalRepresentation",
        "test_transform"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestPhysicsSphericalRepresentation",
        "test_transform"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentation",
        "test_transform"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCylindricalRepresentation",
        "test_transform"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestUnitSphericalCosLatDifferential",
        "test_transform"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentationWithDifferential",
        "test_transform"
      ]
    ],
    [
      "astropy/time/tests/test_mask.py",
      [
        "test_transform"
      ]
    ]
  ],
  "test_transform_to_nonscalar_nodata_frame": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_transform_to_nonscalar_nodata_frame"
      ]
    ]
  ],
  "test_setitem_no_velocity": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_setitem_no_velocity"
      ]
    ],
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_setitem_no_velocity"
      ]
    ]
  ],
  "test_setitem_velocities": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_setitem_velocities"
      ]
    ],
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_setitem_velocities"
      ]
    ]
  ],
  "test_setitem_exceptions": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_setitem_exceptions"
      ]
    ],
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_setitem_exceptions"
      ]
    ]
  ],
  "test_sep": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_sep"
      ]
    ]
  ],
  "test_time_inputs": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_time_inputs"
      ]
    ]
  ],
  "test_is_frame_attr_default": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_is_frame_attr_default"
      ]
    ]
  ],
  "test_altaz_attributes": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_altaz_attributes"
      ]
    ]
  ],
  "test_hadec_attributes": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_hadec_attributes"
      ]
    ]
  ],
  "test_representation": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_representation"
      ]
    ]
  ],
  "test_represent_as": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_represent_as"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentationWithDifferential",
        "test_represent_as"
      ]
    ]
  ],
  "test_shorthand_representations": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_shorthand_representations"
      ]
    ]
  ],
  "test_equal": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_equal"
      ]
    ],
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_equal"
      ]
    ]
  ],
  "test_equal_exceptions": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_equal_exceptions"
      ]
    ],
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_equal_exceptions"
      ]
    ]
  ],
  "test_dynamic_attrs": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_dynamic_attrs"
      ]
    ]
  ],
  "test_nodata_error": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_nodata_error"
      ]
    ]
  ],
  "test_len0_data": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_len0_data"
      ]
    ]
  ],
  "test_quantity_attributes": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_quantity_attributes"
      ]
    ]
  ],
  "test_quantity_attribute_default": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_quantity_attribute_default"
      ]
    ]
  ],
  "test_eloc_attributes": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_eloc_attributes"
      ]
    ]
  ],
  "test_equivalent_frames": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_equivalent_frames"
      ]
    ]
  ],
  "test_equivalent_frame_coordinateattribute": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_equivalent_frame_coordinateattribute"
      ]
    ]
  ],
  "test_equivalent_frame_locationattribute": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_equivalent_frame_locationattribute"
      ]
    ]
  ],
  "test_representation_subclass": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_representation_subclass"
      ]
    ]
  ],
  "test_getitem_representation": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_getitem_representation"
      ]
    ],
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_getitem_representation"
      ]
    ]
  ],
  "test_component_error_useful": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_component_error_useful"
      ]
    ]
  ],
  "test_cache_clear": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_cache_clear"
      ]
    ]
  ],
  "test_inplace_array": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_inplace_array"
      ]
    ]
  ],
  "test_inplace_change": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_inplace_change"
      ]
    ]
  ],
  "test_representation_with_multiple_differentials": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_representation_with_multiple_differentials"
      ]
    ]
  ],
  "test_missing_component_error_names": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_missing_component_error_names"
      ]
    ]
  ],
  "test_non_spherical_representation_unit_creation": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_non_spherical_representation_unit_creation"
      ]
    ]
  ],
  "test_attribute_repr": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_attribute_repr"
      ]
    ]
  ],
  "test_component_names_repr": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_component_names_repr"
      ]
    ]
  ],
  "test_galactocentric_defaults": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_galactocentric_defaults"
      ]
    ]
  ],
  "test_galactocentric_references": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_galactocentric_references"
      ]
    ]
  ],
  "test_coordinateattribute_transformation": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_coordinateattribute_transformation"
      ]
    ]
  ],
  "test_realize_frame_accepts_kwargs": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_realize_frame_accepts_kwargs"
      ]
    ]
  ],
  "test_nameless_frame_subclass": [
    [
      "astropy/coordinates/tests/test_frames.py",
      [
        "test_nameless_frame_subclass"
      ]
    ]
  ],
  "test_api": [
    [
      "astropy/coordinates/tests/test_frames_with_velocity.py",
      [
        "test_api"
      ]
    ]
  ],
  "test_all_arg_options": [
    [
      "astropy/coordinates/tests/test_frames_with_velocity.py",
      [
        "test_all_arg_options"
      ]
    ]
  ],
  "test_expected_arg_names": [
    [
      "astropy/coordinates/tests/test_frames_with_velocity.py",
      [
        "test_expected_arg_names"
      ]
    ]
  ],
  "test_xhip_galactic": [
    [
      "astropy/coordinates/tests/test_frames_with_velocity.py",
      [
        "test_xhip_galactic"
      ]
    ]
  ],
  "test_frame_affinetransform": [
    [
      "astropy/coordinates/tests/test_frames_with_velocity.py",
      [
        "test_frame_affinetransform"
      ]
    ]
  ],
  "test_differential_type_arg": [
    [
      "astropy/coordinates/tests/test_frames_with_velocity.py",
      [
        "test_differential_type_arg"
      ]
    ]
  ],
  "test_slicing_preserves_differential": [
    [
      "astropy/coordinates/tests/test_frames_with_velocity.py",
      [
        "test_slicing_preserves_differential"
      ]
    ]
  ],
  "test_shorthand_attributes": [
    [
      "astropy/coordinates/tests/test_frames_with_velocity.py",
      [
        "test_shorthand_attributes"
      ]
    ]
  ],
  "test_velocity_units": [
    [
      "astropy/coordinates/tests/test_frames_with_velocity.py",
      [
        "test_velocity_units"
      ]
    ]
  ],
  "test_frame_with_velocity_without_distance_can_be_transformed": [
    [
      "astropy/coordinates/tests/test_frames_with_velocity.py",
      [
        "test_frame_with_velocity_without_distance_can_be_transformed"
      ]
    ]
  ],
  "test_sun": [
    [
      "astropy/coordinates/tests/test_funcs.py",
      [
        "test_sun"
      ]
    ]
  ],
  "test_constellations": [
    [
      "astropy/coordinates/tests/test_funcs.py",
      [
        "test_constellations"
      ]
    ],
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_constellations"
      ]
    ],
    [
      "astropy/coordinates/tests/test_sky_coord_velocities.py",
      [
        "test_constellations"
      ]
    ]
  ],
  "test_constellation_edge_cases": [
    [
      "astropy/coordinates/tests/test_funcs.py",
      [
        "test_constellation_edge_cases"
      ]
    ]
  ],
  "test_concatenate": [
    [
      "astropy/coordinates/tests/test_funcs.py",
      [
        "test_concatenate"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestConcatenate",
        "test_concatenate"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestConcatenate",
        "test_concatenate"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_functions.py",
      [
        "TestMaskedArrayConcatenation",
        "test_concatenate"
      ]
    ]
  ],
  "test_concatenate_representations": [
    [
      "astropy/coordinates/tests/test_funcs.py",
      [
        "test_concatenate_representations"
      ]
    ]
  ],
  "test_concatenate_representations_different_units": [
    [
      "astropy/coordinates/tests/test_funcs.py",
      [
        "test_concatenate_representations_different_units"
      ]
    ]
  ],
  "test_cartesian_wgs84geodetic_roundtrip": [
    [
      "astropy/coordinates/tests/test_geodetic_representations.py",
      [
        "test_cartesian_wgs84geodetic_roundtrip"
      ]
    ]
  ],
  "test_geocentric_to_geodetic": [
    [
      "astropy/coordinates/tests/test_geodetic_representations.py",
      [
        "test_geocentric_to_geodetic"
      ]
    ]
  ],
  "test_geodetic_to_geocentric": [
    [
      "astropy/coordinates/tests/test_geodetic_representations.py",
      [
        "test_geodetic_to_geocentric"
      ]
    ]
  ],
  "test_default_height_is_zero": [
    [
      "astropy/coordinates/tests/test_geodetic_representations.py",
      [
        "test_default_height_is_zero"
      ]
    ]
  ],
  "test_non_angle_error": [
    [
      "astropy/coordinates/tests/test_geodetic_representations.py",
      [
        "test_non_angle_error"
      ]
    ]
  ],
  "test_non_length_error": [
    [
      "astropy/coordinates/tests/test_geodetic_representations.py",
      [
        "test_non_length_error"
      ]
    ]
  ],
  "fullstack_icrs": [
    [
      "astropy/coordinates/tests/test_iau_fullstack.py",
      [
        "fullstack_icrs"
      ]
    ]
  ],
  "fullstack_fiducial_altaz": [
    [
      "astropy/coordinates/tests/test_iau_fullstack.py",
      [
        "fullstack_fiducial_altaz"
      ]
    ]
  ],
  "fullstack_times": [
    [
      "astropy/coordinates/tests/test_iau_fullstack.py",
      [
        "fullstack_times"
      ]
    ]
  ],
  "fullstack_locations": [
    [
      "astropy/coordinates/tests/test_iau_fullstack.py",
      [
        "fullstack_locations"
      ]
    ]
  ],
  "fullstack_obsconditions": [
    [
      "astropy/coordinates/tests/test_iau_fullstack.py",
      [
        "fullstack_obsconditions"
      ]
    ]
  ],
  "_erfa_check": [
    [
      "astropy/coordinates/tests/test_iau_fullstack.py",
      [
        "_erfa_check"
      ]
    ]
  ],
  "test_iau_fullstack": [
    [
      "astropy/coordinates/tests/test_iau_fullstack.py",
      [
        "test_iau_fullstack"
      ]
    ]
  ],
  "test_fiducial_roudtrip": [
    [
      "astropy/coordinates/tests/test_iau_fullstack.py",
      [
        "test_fiducial_roudtrip"
      ]
    ]
  ],
  "test_future_altaz": [
    [
      "astropy/coordinates/tests/test_iau_fullstack.py",
      [
        "test_future_altaz"
      ]
    ]
  ],
  "test_icrs_altaz_consistency": [
    [
      "astropy/coordinates/tests/test_icrs_observed_transformations.py",
      [
        "test_icrs_altaz_consistency"
      ]
    ]
  ],
  "test_icrs_hadec_consistency": [
    [
      "astropy/coordinates/tests/test_icrs_observed_transformations.py",
      [
        "test_icrs_hadec_consistency"
      ]
    ]
  ],
  "test_icrs_cirs": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_icrs_cirs"
      ]
    ]
  ],
  "test_icrs_gcrs": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_icrs_gcrs"
      ]
    ]
  ],
  "test_icrs_gcrs_dist_diff": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_icrs_gcrs_dist_diff"
      ]
    ]
  ],
  "test_cirs_to_altaz": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_cirs_to_altaz"
      ]
    ]
  ],
  "test_cirs_to_hadec": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_cirs_to_hadec"
      ]
    ]
  ],
  "test_gcrs_itrs": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_gcrs_itrs"
      ]
    ]
  ],
  "test_cirs_itrs": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_cirs_itrs"
      ]
    ]
  ],
  "test_gcrs_cirs": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_gcrs_cirs"
      ]
    ]
  ],
  "test_gcrs_altaz": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_gcrs_altaz"
      ]
    ]
  ],
  "test_gcrs_hadec": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_gcrs_hadec"
      ]
    ]
  ],
  "test_precessed_geocentric": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_precessed_geocentric"
      ]
    ]
  ],
  "test_precessed_geocentric_different_obstime": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_precessed_geocentric_different_obstime"
      ]
    ]
  ],
  "test_gcrs_altaz_sunish": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_gcrs_altaz_sunish"
      ]
    ]
  ],
  "test_gcrs_altaz_moonish": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_gcrs_altaz_moonish"
      ]
    ]
  ],
  "test_gcrs_altaz_bothroutes": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_gcrs_altaz_bothroutes"
      ]
    ]
  ],
  "test_cirs_altaz_moonish": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_cirs_altaz_moonish"
      ]
    ]
  ],
  "test_cirs_altaz_nodist": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_cirs_altaz_nodist"
      ]
    ]
  ],
  "test_cirs_icrs_moonish": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_cirs_icrs_moonish"
      ]
    ]
  ],
  "test_gcrs_icrs_moonish": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_gcrs_icrs_moonish"
      ]
    ]
  ],
  "test_icrs_gcrscirs_sunish": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_icrs_gcrscirs_sunish"
      ]
    ]
  ],
  "test_icrs_altaz_moonish": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_icrs_altaz_moonish"
      ]
    ]
  ],
  "test_gcrs_self_transform_closeby": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_gcrs_self_transform_closeby"
      ]
    ]
  ],
  "test_teme_itrf": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_teme_itrf"
      ]
    ]
  ],
  "test_precessedgeocentric_loopback": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_precessedgeocentric_loopback"
      ]
    ]
  ],
  "test_teme_loopback": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_teme_loopback"
      ]
    ]
  ],
  "test_earth_orientation_table": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_earth_orientation_table"
      ]
    ]
  ],
  "test_ephemerides": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_ephemerides"
      ]
    ],
    [
      "astropy/time/tests/test_corrs.py",
      [
        "TestHelioBaryCentric",
        "test_ephemerides"
      ]
    ]
  ],
  "test_tete_transforms": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_tete_transforms"
      ]
    ]
  ],
  "test_straight_overhead": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_straight_overhead"
      ]
    ]
  ],
  "jplephem_ge": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "jplephem_ge"
      ]
    ]
  ],
  "test_aa_hd_high_precision": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_aa_hd_high_precision"
      ]
    ]
  ],
  "test_aa_high_precision_nodata": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "test_aa_high_precision_nodata"
      ]
    ]
  ],
  "check_obsgeo": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "TestGetLocationGCRS",
        "check_obsgeo"
      ]
    ]
  ],
  "test_get_gcrs_posvel": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "TestGetLocationGCRS",
        "test_get_gcrs_posvel"
      ]
    ]
  ],
  "test_tete_quick": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "TestGetLocationGCRS",
        "test_tete_quick"
      ]
    ]
  ],
  "test_cirs_quick": [
    [
      "astropy/coordinates/tests/test_intermediate_transformations.py",
      [
        "TestGetLocationGCRS",
        "test_cirs_quick"
      ]
    ]
  ],
  "test_matching_function": [
    [
      "astropy/coordinates/tests/test_matching.py",
      [
        "test_matching_function"
      ]
    ]
  ],
  "test_matching_function_3d_and_sky": [
    [
      "astropy/coordinates/tests/test_matching.py",
      [
        "test_matching_function_3d_and_sky"
      ]
    ]
  ],
  "make_scs": [
    [
      "astropy/coordinates/tests/test_matching.py",
      [
        "test_kdtree_storage",
        "make_scs"
      ]
    ]
  ],
  "test_kdtree_storage": [
    [
      "astropy/coordinates/tests/test_matching.py",
      [
        "test_kdtree_storage"
      ]
    ]
  ],
  "test_python_kdtree": [
    [
      "astropy/coordinates/tests/test_matching.py",
      [
        "test_python_kdtree"
      ]
    ]
  ],
  "test_matching_method": [
    [
      "astropy/coordinates/tests/test_matching.py",
      [
        "test_matching_method"
      ]
    ]
  ],
  "test_search_around": [
    [
      "astropy/coordinates/tests/test_matching.py",
      [
        "test_search_around"
      ]
    ],
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_search_around"
      ]
    ]
  ],
  "test_search_around_scalar": [
    [
      "astropy/coordinates/tests/test_matching.py",
      [
        "test_search_around_scalar"
      ]
    ]
  ],
  "test_match_catalog_empty": [
    [
      "astropy/coordinates/tests/test_matching.py",
      [
        "test_match_catalog_empty"
      ]
    ]
  ],
  "test_match_catalog_nan": [
    [
      "astropy/coordinates/tests/test_matching.py",
      [
        "test_match_catalog_nan"
      ]
    ]
  ],
  "test_match_catalog_nounit": [
    [
      "astropy/coordinates/tests/test_matching.py",
      [
        "test_match_catalog_nounit"
      ]
    ]
  ],
  "test_rotation_matrix": [
    [
      "astropy/coordinates/tests/test_matrix_utilities.py",
      [
        "test_rotation_matrix"
      ]
    ]
  ],
  "test_angle_axis": [
    [
      "astropy/coordinates/tests/test_matrix_utilities.py",
      [
        "test_angle_axis"
      ]
    ]
  ],
  "test_is_O3": [
    [
      "astropy/coordinates/tests/test_matrix_utilities.py",
      [
        "test_is_O3"
      ]
    ]
  ],
  "test_is_rotation": [
    [
      "astropy/coordinates/tests/test_matrix_utilities.py",
      [
        "test_is_rotation"
      ]
    ]
  ],
  "test_names": [
    [
      "astropy/coordinates/tests/test_name_resolve.py",
      [
        "test_names"
      ]
    ],
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromListOfDicts",
        "test_names"
      ]
    ]
  ],
  "test_name_resolve_cache": [
    [
      "astropy/coordinates/tests/test_name_resolve.py",
      [
        "test_name_resolve_cache"
      ]
    ]
  ],
  "test_names_parse": [
    [
      "astropy/coordinates/tests/test_name_resolve.py",
      [
        "test_names_parse"
      ]
    ]
  ],
  "test_database_specify": [
    [
      "astropy/coordinates/tests/test_name_resolve.py",
      [
        "test_database_specify"
      ]
    ]
  ],
  "test_basic": [
    [
      "astropy/coordinates/tests/test_pickle.py",
      [
        "test_basic"
      ]
    ],
    [
      "astropy/coordinates/tests/test_velocity_corrs.py",
      [
        "test_basic"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_units_mapping.py",
      [
        "test_basic"
      ]
    ],
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestColumnsShowHide",
        "test_basic"
      ]
    ],
    [
      "astropy/wcs/tests/test_pickle.py",
      [
        "test_basic"
      ]
    ]
  ],
  "test_pickle_longitude_wrap_angle": [
    [
      "astropy/coordinates/tests/test_pickle.py",
      [
        "test_pickle_longitude_wrap_angle"
      ]
    ]
  ],
  "test_regression_5085": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_5085"
      ]
    ]
  ],
  "test_regression_3920": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_3920"
      ]
    ]
  ],
  "test_regression_3938": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_3938"
      ]
    ]
  ],
  "test_regression_3998": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_3998"
      ]
    ]
  ],
  "test_regression_4033": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_4033"
      ]
    ]
  ],
  "test_regression_4082": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_4082"
      ]
    ]
  ],
  "test_regression_4210": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_4210"
      ]
    ]
  ],
  "test_regression_futuretimes_4302": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_futuretimes_4302"
      ]
    ]
  ],
  "test_regression_4996": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_4996"
      ]
    ]
  ],
  "test_regression_4293": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_4293"
      ]
    ]
  ],
  "test_regression_4926": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_4926"
      ]
    ]
  ],
  "test_regression_5209": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_5209"
      ]
    ]
  ],
  "test_regression_5133": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_5133"
      ]
    ]
  ],
  "test_itrs_vals_5133": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_itrs_vals_5133"
      ]
    ]
  ],
  "test_regression_simple_5133": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_simple_5133"
      ]
    ]
  ],
  "test_regression_5743": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_5743"
      ]
    ]
  ],
  "test_regression_5889_5890": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_5889_5890"
      ]
    ]
  ],
  "test_regression_6236": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_6236"
      ]
    ]
  ],
  "test_regression_6347": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_6347"
      ]
    ]
  ],
  "test_regression_6347_3d": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_6347_3d"
      ]
    ]
  ],
  "test_gcrs_itrs_cartesian_repr": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_gcrs_itrs_cartesian_repr"
      ]
    ]
  ],
  "test_regression_6446": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_6446"
      ]
    ]
  ],
  "test_regression_6597": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_6597"
      ]
    ]
  ],
  "test_regression_6597_2": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_6597_2"
      ]
    ]
  ],
  "test_regression_6697": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_6697"
      ]
    ]
  ],
  "test_regression_8138": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_8138"
      ]
    ]
  ],
  "test_regression_8276": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_8276"
      ]
    ]
  ],
  "test_regression_8615": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_8615"
      ]
    ]
  ],
  "test_regression_8924": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_8924"
      ]
    ]
  ],
  "test_regression_10092": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_10092"
      ]
    ]
  ],
  "test_regression_10226": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_10226"
      ]
    ]
  ],
  "test_regression_10422": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_10422"
      ]
    ]
  ],
  "test_regression_10291": [
    [
      "astropy/coordinates/tests/test_regression.py",
      [
        "test_regression_10291"
      ]
    ]
  ],
  "components_equal": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "components_equal"
      ]
    ]
  ],
  "components_allclose": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "components_allclose"
      ]
    ]
  ],
  "representation_equal": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "representation_equal"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "representation_equal"
      ]
    ]
  ],
  "representation_equal_up_to_angular_type": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "representation_equal_up_to_angular_type"
      ]
    ]
  ],
  "test_name": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestSphericalRepresentation",
        "test_name"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestUnitSphericalRepresentation",
        "test_name"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestPhysicsSphericalRepresentation",
        "test_name"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentation",
        "test_name"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCylindricalRepresentation",
        "test_name"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestRadialDifferential",
        "test_name"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestPhysicsSphericalDifferential",
        "test_name"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestCylindricalDifferential",
        "test_name"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestCartesianDifferential",
        "test_name"
      ]
    ],
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "TestCosmology",
        "test_name"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_transform.py",
      [
        "test_name"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_SelectorArgument",
        "test_name"
      ]
    ],
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_name"
      ]
    ],
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_name"
      ]
    ]
  ],
  "test_empty_init": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestSphericalRepresentation",
        "test_empty_init"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestUnitSphericalRepresentation",
        "test_empty_init"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestPhysicsSphericalRepresentation",
        "test_empty_init"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentation",
        "test_empty_init"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCylindricalRepresentation",
        "test_empty_init"
      ]
    ]
  ],
  "test_init_quantity": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestSphericalRepresentation",
        "test_init_quantity"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestUnitSphericalRepresentation",
        "test_init_quantity"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestPhysicsSphericalRepresentation",
        "test_init_quantity"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentation",
        "test_init_quantity"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCylindricalRepresentation",
        "test_init_quantity"
      ]
    ],
    [
      "astropy/coordinates/tests/test_spectral_coordinate.py",
      [
        "test_init_quantity"
      ]
    ],
    [
      "astropy/coordinates/tests/test_spectral_quantity.py",
      [
        "TestSpectralQuantity",
        "test_init_quantity"
      ]
    ]
  ],
  "test_init_no_mutate_input": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestSphericalRepresentation",
        "test_init_no_mutate_input"
      ]
    ]
  ],
  "test_init_lonlat": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestSphericalRepresentation",
        "test_init_lonlat"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestUnitSphericalRepresentation",
        "test_init_lonlat"
      ]
    ]
  ],
  "test_init_subclass": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestSphericalRepresentation",
        "test_init_subclass"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "FlatFLRWMixinTest",
        "test_init_subclass"
      ]
    ],
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "TestCosmology",
        "test_init_subclass"
      ]
    ]
  ],
  "test_init_array": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestSphericalRepresentation",
        "test_init_array"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestUnitSphericalRepresentation",
        "test_init_array"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestPhysicsSphericalRepresentation",
        "test_init_array"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentation",
        "test_init_array"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCylindricalRepresentation",
        "test_init_array"
      ]
    ]
  ],
  "test_init_array_nocopy": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestSphericalRepresentation",
        "test_init_array_nocopy"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestUnitSphericalRepresentation",
        "test_init_array_nocopy"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestPhysicsSphericalRepresentation",
        "test_init_array_nocopy"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentation",
        "test_init_array_nocopy"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCylindricalRepresentation",
        "test_init_array_nocopy"
      ]
    ]
  ],
  "test_init_float32_array": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestSphericalRepresentation",
        "test_init_float32_array"
      ]
    ]
  ],
  "test_reprobj": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestSphericalRepresentation",
        "test_reprobj"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestUnitSphericalRepresentation",
        "test_reprobj"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestPhysicsSphericalRepresentation",
        "test_reprobj"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentation",
        "test_reprobj"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCylindricalRepresentation",
        "test_reprobj"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentationWithDifferential",
        "test_reprobj"
      ]
    ]
  ],
  "test_broadcasting": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestSphericalRepresentation",
        "test_broadcasting"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestUnitSphericalRepresentation",
        "test_broadcasting"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestPhysicsSphericalRepresentation",
        "test_broadcasting"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentation",
        "test_broadcasting"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCylindricalRepresentation",
        "test_broadcasting"
      ]
    ],
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_broadcasting"
      ]
    ]
  ],
  "test_broadcasting_mismatch": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestSphericalRepresentation",
        "test_broadcasting_mismatch"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestUnitSphericalRepresentation",
        "test_broadcasting_mismatch"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestPhysicsSphericalRepresentation",
        "test_broadcasting_mismatch"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentation",
        "test_broadcasting_mismatch"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCylindricalRepresentation",
        "test_broadcasting_mismatch"
      ]
    ]
  ],
  "test_broadcasting_and_nocopy": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestSphericalRepresentation",
        "test_broadcasting_and_nocopy"
      ]
    ]
  ],
  "test_readonly": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestSphericalRepresentation",
        "test_readonly"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestUnitSphericalRepresentation",
        "test_readonly"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestPhysicsSphericalRepresentation",
        "test_readonly"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentation",
        "test_readonly"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCylindricalRepresentation",
        "test_readonly"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentationWithDifferential",
        "test_readonly"
      ]
    ]
  ],
  "test_getitem_len_iterable": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestSphericalRepresentation",
        "test_getitem_len_iterable"
      ]
    ]
  ],
  "test_getitem_len_iterable_scalar": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestSphericalRepresentation",
        "test_getitem_len_iterable_scalar"
      ]
    ]
  ],
  "test_setitem": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestSphericalRepresentation",
        "test_setitem"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentationWithDifferential",
        "test_setitem"
      ]
    ],
    [
      "astropy/nddata/tests/test_flag_collection.py",
      [
        "test_setitem"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredQuantity",
        "test_setitem"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "MaskedItemTests",
        "test_setitem"
      ]
    ]
  ],
  "test_nan_distance": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestSphericalRepresentation",
        "test_nan_distance"
      ]
    ]
  ],
  "test_raise_on_extra_arguments": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestSphericalRepresentation",
        "test_raise_on_extra_arguments"
      ]
    ]
  ],
  "test_representation_shortcuts": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestSphericalRepresentation",
        "test_representation_shortcuts"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestUnitSphericalRepresentation",
        "test_representation_shortcuts"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestPhysicsSphericalRepresentation",
        "test_representation_shortcuts"
      ]
    ]
  ],
  "test_transform_with_NaN": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestSphericalRepresentation",
        "test_transform_with_NaN"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestPhysicsSphericalRepresentation",
        "test_transform_with_NaN"
      ]
    ]
  ],
  "test_getitem_scalar": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestUnitSphericalRepresentation",
        "test_getitem_scalar"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestPhysicsSphericalRepresentation",
        "test_getitem_scalar"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentation",
        "test_getitem_scalar"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCylindricalRepresentation",
        "test_getitem_scalar"
      ]
    ]
  ],
  "test_init_phitheta": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestPhysicsSphericalRepresentation",
        "test_init_phitheta"
      ]
    ]
  ],
  "test_initialize_with_nan": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestPhysicsSphericalRepresentation",
        "test_initialize_with_nan"
      ]
    ]
  ],
  "test_init_singleunit": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentation",
        "test_init_singleunit"
      ]
    ]
  ],
  "test_init_one_array": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentation",
        "test_init_one_array"
      ]
    ]
  ],
  "test_init_one_array_size_fail": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentation",
        "test_init_one_array_size_fail"
      ]
    ]
  ],
  "test_init_xyz_but_more_than_one_array_fail": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentation",
        "test_init_xyz_but_more_than_one_array_fail"
      ]
    ]
  ],
  "test_init_one_array_yz_fail": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentation",
        "test_init_one_array_yz_fail"
      ]
    ]
  ],
  "test_xyz_is_view_if_possible": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentation",
        "test_xyz_is_view_if_possible"
      ]
    ]
  ],
  "test_xyz": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentation",
        "test_xyz"
      ]
    ]
  ],
  "test_unit_mismatch": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentation",
        "test_unit_mismatch"
      ]
    ]
  ],
  "test_unit_non_length": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentation",
        "test_unit_non_length"
      ]
    ]
  ],
  "unit_mismatch": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCylindricalRepresentation",
        "unit_mismatch"
      ]
    ]
  ],
  "test_cartesian_spherical_roundtrip": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "test_cartesian_spherical_roundtrip"
      ]
    ]
  ],
  "test_cartesian_setting_with_other": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "test_cartesian_setting_with_other"
      ]
    ]
  ],
  "test_cartesian_physics_spherical_roundtrip": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "test_cartesian_physics_spherical_roundtrip"
      ]
    ]
  ],
  "test_spherical_physics_spherical_roundtrip": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "test_spherical_physics_spherical_roundtrip"
      ]
    ]
  ],
  "test_cartesian_cylindrical_roundtrip": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "test_cartesian_cylindrical_roundtrip"
      ]
    ]
  ],
  "test_unit_spherical_roundtrip": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "test_unit_spherical_roundtrip"
      ]
    ]
  ],
  "test_no_unnecessary_copies": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "test_no_unnecessary_copies"
      ]
    ]
  ],
  "test_representation_repr": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "test_representation_repr"
      ]
    ]
  ],
  "test_representation_repr_multi_d": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "test_representation_repr_multi_d"
      ]
    ]
  ],
  "test_representation_str": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "test_representation_str"
      ]
    ]
  ],
  "test_representation_str_multi_d": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "test_representation_str_multi_d"
      ]
    ]
  ],
  "test_subclass_representation": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "test_subclass_representation"
      ]
    ]
  ],
  "test_minimal_subclass": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "test_minimal_subclass"
      ]
    ]
  ],
  "test_duplicate_warning": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "test_duplicate_warning"
      ]
    ]
  ],
  "test_init_differential": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentationWithDifferential",
        "test_init_differential"
      ]
    ]
  ],
  "test_init_differential_compatible": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentationWithDifferential",
        "test_init_differential_compatible"
      ]
    ]
  ],
  "test_init_differential_multiple_equivalent_keys": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentationWithDifferential",
        "test_init_differential_multiple_equivalent_keys"
      ]
    ]
  ],
  "test_init_array_broadcasting": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentationWithDifferential",
        "test_init_array_broadcasting"
      ]
    ]
  ],
  "test_represent_as_unit_spherical_with_diff": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentationWithDifferential",
        "test_represent_as_unit_spherical_with_diff"
      ]
    ]
  ],
  "test_with_differentials": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestCartesianRepresentationWithDifferential",
        "test_with_differentials"
      ]
    ]
  ],
  "test_repr_with_differentials": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "test_repr_with_differentials"
      ]
    ]
  ],
  "test_to_cartesian": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "test_to_cartesian"
      ]
    ]
  ],
  "unitphysics": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "unitphysics"
      ]
    ]
  ],
  "test_unitphysics": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "test_unitphysics"
      ]
    ]
  ],
  "test_distance_warning": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "test_distance_warning"
      ]
    ]
  ],
  "test_dtype_preservation_in_indexing": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "test_dtype_preservation_in_indexing"
      ]
    ]
  ],
  "test_info_unit": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestInfo",
        "test_info_unit"
      ]
    ]
  ],
  "test_roundtrip": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "TestInfo",
        "test_roundtrip"
      ]
    ],
    [
      "astropy/io/ascii/tests/test_qdp.py",
      [
        "test_roundtrip"
      ]
    ],
    [
      "astropy/units/tests/test_format.py",
      [
        "TestRoundtripGeneric",
        "test_roundtrip"
      ]
    ],
    [
      "astropy/units/tests/test_format.py",
      [
        "TestRoundtripVOUnit",
        "test_roundtrip"
      ]
    ],
    [
      "astropy/units/tests/test_format.py",
      [
        "TestRoundtripFITS",
        "test_roundtrip"
      ]
    ],
    [
      "astropy/units/tests/test_format.py",
      [
        "TestRoundtripCDS",
        "test_roundtrip"
      ]
    ],
    [
      "astropy/units/tests/test_format.py",
      [
        "TestRoundtripOGIP",
        "test_roundtrip"
      ]
    ]
  ],
  "test_differential_norm_noncartesian": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "test_differential_norm_noncartesian"
      ]
    ]
  ],
  "test_differential_norm_radial": [
    [
      "astropy/coordinates/tests/test_representation.py",
      [
        "test_differential_norm_radial"
      ]
    ]
  ],
  "assert_representation_allclose": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "assert_representation_allclose"
      ]
    ]
  ],
  "assert_differential_allclose": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "assert_differential_allclose"
      ]
    ]
  ],
  "test_norm_spherical": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestArithmetic",
        "test_norm_spherical"
      ]
    ]
  ],
  "test_norm": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestArithmetic",
        "test_norm"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestLinAlg",
        "test_norm"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_containers.py",
      [
        "TestRepresentations",
        "test_norm"
      ]
    ]
  ],
  "test_norm_unitspherical": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestArithmetic",
        "test_norm_unitspherical"
      ]
    ]
  ],
  "test_neg_pos": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestArithmetic",
        "test_neg_pos"
      ]
    ],
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogUnitArithmetic",
        "test_neg_pos"
      ]
    ]
  ],
  "test_mul_div_spherical": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestArithmetic",
        "test_mul_div_spherical"
      ]
    ]
  ],
  "test_mul_div": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestArithmetic",
        "test_mul_div"
      ]
    ],
    [
      "astropy/time/tests/test_delta.py",
      [
        "TestTimeDelta",
        "test_mul_div"
      ]
    ]
  ],
  "test_mul_div_unit_spherical": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestArithmetic",
        "test_mul_div_unit_spherical"
      ]
    ]
  ],
  "test_add_sub_cartesian": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestArithmetic",
        "test_add_sub_cartesian"
      ]
    ]
  ],
  "test_add_sub": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestArithmetic",
        "test_add_sub"
      ]
    ]
  ],
  "test_add_sub_unit_spherical": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestArithmetic",
        "test_add_sub_unit_spherical"
      ]
    ]
  ],
  "test_sum_mean": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestArithmetic",
        "test_sum_mean"
      ]
    ]
  ],
  "test_sum_mean_unit_spherical": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestArithmetic",
        "test_sum_mean_unit_spherical"
      ]
    ]
  ],
  "test_dot": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestArithmetic",
        "test_dot"
      ]
    ],
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantityMethods",
        "test_dot"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestVariousProductFunctions",
        "test_dot"
      ]
    ]
  ],
  "test_dot_unit_spherical": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestArithmetic",
        "test_dot_unit_spherical"
      ]
    ]
  ],
  "test_cross": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestArithmetic",
        "test_cross"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestVariousProductFunctions",
        "test_cross"
      ]
    ]
  ],
  "test_cross_unit_spherical": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestArithmetic",
        "test_cross_unit_spherical"
      ]
    ]
  ],
  "check_unit_vectors": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestUnitVectorsAndScales",
        "check_unit_vectors"
      ]
    ]
  ],
  "check_scale_factors": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestUnitVectorsAndScales",
        "check_scale_factors"
      ]
    ]
  ],
  "test_spherical": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestUnitVectorsAndScales",
        "test_spherical"
      ]
    ]
  ],
  "test_unit_spherical": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestUnitVectorsAndScales",
        "test_unit_spherical"
      ]
    ]
  ],
  "test_radial": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestUnitVectorsAndScales",
        "test_radial"
      ]
    ]
  ],
  "test_physical_spherical": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestUnitVectorsAndScales",
        "test_physical_spherical"
      ]
    ]
  ],
  "test_cartesian": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestUnitVectorsAndScales",
        "test_cartesian"
      ]
    ]
  ],
  "test_cylindrical": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestUnitVectorsAndScales",
        "test_cylindrical"
      ]
    ]
  ],
  "_setup": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestSphericalDifferential",
        "_setup"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestUnitSphericalDifferential",
        "_setup"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "_setup"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Param",
        "_setup"
      ]
    ],
    [
      "astropy/table/tests/test_index.py",
      [
        "TestIndex",
        "_setup"
      ]
    ],
    [
      "astropy/table/tests/test_init_table.py",
      [
        "BaseInitFrom",
        "_setup"
      ]
    ],
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromListOfDicts",
        "_setup"
      ]
    ],
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromListOfMapping",
        "_setup"
      ]
    ],
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromColsList",
        "_setup"
      ]
    ],
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromNdarrayStruct",
        "_setup"
      ]
    ],
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromDict",
        "_setup"
      ]
    ],
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromMapping",
        "_setup"
      ]
    ],
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromOrderedDict",
        "_setup"
      ]
    ],
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromRow",
        "_setup"
      ]
    ],
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromTable",
        "_setup"
      ]
    ],
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestJoin",
        "_setup"
      ]
    ],
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestSetdiff",
        "_setup"
      ]
    ],
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestVStack",
        "_setup"
      ]
    ],
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestDStack",
        "_setup"
      ]
    ],
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestHStack",
        "_setup"
      ]
    ],
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestPprint",
        "_setup"
      ]
    ],
    [
      "astropy/table/tests/test_row.py",
      [
        "TestRow",
        "_setup"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "SetupData",
        "_setup"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestUpdate",
        "_setup"
      ]
    ]
  ],
  "test_name_coslat": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestSphericalDifferential",
        "test_name_coslat"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestUnitSphericalDifferential",
        "test_name_coslat"
      ]
    ]
  ],
  "test_simple_differentials": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestSphericalDifferential",
        "test_simple_differentials"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestUnitSphericalDifferential",
        "test_simple_differentials"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestRadialDifferential",
        "test_simple_differentials"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestPhysicsSphericalDifferential",
        "test_simple_differentials"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestCylindricalDifferential",
        "test_simple_differentials"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestCartesianDifferential",
        "test_simple_differentials"
      ]
    ]
  ],
  "test_differential_arithmetic": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestSphericalDifferential",
        "test_differential_arithmetic"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestUnitSphericalDifferential",
        "test_differential_arithmetic"
      ]
    ]
  ],
  "test_differential_init_errors": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestSphericalDifferential",
        "test_differential_init_errors"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestUnitSphericalDifferential",
        "test_differential_init_errors"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestPhysicsSphericalDifferential",
        "test_differential_init_errors"
      ]
    ],
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestCylindricalDifferential",
        "test_differential_init_errors"
      ]
    ]
  ],
  "test_init_failures": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestCartesianDifferential",
        "test_init_failures"
      ]
    ]
  ],
  "test_represent_as_own_class": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestDifferentialConversion",
        "test_represent_as_own_class"
      ]
    ]
  ],
  "test_represent_other_coslat": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestDifferentialConversion",
        "test_represent_other_coslat"
      ]
    ]
  ],
  "test_represent_regular_class": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestDifferentialConversion",
        "test_represent_regular_class"
      ]
    ]
  ],
  "test_convert_physics": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestDifferentialConversion",
        "test_convert_physics"
      ]
    ]
  ],
  "test_convert_unit_spherical_radial": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestDifferentialConversion",
        "test_convert_unit_spherical_radial"
      ]
    ]
  ],
  "test_convert_cylindrial": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestDifferentialConversion",
        "test_convert_cylindrial"
      ]
    ]
  ],
  "test_combinations": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestDifferentialConversion",
        "test_combinations"
      ]
    ]
  ],
  "test_operation_cartesian": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestArithmeticWithDifferentials",
        "test_operation_cartesian"
      ]
    ]
  ],
  "test_operation_radial": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestArithmeticWithDifferentials",
        "test_operation_radial"
      ]
    ]
  ],
  "test_operation_other": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestArithmeticWithDifferentials",
        "test_operation_other"
      ]
    ]
  ],
  "test_operation_cartesian_differential": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestArithmeticWithDifferentials",
        "test_operation_cartesian_differential"
      ]
    ]
  ],
  "test_operation_unit_spherical": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestArithmeticWithDifferentials",
        "test_operation_unit_spherical"
      ]
    ]
  ],
  "test_operation_spherical_with_rv_or_pm": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "TestArithmeticWithDifferentials",
        "test_operation_spherical_with_rv_or_pm"
      ]
    ]
  ],
  "test_operation_unitspherical_with_rv_fails": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "test_operation_unitspherical_with_rv_fails"
      ]
    ]
  ],
  "test_arithmetic_with_differentials_fail": [
    [
      "astropy/coordinates/tests/test_representation_arithmetic.py",
      [
        "test_arithmetic_with_differentials_fail"
      ]
    ]
  ],
  "method": [
    [
      "astropy/coordinates/tests/test_representation_methods.py",
      [
        "method"
      ]
    ],
    [
      "astropy/coordinates/tests/test_shape_manipulation.py",
      [
        "method"
      ]
    ],
    [
      "astropy/cosmology/tests/test_utils.py",
      [
        "test_vectorize_redshift_method",
        "Class",
        "method"
      ]
    ]
  ],
  "test_ravel": [
    [
      "astropy/coordinates/tests/test_representation_methods.py",
      [
        "TestManipulation",
        "test_ravel"
      ]
    ],
    [
      "astropy/coordinates/tests/test_shape_manipulation.py",
      [
        "TestManipulation",
        "test_ravel"
      ]
    ],
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestManipulation",
        "test_ravel"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityReshapeFuncs",
        "test_ravel"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestShapeManipulation",
        "test_ravel"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestShapeManipulation",
        "test_ravel"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayShaping",
        "test_ravel"
      ]
    ]
  ],
  "test_flatten": [
    [
      "astropy/coordinates/tests/test_representation_methods.py",
      [
        "TestManipulation",
        "test_flatten"
      ]
    ],
    [
      "astropy/coordinates/tests/test_shape_manipulation.py",
      [
        "TestManipulation",
        "test_flatten"
      ]
    ],
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestManipulation",
        "test_flatten"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityReshapeFuncs",
        "test_flatten"
      ]
    ]
  ],
  "test_transpose": [
    [
      "astropy/coordinates/tests/test_representation_methods.py",
      [
        "TestManipulation",
        "test_transpose"
      ]
    ],
    [
      "astropy/coordinates/tests/test_shape_manipulation.py",
      [
        "TestManipulation",
        "test_transpose"
      ]
    ],
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestManipulation",
        "test_transpose"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityReshapeFuncs",
        "test_transpose"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestShapeManipulation",
        "test_transpose"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestShapeManipulation",
        "test_transpose"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayShaping",
        "test_transpose"
      ]
    ]
  ],
  "test_diagonal": [
    [
      "astropy/coordinates/tests/test_representation_methods.py",
      [
        "TestManipulation",
        "test_diagonal"
      ]
    ],
    [
      "astropy/coordinates/tests/test_shape_manipulation.py",
      [
        "TestManipulation",
        "test_diagonal"
      ]
    ],
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestManipulation",
        "test_diagonal"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestAccessingParts",
        "test_diagonal"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestAccessingParts",
        "test_diagonal"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_diagonal"
      ]
    ]
  ],
  "test_swapaxes": [
    [
      "astropy/coordinates/tests/test_representation_methods.py",
      [
        "TestManipulation",
        "test_swapaxes"
      ]
    ],
    [
      "astropy/coordinates/tests/test_shape_manipulation.py",
      [
        "TestManipulation",
        "test_swapaxes"
      ]
    ],
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestManipulation",
        "test_swapaxes"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityReshapeFuncs",
        "test_swapaxes"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestShapeManipulation",
        "test_swapaxes"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestShapeManipulation",
        "test_swapaxes"
      ]
    ]
  ],
  "test_reshape": [
    [
      "astropy/coordinates/tests/test_representation_methods.py",
      [
        "TestManipulation",
        "test_reshape"
      ]
    ],
    [
      "astropy/coordinates/tests/test_shape_manipulation.py",
      [
        "TestManipulation",
        "test_reshape"
      ]
    ],
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestManipulation",
        "test_reshape"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityReshapeFuncs",
        "test_reshape"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestShapeManipulation",
        "test_reshape"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestShapeManipulation",
        "test_reshape"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayShaping",
        "test_reshape"
      ]
    ]
  ],
  "test_squeeze": [
    [
      "astropy/coordinates/tests/test_representation_methods.py",
      [
        "TestManipulation",
        "test_squeeze"
      ]
    ],
    [
      "astropy/coordinates/tests/test_shape_manipulation.py",
      [
        "TestManipulation",
        "test_squeeze"
      ]
    ],
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestManipulation",
        "test_squeeze"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityReshapeFuncs",
        "test_squeeze"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestShapeManipulation",
        "test_squeeze"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestShapeManipulation",
        "test_squeeze"
      ]
    ]
  ],
  "test_add_dimension": [
    [
      "astropy/coordinates/tests/test_representation_methods.py",
      [
        "TestManipulation",
        "test_add_dimension"
      ]
    ],
    [
      "astropy/coordinates/tests/test_shape_manipulation.py",
      [
        "TestManipulation",
        "test_add_dimension"
      ]
    ],
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestManipulation",
        "test_add_dimension"
      ]
    ]
  ],
  "test_take": [
    [
      "astropy/coordinates/tests/test_representation_methods.py",
      [
        "TestManipulation",
        "test_take"
      ]
    ],
    [
      "astropy/coordinates/tests/test_shape_manipulation.py",
      [
        "TestManipulation",
        "test_take"
      ]
    ],
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestManipulation",
        "test_take"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestAccessingParts",
        "test_take"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestAccessingParts",
        "test_take"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "MaskedItemTests",
        "test_take"
      ]
    ]
  ],
  "test_broadcast_to_via_apply": [
    [
      "astropy/coordinates/tests/test_representation_methods.py",
      [
        "TestManipulation",
        "test_broadcast_to_via_apply"
      ]
    ]
  ],
  "test_shape_setting": [
    [
      "astropy/coordinates/tests/test_representation_methods.py",
      [
        "TestSetShape",
        "test_shape_setting"
      ]
    ],
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestSetShape",
        "test_shape_setting"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayShaping",
        "test_shape_setting"
      ]
    ]
  ],
  "test_broadcast_to": [
    [
      "astropy/coordinates/tests/test_representation_methods.py",
      [
        "TestShapeFunctions",
        "test_broadcast_to"
      ]
    ],
    [
      "astropy/coordinates/tests/test_shape_manipulation.py",
      [
        "TestManipulation",
        "test_broadcast_to"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestShapeManipulation",
        "test_broadcast_to"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestShapeManipulation",
        "test_broadcast_to"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_functions.py",
      [
        "TestMaskedArrayBroadcast",
        "test_broadcast_to"
      ]
    ]
  ],
  "test_atleast_1d": [
    [
      "astropy/coordinates/tests/test_representation_methods.py",
      [
        "TestShapeFunctions",
        "test_atleast_1d"
      ]
    ],
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestShapeFunctions",
        "test_atleast_1d"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestShapeManipulation",
        "test_atleast_1d"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestShapeManipulation",
        "test_atleast_1d"
      ]
    ]
  ],
  "test_atleast_2d": [
    [
      "astropy/coordinates/tests/test_representation_methods.py",
      [
        "TestShapeFunctions",
        "test_atleast_2d"
      ]
    ],
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestShapeFunctions",
        "test_atleast_2d"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestShapeManipulation",
        "test_atleast_2d"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestShapeManipulation",
        "test_atleast_2d"
      ]
    ]
  ],
  "test_atleast_3d": [
    [
      "astropy/coordinates/tests/test_representation_methods.py",
      [
        "TestShapeFunctions",
        "test_atleast_3d"
      ]
    ],
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestShapeFunctions",
        "test_atleast_3d"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestShapeManipulation",
        "test_atleast_3d"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestShapeManipulation",
        "test_atleast_3d"
      ]
    ]
  ],
  "test_move_axis": [
    [
      "astropy/coordinates/tests/test_representation_methods.py",
      [
        "TestShapeFunctions",
        "test_move_axis"
      ]
    ],
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestShapeFunctions",
        "test_move_axis"
      ]
    ]
  ],
  "test_roll_axis": [
    [
      "astropy/coordinates/tests/test_representation_methods.py",
      [
        "TestShapeFunctions",
        "test_roll_axis"
      ]
    ],
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestShapeFunctions",
        "test_roll_axis"
      ]
    ]
  ],
  "test_fliplr": [
    [
      "astropy/coordinates/tests/test_representation_methods.py",
      [
        "TestShapeFunctions",
        "test_fliplr"
      ]
    ],
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestShapeFunctions",
        "test_fliplr"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestShapeManipulation",
        "test_fliplr"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestShapeManipulation",
        "test_fliplr"
      ]
    ]
  ],
  "test_rot90": [
    [
      "astropy/coordinates/tests/test_representation_methods.py",
      [
        "TestShapeFunctions",
        "test_rot90"
      ]
    ],
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestShapeFunctions",
        "test_rot90"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestShapeManipulation",
        "test_rot90"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestShapeManipulation",
        "test_rot90"
      ]
    ]
  ],
  "test_roll": [
    [
      "astropy/coordinates/tests/test_representation_methods.py",
      [
        "TestShapeFunctions",
        "test_roll"
      ]
    ],
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestShapeFunctions",
        "test_roll"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestAccessingParts",
        "test_roll"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestAccessingParts",
        "test_roll"
      ]
    ]
  ],
  "test_delete": [
    [
      "astropy/coordinates/tests/test_representation_methods.py",
      [
        "TestShapeFunctions",
        "test_delete"
      ]
    ],
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestShapeFunctions",
        "test_delete"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestAccessingParts",
        "test_delete"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestAccessingParts",
        "test_delete"
      ]
    ]
  ],
  "test_shape_attribute_functions": [
    [
      "astropy/coordinates/tests/test_representation_methods.py",
      [
        "TestShapeFunctions",
        "test_shape_attribute_functions"
      ]
    ],
    [
      "astropy/time/tests/test_functions.py",
      [
        "test_shape_attribute_functions"
      ]
    ]
  ],
  "test_getitem0101": [
    [
      "astropy/coordinates/tests/test_shape_manipulation.py",
      [
        "TestManipulation",
        "test_getitem0101"
      ]
    ]
  ],
  "test_builtin_sites": [
    [
      "astropy/coordinates/tests/test_sites.py",
      [
        "test_builtin_sites"
      ]
    ]
  ],
  "test_online_sites": [
    [
      "astropy/coordinates/tests/test_sites.py",
      [
        "test_online_sites"
      ]
    ]
  ],
  "test_EarthLocation_basic": [
    [
      "astropy/coordinates/tests/test_sites.py",
      [
        "test_EarthLocation_basic"
      ]
    ]
  ],
  "test_EarthLocation_state_offline": [
    [
      "astropy/coordinates/tests/test_sites.py",
      [
        "test_EarthLocation_state_offline"
      ]
    ]
  ],
  "test_EarthLocation_state_online": [
    [
      "astropy/coordinates/tests/test_sites.py",
      [
        "test_EarthLocation_state_online"
      ]
    ]
  ],
  "test_registry": [
    [
      "astropy/coordinates/tests/test_sites.py",
      [
        "test_registry"
      ]
    ]
  ],
  "test_non_EarthLocation": [
    [
      "astropy/coordinates/tests/test_sites.py",
      [
        "test_non_EarthLocation"
      ]
    ]
  ],
  "check_builtin_matches_remote": [
    [
      "astropy/coordinates/tests/test_sites.py",
      [
        "check_builtin_matches_remote"
      ]
    ]
  ],
  "test_meta_present": [
    [
      "astropy/coordinates/tests/test_sites.py",
      [
        "test_meta_present"
      ]
    ]
  ],
  "allclose": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "allclose"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "allclose"
      ]
    ]
  ],
  "test_is_transformable_to_str_input": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_is_transformable_to_str_input"
      ]
    ]
  ],
  "test_transform_to": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_transform_to"
      ]
    ]
  ],
  "test_round_tripping": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_round_tripping"
      ]
    ]
  ],
  "test_coord_init_string": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_coord_init_string"
      ]
    ]
  ],
  "test_coord_init_unit": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_coord_init_unit"
      ]
    ]
  ],
  "test_coord_init_list": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_coord_init_list"
      ]
    ]
  ],
  "test_coord_init_array": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_coord_init_array"
      ]
    ]
  ],
  "test_coord_init_representation": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_coord_init_representation"
      ]
    ]
  ],
  "test_frame_init": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_frame_init"
      ]
    ]
  ],
  "test_equal_different_type": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_equal_different_type"
      ]
    ]
  ],
  "test_attr_inheritance": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_attr_inheritance"
      ]
    ]
  ],
  "test_setitem_initially_broadcast": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_setitem_initially_broadcast"
      ]
    ]
  ],
  "test_insert": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_insert"
      ]
    ],
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_insert"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestConcatenate",
        "test_insert"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestConcatenate",
        "test_insert"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_functions.py",
      [
        "TestMaskedArrayConcatenation",
        "test_insert"
      ]
    ]
  ],
  "test_insert_exceptions": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_insert_exceptions"
      ]
    ],
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_insert_exceptions"
      ]
    ]
  ],
  "test_attr_conflicts": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_attr_conflicts"
      ]
    ]
  ],
  "test_frame_attr_getattr": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_frame_attr_getattr"
      ]
    ]
  ],
  "test_to_string": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_to_string"
      ]
    ],
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityDisplay",
        "test_to_string"
      ]
    ]
  ],
  "test_seps": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_seps"
      ]
    ]
  ],
  "test_repr": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_repr"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "FlatFLRWMixinTest",
        "test_repr"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_lambdacdm.py",
      [
        "TestLambdaCDM",
        "test_repr"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_lambdacdm.py",
      [
        "TestFlatLambdaCDM",
        "test_repr"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_w0cdm.py",
      [
        "TestwCDM",
        "test_repr"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_w0cdm.py",
      [
        "TestFlatwCDM",
        "test_repr"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_w0wacdm.py",
      [
        "Testw0waCDM",
        "test_repr"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_w0wacdm.py",
      [
        "TestFlatw0waCDM",
        "test_repr"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_w0wzcdm.py",
      [
        "Testw0wzCDM",
        "test_repr"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_wpwazpcdm.py",
      [
        "TestwpwaCDM",
        "test_repr"
      ]
    ],
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "TestCosmology",
        "test_repr"
      ]
    ],
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_repr"
      ]
    ],
    [
      "astropy/modeling/tests/test_mappings.py",
      [
        "TestUnitsMapping",
        "test_repr"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitBasics",
        "test_repr"
      ]
    ],
    [
      "astropy/units/tests/test_units.py",
      [
        "test_repr"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/tests/test_misc.py",
      [
        "test_repr"
      ]
    ]
  ],
  "test_repr_altaz": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_repr_altaz"
      ]
    ]
  ],
  "test_ops": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_ops"
      ]
    ]
  ],
  "test_none_transform": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_none_transform"
      ]
    ]
  ],
  "test_position_angle": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_position_angle"
      ]
    ],
    [
      "astropy/coordinates/tests/test_sky_coord_velocities.py",
      [
        "test_position_angle"
      ]
    ]
  ],
  "test_position_angle_directly": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_position_angle_directly"
      ]
    ]
  ],
  "test_sep_pa_equivalence": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_sep_pa_equivalence"
      ]
    ]
  ],
  "test_directional_offset_by": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_directional_offset_by"
      ]
    ]
  ],
  "test_table_to_coord": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_table_to_coord"
      ]
    ]
  ],
  "assert_quantities_allclose": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "assert_quantities_allclose"
      ]
    ]
  ],
  "test_skycoord_three_components": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_skycoord_three_components"
      ]
    ]
  ],
  "test_skycoord_spherical_two_components": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_skycoord_spherical_two_components"
      ]
    ]
  ],
  "test_galactic_three_components": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_galactic_three_components"
      ]
    ]
  ],
  "test_galactic_spherical_two_components": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_galactic_spherical_two_components"
      ]
    ]
  ],
  "test_skycoord_coordinate_input": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_skycoord_coordinate_input"
      ]
    ]
  ],
  "test_skycoord_string_coordinate_input": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_skycoord_string_coordinate_input"
      ]
    ]
  ],
  "test_units": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_units"
      ]
    ],
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_units"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestPandas",
        "test_units"
      ]
    ],
    [
      "astropy/visualization/tests/test_units.py",
      [
        "test_units"
      ]
    ]
  ],
  "test_units_known_fail": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_units_known_fail"
      ]
    ]
  ],
  "test_nodata_failure": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_nodata_failure"
      ]
    ]
  ],
  "test_wcs_methods": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_wcs_methods"
      ]
    ]
  ],
  "test_frame_attr_transform_inherit": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_frame_attr_transform_inherit"
      ]
    ]
  ],
  "test_deepcopy": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_deepcopy"
      ]
    ],
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_deepcopy"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitsCopyPickle",
        "test_deepcopy"
      ]
    ]
  ],
  "test_no_copy": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_no_copy"
      ]
    ]
  ],
  "test_immutable": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_immutable"
      ]
    ]
  ],
  "test_init_with_frame_instance_keyword": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_init_with_frame_instance_keyword"
      ]
    ]
  ],
  "test_guess_from_table": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_guess_from_table"
      ]
    ]
  ],
  "test_skycoord_list_creation": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_skycoord_list_creation"
      ]
    ]
  ],
  "test_nd_skycoord_to_string": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_nd_skycoord_to_string"
      ]
    ]
  ],
  "test_equiv_skycoord": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_equiv_skycoord"
      ]
    ]
  ],
  "test_equiv_skycoord_with_extra_attrs": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_equiv_skycoord_with_extra_attrs"
      ]
    ]
  ],
  "test_constellations_with_nameresolve": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_constellations_with_nameresolve"
      ]
    ]
  ],
  "test_spherical_offsets_to_api": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_spherical_offsets_to_api"
      ]
    ]
  ],
  "test_spherical_offsets_roundtrip": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_spherical_offsets_roundtrip"
      ]
    ]
  ],
  "test_frame_attr_changes": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_frame_attr_changes"
      ]
    ]
  ],
  "test_cache_clear_sc": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_cache_clear_sc"
      ]
    ]
  ],
  "test_set_attribute_exceptions": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_set_attribute_exceptions"
      ]
    ]
  ],
  "test_extra_attributes": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_extra_attributes"
      ]
    ]
  ],
  "test_apply_space_motion": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_apply_space_motion"
      ]
    ]
  ],
  "test_custom_frame_skycoord": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_custom_frame_skycoord"
      ]
    ]
  ],
  "test_user_friendly_pm_error": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_user_friendly_pm_error"
      ]
    ]
  ],
  "test_contained_by": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_contained_by"
      ]
    ]
  ],
  "test_none_differential_type": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_none_differential_type"
      ]
    ]
  ],
  "test_multiple_aliases": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_multiple_aliases"
      ]
    ],
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "test_multiple_aliases"
      ]
    ]
  ],
  "test_passing_inconsistent_coordinates_and_units_raises_helpful_error": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_passing_inconsistent_coordinates_and_units_raises_helpful_error"
      ]
    ]
  ],
  "test_match_to_catalog_3d_and_sky": [
    [
      "astropy/coordinates/tests/test_sky_coord.py",
      [
        "test_match_to_catalog_3d_and_sky"
      ]
    ]
  ],
  "test_creation_frameobjs": [
    [
      "astropy/coordinates/tests/test_sky_coord_velocities.py",
      [
        "test_creation_frameobjs"
      ]
    ]
  ],
  "test_creation_attrs": [
    [
      "astropy/coordinates/tests/test_sky_coord_velocities.py",
      [
        "test_creation_attrs"
      ]
    ]
  ],
  "test_creation_copy_basic": [
    [
      "astropy/coordinates/tests/test_sky_coord_velocities.py",
      [
        "test_creation_copy_basic"
      ]
    ]
  ],
  "test_creation_copy_rediff": [
    [
      "astropy/coordinates/tests/test_sky_coord_velocities.py",
      [
        "test_creation_copy_rediff"
      ]
    ]
  ],
  "test_creation_cartesian": [
    [
      "astropy/coordinates/tests/test_sky_coord_velocities.py",
      [
        "test_creation_cartesian"
      ]
    ]
  ],
  "test_useful_error_missing": [
    [
      "astropy/coordinates/tests/test_sky_coord_velocities.py",
      [
        "test_useful_error_missing"
      ]
    ]
  ],
  "sc": [
    [
      "astropy/coordinates/tests/test_sky_coord_velocities.py",
      [
        "sc"
      ]
    ]
  ],
  "scmany": [
    [
      "astropy/coordinates/tests/test_sky_coord_velocities.py",
      [
        "scmany"
      ]
    ]
  ],
  "sc_for_sep": [
    [
      "astropy/coordinates/tests/test_sky_coord_velocities.py",
      [
        "sc_for_sep"
      ]
    ]
  ],
  "test_separation": [
    [
      "astropy/coordinates/tests/test_sky_coord_velocities.py",
      [
        "test_separation"
      ]
    ]
  ],
  "test_accessors": [
    [
      "astropy/coordinates/tests/test_sky_coord_velocities.py",
      [
        "test_accessors"
      ]
    ]
  ],
  "test_transforms": [
    [
      "astropy/coordinates/tests/test_sky_coord_velocities.py",
      [
        "test_transforms"
      ]
    ],
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestBasic",
        "test_transforms"
      ]
    ],
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "TestWcsWithTime",
        "test_transforms"
      ]
    ]
  ],
  "test_transforms_diff": [
    [
      "astropy/coordinates/tests/test_sky_coord_velocities.py",
      [
        "test_transforms_diff"
      ]
    ]
  ],
  "test_matching": [
    [
      "astropy/coordinates/tests/test_sky_coord_velocities.py",
      [
        "test_matching"
      ]
    ]
  ],
  "test_separation_3d_with_differentials": [
    [
      "astropy/coordinates/tests/test_sky_coord_velocities.py",
      [
        "test_separation_3d_with_differentials"
      ]
    ]
  ],
  "test_cartesian_to_spherical": [
    [
      "astropy/coordinates/tests/test_sky_coord_velocities.py",
      [
        "test_cartesian_to_spherical"
      ]
    ]
  ],
  "test_sc_unit_spherical_with_pm_or_rv_only": [
    [
      "astropy/coordinates/tests/test_sky_coord_velocities.py",
      [
        "TestDifferentialClassPropagation",
        "test_sc_unit_spherical_with_pm_or_rv_only"
      ]
    ]
  ],
  "test_sc_spherical_with_pm_or_rv_only": [
    [
      "astropy/coordinates/tests/test_sky_coord_velocities.py",
      [
        "TestDifferentialClassPropagation",
        "test_sc_spherical_with_pm_or_rv_only"
      ]
    ]
  ],
  "test_altaz_attribute_transforms": [
    [
      "astropy/coordinates/tests/test_skyoffset_transformations.py",
      [
        "test_altaz_attribute_transforms"
      ]
    ]
  ],
  "test_skyoffset": [
    [
      "astropy/coordinates/tests/test_skyoffset_transformations.py",
      [
        "test_skyoffset"
      ]
    ]
  ],
  "test_skyoffset_functional_ra": [
    [
      "astropy/coordinates/tests/test_skyoffset_transformations.py",
      [
        "test_skyoffset_functional_ra"
      ]
    ]
  ],
  "test_skyoffset_functional_dec": [
    [
      "astropy/coordinates/tests/test_skyoffset_transformations.py",
      [
        "test_skyoffset_functional_dec"
      ]
    ]
  ],
  "test_skyoffset_functional_ra_dec": [
    [
      "astropy/coordinates/tests/test_skyoffset_transformations.py",
      [
        "test_skyoffset_functional_ra_dec"
      ]
    ]
  ],
  "test_skycoord_skyoffset_frame": [
    [
      "astropy/coordinates/tests/test_skyoffset_transformations.py",
      [
        "test_skycoord_skyoffset_frame"
      ]
    ]
  ],
  "test_rotation": [
    [
      "astropy/coordinates/tests/test_skyoffset_transformations.py",
      [
        "test_rotation"
      ]
    ]
  ],
  "test_skycoord_skyoffset_frame_rotation": [
    [
      "astropy/coordinates/tests/test_skyoffset_transformations.py",
      [
        "test_skycoord_skyoffset_frame_rotation"
      ]
    ]
  ],
  "test_skyoffset_names": [
    [
      "astropy/coordinates/tests/test_skyoffset_transformations.py",
      [
        "test_skyoffset_names"
      ]
    ]
  ],
  "test_skyoffset_origindata": [
    [
      "astropy/coordinates/tests/test_skyoffset_transformations.py",
      [
        "test_skyoffset_origindata"
      ]
    ]
  ],
  "test_skyoffset_lonwrap": [
    [
      "astropy/coordinates/tests/test_skyoffset_transformations.py",
      [
        "test_skyoffset_lonwrap"
      ]
    ]
  ],
  "test_skyoffset_velocity": [
    [
      "astropy/coordinates/tests/test_skyoffset_transformations.py",
      [
        "test_skyoffset_velocity"
      ]
    ]
  ],
  "test_skyoffset_velocity_rotation": [
    [
      "astropy/coordinates/tests/test_skyoffset_transformations.py",
      [
        "test_skyoffset_velocity_rotation"
      ]
    ]
  ],
  "test_skyoffset_two_frames_interfering": [
    [
      "astropy/coordinates/tests/test_skyoffset_transformations.py",
      [
        "test_skyoffset_two_frames_interfering"
      ]
    ]
  ],
  "test_positions_skyfield": [
    [
      "astropy/coordinates/tests/test_solar_system.py",
      [
        "test_positions_skyfield"
      ]
    ]
  ],
  "test_erfa_planet": [
    [
      "astropy/coordinates/tests/test_solar_system.py",
      [
        "TestPositionsGeocentric",
        "test_erfa_planet"
      ]
    ],
    [
      "astropy/coordinates/tests/test_solar_system.py",
      [
        "TestPositionKittPeak",
        "test_erfa_planet"
      ]
    ]
  ],
  "test_de432s_planet": [
    [
      "astropy/coordinates/tests/test_solar_system.py",
      [
        "TestPositionsGeocentric",
        "test_de432s_planet"
      ]
    ],
    [
      "astropy/coordinates/tests/test_solar_system.py",
      [
        "TestPositionKittPeak",
        "test_de432s_planet"
      ]
    ]
  ],
  "test_de432s_moon": [
    [
      "astropy/coordinates/tests/test_solar_system.py",
      [
        "TestPositionsGeocentric",
        "test_de432s_moon"
      ]
    ],
    [
      "astropy/coordinates/tests/test_solar_system.py",
      [
        "TestPositionKittPeak",
        "test_de432s_moon"
      ]
    ]
  ],
  "test_custom_kernel_spec_body": [
    [
      "astropy/coordinates/tests/test_solar_system.py",
      [
        "TestPositionKittPeak",
        "test_custom_kernel_spec_body"
      ]
    ]
  ],
  "test_horizons_consistency_with_precision": [
    [
      "astropy/coordinates/tests/test_solar_system.py",
      [
        "test_horizons_consistency_with_precision"
      ]
    ]
  ],
  "test_get_sun_consistency": [
    [
      "astropy/coordinates/tests/test_solar_system.py",
      [
        "test_get_sun_consistency"
      ]
    ]
  ],
  "test_get_moon_nonscalar_regression": [
    [
      "astropy/coordinates/tests/test_solar_system.py",
      [
        "test_get_moon_nonscalar_regression"
      ]
    ]
  ],
  "test_barycentric_pos_posvel_same": [
    [
      "astropy/coordinates/tests/test_solar_system.py",
      [
        "test_barycentric_pos_posvel_same"
      ]
    ]
  ],
  "test_earth_barycentric_velocity_rough": [
    [
      "astropy/coordinates/tests/test_solar_system.py",
      [
        "test_earth_barycentric_velocity_rough"
      ]
    ]
  ],
  "test_earth_barycentric_velocity_multi_d": [
    [
      "astropy/coordinates/tests/test_solar_system.py",
      [
        "test_earth_barycentric_velocity_multi_d"
      ]
    ]
  ],
  "test_barycentric_velocity_consistency": [
    [
      "astropy/coordinates/tests/test_solar_system.py",
      [
        "test_barycentric_velocity_consistency"
      ]
    ]
  ],
  "test_url_or_file_ephemeris": [
    [
      "astropy/coordinates/tests/test_solar_system.py",
      [
        "test_url_or_file_ephemeris"
      ]
    ]
  ],
  "test_url_ephemeris_wrong_input": [
    [
      "astropy/coordinates/tests/test_solar_system.py",
      [
        "test_url_ephemeris_wrong_input"
      ]
    ]
  ],
  "test_file_ephemeris_wrong_input": [
    [
      "astropy/coordinates/tests/test_solar_system.py",
      [
        "test_file_ephemeris_wrong_input"
      ]
    ]
  ],
  "test_regression_10271": [
    [
      "astropy/coordinates/tests/test_solar_system.py",
      [
        "test_regression_10271"
      ]
    ]
  ],
  "assert_frame_allclose": [
    [
      "astropy/coordinates/tests/test_spectral_coordinate.py",
      [
        "assert_frame_allclose"
      ]
    ]
  ],
  "get_greenwich_earthlocation": [
    [
      "astropy/coordinates/tests/test_spectral_coordinate.py",
      [
        "get_greenwich_earthlocation"
      ]
    ]
  ],
  "test_create_spectral_coord_observer_target": [
    [
      "astropy/coordinates/tests/test_spectral_coordinate.py",
      [
        "test_create_spectral_coord_observer_target"
      ]
    ]
  ],
  "test_create_from_spectral_coord": [
    [
      "astropy/coordinates/tests/test_spectral_coordinate.py",
      [
        "test_create_from_spectral_coord"
      ]
    ]
  ],
  "test_apply_relativistic_doppler_shift": [
    [
      "astropy/coordinates/tests/test_spectral_coordinate.py",
      [
        "test_apply_relativistic_doppler_shift"
      ]
    ]
  ],
  "test_init_spectral_quantity": [
    [
      "astropy/coordinates/tests/test_spectral_coordinate.py",
      [
        "test_init_spectral_quantity"
      ]
    ]
  ],
  "test_init_too_many_args": [
    [
      "astropy/coordinates/tests/test_spectral_coordinate.py",
      [
        "test_init_too_many_args"
      ]
    ]
  ],
  "test_init_wrong_type": [
    [
      "astropy/coordinates/tests/test_spectral_coordinate.py",
      [
        "test_init_wrong_type"
      ]
    ]
  ],
  "test_observer_init_rv_behavior": [
    [
      "astropy/coordinates/tests/test_spectral_coordinate.py",
      [
        "test_observer_init_rv_behavior"
      ]
    ]
  ],
  "test_rv_redshift_initialization": [
    [
      "astropy/coordinates/tests/test_spectral_coordinate.py",
      [
        "test_rv_redshift_initialization"
      ]
    ]
  ],
  "test_replicate": [
    [
      "astropy/coordinates/tests/test_spectral_coordinate.py",
      [
        "test_replicate"
      ]
    ],
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestCopyReplicate",
        "test_replicate"
      ]
    ]
  ],
  "test_with_observer_stationary_relative_to": [
    [
      "astropy/coordinates/tests/test_spectral_coordinate.py",
      [
        "test_with_observer_stationary_relative_to"
      ]
    ]
  ],
  "test_los_shift_radial_velocity": [
    [
      "astropy/coordinates/tests/test_spectral_coordinate.py",
      [
        "test_los_shift_radial_velocity"
      ]
    ]
  ],
  "test_relativistic_radial_velocity": [
    [
      "astropy/coordinates/tests/test_spectral_coordinate.py",
      [
        "test_relativistic_radial_velocity"
      ]
    ]
  ],
  "test_spectral_coord_jupiter": [
    [
      "astropy/coordinates/tests/test_spectral_coordinate.py",
      [
        "test_spectral_coord_jupiter"
      ]
    ]
  ],
  "test_spectral_coord_alphacen": [
    [
      "astropy/coordinates/tests/test_spectral_coordinate.py",
      [
        "test_spectral_coord_alphacen"
      ]
    ]
  ],
  "test_spectral_coord_m31": [
    [
      "astropy/coordinates/tests/test_spectral_coordinate.py",
      [
        "test_spectral_coord_m31"
      ]
    ]
  ],
  "test_shift_to_rest_galaxy": [
    [
      "astropy/coordinates/tests/test_spectral_coordinate.py",
      [
        "test_shift_to_rest_galaxy"
      ]
    ]
  ],
  "test_shift_to_rest_star_withobserver": [
    [
      "astropy/coordinates/tests/test_spectral_coordinate.py",
      [
        "test_shift_to_rest_star_withobserver"
      ]
    ]
  ],
  "test_los_shift": [
    [
      "astropy/coordinates/tests/test_spectral_coordinate.py",
      [
        "test_los_shift"
      ]
    ]
  ],
  "test_asteroid_velocity_frame_shifts": [
    [
      "astropy/coordinates/tests/test_spectral_coordinate.py",
      [
        "test_asteroid_velocity_frame_shifts"
      ]
    ]
  ],
  "test_spectral_coord_from_sky_coord_without_distance": [
    [
      "astropy/coordinates/tests/test_spectral_coordinate.py",
      [
        "test_spectral_coord_from_sky_coord_without_distance"
      ]
    ]
  ],
  "test_spectralcoord_accuracy": [
    [
      "astropy/coordinates/tests/test_spectral_coordinate.py",
      [
        "test_spectralcoord_accuracy"
      ]
    ]
  ],
  "test_init_value": [
    [
      "astropy/coordinates/tests/test_spectral_quantity.py",
      [
        "TestSpectralQuantity",
        "test_init_value"
      ]
    ]
  ],
  "test_init_spectralquantity": [
    [
      "astropy/coordinates/tests/test_spectral_quantity.py",
      [
        "TestSpectralQuantity",
        "test_init_spectralquantity"
      ]
    ]
  ],
  "test_init_invalid": [
    [
      "astropy/coordinates/tests/test_spectral_quantity.py",
      [
        "TestSpectralQuantity",
        "test_init_invalid"
      ]
    ]
  ],
  "test_spectral_conversion": [
    [
      "astropy/coordinates/tests/test_spectral_quantity.py",
      [
        "TestSpectralQuantity",
        "test_spectral_conversion"
      ]
    ]
  ],
  "test_doppler_conversion": [
    [
      "astropy/coordinates/tests/test_spectral_quantity.py",
      [
        "TestSpectralQuantity",
        "test_doppler_conversion"
      ]
    ]
  ],
  "test_doppler_conversion_validation": [
    [
      "astropy/coordinates/tests/test_spectral_quantity.py",
      [
        "TestSpectralQuantity",
        "test_doppler_conversion_validation"
      ]
    ]
  ],
  "test_doppler_set_parameters": [
    [
      "astropy/coordinates/tests/test_spectral_quantity.py",
      [
        "TestSpectralQuantity",
        "test_doppler_set_parameters"
      ]
    ]
  ],
  "test_arithmetic": [
    [
      "astropy/coordinates/tests/test_spectral_quantity.py",
      [
        "TestSpectralQuantity",
        "test_arithmetic"
      ]
    ]
  ],
  "test_ufuncs": [
    [
      "astropy/coordinates/tests/test_spectral_quantity.py",
      [
        "TestSpectralQuantity",
        "test_ufuncs"
      ]
    ]
  ],
  "test_functions": [
    [
      "astropy/coordinates/tests/test_spectral_quantity.py",
      [
        "TestSpectralQuantity",
        "test_functions"
      ]
    ]
  ],
  "test_functions_std": [
    [
      "astropy/coordinates/tests/test_spectral_quantity.py",
      [
        "TestSpectralQuantity",
        "test_functions_std"
      ]
    ]
  ],
  "tfun": [
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "test_transform_classes",
        "tfun"
      ]
    ],
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "test_remove_transform_and_unregister",
        "tfun"
      ]
    ]
  ],
  "matfunc": [
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "test_transform_classes",
        "matfunc"
      ]
    ]
  ],
  "test_transform_classes": [
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "test_transform_classes"
      ]
    ]
  ],
  "trans": [
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "test_transform_decos",
        "trans"
      ]
    ]
  ],
  "matrix": [
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "test_transform_decos",
        "matrix"
      ]
    ],
    [
      "astropy/modeling/projections.py",
      [
        "AffineTransformation2D",
        "matrix"
      ]
    ]
  ],
  "test_transform_decos": [
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "test_transform_decos"
      ]
    ]
  ],
  "test_shortest_path": [
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "test_shortest_path"
      ]
    ]
  ],
  "test_sphere_cart": [
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "test_sphere_cart"
      ]
    ]
  ],
  "test_transform_path_pri": [
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "test_transform_path_pri"
      ]
    ]
  ],
  "test_obstime": [
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "test_obstime"
      ]
    ]
  ],
  "both": [
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "transfunc",
        "both"
      ]
    ]
  ],
  "just_matrix": [
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "transfunc",
        "just_matrix"
      ]
    ]
  ],
  "no_matrix": [
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "transfunc",
        "no_matrix"
      ]
    ]
  ],
  "no_pos": [
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "transfunc",
        "no_pos"
      ]
    ]
  ],
  "no_vel": [
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "transfunc",
        "no_vel"
      ]
    ]
  ],
  "test_affine_transform_succeed": [
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "test_affine_transform_succeed"
      ]
    ]
  ],
  "transfunc_invalid_matrix": [
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "transfunc_invalid_matrix"
      ]
    ]
  ],
  "test_affine_transform_fail": [
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "test_affine_transform_fail"
      ]
    ]
  ],
  "test_too_many_differentials": [
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "test_too_many_differentials"
      ]
    ]
  ],
  "test_unit_spherical_with_differentials": [
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "test_unit_spherical_with_differentials"
      ]
    ]
  ],
  "test_vel_transformation_obstime_err": [
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "test_vel_transformation_obstime_err"
      ]
    ]
  ],
  "test_function_transform_with_differentials": [
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "test_function_transform_with_differentials"
      ]
    ]
  ],
  "test_frame_override_component_with_attribute": [
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "test_frame_override_component_with_attribute"
      ]
    ]
  ],
  "test_static_matrix_combine_paths": [
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "test_static_matrix_combine_paths"
      ]
    ]
  ],
  "test_remove_transform_and_unregister": [
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "test_remove_transform_and_unregister"
      ]
    ]
  ],
  "test_remove_transform_errors": [
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "test_remove_transform_errors"
      ]
    ]
  ],
  "test_impose_finite_difference_dt": [
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "test_impose_finite_difference_dt"
      ]
    ]
  ],
  "test_combine_affine_params": [
    [
      "astropy/coordinates/tests/test_transformations.py",
      [
        "test_combine_affine_params"
      ]
    ]
  ],
  "myframe_to_icrs": [
    [
      "astropy/coordinates/tests/test_unit_representation.py",
      [
        "test_unit_representation_subclass",
        "myframe_to_icrs"
      ]
    ]
  ],
  "test_unit_representation_subclass": [
    [
      "astropy/coordinates/tests/test_unit_representation.py",
      [
        "test_unit_representation_subclass"
      ]
    ]
  ],
  "test_polar_motion_unsupported_dates": [
    [
      "astropy/coordinates/tests/test_utils.py",
      [
        "test_polar_motion_unsupported_dates"
      ]
    ]
  ],
  "test_sun_from_barycenter_offset": [
    [
      "astropy/coordinates/tests/test_utils.py",
      [
        "test_sun_from_barycenter_offset"
      ]
    ]
  ],
  "test_helio_iraf": [
    [
      "astropy/coordinates/tests/test_velocity_corrs.py",
      [
        "test_helio_iraf"
      ]
    ]
  ],
  "generate_IRAF_input": [
    [
      "astropy/coordinates/tests/test_velocity_corrs.py",
      [
        "generate_IRAF_input"
      ]
    ]
  ],
  "_get_test_input_radecs": [
    [
      "astropy/coordinates/tests/test_velocity_corrs.py",
      [
        "_get_test_input_radecs"
      ]
    ]
  ],
  "test_barycorr": [
    [
      "astropy/coordinates/tests/test_velocity_corrs.py",
      [
        "test_barycorr"
      ]
    ]
  ],
  "_get_barycorr_bvcs": [
    [
      "astropy/coordinates/tests/test_velocity_corrs.py",
      [
        "_get_barycorr_bvcs"
      ]
    ]
  ],
  "test_rvcorr_multiple_obstimes_onskycoord": [
    [
      "astropy/coordinates/tests/test_velocity_corrs.py",
      [
        "test_rvcorr_multiple_obstimes_onskycoord"
      ]
    ]
  ],
  "test_invalid_argument_combos": [
    [
      "astropy/coordinates/tests/test_velocity_corrs.py",
      [
        "test_invalid_argument_combos"
      ]
    ]
  ],
  "test_regression_9645": [
    [
      "astropy/coordinates/tests/test_velocity_corrs.py",
      [
        "test_regression_9645"
      ]
    ]
  ],
  "test_barycorr_withvels": [
    [
      "astropy/coordinates/tests/test_velocity_corrs.py",
      [
        "test_barycorr_withvels"
      ]
    ]
  ],
  "_get_test_input_radecvels": [
    [
      "astropy/coordinates/tests/test_velocity_corrs.py",
      [
        "_get_test_input_radecvels"
      ]
    ]
  ],
  "_get_barycorr_bvcs_withvels": [
    [
      "astropy/coordinates/tests/test_velocity_corrs.py",
      [
        "_get_barycorr_bvcs_withvels"
      ]
    ]
  ],
  "test_warning_no_obstime_on_skycoord": [
    [
      "astropy/coordinates/tests/test_velocity_corrs.py",
      [
        "test_warning_no_obstime_on_skycoord"
      ]
    ]
  ],
  "test_regression_10094": [
    [
      "astropy/coordinates/tests/test_velocity_corrs.py",
      [
        "test_regression_10094"
      ]
    ]
  ],
  "frame_attrs_from_set": [
    [
      "astropy/coordinates/transformations.py",
      [
        "frame_attrs_from_set"
      ]
    ]
  ],
  "frame_comps_from_set": [
    [
      "astropy/coordinates/transformations.py",
      [
        "frame_comps_from_set"
      ]
    ]
  ],
  "_cached_names": [
    [
      "astropy/coordinates/transformations.py",
      [
        "TransformGraph",
        "_cached_names"
      ]
    ]
  ],
  "frame_set": [
    [
      "astropy/coordinates/transformations.py",
      [
        "TransformGraph",
        "frame_set"
      ]
    ]
  ],
  "frame_attributes": [
    [
      "astropy/coordinates/transformations.py",
      [
        "TransformGraph",
        "frame_attributes"
      ]
    ]
  ],
  "frame_component_names": [
    [
      "astropy/coordinates/transformations.py",
      [
        "TransformGraph",
        "frame_component_names"
      ]
    ]
  ],
  "invalidate_cache": [
    [
      "astropy/coordinates/transformations.py",
      [
        "TransformGraph",
        "invalidate_cache"
      ]
    ]
  ],
  "add_transform": [
    [
      "astropy/coordinates/transformations.py",
      [
        "TransformGraph",
        "add_transform"
      ]
    ]
  ],
  "remove_transform": [
    [
      "astropy/coordinates/transformations.py",
      [
        "TransformGraph",
        "remove_transform"
      ]
    ]
  ],
  "find_shortest_path": [
    [
      "astropy/coordinates/transformations.py",
      [
        "TransformGraph",
        "find_shortest_path"
      ]
    ]
  ],
  "get_transform": [
    [
      "astropy/coordinates/transformations.py",
      [
        "TransformGraph",
        "get_transform"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/core.py",
      [
        "WCSAxes",
        "get_transform"
      ]
    ]
  ],
  "lookup_name": [
    [
      "astropy/coordinates/transformations.py",
      [
        "TransformGraph",
        "lookup_name"
      ]
    ]
  ],
  "get_names": [
    [
      "astropy/coordinates/transformations.py",
      [
        "TransformGraph",
        "get_names"
      ]
    ]
  ],
  "to_dot_graph": [
    [
      "astropy/coordinates/transformations.py",
      [
        "TransformGraph",
        "to_dot_graph"
      ]
    ]
  ],
  "to_networkx_graph": [
    [
      "astropy/coordinates/transformations.py",
      [
        "TransformGraph",
        "to_networkx_graph"
      ]
    ]
  ],
  "deco": [
    [
      "astropy/coordinates/transformations.py",
      [
        "TransformGraph",
        "transform",
        "deco"
      ]
    ]
  ],
  "_add_merged_transform": [
    [
      "astropy/coordinates/transformations.py",
      [
        "TransformGraph",
        "_add_merged_transform"
      ]
    ]
  ],
  "impose_finite_difference_dt": [
    [
      "astropy/coordinates/transformations.py",
      [
        "TransformGraph",
        "impose_finite_difference_dt"
      ]
    ]
  ],
  "unregister": [
    [
      "astropy/coordinates/transformations.py",
      [
        "CoordinateTransform",
        "unregister"
      ]
    ],
    [
      "astropy/samp/client.py",
      [
        "SAMPClient",
        "unregister"
      ]
    ],
    [
      "astropy/samp/hub_proxy.py",
      [
        "SAMPHubProxy",
        "unregister"
      ]
    ],
    [
      "astropy/samp/tests/web_profile_test_helpers.py",
      [
        "SAMPWebClient",
        "unregister"
      ]
    ]
  ],
  "finite_difference_frameattr_name": [
    [
      "astropy/coordinates/transformations.py",
      [
        "FunctionTransformWithFiniteDifference",
        "finite_difference_frameattr_name"
      ]
    ]
  ],
  "finite_difference_frameattr_name_1": [
    [
      "astropy/coordinates/transformations.py",
      [
        "FunctionTransformWithFiniteDifference",
        "finite_difference_frameattr_name_1"
      ]
    ]
  ],
  "_apply_transform": [
    [
      "astropy/coordinates/transformations.py",
      [
        "BaseAffineTransform",
        "_apply_transform"
      ]
    ]
  ],
  "_affine_params": [
    [
      "astropy/coordinates/transformations.py",
      [
        "BaseAffineTransform",
        "_affine_params"
      ]
    ],
    [
      "astropy/coordinates/transformations.py",
      [
        "AffineTransform",
        "_affine_params"
      ]
    ],
    [
      "astropy/coordinates/transformations.py",
      [
        "StaticMatrixTransform",
        "_affine_params"
      ]
    ],
    [
      "astropy/coordinates/transformations.py",
      [
        "DynamicMatrixTransform",
        "_affine_params"
      ]
    ]
  ],
  "_combine_statics": [
    [
      "astropy/coordinates/transformations.py",
      [
        "CompositeTransform",
        "_combine_statics"
      ]
    ]
  ],
  "single_transform": [
    [
      "astropy/coordinates/transformations.py",
      [
        "CompositeTransform",
        "_as_single_transform",
        "if_all_isinstance_t_Bas",
        "single_transform"
      ]
    ]
  ],
  "_as_single_transform": [
    [
      "astropy/coordinates/transformations.py",
      [
        "CompositeTransform",
        "_as_single_transform"
      ]
    ]
  ],
  "_combine_affine_params": [
    [
      "astropy/coordinates/transformations.py",
      [
        "_combine_affine_params"
      ]
    ]
  ],
  "_init_signature": [
    [
      "astropy/cosmology/core.py",
      [
        "Cosmology",
        "_init_signature"
      ]
    ]
  ],
  "is_flat": [
    [
      "astropy/cosmology/core.py",
      [
        "Cosmology",
        "is_flat"
      ]
    ],
    [
      "astropy/cosmology/core.py",
      [
        "FlatCosmologyMixin",
        "is_flat"
      ]
    ],
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "is_flat"
      ]
    ],
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "SubCosmology",
        "is_flat"
      ]
    ]
  ],
  "clone": [
    [
      "astropy/cosmology/core.py",
      [
        "Cosmology",
        "clone"
      ]
    ],
    [
      "astropy/cosmology/parameter.py",
      [
        "Parameter",
        "clone"
      ]
    ],
    [
      "astropy/extern/ply/lex.py",
      [
        "Lexer",
        "clone"
      ]
    ]
  ],
  "_init_arguments": [
    [
      "astropy/cosmology/core.py",
      [
        "Cosmology",
        "_init_arguments"
      ]
    ]
  ],
  "is_equivalent": [
    [
      "astropy/cosmology/core.py",
      [
        "Cosmology",
        "is_equivalent"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "is_equivalent"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnrecognizedUnit",
        "is_equivalent"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "is_equivalent"
      ]
    ],
    [
      "astropy/units/structured.py",
      [
        "StructuredUnit",
        "is_equivalent"
      ]
    ]
  ],
  "__equiv__": [
    [
      "astropy/cosmology/core.py",
      [
        "Cosmology",
        "__equiv__"
      ]
    ],
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FlatFLRWMixin",
        "__equiv__"
      ]
    ]
  ],
  "__astropy_table__": [
    [
      "astropy/cosmology/core.py",
      [
        "Cosmology",
        "__astropy_table__"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "Test__Astropy_Table__",
        "SimpleTable",
        "__astropy_table__"
      ]
    ]
  ],
  "Ob0": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "Ob0"
      ]
    ]
  ],
  "m_nu": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "m_nu"
      ]
    ]
  ],
  "Otot0": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "Otot0"
      ]
    ],
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FlatFLRWMixin",
        "Otot0"
      ]
    ]
  ],
  "Odm0": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "Odm0"
      ]
    ]
  ],
  "Ok0": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "Ok0"
      ]
    ]
  ],
  "Tnu0": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "Tnu0"
      ]
    ]
  ],
  "has_massive_nu": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "has_massive_nu"
      ]
    ]
  ],
  "h": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "h"
      ]
    ]
  ],
  "hubble_time": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "hubble_time"
      ]
    ]
  ],
  "hubble_distance": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "hubble_distance"
      ]
    ]
  ],
  "critical_density0": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "critical_density0"
      ]
    ]
  ],
  "Ogamma0": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "Ogamma0"
      ]
    ]
  ],
  "Onu0": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "Onu0"
      ]
    ]
  ],
  "w": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "w"
      ]
    ],
    [
      "astropy/cosmology/flrw/lambdacdm.py",
      [
        "LambdaCDM",
        "w"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "SubFLRW",
        "w"
      ]
    ],
    [
      "astropy/cosmology/flrw/w0cdm.py",
      [
        "wCDM",
        "w"
      ]
    ],
    [
      "astropy/cosmology/flrw/w0wacdm.py",
      [
        "w0waCDM",
        "w"
      ]
    ],
    [
      "astropy/cosmology/flrw/w0wzcdm.py",
      [
        "w0wzCDM",
        "w"
      ]
    ],
    [
      "astropy/cosmology/flrw/wpwazpcdm.py",
      [
        "wpwaCDM",
        "w"
      ]
    ],
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_cos_sub",
        "w"
      ]
    ],
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_cos_subnu",
        "w"
      ]
    ]
  ],
  "Otot": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "Otot"
      ]
    ],
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FlatFLRWMixin",
        "Otot"
      ]
    ]
  ],
  "Om": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "Om"
      ]
    ]
  ],
  "Ob": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "Ob"
      ]
    ]
  ],
  "Odm": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "Odm"
      ]
    ]
  ],
  "Ok": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "Ok"
      ]
    ]
  ],
  "Ode": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "Ode"
      ]
    ]
  ],
  "Ogamma": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "Ogamma"
      ]
    ]
  ],
  "Onu": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "Onu"
      ]
    ]
  ],
  "Tcmb": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "Tcmb"
      ]
    ]
  ],
  "Tnu": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "Tnu"
      ]
    ]
  ],
  "nu_relative_density": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "nu_relative_density"
      ]
    ]
  ],
  "_w_integrand": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "_w_integrand"
      ]
    ]
  ],
  "de_density_scale": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "de_density_scale"
      ]
    ],
    [
      "astropy/cosmology/flrw/lambdacdm.py",
      [
        "LambdaCDM",
        "de_density_scale"
      ]
    ],
    [
      "astropy/cosmology/flrw/w0cdm.py",
      [
        "wCDM",
        "de_density_scale"
      ]
    ],
    [
      "astropy/cosmology/flrw/w0wacdm.py",
      [
        "w0waCDM",
        "de_density_scale"
      ]
    ],
    [
      "astropy/cosmology/flrw/w0wzcdm.py",
      [
        "w0wzCDM",
        "de_density_scale"
      ]
    ],
    [
      "astropy/cosmology/flrw/wpwazpcdm.py",
      [
        "wpwaCDM",
        "de_density_scale"
      ]
    ]
  ],
  "efunc": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "efunc"
      ]
    ],
    [
      "astropy/cosmology/flrw/lambdacdm.py",
      [
        "LambdaCDM",
        "efunc"
      ]
    ],
    [
      "astropy/cosmology/flrw/lambdacdm.py",
      [
        "FlatLambdaCDM",
        "efunc"
      ]
    ],
    [
      "astropy/cosmology/flrw/w0cdm.py",
      [
        "wCDM",
        "efunc"
      ]
    ],
    [
      "astropy/cosmology/flrw/w0cdm.py",
      [
        "FlatwCDM",
        "efunc"
      ]
    ]
  ],
  "inv_efunc": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "inv_efunc"
      ]
    ],
    [
      "astropy/cosmology/flrw/lambdacdm.py",
      [
        "LambdaCDM",
        "inv_efunc"
      ]
    ],
    [
      "astropy/cosmology/flrw/lambdacdm.py",
      [
        "FlatLambdaCDM",
        "inv_efunc"
      ]
    ],
    [
      "astropy/cosmology/flrw/w0cdm.py",
      [
        "wCDM",
        "inv_efunc"
      ]
    ],
    [
      "astropy/cosmology/flrw/w0cdm.py",
      [
        "FlatwCDM",
        "inv_efunc"
      ]
    ]
  ],
  "_lookback_time_integrand_scalar": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "_lookback_time_integrand_scalar"
      ]
    ]
  ],
  "lookback_time_integrand": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "lookback_time_integrand"
      ]
    ]
  ],
  "_abs_distance_integrand_scalar": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "_abs_distance_integrand_scalar"
      ]
    ]
  ],
  "abs_distance_integrand": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "abs_distance_integrand"
      ]
    ]
  ],
  "H": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "H"
      ]
    ]
  ],
  "scale_factor": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "scale_factor"
      ]
    ]
  ],
  "lookback_time": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "lookback_time"
      ]
    ]
  ],
  "_lookback_time": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "_lookback_time"
      ]
    ]
  ],
  "_integral_lookback_time": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "_integral_lookback_time"
      ]
    ]
  ],
  "lookback_distance": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "lookback_distance"
      ]
    ]
  ],
  "age": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "age"
      ]
    ]
  ],
  "_age": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "_age"
      ]
    ]
  ],
  "_integral_age": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "_integral_age"
      ]
    ]
  ],
  "critical_density": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "critical_density"
      ]
    ]
  ],
  "comoving_distance": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "comoving_distance"
      ]
    ]
  ],
  "_comoving_distance_z1z2": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "_comoving_distance_z1z2"
      ]
    ]
  ],
  "_integral_comoving_distance_z1z2_scalar": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "_integral_comoving_distance_z1z2_scalar"
      ]
    ]
  ],
  "_integral_comoving_distance_z1z2": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "_integral_comoving_distance_z1z2"
      ]
    ]
  ],
  "comoving_transverse_distance": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "comoving_transverse_distance"
      ]
    ]
  ],
  "_comoving_transverse_distance_z1z2": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "_comoving_transverse_distance_z1z2"
      ]
    ]
  ],
  "angular_diameter_distance": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "angular_diameter_distance"
      ]
    ]
  ],
  "luminosity_distance": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "luminosity_distance"
      ]
    ]
  ],
  "angular_diameter_distance_z1z2": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "angular_diameter_distance_z1z2"
      ]
    ]
  ],
  "absorption_distance": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "absorption_distance"
      ]
    ]
  ],
  "comoving_volume": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "comoving_volume"
      ]
    ]
  ],
  "differential_comoving_volume": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "differential_comoving_volume"
      ]
    ]
  ],
  "kpc_comoving_per_arcmin": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "kpc_comoving_per_arcmin"
      ]
    ]
  ],
  "kpc_proper_per_arcmin": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "kpc_proper_per_arcmin"
      ]
    ]
  ],
  "arcsec_per_kpc_comoving": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "arcsec_per_kpc_comoving"
      ]
    ]
  ],
  "arcsec_per_kpc_proper": [
    [
      "astropy/cosmology/flrw/base.py",
      [
        "FLRW",
        "arcsec_per_kpc_proper"
      ]
    ]
  ],
  "_optimize_flat_norad": [
    [
      "astropy/cosmology/flrw/lambdacdm.py",
      [
        "LambdaCDM",
        "_optimize_flat_norad"
      ]
    ]
  ],
  "phi_z": [
    [
      "astropy/cosmology/flrw/lambdacdm.py",
      [
        "LambdaCDM",
        "_elliptic_comoving_distance_z1z2",
        "if_b_0_or_2_b_",
        "phi_z"
      ]
    ]
  ],
  "_elliptic_comoving_distance_z1z2": [
    [
      "astropy/cosmology/flrw/lambdacdm.py",
      [
        "LambdaCDM",
        "_elliptic_comoving_distance_z1z2"
      ]
    ]
  ],
  "_dS_comoving_distance_z1z2": [
    [
      "astropy/cosmology/flrw/lambdacdm.py",
      [
        "LambdaCDM",
        "_dS_comoving_distance_z1z2"
      ]
    ]
  ],
  "_EdS_comoving_distance_z1z2": [
    [
      "astropy/cosmology/flrw/lambdacdm.py",
      [
        "LambdaCDM",
        "_EdS_comoving_distance_z1z2"
      ]
    ]
  ],
  "_hypergeometric_comoving_distance_z1z2": [
    [
      "astropy/cosmology/flrw/lambdacdm.py",
      [
        "LambdaCDM",
        "_hypergeometric_comoving_distance_z1z2"
      ]
    ]
  ],
  "_T_hypergeometric": [
    [
      "astropy/cosmology/flrw/lambdacdm.py",
      [
        "LambdaCDM",
        "_T_hypergeometric"
      ]
    ]
  ],
  "_dS_age": [
    [
      "astropy/cosmology/flrw/lambdacdm.py",
      [
        "LambdaCDM",
        "_dS_age"
      ]
    ]
  ],
  "_EdS_age": [
    [
      "astropy/cosmology/flrw/lambdacdm.py",
      [
        "LambdaCDM",
        "_EdS_age"
      ]
    ]
  ],
  "_flat_age": [
    [
      "astropy/cosmology/flrw/lambdacdm.py",
      [
        "LambdaCDM",
        "_flat_age"
      ]
    ]
  ],
  "_EdS_lookback_time": [
    [
      "astropy/cosmology/flrw/lambdacdm.py",
      [
        "LambdaCDM",
        "_EdS_lookback_time"
      ]
    ]
  ],
  "_dS_lookback_time": [
    [
      "astropy/cosmology/flrw/lambdacdm.py",
      [
        "LambdaCDM",
        "_dS_lookback_time"
      ]
    ]
  ],
  "_flat_lookback_time": [
    [
      "astropy/cosmology/flrw/lambdacdm.py",
      [
        "LambdaCDM",
        "_flat_lookback_time"
      ]
    ]
  ],
  "test_optional_deps_functions": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "test_optional_deps_functions"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_lambdacdm.py",
      [
        "test_optional_deps_functions"
      ]
    ]
  ],
  "test_H0": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "ParameterH0TestMixin",
        "test_H0"
      ]
    ]
  ],
  "test_init_H0": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "ParameterH0TestMixin",
        "test_init_H0"
      ]
    ]
  ],
  "test_Om0": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "ParameterOm0TestMixin",
        "test_Om0"
      ]
    ]
  ],
  "test_init_Om0": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "ParameterOm0TestMixin",
        "test_init_Om0"
      ]
    ]
  ],
  "test_Parameter_Ode0": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "ParameterOde0TestMixin",
        "test_Parameter_Ode0"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "ParameterFlatOde0TestMixin",
        "test_Parameter_Ode0"
      ]
    ]
  ],
  "test_Parameter_Ode0_validation": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "ParameterOde0TestMixin",
        "test_Parameter_Ode0_validation"
      ]
    ]
  ],
  "test_Ode0": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "ParameterOde0TestMixin",
        "test_Ode0"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "ParameterFlatOde0TestMixin",
        "test_Ode0"
      ]
    ]
  ],
  "test_init_Ode0": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "ParameterOde0TestMixin",
        "test_init_Ode0"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "ParameterFlatOde0TestMixin",
        "test_init_Ode0"
      ]
    ]
  ],
  "test_Tcmb0": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "ParameterTcmb0TestMixin",
        "test_Tcmb0"
      ]
    ]
  ],
  "test_init_Tcmb0": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "ParameterTcmb0TestMixin",
        "test_init_Tcmb0"
      ]
    ]
  ],
  "test_Neff": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "ParameterNeffTestMixin",
        "test_Neff"
      ]
    ]
  ],
  "test_init_Neff": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "ParameterNeffTestMixin",
        "test_init_Neff"
      ]
    ]
  ],
  "test_m_nu": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "Parameterm_nuTestMixin",
        "test_m_nu"
      ]
    ]
  ],
  "test_init_m_nu": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "Parameterm_nuTestMixin",
        "test_init_m_nu"
      ]
    ]
  ],
  "test_init_m_nu_and_Neff": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "Parameterm_nuTestMixin",
        "test_init_m_nu_and_Neff"
      ]
    ]
  ],
  "test_init_m_nu_override_by_Tcmb0": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "Parameterm_nuTestMixin",
        "test_init_m_nu_override_by_Tcmb0"
      ]
    ]
  ],
  "test_Ob0": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "ParameterOb0TestMixin",
        "test_Ob0"
      ]
    ]
  ],
  "test_init_Ob0": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "ParameterOb0TestMixin",
        "test_init_Ob0"
      ]
    ]
  ],
  "nonflatcosmo": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "TestFLRW",
        "nonflatcosmo"
      ]
    ]
  ],
  "test_init": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "TestFLRW",
        "test_init"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "FlatFLRWMixinTest",
        "test_init"
      ]
    ],
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "TestCosmology",
        "test_init"
      ]
    ],
    [
      "astropy/nddata/tests/test_flag_collection.py",
      [
        "test_init"
      ]
    ],
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestTableColumnsInit",
        "test_init"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredSpecificTypeQuantity",
        "test_init"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredMaskedQuantity",
        "test_init"
      ]
    ]
  ],
  "test_init_Tcmb0_zeroing": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "TestFLRW",
        "test_init_Tcmb0_zeroing"
      ]
    ]
  ],
  "test_Odm0": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "TestFLRW",
        "test_Odm0"
      ]
    ]
  ],
  "test_Ok0": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "TestFLRW",
        "test_Ok0"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "FlatFLRWMixinTest",
        "test_Ok0"
      ]
    ]
  ],
  "test_is_flat": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "TestFLRW",
        "test_is_flat"
      ]
    ],
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "TestCosmology",
        "test_is_flat"
      ]
    ],
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "CosmologySubclassTest",
        "test_is_flat"
      ]
    ],
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "FlatCosmologyMixinTest",
        "test_is_flat"
      ]
    ]
  ],
  "test_Tnu0": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "TestFLRW",
        "test_Tnu0"
      ]
    ]
  ],
  "test_has_massive_nu": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "TestFLRW",
        "test_has_massive_nu"
      ]
    ]
  ],
  "test_hubble_time": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "TestFLRW",
        "test_hubble_time"
      ]
    ]
  ],
  "test_hubble_distance": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "TestFLRW",
        "test_hubble_distance"
      ]
    ]
  ],
  "test_critical_density0": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "TestFLRW",
        "test_critical_density0"
      ]
    ]
  ],
  "test_Ogamma0": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "TestFLRW",
        "test_Ogamma0"
      ]
    ]
  ],
  "test_Onu0": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "TestFLRW",
        "test_Onu0"
      ]
    ]
  ],
  "test_Otot0": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "TestFLRW",
        "test_Otot0"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "FlatFLRWMixinTest",
        "test_Otot0"
      ]
    ]
  ],
  "test_w": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "TestFLRW",
        "test_w"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "FLRWSubclassTest",
        "test_w"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_lambdacdm.py",
      [
        "TestLambdaCDM",
        "test_w"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_w0cdm.py",
      [
        "TestwCDM",
        "test_w"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_w0wacdm.py",
      [
        "Testw0waCDM",
        "test_w"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_w0wzcdm.py",
      [
        "Testw0wzCDM",
        "test_w"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_wpwazpcdm.py",
      [
        "TestwpwaCDM",
        "test_w"
      ]
    ]
  ],
  "test_Otot": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "TestFLRW",
        "test_Otot"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "FLRWSubclassTest",
        "test_Otot"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "FlatFLRWMixinTest",
        "test_Otot"
      ]
    ]
  ],
  "test_efunc_vs_invefunc": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "TestFLRW",
        "test_efunc_vs_invefunc"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "FLRWSubclassTest",
        "test_efunc_vs_invefunc"
      ]
    ]
  ],
  "test_clone_change_param": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "TestFLRW",
        "test_clone_change_param"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_w0cdm.py",
      [
        "TestwCDM",
        "test_clone_change_param"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_w0wacdm.py",
      [
        "Testw0waCDM",
        "test_clone_change_param"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_w0wzcdm.py",
      [
        "Testw0wzCDM",
        "test_clone_change_param"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_wpwazpcdm.py",
      [
        "TestwpwaCDM",
        "test_clone_change_param"
      ]
    ],
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "TestCosmology",
        "test_clone_change_param"
      ]
    ]
  ],
  "test_is_equivalent": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "TestFLRW",
        "test_is_equivalent"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "FlatFLRWMixinTest",
        "test_is_equivalent"
      ]
    ],
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "TestCosmology",
        "test_is_equivalent"
      ]
    ],
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "FlatCosmologyMixinTest",
        "test_is_equivalent"
      ]
    ],
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_is_equivalent"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitMethods",
        "test_is_equivalent"
      ]
    ]
  ],
  "test_redshift_method_bad_input": [
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "FLRWSubclassTest",
        "test_redshift_method_bad_input"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_base.py",
      [
        "FlatFLRWMixinTest",
        "test_redshift_method_bad_input"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_lambdacdm.py",
      [
        "TestLambdaCDM",
        "test_redshift_method_bad_input"
      ]
    ],
    [
      "astropy/cosmology/flrw/tests/test_lambdacdm.py",
      [
        "TestFlatLambdaCDM",
        "test_redshift_method_bad_input"
      ]
    ]
  ],
  "test_w0": [
    [
      "astropy/cosmology/flrw/tests/test_w0cdm.py",
      [
        "Parameterw0TestMixin",
        "test_w0"
      ]
    ]
  ],
  "test_init_w0": [
    [
      "astropy/cosmology/flrw/tests/test_w0cdm.py",
      [
        "Parameterw0TestMixin",
        "test_init_w0"
      ]
    ]
  ],
  "test_wa": [
    [
      "astropy/cosmology/flrw/tests/test_w0wacdm.py",
      [
        "ParameterwaTestMixin",
        "test_wa"
      ]
    ]
  ],
  "test_init_wa": [
    [
      "astropy/cosmology/flrw/tests/test_w0wacdm.py",
      [
        "ParameterwaTestMixin",
        "test_init_wa"
      ]
    ]
  ],
  "test_wz": [
    [
      "astropy/cosmology/flrw/tests/test_w0wzcdm.py",
      [
        "ParameterwzTestMixin",
        "test_wz"
      ]
    ]
  ],
  "test_init_wz": [
    [
      "astropy/cosmology/flrw/tests/test_w0wzcdm.py",
      [
        "ParameterwzTestMixin",
        "test_init_wz"
      ]
    ]
  ],
  "test_wp": [
    [
      "astropy/cosmology/flrw/tests/test_wpwazpcdm.py",
      [
        "ParameterwpTestMixin",
        "test_wp"
      ]
    ]
  ],
  "test_init_wp": [
    [
      "astropy/cosmology/flrw/tests/test_wpwazpcdm.py",
      [
        "ParameterwpTestMixin",
        "test_init_wp"
      ]
    ]
  ],
  "test_zp": [
    [
      "astropy/cosmology/flrw/tests/test_wpwazpcdm.py",
      [
        "ParameterzpTestMixin",
        "test_zp"
      ]
    ]
  ],
  "test_init_zp": [
    [
      "astropy/cosmology/flrw/tests/test_wpwazpcdm.py",
      [
        "ParameterzpTestMixin",
        "test_init_zp"
      ]
    ]
  ],
  "f": [
    [
      "astropy/cosmology/funcs.py",
      [
        "_z_at_scalar_value",
        "f"
      ]
    ],
    [
      "astropy/units/equivalencies.py",
      [
        "thermodynamic_temperature",
        "f"
      ]
    ]
  ],
  "_z_at_scalar_value": [
    [
      "astropy/cosmology/funcs.py",
      [
        "_z_at_scalar_value"
      ]
    ]
  ],
  "z_at_value": [
    [
      "astropy/cosmology/funcs.py",
      [
        "z_at_value"
      ]
    ]
  ],
  "from_cosmology": [
    [
      "astropy/cosmology/io/cosmology.py",
      [
        "from_cosmology"
      ]
    ]
  ],
  "to_cosmology": [
    [
      "astropy/cosmology/io/cosmology.py",
      [
        "to_cosmology"
      ]
    ]
  ],
  "cosmology_identify": [
    [
      "astropy/cosmology/io/cosmology.py",
      [
        "cosmology_identify"
      ]
    ]
  ],
  "read_ecsv": [
    [
      "astropy/cosmology/io/ecsv.py",
      [
        "read_ecsv"
      ]
    ]
  ],
  "write_ecsv": [
    [
      "astropy/cosmology/io/ecsv.py",
      [
        "write_ecsv"
      ]
    ]
  ],
  "ecsv_identify": [
    [
      "astropy/cosmology/io/ecsv.py",
      [
        "ecsv_identify"
      ]
    ]
  ],
  "from_mapping": [
    [
      "astropy/cosmology/io/mapping.py",
      [
        "from_mapping"
      ]
    ]
  ],
  "to_mapping": [
    [
      "astropy/cosmology/io/mapping.py",
      [
        "to_mapping"
      ]
    ]
  ],
  "mapping_identify": [
    [
      "astropy/cosmology/io/mapping.py",
      [
        "mapping_identify"
      ]
    ]
  ],
  "_cosmology_class": [
    [
      "astropy/cosmology/io/model.py",
      [
        "_CosmologyModel",
        "_cosmology_class"
      ]
    ]
  ],
  "_method_name": [
    [
      "astropy/cosmology/io/model.py",
      [
        "_CosmologyModel",
        "_method_name"
      ]
    ]
  ],
  "cosmology_class": [
    [
      "astropy/cosmology/io/model.py",
      [
        "_CosmologyModel",
        "cosmology_class"
      ]
    ]
  ],
  "cosmology": [
    [
      "astropy/cosmology/io/model.py",
      [
        "_CosmologyModel",
        "cosmology"
      ]
    ]
  ],
  "method_name": [
    [
      "astropy/cosmology/io/model.py",
      [
        "_CosmologyModel",
        "method_name"
      ]
    ],
    [
      "astropy/cosmology/io/tests/test_model.py",
      [
        "ToFromModelTestMixin",
        "method_name"
      ]
    ]
  ],
  "evaluate": [
    [
      "astropy/cosmology/io/model.py",
      [
        "_CosmologyModel",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "_BoundingDomain",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Gaussian1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Gaussian2D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Shift",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Scale",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Multiply",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "RedshiftScaleFactor",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Sersic1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Sine1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Cosine1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Tangent1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "ArcSine1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "ArcCosine1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "ArcTangent1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Linear1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Planar2D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Lorentz1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Voigt1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Const1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Const2D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Ellipse2D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Disk2D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Ring2D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Box1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Box2D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Trapezoid1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "TrapezoidDisk2D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "RickerWavelet1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "RickerWavelet2D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "AiryDisk2D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Moffat1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Moffat2D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Sersic2D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "KingProjectedAnalytic1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Logarithmic1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Exponential1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/mappings.py",
      [
        "Mapping",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/mappings.py",
      [
        "UnitsMapping",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/physical_models.py",
      [
        "BlackBody",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/physical_models.py",
      [
        "Drude1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/physical_models.py",
      [
        "Plummer1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/physical_models.py",
      [
        "NFW",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "OrthoPolynomialBase",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Chebyshev1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Hermite1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Legendre1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Polynomial1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Polynomial2D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "_SIP1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "SIP",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "InverseSIP",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/powerlaws.py",
      [
        "PowerLaw1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/powerlaws.py",
      [
        "BrokenPowerLaw1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/powerlaws.py",
      [
        "SmoothlyBrokenPowerLaw1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/powerlaws.py",
      [
        "ExponentialCutoffPowerLaw1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/powerlaws.py",
      [
        "LogParabola1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/projections.py",
      [
        "Pix2SkyProjection",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/projections.py",
      [
        "Sky2PixProjection",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/projections.py",
      [
        "Pix2Sky_PlateCarree",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/projections.py",
      [
        "Sky2Pix_PlateCarree",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/projections.py",
      [
        "AffineTransformation2D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/rotations.py",
      [
        "RotationSequence3D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/rotations.py",
      [
        "SphericalRotationSequence",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/rotations.py",
      [
        "_EulerRotation",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/rotations.py",
      [
        "EulerAngleRotation",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/rotations.py",
      [
        "RotateNative2Celestial",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/rotations.py",
      [
        "RotateCelestial2Native",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/rotations.py",
      [
        "Rotation2D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/spline.py",
      [
        "_Spline",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/spline.py",
      [
        "Spline1D",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/tabular.py",
      [
        "_Tabular",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "_ConstraintsTestA",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "_ConstraintsTestB",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "test_default_constraints",
        "MyModel",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "test_fit_with_bound_constraints_estimate_jacobian",
        "MyModel",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/tests/test_core.py",
      [
        "NonFittableModel",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_inputless_model",
        "TestModel",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_custom_inverse_reset",
        "TestModel",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TModel_1_1",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TModel_1_2",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/tests/test_input.py",
      [
        "test_more_outputs",
        "M",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TInputFormatter",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/tests/test_model_sets.py",
      [
        "TParModel",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/tests/test_models.py",
      [
        "classmodel",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/tests/test_models.py",
      [
        "subclassmodel",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/tests/test_models.py",
      [
        "ModelDefault",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "SetterModel",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TParModel",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "MockModel",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "M1",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/tests/test_quantities_evaluation.py",
      [
        "MyTestModel",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/tests/test_quantities_evaluation.py",
      [
        "test_compound_return_units",
        "PassModel",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/tests/test_quantities_fitting.py",
      [
        "CustomInputNamesModel",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/tests/test_quantities_parameters.py",
      [
        "BaseTestModel",
        "evaluate"
      ]
    ],
    [
      "astropy/modeling/tests/test_units_mapping.py",
      [
        "_ExampleModel",
        "evaluate"
      ]
    ],
    [
      "astropy/stats/spatial.py",
      [
        "RipleysKEstimator",
        "evaluate"
      ]
    ]
  ],
  "from_model": [
    [
      "astropy/cosmology/io/model.py",
      [
        "from_model"
      ]
    ]
  ],
  "to_model": [
    [
      "astropy/cosmology/io/model.py",
      [
        "to_model"
      ]
    ]
  ],
  "model_identify": [
    [
      "astropy/cosmology/io/model.py",
      [
        "model_identify"
      ]
    ]
  ],
  "from_row": [
    [
      "astropy/cosmology/io/row.py",
      [
        "from_row"
      ]
    ]
  ],
  "to_row": [
    [
      "astropy/cosmology/io/row.py",
      [
        "to_row"
      ]
    ]
  ],
  "row_identify": [
    [
      "astropy/cosmology/io/row.py",
      [
        "row_identify"
      ]
    ]
  ],
  "from_table": [
    [
      "astropy/cosmology/io/table.py",
      [
        "from_table"
      ]
    ],
    [
      "astropy/io/votable/table.py",
      [
        "from_table"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "from_table"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "VOTableFile",
        "from_table"
      ]
    ]
  ],
  "table_identify": [
    [
      "astropy/cosmology/io/table.py",
      [
        "table_identify"
      ]
    ]
  ],
  "from_format": [
    [
      "astropy/cosmology/io/tests/base.py",
      [
        "ToFromTestMixinBase",
        "from_format"
      ]
    ],
    [
      "astropy/cosmology/io/tests/base.py",
      [
        "ToFromDirectTestBase",
        "from_format"
      ]
    ]
  ],
  "to_format": [
    [
      "astropy/cosmology/io/tests/base.py",
      [
        "ToFromTestMixinBase",
        "to_format"
      ]
    ],
    [
      "astropy/cosmology/io/tests/base.py",
      [
        "ToFromDirectTestBase",
        "to_format"
      ]
    ]
  ],
  "can_autodentify": [
    [
      "astropy/cosmology/io/tests/base.py",
      [
        "ToFromTestMixinBase",
        "can_autodentify"
      ]
    ]
  ],
  "read": [
    [
      "astropy/cosmology/io/tests/base.py",
      [
        "ReadWriteTestMixinBase",
        "read"
      ]
    ],
    [
      "astropy/cosmology/io/tests/base.py",
      [
        "ReadWriteDirectTestBase",
        "read"
      ]
    ],
    [
      "astropy/io/ascii/basic.py",
      [
        "CommentedHeader",
        "read"
      ]
    ],
    [
      "astropy/io/ascii/cds.py",
      [
        "Cds",
        "read"
      ]
    ],
    [
      "astropy/io/ascii/core.py",
      [
        "BaseReader",
        "read"
      ]
    ],
    [
      "astropy/io/ascii/fastbasic.py",
      [
        "FastBasic",
        "read"
      ]
    ],
    [
      "astropy/io/ascii/html.py",
      [
        "HTML",
        "read"
      ]
    ],
    [
      "astropy/io/ascii/qdp.py",
      [
        "QDP",
        "read"
      ]
    ],
    [
      "astropy/io/ascii/sextractor.py",
      [
        "SExtractor",
        "read"
      ]
    ],
    [
      "astropy/io/ascii/ui.py",
      [
        "read"
      ]
    ],
    [
      "astropy/io/fits/file.py",
      [
        "_File",
        "read"
      ]
    ],
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_uncloseable_file",
        "MyFileLike",
        "read"
      ]
    ],
    [
      "astropy/io/registry/core.py",
      [
        "UnifiedInputRegistry",
        "read"
      ]
    ],
    [
      "astropy/timeseries/binned.py",
      [
        "BinnedTimeSeries",
        "read"
      ]
    ],
    [
      "astropy/timeseries/sampled.py",
      [
        "TimeSeries",
        "read"
      ]
    ],
    [
      "astropy/utils/iers/iers.py",
      [
        "IERS_A",
        "read"
      ]
    ],
    [
      "astropy/utils/iers/iers.py",
      [
        "IERS_B",
        "read"
      ]
    ],
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_compressed_stream",
        "FakeStream",
        "read"
      ]
    ],
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_file_wrong_size",
        "MockURL",
        "read"
      ]
    ],
    [
      "astropy/utils/xml/tests/test_iterparse.py",
      [
        "UngzipFileWrapper",
        "read"
      ]
    ]
  ],
  "write": [
    [
      "astropy/cosmology/io/tests/base.py",
      [
        "ReadWriteTestMixinBase",
        "write"
      ]
    ],
    [
      "astropy/cosmology/io/tests/base.py",
      [
        "ReadWriteDirectTestBase",
        "write"
      ]
    ],
    [
      "astropy/extern/configobj/configobj.py",
      [
        "ConfigObj",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/basic.py",
      [
        "CommentedHeaderHeader",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/basic.py",
      [
        "RdbHeader",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/cds.py",
      [
        "Cds",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/core.py",
      [
        "BaseHeader",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/core.py",
      [
        "BaseData",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/core.py",
      [
        "BaseReader",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/daophot.py",
      [
        "Daophot",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/ecsv.py",
      [
        "EcsvHeader",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/fastbasic.py",
      [
        "FastBasic",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/fastbasic.py",
      [
        "FastCsv",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/fastbasic.py",
      [
        "FastNoHeader",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/fastbasic.py",
      [
        "FastCommentedHeader",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/fastbasic.py",
      [
        "FastRdb",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/fixedwidth.py",
      [
        "FixedWidthHeader",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/fixedwidth.py",
      [
        "FixedWidthData",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/html.py",
      [
        "ListWriter",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/html.py",
      [
        "HTML",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/ipac.py",
      [
        "IpacHeader",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/ipac.py",
      [
        "IpacData",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/ipac.py",
      [
        "Ipac",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/latex.py",
      [
        "LatexHeader",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/latex.py",
      [
        "LatexData",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/latex.py",
      [
        "Latex",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/latex.py",
      [
        "AASTexHeader",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/latex.py",
      [
        "AASTexData",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/mrt.py",
      [
        "MrtHeader",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/mrt.py",
      [
        "MrtData",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/mrt.py",
      [
        "Mrt",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/qdp.py",
      [
        "QDP",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/rst.py",
      [
        "RST",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/sextractor.py",
      [
        "SExtractor",
        "write"
      ]
    ],
    [
      "astropy/io/ascii/ui.py",
      [
        "write"
      ]
    ],
    [
      "astropy/io/fits/file.py",
      [
        "_File",
        "write"
      ]
    ],
    [
      "astropy/io/fits/hdu/streaming.py",
      [
        "StreamingHDU",
        "write"
      ]
    ],
    [
      "astropy/io/registry/core.py",
      [
        "UnifiedOutputRegistry",
        "write"
      ]
    ],
    [
      "astropy/io/tests/safeio.py",
      [
        "CatchZeroByteWriter",
        "write"
      ]
    ],
    [
      "astropy/utils/misc.py",
      [
        "_DummyFile",
        "write"
      ]
    ],
    [
      "astropy/utils/tests/test_console.py",
      [
        "FakeTTY",
        "write"
      ]
    ]
  ],
  "add_cu": [
    [
      "astropy/cosmology/io/tests/base.py",
      [
        "ReadWriteTestMixinBase",
        "add_cu"
      ]
    ]
  ],
  "cosmo": [
    [
      "astropy/cosmology/io/tests/base.py",
      [
        "IODirectTestBase",
        "cosmo"
      ]
    ],
    [
      "astropy/cosmology/tests/test_connect.py",
      [
        "TestCosmologyReadWrite",
        "cosmo"
      ]
    ],
    [
      "astropy/cosmology/tests/test_connect.py",
      [
        "TestCosmologyToFromFormat",
        "cosmo"
      ]
    ],
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "TestCosmology",
        "cosmo"
      ]
    ],
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "TestParameter",
        "cosmo"
      ]
    ],
    [
      "astropy/cosmology/tests/test_units.py",
      [
        "Test_with_redshift",
        "cosmo"
      ]
    ]
  ],
  "cosmo_cls": [
    [
      "astropy/cosmology/io/tests/base.py",
      [
        "IODirectTestBase",
        "cosmo_cls"
      ]
    ],
    [
      "astropy/cosmology/tests/test_connect.py",
      [
        "TestCosmologyReadWrite",
        "cosmo_cls"
      ]
    ],
    [
      "astropy/cosmology/tests/test_connect.py",
      [
        "TestCosmologyToFromFormat",
        "cosmo_cls"
      ]
    ],
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "TestCosmology",
        "cosmo_cls"
      ]
    ],
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "TestParameter",
        "cosmo_cls"
      ]
    ]
  ],
  "test_to_cosmology_default": [
    [
      "astropy/cosmology/io/tests/test_cosmology.py",
      [
        "ToFromCosmologyTestMixin",
        "test_to_cosmology_default"
      ]
    ]
  ],
  "test_from_not_cosmology": [
    [
      "astropy/cosmology/io/tests/test_cosmology.py",
      [
        "ToFromCosmologyTestMixin",
        "test_from_not_cosmology"
      ]
    ]
  ],
  "test_from_cosmology_default": [
    [
      "astropy/cosmology/io/tests/test_cosmology.py",
      [
        "ToFromCosmologyTestMixin",
        "test_from_cosmology_default"
      ]
    ]
  ],
  "test_is_equivalent_to_cosmology": [
    [
      "astropy/cosmology/io/tests/test_cosmology.py",
      [
        "ToFromCosmologyTestMixin",
        "test_is_equivalent_to_cosmology"
      ]
    ]
  ],
  "test_to_ecsv_bad_index": [
    [
      "astropy/cosmology/io/tests/test_ecsv.py",
      [
        "ReadWriteECSVTestMixin",
        "test_to_ecsv_bad_index"
      ]
    ]
  ],
  "test_to_ecsv_failed_cls": [
    [
      "astropy/cosmology/io/tests/test_ecsv.py",
      [
        "ReadWriteECSVTestMixin",
        "test_to_ecsv_failed_cls"
      ]
    ]
  ],
  "test_to_ecsv_cls": [
    [
      "astropy/cosmology/io/tests/test_ecsv.py",
      [
        "ReadWriteECSVTestMixin",
        "test_to_ecsv_cls"
      ]
    ]
  ],
  "test_to_ecsv_in_meta": [
    [
      "astropy/cosmology/io/tests/test_ecsv.py",
      [
        "ReadWriteECSVTestMixin",
        "test_to_ecsv_in_meta"
      ]
    ]
  ],
  "test_readwrite_ecsv_instance": [
    [
      "astropy/cosmology/io/tests/test_ecsv.py",
      [
        "ReadWriteECSVTestMixin",
        "test_readwrite_ecsv_instance"
      ]
    ]
  ],
  "test_readwrite_ecsv_subclass_partial_info": [
    [
      "astropy/cosmology/io/tests/test_ecsv.py",
      [
        "ReadWriteECSVTestMixin",
        "test_readwrite_ecsv_subclass_partial_info"
      ]
    ]
  ],
  "test_readwrite_ecsv_mutlirow": [
    [
      "astropy/cosmology/io/tests/test_ecsv.py",
      [
        "ReadWriteECSVTestMixin",
        "test_readwrite_ecsv_mutlirow"
      ]
    ]
  ],
  "read_json": [
    [
      "astropy/cosmology/io/tests/test_json.py",
      [
        "read_json"
      ]
    ]
  ],
  "write_json": [
    [
      "astropy/cosmology/io/tests/test_json.py",
      [
        "write_json"
      ]
    ]
  ],
  "json_identify": [
    [
      "astropy/cosmology/io/tests/test_json.py",
      [
        "json_identify"
      ]
    ]
  ],
  "register_and_unregister_json": [
    [
      "astropy/cosmology/io/tests/test_json.py",
      [
        "ReadWriteJSONTestMixin",
        "register_and_unregister_json"
      ]
    ]
  ],
  "test_readwrite_json_subclass_partial_info": [
    [
      "astropy/cosmology/io/tests/test_json.py",
      [
        "ReadWriteJSONTestMixin",
        "test_readwrite_json_subclass_partial_info"
      ]
    ]
  ],
  "test_to_mapping_default": [
    [
      "astropy/cosmology/io/tests/test_mapping.py",
      [
        "ToFromMappingTestMixin",
        "test_to_mapping_default"
      ]
    ]
  ],
  "test_to_mapping_wrong_cls": [
    [
      "astropy/cosmology/io/tests/test_mapping.py",
      [
        "ToFromMappingTestMixin",
        "test_to_mapping_wrong_cls"
      ]
    ]
  ],
  "test_to_mapping_cls": [
    [
      "astropy/cosmology/io/tests/test_mapping.py",
      [
        "ToFromMappingTestMixin",
        "test_to_mapping_cls"
      ]
    ]
  ],
  "test_to_mapping_cosmology_as_str": [
    [
      "astropy/cosmology/io/tests/test_mapping.py",
      [
        "ToFromMappingTestMixin",
        "test_to_mapping_cosmology_as_str"
      ]
    ]
  ],
  "test_tofrom_mapping_cosmology_as_str": [
    [
      "astropy/cosmology/io/tests/test_mapping.py",
      [
        "ToFromMappingTestMixin",
        "test_tofrom_mapping_cosmology_as_str"
      ]
    ]
  ],
  "test_to_mapping_move_from_meta": [
    [
      "astropy/cosmology/io/tests/test_mapping.py",
      [
        "ToFromMappingTestMixin",
        "test_to_mapping_move_from_meta"
      ]
    ]
  ],
  "test_tofrom_mapping_move_tofrom_meta": [
    [
      "astropy/cosmology/io/tests/test_mapping.py",
      [
        "ToFromMappingTestMixin",
        "test_tofrom_mapping_move_tofrom_meta"
      ]
    ]
  ],
  "test_from_not_mapping": [
    [
      "astropy/cosmology/io/tests/test_mapping.py",
      [
        "ToFromMappingTestMixin",
        "test_from_not_mapping"
      ]
    ]
  ],
  "test_from_mapping_default": [
    [
      "astropy/cosmology/io/tests/test_mapping.py",
      [
        "ToFromMappingTestMixin",
        "test_from_mapping_default"
      ]
    ]
  ],
  "test_fromformat_subclass_partial_info_mapping": [
    [
      "astropy/cosmology/io/tests/test_mapping.py",
      [
        "ToFromMappingTestMixin",
        "test_fromformat_subclass_partial_info_mapping"
      ]
    ],
    [
      "astropy/cosmology/io/tests/test_mapping.py",
      [
        "TestToFromMapping",
        "test_fromformat_subclass_partial_info_mapping"
      ]
    ]
  ],
  "test_is_equivalent_to_mapping": [
    [
      "astropy/cosmology/io/tests/test_mapping.py",
      [
        "ToFromMappingTestMixin",
        "test_is_equivalent_to_mapping"
      ]
    ]
  ],
  "test_fromformat_model_wrong_cls": [
    [
      "astropy/cosmology/io/tests/test_model.py",
      [
        "ToFromModelTestMixin",
        "test_fromformat_model_wrong_cls"
      ]
    ]
  ],
  "test_toformat_model_not_method": [
    [
      "astropy/cosmology/io/tests/test_model.py",
      [
        "ToFromModelTestMixin",
        "test_toformat_model_not_method"
      ]
    ]
  ],
  "test_toformat_model_not_callable": [
    [
      "astropy/cosmology/io/tests/test_model.py",
      [
        "ToFromModelTestMixin",
        "test_toformat_model_not_callable"
      ]
    ]
  ],
  "test_toformat_model": [
    [
      "astropy/cosmology/io/tests/test_model.py",
      [
        "ToFromModelTestMixin",
        "test_toformat_model"
      ]
    ]
  ],
  "test_tofromformat_model_instance": [
    [
      "astropy/cosmology/io/tests/test_model.py",
      [
        "ToFromModelTestMixin",
        "test_tofromformat_model_instance"
      ]
    ]
  ],
  "test_fromformat_model_subclass_partial_info": [
    [
      "astropy/cosmology/io/tests/test_model.py",
      [
        "ToFromModelTestMixin",
        "test_fromformat_model_subclass_partial_info"
      ]
    ]
  ],
  "test_is_equivalent_to_model": [
    [
      "astropy/cosmology/io/tests/test_model.py",
      [
        "ToFromModelTestMixin",
        "test_is_equivalent_to_model"
      ]
    ]
  ],
  "test_to_row_in_meta": [
    [
      "astropy/cosmology/io/tests/test_row.py",
      [
        "ToFromRowTestMixin",
        "test_to_row_in_meta"
      ]
    ]
  ],
  "test_from_not_row": [
    [
      "astropy/cosmology/io/tests/test_row.py",
      [
        "ToFromRowTestMixin",
        "test_from_not_row"
      ]
    ]
  ],
  "test_tofrom_row_instance": [
    [
      "astropy/cosmology/io/tests/test_row.py",
      [
        "ToFromRowTestMixin",
        "test_tofrom_row_instance"
      ]
    ]
  ],
  "test_fromformat_row_subclass_partial_info": [
    [
      "astropy/cosmology/io/tests/test_row.py",
      [
        "ToFromRowTestMixin",
        "test_fromformat_row_subclass_partial_info"
      ]
    ]
  ],
  "test_is_equivalent_to_row": [
    [
      "astropy/cosmology/io/tests/test_row.py",
      [
        "ToFromRowTestMixin",
        "test_is_equivalent_to_row"
      ]
    ]
  ],
  "test_to_table_bad_index": [
    [
      "astropy/cosmology/io/tests/test_table.py",
      [
        "ToFromTableTestMixin",
        "test_to_table_bad_index"
      ]
    ]
  ],
  "test_to_table_failed_cls": [
    [
      "astropy/cosmology/io/tests/test_table.py",
      [
        "ToFromTableTestMixin",
        "test_to_table_failed_cls"
      ]
    ]
  ],
  "test_to_table_cls": [
    [
      "astropy/cosmology/io/tests/test_table.py",
      [
        "ToFromTableTestMixin",
        "test_to_table_cls"
      ]
    ]
  ],
  "test_to_table_in_meta": [
    [
      "astropy/cosmology/io/tests/test_table.py",
      [
        "ToFromTableTestMixin",
        "test_to_table_in_meta"
      ]
    ]
  ],
  "test_to_table": [
    [
      "astropy/cosmology/io/tests/test_table.py",
      [
        "ToFromTableTestMixin",
        "test_to_table"
      ]
    ]
  ],
  "test_from_not_table": [
    [
      "astropy/cosmology/io/tests/test_table.py",
      [
        "ToFromTableTestMixin",
        "test_from_not_table"
      ]
    ]
  ],
  "test_tofrom_table_instance": [
    [
      "astropy/cosmology/io/tests/test_table.py",
      [
        "ToFromTableTestMixin",
        "test_tofrom_table_instance"
      ]
    ]
  ],
  "test_fromformat_table_subclass_partial_info": [
    [
      "astropy/cosmology/io/tests/test_table.py",
      [
        "ToFromTableTestMixin",
        "test_fromformat_table_subclass_partial_info"
      ]
    ]
  ],
  "test_tofrom_table_mutlirow": [
    [
      "astropy/cosmology/io/tests/test_table.py",
      [
        "ToFromTableTestMixin",
        "test_tofrom_table_mutlirow"
      ]
    ]
  ],
  "test_is_equivalent_to_table": [
    [
      "astropy/cosmology/io/tests/test_table.py",
      [
        "ToFromTableTestMixin",
        "test_is_equivalent_to_table"
      ]
    ]
  ],
  "test_yaml_representer": [
    [
      "astropy/cosmology/io/tests/test_yaml.py",
      [
        "test_yaml_representer"
      ]
    ]
  ],
  "test_yaml_constructor": [
    [
      "astropy/cosmology/io/tests/test_yaml.py",
      [
        "test_yaml_constructor"
      ]
    ]
  ],
  "xfail_if_not_registered_with_yaml": [
    [
      "astropy/cosmology/io/tests/test_yaml.py",
      [
        "ToFromYAMLTestMixin",
        "xfail_if_not_registered_with_yaml"
      ]
    ]
  ],
  "test_to_yaml": [
    [
      "astropy/cosmology/io/tests/test_yaml.py",
      [
        "ToFromYAMLTestMixin",
        "test_to_yaml"
      ]
    ]
  ],
  "test_from_yaml_default": [
    [
      "astropy/cosmology/io/tests/test_yaml.py",
      [
        "ToFromYAMLTestMixin",
        "test_from_yaml_default"
      ]
    ]
  ],
  "test_from_yaml_autoidentify": [
    [
      "astropy/cosmology/io/tests/test_yaml.py",
      [
        "ToFromYAMLTestMixin",
        "test_from_yaml_autoidentify"
      ]
    ],
    [
      "astropy/cosmology/io/tests/test_yaml.py",
      [
        "TestToFromYAML",
        "test_from_yaml_autoidentify"
      ]
    ]
  ],
  "test_is_equivalent_to_yaml": [
    [
      "astropy/cosmology/io/tests/test_yaml.py",
      [
        "ToFromYAMLTestMixin",
        "test_is_equivalent_to_yaml"
      ]
    ]
  ],
  "test_is_equivalent_to_yaml_specify_format": [
    [
      "astropy/cosmology/io/tests/test_yaml.py",
      [
        "ToFromYAMLTestMixin",
        "test_is_equivalent_to_yaml_specify_format"
      ]
    ]
  ],
  "convert_parameter_to_column": [
    [
      "astropy/cosmology/io/utils.py",
      [
        "convert_parameter_to_column"
      ]
    ]
  ],
  "convert_parameter_to_model_parameter": [
    [
      "astropy/cosmology/io/utils.py",
      [
        "convert_parameter_to_model_parameter"
      ]
    ]
  ],
  "representer": [
    [
      "astropy/cosmology/io/yaml.py",
      [
        "yaml_representer",
        "representer"
      ]
    ]
  ],
  "yaml_representer": [
    [
      "astropy/cosmology/io/yaml.py",
      [
        "yaml_representer"
      ]
    ]
  ],
  "constructor": [
    [
      "astropy/cosmology/io/yaml.py",
      [
        "yaml_constructor",
        "constructor"
      ]
    ]
  ],
  "yaml_constructor": [
    [
      "astropy/cosmology/io/yaml.py",
      [
        "yaml_constructor"
      ]
    ]
  ],
  "register_cosmology_yaml": [
    [
      "astropy/cosmology/io/yaml.py",
      [
        "register_cosmology_yaml"
      ]
    ]
  ],
  "from_yaml": [
    [
      "astropy/cosmology/io/yaml.py",
      [
        "from_yaml"
      ]
    ]
  ],
  "to_yaml": [
    [
      "astropy/cosmology/io/yaml.py",
      [
        "to_yaml"
      ]
    ]
  ],
  "equivalencies": [
    [
      "astropy/cosmology/parameter.py",
      [
        "Parameter",
        "equivalencies"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "_UnitRegistry",
        "equivalencies"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "equivalencies"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "equivalencies"
      ]
    ]
  ],
  "format_spec": [
    [
      "astropy/cosmology/parameter.py",
      [
        "Parameter",
        "format_spec"
      ]
    ]
  ],
  "derived": [
    [
      "astropy/cosmology/parameter.py",
      [
        "Parameter",
        "derived"
      ]
    ]
  ],
  "fvalidate": [
    [
      "astropy/cosmology/parameter.py",
      [
        "Parameter",
        "fvalidate"
      ]
    ]
  ],
  "validator": [
    [
      "astropy/cosmology/parameter.py",
      [
        "Parameter",
        "validator"
      ]
    ],
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "validator"
      ]
    ]
  ],
  "register_validator": [
    [
      "astropy/cosmology/parameter.py",
      [
        "Parameter",
        "register_validator"
      ]
    ]
  ],
  "_get_init_arguments": [
    [
      "astropy/cosmology/parameter.py",
      [
        "Parameter",
        "_get_init_arguments"
      ]
    ]
  ],
  "_validate_with_unit": [
    [
      "astropy/cosmology/parameter.py",
      [
        "_validate_with_unit"
      ]
    ]
  ],
  "_validate_to_float": [
    [
      "astropy/cosmology/parameter.py",
      [
        "_validate_to_float"
      ]
    ]
  ],
  "_validate_to_scalar": [
    [
      "astropy/cosmology/parameter.py",
      [
        "_validate_to_scalar"
      ]
    ]
  ],
  "_validate_non_negative": [
    [
      "astropy/cosmology/parameter.py",
      [
        "_validate_non_negative"
      ]
    ]
  ],
  "get": [
    [
      "astropy/cosmology/realizations.py",
      [
        "default_cosmology",
        "get"
      ]
    ],
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "get"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "get"
      ]
    ],
    [
      "astropy/utils/decorators.py",
      [
        "deprecated_attribute",
        "get"
      ]
    ],
    [
      "astropy/utils/state.py",
      [
        "ScienceState",
        "get"
      ]
    ],
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_file_threaded_many_partial_success",
        "get"
      ]
    ]
  ],
  "get_cosmology_from_string": [
    [
      "astropy/cosmology/realizations.py",
      [
        "default_cosmology",
        "get_cosmology_from_string"
      ]
    ]
  ],
  "get_redshift_methods": [
    [
      "astropy/cosmology/tests/helper.py",
      [
        "get_redshift_methods"
      ]
    ]
  ],
  "clean_registry": [
    [
      "astropy/cosmology/tests/helper.py",
      [
        "clean_registry"
      ]
    ]
  ],
  "test_readwrite_complete_info": [
    [
      "astropy/cosmology/tests/test_connect.py",
      [
        "ReadWriteTestMixin",
        "test_readwrite_complete_info"
      ]
    ]
  ],
  "test_readwrite_from_subclass_complete_info": [
    [
      "astropy/cosmology/tests/test_connect.py",
      [
        "ReadWriteTestMixin",
        "test_readwrite_from_subclass_complete_info"
      ]
    ]
  ],
  "test_write_methods_have_explicit_kwarg_overwrite": [
    [
      "astropy/cosmology/tests/test_connect.py",
      [
        "TestCosmologyReadWrite",
        "test_write_methods_have_explicit_kwarg_overwrite"
      ]
    ]
  ],
  "test_readwrite_reader_class_mismatch": [
    [
      "astropy/cosmology/tests/test_connect.py",
      [
        "TestCosmologyReadWrite",
        "test_readwrite_reader_class_mismatch"
      ]
    ]
  ],
  "test_tofromformat_complete_info": [
    [
      "astropy/cosmology/tests/test_connect.py",
      [
        "ToFromFormatTestMixin",
        "test_tofromformat_complete_info"
      ]
    ]
  ],
  "test_fromformat_subclass_complete_info": [
    [
      "astropy/cosmology/tests/test_connect.py",
      [
        "ToFromFormatTestMixin",
        "test_fromformat_subclass_complete_info"
      ]
    ]
  ],
  "test_fromformat_class_mismatch": [
    [
      "astropy/cosmology/tests/test_connect.py",
      [
        "TestCosmologyToFromFormat",
        "test_fromformat_class_mismatch"
      ]
    ]
  ],
  "test_meta_on_class": [
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "MetaTestMixin",
        "test_meta_on_class"
      ]
    ]
  ],
  "test_meta_on_instance": [
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "MetaTestMixin",
        "test_meta_on_instance"
      ]
    ]
  ],
  "test_meta_mutable": [
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "MetaTestMixin",
        "test_meta_mutable"
      ]
    ]
  ],
  "cls_args": [
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "TestCosmology",
        "cls_args"
      ]
    ]
  ],
  "ba": [
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "TestCosmology",
        "ba"
      ]
    ]
  ],
  "test_init_signature": [
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "TestCosmology",
        "test_init_signature"
      ]
    ]
  ],
  "test_clone_identical": [
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "TestCosmology",
        "test_clone_identical"
      ]
    ]
  ],
  "test_clone_name": [
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "TestCosmology",
        "test_clone_name"
      ]
    ]
  ],
  "test_clone_meta": [
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "TestCosmology",
        "test_clone_meta"
      ]
    ]
  ],
  "test_clone_fail_unexpected_arg": [
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "TestCosmology",
        "test_clone_fail_unexpected_arg"
      ]
    ]
  ],
  "test_clone_fail_positional_arg": [
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "TestCosmology",
        "test_clone_fail_positional_arg"
      ]
    ]
  ],
  "test_equality": [
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "TestCosmology",
        "test_equality"
      ]
    ],
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_equality"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestRecArray",
        "test_equality"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitBasics",
        "test_equality"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredQuantity",
        "test_equality"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "MaskedOperatorTests",
        "test_equality"
      ]
    ]
  ],
  "test_astropy_table": [
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "TestCosmology",
        "test_astropy_table"
      ]
    ]
  ],
  "test_immutability": [
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "TestCosmology",
        "test_immutability"
      ]
    ]
  ],
  "test_pickle_class": [
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "TestCosmology",
        "test_pickle_class"
      ]
    ]
  ],
  "test_pickle_instance": [
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "TestCosmology",
        "test_pickle_instance"
      ]
    ]
  ],
  "test_flrw_moved_deprecation": [
    [
      "astropy/cosmology/tests/test_core.py",
      [
        "test_flrw_moved_deprecation"
      ]
    ]
  ],
  "test_flat_z1": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_flat_z1"
      ]
    ]
  ],
  "test_varyde_lumdist_mathematica": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_varyde_lumdist_mathematica"
      ]
    ]
  ],
  "test_distance_broadcast": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_distance_broadcast"
      ]
    ]
  ],
  "test_xtfuncs": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_xtfuncs"
      ]
    ]
  ],
  "test_de_subclass": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_de_subclass"
      ]
    ]
  ],
  "test_matter": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_matter"
      ]
    ]
  ],
  "test_ocurv": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_ocurv"
      ]
    ]
  ],
  "test_ode": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_ode"
      ]
    ]
  ],
  "test_ogamma": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_ogamma"
      ]
    ]
  ],
  "test_tcmb": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_tcmb"
      ]
    ]
  ],
  "test_tnu": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_tnu"
      ]
    ]
  ],
  "test_efunc_vs_invefunc_flrw": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_efunc_vs_invefunc_flrw"
      ]
    ]
  ],
  "test_kpc_methods": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_kpc_methods"
      ]
    ]
  ],
  "test_comoving_volume": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_comoving_volume"
      ]
    ]
  ],
  "test_differential_comoving_volume": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_differential_comoving_volume"
      ]
    ]
  ],
  "test_flat_open_closed_icosmo": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_flat_open_closed_icosmo"
      ]
    ]
  ],
  "test_integral": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_integral"
      ]
    ]
  ],
  "test_de_densityscale": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_de_densityscale"
      ]
    ]
  ],
  "test_age": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_age"
      ]
    ]
  ],
  "test_neg_distmod": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_neg_distmod"
      ]
    ]
  ],
  "test_critical_density": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_critical_density"
      ]
    ]
  ],
  "test_comoving_distance_z1z2": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_comoving_distance_z1z2"
      ]
    ]
  ],
  "test_age_in_special_cosmologies": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_age_in_special_cosmologies"
      ]
    ]
  ],
  "test_distance_in_special_cosmologies": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_distance_in_special_cosmologies"
      ]
    ]
  ],
  "test_comoving_transverse_distance_z1z2": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_comoving_transverse_distance_z1z2"
      ]
    ]
  ],
  "test_angular_diameter_distance_z1z2": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_angular_diameter_distance_z1z2"
      ]
    ]
  ],
  "test_absorption_distance": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_absorption_distance"
      ]
    ]
  ],
  "test_massivenu_density": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_massivenu_density"
      ]
    ]
  ],
  "test_elliptic_comoving_distance_z1z2": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_elliptic_comoving_distance_z1z2"
      ]
    ]
  ],
  "test_comoving_distance_iterable_argument": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_comoving_distance_iterable_argument"
      ]
    ]
  ],
  "test_comoving_distance_broadcast": [
    [
      "astropy/cosmology/tests/test_cosmology.py",
      [
        "test_comoving_distance_broadcast"
      ]
    ]
  ],
  "test_z_at_value_scalar": [
    [
      "astropy/cosmology/tests/test_funcs.py",
      [
        "test_z_at_value_scalar"
      ]
    ]
  ],
  "test_broadcast_arguments": [
    [
      "astropy/cosmology/tests/test_funcs.py",
      [
        "Test_ZatValue",
        "test_broadcast_arguments"
      ]
    ]
  ],
  "test_broadcast_bracket": [
    [
      "astropy/cosmology/tests/test_funcs.py",
      [
        "Test_ZatValue",
        "test_broadcast_bracket"
      ]
    ]
  ],
  "test_bad_broadcast": [
    [
      "astropy/cosmology/tests/test_funcs.py",
      [
        "Test_ZatValue",
        "test_bad_broadcast"
      ]
    ]
  ],
  "test_scalar_input_to_output": [
    [
      "astropy/cosmology/tests/test_funcs.py",
      [
        "Test_ZatValue",
        "test_scalar_input_to_output"
      ]
    ]
  ],
  "test_z_at_value_numpyvectorize": [
    [
      "astropy/cosmology/tests/test_funcs.py",
      [
        "test_z_at_value_numpyvectorize"
      ]
    ]
  ],
  "test_z_at_value_verbose": [
    [
      "astropy/cosmology/tests/test_funcs.py",
      [
        "test_z_at_value_verbose"
      ]
    ]
  ],
  "test_z_at_value_bracketed": [
    [
      "astropy/cosmology/tests/test_funcs.py",
      [
        "test_z_at_value_bracketed"
      ]
    ]
  ],
  "test_z_at_value_unconverged": [
    [
      "astropy/cosmology/tests/test_funcs.py",
      [
        "test_z_at_value_unconverged"
      ]
    ]
  ],
  "test_z_at_value_roundtrip": [
    [
      "astropy/cosmology/tests/test_funcs.py",
      [
        "test_z_at_value_roundtrip"
      ]
    ]
  ],
  "parameter": [
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "ParameterTestMixin",
        "parameter"
      ]
    ]
  ],
  "all_parameter": [
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "ParameterTestMixin",
        "all_parameter"
      ]
    ]
  ],
  "test_Parameter_class_attributes": [
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "ParameterTestMixin",
        "test_Parameter_class_attributes"
      ]
    ]
  ],
  "test_Parameter_init": [
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "ParameterTestMixin",
        "test_Parameter_init"
      ]
    ]
  ],
  "test_Parameter_instance_attributes": [
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "ParameterTestMixin",
        "test_Parameter_instance_attributes"
      ]
    ],
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "TestParameter",
        "test_Parameter_instance_attributes"
      ]
    ]
  ],
  "test_Parameter_fvalidate": [
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "ParameterTestMixin",
        "test_Parameter_fvalidate"
      ]
    ],
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "TestParameter",
        "test_Parameter_fvalidate"
      ]
    ]
  ],
  "test_Parameter_name": [
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "ParameterTestMixin",
        "test_Parameter_name"
      ]
    ],
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "TestParameter",
        "test_Parameter_name"
      ]
    ]
  ],
  "test_Parameter_unit": [
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "ParameterTestMixin",
        "test_Parameter_unit"
      ]
    ],
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "TestParameter",
        "test_Parameter_unit"
      ]
    ]
  ],
  "test_Parameter_equivalencies": [
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "ParameterTestMixin",
        "test_Parameter_equivalencies"
      ]
    ],
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "TestParameter",
        "test_Parameter_equivalencies"
      ]
    ]
  ],
  "test_Parameter_format_spec": [
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "ParameterTestMixin",
        "test_Parameter_format_spec"
      ]
    ],
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "TestParameter",
        "test_Parameter_format_spec"
      ]
    ]
  ],
  "test_Parameter_derived": [
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "ParameterTestMixin",
        "test_Parameter_derived"
      ]
    ],
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "TestParameter",
        "test_Parameter_derived"
      ]
    ]
  ],
  "test_Parameter_descriptor_get": [
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "ParameterTestMixin",
        "test_Parameter_descriptor_get"
      ]
    ],
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "TestParameter",
        "test_Parameter_descriptor_get"
      ]
    ]
  ],
  "test_Parameter_descriptor_set": [
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "ParameterTestMixin",
        "test_Parameter_descriptor_set"
      ]
    ]
  ],
  "test_Parameter_listed": [
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "ParameterTestMixin",
        "test_Parameter_listed"
      ]
    ]
  ],
  "test_parameter_related_attributes_on_Cosmology": [
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "ParameterTestMixin",
        "test_parameter_related_attributes_on_Cosmology"
      ]
    ]
  ],
  "test_Parameter_not_unique": [
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "ParameterTestMixin",
        "test_Parameter_not_unique"
      ]
    ]
  ],
  "test_Parameters_reorder_by_signature": [
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "ParameterTestMixin",
        "test_Parameters_reorder_by_signature"
      ]
    ]
  ],
  "test_make_from_Parameter": [
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "ParameterTestMixin",
        "test_make_from_Parameter"
      ]
    ]
  ],
  "param": [
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "TestParameter",
        "param"
      ]
    ]
  ],
  "test_Parameter_validator": [
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "TestParameter",
        "test_Parameter_validator"
      ]
    ]
  ],
  "test_Parameter_validate": [
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "TestParameter",
        "test_Parameter_validate"
      ]
    ]
  ],
  "test_Parameter_register_validator": [
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "TestParameter",
        "test_Parameter_register_validator"
      ]
    ]
  ],
  "test_Parameter_clone": [
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "TestParameter",
        "test_Parameter_clone"
      ]
    ]
  ],
  "test_Parameter_equality": [
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "TestParameter",
        "test_Parameter_equality"
      ]
    ]
  ],
  "test_Parameter_repr": [
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "TestParameter",
        "test_Parameter_repr"
      ]
    ]
  ],
  "test_Parameter_repr_roundtrip": [
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "TestParameter",
        "test_Parameter_repr_roundtrip"
      ]
    ]
  ],
  "test_Parameter_doesnt_change_with_generic_class": [
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "TestParameter",
        "test_Parameter_doesnt_change_with_generic_class"
      ]
    ]
  ],
  "test_Parameter_doesnt_change_with_cosmology": [
    [
      "astropy/cosmology/tests/test_parameter.py",
      [
        "TestParameter",
        "test_Parameter_doesnt_change_with_cosmology"
      ]
    ]
  ],
  "test_realizations_in_dir": [
    [
      "astropy/cosmology/tests/test_parameters.py",
      [
        "test_realizations_in_dir"
      ]
    ]
  ],
  "test_getting_parameters": [
    [
      "astropy/cosmology/tests/test_parameters.py",
      [
        "test_getting_parameters"
      ]
    ]
  ],
  "test_realizations_in_toplevel_dir": [
    [
      "astropy/cosmology/tests/test_realizations.py",
      [
        "test_realizations_in_toplevel_dir"
      ]
    ]
  ],
  "test_realizations_in_realizations_dir": [
    [
      "astropy/cosmology/tests/test_realizations.py",
      [
        "test_realizations_in_realizations_dir"
      ]
    ]
  ],
  "test_get_fail": [
    [
      "astropy/cosmology/tests/test_realizations.py",
      [
        "Test_default_cosmology",
        "test_get_fail"
      ]
    ]
  ],
  "test_get_current": [
    [
      "astropy/cosmology/tests/test_realizations.py",
      [
        "Test_default_cosmology",
        "test_get_current"
      ]
    ]
  ],
  "test_get_none": [
    [
      "astropy/cosmology/tests/test_realizations.py",
      [
        "Test_default_cosmology",
        "test_get_none"
      ]
    ]
  ],
  "test_get_valid": [
    [
      "astropy/cosmology/tests/test_realizations.py",
      [
        "Test_default_cosmology",
        "test_get_valid"
      ]
    ]
  ],
  "test_get_cosmology_from_string": [
    [
      "astropy/cosmology/tests/test_realizations.py",
      [
        "Test_default_cosmology",
        "test_get_cosmology_from_string"
      ]
    ]
  ],
  "test_validate_fail": [
    [
      "astropy/cosmology/tests/test_realizations.py",
      [
        "Test_default_cosmology",
        "test_validate_fail"
      ]
    ]
  ],
  "test_validate_default": [
    [
      "astropy/cosmology/tests/test_realizations.py",
      [
        "Test_default_cosmology",
        "test_validate_default"
      ]
    ]
  ],
  "test_validate_str": [
    [
      "astropy/cosmology/tests/test_realizations.py",
      [
        "Test_default_cosmology",
        "test_validate_str"
      ]
    ]
  ],
  "test_validate_cosmo": [
    [
      "astropy/cosmology/tests/test_realizations.py",
      [
        "Test_default_cosmology",
        "test_validate_cosmo"
      ]
    ]
  ],
  "test_pickle_builtin_realizations": [
    [
      "astropy/cosmology/tests/test_realizations.py",
      [
        "test_pickle_builtin_realizations"
      ]
    ]
  ],
  "test_has_expected_units": [
    [
      "astropy/cosmology/tests/test_units.py",
      [
        "test_has_expected_units"
      ]
    ]
  ],
  "test_has_expected_equivalencies": [
    [
      "astropy/cosmology/tests/test_units.py",
      [
        "test_has_expected_equivalencies"
      ]
    ]
  ],
  "test_littleh": [
    [
      "astropy/cosmology/tests/test_units.py",
      [
        "test_littleh"
      ]
    ]
  ],
  "test_dimensionless_redshift": [
    [
      "astropy/cosmology/tests/test_units.py",
      [
        "test_dimensionless_redshift"
      ]
    ]
  ],
  "test_redshift_temperature": [
    [
      "astropy/cosmology/tests/test_units.py",
      [
        "test_redshift_temperature"
      ]
    ]
  ],
  "test_redshift_hubble": [
    [
      "astropy/cosmology/tests/test_units.py",
      [
        "test_redshift_hubble"
      ]
    ]
  ],
  "test_redshift_distance": [
    [
      "astropy/cosmology/tests/test_units.py",
      [
        "test_redshift_distance"
      ]
    ]
  ],
  "test_redshift_distance_wrong_kind": [
    [
      "astropy/cosmology/tests/test_units.py",
      [
        "test_redshift_distance_wrong_kind"
      ]
    ]
  ],
  "test_cosmo_different": [
    [
      "astropy/cosmology/tests/test_units.py",
      [
        "Test_with_redshift",
        "test_cosmo_different"
      ]
    ]
  ],
  "test_no_equivalency": [
    [
      "astropy/cosmology/tests/test_units.py",
      [
        "Test_with_redshift",
        "test_no_equivalency"
      ]
    ]
  ],
  "test_temperature_off": [
    [
      "astropy/cosmology/tests/test_units.py",
      [
        "Test_with_redshift",
        "test_temperature_off"
      ]
    ]
  ],
  "test_temperature": [
    [
      "astropy/cosmology/tests/test_units.py",
      [
        "Test_with_redshift",
        "test_temperature"
      ]
    ],
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_temperature"
      ]
    ]
  ],
  "test_hubble_off": [
    [
      "astropy/cosmology/tests/test_units.py",
      [
        "Test_with_redshift",
        "test_hubble_off"
      ]
    ]
  ],
  "test_hubble": [
    [
      "astropy/cosmology/tests/test_units.py",
      [
        "Test_with_redshift",
        "test_hubble"
      ]
    ]
  ],
  "test_distance_off": [
    [
      "astropy/cosmology/tests/test_units.py",
      [
        "Test_with_redshift",
        "test_distance_off"
      ]
    ]
  ],
  "test_distance_default": [
    [
      "astropy/cosmology/tests/test_units.py",
      [
        "Test_with_redshift",
        "test_distance_default"
      ]
    ]
  ],
  "test_distance_wrong_kind": [
    [
      "astropy/cosmology/tests/test_units.py",
      [
        "Test_with_redshift",
        "test_distance_wrong_kind"
      ]
    ]
  ],
  "test_distance": [
    [
      "astropy/cosmology/tests/test_units.py",
      [
        "Test_with_redshift",
        "test_distance"
      ]
    ]
  ],
  "test_equivalencies_asdf": [
    [
      "astropy/cosmology/tests/test_units.py",
      [
        "test_equivalencies_asdf"
      ]
    ]
  ],
  "test_equivalency_context_manager": [
    [
      "astropy/cosmology/tests/test_units.py",
      [
        "test_equivalency_context_manager"
      ]
    ],
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_equivalency_context_manager"
      ]
    ]
  ],
  "test_vectorize_redshift_method": [
    [
      "astropy/cosmology/tests/test_utils.py",
      [
        "test_vectorize_redshift_method"
      ]
    ]
  ],
  "test_vectorize_if_needed": [
    [
      "astropy/cosmology/tests/test_utils.py",
      [
        "test_vectorize_if_needed"
      ]
    ]
  ],
  "test_inf_like": [
    [
      "astropy/cosmology/tests/test_utils.py",
      [
        "test_inf_like"
      ]
    ]
  ],
  "test_valid": [
    [
      "astropy/cosmology/tests/test_utils.py",
      [
        "Test_aszarr",
        "test_valid"
      ]
    ]
  ],
  "test_invalid": [
    [
      "astropy/cosmology/tests/test_utils.py",
      [
        "Test_aszarr",
        "test_invalid"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_utils.py",
      [
        "test_invalid"
      ]
    ]
  ],
  "dimensionless_redshift": [
    [
      "astropy/cosmology/units.py",
      [
        "dimensionless_redshift"
      ]
    ]
  ],
  "z_to_distance": [
    [
      "astropy/cosmology/units.py",
      [
        "redshift_distance",
        "z_to_distance"
      ]
    ]
  ],
  "distance_to_z": [
    [
      "astropy/cosmology/units.py",
      [
        "redshift_distance",
        "distance_to_z"
      ]
    ]
  ],
  "redshift_distance": [
    [
      "astropy/cosmology/units.py",
      [
        "redshift_distance"
      ]
    ]
  ],
  "z_to_hubble": [
    [
      "astropy/cosmology/units.py",
      [
        "redshift_hubble",
        "z_to_hubble"
      ]
    ]
  ],
  "hubble_to_z": [
    [
      "astropy/cosmology/units.py",
      [
        "redshift_hubble",
        "hubble_to_z"
      ]
    ]
  ],
  "z_to_littleh": [
    [
      "astropy/cosmology/units.py",
      [
        "redshift_hubble",
        "z_to_littleh"
      ]
    ]
  ],
  "littleh_to_z": [
    [
      "astropy/cosmology/units.py",
      [
        "redshift_hubble",
        "littleh_to_z"
      ]
    ]
  ],
  "redshift_hubble": [
    [
      "astropy/cosmology/units.py",
      [
        "redshift_hubble"
      ]
    ]
  ],
  "z_to_Tcmb": [
    [
      "astropy/cosmology/units.py",
      [
        "redshift_temperature",
        "z_to_Tcmb"
      ]
    ]
  ],
  "Tcmb_to_z": [
    [
      "astropy/cosmology/units.py",
      [
        "redshift_temperature",
        "Tcmb_to_z"
      ]
    ]
  ],
  "redshift_temperature": [
    [
      "astropy/cosmology/units.py",
      [
        "redshift_temperature"
      ]
    ]
  ],
  "with_redshift": [
    [
      "astropy/cosmology/units.py",
      [
        "with_redshift"
      ]
    ]
  ],
  "with_H0": [
    [
      "astropy/cosmology/units.py",
      [
        "with_H0"
      ]
    ]
  ],
  "vectorize_redshift_method": [
    [
      "astropy/cosmology/utils.py",
      [
        "vectorize_redshift_method"
      ]
    ]
  ],
  "vectorize_if_needed": [
    [
      "astropy/cosmology/utils.py",
      [
        "vectorize_if_needed"
      ]
    ]
  ],
  "inf_like": [
    [
      "astropy/cosmology/utils.py",
      [
        "inf_like"
      ]
    ]
  ],
  "aszarr": [
    [
      "astropy/cosmology/utils.py",
      [
        "aszarr"
      ]
    ]
  ],
  "_getlang": [
    [
      "astropy/extern/_strptime.py",
      [
        "_getlang"
      ]
    ]
  ],
  "__pad": [
    [
      "astropy/extern/_strptime.py",
      [
        "LocaleTime",
        "__pad"
      ]
    ]
  ],
  "__calc_weekday": [
    [
      "astropy/extern/_strptime.py",
      [
        "LocaleTime",
        "__calc_weekday"
      ]
    ]
  ],
  "__calc_month": [
    [
      "astropy/extern/_strptime.py",
      [
        "LocaleTime",
        "__calc_month"
      ]
    ]
  ],
  "__calc_am_pm": [
    [
      "astropy/extern/_strptime.py",
      [
        "LocaleTime",
        "__calc_am_pm"
      ]
    ]
  ],
  "__calc_date_time": [
    [
      "astropy/extern/_strptime.py",
      [
        "LocaleTime",
        "__calc_date_time"
      ]
    ]
  ],
  "__calc_timezone": [
    [
      "astropy/extern/_strptime.py",
      [
        "LocaleTime",
        "__calc_timezone"
      ]
    ]
  ],
  "__seqToRE": [
    [
      "astropy/extern/_strptime.py",
      [
        "TimeRE",
        "__seqToRE"
      ]
    ]
  ],
  "pattern": [
    [
      "astropy/extern/_strptime.py",
      [
        "TimeRE",
        "pattern"
      ]
    ]
  ],
  "compile": [
    [
      "astropy/extern/_strptime.py",
      [
        "TimeRE",
        "compile"
      ]
    ]
  ],
  "_calc_julian_from_U_or_W": [
    [
      "astropy/extern/_strptime.py",
      [
        "_calc_julian_from_U_or_W"
      ]
    ]
  ],
  "_strptime": [
    [
      "astropy/extern/_strptime.py",
      [
        "_strptime"
      ]
    ]
  ],
  "_strptime_time": [
    [
      "astropy/extern/_strptime.py",
      [
        "_strptime_time"
      ]
    ]
  ],
  "_strptime_datetime": [
    [
      "astropy/extern/_strptime.py",
      [
        "_strptime_datetime"
      ]
    ]
  ],
  "match_utf8": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "match_utf8"
      ]
    ]
  ],
  "getObj": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "getObj"
      ]
    ]
  ],
  "build": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Builder",
        "build"
      ]
    ]
  ],
  "build_List": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Builder",
        "build_List"
      ]
    ]
  ],
  "build_Const": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Builder",
        "build_Const"
      ]
    ]
  ],
  "build_Dict": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Builder",
        "build_Dict"
      ]
    ]
  ],
  "build_Tuple": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Builder",
        "build_Tuple"
      ]
    ]
  ],
  "build_Name": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Builder",
        "build_Name"
      ]
    ]
  ],
  "build_Add": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Builder",
        "build_Add"
      ]
    ]
  ],
  "build_Getattr": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Builder",
        "build_Getattr"
      ]
    ]
  ],
  "build_UnarySub": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Builder",
        "build_UnarySub"
      ]
    ]
  ],
  "build_UnaryAdd": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Builder",
        "build_UnaryAdd"
      ]
    ]
  ],
  "unrepr": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "unrepr"
      ]
    ]
  ],
  "recursive_interpolate": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "InterpolationEngine",
        "interpolate",
        "recursive_interpolate"
      ]
    ]
  ],
  "interpolate": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "InterpolationEngine",
        "interpolate"
      ]
    ]
  ],
  "_fetch": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "InterpolationEngine",
        "_fetch"
      ]
    ]
  ],
  "_parse_match": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "InterpolationEngine",
        "_parse_match"
      ]
    ],
    [
      "astropy/extern/configobj/configobj.py",
      [
        "ConfigParserInterpolation",
        "_parse_match"
      ]
    ],
    [
      "astropy/extern/configobj/configobj.py",
      [
        "TemplateInterpolation",
        "_parse_match"
      ]
    ]
  ],
  "__newobj__": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "__newobj__"
      ]
    ]
  ],
  "__setstate__": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "__setstate__"
      ]
    ],
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "__setstate__"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "NDUncertainty",
        "__setstate__"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "__setstate__"
      ]
    ],
    [
      "astropy/table/ndarray_mixin.py",
      [
        "NdarrayMixin",
        "__setstate__"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "__setstate__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__setstate__"
      ]
    ],
    [
      "astropy/utils/data_info.py",
      [
        "DataInfo",
        "__setstate__"
      ]
    ]
  ],
  "__reduce__": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "__reduce__"
      ]
    ],
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "__reduce__"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "_ModelMeta",
        "__reduce__"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "__reduce__"
      ]
    ],
    [
      "astropy/table/ndarray_mixin.py",
      [
        "NdarrayMixin",
        "__reduce__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "IrreducibleUnit",
        "__reduce__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__reduce__"
      ]
    ],
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "__reduce__"
      ]
    ]
  ],
  "_initialise": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "_initialise"
      ]
    ],
    [
      "astropy/extern/configobj/configobj.py",
      [
        "ConfigObj",
        "_initialise"
      ]
    ]
  ],
  "_interpolate": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "_interpolate"
      ]
    ],
    [
      "astropy/utils/iers/iers.py",
      [
        "IERS",
        "_interpolate"
      ]
    ]
  ],
  "__delitem__": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "__delitem__"
      ]
    ],
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHeader",
        "__delitem__"
      ]
    ],
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "__delitem__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "__delitem__"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "ModelBoundingBox",
        "__delitem__"
      ]
    ],
    [
      "astropy/modeling/utils.py",
      [
        "AliasDict",
        "__delitem__"
      ]
    ],
    [
      "astropy/nddata/bitmask.py",
      [
        "BitFlagNameMeta",
        "__delitem__"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "TableColumns",
        "__delitem__"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "__delitem__"
      ]
    ]
  ],
  "update": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "update"
      ]
    ],
    [
      "astropy/io/fits/convenience.py",
      [
        "update"
      ]
    ],
    [
      "astropy/io/fits/hdu/table.py",
      [
        "_TableBaseHDU",
        "update"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "update"
      ]
    ],
    [
      "astropy/io/fits/scripts/fitscheck.py",
      [
        "update"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "update"
      ]
    ],
    [
      "astropy/utils/console.py",
      [
        "ProgressBar",
        "update"
      ]
    ],
    [
      "astropy/utils/console.py",
      [
        "Spinner",
        "update"
      ]
    ],
    [
      "astropy/utils/console.py",
      [
        "ProgressBarOrSpinner",
        "update"
      ]
    ]
  ],
  "pop": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "pop"
      ]
    ],
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "pop"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "pop"
      ]
    ]
  ],
  "popitem": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "popitem"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "popitem"
      ]
    ]
  ],
  "clear": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "clear"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "clear"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/ticklabels.py",
      [
        "TickLabels",
        "clear"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/ticks.py",
      [
        "Ticks",
        "clear"
      ]
    ]
  ],
  "setdefault": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "setdefault"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "setdefault"
      ]
    ]
  ],
  "keys": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "keys"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "keys"
      ]
    ],
    [
      "astropy/table/groups.py",
      [
        "ColumnGroups",
        "keys"
      ]
    ],
    [
      "astropy/table/groups.py",
      [
        "TableGroups",
        "keys"
      ]
    ],
    [
      "astropy/table/row.py",
      [
        "Row",
        "keys"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "keys"
      ]
    ],
    [
      "astropy/table/tests/test_subclass.py",
      [
        "ParamsRow",
        "keys"
      ]
    ],
    [
      "astropy/units/structured.py",
      [
        "StructuredUnit",
        "keys"
      ]
    ]
  ],
  "iteritems": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "iteritems"
      ]
    ]
  ],
  "iterkeys": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "iterkeys"
      ]
    ]
  ],
  "itervalues": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "itervalues"
      ]
    ]
  ],
  "dict": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "dict"
      ]
    ]
  ],
  "merge": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "merge"
      ]
    ],
    [
      "astropy/utils/metadata.py",
      [
        "MergePlus",
        "merge"
      ]
    ],
    [
      "astropy/utils/metadata.py",
      [
        "MergeNpConcatenate",
        "merge"
      ]
    ],
    [
      "astropy/utils/metadata.py",
      [
        "merge"
      ]
    ],
    [
      "astropy/utils/tests/test_metadata.py",
      [
        "test_metadata_merging_new_strategy",
        "MergeNumbersAsList",
        "merge"
      ]
    ]
  ],
  "rename": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "rename"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "_ModelMeta",
        "rename"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "rename"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "rename"
      ]
    ]
  ],
  "walk": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "walk"
      ]
    ]
  ],
  "as_bool": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "as_bool"
      ]
    ]
  ],
  "as_int": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "as_int"
      ]
    ]
  ],
  "as_float": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "as_float"
      ]
    ]
  ],
  "as_list": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "as_list"
      ]
    ]
  ],
  "restore_default": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "restore_default"
      ]
    ]
  ],
  "restore_defaults": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "Section",
        "restore_defaults"
      ]
    ]
  ],
  "_load": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "ConfigObj",
        "_load"
      ]
    ]
  ],
  "_handle_bom": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "ConfigObj",
        "_handle_bom"
      ]
    ]
  ],
  "_a_to_u": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "ConfigObj",
        "_a_to_u"
      ]
    ]
  ],
  "_decode": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "ConfigObj",
        "_decode"
      ]
    ]
  ],
  "_decode_element": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "ConfigObj",
        "_decode_element"
      ]
    ]
  ],
  "_str": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "ConfigObj",
        "_str"
      ]
    ]
  ],
  "_parse": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "ConfigObj",
        "_parse"
      ]
    ]
  ],
  "_match_depth": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "ConfigObj",
        "_match_depth"
      ]
    ]
  ],
  "_handle_error": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "ConfigObj",
        "_handle_error"
      ]
    ]
  ],
  "_unquote": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "ConfigObj",
        "_unquote"
      ]
    ],
    [
      "astropy/extern/configobj/validate.py",
      [
        "Validator",
        "_unquote"
      ]
    ]
  ],
  "_quote": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "ConfigObj",
        "_quote"
      ]
    ]
  ],
  "_get_single_quote": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "ConfigObj",
        "_get_single_quote"
      ]
    ]
  ],
  "_get_triple_quote": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "ConfigObj",
        "_get_triple_quote"
      ]
    ]
  ],
  "_handle_value": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "ConfigObj",
        "_handle_value"
      ]
    ]
  ],
  "_multiline": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "ConfigObj",
        "_multiline"
      ]
    ]
  ],
  "_handle_configspec": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "ConfigObj",
        "_handle_configspec"
      ]
    ]
  ],
  "_set_configspec": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "ConfigObj",
        "_set_configspec"
      ]
    ]
  ],
  "_write_line": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "ConfigObj",
        "_write_line"
      ]
    ]
  ],
  "_write_marker": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "ConfigObj",
        "_write_marker"
      ]
    ]
  ],
  "_handle_comment": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "ConfigObj",
        "_handle_comment"
      ]
    ]
  ],
  "validate_entry": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "ConfigObj",
        "validate",
        "validate_entry"
      ]
    ]
  ],
  "check": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "SimpleVal",
        "check"
      ]
    ],
    [
      "astropy/extern/configobj/validate.py",
      [
        "Validator",
        "check"
      ]
    ],
    [
      "astropy/time/tests/test_functions.py",
      [
        "TestFunctionsTime",
        "check"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "InvariantUnitTestSetup",
        "check"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "NoUnitTestSetup",
        "check"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestConcatenate",
        "check"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSplit",
        "check"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncLikeTests",
        "check"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestHistogramFunctions",
        "check"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSetOpsFcuntions",
        "check"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "BasicTestSetup",
        "check"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "NoMaskTestSetup",
        "check"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "InvariantMaskTestSetup",
        "check"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestArgFunctions",
        "check"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestConcatenate",
        "check"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestSplit",
        "check"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestMethodLikes",
        "check"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestUfuncLikeTests",
        "check"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestPartitionLikeFunctions",
        "check"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestSpaceFunctions",
        "check"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestDtypeFunctions",
        "check"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestNaNFunctions",
        "check"
      ]
    ]
  ],
  "flatten_errors": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "flatten_errors"
      ]
    ]
  ],
  "get_extra_values": [
    [
      "astropy/extern/configobj/configobj.py",
      [
        "get_extra_values"
      ]
    ]
  ],
  "dottedQuadToNum": [
    [
      "astropy/extern/configobj/validate.py",
      [
        "dottedQuadToNum"
      ]
    ]
  ],
  "numToDottedQuad": [
    [
      "astropy/extern/configobj/validate.py",
      [
        "numToDottedQuad"
      ]
    ]
  ],
  "_handle_none": [
    [
      "astropy/extern/configobj/validate.py",
      [
        "Validator",
        "_handle_none"
      ]
    ]
  ],
  "_parse_with_caching": [
    [
      "astropy/extern/configobj/validate.py",
      [
        "Validator",
        "_parse_with_caching"
      ]
    ]
  ],
  "_check_value": [
    [
      "astropy/extern/configobj/validate.py",
      [
        "Validator",
        "_check_value"
      ]
    ]
  ],
  "_parse_check": [
    [
      "astropy/extern/configobj/validate.py",
      [
        "Validator",
        "_parse_check"
      ]
    ]
  ],
  "_list_handle": [
    [
      "astropy/extern/configobj/validate.py",
      [
        "Validator",
        "_list_handle"
      ]
    ]
  ],
  "_pass": [
    [
      "astropy/extern/configobj/validate.py",
      [
        "Validator",
        "_pass"
      ]
    ]
  ],
  "get_default_value": [
    [
      "astropy/extern/configobj/validate.py",
      [
        "Validator",
        "get_default_value"
      ]
    ]
  ],
  "_is_num_param": [
    [
      "astropy/extern/configobj/validate.py",
      [
        "_is_num_param"
      ]
    ]
  ],
  "is_integer": [
    [
      "astropy/extern/configobj/validate.py",
      [
        "is_integer"
      ]
    ]
  ],
  "is_float": [
    [
      "astropy/extern/configobj/validate.py",
      [
        "is_float"
      ]
    ]
  ],
  "is_boolean": [
    [
      "astropy/extern/configobj/validate.py",
      [
        "is_boolean"
      ]
    ]
  ],
  "is_ip_addr": [
    [
      "astropy/extern/configobj/validate.py",
      [
        "is_ip_addr"
      ]
    ]
  ],
  "is_list": [
    [
      "astropy/extern/configobj/validate.py",
      [
        "is_list"
      ]
    ]
  ],
  "is_tuple": [
    [
      "astropy/extern/configobj/validate.py",
      [
        "is_tuple"
      ]
    ]
  ],
  "is_string": [
    [
      "astropy/extern/configobj/validate.py",
      [
        "is_string"
      ]
    ]
  ],
  "is_int_list": [
    [
      "astropy/extern/configobj/validate.py",
      [
        "is_int_list"
      ]
    ]
  ],
  "is_bool_list": [
    [
      "astropy/extern/configobj/validate.py",
      [
        "is_bool_list"
      ]
    ]
  ],
  "is_float_list": [
    [
      "astropy/extern/configobj/validate.py",
      [
        "is_float_list"
      ]
    ]
  ],
  "is_string_list": [
    [
      "astropy/extern/configobj/validate.py",
      [
        "is_string_list"
      ]
    ]
  ],
  "is_ip_addr_list": [
    [
      "astropy/extern/configobj/validate.py",
      [
        "is_ip_addr_list"
      ]
    ]
  ],
  "force_list": [
    [
      "astropy/extern/configobj/validate.py",
      [
        "force_list"
      ]
    ]
  ],
  "is_mixed_list": [
    [
      "astropy/extern/configobj/validate.py",
      [
        "is_mixed_list"
      ]
    ]
  ],
  "is_option": [
    [
      "astropy/extern/configobj/validate.py",
      [
        "is_option"
      ]
    ]
  ],
  "_test": [
    [
      "astropy/extern/configobj/validate.py",
      [
        "_test"
      ]
    ]
  ],
  "_test2": [
    [
      "astropy/extern/configobj/validate.py",
      [
        "_test2"
      ]
    ]
  ],
  "_test3": [
    [
      "astropy/extern/configobj/validate.py",
      [
        "_test3"
      ]
    ]
  ],
  "t_CPP_WS": [
    [
      "astropy/extern/ply/cpp.py",
      [
        "t_CPP_WS"
      ]
    ]
  ],
  "CPP_INTEGER": [
    [
      "astropy/extern/ply/cpp.py",
      [
        "CPP_INTEGER"
      ]
    ]
  ],
  "t_CPP_STRING": [
    [
      "astropy/extern/ply/cpp.py",
      [
        "t_CPP_STRING"
      ]
    ]
  ],
  "t_CPP_CHAR": [
    [
      "astropy/extern/ply/cpp.py",
      [
        "t_CPP_CHAR"
      ]
    ]
  ],
  "t_CPP_COMMENT1": [
    [
      "astropy/extern/ply/cpp.py",
      [
        "t_CPP_COMMENT1"
      ]
    ]
  ],
  "t_CPP_COMMENT2": [
    [
      "astropy/extern/ply/cpp.py",
      [
        "t_CPP_COMMENT2"
      ]
    ]
  ],
  "trigraph": [
    [
      "astropy/extern/ply/cpp.py",
      [
        "trigraph"
      ]
    ]
  ],
  "tokenize": [
    [
      "astropy/extern/ply/cpp.py",
      [
        "Preprocessor",
        "tokenize"
      ]
    ]
  ],
  "error": [
    [
      "astropy/extern/ply/cpp.py",
      [
        "Preprocessor",
        "error"
      ]
    ],
    [
      "astropy/extern/ply/lex.py",
      [
        "PlyLogger",
        "error"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "PlyLogger",
        "error"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "YaccProduction",
        "error"
      ]
    ]
  ],
  "lexprobe": [
    [
      "astropy/extern/ply/cpp.py",
      [
        "Preprocessor",
        "lexprobe"
      ]
    ]
  ],
  "add_path": [
    [
      "astropy/extern/ply/cpp.py",
      [
        "Preprocessor",
        "add_path"
      ]
    ]
  ],
  "group_lines": [
    [
      "astropy/extern/ply/cpp.py",
      [
        "Preprocessor",
        "group_lines"
      ]
    ]
  ],
  "tokenstrip": [
    [
      "astropy/extern/ply/cpp.py",
      [
        "Preprocessor",
        "tokenstrip"
      ]
    ]
  ],
  "collect_args": [
    [
      "astropy/extern/ply/cpp.py",
      [
        "Preprocessor",
        "collect_args"
      ]
    ]
  ],
  "macro_prescan": [
    [
      "astropy/extern/ply/cpp.py",
      [
        "Preprocessor",
        "macro_prescan"
      ]
    ]
  ],
  "macro_expand_args": [
    [
      "astropy/extern/ply/cpp.py",
      [
        "Preprocessor",
        "macro_expand_args"
      ]
    ]
  ],
  "expand_macros": [
    [
      "astropy/extern/ply/cpp.py",
      [
        "Preprocessor",
        "expand_macros"
      ]
    ]
  ],
  "evalexpr": [
    [
      "astropy/extern/ply/cpp.py",
      [
        "Preprocessor",
        "evalexpr"
      ]
    ]
  ],
  "parsegen": [
    [
      "astropy/extern/ply/cpp.py",
      [
        "Preprocessor",
        "parsegen"
      ]
    ]
  ],
  "include": [
    [
      "astropy/extern/ply/cpp.py",
      [
        "Preprocessor",
        "include"
      ]
    ]
  ],
  "define": [
    [
      "astropy/extern/ply/cpp.py",
      [
        "Preprocessor",
        "define"
      ]
    ]
  ],
  "undef": [
    [
      "astropy/extern/ply/cpp.py",
      [
        "Preprocessor",
        "undef"
      ]
    ]
  ],
  "token": [
    [
      "astropy/extern/ply/cpp.py",
      [
        "Preprocessor",
        "token"
      ]
    ],
    [
      "astropy/extern/ply/lex.py",
      [
        "Lexer",
        "token"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "token"
      ]
    ]
  ],
  "t_COMMENT": [
    [
      "astropy/extern/ply/ctokens.py",
      [
        "t_COMMENT"
      ]
    ]
  ],
  "t_CPPCOMMENT": [
    [
      "astropy/extern/ply/ctokens.py",
      [
        "t_CPPCOMMENT"
      ]
    ]
  ],
  "critical": [
    [
      "astropy/extern/ply/lex.py",
      [
        "PlyLogger",
        "critical"
      ]
    ]
  ],
  "warning": [
    [
      "astropy/extern/ply/lex.py",
      [
        "PlyLogger",
        "warning"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "PlyLogger",
        "warning"
      ]
    ]
  ],
  "__getattribute__": [
    [
      "astropy/extern/ply/lex.py",
      [
        "NullLogger",
        "__getattribute__"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "NullLogger",
        "__getattribute__"
      ]
    ],
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "__getattribute__"
      ]
    ]
  ],
  "writetab": [
    [
      "astropy/extern/ply/lex.py",
      [
        "Lexer",
        "writetab"
      ]
    ]
  ],
  "readtab": [
    [
      "astropy/extern/ply/lex.py",
      [
        "Lexer",
        "readtab"
      ]
    ]
  ],
  "input": [
    [
      "astropy/extern/ply/lex.py",
      [
        "Lexer",
        "input"
      ]
    ]
  ],
  "begin": [
    [
      "astropy/extern/ply/lex.py",
      [
        "Lexer",
        "begin"
      ]
    ]
  ],
  "push_state": [
    [
      "astropy/extern/ply/lex.py",
      [
        "Lexer",
        "push_state"
      ]
    ]
  ],
  "pop_state": [
    [
      "astropy/extern/ply/lex.py",
      [
        "Lexer",
        "pop_state"
      ]
    ]
  ],
  "current_state": [
    [
      "astropy/extern/ply/lex.py",
      [
        "Lexer",
        "current_state"
      ]
    ]
  ],
  "skip": [
    [
      "astropy/extern/ply/lex.py",
      [
        "Lexer",
        "skip"
      ]
    ]
  ],
  "next": [
    [
      "astropy/extern/ply/lex.py",
      [
        "Lexer",
        "next"
      ]
    ],
    [
      "astropy/table/groups.py",
      [
        "BaseGroups",
        "next"
      ]
    ]
  ],
  "_get_regex": [
    [
      "astropy/extern/ply/lex.py",
      [
        "_get_regex"
      ]
    ]
  ],
  "get_caller_module_dict": [
    [
      "astropy/extern/ply/lex.py",
      [
        "get_caller_module_dict"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "get_caller_module_dict"
      ]
    ]
  ],
  "_funcs_to_names": [
    [
      "astropy/extern/ply/lex.py",
      [
        "_funcs_to_names"
      ]
    ]
  ],
  "_names_to_funcs": [
    [
      "astropy/extern/ply/lex.py",
      [
        "_names_to_funcs"
      ]
    ]
  ],
  "_form_master_re": [
    [
      "astropy/extern/ply/lex.py",
      [
        "_form_master_re"
      ]
    ]
  ],
  "_statetoken": [
    [
      "astropy/extern/ply/lex.py",
      [
        "_statetoken"
      ]
    ]
  ],
  "get_all": [
    [
      "astropy/extern/ply/lex.py",
      [
        "LexerReflect",
        "get_all"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "ParserReflect",
        "get_all"
      ]
    ]
  ],
  "validate_all": [
    [
      "astropy/extern/ply/lex.py",
      [
        "LexerReflect",
        "validate_all"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "ParserReflect",
        "validate_all"
      ]
    ]
  ],
  "get_tokens": [
    [
      "astropy/extern/ply/lex.py",
      [
        "LexerReflect",
        "get_tokens"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "ParserReflect",
        "get_tokens"
      ]
    ]
  ],
  "validate_tokens": [
    [
      "astropy/extern/ply/lex.py",
      [
        "LexerReflect",
        "validate_tokens"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "ParserReflect",
        "validate_tokens"
      ]
    ]
  ],
  "get_literals": [
    [
      "astropy/extern/ply/lex.py",
      [
        "LexerReflect",
        "get_literals"
      ]
    ]
  ],
  "validate_literals": [
    [
      "astropy/extern/ply/lex.py",
      [
        "LexerReflect",
        "validate_literals"
      ]
    ]
  ],
  "get_states": [
    [
      "astropy/extern/ply/lex.py",
      [
        "LexerReflect",
        "get_states"
      ]
    ]
  ],
  "get_rules": [
    [
      "astropy/extern/ply/lex.py",
      [
        "LexerReflect",
        "get_rules"
      ]
    ]
  ],
  "validate_rules": [
    [
      "astropy/extern/ply/lex.py",
      [
        "LexerReflect",
        "validate_rules"
      ]
    ]
  ],
  "validate_module": [
    [
      "astropy/extern/ply/lex.py",
      [
        "LexerReflect",
        "validate_module"
      ]
    ]
  ],
  "lex": [
    [
      "astropy/extern/ply/lex.py",
      [
        "lex"
      ]
    ],
    [
      "astropy/utils/parsing.py",
      [
        "lex"
      ]
    ]
  ],
  "runmain": [
    [
      "astropy/extern/ply/lex.py",
      [
        "runmain"
      ]
    ]
  ],
  "TOKEN": [
    [
      "astropy/extern/ply/lex.py",
      [
        "TOKEN"
      ]
    ]
  ],
  "debug": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "PlyLogger",
        "debug"
      ]
    ]
  ],
  "format_result": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "format_result"
      ]
    ]
  ],
  "format_stack_entry": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "format_stack_entry"
      ]
    ]
  ],
  "errok": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "errok"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "LRParser",
        "errok"
      ]
    ]
  ],
  "restart": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "restart"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "LRParser",
        "restart"
      ]
    ]
  ],
  "call_errorfunc": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "call_errorfunc"
      ]
    ]
  ],
  "__getslice__": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "YaccProduction",
        "__getslice__"
      ]
    ]
  ],
  "lineno": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "YaccProduction",
        "lineno"
      ]
    ]
  ],
  "set_lineno": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "YaccProduction",
        "set_lineno"
      ]
    ]
  ],
  "linespan": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "YaccProduction",
        "linespan"
      ]
    ]
  ],
  "lexpos": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "YaccProduction",
        "lexpos"
      ]
    ]
  ],
  "set_lexpos": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "YaccProduction",
        "set_lexpos"
      ]
    ]
  ],
  "lexspan": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "YaccProduction",
        "lexspan"
      ]
    ]
  ],
  "set_defaulted_states": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "LRParser",
        "set_defaulted_states"
      ]
    ]
  ],
  "disable_defaulted_states": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "LRParser",
        "disable_defaulted_states"
      ]
    ]
  ],
  "parsedebug": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "LRParser",
        "parsedebug"
      ]
    ]
  ],
  "parseopt": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "LRParser",
        "parseopt"
      ]
    ]
  ],
  "parseopt_notrack": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "LRParser",
        "parseopt_notrack"
      ]
    ]
  ],
  "__nonzero__": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "Production",
        "__nonzero__"
      ]
    ]
  ],
  "lr_item": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "Production",
        "lr_item"
      ]
    ]
  ],
  "bind": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "Production",
        "bind"
      ]
    ],
    [
      "astropy/extern/ply/yacc.py",
      [
        "MiniProduction",
        "bind"
      ]
    ]
  ],
  "rightmost_terminal": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "rightmost_terminal"
      ]
    ]
  ],
  "set_precedence": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "Grammar",
        "set_precedence"
      ]
    ]
  ],
  "add_production": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "Grammar",
        "add_production"
      ]
    ]
  ],
  "set_start": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "Grammar",
        "set_start"
      ]
    ]
  ],
  "find_unreachable": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "Grammar",
        "find_unreachable"
      ]
    ]
  ],
  "infinite_cycles": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "Grammar",
        "infinite_cycles"
      ]
    ]
  ],
  "undefined_symbols": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "Grammar",
        "undefined_symbols"
      ]
    ]
  ],
  "unused_terminals": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "Grammar",
        "unused_terminals"
      ]
    ]
  ],
  "unused_rules": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "Grammar",
        "unused_rules"
      ]
    ]
  ],
  "unused_precedence": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "Grammar",
        "unused_precedence"
      ]
    ]
  ],
  "_first": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "Grammar",
        "_first"
      ]
    ]
  ],
  "compute_first": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "Grammar",
        "compute_first"
      ]
    ]
  ],
  "compute_follow": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "Grammar",
        "compute_follow"
      ]
    ]
  ],
  "build_lritems": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "Grammar",
        "build_lritems"
      ]
    ]
  ],
  "read_table": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "LRTable",
        "read_table"
      ]
    ],
    [
      "astropy/io/misc/asdf/connect.py",
      [
        "read_table"
      ]
    ]
  ],
  "read_pickle": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "LRTable",
        "read_pickle"
      ]
    ]
  ],
  "bind_callables": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "LRTable",
        "bind_callables"
      ]
    ]
  ],
  "digraph": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "digraph"
      ]
    ]
  ],
  "traverse": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "traverse"
      ]
    ],
    [
      "astropy/table/bst.py",
      [
        "BST",
        "traverse"
      ]
    ]
  ],
  "lr0_closure": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "LRGeneratedTable",
        "lr0_closure"
      ]
    ]
  ],
  "lr0_goto": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "LRGeneratedTable",
        "lr0_goto"
      ]
    ]
  ],
  "lr0_items": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "LRGeneratedTable",
        "lr0_items"
      ]
    ]
  ],
  "compute_nullable_nonterminals": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "LRGeneratedTable",
        "compute_nullable_nonterminals"
      ]
    ]
  ],
  "find_nonterminal_transitions": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "LRGeneratedTable",
        "find_nonterminal_transitions"
      ]
    ]
  ],
  "dr_relation": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "LRGeneratedTable",
        "dr_relation"
      ]
    ]
  ],
  "reads_relation": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "LRGeneratedTable",
        "reads_relation"
      ]
    ]
  ],
  "compute_lookback_includes": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "LRGeneratedTable",
        "compute_lookback_includes"
      ]
    ]
  ],
  "compute_read_sets": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "LRGeneratedTable",
        "compute_read_sets"
      ]
    ]
  ],
  "compute_follow_sets": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "LRGeneratedTable",
        "compute_follow_sets"
      ]
    ]
  ],
  "add_lookaheads": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "LRGeneratedTable",
        "add_lookaheads"
      ]
    ]
  ],
  "add_lalr_lookaheads": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "LRGeneratedTable",
        "add_lalr_lookaheads"
      ]
    ]
  ],
  "lr_parse_table": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "LRGeneratedTable",
        "lr_parse_table"
      ]
    ]
  ],
  "write_table": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "LRGeneratedTable",
        "write_table"
      ]
    ],
    [
      "astropy/io/misc/asdf/connect.py",
      [
        "write_table"
      ]
    ],
    [
      "astropy/io/votable/validator/html.py",
      [
        "write_table"
      ]
    ]
  ],
  "pickle_table": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "LRGeneratedTable",
        "pickle_table"
      ]
    ]
  ],
  "parse_grammar": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "parse_grammar"
      ]
    ]
  ],
  "signature": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "ParserReflect",
        "signature"
      ]
    ]
  ],
  "validate_modules": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "ParserReflect",
        "validate_modules"
      ]
    ]
  ],
  "get_start": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "ParserReflect",
        "get_start"
      ]
    ]
  ],
  "validate_start": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "ParserReflect",
        "validate_start"
      ]
    ]
  ],
  "get_error_func": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "ParserReflect",
        "get_error_func"
      ]
    ]
  ],
  "validate_error_func": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "ParserReflect",
        "validate_error_func"
      ]
    ]
  ],
  "get_precedence": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "ParserReflect",
        "get_precedence"
      ]
    ]
  ],
  "validate_precedence": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "ParserReflect",
        "validate_precedence"
      ]
    ]
  ],
  "get_pfunctions": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "ParserReflect",
        "get_pfunctions"
      ]
    ]
  ],
  "validate_pfunctions": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "ParserReflect",
        "validate_pfunctions"
      ]
    ]
  ],
  "yacc": [
    [
      "astropy/extern/ply/yacc.py",
      [
        "yacc"
      ]
    ],
    [
      "astropy/utils/parsing.py",
      [
        "yacc"
      ]
    ]
  ],
  "get_source_range": [
    [
      "astropy/extern/ply/ygen.py",
      [
        "get_source_range"
      ]
    ]
  ],
  "filter_section": [
    [
      "astropy/extern/ply/ygen.py",
      [
        "filter_section"
      ]
    ]
  ],
  "main": [
    [
      "astropy/extern/ply/ygen.py",
      [
        "main"
      ]
    ],
    [
      "astropy/io/fits/scripts/fitscheck.py",
      [
        "main"
      ]
    ],
    [
      "astropy/io/fits/scripts/fitsdiff.py",
      [
        "main"
      ]
    ],
    [
      "astropy/io/fits/scripts/fitsheader.py",
      [
        "main"
      ]
    ],
    [
      "astropy/io/fits/scripts/fitsinfo.py",
      [
        "main"
      ]
    ],
    [
      "astropy/io/votable/volint.py",
      [
        "main"
      ]
    ],
    [
      "astropy/table/scripts/showtable.py",
      [
        "main"
      ]
    ],
    [
      "astropy/visualization/scripts/fits2bitmap.py",
      [
        "main"
      ]
    ],
    [
      "astropy/wcs/wcslint.py",
      [
        "main"
      ]
    ]
  ],
  "process_lines": [
    [
      "astropy/io/ascii/basic.py",
      [
        "CommentedHeaderHeader",
        "process_lines"
      ]
    ],
    [
      "astropy/io/ascii/cds.py",
      [
        "CdsData",
        "process_lines"
      ]
    ],
    [
      "astropy/io/ascii/core.py",
      [
        "BaseInputter",
        "process_lines"
      ]
    ],
    [
      "astropy/io/ascii/core.py",
      [
        "BaseHeader",
        "process_lines"
      ]
    ],
    [
      "astropy/io/ascii/core.py",
      [
        "BaseData",
        "process_lines"
      ]
    ],
    [
      "astropy/io/ascii/core.py",
      [
        "ContinuationLinesInputter",
        "process_lines"
      ]
    ],
    [
      "astropy/io/ascii/daophot.py",
      [
        "DaophotInputter",
        "process_lines"
      ]
    ],
    [
      "astropy/io/ascii/ecsv.py",
      [
        "EcsvHeader",
        "process_lines"
      ]
    ],
    [
      "astropy/io/ascii/html.py",
      [
        "HTMLInputter",
        "process_lines"
      ]
    ],
    [
      "astropy/io/ascii/ipac.py",
      [
        "IpacHeader",
        "process_lines"
      ]
    ],
    [
      "astropy/io/ascii/latex.py",
      [
        "LatexInputter",
        "process_lines"
      ]
    ]
  ],
  "write_header": [
    [
      "astropy/io/ascii/basic.py",
      [
        "CommentedHeader",
        "write_header"
      ]
    ],
    [
      "astropy/io/ascii/core.py",
      [
        "BaseReader",
        "write_header"
      ]
    ]
  ],
  "process_line": [
    [
      "astropy/io/ascii/basic.py",
      [
        "TabHeaderSplitter",
        "process_line"
      ]
    ],
    [
      "astropy/io/ascii/core.py",
      [
        "BaseSplitter",
        "process_line"
      ]
    ],
    [
      "astropy/io/ascii/core.py",
      [
        "DefaultSplitter",
        "process_line"
      ]
    ],
    [
      "astropy/io/ascii/core.py",
      [
        "WhitespaceSplitter",
        "process_line"
      ]
    ],
    [
      "astropy/io/ascii/latex.py",
      [
        "LatexSplitter",
        "process_line"
      ]
    ],
    [
      "astropy/io/ascii/latex.py",
      [
        "AASTexHeaderSplitter",
        "process_line"
      ]
    ]
  ],
  "inconsistent_handler": [
    [
      "astropy/io/ascii/basic.py",
      [
        "Csv",
        "inconsistent_handler"
      ]
    ],
    [
      "astropy/io/ascii/core.py",
      [
        "BaseReader",
        "inconsistent_handler"
      ]
    ]
  ],
  "get_type_map_key": [
    [
      "astropy/io/ascii/basic.py",
      [
        "RdbHeader",
        "get_type_map_key"
      ]
    ],
    [
      "astropy/io/ascii/cds.py",
      [
        "CdsHeader",
        "get_type_map_key"
      ]
    ],
    [
      "astropy/io/ascii/core.py",
      [
        "BaseHeader",
        "get_type_map_key"
      ]
    ]
  ],
  "get_cols": [
    [
      "astropy/io/ascii/basic.py",
      [
        "RdbHeader",
        "get_cols"
      ]
    ],
    [
      "astropy/io/ascii/cds.py",
      [
        "CdsHeader",
        "get_cols"
      ]
    ],
    [
      "astropy/io/ascii/core.py",
      [
        "BaseHeader",
        "get_cols"
      ]
    ],
    [
      "astropy/io/ascii/daophot.py",
      [
        "DaophotHeader",
        "get_cols"
      ]
    ],
    [
      "astropy/io/ascii/ecsv.py",
      [
        "EcsvHeader",
        "get_cols"
      ]
    ],
    [
      "astropy/io/ascii/fixedwidth.py",
      [
        "FixedWidthHeader",
        "get_cols"
      ]
    ],
    [
      "astropy/io/ascii/ipac.py",
      [
        "IpacHeader",
        "get_cols"
      ]
    ],
    [
      "astropy/io/ascii/sextractor.py",
      [
        "SExtractorHeader",
        "get_cols"
      ]
    ]
  ],
  "io_read": [
    [
      "astropy/io/ascii/connect.py",
      [
        "io_read"
      ]
    ]
  ],
  "io_write": [
    [
      "astropy/io/ascii/connect.py",
      [
        "io_write"
      ]
    ]
  ],
  "io_identify": [
    [
      "astropy/io/ascii/connect.py",
      [
        "io_identify"
      ]
    ]
  ],
  "_get_connectors_table": [
    [
      "astropy/io/ascii/connect.py",
      [
        "_get_connectors_table"
      ]
    ]
  ],
  "_check_multidim_table": [
    [
      "astropy/io/ascii/core.py",
      [
        "_check_multidim_table"
      ]
    ],
    [
      "astropy/io/ascii/core.py",
      [
        "BaseReader",
        "_check_multidim_table"
      ]
    ]
  ],
  "writerow": [
    [
      "astropy/io/ascii/core.py",
      [
        "CsvWriter",
        "writerow"
      ]
    ]
  ],
  "writerows": [
    [
      "astropy/io/ascii/core.py",
      [
        "CsvWriter",
        "writerows"
      ]
    ]
  ],
  "_writerow": [
    [
      "astropy/io/ascii/core.py",
      [
        "CsvWriter",
        "_writerow"
      ]
    ]
  ],
  "__hash__": [
    [
      "astropy/io/ascii/core.py",
      [
        "MaskedConstant",
        "__hash__"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "_BaseColumnFormat",
        "__hash__"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "Column",
        "__hash__"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "__hash__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "__hash__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "Unit",
        "__hash__"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "__hash__"
      ]
    ],
    [
      "astropy/units/physical.py",
      [
        "PhysicalType",
        "__hash__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__hash__"
      ]
    ]
  ],
  "__copy__": [
    [
      "astropy/io/ascii/core.py",
      [
        "MaskedConstant",
        "__copy__"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "ColDefs",
        "__copy__"
      ]
    ],
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "__copy__"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "__copy__"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "__copy__"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "__copy__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "CompositeUnit",
        "__copy__"
      ]
    ],
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "__copy__"
      ]
    ]
  ],
  "get_lines": [
    [
      "astropy/io/ascii/core.py",
      [
        "BaseInputter",
        "get_lines"
      ]
    ]
  ],
  "process_val": [
    [
      "astropy/io/ascii/core.py",
      [
        "BaseSplitter",
        "process_val"
      ]
    ],
    [
      "astropy/io/ascii/core.py",
      [
        "DefaultSplitter",
        "process_val"
      ]
    ],
    [
      "astropy/io/ascii/latex.py",
      [
        "LatexSplitter",
        "process_val"
      ]
    ]
  ],
  "join": [
    [
      "astropy/io/ascii/core.py",
      [
        "BaseSplitter",
        "join"
      ]
    ],
    [
      "astropy/io/ascii/core.py",
      [
        "DefaultSplitter",
        "join"
      ]
    ],
    [
      "astropy/io/ascii/fixedwidth.py",
      [
        "FixedWidthSplitter",
        "join"
      ]
    ],
    [
      "astropy/io/ascii/ipac.py",
      [
        "IpacHeaderSplitter",
        "join"
      ]
    ],
    [
      "astropy/io/ascii/latex.py",
      [
        "LatexSplitter",
        "join"
      ]
    ],
    [
      "astropy/io/ascii/latex.py",
      [
        "AASTexHeaderSplitter",
        "join"
      ]
    ],
    [
      "astropy/io/ascii/mrt.py",
      [
        "MrtSplitter",
        "join"
      ]
    ],
    [
      "astropy/table/operations.py",
      [
        "join"
      ]
    ]
  ],
  "_replace_tab_with_space": [
    [
      "astropy/io/ascii/core.py",
      [
        "_replace_tab_with_space"
      ]
    ]
  ],
  "_get_line_index": [
    [
      "astropy/io/ascii/core.py",
      [
        "_get_line_index"
      ]
    ]
  ],
  "_set_cols_from_names": [
    [
      "astropy/io/ascii/core.py",
      [
        "BaseHeader",
        "_set_cols_from_names"
      ]
    ],
    [
      "astropy/io/ascii/html.py",
      [
        "HTMLHeader",
        "_set_cols_from_names"
      ]
    ]
  ],
  "update_meta": [
    [
      "astropy/io/ascii/core.py",
      [
        "BaseHeader",
        "update_meta"
      ]
    ],
    [
      "astropy/io/ascii/daophot.py",
      [
        "DaophotHeader",
        "update_meta"
      ]
    ],
    [
      "astropy/io/ascii/ecsv.py",
      [
        "EcsvHeader",
        "update_meta"
      ]
    ],
    [
      "astropy/io/ascii/ipac.py",
      [
        "IpacHeader",
        "update_meta"
      ]
    ]
  ],
  "write_comments": [
    [
      "astropy/io/ascii/core.py",
      [
        "BaseHeader",
        "write_comments"
      ]
    ],
    [
      "astropy/io/ascii/ecsv.py",
      [
        "EcsvHeader",
        "write_comments"
      ]
    ]
  ],
  "colnames": [
    [
      "astropy/io/ascii/core.py",
      [
        "BaseHeader",
        "colnames"
      ]
    ],
    [
      "astropy/table/row.py",
      [
        "Row",
        "colnames"
      ]
    ],
    [
      "astropy/table/serialize.py",
      [
        "_TableLite",
        "colnames"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "colnames"
      ]
    ]
  ],
  "remove_columns": [
    [
      "astropy/io/ascii/core.py",
      [
        "BaseHeader",
        "remove_columns"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "remove_columns"
      ]
    ]
  ],
  "rename_column": [
    [
      "astropy/io/ascii/core.py",
      [
        "BaseHeader",
        "rename_column"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "rename_column"
      ]
    ]
  ],
  "get_col_type": [
    [
      "astropy/io/ascii/core.py",
      [
        "BaseHeader",
        "get_col_type"
      ]
    ],
    [
      "astropy/io/ascii/ipac.py",
      [
        "IpacHeader",
        "get_col_type"
      ]
    ]
  ],
  "check_column_names": [
    [
      "astropy/io/ascii/core.py",
      [
        "BaseHeader",
        "check_column_names"
      ]
    ]
  ],
  "get_data_lines": [
    [
      "astropy/io/ascii/core.py",
      [
        "BaseData",
        "get_data_lines"
      ]
    ],
    [
      "astropy/io/ascii/daophot.py",
      [
        "DaophotData",
        "get_data_lines"
      ]
    ]
  ],
  "get_str_vals": [
    [
      "astropy/io/ascii/core.py",
      [
        "BaseData",
        "get_str_vals"
      ]
    ]
  ],
  "masks": [
    [
      "astropy/io/ascii/core.py",
      [
        "BaseData",
        "masks"
      ]
    ]
  ],
  "_set_fill_values": [
    [
      "astropy/io/ascii/core.py",
      [
        "BaseData",
        "_set_fill_values"
      ]
    ],
    [
      "astropy/io/ascii/ecsv.py",
      [
        "EcsvData",
        "_set_fill_values"
      ]
    ]
  ],
  "_set_masks": [
    [
      "astropy/io/ascii/core.py",
      [
        "BaseData",
        "_set_masks"
      ]
    ]
  ],
  "_replace_vals": [
    [
      "astropy/io/ascii/core.py",
      [
        "BaseData",
        "_replace_vals"
      ]
    ]
  ],
  "str_vals": [
    [
      "astropy/io/ascii/core.py",
      [
        "BaseData",
        "str_vals"
      ]
    ],
    [
      "astropy/io/ascii/ecsv.py",
      [
        "EcsvData",
        "str_vals"
      ]
    ],
    [
      "astropy/io/ascii/ipac.py",
      [
        "IpacHeader",
        "str_vals"
      ]
    ]
  ],
  "_set_col_formats": [
    [
      "astropy/io/ascii/core.py",
      [
        "BaseData",
        "_set_col_formats"
      ]
    ]
  ],
  "bool_converter": [
    [
      "astropy/io/ascii/core.py",
      [
        "convert_numpy",
        "bool_converter"
      ]
    ]
  ],
  "generic_converter": [
    [
      "astropy/io/ascii/core.py",
      [
        "convert_numpy",
        "generic_converter"
      ]
    ]
  ],
  "convert_numpy": [
    [
      "astropy/io/ascii/core.py",
      [
        "convert_numpy"
      ]
    ]
  ],
  "_validate_and_copy": [
    [
      "astropy/io/ascii/core.py",
      [
        "BaseOutputter",
        "_validate_and_copy"
      ]
    ]
  ],
  "_convert_vals": [
    [
      "astropy/io/ascii/core.py",
      [
        "BaseOutputter",
        "_convert_vals"
      ]
    ],
    [
      "astropy/io/ascii/ecsv.py",
      [
        "EcsvOutputter",
        "_convert_vals"
      ]
    ]
  ],
  "_deduplicate_names": [
    [
      "astropy/io/ascii/core.py",
      [
        "_deduplicate_names"
      ]
    ]
  ],
  "_is_number": [
    [
      "astropy/io/ascii/core.py",
      [
        "_is_number"
      ]
    ]
  ],
  "rename_columns": [
    [
      "astropy/io/ascii/core.py",
      [
        "_apply_include_exclude_names",
        "rename_columns"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "rename_columns"
      ]
    ]
  ],
  "_apply_include_exclude_names": [
    [
      "astropy/io/ascii/core.py",
      [
        "_apply_include_exclude_names"
      ]
    ]
  ],
  "comment_lines": [
    [
      "astropy/io/ascii/core.py",
      [
        "BaseReader",
        "comment_lines"
      ]
    ]
  ],
  "update_table_data": [
    [
      "astropy/io/ascii/core.py",
      [
        "BaseReader",
        "update_table_data"
      ]
    ],
    [
      "astropy/io/ascii/ecsv.py",
      [
        "Ecsv",
        "update_table_data"
      ]
    ]
  ],
  "_get_reader": [
    [
      "astropy/io/ascii/core.py",
      [
        "_get_reader"
      ]
    ]
  ],
  "_get_writer": [
    [
      "astropy/io/ascii/core.py",
      [
        "_get_writer"
      ]
    ]
  ],
  "parse_col_defs": [
    [
      "astropy/io/ascii/daophot.py",
      [
        "DaophotHeader",
        "parse_col_defs"
      ]
    ]
  ],
  "extract_keyword_line": [
    [
      "astropy/io/ascii/daophot.py",
      [
        "DaophotHeader",
        "extract_keyword_line"
      ]
    ]
  ],
  "search_multiline": [
    [
      "astropy/io/ascii/daophot.py",
      [
        "DaophotInputter",
        "search_multiline"
      ]
    ]
  ],
  "_check_dtype_is_str": [
    [
      "astropy/io/ascii/ecsv.py",
      [
        "_check_dtype_is_str"
      ]
    ]
  ],
  "_read_header": [
    [
      "astropy/io/ascii/fastbasic.py",
      [
        "FastBasic",
        "_read_header"
      ]
    ],
    [
      "astropy/io/ascii/fastbasic.py",
      [
        "FastCommentedHeader",
        "_read_header"
      ]
    ],
    [
      "astropy/io/ascii/fastbasic.py",
      [
        "FastRdb",
        "_read_header"
      ]
    ]
  ],
  "make_table": [
    [
      "astropy/io/ascii/fastbasic.py",
      [
        "FastBasic",
        "make_table"
      ]
    ],
    [
      "astropy/io/ascii/fastbasic.py",
      [
        "FastCommentedHeader",
        "make_table"
      ]
    ],
    [
      "astropy/io/misc/asdf/tests/test_io.py",
      [
        "make_table"
      ]
    ]
  ],
  "check_header": [
    [
      "astropy/io/ascii/fastbasic.py",
      [
        "FastBasic",
        "check_header"
      ]
    ]
  ],
  "_write": [
    [
      "astropy/io/ascii/fastbasic.py",
      [
        "FastBasic",
        "_write"
      ]
    ],
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedOutputRegistry",
        "test_inherited_write_registration",
        "_write"
      ]
    ]
  ],
  "get_line": [
    [
      "astropy/io/ascii/fixedwidth.py",
      [
        "FixedWidthHeader",
        "get_line"
      ]
    ]
  ],
  "get_fixedwidth_params": [
    [
      "astropy/io/ascii/fixedwidth.py",
      [
        "FixedWidthHeader",
        "get_fixedwidth_params"
      ]
    ],
    [
      "astropy/io/ascii/rst.py",
      [
        "SimpleRSTHeader",
        "get_fixedwidth_params"
      ]
    ]
  ],
  "identify_table": [
    [
      "astropy/io/ascii/html.py",
      [
        "identify_table"
      ]
    ]
  ],
  "start_line": [
    [
      "astropy/io/ascii/html.py",
      [
        "HTMLHeader",
        "start_line"
      ]
    ],
    [
      "astropy/io/ascii/html.py",
      [
        "HTMLData",
        "start_line"
      ]
    ],
    [
      "astropy/io/ascii/latex.py",
      [
        "LatexHeader",
        "start_line"
      ]
    ],
    [
      "astropy/io/ascii/latex.py",
      [
        "LatexData",
        "start_line"
      ]
    ],
    [
      "astropy/io/ascii/latex.py",
      [
        "AASTexHeader",
        "start_line"
      ]
    ],
    [
      "astropy/io/ascii/latex.py",
      [
        "AASTexData",
        "start_line"
      ]
    ]
  ],
  "end_line": [
    [
      "astropy/io/ascii/html.py",
      [
        "HTMLData",
        "end_line"
      ]
    ],
    [
      "astropy/io/ascii/latex.py",
      [
        "LatexData",
        "end_line"
      ]
    ]
  ],
  "fill_values": [
    [
      "astropy/io/ascii/html.py",
      [
        "HTML",
        "fill_values"
      ]
    ]
  ],
  "process_keyword_value": [
    [
      "astropy/io/ascii/ipac.py",
      [
        "IpacHeader",
        "update_meta",
        "process_keyword_value"
      ]
    ]
  ],
  "add_dictval_to_list": [
    [
      "astropy/io/ascii/latex.py",
      [
        "add_dictval_to_list"
      ]
    ]
  ],
  "find_latex_line": [
    [
      "astropy/io/ascii/latex.py",
      [
        "find_latex_line"
      ]
    ]
  ],
  "_get_units": [
    [
      "astropy/io/ascii/latex.py",
      [
        "LatexHeader",
        "_get_units"
      ]
    ]
  ],
  "first_true_index": [
    [
      "astropy/io/ascii/misc.py",
      [
        "first_true_index"
      ]
    ]
  ],
  "first_false_index": [
    [
      "astropy/io/ascii/misc.py",
      [
        "first_false_index"
      ]
    ]
  ],
  "sortmore": [
    [
      "astropy/io/ascii/misc.py",
      [
        "sortmore"
      ]
    ]
  ],
  "groupmore": [
    [
      "astropy/io/ascii/misc.py",
      [
        "groupmore"
      ]
    ]
  ],
  "_split_float_format": [
    [
      "astropy/io/ascii/mrt.py",
      [
        "MrtHeader",
        "_split_float_format"
      ]
    ]
  ],
  "_set_column_val_limits": [
    [
      "astropy/io/ascii/mrt.py",
      [
        "MrtHeader",
        "_set_column_val_limits"
      ]
    ]
  ],
  "column_float_formatter": [
    [
      "astropy/io/ascii/mrt.py",
      [
        "MrtHeader",
        "column_float_formatter"
      ]
    ]
  ],
  "write_byte_by_byte": [
    [
      "astropy/io/ascii/mrt.py",
      [
        "MrtHeader",
        "write_byte_by_byte"
      ]
    ]
  ],
  "_line_type": [
    [
      "astropy/io/ascii/qdp.py",
      [
        "_line_type"
      ]
    ]
  ],
  "_get_type_from_list_of_lines": [
    [
      "astropy/io/ascii/qdp.py",
      [
        "_get_type_from_list_of_lines"
      ]
    ]
  ],
  "_get_lines_from_file": [
    [
      "astropy/io/ascii/qdp.py",
      [
        "_get_lines_from_file"
      ]
    ]
  ],
  "_interpret_err_lines": [
    [
      "astropy/io/ascii/qdp.py",
      [
        "_interpret_err_lines"
      ]
    ]
  ],
  "_get_tables_from_qdp_file": [
    [
      "astropy/io/ascii/qdp.py",
      [
        "_get_tables_from_qdp_file"
      ]
    ]
  ],
  "_understand_err_col": [
    [
      "astropy/io/ascii/qdp.py",
      [
        "_understand_err_col"
      ]
    ]
  ],
  "_read_table_qdp": [
    [
      "astropy/io/ascii/qdp.py",
      [
        "_read_table_qdp"
      ]
    ]
  ],
  "_write_table_qdp": [
    [
      "astropy/io/ascii/qdp.py",
      [
        "_write_table_qdp"
      ]
    ]
  ],
  "assert_equal": [
    [
      "astropy/io/ascii/tests/common.py",
      [
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/coordinates/earthlocation.py",
      [
        "EarthLocationType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/coordinates/frames.py",
      [
        "BaseCoordType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/coordinates/frames.py",
      [
        "ICRSType10",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/coordinates/representation.py",
      [
        "RepresentationType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/coordinates/skycoord.py",
      [
        "SkyCoordType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/fits/fits.py",
      [
        "FitsType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/table/table.py",
      [
        "TableType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/table/table.py",
      [
        "ColumnType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/time/time.py",
      [
        "TimeType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/time/timedelta.py",
      [
        "TimeDeltaType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/basic.py",
      [
        "TransformType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/basic.py",
      [
        "IdentityType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/compound.py",
      [
        "CompoundType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/compound.py",
      [
        "RemapAxesType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "AiryDisk2DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Box1DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Box2DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Disk2DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Ellipse2DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Exponential1DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Gaussian1DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Gaussian2DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "KingProjectedAnalytic1DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Logarithmic1DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Lorentz1DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Moffat1DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Moffat2DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Planar2D",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "RedshiftScaleFactorType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "RickerWavelet1DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "RickerWavelet2DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Ring2DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Sersic1DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Sersic2DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Trigonometric1DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Trapezoid1DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "TrapezoidDisk2DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Voigt1DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/physical_models.py",
      [
        "BlackBody",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/physical_models.py",
      [
        "Drude1DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/physical_models.py",
      [
        "Plummer1DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/polynomial.py",
      [
        "ShiftType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/polynomial.py",
      [
        "ScaleType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/polynomial.py",
      [
        "MultiplyType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/polynomial.py",
      [
        "PolynomialTypeBase",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/polynomial.py",
      [
        "OrthoPolynomialType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/polynomial.py",
      [
        "Linear1DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/powerlaws.py",
      [
        "PowerLaw1DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/powerlaws.py",
      [
        "BrokenPowerLaw1DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/powerlaws.py",
      [
        "SmoothlyBrokenPowerLaw1DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/powerlaws.py",
      [
        "ExponentialCutoffPowerLaw1DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/powerlaws.py",
      [
        "LogParabola1DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/projections.py",
      [
        "AffineType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/projections.py",
      [
        "Rotate2DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/projections.py",
      [
        "Rotate3DType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/projections.py",
      [
        "RotationSequenceType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/projections.py",
      [
        "GenericProjectionType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/tabular.py",
      [
        "TabularType",
        "assert_equal"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/unit/equivalency.py",
      [
        "EquivalencyType",
        "assert_equal"
      ]
    ]
  ],
  "assert_almost_equal": [
    [
      "astropy/io/ascii/tests/common.py",
      [
        "assert_almost_equal"
      ]
    ],
    [
      "astropy/time/tests/test_precision.py",
      [
        "assert_almost_equal"
      ]
    ]
  ],
  "assert_true": [
    [
      "astropy/io/ascii/tests/common.py",
      [
        "assert_true"
      ]
    ]
  ],
  "decorate": [
    [
      "astropy/io/ascii/tests/common.py",
      [
        "make_decorator",
        "decorate"
      ]
    ],
    [
      "astropy/io/ascii/tests/common.py",
      [
        "raises",
        "decorate"
      ]
    ]
  ],
  "make_decorator": [
    [
      "astropy/io/ascii/tests/common.py",
      [
        "make_decorator"
      ]
    ]
  ],
  "raises": [
    [
      "astropy/io/ascii/tests/common.py",
      [
        "raises"
      ]
    ]
  ],
  "assert_table_equal": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "assert_table_equal"
      ]
    ]
  ],
  "_read": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "_read"
      ]
    ],
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedInputRegistry",
        "test_inherited_read_registration",
        "_read"
      ]
    ]
  ],
  "read_basic": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "read_basic"
      ]
    ]
  ],
  "read_csv": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "read_csv"
      ]
    ]
  ],
  "read_tab": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "read_tab"
      ]
    ]
  ],
  "read_commented_header": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "read_commented_header"
      ]
    ]
  ],
  "read_rdb": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "read_rdb"
      ]
    ]
  ],
  "read_no_header": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "read_no_header"
      ]
    ]
  ],
  "test_embedded_newlines": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_embedded_newlines"
      ]
    ]
  ],
  "test_simple_data": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_simple_data"
      ]
    ]
  ],
  "test_read_types": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_read_types"
      ]
    ]
  ],
  "test_supplied_names": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_supplied_names"
      ]
    ]
  ],
  "test_no_header": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_no_header"
      ]
    ]
  ],
  "test_no_header_supplied_names": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_no_header_supplied_names"
      ]
    ]
  ],
  "test_comment": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_comment"
      ]
    ]
  ],
  "test_empty_lines": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_empty_lines"
      ]
    ]
  ],
  "test_lstrip_whitespace": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_lstrip_whitespace"
      ]
    ]
  ],
  "test_rstrip_whitespace": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_rstrip_whitespace"
      ]
    ]
  ],
  "test_conversion": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_conversion"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitMethods",
        "test_conversion"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredQuantity",
        "test_conversion"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredMaskedQuantity",
        "test_conversion"
      ]
    ]
  ],
  "test_delimiter": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_delimiter"
      ]
    ]
  ],
  "test_include_names": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_include_names"
      ]
    ]
  ],
  "test_exclude_names": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_exclude_names"
      ]
    ]
  ],
  "test_include_exclude_names": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_include_exclude_names"
      ]
    ],
    [
      "astropy/io/ascii/tests/test_ipac_definitions.py",
      [
        "test_include_exclude_names"
      ]
    ]
  ],
  "test_doubled_quotes": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_doubled_quotes"
      ]
    ]
  ],
  "test_doubled_quotes_segv": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_doubled_quotes_segv"
      ]
    ]
  ],
  "test_quoted_fields": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_quoted_fields"
      ]
    ]
  ],
  "test_invalid_parameters": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_invalid_parameters"
      ]
    ]
  ],
  "test_invalid_parameters_other": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_invalid_parameters_other"
      ]
    ]
  ],
  "test_too_many_cols1": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_too_many_cols1"
      ]
    ]
  ],
  "test_too_many_cols2": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_too_many_cols2"
      ]
    ]
  ],
  "test_too_many_cols3": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_too_many_cols3"
      ]
    ]
  ],
  "test_too_many_cols4": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_too_many_cols4"
      ]
    ]
  ],
  "test_not_enough_cols": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_not_enough_cols"
      ]
    ]
  ],
  "test_data_end": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_data_end"
      ]
    ]
  ],
  "test_inf_nan": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_inf_nan"
      ]
    ]
  ],
  "test_fill_values": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_fill_values"
      ]
    ],
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_fill_values"
      ]
    ]
  ],
  "test_fill_include_exclude_names": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_fill_include_exclude_names"
      ]
    ]
  ],
  "test_many_rows": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_many_rows"
      ]
    ]
  ],
  "test_many_columns": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_many_columns"
      ]
    ]
  ],
  "test_fast_reader": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_fast_reader"
      ]
    ]
  ],
  "test_read_tab": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_read_tab"
      ]
    ]
  ],
  "test_default_data_start": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_default_data_start"
      ]
    ]
  ],
  "test_commented_header": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_commented_header"
      ]
    ]
  ],
  "test_rdb": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_rdb"
      ]
    ]
  ],
  "test_data_start": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_data_start"
      ]
    ]
  ],
  "test_quoted_empty_values": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_quoted_empty_values"
      ]
    ]
  ],
  "test_csv_comment_default": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_csv_comment_default"
      ]
    ]
  ],
  "test_whitespace_before_comment": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_whitespace_before_comment"
      ]
    ]
  ],
  "test_strip_line_trailing_whitespace": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_strip_line_trailing_whitespace"
      ]
    ]
  ],
  "test_no_data": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_no_data"
      ]
    ]
  ],
  "test_line_endings": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_line_endings"
      ]
    ]
  ],
  "test_store_comments": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_store_comments"
      ]
    ]
  ],
  "test_empty_quotes": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_empty_quotes"
      ]
    ]
  ],
  "test_fast_tab_with_names": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_fast_tab_with_names"
      ]
    ]
  ],
  "test_read_big_table": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_read_big_table"
      ]
    ]
  ],
  "test_read_big_table2": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_read_big_table2"
      ]
    ]
  ],
  "test_data_out_of_range": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_data_out_of_range"
      ]
    ]
  ],
  "test_data_at_range_limit": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_data_at_range_limit"
      ]
    ]
  ],
  "test_int_out_of_range": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_int_out_of_range"
      ]
    ]
  ],
  "test_int_out_of_order": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_int_out_of_order"
      ]
    ]
  ],
  "test_fortran_reader": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_fortran_reader"
      ]
    ]
  ],
  "test_fortran_invalid_exp": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_fortran_invalid_exp"
      ]
    ]
  ],
  "test_fortran_reader_notbasic": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_fortran_reader_notbasic"
      ]
    ]
  ],
  "test_dict_kwarg_integrity": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_dict_kwarg_integrity"
      ]
    ]
  ],
  "test_read_empty_basic_table_with_comments": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_read_empty_basic_table_with_comments"
      ]
    ]
  ],
  "test_conversion_fast": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_conversion_fast"
      ]
    ]
  ],
  "test_newline_as_delimiter": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_newline_as_delimiter"
      ]
    ]
  ],
  "test_single_line_string": [
    [
      "astropy/io/ascii/tests/test_c_reader.py",
      [
        "test_single_line_string"
      ]
    ]
  ],
  "test_roundtrip_mrt_table": [
    [
      "astropy/io/ascii/tests/test_cds.py",
      [
        "test_roundtrip_mrt_table"
      ]
    ]
  ],
  "test_write_byte_by_byte_units": [
    [
      "astropy/io/ascii/tests/test_cds.py",
      [
        "test_write_byte_by_byte_units"
      ]
    ]
  ],
  "test_write_readme_with_default_options": [
    [
      "astropy/io/ascii/tests/test_cds.py",
      [
        "test_write_readme_with_default_options"
      ]
    ]
  ],
  "test_write_empty_table": [
    [
      "astropy/io/ascii/tests/test_cds.py",
      [
        "test_write_empty_table"
      ]
    ],
    [
      "astropy/io/ascii/tests/test_write.py",
      [
        "test_write_empty_table"
      ]
    ]
  ],
  "test_write_null_data_values": [
    [
      "astropy/io/ascii/tests/test_cds.py",
      [
        "test_write_null_data_values"
      ]
    ]
  ],
  "test_write_byte_by_byte_for_masked_column": [
    [
      "astropy/io/ascii/tests/test_cds.py",
      [
        "test_write_byte_by_byte_for_masked_column"
      ]
    ]
  ],
  "test_write_coord_cols": [
    [
      "astropy/io/ascii/tests/test_cds.py",
      [
        "test_write_coord_cols"
      ]
    ]
  ],
  "test_write_byte_by_byte_bytes_col_format": [
    [
      "astropy/io/ascii/tests/test_cds.py",
      [
        "test_write_byte_by_byte_bytes_col_format"
      ]
    ]
  ],
  "test_write_byte_by_byte_wrapping": [
    [
      "astropy/io/ascii/tests/test_cds.py",
      [
        "test_write_byte_by_byte_wrapping"
      ]
    ]
  ],
  "test_write_mixin_and_broken_cols": [
    [
      "astropy/io/ascii/tests/test_cds.py",
      [
        "test_write_mixin_and_broken_cols"
      ]
    ]
  ],
  "test_write_extra_skycoord_cols": [
    [
      "astropy/io/ascii/tests/test_cds.py",
      [
        "test_write_extra_skycoord_cols"
      ]
    ]
  ],
  "test_write_skycoord_with_format": [
    [
      "astropy/io/ascii/tests/test_cds.py",
      [
        "test_write_skycoord_with_format"
      ]
    ]
  ],
  "read_table1": [
    [
      "astropy/io/ascii/tests/test_cds_header_from_readme.py",
      [
        "read_table1"
      ]
    ]
  ],
  "read_table2": [
    [
      "astropy/io/ascii/tests/test_cds_header_from_readme.py",
      [
        "read_table2"
      ]
    ]
  ],
  "read_table3": [
    [
      "astropy/io/ascii/tests/test_cds_header_from_readme.py",
      [
        "read_table3"
      ]
    ]
  ],
  "test_description": [
    [
      "astropy/io/ascii/tests/test_cds_header_from_readme.py",
      [
        "test_description"
      ]
    ]
  ],
  "test_multi_header": [
    [
      "astropy/io/ascii/tests/test_cds_header_from_readme.py",
      [
        "test_multi_header"
      ]
    ]
  ],
  "test_glob_header": [
    [
      "astropy/io/ascii/tests/test_cds_header_from_readme.py",
      [
        "test_glob_header"
      ]
    ]
  ],
  "test_header_from_readme": [
    [
      "astropy/io/ascii/tests/test_cds_header_from_readme.py",
      [
        "test_header_from_readme"
      ]
    ]
  ],
  "test_cds_units": [
    [
      "astropy/io/ascii/tests/test_cds_header_from_readme.py",
      [
        "test_cds_units"
      ]
    ]
  ],
  "test_cds_function_units": [
    [
      "astropy/io/ascii/tests/test_cds_header_from_readme.py",
      [
        "test_cds_function_units"
      ]
    ]
  ],
  "test_cds_function_units2": [
    [
      "astropy/io/ascii/tests/test_cds_header_from_readme.py",
      [
        "test_cds_function_units2"
      ]
    ]
  ],
  "test_cds_ignore_nullable": [
    [
      "astropy/io/ascii/tests/test_cds_header_from_readme.py",
      [
        "test_cds_ignore_nullable"
      ]
    ]
  ],
  "test_cds_no_whitespace": [
    [
      "astropy/io/ascii/tests/test_cds_header_from_readme.py",
      [
        "test_cds_no_whitespace"
      ]
    ]
  ],
  "test_cds_order": [
    [
      "astropy/io/ascii/tests/test_cds_header_from_readme.py",
      [
        "test_cds_order"
      ]
    ]
  ],
  "test_gzip": [
    [
      "astropy/io/ascii/tests/test_compressed.py",
      [
        "test_gzip"
      ]
    ]
  ],
  "test_bzip2": [
    [
      "astropy/io/ascii/tests/test_compressed.py",
      [
        "test_bzip2"
      ]
    ]
  ],
  "test_xz": [
    [
      "astropy/io/ascii/tests/test_compressed.py",
      [
        "test_xz"
      ]
    ]
  ],
  "test_read_generic": [
    [
      "astropy/io/ascii/tests/test_connect.py",
      [
        "test_read_generic"
      ]
    ]
  ],
  "test_write_generic": [
    [
      "astropy/io/ascii/tests/test_connect.py",
      [
        "test_write_generic"
      ]
    ]
  ],
  "test_read_ipac": [
    [
      "astropy/io/ascii/tests/test_connect.py",
      [
        "test_read_ipac"
      ]
    ]
  ],
  "test_read_cds": [
    [
      "astropy/io/ascii/tests/test_connect.py",
      [
        "test_read_cds"
      ]
    ]
  ],
  "test_read_dapphot": [
    [
      "astropy/io/ascii/tests/test_connect.py",
      [
        "test_read_dapphot"
      ]
    ]
  ],
  "test_read_latex": [
    [
      "astropy/io/ascii/tests/test_connect.py",
      [
        "test_read_latex"
      ]
    ]
  ],
  "test_read_latex_noformat": [
    [
      "astropy/io/ascii/tests/test_connect.py",
      [
        "test_read_latex_noformat"
      ]
    ]
  ],
  "test_write_latex": [
    [
      "astropy/io/ascii/tests/test_connect.py",
      [
        "test_write_latex"
      ]
    ]
  ],
  "test_write_latex_noformat": [
    [
      "astropy/io/ascii/tests/test_connect.py",
      [
        "test_write_latex_noformat"
      ]
    ]
  ],
  "test_read_html": [
    [
      "astropy/io/ascii/tests/test_connect.py",
      [
        "test_read_html"
      ]
    ]
  ],
  "test_read_html_noformat": [
    [
      "astropy/io/ascii/tests/test_connect.py",
      [
        "test_read_html_noformat"
      ]
    ]
  ],
  "test_write_html": [
    [
      "astropy/io/ascii/tests/test_connect.py",
      [
        "test_write_html"
      ]
    ]
  ],
  "test_write_html_noformat": [
    [
      "astropy/io/ascii/tests/test_connect.py",
      [
        "test_write_html_noformat"
      ]
    ]
  ],
  "test_read_rdb": [
    [
      "astropy/io/ascii/tests/test_connect.py",
      [
        "test_read_rdb"
      ]
    ]
  ],
  "test_read_rdb_noformat": [
    [
      "astropy/io/ascii/tests/test_connect.py",
      [
        "test_read_rdb_noformat"
      ]
    ]
  ],
  "test_write_rdb": [
    [
      "astropy/io/ascii/tests/test_connect.py",
      [
        "test_write_rdb"
      ]
    ]
  ],
  "test_write_rdb_noformat": [
    [
      "astropy/io/ascii/tests/test_connect.py",
      [
        "test_write_rdb_noformat"
      ]
    ]
  ],
  "test_read_csv": [
    [
      "astropy/io/ascii/tests/test_connect.py",
      [
        "test_read_csv"
      ]
    ]
  ],
  "test_write_csv": [
    [
      "astropy/io/ascii/tests/test_connect.py",
      [
        "test_write_csv"
      ]
    ]
  ],
  "test_auto_identify_ecsv": [
    [
      "astropy/io/ascii/tests/test_connect.py",
      [
        "test_auto_identify_ecsv"
      ]
    ]
  ],
  "test_write_simple": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_write_simple"
      ]
    ]
  ],
  "test_write_full": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_write_full"
      ]
    ]
  ],
  "test_write_read_roundtrip": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_write_read_roundtrip"
      ]
    ]
  ],
  "test_bad_delimiter": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_bad_delimiter"
      ]
    ]
  ],
  "test_bad_header_start": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_bad_header_start"
      ]
    ]
  ],
  "test_bad_delimiter_input": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_bad_delimiter_input"
      ]
    ]
  ],
  "test_multidim_input": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_multidim_input"
      ]
    ]
  ],
  "test_round_trip_empty_table": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_round_trip_empty_table"
      ]
    ]
  ],
  "test_csv_ecsv_colnames_mismatch": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_csv_ecsv_colnames_mismatch"
      ]
    ]
  ],
  "test_regression_5604": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_regression_5604"
      ]
    ]
  ],
  "assert_objects_equal": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "assert_objects_equal"
      ]
    ],
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "assert_objects_equal"
      ]
    ],
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "assert_objects_equal"
      ]
    ],
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "assert_objects_equal"
      ]
    ]
  ],
  "test_ecsv_mixins_ascii_read_class": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_ecsv_mixins_ascii_read_class"
      ]
    ]
  ],
  "test_ecsv_mixins_qtable_to_table": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_ecsv_mixins_qtable_to_table"
      ]
    ]
  ],
  "test_ecsv_mixins_as_one": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_ecsv_mixins_as_one"
      ]
    ]
  ],
  "make_multidim": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "make_multidim"
      ]
    ]
  ],
  "test_ecsv_mixins_per_column": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_ecsv_mixins_per_column"
      ]
    ]
  ],
  "test_round_trip_masked_table_default": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_round_trip_masked_table_default"
      ]
    ],
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_round_trip_masked_table_default"
      ]
    ],
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "test_round_trip_masked_table_default"
      ]
    ]
  ],
  "test_round_trip_masked_table_serialize_mask": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_round_trip_masked_table_serialize_mask"
      ]
    ],
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "test_round_trip_masked_table_serialize_mask"
      ]
    ]
  ],
  "test_ecsv_round_trip_user_defined_unit": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_ecsv_round_trip_user_defined_unit"
      ]
    ]
  ],
  "test_read_masked_bool": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_read_masked_bool"
      ]
    ],
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_read_masked_bool"
      ]
    ]
  ],
  "test_roundtrip_multidim_masked_array": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_roundtrip_multidim_masked_array"
      ]
    ]
  ],
  "test_multidim_unknown_subtype": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_multidim_unknown_subtype"
      ]
    ]
  ],
  "test_multidim_bad_shape": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_multidim_bad_shape"
      ]
    ]
  ],
  "test_write_not_json_serializable": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_write_not_json_serializable"
      ]
    ]
  ],
  "test_read_not_json_serializable": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_read_not_json_serializable"
      ]
    ]
  ],
  "test_read_bad_datatype": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_read_bad_datatype"
      ]
    ]
  ],
  "test_read_complex": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_read_complex"
      ]
    ]
  ],
  "test_read_str": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_read_str"
      ]
    ]
  ],
  "test_read_bad_datatype_for_object_subtype": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_read_bad_datatype_for_object_subtype"
      ]
    ]
  ],
  "test_full_repr_roundtrip": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_full_repr_roundtrip"
      ]
    ]
  ],
  "_get_ecsv_header_dict": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "_get_ecsv_header_dict"
      ]
    ]
  ],
  "_make_expected_values": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "_make_expected_values"
      ]
    ]
  ],
  "test_specialized_columns": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_specialized_columns"
      ]
    ]
  ],
  "test_full_subtypes": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_full_subtypes"
      ]
    ]
  ],
  "test_masked_empty_subtypes": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_masked_empty_subtypes"
      ]
    ]
  ],
  "test_masked_vals_in_array_subtypes": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_masked_vals_in_array_subtypes"
      ]
    ]
  ],
  "test_guess_ecsv_with_one_column": [
    [
      "astropy/io/ascii/tests/test_ecsv.py",
      [
        "test_guess_ecsv_with_one_column"
      ]
    ]
  ],
  "assert_equal_splitlines": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "assert_equal_splitlines"
      ]
    ],
    [
      "astropy/io/ascii/tests/test_rst.py",
      [
        "assert_equal_splitlines"
      ]
    ]
  ],
  "test_read_normal": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_read_normal"
      ]
    ],
    [
      "astropy/io/ascii/tests/test_rst.py",
      [
        "test_read_normal"
      ]
    ]
  ],
  "test_read_normal_names": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_read_normal_names"
      ]
    ],
    [
      "astropy/io/ascii/tests/test_rst.py",
      [
        "test_read_normal_names"
      ]
    ]
  ],
  "test_read_normal_names_include": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_read_normal_names_include"
      ]
    ],
    [
      "astropy/io/ascii/tests/test_rst.py",
      [
        "test_read_normal_names_include"
      ]
    ]
  ],
  "test_read_normal_exclude": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_read_normal_exclude"
      ]
    ],
    [
      "astropy/io/ascii/tests/test_rst.py",
      [
        "test_read_normal_exclude"
      ]
    ]
  ],
  "test_read_weird": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_read_weird"
      ]
    ]
  ],
  "test_read_double": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_read_double"
      ]
    ]
  ],
  "test_read_space_delimiter": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_read_space_delimiter"
      ]
    ]
  ],
  "test_read_no_header_autocolumn": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_read_no_header_autocolumn"
      ]
    ]
  ],
  "test_read_no_header_names": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_read_no_header_names"
      ]
    ]
  ],
  "test_read_no_header_autocolumn_NoHeader": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_read_no_header_autocolumn_NoHeader"
      ]
    ]
  ],
  "test_read_no_header_names_NoHeader": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_read_no_header_names_NoHeader"
      ]
    ]
  ],
  "test_read_col_starts": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_read_col_starts"
      ]
    ]
  ],
  "test_read_detect_col_starts_or_ends": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_read_detect_col_starts_or_ends"
      ]
    ]
  ],
  "test_write_normal": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_write_normal"
      ]
    ],
    [
      "astropy/io/ascii/tests/test_rst.py",
      [
        "test_write_normal"
      ]
    ]
  ],
  "test_write_fill_values": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_write_fill_values"
      ]
    ],
    [
      "astropy/io/ascii/tests/test_write.py",
      [
        "test_write_fill_values"
      ]
    ]
  ],
  "test_write_no_pad": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_write_no_pad"
      ]
    ]
  ],
  "test_write_no_bookend": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_write_no_bookend"
      ]
    ]
  ],
  "test_write_no_delimiter": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_write_no_delimiter"
      ]
    ]
  ],
  "test_write_noheader_normal": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_write_noheader_normal"
      ]
    ]
  ],
  "test_write_noheader_no_pad": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_write_noheader_no_pad"
      ]
    ]
  ],
  "test_write_noheader_no_bookend": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_write_noheader_no_bookend"
      ]
    ]
  ],
  "test_write_noheader_no_delimiter": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_write_noheader_no_delimiter"
      ]
    ]
  ],
  "test_write_formats": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_write_formats"
      ]
    ]
  ],
  "test_read_twoline_normal": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_read_twoline_normal"
      ]
    ]
  ],
  "test_read_twoline_ReST": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_read_twoline_ReST"
      ]
    ]
  ],
  "test_read_twoline_human": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_read_twoline_human"
      ]
    ]
  ],
  "test_read_twoline_fail": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_read_twoline_fail"
      ]
    ]
  ],
  "test_read_twoline_wrong_marker": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_read_twoline_wrong_marker"
      ]
    ]
  ],
  "test_write_twoline_normal": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_write_twoline_normal"
      ]
    ]
  ],
  "test_write_twoline_no_pad": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_write_twoline_no_pad"
      ]
    ]
  ],
  "test_write_twoline_no_bookend": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_write_twoline_no_bookend"
      ]
    ]
  ],
  "test_fixedwidthnoheader_splitting": [
    [
      "astropy/io/ascii/tests/test_fixedwidth.py",
      [
        "test_fixedwidthnoheader_splitting"
      ]
    ]
  ],
  "test_soupstring": [
    [
      "astropy/io/ascii/tests/test_html.py",
      [
        "test_soupstring"
      ]
    ]
  ],
  "test_listwriter": [
    [
      "astropy/io/ascii/tests/test_html.py",
      [
        "test_listwriter"
      ]
    ]
  ],
  "test_identify_table": [
    [
      "astropy/io/ascii/tests/test_html.py",
      [
        "test_identify_table"
      ]
    ]
  ],
  "test_missing_data": [
    [
      "astropy/io/ascii/tests/test_html.py",
      [
        "test_missing_data"
      ]
    ]
  ],
  "test_rename_cols": [
    [
      "astropy/io/ascii/tests/test_html.py",
      [
        "test_rename_cols"
      ]
    ]
  ],
  "test_no_names": [
    [
      "astropy/io/ascii/tests/test_html.py",
      [
        "test_no_names"
      ]
    ]
  ],
  "test_identify_table_fail": [
    [
      "astropy/io/ascii/tests/test_html.py",
      [
        "test_identify_table_fail"
      ]
    ]
  ],
  "test_backend_parsers": [
    [
      "astropy/io/ascii/tests/test_html.py",
      [
        "test_backend_parsers"
      ]
    ]
  ],
  "test_htmlinputter_no_bs4": [
    [
      "astropy/io/ascii/tests/test_html.py",
      [
        "test_htmlinputter_no_bs4"
      ]
    ]
  ],
  "test_htmlinputter": [
    [
      "astropy/io/ascii/tests/test_html.py",
      [
        "test_htmlinputter"
      ]
    ]
  ],
  "test_htmlsplitter": [
    [
      "astropy/io/ascii/tests/test_html.py",
      [
        "test_htmlsplitter"
      ]
    ]
  ],
  "test_htmlheader_start": [
    [
      "astropy/io/ascii/tests/test_html.py",
      [
        "test_htmlheader_start"
      ]
    ]
  ],
  "test_htmldata": [
    [
      "astropy/io/ascii/tests/test_html.py",
      [
        "test_htmldata"
      ]
    ]
  ],
  "test_multicolumn_write": [
    [
      "astropy/io/ascii/tests/test_html.py",
      [
        "test_multicolumn_write"
      ]
    ]
  ],
  "test_multicolumn_write_escape": [
    [
      "astropy/io/ascii/tests/test_html.py",
      [
        "test_multicolumn_write_escape"
      ]
    ]
  ],
  "test_write_no_multicols": [
    [
      "astropy/io/ascii/tests/test_html.py",
      [
        "test_write_no_multicols"
      ]
    ]
  ],
  "test_multicolumn_read": [
    [
      "astropy/io/ascii/tests/test_html.py",
      [
        "test_multicolumn_read"
      ]
    ]
  ],
  "test_raw_html_write": [
    [
      "astropy/io/ascii/tests/test_html.py",
      [
        "test_raw_html_write"
      ]
    ]
  ],
  "test_raw_html_write_clean": [
    [
      "astropy/io/ascii/tests/test_html.py",
      [
        "test_raw_html_write_clean"
      ]
    ]
  ],
  "test_write_table_html_fill_values": [
    [
      "astropy/io/ascii/tests/test_html.py",
      [
        "test_write_table_html_fill_values"
      ]
    ]
  ],
  "test_write_table_html_fill_values_optional_columns": [
    [
      "astropy/io/ascii/tests/test_html.py",
      [
        "test_write_table_html_fill_values_optional_columns"
      ]
    ]
  ],
  "test_write_table_html_fill_values_masked": [
    [
      "astropy/io/ascii/tests/test_html.py",
      [
        "test_write_table_html_fill_values_masked"
      ]
    ]
  ],
  "test_multicolumn_table_html_fill_values": [
    [
      "astropy/io/ascii/tests/test_html.py",
      [
        "test_multicolumn_table_html_fill_values"
      ]
    ]
  ],
  "test_multi_column_write_table_html_fill_values_masked": [
    [
      "astropy/io/ascii/tests/test_html.py",
      [
        "test_multi_column_write_table_html_fill_values_masked"
      ]
    ]
  ],
  "test_read_html_unicode": [
    [
      "astropy/io/ascii/tests/test_html.py",
      [
        "test_read_html_unicode"
      ]
    ]
  ],
  "test_ipac_default": [
    [
      "astropy/io/ascii/tests/test_ipac_definitions.py",
      [
        "test_ipac_default"
      ]
    ]
  ],
  "test_ipac_ignore": [
    [
      "astropy/io/ascii/tests/test_ipac_definitions.py",
      [
        "test_ipac_ignore"
      ]
    ]
  ],
  "test_ipac_left": [
    [
      "astropy/io/ascii/tests/test_ipac_definitions.py",
      [
        "test_ipac_left"
      ]
    ]
  ],
  "test_ipac_right": [
    [
      "astropy/io/ascii/tests/test_ipac_definitions.py",
      [
        "test_ipac_right"
      ]
    ]
  ],
  "test_too_long_colname_default": [
    [
      "astropy/io/ascii/tests/test_ipac_definitions.py",
      [
        "test_too_long_colname_default"
      ]
    ]
  ],
  "test_too_long_colname_strict": [
    [
      "astropy/io/ascii/tests/test_ipac_definitions.py",
      [
        "test_too_long_colname_strict"
      ]
    ]
  ],
  "test_too_long_colname_notstrict": [
    [
      "astropy/io/ascii/tests/test_ipac_definitions.py",
      [
        "test_too_long_colname_notstrict"
      ]
    ]
  ],
  "test_non_alfnum_colname": [
    [
      "astropy/io/ascii/tests/test_ipac_definitions.py",
      [
        "test_non_alfnum_colname"
      ]
    ]
  ],
  "test_colname_starswithnumber_strict": [
    [
      "astropy/io/ascii/tests/test_ipac_definitions.py",
      [
        "test_colname_starswithnumber_strict"
      ]
    ]
  ],
  "test_double_colname_strict": [
    [
      "astropy/io/ascii/tests/test_ipac_definitions.py",
      [
        "test_double_colname_strict"
      ]
    ]
  ],
  "test_reserved_colname_strict": [
    [
      "astropy/io/ascii/tests/test_ipac_definitions.py",
      [
        "test_reserved_colname_strict"
      ]
    ]
  ],
  "test_too_long_comment": [
    [
      "astropy/io/ascii/tests/test_ipac_definitions.py",
      [
        "test_too_long_comment"
      ]
    ]
  ],
  "test_out_with_nonstring_null": [
    [
      "astropy/io/ascii/tests/test_ipac_definitions.py",
      [
        "test_out_with_nonstring_null"
      ]
    ]
  ],
  "test_short_dtypes": [
    [
      "astropy/io/ascii/tests/test_ipac_definitions.py",
      [
        "test_short_dtypes"
      ]
    ]
  ],
  "test_get_tables_from_qdp_file": [
    [
      "astropy/io/ascii/tests/test_qdp.py",
      [
        "test_get_tables_from_qdp_file"
      ]
    ]
  ],
  "test_read_example": [
    [
      "astropy/io/ascii/tests/test_qdp.py",
      [
        "test_read_example"
      ]
    ]
  ],
  "test_roundtrip_example": [
    [
      "astropy/io/ascii/tests/test_qdp.py",
      [
        "test_roundtrip_example"
      ]
    ]
  ],
  "test_roundtrip_example_comma": [
    [
      "astropy/io/ascii/tests/test_qdp.py",
      [
        "test_roundtrip_example_comma"
      ]
    ]
  ],
  "test_read_write_simple": [
    [
      "astropy/io/ascii/tests/test_qdp.py",
      [
        "test_read_write_simple"
      ]
    ],
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_read_write_simple"
      ]
    ],
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "test_read_write_simple"
      ]
    ]
  ],
  "test_read_write_simple_specify_name": [
    [
      "astropy/io/ascii/tests/test_qdp.py",
      [
        "test_read_write_simple_specify_name"
      ]
    ]
  ],
  "test_get_lines_from_qdp": [
    [
      "astropy/io/ascii/tests/test_qdp.py",
      [
        "test_get_lines_from_qdp"
      ]
    ]
  ],
  "asciiIO": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "asciiIO"
      ]
    ]
  ],
  "test_convert_overflow": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_convert_overflow"
      ]
    ]
  ],
  "test_read_specify_converters_with_names": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_read_specify_converters_with_names"
      ]
    ]
  ],
  "test_read_remove_and_rename_columns": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_read_remove_and_rename_columns"
      ]
    ]
  ],
  "test_guess_with_names_arg": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_guess_with_names_arg"
      ]
    ]
  ],
  "test_guess_with_format_arg": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_guess_with_format_arg"
      ]
    ]
  ],
  "test_guess_with_delimiter_arg": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_guess_with_delimiter_arg"
      ]
    ]
  ],
  "test_reading_mixed_delimiter_tabs_spaces": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_reading_mixed_delimiter_tabs_spaces"
      ]
    ]
  ],
  "test_read_with_names_arg": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_read_with_names_arg"
      ]
    ]
  ],
  "test_read_all_files": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_read_all_files"
      ]
    ]
  ],
  "test_read_all_files_via_table": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_read_all_files_via_table"
      ]
    ]
  ],
  "test_guess_all_files": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_guess_all_files"
      ]
    ]
  ],
  "test_validate_read_kwargs": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_validate_read_kwargs"
      ]
    ]
  ],
  "test_daophot_indef": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_daophot_indef"
      ]
    ]
  ],
  "test_daophot_types": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_daophot_types"
      ]
    ]
  ],
  "test_daophot_header_keywords": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_daophot_header_keywords"
      ]
    ]
  ],
  "test_daophot_multiple_aperture": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_daophot_multiple_aperture"
      ]
    ]
  ],
  "test_daophot_multiple_aperture2": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_daophot_multiple_aperture2"
      ]
    ]
  ],
  "test_empty_table_no_header": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_empty_table_no_header"
      ]
    ]
  ],
  "test_wrong_quote": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_wrong_quote"
      ]
    ]
  ],
  "test_extra_data_col": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_extra_data_col"
      ]
    ]
  ],
  "test_extra_data_col2": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_extra_data_col2"
      ]
    ]
  ],
  "test_missing_file": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_missing_file"
      ]
    ],
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestCore",
        "test_missing_file"
      ]
    ],
    [
      "astropy/io/fits/tests/test_fitscheck.py",
      [
        "TestFitscheck",
        "test_missing_file"
      ]
    ],
    [
      "astropy/table/tests/test_showtable.py",
      [
        "test_missing_file"
      ]
    ]
  ],
  "test_set_names": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_set_names"
      ]
    ]
  ],
  "test_set_include_names": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_set_include_names"
      ]
    ]
  ],
  "test_set_exclude_names": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_set_exclude_names"
      ]
    ]
  ],
  "test_include_names_daophot": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_include_names_daophot"
      ]
    ]
  ],
  "test_exclude_names_daophot": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_exclude_names_daophot"
      ]
    ]
  ],
  "test_custom_process_lines": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_custom_process_lines"
      ]
    ]
  ],
  "test_custom_process_line": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_custom_process_line"
      ]
    ]
  ],
  "test_custom_splitters": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_custom_splitters"
      ]
    ]
  ],
  "test_start_end": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_start_end"
      ]
    ]
  ],
  "test_set_converters": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_set_converters"
      ]
    ]
  ],
  "test_from_string": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_from_string"
      ]
    ]
  ],
  "test_from_filelike": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_from_filelike"
      ]
    ]
  ],
  "test_from_lines": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_from_lines"
      ]
    ]
  ],
  "test_comment_lines": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_comment_lines"
      ]
    ]
  ],
  "test_fill_values_col": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_fill_values_col"
      ]
    ]
  ],
  "test_fill_values_include_names": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_fill_values_include_names"
      ]
    ]
  ],
  "test_fill_values_exclude_names": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_fill_values_exclude_names"
      ]
    ]
  ],
  "check_fill_values": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "check_fill_values"
      ]
    ]
  ],
  "test_fill_values_list": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_fill_values_list"
      ]
    ]
  ],
  "test_masking_Cds_Mrt": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_masking_Cds_Mrt"
      ]
    ]
  ],
  "test_null_Ipac": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_null_Ipac"
      ]
    ]
  ],
  "test_Ipac_meta": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_Ipac_meta"
      ]
    ]
  ],
  "test_set_guess_kwarg": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_set_guess_kwarg"
      ]
    ]
  ],
  "test_read_rdb_wrong_type": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_read_rdb_wrong_type"
      ]
    ]
  ],
  "test_default_missing": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_default_missing"
      ]
    ]
  ],
  "get_testfiles": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "get_testfiles"
      ]
    ]
  ],
  "test_header_start_exception": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_header_start_exception"
      ]
    ]
  ],
  "test_csv_table_read": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_csv_table_read"
      ]
    ]
  ],
  "test_overlapping_names": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_overlapping_names"
      ]
    ]
  ],
  "test_sextractor_units": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_sextractor_units"
      ]
    ]
  ],
  "test_sextractor_last_column_array": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_sextractor_last_column_array"
      ]
    ]
  ],
  "test_list_with_newlines": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_list_with_newlines"
      ]
    ]
  ],
  "test_commented_csv": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_commented_csv"
      ]
    ]
  ],
  "test_meta_comments": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_meta_comments"
      ]
    ]
  ],
  "test_guess_fail": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_guess_fail"
      ]
    ]
  ],
  "test_guessing_file_object": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_guessing_file_object"
      ]
    ]
  ],
  "test_pformat_roundtrip": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_pformat_roundtrip"
      ]
    ]
  ],
  "test_ipac_abbrev": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_ipac_abbrev"
      ]
    ]
  ],
  "test_almost_but_not_quite_daophot": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_almost_but_not_quite_daophot"
      ]
    ]
  ],
  "test_commented_header_comments": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_commented_header_comments"
      ]
    ],
    [
      "astropy/io/ascii/tests/test_write.py",
      [
        "test_commented_header_comments"
      ]
    ]
  ],
  "test_probably_html": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_probably_html"
      ]
    ]
  ],
  "test_data_header_start": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_data_header_start"
      ]
    ]
  ],
  "test_table_with_no_newline": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_table_with_no_newline"
      ]
    ]
  ],
  "test_path_object": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_path_object"
      ]
    ]
  ],
  "test_column_conversion_error": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_column_conversion_error"
      ]
    ]
  ],
  "test_non_C_locale_with_fast_reader": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_non_C_locale_with_fast_reader"
      ]
    ]
  ],
  "test_no_units_for_char_columns": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_no_units_for_char_columns"
      ]
    ]
  ],
  "test_initial_column_fill_values": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_initial_column_fill_values"
      ]
    ]
  ],
  "test_latex_no_trailing_backslash": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_latex_no_trailing_backslash"
      ]
    ]
  ],
  "text_aastex_no_trailing_backslash": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "text_aastex_no_trailing_backslash"
      ]
    ]
  ],
  "test_read_with_encoding": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_read_with_encoding"
      ]
    ]
  ],
  "test_unsupported_read_with_encoding": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_unsupported_read_with_encoding"
      ]
    ]
  ],
  "test_read_chunks_input_types": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_read_chunks_input_types"
      ]
    ]
  ],
  "test_read_chunks_formats": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_read_chunks_formats"
      ]
    ]
  ],
  "test_read_chunks_chunk_size_too_small": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_read_chunks_chunk_size_too_small"
      ]
    ]
  ],
  "test_read_chunks_table_changes": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_read_chunks_table_changes"
      ]
    ]
  ],
  "test_read_non_ascii": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_read_non_ascii"
      ]
    ]
  ],
  "test_kwargs_dict_guess": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_kwargs_dict_guess"
      ]
    ]
  ],
  "_get_lines": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "_get_lines"
      ]
    ]
  ],
  "test_deduplicate_names_basic": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_deduplicate_names_basic"
      ]
    ]
  ],
  "test_include_names_rdb_fast": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_include_names_rdb_fast"
      ]
    ]
  ],
  "test_deduplicate_names_with_types": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_deduplicate_names_with_types"
      ]
    ]
  ],
  "test_set_invalid_names": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_set_invalid_names"
      ]
    ]
  ],
  "test_read_converters_wildcard": [
    [
      "astropy/io/ascii/tests/test_read.py",
      [
        "test_read_converters_wildcard"
      ]
    ]
  ],
  "test_read_unbounded_right_column": [
    [
      "astropy/io/ascii/tests/test_rst.py",
      [
        "test_read_unbounded_right_column"
      ]
    ]
  ],
  "test_read_unbounded_right_column_header": [
    [
      "astropy/io/ascii/tests/test_rst.py",
      [
        "test_read_unbounded_right_column_header"
      ]
    ]
  ],
  "test_read_right_indented_table": [
    [
      "astropy/io/ascii/tests/test_rst.py",
      [
        "test_read_right_indented_table"
      ]
    ]
  ],
  "test_trailing_spaces_in_row_definition": [
    [
      "astropy/io/ascii/tests/test_rst.py",
      [
        "test_trailing_spaces_in_row_definition"
      ]
    ]
  ],
  "test_types_from_dat": [
    [
      "astropy/io/ascii/tests/test_types.py",
      [
        "test_types_from_dat"
      ]
    ]
  ],
  "test_rdb_write_types": [
    [
      "astropy/io/ascii/tests/test_types.py",
      [
        "test_rdb_write_types"
      ]
    ]
  ],
  "test_ipac_read_types": [
    [
      "astropy/io/ascii/tests/test_types.py",
      [
        "test_ipac_read_types"
      ]
    ]
  ],
  "test_col_dtype_in_custom_class": [
    [
      "astropy/io/ascii/tests/test_types.py",
      [
        "test_col_dtype_in_custom_class"
      ]
    ]
  ],
  "check_write_table": [
    [
      "astropy/io/ascii/tests/test_write.py",
      [
        "check_write_table"
      ]
    ]
  ],
  "check_write_table_via_table": [
    [
      "astropy/io/ascii/tests/test_write.py",
      [
        "check_write_table_via_table"
      ]
    ]
  ],
  "test_write_table": [
    [
      "astropy/io/ascii/tests/test_write.py",
      [
        "test_write_table"
      ]
    ]
  ],
  "test_write_fill_masked_different": [
    [
      "astropy/io/ascii/tests/test_write.py",
      [
        "test_write_fill_masked_different"
      ]
    ]
  ],
  "test_write_no_data_ipac": [
    [
      "astropy/io/ascii/tests/test_write.py",
      [
        "test_write_no_data_ipac"
      ]
    ]
  ],
  "test_write_invalid_toplevel_meta_ipac": [
    [
      "astropy/io/ascii/tests/test_write.py",
      [
        "test_write_invalid_toplevel_meta_ipac"
      ]
    ]
  ],
  "test_write_invalid_keyword_meta_ipac": [
    [
      "astropy/io/ascii/tests/test_write.py",
      [
        "test_write_invalid_keyword_meta_ipac"
      ]
    ]
  ],
  "test_write_valid_meta_ipac": [
    [
      "astropy/io/ascii/tests/test_write.py",
      [
        "test_write_valid_meta_ipac"
      ]
    ]
  ],
  "test_write_comments": [
    [
      "astropy/io/ascii/tests/test_write.py",
      [
        "test_write_comments"
      ]
    ]
  ],
  "test_write_format": [
    [
      "astropy/io/ascii/tests/test_write.py",
      [
        "test_write_format"
      ]
    ]
  ],
  "test_strip_names": [
    [
      "astropy/io/ascii/tests/test_write.py",
      [
        "test_strip_names"
      ]
    ]
  ],
  "test_latex_units": [
    [
      "astropy/io/ascii/tests/test_write.py",
      [
        "test_latex_units"
      ]
    ]
  ],
  "test_byte_string_output": [
    [
      "astropy/io/ascii/tests/test_write.py",
      [
        "test_byte_string_output"
      ]
    ]
  ],
  "test_names_with_formats": [
    [
      "astropy/io/ascii/tests/test_write.py",
      [
        "test_names_with_formats"
      ]
    ]
  ],
  "test_columns_names_with_formats": [
    [
      "astropy/io/ascii/tests/test_write.py",
      [
        "test_columns_names_with_formats"
      ]
    ]
  ],
  "test_write_quoted_empty_field": [
    [
      "astropy/io/ascii/tests/test_write.py",
      [
        "test_write_quoted_empty_field"
      ]
    ]
  ],
  "test_write_overwrite_ascii": [
    [
      "astropy/io/ascii/tests/test_write.py",
      [
        "test_write_overwrite_ascii"
      ]
    ]
  ],
  "test_roundtrip_masked": [
    [
      "astropy/io/ascii/tests/test_write.py",
      [
        "test_roundtrip_masked"
      ]
    ]
  ],
  "test_write_newlines": [
    [
      "astropy/io/ascii/tests/test_write.py",
      [
        "test_write_newlines"
      ]
    ]
  ],
  "test_write_csv_with_comments": [
    [
      "astropy/io/ascii/tests/test_write.py",
      [
        "test_write_csv_with_comments"
      ]
    ]
  ],
  "test_write_formatted_mixin": [
    [
      "astropy/io/ascii/tests/test_write.py",
      [
        "test_write_formatted_mixin"
      ]
    ]
  ],
  "test_validate_write_kwargs": [
    [
      "astropy/io/ascii/tests/test_write.py",
      [
        "test_validate_write_kwargs"
      ]
    ]
  ],
  "test_multidim_column_error": [
    [
      "astropy/io/ascii/tests/test_write.py",
      [
        "test_multidim_column_error"
      ]
    ]
  ],
  "test_write_as_columns": [
    [
      "astropy/io/ascii/tests/test_write.py",
      [
        "test_write_as_columns"
      ]
    ]
  ],
  "_probably_html": [
    [
      "astropy/io/ascii/ui.py",
      [
        "_probably_html"
      ]
    ]
  ],
  "set_guess": [
    [
      "astropy/io/ascii/ui.py",
      [
        "set_guess"
      ]
    ]
  ],
  "get_reader": [
    [
      "astropy/io/ascii/ui.py",
      [
        "get_reader"
      ]
    ],
    [
      "astropy/io/registry/core.py",
      [
        "UnifiedInputRegistry",
        "get_reader"
      ]
    ]
  ],
  "_get_format_class": [
    [
      "astropy/io/ascii/ui.py",
      [
        "_get_format_class"
      ]
    ]
  ],
  "_get_fast_reader_dict": [
    [
      "astropy/io/ascii/ui.py",
      [
        "_get_fast_reader_dict"
      ]
    ]
  ],
  "is_ducktype": [
    [
      "astropy/io/ascii/ui.py",
      [
        "_validate_read_write_kwargs",
        "is_ducktype"
      ]
    ]
  ],
  "_validate_read_write_kwargs": [
    [
      "astropy/io/ascii/ui.py",
      [
        "_validate_read_write_kwargs"
      ]
    ]
  ],
  "_guess": [
    [
      "astropy/io/ascii/ui.py",
      [
        "_guess"
      ]
    ]
  ],
  "_get_guess_kwargs_list": [
    [
      "astropy/io/ascii/ui.py",
      [
        "_get_guess_kwargs_list"
      ]
    ]
  ],
  "_read_in_chunks": [
    [
      "astropy/io/ascii/ui.py",
      [
        "_read_in_chunks"
      ]
    ]
  ],
  "passthrough_fileobj": [
    [
      "astropy/io/ascii/ui.py",
      [
        "_read_in_chunks_generator",
        "passthrough_fileobj"
      ]
    ]
  ],
  "_read_in_chunks_generator": [
    [
      "astropy/io/ascii/ui.py",
      [
        "_read_in_chunks_generator"
      ]
    ]
  ],
  "get_writer": [
    [
      "astropy/io/ascii/ui.py",
      [
        "get_writer"
      ]
    ],
    [
      "astropy/io/registry/core.py",
      [
        "UnifiedOutputRegistry",
        "get_writer"
      ]
    ]
  ],
  "get_read_trace": [
    [
      "astropy/io/ascii/ui.py",
      [
        "get_read_trace"
      ]
    ]
  ],
  "keyword": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "keyword"
      ]
    ]
  ],
  "keyword_5": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "keyword_5"
      ]
    ]
  ],
  "value": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "value"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Info",
        "value"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Param",
        "value"
      ]
    ],
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "value"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "value"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "value"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeFormat",
        "value"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeYMDHMS",
        "value"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeString",
        "value"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeDatetime64",
        "value"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeFITS",
        "value"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeEpochDateString",
        "value"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeDeltaDatetime",
        "value"
      ]
    ],
    [
      "astropy/time/tests/test_custom_formats.py",
      [
        "test_custom_time_format_problematic_name",
        "try_",
        "Custom",
        "value"
      ]
    ],
    [
      "astropy/time/tests/test_custom_formats.py",
      [
        "test_mjd_longdouble_preserves_precision",
        "CustomMJD",
        "value"
      ]
    ],
    [
      "astropy/time/tests/test_custom_formats.py",
      [
        "test_custom_format_cannot_make_bogus_jd1",
        "Custom",
        "value"
      ]
    ],
    [
      "astropy/time/tests/test_custom_formats.py",
      [
        "test_custom_format_can_return_any_scalar",
        "Custom",
        "value"
      ]
    ],
    [
      "astropy/time/tests/test_custom_formats.py",
      [
        "test_custom_format_can_return_any_iterable",
        "Custom",
        "value"
      ]
    ]
  ],
  "value_7": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "value_7"
      ]
    ]
  ],
  "value_8": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "value_8"
      ]
    ],
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "value_8"
      ]
    ]
  ],
  "rawkeyword": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "rawkeyword"
      ]
    ]
  ],
  "rawvalue": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "rawvalue"
      ]
    ]
  ],
  "comment": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "comment"
      ]
    ],
    [
      "astropy/utils/xml/writer.py",
      [
        "XMLWriter",
        "comment"
      ]
    ]
  ],
  "comment_12": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "comment_12"
      ]
    ]
  ],
  "comment_13": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "comment_13"
      ]
    ]
  ],
  "field_specifier": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "field_specifier"
      ]
    ]
  ],
  "field_specifier_15": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "field_specifier_15"
      ]
    ]
  ],
  "field_specifier_16": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "field_specifier_16"
      ]
    ]
  ],
  "image": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "image"
      ]
    ]
  ],
  "is_blank": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "is_blank"
      ]
    ]
  ],
  "fromstring": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "fromstring"
      ]
    ],
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "fromstring"
      ]
    ],
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "fromstring"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "fromstring"
      ]
    ]
  ],
  "normalize_keyword": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "normalize_keyword"
      ]
    ]
  ],
  "_check_if_rvkc": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "_check_if_rvkc"
      ]
    ]
  ],
  "_check_if_rvkc_image": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "_check_if_rvkc_image"
      ]
    ]
  ],
  "_init_rvkc": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "_init_rvkc"
      ]
    ]
  ],
  "_parse_keyword": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "_parse_keyword"
      ]
    ]
  ],
  "_parse_value": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "_parse_value"
      ]
    ]
  ],
  "_parse_comment": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "_parse_comment"
      ]
    ]
  ],
  "_split": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "_split"
      ]
    ]
  ],
  "_fix_keyword": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "_fix_keyword"
      ]
    ]
  ],
  "_fix_value": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "_fix_value"
      ]
    ]
  ],
  "_format_keyword": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "_format_keyword"
      ]
    ]
  ],
  "_format_value": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "_format_value"
      ]
    ],
    [
      "astropy/io/fits/card.py",
      [
        "_format_value"
      ]
    ]
  ],
  "_format_comment": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "_format_comment"
      ]
    ]
  ],
  "_format_image": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "_format_image"
      ]
    ]
  ],
  "_format_long_image": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "_format_long_image"
      ]
    ]
  ],
  "_format_long_commentary_image": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "_format_long_commentary_image"
      ]
    ]
  ],
  "_verify": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "_verify"
      ]
    ],
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_NonstandardHDU",
        "_verify"
      ]
    ],
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_ValidHDU",
        "_verify"
      ]
    ],
    [
      "astropy/io/fits/hdu/base.py",
      [
        "ExtensionHDU",
        "_verify"
      ]
    ],
    [
      "astropy/io/fits/hdu/groups.py",
      [
        "GroupsHDU",
        "_verify"
      ]
    ],
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "_verify"
      ]
    ],
    [
      "astropy/io/fits/hdu/image.py",
      [
        "_ImageBaseHDU",
        "_verify"
      ]
    ],
    [
      "astropy/io/fits/hdu/image.py",
      [
        "PrimaryHDU",
        "_verify"
      ]
    ],
    [
      "astropy/io/fits/hdu/image.py",
      [
        "ImageHDU",
        "_verify"
      ]
    ],
    [
      "astropy/io/fits/hdu/table.py",
      [
        "_TableBaseHDU",
        "_verify"
      ]
    ],
    [
      "astropy/io/fits/hdu/table.py",
      [
        "TableHDU",
        "_verify"
      ]
    ]
  ],
  "_itersubcards": [
    [
      "astropy/io/fits/card.py",
      [
        "Card",
        "_itersubcards"
      ]
    ]
  ],
  "_int_or_float": [
    [
      "astropy/io/fits/card.py",
      [
        "_int_or_float"
      ]
    ]
  ],
  "_format_float": [
    [
      "astropy/io/fits/card.py",
      [
        "_format_float"
      ]
    ]
  ],
  "_pad": [
    [
      "astropy/io/fits/card.py",
      [
        "_pad"
      ]
    ]
  ],
  "dtype": [
    [
      "astropy/io/fits/column.py",
      [
        "_BaseColumnFormat",
        "dtype"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "Column",
        "dtype"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "ColDefs",
        "dtype"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "_AsciiColDefs",
        "dtype"
      ]
    ],
    [
      "astropy/nddata/compat.py",
      [
        "NDDataArray",
        "dtype"
      ]
    ],
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "FakeNumpyArray",
        "dtype"
      ]
    ],
    [
      "astropy/table/row.py",
      [
        "Row",
        "dtype"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "dtype"
      ]
    ],
    [
      "astropy/table/table_helpers.py",
      [
        "ArrayWrapper",
        "dtype"
      ]
    ],
    [
      "astropy/utils/metadata.py",
      [
        "common_dtype",
        "dtype"
      ]
    ]
  ],
  "from_column_format": [
    [
      "astropy/io/fits/column.py",
      [
        "_BaseColumnFormat",
        "from_column_format"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "_AsciiColumnFormat",
        "from_column_format"
      ]
    ]
  ],
  "from_recformat": [
    [
      "astropy/io/fits/column.py",
      [
        "_ColumnFormat",
        "from_recformat"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "_AsciiColumnFormat",
        "from_recformat"
      ]
    ]
  ],
  "recformat": [
    [
      "astropy/io/fits/column.py",
      [
        "_ColumnFormat",
        "recformat"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "_AsciiColumnFormat",
        "recformat"
      ]
    ]
  ],
  "canonical": [
    [
      "astropy/io/fits/column.py",
      [
        "_ColumnFormat",
        "canonical"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "_AsciiColumnFormat",
        "canonical"
      ]
    ]
  ],
  "__getnewargs__": [
    [
      "astropy/io/fits/column.py",
      [
        "_FormatX",
        "__getnewargs__"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "_FormatP",
        "__getnewargs__"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "ColDefs",
        "__getnewargs__"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "__getnewargs__"
      ]
    ],
    [
      "astropy/units/structured.py",
      [
        "StructuredUnit",
        "__getnewargs__"
      ]
    ]
  ],
  "tform": [
    [
      "astropy/io/fits/column.py",
      [
        "_FormatX",
        "tform"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "_FormatP",
        "tform"
      ]
    ]
  ],
  "from_tform": [
    [
      "astropy/io/fits/column.py",
      [
        "_FormatP",
        "from_tform"
      ]
    ]
  ],
  "array_4": [
    [
      "astropy/io/fits/column.py",
      [
        "Column",
        "array_4"
      ]
    ]
  ],
  "array_5": [
    [
      "astropy/io/fits/column.py",
      [
        "Column",
        "array_5"
      ]
    ]
  ],
  "coord_type": [
    [
      "astropy/io/fits/column.py",
      [
        "Column",
        "coord_type"
      ]
    ]
  ],
  "coord_unit": [
    [
      "astropy/io/fits/column.py",
      [
        "Column",
        "coord_unit"
      ]
    ]
  ],
  "coord_ref_point": [
    [
      "astropy/io/fits/column.py",
      [
        "Column",
        "coord_ref_point"
      ]
    ]
  ],
  "coord_ref_value": [
    [
      "astropy/io/fits/column.py",
      [
        "Column",
        "coord_ref_value"
      ]
    ]
  ],
  "coord_inc": [
    [
      "astropy/io/fits/column.py",
      [
        "Column",
        "coord_inc"
      ]
    ]
  ],
  "time_ref_pos": [
    [
      "astropy/io/fits/column.py",
      [
        "Column",
        "time_ref_pos"
      ]
    ]
  ],
  "ascii": [
    [
      "astropy/io/fits/column.py",
      [
        "Column",
        "ascii"
      ]
    ]
  ],
  "_convert_format": [
    [
      "astropy/io/fits/column.py",
      [
        "Column",
        "_convert_format"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "_convert_format"
      ]
    ]
  ],
  "_verify_keywords": [
    [
      "astropy/io/fits/column.py",
      [
        "Column",
        "_verify_keywords"
      ]
    ]
  ],
  "_determine_formats": [
    [
      "astropy/io/fits/column.py",
      [
        "Column",
        "_determine_formats"
      ]
    ]
  ],
  "_guess_format": [
    [
      "astropy/io/fits/column.py",
      [
        "Column",
        "_guess_format"
      ]
    ]
  ],
  "_convert_to_valid_data_type": [
    [
      "astropy/io/fits/column.py",
      [
        "Column",
        "_convert_to_valid_data_type"
      ]
    ]
  ],
  "_init_from_coldefs": [
    [
      "astropy/io/fits/column.py",
      [
        "ColDefs",
        "_init_from_coldefs"
      ]
    ]
  ],
  "_init_from_sequence": [
    [
      "astropy/io/fits/column.py",
      [
        "ColDefs",
        "_init_from_sequence"
      ]
    ]
  ],
  "_init_from_array": [
    [
      "astropy/io/fits/column.py",
      [
        "ColDefs",
        "_init_from_array"
      ]
    ]
  ],
  "_init_from_table": [
    [
      "astropy/io/fits/column.py",
      [
        "ColDefs",
        "_init_from_table"
      ]
    ]
  ],
  "_copy_column": [
    [
      "astropy/io/fits/column.py",
      [
        "ColDefs",
        "_copy_column"
      ]
    ]
  ],
  "formats": [
    [
      "astropy/io/fits/column.py",
      [
        "ColDefs",
        "formats"
      ]
    ],
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "formats"
      ]
    ]
  ],
  "_arrays": [
    [
      "astropy/io/fits/column.py",
      [
        "ColDefs",
        "_arrays"
      ]
    ]
  ],
  "_recformats": [
    [
      "astropy/io/fits/column.py",
      [
        "ColDefs",
        "_recformats"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "_AsciiColDefs",
        "_recformats"
      ]
    ]
  ],
  "_dims": [
    [
      "astropy/io/fits/column.py",
      [
        "ColDefs",
        "_dims"
      ]
    ]
  ],
  "_update_column_attribute_changed": [
    [
      "astropy/io/fits/column.py",
      [
        "ColDefs",
        "_update_column_attribute_changed"
      ]
    ],
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "_update_column_attribute_changed"
      ]
    ],
    [
      "astropy/io/fits/hdu/table.py",
      [
        "_TableBaseHDU",
        "_update_column_attribute_changed"
      ]
    ]
  ],
  "add_col": [
    [
      "astropy/io/fits/column.py",
      [
        "ColDefs",
        "add_col"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "_AsciiColDefs",
        "add_col"
      ]
    ]
  ],
  "del_col": [
    [
      "astropy/io/fits/column.py",
      [
        "ColDefs",
        "del_col"
      ]
    ],
    [
      "astropy/io/fits/column.py",
      [
        "_AsciiColDefs",
        "del_col"
      ]
    ]
  ],
  "change_attrib": [
    [
      "astropy/io/fits/column.py",
      [
        "ColDefs",
        "change_attrib"
      ]
    ]
  ],
  "change_name": [
    [
      "astropy/io/fits/column.py",
      [
        "ColDefs",
        "change_name"
      ]
    ]
  ],
  "change_unit": [
    [
      "astropy/io/fits/column.py",
      [
        "ColDefs",
        "change_unit"
      ]
    ]
  ],
  "info": [
    [
      "astropy/io/fits/column.py",
      [
        "ColDefs",
        "info"
      ]
    ],
    [
      "astropy/io/fits/convenience.py",
      [
        "info"
      ]
    ],
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "info"
      ]
    ],
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_file_wrong_size",
        "MockURL",
        "info"
      ]
    ]
  ],
  "spans": [
    [
      "astropy/io/fits/column.py",
      [
        "_AsciiColDefs",
        "spans"
      ]
    ]
  ],
  "_update_field_metrics": [
    [
      "astropy/io/fits/column.py",
      [
        "_AsciiColDefs",
        "_update_field_metrics"
      ]
    ]
  ],
  "tolist": [
    [
      "astropy/io/fits/column.py",
      [
        "_VLF",
        "tolist"
      ]
    ],
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "tolist"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "tolist"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "tolist"
      ]
    ]
  ],
  "_get_index": [
    [
      "astropy/io/fits/column.py",
      [
        "_get_index"
      ]
    ],
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_record",
        "_get_index"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "_BoundingDomain",
        "_get_index"
      ]
    ]
  ],
  "_unwrapx": [
    [
      "astropy/io/fits/column.py",
      [
        "_unwrapx"
      ]
    ]
  ],
  "_wrapx": [
    [
      "astropy/io/fits/column.py",
      [
        "_wrapx"
      ]
    ]
  ],
  "_makep": [
    [
      "astropy/io/fits/column.py",
      [
        "_makep"
      ]
    ]
  ],
  "_parse_tformat": [
    [
      "astropy/io/fits/column.py",
      [
        "_parse_tformat"
      ]
    ]
  ],
  "convert_int": [
    [
      "astropy/io/fits/column.py",
      [
        "_parse_ascii_tformat",
        "convert_int"
      ]
    ]
  ],
  "_parse_ascii_tformat": [
    [
      "astropy/io/fits/column.py",
      [
        "_parse_ascii_tformat"
      ]
    ]
  ],
  "_parse_tdim": [
    [
      "astropy/io/fits/column.py",
      [
        "_parse_tdim"
      ]
    ]
  ],
  "_scalar_to_format": [
    [
      "astropy/io/fits/column.py",
      [
        "_scalar_to_format"
      ]
    ]
  ],
  "_cmp_recformats": [
    [
      "astropy/io/fits/column.py",
      [
        "_cmp_recformats"
      ]
    ]
  ],
  "_convert_fits2record": [
    [
      "astropy/io/fits/column.py",
      [
        "_convert_fits2record"
      ]
    ]
  ],
  "_convert_record2fits": [
    [
      "astropy/io/fits/column.py",
      [
        "_convert_record2fits"
      ]
    ]
  ],
  "_dtype_to_recformat": [
    [
      "astropy/io/fits/column.py",
      [
        "_dtype_to_recformat"
      ]
    ]
  ],
  "_convert_ascii_format": [
    [
      "astropy/io/fits/column.py",
      [
        "_convert_ascii_format"
      ]
    ]
  ],
  "_parse_tdisp_format": [
    [
      "astropy/io/fits/column.py",
      [
        "_parse_tdisp_format"
      ]
    ]
  ],
  "_fortran_to_python_format": [
    [
      "astropy/io/fits/column.py",
      [
        "_fortran_to_python_format"
      ]
    ]
  ],
  "python_to_tdisp": [
    [
      "astropy/io/fits/column.py",
      [
        "python_to_tdisp"
      ]
    ]
  ],
  "is_column_keyword": [
    [
      "astropy/io/fits/connect.py",
      [
        "is_column_keyword"
      ]
    ]
  ],
  "is_fits": [
    [
      "astropy/io/fits/connect.py",
      [
        "is_fits"
      ]
    ]
  ],
  "_decode_mixins": [
    [
      "astropy/io/fits/connect.py",
      [
        "_decode_mixins"
      ]
    ]
  ],
  "read_table_fits": [
    [
      "astropy/io/fits/connect.py",
      [
        "read_table_fits"
      ]
    ]
  ],
  "_encode_mixins": [
    [
      "astropy/io/fits/connect.py",
      [
        "_encode_mixins"
      ]
    ],
    [
      "astropy/io/misc/hdf5.py",
      [
        "_encode_mixins"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "to_pandas",
        "_encode_mixins"
      ]
    ]
  ],
  "write_table_fits": [
    [
      "astropy/io/fits/connect.py",
      [
        "write_table_fits"
      ]
    ]
  ],
  "getheader": [
    [
      "astropy/io/fits/convenience.py",
      [
        "getheader"
      ]
    ]
  ],
  "getdata": [
    [
      "astropy/io/fits/convenience.py",
      [
        "getdata"
      ]
    ]
  ],
  "getval": [
    [
      "astropy/io/fits/convenience.py",
      [
        "getval"
      ]
    ]
  ],
  "setval": [
    [
      "astropy/io/fits/convenience.py",
      [
        "setval"
      ]
    ]
  ],
  "delval": [
    [
      "astropy/io/fits/convenience.py",
      [
        "delval"
      ]
    ]
  ],
  "writeto": [
    [
      "astropy/io/fits/convenience.py",
      [
        "writeto"
      ]
    ],
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "writeto"
      ]
    ],
    [
      "astropy/io/fits/hdu/base.py",
      [
        "ExtensionHDU",
        "writeto"
      ]
    ],
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "writeto"
      ]
    ],
    [
      "astropy/io/votable/table.py",
      [
        "writeto"
      ]
    ]
  ],
  "table_to_hdu": [
    [
      "astropy/io/fits/convenience.py",
      [
        "table_to_hdu"
      ]
    ]
  ],
  "append": [
    [
      "astropy/io/fits/convenience.py",
      [
        "append"
      ]
    ],
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHeader",
        "append"
      ]
    ],
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "append"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "append"
      ]
    ],
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "test_subclass",
        "MyHeader",
        "append"
      ]
    ],
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "append"
      ]
    ],
    [
      "astropy/utils/collections.py",
      [
        "HomogeneousList",
        "append"
      ]
    ],
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "append"
      ]
    ]
  ],
  "printdiff": [
    [
      "astropy/io/fits/convenience.py",
      [
        "printdiff"
      ]
    ]
  ],
  "tabledump": [
    [
      "astropy/io/fits/convenience.py",
      [
        "tabledump"
      ]
    ]
  ],
  "tableload": [
    [
      "astropy/io/fits/convenience.py",
      [
        "tableload"
      ]
    ]
  ],
  "_getext": [
    [
      "astropy/io/fits/convenience.py",
      [
        "_getext"
      ]
    ]
  ],
  "_makehdu": [
    [
      "astropy/io/fits/convenience.py",
      [
        "_makehdu"
      ]
    ]
  ],
  "_stat_filename_or_fileobj": [
    [
      "astropy/io/fits/convenience.py",
      [
        "_stat_filename_or_fileobj"
      ]
    ]
  ],
  "_get_file_mode": [
    [
      "astropy/io/fits/convenience.py",
      [
        "_get_file_mode"
      ]
    ]
  ],
  "fromdiff": [
    [
      "astropy/io/fits/diff.py",
      [
        "_BaseDiff",
        "fromdiff"
      ]
    ]
  ],
  "identical": [
    [
      "astropy/io/fits/diff.py",
      [
        "_BaseDiff",
        "identical"
      ]
    ]
  ],
  "report": [
    [
      "astropy/io/fits/diff.py",
      [
        "_BaseDiff",
        "report"
      ]
    ]
  ],
  "_writeln": [
    [
      "astropy/io/fits/diff.py",
      [
        "_BaseDiff",
        "_writeln"
      ]
    ]
  ],
  "_diff": [
    [
      "astropy/io/fits/diff.py",
      [
        "_BaseDiff",
        "_diff"
      ]
    ],
    [
      "astropy/io/fits/diff.py",
      [
        "FITSDiff",
        "_diff"
      ]
    ],
    [
      "astropy/io/fits/diff.py",
      [
        "HDUDiff",
        "_diff"
      ]
    ],
    [
      "astropy/io/fits/diff.py",
      [
        "HeaderDiff",
        "_diff"
      ]
    ],
    [
      "astropy/io/fits/diff.py",
      [
        "ImageDataDiff",
        "_diff"
      ]
    ],
    [
      "astropy/io/fits/diff.py",
      [
        "RawDataDiff",
        "_diff"
      ]
    ],
    [
      "astropy/io/fits/diff.py",
      [
        "TableDataDiff",
        "_diff"
      ]
    ]
  ],
  "_report": [
    [
      "astropy/io/fits/diff.py",
      [
        "_BaseDiff",
        "_report"
      ]
    ],
    [
      "astropy/io/fits/diff.py",
      [
        "FITSDiff",
        "_report"
      ]
    ],
    [
      "astropy/io/fits/diff.py",
      [
        "HDUDiff",
        "_report"
      ]
    ],
    [
      "astropy/io/fits/diff.py",
      [
        "HeaderDiff",
        "_report"
      ]
    ],
    [
      "astropy/io/fits/diff.py",
      [
        "ImageDataDiff",
        "_report"
      ]
    ],
    [
      "astropy/io/fits/diff.py",
      [
        "RawDataDiff",
        "_report"
      ]
    ],
    [
      "astropy/io/fits/diff.py",
      [
        "TableDataDiff",
        "_report"
      ]
    ]
  ],
  "get_header_values_comments": [
    [
      "astropy/io/fits/diff.py",
      [
        "HeaderDiff",
        "_diff",
        "get_header_values_comments"
      ]
    ]
  ],
  "report_diff_keyword_attr": [
    [
      "astropy/io/fits/diff.py",
      [
        "report_diff_keyword_attr"
      ]
    ]
  ],
  "_is_bz2file": [
    [
      "astropy/io/fits/file.py",
      [
        "_is_bz2file"
      ]
    ]
  ],
  "_normalize_fits_mode": [
    [
      "astropy/io/fits/file.py",
      [
        "_normalize_fits_mode"
      ]
    ]
  ],
  "readable": [
    [
      "astropy/io/fits/file.py",
      [
        "_File",
        "readable"
      ]
    ]
  ],
  "readarray": [
    [
      "astropy/io/fits/file.py",
      [
        "_File",
        "readarray"
      ]
    ]
  ],
  "writable": [
    [
      "astropy/io/fits/file.py",
      [
        "_File",
        "writable"
      ]
    ]
  ],
  "writearray": [
    [
      "astropy/io/fits/file.py",
      [
        "_File",
        "writearray"
      ]
    ]
  ],
  "flush": [
    [
      "astropy/io/fits/file.py",
      [
        "_File",
        "flush"
      ]
    ],
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "flush"
      ]
    ],
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_mmap_unwriteable",
        "MockMmap",
        "flush"
      ]
    ],
    [
      "astropy/utils/xml/writer.py",
      [
        "XMLWriter",
        "flush"
      ]
    ]
  ],
  "seek": [
    [
      "astropy/io/fits/file.py",
      [
        "_File",
        "seek"
      ]
    ],
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_uncloseable_file",
        "MyFileLike",
        "seek"
      ]
    ]
  ],
  "tell": [
    [
      "astropy/io/fits/file.py",
      [
        "_File",
        "tell"
      ]
    ],
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_uncloseable_file",
        "MyFileLike",
        "tell"
      ]
    ]
  ],
  "truncate": [
    [
      "astropy/io/fits/file.py",
      [
        "_File",
        "truncate"
      ]
    ]
  ],
  "close": [
    [
      "astropy/io/fits/file.py",
      [
        "_File",
        "close"
      ]
    ],
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "close"
      ]
    ],
    [
      "astropy/io/fits/hdu/streaming.py",
      [
        "StreamingHDU",
        "close"
      ]
    ],
    [
      "astropy/io/fits/scripts/fitsheader.py",
      [
        "HeaderFormatter",
        "close"
      ]
    ],
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "close"
      ]
    ],
    [
      "astropy/utils/iers/iers.py",
      [
        "IERS",
        "close"
      ]
    ],
    [
      "astropy/utils/xml/writer.py",
      [
        "XMLWriter",
        "close"
      ]
    ]
  ],
  "_maybe_close_mmap": [
    [
      "astropy/io/fits/file.py",
      [
        "_File",
        "_maybe_close_mmap"
      ]
    ]
  ],
  "_overwrite_existing": [
    [
      "astropy/io/fits/file.py",
      [
        "_File",
        "_overwrite_existing"
      ]
    ]
  ],
  "_try_read_compressed": [
    [
      "astropy/io/fits/file.py",
      [
        "_File",
        "_try_read_compressed"
      ]
    ]
  ],
  "_open_fileobj": [
    [
      "astropy/io/fits/file.py",
      [
        "_File",
        "_open_fileobj"
      ]
    ]
  ],
  "_open_filelike": [
    [
      "astropy/io/fits/file.py",
      [
        "_File",
        "_open_filelike"
      ]
    ]
  ],
  "_open_filename": [
    [
      "astropy/io/fits/file.py",
      [
        "_File",
        "_open_filename"
      ]
    ]
  ],
  "_mmap_available": [
    [
      "astropy/io/fits/file.py",
      [
        "_File",
        "_mmap_available"
      ]
    ]
  ],
  "_open_zipfile": [
    [
      "astropy/io/fits/file.py",
      [
        "_File",
        "_open_zipfile"
      ]
    ]
  ],
  "field": [
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_record",
        "field"
      ]
    ],
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "field"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "field"
      ]
    ]
  ],
  "setfield": [
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_record",
        "setfield"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedRecarray",
        "setfield"
      ]
    ]
  ],
  "_bases": [
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_record",
        "_bases"
      ]
    ]
  ],
  "_init": [
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "_init"
      ]
    ]
  ],
  "from_columns": [
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "from_columns"
      ]
    ],
    [
      "astropy/io/fits/hdu/table.py",
      [
        "_TableLikeHDU",
        "from_columns"
      ]
    ]
  ],
  "_ipython_key_completions_": [
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "_ipython_key_completions_"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "_ipython_key_completions_"
      ]
    ],
    [
      "astropy/table/row.py",
      [
        "Row",
        "_ipython_key_completions_"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "_ipython_key_completions_"
      ]
    ]
  ],
  "columns": [
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "columns"
      ]
    ],
    [
      "astropy/io/fits/hdu/groups.py",
      [
        "GroupsHDU",
        "columns"
      ]
    ],
    [
      "astropy/io/fits/hdu/table.py",
      [
        "_TableLikeHDU",
        "columns"
      ]
    ],
    [
      "astropy/io/fits/hdu/table.py",
      [
        "_TableBaseHDU",
        "columns"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "SlicedIndex",
        "columns"
      ]
    ],
    [
      "astropy/table/row.py",
      [
        "Row",
        "columns"
      ]
    ]
  ],
  "_coldefs": [
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "_coldefs"
      ]
    ]
  ],
  "_coldefs_14": [
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "_coldefs_14"
      ]
    ]
  ],
  "_coldefs_15": [
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "_coldefs_15"
      ]
    ]
  ],
  "__del__": [
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "__del__"
      ]
    ],
    [
      "astropy/utils/data.py",
      [
        "_NonClosingBufferedReader",
        "__del__"
      ]
    ],
    [
      "astropy/utils/data.py",
      [
        "_NonClosingTextIOWrapper",
        "__del__"
      ]
    ]
  ],
  "_raw_itemsize": [
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "_raw_itemsize"
      ]
    ]
  ],
  "_cache_field": [
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "_cache_field"
      ]
    ]
  ],
  "_update_column_name": [
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "_update_column_name"
      ]
    ]
  ],
  "_convert_x": [
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "_convert_x"
      ]
    ]
  ],
  "_convert_p": [
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "_convert_p"
      ]
    ]
  ],
  "_convert_ascii": [
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "_convert_ascii"
      ]
    ]
  ],
  "_convert_other": [
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "_convert_other"
      ]
    ]
  ],
  "_get_heap_data": [
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "_get_heap_data"
      ]
    ]
  ],
  "_get_raw_data": [
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "_get_raw_data"
      ]
    ],
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "_get_raw_data"
      ]
    ]
  ],
  "_get_scale_factors": [
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "_get_scale_factors"
      ]
    ]
  ],
  "_scale_back": [
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "_scale_back"
      ]
    ]
  ],
  "_scale_back_strings": [
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "_scale_back_strings"
      ]
    ]
  ],
  "_scale_back_ascii": [
    [
      "astropy/io/fits/fitsrec.py",
      [
        "FITS_rec",
        "_scale_back_ascii"
      ]
    ]
  ],
  "_get_recarray_field": [
    [
      "astropy/io/fits/fitsrec.py",
      [
        "_get_recarray_field"
      ]
    ]
  ],
  "_ascii_encode": [
    [
      "astropy/io/fits/fitsrec.py",
      [
        "_ascii_encode"
      ]
    ]
  ],
  "_has_unicode_fields": [
    [
      "astropy/io/fits/fitsrec.py",
      [
        "_has_unicode_fields"
      ]
    ]
  ],
  "is_time_column_keyword": [
    [
      "astropy/io/fits/fitstime.py",
      [
        "is_time_column_keyword"
      ]
    ]
  ],
  "_verify_global_info": [
    [
      "astropy/io/fits/fitstime.py",
      [
        "_verify_global_info"
      ]
    ]
  ],
  "_verify_column_info": [
    [
      "astropy/io/fits/fitstime.py",
      [
        "_verify_column_info"
      ]
    ]
  ],
  "_get_info_if_time_column": [
    [
      "astropy/io/fits/fitstime.py",
      [
        "_get_info_if_time_column"
      ]
    ]
  ],
  "_convert_global_time": [
    [
      "astropy/io/fits/fitstime.py",
      [
        "_convert_global_time"
      ]
    ]
  ],
  "_convert_time_key": [
    [
      "astropy/io/fits/fitstime.py",
      [
        "_convert_time_key"
      ]
    ]
  ],
  "_convert_time_column": [
    [
      "astropy/io/fits/fitstime.py",
      [
        "_convert_time_column"
      ]
    ]
  ],
  "fits_to_time": [
    [
      "astropy/io/fits/fitstime.py",
      [
        "fits_to_time"
      ]
    ]
  ],
  "time_to_fits": [
    [
      "astropy/io/fits/fitstime.py",
      [
        "time_to_fits"
      ]
    ]
  ],
  "_hdu_class_from_header": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_hdu_class_from_header"
      ]
    ]
  ],
  "header": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "header"
      ]
    ],
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHDU",
        "header"
      ]
    ],
    [
      "astropy/io/fits/hdu/image.py",
      [
        "_ImageBaseHDU",
        "header"
      ]
    ],
    [
      "astropy/nddata/ccddata.py",
      [
        "CCDData",
        "header"
      ]
    ]
  ],
  "header_2": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "header_2"
      ]
    ]
  ],
  "name_4": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "name_4"
      ]
    ]
  ],
  "ver": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "ver"
      ]
    ]
  ],
  "ver_6": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "ver_6"
      ]
    ]
  ],
  "level": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "level"
      ]
    ]
  ],
  "level_8": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "level_8"
      ]
    ]
  ],
  "is_image": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "is_image"
      ]
    ],
    [
      "astropy/io/fits/hdu/groups.py",
      [
        "GroupsHDU",
        "is_image"
      ]
    ],
    [
      "astropy/io/fits/hdu/image.py",
      [
        "_ImageBaseHDU",
        "is_image"
      ]
    ]
  ],
  "_data_loaded": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "_data_loaded"
      ]
    ]
  ],
  "_has_data": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "_has_data"
      ]
    ]
  ],
  "register_hdu": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "register_hdu"
      ]
    ]
  ],
  "unregister_hdu": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "unregister_hdu"
      ]
    ]
  ],
  "match_header": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "match_header"
      ]
    ],
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_NonstandardHDU",
        "match_header"
      ]
    ],
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_ValidHDU",
        "match_header"
      ]
    ],
    [
      "astropy/io/fits/hdu/base.py",
      [
        "ExtensionHDU",
        "match_header"
      ]
    ],
    [
      "astropy/io/fits/hdu/base.py",
      [
        "NonstandardExtHDU",
        "match_header"
      ]
    ],
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHDU",
        "match_header"
      ]
    ],
    [
      "astropy/io/fits/hdu/groups.py",
      [
        "GroupsHDU",
        "match_header"
      ]
    ],
    [
      "astropy/io/fits/hdu/image.py",
      [
        "_ImageBaseHDU",
        "match_header"
      ]
    ],
    [
      "astropy/io/fits/hdu/image.py",
      [
        "PrimaryHDU",
        "match_header"
      ]
    ],
    [
      "astropy/io/fits/hdu/image.py",
      [
        "ImageHDU",
        "match_header"
      ]
    ],
    [
      "astropy/io/fits/hdu/nonstandard.py",
      [
        "FitsHDU",
        "match_header"
      ]
    ],
    [
      "astropy/io/fits/hdu/table.py",
      [
        "_TableLikeHDU",
        "match_header"
      ]
    ],
    [
      "astropy/io/fits/hdu/table.py",
      [
        "_TableBaseHDU",
        "match_header"
      ]
    ],
    [
      "astropy/io/fits/hdu/table.py",
      [
        "TableHDU",
        "match_header"
      ]
    ],
    [
      "astropy/io/fits/hdu/table.py",
      [
        "BinTableHDU",
        "match_header"
      ]
    ]
  ],
  "readfrom": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "readfrom"
      ]
    ]
  ],
  "_from_data": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "_from_data"
      ]
    ]
  ],
  "_readfrom_internal": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "_readfrom_internal"
      ]
    ]
  ],
  "_prewriteto": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "_prewriteto"
      ]
    ],
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHDU",
        "_prewriteto"
      ]
    ],
    [
      "astropy/io/fits/hdu/image.py",
      [
        "_ImageBaseHDU",
        "_prewriteto"
      ]
    ],
    [
      "astropy/io/fits/hdu/table.py",
      [
        "_TableBaseHDU",
        "_prewriteto"
      ]
    ]
  ],
  "_update_pseudo_int_scale_keywords": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "_update_pseudo_int_scale_keywords"
      ]
    ]
  ],
  "_update_checksum": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "_update_checksum"
      ]
    ]
  ],
  "_postwriteto": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "_postwriteto"
      ]
    ]
  ],
  "_writeheader": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "_writeheader"
      ]
    ],
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHDU",
        "_writeheader"
      ]
    ]
  ],
  "_writedata": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "_writedata"
      ]
    ],
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_NonstandardHDU",
        "_writedata"
      ]
    ],
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHDU",
        "_writedata"
      ]
    ],
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_flush_full_disk",
        "_writedata"
      ]
    ]
  ],
  "_writedata_internal": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "_writedata_internal"
      ]
    ],
    [
      "astropy/io/fits/hdu/groups.py",
      [
        "GroupsHDU",
        "_writedata_internal"
      ]
    ],
    [
      "astropy/io/fits/hdu/image.py",
      [
        "_ImageBaseHDU",
        "_writedata_internal"
      ]
    ],
    [
      "astropy/io/fits/hdu/table.py",
      [
        "BinTableHDU",
        "_writedata_internal"
      ]
    ]
  ],
  "_writedata_direct_copy": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "_writedata_direct_copy"
      ]
    ]
  ],
  "_writeto": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "_writeto"
      ]
    ],
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_writeto_full_disk",
        "_writeto"
      ]
    ]
  ],
  "_writeto_internal": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "_writeto_internal"
      ]
    ]
  ],
  "_close": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_BaseHDU",
        "_close"
      ]
    ],
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHDU",
        "_close"
      ]
    ]
  ],
  "_summary": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_CorruptedHDU",
        "_summary"
      ]
    ],
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_NonstandardHDU",
        "_summary"
      ]
    ],
    [
      "astropy/io/fits/hdu/base.py",
      [
        "NonstandardExtHDU",
        "_summary"
      ]
    ],
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHDU",
        "_summary"
      ]
    ],
    [
      "astropy/io/fits/hdu/groups.py",
      [
        "GroupsHDU",
        "_summary"
      ]
    ],
    [
      "astropy/io/fits/hdu/image.py",
      [
        "_ImageBaseHDU",
        "_summary"
      ]
    ],
    [
      "astropy/io/fits/hdu/nonstandard.py",
      [
        "FitsHDU",
        "_summary"
      ]
    ],
    [
      "astropy/io/fits/hdu/table.py",
      [
        "_TableBaseHDU",
        "_summary"
      ]
    ]
  ],
  "verify": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_CorruptedHDU",
        "verify"
      ]
    ],
    [
      "astropy/io/fits/verify.py",
      [
        "_Verify",
        "verify"
      ]
    ]
  ],
  "filebytes": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_ValidHDU",
        "filebytes"
      ]
    ]
  ],
  "fileinfo": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_ValidHDU",
        "fileinfo"
      ]
    ],
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "fileinfo"
      ]
    ]
  ],
  "req_cards": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_ValidHDU",
        "req_cards"
      ]
    ]
  ],
  "add_datasum": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_ValidHDU",
        "add_datasum"
      ]
    ]
  ],
  "add_checksum": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_ValidHDU",
        "add_checksum"
      ]
    ]
  ],
  "verify_datasum": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_ValidHDU",
        "verify_datasum"
      ]
    ]
  ],
  "verify_checksum": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_ValidHDU",
        "verify_checksum"
      ]
    ]
  ],
  "_verify_checksum_datasum": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_ValidHDU",
        "_verify_checksum_datasum"
      ]
    ]
  ],
  "_get_timestamp": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_ValidHDU",
        "_get_timestamp"
      ]
    ]
  ],
  "_calculate_datasum": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_ValidHDU",
        "_calculate_datasum"
      ]
    ],
    [
      "astropy/io/fits/hdu/groups.py",
      [
        "GroupsHDU",
        "_calculate_datasum"
      ]
    ],
    [
      "astropy/io/fits/hdu/image.py",
      [
        "_ImageBaseHDU",
        "_calculate_datasum"
      ]
    ],
    [
      "astropy/io/fits/hdu/table.py",
      [
        "TableHDU",
        "_calculate_datasum"
      ]
    ],
    [
      "astropy/io/fits/hdu/table.py",
      [
        "BinTableHDU",
        "_calculate_datasum"
      ]
    ]
  ],
  "_calculate_checksum": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_ValidHDU",
        "_calculate_checksum"
      ]
    ]
  ],
  "_compute_checksum": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_ValidHDU",
        "_compute_checksum"
      ]
    ]
  ],
  "_compute_hdu_checksum": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_ValidHDU",
        "_compute_hdu_checksum"
      ]
    ]
  ],
  "_encode_byte": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_ValidHDU",
        "_encode_byte"
      ]
    ]
  ],
  "_char_encode": [
    [
      "astropy/io/fits/hdu/base.py",
      [
        "_ValidHDU",
        "_char_encode"
      ]
    ]
  ],
  "_update": [
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHeader",
        "_update"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "_update"
      ]
    ]
  ],
  "_relativeinsert": [
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHeader",
        "_relativeinsert"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "_relativeinsert"
      ]
    ]
  ],
  "_is_reserved_keyword": [
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHeader",
        "_is_reserved_keyword"
      ]
    ]
  ],
  "_remap_keyword": [
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHeader",
        "_remap_keyword"
      ]
    ]
  ],
  "_remap_index": [
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHeader",
        "_remap_index"
      ]
    ]
  ],
  "_remove_unnecessary_default_extnames": [
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHDU",
        "_remove_unnecessary_default_extnames"
      ]
    ]
  ],
  "name_2": [
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHDU",
        "name_2"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "_NameProperty",
        "name_2"
      ]
    ]
  ],
  "_update_header_data": [
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHDU",
        "_update_header_data"
      ]
    ]
  ],
  "data_6": [
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHDU",
        "data_6"
      ]
    ]
  ],
  "compressed_data": [
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHDU",
        "compressed_data"
      ]
    ]
  ],
  "compressed_data_8": [
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHDU",
        "compressed_data_8"
      ]
    ]
  ],
  "_update_compressed_data": [
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHDU",
        "_update_compressed_data"
      ]
    ]
  ],
  "scale": [
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHDU",
        "scale"
      ]
    ],
    [
      "astropy/io/fits/hdu/image.py",
      [
        "_ImageBaseHDU",
        "scale"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "scale"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeFormat",
        "scale"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "scale"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "CompositeUnit",
        "scale"
      ]
    ]
  ],
  "_dtype_for_bitpix": [
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHDU",
        "_dtype_for_bitpix"
      ]
    ],
    [
      "astropy/io/fits/hdu/image.py",
      [
        "_ImageBaseHDU",
        "_dtype_for_bitpix"
      ]
    ]
  ],
  "_update_header_scale_info": [
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHDU",
        "_update_header_scale_info"
      ]
    ],
    [
      "astropy/io/fits/hdu/image.py",
      [
        "_ImageBaseHDU",
        "_update_header_scale_info"
      ]
    ]
  ],
  "_generate_dither_seed": [
    [
      "astropy/io/fits/hdu/compressed.py",
      [
        "CompImageHDU",
        "_generate_dither_seed"
      ]
    ]
  ],
  "parnames": [
    [
      "astropy/io/fits/hdu/groups.py",
      [
        "Group",
        "parnames"
      ]
    ],
    [
      "astropy/io/fits/hdu/groups.py",
      [
        "GroupsHDU",
        "parnames"
      ]
    ]
  ],
  "_unique": [
    [
      "astropy/io/fits/hdu/groups.py",
      [
        "Group",
        "_unique"
      ]
    ],
    [
      "astropy/io/fits/hdu/groups.py",
      [
        "GroupData",
        "_unique"
      ]
    ]
  ],
  "par": [
    [
      "astropy/io/fits/hdu/groups.py",
      [
        "Group",
        "par"
      ]
    ],
    [
      "astropy/io/fits/hdu/groups.py",
      [
        "GroupData",
        "par"
      ]
    ]
  ],
  "setpar": [
    [
      "astropy/io/fits/hdu/groups.py",
      [
        "Group",
        "setpar"
      ]
    ]
  ],
  "_nrows": [
    [
      "astropy/io/fits/hdu/groups.py",
      [
        "GroupsHDU",
        "_nrows"
      ]
    ],
    [
      "astropy/io/fits/hdu/table.py",
      [
        "_TableLikeHDU",
        "_nrows"
      ]
    ],
    [
      "astropy/io/fits/hdu/table.py",
      [
        "_TableBaseHDU",
        "_nrows"
      ]
    ]
  ],
  "_theap": [
    [
      "astropy/io/fits/hdu/groups.py",
      [
        "GroupsHDU",
        "_theap"
      ]
    ],
    [
      "astropy/io/fits/hdu/table.py",
      [
        "_TableBaseHDU",
        "_theap"
      ]
    ]
  ],
  "update_header": [
    [
      "astropy/io/fits/hdu/groups.py",
      [
        "GroupsHDU",
        "update_header"
      ]
    ],
    [
      "astropy/io/fits/hdu/image.py",
      [
        "_ImageBaseHDU",
        "update_header"
      ]
    ],
    [
      "astropy/io/fits/hdu/image.py",
      [
        "PrimaryHDU",
        "update_header"
      ]
    ]
  ],
  "_par_indices": [
    [
      "astropy/io/fits/hdu/groups.py",
      [
        "_par_indices"
      ]
    ]
  ],
  "_unique_parnames": [
    [
      "astropy/io/fits/hdu/groups.py",
      [
        "_unique_parnames"
      ]
    ]
  ],
  "fitsopen": [
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "fitsopen"
      ]
    ]
  ],
  "fromfile": [
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "fromfile"
      ]
    ],
    [
      "astropy/io/fits/hdu/nonstandard.py",
      [
        "FitsHDU",
        "fromfile"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "fromfile"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "_BasicHeader",
        "fromfile"
      ]
    ]
  ],
  "index_of": [
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "index_of"
      ]
    ]
  ],
  "_positive_index_of": [
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "_positive_index_of"
      ]
    ]
  ],
  "readall": [
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "readall"
      ]
    ]
  ],
  "get_first_ext": [
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "update_extend",
        "get_first_ext"
      ]
    ]
  ],
  "update_extend": [
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "update_extend"
      ]
    ]
  ],
  "filename": [
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "filename"
      ]
    ]
  ],
  "_readfrom": [
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "_readfrom"
      ]
    ]
  ],
  "_try_while_unread_hdus": [
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "_try_while_unread_hdus"
      ]
    ]
  ],
  "_read_next_hdu": [
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "_read_next_hdu"
      ]
    ]
  ],
  "_flush_update": [
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "_flush_update"
      ]
    ]
  ],
  "_flush_resize": [
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "_flush_resize"
      ]
    ]
  ],
  "_wasresized": [
    [
      "astropy/io/fits/hdu/hdulist.py",
      [
        "HDUList",
        "_wasresized"
      ]
    ]
  ],
  "section": [
    [
      "astropy/io/fits/hdu/image.py",
      [
        "_ImageBaseHDU",
        "section"
      ]
    ]
  ],
  "header_5": [
    [
      "astropy/io/fits/hdu/image.py",
      [
        "_ImageBaseHDU",
        "header_5"
      ]
    ]
  ],
  "data_7": [
    [
      "astropy/io/fits/hdu/image.py",
      [
        "_ImageBaseHDU",
        "data_7"
      ]
    ]
  ],
  "_scale_internal": [
    [
      "astropy/io/fits/hdu/image.py",
      [
        "_ImageBaseHDU",
        "_scale_internal"
      ]
    ]
  ],
  "_verify_blank": [
    [
      "astropy/io/fits/hdu/image.py",
      [
        "_ImageBaseHDU",
        "_verify_blank"
      ]
    ]
  ],
  "_writeinternal_dask": [
    [
      "astropy/io/fits/hdu/image.py",
      [
        "_ImageBaseHDU",
        "_writeinternal_dask"
      ]
    ]
  ],
  "_convert_pseudo_integer": [
    [
      "astropy/io/fits/hdu/image.py",
      [
        "_ImageBaseHDU",
        "_convert_pseudo_integer"
      ]
    ]
  ],
  "_get_scaled_image_data": [
    [
      "astropy/io/fits/hdu/image.py",
      [
        "_ImageBaseHDU",
        "_get_scaled_image_data"
      ]
    ]
  ],
  "_getdata": [
    [
      "astropy/io/fits/hdu/image.py",
      [
        "Section",
        "_getdata"
      ]
    ]
  ],
  "hdulist": [
    [
      "astropy/io/fits/hdu/nonstandard.py",
      [
        "FitsHDU",
        "hdulist"
      ]
    ],
    [
      "astropy/wcs/tests/helper.py",
      [
        "SimModelTAB",
        "hdulist"
      ]
    ]
  ],
  "fromhdulist": [
    [
      "astropy/io/fits/hdu/nonstandard.py",
      [
        "FitsHDU",
        "fromhdulist"
      ]
    ]
  ],
  "_get_tbdata": [
    [
      "astropy/io/fits/hdu/table.py",
      [
        "_TableLikeHDU",
        "_get_tbdata"
      ]
    ],
    [
      "astropy/io/fits/hdu/table.py",
      [
        "TableHDU",
        "_get_tbdata"
      ]
    ]
  ],
  "_init_tbdata": [
    [
      "astropy/io/fits/hdu/table.py",
      [
        "_TableLikeHDU",
        "_init_tbdata"
      ]
    ]
  ],
  "_update_load_data": [
    [
      "astropy/io/fits/hdu/table.py",
      [
        "_TableLikeHDU",
        "_update_load_data"
      ]
    ]
  ],
  "_update_column_added": [
    [
      "astropy/io/fits/hdu/table.py",
      [
        "_TableLikeHDU",
        "_update_column_added"
      ]
    ]
  ],
  "_update_column_removed": [
    [
      "astropy/io/fits/hdu/table.py",
      [
        "_TableLikeHDU",
        "_update_column_removed"
      ]
    ],
    [
      "astropy/io/fits/hdu/table.py",
      [
        "_TableBaseHDU",
        "_update_column_removed"
      ]
    ]
  ],
  "data_3": [
    [
      "astropy/io/fits/hdu/table.py",
      [
        "_TableBaseHDU",
        "data_3"
      ]
    ]
  ],
  "_clear_table_keywords": [
    [
      "astropy/io/fits/hdu/table.py",
      [
        "_TableBaseHDU",
        "_clear_table_keywords"
      ]
    ]
  ],
  "_populate_table_keywords": [
    [
      "astropy/io/fits/hdu/table.py",
      [
        "_TableBaseHDU",
        "_populate_table_keywords"
      ]
    ]
  ],
  "_calculate_datasum_with_heap": [
    [
      "astropy/io/fits/hdu/table.py",
      [
        "BinTableHDU",
        "_calculate_datasum_with_heap"
      ]
    ]
  ],
  "_writedata_by_row": [
    [
      "astropy/io/fits/hdu/table.py",
      [
        "BinTableHDU",
        "_writedata_by_row"
      ]
    ]
  ],
  "dump": [
    [
      "astropy/io/fits/hdu/table.py",
      [
        "BinTableHDU",
        "dump"
      ]
    ],
    [
      "astropy/io/misc/yaml.py",
      [
        "dump"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "dump"
      ]
    ]
  ],
  "load": [
    [
      "astropy/io/fits/hdu/table.py",
      [
        "BinTableHDU",
        "load"
      ]
    ],
    [
      "astropy/io/misc/yaml.py",
      [
        "load"
      ]
    ]
  ],
  "format_value": [
    [
      "astropy/io/fits/hdu/table.py",
      [
        "BinTableHDU",
        "_dump_data",
        "format_value"
      ]
    ],
    [
      "astropy/io/fits/hdu/table.py",
      [
        "BinTableHDU",
        "_load_data",
        "format_value"
      ]
    ]
  ],
  "_dump_data": [
    [
      "astropy/io/fits/hdu/table.py",
      [
        "BinTableHDU",
        "_dump_data"
      ]
    ]
  ],
  "_dump_coldefs": [
    [
      "astropy/io/fits/hdu/table.py",
      [
        "BinTableHDU",
        "_dump_coldefs"
      ]
    ]
  ],
  "update_recformats": [
    [
      "astropy/io/fits/hdu/table.py",
      [
        "BinTableHDU",
        "_load_data",
        "update_recformats"
      ]
    ]
  ],
  "_load_data": [
    [
      "astropy/io/fits/hdu/table.py",
      [
        "BinTableHDU",
        "_load_data"
      ]
    ]
  ],
  "_load_coldefs": [
    [
      "astropy/io/fits/hdu/table.py",
      [
        "BinTableHDU",
        "_load_coldefs"
      ]
    ]
  ],
  "_binary_table_byte_swap": [
    [
      "astropy/io/fits/hdu/table.py",
      [
        "_binary_table_byte_swap"
      ]
    ]
  ],
  "__iadd__": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "__iadd__"
      ]
    ],
    [
      "astropy/nddata/bitmask.py",
      [
        "BitFlagNameMeta",
        "__iadd__"
      ]
    ],
    [
      "astropy/units/function/logarithmic.py",
      [
        "LogQuantity",
        "__iadd__"
      ]
    ],
    [
      "astropy/utils/collections.py",
      [
        "HomogeneousList",
        "__iadd__"
      ]
    ]
  ],
  "cards": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "cards"
      ]
    ]
  ],
  "comments": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "comments"
      ]
    ]
  ],
  "_modified": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "_modified"
      ]
    ]
  ],
  "_modified_15": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "_modified_15"
      ]
    ]
  ],
  "_fromcards": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "_fromcards"
      ]
    ]
  ],
  "_from_blocks": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "_from_blocks"
      ]
    ]
  ],
  "_find_end_card": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "_find_end_card"
      ]
    ]
  ],
  "tostring": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "tostring"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "tostring"
      ]
    ]
  ],
  "tofile": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "tofile"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "tofile"
      ]
    ]
  ],
  "fromtextfile": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "fromtextfile"
      ]
    ]
  ],
  "totextfile": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "totextfile"
      ]
    ]
  ],
  "fromkeys": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "fromkeys"
      ]
    ]
  ],
  "update_from_dict": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "update",
        "update_from_dict"
      ]
    ]
  ],
  "extend": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "extend"
      ]
    ],
    [
      "astropy/utils/collections.py",
      [
        "HomogeneousList",
        "extend"
      ]
    ]
  ],
  "count": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "count"
      ]
    ]
  ],
  "index": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "index"
      ]
    ],
    [
      "astropy/io/fits/header.py",
      [
        "_BasicHeader",
        "index"
      ]
    ],
    [
      "astropy/table/row.py",
      [
        "Row",
        "index"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "QuantityIterator",
        "index"
      ]
    ]
  ],
  "remove": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "remove"
      ]
    ],
    [
      "astropy/table/bst.py",
      [
        "Node",
        "remove"
      ]
    ],
    [
      "astropy/table/bst.py",
      [
        "BST",
        "remove"
      ]
    ],
    [
      "astropy/table/soco.py",
      [
        "SCEngine",
        "remove"
      ]
    ],
    [
      "astropy/table/sorted_array.py",
      [
        "SortedArray",
        "remove"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "PprintIncludeExclude",
        "remove"
      ]
    ]
  ],
  "rename_keyword": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "rename_keyword"
      ]
    ]
  ],
  "add_history": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "add_history"
      ]
    ]
  ],
  "add_comment": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "add_comment"
      ]
    ]
  ],
  "add_blank": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "add_blank"
      ]
    ]
  ],
  "strip": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "strip"
      ]
    ]
  ],
  "_cardindex": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "_cardindex"
      ]
    ]
  ],
  "_keyword_from_index": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "_keyword_from_index"
      ]
    ]
  ],
  "get_insertion_idx": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "_relativeinsert",
        "get_insertion_idx"
      ]
    ]
  ],
  "_updateindices": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "_updateindices"
      ]
    ]
  ],
  "_countblanks": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "_countblanks"
      ]
    ]
  ],
  "_useblanks": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "_useblanks"
      ]
    ]
  ],
  "_haswildcard": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "_haswildcard"
      ]
    ]
  ],
  "_wildcardmatch": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "_wildcardmatch"
      ]
    ]
  ],
  "_set_slice": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "_set_slice"
      ]
    ]
  ],
  "_splitcommentary": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "_splitcommentary"
      ]
    ]
  ],
  "_add_commentary": [
    [
      "astropy/io/fits/header.py",
      [
        "Header",
        "_add_commentary"
      ]
    ]
  ],
  "__delete__": [
    [
      "astropy/io/fits/header.py",
      [
        "_DelayedHeader",
        "__delete__"
      ]
    ],
    [
      "astropy/utils/decorators.py",
      [
        "lazyproperty",
        "__delete__"
      ]
    ],
    [
      "astropy/utils/metadata.py",
      [
        "MetaAttribute",
        "__delete__"
      ]
    ]
  ],
  "_setslice": [
    [
      "astropy/io/fits/header.py",
      [
        "_CardAccessor",
        "_setslice"
      ]
    ]
  ],
  "_block_size": [
    [
      "astropy/io/fits/header.py",
      [
        "_block_size"
      ]
    ]
  ],
  "_pad_length": [
    [
      "astropy/io/fits/header.py",
      [
        "_pad_length"
      ]
    ]
  ],
  "_check_padding": [
    [
      "astropy/io/fits/header.py",
      [
        "_check_padding"
      ]
    ]
  ],
  "handle_options": [
    [
      "astropy/io/fits/scripts/fitscheck.py",
      [
        "handle_options"
      ]
    ],
    [
      "astropy/io/fits/scripts/fitsdiff.py",
      [
        "handle_options"
      ]
    ]
  ],
  "setup_logging": [
    [
      "astropy/io/fits/scripts/fitscheck.py",
      [
        "setup_logging"
      ]
    ],
    [
      "astropy/io/fits/scripts/fitsdiff.py",
      [
        "setup_logging"
      ]
    ]
  ],
  "verify_checksums": [
    [
      "astropy/io/fits/scripts/fitscheck.py",
      [
        "verify_checksums"
      ]
    ]
  ],
  "verify_compliance": [
    [
      "astropy/io/fits/scripts/fitscheck.py",
      [
        "verify_compliance"
      ]
    ]
  ],
  "process_file": [
    [
      "astropy/io/fits/scripts/fitscheck.py",
      [
        "process_file"
      ]
    ]
  ],
  "match_files": [
    [
      "astropy/io/fits/scripts/fitsdiff.py",
      [
        "match_files"
      ]
    ]
  ],
  "_parse_internal": [
    [
      "astropy/io/fits/scripts/fitsheader.py",
      [
        "HeaderFormatter",
        "_parse_internal"
      ]
    ],
    [
      "astropy/io/fits/scripts/fitsheader.py",
      [
        "TableHeaderFormatter",
        "_parse_internal"
      ]
    ]
  ],
  "_get_cards": [
    [
      "astropy/io/fits/scripts/fitsheader.py",
      [
        "HeaderFormatter",
        "_get_cards"
      ]
    ]
  ],
  "print_headers_traditional": [
    [
      "astropy/io/fits/scripts/fitsheader.py",
      [
        "print_headers_traditional"
      ]
    ]
  ],
  "print_headers_as_table": [
    [
      "astropy/io/fits/scripts/fitsheader.py",
      [
        "print_headers_as_table"
      ]
    ]
  ],
  "print_headers_as_comparison": [
    [
      "astropy/io/fits/scripts/fitsheader.py",
      [
        "print_headers_as_comparison"
      ]
    ]
  ],
  "fitsinfo": [
    [
      "astropy/io/fits/scripts/fitsinfo.py",
      [
        "fitsinfo"
      ]
    ]
  ],
  "_get_compression_extension": [
    [
      "astropy/io/fits/setup_package.py",
      [
        "_get_compression_extension"
      ]
    ]
  ],
  "teardown": [
    [
      "astropy/io/fits/tests/__init__.py",
      [
        "FitsTestCase",
        "teardown"
      ]
    ],
    [
      "astropy/io/fits/tests/test_checksum.py",
      [
        "TestChecksumFunctions",
        "teardown"
      ]
    ],
    [
      "astropy/time/tests/test_update_leap_seconds.py",
      [
        "TestUpdateLeapSeconds",
        "teardown"
      ]
    ],
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestDefaultAutoOpen",
        "teardown"
      ]
    ],
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "ERFALeapSecondsSafe",
        "teardown"
      ]
    ]
  ],
  "copy_file": [
    [
      "astropy/io/fits/tests/__init__.py",
      [
        "FitsTestCase",
        "copy_file"
      ]
    ]
  ],
  "temp": [
    [
      "astropy/io/fits/tests/__init__.py",
      [
        "FitsTestCase",
        "temp"
      ]
    ]
  ],
  "test_sample_file": [
    [
      "astropy/io/fits/tests/test_checksum.py",
      [
        "TestChecksumFunctions",
        "test_sample_file"
      ]
    ]
  ],
  "test_image_create": [
    [
      "astropy/io/fits/tests/test_checksum.py",
      [
        "TestChecksumFunctions",
        "test_image_create"
      ]
    ]
  ],
  "test_scaled_data": [
    [
      "astropy/io/fits/tests/test_checksum.py",
      [
        "TestChecksumFunctions",
        "test_scaled_data"
      ]
    ]
  ],
  "test_scaled_data_auto_rescale": [
    [
      "astropy/io/fits/tests/test_checksum.py",
      [
        "TestChecksumFunctions",
        "test_scaled_data_auto_rescale"
      ]
    ]
  ],
  "test_uint16_data": [
    [
      "astropy/io/fits/tests/test_checksum.py",
      [
        "TestChecksumFunctions",
        "test_uint16_data"
      ]
    ]
  ],
  "test_groups_hdu_data": [
    [
      "astropy/io/fits/tests/test_checksum.py",
      [
        "TestChecksumFunctions",
        "test_groups_hdu_data"
      ]
    ]
  ],
  "test_binary_table_data": [
    [
      "astropy/io/fits/tests/test_checksum.py",
      [
        "TestChecksumFunctions",
        "test_binary_table_data"
      ]
    ]
  ],
  "test_variable_length_table_data": [
    [
      "astropy/io/fits/tests/test_checksum.py",
      [
        "TestChecksumFunctions",
        "test_variable_length_table_data"
      ]
    ]
  ],
  "test_ascii_table_data": [
    [
      "astropy/io/fits/tests/test_checksum.py",
      [
        "TestChecksumFunctions",
        "test_ascii_table_data"
      ]
    ]
  ],
  "test_compressed_image_data": [
    [
      "astropy/io/fits/tests/test_checksum.py",
      [
        "TestChecksumFunctions",
        "test_compressed_image_data"
      ]
    ]
  ],
  "test_failing_compressed_datasum": [
    [
      "astropy/io/fits/tests/test_checksum.py",
      [
        "TestChecksumFunctions",
        "test_failing_compressed_datasum"
      ]
    ]
  ],
  "test_compressed_image_data_int16": [
    [
      "astropy/io/fits/tests/test_checksum.py",
      [
        "TestChecksumFunctions",
        "test_compressed_image_data_int16"
      ]
    ]
  ],
  "test_compressed_image_data_float32": [
    [
      "astropy/io/fits/tests/test_checksum.py",
      [
        "TestChecksumFunctions",
        "test_compressed_image_data_float32"
      ]
    ]
  ],
  "test_open_with_no_keywords": [
    [
      "astropy/io/fits/tests/test_checksum.py",
      [
        "TestChecksumFunctions",
        "test_open_with_no_keywords"
      ]
    ]
  ],
  "test_append": [
    [
      "astropy/io/fits/tests/test_checksum.py",
      [
        "TestChecksumFunctions",
        "test_append"
      ]
    ],
    [
      "astropy/io/fits/tests/test_image_dask.py",
      [
        "test_append"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestConcatenate",
        "test_append"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestConcatenate",
        "test_append"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_functions.py",
      [
        "TestMaskedArrayConcatenation",
        "test_append"
      ]
    ]
  ],
  "test_writeto_convenience": [
    [
      "astropy/io/fits/tests/test_checksum.py",
      [
        "TestChecksumFunctions",
        "test_writeto_convenience"
      ]
    ]
  ],
  "test_hdu_writeto": [
    [
      "astropy/io/fits/tests/test_checksum.py",
      [
        "TestChecksumFunctions",
        "test_hdu_writeto"
      ]
    ]
  ],
  "test_hdu_writeto_existing": [
    [
      "astropy/io/fits/tests/test_checksum.py",
      [
        "TestChecksumFunctions",
        "test_hdu_writeto_existing"
      ]
    ]
  ],
  "test_datasum_only": [
    [
      "astropy/io/fits/tests/test_checksum.py",
      [
        "TestChecksumFunctions",
        "test_datasum_only"
      ]
    ]
  ],
  "test_open_update_mode_preserve_checksum": [
    [
      "astropy/io/fits/tests/test_checksum.py",
      [
        "TestChecksumFunctions",
        "test_open_update_mode_preserve_checksum"
      ]
    ]
  ],
  "test_open_update_mode_update_checksum": [
    [
      "astropy/io/fits/tests/test_checksum.py",
      [
        "TestChecksumFunctions",
        "test_open_update_mode_update_checksum"
      ]
    ]
  ],
  "test_overwrite_invalid": [
    [
      "astropy/io/fits/tests/test_checksum.py",
      [
        "TestChecksumFunctions",
        "test_overwrite_invalid"
      ]
    ],
    [
      "astropy/io/fits/tests/test_fitscheck.py",
      [
        "TestFitscheck",
        "test_overwrite_invalid"
      ]
    ]
  ],
  "_check_checksums": [
    [
      "astropy/io/fits/tests/test_checksum.py",
      [
        "TestChecksumFunctions",
        "_check_checksums"
      ]
    ]
  ],
  "test_wrong_argument_number": [
    [
      "astropy/io/fits/tests/test_compression_failures.py",
      [
        "TestCompressionFunction",
        "test_wrong_argument_number"
      ]
    ]
  ],
  "test_unknown_compression_type": [
    [
      "astropy/io/fits/tests/test_compression_failures.py",
      [
        "TestCompressionFunction",
        "test_unknown_compression_type"
      ]
    ]
  ],
  "test_zbitpix_unknown": [
    [
      "astropy/io/fits/tests/test_compression_failures.py",
      [
        "TestCompressionFunction",
        "test_zbitpix_unknown"
      ]
    ]
  ],
  "test_data_none": [
    [
      "astropy/io/fits/tests/test_compression_failures.py",
      [
        "TestCompressionFunction",
        "test_data_none"
      ]
    ]
  ],
  "test_missing_internal_header": [
    [
      "astropy/io/fits/tests/test_compression_failures.py",
      [
        "TestCompressionFunction",
        "test_missing_internal_header"
      ]
    ]
  ],
  "test_invalid_tform": [
    [
      "astropy/io/fits/tests/test_compression_failures.py",
      [
        "TestCompressionFunction",
        "test_invalid_tform"
      ]
    ]
  ],
  "test_invalid_zdither": [
    [
      "astropy/io/fits/tests/test_compression_failures.py",
      [
        "TestCompressionFunction",
        "test_invalid_zdither"
      ]
    ]
  ],
  "test_header_missing_keyword": [
    [
      "astropy/io/fits/tests/test_compression_failures.py",
      [
        "TestCompressionFunction",
        "test_header_missing_keyword"
      ]
    ]
  ],
  "test_header_value_int_overflow": [
    [
      "astropy/io/fits/tests/test_compression_failures.py",
      [
        "TestCompressionFunction",
        "test_header_value_int_overflow"
      ]
    ]
  ],
  "test_header_value_long_overflow": [
    [
      "astropy/io/fits/tests/test_compression_failures.py",
      [
        "TestCompressionFunction",
        "test_header_value_long_overflow"
      ]
    ]
  ],
  "test_header_value_longlong_overflow": [
    [
      "astropy/io/fits/tests/test_compression_failures.py",
      [
        "TestCompressionFunction",
        "test_header_value_longlong_overflow"
      ]
    ]
  ],
  "test_header_value_float_overflow": [
    [
      "astropy/io/fits/tests/test_compression_failures.py",
      [
        "TestCompressionFunction",
        "test_header_value_float_overflow"
      ]
    ]
  ],
  "test_header_value_negative": [
    [
      "astropy/io/fits/tests/test_compression_failures.py",
      [
        "TestCompressionFunction",
        "test_header_value_negative"
      ]
    ]
  ],
  "test_header_value_exceeds_custom_limit": [
    [
      "astropy/io/fits/tests/test_compression_failures.py",
      [
        "TestCompressionFunction",
        "test_header_value_exceeds_custom_limit"
      ]
    ]
  ],
  "test_header_value_no_string": [
    [
      "astropy/io/fits/tests/test_compression_failures.py",
      [
        "TestCompressionFunction",
        "test_header_value_no_string"
      ]
    ]
  ],
  "test_header_value_no_double": [
    [
      "astropy/io/fits/tests/test_compression_failures.py",
      [
        "TestCompressionFunction",
        "test_header_value_no_double"
      ]
    ]
  ],
  "test_header_value_no_double_int_image": [
    [
      "astropy/io/fits/tests/test_compression_failures.py",
      [
        "TestCompressionFunction",
        "test_header_value_no_double_int_image"
      ]
    ]
  ],
  "equal_data": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "equal_data"
      ]
    ]
  ],
  "test_simple": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestSingleTable",
        "test_simple"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestNewFromColumns",
        "test_simple"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestPandas",
        "test_simple"
      ]
    ],
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestBasic",
        "test_simple"
      ]
    ],
    [
      "astropy/time/tests/test_mask.py",
      [
        "test_simple"
      ]
    ],
    [
      "astropy/utils/iers/tests/test_iers.py",
      [
        "TestBasic",
        "test_simple"
      ]
    ],
    [
      "astropy/utils/iers/tests/test_iers.py",
      [
        "TestIERS_AExcerpt",
        "test_simple"
      ]
    ],
    [
      "astropy/utils/iers/tests/test_iers.py",
      [
        "TestIERS_A",
        "test_simple"
      ]
    ],
    [
      "astropy/utils/iers/tests/test_iers.py",
      [
        "TestIERS_Auto",
        "test_simple"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayInitialization",
        "test_simple"
      ]
    ]
  ],
  "test_simple_pathlib": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestSingleTable",
        "test_simple_pathlib"
      ]
    ]
  ],
  "test_simple_meta": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestSingleTable",
        "test_simple_meta"
      ]
    ]
  ],
  "test_simple_meta_conflicting": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestSingleTable",
        "test_simple_meta_conflicting"
      ]
    ]
  ],
  "test_simple_noextension": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestSingleTable",
        "test_simple_noextension"
      ]
    ]
  ],
  "test_with_units": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestSingleTable",
        "test_with_units"
      ]
    ]
  ],
  "test_with_custom_units_qtable": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestSingleTable",
        "test_with_custom_units_qtable"
      ]
    ]
  ],
  "test_read_with_unit_aliases": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestSingleTable",
        "test_read_with_unit_aliases"
      ]
    ]
  ],
  "test_with_format": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestSingleTable",
        "test_with_format"
      ]
    ]
  ],
  "test_masked": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestSingleTable",
        "test_masked"
      ]
    ]
  ],
  "test_masked_nan": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestSingleTable",
        "test_masked_nan"
      ]
    ]
  ],
  "test_masked_serialize_data_mask": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestSingleTable",
        "test_masked_serialize_data_mask"
      ]
    ]
  ],
  "test_read_from_fileobj": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestSingleTable",
        "test_read_from_fileobj"
      ]
    ]
  ],
  "test_read_with_nonstandard_units": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestSingleTable",
        "test_read_with_nonstandard_units"
      ]
    ]
  ],
  "test_write_drop_nonstandard_units": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestSingleTable",
        "test_write_drop_nonstandard_units"
      ]
    ]
  ],
  "test_memmap": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestSingleTable",
        "test_memmap"
      ]
    ]
  ],
  "test_character_as_bytes": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestSingleTable",
        "test_character_as_bytes"
      ]
    ]
  ],
  "test_oned_single_element": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestSingleTable",
        "test_oned_single_element"
      ]
    ]
  ],
  "check_equal": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestSingleTable",
        "test_write_append",
        "check_equal"
      ]
    ]
  ],
  "test_write_append": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestSingleTable",
        "test_write_append"
      ]
    ]
  ],
  "test_write_overwrite": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestSingleTable",
        "test_write_overwrite"
      ]
    ],
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_write_overwrite"
      ]
    ],
    [
      "astropy/io/misc/tests/test_pandas.py",
      [
        "test_write_overwrite"
      ]
    ],
    [
      "astropy/io/votable/tests/table_test.py",
      [
        "test_write_overwrite"
      ]
    ]
  ],
  "test_mask_nans_on_read": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestSingleTable",
        "test_mask_nans_on_read"
      ]
    ]
  ],
  "test_mask_null_on_read": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestSingleTable",
        "test_mask_null_on_read"
      ]
    ]
  ],
  "setup_method": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestMultipleHDU",
        "setup_method"
      ]
    ],
    [
      "astropy/modeling/tests/test_quantities_evaluation.py",
      [
        "TestInputUnits",
        "setup_method"
      ]
    ],
    [
      "astropy/samp/tests/test_hub_proxy.py",
      [
        "TestHubProxy",
        "setup_method"
      ]
    ],
    [
      "astropy/samp/tests/test_standard_profile.py",
      [
        "TestStandardProfile",
        "setup_method"
      ]
    ],
    [
      "astropy/samp/tests/test_web_profile.py",
      [
        "TestWebProfile",
        "setup_method"
      ]
    ],
    [
      "astropy/table/mixins/tests/test_dask.py",
      [
        "TestDaskHandler",
        "setup_method"
      ]
    ],
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromNdarrayHomo",
        "setup_method"
      ]
    ],
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromListOfLists",
        "setup_method"
      ]
    ],
    [
      "astropy/table/tests/test_masked.py",
      [
        "SetupData",
        "setup_method"
      ]
    ],
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestFilled",
        "setup_method"
      ]
    ],
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestColumnsShowHide",
        "setup_method"
      ]
    ],
    [
      "astropy/timeseries/tests/test_common.py",
      [
        "TestTimeSeries",
        "setup_method"
      ]
    ],
    [
      "astropy/timeseries/tests/test_common.py",
      [
        "TestBinnedTimeSeries",
        "setup_method"
      ]
    ],
    [
      "astropy/visualization/tests/test_lupton_rgb.py",
      [
        "TestLuptonRgb",
        "setup_method"
      ]
    ]
  ],
  "test_read": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestMultipleHDU",
        "test_read"
      ]
    ],
    [
      "astropy/timeseries/tests/test_binned.py",
      [
        "test_read"
      ]
    ],
    [
      "astropy/timeseries/tests/test_sampled.py",
      [
        "test_read"
      ]
    ]
  ],
  "test_read_with_hdu_0": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestMultipleHDU",
        "test_read_with_hdu_0"
      ]
    ]
  ],
  "test_read_with_hdu_1": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestMultipleHDU",
        "test_read_with_hdu_1"
      ]
    ]
  ],
  "test_read_with_hdu_2": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestMultipleHDU",
        "test_read_with_hdu_2"
      ]
    ]
  ],
  "test_read_with_hdu_3": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestMultipleHDU",
        "test_read_with_hdu_3"
      ]
    ]
  ],
  "test_read_with_hdu_4": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestMultipleHDU",
        "test_read_with_hdu_4"
      ]
    ]
  ],
  "test_read_with_hdu_missing": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestMultipleHDU",
        "test_read_with_hdu_missing"
      ]
    ]
  ],
  "test_read_with_hdu_warning": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestMultipleHDU",
        "test_read_with_hdu_warning"
      ]
    ]
  ],
  "test_read_in_last_hdu": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestMultipleHDU",
        "test_read_in_last_hdu"
      ]
    ]
  ],
  "test_read_from_hdulist": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestMultipleHDU",
        "test_read_from_hdulist"
      ]
    ]
  ],
  "test_read_from_hdulist_with_hdu_0": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestMultipleHDU",
        "test_read_from_hdulist_with_hdu_0"
      ]
    ]
  ],
  "test_read_from_hdulist_with_single_table": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestMultipleHDU",
        "test_read_from_hdulist_with_single_table"
      ]
    ]
  ],
  "test_read_from_hdulist_with_hdu_1": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestMultipleHDU",
        "test_read_from_hdulist_with_hdu_1"
      ]
    ]
  ],
  "test_read_from_hdulist_with_hdu_2": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestMultipleHDU",
        "test_read_from_hdulist_with_hdu_2"
      ]
    ]
  ],
  "test_read_from_hdulist_with_hdu_3": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestMultipleHDU",
        "test_read_from_hdulist_with_hdu_3"
      ]
    ]
  ],
  "test_read_from_hdulist_with_hdu_warning": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestMultipleHDU",
        "test_read_from_hdulist_with_hdu_warning"
      ]
    ]
  ],
  "test_read_from_hdulist_with_hdu_missing": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestMultipleHDU",
        "test_read_from_hdulist_with_hdu_missing"
      ]
    ]
  ],
  "test_read_from_hdulist_in_last_hdu": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestMultipleHDU",
        "test_read_from_hdulist_in_last_hdu"
      ]
    ]
  ],
  "test_read_from_single_hdu": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "TestMultipleHDU",
        "test_read_from_single_hdu"
      ]
    ]
  ],
  "test_masking_regression_1795": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "test_masking_regression_1795"
      ]
    ]
  ],
  "test_scale_error": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "test_scale_error"
      ]
    ]
  ],
  "test_parse_tdisp_format": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "test_parse_tdisp_format"
      ]
    ]
  ],
  "test_fortran_to_python_format": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "test_fortran_to_python_format"
      ]
    ]
  ],
  "test_python_to_tdisp": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "test_python_to_tdisp"
      ]
    ]
  ],
  "test_logical_python_to_tdisp": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "test_logical_python_to_tdisp"
      ]
    ]
  ],
  "test_bool_column": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "test_bool_column"
      ]
    ]
  ],
  "test_unicode_column": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "test_unicode_column"
      ]
    ]
  ],
  "test_unit_warnings_read_write": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "test_unit_warnings_read_write"
      ]
    ]
  ],
  "test_convert_comment_convention": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "test_convert_comment_convention"
      ]
    ]
  ],
  "test_fits_mixins_qtable_to_table": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "test_fits_mixins_qtable_to_table"
      ]
    ]
  ],
  "test_fits_mixins_as_one": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "test_fits_mixins_as_one"
      ]
    ]
  ],
  "test_fits_mixins_per_column": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "test_fits_mixins_per_column"
      ]
    ]
  ],
  "test_fits_unsupported_mixin": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "test_fits_unsupported_mixin"
      ]
    ],
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_fits_unsupported_mixin"
      ]
    ]
  ],
  "test_info_attributes_with_no_mixins": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "test_info_attributes_with_no_mixins"
      ]
    ]
  ],
  "test_meta_not_modified": [
    [
      "astropy/io/fits/tests/test_connect.py",
      [
        "test_meta_not_modified"
      ]
    ]
  ],
  "test_resource_warning": [
    [
      "astropy/io/fits/tests/test_convenience.py",
      [
        "TestConvenience",
        "test_resource_warning"
      ]
    ]
  ],
  "test_fileobj_not_closed": [
    [
      "astropy/io/fits/tests/test_convenience.py",
      [
        "TestConvenience",
        "test_fileobj_not_closed"
      ]
    ]
  ],
  "test_table_to_hdu": [
    [
      "astropy/io/fits/tests/test_convenience.py",
      [
        "TestConvenience",
        "test_table_to_hdu"
      ]
    ],
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "test_table_to_hdu"
      ]
    ]
  ],
  "test_masked_table_to_hdu": [
    [
      "astropy/io/fits/tests/test_convenience.py",
      [
        "TestConvenience",
        "test_masked_table_to_hdu"
      ]
    ]
  ],
  "test_table_non_stringifyable_unit_to_hdu": [
    [
      "astropy/io/fits/tests/test_convenience.py",
      [
        "TestConvenience",
        "test_table_non_stringifyable_unit_to_hdu"
      ]
    ]
  ],
  "test_table_to_hdu_convert_comment_convention": [
    [
      "astropy/io/fits/tests/test_convenience.py",
      [
        "TestConvenience",
        "test_table_to_hdu_convert_comment_convention"
      ]
    ]
  ],
  "test_table_to_hdu_filter_reserved": [
    [
      "astropy/io/fits/tests/test_convenience.py",
      [
        "TestConvenience",
        "test_table_to_hdu_filter_reserved"
      ]
    ]
  ],
  "test_table_to_hdu_warn_reserved": [
    [
      "astropy/io/fits/tests/test_convenience.py",
      [
        "TestConvenience",
        "test_table_to_hdu_warn_reserved"
      ]
    ]
  ],
  "test_table_to_hdu_filter_incompatible": [
    [
      "astropy/io/fits/tests/test_convenience.py",
      [
        "TestConvenience",
        "test_table_to_hdu_filter_incompatible"
      ]
    ]
  ],
  "test_table_writeto_header": [
    [
      "astropy/io/fits/tests/test_convenience.py",
      [
        "TestConvenience",
        "test_table_writeto_header"
      ]
    ]
  ],
  "test_image_extension_update_header": [
    [
      "astropy/io/fits/tests/test_convenience.py",
      [
        "TestConvenience",
        "test_image_extension_update_header"
      ]
    ]
  ],
  "test_printdiff": [
    [
      "astropy/io/fits/tests/test_convenience.py",
      [
        "TestConvenience",
        "test_printdiff"
      ]
    ]
  ],
  "test_tabledump": [
    [
      "astropy/io/fits/tests/test_convenience.py",
      [
        "TestConvenience",
        "test_tabledump"
      ]
    ]
  ],
  "test_dump_load_round_trip": [
    [
      "astropy/io/fits/tests/test_convenience.py",
      [
        "TestConvenience",
        "test_dump_load_round_trip"
      ]
    ],
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_dump_load_round_trip"
      ]
    ]
  ],
  "test_append_filename": [
    [
      "astropy/io/fits/tests/test_convenience.py",
      [
        "TestConvenience",
        "test_append_filename"
      ]
    ]
  ],
  "test_append_filehandle": [
    [
      "astropy/io/fits/tests/test_convenience.py",
      [
        "TestConvenience",
        "test_append_filehandle"
      ]
    ]
  ],
  "test_append_with_header": [
    [
      "astropy/io/fits/tests/test_convenience.py",
      [
        "TestConvenience",
        "test_append_with_header"
      ]
    ]
  ],
  "test_pathlib": [
    [
      "astropy/io/fits/tests/test_convenience.py",
      [
        "TestConvenience",
        "test_pathlib"
      ]
    ]
  ],
  "test_getdata_ext_given": [
    [
      "astropy/io/fits/tests/test_convenience.py",
      [
        "TestConvenience",
        "test_getdata_ext_given"
      ]
    ]
  ],
  "test_getdata_ext_given_nodata": [
    [
      "astropy/io/fits/tests/test_convenience.py",
      [
        "TestConvenience",
        "test_getdata_ext_given_nodata"
      ]
    ]
  ],
  "test_getdata_ext_not_given_with_data_in_primary": [
    [
      "astropy/io/fits/tests/test_convenience.py",
      [
        "TestConvenience",
        "test_getdata_ext_not_given_with_data_in_primary"
      ]
    ]
  ],
  "test_getdata_ext_not_given_with_data_in_ext": [
    [
      "astropy/io/fits/tests/test_convenience.py",
      [
        "TestConvenience",
        "test_getdata_ext_not_given_with_data_in_ext"
      ]
    ]
  ],
  "test_getdata_ext_not_given_nodata_any": [
    [
      "astropy/io/fits/tests/test_convenience.py",
      [
        "TestConvenience",
        "test_getdata_ext_not_given_nodata_any"
      ]
    ]
  ],
  "test_getdata_ext_not_given_nodata_noext": [
    [
      "astropy/io/fits/tests/test_convenience.py",
      [
        "TestConvenience",
        "test_getdata_ext_not_given_nodata_noext"
      ]
    ]
  ],
  "test_naxisj_check": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestCore",
        "test_naxisj_check"
      ]
    ]
  ],
  "test_byteswap": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestCore",
        "test_byteswap"
      ]
    ]
  ],
  "test_fits_file_path_object": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestCore",
        "test_fits_file_path_object"
      ]
    ]
  ],
  "test_fits_pathlike_object": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestCore",
        "test_fits_pathlike_object"
      ]
    ]
  ],
  "test_fits_file_bytes_object": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestCore",
        "test_fits_file_bytes_object"
      ]
    ]
  ],
  "test_add_del_columns": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestCore",
        "test_add_del_columns"
      ]
    ]
  ],
  "test_add_del_columns2": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestCore",
        "test_add_del_columns2"
      ]
    ]
  ],
  "test_update_header_card": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestCore",
        "test_update_header_card"
      ]
    ]
  ],
  "test_set_card_value": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestCore",
        "test_set_card_value"
      ]
    ]
  ],
  "test_uint": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestCore",
        "test_uint"
      ]
    ],
    [
      "astropy/io/fits/tests/test_uint.py",
      [
        "TestUintFunctions",
        "test_uint"
      ]
    ]
  ],
  "test_fix_missing_card_append": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestCore",
        "test_fix_missing_card_append"
      ]
    ]
  ],
  "test_fix_invalid_keyword_value": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestCore",
        "test_fix_invalid_keyword_value"
      ]
    ]
  ],
  "test_unfixable_missing_card": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestCore",
        "test_unfixable_missing_card"
      ]
    ]
  ],
  "test_exception_on_verification_error": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestCore",
        "test_exception_on_verification_error"
      ]
    ]
  ],
  "test_ignore_verification_error": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestCore",
        "test_ignore_verification_error"
      ]
    ]
  ],
  "test_unrecognized_verify_option": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestCore",
        "test_unrecognized_verify_option"
      ]
    ]
  ],
  "test_errlist_basic": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestCore",
        "test_errlist_basic"
      ]
    ]
  ],
  "make_invalid_hdu": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestCore",
        "test_combined_verify_options",
        "make_invalid_hdu"
      ]
    ]
  ],
  "test_combined_verify_options": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestCore",
        "test_combined_verify_options"
      ]
    ]
  ],
  "test_getext": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestCore",
        "test_getext"
      ]
    ]
  ],
  "test_extension_name_case_sensitive": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestCore",
        "test_extension_name_case_sensitive"
      ]
    ]
  ],
  "test_hdu_fromstring": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestCore",
        "test_hdu_fromstring"
      ]
    ]
  ],
  "test_nonstandard_hdu": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestCore",
        "test_nonstandard_hdu"
      ]
    ]
  ],
  "test_extname": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestCore",
        "test_extname"
      ]
    ]
  ],
  "test_extver_extlevel": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestCore",
        "test_extver_extlevel"
      ]
    ]
  ],
  "test_consecutive_writeto": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestCore",
        "test_consecutive_writeto"
      ]
    ]
  ],
  "test_writeto": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestConvenienceFunctions",
        "test_writeto"
      ]
    ]
  ],
  "test_writeto_2": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestConvenienceFunctions",
        "test_writeto_2"
      ]
    ]
  ],
  "test_open_nonexistent": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_open_nonexistent"
      ]
    ]
  ],
  "test_open_file_handle": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_open_file_handle"
      ]
    ]
  ],
  "test_fits_file_handle_mode_combo": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_fits_file_handle_mode_combo"
      ]
    ]
  ],
  "test_open_from_url": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_open_from_url"
      ]
    ]
  ],
  "test_open_from_remote_url": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_open_from_remote_url"
      ]
    ]
  ],
  "test_open_gzipped": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_open_gzipped"
      ]
    ]
  ],
  "test_open_gzipped_from_handle": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_open_gzipped_from_handle"
      ]
    ]
  ],
  "test_detect_gzipped": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_detect_gzipped"
      ]
    ]
  ],
  "test_writeto_append_mode_gzip": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_writeto_append_mode_gzip"
      ]
    ]
  ],
  "test_fits_update_mode_gzip": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_fits_update_mode_gzip"
      ]
    ]
  ],
  "test_fits_append_mode_gzip": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_fits_append_mode_gzip"
      ]
    ]
  ],
  "test_open_bzipped": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_open_bzipped"
      ]
    ]
  ],
  "test_open_bzipped_from_handle": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_open_bzipped_from_handle"
      ]
    ]
  ],
  "test_detect_bzipped": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_detect_bzipped"
      ]
    ]
  ],
  "test_writeto_bzip2_fileobj": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_writeto_bzip2_fileobj"
      ]
    ]
  ],
  "test_writeto_bzip2_filename": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_writeto_bzip2_filename"
      ]
    ]
  ],
  "test_open_zipped": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_open_zipped"
      ]
    ]
  ],
  "test_open_zipped_from_handle": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_open_zipped_from_handle"
      ]
    ]
  ],
  "test_detect_zipped": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_detect_zipped"
      ]
    ]
  ],
  "test_open_zipped_writeable": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_open_zipped_writeable"
      ]
    ]
  ],
  "test_read_open_astropy_gzip_file": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_read_open_astropy_gzip_file"
      ]
    ]
  ],
  "test_open_multiple_member_zipfile": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_open_multiple_member_zipfile"
      ]
    ]
  ],
  "test_read_open_file": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_read_open_file"
      ]
    ]
  ],
  "test_read_closed_file": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_read_closed_file"
      ]
    ]
  ],
  "test_read_open_gzip_file": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_read_open_gzip_file"
      ]
    ]
  ],
  "test_open_gzip_file_for_writing": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_open_gzip_file_for_writing"
      ]
    ]
  ],
  "test_write_read_gzip_file": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_write_read_gzip_file"
      ]
    ]
  ],
  "test_compressed_ext_but_not_compressed": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_compressed_ext_but_not_compressed"
      ]
    ]
  ],
  "test_read_file_like_object": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_read_file_like_object"
      ]
    ]
  ],
  "test_updated_file_permissions": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_updated_file_permissions"
      ]
    ]
  ],
  "test_fileobj_mode_guessing": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_fileobj_mode_guessing"
      ]
    ]
  ],
  "test_mmap_unwriteable": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_mmap_unwriteable"
      ]
    ]
  ],
  "mmap_patched": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_mmap_allocate_error",
        "mmap_patched"
      ]
    ]
  ],
  "test_mmap_allocate_error": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_mmap_allocate_error"
      ]
    ]
  ],
  "test_mmap_closing": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_mmap_closing"
      ]
    ]
  ],
  "test_uncloseable_file": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_uncloseable_file"
      ]
    ]
  ],
  "test_write_bytesio_discontiguous": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_write_bytesio_discontiguous"
      ]
    ]
  ],
  "test_write_bytesio": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_write_bytesio"
      ]
    ]
  ],
  "test_filename_with_colon": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_filename_with_colon"
      ]
    ]
  ],
  "get_free_space_in_dir": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_writeto_full_disk",
        "get_free_space_in_dir"
      ]
    ],
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_flush_full_disk",
        "get_free_space_in_dir"
      ]
    ],
    [
      "astropy/utils/data.py",
      [
        "get_free_space_in_dir"
      ]
    ]
  ],
  "test_writeto_full_disk": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_writeto_full_disk"
      ]
    ]
  ],
  "test_flush_full_disk": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_flush_full_disk"
      ]
    ]
  ],
  "_test_write_string_bytes_io": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "_test_write_string_bytes_io"
      ]
    ]
  ],
  "_make_gzip_file": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "_make_gzip_file"
      ]
    ]
  ],
  "_make_zip_file": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "_make_zip_file"
      ]
    ]
  ],
  "_make_bzip2_file": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "_make_bzip2_file"
      ]
    ]
  ],
  "test_simulateonly": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_simulateonly"
      ]
    ]
  ],
  "test_bintablehdu_zero_bytes": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_bintablehdu_zero_bytes"
      ]
    ]
  ],
  "test_primaryhdu_zero_bytes": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestFileFunctions",
        "test_primaryhdu_zero_bytes"
      ]
    ]
  ],
  "test_streaming_hdu": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestStreamingFunctions",
        "test_streaming_hdu"
      ]
    ]
  ],
  "test_streaming_hdu_file_wrong_mode": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestStreamingFunctions",
        "test_streaming_hdu_file_wrong_mode"
      ]
    ]
  ],
  "test_streaming_hdu_write_file": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestStreamingFunctions",
        "test_streaming_hdu_write_file"
      ]
    ]
  ],
  "test_streaming_hdu_write_file_like": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestStreamingFunctions",
        "test_streaming_hdu_write_file_like"
      ]
    ]
  ],
  "test_streaming_hdu_append_extension": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestStreamingFunctions",
        "test_streaming_hdu_append_extension"
      ]
    ]
  ],
  "test_fix_invalid_extname": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestStreamingFunctions",
        "test_fix_invalid_extname"
      ]
    ]
  ],
  "_make_streaming_hdu": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestStreamingFunctions",
        "_make_streaming_hdu"
      ]
    ]
  ],
  "test_blank_ignore": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestStreamingFunctions",
        "test_blank_ignore"
      ]
    ]
  ],
  "test_error_if_memmap_impossible": [
    [
      "astropy/io/fits/tests/test_core.py",
      [
        "TestStreamingFunctions",
        "test_error_if_memmap_impossible"
      ]
    ]
  ],
  "test_identical_headers": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_identical_headers"
      ]
    ]
  ],
  "test_slightly_different_headers": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_slightly_different_headers"
      ]
    ]
  ],
  "test_common_keywords": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_common_keywords"
      ]
    ]
  ],
  "test_different_keyword_count": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_different_keyword_count"
      ]
    ]
  ],
  "test_different_keywords": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_different_keywords"
      ]
    ]
  ],
  "test_different_keyword_values": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_different_keyword_values"
      ]
    ]
  ],
  "test_different_keyword_comments": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_different_keyword_comments"
      ]
    ]
  ],
  "test_different_keyword_values_with_duplicate": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_different_keyword_values_with_duplicate"
      ]
    ]
  ],
  "test_asymmetric_duplicate_keywords": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_asymmetric_duplicate_keywords"
      ]
    ]
  ],
  "test_floating_point_rtol": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_floating_point_rtol"
      ]
    ]
  ],
  "test_floating_point_atol": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_floating_point_atol"
      ]
    ]
  ],
  "test_ignore_blanks": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_ignore_blanks"
      ]
    ]
  ],
  "test_ignore_blank_cards": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_ignore_blank_cards"
      ]
    ]
  ],
  "test_ignore_hdus": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_ignore_hdus"
      ]
    ],
    [
      "astropy/io/fits/tests/test_fitsdiff.py",
      [
        "TestFITSDiff_script",
        "test_ignore_hdus"
      ]
    ]
  ],
  "test_ignore_keyword_values": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_ignore_keyword_values"
      ]
    ]
  ],
  "test_ignore_keyword_comments": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_ignore_keyword_comments"
      ]
    ]
  ],
  "test_trivial_identical_images": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_trivial_identical_images"
      ]
    ]
  ],
  "test_identical_within_relative_tolerance": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_identical_within_relative_tolerance"
      ]
    ]
  ],
  "test_identical_within_absolute_tolerance": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_identical_within_absolute_tolerance"
      ]
    ]
  ],
  "test_identical_within_rtol_and_atol": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_identical_within_rtol_and_atol"
      ]
    ]
  ],
  "test_not_identical_within_rtol_and_atol": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_not_identical_within_rtol_and_atol"
      ]
    ]
  ],
  "test_identical_comp_image_hdus": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_identical_comp_image_hdus"
      ]
    ]
  ],
  "test_different_dimensions": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_different_dimensions"
      ]
    ],
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestBasic",
        "test_different_dimensions"
      ]
    ]
  ],
  "test_different_pixels": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_different_pixels"
      ]
    ]
  ],
  "test_identical_tables": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_identical_tables"
      ]
    ]
  ],
  "test_diff_empty_tables": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_diff_empty_tables"
      ]
    ]
  ],
  "test_ignore_table_fields": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_ignore_table_fields"
      ]
    ]
  ],
  "test_different_table_field_names": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_different_table_field_names"
      ]
    ]
  ],
  "test_different_table_field_counts": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_different_table_field_counts"
      ]
    ]
  ],
  "test_different_table_rows": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_different_table_rows"
      ]
    ]
  ],
  "test_different_table_data": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_different_table_data"
      ]
    ]
  ],
  "test_identical_files_basic": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_identical_files_basic"
      ]
    ]
  ],
  "test_partially_identical_files1": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_partially_identical_files1"
      ]
    ]
  ],
  "test_partially_identical_files2": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_partially_identical_files2"
      ]
    ]
  ],
  "test_partially_identical_files3": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_partially_identical_files3"
      ]
    ]
  ],
  "test_diff_nans": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_diff_nans"
      ]
    ]
  ],
  "test_file_output_from_path_string": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_file_output_from_path_string"
      ]
    ]
  ],
  "test_file_output_overwrite_safety": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_file_output_overwrite_safety"
      ]
    ]
  ],
  "test_file_output_overwrite_success": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_file_output_overwrite_success"
      ]
    ]
  ],
  "test_rawdatadiff_nodiff": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_rawdatadiff_nodiff"
      ]
    ]
  ],
  "test_rawdatadiff_dimsdiff": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_rawdatadiff_dimsdiff"
      ]
    ]
  ],
  "test_rawdatadiff_bytesdiff": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "TestDiff",
        "test_rawdatadiff_bytesdiff"
      ]
    ]
  ],
  "test_fitsdiff_hdu_name": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "test_fitsdiff_hdu_name"
      ]
    ]
  ],
  "test_fitsdiff_no_hdu_name": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "test_fitsdiff_no_hdu_name"
      ]
    ]
  ],
  "test_fitsdiff_with_names": [
    [
      "astropy/io/fits/tests/test_diff.py",
      [
        "test_fitsdiff_with_names"
      ]
    ]
  ],
  "test_rec_from_string": [
    [
      "astropy/io/fits/tests/test_division.py",
      [
        "TestDivisionFunctions",
        "test_rec_from_string"
      ]
    ]
  ],
  "test_card_with_continue": [
    [
      "astropy/io/fits/tests/test_division.py",
      [
        "TestDivisionFunctions",
        "test_card_with_continue"
      ]
    ]
  ],
  "test_valid_hdu_size": [
    [
      "astropy/io/fits/tests/test_division.py",
      [
        "TestDivisionFunctions",
        "test_valid_hdu_size"
      ]
    ]
  ],
  "test_hdu_get_size": [
    [
      "astropy/io/fits/tests/test_division.py",
      [
        "TestDivisionFunctions",
        "test_hdu_get_size"
      ]
    ]
  ],
  "test_section": [
    [
      "astropy/io/fits/tests/test_division.py",
      [
        "TestDivisionFunctions",
        "test_section"
      ]
    ],
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_section"
      ]
    ]
  ],
  "test_help": [
    [
      "astropy/io/fits/tests/test_fitscheck.py",
      [
        "TestFitscheck",
        "test_help"
      ]
    ],
    [
      "astropy/io/fits/tests/test_fitsdiff.py",
      [
        "TestFITSDiff_script",
        "test_help"
      ]
    ],
    [
      "astropy/io/fits/tests/test_fitsheader.py",
      [
        "TestFITSheader_script",
        "test_help"
      ]
    ],
    [
      "astropy/io/fits/tests/test_fitsinfo.py",
      [
        "TestFitsinfo",
        "test_help"
      ]
    ]
  ],
  "test_version": [
    [
      "astropy/io/fits/tests/test_fitscheck.py",
      [
        "TestFitscheck",
        "test_version"
      ]
    ],
    [
      "astropy/io/fits/tests/test_fitsdiff.py",
      [
        "TestFITSDiff_script",
        "test_version"
      ]
    ],
    [
      "astropy/io/fits/tests/test_fitsheader.py",
      [
        "TestFITSheader_script",
        "test_version"
      ]
    ],
    [
      "astropy/io/fits/tests/test_fitsinfo.py",
      [
        "TestFitsinfo",
        "test_version"
      ]
    ],
    [
      "astropy/io/votable/tests/tree_test.py",
      [
        "test_version"
      ]
    ]
  ],
  "test_valid_file": [
    [
      "astropy/io/fits/tests/test_fitscheck.py",
      [
        "TestFitscheck",
        "test_valid_file"
      ]
    ]
  ],
  "test_remove_checksums": [
    [
      "astropy/io/fits/tests/test_fitscheck.py",
      [
        "TestFitscheck",
        "test_remove_checksums"
      ]
    ]
  ],
  "test_no_checksums": [
    [
      "astropy/io/fits/tests/test_fitscheck.py",
      [
        "TestFitscheck",
        "test_no_checksums"
      ]
    ]
  ],
  "test_noargs": [
    [
      "astropy/io/fits/tests/test_fitsdiff.py",
      [
        "TestFITSDiff_script",
        "test_noargs"
      ]
    ]
  ],
  "test_oneargargs": [
    [
      "astropy/io/fits/tests/test_fitsdiff.py",
      [
        "TestFITSDiff_script",
        "test_oneargargs"
      ]
    ]
  ],
  "test_nodiff": [
    [
      "astropy/io/fits/tests/test_fitsdiff.py",
      [
        "TestFITSDiff_script",
        "test_nodiff"
      ]
    ]
  ],
  "test_onediff": [
    [
      "astropy/io/fits/tests/test_fitsdiff.py",
      [
        "TestFITSDiff_script",
        "test_onediff"
      ]
    ]
  ],
  "test_manydiff": [
    [
      "astropy/io/fits/tests/test_fitsdiff.py",
      [
        "TestFITSDiff_script",
        "test_manydiff"
      ]
    ]
  ],
  "test_outputfile": [
    [
      "astropy/io/fits/tests/test_fitsdiff.py",
      [
        "TestFITSDiff_script",
        "test_outputfile"
      ]
    ]
  ],
  "test_atol": [
    [
      "astropy/io/fits/tests/test_fitsdiff.py",
      [
        "TestFITSDiff_script",
        "test_atol"
      ]
    ]
  ],
  "test_rtol": [
    [
      "astropy/io/fits/tests/test_fitsdiff.py",
      [
        "TestFITSDiff_script",
        "test_rtol"
      ]
    ]
  ],
  "test_rtol_diff": [
    [
      "astropy/io/fits/tests/test_fitsdiff.py",
      [
        "TestFITSDiff_script",
        "test_rtol_diff"
      ]
    ]
  ],
  "test_wildcard": [
    [
      "astropy/io/fits/tests/test_fitsdiff.py",
      [
        "TestFITSDiff_script",
        "test_wildcard"
      ]
    ]
  ],
  "test_not_quiet": [
    [
      "astropy/io/fits/tests/test_fitsdiff.py",
      [
        "TestFITSDiff_script",
        "test_not_quiet"
      ]
    ]
  ],
  "test_quiet": [
    [
      "astropy/io/fits/tests/test_fitsdiff.py",
      [
        "TestFITSDiff_script",
        "test_quiet"
      ]
    ]
  ],
  "test_path": [
    [
      "astropy/io/fits/tests/test_fitsdiff.py",
      [
        "TestFITSDiff_script",
        "test_path"
      ]
    ],
    [
      "astropy/tests/runner.py",
      [
        "TestRunner",
        "test_path"
      ]
    ]
  ],
  "test_ignore_hdus_report": [
    [
      "astropy/io/fits/tests/test_fitsdiff.py",
      [
        "TestFITSDiff_script",
        "test_ignore_hdus_report"
      ]
    ]
  ],
  "test_fitsdiff_openfile": [
    [
      "astropy/io/fits/tests/test_fitsdiff.py",
      [
        "test_fitsdiff_openfile"
      ]
    ]
  ],
  "test_file_exists": [
    [
      "astropy/io/fits/tests/test_fitsheader.py",
      [
        "TestFITSheader_script",
        "test_file_exists"
      ]
    ]
  ],
  "test_by_keyword": [
    [
      "astropy/io/fits/tests/test_fitsheader.py",
      [
        "TestFITSheader_script",
        "test_by_keyword"
      ]
    ]
  ],
  "test_by_extension": [
    [
      "astropy/io/fits/tests/test_fitsheader.py",
      [
        "TestFITSheader_script",
        "test_by_extension"
      ]
    ]
  ],
  "test_table": [
    [
      "astropy/io/fits/tests/test_fitsheader.py",
      [
        "TestFITSheader_script",
        "test_table"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/table/tests/test_table.py",
      [
        "test_table"
      ]
    ],
    [
      "astropy/io/votable/tests/table_test.py",
      [
        "test_table"
      ]
    ]
  ],
  "test_fitsort": [
    [
      "astropy/io/fits/tests/test_fitsheader.py",
      [
        "TestFITSheader_script",
        "test_fitsort"
      ]
    ]
  ],
  "test_dotkeyword": [
    [
      "astropy/io/fits/tests/test_fitsheader.py",
      [
        "TestFITSheader_script",
        "test_dotkeyword"
      ]
    ]
  ],
  "test_onefile": [
    [
      "astropy/io/fits/tests/test_fitsinfo.py",
      [
        "TestFitsinfo",
        "test_onefile"
      ]
    ]
  ],
  "test_multiplefiles": [
    [
      "astropy/io/fits/tests/test_fitsinfo.py",
      [
        "TestFitsinfo",
        "test_multiplefiles"
      ]
    ]
  ],
  "test_is_time_column_keyword": [
    [
      "astropy/io/fits/tests/test_fitstime.py",
      [
        "TestFitsTime",
        "test_is_time_column_keyword"
      ]
    ]
  ],
  "test_time_to_fits_loc": [
    [
      "astropy/io/fits/tests/test_fitstime.py",
      [
        "TestFitsTime",
        "test_time_to_fits_loc"
      ]
    ]
  ],
  "test_time_to_fits_serialize_method": [
    [
      "astropy/io/fits/tests/test_fitstime.py",
      [
        "TestFitsTime",
        "test_time_to_fits_serialize_method"
      ]
    ]
  ],
  "test_time_to_fits_header": [
    [
      "astropy/io/fits/tests/test_fitstime.py",
      [
        "TestFitsTime",
        "test_time_to_fits_header"
      ]
    ]
  ],
  "test_fits_to_time_meta": [
    [
      "astropy/io/fits/tests/test_fitstime.py",
      [
        "TestFitsTime",
        "test_fits_to_time_meta"
      ]
    ]
  ],
  "test_time_loc_unit": [
    [
      "astropy/io/fits/tests/test_fitstime.py",
      [
        "TestFitsTime",
        "test_time_loc_unit"
      ]
    ]
  ],
  "test_fits_to_time_index": [
    [
      "astropy/io/fits/tests/test_fitstime.py",
      [
        "TestFitsTime",
        "test_fits_to_time_index"
      ]
    ]
  ],
  "test_io_time_read_fits": [
    [
      "astropy/io/fits/tests/test_fitstime.py",
      [
        "TestFitsTime",
        "test_io_time_read_fits"
      ]
    ]
  ],
  "test_io_time_read_fits_datetime": [
    [
      "astropy/io/fits/tests/test_fitstime.py",
      [
        "TestFitsTime",
        "test_io_time_read_fits_datetime"
      ]
    ]
  ],
  "test_io_time_read_fits_location": [
    [
      "astropy/io/fits/tests/test_fitstime.py",
      [
        "TestFitsTime",
        "test_io_time_read_fits_location"
      ]
    ]
  ],
  "test_io_time_read_fits_scale": [
    [
      "astropy/io/fits/tests/test_fitstime.py",
      [
        "TestFitsTime",
        "test_io_time_read_fits_scale"
      ]
    ]
  ],
  "test_io_time_read_fits_location_warnings": [
    [
      "astropy/io/fits/tests/test_fitstime.py",
      [
        "TestFitsTime",
        "test_io_time_read_fits_location_warnings"
      ]
    ]
  ],
  "test_open": [
    [
      "astropy/io/fits/tests/test_groups.py",
      [
        "TestGroupsFunctions",
        "test_open"
      ]
    ],
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_open"
      ]
    ],
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_open"
      ]
    ],
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestFromERFA",
        "test_open"
      ]
    ]
  ],
  "test_open_groups_in_update_mode": [
    [
      "astropy/io/fits/tests/test_groups.py",
      [
        "TestGroupsFunctions",
        "test_open_groups_in_update_mode"
      ]
    ]
  ],
  "test_random_groups_data_update": [
    [
      "astropy/io/fits/tests/test_groups.py",
      [
        "TestGroupsFunctions",
        "test_random_groups_data_update"
      ]
    ]
  ],
  "test_parnames_round_trip": [
    [
      "astropy/io/fits/tests/test_groups.py",
      [
        "TestGroupsFunctions",
        "test_parnames_round_trip"
      ]
    ]
  ],
  "test_groupdata_slice": [
    [
      "astropy/io/fits/tests/test_groups.py",
      [
        "TestGroupsFunctions",
        "test_groupdata_slice"
      ]
    ]
  ],
  "test_group_slice": [
    [
      "astropy/io/fits/tests/test_groups.py",
      [
        "TestGroupsFunctions",
        "test_group_slice"
      ]
    ]
  ],
  "test_create_groupdata": [
    [
      "astropy/io/fits/tests/test_groups.py",
      [
        "TestGroupsFunctions",
        "test_create_groupdata"
      ]
    ]
  ],
  "test_duplicate_parameter": [
    [
      "astropy/io/fits/tests/test_groups.py",
      [
        "TestGroupsFunctions",
        "test_duplicate_parameter"
      ]
    ]
  ],
  "test_group_bad_naxis": [
    [
      "astropy/io/fits/tests/test_groups.py",
      [
        "TestGroupsFunctions",
        "test_group_bad_naxis"
      ]
    ]
  ],
  "test_update_name": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_update_name"
      ]
    ]
  ],
  "test_hdu_file_bytes": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_hdu_file_bytes"
      ]
    ]
  ],
  "test_fileinfo": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_hdulist_file_info",
        "test_fileinfo"
      ]
    ]
  ],
  "test_hdulist_file_info": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_hdulist_file_info"
      ]
    ]
  ],
  "test_create_from_multiple_primary": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_create_from_multiple_primary"
      ]
    ]
  ],
  "test_append_primary_to_empty_list": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_append_primary_to_empty_list"
      ]
    ]
  ],
  "test_append_extension_to_empty_list": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_append_extension_to_empty_list"
      ]
    ]
  ],
  "test_append_table_extension_to_empty_list": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_append_table_extension_to_empty_list"
      ]
    ]
  ],
  "test_append_groupshdu_to_empty_list": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_append_groupshdu_to_empty_list"
      ]
    ]
  ],
  "test_append_primary_to_non_empty_list": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_append_primary_to_non_empty_list"
      ]
    ]
  ],
  "test_append_extension_to_non_empty_list": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_append_extension_to_non_empty_list"
      ]
    ]
  ],
  "test_append_groupshdu_to_non_empty_list": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_append_groupshdu_to_non_empty_list"
      ]
    ]
  ],
  "test_insert_primary_to_empty_list": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_insert_primary_to_empty_list"
      ]
    ]
  ],
  "test_insert_extension_to_empty_list": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_insert_extension_to_empty_list"
      ]
    ]
  ],
  "test_insert_table_extension_to_empty_list": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_insert_table_extension_to_empty_list"
      ]
    ]
  ],
  "test_insert_groupshdu_to_empty_list": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_insert_groupshdu_to_empty_list"
      ]
    ]
  ],
  "test_insert_primary_to_non_empty_list": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_insert_primary_to_non_empty_list"
      ]
    ]
  ],
  "test_insert_extension_to_non_empty_list": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_insert_extension_to_non_empty_list"
      ]
    ]
  ],
  "test_insert_groupshdu_to_non_empty_list": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_insert_groupshdu_to_non_empty_list"
      ]
    ]
  ],
  "test_insert_groupshdu_to_begin_of_hdulist_with_groupshdu": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_insert_groupshdu_to_begin_of_hdulist_with_groupshdu"
      ]
    ]
  ],
  "test_insert_extension_to_primary_in_non_empty_list": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_insert_extension_to_primary_in_non_empty_list"
      ]
    ]
  ],
  "test_insert_image_extension_to_primary_in_non_empty_list": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_insert_image_extension_to_primary_in_non_empty_list"
      ]
    ]
  ],
  "test_filename": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_filename"
      ]
    ]
  ],
  "test_file_like": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_file_like"
      ]
    ]
  ],
  "test_file_like_2": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_file_like_2"
      ]
    ]
  ],
  "test_file_like_3": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_file_like_3"
      ]
    ]
  ],
  "test_shallow_copy": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_shallow_copy"
      ]
    ],
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "test_shallow_copy"
      ]
    ]
  ],
  "test_deep_copy": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_deep_copy"
      ]
    ]
  ],
  "test_new_hdu_extname": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_new_hdu_extname"
      ]
    ]
  ],
  "test_update_filelike": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_update_filelike"
      ]
    ]
  ],
  "test_flush_readonly": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_flush_readonly"
      ]
    ]
  ],
  "test_fix_extend_keyword": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_fix_extend_keyword"
      ]
    ]
  ],
  "test_fix_malformed_naxisj": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_fix_malformed_naxisj"
      ]
    ]
  ],
  "test_fix_wellformed_naxisj": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_fix_wellformed_naxisj"
      ]
    ]
  ],
  "test_new_hdulist_extend_keyword": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_new_hdulist_extend_keyword"
      ]
    ]
  ],
  "test_replace_memmaped_array": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_replace_memmaped_array"
      ]
    ]
  ],
  "test_open_file_with_bad_file_padding": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_open_file_with_bad_file_padding"
      ]
    ]
  ],
  "test_open_file_with_end_padding": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_open_file_with_end_padding"
      ]
    ]
  ],
  "test_open_file_with_bad_header_padding": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_open_file_with_bad_header_padding"
      ]
    ]
  ],
  "test_update_with_truncated_header": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_update_with_truncated_header"
      ]
    ]
  ],
  "test_update_resized_header": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_update_resized_header"
      ]
    ]
  ],
  "test_update_resized_header2": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_update_resized_header2"
      ]
    ]
  ],
  "test_fromstring": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_hdul_fromstring",
        "test_fromstring"
      ]
    ]
  ],
  "test_hdul_fromstring": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_hdul_fromstring"
      ]
    ]
  ],
  "test_save_backup": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_save_backup"
      ]
    ]
  ],
  "test": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_replace_mmap_data",
        "test"
      ]
    ],
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_replace_mmap_data_2",
        "test"
      ]
    ],
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "TestLinearConstraints",
        "test"
      ]
    ],
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline",
        "test__create_parameter",
        "Spline",
        "test"
      ]
    ],
    [
      "astropy/tests/runner.py",
      [
        "TestRunnerBase",
        "make_test_runner_in",
        "test"
      ]
    ],
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_deprecated_argument_in_kwargs",
        "test"
      ]
    ],
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_deprecated_argument_relaxed",
        "test"
      ]
    ]
  ],
  "test_replace_mmap_data": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_replace_mmap_data"
      ]
    ]
  ],
  "test_replace_mmap_data_2": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_replace_mmap_data_2"
      ]
    ]
  ],
  "test_extname_in_hdulist": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_extname_in_hdulist"
      ]
    ]
  ],
  "test_overwrite": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_overwrite"
      ]
    ]
  ],
  "test_invalid_hdu_key_in_contains": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_invalid_hdu_key_in_contains"
      ]
    ]
  ],
  "test_iteration_of_lazy_loaded_hdulist": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_iteration_of_lazy_loaded_hdulist"
      ]
    ]
  ],
  "test_read_non_standard_hdu": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_read_non_standard_hdu"
      ]
    ]
  ],
  "test_proper_error_raised_on_non_fits_file": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_proper_error_raised_on_non_fits_file"
      ]
    ]
  ],
  "test_proper_error_raised_on_invalid_fits_file": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_proper_error_raised_on_invalid_fits_file"
      ]
    ]
  ],
  "test_warning_raised_on_non_standard_simple_card": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_warning_raised_on_non_standard_simple_card"
      ]
    ]
  ],
  "test_proper_error_raised_on_non_fits_file_with_unicode": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_proper_error_raised_on_non_fits_file_with_unicode"
      ]
    ]
  ],
  "test_no_resource_warning_raised_on_non_fits_file": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_no_resource_warning_raised_on_non_fits_file"
      ]
    ]
  ],
  "test_pop_with_lazy_load": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_pop_with_lazy_load"
      ]
    ]
  ],
  "test_pop_extname": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_pop_extname"
      ]
    ]
  ],
  "test_write_hdulist_to_stream": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_write_hdulist_to_stream"
      ]
    ]
  ],
  "test_output_verify": [
    [
      "astropy/io/fits/tests/test_hdulist.py",
      [
        "TestHDUListFunctions",
        "test_output_verify"
      ]
    ]
  ],
  "test_init_with_header": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "test_init_with_header"
      ]
    ]
  ],
  "test_init_with_dict": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "test_init_with_dict"
      ]
    ]
  ],
  "test_init_with_ordereddict": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "test_init_with_ordereddict"
      ]
    ]
  ],
  "test_rename_keyword": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_rename_keyword"
      ]
    ]
  ],
  "test_indexing_case": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_indexing_case"
      ]
    ]
  ],
  "test_card_constructor_default_args": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_card_constructor_default_args"
      ]
    ]
  ],
  "test_card_from_bytes": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_card_from_bytes"
      ]
    ]
  ],
  "test_string_value_card": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_string_value_card"
      ]
    ]
  ],
  "test_boolean_value_card": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_boolean_value_card"
      ]
    ]
  ],
  "test_long_integer_value_card": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_long_integer_value_card"
      ]
    ]
  ],
  "test_floating_point_value_card": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_floating_point_value_card"
      ]
    ]
  ],
  "test_complex_value_card": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_complex_value_card"
      ]
    ]
  ],
  "test_card_image_constructed_too_long": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_card_image_constructed_too_long"
      ]
    ]
  ],
  "test_constructor_filter_illegal_data_structures": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_constructor_filter_illegal_data_structures"
      ]
    ]
  ],
  "test_keyword_too_long": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_keyword_too_long"
      ]
    ]
  ],
  "test_illegal_characters_in_key": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_illegal_characters_in_key"
      ]
    ]
  ],
  "test_add_history": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_add_history"
      ]
    ]
  ],
  "test_add_blank": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_add_blank"
      ]
    ]
  ],
  "test_update": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_update"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestUpdate",
        "test_update"
      ]
    ],
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestUpdateLeapSeconds",
        "test_update"
      ]
    ]
  ],
  "test_update_comment": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_update_comment"
      ]
    ]
  ],
  "test_commentary_cards": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_commentary_cards"
      ]
    ]
  ],
  "test_commentary_card_created_by_fromstring": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_commentary_card_created_by_fromstring"
      ]
    ]
  ],
  "test_commentary_card_will_not_parse_numerical_value": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_commentary_card_will_not_parse_numerical_value"
      ]
    ]
  ],
  "test_equal_sign_after_column8": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_equal_sign_after_column8"
      ]
    ]
  ],
  "test_blank_keyword": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_blank_keyword"
      ]
    ]
  ],
  "test_specify_undefined_value": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_specify_undefined_value"
      ]
    ]
  ],
  "test_complex_number_using_string_input": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_complex_number_using_string_input"
      ]
    ]
  ],
  "test_fixable_non_standard_fits_card": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_fixable_non_standard_fits_card"
      ]
    ]
  ],
  "test_fixable_non_fsc": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_fixable_non_fsc"
      ]
    ]
  ],
  "test_undefined_value_using_string_input": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_undefined_value_using_string_input"
      ]
    ]
  ],
  "test_undefined_keys_values": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_undefined_keys_values"
      ]
    ]
  ],
  "test_mislocated_equal_sign": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_mislocated_equal_sign"
      ]
    ]
  ],
  "test_equal_only_up_to_column_10": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_equal_only_up_to_column_10"
      ]
    ]
  ],
  "test_verify_invalid_equal_sign": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_verify_invalid_equal_sign"
      ]
    ]
  ],
  "test_fix_invalid_equal_sign": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_fix_invalid_equal_sign"
      ]
    ]
  ],
  "test_long_string_value": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_long_string_value"
      ]
    ]
  ],
  "test_long_string_value_with_multiple_long_words": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_long_string_value_with_multiple_long_words"
      ]
    ]
  ],
  "test_long_unicode_string": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_long_unicode_string"
      ]
    ]
  ],
  "test_long_string_repr": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_long_string_repr"
      ]
    ]
  ],
  "test_blank_keyword_long_value": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_blank_keyword_long_value"
      ]
    ]
  ],
  "test_long_string_from_file": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_long_string_from_file"
      ]
    ]
  ],
  "test_word_in_long_string_too_long": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_word_in_long_string_too_long"
      ]
    ]
  ],
  "test_long_string_value_via_fromstring": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_long_string_value_via_fromstring"
      ]
    ]
  ],
  "test_continue_card_with_equals_in_value": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_continue_card_with_equals_in_value"
      ]
    ]
  ],
  "test_final_continue_card_lacks_ampersand": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_final_continue_card_lacks_ampersand"
      ]
    ]
  ],
  "test_final_continue_card_ampersand_removal_on_long_comments": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_final_continue_card_ampersand_removal_on_long_comments"
      ]
    ]
  ],
  "test_hierarch_card_creation": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_hierarch_card_creation"
      ]
    ]
  ],
  "test_hierarch_with_abbrev_value_indicator": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_hierarch_with_abbrev_value_indicator"
      ]
    ]
  ],
  "test_hierarch_not_warn": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_hierarch_not_warn"
      ]
    ]
  ],
  "test_hierarch_keyword_whitespace": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_hierarch_keyword_whitespace"
      ]
    ]
  ],
  "test_verify_mixed_case_hierarch": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_verify_mixed_case_hierarch"
      ]
    ]
  ],
  "test_missing_keyword": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_missing_keyword"
      ]
    ]
  ],
  "test_hierarch_card_lookup": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_hierarch_card_lookup"
      ]
    ]
  ],
  "test_hierarch_card_delete": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_hierarch_card_delete"
      ]
    ]
  ],
  "test_hierarch_card_insert_delete": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_hierarch_card_insert_delete"
      ]
    ]
  ],
  "test_hierarch_create_and_update": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_hierarch_create_and_update"
      ]
    ]
  ],
  "test_short_hierarch_create_and_update": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_short_hierarch_create_and_update"
      ]
    ]
  ],
  "test_header_setitem_invalid": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_setitem_invalid"
      ]
    ]
  ],
  "test_header_setitem_1tuple": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_setitem_1tuple"
      ]
    ]
  ],
  "test_header_setitem_2tuple": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_setitem_2tuple"
      ]
    ]
  ],
  "test_header_set_value_to_none": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_set_value_to_none"
      ]
    ]
  ],
  "test_set_comment_only": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_set_comment_only"
      ]
    ]
  ],
  "test_header_iter": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_iter"
      ]
    ]
  ],
  "test_header_slice": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_slice"
      ]
    ]
  ],
  "test_header_slice_assignment": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_slice_assignment"
      ]
    ]
  ],
  "test_header_slice_delete": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_slice_delete"
      ]
    ]
  ],
  "test_wildcard_slice": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_wildcard_slice"
      ]
    ]
  ],
  "test_wildcard_with_hyphen": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_wildcard_with_hyphen"
      ]
    ]
  ],
  "test_wildcard_slice_assignment": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_wildcard_slice_assignment"
      ]
    ]
  ],
  "test_wildcard_slice_deletion": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_wildcard_slice_deletion"
      ]
    ]
  ],
  "test_header_history": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_history"
      ]
    ]
  ],
  "test_header_clear": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_clear"
      ]
    ]
  ],
  "test_header_fromkeys": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_fromkeys"
      ]
    ]
  ],
  "test_header_fromkeys_with_value": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_fromkeys_with_value"
      ]
    ]
  ],
  "test_header_fromkeys_with_value_and_comment": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_fromkeys_with_value_and_comment"
      ]
    ]
  ],
  "test_header_fromkeys_with_duplicates": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_fromkeys_with_duplicates"
      ]
    ]
  ],
  "test_header_items": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_items"
      ]
    ]
  ],
  "test_header_iterkeys": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_iterkeys"
      ]
    ]
  ],
  "test_header_itervalues": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_itervalues"
      ]
    ]
  ],
  "test_header_keys": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_keys"
      ]
    ]
  ],
  "test_header_list_like_pop": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_list_like_pop"
      ]
    ]
  ],
  "test_header_dict_like_pop": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_dict_like_pop"
      ]
    ]
  ],
  "test_popitem": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_popitem"
      ]
    ]
  ],
  "test_setdefault": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_setdefault"
      ]
    ]
  ],
  "test_update_from_dict": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_update_from_dict"
      ]
    ]
  ],
  "test_update_from_iterable": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_update_from_iterable"
      ]
    ]
  ],
  "test_header_extend": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_extend"
      ]
    ]
  ],
  "test_header_extend_unique": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_extend_unique"
      ]
    ]
  ],
  "test_header_extend_unique_commentary": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_extend_unique_commentary"
      ]
    ]
  ],
  "test_header_extend_update": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_extend_update"
      ]
    ]
  ],
  "test_header_extend_update_commentary": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_extend_update_commentary"
      ]
    ]
  ],
  "test_header_extend_exact": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_extend_exact"
      ]
    ]
  ],
  "test_header_count": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_count"
      ]
    ]
  ],
  "test_header_append_use_blanks": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_append_use_blanks"
      ]
    ]
  ],
  "test_header_append_keyword_only": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_append_keyword_only"
      ]
    ]
  ],
  "test_header_insert_use_blanks": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_insert_use_blanks"
      ]
    ]
  ],
  "test_header_insert_before_keyword": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_insert_before_keyword"
      ]
    ]
  ],
  "test_remove": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_remove"
      ]
    ],
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestColumnsShowHide",
        "test_remove"
      ]
    ]
  ],
  "test_header_comments": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_comments"
      ]
    ]
  ],
  "test_comment_slices_and_filters": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_comment_slices_and_filters"
      ]
    ]
  ],
  "test_comment_slice_filter_assign": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_comment_slice_filter_assign"
      ]
    ]
  ],
  "test_commentary_slicing": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_commentary_slicing"
      ]
    ]
  ],
  "test_update_commentary": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_update_commentary"
      ]
    ]
  ],
  "test_commentary_comparison": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_commentary_comparison"
      ]
    ]
  ],
  "test_long_commentary_card": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_long_commentary_card"
      ]
    ]
  ],
  "test_totxtfile": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_totxtfile"
      ]
    ]
  ],
  "test_fromfile": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_fromfile"
      ]
    ]
  ],
  "test_header_fromtextfile": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_fromtextfile"
      ]
    ]
  ],
  "test_header_fromtextfile_with_end_card": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_fromtextfile_with_end_card"
      ]
    ]
  ],
  "test_append_end_card": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_append_end_card"
      ]
    ]
  ],
  "invalid_header": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_invalid_end_cards",
        "invalid_header"
      ]
    ]
  ],
  "test_invalid_end_cards": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_invalid_end_cards"
      ]
    ]
  ],
  "test_invalid_characters": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_invalid_characters"
      ]
    ]
  ],
  "test_unnecessary_move": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_unnecessary_move"
      ]
    ]
  ],
  "test_invalid_float_cards": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_invalid_float_cards"
      ]
    ]
  ],
  "test_invalid_float_cards2": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_invalid_float_cards2"
      ]
    ]
  ],
  "test_leading_zeros": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_leading_zeros"
      ]
    ]
  ],
  "test_assign_boolean": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_assign_boolean"
      ]
    ]
  ],
  "test_header_method_keyword_normalization": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_method_keyword_normalization"
      ]
    ]
  ],
  "test_end_in_comment": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_end_in_comment"
      ]
    ]
  ],
  "assign": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_assign_unicode",
        "assign"
      ]
    ]
  ],
  "test_assign_unicode": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_assign_unicode"
      ]
    ]
  ],
  "test_assign_non_ascii": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_assign_non_ascii"
      ]
    ]
  ],
  "test_header_strip_whitespace": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_strip_whitespace"
      ]
    ]
  ],
  "test_keep_duplicate_history_in_orig_header": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_keep_duplicate_history_in_orig_header"
      ]
    ]
  ],
  "test_invalid_keyword_cards": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_invalid_keyword_cards"
      ]
    ]
  ],
  "test_fix_hierarch_with_invalid_value": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_fix_hierarch_with_invalid_value"
      ]
    ]
  ],
  "test_assign_inf_nan": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_assign_inf_nan"
      ]
    ]
  ],
  "test_update_bool": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_update_bool"
      ]
    ]
  ],
  "test_update_numeric": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_update_numeric"
      ]
    ]
  ],
  "test_newlines_in_commentary": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_newlines_in_commentary"
      ]
    ]
  ],
  "test_long_commentary_card_appended_to_header": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_long_commentary_card_appended_to_header"
      ]
    ]
  ],
  "test_header_fromstring_bytes": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_header_fromstring_bytes"
      ]
    ]
  ],
  "test_set_keyword_with_space": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_set_keyword_with_space"
      ]
    ]
  ],
  "test_strip": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_strip"
      ]
    ]
  ],
  "test_update_invalid_card": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_update_invalid_card"
      ]
    ]
  ],
  "test_index_numpy_int": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestHeaderFunctions",
        "test_index_numpy_int"
      ]
    ]
  ],
  "test_initialize_rvkc": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestRecordValuedKeywordCards",
        "test_initialize_rvkc"
      ]
    ]
  ],
  "test_parse_field_specifier": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestRecordValuedKeywordCards",
        "test_parse_field_specifier"
      ]
    ]
  ],
  "test_update_field_specifier": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestRecordValuedKeywordCards",
        "test_update_field_specifier"
      ]
    ]
  ],
  "test_field_specifier_case_senstivity": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestRecordValuedKeywordCards",
        "test_field_specifier_case_senstivity"
      ]
    ]
  ],
  "test_get_rvkc_by_index": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestRecordValuedKeywordCards",
        "test_get_rvkc_by_index"
      ]
    ]
  ],
  "test_get_rvkc_by_keyword": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestRecordValuedKeywordCards",
        "test_get_rvkc_by_keyword"
      ]
    ]
  ],
  "test_get_rvkc_by_keyword_and_field_specifier": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestRecordValuedKeywordCards",
        "test_get_rvkc_by_keyword_and_field_specifier"
      ]
    ]
  ],
  "test_access_nonexistent_rvkc": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestRecordValuedKeywordCards",
        "test_access_nonexistent_rvkc"
      ]
    ]
  ],
  "test_update_rvkc": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestRecordValuedKeywordCards",
        "test_update_rvkc"
      ]
    ]
  ],
  "test_update_rvkc_2": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestRecordValuedKeywordCards",
        "test_update_rvkc_2"
      ]
    ]
  ],
  "test_raw_keyword_value": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestRecordValuedKeywordCards",
        "test_raw_keyword_value"
      ]
    ]
  ],
  "test_rvkc_insert_after": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestRecordValuedKeywordCards",
        "test_rvkc_insert_after"
      ]
    ]
  ],
  "test_rvkc_delete": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestRecordValuedKeywordCards",
        "test_rvkc_delete"
      ]
    ]
  ],
  "test_pattern_matching_keys": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestRecordValuedKeywordCards",
        "test_pattern_matching_keys"
      ]
    ]
  ],
  "test_pattern_matching_key_deletion": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestRecordValuedKeywordCards",
        "test_pattern_matching_key_deletion"
      ]
    ]
  ],
  "test_successive_pattern_matching": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestRecordValuedKeywordCards",
        "test_successive_pattern_matching"
      ]
    ]
  ],
  "test_rvkc_in_cardlist_keys": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestRecordValuedKeywordCards",
        "test_rvkc_in_cardlist_keys"
      ]
    ]
  ],
  "test_rvkc_in_cardlist_values": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestRecordValuedKeywordCards",
        "test_rvkc_in_cardlist_values"
      ]
    ]
  ],
  "test_rvkc_value_attribute": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestRecordValuedKeywordCards",
        "test_rvkc_value_attribute"
      ]
    ]
  ],
  "test_overly_permissive_parsing": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestRecordValuedKeywordCards",
        "test_overly_permissive_parsing"
      ]
    ]
  ],
  "test_overly_aggressive_rvkc_lookup": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestRecordValuedKeywordCards",
        "test_overly_aggressive_rvkc_lookup"
      ]
    ]
  ],
  "test_fitsheader_script": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestRecordValuedKeywordCards",
        "test_fitsheader_script"
      ]
    ]
  ],
  "test_fitsheader_table_feature": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestRecordValuedKeywordCards",
        "test_fitsheader_table_feature"
      ]
    ]
  ],
  "test_hdu_writeto_mode": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "TestRecordValuedKeywordCards",
        "test_hdu_writeto_mode"
      ]
    ]
  ],
  "test_subclass": [
    [
      "astropy/io/fits/tests/test_header.py",
      [
        "test_subclass"
      ]
    ],
    [
      "astropy/table/tests/test_column.py",
      [
        "TestColumn",
        "test_subclass"
      ]
    ],
    [
      "astropy/table/tests/test_row.py",
      [
        "TestRow",
        "test_subclass"
      ]
    ],
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_subclass"
      ]
    ],
    [
      "astropy/wcs/tests/test_pickle.py",
      [
        "test_subclass"
      ]
    ]
  ],
  "test_constructor_name_arg": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_constructor_name_arg"
      ]
    ],
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_constructor_name_arg"
      ]
    ]
  ],
  "assert_ver_is": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_constructor_ver_arg",
        "assert_ver_is"
      ]
    ]
  ],
  "test_constructor_ver_arg": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_constructor_ver_arg"
      ]
    ],
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_constructor_ver_arg"
      ]
    ]
  ],
  "test_constructor_copies_header": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_constructor_copies_header"
      ]
    ],
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_constructor_copies_header"
      ]
    ]
  ],
  "test_open_2": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_open_2"
      ]
    ]
  ],
  "test_open_3": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_open_3"
      ]
    ]
  ],
  "test_fortran_array": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_fortran_array"
      ]
    ]
  ],
  "test_fortran_array_non_contiguous": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_fortran_array_non_contiguous"
      ]
    ]
  ],
  "test_primary_with_extname": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_primary_with_extname"
      ]
    ]
  ],
  "test_io_manipulation": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_io_manipulation"
      ]
    ]
  ],
  "test_memory_mapping": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_memory_mapping"
      ]
    ]
  ],
  "test_verification_on_output": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_verification_on_output"
      ]
    ]
  ],
  "test_section_data_single": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_section_data_single"
      ]
    ]
  ],
  "test_section_data_square": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_section_data_square"
      ]
    ]
  ],
  "test_section_data_cube": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_section_data_cube"
      ]
    ]
  ],
  "test_section_data_four": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_section_data_four"
      ]
    ]
  ],
  "test_section_data_scaled": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_section_data_scaled"
      ]
    ]
  ],
  "test_do_not_scale_image_data": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_do_not_scale_image_data"
      ]
    ]
  ],
  "test_append_uint_data": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_append_uint_data"
      ]
    ]
  ],
  "test_scale_with_explicit_bzero_bscale": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_scale_with_explicit_bzero_bscale"
      ]
    ]
  ],
  "test_uint_header_consistency": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_uint_header_consistency"
      ]
    ]
  ],
  "test_uint_header_keywords_removed_after_bitpix_change": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_uint_header_keywords_removed_after_bitpix_change"
      ]
    ]
  ],
  "test_blanks": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_blanks"
      ]
    ]
  ],
  "test_invalid_blanks": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_invalid_blanks"
      ]
    ]
  ],
  "test_scale_back_with_blanks": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_scale_back_with_blanks"
      ]
    ]
  ],
  "test_bzero_with_floats": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_bzero_with_floats"
      ]
    ]
  ],
  "test_rewriting_large_scaled_image": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_rewriting_large_scaled_image"
      ]
    ]
  ],
  "test_image_update_header": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_image_update_header"
      ]
    ]
  ],
  "test_open_scaled_in_update_mode": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_open_scaled_in_update_mode"
      ]
    ]
  ],
  "test_scale_back": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_scale_back"
      ]
    ]
  ],
  "test_image_none": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_image_none"
      ]
    ]
  ],
  "test_invalid_blank": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_invalid_blank"
      ]
    ]
  ],
  "test_scaled_image_fromfile": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_scaled_image_fromfile"
      ]
    ]
  ],
  "test_set_data": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_set_data"
      ]
    ]
  ],
  "test_scale_bzero_with_int_data": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_scale_bzero_with_int_data"
      ]
    ]
  ],
  "test_scale_back_uint_assignment": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_scale_back_uint_assignment"
      ]
    ]
  ],
  "test_hdu_creation_with_scalar": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestImageFunctions",
        "test_hdu_creation_with_scalar"
      ]
    ]
  ],
  "test_empty": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_empty"
      ]
    ],
    [
      "astropy/wcs/tests/test_auxprm.py",
      [
        "test_empty"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "test_empty"
      ]
    ]
  ],
  "test_comp_image": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_comp_image"
      ]
    ]
  ],
  "test_comp_image_quantize_level": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_comp_image_quantize_level"
      ]
    ]
  ],
  "test_comp_image_hcompression_1_invalid_data": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_comp_image_hcompression_1_invalid_data"
      ]
    ]
  ],
  "test_comp_image_hcompress_image_stack": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_comp_image_hcompress_image_stack"
      ]
    ]
  ],
  "test_subtractive_dither_seed": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_subtractive_dither_seed"
      ]
    ]
  ],
  "test_disable_image_compression": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_disable_image_compression"
      ]
    ]
  ],
  "test_open_comp_image_in_update_mode": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_open_comp_image_in_update_mode"
      ]
    ]
  ],
  "test_open_scaled_in_update_mode_compressed": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_open_scaled_in_update_mode_compressed"
      ]
    ]
  ],
  "test_write_comp_hdu_direct_from_existing": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_write_comp_hdu_direct_from_existing"
      ]
    ]
  ],
  "test_rewriting_large_scaled_image_compressed": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_rewriting_large_scaled_image_compressed"
      ]
    ]
  ],
  "test_scale_back_compressed": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_scale_back_compressed"
      ]
    ]
  ],
  "test_lossless_gzip_compression": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_lossless_gzip_compression"
      ]
    ]
  ],
  "test_compression_column_tforms": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_compression_column_tforms"
      ]
    ]
  ],
  "test_compression_update_header": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_compression_update_header"
      ]
    ]
  ],
  "test_compression_update_header_with_reserved": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_compression_update_header_with_reserved"
      ]
    ]
  ],
  "test_compression_header_append": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_compression_header_append"
      ]
    ]
  ],
  "test_compression_header_append2": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_compression_header_append2"
      ]
    ]
  ],
  "test_compression_header_insert": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_compression_header_insert"
      ]
    ]
  ],
  "test_compression_header_set_before_after": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_compression_header_set_before_after"
      ]
    ]
  ],
  "test_compression_header_append_commentary": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_compression_header_append_commentary"
      ]
    ]
  ],
  "test_compression_with_gzip_column": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_compression_with_gzip_column"
      ]
    ]
  ],
  "test_duplicate_compression_header_keywords": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_duplicate_compression_header_keywords"
      ]
    ]
  ],
  "test_scale_bzero_with_compressed_int_data": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_scale_bzero_with_compressed_int_data"
      ]
    ]
  ],
  "test_scale_back_compressed_uint_assignment": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_scale_back_compressed_uint_assignment"
      ]
    ]
  ],
  "test_compressed_header_missing_znaxis": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_compressed_header_missing_znaxis"
      ]
    ]
  ],
  "test_compressed_header_double_extname": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_compressed_header_double_extname"
      ]
    ]
  ],
  "test_compressed_header_extname": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_compressed_header_extname"
      ]
    ]
  ],
  "test_compressed_header_minimal": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_compressed_header_minimal"
      ]
    ]
  ],
  "test_compressed_scaled_float": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_compressed_scaled_float"
      ]
    ]
  ],
  "test_compressed_integers": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_compressed_integers"
      ]
    ]
  ],
  "test_write_non_contiguous_data": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_write_non_contiguous_data"
      ]
    ]
  ],
  "test_slice_and_write_comp_hdu": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "TestCompressedImage",
        "test_slice_and_write_comp_hdu"
      ]
    ]
  ],
  "test_comphdu_bscale": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "test_comphdu_bscale"
      ]
    ]
  ],
  "test_scale_implicit_casting": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "test_scale_implicit_casting"
      ]
    ]
  ],
  "test_bzero_implicit_casting_compressed": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "test_bzero_implicit_casting_compressed"
      ]
    ]
  ],
  "test_bzero_mishandled_info": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "test_bzero_mishandled_info"
      ]
    ]
  ],
  "test_image_write_readonly": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "test_image_write_readonly"
      ]
    ]
  ],
  "test_int8": [
    [
      "astropy/io/fits/tests/test_image.py",
      [
        "test_int8"
      ]
    ]
  ],
  "dask_array_in_mem": [
    [
      "astropy/io/fits/tests/test_image_dask.py",
      [
        "dask_array_in_mem"
      ]
    ]
  ],
  "test_construct_image_hdu": [
    [
      "astropy/io/fits/tests/test_image_dask.py",
      [
        "test_construct_image_hdu"
      ]
    ]
  ],
  "test_construct_hdulist": [
    [
      "astropy/io/fits/tests/test_image_dask.py",
      [
        "test_construct_hdulist"
      ]
    ]
  ],
  "test_save_primary_hdu": [
    [
      "astropy/io/fits/tests/test_image_dask.py",
      [
        "test_save_primary_hdu"
      ]
    ]
  ],
  "test_save_image_hdu": [
    [
      "astropy/io/fits/tests/test_image_dask.py",
      [
        "test_save_image_hdu"
      ]
    ]
  ],
  "test_save_hdulist": [
    [
      "astropy/io/fits/tests/test_image_dask.py",
      [
        "test_save_hdulist"
      ]
    ]
  ],
  "test_long_header": [
    [
      "astropy/io/fits/tests/test_image_dask.py",
      [
        "test_long_header"
      ]
    ]
  ],
  "test_dtypes": [
    [
      "astropy/io/fits/tests/test_image_dask.py",
      [
        "test_dtypes"
      ]
    ]
  ],
  "test_scaled": [
    [
      "astropy/io/fits/tests/test_image_dask.py",
      [
        "test_scaled"
      ]
    ]
  ],
  "test_scaled_minmax": [
    [
      "astropy/io/fits/tests/test_image_dask.py",
      [
        "test_scaled_minmax"
      ]
    ]
  ],
  "test_file_handle": [
    [
      "astropy/io/fits/tests/test_image_dask.py",
      [
        "test_file_handle"
      ]
    ]
  ],
  "test_create_fitshdu": [
    [
      "astropy/io/fits/tests/test_nonstandard.py",
      [
        "TestNonstandardHdus",
        "test_create_fitshdu"
      ]
    ]
  ],
  "test_create_fitshdu_with_compression": [
    [
      "astropy/io/fits/tests/test_nonstandard.py",
      [
        "TestNonstandardHdus",
        "test_create_fitshdu_with_compression"
      ]
    ]
  ],
  "test_create_fitshdu_from_filename": [
    [
      "astropy/io/fits/tests/test_nonstandard.py",
      [
        "TestNonstandardHdus",
        "test_create_fitshdu_from_filename"
      ]
    ]
  ],
  "_test_create_fitshdu": [
    [
      "astropy/io/fits/tests/test_nonstandard.py",
      [
        "TestNonstandardHdus",
        "_test_create_fitshdu"
      ]
    ]
  ],
  "compare_arrays": [
    [
      "astropy/io/fits/tests/test_structured.py",
      [
        "compare_arrays"
      ]
    ]
  ],
  "get_test_data": [
    [
      "astropy/io/fits/tests/test_structured.py",
      [
        "get_test_data"
      ]
    ]
  ],
  "test_structured": [
    [
      "astropy/io/fits/tests/test_structured.py",
      [
        "TestStructured",
        "test_structured"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayInitialization",
        "test_structured"
      ]
    ]
  ],
  "comparefloats": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "comparefloats"
      ]
    ]
  ],
  "comparerecords": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "comparerecords"
      ]
    ]
  ],
  "_assert_attr_col": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "_assert_attr_col"
      ]
    ]
  ],
  "test_binary_table": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_binary_table"
      ]
    ]
  ],
  "test_ascii_table": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_ascii_table"
      ]
    ]
  ],
  "test_endianness": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_endianness"
      ]
    ]
  ],
  "test_column_endianness": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_column_endianness"
      ]
    ]
  ],
  "test_recarray_to_bintablehdu": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_recarray_to_bintablehdu"
      ]
    ]
  ],
  "test_numpy_ndarray_to_bintablehdu": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_numpy_ndarray_to_bintablehdu"
      ]
    ]
  ],
  "test_numpy_ndarray_to_bintablehdu_with_unicode": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_numpy_ndarray_to_bintablehdu_with_unicode"
      ]
    ]
  ],
  "test_new_table_from_recarray": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_new_table_from_recarray"
      ]
    ]
  ],
  "test_new_fitsrec": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_new_fitsrec"
      ]
    ]
  ],
  "test_appending_a_column": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_appending_a_column"
      ]
    ]
  ],
  "test_adding_a_column": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_adding_a_column"
      ]
    ]
  ],
  "test_adding_a_column_inplace": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_adding_a_column_inplace"
      ]
    ]
  ],
  "test_adding_a_column_to_file": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_adding_a_column_to_file"
      ]
    ]
  ],
  "test_removing_a_column_inplace": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_removing_a_column_inplace"
      ]
    ]
  ],
  "test_removing_a_column_from_file": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_removing_a_column_from_file"
      ]
    ]
  ],
  "test_merge_tables": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_merge_tables"
      ]
    ]
  ],
  "test_modify_column_attributes": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_modify_column_attributes"
      ]
    ]
  ],
  "test_multidimension_table_from_numpy_rec_columns": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_multidimension_table_from_numpy_rec_columns"
      ]
    ]
  ],
  "test_mask_array": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_mask_array"
      ]
    ]
  ],
  "test_slice_a_row": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_slice_a_row"
      ]
    ]
  ],
  "test_fits_record_len": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_fits_record_len"
      ]
    ]
  ],
  "test_add_data_by_rows": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_add_data_by_rows"
      ]
    ]
  ],
  "test_assign_multiple_rows_to_table": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_assign_multiple_rows_to_table"
      ]
    ]
  ],
  "test_verify_data_references": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_verify_data_references"
      ]
    ]
  ],
  "test_new_table_with_ndarray": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_new_table_with_ndarray"
      ]
    ]
  ],
  "test_new_table_with_fits_rec": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_new_table_with_fits_rec"
      ]
    ]
  ],
  "test_bin_table_hdu_constructor": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_bin_table_hdu_constructor"
      ]
    ]
  ],
  "test_unicode_colname": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_unicode_colname"
      ]
    ]
  ],
  "test_bin_table_with_logical_array": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_bin_table_with_logical_array"
      ]
    ]
  ],
  "test_fits_rec_column_access": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_fits_rec_column_access"
      ]
    ]
  ],
  "test_table_with_zero_width_column": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_table_with_zero_width_column"
      ]
    ]
  ],
  "test_string_column_padding": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_string_column_padding"
      ]
    ]
  ],
  "test_multi_dimensional_columns": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_multi_dimensional_columns"
      ]
    ]
  ],
  "test_oned_array_single_element": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_oned_array_single_element"
      ]
    ]
  ],
  "test_dims_and_roundtrip": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_bin_table_init_from_string_array_column",
        "test_dims_and_roundtrip"
      ]
    ]
  ],
  "test_bin_table_init_from_string_array_column": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_bin_table_init_from_string_array_column"
      ]
    ]
  ],
  "test_columns_with_truncating_tdim": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_columns_with_truncating_tdim"
      ]
    ]
  ],
  "test_string_array_round_trip": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_string_array_round_trip"
      ]
    ]
  ],
  "test_new_table_with_nd_column": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_new_table_with_nd_column"
      ]
    ]
  ],
  "test_mismatched_tform_and_tdim": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_mismatched_tform_and_tdim"
      ]
    ]
  ],
  "test_tdim_of_size_one": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_tdim_of_size_one"
      ]
    ]
  ],
  "test_array_slicing": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_array_slicing"
      ]
    ]
  ],
  "test_array_broadcasting": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_array_broadcasting"
      ]
    ]
  ],
  "test_array_slicing_readonly": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_array_slicing_readonly"
      ]
    ]
  ],
  "test_dump_load_array_colums": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_dump_load_array_colums"
      ]
    ]
  ],
  "test_load_guess_format": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_load_guess_format"
      ]
    ]
  ],
  "test_attribute_field_shadowing": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_attribute_field_shadowing"
      ]
    ]
  ],
  "test_table_from_bool_fields": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_table_from_bool_fields"
      ]
    ]
  ],
  "test_table_from_bool_fields2": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_table_from_bool_fields2"
      ]
    ]
  ],
  "test_bool_column_update": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_bool_column_update"
      ]
    ]
  ],
  "test_missing_tnull": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_missing_tnull"
      ]
    ]
  ],
  "test_blank_field_zero": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_blank_field_zero"
      ]
    ]
  ],
  "test_column_array_type_mismatch": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_column_array_type_mismatch"
      ]
    ],
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestColumnFunctions",
        "test_column_array_type_mismatch"
      ]
    ]
  ],
  "test_table_none": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_table_none"
      ]
    ]
  ],
  "test_unncessary_table_load": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_unncessary_table_load"
      ]
    ]
  ],
  "test_table_from_columns_of_other_table": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_table_from_columns_of_other_table"
      ]
    ]
  ],
  "test_bintable_to_asciitable": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_bintable_to_asciitable"
      ]
    ]
  ],
  "test_pickle": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_pickle"
      ]
    ],
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestColumnFunctions",
        "test_pickle"
      ]
    ],
    [
      "astropy/time/tests/test_pickle.py",
      [
        "TestPickle",
        "test_pickle"
      ]
    ],
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "test_pickle"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitsCopyPickle",
        "test_pickle"
      ]
    ]
  ],
  "test_zero_length_table": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_zero_length_table"
      ]
    ]
  ],
  "test_dim_column_byte_order_mismatch": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_dim_column_byte_order_mismatch"
      ]
    ]
  ],
  "test_fits_rec_from_existing": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_fits_rec_from_existing"
      ]
    ]
  ],
  "test_update_string_column_inplace": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_update_string_column_inplace"
      ]
    ]
  ],
  "test_reference_leak": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_reference_leak"
      ]
    ]
  ],
  "test_reference_leak2": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_reference_leak2"
      ]
    ]
  ],
  "test_dump_overwrite": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_dump_overwrite"
      ]
    ]
  ],
  "test_pseudo_unsigned_ints": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_pseudo_unsigned_ints"
      ]
    ]
  ],
  "test_column_with_scaling": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_column_with_scaling"
      ]
    ]
  ],
  "test_ascii_inttypes": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestTableFunctions",
        "test_ascii_inttypes"
      ]
    ]
  ],
  "_refcounting": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "_refcounting"
      ]
    ]
  ],
  "test_variable_length_columns": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestVLATables",
        "test_variable_length_columns"
      ]
    ]
  ],
  "test_extend_variable_length_array": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestVLATables",
        "test_extend_variable_length_array"
      ]
    ]
  ],
  "test_variable_length_table_format_pd_from_object_array": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestVLATables",
        "test_variable_length_table_format_pd_from_object_array"
      ]
    ]
  ],
  "test_variable_length_table_format_pd_from_list": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestVLATables",
        "test_variable_length_table_format_pd_from_list"
      ]
    ]
  ],
  "test_variable_length_table_format_pa_from_object_array": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestVLATables",
        "test_variable_length_table_format_pa_from_object_array"
      ]
    ]
  ],
  "test_variable_length_table_format_pa_from_list": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestVLATables",
        "test_variable_length_table_format_pa_from_list"
      ]
    ]
  ],
  "test_getdata_vla": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestVLATables",
        "test_getdata_vla"
      ]
    ]
  ],
  "test_copy_vla": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestVLATables",
        "test_copy_vla"
      ]
    ]
  ],
  "test_vla_with_gap": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestVLATables",
        "test_vla_with_gap"
      ]
    ]
  ],
  "test_tolist": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestVLATables",
        "test_tolist"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "test_tolist"
      ]
    ]
  ],
  "test_tolist_from_file": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestVLATables",
        "test_tolist_from_file"
      ]
    ]
  ],
  "test_column_format_interpretation": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestColumnFunctions",
        "test_column_format_interpretation"
      ]
    ]
  ],
  "test_zero_precision_float_column": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestColumnFunctions",
        "test_zero_precision_float_column"
      ]
    ]
  ],
  "test_new_coldefs_with_invalid_seqence": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestColumnFunctions",
        "test_new_coldefs_with_invalid_seqence"
      ]
    ]
  ],
  "test_coldefs_init_from_array": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestColumnFunctions",
        "test_coldefs_init_from_array"
      ]
    ]
  ],
  "test_column_lookup_by_name": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestColumnFunctions",
        "test_column_lookup_by_name"
      ]
    ]
  ],
  "test_column_attribute_change_after_removal": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestColumnFunctions",
        "test_column_attribute_change_after_removal"
      ]
    ]
  ],
  "test_x_column_deepcopy": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestColumnFunctions",
        "test_x_column_deepcopy"
      ]
    ]
  ],
  "test_p_column_deepcopy": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestColumnFunctions",
        "test_p_column_deepcopy"
      ]
    ]
  ],
  "test_column_verify_keywords": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestColumnFunctions",
        "test_column_verify_keywords"
      ]
    ]
  ],
  "test_column_verify_start": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestColumnFunctions",
        "test_column_verify_start"
      ]
    ]
  ],
  "test_column_verify_formats": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "TestColumnFunctions",
        "test_column_verify_formats"
      ]
    ]
  ],
  "test_regression_5383": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "test_regression_5383"
      ]
    ]
  ],
  "test_regression_scalar_indexing": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "test_regression_scalar_indexing"
      ]
    ]
  ],
  "test_new_column_attributes_preserved": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "test_new_column_attributes_preserved"
      ]
    ]
  ],
  "test_empty_table": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "test_empty_table"
      ]
    ],
    [
      "astropy/io/votable/tests/table_test.py",
      [
        "test_empty_table"
      ]
    ],
    [
      "astropy/table/tests/test_info.py",
      [
        "test_empty_table"
      ]
    ],
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestPprint",
        "test_empty_table"
      ]
    ]
  ],
  "test_a3dtable": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "test_a3dtable"
      ]
    ]
  ],
  "test_invalid_file": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "test_invalid_file"
      ]
    ]
  ],
  "test_unit_parse_strict": [
    [
      "astropy/io/fits/tests/test_table.py",
      [
        "test_unit_parse_strict"
      ]
    ]
  ],
  "test_uint_columns": [
    [
      "astropy/io/fits/tests/test_uint.py",
      [
        "TestUintFunctions",
        "test_uint_columns"
      ]
    ]
  ],
  "test_uint_slice": [
    [
      "astropy/io/fits/tests/test_uint.py",
      [
        "TestUintFunctions",
        "test_uint_slice"
      ]
    ]
  ],
  "test_ignore_sigint": [
    [
      "astropy/io/fits/tests/test_util.py",
      [
        "TestUtils",
        "test_ignore_sigint"
      ]
    ]
  ],
  "test_realign_dtype": [
    [
      "astropy/io/fits/tests/test_util.py",
      [
        "TestUtils",
        "test_realign_dtype"
      ]
    ]
  ],
  "test_mode_strings": [
    [
      "astropy/io/fits/tests/test_util.py",
      [
        "TestUtilMode",
        "test_mode_strings"
      ]
    ]
  ],
  "test_mode_pil_image": [
    [
      "astropy/io/fits/tests/test_util.py",
      [
        "TestUtilMode",
        "test_mode_pil_image"
      ]
    ]
  ],
  "test_mode_gzip": [
    [
      "astropy/io/fits/tests/test_util.py",
      [
        "TestUtilMode",
        "test_mode_gzip"
      ]
    ]
  ],
  "test_mode_normal_buffering": [
    [
      "astropy/io/fits/tests/test_util.py",
      [
        "TestUtilMode",
        "test_mode_normal_buffering"
      ]
    ]
  ],
  "test_mode_normal_no_buffering": [
    [
      "astropy/io/fits/tests/test_util.py",
      [
        "TestUtilMode",
        "test_mode_normal_no_buffering"
      ]
    ]
  ],
  "test_mode_normalization": [
    [
      "astropy/io/fits/tests/test_util.py",
      [
        "TestUtilMode",
        "test_mode_normalization"
      ]
    ]
  ],
  "test_rstrip_inplace": [
    [
      "astropy/io/fits/tests/test_util.py",
      [
        "test_rstrip_inplace"
      ]
    ]
  ],
  "_add_listener": [
    [
      "astropy/io/fits/util.py",
      [
        "NotifierMixin",
        "_add_listener"
      ]
    ]
  ],
  "_remove_listener": [
    [
      "astropy/io/fits/util.py",
      [
        "NotifierMixin",
        "_remove_listener"
      ]
    ]
  ],
  "_notify": [
    [
      "astropy/io/fits/util.py",
      [
        "NotifierMixin",
        "_notify"
      ]
    ],
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_notify"
      ]
    ]
  ],
  "__getstate__": [
    [
      "astropy/io/fits/util.py",
      [
        "NotifierMixin",
        "__getstate__"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "NDUncertainty",
        "__getstate__"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "__getstate__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "__getstate__"
      ]
    ],
    [
      "astropy/utils/data_info.py",
      [
        "DataInfo",
        "__getstate__"
      ]
    ]
  ],
  "first": [
    [
      "astropy/io/fits/util.py",
      [
        "first"
      ]
    ]
  ],
  "itersubclasses": [
    [
      "astropy/io/fits/util.py",
      [
        "itersubclasses"
      ]
    ]
  ],
  "wrapped": [
    [
      "astropy/io/fits/util.py",
      [
        "ignore_sigint",
        "wrapped"
      ]
    ]
  ],
  "ignore_sigint": [
    [
      "astropy/io/fits/util.py",
      [
        "ignore_sigint"
      ]
    ]
  ],
  "pairwise": [
    [
      "astropy/io/fits/util.py",
      [
        "pairwise"
      ]
    ]
  ],
  "encode_ascii": [
    [
      "astropy/io/fits/util.py",
      [
        "encode_ascii"
      ]
    ]
  ],
  "decode_ascii": [
    [
      "astropy/io/fits/util.py",
      [
        "decode_ascii"
      ]
    ]
  ],
  "isreadable": [
    [
      "astropy/io/fits/util.py",
      [
        "isreadable"
      ]
    ]
  ],
  "iswritable": [
    [
      "astropy/io/fits/util.py",
      [
        "iswritable"
      ]
    ]
  ],
  "isfile": [
    [
      "astropy/io/fits/util.py",
      [
        "isfile"
      ]
    ]
  ],
  "fileobj_open": [
    [
      "astropy/io/fits/util.py",
      [
        "fileobj_open"
      ]
    ]
  ],
  "fileobj_name": [
    [
      "astropy/io/fits/util.py",
      [
        "fileobj_name"
      ]
    ]
  ],
  "fileobj_closed": [
    [
      "astropy/io/fits/util.py",
      [
        "fileobj_closed"
      ]
    ]
  ],
  "fileobj_mode": [
    [
      "astropy/io/fits/util.py",
      [
        "fileobj_mode"
      ]
    ]
  ],
  "_fileobj_normalize_mode": [
    [
      "astropy/io/fits/util.py",
      [
        "_fileobj_normalize_mode"
      ]
    ]
  ],
  "fileobj_is_binary": [
    [
      "astropy/io/fits/util.py",
      [
        "fileobj_is_binary"
      ]
    ]
  ],
  "translate": [
    [
      "astropy/io/fits/util.py",
      [
        "translate"
      ]
    ]
  ],
  "fill": [
    [
      "astropy/io/fits/util.py",
      [
        "fill"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "fill"
      ]
    ]
  ],
  "_array_from_file": [
    [
      "astropy/io/fits/util.py",
      [
        "_array_from_file"
      ]
    ]
  ],
  "_array_to_file": [
    [
      "astropy/io/fits/util.py",
      [
        "_array_to_file"
      ]
    ]
  ],
  "_array_to_file_like": [
    [
      "astropy/io/fits/util.py",
      [
        "_array_to_file_like"
      ]
    ]
  ],
  "_write_string": [
    [
      "astropy/io/fits/util.py",
      [
        "_write_string"
      ]
    ]
  ],
  "_convert_array": [
    [
      "astropy/io/fits/util.py",
      [
        "_convert_array"
      ]
    ]
  ],
  "_pseudo_zero": [
    [
      "astropy/io/fits/util.py",
      [
        "_pseudo_zero"
      ]
    ]
  ],
  "_is_pseudo_integer": [
    [
      "astropy/io/fits/util.py",
      [
        "_is_pseudo_integer"
      ]
    ]
  ],
  "_is_int": [
    [
      "astropy/io/fits/util.py",
      [
        "_is_int"
      ]
    ],
    [
      "astropy/nddata/bitmask.py",
      [
        "_is_int"
      ]
    ]
  ],
  "_str_to_num": [
    [
      "astropy/io/fits/util.py",
      [
        "_str_to_num"
      ]
    ]
  ],
  "_words_group": [
    [
      "astropy/io/fits/util.py",
      [
        "_words_group"
      ]
    ]
  ],
  "_tmp_name": [
    [
      "astropy/io/fits/util.py",
      [
        "_tmp_name"
      ]
    ]
  ],
  "_get_array_mmap": [
    [
      "astropy/io/fits/util.py",
      [
        "_get_array_mmap"
      ]
    ]
  ],
  "_free_space_check": [
    [
      "astropy/io/fits/util.py",
      [
        "_free_space_check"
      ]
    ]
  ],
  "_extract_number": [
    [
      "astropy/io/fits/util.py",
      [
        "_extract_number"
      ]
    ]
  ],
  "get_testdata_filepath": [
    [
      "astropy/io/fits/util.py",
      [
        "get_testdata_filepath"
      ]
    ]
  ],
  "_rstrip_inplace": [
    [
      "astropy/io/fits/util.py",
      [
        "_rstrip_inplace"
      ]
    ]
  ],
  "_is_dask_array": [
    [
      "astropy/io/fits/util.py",
      [
        "_is_dask_array"
      ]
    ]
  ],
  "run_option": [
    [
      "astropy/io/fits/verify.py",
      [
        "_Verify",
        "run_option"
      ]
    ]
  ],
  "iter_lines": [
    [
      "astropy/io/fits/verify.py",
      [
        "_ErrList",
        "iter_lines"
      ]
    ]
  ],
  "get_asdf_tests": [
    [
      "astropy/io/misc/asdf/conftest.py",
      [
        "get_asdf_tests"
      ]
    ]
  ],
  "asdf_identify": [
    [
      "astropy/io/misc/asdf/connect.py",
      [
        "asdf_identify"
      ]
    ]
  ],
  "create_asdf_deprecation_warning": [
    [
      "astropy/io/misc/asdf/deprecation.py",
      [
        "create_asdf_deprecation_warning"
      ]
    ]
  ],
  "types": [
    [
      "astropy/io/misc/asdf/extension.py",
      [
        "AstropyExtension",
        "types"
      ]
    ],
    [
      "astropy/io/misc/asdf/extension.py",
      [
        "AstropyAsdfExtension",
        "types"
      ]
    ]
  ],
  "tag_mapping": [
    [
      "astropy/io/misc/asdf/extension.py",
      [
        "AstropyExtension",
        "tag_mapping"
      ]
    ]
  ],
  "url_mapping": [
    [
      "astropy/io/misc/asdf/extension.py",
      [
        "AstropyExtension",
        "url_mapping"
      ]
    ]
  ],
  "from_tree": [
    [
      "astropy/io/misc/asdf/tags/coordinates/angle.py",
      [
        "AngleType",
        "from_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/coordinates/angle.py",
      [
        "LatitudeType",
        "from_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/coordinates/angle.py",
      [
        "LongitudeType",
        "from_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/coordinates/earthlocation.py",
      [
        "EarthLocationType",
        "from_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/coordinates/frames.py",
      [
        "ICRSType10",
        "from_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/coordinates/representation.py",
      [
        "RepresentationType",
        "from_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/coordinates/skycoord.py",
      [
        "SkyCoordType",
        "from_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/coordinates/spectralcoord.py",
      [
        "SpectralCoordType",
        "from_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/fits/fits.py",
      [
        "FitsType",
        "from_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/table/table.py",
      [
        "TableType",
        "from_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/table/table.py",
      [
        "ColumnType",
        "from_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/time/time.py",
      [
        "TimeType",
        "from_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/time/timedelta.py",
      [
        "TimeDeltaType",
        "from_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/basic.py",
      [
        "TransformType",
        "from_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/basic.py",
      [
        "UnitsMappingType",
        "from_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/unit/equivalency.py",
      [
        "EquivalencyType",
        "from_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/unit/quantity.py",
      [
        "QuantityType",
        "from_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/unit/unit.py",
      [
        "UnitType",
        "from_tree"
      ]
    ]
  ],
  "to_tree": [
    [
      "astropy/io/misc/asdf/tags/coordinates/angle.py",
      [
        "LongitudeType",
        "to_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/coordinates/earthlocation.py",
      [
        "EarthLocationType",
        "to_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/coordinates/frames.py",
      [
        "ICRSType10",
        "to_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/coordinates/representation.py",
      [
        "RepresentationType",
        "to_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/coordinates/skycoord.py",
      [
        "SkyCoordType",
        "to_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/coordinates/spectralcoord.py",
      [
        "SpectralCoordType",
        "to_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/fits/fits.py",
      [
        "FitsType",
        "to_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/table/table.py",
      [
        "TableType",
        "to_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/table/table.py",
      [
        "ColumnType",
        "to_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/time/time.py",
      [
        "TimeType",
        "to_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/time/timedelta.py",
      [
        "TimeDeltaType",
        "to_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/basic.py",
      [
        "TransformType",
        "to_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/basic.py",
      [
        "UnitsMappingType",
        "to_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/unit/equivalency.py",
      [
        "EquivalencyType",
        "to_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/unit/quantity.py",
      [
        "QuantityType",
        "to_tree"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/unit/unit.py",
      [
        "UnitType",
        "to_tree"
      ]
    ]
  ],
  "_get_frames": [
    [
      "astropy/io/misc/asdf/tags/coordinates/frames.py",
      [
        "_get_frames"
      ]
    ]
  ],
  "_tag_to_frame": [
    [
      "astropy/io/misc/asdf/tags/coordinates/frames.py",
      [
        "BaseCoordType",
        "_tag_to_frame"
      ]
    ]
  ],
  "_frame_name_to_tag": [
    [
      "astropy/io/misc/asdf/tags/coordinates/frames.py",
      [
        "BaseCoordType",
        "_frame_name_to_tag"
      ]
    ]
  ],
  "from_tree_tagged": [
    [
      "astropy/io/misc/asdf/tags/coordinates/frames.py",
      [
        "BaseCoordType",
        "from_tree_tagged"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/compound.py",
      [
        "CompoundType",
        "from_tree_tagged"
      ]
    ],
    [
      "astropy/io/misc/asdf/types.py",
      [
        "AstropyType",
        "from_tree_tagged"
      ]
    ],
    [
      "astropy/io/misc/asdf/types.py",
      [
        "AstropyAsdfType",
        "from_tree_tagged"
      ]
    ]
  ],
  "to_tree_tagged": [
    [
      "astropy/io/misc/asdf/tags/coordinates/frames.py",
      [
        "BaseCoordType",
        "to_tree_tagged"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/compound.py",
      [
        "CompoundType",
        "to_tree_tagged"
      ]
    ],
    [
      "astropy/io/misc/asdf/types.py",
      [
        "AstropyType",
        "to_tree_tagged"
      ]
    ],
    [
      "astropy/io/misc/asdf/types.py",
      [
        "AstropyAsdfType",
        "to_tree_tagged"
      ]
    ]
  ],
  "test_angle": [
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_angle.py",
      [
        "test_angle"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncLike",
        "test_angle"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestUfuncLike",
        "test_angle"
      ]
    ]
  ],
  "position": [
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_earthlocation.py",
      [
        "position"
      ]
    ]
  ],
  "test_earthlocation_quantity": [
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_earthlocation.py",
      [
        "test_earthlocation_quantity"
      ]
    ]
  ],
  "test_earthlocation": [
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_earthlocation.py",
      [
        "test_earthlocation"
      ]
    ]
  ],
  "test_earthlocation_geodetic": [
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_earthlocation.py",
      [
        "test_earthlocation_geodetic"
      ]
    ]
  ],
  "test_earthlocation_site": [
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_earthlocation.py",
      [
        "test_earthlocation_site"
      ]
    ]
  ],
  "test_hcrs_basic": [
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_frames.py",
      [
        "test_hcrs_basic"
      ]
    ]
  ],
  "test_icrs_basic": [
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_frames.py",
      [
        "test_icrs_basic"
      ]
    ]
  ],
  "test_icrs_nodata": [
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_frames.py",
      [
        "test_icrs_nodata"
      ]
    ]
  ],
  "test_icrs_compound": [
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_frames.py",
      [
        "test_icrs_compound"
      ]
    ]
  ],
  "test_fk5_time": [
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_frames.py",
      [
        "test_fk5_time"
      ]
    ]
  ],
  "test_representations": [
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_representation.py",
      [
        "test_representations"
      ]
    ],
    [
      "astropy/io/misc/tests/test_yaml.py",
      [
        "test_representations"
      ]
    ]
  ],
  "test_scalar_skycoord": [
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_skycoord.py",
      [
        "test_scalar_skycoord"
      ]
    ]
  ],
  "test_vector_skycoord": [
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_skycoord.py",
      [
        "test_vector_skycoord"
      ]
    ]
  ],
  "test_skycoord_fk4": [
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_skycoord.py",
      [
        "test_skycoord_fk4"
      ]
    ]
  ],
  "test_skycoord_galactic": [
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_skycoord.py",
      [
        "test_skycoord_galactic"
      ]
    ]
  ],
  "test_skycoord_ra_dec": [
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_skycoord.py",
      [
        "test_skycoord_ra_dec"
      ]
    ]
  ],
  "test_skycoord_override_defaults": [
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_skycoord.py",
      [
        "test_skycoord_override_defaults"
      ]
    ]
  ],
  "test_skycoord_cartesian": [
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_skycoord.py",
      [
        "test_skycoord_cartesian"
      ]
    ]
  ],
  "test_skycoord_vector_frames": [
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_skycoord.py",
      [
        "test_skycoord_vector_frames"
      ]
    ]
  ],
  "test_skycoord_radial_velocity": [
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_skycoord.py",
      [
        "test_skycoord_radial_velocity"
      ]
    ]
  ],
  "test_skycoord_proper_motion": [
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_skycoord.py",
      [
        "test_skycoord_proper_motion"
      ]
    ]
  ],
  "test_skycoord_extra_attribute": [
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_skycoord.py",
      [
        "test_skycoord_extra_attribute"
      ]
    ]
  ],
  "test_skycoord_2d_obstime": [
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_skycoord.py",
      [
        "test_skycoord_2d_obstime"
      ]
    ]
  ],
  "test_scalar_spectralcoord": [
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_spectralcoord.py",
      [
        "test_scalar_spectralcoord"
      ]
    ]
  ],
  "test_vector_spectralcoord": [
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_spectralcoord.py",
      [
        "test_vector_spectralcoord"
      ]
    ]
  ],
  "test_spectralcoord_with_obstarget": [
    [
      "astropy/io/misc/asdf/tags/coordinates/tests/test_spectralcoord.py",
      [
        "test_spectralcoord_with_obstarget"
      ]
    ]
  ],
  "reserve_blocks": [
    [
      "astropy/io/misc/asdf/tags/fits/fits.py",
      [
        "FitsType",
        "reserve_blocks"
      ]
    ]
  ],
  "test_complex_structure": [
    [
      "astropy/io/misc/asdf/tags/fits/tests/test_fits.py",
      [
        "test_complex_structure"
      ]
    ]
  ],
  "test_fits_table": [
    [
      "astropy/io/misc/asdf/tags/fits/tests/test_fits.py",
      [
        "test_fits_table"
      ]
    ]
  ],
  "test_backwards_compat": [
    [
      "astropy/io/misc/asdf/tags/fits/tests/test_fits.py",
      [
        "test_backwards_compat"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/table/tests/test_table.py",
      [
        "test_backwards_compat"
      ]
    ]
  ],
  "test_array_columns": [
    [
      "astropy/io/misc/asdf/tags/table/tests/test_table.py",
      [
        "test_array_columns"
      ]
    ]
  ],
  "test_structured_array_columns": [
    [
      "astropy/io/misc/asdf/tags/table/tests/test_table.py",
      [
        "test_structured_array_columns"
      ]
    ]
  ],
  "test_table_row_order": [
    [
      "astropy/io/misc/asdf/tags/table/tests/test_table.py",
      [
        "test_table_row_order"
      ]
    ]
  ],
  "test_table_inline": [
    [
      "astropy/io/misc/asdf/tags/table/tests/test_table.py",
      [
        "test_table_inline"
      ]
    ]
  ],
  "test_mismatched_columns": [
    [
      "astropy/io/misc/asdf/tags/table/tests/test_table.py",
      [
        "test_mismatched_columns"
      ]
    ]
  ],
  "test_masked_table": [
    [
      "astropy/io/misc/asdf/tags/table/tests/test_table.py",
      [
        "test_masked_table"
      ]
    ]
  ],
  "test_quantity_mixin": [
    [
      "astropy/io/misc/asdf/tags/table/tests/test_table.py",
      [
        "test_quantity_mixin"
      ]
    ]
  ],
  "test_time_mixin": [
    [
      "astropy/io/misc/asdf/tags/table/tests/test_table.py",
      [
        "test_time_mixin"
      ]
    ]
  ],
  "test_timedelta_mixin": [
    [
      "astropy/io/misc/asdf/tags/table/tests/test_table.py",
      [
        "test_timedelta_mixin"
      ]
    ]
  ],
  "test_skycoord_mixin": [
    [
      "astropy/io/misc/asdf/tags/table/tests/test_table.py",
      [
        "test_skycoord_mixin"
      ]
    ]
  ],
  "test_earthlocation_mixin": [
    [
      "astropy/io/misc/asdf/tags/table/tests/test_table.py",
      [
        "test_earthlocation_mixin"
      ]
    ]
  ],
  "test_ndarray_mixin": [
    [
      "astropy/io/misc/asdf/tags/table/tests/test_table.py",
      [
        "test_ndarray_mixin"
      ]
    ],
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_ndarray_mixin"
      ]
    ]
  ],
  "run_schema_example_test": [
    [
      "astropy/io/misc/asdf/tags/tests/helpers.py",
      [
        "run_schema_example_test"
      ]
    ]
  ],
  "_flatten_combiners": [
    [
      "astropy/io/misc/asdf/tags/time/tests/test_time.py",
      [
        "_flatten_combiners"
      ]
    ]
  ],
  "test_time": [
    [
      "astropy/io/misc/asdf/tags/time/tests/test_time.py",
      [
        "test_time"
      ]
    ],
    [
      "astropy/io/misc/tests/test_yaml.py",
      [
        "test_time"
      ]
    ],
    [
      "astropy/time/tests/test_comparisons.py",
      [
        "TestTimeComparisons",
        "test_time"
      ]
    ]
  ],
  "test_time_with_location": [
    [
      "astropy/io/misc/asdf/tags/time/tests/test_time.py",
      [
        "test_time_with_location"
      ]
    ]
  ],
  "test_time_with_location_1_0_0": [
    [
      "astropy/io/misc/asdf/tags/time/tests/test_time.py",
      [
        "test_time_with_location_1_0_0"
      ]
    ]
  ],
  "test_isot": [
    [
      "astropy/io/misc/asdf/tags/time/tests/test_time.py",
      [
        "test_isot"
      ]
    ]
  ],
  "test_isot_array": [
    [
      "astropy/io/misc/asdf/tags/time/tests/test_time.py",
      [
        "test_isot_array"
      ]
    ]
  ],
  "test_time_tag": [
    [
      "astropy/io/misc/asdf/tags/time/tests/test_time.py",
      [
        "test_time_tag"
      ]
    ]
  ],
  "test_timedelta": [
    [
      "astropy/io/misc/asdf/tags/time/tests/test_timedelta.py",
      [
        "test_timedelta"
      ]
    ],
    [
      "astropy/io/misc/tests/test_yaml.py",
      [
        "test_timedelta"
      ]
    ],
    [
      "astropy/time/tests/test_comparisons.py",
      [
        "TestTimeComparisons",
        "test_timedelta"
      ]
    ]
  ],
  "test_timedelta_scales": [
    [
      "astropy/io/misc/asdf/tags/time/tests/test_timedelta.py",
      [
        "test_timedelta_scales"
      ]
    ]
  ],
  "test_timedelta_vector": [
    [
      "astropy/io/misc/asdf/tags/time/tests/test_timedelta.py",
      [
        "test_timedelta_vector"
      ]
    ]
  ],
  "_assert_earthlocation_equal": [
    [
      "astropy/io/misc/asdf/tags/time/time.py",
      [
        "_assert_earthlocation_equal"
      ]
    ]
  ],
  "_parameter_to_value": [
    [
      "astropy/io/misc/asdf/tags/transform/__init__.py",
      [
        "_parameter_to_value"
      ]
    ]
  ],
  "_from_tree_base_transform_members": [
    [
      "astropy/io/misc/asdf/tags/transform/basic.py",
      [
        "TransformType",
        "_from_tree_base_transform_members"
      ]
    ]
  ],
  "from_tree_transform": [
    [
      "astropy/io/misc/asdf/tags/transform/basic.py",
      [
        "TransformType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/basic.py",
      [
        "IdentityType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/basic.py",
      [
        "ConstantType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/basic.py",
      [
        "GenericType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/compound.py",
      [
        "RemapAxesType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "AiryDisk2DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Box1DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Box2DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Disk2DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Ellipse2DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Exponential1DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Gaussian1DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Gaussian2DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "KingProjectedAnalytic1DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Logarithmic1DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Lorentz1DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Moffat1DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Moffat2DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Planar2D",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "RedshiftScaleFactorType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "RickerWavelet1DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "RickerWavelet2DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Ring2DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Sersic1DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Sersic2DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Trigonometric1DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Trapezoid1DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "TrapezoidDisk2DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Voigt1DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/math.py",
      [
        "NpUfuncType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/physical_models.py",
      [
        "BlackBody",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/physical_models.py",
      [
        "Drude1DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/physical_models.py",
      [
        "Plummer1DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/polynomial.py",
      [
        "ShiftType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/polynomial.py",
      [
        "ScaleType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/polynomial.py",
      [
        "MultiplyType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/polynomial.py",
      [
        "PolynomialTypeBase",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/polynomial.py",
      [
        "OrthoPolynomialType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/polynomial.py",
      [
        "Linear1DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/powerlaws.py",
      [
        "PowerLaw1DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/powerlaws.py",
      [
        "BrokenPowerLaw1DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/powerlaws.py",
      [
        "SmoothlyBrokenPowerLaw1DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/powerlaws.py",
      [
        "ExponentialCutoffPowerLaw1DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/powerlaws.py",
      [
        "LogParabola1DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/projections.py",
      [
        "AffineType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/projections.py",
      [
        "Rotate2DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/projections.py",
      [
        "Rotate3DType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/projections.py",
      [
        "RotationSequenceType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/projections.py",
      [
        "GenericProjectionType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/spline.py",
      [
        "SplineType",
        "from_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/tabular.py",
      [
        "TabularType",
        "from_tree_transform"
      ]
    ]
  ],
  "_to_tree_base_transform_members": [
    [
      "astropy/io/misc/asdf/tags/transform/basic.py",
      [
        "TransformType",
        "_to_tree_base_transform_members"
      ]
    ]
  ],
  "to_tree_transform": [
    [
      "astropy/io/misc/asdf/tags/transform/basic.py",
      [
        "TransformType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/basic.py",
      [
        "IdentityType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/basic.py",
      [
        "ConstantType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/basic.py",
      [
        "GenericType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/compound.py",
      [
        "RemapAxesType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "AiryDisk2DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Box1DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Box2DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Disk2DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Ellipse2DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Exponential1DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Gaussian1DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Gaussian2DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "KingProjectedAnalytic1DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Logarithmic1DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Lorentz1DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Moffat1DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Moffat2DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Planar2D",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "RedshiftScaleFactorType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "RickerWavelet1DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "RickerWavelet2DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Ring2DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Sersic1DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Sersic2DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Trigonometric1DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Trapezoid1DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "TrapezoidDisk2DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/functional_models.py",
      [
        "Voigt1DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/math.py",
      [
        "NpUfuncType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/physical_models.py",
      [
        "BlackBody",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/physical_models.py",
      [
        "Drude1DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/physical_models.py",
      [
        "Plummer1DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/polynomial.py",
      [
        "ShiftType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/polynomial.py",
      [
        "ScaleType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/polynomial.py",
      [
        "MultiplyType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/polynomial.py",
      [
        "PolynomialTypeBase",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/polynomial.py",
      [
        "OrthoPolynomialType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/polynomial.py",
      [
        "Linear1DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/powerlaws.py",
      [
        "PowerLaw1DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/powerlaws.py",
      [
        "BrokenPowerLaw1DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/powerlaws.py",
      [
        "SmoothlyBrokenPowerLaw1DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/powerlaws.py",
      [
        "ExponentialCutoffPowerLaw1DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/powerlaws.py",
      [
        "LogParabola1DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/projections.py",
      [
        "AffineType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/projections.py",
      [
        "Rotate2DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/projections.py",
      [
        "Rotate3DType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/projections.py",
      [
        "RotationSequenceType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/projections.py",
      [
        "GenericProjectionType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/spline.py",
      [
        "SplineType",
        "to_tree_transform"
      ]
    ],
    [
      "astropy/io/misc/asdf/tags/transform/tabular.py",
      [
        "TabularType",
        "to_tree_transform"
      ]
    ]
  ],
  "inverse": [
    [
      "astropy/io/misc/asdf/tags/transform/basic.py",
      [
        "GenericModel",
        "inverse"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "inverse"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "inverse"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Shift",
        "inverse"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Scale",
        "inverse"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Multiply",
        "inverse"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "RedshiftScaleFactor",
        "inverse"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Sine1D",
        "inverse"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Cosine1D",
        "inverse"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Tangent1D",
        "inverse"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "ArcSine1D",
        "inverse"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "ArcCosine1D",
        "inverse"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "ArcTangent1D",
        "inverse"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Linear1D",
        "inverse"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Logarithmic1D",
        "inverse"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Exponential1D",
        "inverse"
      ]
    ],
    [
      "astropy/modeling/mappings.py",
      [
        "Mapping",
        "inverse"
      ]
    ],
    [
      "astropy/modeling/mappings.py",
      [
        "Identity",
        "inverse"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "SIP",
        "inverse"
      ]
    ],
    [
      "astropy/modeling/projections.py",
      [
        "Projection",
        "inverse"
      ]
    ],
    [
      "astropy/modeling/projections.py",
      [
        "Pix2SkyProjection",
        "inverse"
      ]
    ],
    [
      "astropy/modeling/projections.py",
      [
        "Sky2PixProjection",
        "inverse"
      ]
    ],
    [
      "astropy/modeling/projections.py",
      [
        "AffineTransformation2D",
        "inverse"
      ]
    ],
    [
      "astropy/modeling/rotations.py",
      [
        "RotationSequence3D",
        "inverse"
      ]
    ],
    [
      "astropy/modeling/rotations.py",
      [
        "EulerAngleRotation",
        "inverse"
      ]
    ],
    [
      "astropy/modeling/rotations.py",
      [
        "RotateNative2Celestial",
        "inverse"
      ]
    ],
    [
      "astropy/modeling/rotations.py",
      [
        "RotateCelestial2Native",
        "inverse"
      ]
    ],
    [
      "astropy/modeling/rotations.py",
      [
        "Rotation2D",
        "inverse"
      ]
    ],
    [
      "astropy/modeling/tabular.py",
      [
        "_Tabular",
        "inverse"
      ]
    ],
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_custom_inverse_reset",
        "TestModel",
        "inverse"
      ]
    ],
    [
      "astropy/visualization/mpl_normalize.py",
      [
        "ImageNormalize",
        "inverse"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "BaseStretch",
        "inverse"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "LinearStretch",
        "inverse"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "SqrtStretch",
        "inverse"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "PowerStretch",
        "inverse"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "PowerDistStretch",
        "inverse"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "InvertedPowerDistStretch",
        "inverse"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "SquaredStretch",
        "inverse"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "LogStretch",
        "inverse"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "InvertedLogStretch",
        "inverse"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "AsinhStretch",
        "inverse"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "SinhStretch",
        "inverse"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "HistEqStretch",
        "inverse"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "InvertedHistEqStretch",
        "inverse"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "ContrastBiasStretch",
        "inverse"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "InvertedContrastBiasStretch",
        "inverse"
      ]
    ],
    [
      "astropy/visualization/transform.py",
      [
        "CompositeTransform",
        "inverse"
      ]
    ]
  ],
  "make_projection_types": [
    [
      "astropy/io/misc/asdf/tags/transform/projections.py",
      [
        "make_projection_types"
      ]
    ]
  ],
  "custom_and_analytical_inverse": [
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_transform.py",
      [
        "custom_and_analytical_inverse"
      ]
    ]
  ],
  "custom_inputs_outputs": [
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_transform.py",
      [
        "custom_inputs_outputs"
      ]
    ]
  ],
  "test_transforms_compound": [
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_transform.py",
      [
        "test_transforms_compound"
      ]
    ]
  ],
  "test_inverse_transforms": [
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_transform.py",
      [
        "test_inverse_transforms"
      ]
    ]
  ],
  "test_single_model": [
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_transform.py",
      [
        "test_single_model"
      ]
    ]
  ],
  "test_zenithal_with_arguments": [
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_transform.py",
      [
        "test_zenithal_with_arguments"
      ]
    ]
  ],
  "test_naming_of_compound_model": [
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_transform.py",
      [
        "test_naming_of_compound_model"
      ]
    ]
  ],
  "test_generic_projections": [
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_transform.py",
      [
        "test_generic_projections"
      ]
    ]
  ],
  "test_tabular_model": [
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_transform.py",
      [
        "test_tabular_model"
      ]
    ]
  ],
  "test_bounding_box": [
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_transform.py",
      [
        "test_bounding_box"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestModelBoundingBox",
        "test_bounding_box"
      ]
    ],
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_bounding_box"
      ]
    ]
  ],
  "test_const1d": [
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_transform.py",
      [
        "test_const1d"
      ]
    ]
  ],
  "test_polynomial": [
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_transform.py",
      [
        "test_polynomial"
      ]
    ]
  ],
  "test_domain_orthopoly": [
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_transform.py",
      [
        "test_domain_orthopoly"
      ]
    ]
  ],
  "test_window_orthopoly": [
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_transform.py",
      [
        "test_window_orthopoly"
      ]
    ]
  ],
  "test_linear1d": [
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_transform.py",
      [
        "test_linear1d"
      ]
    ]
  ],
  "test_linear1d_quantity": [
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_transform.py",
      [
        "test_linear1d_quantity"
      ]
    ]
  ],
  "test_tabular_model_units": [
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_transform.py",
      [
        "test_tabular_model_units"
      ]
    ]
  ],
  "test_fix_inputs": [
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_transform.py",
      [
        "test_fix_inputs"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_BoundingDomain",
        "test_fix_inputs"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestModelBoundingBox",
        "test_fix_inputs"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestCompoundBoundingBox",
        "test_fix_inputs"
      ]
    ],
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_fix_inputs"
      ]
    ]
  ],
  "test_fix_inputs_type": [
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_transform.py",
      [
        "test_fix_inputs_type"
      ]
    ]
  ],
  "test_custom_and_analytical": [
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_transform.py",
      [
        "test_custom_and_analytical"
      ]
    ]
  ],
  "test_deserialize_compound_user_inverse": [
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_transform.py",
      [
        "test_deserialize_compound_user_inverse"
      ]
    ]
  ],
  "models_with_input_eq": [
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_transform.py",
      [
        "models_with_input_eq"
      ]
    ]
  ],
  "compound_models_with_input_eq": [
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_transform.py",
      [
        "compound_models_with_input_eq"
      ]
    ]
  ],
  "assert_model_roundtrip": [
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_units_mapping.py",
      [
        "assert_model_roundtrip"
      ]
    ]
  ],
  "assert_models_equal": [
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_units_mapping.py",
      [
        "assert_models_equal"
      ]
    ]
  ],
  "test_remove_units": [
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_units_mapping.py",
      [
        "test_remove_units"
      ]
    ]
  ],
  "test_accept_any_units": [
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_units_mapping.py",
      [
        "test_accept_any_units"
      ]
    ]
  ],
  "test_with_equivalencies": [
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_units_mapping.py",
      [
        "test_with_equivalencies"
      ]
    ]
  ],
  "test_with_allow_dimensionless": [
    [
      "astropy/io/misc/asdf/tags/transform/tests/test_units_mapping.py",
      [
        "test_with_allow_dimensionless"
      ]
    ]
  ],
  "get_equivalencies": [
    [
      "astropy/io/misc/asdf/tags/unit/tests/test_equivalency.py",
      [
        "get_equivalencies"
      ]
    ]
  ],
  "test_equivalencies": [
    [
      "astropy/io/misc/asdf/tags/unit/tests/test_equivalency.py",
      [
        "test_equivalencies"
      ]
    ]
  ],
  "roundtrip_quantity": [
    [
      "astropy/io/misc/asdf/tags/unit/tests/test_quantity.py",
      [
        "roundtrip_quantity"
      ]
    ]
  ],
  "test_value_scalar": [
    [
      "astropy/io/misc/asdf/tags/unit/tests/test_quantity.py",
      [
        "test_value_scalar"
      ]
    ]
  ],
  "test_value_array": [
    [
      "astropy/io/misc/asdf/tags/unit/tests/test_quantity.py",
      [
        "test_value_array"
      ]
    ]
  ],
  "test_value_multiarray": [
    [
      "astropy/io/misc/asdf/tags/unit/tests/test_quantity.py",
      [
        "test_value_multiarray"
      ]
    ]
  ],
  "test_value_ndarray": [
    [
      "astropy/io/misc/asdf/tags/unit/tests/test_quantity.py",
      [
        "test_value_ndarray"
      ]
    ]
  ],
  "test_table_io": [
    [
      "astropy/io/misc/asdf/tests/test_io.py",
      [
        "test_table_io"
      ]
    ]
  ],
  "test_table_io_custom_key": [
    [
      "astropy/io/misc/asdf/tests/test_io.py",
      [
        "test_table_io_custom_key"
      ]
    ]
  ],
  "make_custom_tree": [
    [
      "astropy/io/misc/asdf/tests/test_io.py",
      [
        "test_table_io_custom_tree",
        "make_custom_tree"
      ]
    ]
  ],
  "find_table": [
    [
      "astropy/io/misc/asdf/tests/test_io.py",
      [
        "test_table_io_custom_tree",
        "find_table"
      ]
    ]
  ],
  "test_table_io_custom_tree": [
    [
      "astropy/io/misc/asdf/tests/test_io.py",
      [
        "test_table_io_custom_tree"
      ]
    ]
  ],
  "meta_path": [
    [
      "astropy/io/misc/hdf5.py",
      [
        "meta_path"
      ]
    ]
  ],
  "_find_all_structured_arrays": [
    [
      "astropy/io/misc/hdf5.py",
      [
        "_find_all_structured_arrays"
      ]
    ]
  ],
  "is_hdf5": [
    [
      "astropy/io/misc/hdf5.py",
      [
        "is_hdf5"
      ]
    ]
  ],
  "read_table_hdf5": [
    [
      "astropy/io/misc/hdf5.py",
      [
        "read_table_hdf5"
      ]
    ]
  ],
  "write_table_hdf5": [
    [
      "astropy/io/misc/hdf5.py",
      [
        "write_table_hdf5"
      ]
    ]
  ],
  "register_hdf5": [
    [
      "astropy/io/misc/hdf5.py",
      [
        "register_hdf5"
      ]
    ]
  ],
  "import_html_libs": [
    [
      "astropy/io/misc/pandas/connect.py",
      [
        "import_html_libs"
      ]
    ]
  ],
  "_pandas_read": [
    [
      "astropy/io/misc/pandas/connect.py",
      [
        "_pandas_read"
      ]
    ]
  ],
  "_pandas_write": [
    [
      "astropy/io/misc/pandas/connect.py",
      [
        "_pandas_write"
      ]
    ]
  ],
  "parquet_identify": [
    [
      "astropy/io/misc/parquet.py",
      [
        "parquet_identify"
      ]
    ]
  ],
  "read_table_parquet": [
    [
      "astropy/io/misc/parquet.py",
      [
        "read_table_parquet"
      ]
    ]
  ],
  "write_table_parquet": [
    [
      "astropy/io/misc/parquet.py",
      [
        "write_table_parquet"
      ]
    ]
  ],
  "_get_names": [
    [
      "astropy/io/misc/parquet.py",
      [
        "_get_names"
      ]
    ]
  ],
  "register_parquet": [
    [
      "astropy/io/misc/parquet.py",
      [
        "register_parquet"
      ]
    ]
  ],
  "get_pyarrow": [
    [
      "astropy/io/misc/parquet.py",
      [
        "get_pyarrow"
      ]
    ]
  ],
  "fnunpickle": [
    [
      "astropy/io/misc/pickle_helpers.py",
      [
        "fnunpickle"
      ]
    ]
  ],
  "fnpickle": [
    [
      "astropy/io/misc/pickle_helpers.py",
      [
        "fnpickle"
      ]
    ]
  ],
  "_default_values": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "_default_values"
      ]
    ],
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "_default_values"
      ]
    ]
  ],
  "test_write_nopath": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_write_nopath"
      ]
    ]
  ],
  "test_write_nopath_nonempty": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_write_nopath_nonempty"
      ]
    ]
  ],
  "test_read_notable_nopath": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_read_notable_nopath"
      ]
    ]
  ],
  "test_read_nopath": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_read_nopath"
      ]
    ]
  ],
  "test_read_nopath_multi_tables": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_read_nopath_multi_tables"
      ]
    ]
  ],
  "test_write_invalid_path": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_write_invalid_path"
      ]
    ]
  ],
  "test_read_invalid_path": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_read_invalid_path"
      ]
    ]
  ],
  "test_read_missing_group": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_read_missing_group"
      ]
    ]
  ],
  "test_read_missing_table": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_read_missing_table"
      ]
    ]
  ],
  "test_read_missing_group_fileobj": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_read_missing_group_fileobj"
      ]
    ]
  ],
  "test_read_write_existing_table": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_read_write_existing_table"
      ]
    ]
  ],
  "test_read_write_memory": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_read_write_memory"
      ]
    ]
  ],
  "test_read_write_existing": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_read_write_existing"
      ]
    ],
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "test_read_write_existing"
      ]
    ]
  ],
  "test_read_write_existing_overwrite": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_read_write_existing_overwrite"
      ]
    ],
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "test_read_write_existing_overwrite"
      ]
    ]
  ],
  "test_read_write_existing_append": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_read_write_existing_append"
      ]
    ]
  ],
  "test_read_write_existing_append_groups": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_read_write_existing_append_groups"
      ]
    ]
  ],
  "test_read_write_existing_append_overwrite": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_read_write_existing_append_overwrite"
      ]
    ]
  ],
  "test_read_fileobj": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_read_fileobj"
      ]
    ],
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "test_read_fileobj"
      ]
    ]
  ],
  "test_read_filobj_path": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_read_filobj_path"
      ]
    ]
  ],
  "test_read_filobj_group_path": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_read_filobj_group_path"
      ]
    ]
  ],
  "test_read_wrong_fileobj": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_read_wrong_fileobj"
      ]
    ],
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "test_read_wrong_fileobj"
      ]
    ]
  ],
  "test_write_fileobj": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_write_fileobj"
      ]
    ]
  ],
  "test_write_create_dataset_kwargs": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_write_create_dataset_kwargs"
      ]
    ]
  ],
  "test_write_filobj_group": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_write_filobj_group"
      ]
    ]
  ],
  "test_write_wrong_type": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_write_wrong_type"
      ]
    ],
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "test_write_wrong_type"
      ]
    ]
  ],
  "test_preserve_single_dtypes": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_preserve_single_dtypes"
      ]
    ],
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "test_preserve_single_dtypes"
      ]
    ]
  ],
  "test_preserve_all_dtypes": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_preserve_all_dtypes"
      ]
    ],
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "test_preserve_all_dtypes"
      ]
    ]
  ],
  "test_preserve_meta": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_preserve_meta"
      ]
    ],
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "test_preserve_meta"
      ]
    ]
  ],
  "test_preserve_serialized": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_preserve_serialized"
      ]
    ],
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "test_preserve_serialized"
      ]
    ]
  ],
  "test_preserve_serialized_old_meta_format": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_preserve_serialized_old_meta_format"
      ]
    ]
  ],
  "test_preserve_serialized_in_complicated_path": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_preserve_serialized_in_complicated_path"
      ]
    ]
  ],
  "test_metadata_very_large": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_metadata_very_large"
      ]
    ],
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "test_metadata_very_large"
      ]
    ]
  ],
  "test_skip_meta": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_skip_meta"
      ]
    ]
  ],
  "test_fail_meta_serialize": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_fail_meta_serialize"
      ]
    ],
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "test_fail_meta_serialize"
      ]
    ]
  ],
  "test_read_h5py_objects": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_read_h5py_objects"
      ]
    ]
  ],
  "test_read_write_unicode_to_hdf5": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_read_write_unicode_to_hdf5"
      ]
    ]
  ],
  "test_hdf5_mixins_qtable_to_table": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_hdf5_mixins_qtable_to_table"
      ]
    ]
  ],
  "test_hdf5_mixins_as_one": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_hdf5_mixins_as_one"
      ]
    ]
  ],
  "test_hdf5_mixins_per_column": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_hdf5_mixins_per_column"
      ]
    ]
  ],
  "test_overwrite_serialized_meta": [
    [
      "astropy/io/misc/tests/test_hdf5.py",
      [
        "test_overwrite_serialized_meta"
      ]
    ]
  ],
  "test_read_write_format": [
    [
      "astropy/io/misc/tests/test_pandas.py",
      [
        "test_read_write_format"
      ]
    ]
  ],
  "test_read_fixed_width_format": [
    [
      "astropy/io/misc/tests/test_pandas.py",
      [
        "test_read_fixed_width_format"
      ]
    ]
  ],
  "test_write_with_mixins": [
    [
      "astropy/io/misc/tests/test_pandas.py",
      [
        "test_write_with_mixins"
      ]
    ]
  ],
  "test_read_pathlikeobj": [
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "test_read_pathlikeobj"
      ]
    ]
  ],
  "test_identify_wrong_fileobj": [
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "test_identify_wrong_fileobj"
      ]
    ]
  ],
  "test_identify_file_wrong_extension": [
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "test_identify_file_wrong_extension"
      ]
    ]
  ],
  "test_identify_file_correct_extension": [
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "test_identify_file_correct_extension"
      ]
    ]
  ],
  "test_identify_file_noobject_nopath": [
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "test_identify_file_noobject_nopath"
      ]
    ]
  ],
  "test_parquet_mixins_qtable_to_table": [
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "test_parquet_mixins_qtable_to_table"
      ]
    ]
  ],
  "test_parquet_mixins_as_one": [
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "test_parquet_mixins_as_one"
      ]
    ]
  ],
  "test_parquet_mixins_per_column": [
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "test_parquet_mixins_per_column"
      ]
    ]
  ],
  "test_parquet_mixins_read_one_name": [
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "test_parquet_mixins_read_one_name"
      ]
    ]
  ],
  "test_parquet_mixins_read_exclude_names": [
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "test_parquet_mixins_read_exclude_names"
      ]
    ]
  ],
  "test_parquet_mixins_read_no_columns": [
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "test_parquet_mixins_read_no_columns"
      ]
    ]
  ],
  "test_parquet_mixins_read_schema": [
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "test_parquet_mixins_read_schema"
      ]
    ]
  ],
  "test_parquet_filter": [
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "test_parquet_filter"
      ]
    ]
  ],
  "test_parquet_read_generic": [
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "test_parquet_read_generic"
      ]
    ]
  ],
  "test_parquet_read_pandas": [
    [
      "astropy/io/misc/tests/test_parquet.py",
      [
        "test_parquet_read_pandas"
      ]
    ]
  ],
  "test_fnpickling_simple": [
    [
      "astropy/io/misc/tests/test_pickle_helpers.py",
      [
        "test_fnpickling_simple"
      ]
    ]
  ],
  "test_fnpickling_class": [
    [
      "astropy/io/misc/tests/test_pickle_helpers.py",
      [
        "test_fnpickling_class"
      ]
    ]
  ],
  "test_fnpickling_protocol": [
    [
      "astropy/io/misc/tests/test_pickle_helpers.py",
      [
        "test_fnpickling_protocol"
      ]
    ]
  ],
  "test_fnpickling_many": [
    [
      "astropy/io/misc/tests/test_pickle_helpers.py",
      [
        "test_fnpickling_many"
      ]
    ]
  ],
  "test_numpy_types": [
    [
      "astropy/io/misc/tests/test_yaml.py",
      [
        "test_numpy_types"
      ]
    ]
  ],
  "test_custom_unit": [
    [
      "astropy/io/misc/tests/test_yaml.py",
      [
        "test_custom_unit"
      ]
    ]
  ],
  "test_ndarray_subclasses": [
    [
      "astropy/io/misc/tests/test_yaml.py",
      [
        "test_ndarray_subclasses"
      ]
    ]
  ],
  "compare_coord": [
    [
      "astropy/io/misc/tests/test_yaml.py",
      [
        "compare_coord"
      ]
    ]
  ],
  "test_skycoord": [
    [
      "astropy/io/misc/tests/test_yaml.py",
      [
        "test_skycoord"
      ]
    ],
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "TestCutout2D",
        "test_skycoord"
      ]
    ]
  ],
  "_get_time": [
    [
      "astropy/io/misc/tests/test_yaml.py",
      [
        "_get_time"
      ]
    ]
  ],
  "compare_time": [
    [
      "astropy/io/misc/tests/test_yaml.py",
      [
        "compare_time"
      ]
    ]
  ],
  "test_serialized_column": [
    [
      "astropy/io/misc/tests/test_yaml.py",
      [
        "test_serialized_column"
      ]
    ]
  ],
  "test_load_all": [
    [
      "astropy/io/misc/tests/test_yaml.py",
      [
        "test_load_all"
      ]
    ]
  ],
  "test_ecsv_astropy_objects_in_meta": [
    [
      "astropy/io/misc/tests/test_yaml.py",
      [
        "test_ecsv_astropy_objects_in_meta"
      ]
    ]
  ],
  "_unit_representer": [
    [
      "astropy/io/misc/yaml.py",
      [
        "_unit_representer"
      ]
    ]
  ],
  "_unit_constructor": [
    [
      "astropy/io/misc/yaml.py",
      [
        "_unit_constructor"
      ]
    ]
  ],
  "_serialized_column_representer": [
    [
      "astropy/io/misc/yaml.py",
      [
        "_serialized_column_representer"
      ]
    ]
  ],
  "_serialized_column_constructor": [
    [
      "astropy/io/misc/yaml.py",
      [
        "_serialized_column_constructor"
      ]
    ]
  ],
  "_time_representer": [
    [
      "astropy/io/misc/yaml.py",
      [
        "_time_representer"
      ]
    ]
  ],
  "_time_constructor": [
    [
      "astropy/io/misc/yaml.py",
      [
        "_time_constructor"
      ]
    ]
  ],
  "_timedelta_representer": [
    [
      "astropy/io/misc/yaml.py",
      [
        "_timedelta_representer"
      ]
    ]
  ],
  "_timedelta_constructor": [
    [
      "astropy/io/misc/yaml.py",
      [
        "_timedelta_constructor"
      ]
    ]
  ],
  "_ndarray_representer": [
    [
      "astropy/io/misc/yaml.py",
      [
        "_ndarray_representer"
      ]
    ]
  ],
  "_ndarray_constructor": [
    [
      "astropy/io/misc/yaml.py",
      [
        "_ndarray_constructor"
      ]
    ]
  ],
  "_void_representer": [
    [
      "astropy/io/misc/yaml.py",
      [
        "_void_representer"
      ]
    ]
  ],
  "_void_constructor": [
    [
      "astropy/io/misc/yaml.py",
      [
        "_void_constructor"
      ]
    ]
  ],
  "_quantity_representer": [
    [
      "astropy/io/misc/yaml.py",
      [
        "_quantity_representer"
      ]
    ]
  ],
  "_quantity_constructor": [
    [
      "astropy/io/misc/yaml.py",
      [
        "_quantity_constructor"
      ]
    ]
  ],
  "_skycoord_representer": [
    [
      "astropy/io/misc/yaml.py",
      [
        "_skycoord_representer"
      ]
    ]
  ],
  "_skycoord_constructor": [
    [
      "astropy/io/misc/yaml.py",
      [
        "_skycoord_constructor"
      ]
    ]
  ],
  "_complex_representer": [
    [
      "astropy/io/misc/yaml.py",
      [
        "_complex_representer"
      ]
    ]
  ],
  "_complex_constructor": [
    [
      "astropy/io/misc/yaml.py",
      [
        "_complex_constructor"
      ]
    ]
  ],
  "_construct_python_tuple": [
    [
      "astropy/io/misc/yaml.py",
      [
        "AstropyLoader",
        "_construct_python_tuple"
      ]
    ]
  ],
  "_construct_python_unicode": [
    [
      "astropy/io/misc/yaml.py",
      [
        "AstropyLoader",
        "_construct_python_unicode"
      ]
    ]
  ],
  "_represent_tuple": [
    [
      "astropy/io/misc/yaml.py",
      [
        "AstropyDumper",
        "_represent_tuple"
      ]
    ]
  ],
  "load_all": [
    [
      "astropy/io/misc/yaml.py",
      [
        "load_all"
      ]
    ]
  ],
  "available_registries": [
    [
      "astropy/io/registry/base.py",
      [
        "_UnifiedIORegistryBase",
        "available_registries"
      ]
    ]
  ],
  "get_formats": [
    [
      "astropy/io/registry/base.py",
      [
        "_UnifiedIORegistryBase",
        "get_formats"
      ]
    ],
    [
      "astropy/io/registry/core.py",
      [
        "UnifiedIORegistry",
        "get_formats"
      ]
    ],
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "UnifiedIORegistryBaseSubClass",
        "get_formats"
      ]
    ]
  ],
  "delay_doc_updates": [
    [
      "astropy/io/registry/base.py",
      [
        "_UnifiedIORegistryBase",
        "delay_doc_updates"
      ]
    ]
  ],
  "register_identifier": [
    [
      "astropy/io/registry/base.py",
      [
        "_UnifiedIORegistryBase",
        "register_identifier"
      ]
    ]
  ],
  "unregister_identifier": [
    [
      "astropy/io/registry/base.py",
      [
        "_UnifiedIORegistryBase",
        "unregister_identifier"
      ]
    ]
  ],
  "identify_format": [
    [
      "astropy/io/registry/base.py",
      [
        "_UnifiedIORegistryBase",
        "identify_format"
      ]
    ]
  ],
  "_get_format_table_str": [
    [
      "astropy/io/registry/base.py",
      [
        "_UnifiedIORegistryBase",
        "_get_format_table_str"
      ]
    ]
  ],
  "_is_best_match": [
    [
      "astropy/io/registry/base.py",
      [
        "_UnifiedIORegistryBase",
        "_is_best_match"
      ]
    ]
  ],
  "_get_valid_format": [
    [
      "astropy/io/registry/base.py",
      [
        "_UnifiedIORegistryBase",
        "_get_valid_format"
      ]
    ]
  ],
  "_get_highest_priority_format": [
    [
      "astropy/io/registry/base.py",
      [
        "_UnifiedIORegistryBase",
        "_get_highest_priority_format"
      ]
    ]
  ],
  "_update__doc__": [
    [
      "astropy/io/registry/base.py",
      [
        "_UnifiedIORegistryBase",
        "_update__doc__"
      ]
    ]
  ],
  "_make_io_func": [
    [
      "astropy/io/registry/compat.py",
      [
        "_make_io_func"
      ]
    ]
  ],
  "register_reader": [
    [
      "astropy/io/registry/core.py",
      [
        "UnifiedInputRegistry",
        "register_reader"
      ]
    ]
  ],
  "unregister_reader": [
    [
      "astropy/io/registry/core.py",
      [
        "UnifiedInputRegistry",
        "unregister_reader"
      ]
    ]
  ],
  "register_writer": [
    [
      "astropy/io/registry/core.py",
      [
        "UnifiedOutputRegistry",
        "register_writer"
      ]
    ]
  ],
  "unregister_writer": [
    [
      "astropy/io/registry/core.py",
      [
        "UnifiedOutputRegistry",
        "unregister_writer"
      ]
    ]
  ],
  "registry": [
    [
      "astropy/io/registry/interface.py",
      [
        "UnifiedReadWrite",
        "registry"
      ]
    ],
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedIORegistryBase",
        "registry"
      ]
    ],
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestSubclass",
        "registry"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "_UnitRegistry",
        "registry"
      ]
    ]
  ],
  "help": [
    [
      "astropy/io/registry/interface.py",
      [
        "UnifiedReadWrite",
        "help"
      ]
    ]
  ],
  "list_formats": [
    [
      "astropy/io/registry/interface.py",
      [
        "UnifiedReadWrite",
        "list_formats"
      ]
    ]
  ],
  "empty_reader": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "empty_reader"
      ]
    ]
  ],
  "empty_writer": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "empty_writer"
      ]
    ]
  ],
  "empty_identifier": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "empty_identifier"
      ]
    ]
  ],
  "fmtcls1": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "fmtcls1"
      ]
    ]
  ],
  "fmtcls2": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "fmtcls2"
      ]
    ]
  ],
  "fmtcls": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "fmtcls"
      ]
    ]
  ],
  "original": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "original"
      ]
    ]
  ],
  "test_fmcls1_fmtcls2": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "test_fmcls1_fmtcls2"
      ]
    ]
  ],
  "test_IORegistryError": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "test_IORegistryError"
      ]
    ]
  ],
  "test_get_formats": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedIORegistryBase",
        "test_get_formats"
      ]
    ],
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedInputRegistry",
        "test_get_formats"
      ]
    ],
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedOutputRegistry",
        "test_get_formats"
      ]
    ],
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedIORegistry",
        "test_get_formats"
      ]
    ]
  ],
  "test_delay_doc_updates": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedIORegistryBase",
        "test_delay_doc_updates"
      ]
    ],
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedInputRegistry",
        "test_delay_doc_updates"
      ]
    ],
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedOutputRegistry",
        "test_delay_doc_updates"
      ]
    ],
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedIORegistry",
        "test_delay_doc_updates"
      ]
    ]
  ],
  "test_register_identifier": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedIORegistryBase",
        "test_register_identifier"
      ]
    ]
  ],
  "test_register_identifier_invalid": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedIORegistryBase",
        "test_register_identifier_invalid"
      ]
    ]
  ],
  "test_register_identifier_force": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedIORegistryBase",
        "test_register_identifier_force"
      ]
    ]
  ],
  "test_unregister_identifier": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedIORegistryBase",
        "test_unregister_identifier"
      ]
    ]
  ],
  "test_unregister_identifier_invalid": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedIORegistryBase",
        "test_unregister_identifier_invalid"
      ]
    ]
  ],
  "test_identify_format": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedIORegistryBase",
        "test_identify_format"
      ]
    ]
  ],
  "test_compat_register_identifier": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedIORegistryBase",
        "test_compat_register_identifier"
      ]
    ]
  ],
  "test_compat_unregister_identifier": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedIORegistryBase",
        "test_compat_unregister_identifier"
      ]
    ]
  ],
  "test_compat_identify_format": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedIORegistryBase",
        "test_compat_identify_format"
      ]
    ]
  ],
  "test_compat_get_formats": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedIORegistryBase",
        "test_compat_get_formats"
      ]
    ]
  ],
  "test_compat_delay_doc_updates": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedIORegistryBase",
        "test_compat_delay_doc_updates"
      ]
    ]
  ],
  "_read1": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedInputRegistry",
        "test_inherited_read_registration",
        "_read1"
      ]
    ]
  ],
  "test_inherited_read_registration": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedInputRegistry",
        "test_inherited_read_registration"
      ]
    ]
  ],
  "test_identify_read_format": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedInputRegistry",
        "test_identify_read_format"
      ]
    ]
  ],
  "test_register_reader": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedInputRegistry",
        "test_register_reader"
      ]
    ]
  ],
  "test_register_reader_invalid": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedInputRegistry",
        "test_register_reader_invalid"
      ]
    ]
  ],
  "test_register_reader_force": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedInputRegistry",
        "test_register_reader_force"
      ]
    ]
  ],
  "test_register_readers_with_same_name_on_different_classes": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedInputRegistry",
        "test_register_readers_with_same_name_on_different_classes"
      ]
    ]
  ],
  "test_unregister_reader": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedInputRegistry",
        "test_unregister_reader"
      ]
    ]
  ],
  "test_unregister_reader_invalid": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedInputRegistry",
        "test_unregister_reader_invalid"
      ]
    ]
  ],
  "test_get_reader": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedInputRegistry",
        "test_get_reader"
      ]
    ]
  ],
  "test_get_reader_invalid": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedInputRegistry",
        "test_get_reader_invalid"
      ]
    ]
  ],
  "test_read_noformat": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedInputRegistry",
        "test_read_noformat"
      ]
    ]
  ],
  "test_read_noformat_arbitrary": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedInputRegistry",
        "test_read_noformat_arbitrary"
      ]
    ]
  ],
  "test_read_noformat_arbitrary_file": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedInputRegistry",
        "test_read_noformat_arbitrary_file"
      ]
    ]
  ],
  "test_read_toomanyformats": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedInputRegistry",
        "test_read_toomanyformats"
      ]
    ]
  ],
  "test_read_uses_priority": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedInputRegistry",
        "test_read_uses_priority"
      ]
    ]
  ],
  "test_read_format_noreader": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedInputRegistry",
        "test_read_format_noreader"
      ]
    ]
  ],
  "test_read_identifier": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedInputRegistry",
        "test_read_identifier"
      ]
    ]
  ],
  "test_read_valid_return": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedInputRegistry",
        "test_read_valid_return"
      ]
    ]
  ],
  "test_read_non_existing_unknown_ext": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedInputRegistry",
        "test_read_non_existing_unknown_ext"
      ]
    ]
  ],
  "test_read_directory": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedInputRegistry",
        "test_read_directory"
      ]
    ]
  ],
  "test_compat_register_reader": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedInputRegistry",
        "test_compat_register_reader"
      ]
    ]
  ],
  "test_compat_unregister_reader": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedInputRegistry",
        "test_compat_unregister_reader"
      ]
    ]
  ],
  "test_compat_get_reader": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedInputRegistry",
        "test_compat_get_reader"
      ]
    ]
  ],
  "test_compat_read": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedInputRegistry",
        "test_compat_read"
      ]
    ]
  ],
  "_write1": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedOutputRegistry",
        "test_inherited_write_registration",
        "_write1"
      ]
    ]
  ],
  "test_inherited_write_registration": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedOutputRegistry",
        "test_inherited_write_registration"
      ]
    ]
  ],
  "test_identify_write_format": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedOutputRegistry",
        "test_identify_write_format"
      ]
    ]
  ],
  "test_register_writer": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedOutputRegistry",
        "test_register_writer"
      ]
    ]
  ],
  "test_register_writer_invalid": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedOutputRegistry",
        "test_register_writer_invalid"
      ]
    ]
  ],
  "test_register_writer_force": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedOutputRegistry",
        "test_register_writer_force"
      ]
    ]
  ],
  "test_unregister_writer": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedOutputRegistry",
        "test_unregister_writer"
      ]
    ]
  ],
  "test_unregister_writer_invalid": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedOutputRegistry",
        "test_unregister_writer_invalid"
      ]
    ]
  ],
  "test_get_writer": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedOutputRegistry",
        "test_get_writer"
      ]
    ]
  ],
  "test_get_writer_invalid": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedOutputRegistry",
        "test_get_writer_invalid"
      ]
    ]
  ],
  "test_write_noformat": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedOutputRegistry",
        "test_write_noformat"
      ]
    ]
  ],
  "test_write_noformat_arbitrary": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedOutputRegistry",
        "test_write_noformat_arbitrary"
      ]
    ]
  ],
  "test_write_noformat_arbitrary_file": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedOutputRegistry",
        "test_write_noformat_arbitrary_file"
      ]
    ]
  ],
  "test_write_toomanyformats": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedOutputRegistry",
        "test_write_toomanyformats"
      ]
    ]
  ],
  "test_write_uses_priority": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedOutputRegistry",
        "test_write_uses_priority"
      ]
    ]
  ],
  "test_write_format_nowriter": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedOutputRegistry",
        "test_write_format_nowriter"
      ]
    ]
  ],
  "test_write_identifier": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedOutputRegistry",
        "test_write_identifier"
      ]
    ]
  ],
  "test_write_return": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedOutputRegistry",
        "test_write_return"
      ]
    ]
  ],
  "test_compat_register_writer": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedOutputRegistry",
        "test_compat_register_writer"
      ]
    ]
  ],
  "test_compat_unregister_writer": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedOutputRegistry",
        "test_compat_unregister_writer"
      ]
    ]
  ],
  "test_compat_get_writer": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedOutputRegistry",
        "test_compat_get_writer"
      ]
    ]
  ],
  "test_compat_write": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedOutputRegistry",
        "test_compat_write"
      ]
    ]
  ],
  "test_identifier_origin": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestUnifiedIORegistry",
        "test_identifier_origin"
      ]
    ]
  ],
  "test_dir": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "test_dir"
      ]
    ],
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_dir"
      ]
    ]
  ],
  "test_getattr": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "test_getattr"
      ]
    ]
  ],
  "test_read_basic_table": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "test_read_basic_table"
      ]
    ]
  ],
  "test_read_table_subclass": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestSubclass",
        "test_read_table_subclass"
      ]
    ]
  ],
  "test_write_table_subclass": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestSubclass",
        "test_write_table_subclass"
      ]
    ]
  ],
  "test_read_table_subclass_with_columns_attributes": [
    [
      "astropy/io/registry/tests/test_registries.py",
      [
        "TestSubclass",
        "test_read_table_subclass_with_columns_attributes"
      ]
    ]
  ],
  "test_table_read_help_fits": [
    [
      "astropy/io/registry/tests/test_registry_help.py",
      [
        "test_table_read_help_fits"
      ]
    ]
  ],
  "test_table_read_help_ascii": [
    [
      "astropy/io/registry/tests/test_registry_help.py",
      [
        "test_table_read_help_ascii"
      ]
    ]
  ],
  "test_table_write_help_hdf5": [
    [
      "astropy/io/registry/tests/test_registry_help.py",
      [
        "test_table_write_help_hdf5"
      ]
    ]
  ],
  "test_list_formats": [
    [
      "astropy/io/registry/tests/test_registry_help.py",
      [
        "test_list_formats"
      ]
    ]
  ],
  "test_table_write_help_fits": [
    [
      "astropy/io/registry/tests/test_registry_help.py",
      [
        "test_table_write_help_fits"
      ]
    ]
  ],
  "test_table_write_help_no_format": [
    [
      "astropy/io/registry/tests/test_registry_help.py",
      [
        "test_table_write_help_no_format"
      ]
    ]
  ],
  "test_table_read_help_no_format": [
    [
      "astropy/io/registry/tests/test_registry_help.py",
      [
        "test_table_read_help_no_format"
      ]
    ]
  ],
  "test_ccddata_write_help_fits": [
    [
      "astropy/io/registry/tests/test_registry_help.py",
      [
        "test_ccddata_write_help_fits"
      ]
    ]
  ],
  "test_ccddata_read_help_fits": [
    [
      "astropy/io/registry/tests/test_registry_help.py",
      [
        "test_ccddata_read_help_fits"
      ]
    ]
  ],
  "test_table_write_help_jsviewer": [
    [
      "astropy/io/registry/tests/test_registry_help.py",
      [
        "test_table_write_help_jsviewer"
      ]
    ]
  ],
  "is_votable": [
    [
      "astropy/io/votable/connect.py",
      [
        "is_votable"
      ]
    ],
    [
      "astropy/io/votable/table.py",
      [
        "is_votable"
      ]
    ]
  ],
  "read_table_votable": [
    [
      "astropy/io/votable/connect.py",
      [
        "read_table_votable"
      ]
    ]
  ],
  "write_table_votable": [
    [
      "astropy/io/votable/connect.py",
      [
        "write_table_votable"
      ]
    ]
  ],
  "_make_masked_array": [
    [
      "astropy/io/votable/converters.py",
      [
        "_make_masked_array"
      ]
    ]
  ],
  "bitarray_to_bool": [
    [
      "astropy/io/votable/converters.py",
      [
        "bitarray_to_bool"
      ]
    ]
  ],
  "bool_to_bitarray": [
    [
      "astropy/io/votable/converters.py",
      [
        "bool_to_bitarray"
      ]
    ]
  ],
  "_parse_length": [
    [
      "astropy/io/votable/converters.py",
      [
        "Converter",
        "_parse_length"
      ]
    ]
  ],
  "_write_length": [
    [
      "astropy/io/votable/converters.py",
      [
        "Converter",
        "_write_length"
      ]
    ]
  ],
  "supports_empty_values": [
    [
      "astropy/io/votable/converters.py",
      [
        "Converter",
        "supports_empty_values"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "Char",
        "supports_empty_values"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "FloatingPoint",
        "supports_empty_values"
      ]
    ]
  ],
  "parse_scalar": [
    [
      "astropy/io/votable/converters.py",
      [
        "Converter",
        "parse_scalar"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "Array",
        "parse_scalar"
      ]
    ]
  ],
  "output": [
    [
      "astropy/io/votable/converters.py",
      [
        "Converter",
        "output"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "Char",
        "output"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "UnicodeChar",
        "output"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "VarArray",
        "output"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "NumericArray",
        "output"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "FloatingPoint",
        "output"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "Integer",
        "output"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "Complex",
        "output"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "BitArray",
        "output"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "Bit",
        "output"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "Boolean",
        "output"
      ]
    ]
  ],
  "binparse": [
    [
      "astropy/io/votable/converters.py",
      [
        "Converter",
        "binparse"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "VarArray",
        "binparse"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "NumericArray",
        "binparse"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "Numeric",
        "binparse"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "BitArray",
        "binparse"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "Bit",
        "binparse"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "BooleanArray",
        "binparse"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "Boolean",
        "binparse"
      ]
    ]
  ],
  "binoutput": [
    [
      "astropy/io/votable/converters.py",
      [
        "Converter",
        "binoutput"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "VarArray",
        "binoutput"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "NumericArray",
        "binoutput"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "FloatingPoint",
        "binoutput"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "Integer",
        "binoutput"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "BitArray",
        "binoutput"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "Bit",
        "binoutput"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "BooleanArray",
        "binoutput"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "Boolean",
        "binoutput"
      ]
    ]
  ],
  "_binparse_var": [
    [
      "astropy/io/votable/converters.py",
      [
        "Char",
        "_binparse_var"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "UnicodeChar",
        "_binparse_var"
      ]
    ]
  ],
  "_binparse_fixed": [
    [
      "astropy/io/votable/converters.py",
      [
        "Char",
        "_binparse_fixed"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "UnicodeChar",
        "_binparse_fixed"
      ]
    ]
  ],
  "_binoutput_var": [
    [
      "astropy/io/votable/converters.py",
      [
        "Char",
        "_binoutput_var"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "UnicodeChar",
        "_binoutput_var"
      ]
    ]
  ],
  "_binoutput_fixed": [
    [
      "astropy/io/votable/converters.py",
      [
        "Char",
        "_binoutput_fixed"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "UnicodeChar",
        "_binoutput_fixed"
      ]
    ]
  ],
  "_splitter_pedantic": [
    [
      "astropy/io/votable/converters.py",
      [
        "Array",
        "_splitter_pedantic"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "BitArray",
        "_splitter_pedantic"
      ]
    ]
  ],
  "_splitter_lax": [
    [
      "astropy/io/votable/converters.py",
      [
        "Array",
        "_splitter_lax"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "BitArray",
        "_splitter_lax"
      ]
    ]
  ],
  "parse_parts": [
    [
      "astropy/io/votable/converters.py",
      [
        "NumericArray",
        "parse_parts"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "ComplexArray",
        "parse_parts"
      ]
    ],
    [
      "astropy/io/votable/converters.py",
      [
        "Complex",
        "parse_parts"
      ]
    ]
  ],
  "_is_null": [
    [
      "astropy/io/votable/converters.py",
      [
        "Numeric",
        "_is_null"
      ]
    ]
  ],
  "_parse_pedantic": [
    [
      "astropy/io/votable/converters.py",
      [
        "FloatingPoint",
        "_parse_pedantic"
      ]
    ]
  ],
  "_parse_permissive": [
    [
      "astropy/io/votable/converters.py",
      [
        "FloatingPoint",
        "_parse_permissive"
      ]
    ]
  ],
  "output_format": [
    [
      "astropy/io/votable/converters.py",
      [
        "FloatingPoint",
        "output_format"
      ]
    ]
  ],
  "_filter_nan": [
    [
      "astropy/io/votable/converters.py",
      [
        "FloatingPoint",
        "_filter_nan"
      ]
    ]
  ],
  "_filter_null": [
    [
      "astropy/io/votable/converters.py",
      [
        "FloatingPoint",
        "_filter_null"
      ]
    ]
  ],
  "filter_array": [
    [
      "astropy/io/votable/converters.py",
      [
        "Integer",
        "filter_array"
      ]
    ]
  ],
  "binparse_value": [
    [
      "astropy/io/votable/converters.py",
      [
        "Boolean",
        "binparse_value"
      ]
    ]
  ],
  "get_converter": [
    [
      "astropy/io/votable/converters.py",
      [
        "get_converter"
      ]
    ],
    [
      "astropy/units/quantity_helper/helpers.py",
      [
        "get_converter"
      ]
    ]
  ],
  "_all_matching_dtype": [
    [
      "astropy/io/votable/converters.py",
      [
        "_all_matching_dtype"
      ]
    ]
  ],
  "numpy_to_votable_dtype": [
    [
      "astropy/io/votable/converters.py",
      [
        "numpy_to_votable_dtype"
      ]
    ]
  ],
  "table_column_to_votable_datatype": [
    [
      "astropy/io/votable/converters.py",
      [
        "table_column_to_votable_datatype"
      ]
    ]
  ],
  "_format_message": [
    [
      "astropy/io/votable/exceptions.py",
      [
        "_format_message"
      ]
    ]
  ],
  "_suppressed_warning": [
    [
      "astropy/io/votable/exceptions.py",
      [
        "_suppressed_warning"
      ]
    ]
  ],
  "warn_or_raise": [
    [
      "astropy/io/votable/exceptions.py",
      [
        "warn_or_raise"
      ]
    ]
  ],
  "vo_raise": [
    [
      "astropy/io/votable/exceptions.py",
      [
        "vo_raise"
      ]
    ]
  ],
  "vo_reraise": [
    [
      "astropy/io/votable/exceptions.py",
      [
        "vo_reraise"
      ]
    ]
  ],
  "vo_warn": [
    [
      "astropy/io/votable/exceptions.py",
      [
        "vo_warn"
      ]
    ]
  ],
  "warn_unknown_attrs": [
    [
      "astropy/io/votable/exceptions.py",
      [
        "warn_unknown_attrs"
      ]
    ]
  ],
  "parse_vowarning": [
    [
      "astropy/io/votable/exceptions.py",
      [
        "parse_vowarning"
      ]
    ]
  ],
  "get_short_name": [
    [
      "astropy/io/votable/exceptions.py",
      [
        "VOWarning",
        "get_short_name"
      ]
    ]
  ],
  "_get_warning_and_exception_classes": [
    [
      "astropy/io/votable/exceptions.py",
      [
        "_get_warning_and_exception_classes"
      ]
    ]
  ],
  "generate_set": [
    [
      "astropy/io/votable/exceptions.py",
      [
        "_build_doc_string",
        "generate_set"
      ]
    ]
  ],
  "_build_doc_string": [
    [
      "astropy/io/votable/exceptions.py",
      [
        "_build_doc_string"
      ]
    ]
  ],
  "parse_single_table": [
    [
      "astropy/io/votable/table.py",
      [
        "parse_single_table"
      ]
    ]
  ],
  "reset_vo_warnings": [
    [
      "astropy/io/votable/table.py",
      [
        "reset_vo_warnings"
      ]
    ]
  ],
  "test_invalid_arraysize": [
    [
      "astropy/io/votable/tests/converter_test.py",
      [
        "test_invalid_arraysize"
      ]
    ]
  ],
  "test_oversize_char": [
    [
      "astropy/io/votable/tests/converter_test.py",
      [
        "test_oversize_char"
      ]
    ]
  ],
  "test_char_mask": [
    [
      "astropy/io/votable/tests/converter_test.py",
      [
        "test_char_mask"
      ]
    ]
  ],
  "test_oversize_unicode": [
    [
      "astropy/io/votable/tests/converter_test.py",
      [
        "test_oversize_unicode"
      ]
    ]
  ],
  "test_unicode_mask": [
    [
      "astropy/io/votable/tests/converter_test.py",
      [
        "test_unicode_mask"
      ]
    ]
  ],
  "test_unicode_as_char": [
    [
      "astropy/io/votable/tests/converter_test.py",
      [
        "test_unicode_as_char"
      ]
    ]
  ],
  "test_unicode_as_char_binary": [
    [
      "astropy/io/votable/tests/converter_test.py",
      [
        "test_unicode_as_char_binary"
      ]
    ]
  ],
  "test_wrong_number_of_elements": [
    [
      "astropy/io/votable/tests/converter_test.py",
      [
        "test_wrong_number_of_elements"
      ]
    ]
  ],
  "test_float_mask": [
    [
      "astropy/io/votable/tests/converter_test.py",
      [
        "test_float_mask"
      ]
    ]
  ],
  "test_float_mask_permissive": [
    [
      "astropy/io/votable/tests/converter_test.py",
      [
        "test_float_mask_permissive"
      ]
    ]
  ],
  "test_double_array": [
    [
      "astropy/io/votable/tests/converter_test.py",
      [
        "test_double_array"
      ]
    ],
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_double_array"
      ]
    ]
  ],
  "test_complex_array_vararray": [
    [
      "astropy/io/votable/tests/converter_test.py",
      [
        "test_complex_array_vararray"
      ]
    ]
  ],
  "test_complex_array_vararray2": [
    [
      "astropy/io/votable/tests/converter_test.py",
      [
        "test_complex_array_vararray2"
      ]
    ]
  ],
  "test_complex_array_vararray3": [
    [
      "astropy/io/votable/tests/converter_test.py",
      [
        "test_complex_array_vararray3"
      ]
    ]
  ],
  "test_complex_vararray": [
    [
      "astropy/io/votable/tests/converter_test.py",
      [
        "test_complex_vararray"
      ]
    ]
  ],
  "test_complex": [
    [
      "astropy/io/votable/tests/converter_test.py",
      [
        "test_complex"
      ]
    ]
  ],
  "test_bit": [
    [
      "astropy/io/votable/tests/converter_test.py",
      [
        "test_bit"
      ]
    ],
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_bit"
      ]
    ]
  ],
  "test_bit_mask": [
    [
      "astropy/io/votable/tests/converter_test.py",
      [
        "test_bit_mask"
      ]
    ],
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_bit_mask"
      ]
    ],
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestThroughTableData",
        "test_bit_mask"
      ]
    ],
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestThroughBinary",
        "test_bit_mask"
      ]
    ]
  ],
  "test_boolean": [
    [
      "astropy/io/votable/tests/converter_test.py",
      [
        "test_boolean"
      ]
    ],
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_boolean"
      ]
    ]
  ],
  "test_boolean_array": [
    [
      "astropy/io/votable/tests/converter_test.py",
      [
        "test_boolean_array"
      ]
    ],
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_boolean_array"
      ]
    ]
  ],
  "test_invalid_type": [
    [
      "astropy/io/votable/tests/converter_test.py",
      [
        "test_invalid_type"
      ]
    ],
    [
      "astropy/units/tests/test_units.py",
      [
        "test_invalid_type"
      ]
    ]
  ],
  "test_precision": [
    [
      "astropy/io/votable/tests/converter_test.py",
      [
        "test_precision"
      ]
    ],
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestBasic",
        "test_precision"
      ]
    ]
  ],
  "test_integer_overflow": [
    [
      "astropy/io/votable/tests/converter_test.py",
      [
        "test_integer_overflow"
      ]
    ]
  ],
  "test_float_default_precision": [
    [
      "astropy/io/votable/tests/converter_test.py",
      [
        "test_float_default_precision"
      ]
    ]
  ],
  "test_vararray": [
    [
      "astropy/io/votable/tests/converter_test.py",
      [
        "test_vararray"
      ]
    ]
  ],
  "test_gemini_v1_2": [
    [
      "astropy/io/votable/tests/converter_test.py",
      [
        "test_gemini_v1_2"
      ]
    ]
  ],
  "test_reraise": [
    [
      "astropy/io/votable/tests/exception_test.py",
      [
        "test_reraise"
      ]
    ]
  ],
  "test_parse_vowarning": [
    [
      "astropy/io/votable/tests/exception_test.py",
      [
        "test_parse_vowarning"
      ]
    ]
  ],
  "test_suppress_warnings": [
    [
      "astropy/io/votable/tests/exception_test.py",
      [
        "test_suppress_warnings"
      ]
    ]
  ],
  "test_resource_groups": [
    [
      "astropy/io/votable/tests/resource_test.py",
      [
        "test_resource_groups"
      ]
    ]
  ],
  "test_read_through_table_interface": [
    [
      "astropy/io/votable/tests/table_test.py",
      [
        "test_read_through_table_interface"
      ]
    ]
  ],
  "test_read_through_table_interface2": [
    [
      "astropy/io/votable/tests/table_test.py",
      [
        "test_read_through_table_interface2"
      ]
    ]
  ],
  "test_pass_kwargs_through_table_interface": [
    [
      "astropy/io/votable/tests/table_test.py",
      [
        "test_pass_kwargs_through_table_interface"
      ]
    ]
  ],
  "test_names_over_ids": [
    [
      "astropy/io/votable/tests/table_test.py",
      [
        "test_names_over_ids"
      ]
    ]
  ],
  "test_explicit_ids": [
    [
      "astropy/io/votable/tests/table_test.py",
      [
        "test_explicit_ids"
      ]
    ]
  ],
  "test_table_read_with_unnamed_tables": [
    [
      "astropy/io/votable/tests/table_test.py",
      [
        "test_table_read_with_unnamed_tables"
      ]
    ]
  ],
  "test_votable_path_object": [
    [
      "astropy/io/votable/tests/table_test.py",
      [
        "test_votable_path_object"
      ]
    ]
  ],
  "test_from_table_without_mask": [
    [
      "astropy/io/votable/tests/table_test.py",
      [
        "test_from_table_without_mask"
      ]
    ]
  ],
  "test_write_with_format": [
    [
      "astropy/io/votable/tests/table_test.py",
      [
        "test_write_with_format"
      ]
    ]
  ],
  "test_no_field_not_empty_table": [
    [
      "astropy/io/votable/tests/table_test.py",
      [
        "test_no_field_not_empty_table"
      ]
    ]
  ],
  "test_no_field_not_empty_table_exception": [
    [
      "astropy/io/votable/tests/table_test.py",
      [
        "test_no_field_not_empty_table_exception"
      ]
    ]
  ],
  "test_binary2_masked_strings": [
    [
      "astropy/io/votable/tests/table_test.py",
      [
        "test_binary2_masked_strings"
      ]
    ]
  ],
  "test_validate_output_invalid": [
    [
      "astropy/io/votable/tests/table_test.py",
      [
        "test_validate_output_invalid"
      ]
    ]
  ],
  "test_validate_output_valid": [
    [
      "astropy/io/votable/tests/table_test.py",
      [
        "test_validate_output_valid"
      ]
    ]
  ],
  "test_default": [
    [
      "astropy/io/votable/tests/table_test.py",
      [
        "TestVerifyOptions",
        "test_default"
      ]
    ]
  ],
  "test_verify_ignore": [
    [
      "astropy/io/votable/tests/table_test.py",
      [
        "TestVerifyOptions",
        "test_verify_ignore"
      ]
    ]
  ],
  "test_verify_warn": [
    [
      "astropy/io/votable/tests/table_test.py",
      [
        "TestVerifyOptions",
        "test_verify_warn"
      ]
    ]
  ],
  "test_verify_exception": [
    [
      "astropy/io/votable/tests/table_test.py",
      [
        "TestVerifyOptions",
        "test_verify_exception"
      ]
    ]
  ],
  "test_pedantic_false": [
    [
      "astropy/io/votable/tests/table_test.py",
      [
        "TestVerifyOptions",
        "test_pedantic_false"
      ]
    ]
  ],
  "test_pedantic_true": [
    [
      "astropy/io/votable/tests/table_test.py",
      [
        "TestVerifyOptions",
        "test_pedantic_true"
      ]
    ]
  ],
  "test_conf_verify_ignore": [
    [
      "astropy/io/votable/tests/table_test.py",
      [
        "TestVerifyOptions",
        "test_conf_verify_ignore"
      ]
    ]
  ],
  "test_conf_verify_warn": [
    [
      "astropy/io/votable/tests/table_test.py",
      [
        "TestVerifyOptions",
        "test_conf_verify_warn"
      ]
    ]
  ],
  "test_conf_verify_exception": [
    [
      "astropy/io/votable/tests/table_test.py",
      [
        "TestVerifyOptions",
        "test_conf_verify_exception"
      ]
    ]
  ],
  "test_conf_pedantic_false": [
    [
      "astropy/io/votable/tests/table_test.py",
      [
        "TestVerifyOptions",
        "test_conf_pedantic_false"
      ]
    ]
  ],
  "test_conf_pedantic_true": [
    [
      "astropy/io/votable/tests/table_test.py",
      [
        "TestVerifyOptions",
        "test_conf_pedantic_true"
      ]
    ]
  ],
  "test_check_astroyear_fail": [
    [
      "astropy/io/votable/tests/tree_test.py",
      [
        "test_check_astroyear_fail"
      ]
    ]
  ],
  "test_string_fail": [
    [
      "astropy/io/votable/tests/tree_test.py",
      [
        "test_string_fail"
      ]
    ]
  ],
  "test_make_Fields": [
    [
      "astropy/io/votable/tests/tree_test.py",
      [
        "test_make_Fields"
      ]
    ]
  ],
  "test_unit_format": [
    [
      "astropy/io/votable/tests/tree_test.py",
      [
        "test_unit_format"
      ]
    ]
  ],
  "test_namespace_warning": [
    [
      "astropy/io/votable/tests/tree_test.py",
      [
        "test_namespace_warning"
      ]
    ]
  ],
  "votable_xml_string": [
    [
      "astropy/io/votable/tests/tree_test.py",
      [
        "votable_xml_string"
      ]
    ]
  ],
  "test_votable_tag": [
    [
      "astropy/io/votable/tests/tree_test.py",
      [
        "test_votable_tag"
      ]
    ]
  ],
  "test_none": [
    [
      "astropy/io/votable/tests/ucd_test.py",
      [
        "test_none"
      ]
    ],
    [
      "astropy/utils/tests/test_metadata.py",
      [
        "MetaBaseTest",
        "test_none"
      ]
    ]
  ],
  "test_check": [
    [
      "astropy/io/votable/tests/ucd_test.py",
      [
        "test_check"
      ]
    ]
  ],
  "test_too_many_colons": [
    [
      "astropy/io/votable/tests/ucd_test.py",
      [
        "test_too_many_colons"
      ]
    ]
  ],
  "test_invalid_namespace": [
    [
      "astropy/io/votable/tests/ucd_test.py",
      [
        "test_invalid_namespace"
      ]
    ]
  ],
  "test_invalid_word": [
    [
      "astropy/io/votable/tests/ucd_test.py",
      [
        "test_invalid_word"
      ]
    ]
  ],
  "test_range_list": [
    [
      "astropy/io/votable/tests/util_test.py",
      [
        "test_range_list"
      ]
    ]
  ],
  "test_range_list2": [
    [
      "astropy/io/votable/tests/util_test.py",
      [
        "test_range_list2"
      ]
    ]
  ],
  "test_range_list3": [
    [
      "astropy/io/votable/tests/util_test.py",
      [
        "test_range_list3"
      ]
    ]
  ],
  "test_range_list4a": [
    [
      "astropy/io/votable/tests/util_test.py",
      [
        "test_range_list4a"
      ]
    ]
  ],
  "test_range_list4": [
    [
      "astropy/io/votable/tests/util_test.py",
      [
        "test_range_list4"
      ]
    ]
  ],
  "test_range_list5": [
    [
      "astropy/io/votable/tests/util_test.py",
      [
        "test_range_list5"
      ]
    ]
  ],
  "test_range_list6": [
    [
      "astropy/io/votable/tests/util_test.py",
      [
        "test_range_list6"
      ]
    ]
  ],
  "test_range_list7": [
    [
      "astropy/io/votable/tests/util_test.py",
      [
        "test_range_list7"
      ]
    ]
  ],
  "test_range_list8": [
    [
      "astropy/io/votable/tests/util_test.py",
      [
        "test_range_list8"
      ]
    ]
  ],
  "test_range_list9a": [
    [
      "astropy/io/votable/tests/util_test.py",
      [
        "test_range_list9a"
      ]
    ]
  ],
  "test_range_list9": [
    [
      "astropy/io/votable/tests/util_test.py",
      [
        "test_range_list9"
      ]
    ]
  ],
  "assert_validate_schema": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "assert_validate_schema"
      ]
    ]
  ],
  "test_parse_single_table": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "test_parse_single_table"
      ]
    ]
  ],
  "test_parse_single_table2": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "test_parse_single_table2"
      ]
    ]
  ],
  "test_parse_single_table3": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "test_parse_single_table3"
      ]
    ]
  ],
  "_test_regression": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "_test_regression"
      ]
    ]
  ],
  "test_regression": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "test_regression"
      ]
    ],
    [
      "astropy/time/tests/test_methods.py",
      [
        "test_regression"
      ]
    ]
  ],
  "test_regression_python_based_parser": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "test_regression_python_based_parser"
      ]
    ]
  ],
  "test_regression_binary2": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "test_regression_binary2"
      ]
    ]
  ],
  "test_implicit_id": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestFixups",
        "test_implicit_id"
      ]
    ]
  ],
  "test_fieldref": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestReferences",
        "test_fieldref"
      ]
    ]
  ],
  "test_paramref": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestReferences",
        "test_paramref"
      ]
    ]
  ],
  "test_iter_fields_and_params_on_a_group": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestReferences",
        "test_iter_fields_and_params_on_a_group"
      ]
    ]
  ],
  "test_iter_groups_on_a_group": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestReferences",
        "test_iter_groups_on_a_group"
      ]
    ]
  ],
  "test_iter_groups": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestReferences",
        "test_iter_groups"
      ]
    ]
  ],
  "test_ref_table": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestReferences",
        "test_ref_table"
      ]
    ]
  ],
  "test_iter_coosys": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestReferences",
        "test_iter_coosys"
      ]
    ]
  ],
  "test_select_columns_by_index": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "test_select_columns_by_index"
      ]
    ]
  ],
  "test_select_columns_by_name": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "test_select_columns_by_name"
      ]
    ]
  ],
  "test_string_test": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_string_test"
      ]
    ]
  ],
  "test_fixed_string_test": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_fixed_string_test"
      ]
    ]
  ],
  "test_unicode_test": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_unicode_test"
      ]
    ]
  ],
  "test_fixed_unicode_test": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_fixed_unicode_test"
      ]
    ]
  ],
  "test_unsignedByte": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_unsignedByte"
      ]
    ]
  ],
  "test_short": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_short"
      ]
    ]
  ],
  "test_int": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_int"
      ]
    ]
  ],
  "test_long": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_long"
      ]
    ]
  ],
  "test_double": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_double"
      ]
    ]
  ],
  "test_float": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_float"
      ]
    ]
  ],
  "test_array": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_array"
      ]
    ]
  ],
  "test_bitarray": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_bitarray"
      ]
    ]
  ],
  "test_bitarray_mask": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_bitarray_mask"
      ]
    ],
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestThroughTableData",
        "test_bitarray_mask"
      ]
    ],
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestThroughBinary",
        "test_bitarray_mask"
      ]
    ]
  ],
  "test_bitvararray": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_bitvararray"
      ]
    ]
  ],
  "test_bitvararray2": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_bitvararray2"
      ]
    ]
  ],
  "test_floatComplex": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_floatComplex"
      ]
    ]
  ],
  "test_doubleComplex": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_doubleComplex"
      ]
    ]
  ],
  "test_doubleComplexArray": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_doubleComplexArray"
      ]
    ]
  ],
  "test_boolean_mask": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_boolean_mask"
      ]
    ]
  ],
  "test_boolean_array_mask": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_boolean_array_mask"
      ]
    ]
  ],
  "test_nulls": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_nulls"
      ]
    ]
  ],
  "test_nulls_array": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_nulls_array"
      ]
    ]
  ],
  "test_bit_array2": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_bit_array2"
      ]
    ]
  ],
  "test_bit_array2_mask": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_bit_array2_mask"
      ]
    ],
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestThroughTableData",
        "test_bit_array2_mask"
      ]
    ],
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestThroughBinary",
        "test_bit_array2_mask"
      ]
    ]
  ],
  "test_get_coosys_by_id": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_get_coosys_by_id"
      ]
    ],
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestThroughBinary2",
        "test_get_coosys_by_id"
      ]
    ]
  ],
  "test_get_field_by_utype": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_get_field_by_utype"
      ]
    ]
  ],
  "test_get_info_by_id": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestParse",
        "test_get_info_by_id"
      ]
    ]
  ],
  "test_schema": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "TestThroughTableData",
        "test_schema"
      ]
    ]
  ],
  "table_from_scratch": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "table_from_scratch"
      ]
    ]
  ],
  "test_open_files": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "test_open_files"
      ]
    ]
  ],
  "test_too_many_columns": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "test_too_many_columns"
      ]
    ]
  ],
  "test_build_from_scratch": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "test_build_from_scratch"
      ]
    ]
  ],
  "test_validate": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "test_validate"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_Interval",
        "test_validate"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestModelBoundingBox",
        "test_validate"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_SelectorArgument",
        "test_validate"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_SelectorArguments",
        "test_validate"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestCompoundBoundingBox",
        "test_validate"
      ]
    ],
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_validate"
      ]
    ],
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "TestZenithalPerspective",
        "test_validate"
      ]
    ],
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "TestCylindricalPerspective",
        "test_validate"
      ]
    ],
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_validate"
      ]
    ]
  ],
  "test_validate_xmllint_true": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "test_validate_xmllint_true"
      ]
    ]
  ],
  "test_validate_path_object": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "test_validate_path_object"
      ]
    ]
  ],
  "test_gzip_filehandles": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "test_gzip_filehandles"
      ]
    ]
  ],
  "test_from_scratch_example": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "test_from_scratch_example"
      ]
    ]
  ],
  "_run_test_from_scratch_example": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "_run_test_from_scratch_example"
      ]
    ]
  ],
  "test_fileobj": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "test_fileobj"
      ]
    ]
  ],
  "test_nonstandard_units": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "test_nonstandard_units"
      ]
    ]
  ],
  "test_resource_structure": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "test_resource_structure"
      ]
    ]
  ],
  "test_no_resource_check": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "test_no_resource_check"
      ]
    ]
  ],
  "test_instantiate_vowarning": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "test_instantiate_vowarning"
      ]
    ]
  ],
  "test_custom_datatype": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "test_custom_datatype"
      ]
    ]
  ],
  "_timesys_tests": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "_timesys_tests"
      ]
    ]
  ],
  "test_timesys": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "test_timesys"
      ]
    ]
  ],
  "test_timesys_roundtrip": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "test_timesys_roundtrip"
      ]
    ]
  ],
  "test_timesys_errors": [
    [
      "astropy/io/votable/tests/vo_test.py",
      [
        "test_timesys_errors"
      ]
    ]
  ],
  "_resize": [
    [
      "astropy/io/votable/tree.py",
      [
        "_resize"
      ]
    ]
  ],
  "lookup_by_attr": [
    [
      "astropy/io/votable/tree.py",
      [
        "_lookup_by_attr_factory",
        "lookup_by_attr"
      ]
    ]
  ],
  "lookup_by_attr_unique": [
    [
      "astropy/io/votable/tree.py",
      [
        "_lookup_by_attr_factory",
        "lookup_by_attr_unique"
      ]
    ]
  ],
  "_lookup_by_attr_factory": [
    [
      "astropy/io/votable/tree.py",
      [
        "_lookup_by_attr_factory"
      ]
    ]
  ],
  "lookup_by_id_or_name": [
    [
      "astropy/io/votable/tree.py",
      [
        "_lookup_by_id_or_name_factory",
        "lookup_by_id_or_name"
      ]
    ]
  ],
  "_lookup_by_id_or_name_factory": [
    [
      "astropy/io/votable/tree.py",
      [
        "_lookup_by_id_or_name_factory"
      ]
    ]
  ],
  "_get_default_unit_format": [
    [
      "astropy/io/votable/tree.py",
      [
        "_get_default_unit_format"
      ]
    ]
  ],
  "_get_unit_format": [
    [
      "astropy/io/votable/tree.py",
      [
        "_get_unit_format"
      ]
    ]
  ],
  "check_astroyear": [
    [
      "astropy/io/votable/tree.py",
      [
        "check_astroyear"
      ]
    ]
  ],
  "check_string": [
    [
      "astropy/io/votable/tree.py",
      [
        "check_string"
      ]
    ]
  ],
  "resolve_id": [
    [
      "astropy/io/votable/tree.py",
      [
        "resolve_id"
      ]
    ]
  ],
  "check_ucd": [
    [
      "astropy/io/votable/tree.py",
      [
        "check_ucd"
      ]
    ],
    [
      "astropy/io/votable/ucd.py",
      [
        "check_ucd"
      ]
    ]
  ],
  "ID": [
    [
      "astropy/io/votable/tree.py",
      [
        "_IDProperty",
        "ID"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "CooSys",
        "ID"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "TimeSys",
        "ID"
      ]
    ]
  ],
  "ID_1": [
    [
      "astropy/io/votable/tree.py",
      [
        "_IDProperty",
        "ID_1"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "CooSys",
        "ID_1"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "TimeSys",
        "ID_1"
      ]
    ]
  ],
  "ID_2": [
    [
      "astropy/io/votable/tree.py",
      [
        "_IDProperty",
        "ID_2"
      ]
    ]
  ],
  "name_1": [
    [
      "astropy/io/votable/tree.py",
      [
        "_NameProperty",
        "name_1"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Info",
        "name_1"
      ]
    ],
    [
      "astropy/utils/data_info.py",
      [
        "MixinInfo",
        "name_1"
      ]
    ]
  ],
  "xtype": [
    [
      "astropy/io/votable/tree.py",
      [
        "_XtypeProperty",
        "xtype"
      ]
    ]
  ],
  "xtype_1": [
    [
      "astropy/io/votable/tree.py",
      [
        "_XtypeProperty",
        "xtype_1"
      ]
    ]
  ],
  "xtype_2": [
    [
      "astropy/io/votable/tree.py",
      [
        "_XtypeProperty",
        "xtype_2"
      ]
    ]
  ],
  "utype": [
    [
      "astropy/io/votable/tree.py",
      [
        "_UtypeProperty",
        "utype"
      ]
    ]
  ],
  "utype_1": [
    [
      "astropy/io/votable/tree.py",
      [
        "_UtypeProperty",
        "utype_1"
      ]
    ]
  ],
  "utype_2": [
    [
      "astropy/io/votable/tree.py",
      [
        "_UtypeProperty",
        "utype_2"
      ]
    ]
  ],
  "ucd": [
    [
      "astropy/io/votable/tree.py",
      [
        "_UcdProperty",
        "ucd"
      ]
    ]
  ],
  "ucd_1": [
    [
      "astropy/io/votable/tree.py",
      [
        "_UcdProperty",
        "ucd_1"
      ]
    ]
  ],
  "ucd_2": [
    [
      "astropy/io/votable/tree.py",
      [
        "_UcdProperty",
        "ucd_2"
      ]
    ]
  ],
  "description": [
    [
      "astropy/io/votable/tree.py",
      [
        "_DescriptionProperty",
        "description"
      ]
    ]
  ],
  "description_1": [
    [
      "astropy/io/votable/tree.py",
      [
        "_DescriptionProperty",
        "description_1"
      ]
    ]
  ],
  "description_2": [
    [
      "astropy/io/votable/tree.py",
      [
        "_DescriptionProperty",
        "description_2"
      ]
    ]
  ],
  "_add_unknown_tag": [
    [
      "astropy/io/votable/tree.py",
      [
        "Element",
        "_add_unknown_tag"
      ]
    ]
  ],
  "_ignore_add": [
    [
      "astropy/io/votable/tree.py",
      [
        "Element",
        "_ignore_add"
      ]
    ]
  ],
  "_add_definitions": [
    [
      "astropy/io/votable/tree.py",
      [
        "Element",
        "_add_definitions"
      ]
    ]
  ],
  "to_xml": [
    [
      "astropy/io/votable/tree.py",
      [
        "Element",
        "to_xml"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "SimpleElement",
        "to_xml"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "SimpleElementWithContent",
        "to_xml"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Info",
        "to_xml"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Values",
        "to_xml"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "to_xml"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Param",
        "to_xml"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Group",
        "to_xml"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "to_xml"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Resource",
        "to_xml"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "VOTableFile",
        "to_xml"
      ]
    ]
  ],
  "content": [
    [
      "astropy/io/votable/tree.py",
      [
        "SimpleElementWithContent",
        "content"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Info",
        "content"
      ]
    ]
  ],
  "content_3": [
    [
      "astropy/io/votable/tree.py",
      [
        "SimpleElementWithContent",
        "content_3"
      ]
    ]
  ],
  "content_4": [
    [
      "astropy/io/votable/tree.py",
      [
        "SimpleElementWithContent",
        "content_4"
      ]
    ]
  ],
  "content_role": [
    [
      "astropy/io/votable/tree.py",
      [
        "Link",
        "content_role"
      ]
    ]
  ],
  "content_role_1": [
    [
      "astropy/io/votable/tree.py",
      [
        "Link",
        "content_role_1"
      ]
    ]
  ],
  "content_role_2": [
    [
      "astropy/io/votable/tree.py",
      [
        "Link",
        "content_role_2"
      ]
    ]
  ],
  "content_type": [
    [
      "astropy/io/votable/tree.py",
      [
        "Link",
        "content_type"
      ]
    ]
  ],
  "content_type_4": [
    [
      "astropy/io/votable/tree.py",
      [
        "Link",
        "content_type_4"
      ]
    ]
  ],
  "content_type_5": [
    [
      "astropy/io/votable/tree.py",
      [
        "Link",
        "content_type_5"
      ]
    ]
  ],
  "href": [
    [
      "astropy/io/votable/tree.py",
      [
        "Link",
        "href"
      ]
    ]
  ],
  "href_7": [
    [
      "astropy/io/votable/tree.py",
      [
        "Link",
        "href_7"
      ]
    ]
  ],
  "href_8": [
    [
      "astropy/io/votable/tree.py",
      [
        "Link",
        "href_8"
      ]
    ]
  ],
  "to_table_column": [
    [
      "astropy/io/votable/tree.py",
      [
        "Link",
        "to_table_column"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Values",
        "to_table_column"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "to_table_column"
      ]
    ]
  ],
  "from_table_column": [
    [
      "astropy/io/votable/tree.py",
      [
        "Link",
        "from_table_column"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Values",
        "from_table_column"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "from_table_column"
      ]
    ]
  ],
  "value_3": [
    [
      "astropy/io/votable/tree.py",
      [
        "Info",
        "value_3"
      ]
    ]
  ],
  "content_5": [
    [
      "astropy/io/votable/tree.py",
      [
        "Info",
        "content_5"
      ]
    ]
  ],
  "content_6": [
    [
      "astropy/io/votable/tree.py",
      [
        "Info",
        "content_6"
      ]
    ]
  ],
  "ref": [
    [
      "astropy/io/votable/tree.py",
      [
        "Info",
        "ref"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Values",
        "ref"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "ref"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "FieldRef",
        "ref"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "ParamRef",
        "ref"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Group",
        "ref"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "ref"
      ]
    ]
  ],
  "ref_8": [
    [
      "astropy/io/votable/tree.py",
      [
        "Info",
        "ref_8"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Values",
        "ref_8"
      ]
    ]
  ],
  "ref_9": [
    [
      "astropy/io/votable/tree.py",
      [
        "Info",
        "ref_9"
      ]
    ]
  ],
  "unit_11": [
    [
      "astropy/io/votable/tree.py",
      [
        "Info",
        "unit_11"
      ]
    ]
  ],
  "unit_12": [
    [
      "astropy/io/votable/tree.py",
      [
        "Info",
        "unit_12"
      ]
    ]
  ],
  "null": [
    [
      "astropy/io/votable/tree.py",
      [
        "Values",
        "null"
      ]
    ]
  ],
  "null_2": [
    [
      "astropy/io/votable/tree.py",
      [
        "Values",
        "null_2"
      ]
    ]
  ],
  "null_3": [
    [
      "astropy/io/votable/tree.py",
      [
        "Values",
        "null_3"
      ]
    ]
  ],
  "type": [
    [
      "astropy/io/votable/tree.py",
      [
        "Values",
        "type"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "type"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Resource",
        "type"
      ]
    ]
  ],
  "type_5": [
    [
      "astropy/io/votable/tree.py",
      [
        "Values",
        "type_5"
      ]
    ]
  ],
  "ref_7": [
    [
      "astropy/io/votable/tree.py",
      [
        "Values",
        "ref_7"
      ]
    ]
  ],
  "min": [
    [
      "astropy/io/votable/tree.py",
      [
        "Values",
        "min"
      ]
    ],
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "min"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "min"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionQuantity",
        "min"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "min"
      ]
    ]
  ],
  "min_10": [
    [
      "astropy/io/votable/tree.py",
      [
        "Values",
        "min_10"
      ]
    ]
  ],
  "min_11": [
    [
      "astropy/io/votable/tree.py",
      [
        "Values",
        "min_11"
      ]
    ]
  ],
  "min_inclusive": [
    [
      "astropy/io/votable/tree.py",
      [
        "Values",
        "min_inclusive"
      ]
    ]
  ],
  "min_inclusive_13": [
    [
      "astropy/io/votable/tree.py",
      [
        "Values",
        "min_inclusive_13"
      ]
    ]
  ],
  "min_inclusive_14": [
    [
      "astropy/io/votable/tree.py",
      [
        "Values",
        "min_inclusive_14"
      ]
    ]
  ],
  "max": [
    [
      "astropy/io/votable/tree.py",
      [
        "Values",
        "max"
      ]
    ],
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "max"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "max"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionQuantity",
        "max"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "max"
      ]
    ]
  ],
  "max_16": [
    [
      "astropy/io/votable/tree.py",
      [
        "Values",
        "max_16"
      ]
    ]
  ],
  "max_17": [
    [
      "astropy/io/votable/tree.py",
      [
        "Values",
        "max_17"
      ]
    ]
  ],
  "max_inclusive": [
    [
      "astropy/io/votable/tree.py",
      [
        "Values",
        "max_inclusive"
      ]
    ]
  ],
  "max_inclusive_19": [
    [
      "astropy/io/votable/tree.py",
      [
        "Values",
        "max_inclusive_19"
      ]
    ]
  ],
  "max_inclusive_20": [
    [
      "astropy/io/votable/tree.py",
      [
        "Values",
        "max_inclusive_20"
      ]
    ]
  ],
  "options": [
    [
      "astropy/io/votable/tree.py",
      [
        "Values",
        "options"
      ]
    ]
  ],
  "is_defaults": [
    [
      "astropy/io/votable/tree.py",
      [
        "Values",
        "is_defaults"
      ]
    ]
  ],
  "yes_no": [
    [
      "astropy/io/votable/tree.py",
      [
        "Values",
        "to_xml",
        "yes_no"
      ]
    ]
  ],
  "uniqify_names": [
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "uniqify_names"
      ]
    ]
  ],
  "datatype": [
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "datatype"
      ]
    ]
  ],
  "datatype_3": [
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "datatype_3"
      ]
    ]
  ],
  "precision": [
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "precision"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "precision"
      ]
    ]
  ],
  "precision_5": [
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "precision_5"
      ]
    ]
  ],
  "precision_6": [
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "precision_6"
      ]
    ]
  ],
  "width": [
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "width"
      ]
    ]
  ],
  "width_8": [
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "width_8"
      ]
    ]
  ],
  "width_9": [
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "width_9"
      ]
    ]
  ],
  "ref_11": [
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "ref_11"
      ]
    ]
  ],
  "ref_12": [
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "ref_12"
      ]
    ]
  ],
  "unit_14": [
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "unit_14"
      ]
    ]
  ],
  "unit_15": [
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "unit_15"
      ]
    ]
  ],
  "arraysize": [
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "arraysize"
      ]
    ]
  ],
  "arraysize_17": [
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "arraysize_17"
      ]
    ]
  ],
  "arraysize_18": [
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "arraysize_18"
      ]
    ]
  ],
  "type_20": [
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "type_20"
      ]
    ]
  ],
  "type_21": [
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "type_21"
      ]
    ]
  ],
  "values_23": [
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "values_23"
      ]
    ]
  ],
  "values_24": [
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "values_24"
      ]
    ]
  ],
  "links": [
    [
      "astropy/io/votable/tree.py",
      [
        "Field",
        "links"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "links"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Resource",
        "links"
      ]
    ]
  ],
  "value_1": [
    [
      "astropy/io/votable/tree.py",
      [
        "Param",
        "value_1"
      ]
    ]
  ],
  "system_3": [
    [
      "astropy/io/votable/tree.py",
      [
        "CooSys",
        "system_3"
      ]
    ]
  ],
  "system_4": [
    [
      "astropy/io/votable/tree.py",
      [
        "CooSys",
        "system_4"
      ]
    ]
  ],
  "equinox": [
    [
      "astropy/io/votable/tree.py",
      [
        "CooSys",
        "equinox"
      ]
    ]
  ],
  "equinox_6": [
    [
      "astropy/io/votable/tree.py",
      [
        "CooSys",
        "equinox_6"
      ]
    ]
  ],
  "equinox_7": [
    [
      "astropy/io/votable/tree.py",
      [
        "CooSys",
        "equinox_7"
      ]
    ]
  ],
  "epoch": [
    [
      "astropy/io/votable/tree.py",
      [
        "CooSys",
        "epoch"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeFromEpoch",
        "epoch"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimePlotDate",
        "epoch"
      ]
    ]
  ],
  "epoch_9": [
    [
      "astropy/io/votable/tree.py",
      [
        "CooSys",
        "epoch_9"
      ]
    ]
  ],
  "epoch_10": [
    [
      "astropy/io/votable/tree.py",
      [
        "CooSys",
        "epoch_10"
      ]
    ]
  ],
  "timeorigin": [
    [
      "astropy/io/votable/tree.py",
      [
        "TimeSys",
        "timeorigin"
      ]
    ]
  ],
  "timeorigin_3": [
    [
      "astropy/io/votable/tree.py",
      [
        "TimeSys",
        "timeorigin_3"
      ]
    ]
  ],
  "timeorigin_4": [
    [
      "astropy/io/votable/tree.py",
      [
        "TimeSys",
        "timeorigin_4"
      ]
    ]
  ],
  "timescale": [
    [
      "astropy/io/votable/tree.py",
      [
        "TimeSys",
        "timescale"
      ]
    ]
  ],
  "timescale_6": [
    [
      "astropy/io/votable/tree.py",
      [
        "TimeSys",
        "timescale_6"
      ]
    ]
  ],
  "timescale_7": [
    [
      "astropy/io/votable/tree.py",
      [
        "TimeSys",
        "timescale_7"
      ]
    ]
  ],
  "refposition": [
    [
      "astropy/io/votable/tree.py",
      [
        "TimeSys",
        "refposition"
      ]
    ]
  ],
  "refposition_9": [
    [
      "astropy/io/votable/tree.py",
      [
        "TimeSys",
        "refposition_9"
      ]
    ]
  ],
  "refposition_10": [
    [
      "astropy/io/votable/tree.py",
      [
        "TimeSys",
        "refposition_10"
      ]
    ]
  ],
  "ref_1": [
    [
      "astropy/io/votable/tree.py",
      [
        "FieldRef",
        "ref_1"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "ParamRef",
        "ref_1"
      ]
    ]
  ],
  "ref_2": [
    [
      "astropy/io/votable/tree.py",
      [
        "FieldRef",
        "ref_2"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "ParamRef",
        "ref_2"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Group",
        "ref_2"
      ]
    ]
  ],
  "get_ref": [
    [
      "astropy/io/votable/tree.py",
      [
        "FieldRef",
        "get_ref"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "ParamRef",
        "get_ref"
      ]
    ]
  ],
  "ref_3": [
    [
      "astropy/io/votable/tree.py",
      [
        "Group",
        "ref_3"
      ]
    ]
  ],
  "entries": [
    [
      "astropy/io/votable/tree.py",
      [
        "Group",
        "entries"
      ]
    ]
  ],
  "_add_fieldref": [
    [
      "astropy/io/votable/tree.py",
      [
        "Group",
        "_add_fieldref"
      ]
    ]
  ],
  "_add_paramref": [
    [
      "astropy/io/votable/tree.py",
      [
        "Group",
        "_add_paramref"
      ]
    ]
  ],
  "_add_param": [
    [
      "astropy/io/votable/tree.py",
      [
        "Group",
        "_add_param"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "_add_param"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Resource",
        "_add_param"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "VOTableFile",
        "_add_param"
      ]
    ]
  ],
  "_add_group": [
    [
      "astropy/io/votable/tree.py",
      [
        "Group",
        "_add_group"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "_add_group"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Resource",
        "_add_group"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "VOTableFile",
        "_add_group"
      ]
    ]
  ],
  "iter_fields_and_params": [
    [
      "astropy/io/votable/tree.py",
      [
        "Group",
        "iter_fields_and_params"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "iter_fields_and_params"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Resource",
        "iter_fields_and_params"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "VOTableFile",
        "iter_fields_and_params"
      ]
    ]
  ],
  "iter_groups": [
    [
      "astropy/io/votable/tree.py",
      [
        "Group",
        "iter_groups"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "iter_groups"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "VOTableFile",
        "iter_groups"
      ]
    ]
  ],
  "__bytes__": [
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "__bytes__"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "Column",
        "__bytes__"
      ]
    ],
    [
      "astropy/table/row.py",
      [
        "Row",
        "__bytes__"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "__bytes__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "__bytes__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnrecognizedUnit",
        "__bytes__"
      ]
    ]
  ],
  "ref_4": [
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "ref_4"
      ]
    ]
  ],
  "ref_5": [
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "ref_5"
      ]
    ]
  ],
  "format": [
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "format"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "format"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "format"
      ]
    ],
    [
      "astropy/visualization/time.py",
      [
        "time_support",
        "MplTimeConverter",
        "format"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/formatter_locator.py",
      [
        "AngleFormatterLocator",
        "format"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/formatter_locator.py",
      [
        "ScalarFormatterLocator",
        "format"
      ]
    ]
  ],
  "format_7": [
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "format_7"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/formatter_locator.py",
      [
        "AngleFormatterLocator",
        "format_7"
      ]
    ]
  ],
  "nrows": [
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "nrows"
      ]
    ]
  ],
  "fields": [
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "fields"
      ]
    ]
  ],
  "params": [
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "params"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Resource",
        "params"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "VOTableFile",
        "params"
      ]
    ],
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "params"
      ]
    ]
  ],
  "groups": [
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "groups"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Resource",
        "groups"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "VOTableFile",
        "groups"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "groups"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "groups"
      ]
    ]
  ],
  "infos": [
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "infos"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Resource",
        "infos"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "VOTableFile",
        "infos"
      ]
    ]
  ],
  "is_empty": [
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "is_empty"
      ]
    ]
  ],
  "create_arrays": [
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "create_arrays"
      ]
    ]
  ],
  "_resize_strategy": [
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "_resize_strategy"
      ]
    ]
  ],
  "_add_field": [
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "_add_field"
      ]
    ]
  ],
  "_add_link": [
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "_add_link"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Resource",
        "_add_link"
      ]
    ]
  ],
  "_add_info": [
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "_add_info"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Resource",
        "_add_info"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "VOTableFile",
        "_add_info"
      ]
    ]
  ],
  "_parse_tabledata": [
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "_parse_tabledata"
      ]
    ]
  ],
  "careful_read": [
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "_get_binary_data_stream",
        "careful_read"
      ]
    ]
  ],
  "_get_binary_data_stream": [
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "_get_binary_data_stream"
      ]
    ]
  ],
  "_parse_binary": [
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "_parse_binary"
      ]
    ]
  ],
  "_parse_fits": [
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "_parse_fits"
      ]
    ]
  ],
  "_write_tabledata": [
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "_write_tabledata"
      ]
    ]
  ],
  "_write_binary": [
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "_write_binary"
      ]
    ]
  ],
  "iter_info": [
    [
      "astropy/io/votable/tree.py",
      [
        "Table",
        "iter_info"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "Resource",
        "iter_info"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "VOTableFile",
        "iter_info"
      ]
    ]
  ],
  "type_2": [
    [
      "astropy/io/votable/tree.py",
      [
        "Resource",
        "type_2"
      ]
    ]
  ],
  "extra_attributes": [
    [
      "astropy/io/votable/tree.py",
      [
        "Resource",
        "extra_attributes"
      ]
    ]
  ],
  "coordinate_systems": [
    [
      "astropy/io/votable/tree.py",
      [
        "Resource",
        "coordinate_systems"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "VOTableFile",
        "coordinate_systems"
      ]
    ]
  ],
  "time_systems": [
    [
      "astropy/io/votable/tree.py",
      [
        "Resource",
        "time_systems"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "VOTableFile",
        "time_systems"
      ]
    ]
  ],
  "tables": [
    [
      "astropy/io/votable/tree.py",
      [
        "Resource",
        "tables"
      ]
    ]
  ],
  "resources": [
    [
      "astropy/io/votable/tree.py",
      [
        "Resource",
        "resources"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "VOTableFile",
        "resources"
      ]
    ]
  ],
  "_add_table": [
    [
      "astropy/io/votable/tree.py",
      [
        "Resource",
        "_add_table"
      ]
    ]
  ],
  "_add_coosys": [
    [
      "astropy/io/votable/tree.py",
      [
        "Resource",
        "_add_coosys"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "VOTableFile",
        "_add_coosys"
      ]
    ]
  ],
  "_add_timesys": [
    [
      "astropy/io/votable/tree.py",
      [
        "Resource",
        "_add_timesys"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "VOTableFile",
        "_add_timesys"
      ]
    ]
  ],
  "_add_resource": [
    [
      "astropy/io/votable/tree.py",
      [
        "Resource",
        "_add_resource"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "VOTableFile",
        "_add_resource"
      ]
    ]
  ],
  "iter_tables": [
    [
      "astropy/io/votable/tree.py",
      [
        "Resource",
        "iter_tables"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "VOTableFile",
        "iter_tables"
      ]
    ]
  ],
  "iter_coosys": [
    [
      "astropy/io/votable/tree.py",
      [
        "Resource",
        "iter_coosys"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "VOTableFile",
        "iter_coosys"
      ]
    ]
  ],
  "iter_timesys": [
    [
      "astropy/io/votable/tree.py",
      [
        "Resource",
        "iter_timesys"
      ]
    ],
    [
      "astropy/io/votable/tree.py",
      [
        "VOTableFile",
        "iter_timesys"
      ]
    ]
  ],
  "version": [
    [
      "astropy/io/votable/tree.py",
      [
        "VOTableFile",
        "version"
      ]
    ]
  ],
  "version_2": [
    [
      "astropy/io/votable/tree.py",
      [
        "VOTableFile",
        "version_2"
      ]
    ]
  ],
  "_get_version_checks": [
    [
      "astropy/io/votable/tree.py",
      [
        "VOTableFile",
        "_get_version_checks"
      ]
    ]
  ],
  "get_first_table": [
    [
      "astropy/io/votable/tree.py",
      [
        "VOTableFile",
        "get_first_table"
      ]
    ]
  ],
  "get_table_by_index": [
    [
      "astropy/io/votable/tree.py",
      [
        "VOTableFile",
        "get_table_by_index"
      ]
    ]
  ],
  "iter_values": [
    [
      "astropy/io/votable/tree.py",
      [
        "VOTableFile",
        "iter_values"
      ]
    ]
  ],
  "set_all_tables_format": [
    [
      "astropy/io/votable/tree.py",
      [
        "VOTableFile",
        "set_all_tables_format"
      ]
    ]
  ],
  "is_primary": [
    [
      "astropy/io/votable/ucd.py",
      [
        "UCDWords",
        "is_primary"
      ]
    ]
  ],
  "is_secondary": [
    [
      "astropy/io/votable/ucd.py",
      [
        "UCDWords",
        "is_secondary"
      ]
    ]
  ],
  "get_description": [
    [
      "astropy/io/votable/ucd.py",
      [
        "UCDWords",
        "get_description"
      ]
    ]
  ],
  "normalize_capitalization": [
    [
      "astropy/io/votable/ucd.py",
      [
        "UCDWords",
        "normalize_capitalization"
      ]
    ]
  ],
  "parse_ucd": [
    [
      "astropy/io/votable/ucd.py",
      [
        "parse_ucd"
      ]
    ]
  ],
  "convert_to_writable_filelike": [
    [
      "astropy/io/votable/util.py",
      [
        "convert_to_writable_filelike"
      ]
    ]
  ],
  "str_or_none": [
    [
      "astropy/io/votable/util.py",
      [
        "coerce_range_list_param",
        "str_or_none"
      ]
    ]
  ],
  "numeric_or_range": [
    [
      "astropy/io/votable/util.py",
      [
        "coerce_range_list_param",
        "numeric_or_range"
      ]
    ]
  ],
  "is_frame_of_reference": [
    [
      "astropy/io/votable/util.py",
      [
        "coerce_range_list_param",
        "is_frame_of_reference"
      ]
    ]
  ],
  "coerce_range_list_param": [
    [
      "astropy/io/votable/util.py",
      [
        "coerce_range_list_param"
      ]
    ]
  ],
  "version_compare": [
    [
      "astropy/io/votable/util.py",
      [
        "version_compare"
      ]
    ]
  ],
  "make_html_header": [
    [
      "astropy/io/votable/validator/html.py",
      [
        "make_html_header"
      ]
    ]
  ],
  "write_source_line": [
    [
      "astropy/io/votable/validator/html.py",
      [
        "write_source_line"
      ]
    ]
  ],
  "write_warning": [
    [
      "astropy/io/votable/validator/html.py",
      [
        "write_warning"
      ]
    ]
  ],
  "write_votlint_warning": [
    [
      "astropy/io/votable/validator/html.py",
      [
        "write_votlint_warning"
      ]
    ]
  ],
  "write_result": [
    [
      "astropy/io/votable/validator/html.py",
      [
        "write_result"
      ]
    ]
  ],
  "write_result_row": [
    [
      "astropy/io/votable/validator/html.py",
      [
        "write_result_row"
      ]
    ]
  ],
  "write_page_links": [
    [
      "astropy/io/votable/validator/html.py",
      [
        "write_table",
        "write_page_links"
      ]
    ]
  ],
  "add_subset": [
    [
      "astropy/io/votable/validator/html.py",
      [
        "add_subset"
      ]
    ]
  ],
  "write_index": [
    [
      "astropy/io/votable/validator/html.py",
      [
        "write_index"
      ]
    ]
  ],
  "write_index_table": [
    [
      "astropy/io/votable/validator/html.py",
      [
        "write_index_table"
      ]
    ]
  ],
  "get_srcdir": [
    [
      "astropy/io/votable/validator/main.py",
      [
        "get_srcdir"
      ]
    ]
  ],
  "get_urls": [
    [
      "astropy/io/votable/validator/main.py",
      [
        "get_urls"
      ]
    ]
  ],
  "download": [
    [
      "astropy/io/votable/validator/main.py",
      [
        "download"
      ]
    ]
  ],
  "validate_vo": [
    [
      "astropy/io/votable/validator/main.py",
      [
        "validate_vo"
      ]
    ],
    [
      "astropy/io/votable/validator/result.py",
      [
        "Result",
        "validate_vo"
      ]
    ]
  ],
  "votlint_validate": [
    [
      "astropy/io/votable/validator/main.py",
      [
        "votlint_validate"
      ]
    ]
  ],
  "write_html_result": [
    [
      "astropy/io/votable/validator/main.py",
      [
        "write_html_result"
      ]
    ]
  ],
  "write_subindex": [
    [
      "astropy/io/votable/validator/main.py",
      [
        "write_subindex"
      ]
    ]
  ],
  "make_validation_report": [
    [
      "astropy/io/votable/validator/main.py",
      [
        "make_validation_report"
      ]
    ]
  ],
  "get_dirpath": [
    [
      "astropy/io/votable/validator/result.py",
      [
        "Result",
        "get_dirpath"
      ]
    ]
  ],
  "get_htmlpath": [
    [
      "astropy/io/votable/validator/result.py",
      [
        "Result",
        "get_htmlpath"
      ]
    ]
  ],
  "get_attribute_path": [
    [
      "astropy/io/votable/validator/result.py",
      [
        "Result",
        "get_attribute_path"
      ]
    ]
  ],
  "get_vo_xml_path": [
    [
      "astropy/io/votable/validator/result.py",
      [
        "Result",
        "get_vo_xml_path"
      ]
    ]
  ],
  "load_attributes": [
    [
      "astropy/io/votable/validator/result.py",
      [
        "Result",
        "load_attributes"
      ]
    ]
  ],
  "save_attributes": [
    [
      "astropy/io/votable/validator/result.py",
      [
        "Result",
        "save_attributes"
      ]
    ]
  ],
  "fail": [
    [
      "astropy/io/votable/validator/result.py",
      [
        "Result",
        "download_xml_content",
        "fail"
      ]
    ]
  ],
  "download_xml_content": [
    [
      "astropy/io/votable/validator/result.py",
      [
        "Result",
        "download_xml_content"
      ]
    ]
  ],
  "get_xml_content": [
    [
      "astropy/io/votable/validator/result.py",
      [
        "Result",
        "get_xml_content"
      ]
    ]
  ],
  "has_warning": [
    [
      "astropy/io/votable/validator/result.py",
      [
        "Result",
        "has_warning"
      ]
    ]
  ],
  "match_expectations": [
    [
      "astropy/io/votable/validator/result.py",
      [
        "Result",
        "match_expectations"
      ]
    ]
  ],
  "validate_with_votlint": [
    [
      "astropy/io/votable/validator/result.py",
      [
        "Result",
        "validate_with_votlint"
      ]
    ]
  ],
  "get_result_subsets": [
    [
      "astropy/io/votable/validator/result.py",
      [
        "get_result_subsets"
      ]
    ]
  ],
  "check_id": [
    [
      "astropy/io/votable/xmlutil.py",
      [
        "check_id"
      ]
    ],
    [
      "astropy/utils/xml/check.py",
      [
        "check_id"
      ]
    ]
  ],
  "fix_id": [
    [
      "astropy/io/votable/xmlutil.py",
      [
        "fix_id"
      ]
    ],
    [
      "astropy/utils/xml/check.py",
      [
        "fix_id"
      ]
    ]
  ],
  "check_token": [
    [
      "astropy/io/votable/xmlutil.py",
      [
        "check_token"
      ]
    ],
    [
      "astropy/utils/xml/check.py",
      [
        "check_token"
      ]
    ]
  ],
  "check_mime_content_type": [
    [
      "astropy/io/votable/xmlutil.py",
      [
        "check_mime_content_type"
      ]
    ],
    [
      "astropy/utils/xml/check.py",
      [
        "check_mime_content_type"
      ]
    ]
  ],
  "check_anyuri": [
    [
      "astropy/io/votable/xmlutil.py",
      [
        "check_anyuri"
      ]
    ],
    [
      "astropy/utils/xml/check.py",
      [
        "check_anyuri"
      ]
    ]
  ],
  "validate_schema": [
    [
      "astropy/io/votable/xmlutil.py",
      [
        "validate_schema"
      ]
    ],
    [
      "astropy/utils/xml/validate.py",
      [
        "validate_schema"
      ]
    ]
  ],
  "_init_log": [
    [
      "astropy/logger.py",
      [
        "_init_log"
      ]
    ]
  ],
  "_teardown_log": [
    [
      "astropy/logger.py",
      [
        "_teardown_log"
      ]
    ]
  ],
  "makeRecord": [
    [
      "astropy/logger.py",
      [
        "AstropyLogger",
        "makeRecord"
      ]
    ]
  ],
  "_showwarning": [
    [
      "astropy/logger.py",
      [
        "AstropyLogger",
        "_showwarning"
      ]
    ]
  ],
  "warnings_logging_enabled": [
    [
      "astropy/logger.py",
      [
        "AstropyLogger",
        "warnings_logging_enabled"
      ]
    ]
  ],
  "enable_warnings_logging": [
    [
      "astropy/logger.py",
      [
        "AstropyLogger",
        "enable_warnings_logging"
      ]
    ]
  ],
  "disable_warnings_logging": [
    [
      "astropy/logger.py",
      [
        "AstropyLogger",
        "disable_warnings_logging"
      ]
    ]
  ],
  "_excepthook": [
    [
      "astropy/logger.py",
      [
        "AstropyLogger",
        "_excepthook"
      ]
    ]
  ],
  "exception_logging_enabled": [
    [
      "astropy/logger.py",
      [
        "AstropyLogger",
        "exception_logging_enabled"
      ]
    ]
  ],
  "enable_exception_logging": [
    [
      "astropy/logger.py",
      [
        "AstropyLogger",
        "enable_exception_logging"
      ]
    ]
  ],
  "disable_exception_logging": [
    [
      "astropy/logger.py",
      [
        "AstropyLogger",
        "disable_exception_logging"
      ]
    ]
  ],
  "enable_color": [
    [
      "astropy/logger.py",
      [
        "AstropyLogger",
        "enable_color"
      ]
    ]
  ],
  "disable_color": [
    [
      "astropy/logger.py",
      [
        "AstropyLogger",
        "disable_color"
      ]
    ]
  ],
  "log_to_file": [
    [
      "astropy/logger.py",
      [
        "AstropyLogger",
        "log_to_file"
      ]
    ]
  ],
  "log_to_list": [
    [
      "astropy/logger.py",
      [
        "AstropyLogger",
        "log_to_list"
      ]
    ]
  ],
  "_set_defaults": [
    [
      "astropy/logger.py",
      [
        "AstropyLogger",
        "_set_defaults"
      ]
    ]
  ],
  "emit": [
    [
      "astropy/logger.py",
      [
        "StreamHandler",
        "emit"
      ]
    ],
    [
      "astropy/logger.py",
      [
        "ListHandler",
        "emit"
      ]
    ]
  ],
  "filter": [
    [
      "astropy/logger.py",
      [
        "FilterOrigin",
        "filter"
      ]
    ],
    [
      "astropy/table/groups.py",
      [
        "ColumnGroups",
        "filter"
      ]
    ],
    [
      "astropy/table/groups.py",
      [
        "TableGroups",
        "filter"
      ]
    ]
  ],
  "_validate_shape": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_Interval",
        "_validate_shape"
      ]
    ]
  ],
  "_validate_bounds": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_Interval",
        "_validate_bounds"
      ]
    ]
  ],
  "outside": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_Interval",
        "outside"
      ]
    ]
  ],
  "domain": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_Interval",
        "domain"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "ModelBoundingBox",
        "domain"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "_PolyDomainWindow1D",
        "domain"
      ]
    ]
  ],
  "get_index": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "get_index"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "get_index"
      ]
    ]
  ],
  "order": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_BoundingDomain",
        "order"
      ]
    ]
  ],
  "ignored": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_BoundingDomain",
        "ignored"
      ]
    ]
  ],
  "_get_order": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_BoundingDomain",
        "_get_order"
      ]
    ]
  ],
  "_get_name": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_BoundingDomain",
        "_get_name"
      ]
    ]
  ],
  "ignored_inputs": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_BoundingDomain",
        "ignored_inputs"
      ]
    ]
  ],
  "_validate_ignored": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_BoundingDomain",
        "_validate_ignored"
      ]
    ]
  ],
  "fix_inputs": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_BoundingDomain",
        "fix_inputs"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "ModelBoundingBox",
        "fix_inputs"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "CompoundBoundingBox",
        "fix_inputs"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "fix_inputs"
      ]
    ]
  ],
  "prepare_inputs": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_BoundingDomain",
        "prepare_inputs"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "ModelBoundingBox",
        "prepare_inputs"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "CompoundBoundingBox",
        "prepare_inputs"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "prepare_inputs"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "OrthoPolynomialBase",
        "prepare_inputs"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Chebyshev1D",
        "prepare_inputs"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Hermite1D",
        "prepare_inputs"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Legendre1D",
        "prepare_inputs"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Polynomial1D",
        "prepare_inputs"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Polynomial2D",
        "prepare_inputs"
      ]
    ]
  ],
  "_base_output": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_BoundingDomain",
        "_base_output"
      ]
    ]
  ],
  "_all_out_output": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_BoundingDomain",
        "_all_out_output"
      ]
    ]
  ],
  "_modify_output": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_BoundingDomain",
        "_modify_output"
      ]
    ]
  ],
  "_prepare_outputs": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_BoundingDomain",
        "_prepare_outputs"
      ]
    ]
  ],
  "prepare_outputs": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_BoundingDomain",
        "prepare_outputs"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "prepare_outputs"
      ]
    ]
  ],
  "_get_valid_outputs_unit": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_BoundingDomain",
        "_get_valid_outputs_unit"
      ]
    ]
  ],
  "_evaluate_model": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_BoundingDomain",
        "_evaluate_model"
      ]
    ]
  ],
  "_evaluate": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_BoundingDomain",
        "_evaluate"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "_evaluate"
      ]
    ],
    [
      "astropy/modeling/rotations.py",
      [
        "_SkyRotation",
        "_evaluate"
      ]
    ]
  ],
  "_set_outputs_unit": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_BoundingDomain",
        "_set_outputs_unit"
      ]
    ]
  ],
  "intervals": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "ModelBoundingBox",
        "intervals"
      ]
    ]
  ],
  "named_intervals": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "ModelBoundingBox",
        "named_intervals"
      ]
    ]
  ],
  "has_interval": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "ModelBoundingBox",
        "has_interval"
      ]
    ]
  ],
  "bounding_box": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "ModelBoundingBox",
        "bounding_box"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "bounding_box"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Gaussian1D",
        "bounding_box"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Gaussian2D",
        "bounding_box"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Tangent1D",
        "bounding_box"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "ArcSine1D",
        "bounding_box"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "ArcCosine1D",
        "bounding_box"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Lorentz1D",
        "bounding_box"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Ellipse2D",
        "bounding_box"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Disk2D",
        "bounding_box"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Ring2D",
        "bounding_box"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Box1D",
        "bounding_box"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Box2D",
        "bounding_box"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Trapezoid1D",
        "bounding_box"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "TrapezoidDisk2D",
        "bounding_box"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "RickerWavelet1D",
        "bounding_box"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "KingProjectedAnalytic1D",
        "bounding_box"
      ]
    ],
    [
      "astropy/modeling/physical_models.py",
      [
        "Drude1D",
        "bounding_box"
      ]
    ],
    [
      "astropy/modeling/tabular.py",
      [
        "_Tabular",
        "bounding_box"
      ]
    ],
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_render_model_3d",
        "Ellipsoid3D",
        "bounding_box"
      ]
    ],
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_custom_model_bounding_box",
        "Ellipsoid3D",
        "bounding_box"
      ]
    ]
  ],
  "_validate_dict": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "ModelBoundingBox",
        "_validate_dict"
      ]
    ]
  ],
  "_validate_sequence": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "ModelBoundingBox",
        "_validate_sequence"
      ]
    ]
  ],
  "_n_inputs": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "ModelBoundingBox",
        "_n_inputs"
      ]
    ]
  ],
  "_validate_iterable": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "ModelBoundingBox",
        "_validate_iterable"
      ]
    ]
  ],
  "_validate": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "ModelBoundingBox",
        "_validate"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "CompoundBoundingBox",
        "_validate"
      ]
    ]
  ],
  "_outside": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "ModelBoundingBox",
        "_outside"
      ]
    ]
  ],
  "_valid_index": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "ModelBoundingBox",
        "_valid_index"
      ]
    ]
  ],
  "get_selector": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_SelectorArgument",
        "get_selector"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "_SelectorArguments",
        "get_selector"
      ]
    ]
  ],
  "pretty_repr": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_SelectorArgument",
        "pretty_repr"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "_SelectorArguments",
        "pretty_repr"
      ]
    ]
  ],
  "get_fixed_value": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_SelectorArgument",
        "get_fixed_value"
      ]
    ]
  ],
  "is_argument": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_SelectorArgument",
        "is_argument"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "_SelectorArguments",
        "is_argument"
      ]
    ]
  ],
  "named_tuple": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_SelectorArgument",
        "named_tuple"
      ]
    ],
    [
      "astropy/modeling/bounding_box.py",
      [
        "_SelectorArguments",
        "named_tuple"
      ]
    ]
  ],
  "ignore": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_SelectorArguments",
        "ignore"
      ]
    ]
  ],
  "kept_ignore": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_SelectorArguments",
        "kept_ignore"
      ]
    ]
  ],
  "is_selector": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_SelectorArguments",
        "is_selector"
      ]
    ]
  ],
  "get_fixed_values": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_SelectorArguments",
        "get_fixed_values"
      ]
    ]
  ],
  "selector_index": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_SelectorArguments",
        "selector_index"
      ]
    ]
  ],
  "reduce": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_SelectorArguments",
        "reduce"
      ]
    ]
  ],
  "add_ignore": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "_SelectorArguments",
        "add_ignore"
      ]
    ]
  ],
  "bounding_boxes": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "CompoundBoundingBox",
        "bounding_boxes"
      ]
    ]
  ],
  "selector_args": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "CompoundBoundingBox",
        "selector_args"
      ]
    ]
  ],
  "selector_args_4": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "CompoundBoundingBox",
        "selector_args_4"
      ]
    ]
  ],
  "named_selector_tuple": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "CompoundBoundingBox",
        "named_selector_tuple"
      ]
    ]
  ],
  "create_selector": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "CompoundBoundingBox",
        "create_selector"
      ]
    ]
  ],
  "_get_selector_key": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "CompoundBoundingBox",
        "_get_selector_key"
      ]
    ]
  ],
  "_create_bounding_box": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "CompoundBoundingBox",
        "_create_bounding_box"
      ]
    ]
  ],
  "_select_bounding_box": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "CompoundBoundingBox",
        "_select_bounding_box"
      ]
    ]
  ],
  "_matching_bounding_boxes": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "CompoundBoundingBox",
        "_matching_bounding_boxes"
      ]
    ]
  ],
  "_fix_input_selector_arg": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "CompoundBoundingBox",
        "_fix_input_selector_arg"
      ]
    ]
  ],
  "_fix_input_bbox_arg": [
    [
      "astropy/modeling/bounding_box.py",
      [
        "CompoundBoundingBox",
        "_fix_input_bbox_arg"
      ]
    ]
  ],
  "clear_cache": [
    [
      "astropy/modeling/convolution.py",
      [
        "Convolution",
        "clear_cache"
      ]
    ]
  ],
  "_get_convolution": [
    [
      "astropy/modeling/convolution.py",
      [
        "Convolution",
        "_get_convolution"
      ]
    ]
  ],
  "_convolution_inputs": [
    [
      "astropy/modeling/convolution.py",
      [
        "Convolution",
        "_convolution_inputs"
      ]
    ]
  ],
  "_convolution_outputs": [
    [
      "astropy/modeling/convolution.py",
      [
        "Convolution",
        "_convolution_outputs"
      ]
    ]
  ],
  "_model_oper": [
    [
      "astropy/modeling/core.py",
      [
        "_model_oper"
      ]
    ]
  ],
  "_repr_pretty_": [
    [
      "astropy/modeling/core.py",
      [
        "_ModelMeta",
        "_repr_pretty_"
      ]
    ]
  ],
  "_is_concrete": [
    [
      "astropy/modeling/core.py",
      [
        "_ModelMeta",
        "_is_concrete"
      ]
    ]
  ],
  "_create_inverse_property": [
    [
      "astropy/modeling/core.py",
      [
        "_ModelMeta",
        "_create_inverse_property"
      ]
    ]
  ],
  "_create_bounding_box_property": [
    [
      "astropy/modeling/core.py",
      [
        "_ModelMeta",
        "_create_bounding_box_property"
      ]
    ]
  ],
  "_create_bounding_box_subclass": [
    [
      "astropy/modeling/core.py",
      [
        "_ModelMeta",
        "_create_bounding_box_subclass"
      ]
    ]
  ],
  "update_wrapper": [
    [
      "astropy/modeling/core.py",
      [
        "_ModelMeta",
        "_handle_special_methods",
        "update_wrapper"
      ]
    ]
  ],
  "_handle_special_methods": [
    [
      "astropy/modeling/core.py",
      [
        "_ModelMeta",
        "_handle_special_methods"
      ]
    ]
  ],
  "format_inheritance": [
    [
      "astropy/modeling/core.py",
      [
        "_ModelMeta",
        "_format_cls_repr",
        "format_inheritance"
      ]
    ]
  ],
  "_format_cls_repr": [
    [
      "astropy/modeling/core.py",
      [
        "_ModelMeta",
        "_format_cls_repr"
      ]
    ]
  ],
  "_default_inputs_outputs": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_default_inputs_outputs"
      ]
    ]
  ],
  "_initialize_setters": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_initialize_setters"
      ]
    ]
  ],
  "inputs": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "inputs"
      ]
    ],
    [
      "astropy/modeling/mappings.py",
      [
        "UnitsMapping",
        "inputs"
      ]
    ]
  ],
  "inputs_4": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "inputs_4"
      ]
    ],
    [
      "astropy/modeling/mappings.py",
      [
        "UnitsMapping",
        "inputs_4"
      ]
    ]
  ],
  "outputs": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "outputs"
      ]
    ],
    [
      "astropy/modeling/mappings.py",
      [
        "UnitsMapping",
        "outputs"
      ]
    ]
  ],
  "outputs_6": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "outputs_6"
      ]
    ],
    [
      "astropy/modeling/mappings.py",
      [
        "UnitsMapping",
        "outputs_6"
      ]
    ]
  ],
  "n_inputs": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "n_inputs"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "n_inputs"
      ]
    ],
    [
      "astropy/modeling/mappings.py",
      [
        "Mapping",
        "n_inputs"
      ]
    ],
    [
      "astropy/modeling/mappings.py",
      [
        "UnitsMapping",
        "n_inputs"
      ]
    ],
    [
      "astropy/modeling/rotations.py",
      [
        "SphericalRotationSequence",
        "n_inputs"
      ]
    ]
  ],
  "n_outputs": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "n_outputs"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "n_outputs"
      ]
    ],
    [
      "astropy/modeling/mappings.py",
      [
        "Mapping",
        "n_outputs"
      ]
    ],
    [
      "astropy/modeling/mappings.py",
      [
        "UnitsMapping",
        "n_outputs"
      ]
    ],
    [
      "astropy/modeling/rotations.py",
      [
        "SphericalRotationSequence",
        "n_outputs"
      ]
    ]
  ],
  "_calculate_separability_matrix": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_calculate_separability_matrix"
      ]
    ],
    [
      "astropy/modeling/tests/test_models.py",
      [
        "ModelCustom",
        "_calculate_separability_matrix"
      ]
    ]
  ],
  "_initialize_unit_support": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_initialize_unit_support"
      ]
    ]
  ],
  "input_units_strict": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "input_units_strict"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "input_units_strict"
      ]
    ]
  ],
  "input_units_allow_dimensionless": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "input_units_allow_dimensionless"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "input_units_allow_dimensionless"
      ]
    ]
  ],
  "uses_quantity": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "uses_quantity"
      ]
    ]
  ],
  "_strip_ones": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_strip_ones"
      ]
    ]
  ],
  "_pre_evaluate": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_pre_evaluate"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "_pre_evaluate"
      ]
    ]
  ],
  "get_bounding_box": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "get_bounding_box"
      ]
    ]
  ],
  "_argnames": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_argnames"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "_argnames"
      ]
    ]
  ],
  "_validate_input_shape": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_validate_input_shape"
      ]
    ]
  ],
  "_validate_input_shapes": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_validate_input_shapes"
      ]
    ]
  ],
  "input_shape": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "input_shape"
      ]
    ]
  ],
  "_generic_evaluate": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_generic_evaluate"
      ]
    ]
  ],
  "_post_evaluate": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_post_evaluate"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "_post_evaluate"
      ]
    ]
  ],
  "bbox_with_units": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "bbox_with_units"
      ]
    ]
  ],
  "_keyword2positional": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_get_renamed_inputs_as_positional",
        "_keyword2positional"
      ]
    ]
  ],
  "_get_renamed_inputs_as_positional": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_get_renamed_inputs_as_positional"
      ]
    ]
  ],
  "name_31": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "name_31"
      ]
    ]
  ],
  "model_set_axis": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "model_set_axis"
      ]
    ]
  ],
  "param_sets": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "param_sets"
      ]
    ]
  ],
  "parameters_35": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "parameters_35"
      ]
    ]
  ],
  "sync_constraints": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "sync_constraints"
      ]
    ]
  ],
  "sync_constraints_37": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "sync_constraints_37"
      ]
    ]
  ],
  "fixed": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "fixed"
      ]
    ],
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "fixed"
      ]
    ]
  ],
  "bounds": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "bounds"
      ]
    ],
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "bounds"
      ]
    ]
  ],
  "tied": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "tied"
      ]
    ],
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "tied"
      ]
    ]
  ],
  "eqcons": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "eqcons"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "eqcons"
      ]
    ]
  ],
  "ineqcons": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "ineqcons"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "ineqcons"
      ]
    ]
  ],
  "has_inverse": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "has_inverse"
      ]
    ]
  ],
  "inverse_45": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "inverse_45"
      ]
    ]
  ],
  "inverse_46": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "inverse_46"
      ]
    ]
  ],
  "has_user_inverse": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "has_user_inverse"
      ]
    ]
  ],
  "bounding_box_49": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "bounding_box_49"
      ]
    ]
  ],
  "set_slice_args": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "set_slice_args"
      ]
    ]
  ],
  "bounding_box_51": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "bounding_box_51"
      ]
    ]
  ],
  "has_user_bounding_box": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "has_user_bounding_box"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "has_user_bounding_box"
      ]
    ]
  ],
  "cov_matrix": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "cov_matrix"
      ]
    ]
  ],
  "cov_matrix_54": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "cov_matrix_54"
      ]
    ]
  ],
  "stds": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "stds"
      ]
    ]
  ],
  "stds_56": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "stds_56"
      ]
    ]
  ],
  "without_units_for_data": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "without_units_for_data"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "without_units_for_data"
      ]
    ]
  ],
  "output_units": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "output_units"
      ]
    ]
  ],
  "strip_units_from_tree": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "strip_units_from_tree"
      ]
    ]
  ],
  "with_units_from_data": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "with_units_from_data"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "with_units_from_data"
      ]
    ]
  ],
  "_has_units": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_has_units"
      ]
    ]
  ],
  "_supports_unit_fitting": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_supports_unit_fitting"
      ]
    ]
  ],
  "sum_of_implicit_terms": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "sum_of_implicit_terms"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Shift",
        "sum_of_implicit_terms"
      ]
    ]
  ],
  "render": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "render"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "render"
      ]
    ]
  ],
  "input_units": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Gaussian1D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Gaussian2D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Shift",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Scale",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Sersic1D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "_Trigonometric1D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "_InverseTrigonometric1D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Linear1D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Lorentz1D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Voigt1D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Const1D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Const2D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Ellipse2D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Disk2D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Ring2D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Box1D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Box2D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Trapezoid1D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "TrapezoidDisk2D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "RickerWavelet1D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "RickerWavelet2D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "AiryDisk2D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Moffat1D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Moffat2D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Sersic2D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "KingProjectedAnalytic1D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Logarithmic1D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Exponential1D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/mappings.py",
      [
        "UnitsMapping",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/physical_models.py",
      [
        "BlackBody",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/physical_models.py",
      [
        "Drude1D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/physical_models.py",
      [
        "Plummer1D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/physical_models.py",
      [
        "NFW",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Polynomial1D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Polynomial2D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/powerlaws.py",
      [
        "PowerLaw1D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/powerlaws.py",
      [
        "BrokenPowerLaw1D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/powerlaws.py",
      [
        "SmoothlyBrokenPowerLaw1D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/powerlaws.py",
      [
        "ExponentialCutoffPowerLaw1D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/powerlaws.py",
      [
        "LogParabola1D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/projections.py",
      [
        "Pix2SkyProjection",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/projections.py",
      [
        "Sky2PixProjection",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/projections.py",
      [
        "AffineTransformation2D",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/rotations.py",
      [
        "_EulerRotation",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/rotations.py",
      [
        "RotateNative2Celestial",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/rotations.py",
      [
        "RotateCelestial2Native",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/tabular.py",
      [
        "_Tabular",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/tests/test_quantities_evaluation.py",
      [
        "test_compound_return_units",
        "PassModel",
        "input_units"
      ]
    ],
    [
      "astropy/modeling/tests/test_quantities_fitting.py",
      [
        "CustomInputNamesModel",
        "input_units"
      ]
    ]
  ],
  "return_units": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "return_units"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "return_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Box1D",
        "return_units"
      ]
    ],
    [
      "astropy/modeling/physical_models.py",
      [
        "Drude1D",
        "return_units"
      ]
    ],
    [
      "astropy/modeling/physical_models.py",
      [
        "NFW",
        "return_units"
      ]
    ],
    [
      "astropy/modeling/projections.py",
      [
        "Pix2SkyProjection",
        "return_units"
      ]
    ],
    [
      "astropy/modeling/projections.py",
      [
        "Sky2PixProjection",
        "return_units"
      ]
    ],
    [
      "astropy/modeling/rotations.py",
      [
        "_EulerRotation",
        "return_units"
      ]
    ],
    [
      "astropy/modeling/rotations.py",
      [
        "RotateNative2Celestial",
        "return_units"
      ]
    ],
    [
      "astropy/modeling/rotations.py",
      [
        "RotateCelestial2Native",
        "return_units"
      ]
    ],
    [
      "astropy/modeling/tabular.py",
      [
        "_Tabular",
        "return_units"
      ]
    ],
    [
      "astropy/modeling/tests/test_quantities_evaluation.py",
      [
        "test_compound_return_units",
        "PassModel",
        "return_units"
      ]
    ]
  ],
  "_prepare_inputs_single_model": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_prepare_inputs_single_model"
      ]
    ]
  ],
  "_remove_axes_from_shape": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_remove_axes_from_shape"
      ]
    ]
  ],
  "_prepare_inputs_model_set": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_prepare_inputs_model_set"
      ]
    ]
  ],
  "_validate_input_units": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_validate_input_units"
      ]
    ]
  ],
  "_process_output_units": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_process_output_units"
      ]
    ]
  ],
  "_prepare_output_single_model": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_prepare_output_single_model"
      ]
    ]
  ],
  "_prepare_outputs_single_model": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_prepare_outputs_single_model"
      ]
    ]
  ],
  "_prepare_outputs_model_set": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_prepare_outputs_model_set"
      ]
    ]
  ],
  "deepcopy": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "deepcopy"
      ]
    ],
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "deepcopy"
      ]
    ]
  ],
  "coerce_units": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "coerce_units"
      ]
    ]
  ],
  "n_submodels": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "n_submodels"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "n_submodels"
      ]
    ]
  ],
  "_initialize_constraints": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_initialize_constraints"
      ]
    ]
  ],
  "_initialize_parameters": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_initialize_parameters"
      ]
    ]
  ],
  "_initialize_parameter_value": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_initialize_parameter_value"
      ]
    ]
  ],
  "_initialize_slices": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_initialize_slices"
      ]
    ],
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "_initialize_slices"
      ]
    ]
  ],
  "_parameters_to_array": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_parameters_to_array"
      ]
    ]
  ],
  "_array_to_parameters": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_array_to_parameters"
      ]
    ]
  ],
  "_check_param_broadcast": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_check_param_broadcast"
      ]
    ]
  ],
  "_param_sets": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_param_sets"
      ]
    ]
  ],
  "_format_repr": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_format_repr"
      ]
    ]
  ],
  "_format_str": [
    [
      "astropy/modeling/core.py",
      [
        "Model",
        "_format_str"
      ]
    ]
  ],
  "_make_arithmetic_operator": [
    [
      "astropy/modeling/core.py",
      [
        "_make_arithmetic_operator"
      ]
    ]
  ],
  "_composition_operator": [
    [
      "astropy/modeling/core.py",
      [
        "_composition_operator"
      ]
    ]
  ],
  "_join_operator": [
    [
      "astropy/modeling/core.py",
      [
        "_join_operator"
      ]
    ]
  ],
  "_add_special_operator": [
    [
      "astropy/modeling/core.py",
      [
        "_add_special_operator"
      ]
    ]
  ],
  "_get_left_inputs_from_args": [
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "_get_left_inputs_from_args"
      ]
    ]
  ],
  "_get_right_inputs_from_args": [
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "_get_right_inputs_from_args"
      ]
    ]
  ],
  "_get_left_params_from_args": [
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "_get_left_params_from_args"
      ]
    ]
  ],
  "_get_right_params_from_args": [
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "_get_right_params_from_args"
      ]
    ]
  ],
  "_get_kwarg_model_parameters_as_positional": [
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "_get_kwarg_model_parameters_as_positional"
      ]
    ]
  ],
  "_apply_operators_to_value_lists": [
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "_apply_operators_to_value_lists"
      ]
    ]
  ],
  "submodel_names": [
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "submodel_names"
      ]
    ]
  ],
  "both_inverses_exist": [
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "both_inverses_exist"
      ]
    ]
  ],
  "param_names": [
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "param_names"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "PolynomialBase",
        "param_names"
      ]
    ],
    [
      "astropy/modeling/spline.py",
      [
        "_Spline",
        "param_names"
      ]
    ]
  ],
  "_make_leaflist": [
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "_make_leaflist"
      ]
    ]
  ],
  "_str_index_to_int": [
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "_str_index_to_int"
      ]
    ]
  ],
  "n_inputs_20": [
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "n_inputs_20"
      ]
    ]
  ],
  "n_outputs_22": [
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "n_outputs_22"
      ]
    ]
  ],
  "eqcons_24": [
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "eqcons_24"
      ]
    ]
  ],
  "ineqcons_26": [
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "ineqcons_26"
      ]
    ]
  ],
  "traverse_postorder": [
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "traverse_postorder"
      ]
    ]
  ],
  "_format_expression": [
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "_format_expression"
      ]
    ]
  ],
  "_format_components": [
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "_format_components"
      ]
    ]
  ],
  "isleaf": [
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "isleaf"
      ]
    ]
  ],
  "fittable": [
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "fittable"
      ]
    ]
  ],
  "_map_parameters": [
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "_map_parameters"
      ]
    ]
  ],
  "_recursive_lookup": [
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "_recursive_lookup"
      ]
    ]
  ],
  "inputs_map": [
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "inputs_map"
      ]
    ]
  ],
  "_parameter_units_for_data_units": [
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Gaussian1D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Gaussian2D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Shift",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Scale",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Multiply",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Sersic1D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "_Trigonometric1D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "_InverseTrigonometric1D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Linear1D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Planar2D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Lorentz1D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Voigt1D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Const1D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Const2D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Ellipse2D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Disk2D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Ring2D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Box1D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Box2D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Trapezoid1D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "TrapezoidDisk2D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "RickerWavelet1D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "RickerWavelet2D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "AiryDisk2D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Moffat1D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Moffat2D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Sersic2D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "KingProjectedAnalytic1D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Logarithmic1D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Exponential1D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/physical_models.py",
      [
        "BlackBody",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/physical_models.py",
      [
        "Drude1D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/physical_models.py",
      [
        "Plummer1D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/physical_models.py",
      [
        "NFW",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Polynomial1D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Polynomial2D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/powerlaws.py",
      [
        "PowerLaw1D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/powerlaws.py",
      [
        "BrokenPowerLaw1D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/powerlaws.py",
      [
        "SmoothlyBrokenPowerLaw1D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/powerlaws.py",
      [
        "ExponentialCutoffPowerLaw1D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/powerlaws.py",
      [
        "LogParabola1D",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/tests/test_quantities_fitting.py",
      [
        "CustomInputNamesModel",
        "_parameter_units_for_data_units"
      ]
    ],
    [
      "astropy/modeling/tests/test_quantities_fitting.py",
      [
        "test_fitting_missing_data_units",
        "UnorderedGaussian1D",
        "_parameter_units_for_data_units"
      ]
    ]
  ],
  "input_units_equivalencies": [
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "input_units_equivalencies"
      ]
    ]
  ],
  "outputs_map": [
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "outputs_map"
      ]
    ]
  ],
  "replace_submodel": [
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "replace_submodel"
      ]
    ]
  ],
  "_set_sub_models_and_parameter_units": [
    [
      "astropy/modeling/core.py",
      [
        "CompoundModel",
        "_set_sub_models_and_parameter_units"
      ]
    ]
  ],
  "_get_submodel_path": [
    [
      "astropy/modeling/core.py",
      [
        "_get_submodel_path"
      ]
    ]
  ],
  "binary_operation": [
    [
      "astropy/modeling/core.py",
      [
        "binary_operation"
      ]
    ]
  ],
  "get_ops": [
    [
      "astropy/modeling/core.py",
      [
        "get_ops"
      ]
    ]
  ],
  "make_subtree_dict": [
    [
      "astropy/modeling/core.py",
      [
        "make_subtree_dict"
      ]
    ]
  ],
  "bind_bounding_box": [
    [
      "astropy/modeling/core.py",
      [
        "bind_bounding_box"
      ]
    ]
  ],
  "bind_compound_bounding_box": [
    [
      "astropy/modeling/core.py",
      [
        "bind_compound_bounding_box"
      ]
    ]
  ],
  "custom_model": [
    [
      "astropy/modeling/core.py",
      [
        "custom_model"
      ]
    ]
  ],
  "_custom_model_inputs": [
    [
      "astropy/modeling/core.py",
      [
        "_custom_model_inputs"
      ]
    ]
  ],
  "_custom_model_wrapper": [
    [
      "astropy/modeling/core.py",
      [
        "_custom_model_wrapper"
      ]
    ]
  ],
  "render_model": [
    [
      "astropy/modeling/core.py",
      [
        "render_model"
      ]
    ]
  ],
  "hide_inverse": [
    [
      "astropy/modeling/core.py",
      [
        "hide_inverse"
      ]
    ]
  ],
  "pprint": [
    [
      "astropy/modeling/fitting.py",
      [
        "Covariance",
        "pprint"
      ]
    ],
    [
      "astropy/modeling/fitting.py",
      [
        "StandardDeviations",
        "pprint"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "pprint"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "pprint"
      ]
    ]
  ],
  "_calc_stds": [
    [
      "astropy/modeling/fitting.py",
      [
        "StandardDeviations",
        "_calc_stds"
      ]
    ]
  ],
  "fitter_unit_support": [
    [
      "astropy/modeling/fitting.py",
      [
        "fitter_unit_support"
      ]
    ]
  ],
  "objective_function": [
    [
      "astropy/modeling/fitting.py",
      [
        "Fitter",
        "objective_function"
      ]
    ],
    [
      "astropy/modeling/fitting.py",
      [
        "LevMarLSQFitter",
        "objective_function"
      ]
    ],
    [
      "astropy/modeling/fitting.py",
      [
        "JointFitter",
        "objective_function"
      ]
    ]
  ],
  "_add_fitting_uncertainties": [
    [
      "astropy/modeling/fitting.py",
      [
        "Fitter",
        "_add_fitting_uncertainties"
      ]
    ],
    [
      "astropy/modeling/fitting.py",
      [
        "LinearLSQFitter",
        "_add_fitting_uncertainties"
      ]
    ],
    [
      "astropy/modeling/fitting.py",
      [
        "LevMarLSQFitter",
        "_add_fitting_uncertainties"
      ]
    ]
  ],
  "_is_invertible": [
    [
      "astropy/modeling/fitting.py",
      [
        "LinearLSQFitter",
        "_is_invertible"
      ]
    ]
  ],
  "_deriv_with_constraints": [
    [
      "astropy/modeling/fitting.py",
      [
        "LinearLSQFitter",
        "_deriv_with_constraints"
      ]
    ]
  ],
  "_map_domain_window": [
    [
      "astropy/modeling/fitting.py",
      [
        "LinearLSQFitter",
        "_map_domain_window"
      ]
    ]
  ],
  "_wrap_deriv": [
    [
      "astropy/modeling/fitting.py",
      [
        "LevMarLSQFitter",
        "_wrap_deriv"
      ]
    ]
  ],
  "model_to_fit_params": [
    [
      "astropy/modeling/fitting.py",
      [
        "JointFitter",
        "model_to_fit_params"
      ]
    ],
    [
      "astropy/modeling/fitting.py",
      [
        "model_to_fit_params"
      ]
    ]
  ],
  "_verify_input": [
    [
      "astropy/modeling/fitting.py",
      [
        "JointFitter",
        "_verify_input"
      ]
    ]
  ],
  "_convert_input": [
    [
      "astropy/modeling/fitting.py",
      [
        "_convert_input"
      ]
    ]
  ],
  "fitter_to_model_params": [
    [
      "astropy/modeling/fitting.py",
      [
        "fitter_to_model_params"
      ]
    ]
  ],
  "_fitter_to_model_params": [
    [
      "astropy/modeling/fitting.py",
      [
        "_fitter_to_model_params"
      ]
    ]
  ],
  "_model_to_fit_params": [
    [
      "astropy/modeling/fitting.py",
      [
        "_model_to_fit_params"
      ]
    ]
  ],
  "_validate_constraints": [
    [
      "astropy/modeling/fitting.py",
      [
        "_validate_constraints"
      ]
    ]
  ],
  "_validate_model": [
    [
      "astropy/modeling/fitting.py",
      [
        "_validate_model"
      ]
    ]
  ],
  "populate_entry_points": [
    [
      "astropy/modeling/fitting.py",
      [
        "populate_entry_points"
      ]
    ]
  ],
  "_populate_ep": [
    [
      "astropy/modeling/fitting.py",
      [
        "_populate_ep"
      ]
    ]
  ],
  "fwhm": [
    [
      "astropy/modeling/functional_models.py",
      [
        "Gaussian1D",
        "fwhm"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Moffat1D",
        "fwhm"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Moffat2D",
        "fwhm"
      ]
    ]
  ],
  "fit_deriv": [
    [
      "astropy/modeling/functional_models.py",
      [
        "Gaussian1D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Gaussian2D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Shift",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Scale",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Multiply",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "RedshiftScaleFactor",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Sine1D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Cosine1D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Tangent1D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "ArcSine1D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "ArcCosine1D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "ArcTangent1D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Linear1D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Planar2D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Lorentz1D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Voigt1D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Const1D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Moffat1D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Moffat2D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "KingProjectedAnalytic1D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Logarithmic1D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Exponential1D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/physical_models.py",
      [
        "Drude1D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/physical_models.py",
      [
        "Plummer1D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Chebyshev1D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Hermite1D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Hermite2D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Legendre1D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Polynomial1D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Polynomial2D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Chebyshev2D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Legendre2D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/powerlaws.py",
      [
        "PowerLaw1D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/powerlaws.py",
      [
        "BrokenPowerLaw1D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/powerlaws.py",
      [
        "SmoothlyBrokenPowerLaw1D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/powerlaws.py",
      [
        "ExponentialCutoffPowerLaw1D",
        "fit_deriv"
      ]
    ],
    [
      "astropy/modeling/powerlaws.py",
      [
        "LogParabola1D",
        "fit_deriv"
      ]
    ]
  ],
  "x_fwhm": [
    [
      "astropy/modeling/functional_models.py",
      [
        "Gaussian2D",
        "x_fwhm"
      ]
    ]
  ],
  "y_fwhm": [
    [
      "astropy/modeling/functional_models.py",
      [
        "Gaussian2D",
        "y_fwhm"
      ]
    ]
  ],
  "_wrap_wofz": [
    [
      "astropy/modeling/functional_models.py",
      [
        "Voigt1D",
        "_wrap_wofz"
      ]
    ]
  ],
  "_hum2zpf16c": [
    [
      "astropy/modeling/functional_models.py",
      [
        "Voigt1D",
        "_hum2zpf16c"
      ]
    ]
  ],
  "concentration": [
    [
      "astropy/modeling/functional_models.py",
      [
        "KingProjectedAnalytic1D",
        "concentration"
      ]
    ]
  ],
  "tau": [
    [
      "astropy/modeling/functional_models.py",
      [
        "Logarithmic1D",
        "tau"
      ]
    ],
    [
      "astropy/modeling/functional_models.py",
      [
        "Exponential1D",
        "tau"
      ]
    ]
  ],
  "mapping": [
    [
      "astropy/modeling/mappings.py",
      [
        "Mapping",
        "mapping"
      ]
    ],
    [
      "astropy/modeling/mappings.py",
      [
        "UnitsMapping",
        "mapping"
      ]
    ]
  ],
  "_rebuild_units": [
    [
      "astropy/modeling/mappings.py",
      [
        "UnitsMapping",
        "_rebuild_units"
      ]
    ]
  ],
  "_make_class_name": [
    [
      "astropy/modeling/math_functions.py",
      [
        "_make_class_name"
      ]
    ]
  ],
  "ufunc_model": [
    [
      "astropy/modeling/math_functions.py",
      [
        "ufunc_model"
      ]
    ]
  ],
  "maxiter": [
    [
      "astropy/modeling/optimizers.py",
      [
        "Optimization",
        "maxiter"
      ]
    ]
  ],
  "maxiter_1": [
    [
      "astropy/modeling/optimizers.py",
      [
        "Optimization",
        "maxiter_1"
      ]
    ]
  ],
  "eps": [
    [
      "astropy/modeling/optimizers.py",
      [
        "Optimization",
        "eps"
      ]
    ]
  ],
  "eps_3": [
    [
      "astropy/modeling/optimizers.py",
      [
        "Optimization",
        "eps_3"
      ]
    ]
  ],
  "acc": [
    [
      "astropy/modeling/optimizers.py",
      [
        "Optimization",
        "acc"
      ]
    ]
  ],
  "acc_5": [
    [
      "astropy/modeling/optimizers.py",
      [
        "Optimization",
        "acc_5"
      ]
    ]
  ],
  "opt_method": [
    [
      "astropy/modeling/optimizers.py",
      [
        "Optimization",
        "opt_method"
      ]
    ]
  ],
  "_tofloat": [
    [
      "astropy/modeling/parameters.py",
      [
        "_tofloat"
      ]
    ]
  ],
  "_binary_arithmetic_operation": [
    [
      "astropy/modeling/parameters.py",
      [
        "_binary_arithmetic_operation"
      ]
    ]
  ],
  "_binary_comparison_operation": [
    [
      "astropy/modeling/parameters.py",
      [
        "_binary_comparison_operation"
      ]
    ]
  ],
  "_unary_arithmetic_operation": [
    [
      "astropy/modeling/parameters.py",
      [
        "_unary_arithmetic_operation"
      ]
    ]
  ],
  "default": [
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "default"
      ]
    ],
    [
      "astropy/utils/misc.py",
      [
        "JsonCustomEncoder",
        "default"
      ]
    ]
  ],
  "unit_10": [
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "unit_10"
      ]
    ]
  ],
  "internal_unit": [
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "internal_unit"
      ]
    ]
  ],
  "internal_unit_13": [
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "internal_unit_13"
      ]
    ]
  ],
  "quantity_15": [
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "quantity_15"
      ]
    ]
  ],
  "shape_17": [
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "shape_17"
      ]
    ]
  ],
  "std": [
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "std"
      ]
    ],
    [
      "astropy/units/function/logarithmic.py",
      [
        "LogQuantity",
        "std"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "std"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "std"
      ]
    ]
  ],
  "std_20": [
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "std_20"
      ]
    ]
  ],
  "prior": [
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "prior"
      ]
    ]
  ],
  "prior_22": [
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "prior_22"
      ]
    ]
  ],
  "posterior": [
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "posterior"
      ]
    ]
  ],
  "posterior_24": [
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "posterior_24"
      ]
    ]
  ],
  "fixed_26": [
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "fixed_26"
      ]
    ]
  ],
  "tied_28": [
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "tied_28"
      ]
    ]
  ],
  "bounds_30": [
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "bounds_30"
      ]
    ]
  ],
  "min_32": [
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "min_32"
      ]
    ]
  ],
  "max_34": [
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "max_34"
      ]
    ]
  ],
  "model_39": [
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "model_39"
      ]
    ]
  ],
  "_raw_value": [
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "_raw_value"
      ]
    ]
  ],
  "_create_value_wrapper": [
    [
      "astropy/modeling/parameters.py",
      [
        "Parameter",
        "_create_value_wrapper"
      ]
    ]
  ],
  "param_repr_oneline": [
    [
      "astropy/modeling/parameters.py",
      [
        "param_repr_oneline"
      ]
    ]
  ],
  "bolometric_flux": [
    [
      "astropy/modeling/physical_models.py",
      [
        "BlackBody",
        "bolometric_flux"
      ]
    ]
  ],
  "lambda_max": [
    [
      "astropy/modeling/physical_models.py",
      [
        "BlackBody",
        "lambda_max"
      ]
    ]
  ],
  "nu_max": [
    [
      "astropy/modeling/physical_models.py",
      [
        "BlackBody",
        "nu_max"
      ]
    ]
  ],
  "x_0": [
    [
      "astropy/modeling/physical_models.py",
      [
        "Drude1D",
        "x_0"
      ]
    ]
  ],
  "_density_delta": [
    [
      "astropy/modeling/physical_models.py",
      [
        "NFW",
        "_density_delta"
      ]
    ]
  ],
  "A_NFW": [
    [
      "astropy/modeling/physical_models.py",
      [
        "NFW",
        "A_NFW"
      ]
    ]
  ],
  "_density_s": [
    [
      "astropy/modeling/physical_models.py",
      [
        "NFW",
        "_density_s"
      ]
    ]
  ],
  "rho_scale": [
    [
      "astropy/modeling/physical_models.py",
      [
        "NFW",
        "rho_scale"
      ]
    ]
  ],
  "_radius_s": [
    [
      "astropy/modeling/physical_models.py",
      [
        "NFW",
        "_radius_s"
      ]
    ]
  ],
  "r_s": [
    [
      "astropy/modeling/physical_models.py",
      [
        "NFW",
        "r_s"
      ]
    ]
  ],
  "r_virial": [
    [
      "astropy/modeling/physical_models.py",
      [
        "NFW",
        "r_virial"
      ]
    ]
  ],
  "r_max": [
    [
      "astropy/modeling/physical_models.py",
      [
        "NFW",
        "r_max"
      ]
    ]
  ],
  "v_max": [
    [
      "astropy/modeling/physical_models.py",
      [
        "NFW",
        "v_max"
      ]
    ]
  ],
  "circular_velocity": [
    [
      "astropy/modeling/physical_models.py",
      [
        "NFW",
        "circular_velocity"
      ]
    ]
  ],
  "degree": [
    [
      "astropy/modeling/polynomial.py",
      [
        "PolynomialModel",
        "degree"
      ]
    ],
    [
      "astropy/modeling/spline.py",
      [
        "Spline1D",
        "degree"
      ]
    ]
  ],
  "get_num_coeff": [
    [
      "astropy/modeling/polynomial.py",
      [
        "PolynomialModel",
        "get_num_coeff"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "OrthoPolynomialBase",
        "get_num_coeff"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "_SIP1D",
        "get_num_coeff"
      ]
    ]
  ],
  "_invlex": [
    [
      "astropy/modeling/polynomial.py",
      [
        "PolynomialModel",
        "_invlex"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "OrthoPolynomialBase",
        "_invlex"
      ]
    ]
  ],
  "_generate_coeff_names": [
    [
      "astropy/modeling/polynomial.py",
      [
        "PolynomialModel",
        "_generate_coeff_names"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "OrthoPolynomialBase",
        "_generate_coeff_names"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "_SIP1D",
        "_generate_coeff_names"
      ]
    ]
  ],
  "window": [
    [
      "astropy/modeling/polynomial.py",
      [
        "_PolyDomainWindow1D",
        "window"
      ]
    ]
  ],
  "window_1": [
    [
      "astropy/modeling/polynomial.py",
      [
        "_PolyDomainWindow1D",
        "window_1"
      ]
    ]
  ],
  "domain_3": [
    [
      "astropy/modeling/polynomial.py",
      [
        "_PolyDomainWindow1D",
        "domain_3"
      ]
    ]
  ],
  "_set_default_domain_window": [
    [
      "astropy/modeling/polynomial.py",
      [
        "_PolyDomainWindow1D",
        "_set_default_domain_window"
      ]
    ]
  ],
  "x_domain": [
    [
      "astropy/modeling/polynomial.py",
      [
        "OrthoPolynomialBase",
        "x_domain"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Polynomial2D",
        "x_domain"
      ]
    ]
  ],
  "x_domain_1": [
    [
      "astropy/modeling/polynomial.py",
      [
        "OrthoPolynomialBase",
        "x_domain_1"
      ]
    ]
  ],
  "y_domain": [
    [
      "astropy/modeling/polynomial.py",
      [
        "OrthoPolynomialBase",
        "y_domain"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Polynomial2D",
        "y_domain"
      ]
    ]
  ],
  "y_domain_3": [
    [
      "astropy/modeling/polynomial.py",
      [
        "OrthoPolynomialBase",
        "y_domain_3"
      ]
    ]
  ],
  "x_window": [
    [
      "astropy/modeling/polynomial.py",
      [
        "OrthoPolynomialBase",
        "x_window"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Polynomial2D",
        "x_window"
      ]
    ]
  ],
  "x_window_5": [
    [
      "astropy/modeling/polynomial.py",
      [
        "OrthoPolynomialBase",
        "x_window_5"
      ]
    ]
  ],
  "y_window": [
    [
      "astropy/modeling/polynomial.py",
      [
        "OrthoPolynomialBase",
        "y_window"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Polynomial2D",
        "y_window"
      ]
    ]
  ],
  "y_window_7": [
    [
      "astropy/modeling/polynomial.py",
      [
        "OrthoPolynomialBase",
        "y_window_7"
      ]
    ]
  ],
  "invlex_coeff": [
    [
      "astropy/modeling/polynomial.py",
      [
        "OrthoPolynomialBase",
        "invlex_coeff"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Polynomial2D",
        "invlex_coeff"
      ]
    ]
  ],
  "_alpha": [
    [
      "astropy/modeling/polynomial.py",
      [
        "OrthoPolynomialBase",
        "_alpha"
      ]
    ]
  ],
  "imhorner": [
    [
      "astropy/modeling/polynomial.py",
      [
        "OrthoPolynomialBase",
        "imhorner"
      ]
    ]
  ],
  "_fcache": [
    [
      "astropy/modeling/polynomial.py",
      [
        "OrthoPolynomialBase",
        "_fcache"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Hermite2D",
        "_fcache"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Chebyshev2D",
        "_fcache"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Legendre2D",
        "_fcache"
      ]
    ]
  ],
  "clenshaw": [
    [
      "astropy/modeling/polynomial.py",
      [
        "Chebyshev1D",
        "clenshaw"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Hermite1D",
        "clenshaw"
      ]
    ],
    [
      "astropy/modeling/polynomial.py",
      [
        "Legendre1D",
        "clenshaw"
      ]
    ]
  ],
  "_hermderiv1d": [
    [
      "astropy/modeling/polynomial.py",
      [
        "Hermite2D",
        "_hermderiv1d"
      ]
    ]
  ],
  "horner": [
    [
      "astropy/modeling/polynomial.py",
      [
        "Polynomial1D",
        "horner"
      ]
    ]
  ],
  "multivariate_horner": [
    [
      "astropy/modeling/polynomial.py",
      [
        "Polynomial2D",
        "multivariate_horner"
      ]
    ]
  ],
  "x_domain_10": [
    [
      "astropy/modeling/polynomial.py",
      [
        "Polynomial2D",
        "x_domain_10"
      ]
    ]
  ],
  "y_domain_12": [
    [
      "astropy/modeling/polynomial.py",
      [
        "Polynomial2D",
        "y_domain_12"
      ]
    ]
  ],
  "x_window_14": [
    [
      "astropy/modeling/polynomial.py",
      [
        "Polynomial2D",
        "x_window_14"
      ]
    ]
  ],
  "y_window_16": [
    [
      "astropy/modeling/polynomial.py",
      [
        "Polynomial2D",
        "y_window_16"
      ]
    ]
  ],
  "_chebderiv1d": [
    [
      "astropy/modeling/polynomial.py",
      [
        "Chebyshev2D",
        "_chebderiv1d"
      ]
    ]
  ],
  "_legendderiv1d": [
    [
      "astropy/modeling/polynomial.py",
      [
        "Legendre2D",
        "_legendderiv1d"
      ]
    ]
  ],
  "_coeff_matrix": [
    [
      "astropy/modeling/polynomial.py",
      [
        "_SIP1D",
        "_coeff_matrix"
      ]
    ]
  ],
  "_eval_sip": [
    [
      "astropy/modeling/polynomial.py",
      [
        "_SIP1D",
        "_eval_sip"
      ]
    ]
  ],
  "amplitude": [
    [
      "astropy/modeling/powerlaws.py",
      [
        "SmoothlyBrokenPowerLaw1D",
        "amplitude"
      ]
    ]
  ],
  "delta": [
    [
      "astropy/modeling/powerlaws.py",
      [
        "SmoothlyBrokenPowerLaw1D",
        "delta"
      ]
    ]
  ],
  "prjprm": [
    [
      "astropy/modeling/projections.py",
      [
        "Projection",
        "prjprm"
      ]
    ]
  ],
  "_update_prj": [
    [
      "astropy/modeling/projections.py",
      [
        "Projection",
        "_update_prj"
      ]
    ]
  ],
  "mu": [
    [
      "astropy/modeling/projections.py",
      [
        "Pix2Sky_ZenithalPerspective",
        "mu"
      ]
    ],
    [
      "astropy/modeling/projections.py",
      [
        "Sky2Pix_ZenithalPerspective",
        "mu"
      ]
    ],
    [
      "astropy/modeling/projections.py",
      [
        "Pix2Sky_SlantZenithalPerspective",
        "mu"
      ]
    ],
    [
      "astropy/modeling/projections.py",
      [
        "Sky2Pix_SlantZenithalPerspective",
        "mu"
      ]
    ],
    [
      "astropy/modeling/projections.py",
      [
        "Pix2Sky_CylindricalPerspective",
        "mu"
      ]
    ],
    [
      "astropy/modeling/projections.py",
      [
        "Sky2Pix_CylindricalPerspective",
        "mu"
      ]
    ]
  ],
  "lam": [
    [
      "astropy/modeling/projections.py",
      [
        "Pix2Sky_CylindricalPerspective",
        "lam"
      ]
    ],
    [
      "astropy/modeling/projections.py",
      [
        "Sky2Pix_CylindricalPerspective",
        "lam"
      ]
    ]
  ],
  "translation": [
    [
      "astropy/modeling/projections.py",
      [
        "AffineTransformation2D",
        "translation"
      ]
    ]
  ],
  "_create_augmented_matrix": [
    [
      "astropy/modeling/projections.py",
      [
        "AffineTransformation2D",
        "_create_augmented_matrix"
      ]
    ]
  ],
  "_create_matrix": [
    [
      "astropy/modeling/rotations.py",
      [
        "_create_matrix"
      ]
    ]
  ],
  "spherical2cartesian": [
    [
      "astropy/modeling/rotations.py",
      [
        "spherical2cartesian"
      ]
    ]
  ],
  "cartesian2spherical": [
    [
      "astropy/modeling/rotations.py",
      [
        "cartesian2spherical"
      ]
    ]
  ],
  "_compute_matrix": [
    [
      "astropy/modeling/rotations.py",
      [
        "Rotation2D",
        "_compute_matrix"
      ]
    ]
  ],
  "is_separable": [
    [
      "astropy/modeling/separable.py",
      [
        "is_separable"
      ]
    ]
  ],
  "separability_matrix": [
    [
      "astropy/modeling/separable.py",
      [
        "separability_matrix"
      ]
    ]
  ],
  "_compute_n_outputs": [
    [
      "astropy/modeling/separable.py",
      [
        "_compute_n_outputs"
      ]
    ]
  ],
  "_n_inputs_outputs": [
    [
      "astropy/modeling/separable.py",
      [
        "_arith_oper",
        "_n_inputs_outputs"
      ]
    ],
    [
      "astropy/modeling/separable.py",
      [
        "_cdot",
        "_n_inputs_outputs"
      ]
    ]
  ],
  "_arith_oper": [
    [
      "astropy/modeling/separable.py",
      [
        "_arith_oper"
      ]
    ]
  ],
  "_coord_matrix": [
    [
      "astropy/modeling/separable.py",
      [
        "_coord_matrix"
      ]
    ]
  ],
  "_cstack": [
    [
      "astropy/modeling/separable.py",
      [
        "_cstack"
      ]
    ]
  ],
  "_cdot": [
    [
      "astropy/modeling/separable.py",
      [
        "_cdot"
      ]
    ]
  ],
  "_separable": [
    [
      "astropy/modeling/separable.py",
      [
        "_separable"
      ]
    ]
  ],
  "_optional_arg": [
    [
      "astropy/modeling/spline.py",
      [
        "_Spline",
        "_optional_arg"
      ]
    ]
  ],
  "_create_optional_inputs": [
    [
      "astropy/modeling/spline.py",
      [
        "_Spline",
        "_create_optional_inputs"
      ]
    ]
  ],
  "_intercept_optional_inputs": [
    [
      "astropy/modeling/spline.py",
      [
        "_Spline",
        "_intercept_optional_inputs"
      ]
    ]
  ],
  "_getter": [
    [
      "astropy/modeling/spline.py",
      [
        "_Spline",
        "_create_parameter",
        "_getter"
      ]
    ]
  ],
  "_setter": [
    [
      "astropy/modeling/spline.py",
      [
        "_Spline",
        "_create_parameter",
        "_setter"
      ]
    ]
  ],
  "_create_parameter": [
    [
      "astropy/modeling/spline.py",
      [
        "_Spline",
        "_create_parameter"
      ]
    ]
  ],
  "_create_parameters": [
    [
      "astropy/modeling/spline.py",
      [
        "_Spline",
        "_create_parameters"
      ]
    ]
  ],
  "_init_parameters": [
    [
      "astropy/modeling/spline.py",
      [
        "_Spline",
        "_init_parameters"
      ]
    ],
    [
      "astropy/modeling/spline.py",
      [
        "Spline1D",
        "_init_parameters"
      ]
    ]
  ],
  "_init_data": [
    [
      "astropy/modeling/spline.py",
      [
        "_Spline",
        "_init_data"
      ]
    ],
    [
      "astropy/modeling/spline.py",
      [
        "Spline1D",
        "_init_data"
      ]
    ]
  ],
  "_init_spline": [
    [
      "astropy/modeling/spline.py",
      [
        "_Spline",
        "_init_spline"
      ]
    ]
  ],
  "_init_tck": [
    [
      "astropy/modeling/spline.py",
      [
        "_Spline",
        "_init_tck"
      ]
    ]
  ],
  "t": [
    [
      "astropy/modeling/spline.py",
      [
        "Spline1D",
        "t"
      ]
    ],
    [
      "astropy/table/tests/test_index.py",
      [
        "TestIndex",
        "t"
      ]
    ],
    [
      "astropy/table/tests/test_row.py",
      [
        "TestRow",
        "t"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "SetupData",
        "t"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddRow",
        "t"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestRemove",
        "t"
      ]
    ],
    [
      "astropy/timeseries/periodograms/lombscargle/implementations/tests/test_mle.py",
      [
        "t"
      ]
    ]
  ],
  "t_1": [
    [
      "astropy/modeling/spline.py",
      [
        "Spline1D",
        "t_1"
      ]
    ]
  ],
  "t_interior": [
    [
      "astropy/modeling/spline.py",
      [
        "Spline1D",
        "t_interior"
      ]
    ]
  ],
  "c": [
    [
      "astropy/modeling/spline.py",
      [
        "Spline1D",
        "c"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "SetupData",
        "c"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddRow",
        "c"
      ]
    ]
  ],
  "c_4": [
    [
      "astropy/modeling/spline.py",
      [
        "Spline1D",
        "c_4"
      ]
    ]
  ],
  "_initialized": [
    [
      "astropy/modeling/spline.py",
      [
        "Spline1D",
        "_initialized"
      ]
    ]
  ],
  "tck": [
    [
      "astropy/modeling/spline.py",
      [
        "Spline1D",
        "tck"
      ]
    ]
  ],
  "tck_8": [
    [
      "astropy/modeling/spline.py",
      [
        "Spline1D",
        "tck_8"
      ]
    ]
  ],
  "bspline": [
    [
      "astropy/modeling/spline.py",
      [
        "Spline1D",
        "bspline"
      ]
    ]
  ],
  "bspline_10": [
    [
      "astropy/modeling/spline.py",
      [
        "Spline1D",
        "bspline_10"
      ]
    ]
  ],
  "knots": [
    [
      "astropy/modeling/spline.py",
      [
        "Spline1D",
        "knots"
      ]
    ]
  ],
  "user_knots": [
    [
      "astropy/modeling/spline.py",
      [
        "Spline1D",
        "user_knots"
      ]
    ]
  ],
  "user_knots_13": [
    [
      "astropy/modeling/spline.py",
      [
        "Spline1D",
        "user_knots_13"
      ]
    ]
  ],
  "coeffs": [
    [
      "astropy/modeling/spline.py",
      [
        "Spline1D",
        "coeffs"
      ]
    ]
  ],
  "_init_bounds": [
    [
      "astropy/modeling/spline.py",
      [
        "Spline1D",
        "_init_bounds"
      ]
    ]
  ],
  "_init_knots": [
    [
      "astropy/modeling/spline.py",
      [
        "Spline1D",
        "_init_knots"
      ]
    ]
  ],
  "_init_coeffs": [
    [
      "astropy/modeling/spline.py",
      [
        "Spline1D",
        "_init_coeffs"
      ]
    ]
  ],
  "derivative": [
    [
      "astropy/modeling/spline.py",
      [
        "Spline1D",
        "derivative"
      ]
    ]
  ],
  "antiderivative": [
    [
      "astropy/modeling/spline.py",
      [
        "Spline1D",
        "antiderivative"
      ]
    ]
  ],
  "_set_fit_info": [
    [
      "astropy/modeling/spline.py",
      [
        "_SplineFitter",
        "_set_fit_info"
      ]
    ],
    [
      "astropy/modeling/spline.py",
      [
        "SplineSplrepFitter",
        "_set_fit_info"
      ]
    ]
  ],
  "_fit_method": [
    [
      "astropy/modeling/spline.py",
      [
        "_SplineFitter",
        "_fit_method"
      ]
    ],
    [
      "astropy/modeling/spline.py",
      [
        "SplineInterpolateFitter",
        "_fit_method"
      ]
    ],
    [
      "astropy/modeling/spline.py",
      [
        "SplineSmoothingFitter",
        "_fit_method"
      ]
    ],
    [
      "astropy/modeling/spline.py",
      [
        "SplineExactKnotsFitter",
        "_fit_method"
      ]
    ],
    [
      "astropy/modeling/spline.py",
      [
        "SplineSplrepFitter",
        "_fit_method"
      ]
    ]
  ],
  "leastsquare": [
    [
      "astropy/modeling/statistic.py",
      [
        "leastsquare"
      ]
    ]
  ],
  "leastsquare_1d": [
    [
      "astropy/modeling/statistic.py",
      [
        "leastsquare_1d"
      ]
    ]
  ],
  "leastsquare_2d": [
    [
      "astropy/modeling/statistic.py",
      [
        "leastsquare_2d"
      ]
    ]
  ],
  "leastsquare_3d": [
    [
      "astropy/modeling/statistic.py",
      [
        "leastsquare_3d"
      ]
    ]
  ],
  "tabular_model": [
    [
      "astropy/modeling/tabular.py",
      [
        "tabular_model"
      ]
    ]
  ],
  "get_records": [
    [
      "astropy/modeling/tests/irafutil.py",
      [
        "get_records"
      ]
    ]
  ],
  "get_database_string": [
    [
      "astropy/modeling/tests/irafutil.py",
      [
        "get_database_string"
      ]
    ]
  ],
  "aslist": [
    [
      "astropy/modeling/tests/irafutil.py",
      [
        "Record",
        "aslist"
      ]
    ],
    [
      "astropy/modeling/tests/irafutil.py",
      [
        "IDB",
        "aslist"
      ]
    ]
  ],
  "get_fields": [
    [
      "astropy/modeling/tests/irafutil.py",
      [
        "Record",
        "get_fields"
      ]
    ]
  ],
  "get_task_name": [
    [
      "astropy/modeling/tests/irafutil.py",
      [
        "Record",
        "get_task_name"
      ]
    ]
  ],
  "read_array_field": [
    [
      "astropy/modeling/tests/irafutil.py",
      [
        "Record",
        "read_array_field"
      ]
    ]
  ],
  "get_model_name": [
    [
      "astropy/modeling/tests/irafutil.py",
      [
        "IdentifyRecord",
        "get_model_name"
      ]
    ]
  ],
  "get_nterms": [
    [
      "astropy/modeling/tests/irafutil.py",
      [
        "IdentifyRecord",
        "get_nterms"
      ]
    ]
  ],
  "get_range": [
    [
      "astropy/modeling/tests/irafutil.py",
      [
        "IdentifyRecord",
        "get_range"
      ]
    ]
  ],
  "get_coeff": [
    [
      "astropy/modeling/tests/irafutil.py",
      [
        "IdentifyRecord",
        "get_coeff"
      ]
    ],
    [
      "astropy/modeling/tests/irafutil.py",
      [
        "FitcoordsRecord",
        "get_coeff"
      ]
    ]
  ],
  "get_ydata": [
    [
      "astropy/modeling/tests/irafutil.py",
      [
        "IdentifyRecord",
        "get_ydata"
      ]
    ],
    [
      "astropy/modeling/tests/irafutil.py",
      [
        "ReidentifyRecord",
        "get_ydata"
      ]
    ]
  ],
  "test_create": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_Interval",
        "test_create"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_BoundingDomain",
        "test_create"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestModelBoundingBox",
        "test_create"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_SelectorArgument",
        "test_create"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_SelectorArguments",
        "test_create"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestCompoundBoundingBox",
        "test_create"
      ]
    ]
  ],
  "test__validate_shape": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_Interval",
        "test__validate_shape"
      ]
    ]
  ],
  "test__validate_bounds": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_Interval",
        "test__validate_bounds"
      ]
    ]
  ],
  "test_outside": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_Interval",
        "test_outside"
      ]
    ]
  ],
  "test_domain": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_Interval",
        "test_domain"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestModelBoundingBox",
        "test_domain"
      ]
    ]
  ],
  "test__ignored_interval": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_Interval",
        "test__ignored_interval"
      ]
    ]
  ],
  "test_validate_with_SpectralCoord": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_Interval",
        "test_validate_with_SpectralCoord"
      ]
    ]
  ],
  "test_model": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_BoundingDomain",
        "test_model"
      ]
    ],
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_model"
      ]
    ],
    [
      "astropy/timeseries/periodograms/bls/tests/test_bls.py",
      [
        "test_model"
      ]
    ],
    [
      "astropy/timeseries/periodograms/lombscargle/tests/test_lombscargle.py",
      [
        "test_model"
      ]
    ]
  ],
  "test_order": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_BoundingDomain",
        "test_order"
      ]
    ],
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityCreation",
        "test_order"
      ]
    ]
  ],
  "test_ignored": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_BoundingDomain",
        "test_ignored"
      ]
    ]
  ],
  "test__get_order": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_BoundingDomain",
        "test__get_order"
      ]
    ]
  ],
  "test__get_index": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_BoundingDomain",
        "test__get_index"
      ]
    ]
  ],
  "test__get_name": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_BoundingDomain",
        "test__get_name"
      ]
    ]
  ],
  "test_ignored_inputs": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_BoundingDomain",
        "test_ignored_inputs"
      ]
    ]
  ],
  "test__validate_ignored": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_BoundingDomain",
        "test__validate_ignored"
      ]
    ]
  ],
  "test___call__": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_BoundingDomain",
        "test___call__"
      ]
    ],
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline",
        "test___call__"
      ]
    ]
  ],
  "test__prepare_inputs": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_BoundingDomain",
        "test__prepare_inputs"
      ]
    ]
  ],
  "test__base_ouput": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_BoundingDomain",
        "test__base_ouput"
      ]
    ]
  ],
  "test__all_out_output": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_BoundingDomain",
        "test__all_out_output"
      ]
    ]
  ],
  "test__modify_output": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_BoundingDomain",
        "test__modify_output"
      ]
    ]
  ],
  "test__prepare_outputs": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_BoundingDomain",
        "test__prepare_outputs"
      ]
    ]
  ],
  "test_prepare_outputs": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_BoundingDomain",
        "test_prepare_outputs"
      ]
    ]
  ],
  "test__get_valid_outputs_unit": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_BoundingDomain",
        "test__get_valid_outputs_unit"
      ]
    ]
  ],
  "test__evaluate_model": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_BoundingDomain",
        "test__evaluate_model"
      ]
    ]
  ],
  "test__evaluate": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_BoundingDomain",
        "test__evaluate"
      ]
    ]
  ],
  "test__set_outputs_unit": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_BoundingDomain",
        "test__set_outputs_unit"
      ]
    ]
  ],
  "test_evaluate": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_BoundingDomain",
        "test_evaluate"
      ]
    ],
    [
      "astropy/modeling/tests/test_mappings.py",
      [
        "TestUnitsMapping",
        "test_evaluate"
      ]
    ],
    [
      "astropy/modeling/tests/test_quantities_evaluation.py",
      [
        "TestInputUnits",
        "test_evaluate"
      ]
    ],
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline",
        "test_evaluate"
      ]
    ],
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_evaluate"
      ]
    ]
  ],
  "test_intervals": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestModelBoundingBox",
        "test_intervals"
      ]
    ]
  ],
  "test_named_intervals": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestModelBoundingBox",
        "test_named_intervals"
      ]
    ]
  ],
  "test___repr__": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestModelBoundingBox",
        "test___repr__"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestCompoundBoundingBox",
        "test___repr__"
      ]
    ]
  ],
  "test___len__": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestModelBoundingBox",
        "test___len__"
      ]
    ]
  ],
  "test___contains__": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestModelBoundingBox",
        "test___contains__"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestCompoundBoundingBox",
        "test___contains__"
      ]
    ]
  ],
  "test___getitem__": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestModelBoundingBox",
        "test___getitem__"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestCompoundBoundingBox",
        "test___getitem__"
      ]
    ]
  ],
  "test___eq__": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestModelBoundingBox",
        "test___eq__"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestCompoundBoundingBox",
        "test___eq__"
      ]
    ]
  ],
  "test__setitem__": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestModelBoundingBox",
        "test__setitem__"
      ]
    ]
  ],
  "test___delitem__": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestModelBoundingBox",
        "test___delitem__"
      ]
    ]
  ],
  "test__validate_dict": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestModelBoundingBox",
        "test__validate_dict"
      ]
    ]
  ],
  "test__validate_sequence": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestModelBoundingBox",
        "test__validate_sequence"
      ]
    ]
  ],
  "test__n_inputs": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestModelBoundingBox",
        "test__n_inputs"
      ]
    ]
  ],
  "test__validate_iterable": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestModelBoundingBox",
        "test__validate_iterable"
      ]
    ]
  ],
  "test__validate": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestModelBoundingBox",
        "test__validate"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestCompoundBoundingBox",
        "test__validate"
      ]
    ]
  ],
  "test_dimension": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestModelBoundingBox",
        "test_dimension"
      ]
    ]
  ],
  "test__outside": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestModelBoundingBox",
        "test__outside"
      ]
    ]
  ],
  "test__valid_index": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestModelBoundingBox",
        "test__valid_index"
      ]
    ]
  ],
  "test_prepare_inputs": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestModelBoundingBox",
        "test_prepare_inputs"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestCompoundBoundingBox",
        "test_prepare_inputs"
      ]
    ]
  ],
  "test_get_selector": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_SelectorArgument",
        "test_get_selector"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_SelectorArguments",
        "test_get_selector"
      ]
    ]
  ],
  "test_pretty_repr": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_SelectorArgument",
        "test_pretty_repr"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_SelectorArguments",
        "test_pretty_repr"
      ]
    ]
  ],
  "test_get_fixed_value": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_SelectorArgument",
        "test_get_fixed_value"
      ]
    ]
  ],
  "test_is_argument": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_SelectorArgument",
        "test_is_argument"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_SelectorArguments",
        "test_is_argument"
      ]
    ]
  ],
  "test_named_tuple": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_SelectorArgument",
        "test_named_tuple"
      ]
    ],
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_SelectorArguments",
        "test_named_tuple"
      ]
    ]
  ],
  "test_ignore": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_SelectorArguments",
        "test_ignore"
      ]
    ]
  ],
  "test_is_selector": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_SelectorArguments",
        "test_is_selector"
      ]
    ]
  ],
  "test_get_fixed_values": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_SelectorArguments",
        "test_get_fixed_values"
      ]
    ]
  ],
  "test_selector_index": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_SelectorArguments",
        "test_selector_index"
      ]
    ]
  ],
  "test_add_ignore": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_SelectorArguments",
        "test_add_ignore"
      ]
    ]
  ],
  "test_reduce": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "Test_SelectorArguments",
        "test_reduce"
      ]
    ]
  ],
  "test_bounding_boxes": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestCompoundBoundingBox",
        "test_bounding_boxes"
      ]
    ]
  ],
  "test_selector_args": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestCompoundBoundingBox",
        "test_selector_args"
      ]
    ]
  ],
  "test_create_selector": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestCompoundBoundingBox",
        "test_create_selector"
      ]
    ]
  ],
  "test__get_selector_key": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestCompoundBoundingBox",
        "test__get_selector_key"
      ]
    ]
  ],
  "test___setitem__": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestCompoundBoundingBox",
        "test___setitem__"
      ]
    ],
    [
      "astropy/modeling/tests/test_utils.py",
      [
        "Test_SpecialOperatorsDict",
        "test___setitem__"
      ]
    ]
  ],
  "test__create_bounding_box": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestCompoundBoundingBox",
        "test__create_bounding_box"
      ]
    ]
  ],
  "test__select_bounding_box": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestCompoundBoundingBox",
        "test__select_bounding_box"
      ]
    ]
  ],
  "test__matching_bounding_boxes": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestCompoundBoundingBox",
        "test__matching_bounding_boxes"
      ]
    ]
  ],
  "test__fix_input_selector_arg": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestCompoundBoundingBox",
        "test__fix_input_selector_arg"
      ]
    ]
  ],
  "test__fix_input_bbox_arg": [
    [
      "astropy/modeling/tests/test_bounding_box.py",
      [
        "TestCompoundBoundingBox",
        "test__fix_input_bbox_arg"
      ]
    ]
  ],
  "test_model_set": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_model_set"
      ]
    ]
  ],
  "test_model_set_raises_value_error": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_model_set_raises_value_error"
      ]
    ]
  ],
  "test_two_model_instance_arithmetic_1d": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_two_model_instance_arithmetic_1d"
      ]
    ]
  ],
  "test_simple_two_model_compose_1d": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_simple_two_model_compose_1d"
      ]
    ]
  ],
  "test_simple_two_model_compose_2d": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_simple_two_model_compose_2d"
      ]
    ]
  ],
  "test_n_submodels": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_n_submodels"
      ]
    ]
  ],
  "test_expression_formatting": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_expression_formatting"
      ]
    ]
  ],
  "test_basic_compound_inverse": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_basic_compound_inverse"
      ]
    ]
  ],
  "test_compound_unsupported_inverse": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_compound_unsupported_inverse"
      ]
    ]
  ],
  "test_mapping_basic_permutations": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_mapping_basic_permutations"
      ]
    ]
  ],
  "test_mapping_inverse": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_mapping_inverse"
      ]
    ]
  ],
  "test_identity_input": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_identity_input"
      ]
    ]
  ],
  "test_invalid_operands": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_invalid_operands"
      ]
    ]
  ],
  "test_compound_with_polynomials_2d": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_compound_with_polynomials_2d"
      ]
    ]
  ],
  "test_fix_inputs_invalid": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_fix_inputs_invalid"
      ]
    ]
  ],
  "test_fix_inputs_with_bounding_box": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_fix_inputs_with_bounding_box"
      ]
    ]
  ],
  "test_indexing_on_instance": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_indexing_on_instance"
      ]
    ]
  ],
  "test_inherit_constraints": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_inherit_constraints"
      ]
    ]
  ],
  "test_compound_custom_inverse": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_compound_custom_inverse"
      ]
    ]
  ],
  "test_pickle_compound": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_pickle_compound"
      ]
    ]
  ],
  "test_update_parameters": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_update_parameters"
      ]
    ]
  ],
  "test_name_index": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_name_index"
      ]
    ]
  ],
  "test_tabular_in_compound": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_tabular_in_compound"
      ]
    ]
  ],
  "test_bounding_box_with_units": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_bounding_box_with_units"
      ]
    ]
  ],
  "test_compound_with_polynomials_1d": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_compound_with_polynomials_1d"
      ]
    ]
  ],
  "test_replace_submodel": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_replace_submodel"
      ]
    ]
  ],
  "test_compound_evaluate": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_compound_evaluate"
      ]
    ]
  ],
  "test_compound_evaluate_power": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_compound_evaluate_power"
      ]
    ]
  ],
  "test_compound_evaluate_double_shift": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_compound_evaluate_double_shift"
      ]
    ]
  ],
  "test_compound_evaluate_named_param": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_compound_evaluate_named_param"
      ]
    ]
  ],
  "test_compound_evaluate_name_param_power": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_compound_evaluate_name_param_power"
      ]
    ]
  ],
  "test_compound_evaluate_and": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_compound_evaluate_and"
      ]
    ]
  ],
  "test_compound_evaluate_or": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_compound_evaluate_or"
      ]
    ]
  ],
  "test_compound_evaluate_fix_inputs_by_keyword": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_compound_evaluate_fix_inputs_by_keyword"
      ]
    ]
  ],
  "test_compound_evaluate_fix_inputs_by_position": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_compound_evaluate_fix_inputs_by_position"
      ]
    ]
  ],
  "test_fit_multiplied_compound_model_with_mixed_units": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_fit_multiplied_compound_model_with_mixed_units"
      ]
    ]
  ],
  "test_fit_multiplied_recursive_compound_model_with_mixed_units": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_fit_multiplied_recursive_compound_model_with_mixed_units"
      ]
    ]
  ],
  "test_fit_divided_compound_model_with_mixed_units": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_fit_divided_compound_model_with_mixed_units"
      ]
    ]
  ],
  "test_fit_mixed_recursive_compound_model_with_mixed_units": [
    [
      "astropy/modeling/tests/test_compound.py",
      [
        "test_fit_mixed_recursive_compound_model_with_mixed_units"
      ]
    ]
  ],
  "test_fixed_par": [
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "TestNonLinearConstraints",
        "test_fixed_par"
      ]
    ]
  ],
  "test_tied_par": [
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "TestNonLinearConstraints",
        "test_tied_par"
      ]
    ]
  ],
  "compmodel": [
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "TestNonLinearConstraints",
        "test_joint_fitter",
        "compmodel"
      ]
    ]
  ],
  "errf": [
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "TestNonLinearConstraints",
        "test_joint_fitter",
        "errf"
      ]
    ]
  ],
  "test_joint_fitter": [
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "TestNonLinearConstraints",
        "test_joint_fitter"
      ]
    ],
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestJointFitter",
        "test_joint_fitter"
      ]
    ]
  ],
  "test_no_constraints": [
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "TestNonLinearConstraints",
        "test_no_constraints"
      ]
    ]
  ],
  "test_bounds_lsq": [
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "TestBounds",
        "test_bounds_lsq"
      ]
    ]
  ],
  "test_bounds_slsqp": [
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "TestBounds",
        "test_bounds_slsqp"
      ]
    ]
  ],
  "test_bounds_gauss2d_lsq": [
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "TestBounds",
        "test_bounds_gauss2d_lsq"
      ]
    ]
  ],
  "test_bounds_gauss2d_slsqp": [
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "TestBounds",
        "test_bounds_gauss2d_slsqp"
      ]
    ]
  ],
  "test_set_fixed_1": [
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "test_set_fixed_1"
      ]
    ]
  ],
  "test_set_fixed_2": [
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "test_set_fixed_2"
      ]
    ]
  ],
  "test_set_tied_1": [
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "test_set_tied_1"
      ]
    ]
  ],
  "test_set_tied_2": [
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "test_set_tied_2"
      ]
    ]
  ],
  "test_unset_fixed": [
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "test_unset_fixed"
      ]
    ]
  ],
  "test_unset_tied": [
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "test_unset_tied"
      ]
    ]
  ],
  "test_set_bounds_1": [
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "test_set_bounds_1"
      ]
    ]
  ],
  "test_set_bounds_2": [
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "test_set_bounds_2"
      ]
    ]
  ],
  "test_unset_bounds": [
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "test_unset_bounds"
      ]
    ]
  ],
  "test_default_constraints": [
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "test_default_constraints"
      ]
    ]
  ],
  "test_fit_with_fixed_and_bound_constraints": [
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "test_fit_with_fixed_and_bound_constraints"
      ]
    ]
  ],
  "test_fit_with_bound_constraints_estimate_jacobian": [
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "test_fit_with_bound_constraints_estimate_jacobian"
      ]
    ]
  ],
  "test_gaussian2d_positive_stddev": [
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "test_gaussian2d_positive_stddev"
      ]
    ]
  ],
  "test_2d_model": [
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "test_2d_model"
      ]
    ]
  ],
  "test_set_prior_posterior": [
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "test_set_prior_posterior"
      ]
    ]
  ],
  "test_set_constraints": [
    [
      "astropy/modeling/tests/test_constraints.py",
      [
        "test_set_constraints"
      ]
    ]
  ],
  "test_clear_cache": [
    [
      "astropy/modeling/tests/test_convolution.py",
      [
        "test_clear_cache"
      ]
    ]
  ],
  "test_input_shape_1d": [
    [
      "astropy/modeling/tests/test_convolution.py",
      [
        "test_input_shape_1d"
      ]
    ]
  ],
  "test_input_shape_2d": [
    [
      "astropy/modeling/tests/test_convolution.py",
      [
        "test_input_shape_2d"
      ]
    ]
  ],
  "test__convolution_inputs": [
    [
      "astropy/modeling/tests/test_convolution.py",
      [
        "test__convolution_inputs"
      ]
    ]
  ],
  "test_Model_instance_repr_and_str": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_Model_instance_repr_and_str"
      ]
    ]
  ],
  "test_Model_array_parameter": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_Model_array_parameter"
      ]
    ]
  ],
  "test_inputless_model": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_inputless_model"
      ]
    ]
  ],
  "test_ParametericModel": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_ParametericModel"
      ]
    ]
  ],
  "model_a": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_custom_model_signature",
        "model_a"
      ]
    ]
  ],
  "model_b": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_custom_model_signature",
        "model_b"
      ]
    ]
  ],
  "model_c": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_custom_model_signature",
        "model_c"
      ]
    ]
  ],
  "test_custom_model_signature": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_custom_model_signature"
      ]
    ]
  ],
  "test_custom_model_subclass": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_custom_model_subclass"
      ]
    ]
  ],
  "test_custom_model_parametrized_decorator": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_custom_model_parametrized_decorator"
      ]
    ]
  ],
  "model_1": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_custom_model_n_outputs",
        "model_1"
      ]
    ],
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_custom_model_settable_parameters",
        "model_1"
      ]
    ]
  ],
  "test_custom_model_n_outputs": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_custom_model_n_outputs"
      ]
    ]
  ],
  "test_custom_model_settable_parameters": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_custom_model_settable_parameters"
      ]
    ]
  ],
  "test_custom_model_regected_parameters": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_custom_model_regected_parameters"
      ]
    ]
  ],
  "test_custom_inverse": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_custom_inverse"
      ]
    ]
  ],
  "test_custom_inverse_reset": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_custom_inverse_reset"
      ]
    ]
  ],
  "test_render_model_2d": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_render_model_2d"
      ]
    ]
  ],
  "test_render_model_1d": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_render_model_1d"
      ]
    ]
  ],
  "test_render_model_3d": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_render_model_3d"
      ]
    ]
  ],
  "test_render_model_out_dtype": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_render_model_out_dtype"
      ]
    ]
  ],
  "test_custom_bounding_box_1d": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_custom_bounding_box_1d"
      ]
    ]
  ],
  "test_n_submodels_in_single_models": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_n_submodels_in_single_models"
      ]
    ]
  ],
  "test_compound_deepcopy": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_compound_deepcopy"
      ]
    ]
  ],
  "test_units_with_bounding_box": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_units_with_bounding_box"
      ]
    ]
  ],
  "test_rename_path": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_rename_path"
      ]
    ]
  ],
  "test_rename_1d": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_rename_1d"
      ]
    ]
  ],
  "test_rename_2d": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_rename_2d"
      ]
    ]
  ],
  "test_fix_inputs_integer": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_fix_inputs_integer"
      ]
    ]
  ],
  "test_fix_inputs_empty_dict": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_fix_inputs_empty_dict"
      ]
    ]
  ],
  "test_rename_inputs_outputs": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_rename_inputs_outputs"
      ]
    ]
  ],
  "test__prepare_output_single_model": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test__prepare_output_single_model"
      ]
    ]
  ],
  "test_prepare_outputs_mixed_broadcast": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_prepare_outputs_mixed_broadcast"
      ]
    ]
  ],
  "test_prepare_outputs_complex_reshape": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_prepare_outputs_complex_reshape"
      ]
    ]
  ],
  "test_prepare_outputs_single_entry_vector": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_prepare_outputs_single_entry_vector"
      ]
    ]
  ],
  "test_prepare_outputs_sparse_grid": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_prepare_outputs_sparse_grid"
      ]
    ]
  ],
  "test_coerce_units": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_coerce_units"
      ]
    ]
  ],
  "test_bounding_box_general_inverse": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_bounding_box_general_inverse"
      ]
    ]
  ],
  "test__add_special_operator": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test__add_special_operator"
      ]
    ]
  ],
  "test_print_special_operator_CompoundModel": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_print_special_operator_CompoundModel"
      ]
    ]
  ],
  "test__validate_input_shape": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test__validate_input_shape"
      ]
    ]
  ],
  "test__validate_input_shapes": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test__validate_input_shapes"
      ]
    ]
  ],
  "test__remove_axes_from_shape": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test__remove_axes_from_shape"
      ]
    ]
  ],
  "test_get_bounding_box": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_get_bounding_box"
      ]
    ]
  ],
  "test_compound_bounding_box": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_compound_bounding_box"
      ]
    ]
  ],
  "test_bind_bounding_box": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_bind_bounding_box"
      ]
    ]
  ],
  "test_bind_compound_bounding_box_using_with_bounding_box_select": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_bind_compound_bounding_box_using_with_bounding_box_select"
      ]
    ]
  ],
  "test_fix_inputs_compound_bounding_box": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_fix_inputs_compound_bounding_box"
      ]
    ]
  ],
  "test_model_copy_with_bounding_box": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_model_copy_with_bounding_box"
      ]
    ]
  ],
  "test_compound_model_copy_with_bounding_box": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_compound_model_copy_with_bounding_box"
      ]
    ]
  ],
  "test_model_copy_with_compound_bounding_box": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_model_copy_with_compound_bounding_box"
      ]
    ]
  ],
  "test_compound_model_copy_with_compound_bounding_box": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_compound_model_copy_with_compound_bounding_box"
      ]
    ]
  ],
  "test_compound_model_copy_user_attribute": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_compound_model_copy_user_attribute"
      ]
    ]
  ],
  "test_model_mixed_array_scalar_bounding_box": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_model_mixed_array_scalar_bounding_box"
      ]
    ]
  ],
  "test_compound_model_mixed_array_scalar_bounding_box": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_compound_model_mixed_array_scalar_bounding_box"
      ]
    ]
  ],
  "test_model_with_bounding_box_true_and_single_output": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_model_with_bounding_box_true_and_single_output"
      ]
    ]
  ],
  "test_compound_model_with_bounding_box_true_and_single_output": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_compound_model_with_bounding_box_true_and_single_output"
      ]
    ]
  ],
  "test_bounding_box_pass_with_ignored": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_bounding_box_pass_with_ignored"
      ]
    ]
  ],
  "test_compound_bounding_box_pass_with_ignored": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_compound_bounding_box_pass_with_ignored"
      ]
    ]
  ],
  "test_model_integer_indexing": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_model_integer_indexing"
      ]
    ]
  ],
  "test_model_string_indexing": [
    [
      "astropy/modeling/tests/test_core.py",
      [
        "test_model_string_indexing"
      ]
    ]
  ],
  "test_poly2D_fitting": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestPolynomial2D",
        "test_poly2D_fitting"
      ]
    ]
  ],
  "test_eval": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestPolynomial2D",
        "test_eval"
      ]
    ],
    [
      "astropy/modeling/tests/test_model_sets.py",
      [
        "test_eval"
      ]
    ]
  ],
  "test_polynomial2D_nonlinear_fitting": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestPolynomial2D",
        "test_polynomial2D_nonlinear_fitting"
      ]
    ]
  ],
  "test_default_params": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestICheb2D",
        "test_default_params"
      ]
    ]
  ],
  "test_poly2D_cheb2D": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestICheb2D",
        "test_poly2D_cheb2D"
      ]
    ]
  ],
  "test_chebyshev2D_nonlinear_fitting": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestICheb2D",
        "test_chebyshev2D_nonlinear_fitting"
      ]
    ]
  ],
  "test_chebyshev2D_nonlinear_fitting_with_weights": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestICheb2D",
        "test_chebyshev2D_nonlinear_fitting_with_weights"
      ]
    ]
  ],
  "test_joint_parameter": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestJointFitter",
        "test_joint_parameter"
      ]
    ]
  ],
  "test_compound_model_raises_error": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestLinearLSQFitter",
        "test_compound_model_raises_error"
      ]
    ]
  ],
  "test_chebyshev1D": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestLinearLSQFitter",
        "test_chebyshev1D"
      ]
    ]
  ],
  "test_linear_fit_model_set": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestLinearLSQFitter",
        "test_linear_fit_model_set"
      ]
    ]
  ],
  "test_linear_fit_2d_model_set": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestLinearLSQFitter",
        "test_linear_fit_2d_model_set"
      ]
    ]
  ],
  "test_linear_fit_fixed_parameter": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestLinearLSQFitter",
        "test_linear_fit_fixed_parameter"
      ]
    ]
  ],
  "test_linear_fit_model_set_fixed_parameter": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestLinearLSQFitter",
        "test_linear_fit_model_set_fixed_parameter"
      ]
    ]
  ],
  "test_linear_fit_2d_model_set_fixed_parameters": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestLinearLSQFitter",
        "test_linear_fit_2d_model_set_fixed_parameters"
      ]
    ]
  ],
  "test_linear_fit_model_set_masked_values": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestLinearLSQFitter",
        "test_linear_fit_model_set_masked_values"
      ]
    ]
  ],
  "test_linear_fit_2d_model_set_masked_values": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestLinearLSQFitter",
        "test_linear_fit_2d_model_set_masked_values"
      ]
    ]
  ],
  "test_estimated_vs_analytic_deriv": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestNonLinearFitters",
        "test_estimated_vs_analytic_deriv"
      ]
    ]
  ],
  "test_estimated_vs_analytic_deriv_with_weights": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestNonLinearFitters",
        "test_estimated_vs_analytic_deriv_with_weights"
      ]
    ]
  ],
  "test_with_optimize": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestNonLinearFitters",
        "test_with_optimize"
      ]
    ]
  ],
  "test_with_weights": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestNonLinearFitters",
        "test_with_weights"
      ]
    ]
  ],
  "test_fitter_against_LevMar": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestNonLinearFitters",
        "test_fitter_against_LevMar"
      ]
    ]
  ],
  "test_LSQ_SLSQP_with_constraints": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestNonLinearFitters",
        "test_LSQ_SLSQP_with_constraints"
      ]
    ]
  ],
  "test_LevMar_with_weights": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestNonLinearFitters",
        "test_LevMar_with_weights"
      ]
    ]
  ],
  "test_simplex_lsq_fitter": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestNonLinearFitters",
        "test_simplex_lsq_fitter"
      ]
    ]
  ],
  "test_param_cov": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestNonLinearFitters",
        "test_param_cov"
      ]
    ]
  ],
  "successfulimport": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestEntryPoint",
        "successfulimport"
      ]
    ]
  ],
  "raiseimporterror": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestEntryPoint",
        "raiseimporterror"
      ]
    ]
  ],
  "returnbadfunc": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestEntryPoint",
        "returnbadfunc"
      ]
    ]
  ],
  "returnbadclass": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestEntryPoint",
        "returnbadclass"
      ]
    ]
  ],
  "test_working": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestEntryPoint",
        "test_working"
      ]
    ]
  ],
  "test_import_error": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestEntryPoint",
        "test_import_error"
      ]
    ]
  ],
  "test_bad_func": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestEntryPoint",
        "test_bad_func"
      ]
    ]
  ],
  "test_bad_class": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestEntryPoint",
        "test_bad_class"
      ]
    ]
  ],
  "test_with_fitters_and_sigma_clip": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "Test1DFittingWithOutlierRemoval",
        "test_with_fitters_and_sigma_clip"
      ]
    ],
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "Test2DFittingWithOutlierRemoval",
        "test_with_fitters_and_sigma_clip"
      ]
    ]
  ],
  "initial_guess": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "Test2DFittingWithOutlierRemoval",
        "initial_guess"
      ]
    ]
  ],
  "test_1d_set_fitting_with_outlier_removal": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "test_1d_set_fitting_with_outlier_removal"
      ]
    ]
  ],
  "test_2d_set_axis_2_fitting_with_outlier_removal": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "test_2d_set_axis_2_fitting_with_outlier_removal"
      ]
    ]
  ],
  "test_1d_without_weights_without_sigma_clip": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestWeightedFittingWithOutlierRemoval",
        "test_1d_without_weights_without_sigma_clip"
      ]
    ]
  ],
  "test_1d_without_weights_with_sigma_clip": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestWeightedFittingWithOutlierRemoval",
        "test_1d_without_weights_with_sigma_clip"
      ]
    ]
  ],
  "test_1d_with_weights_without_sigma_clip": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestWeightedFittingWithOutlierRemoval",
        "test_1d_with_weights_without_sigma_clip"
      ]
    ]
  ],
  "test_1d_with_weights_with_sigma_clip": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestWeightedFittingWithOutlierRemoval",
        "test_1d_with_weights_with_sigma_clip"
      ]
    ]
  ],
  "test_1d_set_with_common_weights_with_sigma_clip": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestWeightedFittingWithOutlierRemoval",
        "test_1d_set_with_common_weights_with_sigma_clip"
      ]
    ]
  ],
  "test_1d_set_with_weights_with_sigma_clip": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestWeightedFittingWithOutlierRemoval",
        "test_1d_set_with_weights_with_sigma_clip"
      ]
    ]
  ],
  "test_2d_without_weights_without_sigma_clip": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestWeightedFittingWithOutlierRemoval",
        "test_2d_without_weights_without_sigma_clip"
      ]
    ]
  ],
  "test_2d_without_weights_with_sigma_clip": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestWeightedFittingWithOutlierRemoval",
        "test_2d_without_weights_with_sigma_clip"
      ]
    ]
  ],
  "test_2d_with_weights_without_sigma_clip": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestWeightedFittingWithOutlierRemoval",
        "test_2d_with_weights_without_sigma_clip"
      ]
    ]
  ],
  "test_2d_linear_with_weights_without_sigma_clip": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestWeightedFittingWithOutlierRemoval",
        "test_2d_linear_with_weights_without_sigma_clip"
      ]
    ]
  ],
  "test_2d_with_weights_with_sigma_clip": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestWeightedFittingWithOutlierRemoval",
        "test_2d_with_weights_with_sigma_clip"
      ]
    ]
  ],
  "test_2d_linear_with_weights_with_sigma_clip": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestWeightedFittingWithOutlierRemoval",
        "test_2d_linear_with_weights_with_sigma_clip"
      ]
    ]
  ],
  "test_fitters_with_weights": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "test_fitters_with_weights"
      ]
    ]
  ],
  "test_linear_fitter_with_weights": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "test_linear_fitter_with_weights"
      ]
    ]
  ],
  "test_linear_fitter_with_weights_flat": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "test_linear_fitter_with_weights_flat"
      ]
    ]
  ],
  "test_fitters_interface": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "test_fitters_interface"
      ]
    ]
  ],
  "test_optimizers": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "test_optimizers"
      ]
    ]
  ],
  "test_Optimization_abstract_call": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "test_Optimization_abstract_call"
      ]
    ]
  ],
  "test_fitting_with_outlier_removal_niter": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "test_fitting_with_outlier_removal_niter"
      ]
    ]
  ],
  "test_1d_models": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestFittingUncertanties",
        "test_1d_models"
      ]
    ]
  ],
  "test_2d_models": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestFittingUncertanties",
        "test_2d_models"
      ]
    ]
  ],
  "test_covariance_std_printing_indexing": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "TestFittingUncertanties",
        "test_covariance_std_printing_indexing"
      ]
    ]
  ],
  "test_non_finite_filter": [
    [
      "astropy/modeling/tests/test_fitters.py",
      [
        "test_non_finite_filter"
      ]
    ]
  ],
  "test_sigma_constant": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_sigma_constant"
      ]
    ]
  ],
  "test_Trapezoid1D": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_Trapezoid1D"
      ]
    ]
  ],
  "test_Gaussian1D": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_Gaussian1D"
      ]
    ]
  ],
  "test_Gaussian2D": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_Gaussian2D"
      ]
    ]
  ],
  "test_Gaussian2DCovariance": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_Gaussian2DCovariance"
      ]
    ]
  ],
  "test_Gaussian2DRotation": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_Gaussian2DRotation"
      ]
    ]
  ],
  "test_Gaussian2D_invalid_inputs": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_Gaussian2D_invalid_inputs"
      ]
    ]
  ],
  "test_Gaussian2D_theta_bbox": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_Gaussian2D_theta_bbox"
      ]
    ]
  ],
  "test_moffat_fwhm": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_moffat_fwhm"
      ]
    ]
  ],
  "test_RedshiftScaleFactor": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_RedshiftScaleFactor"
      ]
    ]
  ],
  "test_RedshiftScaleFactor_inverse": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_RedshiftScaleFactor_inverse"
      ]
    ]
  ],
  "test_RedshiftScaleFactor_inverse_bounding_box": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_RedshiftScaleFactor_inverse_bounding_box"
      ]
    ]
  ],
  "test_RedshiftScaleFactor_model_levmar_fit": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_RedshiftScaleFactor_model_levmar_fit"
      ]
    ]
  ],
  "test_Ellipse2D": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_Ellipse2D"
      ]
    ]
  ],
  "test_Ellipse2D_circular": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_Ellipse2D_circular"
      ]
    ]
  ],
  "test_Scale_inverse": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_Scale_inverse"
      ]
    ]
  ],
  "test_Scale_inverse_bounding_box": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_Scale_inverse_bounding_box"
      ]
    ]
  ],
  "test_Multiply_inverse": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_Multiply_inverse"
      ]
    ]
  ],
  "test_Multiply_inverse_bounding_box": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_Multiply_inverse_bounding_box"
      ]
    ]
  ],
  "test_Shift_inverse": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_Shift_inverse"
      ]
    ]
  ],
  "test_Shift_inverse_bounding_box": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_Shift_inverse_bounding_box"
      ]
    ]
  ],
  "test_Shift_model_levmar_fit": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_Shift_model_levmar_fit"
      ]
    ]
  ],
  "test_Shift_model_set_linear_fit": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_Shift_model_set_linear_fit"
      ]
    ]
  ],
  "test_Scale_model_set_linear_fit": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_Scale_model_set_linear_fit"
      ]
    ]
  ],
  "test_Scale_model_evaluate_without_units": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_Scale_model_evaluate_without_units"
      ]
    ]
  ],
  "test_Ring2D_rout": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_Ring2D_rout"
      ]
    ]
  ],
  "test_Voigt1D": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_Voigt1D"
      ]
    ]
  ],
  "test_Voigt1D_norm": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_Voigt1D_norm"
      ]
    ]
  ],
  "test_Voigt1D_hum2": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_Voigt1D_hum2"
      ]
    ]
  ],
  "test_KingProjectedAnalytic1D_fit": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_KingProjectedAnalytic1D_fit"
      ]
    ]
  ],
  "test_ExponentialAndLogarithmic1D_fit": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_ExponentialAndLogarithmic1D_fit"
      ]
    ]
  ],
  "test_ExponentialAndLogarithmic_set_tau": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_ExponentialAndLogarithmic_set_tau"
      ]
    ]
  ],
  "test_Linear1D_inverse": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_Linear1D_inverse"
      ]
    ]
  ],
  "test_trig_inverse": [
    [
      "astropy/modeling/tests/test_functional_models.py",
      [
        "test_trig_inverse"
      ]
    ]
  ],
  "test_input1D": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestInputType",
        "test_input1D"
      ]
    ],
    [
      "astropy/modeling/tests/test_models.py",
      [
        "Fittable1DModelTester",
        "test_input1D"
      ]
    ]
  ],
  "test_input2D": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestInputType",
        "test_input2D"
      ]
    ],
    [
      "astropy/modeling/tests/test_models.py",
      [
        "Fittable2DModelTester",
        "test_input2D"
      ]
    ]
  ],
  "test_linear_fitter_1set": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestFitting",
        "test_linear_fitter_1set"
      ]
    ]
  ],
  "test_linear_fitter_Nset": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestFitting",
        "test_linear_fitter_Nset"
      ]
    ]
  ],
  "test_linear_fitter_1dcheb": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestFitting",
        "test_linear_fitter_1dcheb"
      ]
    ]
  ],
  "test_linear_fitter_1dlegend": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestFitting",
        "test_linear_fitter_1dlegend"
      ]
    ]
  ],
  "test_linear_fitter_1set2d": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestFitting",
        "test_linear_fitter_1set2d"
      ]
    ]
  ],
  "test_wrong_numpset": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestFitting",
        "test_wrong_numpset"
      ]
    ]
  ],
  "test_wrong_pset": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestFitting",
        "test_wrong_pset"
      ]
    ]
  ],
  "test_nonlinear_lsqt_1set_1d": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestFitting",
        "test_nonlinear_lsqt_1set_1d"
      ]
    ]
  ],
  "test_nonlinear_lsqt_Nset_1d": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestFitting",
        "test_nonlinear_lsqt_Nset_1d"
      ]
    ]
  ],
  "test_nonlinear_lsqt_1set_2d": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestFitting",
        "test_nonlinear_lsqt_1set_2d"
      ]
    ]
  ],
  "test_nonlinear_lsqt_Nset_2d": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestFitting",
        "test_nonlinear_lsqt_Nset_2d"
      ]
    ]
  ],
  "test_non_linear_NYset": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestEvaluation",
        "test_non_linear_NYset"
      ]
    ]
  ],
  "test_non_linear_NXYset": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestEvaluation",
        "test_non_linear_NXYset"
      ]
    ]
  ],
  "test_p1_1set_1pset": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestEvaluation",
        "test_p1_1set_1pset"
      ]
    ]
  ],
  "test_p1_nset_npset": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestEvaluation",
        "test_p1_nset_npset"
      ]
    ]
  ],
  "test_p2_1set_1pset": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestEvaluation",
        "test_p2_1set_1pset"
      ]
    ]
  ],
  "test_p2_nset_npset": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestEvaluation",
        "test_p2_nset_npset"
      ]
    ]
  ],
  "test_nset_domain": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestEvaluation",
        "test_nset_domain"
      ]
    ]
  ],
  "test_evaluate_gauss2d": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestEvaluation",
        "test_evaluate_gauss2d"
      ]
    ]
  ],
  "test_scalar_parameters_scalar_input": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestSingleInputSingleOutputSingleModel",
        "test_scalar_parameters_scalar_input"
      ]
    ],
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestSingleInputSingleOutputTwoModel",
        "test_scalar_parameters_scalar_input"
      ]
    ],
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestSingleInputDoubleOutputSingleModel",
        "test_scalar_parameters_scalar_input"
      ]
    ]
  ],
  "test_scalar_parameters_1d_array_input": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestSingleInputSingleOutputSingleModel",
        "test_scalar_parameters_1d_array_input"
      ]
    ],
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestSingleInputSingleOutputTwoModel",
        "test_scalar_parameters_1d_array_input"
      ]
    ],
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestSingleInputDoubleOutputSingleModel",
        "test_scalar_parameters_1d_array_input"
      ]
    ]
  ],
  "test_scalar_parameters_2d_array_input": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestSingleInputSingleOutputSingleModel",
        "test_scalar_parameters_2d_array_input"
      ]
    ],
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestSingleInputSingleOutputTwoModel",
        "test_scalar_parameters_2d_array_input"
      ]
    ],
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestSingleInputDoubleOutputSingleModel",
        "test_scalar_parameters_2d_array_input"
      ]
    ]
  ],
  "test_scalar_parameters_3d_array_input": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestSingleInputSingleOutputSingleModel",
        "test_scalar_parameters_3d_array_input"
      ]
    ],
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestSingleInputSingleOutputTwoModel",
        "test_scalar_parameters_3d_array_input"
      ]
    ],
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestSingleInputDoubleOutputSingleModel",
        "test_scalar_parameters_3d_array_input"
      ]
    ]
  ],
  "test_1d_array_parameters_scalar_input": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestSingleInputSingleOutputSingleModel",
        "test_1d_array_parameters_scalar_input"
      ]
    ],
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestSingleInputSingleOutputTwoModel",
        "test_1d_array_parameters_scalar_input"
      ]
    ],
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestSingleInputDoubleOutputSingleModel",
        "test_1d_array_parameters_scalar_input"
      ]
    ]
  ],
  "test_1d_array_parameters_1d_array_input": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestSingleInputSingleOutputSingleModel",
        "test_1d_array_parameters_1d_array_input"
      ]
    ],
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestSingleInputSingleOutputTwoModel",
        "test_1d_array_parameters_1d_array_input"
      ]
    ],
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestSingleInputDoubleOutputSingleModel",
        "test_1d_array_parameters_1d_array_input"
      ]
    ]
  ],
  "test_2d_array_parameters_2d_array_input": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestSingleInputSingleOutputSingleModel",
        "test_2d_array_parameters_2d_array_input"
      ]
    ],
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestSingleInputSingleOutputTwoModel",
        "test_2d_array_parameters_2d_array_input"
      ]
    ],
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestSingleInputDoubleOutputSingleModel",
        "test_2d_array_parameters_2d_array_input"
      ]
    ]
  ],
  "test_mixed_array_parameters_1d_array_input": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestSingleInputSingleOutputSingleModel",
        "test_mixed_array_parameters_1d_array_input"
      ]
    ],
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestSingleInputSingleOutputTwoModel",
        "test_mixed_array_parameters_1d_array_input"
      ]
    ],
    [
      "astropy/modeling/tests/test_input.py",
      [
        "TestSingleInputDoubleOutputSingleModel",
        "test_mixed_array_parameters_1d_array_input"
      ]
    ]
  ],
  "test_mixed_input": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "test_mixed_input"
      ]
    ]
  ],
  "test_more_outputs": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "test_more_outputs"
      ]
    ]
  ],
  "test_format_input_scalars": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "test_format_input_scalars"
      ]
    ]
  ],
  "test_format_input_arrays": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "test_format_input_arrays"
      ]
    ]
  ],
  "test_format_input_arrays_transposed": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "test_format_input_arrays_transposed"
      ]
    ]
  ],
  "test_call_keyword_args_2": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "test_call_keyword_args_2"
      ]
    ]
  ],
  "test_call_keyword_args_1": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "test_call_keyword_args_1"
      ]
    ]
  ],
  "test_call_keyword_args_1_7": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "test_call_keyword_args_1_7"
      ]
    ]
  ],
  "test_call_keyword_mappings": [
    [
      "astropy/modeling/tests/test_input.py",
      [
        "test_call_keyword_mappings"
      ]
    ]
  ],
  "test_swap_axes": [
    [
      "astropy/modeling/tests/test_mappings.py",
      [
        "test_swap_axes"
      ]
    ]
  ],
  "test_duplicate_axes": [
    [
      "astropy/modeling/tests/test_mappings.py",
      [
        "test_duplicate_axes"
      ]
    ]
  ],
  "test_drop_axes_1": [
    [
      "astropy/modeling/tests/test_mappings.py",
      [
        "test_drop_axes_1"
      ]
    ]
  ],
  "test_drop_axes_2": [
    [
      "astropy/modeling/tests/test_mappings.py",
      [
        "test_drop_axes_2"
      ]
    ]
  ],
  "test_drop_axes_3": [
    [
      "astropy/modeling/tests/test_mappings.py",
      [
        "test_drop_axes_3"
      ]
    ]
  ],
  "test_bad_inputs": [
    [
      "astropy/modeling/tests/test_mappings.py",
      [
        "test_bad_inputs"
      ]
    ]
  ],
  "test_identity": [
    [
      "astropy/modeling/tests/test_mappings.py",
      [
        "test_identity"
      ]
    ]
  ],
  "test_fittable_compound": [
    [
      "astropy/modeling/tests/test_mappings.py",
      [
        "test_fittable_compound"
      ]
    ]
  ],
  "test_identity_repr": [
    [
      "astropy/modeling/tests/test_mappings.py",
      [
        "test_identity_repr"
      ]
    ]
  ],
  "test_mapping_repr": [
    [
      "astropy/modeling/tests/test_mappings.py",
      [
        "test_mapping_repr"
      ]
    ]
  ],
  "test___init__": [
    [
      "astropy/modeling/tests/test_mappings.py",
      [
        "TestUnitsMapping",
        "test___init__"
      ]
    ],
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline",
        "test___init__"
      ]
    ]
  ],
  "test_math": [
    [
      "astropy/modeling/tests/test_math_func.py",
      [
        "test_math"
      ]
    ]
  ],
  "test_model1d_axis_1": [
    [
      "astropy/modeling/tests/test_model_sets.py",
      [
        "test_model1d_axis_1"
      ]
    ]
  ],
  "test_model1d_axis_2": [
    [
      "astropy/modeling/tests/test_model_sets.py",
      [
        "test_model1d_axis_2"
      ]
    ]
  ],
  "test_model1d_axis_0": [
    [
      "astropy/modeling/tests/test_model_sets.py",
      [
        "test_model1d_axis_0"
      ]
    ]
  ],
  "test_model2d_axis_2": [
    [
      "astropy/modeling/tests/test_model_sets.py",
      [
        "test_model2d_axis_2"
      ]
    ]
  ],
  "test_negative_axis": [
    [
      "astropy/modeling/tests/test_model_sets.py",
      [
        "test_negative_axis"
      ]
    ]
  ],
  "test_shapes": [
    [
      "astropy/modeling/tests/test_model_sets.py",
      [
        "test_shapes"
      ]
    ],
    [
      "astropy/timeseries/periodograms/bls/tests/test_bls.py",
      [
        "test_shapes"
      ]
    ]
  ],
  "test_linearlsqfitter": [
    [
      "astropy/modeling/tests/test_model_sets.py",
      [
        "test_linearlsqfitter"
      ]
    ]
  ],
  "test_model_set_axis_outputs": [
    [
      "astropy/modeling/tests/test_model_sets.py",
      [
        "test_model_set_axis_outputs"
      ]
    ]
  ],
  "test_fitting_shapes": [
    [
      "astropy/modeling/tests/test_model_sets.py",
      [
        "test_fitting_shapes"
      ]
    ]
  ],
  "test_compound_model_sets": [
    [
      "astropy/modeling/tests/test_model_sets.py",
      [
        "test_compound_model_sets"
      ]
    ]
  ],
  "test_linear_fit_model_set_errors": [
    [
      "astropy/modeling/tests/test_model_sets.py",
      [
        "test_linear_fit_model_set_errors"
      ]
    ]
  ],
  "test_linear_fit_model_set_common_weight": [
    [
      "astropy/modeling/tests/test_model_sets.py",
      [
        "test_linear_fit_model_set_common_weight"
      ]
    ]
  ],
  "test_linear_fit_model_set_weights": [
    [
      "astropy/modeling/tests/test_model_sets.py",
      [
        "test_linear_fit_model_set_weights"
      ]
    ]
  ],
  "test_linear_fit_2d_model_set_errors": [
    [
      "astropy/modeling/tests/test_model_sets.py",
      [
        "test_linear_fit_2d_model_set_errors"
      ]
    ]
  ],
  "test_linear_fit_2d_model_set_common_weight": [
    [
      "astropy/modeling/tests/test_model_sets.py",
      [
        "test_linear_fit_2d_model_set_common_weight"
      ]
    ]
  ],
  "test_linear_fit_flat_2d_model_set_common_weight": [
    [
      "astropy/modeling/tests/test_model_sets.py",
      [
        "test_linear_fit_flat_2d_model_set_common_weight"
      ]
    ]
  ],
  "test_linear_fit_2d_model_set_weights": [
    [
      "astropy/modeling/tests/test_model_sets.py",
      [
        "test_linear_fit_2d_model_set_weights"
      ]
    ]
  ],
  "test_linear_fit_flat_2d_model_set_weights": [
    [
      "astropy/modeling/tests/test_model_sets.py",
      [
        "test_linear_fit_flat_2d_model_set_weights"
      ]
    ]
  ],
  "test_linear_1d_common_weights": [
    [
      "astropy/modeling/tests/test_model_sets.py",
      [
        "Test1ModelSet",
        "test_linear_1d_common_weights"
      ]
    ]
  ],
  "test_linear_1d_separate_weights": [
    [
      "astropy/modeling/tests/test_model_sets.py",
      [
        "Test1ModelSet",
        "test_linear_1d_separate_weights"
      ]
    ]
  ],
  "test_linear_1d_separate_weights_axis_1": [
    [
      "astropy/modeling/tests/test_model_sets.py",
      [
        "Test1ModelSet",
        "test_linear_1d_separate_weights_axis_1"
      ]
    ]
  ],
  "test_linear_2d_common_weights": [
    [
      "astropy/modeling/tests/test_model_sets.py",
      [
        "Test1ModelSet",
        "test_linear_2d_common_weights"
      ]
    ]
  ],
  "test_linear_2d_separate_weights": [
    [
      "astropy/modeling/tests/test_model_sets.py",
      [
        "Test1ModelSet",
        "test_linear_2d_separate_weights"
      ]
    ]
  ],
  "test_linear_2d_separate_weights_axis_2": [
    [
      "astropy/modeling/tests/test_model_sets.py",
      [
        "Test1ModelSet",
        "test_linear_2d_separate_weights_axis_2"
      ]
    ]
  ],
  "sine_model": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_custom_model",
        "sine_model"
      ]
    ]
  ],
  "sine_deriv": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_custom_model",
        "sine_deriv"
      ]
    ]
  ],
  "test_custom_model": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_custom_model"
      ]
    ]
  ],
  "test_custom_model_init": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_custom_model_init"
      ]
    ]
  ],
  "test_custom_model_defaults": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_custom_model_defaults"
      ]
    ]
  ],
  "test_inconsistent_input_shapes": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_inconsistent_input_shapes"
      ]
    ]
  ],
  "test_custom_model_bounding_box": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_custom_model_bounding_box"
      ]
    ]
  ],
  "test_eval2D": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "Fittable2DModelTester",
        "test_eval2D"
      ]
    ]
  ],
  "test_bounding_box2D": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "Fittable2DModelTester",
        "test_bounding_box2D"
      ]
    ]
  ],
  "test_bounding_box2D_peak": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "Fittable2DModelTester",
        "test_bounding_box2D_peak"
      ]
    ]
  ],
  "test_fitter2D": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "Fittable2DModelTester",
        "test_fitter2D"
      ]
    ]
  ],
  "test_deriv_2D": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "Fittable2DModelTester",
        "test_deriv_2D"
      ]
    ]
  ],
  "test_eval1D": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "Fittable1DModelTester",
        "test_eval1D"
      ]
    ]
  ],
  "test_bounding_box1D": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "Fittable1DModelTester",
        "test_bounding_box1D"
      ]
    ]
  ],
  "test_bounding_box1D_peak": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "Fittable1DModelTester",
        "test_bounding_box1D_peak"
      ]
    ]
  ],
  "test_fitter1D": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "Fittable1DModelTester",
        "test_fitter1D"
      ]
    ]
  ],
  "test_deriv_1D": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "Fittable1DModelTester",
        "test_deriv_1D"
      ]
    ]
  ],
  "create_model": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "create_model"
      ]
    ]
  ],
  "test_ShiftModel": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_ShiftModel"
      ]
    ]
  ],
  "test_ScaleModel": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_ScaleModel"
      ]
    ]
  ],
  "test_voigt_model": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_voigt_model"
      ]
    ]
  ],
  "test_model_instance_repr": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_model_instance_repr"
      ]
    ]
  ],
  "test_tabular_interp_1d": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_tabular_interp_1d"
      ]
    ]
  ],
  "test_tabular_interp_2d": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_tabular_interp_2d"
      ]
    ]
  ],
  "test_tabular_nd": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_tabular_nd"
      ]
    ]
  ],
  "test_with_bounding_box": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_with_bounding_box"
      ]
    ]
  ],
  "test_tabular_with_bounding_box": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_tabular_with_bounding_box"
      ]
    ]
  ],
  "test_tabular_bounding_box_with_units": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_tabular_bounding_box_with_units"
      ]
    ]
  ],
  "test_tabular1d_inverse": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_tabular1d_inverse"
      ]
    ]
  ],
  "test_tabular_grid_shape_mismatch_error": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_tabular_grid_shape_mismatch_error"
      ]
    ]
  ],
  "test_tabular_repr": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_tabular_repr"
      ]
    ]
  ],
  "test_tabular_str": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_tabular_str"
      ]
    ]
  ],
  "test_tabular_evaluate": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_tabular_evaluate"
      ]
    ]
  ],
  "test_tabular_module_name": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_tabular_module_name"
      ]
    ]
  ],
  "test_parameter_inheritance": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_parameter_inheritance"
      ]
    ],
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "test_parameter_inheritance"
      ]
    ]
  ],
  "test_parameter_description": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_parameter_description"
      ]
    ]
  ],
  "test_SmoothlyBrokenPowerLaw1D_validators": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_SmoothlyBrokenPowerLaw1D_validators"
      ]
    ]
  ],
  "test_SmoothlyBrokenPowerLaw1D_fit_deriv": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_SmoothlyBrokenPowerLaw1D_fit_deriv"
      ]
    ]
  ],
  "__prepare__": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "_ExtendedModelMeta",
        "__prepare__"
      ]
    ]
  ],
  "test_metaclass_kwargs": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_metaclass_kwargs"
      ]
    ]
  ],
  "test_submetaclass_kwargs": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_submetaclass_kwargs"
      ]
    ]
  ],
  "test_custom_separability_matrix": [
    [
      "astropy/modeling/tests/test_models.py",
      [
        "test_custom_separability_matrix"
      ]
    ]
  ],
  "test_models_evaluate_without_units": [
    [
      "astropy/modeling/tests/test_models_quantities.py",
      [
        "test_models_evaluate_without_units"
      ]
    ]
  ],
  "test_models_evaluate_with_units": [
    [
      "astropy/modeling/tests/test_models_quantities.py",
      [
        "test_models_evaluate_with_units"
      ]
    ]
  ],
  "test_models_evaluate_with_units_x_array": [
    [
      "astropy/modeling/tests/test_models_quantities.py",
      [
        "test_models_evaluate_with_units_x_array"
      ]
    ]
  ],
  "test_models_evaluate_with_units_param_array": [
    [
      "astropy/modeling/tests/test_models_quantities.py",
      [
        "test_models_evaluate_with_units_param_array"
      ]
    ]
  ],
  "test_models_bounding_box": [
    [
      "astropy/modeling/tests/test_models_quantities.py",
      [
        "test_models_bounding_box"
      ]
    ]
  ],
  "test_compound_model_input_units_equivalencies_defaults": [
    [
      "astropy/modeling/tests/test_models_quantities.py",
      [
        "test_compound_model_input_units_equivalencies_defaults"
      ]
    ]
  ],
  "test_models_fitting": [
    [
      "astropy/modeling/tests/test_models_quantities.py",
      [
        "test_models_fitting"
      ]
    ]
  ],
  "test_input_unit_mismatch_error": [
    [
      "astropy/modeling/tests/test_models_quantities.py",
      [
        "test_input_unit_mismatch_error"
      ]
    ]
  ],
  "setter1": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "setter1"
      ]
    ]
  ],
  "setter2": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "setter2"
      ]
    ]
  ],
  "do_something": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "SetterModel",
        "do_something"
      ]
    ]
  ],
  "do_something_2": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "SetterModel",
        "do_something_2"
      ]
    ]
  ],
  "test__tofloat": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "test__tofloat"
      ]
    ]
  ],
  "test_parameter_properties": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "test_parameter_properties"
      ]
    ]
  ],
  "test_parameter_operators": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "test_parameter_operators"
      ]
    ]
  ],
  "test_param_metric": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "test_param_metric"
      ]
    ]
  ],
  "test_set_parameters_as_list": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_set_parameters_as_list"
      ]
    ]
  ],
  "test_set_parameters_as_array": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_set_parameters_as_array"
      ]
    ]
  ],
  "test_set_as_tuple": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_set_as_tuple"
      ]
    ]
  ],
  "test_set_model_attr_seq": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_set_model_attr_seq"
      ]
    ]
  ],
  "test_set_model_attr_num": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_set_model_attr_num"
      ]
    ]
  ],
  "test_set_item": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_set_item"
      ]
    ]
  ],
  "test_wrong_size1": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_wrong_size1"
      ]
    ]
  ],
  "test_wrong_size2": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_wrong_size2"
      ]
    ]
  ],
  "test_wrong_shape": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_wrong_shape"
      ]
    ]
  ],
  "test_par_against_iraf": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_par_against_iraf"
      ]
    ]
  ],
  "testPolynomial1D": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "testPolynomial1D"
      ]
    ]
  ],
  "test_poly1d_multiple_sets": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_poly1d_multiple_sets"
      ]
    ]
  ],
  "test_par_slicing": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_par_slicing"
      ]
    ]
  ],
  "test_poly2d": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_poly2d"
      ]
    ]
  ],
  "test_poly2d_multiple_sets": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_poly2d_multiple_sets"
      ]
    ]
  ],
  "test_shift_model_parameters1d": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_shift_model_parameters1d"
      ]
    ]
  ],
  "test_scale_model_parametersnd": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_scale_model_parametersnd"
      ]
    ]
  ],
  "test_bounds": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_bounds"
      ]
    ]
  ],
  "test_modify_value": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_modify_value"
      ]
    ]
  ],
  "test__set_unit": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test__set_unit"
      ]
    ]
  ],
  "test_shape": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_shape"
      ]
    ],
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "TestDistributionStatistics",
        "test_shape"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestShapeInformation",
        "test_shape"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestShapeInformation",
        "test_shape"
      ]
    ]
  ],
  "test_size": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_size"
      ]
    ],
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "TestDistributionStatistics",
        "test_size"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestShapeInformation",
        "test_size"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestShapeInformation",
        "test_size"
      ]
    ]
  ],
  "test_std": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_std"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_std"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestReductionLikeFunctions",
        "test_std"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestMethodLikes",
        "test_std"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_std"
      ]
    ]
  ],
  "test_fixed": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_fixed"
      ]
    ]
  ],
  "test_tied": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_tied"
      ]
    ]
  ],
  "test_validator": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_validator"
      ]
    ]
  ],
  "test_raw_value": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_raw_value"
      ]
    ]
  ],
  "wrapper1": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test__create_value_wrapper",
        "wrapper1"
      ]
    ]
  ],
  "wrapper2": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test__create_value_wrapper",
        "wrapper2"
      ]
    ]
  ],
  "wrapper3": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test__create_value_wrapper",
        "wrapper3"
      ]
    ]
  ],
  "test__create_value_wrapper": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test__create_value_wrapper"
      ]
    ]
  ],
  "test_bool": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_bool"
      ]
    ],
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_bool"
      ]
    ]
  ],
  "test_param_repr_oneline": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameters",
        "test_param_repr_oneline"
      ]
    ]
  ],
  "test_change_par": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestMultipleParameterSets",
        "test_change_par"
      ]
    ]
  ],
  "test_change_par2": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestMultipleParameterSets",
        "test_change_par2"
      ]
    ]
  ],
  "test_change_parameters": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestMultipleParameterSets",
        "test_change_parameters"
      ]
    ]
  ],
  "test_single_model_scalar_parameters": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameterInitialization",
        "test_single_model_scalar_parameters"
      ]
    ]
  ],
  "test_single_model_scalar_and_array_parameters": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameterInitialization",
        "test_single_model_scalar_and_array_parameters"
      ]
    ]
  ],
  "test_single_model_1d_array_parameters": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameterInitialization",
        "test_single_model_1d_array_parameters"
      ]
    ]
  ],
  "test_single_model_1d_array_different_length_parameters": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameterInitialization",
        "test_single_model_1d_array_different_length_parameters"
      ]
    ]
  ],
  "test_single_model_2d_array_parameters": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameterInitialization",
        "test_single_model_2d_array_parameters"
      ]
    ]
  ],
  "test_single_model_2d_non_square_parameters": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameterInitialization",
        "test_single_model_2d_non_square_parameters"
      ]
    ]
  ],
  "test_single_model_2d_broadcastable_parameters": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameterInitialization",
        "test_single_model_2d_broadcastable_parameters"
      ]
    ]
  ],
  "test_two_model_incorrect_scalar_parameters": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameterInitialization",
        "test_two_model_incorrect_scalar_parameters"
      ]
    ]
  ],
  "test_two_model_scalar_parameters": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameterInitialization",
        "test_two_model_scalar_parameters"
      ]
    ]
  ],
  "test_two_model_scalar_and_array_parameters": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameterInitialization",
        "test_two_model_scalar_and_array_parameters"
      ]
    ]
  ],
  "test_two_model_1d_array_parameters": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameterInitialization",
        "test_two_model_1d_array_parameters"
      ]
    ]
  ],
  "test_two_model_mixed_dimension_array_parameters": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameterInitialization",
        "test_two_model_mixed_dimension_array_parameters"
      ]
    ]
  ],
  "test_two_model_2d_array_parameters": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameterInitialization",
        "test_two_model_2d_array_parameters"
      ]
    ]
  ],
  "test_two_model_nonzero_model_set_axis": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameterInitialization",
        "test_two_model_nonzero_model_set_axis"
      ]
    ]
  ],
  "test_wrong_number_of_params": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameterInitialization",
        "test_wrong_number_of_params"
      ]
    ]
  ],
  "test_wrong_number_of_params2": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameterInitialization",
        "test_wrong_number_of_params2"
      ]
    ]
  ],
  "test_array_parameter1": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameterInitialization",
        "test_array_parameter1"
      ]
    ]
  ],
  "test_array_parameter2": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameterInitialization",
        "test_array_parameter2"
      ]
    ]
  ],
  "test_array_parameter4": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "TestParameterInitialization",
        "test_array_parameter4"
      ]
    ]
  ],
  "test_non_broadcasting_parameters": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "test_non_broadcasting_parameters"
      ]
    ]
  ],
  "test_setter": [
    [
      "astropy/modeling/tests/test_parameters.py",
      [
        "test_setter"
      ]
    ]
  ],
  "test_blackbody_evaluate": [
    [
      "astropy/modeling/tests/test_physical_models.py",
      [
        "test_blackbody_evaluate"
      ]
    ]
  ],
  "test_blackbody_weins_law": [
    [
      "astropy/modeling/tests/test_physical_models.py",
      [
        "test_blackbody_weins_law"
      ]
    ]
  ],
  "test_blackbody_sefanboltzman_law": [
    [
      "astropy/modeling/tests/test_physical_models.py",
      [
        "test_blackbody_sefanboltzman_law"
      ]
    ]
  ],
  "test_blackbody_input_units": [
    [
      "astropy/modeling/tests/test_physical_models.py",
      [
        "test_blackbody_input_units"
      ]
    ]
  ],
  "test_blackbody_return_units": [
    [
      "astropy/modeling/tests/test_physical_models.py",
      [
        "test_blackbody_return_units"
      ]
    ]
  ],
  "test_blackbody_fit": [
    [
      "astropy/modeling/tests/test_physical_models.py",
      [
        "test_blackbody_fit"
      ]
    ]
  ],
  "test_blackbody_overflow": [
    [
      "astropy/modeling/tests/test_physical_models.py",
      [
        "test_blackbody_overflow"
      ]
    ]
  ],
  "test_blackbody_exceptions_and_warnings": [
    [
      "astropy/modeling/tests/test_physical_models.py",
      [
        "test_blackbody_exceptions_and_warnings"
      ]
    ]
  ],
  "test_blackbody_array_temperature": [
    [
      "astropy/modeling/tests/test_physical_models.py",
      [
        "test_blackbody_array_temperature"
      ]
    ]
  ],
  "test_blackbody_dimensionless": [
    [
      "astropy/modeling/tests/test_physical_models.py",
      [
        "test_blackbody_dimensionless"
      ]
    ]
  ],
  "test_blackbody_dimensionless_fit": [
    [
      "astropy/modeling/tests/test_physical_models.py",
      [
        "test_blackbody_dimensionless_fit"
      ]
    ]
  ],
  "test_NFW_evaluate": [
    [
      "astropy/modeling/tests/test_physical_models.py",
      [
        "test_NFW_evaluate"
      ]
    ]
  ],
  "test_NFW_fit": [
    [
      "astropy/modeling/tests/test_physical_models.py",
      [
        "test_NFW_fit"
      ]
    ]
  ],
  "test_NFW_circular_velocity": [
    [
      "astropy/modeling/tests/test_physical_models.py",
      [
        "test_NFW_circular_velocity"
      ]
    ]
  ],
  "test_NFW_exceptions_and_warnings_and_misc": [
    [
      "astropy/modeling/tests/test_physical_models.py",
      [
        "test_NFW_exceptions_and_warnings_and_misc"
      ]
    ]
  ],
  "test_linear_fitter_1D": [
    [
      "astropy/modeling/tests/test_polynomial.py",
      [
        "TestFitting",
        "test_linear_fitter_1D"
      ]
    ]
  ],
  "test_non_linear_fitter_1D": [
    [
      "astropy/modeling/tests/test_polynomial.py",
      [
        "TestFitting",
        "test_non_linear_fitter_1D"
      ]
    ]
  ],
  "test_linear_fitter_2D": [
    [
      "astropy/modeling/tests/test_polynomial.py",
      [
        "TestFitting",
        "test_linear_fitter_2D"
      ]
    ]
  ],
  "test_non_linear_fitter_2D": [
    [
      "astropy/modeling/tests/test_polynomial.py",
      [
        "TestFitting",
        "test_non_linear_fitter_2D"
      ]
    ]
  ],
  "test_polynomial_init_with_constraints": [
    [
      "astropy/modeling/tests/test_polynomial.py",
      [
        "test_polynomial_init_with_constraints"
      ]
    ]
  ],
  "test_sip_hst": [
    [
      "astropy/modeling/tests/test_polynomial.py",
      [
        "test_sip_hst"
      ]
    ]
  ],
  "test_sip_irac": [
    [
      "astropy/modeling/tests/test_polynomial.py",
      [
        "test_sip_irac"
      ]
    ]
  ],
  "test_sip_no_coeff": [
    [
      "astropy/modeling/tests/test_polynomial.py",
      [
        "test_sip_no_coeff"
      ]
    ]
  ],
  "test_zero_degree_polynomial": [
    [
      "astropy/modeling/tests/test_polynomial.py",
      [
        "test_zero_degree_polynomial"
      ]
    ]
  ],
  "test_2d_orthopolynomial_in_compound_model": [
    [
      "astropy/modeling/tests/test_polynomial.py",
      [
        "test_2d_orthopolynomial_in_compound_model"
      ]
    ]
  ],
  "test_Hermite1D_clenshaw": [
    [
      "astropy/modeling/tests/test_polynomial.py",
      [
        "test_Hermite1D_clenshaw"
      ]
    ]
  ],
  "test__fcache": [
    [
      "astropy/modeling/tests/test_polynomial.py",
      [
        "test__fcache"
      ]
    ]
  ],
  "test_fit_deriv_shape_error": [
    [
      "astropy/modeling/tests/test_polynomial.py",
      [
        "test_fit_deriv_shape_error"
      ]
    ]
  ],
  "test_new_wcslib_projections": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_new_wcslib_projections"
      ]
    ]
  ],
  "test_Projection_properties": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Projection_properties"
      ]
    ]
  ],
  "test_Sky2Pix": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Sky2Pix"
      ]
    ]
  ],
  "test_Pix2Sky": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Pix2Sky"
      ]
    ]
  ],
  "test_Sky2Pix_unit": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Sky2Pix_unit"
      ]
    ]
  ],
  "test_Pix2Sky_unit": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Pix2Sky_unit"
      ]
    ]
  ],
  "test_projection_default": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_projection_default"
      ]
    ]
  ],
  "test_AZP_p2s": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "TestZenithalPerspective",
        "test_AZP_p2s"
      ]
    ]
  ],
  "test_AZP_s2p": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "TestZenithalPerspective",
        "test_AZP_s2p"
      ]
    ]
  ],
  "test_CYP_p2s": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "TestCylindricalPerspective",
        "test_CYP_p2s"
      ]
    ]
  ],
  "test_CYP_s2p": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "TestCylindricalPerspective",
        "test_CYP_s2p"
      ]
    ]
  ],
  "test_AffineTransformation2D": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_AffineTransformation2D"
      ]
    ]
  ],
  "test_AffineTransformation2D_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_AffineTransformation2D_inverse"
      ]
    ]
  ],
  "test_c_projection_striding": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_c_projection_striding"
      ]
    ]
  ],
  "test_c_projections_shaped": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_c_projections_shaped"
      ]
    ]
  ],
  "test_affine_with_quantities": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_affine_with_quantities"
      ]
    ]
  ],
  "test_Pix2Sky_ZenithalPerspective_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Pix2Sky_ZenithalPerspective_inverse"
      ]
    ]
  ],
  "test_Sky2Pix_ZenithalPerspective_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Sky2Pix_ZenithalPerspective_inverse"
      ]
    ]
  ],
  "test_Pix2Sky_SlantZenithalPerspective_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Pix2Sky_SlantZenithalPerspective_inverse"
      ]
    ]
  ],
  "test_Sky2Pix_SlantZenithalPerspective_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Sky2Pix_SlantZenithalPerspective_inverse"
      ]
    ]
  ],
  "test_Pix2Sky_Gnomonic_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Pix2Sky_Gnomonic_inverse"
      ]
    ]
  ],
  "test_Sky2Pix_Gnomonic_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Sky2Pix_Gnomonic_inverse"
      ]
    ]
  ],
  "test_Pix2Sky_Stereographic_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Pix2Sky_Stereographic_inverse"
      ]
    ]
  ],
  "test_Sky2Pix_Stereographic_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Sky2Pix_Stereographic_inverse"
      ]
    ]
  ],
  "test_Pix2Sky_SlantOrthographic_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Pix2Sky_SlantOrthographic_inverse"
      ]
    ]
  ],
  "test_Sky2Pix_SlantOrthographic_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Sky2Pix_SlantOrthographic_inverse"
      ]
    ]
  ],
  "test_Pix2Sky_ZenithalEquidistant_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Pix2Sky_ZenithalEquidistant_inverse"
      ]
    ]
  ],
  "test_Sky2Pix_ZenithalEquidistant_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Sky2Pix_ZenithalEquidistant_inverse"
      ]
    ]
  ],
  "test_Pix2Sky_ZenithalEqualArea_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Pix2Sky_ZenithalEqualArea_inverse"
      ]
    ]
  ],
  "test_Sky2Pix_ZenithalEqualArea_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Sky2Pix_ZenithalEqualArea_inverse"
      ]
    ]
  ],
  "test_Pix2Sky_Airy_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Pix2Sky_Airy_inverse"
      ]
    ]
  ],
  "test_Sky2Pix_Airy_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Sky2Pix_Airy_inverse"
      ]
    ]
  ],
  "test_Pix2Sky_CylindricalPerspective_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Pix2Sky_CylindricalPerspective_inverse"
      ]
    ]
  ],
  "test_Sky2Pix_CylindricalPerspective_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Sky2Pix_CylindricalPerspective_inverse"
      ]
    ]
  ],
  "test_Pix2Sky_CylindricalEqualArea_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Pix2Sky_CylindricalEqualArea_inverse"
      ]
    ]
  ],
  "test_Sky2Pix_CylindricalEqualArea_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Sky2Pix_CylindricalEqualArea_inverse"
      ]
    ]
  ],
  "test_Pix2Sky_PlateCarree_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Pix2Sky_PlateCarree_inverse"
      ]
    ]
  ],
  "test_Sky2Pix_PlateCarree_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Sky2Pix_PlateCarree_inverse"
      ]
    ]
  ],
  "test_Pix2Sky_Mercator_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Pix2Sky_Mercator_inverse"
      ]
    ]
  ],
  "test_Sky2Pix_Mercator_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Sky2Pix_Mercator_inverse"
      ]
    ]
  ],
  "test_Pix2Sky_SansonFlamsteed_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Pix2Sky_SansonFlamsteed_inverse"
      ]
    ]
  ],
  "test_Sky2Pix_SansonFlamsteed_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Sky2Pix_SansonFlamsteed_inverse"
      ]
    ]
  ],
  "test_Pix2Sky_Parabolic_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Pix2Sky_Parabolic_inverse"
      ]
    ]
  ],
  "test_Sky2Pix_Parabolic_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Sky2Pix_Parabolic_inverse"
      ]
    ]
  ],
  "test_Pix2Sky_Molleweide_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Pix2Sky_Molleweide_inverse"
      ]
    ]
  ],
  "test_Sky2Pix_Molleweide_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Sky2Pix_Molleweide_inverse"
      ]
    ]
  ],
  "test_Pix2Sky_HammerAitoff_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Pix2Sky_HammerAitoff_inverse"
      ]
    ]
  ],
  "test_Sky2Pix_HammerAitoff_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Sky2Pix_HammerAitoff_inverse"
      ]
    ]
  ],
  "test_Pix2Sky_ConicPerspective_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Pix2Sky_ConicPerspective_inverse"
      ]
    ]
  ],
  "test_Sky2Pix_ConicPerspective_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Sky2Pix_ConicPerspective_inverse"
      ]
    ]
  ],
  "test_Pix2Sky_ConicEqualArea_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Pix2Sky_ConicEqualArea_inverse"
      ]
    ]
  ],
  "test_Sky2Pix_ConicEqualArea_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Sky2Pix_ConicEqualArea_inverse"
      ]
    ]
  ],
  "test_Pix2Sky_ConicEquidistant_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Pix2Sky_ConicEquidistant_inverse"
      ]
    ]
  ],
  "test_Sky2Pix_ConicEquidistant_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Sky2Pix_ConicEquidistant_inverse"
      ]
    ]
  ],
  "test_Pix2Sky_ConicOrthomorphic_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Pix2Sky_ConicOrthomorphic_inverse"
      ]
    ]
  ],
  "test_Sky2Pix_ConicOrthomorphic_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Sky2Pix_ConicOrthomorphic_inverse"
      ]
    ]
  ],
  "test_Pix2Sky_BonneEqualArea_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Pix2Sky_BonneEqualArea_inverse"
      ]
    ]
  ],
  "test_Sky2Pix_BonneEqualArea_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Sky2Pix_BonneEqualArea_inverse"
      ]
    ]
  ],
  "test_Pix2Sky_Polyconic_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Pix2Sky_Polyconic_inverse"
      ]
    ]
  ],
  "test_Sky2Pix_Polyconic_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Sky2Pix_Polyconic_inverse"
      ]
    ]
  ],
  "test_Pix2Sky_TangentialSphericalCube_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Pix2Sky_TangentialSphericalCube_inverse"
      ]
    ]
  ],
  "test_Sky2Pix_TangentialSphericalCube_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Sky2Pix_TangentialSphericalCube_inverse"
      ]
    ]
  ],
  "test_Pix2Sky_COBEQuadSphericalCube_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Pix2Sky_COBEQuadSphericalCube_inverse"
      ]
    ]
  ],
  "test_Sky2Pix_COBEQuadSphericalCube_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Sky2Pix_COBEQuadSphericalCube_inverse"
      ]
    ]
  ],
  "test_Pix2Sky_QuadSphericalCube_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Pix2Sky_QuadSphericalCube_inverse"
      ]
    ]
  ],
  "test_Sky2Pix_QuadSphericalCube_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Sky2Pix_QuadSphericalCube_inverse"
      ]
    ]
  ],
  "test_Pix2Sky_HEALPix_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Pix2Sky_HEALPix_inverse"
      ]
    ]
  ],
  "test_Sky2Pix_HEALPix_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Sky2Pix_HEALPix_inverse"
      ]
    ]
  ],
  "test_Pix2Sky_HEALPixPolar_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Pix2Sky_HEALPixPolar_inverse"
      ]
    ]
  ],
  "test_Sky2Pix_HEALPixPolar_inverse": [
    [
      "astropy/modeling/tests/test_projections.py",
      [
        "test_Sky2Pix_HEALPixPolar_inverse"
      ]
    ]
  ],
  "test_evaluate_with_quantities": [
    [
      "astropy/modeling/tests/test_quantities_evaluation.py",
      [
        "test_evaluate_with_quantities"
      ]
    ]
  ],
  "test_evaluate_with_quantities_and_equivalencies": [
    [
      "astropy/modeling/tests/test_quantities_evaluation.py",
      [
        "test_evaluate_with_quantities_and_equivalencies"
      ]
    ]
  ],
  "test_input_units": [
    [
      "astropy/modeling/tests/test_quantities_evaluation.py",
      [
        "TestInputUnits",
        "test_input_units"
      ]
    ],
    [
      "astropy/modeling/tests/test_units_mapping.py",
      [
        "test_input_units"
      ]
    ],
    [
      "astropy/timeseries/periodograms/bls/tests/test_bls.py",
      [
        "test_input_units"
      ]
    ]
  ],
  "test_input_units_allow_dimensionless": [
    [
      "astropy/modeling/tests/test_quantities_evaluation.py",
      [
        "TestInputUnits",
        "test_input_units_allow_dimensionless"
      ]
    ]
  ],
  "test_input_units_strict": [
    [
      "astropy/modeling/tests/test_quantities_evaluation.py",
      [
        "TestInputUnits",
        "test_input_units_strict"
      ]
    ]
  ],
  "test_input_units_equivalencies": [
    [
      "astropy/modeling/tests/test_quantities_evaluation.py",
      [
        "TestInputUnits",
        "test_input_units_equivalencies"
      ]
    ]
  ],
  "test_return_units": [
    [
      "astropy/modeling/tests/test_quantities_evaluation.py",
      [
        "TestInputUnits",
        "test_return_units"
      ]
    ]
  ],
  "test_return_units_scalar": [
    [
      "astropy/modeling/tests/test_quantities_evaluation.py",
      [
        "TestInputUnits",
        "test_return_units_scalar"
      ]
    ]
  ],
  "test_and_input_units": [
    [
      "astropy/modeling/tests/test_quantities_evaluation.py",
      [
        "test_and_input_units"
      ]
    ]
  ],
  "test_plus_input_units": [
    [
      "astropy/modeling/tests/test_quantities_evaluation.py",
      [
        "test_plus_input_units"
      ]
    ]
  ],
  "test_compound_input_units": [
    [
      "astropy/modeling/tests/test_quantities_evaluation.py",
      [
        "test_compound_input_units"
      ]
    ]
  ],
  "test_compound_input_units_fail": [
    [
      "astropy/modeling/tests/test_quantities_evaluation.py",
      [
        "test_compound_input_units_fail"
      ]
    ]
  ],
  "test_compound_incompatible_units_fail": [
    [
      "astropy/modeling/tests/test_quantities_evaluation.py",
      [
        "test_compound_incompatible_units_fail"
      ]
    ]
  ],
  "test_compound_pipe_equiv_call": [
    [
      "astropy/modeling/tests/test_quantities_evaluation.py",
      [
        "test_compound_pipe_equiv_call"
      ]
    ]
  ],
  "test_compound_and_equiv_call": [
    [
      "astropy/modeling/tests/test_quantities_evaluation.py",
      [
        "test_compound_and_equiv_call"
      ]
    ]
  ],
  "test_compound_input_units_equivalencies": [
    [
      "astropy/modeling/tests/test_quantities_evaluation.py",
      [
        "test_compound_input_units_equivalencies"
      ]
    ]
  ],
  "test_compound_input_units_strict": [
    [
      "astropy/modeling/tests/test_quantities_evaluation.py",
      [
        "test_compound_input_units_strict"
      ]
    ]
  ],
  "test_compound_input_units_allow_dimensionless": [
    [
      "astropy/modeling/tests/test_quantities_evaluation.py",
      [
        "test_compound_input_units_allow_dimensionless"
      ]
    ]
  ],
  "test_compound_return_units": [
    [
      "astropy/modeling/tests/test_quantities_evaluation.py",
      [
        "test_compound_return_units"
      ]
    ]
  ],
  "_fake_gaussian_data": [
    [
      "astropy/modeling/tests/test_quantities_fitting.py",
      [
        "_fake_gaussian_data"
      ]
    ]
  ],
  "models_with_custom_names": [
    [
      "astropy/modeling/tests/test_quantities_fitting.py",
      [
        "models_with_custom_names"
      ]
    ]
  ],
  "test_fitting_simple": [
    [
      "astropy/modeling/tests/test_quantities_fitting.py",
      [
        "test_fitting_simple"
      ]
    ]
  ],
  "test_fitting_with_initial_values": [
    [
      "astropy/modeling/tests/test_quantities_fitting.py",
      [
        "test_fitting_with_initial_values"
      ]
    ]
  ],
  "test_fitting_missing_data_units": [
    [
      "astropy/modeling/tests/test_quantities_fitting.py",
      [
        "test_fitting_missing_data_units"
      ]
    ]
  ],
  "test_fitting_missing_model_units": [
    [
      "astropy/modeling/tests/test_quantities_fitting.py",
      [
        "test_fitting_missing_model_units"
      ]
    ]
  ],
  "test_fitting_incompatible_units": [
    [
      "astropy/modeling/tests/test_quantities_fitting.py",
      [
        "test_fitting_incompatible_units"
      ]
    ]
  ],
  "test_compound_without_units": [
    [
      "astropy/modeling/tests/test_quantities_fitting.py",
      [
        "test_compound_without_units"
      ]
    ]
  ],
  "test_compound_fitting_with_units": [
    [
      "astropy/modeling/tests/test_quantities_fitting.py",
      [
        "test_compound_fitting_with_units"
      ]
    ]
  ],
  "test_fitting_custom_names": [
    [
      "astropy/modeling/tests/test_quantities_fitting.py",
      [
        "test_fitting_custom_names"
      ]
    ]
  ],
  "test_gaussian1d_bounding_box": [
    [
      "astropy/modeling/tests/test_quantities_model.py",
      [
        "test_gaussian1d_bounding_box"
      ]
    ]
  ],
  "test_gaussian1d_n_models": [
    [
      "astropy/modeling/tests/test_quantities_model.py",
      [
        "test_gaussian1d_n_models"
      ]
    ]
  ],
  "test_quantity_call": [
    [
      "astropy/modeling/tests/test_quantities_model.py",
      [
        "test_quantity_call"
      ]
    ]
  ],
  "test_no_quantity_call": [
    [
      "astropy/modeling/tests/test_quantities_model.py",
      [
        "test_no_quantity_call"
      ]
    ]
  ],
  "test_default_parameters": [
    [
      "astropy/modeling/tests/test_quantities_model.py",
      [
        "test_default_parameters"
      ]
    ]
  ],
  "test_uses_quantity": [
    [
      "astropy/modeling/tests/test_quantities_model.py",
      [
        "test_uses_quantity"
      ]
    ]
  ],
  "test_uses_quantity_compound": [
    [
      "astropy/modeling/tests/test_quantities_model.py",
      [
        "test_uses_quantity_compound"
      ]
    ]
  ],
  "test_uses_quantity_no_param": [
    [
      "astropy/modeling/tests/test_quantities_model.py",
      [
        "test_uses_quantity_no_param"
      ]
    ]
  ],
  "_allmodels": [
    [
      "astropy/modeling/tests/test_quantities_model.py",
      [
        "_allmodels"
      ]
    ]
  ],
  "test_read_only": [
    [
      "astropy/modeling/tests/test_quantities_model.py",
      [
        "test_read_only"
      ]
    ]
  ],
  "test_parameter_quantity": [
    [
      "astropy/modeling/tests/test_quantities_parameters.py",
      [
        "test_parameter_quantity"
      ]
    ]
  ],
  "test_parameter_set_quantity": [
    [
      "astropy/modeling/tests/test_quantities_parameters.py",
      [
        "test_parameter_set_quantity"
      ]
    ]
  ],
  "test_parameter_lose_units": [
    [
      "astropy/modeling/tests/test_quantities_parameters.py",
      [
        "test_parameter_lose_units"
      ]
    ]
  ],
  "test_parameter_add_units": [
    [
      "astropy/modeling/tests/test_quantities_parameters.py",
      [
        "test_parameter_add_units"
      ]
    ]
  ],
  "test_parameter_change_unit": [
    [
      "astropy/modeling/tests/test_quantities_parameters.py",
      [
        "test_parameter_change_unit"
      ]
    ]
  ],
  "test_parameter_set_value": [
    [
      "astropy/modeling/tests/test_quantities_parameters.py",
      [
        "test_parameter_set_value"
      ]
    ]
  ],
  "test_parameter_quantity_property": [
    [
      "astropy/modeling/tests/test_quantities_parameters.py",
      [
        "test_parameter_quantity_property"
      ]
    ]
  ],
  "test_parameter_default_units_match": [
    [
      "astropy/modeling/tests/test_quantities_parameters.py",
      [
        "test_parameter_default_units_match"
      ]
    ]
  ],
  "test_parameter_defaults": [
    [
      "astropy/modeling/tests/test_quantities_parameters.py",
      [
        "test_parameter_defaults"
      ]
    ]
  ],
  "test_parameter_quantity_arithmetic": [
    [
      "astropy/modeling/tests/test_quantities_parameters.py",
      [
        "test_parameter_quantity_arithmetic"
      ]
    ]
  ],
  "test_parameter_quantity_comparison": [
    [
      "astropy/modeling/tests/test_quantities_parameters.py",
      [
        "test_parameter_quantity_comparison"
      ]
    ]
  ],
  "test_parameters_compound_models": [
    [
      "astropy/modeling/tests/test_quantities_parameters.py",
      [
        "test_parameters_compound_models"
      ]
    ]
  ],
  "test_against_wcslib": [
    [
      "astropy/modeling/tests/test_quantities_rotations.py",
      [
        "test_against_wcslib"
      ]
    ],
    [
      "astropy/modeling/tests/test_rotations.py",
      [
        "test_against_wcslib"
      ]
    ]
  ],
  "test_roundtrip_sky_rotation": [
    [
      "astropy/modeling/tests/test_quantities_rotations.py",
      [
        "test_roundtrip_sky_rotation"
      ]
    ],
    [
      "astropy/modeling/tests/test_rotations.py",
      [
        "test_roundtrip_sky_rotation"
      ]
    ]
  ],
  "test_Rotation2D": [
    [
      "astropy/modeling/tests/test_quantities_rotations.py",
      [
        "test_Rotation2D"
      ]
    ],
    [
      "astropy/modeling/tests/test_rotations.py",
      [
        "test_Rotation2D"
      ]
    ]
  ],
  "test_Rotation2D_inverse": [
    [
      "astropy/modeling/tests/test_quantities_rotations.py",
      [
        "test_Rotation2D_inverse"
      ]
    ],
    [
      "astropy/modeling/tests/test_rotations.py",
      [
        "test_Rotation2D_inverse"
      ]
    ]
  ],
  "test_euler_angle_rotations": [
    [
      "astropy/modeling/tests/test_quantities_rotations.py",
      [
        "test_euler_angle_rotations"
      ]
    ],
    [
      "astropy/modeling/tests/test_rotations.py",
      [
        "test_euler_angle_rotations"
      ]
    ]
  ],
  "test_euler_rotations_with_units": [
    [
      "astropy/modeling/tests/test_quantities_rotations.py",
      [
        "test_euler_rotations_with_units"
      ]
    ]
  ],
  "test_attributes": [
    [
      "astropy/modeling/tests/test_quantities_rotations.py",
      [
        "test_attributes"
      ]
    ],
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_attributes"
      ]
    ]
  ],
  "test_native_celestial_lat90": [
    [
      "astropy/modeling/tests/test_rotations.py",
      [
        "test_native_celestial_lat90"
      ]
    ]
  ],
  "test_Rotation2D_quantity": [
    [
      "astropy/modeling/tests/test_rotations.py",
      [
        "test_Rotation2D_quantity"
      ]
    ]
  ],
  "test_Rotation2D_errors": [
    [
      "astropy/modeling/tests/test_rotations.py",
      [
        "test_Rotation2D_errors"
      ]
    ]
  ],
  "test_euler_angles": [
    [
      "astropy/modeling/tests/test_rotations.py",
      [
        "test_euler_angles"
      ]
    ]
  ],
  "_roll_angle_from_matrix": [
    [
      "astropy/modeling/tests/test_rotations.py",
      [
        "test_rotation_3d",
        "_roll_angle_from_matrix"
      ]
    ]
  ],
  "test_rotation_3d": [
    [
      "astropy/modeling/tests/test_rotations.py",
      [
        "test_rotation_3d"
      ]
    ]
  ],
  "test_spherical_rotation": [
    [
      "astropy/modeling/tests/test_rotations.py",
      [
        "test_spherical_rotation"
      ]
    ]
  ],
  "test_RotationSequence3D_errors": [
    [
      "astropy/modeling/tests/test_rotations.py",
      [
        "test_RotationSequence3D_errors"
      ]
    ]
  ],
  "test_RotationSequence3D_inverse": [
    [
      "astropy/modeling/tests/test_rotations.py",
      [
        "test_RotationSequence3D_inverse"
      ]
    ]
  ],
  "test_EulerAngleRotation_errors": [
    [
      "astropy/modeling/tests/test_rotations.py",
      [
        "test_EulerAngleRotation_errors"
      ]
    ]
  ],
  "test_EulerAngleRotation_inverse": [
    [
      "astropy/modeling/tests/test_rotations.py",
      [
        "test_EulerAngleRotation_inverse"
      ]
    ]
  ],
  "test__SkyRotation_errors": [
    [
      "astropy/modeling/tests/test_rotations.py",
      [
        "test__SkyRotation_errors"
      ]
    ]
  ],
  "test__SkyRotation__evaluate": [
    [
      "astropy/modeling/tests/test_rotations.py",
      [
        "test__SkyRotation__evaluate"
      ]
    ]
  ],
  "test_coord_matrix": [
    [
      "astropy/modeling/tests/test_separable.py",
      [
        "test_coord_matrix"
      ]
    ]
  ],
  "test_cdot": [
    [
      "astropy/modeling/tests/test_separable.py",
      [
        "test_cdot"
      ]
    ]
  ],
  "test_cstack": [
    [
      "astropy/modeling/tests/test_separable.py",
      [
        "test_cstack"
      ]
    ]
  ],
  "test_arith_oper": [
    [
      "astropy/modeling/tests/test_separable.py",
      [
        "test_arith_oper"
      ]
    ]
  ],
  "test_separable": [
    [
      "astropy/modeling/tests/test_separable.py",
      [
        "test_separable"
      ]
    ]
  ],
  "test_custom_model_separable": [
    [
      "astropy/modeling/tests/test_separable.py",
      [
        "test_custom_model_separable"
      ]
    ]
  ],
  "test_param_names": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline",
        "test_param_names"
      ]
    ],
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_param_names"
      ]
    ]
  ],
  "test__optional_arg": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline",
        "test__optional_arg"
      ]
    ]
  ],
  "test__create_optional_inputs": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline",
        "test__create_optional_inputs"
      ]
    ]
  ],
  "test__intercept_optional_inputs": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline",
        "test__intercept_optional_inputs"
      ]
    ]
  ],
  "fixed_test": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline",
        "test__create_parameter",
        "Spline",
        "fixed_test"
      ]
    ]
  ],
  "test__create_parameter": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline",
        "test__create_parameter"
      ]
    ]
  ],
  "test__create_parameters": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline",
        "test__create_parameters"
      ]
    ]
  ],
  "test__init_parameters": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline",
        "test__init_parameters"
      ]
    ],
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test__init_parameters"
      ]
    ]
  ],
  "test__init_data": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline",
        "test__init_data"
      ]
    ],
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test__init_data"
      ]
    ]
  ],
  "test__init_spline": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline",
        "test__init_spline"
      ]
    ]
  ],
  "test__init_tck": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline",
        "test__init_tck"
      ]
    ]
  ],
  "check_parameter": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "check_parameter"
      ]
    ]
  ],
  "check_parameters": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "check_parameters"
      ]
    ]
  ],
  "update_parameters": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "update_parameters"
      ]
    ]
  ],
  "test___init__with_no_knot_information": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test___init__with_no_knot_information"
      ]
    ]
  ],
  "value0": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test___init__with_number_of_knots",
        "value0"
      ]
    ],
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test___init__with_full_custom_knots",
        "value0"
      ]
    ],
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test___init__with_interior_custom_knots",
        "value0"
      ]
    ],
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test___init__with_user_knots_and_coefficients",
        "value0"
      ]
    ],
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_parameter_array_link",
        "value0"
      ]
    ],
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_two_splines",
        "value0"
      ]
    ],
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_tck",
        "value0"
      ]
    ],
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_bspline",
        "value0"
      ]
    ]
  ],
  "value1": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test___init__with_number_of_knots",
        "value1"
      ]
    ],
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test___init__with_full_custom_knots",
        "value1"
      ]
    ],
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test___init__with_interior_custom_knots",
        "value1"
      ]
    ],
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test___init__with_user_knots_and_coefficients",
        "value1"
      ]
    ],
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_parameter_array_link",
        "value1"
      ]
    ],
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_two_splines",
        "value1"
      ]
    ],
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_tck",
        "value1"
      ]
    ],
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_bspline",
        "value1"
      ]
    ]
  ],
  "test___init__with_number_of_knots": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test___init__with_number_of_knots"
      ]
    ]
  ],
  "test___init__with_full_custom_knots": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test___init__with_full_custom_knots"
      ]
    ]
  ],
  "test___init__with_interior_custom_knots": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test___init__with_interior_custom_knots"
      ]
    ]
  ],
  "test___init__with_user_knots_and_coefficients": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test___init__with_user_knots_and_coefficients"
      ]
    ]
  ],
  "test___init__errors": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test___init__errors"
      ]
    ]
  ],
  "value2": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_parameter_array_link",
        "value2"
      ]
    ],
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_two_splines",
        "value2"
      ]
    ]
  ],
  "value3": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_parameter_array_link",
        "value3"
      ]
    ],
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_two_splines",
        "value3"
      ]
    ]
  ],
  "test_parameter_array_link": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_parameter_array_link"
      ]
    ]
  ],
  "value4": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_two_splines",
        "value4"
      ]
    ]
  ],
  "value5": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_two_splines",
        "value5"
      ]
    ]
  ],
  "value6": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_two_splines",
        "value6"
      ]
    ]
  ],
  "test_two_splines": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_two_splines"
      ]
    ]
  ],
  "test__knot_names": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test__knot_names"
      ]
    ]
  ],
  "test__coeff_names": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test__coeff_names"
      ]
    ]
  ],
  "test_t": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_t"
      ]
    ]
  ],
  "test_degree": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_degree"
      ]
    ]
  ],
  "test__initialized": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test__initialized"
      ]
    ]
  ],
  "test_tck": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_tck"
      ]
    ]
  ],
  "test_bspline": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_bspline"
      ]
    ]
  ],
  "test_knots": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_knots"
      ]
    ]
  ],
  "test_coeffs": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_coeffs"
      ]
    ]
  ],
  "test__init_bounds": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test__init_bounds"
      ]
    ]
  ],
  "test__init_knots": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test__init_knots"
      ]
    ]
  ],
  "test__init_coeffs": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test__init_coeffs"
      ]
    ]
  ],
  "check_knots_created": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "check_knots_created"
      ]
    ]
  ],
  "check_coeffs_created": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "check_coeffs_created"
      ]
    ]
  ],
  "check_base_spline": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "check_base_spline"
      ]
    ]
  ],
  "check_spline_fit": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "check_spline_fit"
      ]
    ]
  ],
  "check_bbox": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "check_bbox"
      ]
    ]
  ],
  "check_knots_warning": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "check_knots_warning"
      ]
    ]
  ],
  "test_interpolate_fitter": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_interpolate_fitter"
      ]
    ]
  ],
  "test_smoothing_fitter": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_smoothing_fitter"
      ]
    ]
  ],
  "test_exact_knots_fitter": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_exact_knots_fitter"
      ]
    ]
  ],
  "test_splrep_fitter_no_knots": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_splrep_fitter_no_knots"
      ]
    ]
  ],
  "test_splrep_fitter_with_knots": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_splrep_fitter_with_knots"
      ]
    ]
  ],
  "generate_spline": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "generate_spline"
      ]
    ]
  ],
  "test_derivative": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_derivative"
      ]
    ]
  ],
  "test_antiderivative": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test_antiderivative"
      ]
    ]
  ],
  "test__SplineFitter_error": [
    [
      "astropy/modeling/tests/test_spline.py",
      [
        "TestSpline1D",
        "test__SplineFitter_error"
      ]
    ]
  ],
  "test_1d_no_weights": [
    [
      "astropy/modeling/tests/test_statistics.py",
      [
        "TestLeastSquare_XD",
        "test_1d_no_weights"
      ]
    ],
    [
      "astropy/modeling/tests/test_statistics.py",
      [
        "TestLeastSquare_ND",
        "test_1d_no_weights"
      ]
    ]
  ],
  "test_1d_with_weights": [
    [
      "astropy/modeling/tests/test_statistics.py",
      [
        "TestLeastSquare_XD",
        "test_1d_with_weights"
      ]
    ],
    [
      "astropy/modeling/tests/test_statistics.py",
      [
        "TestLeastSquare_ND",
        "test_1d_with_weights"
      ]
    ]
  ],
  "test_2d_no_weights": [
    [
      "astropy/modeling/tests/test_statistics.py",
      [
        "TestLeastSquare_XD",
        "test_2d_no_weights"
      ]
    ]
  ],
  "test_2d_with_weights": [
    [
      "astropy/modeling/tests/test_statistics.py",
      [
        "TestLeastSquare_XD",
        "test_2d_with_weights"
      ]
    ]
  ],
  "test_3d_no_weights": [
    [
      "astropy/modeling/tests/test_statistics.py",
      [
        "TestLeastSquare_XD",
        "test_3d_no_weights"
      ]
    ],
    [
      "astropy/modeling/tests/test_statistics.py",
      [
        "TestLeastSquare_ND",
        "test_3d_no_weights"
      ]
    ]
  ],
  "test_3d_with_weights": [
    [
      "astropy/modeling/tests/test_statistics.py",
      [
        "TestLeastSquare_XD",
        "test_3d_with_weights"
      ]
    ],
    [
      "astropy/modeling/tests/test_statistics.py",
      [
        "TestLeastSquare_ND",
        "test_3d_with_weights"
      ]
    ]
  ],
  "test_shape_mismatch": [
    [
      "astropy/modeling/tests/test_statistics.py",
      [
        "TestLeastSquare_ND",
        "test_shape_mismatch"
      ]
    ],
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_shape_mismatch"
      ]
    ]
  ],
  "_models_with_units": [
    [
      "astropy/modeling/tests/test_units_mapping.py",
      [
        "_models_with_units"
      ]
    ]
  ],
  "test_poly_map_domain": [
    [
      "astropy/modeling/tests/test_utils.py",
      [
        "test_poly_map_domain"
      ]
    ]
  ],
  "test__validate_domain_window": [
    [
      "astropy/modeling/tests/test_utils.py",
      [
        "test__validate_domain_window"
      ]
    ]
  ],
  "func1": [
    [
      "astropy/modeling/tests/test_utils.py",
      [
        "test_get_inputs_and_params",
        "func1"
      ]
    ]
  ],
  "func2": [
    [
      "astropy/modeling/tests/test_utils.py",
      [
        "test_get_inputs_and_params",
        "func2"
      ]
    ]
  ],
  "func3": [
    [
      "astropy/modeling/tests/test_utils.py",
      [
        "test_get_inputs_and_params",
        "func3"
      ]
    ]
  ],
  "test_get_inputs_and_params": [
    [
      "astropy/modeling/tests/test_utils.py",
      [
        "test_get_inputs_and_params"
      ]
    ]
  ],
  "test__set_value": [
    [
      "astropy/modeling/tests/test_utils.py",
      [
        "Test_SpecialOperatorsDict",
        "test__set_value"
      ]
    ]
  ],
  "test__SpecialOperatorsDict__get_unique_id": [
    [
      "astropy/modeling/tests/test_utils.py",
      [
        "Test_SpecialOperatorsDict",
        "test__SpecialOperatorsDict__get_unique_id"
      ]
    ]
  ],
  "test__SpecialOperatorsDict_add": [
    [
      "astropy/modeling/tests/test_utils.py",
      [
        "Test_SpecialOperatorsDict",
        "test__SpecialOperatorsDict_add"
      ]
    ]
  ],
  "make_binary_operator_eval": [
    [
      "astropy/modeling/utils.py",
      [
        "make_binary_operator_eval"
      ]
    ]
  ],
  "poly_map_domain": [
    [
      "astropy/modeling/utils.py",
      [
        "poly_map_domain"
      ]
    ]
  ],
  "_validate_domain_window": [
    [
      "astropy/modeling/utils.py",
      [
        "_validate_domain_window"
      ]
    ]
  ],
  "comb": [
    [
      "astropy/modeling/utils.py",
      [
        "comb"
      ]
    ]
  ],
  "array_repr_oneline": [
    [
      "astropy/modeling/utils.py",
      [
        "array_repr_oneline"
      ]
    ]
  ],
  "combine_labels": [
    [
      "astropy/modeling/utils.py",
      [
        "combine_labels"
      ]
    ]
  ],
  "ellipse_extent": [
    [
      "astropy/modeling/utils.py",
      [
        "ellipse_extent"
      ]
    ]
  ],
  "get_inputs_and_params": [
    [
      "astropy/modeling/utils.py",
      [
        "get_inputs_and_params"
      ]
    ]
  ],
  "_combine_equivalency_dict": [
    [
      "astropy/modeling/utils.py",
      [
        "_combine_equivalency_dict"
      ]
    ]
  ],
  "_to_radian": [
    [
      "astropy/modeling/utils.py",
      [
        "_to_radian"
      ]
    ]
  ],
  "_to_orig_unit": [
    [
      "astropy/modeling/utils.py",
      [
        "_to_orig_unit"
      ]
    ]
  ],
  "_set_value": [
    [
      "astropy/modeling/utils.py",
      [
        "_SpecialOperatorsDict",
        "_set_value"
      ]
    ]
  ],
  "_get_unique_id": [
    [
      "astropy/modeling/utils.py",
      [
        "_SpecialOperatorsDict",
        "_get_unique_id"
      ]
    ]
  ],
  "add": [
    [
      "astropy/modeling/utils.py",
      [
        "_SpecialOperatorsDict",
        "add"
      ]
    ],
    [
      "astropy/nddata/mixins/ndarithmetic.py",
      [
        "NDArithmeticMixin",
        "add"
      ]
    ],
    [
      "astropy/table/bst.py",
      [
        "BST",
        "add"
      ]
    ],
    [
      "astropy/table/soco.py",
      [
        "SCEngine",
        "add"
      ]
    ],
    [
      "astropy/table/sorted_array.py",
      [
        "SortedArray",
        "add"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "PprintIncludeExclude",
        "add"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/ticklabels.py",
      [
        "TickLabels",
        "add"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/ticks.py",
      [
        "Ticks",
        "add"
      ]
    ]
  ],
  "assert_wcs_seem_equal": [
    [
      "astropy/nddata/_testing.py",
      [
        "assert_wcs_seem_equal"
      ]
    ]
  ],
  "_create_wcs_simple": [
    [
      "astropy/nddata/_testing.py",
      [
        "_create_wcs_simple"
      ]
    ]
  ],
  "create_two_equal_wcs": [
    [
      "astropy/nddata/_testing.py",
      [
        "create_two_equal_wcs"
      ]
    ]
  ],
  "create_two_unequal_wcs": [
    [
      "astropy/nddata/_testing.py",
      [
        "create_two_unequal_wcs"
      ]
    ]
  ],
  "_is_bit_flag": [
    [
      "astropy/nddata/bitmask.py",
      [
        "_is_bit_flag"
      ]
    ]
  ],
  "extend_bit_flag_map": [
    [
      "astropy/nddata/bitmask.py",
      [
        "extend_bit_flag_map"
      ]
    ]
  ],
  "interpret_bit_flags": [
    [
      "astropy/nddata/bitmask.py",
      [
        "interpret_bit_flags"
      ]
    ]
  ],
  "bitfield_to_boolean_mask": [
    [
      "astropy/nddata/bitmask.py",
      [
        "bitfield_to_boolean_mask"
      ]
    ]
  ],
  "_process_block_inputs": [
    [
      "astropy/nddata/blocks.py",
      [
        "_process_block_inputs"
      ]
    ]
  ],
  "reshape_as_blocks": [
    [
      "astropy/nddata/blocks.py",
      [
        "reshape_as_blocks"
      ]
    ]
  ],
  "block_reduce": [
    [
      "astropy/nddata/blocks.py",
      [
        "block_reduce"
      ]
    ]
  ],
  "block_replicate": [
    [
      "astropy/nddata/blocks.py",
      [
        "block_replicate"
      ]
    ]
  ],
  "decorator": [
    [
      "astropy/nddata/ccddata.py",
      [
        "_arithmetic",
        "decorator"
      ]
    ],
    [
      "astropy/utils/decorators.py",
      [
        "deprecated_renamed_argument",
        "decorator"
      ]
    ]
  ],
  "_arithmetic": [
    [
      "astropy/nddata/ccddata.py",
      [
        "_arithmetic"
      ]
    ],
    [
      "astropy/nddata/mixins/ndarithmetic.py",
      [
        "NDArithmeticMixin",
        "_arithmetic"
      ]
    ]
  ],
  "_uncertainty_unit_equivalent_to_parent": [
    [
      "astropy/nddata/ccddata.py",
      [
        "_uncertainty_unit_equivalent_to_parent"
      ]
    ]
  ],
  "_slice_wcs": [
    [
      "astropy/nddata/ccddata.py",
      [
        "CCDData",
        "_slice_wcs"
      ]
    ],
    [
      "astropy/nddata/mixins/ndslicing.py",
      [
        "NDSlicingMixin",
        "_slice_wcs"
      ]
    ]
  ],
  "data_2": [
    [
      "astropy/nddata/ccddata.py",
      [
        "CCDData",
        "data_2"
      ]
    ]
  ],
  "wcs": [
    [
      "astropy/nddata/ccddata.py",
      [
        "CCDData",
        "wcs"
      ]
    ],
    [
      "astropy/nddata/nddata.py",
      [
        "NDData",
        "wcs"
      ]
    ],
    [
      "astropy/nddata/nddata_base.py",
      [
        "NDDataBase",
        "wcs"
      ]
    ],
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "NDDataCustomWCS",
        "wcs"
      ]
    ],
    [
      "astropy/nddata/tests/test_nddata_base.py",
      [
        "MinimalSubclass",
        "wcs"
      ]
    ]
  ],
  "wcs_4": [
    [
      "astropy/nddata/ccddata.py",
      [
        "CCDData",
        "wcs_4"
      ]
    ]
  ],
  "unit_6": [
    [
      "astropy/nddata/ccddata.py",
      [
        "CCDData",
        "unit_6"
      ]
    ]
  ],
  "header_8": [
    [
      "astropy/nddata/ccddata.py",
      [
        "CCDData",
        "header_8"
      ]
    ]
  ],
  "uncertainty_10": [
    [
      "astropy/nddata/ccddata.py",
      [
        "CCDData",
        "uncertainty_10"
      ]
    ]
  ],
  "to_hdu": [
    [
      "astropy/nddata/ccddata.py",
      [
        "CCDData",
        "to_hdu"
      ]
    ]
  ],
  "_insert_in_metadata_fits_safe": [
    [
      "astropy/nddata/ccddata.py",
      [
        "CCDData",
        "_insert_in_metadata_fits_safe"
      ]
    ]
  ],
  "_generate_wcs_and_update_header": [
    [
      "astropy/nddata/ccddata.py",
      [
        "_generate_wcs_and_update_header"
      ]
    ]
  ],
  "fits_ccddata_reader": [
    [
      "astropy/nddata/ccddata.py",
      [
        "fits_ccddata_reader"
      ]
    ]
  ],
  "fits_ccddata_writer": [
    [
      "astropy/nddata/ccddata.py",
      [
        "fits_ccddata_writer"
      ]
    ]
  ],
  "uncertainty_1": [
    [
      "astropy/nddata/compat.py",
      [
        "NDDataArray",
        "uncertainty_1"
      ]
    ]
  ],
  "unit_3": [
    [
      "astropy/nddata/compat.py",
      [
        "NDDataArray",
        "unit_3"
      ]
    ]
  ],
  "mask": [
    [
      "astropy/nddata/compat.py",
      [
        "NDDataArray",
        "mask"
      ]
    ],
    [
      "astropy/nddata/nddata.py",
      [
        "NDData",
        "mask"
      ]
    ],
    [
      "astropy/nddata/nddata_base.py",
      [
        "NDDataBase",
        "mask"
      ]
    ],
    [
      "astropy/nddata/tests/test_nddata_base.py",
      [
        "MinimalSubclass",
        "mask"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "mask"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "mask"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeFormat",
        "mask"
      ]
    ]
  ],
  "mask_5": [
    [
      "astropy/nddata/compat.py",
      [
        "NDDataArray",
        "mask_5"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "mask_5"
      ]
    ]
  ],
  "ndim": [
    [
      "astropy/nddata/compat.py",
      [
        "NDDataArray",
        "ndim"
      ]
    ],
    [
      "astropy/utils/shapes.py",
      [
        "ShapedLikeNDArray",
        "ndim"
      ]
    ]
  ],
  "flags": [
    [
      "astropy/nddata/compat.py",
      [
        "NDDataArray",
        "flags"
      ]
    ]
  ],
  "flags_11": [
    [
      "astropy/nddata/compat.py",
      [
        "NDDataArray",
        "flags_11"
      ]
    ]
  ],
  "__array_prepare__": [
    [
      "astropy/nddata/compat.py",
      [
        "NDDataArray",
        "__array_prepare__"
      ]
    ]
  ],
  "convert_unit_to": [
    [
      "astropy/nddata/compat.py",
      [
        "NDDataArray",
        "convert_unit_to"
      ]
    ],
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "convert_unit_to"
      ]
    ]
  ],
  "support_nddata_decorator": [
    [
      "astropy/nddata/decorators.py",
      [
        "support_nddata",
        "support_nddata_decorator"
      ]
    ]
  ],
  "support_nddata": [
    [
      "astropy/nddata/decorators.py",
      [
        "support_nddata"
      ]
    ]
  ],
  "_arithmetic_data": [
    [
      "astropy/nddata/mixins/ndarithmetic.py",
      [
        "NDArithmeticMixin",
        "_arithmetic_data"
      ]
    ]
  ],
  "_arithmetic_uncertainty": [
    [
      "astropy/nddata/mixins/ndarithmetic.py",
      [
        "NDArithmeticMixin",
        "_arithmetic_uncertainty"
      ]
    ]
  ],
  "_arithmetic_mask": [
    [
      "astropy/nddata/mixins/ndarithmetic.py",
      [
        "NDArithmeticMixin",
        "_arithmetic_mask"
      ]
    ]
  ],
  "_arithmetic_wcs": [
    [
      "astropy/nddata/mixins/ndarithmetic.py",
      [
        "NDArithmeticMixin",
        "_arithmetic_wcs"
      ]
    ]
  ],
  "_arithmetic_meta": [
    [
      "astropy/nddata/mixins/ndarithmetic.py",
      [
        "NDArithmeticMixin",
        "_arithmetic_meta"
      ]
    ]
  ],
  "subtract": [
    [
      "astropy/nddata/mixins/ndarithmetic.py",
      [
        "NDArithmeticMixin",
        "subtract"
      ]
    ]
  ],
  "multiply": [
    [
      "astropy/nddata/mixins/ndarithmetic.py",
      [
        "NDArithmeticMixin",
        "multiply"
      ]
    ]
  ],
  "divide": [
    [
      "astropy/nddata/mixins/ndarithmetic.py",
      [
        "NDArithmeticMixin",
        "divide"
      ]
    ]
  ],
  "_prepare_then_do_arithmetic": [
    [
      "astropy/nddata/mixins/ndarithmetic.py",
      [
        "NDArithmeticMixin",
        "_prepare_then_do_arithmetic"
      ]
    ]
  ],
  "_slice": [
    [
      "astropy/nddata/mixins/ndslicing.py",
      [
        "NDSlicingMixin",
        "_slice"
      ]
    ]
  ],
  "_slice_uncertainty": [
    [
      "astropy/nddata/mixins/ndslicing.py",
      [
        "NDSlicingMixin",
        "_slice_uncertainty"
      ]
    ]
  ],
  "_slice_mask": [
    [
      "astropy/nddata/mixins/ndslicing.py",
      [
        "NDSlicingMixin",
        "_slice_mask"
      ]
    ]
  ],
  "_handle_wcs_slicing_error": [
    [
      "astropy/nddata/mixins/ndslicing.py",
      [
        "NDSlicingMixin",
        "_handle_wcs_slicing_error"
      ]
    ]
  ],
  "supports_correlated": [
    [
      "astropy/nddata/mixins/tests/test_ndarithmetic.py",
      [
        "StdDevUncertaintyUncorrelated",
        "supports_correlated"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "NDUncertainty",
        "supports_correlated"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "UnknownUncertainty",
        "supports_correlated"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "StdDevUncertainty",
        "supports_correlated"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "VarianceUncertainty",
        "supports_correlated"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "InverseVariance",
        "supports_correlated"
      ]
    ]
  ],
  "test_arithmetics_data": [
    [
      "astropy/nddata/mixins/tests/test_ndarithmetic.py",
      [
        "test_arithmetics_data"
      ]
    ]
  ],
  "test_arithmetics_data_invalid": [
    [
      "astropy/nddata/mixins/tests/test_ndarithmetic.py",
      [
        "test_arithmetics_data_invalid"
      ]
    ]
  ],
  "test_arithmetics_data_unit_identical": [
    [
      "astropy/nddata/mixins/tests/test_ndarithmetic.py",
      [
        "test_arithmetics_data_unit_identical"
      ]
    ]
  ],
  "test_arithmetics_data_unit_not_identical": [
    [
      "astropy/nddata/mixins/tests/test_ndarithmetic.py",
      [
        "test_arithmetics_data_unit_not_identical"
      ]
    ]
  ],
  "test_arithmetics_data_wcs": [
    [
      "astropy/nddata/mixins/tests/test_ndarithmetic.py",
      [
        "test_arithmetics_data_wcs"
      ]
    ]
  ],
  "test_arithmetics_data_masks": [
    [
      "astropy/nddata/mixins/tests/test_ndarithmetic.py",
      [
        "test_arithmetics_data_masks"
      ]
    ]
  ],
  "test_arithmetics_data_masks_invalid": [
    [
      "astropy/nddata/mixins/tests/test_ndarithmetic.py",
      [
        "test_arithmetics_data_masks_invalid"
      ]
    ]
  ],
  "test_arithmetics_stddevuncertainty_basic": [
    [
      "astropy/nddata/mixins/tests/test_ndarithmetic.py",
      [
        "test_arithmetics_stddevuncertainty_basic"
      ]
    ]
  ],
  "test_arithmetics_stddevuncertainty_basic_with_correlation": [
    [
      "astropy/nddata/mixins/tests/test_ndarithmetic.py",
      [
        "test_arithmetics_stddevuncertainty_basic_with_correlation"
      ]
    ]
  ],
  "test_arithmetics_varianceuncertainty_basic_with_correlation": [
    [
      "astropy/nddata/mixins/tests/test_ndarithmetic.py",
      [
        "test_arithmetics_varianceuncertainty_basic_with_correlation"
      ]
    ]
  ],
  "test_arithmetics_inversevarianceuncertainty_basic_with_correlation": [
    [
      "astropy/nddata/mixins/tests/test_ndarithmetic.py",
      [
        "test_arithmetics_inversevarianceuncertainty_basic_with_correlation"
      ]
    ]
  ],
  "test_arithmetics_stddevuncertainty_basic_with_correlation_array": [
    [
      "astropy/nddata/mixins/tests/test_ndarithmetic.py",
      [
        "test_arithmetics_stddevuncertainty_basic_with_correlation_array"
      ]
    ]
  ],
  "test_arithmetics_with_correlation_unsupported": [
    [
      "astropy/nddata/mixins/tests/test_ndarithmetic.py",
      [
        "test_arithmetics_with_correlation_unsupported"
      ]
    ]
  ],
  "test_arithmetics_stddevuncertainty_one_missing": [
    [
      "astropy/nddata/mixins/tests/test_ndarithmetic.py",
      [
        "test_arithmetics_stddevuncertainty_one_missing"
      ]
    ]
  ],
  "test_arithmetics_stddevuncertainty_with_units": [
    [
      "astropy/nddata/mixins/tests/test_ndarithmetic.py",
      [
        "test_arithmetics_stddevuncertainty_with_units"
      ]
    ]
  ],
  "test_arithmetics_varianceuncertainty_with_units": [
    [
      "astropy/nddata/mixins/tests/test_ndarithmetic.py",
      [
        "test_arithmetics_varianceuncertainty_with_units"
      ]
    ]
  ],
  "test_arithmetics_inversevarianceuncertainty_with_units": [
    [
      "astropy/nddata/mixins/tests/test_ndarithmetic.py",
      [
        "test_arithmetics_inversevarianceuncertainty_with_units"
      ]
    ]
  ],
  "test_arithmetics_handle_switches": [
    [
      "astropy/nddata/mixins/tests/test_ndarithmetic.py",
      [
        "test_arithmetics_handle_switches"
      ]
    ]
  ],
  "meta_fun_func": [
    [
      "astropy/nddata/mixins/tests/test_ndarithmetic.py",
      [
        "test_arithmetics_meta_func",
        "meta_fun_func"
      ]
    ]
  ],
  "test_arithmetics_meta_func": [
    [
      "astropy/nddata/mixins/tests/test_ndarithmetic.py",
      [
        "test_arithmetics_meta_func"
      ]
    ]
  ],
  "wcs_comp_func": [
    [
      "astropy/nddata/mixins/tests/test_ndarithmetic.py",
      [
        "test_arithmetics_wcs_func",
        "wcs_comp_func"
      ]
    ]
  ],
  "test_arithmetics_wcs_func": [
    [
      "astropy/nddata/mixins/tests/test_ndarithmetic.py",
      [
        "test_arithmetics_wcs_func"
      ]
    ]
  ],
  "mask_sad_func": [
    [
      "astropy/nddata/mixins/tests/test_ndarithmetic.py",
      [
        "test_arithmetics_mask_func",
        "mask_sad_func"
      ]
    ]
  ],
  "test_arithmetics_mask_func": [
    [
      "astropy/nddata/mixins/tests/test_ndarithmetic.py",
      [
        "test_arithmetics_mask_func"
      ]
    ]
  ],
  "test_two_argument_useage": [
    [
      "astropy/nddata/mixins/tests/test_ndarithmetic.py",
      [
        "test_two_argument_useage"
      ]
    ]
  ],
  "test_two_argument_useage_non_nddata_first_arg": [
    [
      "astropy/nddata/mixins/tests/test_ndarithmetic.py",
      [
        "test_two_argument_useage_non_nddata_first_arg"
      ]
    ]
  ],
  "test_arithmetics_unknown_uncertainties": [
    [
      "astropy/nddata/mixins/tests/test_ndarithmetic.py",
      [
        "test_arithmetics_unknown_uncertainties"
      ]
    ]
  ],
  "test_simple_write_read": [
    [
      "astropy/nddata/mixins/tests/test_ndio.py",
      [
        "test_simple_write_read"
      ]
    ]
  ],
  "uncertainty_type": [
    [
      "astropy/nddata/mixins/tests/test_ndslicing.py",
      [
        "SomeUncertainty",
        "uncertainty_type"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "NDUncertainty",
        "uncertainty_type"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "UnknownUncertainty",
        "uncertainty_type"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "StdDevUncertainty",
        "uncertainty_type"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "VarianceUncertainty",
        "uncertainty_type"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "InverseVariance",
        "uncertainty_type"
      ]
    ],
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "MinimalUncertainty",
        "uncertainty_type"
      ]
    ],
    [
      "astropy/nddata/tests/test_nduncertainty.py",
      [
        "FakeUncertainty",
        "uncertainty_type"
      ]
    ]
  ],
  "_propagate_add": [
    [
      "astropy/nddata/mixins/tests/test_ndslicing.py",
      [
        "SomeUncertainty",
        "_propagate_add"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "NDUncertainty",
        "_propagate_add"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "UnknownUncertainty",
        "_propagate_add"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "StdDevUncertainty",
        "_propagate_add"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "VarianceUncertainty",
        "_propagate_add"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "InverseVariance",
        "_propagate_add"
      ]
    ],
    [
      "astropy/nddata/tests/test_nduncertainty.py",
      [
        "FakeUncertainty",
        "_propagate_add"
      ]
    ]
  ],
  "_propagate_subtract": [
    [
      "astropy/nddata/mixins/tests/test_ndslicing.py",
      [
        "SomeUncertainty",
        "_propagate_subtract"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "NDUncertainty",
        "_propagate_subtract"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "UnknownUncertainty",
        "_propagate_subtract"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "StdDevUncertainty",
        "_propagate_subtract"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "VarianceUncertainty",
        "_propagate_subtract"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "InverseVariance",
        "_propagate_subtract"
      ]
    ],
    [
      "astropy/nddata/tests/test_nduncertainty.py",
      [
        "FakeUncertainty",
        "_propagate_subtract"
      ]
    ]
  ],
  "_propagate_multiply": [
    [
      "astropy/nddata/mixins/tests/test_ndslicing.py",
      [
        "SomeUncertainty",
        "_propagate_multiply"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "NDUncertainty",
        "_propagate_multiply"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "UnknownUncertainty",
        "_propagate_multiply"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "StdDevUncertainty",
        "_propagate_multiply"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "VarianceUncertainty",
        "_propagate_multiply"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "InverseVariance",
        "_propagate_multiply"
      ]
    ],
    [
      "astropy/nddata/tests/test_nduncertainty.py",
      [
        "FakeUncertainty",
        "_propagate_multiply"
      ]
    ]
  ],
  "_propagate_divide": [
    [
      "astropy/nddata/mixins/tests/test_ndslicing.py",
      [
        "SomeUncertainty",
        "_propagate_divide"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "NDUncertainty",
        "_propagate_divide"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "UnknownUncertainty",
        "_propagate_divide"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "StdDevUncertainty",
        "_propagate_divide"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "VarianceUncertainty",
        "_propagate_divide"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "InverseVariance",
        "_propagate_divide"
      ]
    ],
    [
      "astropy/nddata/tests/test_nduncertainty.py",
      [
        "FakeUncertainty",
        "_propagate_divide"
      ]
    ]
  ],
  "test_slicing_only_data": [
    [
      "astropy/nddata/mixins/tests/test_ndslicing.py",
      [
        "test_slicing_only_data"
      ]
    ]
  ],
  "test_slicing_data_scalar_fail": [
    [
      "astropy/nddata/mixins/tests/test_ndslicing.py",
      [
        "test_slicing_data_scalar_fail"
      ]
    ]
  ],
  "test_slicing_1ddata_ndslice": [
    [
      "astropy/nddata/mixins/tests/test_ndslicing.py",
      [
        "test_slicing_1ddata_ndslice"
      ]
    ]
  ],
  "test_slicing_1dmask_ndslice": [
    [
      "astropy/nddata/mixins/tests/test_ndslicing.py",
      [
        "test_slicing_1dmask_ndslice"
      ]
    ]
  ],
  "test_slicing_all_npndarray_1d": [
    [
      "astropy/nddata/mixins/tests/test_ndslicing.py",
      [
        "test_slicing_all_npndarray_1d"
      ]
    ]
  ],
  "test_slicing_all_npndarray_nd": [
    [
      "astropy/nddata/mixins/tests/test_ndslicing.py",
      [
        "test_slicing_all_npndarray_nd"
      ]
    ]
  ],
  "test_slicing_all_npndarray_shape_diff": [
    [
      "astropy/nddata/mixins/tests/test_ndslicing.py",
      [
        "test_slicing_all_npndarray_shape_diff"
      ]
    ]
  ],
  "test_slicing_all_something_wrong": [
    [
      "astropy/nddata/mixins/tests/test_ndslicing.py",
      [
        "test_slicing_all_something_wrong"
      ]
    ]
  ],
  "test_boolean_slicing": [
    [
      "astropy/nddata/mixins/tests/test_ndslicing.py",
      [
        "test_boolean_slicing"
      ]
    ]
  ],
  "mask_4": [
    [
      "astropy/nddata/nddata.py",
      [
        "NDData",
        "mask_4"
      ]
    ]
  ],
  "wcs_7": [
    [
      "astropy/nddata/nddata.py",
      [
        "NDData",
        "wcs_7"
      ]
    ]
  ],
  "uncertainty_9": [
    [
      "astropy/nddata/nddata.py",
      [
        "NDData",
        "uncertainty_9"
      ]
    ]
  ],
  "meta": [
    [
      "astropy/nddata/nddata_base.py",
      [
        "NDDataBase",
        "meta"
      ]
    ],
    [
      "astropy/nddata/tests/test_nddata_base.py",
      [
        "MinimalSubclass",
        "meta"
      ]
    ],
    [
      "astropy/table/row.py",
      [
        "Row",
        "meta"
      ]
    ]
  ],
  "array_3": [
    [
      "astropy/nddata/nduncertainty.py",
      [
        "NDUncertainty",
        "array_3"
      ]
    ]
  ],
  "unit_5": [
    [
      "astropy/nddata/nduncertainty.py",
      [
        "NDUncertainty",
        "unit_5"
      ]
    ]
  ],
  "parent_nddata": [
    [
      "astropy/nddata/nduncertainty.py",
      [
        "NDUncertainty",
        "parent_nddata"
      ]
    ]
  ],
  "parent_nddata_8": [
    [
      "astropy/nddata/nduncertainty.py",
      [
        "NDUncertainty",
        "parent_nddata_8"
      ]
    ]
  ],
  "_data_unit_to_uncertainty_unit": [
    [
      "astropy/nddata/nduncertainty.py",
      [
        "NDUncertainty",
        "_data_unit_to_uncertainty_unit"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "UnknownUncertainty",
        "_data_unit_to_uncertainty_unit"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "StdDevUncertainty",
        "_data_unit_to_uncertainty_unit"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "VarianceUncertainty",
        "_data_unit_to_uncertainty_unit"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "InverseVariance",
        "_data_unit_to_uncertainty_unit"
      ]
    ],
    [
      "astropy/nddata/tests/test_nduncertainty.py",
      [
        "FakeUncertainty",
        "_data_unit_to_uncertainty_unit"
      ]
    ]
  ],
  "propagate": [
    [
      "astropy/nddata/nduncertainty.py",
      [
        "NDUncertainty",
        "propagate"
      ]
    ]
  ],
  "_convert_uncertainty": [
    [
      "astropy/nddata/nduncertainty.py",
      [
        "NDUncertainty",
        "_convert_uncertainty"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "UnknownUncertainty",
        "_convert_uncertainty"
      ]
    ],
    [
      "astropy/nddata/nduncertainty.py",
      [
        "StdDevUncertainty",
        "_convert_uncertainty"
      ]
    ]
  ],
  "_propagate_add_sub": [
    [
      "astropy/nddata/nduncertainty.py",
      [
        "_VariancePropagationMixin",
        "_propagate_add_sub"
      ]
    ]
  ],
  "_propagate_multiply_divide": [
    [
      "astropy/nddata/nduncertainty.py",
      [
        "_VariancePropagationMixin",
        "_propagate_multiply_divide"
      ]
    ]
  ],
  "_inverse": [
    [
      "astropy/nddata/nduncertainty.py",
      [
        "_inverse"
      ]
    ]
  ],
  "test_nonpositive_not_a_bit_flag": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_nonpositive_not_a_bit_flag"
      ]
    ]
  ],
  "test_is_bit_flag": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_is_bit_flag"
      ]
    ]
  ],
  "test_is_int": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_is_int"
      ]
    ]
  ],
  "test_nonint_is_not_an_int": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_nonint_is_not_an_int"
      ]
    ]
  ],
  "test_interpret_valid_int_bit_flags": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_interpret_valid_int_bit_flags"
      ]
    ]
  ],
  "test_interpret_none_bit_flags_as_None": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_interpret_none_bit_flags_as_None"
      ]
    ]
  ],
  "test_interpret_valid_str_bit_flags": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_interpret_valid_str_bit_flags"
      ]
    ]
  ],
  "test_interpret_valid_mnemonic_bit_flags": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_interpret_valid_mnemonic_bit_flags"
      ]
    ]
  ],
  "test_interpret_None_or_str_and_flip_incompatibility": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_interpret_None_or_str_and_flip_incompatibility"
      ]
    ]
  ],
  "test_interpret_wrong_flag_type": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_interpret_wrong_flag_type"
      ]
    ]
  ],
  "test_interpret_wrong_string_int_format": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_interpret_wrong_string_int_format"
      ]
    ]
  ],
  "test_interpret_duplicate_flag_warning": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_interpret_duplicate_flag_warning"
      ]
    ]
  ],
  "test_interpret_non_flag": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_interpret_non_flag"
      ]
    ]
  ],
  "test_interpret_allow_single_value_str_nonflags": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_interpret_allow_single_value_str_nonflags"
      ]
    ]
  ],
  "test_interpret_bad_str_syntax": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_interpret_bad_str_syntax"
      ]
    ]
  ],
  "test_bitfield_must_be_integer_check": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_bitfield_must_be_integer_check"
      ]
    ]
  ],
  "test_bitfield_to_boolean_mask": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_bitfield_to_boolean_mask"
      ]
    ]
  ],
  "test_bitflag": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_bitflag"
      ]
    ]
  ],
  "test_bitflag_docs2": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_bitflag_docs2"
      ]
    ]
  ],
  "test_bitflag_not_pow2": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_bitflag_not_pow2"
      ]
    ]
  ],
  "test_bitflag_not_int_flag": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_bitflag_not_int_flag"
      ]
    ]
  ],
  "test_basic_map": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_basic_map"
      ]
    ]
  ],
  "test_extend_map": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_extend_map"
      ]
    ]
  ],
  "test_extend_map_redefine_flag": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_extend_map_redefine_flag"
      ]
    ]
  ],
  "test_map_redefine_flag": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_map_redefine_flag"
      ]
    ]
  ],
  "test_map_cant_modify_version": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_map_cant_modify_version"
      ]
    ]
  ],
  "test_map_not_bit_flag": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_map_not_bit_flag"
      ]
    ]
  ],
  "test_map_not_int_flag": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_map_not_int_flag"
      ]
    ]
  ],
  "test_map_access_undefined_flag": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_map_access_undefined_flag"
      ]
    ]
  ],
  "test_map_delete_flag": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_map_delete_flag"
      ]
    ]
  ],
  "test_map_repr": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_map_repr"
      ]
    ]
  ],
  "test_map_add_flags": [
    [
      "astropy/nddata/tests/test_bitmask.py",
      [
        "test_map_add_flags"
      ]
    ]
  ],
  "test_1d": [
    [
      "astropy/nddata/tests/test_blocks.py",
      [
        "TestReshapeAsBlocks",
        "test_1d"
      ]
    ],
    [
      "astropy/nddata/tests/test_blocks.py",
      [
        "TestBlockReduce",
        "test_1d"
      ]
    ],
    [
      "astropy/nddata/tests/test_blocks.py",
      [
        "TestBlockReplicate",
        "test_1d"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestArrayColumns",
        "test_1d"
      ]
    ]
  ],
  "test_2d": [
    [
      "astropy/nddata/tests/test_blocks.py",
      [
        "TestReshapeAsBlocks",
        "test_2d"
      ]
    ],
    [
      "astropy/nddata/tests/test_blocks.py",
      [
        "TestBlockReduce",
        "test_2d"
      ]
    ],
    [
      "astropy/nddata/tests/test_blocks.py",
      [
        "TestBlockReplicate",
        "test_2d"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestArrayColumns",
        "test_2d"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestPandas",
        "test_2d"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/tests/test_wcsapi.py",
      [
        "test_2d"
      ]
    ]
  ],
  "test_3d": [
    [
      "astropy/nddata/tests/test_blocks.py",
      [
        "TestReshapeAsBlocks",
        "test_3d"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestArrayColumns",
        "test_3d"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/tests/test_wcsapi.py",
      [
        "test_3d"
      ]
    ]
  ],
  "test_invalid_block_dim": [
    [
      "astropy/nddata/tests/test_blocks.py",
      [
        "TestReshapeAsBlocks",
        "test_invalid_block_dim"
      ]
    ]
  ],
  "test_invalid_block_size": [
    [
      "astropy/nddata/tests/test_blocks.py",
      [
        "TestReshapeAsBlocks",
        "test_invalid_block_size"
      ]
    ]
  ],
  "test_invalid_block_value": [
    [
      "astropy/nddata/tests/test_blocks.py",
      [
        "TestReshapeAsBlocks",
        "test_invalid_block_value"
      ]
    ]
  ],
  "test_1d_mean": [
    [
      "astropy/nddata/tests/test_blocks.py",
      [
        "TestBlockReduce",
        "test_1d_mean"
      ]
    ]
  ],
  "test_2d_mean": [
    [
      "astropy/nddata/tests/test_blocks.py",
      [
        "TestBlockReduce",
        "test_2d_mean"
      ]
    ]
  ],
  "test_2d_trim": [
    [
      "astropy/nddata/tests/test_blocks.py",
      [
        "TestBlockReduce",
        "test_2d_trim"
      ]
    ]
  ],
  "test_block_size_broadcasting": [
    [
      "astropy/nddata/tests/test_blocks.py",
      [
        "TestBlockReduce",
        "test_block_size_broadcasting"
      ]
    ],
    [
      "astropy/nddata/tests/test_blocks.py",
      [
        "TestBlockReplicate",
        "test_block_size_broadcasting"
      ]
    ]
  ],
  "test_block_size_len": [
    [
      "astropy/nddata/tests/test_blocks.py",
      [
        "TestBlockReduce",
        "test_block_size_len"
      ]
    ],
    [
      "astropy/nddata/tests/test_blocks.py",
      [
        "TestBlockReplicate",
        "test_block_size_len"
      ]
    ]
  ],
  "test_1d_conserve_sum": [
    [
      "astropy/nddata/tests/test_blocks.py",
      [
        "TestBlockReplicate",
        "test_1d_conserve_sum"
      ]
    ]
  ],
  "test_2d_conserve_sum": [
    [
      "astropy/nddata/tests/test_blocks.py",
      [
        "TestBlockReplicate",
        "test_2d_conserve_sum"
      ]
    ]
  ],
  "create_ccd_data": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "create_ccd_data"
      ]
    ]
  ],
  "test_ccddata_empty": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_ccddata_empty"
      ]
    ]
  ],
  "test_ccddata_must_have_unit": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_ccddata_must_have_unit"
      ]
    ]
  ],
  "test_ccddata_unit_cannot_be_set_to_none": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_ccddata_unit_cannot_be_set_to_none"
      ]
    ]
  ],
  "test_ccddata_meta_header_conflict": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_ccddata_meta_header_conflict"
      ]
    ]
  ],
  "test_ccddata_simple": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_ccddata_simple"
      ]
    ]
  ],
  "test_ccddata_init_with_string_electron_unit": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_ccddata_init_with_string_electron_unit"
      ]
    ]
  ],
  "test_initialize_from_FITS": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_initialize_from_FITS"
      ]
    ]
  ],
  "test_initialize_from_fits_with_unit_in_header": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_initialize_from_fits_with_unit_in_header"
      ]
    ]
  ],
  "test_initialize_from_fits_with_ADU_in_header": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_initialize_from_fits_with_ADU_in_header"
      ]
    ]
  ],
  "test_initialize_from_fits_with_invalid_unit_in_header": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_initialize_from_fits_with_invalid_unit_in_header"
      ]
    ]
  ],
  "test_initialize_from_fits_with_technically_invalid_but_not_really": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_initialize_from_fits_with_technically_invalid_but_not_really"
      ]
    ]
  ],
  "test_initialize_from_fits_with_data_in_different_extension": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_initialize_from_fits_with_data_in_different_extension"
      ]
    ]
  ],
  "test_initialize_from_fits_with_extension": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_initialize_from_fits_with_extension"
      ]
    ]
  ],
  "test_write_unit_to_hdu": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_write_unit_to_hdu"
      ]
    ]
  ],
  "test_initialize_from_FITS_bad_keyword_raises_error": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_initialize_from_FITS_bad_keyword_raises_error"
      ]
    ]
  ],
  "test_ccddata_writer": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_ccddata_writer"
      ]
    ]
  ],
  "test_ccddata_meta_is_case_sensitive": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_ccddata_meta_is_case_sensitive"
      ]
    ]
  ],
  "test_ccddata_meta_is_not_fits_header": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_ccddata_meta_is_not_fits_header"
      ]
    ]
  ],
  "test_fromMEF": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_fromMEF"
      ]
    ]
  ],
  "test_metafromheader": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_metafromheader"
      ]
    ]
  ],
  "test_metafromdict": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_metafromdict"
      ]
    ]
  ],
  "test_header2meta": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_header2meta"
      ]
    ]
  ],
  "test_metafromstring_fail": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_metafromstring_fail"
      ]
    ]
  ],
  "test_setting_bad_uncertainty_raises_error": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_setting_bad_uncertainty_raises_error"
      ]
    ]
  ],
  "test_setting_uncertainty_with_array": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_setting_uncertainty_with_array"
      ]
    ]
  ],
  "test_setting_uncertainty_wrong_shape_raises_error": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_setting_uncertainty_wrong_shape_raises_error"
      ]
    ]
  ],
  "test_to_hdu": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_to_hdu"
      ]
    ]
  ],
  "test_mult_div_overload": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_mult_div_overload"
      ]
    ]
  ],
  "test_add_sub_overload": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_add_sub_overload"
      ]
    ]
  ],
  "test_arithmetic_overload_fails": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_arithmetic_overload_fails"
      ]
    ]
  ],
  "test_arithmetic_no_wcs_compare": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_arithmetic_no_wcs_compare"
      ]
    ]
  ],
  "test_arithmetic_with_wcs_compare": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_arithmetic_with_wcs_compare"
      ]
    ]
  ],
  "test_arithmetic_with_wcs_compare_fail": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_arithmetic_with_wcs_compare_fail"
      ]
    ]
  ],
  "test_arithmetic_overload_ccddata_operand": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_arithmetic_overload_ccddata_operand"
      ]
    ]
  ],
  "test_arithmetic_overload_differing_units": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_arithmetic_overload_differing_units"
      ]
    ]
  ],
  "test_arithmetic_add_with_array": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_arithmetic_add_with_array"
      ]
    ]
  ],
  "test_arithmetic_subtract_with_array": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_arithmetic_subtract_with_array"
      ]
    ]
  ],
  "test_arithmetic_multiply_with_array": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_arithmetic_multiply_with_array"
      ]
    ]
  ],
  "test_arithmetic_divide_with_array": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_arithmetic_divide_with_array"
      ]
    ]
  ],
  "test_history_preserved_if_metadata_is_fits_header": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_history_preserved_if_metadata_is_fits_header"
      ]
    ]
  ],
  "test_infol_logged_if_unit_in_fits_header": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_infol_logged_if_unit_in_fits_header"
      ]
    ]
  ],
  "test_wcs_attribute": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_wcs_attribute"
      ]
    ]
  ],
  "test_wcs_keywords_removed_from_header": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_wcs_keywords_removed_from_header"
      ]
    ]
  ],
  "test_wcs_SIP_coefficient_keywords_removed": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_wcs_SIP_coefficient_keywords_removed"
      ]
    ]
  ],
  "test_wcs_keyword_removal_for_wcs_test_files": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_wcs_keyword_removal_for_wcs_test_files"
      ]
    ]
  ],
  "test_read_wcs_not_creatable": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_read_wcs_not_creatable"
      ]
    ]
  ],
  "test_header": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_header"
      ]
    ]
  ],
  "test_wcs_arithmetic": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_wcs_arithmetic"
      ]
    ]
  ],
  "test_wcs_arithmetic_ccd": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_wcs_arithmetic_ccd"
      ]
    ]
  ],
  "check_wcs_ctypes": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_wcs_sip_handling",
        "check_wcs_ctypes"
      ]
    ]
  ],
  "test_wcs_sip_handling": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_wcs_sip_handling"
      ]
    ]
  ],
  "test_mask_arithmetic_ccd": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_mask_arithmetic_ccd"
      ]
    ]
  ],
  "test_write_read_multiextensionfits_mask_default": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_write_read_multiextensionfits_mask_default"
      ]
    ]
  ],
  "test_write_read_multiextensionfits_uncertainty_default": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_write_read_multiextensionfits_uncertainty_default"
      ]
    ]
  ],
  "test_write_read_multiextensionfits_uncertainty_different_uncertainty_key": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_write_read_multiextensionfits_uncertainty_different_uncertainty_key"
      ]
    ]
  ],
  "test_write_read_multiextensionfits_not": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_write_read_multiextensionfits_not"
      ]
    ]
  ],
  "test_write_read_multiextensionfits_custom_ext_names": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_write_read_multiextensionfits_custom_ext_names"
      ]
    ]
  ],
  "test_read_old_style_multiextensionfits": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_read_old_style_multiextensionfits"
      ]
    ]
  ],
  "test_wcs": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_wcs"
      ]
    ],
    [
      "astropy/wcs/tests/test_pickle.py",
      [
        "test_wcs"
      ]
    ]
  ],
  "test_recognized_fits_formats_for_read_write": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_recognized_fits_formats_for_read_write"
      ]
    ]
  ],
  "test_stddevuncertainty_compat_descriptor_no_parent": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_stddevuncertainty_compat_descriptor_no_parent"
      ]
    ]
  ],
  "test_stddevuncertainty_compat_descriptor_no_weakref": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_stddevuncertainty_compat_descriptor_no_weakref"
      ]
    ]
  ],
  "test_read_returns_image": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_read_returns_image"
      ]
    ]
  ],
  "test_sliced_ccdata_to_hdu": [
    [
      "astropy/nddata/tests/test_ccddata.py",
      [
        "test_sliced_ccdata_to_hdu"
      ]
    ]
  ],
  "test_nddataarray_has_attributes_of_old_nddata": [
    [
      "astropy/nddata/tests/test_compat.py",
      [
        "test_nddataarray_has_attributes_of_old_nddata"
      ]
    ]
  ],
  "test_nddata_simple": [
    [
      "astropy/nddata/tests/test_compat.py",
      [
        "test_nddata_simple"
      ]
    ]
  ],
  "test_nddata_parameters": [
    [
      "astropy/nddata/tests/test_compat.py",
      [
        "test_nddata_parameters"
      ]
    ]
  ],
  "test_nddata_conversion": [
    [
      "astropy/nddata/tests/test_compat.py",
      [
        "test_nddata_conversion"
      ]
    ]
  ],
  "test_nddata_flags_init_without_np_array": [
    [
      "astropy/nddata/tests/test_compat.py",
      [
        "test_nddata_flags_init_without_np_array"
      ]
    ]
  ],
  "test_nddata_flags_invalid_shape": [
    [
      "astropy/nddata/tests/test_compat.py",
      [
        "test_nddata_flags_invalid_shape"
      ]
    ]
  ],
  "test_convert_unit_to": [
    [
      "astropy/nddata/tests/test_compat.py",
      [
        "test_convert_unit_to"
      ]
    ]
  ],
  "test_init_of_subclass_in_convert_unit_to": [
    [
      "astropy/nddata/tests/test_compat.py",
      [
        "test_init_of_subclass_in_convert_unit_to"
      ]
    ]
  ],
  "test_nddataarray_from_nddataarray": [
    [
      "astropy/nddata/tests/test_compat.py",
      [
        "test_nddataarray_from_nddataarray"
      ]
    ]
  ],
  "test_nddataarray_from_nddata": [
    [
      "astropy/nddata/tests/test_compat.py",
      [
        "test_nddataarray_from_nddata"
      ]
    ]
  ],
  "wrapped_function_1": [
    [
      "astropy/nddata/tests/test_decorators.py",
      [
        "wrapped_function_1"
      ]
    ]
  ],
  "test_pass_numpy": [
    [
      "astropy/nddata/tests/test_decorators.py",
      [
        "test_pass_numpy"
      ]
    ]
  ],
  "test_pass_all_separate": [
    [
      "astropy/nddata/tests/test_decorators.py",
      [
        "test_pass_all_separate"
      ]
    ]
  ],
  "test_pass_nddata": [
    [
      "astropy/nddata/tests/test_decorators.py",
      [
        "test_pass_nddata"
      ]
    ]
  ],
  "test_pass_nddata_and_explicit": [
    [
      "astropy/nddata/tests/test_decorators.py",
      [
        "test_pass_nddata_and_explicit"
      ]
    ]
  ],
  "test_pass_nddata_ignored": [
    [
      "astropy/nddata/tests/test_decorators.py",
      [
        "test_pass_nddata_ignored"
      ]
    ]
  ],
  "test_incorrect_first_argument": [
    [
      "astropy/nddata/tests/test_decorators.py",
      [
        "test_incorrect_first_argument"
      ]
    ]
  ],
  "test_wrap_function_no_kwargs": [
    [
      "astropy/nddata/tests/test_decorators.py",
      [
        "test_wrap_function_no_kwargs"
      ]
    ]
  ],
  "test_wrap_function_repack_valid": [
    [
      "astropy/nddata/tests/test_decorators.py",
      [
        "test_wrap_function_repack_valid"
      ]
    ]
  ],
  "test_wrap_function_accepts": [
    [
      "astropy/nddata/tests/test_decorators.py",
      [
        "test_wrap_function_accepts"
      ]
    ]
  ],
  "test_wrap_preserve_signature_docstring": [
    [
      "astropy/nddata/tests/test_decorators.py",
      [
        "test_wrap_preserve_signature_docstring"
      ]
    ]
  ],
  "test_setup_failures1": [
    [
      "astropy/nddata/tests/test_decorators.py",
      [
        "test_setup_failures1"
      ]
    ]
  ],
  "test_setup_failures2": [
    [
      "astropy/nddata/tests/test_decorators.py",
      [
        "test_setup_failures2"
      ]
    ]
  ],
  "test_setup_failures9": [
    [
      "astropy/nddata/tests/test_decorators.py",
      [
        "test_setup_failures9"
      ]
    ]
  ],
  "test_setup_failures3": [
    [
      "astropy/nddata/tests/test_decorators.py",
      [
        "test_setup_failures3"
      ]
    ]
  ],
  "test_setup_failures4": [
    [
      "astropy/nddata/tests/test_decorators.py",
      [
        "test_setup_failures4"
      ]
    ]
  ],
  "test_setup_failures10": [
    [
      "astropy/nddata/tests/test_decorators.py",
      [
        "test_setup_failures10"
      ]
    ]
  ],
  "test_setup_failures5": [
    [
      "astropy/nddata/tests/test_decorators.py",
      [
        "test_setup_failures5"
      ]
    ]
  ],
  "test_setup_failures6": [
    [
      "astropy/nddata/tests/test_decorators.py",
      [
        "test_setup_failures6"
      ]
    ]
  ],
  "test_setup_failures7": [
    [
      "astropy/nddata/tests/test_decorators.py",
      [
        "test_setup_failures7"
      ]
    ]
  ],
  "test_setup_failures8": [
    [
      "astropy/nddata/tests/test_decorators.py",
      [
        "test_setup_failures8"
      ]
    ]
  ],
  "test_setup_failures11": [
    [
      "astropy/nddata/tests/test_decorators.py",
      [
        "test_setup_failures11"
      ]
    ]
  ],
  "test_setup_numpyarray_default": [
    [
      "astropy/nddata/tests/test_decorators.py",
      [
        "test_setup_numpyarray_default"
      ]
    ]
  ],
  "test_still_accepts_other_input": [
    [
      "astropy/nddata/tests/test_decorators.py",
      [
        "test_still_accepts_other_input"
      ]
    ]
  ],
  "test_accepting_property_normal": [
    [
      "astropy/nddata/tests/test_decorators.py",
      [
        "test_accepting_property_normal"
      ]
    ]
  ],
  "test_parameter_default_identical_to_explicit_passed_argument": [
    [
      "astropy/nddata/tests/test_decorators.py",
      [
        "test_parameter_default_identical_to_explicit_passed_argument"
      ]
    ]
  ],
  "test_accepting_property_notexist": [
    [
      "astropy/nddata/tests/test_decorators.py",
      [
        "test_accepting_property_notexist"
      ]
    ]
  ],
  "test_accepting_property_translated": [
    [
      "astropy/nddata/tests/test_decorators.py",
      [
        "test_accepting_property_translated"
      ]
    ]
  ],
  "test_accepting_property_meta_empty": [
    [
      "astropy/nddata/tests/test_decorators.py",
      [
        "test_accepting_property_meta_empty"
      ]
    ]
  ],
  "test_init_noshape": [
    [
      "astropy/nddata/tests/test_flag_collection.py",
      [
        "test_init_noshape"
      ]
    ]
  ],
  "test_init_notiterable": [
    [
      "astropy/nddata/tests/test_flag_collection.py",
      [
        "test_init_notiterable"
      ]
    ]
  ],
  "test_setitem_invalid_type": [
    [
      "astropy/nddata/tests/test_flag_collection.py",
      [
        "test_setitem_invalid_type"
      ]
    ]
  ],
  "test_setitem_invalid_shape": [
    [
      "astropy/nddata/tests/test_flag_collection.py",
      [
        "test_setitem_invalid_shape"
      ]
    ]
  ],
  "test_uncertainty_setter": [
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "test_uncertainty_setter"
      ]
    ]
  ],
  "test_mask_setter": [
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "test_mask_setter"
      ]
    ]
  ],
  "test_nddata_empty": [
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "test_nddata_empty"
      ]
    ]
  ],
  "test_nddata_init_data_nonarray": [
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "test_nddata_init_data_nonarray"
      ]
    ]
  ],
  "test_nddata_init_data_ndarray": [
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "test_nddata_init_data_ndarray"
      ]
    ]
  ],
  "test_nddata_init_data_maskedarray": [
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "test_nddata_init_data_maskedarray"
      ]
    ]
  ],
  "test_nddata_init_data_quantity": [
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "test_nddata_init_data_quantity"
      ]
    ]
  ],
  "test_nddata_init_data_masked_quantity": [
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "test_nddata_init_data_masked_quantity"
      ]
    ]
  ],
  "test_nddata_init_data_nddata": [
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "test_nddata_init_data_nddata"
      ]
    ]
  ],
  "test_nddata_init_data_nddata_subclass": [
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "test_nddata_init_data_nddata_subclass"
      ]
    ]
  ],
  "test_nddata_init_data_fail": [
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "test_nddata_init_data_fail"
      ]
    ]
  ],
  "test_nddata_init_data_fakes": [
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "test_nddata_init_data_fakes"
      ]
    ]
  ],
  "test_param_uncertainty": [
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "test_param_uncertainty"
      ]
    ]
  ],
  "test_param_wcs": [
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "test_param_wcs"
      ]
    ]
  ],
  "test_param_meta": [
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "test_param_meta"
      ]
    ]
  ],
  "test_param_mask": [
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "test_param_mask"
      ]
    ]
  ],
  "test_param_unit": [
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "test_param_unit"
      ]
    ]
  ],
  "test_pickle_nddata_with_uncertainty": [
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "test_pickle_nddata_with_uncertainty"
      ]
    ]
  ],
  "test_pickle_uncertainty_only": [
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "test_pickle_uncertainty_only"
      ]
    ]
  ],
  "test_pickle_nddata_without_uncertainty": [
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "test_pickle_nddata_without_uncertainty"
      ]
    ]
  ],
  "test_nddata_str": [
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "test_nddata_str"
      ]
    ]
  ],
  "test_nddata_repr": [
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "test_nddata_repr"
      ]
    ]
  ],
  "test_slicing_not_supported": [
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "test_slicing_not_supported"
      ]
    ]
  ],
  "test_arithmetic_not_supported": [
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "test_arithmetic_not_supported"
      ]
    ]
  ],
  "test_nddata_wcs_setter_error_cases": [
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "test_nddata_wcs_setter_error_cases"
      ]
    ]
  ],
  "test_nddata_wcs_setter_with_low_level_wcs": [
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "test_nddata_wcs_setter_with_low_level_wcs"
      ]
    ]
  ],
  "test_nddata_init_with_low_level_wcs": [
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "test_nddata_init_with_low_level_wcs"
      ]
    ]
  ],
  "test_overriden_wcs": [
    [
      "astropy/nddata/tests/test_nddata.py",
      [
        "test_overriden_wcs"
      ]
    ]
  ],
  "test_nddata_base_subclass": [
    [
      "astropy/nddata/tests/test_nddata_base.py",
      [
        "test_nddata_base_subclass"
      ]
    ]
  ],
  "test_init_fake_with_list": [
    [
      "astropy/nddata/tests/test_nduncertainty.py",
      [
        "test_init_fake_with_list"
      ]
    ]
  ],
  "test_init_fake_with_ndarray": [
    [
      "astropy/nddata/tests/test_nduncertainty.py",
      [
        "test_init_fake_with_ndarray"
      ]
    ]
  ],
  "test_init_fake_with_quantity": [
    [
      "astropy/nddata/tests/test_nduncertainty.py",
      [
        "test_init_fake_with_quantity"
      ]
    ]
  ],
  "test_init_fake_with_fake": [
    [
      "astropy/nddata/tests/test_nduncertainty.py",
      [
        "test_init_fake_with_fake"
      ]
    ]
  ],
  "test_init_fake_with_somethingElse": [
    [
      "astropy/nddata/tests/test_nduncertainty.py",
      [
        "test_init_fake_with_somethingElse"
      ]
    ]
  ],
  "test_init_fake_with_StdDevUncertainty": [
    [
      "astropy/nddata/tests/test_nduncertainty.py",
      [
        "test_init_fake_with_StdDevUncertainty"
      ]
    ]
  ],
  "test_uncertainty_type": [
    [
      "astropy/nddata/tests/test_nduncertainty.py",
      [
        "test_uncertainty_type"
      ]
    ]
  ],
  "test_uncertainty_correlated": [
    [
      "astropy/nddata/tests/test_nduncertainty.py",
      [
        "test_uncertainty_correlated"
      ]
    ]
  ],
  "test_leak": [
    [
      "astropy/nddata/tests/test_nduncertainty.py",
      [
        "test_for_leak_with_uncertainty",
        "test_leak"
      ]
    ]
  ],
  "non_leaker_nddata": [
    [
      "astropy/nddata/tests/test_nduncertainty.py",
      [
        "test_for_leak_with_uncertainty",
        "non_leaker_nddata"
      ]
    ]
  ],
  "leaker_nddata": [
    [
      "astropy/nddata/tests/test_nduncertainty.py",
      [
        "test_for_leak_with_uncertainty",
        "leaker_nddata"
      ]
    ]
  ],
  "non_leaker_nddataarray": [
    [
      "astropy/nddata/tests/test_nduncertainty.py",
      [
        "test_for_leak_with_uncertainty",
        "non_leaker_nddataarray"
      ]
    ]
  ],
  "leaker_nddataarray": [
    [
      "astropy/nddata/tests/test_nduncertainty.py",
      [
        "test_for_leak_with_uncertainty",
        "leaker_nddataarray"
      ]
    ]
  ],
  "test_for_leak_with_uncertainty": [
    [
      "astropy/nddata/tests/test_nduncertainty.py",
      [
        "test_for_leak_with_uncertainty"
      ]
    ]
  ],
  "test_for_stolen_uncertainty": [
    [
      "astropy/nddata/tests/test_nduncertainty.py",
      [
        "test_for_stolen_uncertainty"
      ]
    ]
  ],
  "test_stddevuncertainty_pickle": [
    [
      "astropy/nddata/tests/test_nduncertainty.py",
      [
        "test_stddevuncertainty_pickle"
      ]
    ]
  ],
  "test_setting_uncertainty_unit_results_in_unit_object": [
    [
      "astropy/nddata/tests/test_nduncertainty.py",
      [
        "test_setting_uncertainty_unit_results_in_unit_object"
      ]
    ]
  ],
  "test_changing_unit_to_value_inconsistent_with_parent_fails": [
    [
      "astropy/nddata/tests/test_nduncertainty.py",
      [
        "test_changing_unit_to_value_inconsistent_with_parent_fails"
      ]
    ]
  ],
  "test_assigning_uncertainty_to_parent_gives_correct_unit": [
    [
      "astropy/nddata/tests/test_nduncertainty.py",
      [
        "test_assigning_uncertainty_to_parent_gives_correct_unit"
      ]
    ]
  ],
  "test_assigning_uncertainty_with_unit_to_parent_with_unit": [
    [
      "astropy/nddata/tests/test_nduncertainty.py",
      [
        "test_assigning_uncertainty_with_unit_to_parent_with_unit"
      ]
    ]
  ],
  "test_assigning_uncertainty_with_bad_unit_to_parent_fails": [
    [
      "astropy/nddata/tests/test_nduncertainty.py",
      [
        "test_assigning_uncertainty_with_bad_unit_to_parent_fails"
      ]
    ]
  ],
  "test_slices_different_dim": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "test_slices_different_dim"
      ]
    ]
  ],
  "test_slices_pos_different_dim": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "test_slices_pos_different_dim"
      ]
    ]
  ],
  "test_slices_no_overlap": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "test_slices_no_overlap"
      ]
    ]
  ],
  "test_slices_partial_overlap": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "test_slices_partial_overlap"
      ]
    ]
  ],
  "test_slices_edges": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "test_slices_edges"
      ]
    ]
  ],
  "test_slices_overlap_wrong_mode": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "test_slices_overlap_wrong_mode"
      ]
    ]
  ],
  "test_slices_nonfinite_position": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "test_slices_nonfinite_position"
      ]
    ]
  ],
  "test_extract_array_even_shape_rounding": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "test_extract_array_even_shape_rounding"
      ]
    ]
  ],
  "test_extract_array_odd_shape_rounding": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "test_extract_array_odd_shape_rounding"
      ]
    ]
  ],
  "test_extract_array_wrong_mode": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "test_extract_array_wrong_mode"
      ]
    ]
  ],
  "test_extract_array_1d_even": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "test_extract_array_1d_even"
      ]
    ]
  ],
  "test_extract_array_1d_odd": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "test_extract_array_1d_odd"
      ]
    ]
  ],
  "test_extract_array_1d": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "test_extract_array_1d"
      ]
    ]
  ],
  "test_extract_Array_float": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "test_extract_Array_float"
      ]
    ]
  ],
  "test_extract_array_1d_trim": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "test_extract_array_1d_trim"
      ]
    ]
  ],
  "test_extract_array_easy": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "test_extract_array_easy"
      ]
    ]
  ],
  "test_extract_array_return_pos": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "test_extract_array_return_pos"
      ]
    ]
  ],
  "test_extract_array_nan_fillvalue": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "test_extract_array_nan_fillvalue"
      ]
    ]
  ],
  "test_add_array_odd_shape": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "test_add_array_odd_shape"
      ]
    ]
  ],
  "test_add_array_even_shape": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "test_add_array_even_shape"
      ]
    ]
  ],
  "test_add_array_equal_shape": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "test_add_array_equal_shape"
      ]
    ]
  ],
  "test_subpixel_indices": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "test_subpixel_indices"
      ]
    ]
  ],
  "test_cutout": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "TestCutout2D",
        "test_cutout"
      ]
    ]
  ],
  "test_size_length": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "TestCutout2D",
        "test_size_length"
      ]
    ]
  ],
  "test_size_units": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "TestCutout2D",
        "test_size_units"
      ]
    ]
  ],
  "test_size_pixel": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "TestCutout2D",
        "test_size_pixel"
      ]
    ]
  ],
  "test_size_angle": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "TestCutout2D",
        "test_size_angle"
      ]
    ]
  ],
  "test_size_angle_without_wcs": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "TestCutout2D",
        "test_size_angle_without_wcs"
      ]
    ]
  ],
  "test_cutout_trim_overlap": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "TestCutout2D",
        "test_cutout_trim_overlap"
      ]
    ]
  ],
  "test_cutout_partial_overlap": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "TestCutout2D",
        "test_cutout_partial_overlap"
      ]
    ]
  ],
  "test_cutout_partial_overlap_fill_value": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "TestCutout2D",
        "test_cutout_partial_overlap_fill_value"
      ]
    ]
  ],
  "test_to_from_large": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "TestCutout2D",
        "test_to_from_large"
      ]
    ]
  ],
  "test_skycoord_without_wcs": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "TestCutout2D",
        "test_skycoord_without_wcs"
      ]
    ]
  ],
  "test_skycoord_partial": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "TestCutout2D",
        "test_skycoord_partial"
      ]
    ]
  ],
  "test_naxis_update": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "TestCutout2D",
        "test_naxis_update"
      ]
    ]
  ],
  "test_crpix_maps_to_crval": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "TestCutout2D",
        "test_crpix_maps_to_crval"
      ]
    ],
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_crpix_maps_to_crval"
      ]
    ]
  ],
  "test_cutout_with_nddata_as_input": [
    [
      "astropy/nddata/tests/test_utils.py",
      [
        "TestCutout2D",
        "test_cutout_with_nddata_as_input"
      ]
    ]
  ],
  "overlap_slices": [
    [
      "astropy/nddata/utils.py",
      [
        "overlap_slices"
      ]
    ]
  ],
  "extract_array": [
    [
      "astropy/nddata/utils.py",
      [
        "extract_array"
      ]
    ]
  ],
  "add_array": [
    [
      "astropy/nddata/utils.py",
      [
        "add_array"
      ]
    ]
  ],
  "subpixel_indices": [
    [
      "astropy/nddata/utils.py",
      [
        "subpixel_indices"
      ]
    ]
  ],
  "to_original_position": [
    [
      "astropy/nddata/utils.py",
      [
        "Cutout2D",
        "to_original_position"
      ]
    ]
  ],
  "to_cutout_position": [
    [
      "astropy/nddata/utils.py",
      [
        "Cutout2D",
        "to_cutout_position"
      ]
    ]
  ],
  "plot_on_original": [
    [
      "astropy/nddata/utils.py",
      [
        "Cutout2D",
        "plot_on_original"
      ]
    ]
  ],
  "_calc_center": [
    [
      "astropy/nddata/utils.py",
      [
        "Cutout2D",
        "_calc_center"
      ]
    ]
  ],
  "_calc_bbox": [
    [
      "astropy/nddata/utils.py",
      [
        "Cutout2D",
        "_calc_bbox"
      ]
    ]
  ],
  "origin_original": [
    [
      "astropy/nddata/utils.py",
      [
        "Cutout2D",
        "origin_original"
      ]
    ]
  ],
  "origin_cutout": [
    [
      "astropy/nddata/utils.py",
      [
        "Cutout2D",
        "origin_cutout"
      ]
    ]
  ],
  "_round": [
    [
      "astropy/nddata/utils.py",
      [
        "Cutout2D",
        "_round"
      ]
    ]
  ],
  "position_original": [
    [
      "astropy/nddata/utils.py",
      [
        "Cutout2D",
        "position_original"
      ]
    ]
  ],
  "position_cutout": [
    [
      "astropy/nddata/utils.py",
      [
        "Cutout2D",
        "position_cutout"
      ]
    ]
  ],
  "center_original": [
    [
      "astropy/nddata/utils.py",
      [
        "Cutout2D",
        "center_original"
      ]
    ]
  ],
  "center_cutout": [
    [
      "astropy/nddata/utils.py",
      [
        "Cutout2D",
        "center_cutout"
      ]
    ]
  ],
  "bbox_original": [
    [
      "astropy/nddata/utils.py",
      [
        "Cutout2D",
        "bbox_original"
      ]
    ]
  ],
  "bbox_cutout": [
    [
      "astropy/nddata/utils.py",
      [
        "Cutout2D",
        "bbox_cutout"
      ]
    ]
  ],
  "start": [
    [
      "astropy/samp/client.py",
      [
        "SAMPClient",
        "start"
      ]
    ],
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "start"
      ]
    ],
    [
      "astropy/utils/xml/iterparser.py",
      [
        "_fast_iterparse",
        "start"
      ]
    ],
    [
      "astropy/utils/xml/writer.py",
      [
        "XMLWriter",
        "start"
      ]
    ]
  ],
  "stop": [
    [
      "astropy/samp/client.py",
      [
        "SAMPClient",
        "stop"
      ]
    ],
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "stop"
      ]
    ],
    [
      "astropy/samp/tests/web_profile_test_helpers.py",
      [
        "AlwaysApproveWebProfileDialog",
        "stop"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "SlicedIndex",
        "stop"
      ]
    ]
  ],
  "is_running": [
    [
      "astropy/samp/client.py",
      [
        "SAMPClient",
        "is_running"
      ]
    ],
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "is_running"
      ]
    ]
  ],
  "is_registered": [
    [
      "astropy/samp/client.py",
      [
        "SAMPClient",
        "is_registered"
      ]
    ]
  ],
  "_run_client": [
    [
      "astropy/samp/client.py",
      [
        "SAMPClient",
        "_run_client"
      ]
    ]
  ],
  "_serve_forever": [
    [
      "astropy/samp/client.py",
      [
        "SAMPClient",
        "_serve_forever"
      ]
    ],
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_serve_forever"
      ]
    ],
    [
      "astropy/samp/tests/web_profile_test_helpers.py",
      [
        "SAMPWebClient",
        "_serve_forever"
      ]
    ]
  ],
  "_ping": [
    [
      "astropy/samp/client.py",
      [
        "SAMPClient",
        "_ping"
      ]
    ],
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_ping"
      ]
    ]
  ],
  "_client_env_get": [
    [
      "astropy/samp/client.py",
      [
        "SAMPClient",
        "_client_env_get"
      ]
    ]
  ],
  "_handle_notification": [
    [
      "astropy/samp/client.py",
      [
        "SAMPClient",
        "_handle_notification"
      ]
    ]
  ],
  "receive_notification": [
    [
      "astropy/samp/client.py",
      [
        "SAMPClient",
        "receive_notification"
      ]
    ],
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "receive_notification"
      ]
    ],
    [
      "astropy/samp/tests/test_helpers.py",
      [
        "Receiver",
        "receive_notification"
      ]
    ]
  ],
  "_handle_call": [
    [
      "astropy/samp/client.py",
      [
        "SAMPClient",
        "_handle_call"
      ]
    ]
  ],
  "receive_call": [
    [
      "astropy/samp/client.py",
      [
        "SAMPClient",
        "receive_call"
      ]
    ],
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "receive_call"
      ]
    ],
    [
      "astropy/samp/tests/test_helpers.py",
      [
        "Receiver",
        "receive_call"
      ]
    ]
  ],
  "_handle_response": [
    [
      "astropy/samp/client.py",
      [
        "SAMPClient",
        "_handle_response"
      ]
    ]
  ],
  "receive_response": [
    [
      "astropy/samp/client.py",
      [
        "SAMPClient",
        "receive_response"
      ]
    ],
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "receive_response"
      ]
    ],
    [
      "astropy/samp/tests/test_helpers.py",
      [
        "Receiver",
        "receive_response"
      ]
    ]
  ],
  "bind_receive_message": [
    [
      "astropy/samp/client.py",
      [
        "SAMPClient",
        "bind_receive_message"
      ]
    ],
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "bind_receive_message"
      ]
    ]
  ],
  "bind_receive_notification": [
    [
      "astropy/samp/client.py",
      [
        "SAMPClient",
        "bind_receive_notification"
      ]
    ],
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "bind_receive_notification"
      ]
    ]
  ],
  "bind_receive_call": [
    [
      "astropy/samp/client.py",
      [
        "SAMPClient",
        "bind_receive_call"
      ]
    ],
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "bind_receive_call"
      ]
    ]
  ],
  "bind_receive_response": [
    [
      "astropy/samp/client.py",
      [
        "SAMPClient",
        "bind_receive_response"
      ]
    ],
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "bind_receive_response"
      ]
    ]
  ],
  "unbind_receive_notification": [
    [
      "astropy/samp/client.py",
      [
        "SAMPClient",
        "unbind_receive_notification"
      ]
    ],
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "unbind_receive_notification"
      ]
    ]
  ],
  "unbind_receive_call": [
    [
      "astropy/samp/client.py",
      [
        "SAMPClient",
        "unbind_receive_call"
      ]
    ],
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "unbind_receive_call"
      ]
    ]
  ],
  "unbind_receive_response": [
    [
      "astropy/samp/client.py",
      [
        "SAMPClient",
        "unbind_receive_response"
      ]
    ],
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "unbind_receive_response"
      ]
    ]
  ],
  "declare_subscriptions": [
    [
      "astropy/samp/client.py",
      [
        "SAMPClient",
        "declare_subscriptions"
      ]
    ],
    [
      "astropy/samp/hub_proxy.py",
      [
        "SAMPHubProxy",
        "declare_subscriptions"
      ]
    ],
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "declare_subscriptions"
      ]
    ]
  ],
  "_set_xmlrpc_callback": [
    [
      "astropy/samp/client.py",
      [
        "SAMPClient",
        "_set_xmlrpc_callback"
      ]
    ],
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_set_xmlrpc_callback"
      ]
    ]
  ],
  "_declare_subscriptions": [
    [
      "astropy/samp/client.py",
      [
        "SAMPClient",
        "_declare_subscriptions"
      ]
    ],
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_declare_subscriptions"
      ]
    ]
  ],
  "declare_metadata": [
    [
      "astropy/samp/client.py",
      [
        "SAMPClient",
        "declare_metadata"
      ]
    ],
    [
      "astropy/samp/hub_proxy.py",
      [
        "SAMPHubProxy",
        "declare_metadata"
      ]
    ],
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "declare_metadata"
      ]
    ]
  ],
  "get_private_key": [
    [
      "astropy/samp/client.py",
      [
        "SAMPClient",
        "get_private_key"
      ]
    ],
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "get_private_key"
      ]
    ]
  ],
  "get_public_id": [
    [
      "astropy/samp/client.py",
      [
        "SAMPClient",
        "get_public_id"
      ]
    ],
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "get_public_id"
      ]
    ]
  ],
  "id": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "id"
      ]
    ]
  ],
  "_register_standard_api": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_register_standard_api"
      ]
    ]
  ],
  "_register_web_profile_api": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_register_web_profile_api"
      ]
    ]
  ],
  "_start_standard_server": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_start_standard_server"
      ]
    ]
  ],
  "_start_web_profile_server": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_start_web_profile_server"
      ]
    ]
  ],
  "_launch_thread": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_launch_thread"
      ]
    ]
  ],
  "_join_launched_threads": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_join_launched_threads"
      ]
    ]
  ],
  "_timeout_test_hub": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_timeout_test_hub"
      ]
    ]
  ],
  "_timeout_test_client": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_timeout_test_client"
      ]
    ]
  ],
  "_hub_as_client_request_handler": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_hub_as_client_request_handler"
      ]
    ]
  ],
  "_setup_hub_as_client": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_setup_hub_as_client"
      ]
    ]
  ],
  "_start_threads": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_start_threads"
      ]
    ]
  ],
  "_create_secret_code": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_create_secret_code"
      ]
    ]
  ],
  "_join_all_threads": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_join_all_threads"
      ]
    ]
  ],
  "_notify_shutdown": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_notify_shutdown"
      ]
    ]
  ],
  "_notify_register": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_notify_register"
      ]
    ]
  ],
  "_notify_unregister": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_notify_unregister"
      ]
    ]
  ],
  "_notify_metadata": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_notify_metadata"
      ]
    ]
  ],
  "_notify_subscriptions": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_notify_subscriptions"
      ]
    ]
  ],
  "_notify_disconnection": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_notify_disconnection"
      ]
    ]
  ],
  "_query_by_metadata": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_query_by_metadata"
      ]
    ]
  ],
  "_perform_standard_register": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_perform_standard_register"
      ]
    ]
  ],
  "_register": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_register"
      ]
    ]
  ],
  "_get_new_ids": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_get_new_ids"
      ]
    ]
  ],
  "_unregister": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_unregister"
      ]
    ]
  ],
  "_declare_metadata": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_declare_metadata"
      ]
    ]
  ],
  "_get_metadata": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_get_metadata"
      ]
    ]
  ],
  "_get_subscriptions": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_get_subscriptions"
      ]
    ]
  ],
  "_get_registered_clients": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_get_registered_clients"
      ]
    ]
  ],
  "_get_subscribed_clients": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_get_subscribed_clients"
      ]
    ]
  ],
  "get_mtype_subtypes": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "get_mtype_subtypes"
      ]
    ]
  ],
  "_is_subscribed": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_is_subscribed"
      ]
    ]
  ],
  "_notify_": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_notify_"
      ]
    ]
  ],
  "_notify_all": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_notify_all"
      ]
    ]
  ],
  "_notify_all_": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_notify_all_"
      ]
    ]
  ],
  "_call": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_call"
      ]
    ]
  ],
  "_call_": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_call_"
      ]
    ]
  ],
  "_call_all": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_call_all"
      ]
    ]
  ],
  "_call_all_": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_call_all_"
      ]
    ]
  ],
  "_call_and_wait": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_call_and_wait"
      ]
    ]
  ],
  "_reply": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_reply"
      ]
    ]
  ],
  "_reply_": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_reply_"
      ]
    ]
  ],
  "_retry_method": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_retry_method"
      ]
    ]
  ],
  "_public_id_to_private_key": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_public_id_to_private_key"
      ]
    ]
  ],
  "_get_new_hub_msg_id": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_get_new_hub_msg_id"
      ]
    ]
  ],
  "_update_last_activity_time": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_update_last_activity_time"
      ]
    ]
  ],
  "_receive_notification": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_receive_notification"
      ]
    ]
  ],
  "_receive_call": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_receive_call"
      ]
    ]
  ],
  "_receive_response": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_receive_response"
      ]
    ]
  ],
  "_web_profile_register": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_web_profile_register"
      ]
    ]
  ],
  "_web_profile_allowReverseCallbacks": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_web_profile_allowReverseCallbacks"
      ]
    ]
  ],
  "_web_profile_pullCallbacks": [
    [
      "astropy/samp/hub.py",
      [
        "SAMPHubServer",
        "_web_profile_pullCallbacks"
      ]
    ]
  ],
  "handle_queue": [
    [
      "astropy/samp/hub.py",
      [
        "WebProfileDialog",
        "handle_queue"
      ]
    ]
  ],
  "consent": [
    [
      "astropy/samp/hub.py",
      [
        "WebProfileDialog",
        "consent"
      ]
    ]
  ],
  "reject": [
    [
      "astropy/samp/hub.py",
      [
        "WebProfileDialog",
        "reject"
      ]
    ]
  ],
  "is_connected": [
    [
      "astropy/samp/hub_proxy.py",
      [
        "SAMPHubProxy",
        "is_connected"
      ]
    ],
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "is_connected"
      ]
    ]
  ],
  "connect": [
    [
      "astropy/samp/hub_proxy.py",
      [
        "SAMPHubProxy",
        "connect"
      ]
    ],
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "connect"
      ]
    ],
    [
      "astropy/samp/tests/web_profile_test_helpers.py",
      [
        "SAMPWebHubProxy",
        "connect"
      ]
    ],
    [
      "astropy/samp/tests/web_profile_test_helpers.py",
      [
        "SAMPIntegratedWebClient",
        "connect"
      ]
    ]
  ],
  "disconnect": [
    [
      "astropy/samp/hub_proxy.py",
      [
        "SAMPHubProxy",
        "disconnect"
      ]
    ],
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "disconnect"
      ]
    ]
  ],
  "_samp_hub": [
    [
      "astropy/samp/hub_proxy.py",
      [
        "SAMPHubProxy",
        "_samp_hub"
      ]
    ],
    [
      "astropy/samp/tests/web_profile_test_helpers.py",
      [
        "SAMPWebHubProxy",
        "_samp_hub"
      ]
    ]
  ],
  "ping": [
    [
      "astropy/samp/hub_proxy.py",
      [
        "SAMPHubProxy",
        "ping"
      ]
    ],
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "ping"
      ]
    ]
  ],
  "set_xmlrpc_callback": [
    [
      "astropy/samp/hub_proxy.py",
      [
        "SAMPHubProxy",
        "set_xmlrpc_callback"
      ]
    ],
    [
      "astropy/samp/tests/web_profile_test_helpers.py",
      [
        "SAMPWebHubProxy",
        "set_xmlrpc_callback"
      ]
    ]
  ],
  "get_metadata": [
    [
      "astropy/samp/hub_proxy.py",
      [
        "SAMPHubProxy",
        "get_metadata"
      ]
    ],
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "get_metadata"
      ]
    ]
  ],
  "get_subscriptions": [
    [
      "astropy/samp/hub_proxy.py",
      [
        "SAMPHubProxy",
        "get_subscriptions"
      ]
    ],
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "get_subscriptions"
      ]
    ]
  ],
  "get_registered_clients": [
    [
      "astropy/samp/hub_proxy.py",
      [
        "SAMPHubProxy",
        "get_registered_clients"
      ]
    ],
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "get_registered_clients"
      ]
    ]
  ],
  "get_subscribed_clients": [
    [
      "astropy/samp/hub_proxy.py",
      [
        "SAMPHubProxy",
        "get_subscribed_clients"
      ]
    ],
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "get_subscribed_clients"
      ]
    ]
  ],
  "notify": [
    [
      "astropy/samp/hub_proxy.py",
      [
        "SAMPHubProxy",
        "notify"
      ]
    ],
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "notify"
      ]
    ]
  ],
  "notify_all": [
    [
      "astropy/samp/hub_proxy.py",
      [
        "SAMPHubProxy",
        "notify_all"
      ]
    ],
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "notify_all"
      ]
    ]
  ],
  "call": [
    [
      "astropy/samp/hub_proxy.py",
      [
        "SAMPHubProxy",
        "call"
      ]
    ],
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "call"
      ]
    ]
  ],
  "call_all": [
    [
      "astropy/samp/hub_proxy.py",
      [
        "SAMPHubProxy",
        "call_all"
      ]
    ],
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "call_all"
      ]
    ]
  ],
  "call_and_wait": [
    [
      "astropy/samp/hub_proxy.py",
      [
        "SAMPHubProxy",
        "call_and_wait"
      ]
    ],
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "call_and_wait"
      ]
    ]
  ],
  "reply": [
    [
      "astropy/samp/hub_proxy.py",
      [
        "SAMPHubProxy",
        "reply"
      ]
    ],
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "reply"
      ]
    ]
  ],
  "hub_script": [
    [
      "astropy/samp/hub_script.py",
      [
        "hub_script"
      ]
    ]
  ],
  "_format_easy_msg": [
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "_format_easy_msg"
      ]
    ]
  ],
  "enotify": [
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "enotify"
      ]
    ]
  ],
  "enotify_all": [
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "enotify_all"
      ]
    ]
  ],
  "ecall": [
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "ecall"
      ]
    ]
  ],
  "ecall_all": [
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "ecall_all"
      ]
    ]
  ],
  "ecall_and_wait": [
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "ecall_and_wait"
      ]
    ]
  ],
  "_format_easy_response": [
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "_format_easy_response"
      ]
    ]
  ],
  "ereply": [
    [
      "astropy/samp/integrated_client.py",
      [
        "SAMPIntegratedClient",
        "ereply"
      ]
    ]
  ],
  "read_lockfile": [
    [
      "astropy/samp/lockfile_helpers.py",
      [
        "read_lockfile"
      ]
    ]
  ],
  "write_lockfile": [
    [
      "astropy/samp/lockfile_helpers.py",
      [
        "write_lockfile"
      ]
    ]
  ],
  "create_lock_file": [
    [
      "astropy/samp/lockfile_helpers.py",
      [
        "create_lock_file"
      ]
    ]
  ],
  "get_main_running_hub": [
    [
      "astropy/samp/lockfile_helpers.py",
      [
        "get_main_running_hub"
      ]
    ]
  ],
  "get_running_hubs": [
    [
      "astropy/samp/lockfile_helpers.py",
      [
        "get_running_hubs"
      ]
    ]
  ],
  "check_running_hub": [
    [
      "astropy/samp/lockfile_helpers.py",
      [
        "check_running_hub"
      ]
    ]
  ],
  "remove_garbage_lock_files": [
    [
      "astropy/samp/lockfile_helpers.py",
      [
        "remove_garbage_lock_files"
      ]
    ]
  ],
  "do_GET": [
    [
      "astropy/samp/standard_profile.py",
      [
        "SAMPSimpleXMLRPCRequestHandler",
        "do_GET"
      ]
    ],
    [
      "astropy/samp/web_profile.py",
      [
        "WebProfileRequestHandler",
        "do_GET"
      ]
    ]
  ],
  "do_POST": [
    [
      "astropy/samp/standard_profile.py",
      [
        "SAMPSimpleXMLRPCRequestHandler",
        "do_POST"
      ]
    ],
    [
      "astropy/samp/web_profile.py",
      [
        "WebProfileRequestHandler",
        "do_POST"
      ]
    ]
  ],
  "handle_error": [
    [
      "astropy/samp/standard_profile.py",
      [
        "ThreadingXMLRPCServer",
        "handle_error"
      ]
    ]
  ],
  "test_SAMPHubProxy": [
    [
      "astropy/samp/tests/test_client.py",
      [
        "test_SAMPHubProxy"
      ]
    ]
  ],
  "test_SAMPClient": [
    [
      "astropy/samp/tests/test_client.py",
      [
        "test_SAMPClient"
      ]
    ]
  ],
  "test_SAMPIntegratedClient": [
    [
      "astropy/samp/tests/test_client.py",
      [
        "test_SAMPIntegratedClient"
      ]
    ]
  ],
  "samp_hub": [
    [
      "astropy/samp/tests/test_client.py",
      [
        "samp_hub"
      ]
    ]
  ],
  "test_reconnect": [
    [
      "astropy/samp/tests/test_client.py",
      [
        "test_reconnect"
      ]
    ]
  ],
  "test_SAMPHubError": [
    [
      "astropy/samp/tests/test_errors.py",
      [
        "test_SAMPHubError"
      ]
    ]
  ],
  "test_SAMPClientError": [
    [
      "astropy/samp/tests/test_errors.py",
      [
        "test_SAMPClientError"
      ]
    ]
  ],
  "test_SAMPProxyError": [
    [
      "astropy/samp/tests/test_errors.py",
      [
        "test_SAMPProxyError"
      ]
    ]
  ],
  "write_output": [
    [
      "astropy/samp/tests/test_helpers.py",
      [
        "write_output"
      ]
    ]
  ],
  "assert_output": [
    [
      "astropy/samp/tests/test_helpers.py",
      [
        "assert_output"
      ]
    ]
  ],
  "random_id": [
    [
      "astropy/samp/tests/test_helpers.py",
      [
        "random_id"
      ]
    ]
  ],
  "random_params": [
    [
      "astropy/samp/tests/test_helpers.py",
      [
        "random_params"
      ]
    ]
  ],
  "test_SAMPHubServer": [
    [
      "astropy/samp/tests/test_hub.py",
      [
        "test_SAMPHubServer"
      ]
    ]
  ],
  "test_SAMPHubServer_run": [
    [
      "astropy/samp/tests/test_hub.py",
      [
        "test_SAMPHubServer_run"
      ]
    ]
  ],
  "test_SAMPHubServer_run_repeated": [
    [
      "astropy/samp/tests/test_hub.py",
      [
        "test_SAMPHubServer_run_repeated"
      ]
    ]
  ],
  "teardown_method": [
    [
      "astropy/samp/tests/test_hub_proxy.py",
      [
        "TestHubProxy",
        "teardown_method"
      ]
    ],
    [
      "astropy/samp/tests/test_standard_profile.py",
      [
        "TestStandardProfile",
        "teardown_method"
      ]
    ],
    [
      "astropy/samp/tests/test_web_profile.py",
      [
        "TestWebProfile",
        "teardown_method"
      ]
    ],
    [
      "astropy/units/tests/test_aliases.py",
      [
        "TestAliases",
        "teardown_method"
      ]
    ],
    [
      "astropy/units/tests/test_physical.py",
      [
        "TestDefPhysType",
        "teardown_method"
      ]
    ],
    [
      "astropy/utils/iers/tests/test_iers.py",
      [
        "TestIERS_Auto",
        "teardown_method"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedNDArraySubclassCreation",
        "teardown_method"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/tests/test_display_world_coordinates.py",
      [
        "TestDisplayWorldCoordinate",
        "teardown_method"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "BaseImageTests",
        "teardown_method"
      ]
    ]
  ],
  "test_is_connected": [
    [
      "astropy/samp/tests/test_hub_proxy.py",
      [
        "TestHubProxy",
        "test_is_connected"
      ]
    ]
  ],
  "test_disconnect": [
    [
      "astropy/samp/tests/test_hub_proxy.py",
      [
        "TestHubProxy",
        "test_disconnect"
      ]
    ]
  ],
  "test_ping": [
    [
      "astropy/samp/tests/test_hub_proxy.py",
      [
        "TestHubProxy",
        "test_ping"
      ]
    ]
  ],
  "test_registration": [
    [
      "astropy/samp/tests/test_hub_proxy.py",
      [
        "TestHubProxy",
        "test_registration"
      ]
    ]
  ],
  "test_custom_lockfile": [
    [
      "astropy/samp/tests/test_hub_proxy.py",
      [
        "test_custom_lockfile"
      ]
    ]
  ],
  "test_hub_script": [
    [
      "astropy/samp/tests/test_hub_script.py",
      [
        "test_hub_script"
      ]
    ]
  ],
  "hub_init_kwargs": [
    [
      "astropy/samp/tests/test_standard_profile.py",
      [
        "TestStandardProfile",
        "hub_init_kwargs"
      ]
    ]
  ],
  "client_init_kwargs": [
    [
      "astropy/samp/tests/test_standard_profile.py",
      [
        "TestStandardProfile",
        "client_init_kwargs"
      ]
    ]
  ],
  "client_connect_kwargs": [
    [
      "astropy/samp/tests/test_standard_profile.py",
      [
        "TestStandardProfile",
        "client_connect_kwargs"
      ]
    ]
  ],
  "test_main": [
    [
      "astropy/samp/tests/test_standard_profile.py",
      [
        "TestStandardProfile",
        "test_main"
      ]
    ]
  ],
  "test_web_profile": [
    [
      "astropy/samp/tests/test_web_profile.py",
      [
        "TestWebProfile",
        "test_web_profile"
      ]
    ]
  ],
  "show_dialog": [
    [
      "astropy/samp/tests/web_profile_test_helpers.py",
      [
        "AlwaysApproveWebProfileDialog",
        "show_dialog"
      ]
    ]
  ],
  "poll": [
    [
      "astropy/samp/tests/web_profile_test_helpers.py",
      [
        "AlwaysApproveWebProfileDialog",
        "poll"
      ]
    ]
  ],
  "allow_reverse_callbacks": [
    [
      "astropy/samp/tests/web_profile_test_helpers.py",
      [
        "SAMPWebHubProxy",
        "allow_reverse_callbacks"
      ]
    ]
  ],
  "pull_callbacks": [
    [
      "astropy/samp/tests/web_profile_test_helpers.py",
      [
        "SAMPWebHubProxy",
        "pull_callbacks"
      ]
    ]
  ],
  "internet_on": [
    [
      "astropy/samp/utils.py",
      [
        "internet_on"
      ]
    ]
  ],
  "getattr_recursive": [
    [
      "astropy/samp/utils.py",
      [
        "getattr_recursive"
      ]
    ]
  ],
  "shutdown": [
    [
      "astropy/samp/utils.py",
      [
        "ServerProxyPool",
        "shutdown"
      ]
    ]
  ],
  "get_num_args": [
    [
      "astropy/samp/utils.py",
      [
        "get_num_args"
      ]
    ]
  ],
  "_send_CORS_header": [
    [
      "astropy/samp/web_profile.py",
      [
        "WebProfileRequestHandler",
        "_send_CORS_header"
      ]
    ]
  ],
  "end_headers": [
    [
      "astropy/samp/web_profile.py",
      [
        "WebProfileRequestHandler",
        "end_headers"
      ]
    ]
  ],
  "_serve_cross_domain_xml": [
    [
      "astropy/samp/web_profile.py",
      [
        "WebProfileRequestHandler",
        "_serve_cross_domain_xml"
      ]
    ]
  ],
  "do_HEAD": [
    [
      "astropy/samp/web_profile.py",
      [
        "WebProfileRequestHandler",
        "do_HEAD"
      ]
    ]
  ],
  "do_OPTIONS": [
    [
      "astropy/samp/web_profile.py",
      [
        "WebProfileRequestHandler",
        "do_OPTIONS"
      ]
    ]
  ],
  "is_http_path_valid": [
    [
      "astropy/samp/web_profile.py",
      [
        "WebProfileRequestHandler",
        "is_http_path_valid"
      ]
    ]
  ],
  "add_client": [
    [
      "astropy/samp/web_profile.py",
      [
        "WebProfileXMLRPCServer",
        "add_client"
      ]
    ]
  ],
  "remove_client": [
    [
      "astropy/samp/web_profile.py",
      [
        "WebProfileXMLRPCServer",
        "remove_client"
      ]
    ]
  ],
  "web_profile_text_dialog": [
    [
      "astropy/samp/web_profile.py",
      [
        "web_profile_text_dialog"
      ]
    ]
  ],
  "bayesian_blocks": [
    [
      "astropy/stats/bayesian_blocks.py",
      [
        "bayesian_blocks"
      ]
    ]
  ],
  "validate_input": [
    [
      "astropy/stats/bayesian_blocks.py",
      [
        "FitnessFunc",
        "validate_input"
      ]
    ],
    [
      "astropy/stats/bayesian_blocks.py",
      [
        "Events",
        "validate_input"
      ]
    ],
    [
      "astropy/stats/bayesian_blocks.py",
      [
        "RegularEvents",
        "validate_input"
      ]
    ],
    [
      "astropy/stats/bayesian_blocks.py",
      [
        "PointMeasures",
        "validate_input"
      ]
    ]
  ],
  "fitness": [
    [
      "astropy/stats/bayesian_blocks.py",
      [
        "FitnessFunc",
        "fitness"
      ]
    ],
    [
      "astropy/stats/bayesian_blocks.py",
      [
        "Events",
        "fitness"
      ]
    ],
    [
      "astropy/stats/bayesian_blocks.py",
      [
        "RegularEvents",
        "fitness"
      ]
    ],
    [
      "astropy/stats/bayesian_blocks.py",
      [
        "PointMeasures",
        "fitness"
      ]
    ]
  ],
  "p0_prior": [
    [
      "astropy/stats/bayesian_blocks.py",
      [
        "FitnessFunc",
        "p0_prior"
      ]
    ]
  ],
  "_fitness_args": [
    [
      "astropy/stats/bayesian_blocks.py",
      [
        "FitnessFunc",
        "_fitness_args"
      ]
    ]
  ],
  "compute_ncp_prior": [
    [
      "astropy/stats/bayesian_blocks.py",
      [
        "FitnessFunc",
        "compute_ncp_prior"
      ]
    ]
  ],
  "fit": [
    [
      "astropy/stats/bayesian_blocks.py",
      [
        "FitnessFunc",
        "fit"
      ]
    ]
  ],
  "_stat_functions": [
    [
      "astropy/stats/biweight.py",
      [
        "_stat_functions"
      ]
    ]
  ],
  "biweight_location": [
    [
      "astropy/stats/biweight.py",
      [
        "biweight_location"
      ]
    ]
  ],
  "biweight_scale": [
    [
      "astropy/stats/biweight.py",
      [
        "biweight_scale"
      ]
    ]
  ],
  "biweight_midvariance": [
    [
      "astropy/stats/biweight.py",
      [
        "biweight_midvariance"
      ]
    ]
  ],
  "biweight_midcovariance": [
    [
      "astropy/stats/biweight.py",
      [
        "biweight_midcovariance"
      ]
    ]
  ],
  "biweight_midcorrelation": [
    [
      "astropy/stats/biweight.py",
      [
        "biweight_midcorrelation"
      ]
    ]
  ],
  "_components": [
    [
      "astropy/stats/circstats.py",
      [
        "_components"
      ]
    ]
  ],
  "_angle": [
    [
      "astropy/stats/circstats.py",
      [
        "_angle"
      ]
    ]
  ],
  "_length": [
    [
      "astropy/stats/circstats.py",
      [
        "_length"
      ]
    ]
  ],
  "circmean": [
    [
      "astropy/stats/circstats.py",
      [
        "circmean"
      ]
    ]
  ],
  "circvar": [
    [
      "astropy/stats/circstats.py",
      [
        "circvar"
      ]
    ]
  ],
  "circstd": [
    [
      "astropy/stats/circstats.py",
      [
        "circstd"
      ]
    ]
  ],
  "circmoment": [
    [
      "astropy/stats/circstats.py",
      [
        "circmoment"
      ]
    ]
  ],
  "circcorrcoef": [
    [
      "astropy/stats/circstats.py",
      [
        "circcorrcoef"
      ]
    ]
  ],
  "rayleightest": [
    [
      "astropy/stats/circstats.py",
      [
        "rayleightest"
      ]
    ]
  ],
  "vtest": [
    [
      "astropy/stats/circstats.py",
      [
        "vtest"
      ]
    ]
  ],
  "_A1inv": [
    [
      "astropy/stats/circstats.py",
      [
        "_A1inv"
      ]
    ]
  ],
  "vonmisesmle": [
    [
      "astropy/stats/circstats.py",
      [
        "vonmisesmle"
      ]
    ]
  ],
  "_expand_dims": [
    [
      "astropy/stats/funcs.py",
      [
        "_expand_dims"
      ]
    ]
  ],
  "binom_conf_interval": [
    [
      "astropy/stats/funcs.py",
      [
        "binom_conf_interval"
      ]
    ]
  ],
  "binned_binom_proportion": [
    [
      "astropy/stats/funcs.py",
      [
        "binned_binom_proportion"
      ]
    ]
  ],
  "_check_poisson_conf_inputs": [
    [
      "astropy/stats/funcs.py",
      [
        "_check_poisson_conf_inputs"
      ]
    ]
  ],
  "poisson_conf_interval": [
    [
      "astropy/stats/funcs.py",
      [
        "poisson_conf_interval"
      ]
    ]
  ],
  "median_absolute_deviation": [
    [
      "astropy/stats/funcs.py",
      [
        "median_absolute_deviation"
      ]
    ]
  ],
  "mad_std": [
    [
      "astropy/stats/funcs.py",
      [
        "mad_std"
      ]
    ]
  ],
  "signal_to_noise_oir_ccd": [
    [
      "astropy/stats/funcs.py",
      [
        "signal_to_noise_oir_ccd"
      ]
    ]
  ],
  "bootstrap": [
    [
      "astropy/stats/funcs.py",
      [
        "bootstrap"
      ]
    ]
  ],
  "eqn8": [
    [
      "astropy/stats/funcs.py",
      [
        "_scipy_kraft_burrows_nousek",
        "eqn8"
      ]
    ],
    [
      "astropy/stats/funcs.py",
      [
        "_mpmath_kraft_burrows_nousek",
        "eqn8"
      ]
    ]
  ],
  "eqn7": [
    [
      "astropy/stats/funcs.py",
      [
        "_scipy_kraft_burrows_nousek",
        "eqn7"
      ]
    ],
    [
      "astropy/stats/funcs.py",
      [
        "_mpmath_kraft_burrows_nousek",
        "eqn7"
      ]
    ]
  ],
  "eqn9_left": [
    [
      "astropy/stats/funcs.py",
      [
        "_scipy_kraft_burrows_nousek",
        "eqn9_left"
      ]
    ],
    [
      "astropy/stats/funcs.py",
      [
        "_mpmath_kraft_burrows_nousek",
        "eqn9_left"
      ]
    ]
  ],
  "find_s_min": [
    [
      "astropy/stats/funcs.py",
      [
        "_scipy_kraft_burrows_nousek",
        "find_s_min"
      ]
    ],
    [
      "astropy/stats/funcs.py",
      [
        "_mpmath_kraft_burrows_nousek",
        "find_s_min"
      ]
    ]
  ],
  "func": [
    [
      "astropy/stats/funcs.py",
      [
        "_scipy_kraft_burrows_nousek",
        "func"
      ]
    ],
    [
      "astropy/stats/funcs.py",
      [
        "_mpmath_kraft_burrows_nousek",
        "func"
      ]
    ],
    [
      "astropy/utils/data_info.py",
      [
        "data_info_factory",
        "func"
      ]
    ],
    [
      "astropy/utils/tests/test_progress_bar_func.py",
      [
        "func"
      ]
    ]
  ],
  "_scipy_kraft_burrows_nousek": [
    [
      "astropy/stats/funcs.py",
      [
        "_scipy_kraft_burrows_nousek"
      ]
    ]
  ],
  "_mpmath_kraft_burrows_nousek": [
    [
      "astropy/stats/funcs.py",
      [
        "_mpmath_kraft_burrows_nousek"
      ]
    ]
  ],
  "_kraft_burrows_nousek": [
    [
      "astropy/stats/funcs.py",
      [
        "_kraft_burrows_nousek"
      ]
    ]
  ],
  "kuiper_false_positive_probability": [
    [
      "astropy/stats/funcs.py",
      [
        "kuiper_false_positive_probability"
      ]
    ]
  ],
  "kuiper": [
    [
      "astropy/stats/funcs.py",
      [
        "kuiper"
      ]
    ]
  ],
  "kuiper_two": [
    [
      "astropy/stats/funcs.py",
      [
        "kuiper_two"
      ]
    ]
  ],
  "fold_intervals": [
    [
      "astropy/stats/funcs.py",
      [
        "fold_intervals"
      ]
    ]
  ],
  "cdf_from_intervals": [
    [
      "astropy/stats/funcs.py",
      [
        "cdf_from_intervals"
      ]
    ]
  ],
  "interval_overlap_length": [
    [
      "astropy/stats/funcs.py",
      [
        "interval_overlap_length"
      ]
    ]
  ],
  "histogram_intervals": [
    [
      "astropy/stats/funcs.py",
      [
        "histogram_intervals"
      ]
    ]
  ],
  "calculate_bin_edges": [
    [
      "astropy/stats/histogram.py",
      [
        "calculate_bin_edges"
      ]
    ]
  ],
  "histogram": [
    [
      "astropy/stats/histogram.py",
      [
        "histogram"
      ]
    ],
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "histogram"
      ]
    ]
  ],
  "scott_bin_width": [
    [
      "astropy/stats/histogram.py",
      [
        "scott_bin_width"
      ]
    ]
  ],
  "freedman_bin_width": [
    [
      "astropy/stats/histogram.py",
      [
        "freedman_bin_width"
      ]
    ]
  ],
  "knuth_bin_width": [
    [
      "astropy/stats/histogram.py",
      [
        "knuth_bin_width"
      ]
    ]
  ],
  "bins": [
    [
      "astropy/stats/histogram.py",
      [
        "_KnuthF",
        "bins"
      ]
    ]
  ],
  "eval": [
    [
      "astropy/stats/histogram.py",
      [
        "_KnuthF",
        "eval"
      ]
    ]
  ],
  "bayesian_info_criterion": [
    [
      "astropy/stats/info_theory.py",
      [
        "bayesian_info_criterion"
      ]
    ]
  ],
  "bayesian_info_criterion_lsq": [
    [
      "astropy/stats/info_theory.py",
      [
        "bayesian_info_criterion_lsq"
      ]
    ]
  ],
  "akaike_info_criterion": [
    [
      "astropy/stats/info_theory.py",
      [
        "akaike_info_criterion"
      ]
    ]
  ],
  "akaike_info_criterion_lsq": [
    [
      "astropy/stats/info_theory.py",
      [
        "akaike_info_criterion_lsq"
      ]
    ]
  ],
  "jackknife_resampling": [
    [
      "astropy/stats/jackknife.py",
      [
        "jackknife_resampling"
      ]
    ]
  ],
  "jackknife_stats": [
    [
      "astropy/stats/jackknife.py",
      [
        "jackknife_stats"
      ]
    ]
  ],
  "_move_tuple_axes_first": [
    [
      "astropy/stats/sigma_clipping.py",
      [
        "_move_tuple_axes_first"
      ]
    ]
  ],
  "_nanmean": [
    [
      "astropy/stats/sigma_clipping.py",
      [
        "_nanmean"
      ]
    ]
  ],
  "_nanmedian": [
    [
      "astropy/stats/sigma_clipping.py",
      [
        "_nanmedian"
      ]
    ]
  ],
  "_nanstd": [
    [
      "astropy/stats/sigma_clipping.py",
      [
        "_nanstd"
      ]
    ]
  ],
  "_nanmadstd": [
    [
      "astropy/stats/sigma_clipping.py",
      [
        "_nanmadstd"
      ]
    ]
  ],
  "_parse_cenfunc": [
    [
      "astropy/stats/sigma_clipping.py",
      [
        "SigmaClip",
        "_parse_cenfunc"
      ]
    ]
  ],
  "_parse_stdfunc": [
    [
      "astropy/stats/sigma_clipping.py",
      [
        "SigmaClip",
        "_parse_stdfunc"
      ]
    ]
  ],
  "_compute_bounds": [
    [
      "astropy/stats/sigma_clipping.py",
      [
        "SigmaClip",
        "_compute_bounds"
      ]
    ]
  ],
  "_sigmaclip_fast": [
    [
      "astropy/stats/sigma_clipping.py",
      [
        "SigmaClip",
        "_sigmaclip_fast"
      ]
    ]
  ],
  "_sigmaclip_noaxis": [
    [
      "astropy/stats/sigma_clipping.py",
      [
        "SigmaClip",
        "_sigmaclip_noaxis"
      ]
    ]
  ],
  "_sigmaclip_withaxis": [
    [
      "astropy/stats/sigma_clipping.py",
      [
        "SigmaClip",
        "_sigmaclip_withaxis"
      ]
    ]
  ],
  "sigma_clip": [
    [
      "astropy/stats/sigma_clipping.py",
      [
        "sigma_clip"
      ]
    ]
  ],
  "sigma_clipped_stats": [
    [
      "astropy/stats/sigma_clipping.py",
      [
        "sigma_clipped_stats"
      ]
    ]
  ],
  "area": [
    [
      "astropy/stats/spatial.py",
      [
        "RipleysKEstimator",
        "area"
      ]
    ]
  ],
  "area_1": [
    [
      "astropy/stats/spatial.py",
      [
        "RipleysKEstimator",
        "area_1"
      ]
    ]
  ],
  "y_max": [
    [
      "astropy/stats/spatial.py",
      [
        "RipleysKEstimator",
        "y_max"
      ]
    ]
  ],
  "y_max_3": [
    [
      "astropy/stats/spatial.py",
      [
        "RipleysKEstimator",
        "y_max_3"
      ]
    ]
  ],
  "x_max": [
    [
      "astropy/stats/spatial.py",
      [
        "RipleysKEstimator",
        "x_max"
      ]
    ]
  ],
  "x_max_5": [
    [
      "astropy/stats/spatial.py",
      [
        "RipleysKEstimator",
        "x_max_5"
      ]
    ]
  ],
  "y_min": [
    [
      "astropy/stats/spatial.py",
      [
        "RipleysKEstimator",
        "y_min"
      ]
    ]
  ],
  "y_min_7": [
    [
      "astropy/stats/spatial.py",
      [
        "RipleysKEstimator",
        "y_min_7"
      ]
    ]
  ],
  "x_min": [
    [
      "astropy/stats/spatial.py",
      [
        "RipleysKEstimator",
        "x_min"
      ]
    ]
  ],
  "x_min_9": [
    [
      "astropy/stats/spatial.py",
      [
        "RipleysKEstimator",
        "x_min_9"
      ]
    ]
  ],
  "_pairwise_diffs": [
    [
      "astropy/stats/spatial.py",
      [
        "RipleysKEstimator",
        "_pairwise_diffs"
      ]
    ]
  ],
  "poisson": [
    [
      "astropy/stats/spatial.py",
      [
        "RipleysKEstimator",
        "poisson"
      ]
    ],
    [
      "astropy/uncertainty/distributions.py",
      [
        "poisson"
      ]
    ]
  ],
  "Lfunction": [
    [
      "astropy/stats/spatial.py",
      [
        "RipleysKEstimator",
        "Lfunction"
      ]
    ]
  ],
  "Hfunction": [
    [
      "astropy/stats/spatial.py",
      [
        "RipleysKEstimator",
        "Hfunction"
      ]
    ]
  ],
  "test_single_change_point": [
    [
      "astropy/stats/tests/test_bayesian_blocks.py",
      [
        "test_single_change_point"
      ]
    ]
  ],
  "test_duplicate_events": [
    [
      "astropy/stats/tests/test_bayesian_blocks.py",
      [
        "test_duplicate_events"
      ]
    ]
  ],
  "test_measures_fitness_homoscedastic": [
    [
      "astropy/stats/tests/test_bayesian_blocks.py",
      [
        "test_measures_fitness_homoscedastic"
      ]
    ]
  ],
  "test_measures_fitness_heteroscedastic": [
    [
      "astropy/stats/tests/test_bayesian_blocks.py",
      [
        "test_measures_fitness_heteroscedastic"
      ]
    ]
  ],
  "test_regular_events": [
    [
      "astropy/stats/tests/test_bayesian_blocks.py",
      [
        "test_regular_events"
      ]
    ]
  ],
  "test_errors": [
    [
      "astropy/stats/tests/test_bayesian_blocks.py",
      [
        "test_errors"
      ]
    ]
  ],
  "test_fitness_function_results": [
    [
      "astropy/stats/tests/test_bayesian_blocks.py",
      [
        "test_fitness_function_results"
      ]
    ]
  ],
  "test_zero_change_points": [
    [
      "astropy/stats/tests/test_bayesian_blocks.py",
      [
        "test_zero_change_points"
      ]
    ]
  ],
  "test_biweight_location": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_location"
      ]
    ]
  ],
  "test_biweight_location_constant": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_location_constant"
      ]
    ]
  ],
  "test_biweight_location_constant_axis_2d": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_location_constant_axis_2d"
      ]
    ]
  ],
  "test_biweight_location_constant_axis_3d": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_location_constant_axis_3d"
      ]
    ]
  ],
  "test_biweight_location_small": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_location_small"
      ]
    ]
  ],
  "test_biweight_location_axis": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_location_axis"
      ]
    ]
  ],
  "test_biweight_location_axis_3d": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_location_axis_3d"
      ]
    ]
  ],
  "test_biweight_location_axis_tuple": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_location_axis_tuple"
      ]
    ]
  ],
  "test_biweight_location_ignore_nan": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_location_ignore_nan"
      ]
    ]
  ],
  "test_biweight_location_nan": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_location_nan"
      ]
    ]
  ],
  "test_biweight_location_masked": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_location_masked"
      ]
    ]
  ],
  "test_biweight_scale": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_scale"
      ]
    ]
  ],
  "test_biweight_midvariance": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_midvariance"
      ]
    ]
  ],
  "test_biweight_midvariance_small": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_midvariance_small"
      ]
    ]
  ],
  "test_biweight_midvariance_5127": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_midvariance_5127"
      ]
    ]
  ],
  "test_biweight_midvariance_axis": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_midvariance_axis"
      ]
    ]
  ],
  "test_biweight_midvariance_axis_3d": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_midvariance_axis_3d"
      ]
    ]
  ],
  "test_biweight_midvariance_ignore_nan": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_midvariance_ignore_nan"
      ]
    ]
  ],
  "test_biweight_scale_nan": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_scale_nan"
      ]
    ]
  ],
  "test_biweight_midvariance_masked": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_midvariance_masked"
      ]
    ]
  ],
  "test_biweight_scale_axis_tuple": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_scale_axis_tuple"
      ]
    ]
  ],
  "test_biweight_midvariance_constant_axis": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_midvariance_constant_axis"
      ]
    ]
  ],
  "test_biweight_midvariance_constant_axis_2d": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_midvariance_constant_axis_2d"
      ]
    ]
  ],
  "test_biweight_midvariance_constant_axis_3d": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_midvariance_constant_axis_3d"
      ]
    ]
  ],
  "test_biweight_midcovariance_1d": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_midcovariance_1d"
      ]
    ]
  ],
  "test_biweight_midcovariance_2d": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_midcovariance_2d"
      ]
    ]
  ],
  "test_biweight_midcovariance_constant": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_midcovariance_constant"
      ]
    ]
  ],
  "test_biweight_midcovariance_midvariance": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_midcovariance_midvariance"
      ]
    ]
  ],
  "test_midcovariance_shape": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_midcovariance_shape"
      ]
    ]
  ],
  "test_midcovariance_M_shape": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_midcovariance_M_shape"
      ]
    ]
  ],
  "test_biweight_midcovariance_symmetric": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_midcovariance_symmetric"
      ]
    ]
  ],
  "test_biweight_midcorrelation": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_midcorrelation"
      ]
    ]
  ],
  "test_biweight_midcorrelation_inputs": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_midcorrelation_inputs"
      ]
    ]
  ],
  "test_biweight_32bit_runtime_warnings": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_32bit_runtime_warnings"
      ]
    ]
  ],
  "test_biweight_scl_var_constant_units": [
    [
      "astropy/stats/tests/test_biweight.py",
      [
        "test_biweight_scl_var_constant_units"
      ]
    ]
  ],
  "test__length": [
    [
      "astropy/stats/tests/test_circstats.py",
      [
        "test__length"
      ]
    ]
  ],
  "test_circmean": [
    [
      "astropy/stats/tests/test_circstats.py",
      [
        "test_circmean"
      ]
    ]
  ],
  "test_circmean_against_scipy": [
    [
      "astropy/stats/tests/test_circstats.py",
      [
        "test_circmean_against_scipy"
      ]
    ]
  ],
  "test_circvar": [
    [
      "astropy/stats/tests/test_circstats.py",
      [
        "test_circvar"
      ]
    ]
  ],
  "test_circmoment": [
    [
      "astropy/stats/tests/test_circstats.py",
      [
        "test_circmoment"
      ]
    ]
  ],
  "test_circcorrcoef": [
    [
      "astropy/stats/tests/test_circstats.py",
      [
        "test_circcorrcoef"
      ]
    ]
  ],
  "test_rayleightest": [
    [
      "astropy/stats/tests/test_circstats.py",
      [
        "test_rayleightest"
      ]
    ]
  ],
  "test_vtest": [
    [
      "astropy/stats/tests/test_circstats.py",
      [
        "test_vtest"
      ]
    ]
  ],
  "test_vonmisesmle": [
    [
      "astropy/stats/tests/test_circstats.py",
      [
        "test_vonmisesmle"
      ]
    ]
  ],
  "test_median_absolute_deviation": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_median_absolute_deviation"
      ]
    ]
  ],
  "test_median_absolute_deviation_masked": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_median_absolute_deviation_masked"
      ]
    ]
  ],
  "test_median_absolute_deviation_nans": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_median_absolute_deviation_nans"
      ]
    ]
  ],
  "test_median_absolute_deviation_nans_masked": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_median_absolute_deviation_nans_masked"
      ]
    ]
  ],
  "test_median_absolute_deviation_multidim_axis": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_median_absolute_deviation_multidim_axis"
      ]
    ]
  ],
  "test_median_absolute_deviation_quantity": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_median_absolute_deviation_quantity"
      ]
    ]
  ],
  "test_binom_conf_interval": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_binom_conf_interval"
      ]
    ]
  ],
  "test_binned_binom_proportion": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_binned_binom_proportion"
      ]
    ]
  ],
  "test_binned_binom_proportion_exception": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_binned_binom_proportion_exception"
      ]
    ]
  ],
  "test_signal_to_noise_oir_ccd": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_signal_to_noise_oir_ccd"
      ]
    ]
  ],
  "test_bootstrap": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_bootstrap"
      ]
    ]
  ],
  "test_bootstrap_multiple_outputs": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_bootstrap_multiple_outputs"
      ]
    ]
  ],
  "test_mad_std": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_mad_std"
      ]
    ],
    [
      "astropy/stats/tests/test_sigma_clipping.py",
      [
        "test_mad_std"
      ]
    ]
  ],
  "test_mad_std_scalar_return": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_mad_std_scalar_return"
      ]
    ]
  ],
  "test_mad_std_warns": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_mad_std_warns"
      ]
    ]
  ],
  "test_mad_std_withnan": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_mad_std_withnan"
      ]
    ]
  ],
  "test_mad_std_with_axis": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_mad_std_with_axis"
      ]
    ]
  ],
  "test_mad_std_with_axis_and_nan": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_mad_std_with_axis_and_nan"
      ]
    ]
  ],
  "test_mad_std_with_axis_and_nan_array_type": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_mad_std_with_axis_and_nan_array_type"
      ]
    ]
  ],
  "test_gaussian_fwhm_to_sigma": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_gaussian_fwhm_to_sigma"
      ]
    ]
  ],
  "test_gaussian_sigma_to_fwhm": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_gaussian_sigma_to_fwhm"
      ]
    ]
  ],
  "test_gaussian_sigma_to_fwhm_to_sigma": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_gaussian_sigma_to_fwhm_to_sigma"
      ]
    ]
  ],
  "test_poisson_conf_interval_rootn": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_poisson_conf_interval_rootn"
      ]
    ]
  ],
  "test_poisson_conf_large": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_poisson_conf_large"
      ]
    ]
  ],
  "test_poisson_conf_array_rootn0_zero": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_poisson_conf_array_rootn0_zero"
      ]
    ]
  ],
  "test_poisson_conf_array_frequentist_confidence_zero": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_poisson_conf_array_frequentist_confidence_zero"
      ]
    ]
  ],
  "test_poisson_conf_list_rootn0_zero": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_poisson_conf_list_rootn0_zero"
      ]
    ]
  ],
  "test_poisson_conf_array_rootn0": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_poisson_conf_array_rootn0"
      ]
    ]
  ],
  "test_poisson_conf_array_fc": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_poisson_conf_array_fc"
      ]
    ]
  ],
  "test_poisson_conf_frequentist_confidence_gehrels": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_poisson_conf_frequentist_confidence_gehrels"
      ]
    ]
  ],
  "test_poisson_conf_frequentist_confidence_gehrels_2sigma": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_poisson_conf_frequentist_confidence_gehrels_2sigma"
      ]
    ]
  ],
  "test_poisson_conf_frequentist_confidence_gehrels_3sigma": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_poisson_conf_frequentist_confidence_gehrels_3sigma"
      ]
    ]
  ],
  "test_poisson_conf_gehrels86": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_poisson_conf_gehrels86"
      ]
    ]
  ],
  "test_scipy_poisson_limit": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_scipy_poisson_limit"
      ]
    ]
  ],
  "test_mpmath_poisson_limit": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_mpmath_poisson_limit"
      ]
    ]
  ],
  "test_poisson_conf_value_errors": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_poisson_conf_value_errors"
      ]
    ]
  ],
  "test_poisson_conf_kbn_value_errors": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_poisson_conf_kbn_value_errors"
      ]
    ]
  ],
  "test_poisson_limit_nodependencies": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_poisson_limit_nodependencies"
      ]
    ]
  ],
  "test_uniform": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_uniform"
      ]
    ]
  ],
  "test_kuiper_two_uniform": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_kuiper_two_uniform"
      ]
    ]
  ],
  "test_kuiper_two_nonuniform": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_kuiper_two_nonuniform"
      ]
    ]
  ],
  "test_detect_kuiper_two_different": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_detect_kuiper_two_different"
      ]
    ]
  ],
  "test_fpp_kuiper_two": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_fpp_kuiper_two"
      ]
    ]
  ],
  "test_kuiper_false_positive_probability": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_kuiper_false_positive_probability"
      ]
    ]
  ],
  "test_histogram": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_histogram"
      ]
    ],
    [
      "astropy/stats/tests/test_histogram.py",
      [
        "test_histogram"
      ]
    ],
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "test_histogram"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestHistogramFunctions",
        "test_histogram"
      ]
    ]
  ],
  "test_histogram_intervals_known": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_histogram_intervals_known"
      ]
    ]
  ],
  "test_uniform_binomial": [
    [
      "astropy/stats/tests/test_funcs.py",
      [
        "test_uniform_binomial"
      ]
    ]
  ],
  "test_scott_bin_width": [
    [
      "astropy/stats/tests/test_histogram.py",
      [
        "test_scott_bin_width"
      ]
    ]
  ],
  "test_freedman_bin_width": [
    [
      "astropy/stats/tests/test_histogram.py",
      [
        "test_freedman_bin_width"
      ]
    ]
  ],
  "test_knuth_bin_width": [
    [
      "astropy/stats/tests/test_histogram.py",
      [
        "test_knuth_bin_width"
      ]
    ]
  ],
  "test_knuth_histogram": [
    [
      "astropy/stats/tests/test_histogram.py",
      [
        "test_knuth_histogram"
      ]
    ]
  ],
  "test_histogram_range": [
    [
      "astropy/stats/tests/test_histogram.py",
      [
        "test_histogram_range"
      ]
    ]
  ],
  "test_histogram_range_with_bins_list": [
    [
      "astropy/stats/tests/test_histogram.py",
      [
        "test_histogram_range_with_bins_list"
      ]
    ]
  ],
  "test_histogram_output_knuth": [
    [
      "astropy/stats/tests/test_histogram.py",
      [
        "test_histogram_output_knuth"
      ]
    ]
  ],
  "test_histogram_output": [
    [
      "astropy/stats/tests/test_histogram.py",
      [
        "test_histogram_output"
      ]
    ]
  ],
  "test_histogram_badargs": [
    [
      "astropy/stats/tests/test_histogram.py",
      [
        "test_histogram_badargs"
      ]
    ]
  ],
  "test_bayesian_info_criterion": [
    [
      "astropy/stats/tests/test_info_theory.py",
      [
        "test_bayesian_info_criterion"
      ]
    ]
  ],
  "test_akaike_info_criterion": [
    [
      "astropy/stats/tests/test_info_theory.py",
      [
        "test_akaike_info_criterion"
      ]
    ]
  ],
  "test_akaike_info_criterion_lsq": [
    [
      "astropy/stats/tests/test_info_theory.py",
      [
        "test_akaike_info_criterion_lsq"
      ]
    ]
  ],
  "test_bayesian_info_criterion_lsq": [
    [
      "astropy/stats/tests/test_info_theory.py",
      [
        "test_bayesian_info_criterion_lsq"
      ]
    ]
  ],
  "test_jackknife_resampling": [
    [
      "astropy/stats/tests/test_jackknife.py",
      [
        "test_jackknife_resampling"
      ]
    ]
  ],
  "test_jackknife_stats": [
    [
      "astropy/stats/tests/test_jackknife.py",
      [
        "test_jackknife_stats"
      ]
    ]
  ],
  "test_jackknife_stats_conf_interval": [
    [
      "astropy/stats/tests/test_jackknife.py",
      [
        "test_jackknife_stats_conf_interval"
      ]
    ]
  ],
  "test_jackknife_stats_exceptions": [
    [
      "astropy/stats/tests/test_jackknife.py",
      [
        "test_jackknife_stats_exceptions"
      ]
    ]
  ],
  "test_sigma_clip": [
    [
      "astropy/stats/tests/test_sigma_clipping.py",
      [
        "test_sigma_clip"
      ]
    ]
  ],
  "test_axis_none": [
    [
      "astropy/stats/tests/test_sigma_clipping.py",
      [
        "test_axis_none"
      ]
    ]
  ],
  "test_compare_to_scipy_sigmaclip": [
    [
      "astropy/stats/tests/test_sigma_clipping.py",
      [
        "test_compare_to_scipy_sigmaclip"
      ]
    ]
  ],
  "test_sigma_clip_scalar_mask": [
    [
      "astropy/stats/tests/test_sigma_clipping.py",
      [
        "test_sigma_clip_scalar_mask"
      ]
    ]
  ],
  "test_sigma_clip_class": [
    [
      "astropy/stats/tests/test_sigma_clipping.py",
      [
        "test_sigma_clip_class"
      ]
    ]
  ],
  "test_sigma_clip_mean": [
    [
      "astropy/stats/tests/test_sigma_clipping.py",
      [
        "test_sigma_clip_mean"
      ]
    ]
  ],
  "test_sigma_clip_invalid_cenfunc_stdfunc": [
    [
      "astropy/stats/tests/test_sigma_clipping.py",
      [
        "test_sigma_clip_invalid_cenfunc_stdfunc"
      ]
    ]
  ],
  "test_sigma_clipped_stats": [
    [
      "astropy/stats/tests/test_sigma_clipping.py",
      [
        "test_sigma_clipped_stats"
      ]
    ]
  ],
  "test_sigma_clipped_stats_ddof": [
    [
      "astropy/stats/tests/test_sigma_clipping.py",
      [
        "test_sigma_clipped_stats_ddof"
      ]
    ]
  ],
  "test_invalid_sigma_clip": [
    [
      "astropy/stats/tests/test_sigma_clipping.py",
      [
        "test_invalid_sigma_clip"
      ]
    ]
  ],
  "test_sigmaclip_negative_axis": [
    [
      "astropy/stats/tests/test_sigma_clipping.py",
      [
        "test_sigmaclip_negative_axis"
      ]
    ]
  ],
  "test_sigmaclip_fully_masked": [
    [
      "astropy/stats/tests/test_sigma_clipping.py",
      [
        "test_sigmaclip_fully_masked"
      ]
    ]
  ],
  "test_sigmaclip_empty_masked": [
    [
      "astropy/stats/tests/test_sigma_clipping.py",
      [
        "test_sigmaclip_empty_masked"
      ]
    ]
  ],
  "test_sigmaclip_empty": [
    [
      "astropy/stats/tests/test_sigma_clipping.py",
      [
        "test_sigmaclip_empty"
      ]
    ]
  ],
  "test_sigma_clip_axis_tuple_3D": [
    [
      "astropy/stats/tests/test_sigma_clipping.py",
      [
        "test_sigma_clip_axis_tuple_3D"
      ]
    ]
  ],
  "test_sigmaclip_repr": [
    [
      "astropy/stats/tests/test_sigma_clipping.py",
      [
        "test_sigmaclip_repr"
      ]
    ]
  ],
  "test_sigma_clippped_stats_unit": [
    [
      "astropy/stats/tests/test_sigma_clipping.py",
      [
        "test_sigma_clippped_stats_unit"
      ]
    ]
  ],
  "test_sigma_clippped_stats_all_masked": [
    [
      "astropy/stats/tests/test_sigma_clipping.py",
      [
        "test_sigma_clippped_stats_all_masked"
      ]
    ]
  ],
  "test_sigma_clip_masked_data_values": [
    [
      "astropy/stats/tests/test_sigma_clipping.py",
      [
        "test_sigma_clip_masked_data_values"
      ]
    ]
  ],
  "test_sigma_clip_grow": [
    [
      "astropy/stats/tests/test_sigma_clipping.py",
      [
        "test_sigma_clip_grow"
      ]
    ]
  ],
  "test_sigma_clip_axis_shapes": [
    [
      "astropy/stats/tests/test_sigma_clipping.py",
      [
        "test_sigma_clip_axis_shapes"
      ]
    ]
  ],
  "test_sigma_clip_dtypes": [
    [
      "astropy/stats/tests/test_sigma_clipping.py",
      [
        "test_sigma_clip_dtypes"
      ]
    ]
  ],
  "test_mad_std_large": [
    [
      "astropy/stats/tests/test_sigma_clipping.py",
      [
        "test_mad_std_large"
      ]
    ]
  ],
  "test_ripley_K_implementation": [
    [
      "astropy/stats/tests/test_spatial.py",
      [
        "test_ripley_K_implementation"
      ]
    ]
  ],
  "test_ripley_uniform_property": [
    [
      "astropy/stats/tests/test_spatial.py",
      [
        "test_ripley_uniform_property"
      ]
    ]
  ],
  "test_ripley_large_density": [
    [
      "astropy/stats/tests/test_spatial.py",
      [
        "test_ripley_large_density"
      ]
    ]
  ],
  "test_ripley_modes": [
    [
      "astropy/stats/tests/test_spatial.py",
      [
        "test_ripley_modes"
      ]
    ]
  ],
  "test_ripley_large_density_var_width": [
    [
      "astropy/stats/tests/test_spatial.py",
      [
        "test_ripley_large_density_var_width"
      ]
    ]
  ],
  "test_ripley_var_width": [
    [
      "astropy/stats/tests/test_spatial.py",
      [
        "test_ripley_var_width"
      ]
    ]
  ],
  "__gt__": [
    [
      "astropy/table/bst.py",
      [
        "MaxValue",
        "__gt__"
      ]
    ],
    [
      "astropy/table/bst.py",
      [
        "MinValue",
        "__gt__"
      ]
    ],
    [
      "astropy/table/bst.py",
      [
        "Epsilon",
        "__gt__"
      ]
    ],
    [
      "astropy/table/soco.py",
      [
        "Node",
        "__gt__"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "__gt__"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "__gt__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "__gt__"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionQuantity",
        "__gt__"
      ]
    ]
  ],
  "__ge__": [
    [
      "astropy/table/bst.py",
      [
        "MaxValue",
        "__ge__"
      ]
    ],
    [
      "astropy/table/bst.py",
      [
        "MinValue",
        "__ge__"
      ]
    ],
    [
      "astropy/table/soco.py",
      [
        "Node",
        "__ge__"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "__ge__"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "__ge__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "__ge__"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionQuantity",
        "__ge__"
      ]
    ]
  ],
  "__lt__": [
    [
      "astropy/table/bst.py",
      [
        "MaxValue",
        "__lt__"
      ]
    ],
    [
      "astropy/table/bst.py",
      [
        "MinValue",
        "__lt__"
      ]
    ],
    [
      "astropy/table/bst.py",
      [
        "Epsilon",
        "__lt__"
      ]
    ],
    [
      "astropy/table/soco.py",
      [
        "Node",
        "__lt__"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "__lt__"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "__lt__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "__lt__"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionQuantity",
        "__lt__"
      ]
    ],
    [
      "astropy/utils/misc.py",
      [
        "OrderedDescriptor",
        "__lt__"
      ]
    ]
  ],
  "__le__": [
    [
      "astropy/table/bst.py",
      [
        "MaxValue",
        "__le__"
      ]
    ],
    [
      "astropy/table/bst.py",
      [
        "MinValue",
        "__le__"
      ]
    ],
    [
      "astropy/table/soco.py",
      [
        "Node",
        "__le__"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "__le__"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "__le__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "__le__"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionQuantity",
        "__le__"
      ]
    ]
  ],
  "replace": [
    [
      "astropy/table/bst.py",
      [
        "Node",
        "replace"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "Index",
        "replace"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "SlicedIndex",
        "replace"
      ]
    ]
  ],
  "find": [
    [
      "astropy/table/bst.py",
      [
        "BST",
        "find"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "Index",
        "find"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "SlicedIndex",
        "find"
      ]
    ],
    [
      "astropy/table/soco.py",
      [
        "SCEngine",
        "find"
      ]
    ],
    [
      "astropy/table/sorted_array.py",
      [
        "SortedArray",
        "find"
      ]
    ]
  ],
  "find_node": [
    [
      "astropy/table/bst.py",
      [
        "BST",
        "find_node"
      ]
    ]
  ],
  "shift_left": [
    [
      "astropy/table/bst.py",
      [
        "BST",
        "shift_left"
      ]
    ],
    [
      "astropy/table/soco.py",
      [
        "SCEngine",
        "shift_left"
      ]
    ],
    [
      "astropy/table/sorted_array.py",
      [
        "SortedArray",
        "shift_left"
      ]
    ]
  ],
  "shift_right": [
    [
      "astropy/table/bst.py",
      [
        "BST",
        "shift_right"
      ]
    ],
    [
      "astropy/table/soco.py",
      [
        "SCEngine",
        "shift_right"
      ]
    ],
    [
      "astropy/table/sorted_array.py",
      [
        "SortedArray",
        "shift_right"
      ]
    ]
  ],
  "_find_recursive": [
    [
      "astropy/table/bst.py",
      [
        "BST",
        "_find_recursive"
      ]
    ]
  ],
  "sort": [
    [
      "astropy/table/bst.py",
      [
        "BST",
        "sort"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "Index",
        "sort"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "SlicedIndex",
        "sort"
      ]
    ],
    [
      "astropy/table/meta.py",
      [
        "ColumnOrderList",
        "sort"
      ]
    ],
    [
      "astropy/table/soco.py",
      [
        "SCEngine",
        "sort"
      ]
    ],
    [
      "astropy/table/sorted_array.py",
      [
        "SortedArray",
        "sort"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "sort"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "sort"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "sort"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/ticklabels.py",
      [
        "TickLabels",
        "sort"
      ]
    ]
  ],
  "sorted_data": [
    [
      "astropy/table/bst.py",
      [
        "BST",
        "sorted_data"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "Index",
        "sorted_data"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "SlicedIndex",
        "sorted_data"
      ]
    ],
    [
      "astropy/table/soco.py",
      [
        "SCEngine",
        "sorted_data"
      ]
    ],
    [
      "astropy/table/sorted_array.py",
      [
        "SortedArray",
        "sorted_data"
      ]
    ]
  ],
  "_preorder": [
    [
      "astropy/table/bst.py",
      [
        "BST",
        "_preorder"
      ]
    ]
  ],
  "_inorder": [
    [
      "astropy/table/bst.py",
      [
        "BST",
        "_inorder"
      ]
    ]
  ],
  "_postorder": [
    [
      "astropy/table/bst.py",
      [
        "BST",
        "_postorder"
      ]
    ]
  ],
  "_substitute": [
    [
      "astropy/table/bst.py",
      [
        "BST",
        "_substitute"
      ]
    ]
  ],
  "is_valid": [
    [
      "astropy/table/bst.py",
      [
        "BST",
        "is_valid"
      ]
    ]
  ],
  "_is_valid": [
    [
      "astropy/table/bst.py",
      [
        "BST",
        "_is_valid"
      ]
    ]
  ],
  "range": [
    [
      "astropy/table/bst.py",
      [
        "BST",
        "range"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "Index",
        "range"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "SlicedIndex",
        "range"
      ]
    ],
    [
      "astropy/table/soco.py",
      [
        "SCEngine",
        "range"
      ]
    ],
    [
      "astropy/table/sorted_array.py",
      [
        "SortedArray",
        "range"
      ]
    ]
  ],
  "range_nodes": [
    [
      "astropy/table/bst.py",
      [
        "BST",
        "range_nodes"
      ]
    ]
  ],
  "same_prefix": [
    [
      "astropy/table/bst.py",
      [
        "BST",
        "same_prefix"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "Index",
        "same_prefix"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "SlicedIndex",
        "same_prefix"
      ]
    ]
  ],
  "_range": [
    [
      "astropy/table/bst.py",
      [
        "BST",
        "_range"
      ]
    ]
  ],
  "_same_prefix": [
    [
      "astropy/table/bst.py",
      [
        "BST",
        "_same_prefix"
      ]
    ]
  ],
  "_print": [
    [
      "astropy/table/bst.py",
      [
        "BST",
        "_print"
      ]
    ]
  ],
  "_height": [
    [
      "astropy/table/bst.py",
      [
        "BST",
        "_height"
      ]
    ]
  ],
  "replace_rows": [
    [
      "astropy/table/bst.py",
      [
        "BST",
        "replace_rows"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "Index",
        "replace_rows"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "SlicedIndex",
        "replace_rows"
      ]
    ],
    [
      "astropy/table/soco.py",
      [
        "SCEngine",
        "replace_rows"
      ]
    ],
    [
      "astropy/table/sorted_array.py",
      [
        "SortedArray",
        "replace_rows"
      ]
    ]
  ],
  "_auto_names": [
    [
      "astropy/table/column.py",
      [
        "_auto_names"
      ]
    ]
  ],
  "col_copy": [
    [
      "astropy/table/column.py",
      [
        "col_copy"
      ]
    ]
  ],
  "_expand_string_array_for_values": [
    [
      "astropy/table/column.py",
      [
        "_expand_string_array_for_values"
      ]
    ]
  ],
  "_convert_sequence_data_to_array": [
    [
      "astropy/table/column.py",
      [
        "_convert_sequence_data_to_array"
      ]
    ]
  ],
  "_compare": [
    [
      "astropy/table/column.py",
      [
        "_make_compare",
        "_compare"
      ]
    ]
  ],
  "_make_compare": [
    [
      "astropy/table/column.py",
      [
        "_make_compare"
      ]
    ]
  ],
  "get_sortable_arrays": [
    [
      "astropy/table/column.py",
      [
        "ColumnInfo",
        "get_sortable_arrays"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeInfo",
        "get_sortable_arrays"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "QuantityInfo",
        "get_sortable_arrays"
      ]
    ],
    [
      "astropy/utils/data_info.py",
      [
        "BaseColumnInfo",
        "get_sortable_arrays"
      ]
    ]
  ],
  "parent_table": [
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "parent_table"
      ]
    ],
    [
      "astropy/utils/data_info.py",
      [
        "BaseColumnInfo",
        "parent_table"
      ]
    ]
  ],
  "parent_table_4": [
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "parent_table_4"
      ]
    ]
  ],
  "name_11": [
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "name_11"
      ]
    ]
  ],
  "format_13": [
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "format_13"
      ]
    ]
  ],
  "descr": [
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "descr"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "descr"
      ]
    ]
  ],
  "iter_str_vals": [
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "iter_str_vals"
      ]
    ],
    [
      "astropy/utils/data_info.py",
      [
        "BaseColumnInfo",
        "iter_str_vals"
      ]
    ]
  ],
  "attrs_equal": [
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "attrs_equal"
      ]
    ]
  ],
  "_formatter": [
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "_formatter"
      ]
    ]
  ],
  "pformat": [
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "pformat"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "pformat"
      ]
    ]
  ],
  "more": [
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "more"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "more"
      ]
    ]
  ],
  "unit_22": [
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "unit_22"
      ]
    ]
  ],
  "unit_23": [
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "unit_23"
      ]
    ]
  ],
  "searchsorted": [
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "searchsorted"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "searchsorted"
      ]
    ]
  ],
  "group_by": [
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "group_by"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "group_by"
      ]
    ]
  ],
  "_copy_groups": [
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "_copy_groups"
      ]
    ]
  ],
  "_copy_attrs": [
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "_copy_attrs"
      ]
    ]
  ],
  "_encode_str": [
    [
      "astropy/table/column.py",
      [
        "BaseColumn",
        "_encode_str"
      ]
    ]
  ],
  "_base_repr_": [
    [
      "astropy/table/column.py",
      [
        "Column",
        "_base_repr_"
      ]
    ],
    [
      "astropy/table/row.py",
      [
        "Row",
        "_base_repr_"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "_base_repr_"
      ]
    ]
  ],
  "_repr_html_": [
    [
      "astropy/table/column.py",
      [
        "Column",
        "_repr_html_"
      ]
    ],
    [
      "astropy/table/row.py",
      [
        "Row",
        "_repr_html_"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "_repr_html_"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "EquivalentUnitsList",
        "_repr_html_"
      ]
    ]
  ],
  "_check_string_truncate": [
    [
      "astropy/table/column.py",
      [
        "Column",
        "_check_string_truncate"
      ]
    ]
  ],
  "fill_value": [
    [
      "astropy/table/column.py",
      [
        "MaskedColumn",
        "fill_value"
      ]
    ]
  ],
  "fill_value_2": [
    [
      "astropy/table/column.py",
      [
        "MaskedColumn",
        "fill_value_2"
      ]
    ]
  ],
  "filled": [
    [
      "astropy/table/column.py",
      [
        "MaskedColumn",
        "filled"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "filled"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "Masked",
        "filled"
      ]
    ]
  ],
  "_copy_attrs_slice": [
    [
      "astropy/table/column.py",
      [
        "MaskedColumn",
        "_copy_attrs_slice"
      ]
    ]
  ],
  "table_group_by": [
    [
      "astropy/table/groups.py",
      [
        "table_group_by"
      ]
    ]
  ],
  "_table_group_by": [
    [
      "astropy/table/groups.py",
      [
        "_table_group_by"
      ]
    ]
  ],
  "column_group_by": [
    [
      "astropy/table/groups.py",
      [
        "column_group_by"
      ]
    ]
  ],
  "parent": [
    [
      "astropy/table/groups.py",
      [
        "BaseGroups",
        "parent"
      ]
    ]
  ],
  "indices": [
    [
      "astropy/table/groups.py",
      [
        "ColumnGroups",
        "indices"
      ]
    ],
    [
      "astropy/table/groups.py",
      [
        "TableGroups",
        "indices"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "indices"
      ]
    ],
    [
      "astropy/utils/data_info.py",
      [
        "BaseColumnInfo",
        "indices"
      ]
    ]
  ],
  "aggregate": [
    [
      "astropy/table/groups.py",
      [
        "ColumnGroups",
        "aggregate"
      ]
    ],
    [
      "astropy/table/groups.py",
      [
        "TableGroups",
        "aggregate"
      ]
    ]
  ],
  "key_colnames": [
    [
      "astropy/table/groups.py",
      [
        "TableGroups",
        "key_colnames"
      ]
    ]
  ],
  "replace_col": [
    [
      "astropy/table/index.py",
      [
        "Index",
        "replace_col"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "SlicedIndex",
        "replace_col"
      ]
    ]
  ],
  "col_position": [
    [
      "astropy/table/index.py",
      [
        "Index",
        "col_position"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "SlicedIndex",
        "col_position"
      ]
    ]
  ],
  "insert_row": [
    [
      "astropy/table/index.py",
      [
        "Index",
        "insert_row"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "SlicedIndex",
        "insert_row"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "insert_row"
      ]
    ]
  ],
  "get_row_specifier": [
    [
      "astropy/table/index.py",
      [
        "Index",
        "get_row_specifier"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "SlicedIndex",
        "get_row_specifier"
      ]
    ]
  ],
  "remove_rows": [
    [
      "astropy/table/index.py",
      [
        "Index",
        "remove_rows"
      ]
    ],
    [
      "astropy/table/index.py",
      [
        "SlicedIndex",
        "remove_rows"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "remove_rows"
      ]
    ]
  ],
  "remove_row": [
    [
      "astropy/table/index.py",
      [
        "Index",
        "remove_row"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "remove_row"
      ]
    ]
  ],
  "same_prefix_range": [
    [
      "astropy/table/index.py",
      [
        "Index",
        "same_prefix_range"
      ]
    ]
  ],
  "length": [
    [
      "astropy/table/index.py",
      [
        "SlicedIndex",
        "length"
      ]
    ]
  ],
  "sliced_coords": [
    [
      "astropy/table/index.py",
      [
        "SlicedIndex",
        "sliced_coords"
      ]
    ]
  ],
  "orig_coords": [
    [
      "astropy/table/index.py",
      [
        "SlicedIndex",
        "orig_coords"
      ]
    ]
  ],
  "where": [
    [
      "astropy/table/index.py",
      [
        "SlicedIndex",
        "where"
      ]
    ],
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "where"
      ]
    ],
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "where"
      ]
    ]
  ],
  "get_index_or_copy": [
    [
      "astropy/table/index.py",
      [
        "SlicedIndex",
        "get_index_or_copy"
      ]
    ]
  ],
  "get_slice": [
    [
      "astropy/table/index.py",
      [
        "SlicedIndex",
        "get_slice"
      ]
    ]
  ],
  "get_index_by_names": [
    [
      "astropy/table/index.py",
      [
        "get_index_by_names"
      ]
    ]
  ],
  "_get_copy_on_getitem_shim": [
    [
      "astropy/table/index.py",
      [
        "_IndexModeContext",
        "_get_copy_on_getitem_shim"
      ]
    ]
  ],
  "_get_rows": [
    [
      "astropy/table/index.py",
      [
        "TableLoc",
        "_get_rows"
      ]
    ]
  ],
  "table_info": [
    [
      "astropy/table/info.py",
      [
        "table_info"
      ]
    ]
  ],
  "get_override_sm": [
    [
      "astropy/table/info.py",
      [
        "serialize_method_as",
        "get_override_sm"
      ]
    ]
  ],
  "serialize_method_as": [
    [
      "astropy/table/info.py",
      [
        "serialize_method_as"
      ]
    ]
  ],
  "jquery_urls": [
    [
      "astropy/table/jsviewer.py",
      [
        "JSViewer",
        "jquery_urls"
      ]
    ]
  ],
  "css_urls": [
    [
      "astropy/table/jsviewer.py",
      [
        "JSViewer",
        "css_urls"
      ]
    ]
  ],
  "_jstable_file": [
    [
      "astropy/table/jsviewer.py",
      [
        "JSViewer",
        "_jstable_file"
      ]
    ]
  ],
  "ipynb": [
    [
      "astropy/table/jsviewer.py",
      [
        "JSViewer",
        "ipynb"
      ]
    ]
  ],
  "html_js": [
    [
      "astropy/table/jsviewer.py",
      [
        "JSViewer",
        "html_js"
      ]
    ]
  ],
  "write_table_jsviewer": [
    [
      "astropy/table/jsviewer.py",
      [
        "write_table_jsviewer"
      ]
    ]
  ],
  "_construct_odict": [
    [
      "astropy/table/meta.py",
      [
        "_construct_odict"
      ]
    ]
  ],
  "_repr_pairs": [
    [
      "astropy/table/meta.py",
      [
        "_repr_pairs"
      ]
    ]
  ],
  "_repr_odict": [
    [
      "astropy/table/meta.py",
      [
        "_repr_odict"
      ]
    ]
  ],
  "_repr_column_dict": [
    [
      "astropy/table/meta.py",
      [
        "_repr_column_dict"
      ]
    ]
  ],
  "_get_variable_length_array_shape": [
    [
      "astropy/table/meta.py",
      [
        "_get_variable_length_array_shape"
      ]
    ]
  ],
  "_get_datatype_from_dtype": [
    [
      "astropy/table/meta.py",
      [
        "_get_datatype_from_dtype"
      ]
    ]
  ],
  "_get_col_attributes": [
    [
      "astropy/table/meta.py",
      [
        "_get_col_attributes"
      ]
    ]
  ],
  "get_yaml_from_table": [
    [
      "astropy/table/meta.py",
      [
        "get_yaml_from_table"
      ]
    ]
  ],
  "represent_mapping": [
    [
      "astropy/table/meta.py",
      [
        "get_yaml_from_header",
        "TableDumper",
        "represent_mapping"
      ]
    ]
  ],
  "get_yaml_from_header": [
    [
      "astropy/table/meta.py",
      [
        "get_yaml_from_header"
      ]
    ]
  ],
  "get_header_from_yaml": [
    [
      "astropy/table/meta.py",
      [
        "get_header_from_yaml"
      ]
    ]
  ],
  "as_dask_column": [
    [
      "astropy/table/mixins/dask.py",
      [
        "as_dask_column"
      ]
    ]
  ],
  "register_mixin_handler": [
    [
      "astropy/table/mixins/registry.py",
      [
        "register_mixin_handler"
      ]
    ]
  ],
  "get_mixin_handler": [
    [
      "astropy/table/mixins/registry.py",
      [
        "get_mixin_handler"
      ]
    ]
  ],
  "dask_handler": [
    [
      "astropy/table/mixins/registry.py",
      [
        "dask_handler"
      ]
    ]
  ],
  "test_add_row": [
    [
      "astropy/table/mixins/tests/test_dask.py",
      [
        "TestDaskHandler",
        "test_add_row"
      ]
    ],
    [
      "astropy/timeseries/tests/test_common.py",
      [
        "CommonTimeSeriesTests",
        "test_add_row"
      ]
    ]
  ],
  "test_get_column": [
    [
      "astropy/table/mixins/tests/test_dask.py",
      [
        "TestDaskHandler",
        "test_get_column"
      ]
    ]
  ],
  "test_slicing_row_single": [
    [
      "astropy/table/mixins/tests/test_dask.py",
      [
        "TestDaskHandler",
        "test_slicing_row_single"
      ]
    ]
  ],
  "test_slicing_row_range": [
    [
      "astropy/table/mixins/tests/test_dask.py",
      [
        "TestDaskHandler",
        "test_slicing_row_range"
      ]
    ]
  ],
  "test_slicing_column_range": [
    [
      "astropy/table/mixins/tests/test_dask.py",
      [
        "TestDaskHandler",
        "test_slicing_column_range"
      ]
    ]
  ],
  "test_pformat": [
    [
      "astropy/table/mixins/tests/test_dask.py",
      [
        "TestDaskHandler",
        "test_pformat"
      ]
    ],
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestPprint",
        "test_pformat"
      ]
    ]
  ],
  "test_info_preserved": [
    [
      "astropy/table/mixins/tests/test_dask.py",
      [
        "TestDaskHandler",
        "test_info_preserved"
      ]
    ]
  ],
  "handle_spam": [
    [
      "astropy/table/mixins/tests/test_registry.py",
      [
        "handle_spam"
      ]
    ]
  ],
  "handle_spam_alt": [
    [
      "astropy/table/mixins/tests/test_registry.py",
      [
        "handle_spam_alt"
      ]
    ]
  ],
  "test_no_handler": [
    [
      "astropy/table/mixins/tests/test_registry.py",
      [
        "test_no_handler"
      ]
    ]
  ],
  "test_register_handler": [
    [
      "astropy/table/mixins/tests/test_registry.py",
      [
        "test_register_handler"
      ]
    ]
  ],
  "test_register_handler_override": [
    [
      "astropy/table/mixins/tests/test_registry.py",
      [
        "test_register_handler_override"
      ]
    ]
  ],
  "test_get_mixin_handler_str": [
    [
      "astropy/table/mixins/tests/test_registry.py",
      [
        "test_get_mixin_handler_str"
      ]
    ]
  ],
  "test_add_column": [
    [
      "astropy/table/mixins/tests/test_registry.py",
      [
        "test_add_column"
      ]
    ],
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_add_column"
      ]
    ],
    [
      "astropy/timeseries/tests/test_common.py",
      [
        "CommonTimeSeriesTests",
        "test_add_column"
      ]
    ]
  ],
  "invalid_handler": [
    [
      "astropy/table/mixins/tests/test_registry.py",
      [
        "invalid_handler"
      ]
    ]
  ],
  "test_invalid_handler": [
    [
      "astropy/table/mixins/tests/test_registry.py",
      [
        "test_invalid_handler"
      ]
    ]
  ],
  "get_col_name_map": [
    [
      "astropy/table/np_utils.py",
      [
        "get_col_name_map"
      ]
    ],
    [
      "astropy/table/operations.py",
      [
        "get_col_name_map"
      ]
    ]
  ],
  "get_descrs": [
    [
      "astropy/table/np_utils.py",
      [
        "get_descrs"
      ]
    ],
    [
      "astropy/table/operations.py",
      [
        "get_descrs"
      ]
    ]
  ],
  "common_dtype": [
    [
      "astropy/table/np_utils.py",
      [
        "common_dtype"
      ]
    ],
    [
      "astropy/table/operations.py",
      [
        "common_dtype"
      ]
    ],
    [
      "astropy/utils/metadata.py",
      [
        "common_dtype"
      ]
    ]
  ],
  "_check_for_sequence_of_structured_arrays": [
    [
      "astropy/table/np_utils.py",
      [
        "_check_for_sequence_of_structured_arrays"
      ]
    ]
  ],
  "_merge_table_meta": [
    [
      "astropy/table/operations.py",
      [
        "_merge_table_meta"
      ]
    ]
  ],
  "_get_list_of_tables": [
    [
      "astropy/table/operations.py",
      [
        "_get_list_of_tables"
      ]
    ]
  ],
  "_get_out_class": [
    [
      "astropy/table/operations.py",
      [
        "_get_out_class"
      ]
    ]
  ],
  "join_func": [
    [
      "astropy/table/operations.py",
      [
        "join_skycoord",
        "join_func"
      ]
    ],
    [
      "astropy/table/operations.py",
      [
        "join_distance",
        "join_func"
      ]
    ]
  ],
  "join_skycoord": [
    [
      "astropy/table/operations.py",
      [
        "join_skycoord"
      ]
    ]
  ],
  "join_distance": [
    [
      "astropy/table/operations.py",
      [
        "join_distance"
      ]
    ]
  ],
  "setdiff": [
    [
      "astropy/table/operations.py",
      [
        "setdiff"
      ]
    ]
  ],
  "dstack": [
    [
      "astropy/table/operations.py",
      [
        "dstack"
      ]
    ]
  ],
  "vstack": [
    [
      "astropy/table/operations.py",
      [
        "vstack"
      ]
    ]
  ],
  "hstack": [
    [
      "astropy/table/operations.py",
      [
        "hstack"
      ]
    ]
  ],
  "unique": [
    [
      "astropy/table/operations.py",
      [
        "unique"
      ]
    ],
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "unique"
      ]
    ]
  ],
  "_get_join_sort_idxs": [
    [
      "astropy/table/operations.py",
      [
        "_get_join_sort_idxs"
      ]
    ]
  ],
  "_apply_join_funcs": [
    [
      "astropy/table/operations.py",
      [
        "_apply_join_funcs"
      ]
    ]
  ],
  "_join": [
    [
      "astropy/table/operations.py",
      [
        "_join"
      ]
    ]
  ],
  "_keys_to_cols": [
    [
      "astropy/table/operations.py",
      [
        "_join_keys_left_right",
        "_keys_to_cols"
      ]
    ]
  ],
  "_join_keys_left_right": [
    [
      "astropy/table/operations.py",
      [
        "_join_keys_left_right"
      ]
    ]
  ],
  "_check_join_type": [
    [
      "astropy/table/operations.py",
      [
        "_check_join_type"
      ]
    ]
  ],
  "_vstack": [
    [
      "astropy/table/operations.py",
      [
        "_vstack"
      ]
    ]
  ],
  "_hstack": [
    [
      "astropy/table/operations.py",
      [
        "_hstack"
      ]
    ]
  ],
  "default_format_func": [
    [
      "astropy/table/pprint.py",
      [
        "default_format_func"
      ]
    ]
  ],
  "_use_str_for_masked_values": [
    [
      "astropy/table/pprint.py",
      [
        "_use_str_for_masked_values"
      ]
    ]
  ],
  "_possible_string_format_functions": [
    [
      "astropy/table/pprint.py",
      [
        "_possible_string_format_functions"
      ]
    ]
  ],
  "_auto_format_func": [
    [
      "astropy/table/pprint.py",
      [
        "get_auto_format_func",
        "_auto_format_func"
      ]
    ]
  ],
  "get_auto_format_func": [
    [
      "astropy/table/pprint.py",
      [
        "get_auto_format_func"
      ]
    ]
  ],
  "_get_pprint_include_names": [
    [
      "astropy/table/pprint.py",
      [
        "_get_pprint_include_names"
      ]
    ]
  ],
  "_get_pprint_size": [
    [
      "astropy/table/pprint.py",
      [
        "TableFormatter",
        "_get_pprint_size"
      ]
    ]
  ],
  "_pformat_col": [
    [
      "astropy/table/pprint.py",
      [
        "TableFormatter",
        "_pformat_col"
      ]
    ]
  ],
  "format_col_str": [
    [
      "astropy/table/pprint.py",
      [
        "TableFormatter",
        "_pformat_col_iter",
        "format_col_str"
      ]
    ]
  ],
  "_pformat_col_iter": [
    [
      "astropy/table/pprint.py",
      [
        "TableFormatter",
        "_pformat_col_iter"
      ]
    ]
  ],
  "outwidth": [
    [
      "astropy/table/pprint.py",
      [
        "TableFormatter",
        "_pformat_table",
        "outwidth"
      ]
    ]
  ],
  "_pformat_table": [
    [
      "astropy/table/pprint.py",
      [
        "TableFormatter",
        "_pformat_table"
      ]
    ]
  ],
  "_more_tabcol": [
    [
      "astropy/table/pprint.py",
      [
        "TableFormatter",
        "_more_tabcol"
      ]
    ]
  ],
  "table": [
    [
      "astropy/table/row.py",
      [
        "Row",
        "table"
      ]
    ]
  ],
  "as_void": [
    [
      "astropy/table/row.py",
      [
        "Row",
        "as_void"
      ]
    ]
  ],
  "showtable": [
    [
      "astropy/table/scripts/showtable.py",
      [
        "showtable"
      ]
    ]
  ],
  "_represent_mixin_as_column": [
    [
      "astropy/table/serialize.py",
      [
        "_represent_mixin_as_column"
      ]
    ]
  ],
  "represent_mixins_as_columns": [
    [
      "astropy/table/serialize.py",
      [
        "represent_mixins_as_columns"
      ]
    ]
  ],
  "_construct_mixin_from_obj_attrs_and_info": [
    [
      "astropy/table/serialize.py",
      [
        "_construct_mixin_from_obj_attrs_and_info"
      ]
    ]
  ],
  "add_column": [
    [
      "astropy/table/serialize.py",
      [
        "_TableLite",
        "add_column"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "add_column"
      ]
    ],
    [
      "astropy/timeseries/sampled.py",
      [
        "TimeSeries",
        "add_column"
      ]
    ]
  ],
  "itercols": [
    [
      "astropy/table/serialize.py",
      [
        "_TableLite",
        "itercols"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "Table",
        "itercols"
      ]
    ]
  ],
  "_construct_mixin_from_columns": [
    [
      "astropy/table/serialize.py",
      [
        "_construct_mixin_from_columns"
      ]
    ]
  ],
  "_construct_mixins_from_columns": [
    [
      "astropy/table/serialize.py",
      [
        "_construct_mixins_from_columns"
      ]
    ]
  ],
  "_searchsorted": [
    [
      "astropy/table/sorted_array.py",
      [
        "_searchsorted"
      ]
    ]
  ],
  "cols": [
    [
      "astropy/table/sorted_array.py",
      [
        "SortedArray",
        "cols"
      ]
    ]
  ],
  "_get_key_slice": [
    [
      "astropy/table/sorted_array.py",
      [
        "SortedArray",
        "_get_key_slice"
      ]
    ]
  ],
  "find_pos": [
    [
      "astropy/table/sorted_array.py",
      [
        "SortedArray",
        "find_pos"
      ]
    ]
  ],
  "has_info_class": [
    [
      "astropy/table/table.py",
      [
        "has_info_class"
      ]
    ]
  ],
  "_get_names_from_list_of_dict": [
    [
      "astropy/table/table.py",
      [
        "_get_names_from_list_of_dict"
      ]
    ]
  ],
  "_rename_column": [
    [
      "astropy/table/table.py",
      [
        "TableColumns",
        "_rename_column"
      ]
    ]
  ],
  "isinstance": [
    [
      "astropy/table/table.py",
      [
        "TableColumns",
        "isinstance"
      ]
    ]
  ],
  "not_isinstance": [
    [
      "astropy/table/table.py",
      [
        "TableColumns",
        "not_isinstance"
      ]
    ]
  ],
  "_add_remove_setup": [
    [
      "astropy/table/table.py",
      [
        "PprintIncludeExclude",
        "_add_remove_setup"
      ]
    ]
  ],
  "_remove": [
    [
      "astropy/table/table.py",
      [
        "PprintIncludeExclude",
        "_remove"
      ]
    ]
  ],
  "_rename": [
    [
      "astropy/table/table.py",
      [
        "PprintIncludeExclude",
        "_rename"
      ]
    ]
  ],
  "as_array": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "as_array"
      ]
    ]
  ],
  "_set_column_attribute": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "_set_column_attribute"
      ]
    ]
  ],
  "_mask": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "_mask"
      ]
    ]
  ],
  "loc": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "loc"
      ]
    ]
  ],
  "loc_indices": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "loc_indices"
      ]
    ]
  ],
  "iloc": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "iloc"
      ]
    ]
  ],
  "add_index": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "add_index"
      ]
    ]
  ],
  "remove_indices": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "remove_indices"
      ]
    ]
  ],
  "index_mode": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "index_mode"
      ]
    ]
  ],
  "_check_names_dtype": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "_check_names_dtype"
      ]
    ]
  ],
  "_init_from_list_of_dicts": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "_init_from_list_of_dicts"
      ]
    ]
  ],
  "_init_from_list": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "_init_from_list"
      ]
    ]
  ],
  "_convert_data_to_col": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "_convert_data_to_col"
      ]
    ]
  ],
  "_init_from_ndarray": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "_init_from_ndarray"
      ]
    ]
  ],
  "_init_from_dict": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "_init_from_dict"
      ]
    ]
  ],
  "_get_col_cls_for_table": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "_get_col_cls_for_table"
      ]
    ]
  ],
  "_convert_col_for_table": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "_convert_col_for_table"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "QTable",
        "_convert_col_for_table"
      ]
    ],
    [
      "astropy/utils/iers/iers.py",
      [
        "IERS",
        "_convert_col_for_table"
      ]
    ]
  ],
  "_init_from_cols": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "_init_from_cols"
      ]
    ]
  ],
  "_new_from_slice": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "_new_from_slice"
      ]
    ]
  ],
  "_make_table_from_cols": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "_make_table_from_cols"
      ]
    ]
  ],
  "_set_col_parent_table_and_mask": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "_set_col_parent_table_and_mask"
      ]
    ]
  ],
  "has_mixin_columns": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "has_mixin_columns"
      ]
    ]
  ],
  "has_masked_columns": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "has_masked_columns"
      ]
    ]
  ],
  "has_masked_values": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "has_masked_values"
      ]
    ]
  ],
  "_is_mixin_for_table": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "_is_mixin_for_table"
      ]
    ],
    [
      "astropy/table/table.py",
      [
        "QTable",
        "_is_mixin_for_table"
      ]
    ]
  ],
  "pprint_all": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "pprint_all"
      ]
    ]
  ],
  "_make_index_row_display_table": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "_make_index_row_display_table"
      ]
    ]
  ],
  "show_in_notebook": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "show_in_notebook"
      ]
    ]
  ],
  "show_in_browser": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "show_in_browser"
      ]
    ]
  ],
  "pformat_all": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "pformat_all"
      ]
    ]
  ],
  "masked": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "masked"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "masked"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeFormat",
        "masked"
      ]
    ]
  ],
  "masked_52": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "masked_52"
      ]
    ]
  ],
  "_set_masked": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "_set_masked"
      ]
    ]
  ],
  "ColumnClass": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "ColumnClass"
      ]
    ]
  ],
  "_is_list_or_tuple_of_str": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "_is_list_or_tuple_of_str"
      ]
    ]
  ],
  "index_column": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "index_column"
      ]
    ]
  ],
  "add_columns": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "add_columns"
      ]
    ],
    [
      "astropy/timeseries/sampled.py",
      [
        "TimeSeries",
        "add_columns"
      ]
    ]
  ],
  "_replace_column_warnings": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "_replace_column_warnings"
      ]
    ]
  ],
  "replace_column": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "replace_column"
      ]
    ]
  ],
  "iterrows": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "iterrows"
      ]
    ]
  ],
  "_set_of_names_in_colnames": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "_set_of_names_in_colnames"
      ]
    ]
  ],
  "remove_column": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "remove_column"
      ]
    ]
  ],
  "_convert_string_dtype": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "_convert_string_dtype"
      ]
    ]
  ],
  "convert_bytestring_to_unicode": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "convert_bytestring_to_unicode"
      ]
    ]
  ],
  "convert_unicode_to_bytestring": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "convert_unicode_to_bytestring"
      ]
    ]
  ],
  "keep_columns": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "keep_columns"
      ]
    ]
  ],
  "_set_row": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "_set_row"
      ]
    ]
  ],
  "add_row": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "add_row"
      ]
    ]
  ],
  "_replace_cols": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "_replace_cols"
      ]
    ]
  ],
  "argsort": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "argsort"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "argsort"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "argsort"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "argsort"
      ]
    ]
  ],
  "reverse": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "reverse"
      ]
    ]
  ],
  "round": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "round"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "round"
      ]
    ]
  ],
  "_rows_equal": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "_rows_equal"
      ]
    ]
  ],
  "values_equal": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "values_equal"
      ]
    ]
  ],
  "to_pandas": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "to_pandas"
      ]
    ],
    [
      "astropy/timeseries/sampled.py",
      [
        "TimeSeries",
        "to_pandas"
      ]
    ]
  ],
  "from_pandas": [
    [
      "astropy/table/table.py",
      [
        "Table",
        "from_pandas"
      ]
    ],
    [
      "astropy/timeseries/sampled.py",
      [
        "TimeSeries",
        "from_pandas"
      ]
    ]
  ],
  "simple_table": [
    [
      "astropy/table/table_helpers.py",
      [
        "simple_table"
      ]
    ]
  ],
  "complex_table": [
    [
      "astropy/table/table_helpers.py",
      [
        "complex_table"
      ]
    ]
  ],
  "Column": [
    [
      "astropy/table/tests/conftest.py",
      [
        "Column"
      ]
    ]
  ],
  "table_types": [
    [
      "astropy/table/tests/conftest.py",
      [
        "table_types"
      ]
    ]
  ],
  "table_data": [
    [
      "astropy/table/tests/conftest.py",
      [
        "table_data"
      ]
    ]
  ],
  "tableclass": [
    [
      "astropy/table/tests/conftest.py",
      [
        "tableclass"
      ]
    ]
  ],
  "protocol": [
    [
      "astropy/table/tests/conftest.py",
      [
        "protocol"
      ]
    ]
  ],
  "table_type": [
    [
      "astropy/table/tests/conftest.py",
      [
        "table_type"
      ]
    ]
  ],
  "mixin_cols": [
    [
      "astropy/table/tests/conftest.py",
      [
        "mixin_cols"
      ]
    ]
  ],
  "T1": [
    [
      "astropy/table/tests/conftest.py",
      [
        "T1"
      ]
    ]
  ],
  "operation_table_type": [
    [
      "astropy/table/tests/conftest.py",
      [
        "operation_table_type"
      ]
    ]
  ],
  "wide_array": [
    [
      "astropy/table/tests/test_array.py",
      [
        "wide_array"
      ]
    ]
  ],
  "test_array_find": [
    [
      "astropy/table/tests/test_array.py",
      [
        "test_array_find"
      ]
    ]
  ],
  "test_array_range": [
    [
      "astropy/table/tests/test_array.py",
      [
        "test_array_range"
      ]
    ]
  ],
  "test_wide_array": [
    [
      "astropy/table/tests/test_array.py",
      [
        "test_wide_array"
      ]
    ]
  ],
  "get_tree": [
    [
      "astropy/table/tests/test_bst.py",
      [
        "get_tree"
      ]
    ]
  ],
  "tree": [
    [
      "astropy/table/tests/test_bst.py",
      [
        "tree"
      ]
    ]
  ],
  "bst": [
    [
      "astropy/table/tests/test_bst.py",
      [
        "bst"
      ]
    ]
  ],
  "test_bst_add": [
    [
      "astropy/table/tests/test_bst.py",
      [
        "test_bst_add"
      ]
    ]
  ],
  "test_bst_dimensions": [
    [
      "astropy/table/tests/test_bst.py",
      [
        "test_bst_dimensions"
      ]
    ]
  ],
  "test_bst_find": [
    [
      "astropy/table/tests/test_bst.py",
      [
        "test_bst_find"
      ]
    ]
  ],
  "test_bst_traverse": [
    [
      "astropy/table/tests/test_bst.py",
      [
        "test_bst_traverse"
      ]
    ]
  ],
  "test_bst_remove": [
    [
      "astropy/table/tests/test_bst.py",
      [
        "test_bst_remove"
      ]
    ]
  ],
  "test_bst_duplicate": [
    [
      "astropy/table/tests/test_bst.py",
      [
        "test_bst_duplicate"
      ]
    ]
  ],
  "test_bst_range": [
    [
      "astropy/table/tests/test_bst.py",
      [
        "test_bst_range"
      ]
    ]
  ],
  "test_numpy_ops": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestColumn",
        "test_numpy_ops"
      ]
    ]
  ],
  "test_numpy_boolean_ufuncs": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestColumn",
        "test_numpy_boolean_ufuncs"
      ]
    ]
  ],
  "test_format": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestColumn",
        "test_format"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/tests/test_formatter_locator.py",
      [
        "TestAngleFormatterLocator",
        "test_format"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/tests/test_formatter_locator.py",
      [
        "TestScalarFormatterLocator",
        "test_format"
      ]
    ]
  ],
  "test_convert_numpy_array": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestColumn",
        "test_convert_numpy_array"
      ]
    ],
    [
      "astropy/table/tests/test_row.py",
      [
        "TestRow",
        "test_convert_numpy_array"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestConvertNumpyArray",
        "test_convert_numpy_array"
      ]
    ]
  ],
  "test_convert_unit": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestColumn",
        "test_convert_unit"
      ]
    ]
  ],
  "test_array_wrap": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestColumn",
        "test_array_wrap"
      ]
    ]
  ],
  "test_name_none": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestColumn",
        "test_name_none"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestNewFromColumns",
        "test_name_none"
      ]
    ]
  ],
  "test_quantity_init": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestColumn",
        "test_quantity_init"
      ]
    ],
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "TestInit",
        "test_quantity_init"
      ]
    ]
  ],
  "test_quantity_comparison": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestColumn",
        "test_quantity_comparison"
      ]
    ],
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityComparison",
        "test_quantity_comparison"
      ]
    ]
  ],
  "test_attrs_survive_getitem_after_change": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestColumn",
        "test_attrs_survive_getitem_after_change"
      ]
    ]
  ],
  "test_to_quantity": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestColumn",
        "test_to_quantity"
      ]
    ]
  ],
  "test_to_funcunit_quantity": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestColumn",
        "test_to_funcunit_quantity"
      ]
    ]
  ],
  "test_item_access_type": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestColumn",
        "test_item_access_type"
      ]
    ]
  ],
  "test_insert_basic": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestColumn",
        "test_insert_basic"
      ]
    ]
  ],
  "test_insert_axis": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestColumn",
        "test_insert_axis"
      ]
    ]
  ],
  "test_insert_string_expand": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestColumn",
        "test_insert_string_expand"
      ]
    ]
  ],
  "test_insert_string_masked_values": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestColumn",
        "test_insert_string_masked_values"
      ]
    ]
  ],
  "test_insert_string_type_error": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestColumn",
        "test_insert_string_type_error"
      ]
    ]
  ],
  "test_insert_multidim": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestColumn",
        "test_insert_multidim"
      ]
    ]
  ],
  "test_insert_object": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestColumn",
        "test_insert_object"
      ]
    ]
  ],
  "test_insert_masked": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestColumn",
        "test_insert_masked"
      ]
    ]
  ],
  "test_masked_multidim_as_list": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestColumn",
        "test_masked_multidim_as_list"
      ]
    ]
  ],
  "test_insert_masked_multidim": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestColumn",
        "test_insert_masked_multidim"
      ]
    ]
  ],
  "test_mask_on_non_masked_table": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestColumn",
        "test_mask_on_non_masked_table"
      ]
    ]
  ],
  "test_5": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestAttrEqual",
        "test_5"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestEmptyData",
        "test_5"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddPosition",
        "test_5"
      ]
    ]
  ],
  "test_6": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestAttrEqual",
        "test_6"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddPosition",
        "test_6"
      ]
    ]
  ],
  "test_7": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestAttrEqual",
        "test_7"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddPosition",
        "test_7"
      ]
    ]
  ],
  "test_8": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestAttrEqual",
        "test_8"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddPosition",
        "test_8"
      ]
    ]
  ],
  "test_9": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestAttrEqual",
        "test_9"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddPosition",
        "test_9"
      ]
    ]
  ],
  "test_10": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestAttrEqual",
        "test_10"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddPosition",
        "test_10"
      ]
    ]
  ],
  "test_11": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestAttrEqual",
        "test_11"
      ]
    ]
  ],
  "test_12": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestAttrEqual",
        "test_12"
      ]
    ]
  ],
  "test_13": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestAttrEqual",
        "test_13"
      ]
    ]
  ],
  "test_col_and_masked_col": [
    [
      "astropy/table/tests/test_column.py",
      [
        "TestAttrEqual",
        "test_col_and_masked_col"
      ]
    ]
  ],
  "test_getitem_metadata_regression": [
    [
      "astropy/table/tests/test_column.py",
      [
        "test_getitem_metadata_regression"
      ]
    ]
  ],
  "test_unicode_guidelines": [
    [
      "astropy/table/tests/test_column.py",
      [
        "test_unicode_guidelines"
      ]
    ]
  ],
  "test_scalar_column": [
    [
      "astropy/table/tests/test_column.py",
      [
        "test_scalar_column"
      ]
    ]
  ],
  "test_qtable_column_conversion": [
    [
      "astropy/table/tests/test_column.py",
      [
        "test_qtable_column_conversion"
      ]
    ]
  ],
  "test_string_truncation_warning": [
    [
      "astropy/table/tests/test_column.py",
      [
        "test_string_truncation_warning"
      ]
    ]
  ],
  "test_string_truncation_warning_masked": [
    [
      "astropy/table/tests/test_column.py",
      [
        "test_string_truncation_warning_masked"
      ]
    ]
  ],
  "test_col_unicode_sandwich_create_from_str": [
    [
      "astropy/table/tests/test_column.py",
      [
        "test_col_unicode_sandwich_create_from_str"
      ]
    ]
  ],
  "test_col_unicode_sandwich_bytes_obj": [
    [
      "astropy/table/tests/test_column.py",
      [
        "test_col_unicode_sandwich_bytes_obj"
      ]
    ]
  ],
  "test_col_unicode_sandwich_bytes": [
    [
      "astropy/table/tests/test_column.py",
      [
        "test_col_unicode_sandwich_bytes"
      ]
    ]
  ],
  "test_col_unicode_sandwich_unicode": [
    [
      "astropy/table/tests/test_column.py",
      [
        "test_col_unicode_sandwich_unicode"
      ]
    ]
  ],
  "test_masked_col_unicode_sandwich": [
    [
      "astropy/table/tests/test_column.py",
      [
        "test_masked_col_unicode_sandwich"
      ]
    ]
  ],
  "test_unicode_sandwich_set": [
    [
      "astropy/table/tests/test_column.py",
      [
        "test_unicode_sandwich_set"
      ]
    ]
  ],
  "test_unicode_sandwich_compare": [
    [
      "astropy/table/tests/test_column.py",
      [
        "test_unicode_sandwich_compare"
      ]
    ]
  ],
  "test_unicode_sandwich_masked_compare": [
    [
      "astropy/table/tests/test_column.py",
      [
        "test_unicode_sandwich_masked_compare"
      ]
    ]
  ],
  "test_structured_masked_column_roundtrip": [
    [
      "astropy/table/tests/test_column.py",
      [
        "test_structured_masked_column_roundtrip"
      ]
    ]
  ],
  "test_structured_empty_column_init": [
    [
      "astropy/table/tests/test_column.py",
      [
        "test_structured_empty_column_init"
      ]
    ]
  ],
  "test_column_value_access": [
    [
      "astropy/table/tests/test_column.py",
      [
        "test_column_value_access"
      ]
    ]
  ],
  "test_masked_column_serialize_method_propagation": [
    [
      "astropy/table/tests/test_column.py",
      [
        "test_masked_column_serialize_method_propagation"
      ]
    ]
  ],
  "test_searchsorted": [
    [
      "astropy/table/tests/test_column.py",
      [
        "test_searchsorted"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestArgFunctions",
        "test_searchsorted"
      ]
    ]
  ],
  "sort_eq": [
    [
      "astropy/table/tests/test_groups.py",
      [
        "sort_eq"
      ]
    ],
    [
      "astropy/table/tests/test_operations.py",
      [
        "sort_eq"
      ]
    ]
  ],
  "test_column_group_by": [
    [
      "astropy/table/tests/test_groups.py",
      [
        "test_column_group_by"
      ]
    ]
  ],
  "test_table_group_by": [
    [
      "astropy/table/tests/test_groups.py",
      [
        "test_table_group_by"
      ]
    ]
  ],
  "test_groups_keys": [
    [
      "astropy/table/tests/test_groups.py",
      [
        "test_groups_keys"
      ]
    ]
  ],
  "test_groups_iterator": [
    [
      "astropy/table/tests/test_groups.py",
      [
        "test_groups_iterator"
      ]
    ]
  ],
  "test_grouped_copy": [
    [
      "astropy/table/tests/test_groups.py",
      [
        "test_grouped_copy"
      ]
    ]
  ],
  "test_grouped_slicing": [
    [
      "astropy/table/tests/test_groups.py",
      [
        "test_grouped_slicing"
      ]
    ]
  ],
  "test_group_column_from_table": [
    [
      "astropy/table/tests/test_groups.py",
      [
        "test_group_column_from_table"
      ]
    ]
  ],
  "test_table_groups_mask_index": [
    [
      "astropy/table/tests/test_groups.py",
      [
        "test_table_groups_mask_index"
      ]
    ]
  ],
  "test_table_groups_array_index": [
    [
      "astropy/table/tests/test_groups.py",
      [
        "test_table_groups_array_index"
      ]
    ]
  ],
  "test_table_groups_slicing": [
    [
      "astropy/table/tests/test_groups.py",
      [
        "test_table_groups_slicing"
      ]
    ]
  ],
  "test_grouped_item_access": [
    [
      "astropy/table/tests/test_groups.py",
      [
        "test_grouped_item_access"
      ]
    ]
  ],
  "test_mutable_operations": [
    [
      "astropy/table/tests/test_groups.py",
      [
        "test_mutable_operations"
      ]
    ]
  ],
  "test_group_by_masked": [
    [
      "astropy/table/tests/test_groups.py",
      [
        "test_group_by_masked"
      ]
    ]
  ],
  "test_group_by_errors": [
    [
      "astropy/table/tests/test_groups.py",
      [
        "test_group_by_errors"
      ]
    ]
  ],
  "test_groups_keys_meta": [
    [
      "astropy/table/tests/test_groups.py",
      [
        "test_groups_keys_meta"
      ]
    ]
  ],
  "test_table_aggregate": [
    [
      "astropy/table/tests/test_groups.py",
      [
        "test_table_aggregate"
      ]
    ]
  ],
  "np_mean": [
    [
      "astropy/table/tests/test_groups.py",
      [
        "test_table_aggregate_reduceat",
        "np_mean"
      ]
    ]
  ],
  "np_sum": [
    [
      "astropy/table/tests/test_groups.py",
      [
        "test_table_aggregate_reduceat",
        "np_sum"
      ]
    ]
  ],
  "np_add": [
    [
      "astropy/table/tests/test_groups.py",
      [
        "test_table_aggregate_reduceat",
        "np_add"
      ]
    ]
  ],
  "test_table_aggregate_reduceat": [
    [
      "astropy/table/tests/test_groups.py",
      [
        "test_table_aggregate_reduceat"
      ]
    ]
  ],
  "test_column_aggregate": [
    [
      "astropy/table/tests/test_groups.py",
      [
        "test_column_aggregate"
      ]
    ]
  ],
  "test_column_aggregate_f8": [
    [
      "astropy/table/tests/test_groups.py",
      [
        "test_column_aggregate_f8"
      ]
    ]
  ],
  "all_positive": [
    [
      "astropy/table/tests/test_groups.py",
      [
        "test_table_filter",
        "all_positive"
      ]
    ],
    [
      "astropy/table/tests/test_groups.py",
      [
        "test_column_filter",
        "all_positive"
      ]
    ]
  ],
  "test_table_filter": [
    [
      "astropy/table/tests/test_groups.py",
      [
        "test_table_filter"
      ]
    ]
  ],
  "test_column_filter": [
    [
      "astropy/table/tests/test_groups.py",
      [
        "test_column_filter"
      ]
    ]
  ],
  "test_group_mixins": [
    [
      "astropy/table/tests/test_groups.py",
      [
        "test_group_mixins"
      ]
    ]
  ],
  "engine": [
    [
      "astropy/table/tests/test_index.py",
      [
        "engine"
      ]
    ]
  ],
  "main_col": [
    [
      "astropy/table/tests/test_index.py",
      [
        "main_col"
      ]
    ]
  ],
  "assert_col_equal": [
    [
      "astropy/table/tests/test_index.py",
      [
        "assert_col_equal"
      ]
    ]
  ],
  "make_col": [
    [
      "astropy/table/tests/test_index.py",
      [
        "TestIndex",
        "make_col"
      ]
    ]
  ],
  "make_val": [
    [
      "astropy/table/tests/test_index.py",
      [
        "TestIndex",
        "make_val"
      ]
    ]
  ],
  "test_table_index": [
    [
      "astropy/table/tests/test_index.py",
      [
        "TestIndex",
        "test_table_index"
      ]
    ]
  ],
  "test_table_slicing": [
    [
      "astropy/table/tests/test_index.py",
      [
        "TestIndex",
        "test_table_slicing"
      ]
    ]
  ],
  "test_remove_rows": [
    [
      "astropy/table/tests/test_index.py",
      [
        "TestIndex",
        "test_remove_rows"
      ]
    ]
  ],
  "test_col_get_slice": [
    [
      "astropy/table/tests/test_index.py",
      [
        "TestIndex",
        "test_col_get_slice"
      ]
    ]
  ],
  "test_col_set_slice": [
    [
      "astropy/table/tests/test_index.py",
      [
        "TestIndex",
        "test_col_set_slice"
      ]
    ]
  ],
  "test_multiple_slices": [
    [
      "astropy/table/tests/test_index.py",
      [
        "TestIndex",
        "test_multiple_slices"
      ]
    ]
  ],
  "test_sort": [
    [
      "astropy/table/tests/test_index.py",
      [
        "TestIndex",
        "test_sort"
      ]
    ],
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestArithmetic",
        "test_sort"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestArrayConversion",
        "test_sort"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSortFunctions",
        "test_sort"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestSortFunctions",
        "test_sort"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_sort"
      ]
    ]
  ],
  "test_insert_row": [
    [
      "astropy/table/tests/test_index.py",
      [
        "TestIndex",
        "test_insert_row"
      ]
    ],
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_insert_row"
      ]
    ]
  ],
  "test_index_modes": [
    [
      "astropy/table/tests/test_index.py",
      [
        "TestIndex",
        "test_index_modes"
      ]
    ]
  ],
  "test_index_retrieval": [
    [
      "astropy/table/tests/test_index.py",
      [
        "TestIndex",
        "test_index_retrieval"
      ]
    ]
  ],
  "test_col_rename": [
    [
      "astropy/table/tests/test_index.py",
      [
        "TestIndex",
        "test_col_rename"
      ]
    ],
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestJoin",
        "test_col_rename"
      ]
    ]
  ],
  "test_table_loc": [
    [
      "astropy/table/tests/test_index.py",
      [
        "TestIndex",
        "test_table_loc"
      ]
    ]
  ],
  "test_table_loc_indices": [
    [
      "astropy/table/tests/test_index.py",
      [
        "TestIndex",
        "test_table_loc_indices"
      ]
    ]
  ],
  "test_invalid_search": [
    [
      "astropy/table/tests/test_index.py",
      [
        "TestIndex",
        "test_invalid_search"
      ]
    ]
  ],
  "test_copy_index_references": [
    [
      "astropy/table/tests/test_index.py",
      [
        "TestIndex",
        "test_copy_index_references"
      ]
    ]
  ],
  "test_unique_index": [
    [
      "astropy/table/tests/test_index.py",
      [
        "TestIndex",
        "test_unique_index"
      ]
    ]
  ],
  "test_copy_indexed_table": [
    [
      "astropy/table/tests/test_index.py",
      [
        "TestIndex",
        "test_copy_indexed_table"
      ]
    ]
  ],
  "test_updating_row_byindex": [
    [
      "astropy/table/tests/test_index.py",
      [
        "TestIndex",
        "test_updating_row_byindex"
      ]
    ]
  ],
  "test_invalid_updates": [
    [
      "astropy/table/tests/test_index.py",
      [
        "TestIndex",
        "test_invalid_updates"
      ]
    ]
  ],
  "test_get_index": [
    [
      "astropy/table/tests/test_index.py",
      [
        "test_get_index"
      ]
    ]
  ],
  "test_table_index_time_warning": [
    [
      "astropy/table/tests/test_index.py",
      [
        "test_table_index_time_warning"
      ]
    ]
  ],
  "test_table_index_does_not_propagate_to_column_slices": [
    [
      "astropy/table/tests/test_index.py",
      [
        "test_table_index_does_not_propagate_to_column_slices"
      ]
    ]
  ],
  "test_hstack_qtable_table": [
    [
      "astropy/table/tests/test_index.py",
      [
        "test_hstack_qtable_table"
      ]
    ]
  ],
  "test_index_slice_exception": [
    [
      "astropy/table/tests/test_index.py",
      [
        "test_index_slice_exception"
      ]
    ]
  ],
  "test_table_info_attributes": [
    [
      "astropy/table/tests/test_info.py",
      [
        "test_table_info_attributes"
      ]
    ]
  ],
  "test_table_info_stats": [
    [
      "astropy/table/tests/test_info.py",
      [
        "test_table_info_stats"
      ]
    ]
  ],
  "test_data_info": [
    [
      "astropy/table/tests/test_info.py",
      [
        "test_data_info"
      ]
    ]
  ],
  "test_data_info_subclass": [
    [
      "astropy/table/tests/test_info.py",
      [
        "test_data_info_subclass"
      ]
    ]
  ],
  "test_scalar_info": [
    [
      "astropy/table/tests/test_info.py",
      [
        "test_scalar_info"
      ]
    ]
  ],
  "test_class_attribute": [
    [
      "astropy/table/tests/test_info.py",
      [
        "test_class_attribute"
      ]
    ]
  ],
  "test_ignore_warnings": [
    [
      "astropy/table/tests/test_info.py",
      [
        "test_ignore_warnings"
      ]
    ]
  ],
  "test_no_deprecation_warning": [
    [
      "astropy/table/tests/test_info.py",
      [
        "test_no_deprecation_warning"
      ]
    ]
  ],
  "test_lost_parent_error": [
    [
      "astropy/table/tests/test_info.py",
      [
        "test_lost_parent_error"
      ]
    ]
  ],
  "test_info_serialize_method": [
    [
      "astropy/table/tests/test_info.py",
      [
        "test_info_serialize_method"
      ]
    ]
  ],
  "test_info_serialize_method_exception": [
    [
      "astropy/table/tests/test_info.py",
      [
        "test_info_serialize_method_exception"
      ]
    ]
  ],
  "test_basic_init": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "BaseInitFrom",
        "test_basic_init"
      ]
    ]
  ],
  "test_set_dtype": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "BaseInitFrom",
        "test_set_dtype"
      ]
    ]
  ],
  "test_names_dtype_mismatch": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "BaseInitFrom",
        "test_names_dtype_mismatch"
      ]
    ]
  ],
  "test_names_cols_mismatch": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "BaseInitFrom",
        "test_names_cols_mismatch"
      ]
    ],
    [
      "astropy/table/tests/test_init_table.py",
      [
        "BaseInitFromListLike",
        "test_names_cols_mismatch"
      ]
    ]
  ],
  "test_names_copy_false": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "BaseInitFromListLike",
        "test_names_copy_false"
      ]
    ]
  ],
  "test_default_names": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromNdarrayHomo",
        "test_default_names"
      ]
    ],
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromListOfLists",
        "test_default_names"
      ]
    ],
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromColsList",
        "test_default_names"
      ]
    ]
  ],
  "test_ndarray_ref": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromNdarrayHomo",
        "test_ndarray_ref"
      ]
    ],
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromNdarrayStruct",
        "test_ndarray_ref"
      ]
    ]
  ],
  "test_partial_names_dtype": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromNdarrayHomo",
        "test_partial_names_dtype"
      ]
    ],
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromListOfLists",
        "test_partial_names_dtype"
      ]
    ],
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromColsList",
        "test_partial_names_dtype"
      ]
    ],
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromNdarrayStruct",
        "test_partial_names_dtype"
      ]
    ],
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromTable",
        "test_partial_names_dtype"
      ]
    ]
  ],
  "test_partial_names_ref": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromNdarrayHomo",
        "test_partial_names_ref"
      ]
    ],
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromNdarrayStruct",
        "test_partial_names_ref"
      ]
    ],
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromTable",
        "test_partial_names_ref"
      ]
    ]
  ],
  "test_bad_data": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromListOfLists",
        "test_bad_data"
      ]
    ]
  ],
  "test_names_ordered": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromListOfDicts",
        "test_names_ordered"
      ]
    ]
  ],
  "test_missing_data_init_from_dict": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromListOfDicts",
        "test_missing_data_init_from_dict"
      ]
    ]
  ],
  "test_ref": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromColsList",
        "test_ref"
      ]
    ],
    [
      "astropy/table/tests/test_row.py",
      [
        "TestRow",
        "test_ref"
      ]
    ]
  ],
  "test_col_order": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromOrderedDict",
        "test_col_order"
      ]
    ]
  ],
  "test_init_from_row": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromRow",
        "test_init_from_row"
      ]
    ]
  ],
  "test_data_meta_copy": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromTable",
        "test_data_meta_copy"
      ]
    ]
  ],
  "test_table_ref": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromTable",
        "test_table_ref"
      ]
    ]
  ],
  "test_init_from_columns": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromTable",
        "test_init_from_columns"
      ]
    ]
  ],
  "test_init_from_columns_slice": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromTable",
        "test_init_from_columns_slice"
      ]
    ]
  ],
  "test_init_from_columns_mix": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromTable",
        "test_init_from_columns_mix"
      ]
    ]
  ],
  "test_data_none_with_cols": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromNone",
        "test_data_none_with_cols"
      ]
    ]
  ],
  "test_init_with_rows": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromRows",
        "test_init_with_rows"
      ]
    ]
  ],
  "test_init_with_rows_and_data": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "TestInitFromRows",
        "test_init_with_rows_and_data"
      ]
    ]
  ],
  "test_init_table_with_names_and_structured_dtype": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "test_init_table_with_names_and_structured_dtype"
      ]
    ]
  ],
  "test_init_and_ref_from_multidim_ndarray": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "test_init_and_ref_from_multidim_ndarray"
      ]
    ]
  ],
  "test_init_and_ref_from_dict": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "test_init_and_ref_from_dict"
      ]
    ]
  ],
  "test_add_none_object_column": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "test_add_none_object_column"
      ]
    ]
  ],
  "test_init_from_row_OrderedDict": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "test_init_from_row_OrderedDict"
      ]
    ]
  ],
  "test_init_from_rows_as_generator": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "test_init_from_rows_as_generator"
      ]
    ]
  ],
  "test_init_bad_dtype_in_empty_table": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "test_init_bad_dtype_in_empty_table"
      ]
    ]
  ],
  "test_init_data_type_not_allowed_to_init_table": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "test_init_data_type_not_allowed_to_init_table"
      ]
    ]
  ],
  "test_init_Table_from_list_of_quantity": [
    [
      "astropy/table/tests/test_init_table.py",
      [
        "test_init_Table_from_list_of_quantity"
      ]
    ]
  ],
  "test_by_name": [
    [
      "astropy/table/tests/test_item_access.py",
      [
        "TestTableColumnsItems",
        "test_by_name"
      ]
    ]
  ],
  "test_by_position": [
    [
      "astropy/table/tests/test_item_access.py",
      [
        "TestTableColumnsItems",
        "test_by_position"
      ]
    ]
  ],
  "test_mult_columns": [
    [
      "astropy/table/tests/test_item_access.py",
      [
        "TestTableColumnsItems",
        "test_mult_columns"
      ]
    ]
  ],
  "test_column_slice": [
    [
      "astropy/table/tests/test_item_access.py",
      [
        "TestTableColumnsItems",
        "test_column_slice"
      ]
    ]
  ],
  "test_column": [
    [
      "astropy/table/tests/test_item_access.py",
      [
        "TestTableItems",
        "test_column"
      ]
    ]
  ],
  "test_row": [
    [
      "astropy/table/tests/test_item_access.py",
      [
        "TestTableItems",
        "test_row"
      ]
    ]
  ],
  "test_empty_iterable_item": [
    [
      "astropy/table/tests/test_item_access.py",
      [
        "TestTableItems",
        "test_empty_iterable_item"
      ]
    ]
  ],
  "test_table_slice": [
    [
      "astropy/table/tests/test_item_access.py",
      [
        "TestTableItems",
        "test_table_slice"
      ]
    ]
  ],
  "test_fancy_index_slice": [
    [
      "astropy/table/tests/test_item_access.py",
      [
        "TestTableItems",
        "test_fancy_index_slice"
      ]
    ]
  ],
  "test_list_index_slice": [
    [
      "astropy/table/tests/test_item_access.py",
      [
        "TestTableItems",
        "test_list_index_slice"
      ]
    ]
  ],
  "test_select_columns": [
    [
      "astropy/table/tests/test_item_access.py",
      [
        "TestTableItems",
        "test_select_columns"
      ]
    ]
  ],
  "test_select_columns_fail": [
    [
      "astropy/table/tests/test_item_access.py",
      [
        "TestTableItems",
        "test_select_columns_fail"
      ]
    ]
  ],
  "test_np_where": [
    [
      "astropy/table/tests/test_item_access.py",
      [
        "TestTableItems",
        "test_np_where"
      ]
    ]
  ],
  "test_np_integers": [
    [
      "astropy/table/tests/test_item_access.py",
      [
        "TestTableItems",
        "test_np_integers"
      ]
    ]
  ],
  "test_select_bad_column": [
    [
      "astropy/table/tests/test_item_access.py",
      [
        "TestTableItems",
        "test_select_bad_column"
      ]
    ]
  ],
  "format_lines": [
    [
      "astropy/table/tests/test_jsviewer.py",
      [
        "format_lines"
      ]
    ]
  ],
  "test_write_jsviewer_default": [
    [
      "astropy/table/tests/test_jsviewer.py",
      [
        "test_write_jsviewer_default"
      ]
    ]
  ],
  "test_write_jsviewer_overwrite": [
    [
      "astropy/table/tests/test_jsviewer.py",
      [
        "test_write_jsviewer_overwrite"
      ]
    ]
  ],
  "test_write_jsviewer_mixin": [
    [
      "astropy/table/tests/test_jsviewer.py",
      [
        "test_write_jsviewer_mixin"
      ]
    ]
  ],
  "test_write_jsviewer_options": [
    [
      "astropy/table/tests/test_jsviewer.py",
      [
        "test_write_jsviewer_options"
      ]
    ]
  ],
  "test_write_jsviewer_local": [
    [
      "astropy/table/tests/test_jsviewer.py",
      [
        "test_write_jsviewer_local"
      ]
    ]
  ],
  "test_show_in_notebook": [
    [
      "astropy/table/tests/test_jsviewer.py",
      [
        "test_show_in_notebook"
      ]
    ]
  ],
  "test_filled_column": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestFilled",
        "test_filled_column"
      ]
    ]
  ],
  "test_filled_masked_table": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestFilled",
        "test_filled_masked_table"
      ]
    ]
  ],
  "test_filled_unmasked_table": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestFilled",
        "test_filled_unmasked_table"
      ]
    ]
  ],
  "test_init_set_fill_value": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestFillValue",
        "test_init_set_fill_value"
      ]
    ]
  ],
  "test_set_get_fill_value_for_bare_column": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestFillValue",
        "test_set_get_fill_value_for_bare_column"
      ]
    ]
  ],
  "test_set_get_fill_value_for_str_column": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestFillValue",
        "test_set_get_fill_value_for_str_column"
      ]
    ]
  ],
  "test_set_get_fill_value_for_structured_column": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestFillValue",
        "test_set_get_fill_value_for_structured_column"
      ]
    ]
  ],
  "test_table_column_mask_not_ref": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestFillValue",
        "test_table_column_mask_not_ref"
      ]
    ]
  ],
  "test_set_get_fill_value_for_table_column": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestFillValue",
        "test_set_get_fill_value_for_table_column"
      ]
    ]
  ],
  "test_data_attribute_fill_and_mask": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestFillValue",
        "test_data_attribute_fill_and_mask"
      ]
    ]
  ],
  "test_set_mask_and_not_ref": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestMaskedColumnInit",
        "test_set_mask_and_not_ref"
      ]
    ]
  ],
  "test_set_mask_from_list": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestMaskedColumnInit",
        "test_set_mask_from_list"
      ]
    ]
  ],
  "test_override_existing_mask": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestMaskedColumnInit",
        "test_override_existing_mask"
      ]
    ]
  ],
  "test_incomplete_mask_spec": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestMaskedColumnInit",
        "test_incomplete_mask_spec"
      ]
    ]
  ],
  "test_init_from_sequence_data_numeric_typed": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestTableInit",
        "test_init_from_sequence_data_numeric_typed"
      ]
    ]
  ],
  "test_init_from_sequence_data_numeric_untyped": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestTableInit",
        "test_init_from_sequence_data_numeric_untyped"
      ]
    ]
  ],
  "test_initialization_with_all_columns": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestTableInit",
        "test_initialization_with_all_columns"
      ]
    ]
  ],
  "test_mask_false_if_input_mask_not_true": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestTableInit",
        "test_mask_false_if_input_mask_not_true"
      ]
    ]
  ],
  "test_mask_false_if_no_input_masked": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestTableInit",
        "test_mask_false_if_no_input_masked"
      ]
    ]
  ],
  "test_mask_property": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestTableInit",
        "test_mask_property"
      ]
    ]
  ],
  "test_add_masked_column_to_masked_table": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestAddColumn",
        "test_add_masked_column_to_masked_table"
      ]
    ]
  ],
  "test_add_masked_column_to_non_masked_table": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestAddColumn",
        "test_add_masked_column_to_non_masked_table"
      ]
    ]
  ],
  "test_add_non_masked_column_to_masked_table": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestAddColumn",
        "test_add_non_masked_column_to_masked_table"
      ]
    ]
  ],
  "test_convert_to_masked_table_only_if_necessary": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestAddColumn",
        "test_convert_to_masked_table_only_if_necessary"
      ]
    ]
  ],
  "test_rename_masked_column": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestRenameColumn",
        "test_rename_masked_column"
      ]
    ]
  ],
  "test_remove_masked_column": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestRemoveColumn",
        "test_remove_masked_column"
      ]
    ]
  ],
  "test_add_masked_row_to_masked_table_iterable": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestAddRow",
        "test_add_masked_row_to_masked_table_iterable"
      ]
    ]
  ],
  "test_add_masked_row_to_masked_table_mapping1": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestAddRow",
        "test_add_masked_row_to_masked_table_mapping1"
      ]
    ]
  ],
  "test_add_masked_row_to_masked_table_mapping2": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestAddRow",
        "test_add_masked_row_to_masked_table_mapping2"
      ]
    ]
  ],
  "test_add_masked_row_to_masked_table_mapping3": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestAddRow",
        "test_add_masked_row_to_masked_table_mapping3"
      ]
    ]
  ],
  "test_add_masked_row_to_masked_table_mapping4": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestAddRow",
        "test_add_masked_row_to_masked_table_mapping4"
      ]
    ]
  ],
  "test_add_masked_row_to_masked_table_mismatch": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestAddRow",
        "test_add_masked_row_to_masked_table_mismatch"
      ]
    ]
  ],
  "test_add_masked_row_to_non_masked_table_iterable": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestAddRow",
        "test_add_masked_row_to_non_masked_table_iterable"
      ]
    ]
  ],
  "test_add_row_cannot_mask_column_raises_typeerror": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "TestAddRow",
        "test_add_row_cannot_mask_column_raises_typeerror"
      ]
    ]
  ],
  "test_setting_from_masked_column": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "test_setting_from_masked_column"
      ]
    ]
  ],
  "test_coercing_fill_value_type": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "test_coercing_fill_value_type"
      ]
    ]
  ],
  "test_mask_copy": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "test_mask_copy"
      ]
    ]
  ],
  "test_masked_as_array_with_mixin": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "test_masked_as_array_with_mixin"
      ]
    ]
  ],
  "test_masked_column_with_unit_in_qtable": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "test_masked_column_with_unit_in_qtable"
      ]
    ]
  ],
  "test_masked_quantity_in_table": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "test_masked_quantity_in_table"
      ]
    ]
  ],
  "test_masked_column_data_attribute_is_plain_masked_array": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "test_masked_column_data_attribute_is_plain_masked_array"
      ]
    ]
  ],
  "test_mask_slicing_count_array_finalize": [
    [
      "astropy/table/tests/test_masked.py",
      [
        "test_mask_slicing_count_array_finalize"
      ]
    ]
  ],
  "check_mixin_type": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "check_mixin_type"
      ]
    ]
  ],
  "test_make_table": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_make_table"
      ]
    ]
  ],
  "test_io_ascii_write": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_io_ascii_write"
      ]
    ]
  ],
  "test_votable_quantity_write": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_votable_quantity_write"
      ]
    ]
  ],
  "test_io_time_write_fits_standard": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_io_time_write_fits_standard"
      ]
    ]
  ],
  "test_io_time_write_fits_local": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_io_time_write_fits_local"
      ]
    ]
  ],
  "test_votable_mixin_write_fail": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_votable_mixin_write_fail"
      ]
    ]
  ],
  "test_join": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_join"
      ]
    ],
    [
      "astropy/timeseries/tests/test_common.py",
      [
        "CommonTimeSeriesTests",
        "test_join"
      ]
    ]
  ],
  "test_hstack": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_hstack"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestConcatenate",
        "test_hstack"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestConcatenate",
        "test_hstack"
      ]
    ]
  ],
  "assert_table_name_col_equal": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "assert_table_name_col_equal"
      ]
    ]
  ],
  "test_get_items": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_get_items"
      ]
    ]
  ],
  "pickle_roundtrip": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_info_preserved_pickle_copy_init",
        "pickle_roundtrip"
      ]
    ]
  ],
  "init_from_class": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_info_preserved_pickle_copy_init",
        "init_from_class"
      ]
    ]
  ],
  "test_info_preserved_pickle_copy_init": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_info_preserved_pickle_copy_init"
      ]
    ]
  ],
  "test_vstack": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_vstack"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestConcatenate",
        "test_vstack"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestConcatenate",
        "test_vstack"
      ]
    ]
  ],
  "test_insert_row_bad_unit": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_insert_row_bad_unit"
      ]
    ]
  ],
  "test_convert_np_array": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_convert_np_array"
      ]
    ]
  ],
  "test_assignment_and_copy": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_assignment_and_copy"
      ]
    ]
  ],
  "test_conversion_qtable_table": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_conversion_qtable_table"
      ]
    ]
  ],
  "test_setitem_as_column_name": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_setitem_as_column_name"
      ]
    ]
  ],
  "test_quantity_representation": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_quantity_representation"
      ]
    ]
  ],
  "test_representation_representation": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_representation_representation"
      ]
    ]
  ],
  "test_skycoord_representation": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_skycoord_representation"
      ]
    ]
  ],
  "test_possible_string_format_functions": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_possible_string_format_functions"
      ]
    ]
  ],
  "test_rename_mixin_columns": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_rename_mixin_columns"
      ]
    ]
  ],
  "test_represent_mixins_as_columns_unit_fix": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_represent_mixins_as_columns_unit_fix"
      ]
    ]
  ],
  "test_primary_data_column_gets_description": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_primary_data_column_gets_description"
      ]
    ]
  ],
  "test_skycoord_with_velocity": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_skycoord_with_velocity"
      ]
    ]
  ],
  "test_ensure_input_info_is_unchanged": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_ensure_input_info_is_unchanged"
      ]
    ]
  ],
  "test_bad_info_class": [
    [
      "astropy/table/tests/test_mixin.py",
      [
        "test_bad_info_class"
      ]
    ]
  ],
  "test_common_dtype": [
    [
      "astropy/table/tests/test_np_utils.py",
      [
        "test_common_dtype"
      ]
    ]
  ],
  "check_mask": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "check_mask"
      ]
    ]
  ],
  "test_table_meta_merge": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestJoin",
        "test_table_meta_merge"
      ]
    ],
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestVStack",
        "test_table_meta_merge"
      ]
    ],
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestHStack",
        "test_table_meta_merge"
      ]
    ]
  ],
  "test_table_meta_merge_conflict": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestJoin",
        "test_table_meta_merge_conflict"
      ]
    ],
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestVStack",
        "test_table_meta_merge_conflict"
      ]
    ],
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestHStack",
        "test_table_meta_merge_conflict"
      ]
    ]
  ],
  "test_both_unmasked_inner": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestJoin",
        "test_both_unmasked_inner"
      ]
    ]
  ],
  "test_both_unmasked_left_right_outer": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestJoin",
        "test_both_unmasked_left_right_outer"
      ]
    ]
  ],
  "test_both_unmasked_single_key_inner": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestJoin",
        "test_both_unmasked_single_key_inner"
      ]
    ]
  ],
  "test_both_unmasked_single_key_left_right_outer": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestJoin",
        "test_both_unmasked_single_key_left_right_outer"
      ]
    ]
  ],
  "test_masked_unmasked": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestJoin",
        "test_masked_unmasked"
      ]
    ]
  ],
  "test_masked_masked": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestJoin",
        "test_masked_masked"
      ]
    ]
  ],
  "test_classes": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestJoin",
        "test_classes"
      ]
    ]
  ],
  "test_rename_conflict": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestJoin",
        "test_rename_conflict"
      ]
    ]
  ],
  "test_missing_keys": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestJoin",
        "test_missing_keys"
      ]
    ]
  ],
  "test_bad_join_type": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestJoin",
        "test_bad_join_type"
      ]
    ]
  ],
  "test_no_common_keys": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestJoin",
        "test_no_common_keys"
      ]
    ]
  ],
  "test_masked_key_column": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestJoin",
        "test_masked_key_column"
      ]
    ]
  ],
  "test_col_meta_merge": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestJoin",
        "test_col_meta_merge"
      ]
    ],
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestHStack",
        "test_col_meta_merge"
      ]
    ]
  ],
  "test_join_multidimensional": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestJoin",
        "test_join_multidimensional"
      ]
    ]
  ],
  "test_join_multidimensional_masked": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestJoin",
        "test_join_multidimensional_masked"
      ]
    ]
  ],
  "test_mixin_functionality": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestJoin",
        "test_mixin_functionality"
      ]
    ],
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestVStack",
        "test_mixin_functionality"
      ]
    ],
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestHStack",
        "test_mixin_functionality"
      ]
    ]
  ],
  "test_cartesian_join": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestJoin",
        "test_cartesian_join"
      ]
    ]
  ],
  "test_join_with_join_skycoord_sky": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestJoin",
        "test_join_with_join_skycoord_sky"
      ]
    ]
  ],
  "test_join_with_join_skycoord_3d": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestJoin",
        "test_join_with_join_skycoord_3d"
      ]
    ]
  ],
  "test_join_with_join_distance_1d": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestJoin",
        "test_join_with_join_distance_1d"
      ]
    ]
  ],
  "test_join_with_join_distance_1d_multikey": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestJoin",
        "test_join_with_join_distance_1d_multikey"
      ]
    ]
  ],
  "test_join_with_join_distance_1d_quantity": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestJoin",
        "test_join_with_join_distance_1d_quantity"
      ]
    ]
  ],
  "test_join_with_join_distance_2d": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestJoin",
        "test_join_with_join_distance_2d"
      ]
    ]
  ],
  "test_keys_left_right_basic": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestJoin",
        "test_keys_left_right_basic"
      ]
    ]
  ],
  "test_keys_left_right_exceptions": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestJoin",
        "test_keys_left_right_exceptions"
      ]
    ]
  ],
  "test_default_same_columns": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestSetdiff",
        "test_default_same_columns"
      ]
    ]
  ],
  "test_default_same_tables": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestSetdiff",
        "test_default_same_tables"
      ]
    ]
  ],
  "test_extra_col_left_table": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestSetdiff",
        "test_extra_col_left_table"
      ]
    ]
  ],
  "test_extra_col_right_table": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestSetdiff",
        "test_extra_col_right_table"
      ]
    ]
  ],
  "test_keys": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestSetdiff",
        "test_keys"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitAsMapping",
        "test_keys"
      ]
    ]
  ],
  "test_missing_key": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestSetdiff",
        "test_missing_key"
      ]
    ]
  ],
  "test_validate_join_type": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestVStack",
        "test_validate_join_type"
      ]
    ],
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestDStack",
        "test_validate_join_type"
      ]
    ],
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestHStack",
        "test_validate_join_type"
      ]
    ]
  ],
  "test_stack_rows": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestVStack",
        "test_stack_rows"
      ]
    ],
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestHStack",
        "test_stack_rows"
      ]
    ]
  ],
  "test_stack_table_column": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestVStack",
        "test_stack_table_column"
      ]
    ]
  ],
  "test_bad_input_type": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestVStack",
        "test_bad_input_type"
      ]
    ],
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestHStack",
        "test_bad_input_type"
      ]
    ]
  ],
  "test_stack_basic_inner": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestVStack",
        "test_stack_basic_inner"
      ]
    ]
  ],
  "test_stack_basic_outer": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestVStack",
        "test_stack_basic_outer"
      ]
    ]
  ],
  "test_stack_incompatible": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestVStack",
        "test_stack_incompatible"
      ]
    ],
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestHStack",
        "test_stack_incompatible"
      ]
    ]
  ],
  "test_vstack_one_masked": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestVStack",
        "test_vstack_one_masked"
      ]
    ]
  ],
  "test_col_meta_merge_inner": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestVStack",
        "test_col_meta_merge_inner"
      ]
    ]
  ],
  "test_col_meta_merge_outer": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestVStack",
        "test_col_meta_merge_outer"
      ]
    ]
  ],
  "test_vstack_one_table": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestVStack",
        "test_vstack_one_table"
      ]
    ]
  ],
  "test_vstack_different_representation": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestVStack",
        "test_vstack_different_representation"
      ]
    ]
  ],
  "compare_dstack": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestDStack",
        "compare_dstack"
      ]
    ]
  ],
  "test_dstack_table_column": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestDStack",
        "test_dstack_table_column"
      ]
    ]
  ],
  "test_dstack_basic_outer": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestDStack",
        "test_dstack_basic_outer"
      ]
    ]
  ],
  "test_dstack_basic_inner": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestDStack",
        "test_dstack_basic_inner"
      ]
    ]
  ],
  "test_dstack_multi_dimension_column": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestDStack",
        "test_dstack_multi_dimension_column"
      ]
    ]
  ],
  "test_dstack_different_length_table": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestDStack",
        "test_dstack_different_length_table"
      ]
    ]
  ],
  "test_dstack_single_table": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestDStack",
        "test_dstack_single_table"
      ]
    ]
  ],
  "test_dstack_representation": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestDStack",
        "test_dstack_representation"
      ]
    ]
  ],
  "test_dstack_skycoord": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestDStack",
        "test_dstack_skycoord"
      ]
    ]
  ],
  "test_stack_same_table": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestHStack",
        "test_stack_same_table"
      ]
    ]
  ],
  "test_stack_columns": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestHStack",
        "test_stack_columns"
      ]
    ],
    [
      "astropy/table/tests/test_operations.py",
      [
        "test_stack_columns"
      ]
    ]
  ],
  "test_stack_basic": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestHStack",
        "test_stack_basic"
      ]
    ]
  ],
  "test_hstack_one_masked": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestHStack",
        "test_hstack_one_masked"
      ]
    ]
  ],
  "test_table_col_rename": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestHStack",
        "test_table_col_rename"
      ]
    ]
  ],
  "test_hstack_one_table": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "TestHStack",
        "test_hstack_one_table"
      ]
    ]
  ],
  "test_unique": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "test_unique"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSetOpsFcuntions",
        "test_unique"
      ]
    ]
  ],
  "test_vstack_bytes": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "test_vstack_bytes"
      ]
    ]
  ],
  "test_vstack_unicode": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "test_vstack_unicode"
      ]
    ]
  ],
  "test_join_mixins_time_quantity": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "test_join_mixins_time_quantity"
      ]
    ]
  ],
  "test_join_mixins_not_sortable": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "test_join_mixins_not_sortable"
      ]
    ]
  ],
  "test_join_non_1d_key_column": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "test_join_non_1d_key_column"
      ]
    ]
  ],
  "test_argsort_time_column": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "test_argsort_time_column"
      ]
    ]
  ],
  "test_sort_indexed_table": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "test_sort_indexed_table"
      ]
    ]
  ],
  "test_get_out_class": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "test_get_out_class"
      ]
    ]
  ],
  "test_masking_required_exception": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "test_masking_required_exception"
      ]
    ]
  ],
  "test_mixin_join_regression": [
    [
      "astropy/table/tests/test_operations.py",
      [
        "test_mixin_join_regression"
      ]
    ]
  ],
  "test_pickle_column": [
    [
      "astropy/table/tests/test_pickle.py",
      [
        "test_pickle_column"
      ]
    ]
  ],
  "test_pickle_masked_column": [
    [
      "astropy/table/tests/test_pickle.py",
      [
        "test_pickle_masked_column"
      ]
    ]
  ],
  "test_pickle_multidimensional_column": [
    [
      "astropy/table/tests/test_pickle.py",
      [
        "test_pickle_multidimensional_column"
      ]
    ]
  ],
  "test_pickle_table": [
    [
      "astropy/table/tests/test_pickle.py",
      [
        "test_pickle_table"
      ]
    ]
  ],
  "test_pickle_masked_table": [
    [
      "astropy/table/tests/test_pickle.py",
      [
        "test_pickle_masked_table"
      ]
    ]
  ],
  "test_pickle_indexed_table": [
    [
      "astropy/table/tests/test_pickle.py",
      [
        "test_pickle_indexed_table"
      ]
    ]
  ],
  "test_multidim": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestMultiD",
        "test_multidim"
      ]
    ]
  ],
  "test_fake_multidim": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestMultiD",
        "test_fake_multidim"
      ]
    ]
  ],
  "test_html_escaping": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "test_html_escaping"
      ]
    ]
  ],
  "test_format0": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestPprint",
        "test_format0"
      ]
    ]
  ],
  "test_format1": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestPprint",
        "test_format1"
      ]
    ]
  ],
  "test_format2": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestPprint",
        "test_format2"
      ]
    ]
  ],
  "test_format3": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestPprint",
        "test_format3"
      ]
    ]
  ],
  "test_format4": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestPprint",
        "test_format4"
      ]
    ]
  ],
  "test_noclip": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestPprint",
        "test_noclip"
      ]
    ],
    [
      "astropy/visualization/tests/test_norm.py",
      [
        "TestNormalize",
        "test_noclip"
      ]
    ]
  ],
  "test_clip1": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestPprint",
        "test_clip1"
      ]
    ]
  ],
  "test_clip2": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestPprint",
        "test_clip2"
      ]
    ]
  ],
  "test_clip3": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestPprint",
        "test_clip3"
      ]
    ]
  ],
  "test_clip4": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestPprint",
        "test_clip4"
      ]
    ]
  ],
  "test_pformat_all": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestPprint",
        "test_pformat_all"
      ]
    ]
  ],
  "test_pprint_all": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestPprint",
        "test_pprint_all"
      ]
    ]
  ],
  "test_column_format": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestFormat",
        "test_column_format"
      ]
    ],
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestFormatWithMaskedElements",
        "test_column_format"
      ]
    ]
  ],
  "test_column_format_with_threshold": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestFormat",
        "test_column_format_with_threshold"
      ]
    ]
  ],
  "test_column_format_func": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestFormat",
        "test_column_format_func"
      ]
    ],
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestFormatWithMaskedElements",
        "test_column_format_func"
      ]
    ]
  ],
  "test_column_format_callable": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestFormat",
        "test_column_format_callable"
      ]
    ],
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestFormatWithMaskedElements",
        "test_column_format_callable"
      ]
    ]
  ],
  "test_column_format_func_wrong_number_args": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestFormat",
        "test_column_format_func_wrong_number_args"
      ]
    ],
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestFormatWithMaskedElements",
        "test_column_format_func_wrong_number_args"
      ]
    ]
  ],
  "test_column_format_func_multiD": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestFormat",
        "test_column_format_func_multiD"
      ]
    ],
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestFormatWithMaskedElements",
        "test_column_format_func_multiD"
      ]
    ]
  ],
  "test_column_format_func_not_str": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestFormat",
        "test_column_format_func_not_str"
      ]
    ]
  ],
  "test_column_alignment": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestFormat",
        "test_column_alignment"
      ]
    ]
  ],
  "test_column_format_with_threshold_masked_table": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestFormatWithMaskedElements",
        "test_column_format_with_threshold_masked_table"
      ]
    ]
  ],
  "test_column_format_func_with_special_masked": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestFormatWithMaskedElements",
        "test_column_format_func_with_special_masked"
      ]
    ]
  ],
  "test_pprint_npfloat32": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "test_pprint_npfloat32"
      ]
    ]
  ],
  "test_pprint_py3_bytes": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "test_pprint_py3_bytes"
      ]
    ]
  ],
  "test_pprint_nameless_col": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "test_pprint_nameless_col"
      ]
    ]
  ],
  "test_html": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "test_html"
      ]
    ]
  ],
  "test_align": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "test_align"
      ]
    ]
  ],
  "test_auto_format_func": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "test_auto_format_func"
      ]
    ]
  ],
  "test_decode_replace": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "test_decode_replace"
      ]
    ]
  ],
  "test_slice": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestColumnsShowHide",
        "test_slice"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestArrayConversion",
        "test_slice"
      ]
    ],
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_slice"
      ]
    ]
  ],
  "test_setting": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestColumnsShowHide",
        "test_setting"
      ]
    ]
  ],
  "test_add_remove": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestColumnsShowHide",
        "test_add_remove"
      ]
    ]
  ],
  "test_rename": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestColumnsShowHide",
        "test_rename"
      ]
    ]
  ],
  "test_serialization": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestColumnsShowHide",
        "test_serialization"
      ]
    ]
  ],
  "test_output": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestColumnsShowHide",
        "test_output"
      ]
    ]
  ],
  "test_output_globs": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "TestColumnsShowHide",
        "test_output_globs"
      ]
    ]
  ],
  "test_embedded_newline_tab": [
    [
      "astropy/table/tests/test_pprint.py",
      [
        "test_embedded_newline_tab"
      ]
    ]
  ],
  "test_masked_row_with_object_col": [
    [
      "astropy/table/tests/test_row.py",
      [
        "test_masked_row_with_object_col"
      ]
    ]
  ],
  "test_values": [
    [
      "astropy/table/tests/test_row.py",
      [
        "TestRow",
        "test_values"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitAsMapping",
        "test_values"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/tests/test_formatter_locator.py",
      [
        "TestAngleFormatterLocator",
        "test_values"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/tests/test_formatter_locator.py",
      [
        "TestScalarFormatterLocator",
        "test_values"
      ]
    ]
  ],
  "test_left_equal": [
    [
      "astropy/table/tests/test_row.py",
      [
        "TestRow",
        "test_left_equal"
      ]
    ]
  ],
  "test_left_not_equal": [
    [
      "astropy/table/tests/test_row.py",
      [
        "TestRow",
        "test_left_not_equal"
      ]
    ]
  ],
  "test_right_equal": [
    [
      "astropy/table/tests/test_row.py",
      [
        "TestRow",
        "test_right_equal"
      ]
    ]
  ],
  "test_format_row": [
    [
      "astropy/table/tests/test_row.py",
      [
        "TestRow",
        "test_format_row"
      ]
    ]
  ],
  "test_as_void": [
    [
      "astropy/table/tests/test_row.py",
      [
        "TestRow",
        "test_as_void"
      ]
    ]
  ],
  "test_row_and_as_void_with_objects": [
    [
      "astropy/table/tests/test_row.py",
      [
        "TestRow",
        "test_row_and_as_void_with_objects"
      ]
    ]
  ],
  "test_bounds_checking": [
    [
      "astropy/table/tests/test_row.py",
      [
        "TestRow",
        "test_bounds_checking"
      ]
    ]
  ],
  "test_create_rows_from_list": [
    [
      "astropy/table/tests/test_row.py",
      [
        "TestRow",
        "test_create_rows_from_list"
      ]
    ]
  ],
  "test_row_keys_values": [
    [
      "astropy/table/tests/test_row.py",
      [
        "TestRow",
        "test_row_keys_values"
      ]
    ]
  ],
  "test_row_as_mapping": [
    [
      "astropy/table/tests/test_row.py",
      [
        "TestRow",
        "test_row_as_mapping"
      ]
    ]
  ],
  "test_row_as_sequence": [
    [
      "astropy/table/tests/test_row.py",
      [
        "TestRow",
        "test_row_as_sequence"
      ]
    ]
  ],
  "test_row_tuple_column_slice": [
    [
      "astropy/table/tests/test_row.py",
      [
        "test_row_tuple_column_slice"
      ]
    ]
  ],
  "test_row_tuple_column_slice_transaction": [
    [
      "astropy/table/tests/test_row.py",
      [
        "test_row_tuple_column_slice_transaction"
      ]
    ]
  ],
  "test_uint_indexing": [
    [
      "astropy/table/tests/test_row.py",
      [
        "test_uint_indexing"
      ]
    ]
  ],
  "test_stats": [
    [
      "astropy/table/tests/test_showtable.py",
      [
        "test_stats"
      ]
    ]
  ],
  "test_fits": [
    [
      "astropy/table/tests/test_showtable.py",
      [
        "test_fits"
      ]
    ]
  ],
  "test_fits_hdu": [
    [
      "astropy/table/tests/test_showtable.py",
      [
        "test_fits_hdu"
      ]
    ]
  ],
  "test_csv": [
    [
      "astropy/table/tests/test_showtable.py",
      [
        "test_csv"
      ]
    ]
  ],
  "test_ascii_format": [
    [
      "astropy/table/tests/test_showtable.py",
      [
        "test_ascii_format"
      ]
    ]
  ],
  "test_ascii_delimiter": [
    [
      "astropy/table/tests/test_showtable.py",
      [
        "test_ascii_delimiter"
      ]
    ]
  ],
  "test_votable": [
    [
      "astropy/table/tests/test_showtable.py",
      [
        "test_votable"
      ]
    ]
  ],
  "test_max_lines": [
    [
      "astropy/table/tests/test_showtable.py",
      [
        "test_max_lines"
      ]
    ]
  ],
  "test_show_dtype": [
    [
      "astropy/table/tests/test_showtable.py",
      [
        "test_show_dtype"
      ]
    ]
  ],
  "test_hide_unit": [
    [
      "astropy/table/tests/test_showtable.py",
      [
        "test_hide_unit"
      ]
    ]
  ],
  "test_simple_subclass": [
    [
      "astropy/table/tests/test_subclass.py",
      [
        "test_simple_subclass"
      ]
    ]
  ],
  "test_params_table": [
    [
      "astropy/table/tests/test_subclass.py",
      [
        "test_params_table"
      ]
    ]
  ],
  "a": [
    [
      "astropy/table/tests/test_table.py",
      [
        "SetupData",
        "a"
      ]
    ]
  ],
  "b": [
    [
      "astropy/table/tests/test_table.py",
      [
        "SetupData",
        "b"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddRow",
        "b"
      ]
    ],
    [
      "astropy/wcs/setup_package.py",
      [
        "b"
      ]
    ]
  ],
  "d": [
    [
      "astropy/table/tests/test_table.py",
      [
        "SetupData",
        "d"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddRow",
        "d"
      ]
    ]
  ],
  "obj": [
    [
      "astropy/table/tests/test_table.py",
      [
        "SetupData",
        "obj"
      ]
    ]
  ],
  "test_set_row": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestSetTableColumn",
        "test_set_row"
      ]
    ]
  ],
  "test_set_row_existing": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestSetTableColumn",
        "test_set_row_existing"
      ]
    ]
  ],
  "test_set_row_fail_1": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestSetTableColumn",
        "test_set_row_fail_1"
      ]
    ]
  ],
  "test_set_row_fail_2": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestSetTableColumn",
        "test_set_row_fail_2"
      ]
    ]
  ],
  "test_set_new_col_new_table": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestSetTableColumn",
        "test_set_new_col_new_table"
      ]
    ]
  ],
  "test_set_new_col_new_table_quantity": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestSetTableColumn",
        "test_set_new_col_new_table_quantity"
      ]
    ]
  ],
  "test_set_new_col_existing_table": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestSetTableColumn",
        "test_set_new_col_existing_table"
      ]
    ]
  ],
  "test_set_new_unmasked_col_existing_table": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestSetTableColumn",
        "test_set_new_unmasked_col_existing_table"
      ]
    ]
  ],
  "test_set_new_masked_col_existing_table": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestSetTableColumn",
        "test_set_new_masked_col_existing_table"
      ]
    ]
  ],
  "test_set_new_col_existing_table_fail": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestSetTableColumn",
        "test_set_new_col_existing_table_fail"
      ]
    ]
  ],
  "test_1": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestEmptyData",
        "test_1"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestColumnAccess",
        "test_1"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddPosition",
        "test_1"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestRemove",
        "test_1"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestKeep",
        "test_1"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestRename",
        "test_1"
      ]
    ],
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityCreation",
        "test_1"
      ]
    ]
  ],
  "test_2": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestEmptyData",
        "test_2"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestColumnAccess",
        "test_2"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddPosition",
        "test_2"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestRemove",
        "test_2"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestKeep",
        "test_2"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestRename",
        "test_2"
      ]
    ],
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityCreation",
        "test_2"
      ]
    ]
  ],
  "test_3": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestEmptyData",
        "test_3"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddPosition",
        "test_3"
      ]
    ],
    [
      "astropy/table/tests/test_table.py",
      [
        "TestRemove",
        "test_3"
      ]
    ],
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityCreation",
        "test_3"
      ]
    ]
  ],
  "test_4": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestEmptyData",
        "test_4"
      ]
    ]
  ],
  "test_scalar": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestEmptyData",
        "test_scalar"
      ]
    ],
    [
      "astropy/visualization/tests/test_norm.py",
      [
        "TestNormalize",
        "test_scalar"
      ]
    ]
  ],
  "test_add_via_setitem_and_slice": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestEmptyData",
        "test_add_via_setitem_and_slice"
      ]
    ]
  ],
  "test_from_np_array": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestNewFromColumns",
        "test_from_np_array"
      ]
    ]
  ],
  "test_size_mismatch": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestNewFromColumns",
        "test_size_mismatch"
      ]
    ]
  ],
  "test_reverse": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestReverse",
        "test_reverse"
      ]
    ]
  ],
  "test_reverse_big": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestReverse",
        "test_reverse_big"
      ]
    ]
  ],
  "test_reverse_mixin": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestReverse",
        "test_reverse_mixin"
      ]
    ]
  ],
  "test_round_int": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestRound",
        "test_round_int"
      ]
    ]
  ],
  "test_round_dict": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestRound",
        "test_round_dict"
      ]
    ]
  ],
  "test_round_invalid": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestRound",
        "test_round_invalid"
      ]
    ]
  ],
  "test_round_kind": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestRound",
        "test_round_kind"
      ]
    ]
  ],
  "test_itercols": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestColumnAccess",
        "test_itercols"
      ]
    ]
  ],
  "test_right_length": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddLength",
        "test_right_length"
      ]
    ]
  ],
  "test_too_long": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddLength",
        "test_too_long"
      ]
    ]
  ],
  "test_too_short": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddLength",
        "test_too_short"
      ]
    ]
  ],
  "test_override_name": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddName",
        "test_override_name"
      ]
    ]
  ],
  "test_default_name": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddName",
        "test_default_name"
      ]
    ]
  ],
  "test_from_table_cols": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestInitFromTable",
        "test_from_table_cols"
      ]
    ]
  ],
  "test_add_columns1": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddColumns",
        "test_add_columns1"
      ]
    ]
  ],
  "test_add_columns2": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddColumns",
        "test_add_columns2"
      ]
    ]
  ],
  "test_add_columns3": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddColumns",
        "test_add_columns3"
      ]
    ]
  ],
  "test_add_columns4": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddColumns",
        "test_add_columns4"
      ]
    ]
  ],
  "test_add_columns5": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddColumns",
        "test_add_columns5"
      ]
    ]
  ],
  "test_add_columns6": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddColumns",
        "test_add_columns6"
      ]
    ]
  ],
  "test_add_columns7": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddColumns",
        "test_add_columns7"
      ]
    ]
  ],
  "test_add_duplicate_column": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddColumns",
        "test_add_duplicate_column"
      ]
    ]
  ],
  "test_add_duplicate_columns": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddColumns",
        "test_add_duplicate_columns"
      ]
    ]
  ],
  "test_add_none_to_empty_table": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddRow",
        "test_add_none_to_empty_table"
      ]
    ]
  ],
  "test_add_stuff_to_empty_table": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddRow",
        "test_add_stuff_to_empty_table"
      ]
    ]
  ],
  "test_add_table_row": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddRow",
        "test_add_table_row"
      ]
    ]
  ],
  "test_add_table_row_obj": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddRow",
        "test_add_table_row_obj"
      ]
    ]
  ],
  "test_add_qtable_row_multidimensional": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddRow",
        "test_add_qtable_row_multidimensional"
      ]
    ]
  ],
  "test_add_with_tuple": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddRow",
        "test_add_with_tuple"
      ]
    ]
  ],
  "test_add_with_list": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddRow",
        "test_add_with_list"
      ]
    ]
  ],
  "test_add_with_dict": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddRow",
        "test_add_with_dict"
      ]
    ]
  ],
  "test_add_with_none": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddRow",
        "test_add_with_none"
      ]
    ]
  ],
  "test_add_missing_column": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddRow",
        "test_add_missing_column"
      ]
    ]
  ],
  "test_wrong_size_tuple": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddRow",
        "test_wrong_size_tuple"
      ]
    ]
  ],
  "test_wrong_vals_type": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddRow",
        "test_wrong_vals_type"
      ]
    ]
  ],
  "test_add_row_failures": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddRow",
        "test_add_row_failures"
      ]
    ]
  ],
  "test_insert_table_row": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestAddRow",
        "test_insert_table_row"
      ]
    ]
  ],
  "test_column_view": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestTableColumn",
        "test_column_view"
      ]
    ]
  ],
  "t2": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestRemove",
        "t2"
      ]
    ]
  ],
  "test_remove_nonexistent_row": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestRemove",
        "test_remove_nonexistent_row"
      ]
    ]
  ],
  "test_remove_row_0": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestRemove",
        "test_remove_row_0"
      ]
    ]
  ],
  "test_remove_row_1": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestRemove",
        "test_remove_row_1"
      ]
    ]
  ],
  "test_remove_row_2": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestRemove",
        "test_remove_row_2"
      ]
    ]
  ],
  "test_remove_row_slice": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestRemove",
        "test_remove_row_slice"
      ]
    ]
  ],
  "test_remove_row_list": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestRemove",
        "test_remove_row_list"
      ]
    ]
  ],
  "test_remove_row_preserves_meta": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestRemove",
        "test_remove_row_preserves_meta"
      ]
    ]
  ],
  "test_delitem_row": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestRemove",
        "test_delitem_row"
      ]
    ]
  ],
  "test_delitem_row_list": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestRemove",
        "test_delitem_row_list"
      ]
    ]
  ],
  "test_delitem_row_slice": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestRemove",
        "test_delitem_row_slice"
      ]
    ]
  ],
  "test_delitem_row_fail": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestRemove",
        "test_delitem_row_fail"
      ]
    ]
  ],
  "test_delitem_row_float": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestRemove",
        "test_delitem_row_float"
      ]
    ]
  ],
  "test_delitem1": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestRemove",
        "test_delitem1"
      ]
    ]
  ],
  "test_delitem2": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestRemove",
        "test_delitem2"
      ]
    ]
  ],
  "test_delitems": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestRemove",
        "test_delitems"
      ]
    ]
  ],
  "test_delitem_fail": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestRemove",
        "test_delitem_fail"
      ]
    ]
  ],
  "test_rename_by_attr": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestRename",
        "test_rename_by_attr"
      ]
    ]
  ],
  "test_rename_columns": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestRename",
        "test_rename_columns"
      ]
    ]
  ],
  "test_single": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestSort",
        "test_single"
      ]
    ]
  ],
  "test_single_reverse": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestSort",
        "test_single_reverse"
      ]
    ]
  ],
  "test_single_big": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestSort",
        "test_single_big"
      ]
    ]
  ],
  "test_empty_reverse": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestSort",
        "test_empty_reverse"
      ]
    ]
  ],
  "test_multiple": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestSort",
        "test_multiple"
      ]
    ]
  ],
  "test_multiple_reverse": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestSort",
        "test_multiple_reverse"
      ]
    ]
  ],
  "test_multiple_with_bytes": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestSort",
        "test_multiple_with_bytes"
      ]
    ]
  ],
  "test_multiple_with_unicode": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestSort",
        "test_multiple_with_unicode"
      ]
    ]
  ],
  "test_argsort": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestSort",
        "test_argsort"
      ]
    ],
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestArithmetic",
        "test_argsort"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestArgFunctions",
        "test_argsort"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestArgFunctions",
        "test_argsort"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_argsort"
      ]
    ]
  ],
  "test_argsort_reverse": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestSort",
        "test_argsort_reverse"
      ]
    ]
  ],
  "test_argsort_bytes": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestSort",
        "test_argsort_bytes"
      ]
    ]
  ],
  "test_argsort_unicode": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestSort",
        "test_argsort_unicode"
      ]
    ]
  ],
  "test_rebuild_column_view_then_rename": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestSort",
        "test_rebuild_column_view_then_rename"
      ]
    ]
  ],
  "test_sort_kind": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_sort_kind"
      ]
    ]
  ],
  "test_iterator": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestIterator",
        "test_iterator"
      ]
    ]
  ],
  "test_set_meta": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestSetMeta",
        "test_set_meta"
      ]
    ]
  ],
  "test_as_array_byteswap": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestConvertNumpyArray",
        "test_as_array_byteswap"
      ]
    ]
  ],
  "test_byteswap_fits_array": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestConvertNumpyArray",
        "test_byteswap_fits_array"
      ]
    ]
  ],
  "_assert_copies": [
    [
      "astropy/table/tests/test_table.py",
      [
        "_assert_copies"
      ]
    ]
  ],
  "test_copy_masked": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_copy_masked"
      ]
    ]
  ],
  "test_copy_protocol": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_copy_protocol"
      ]
    ]
  ],
  "test_disallow_inequality_comparisons": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_disallow_inequality_comparisons"
      ]
    ]
  ],
  "test_values_equal_part1": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_values_equal_part1"
      ]
    ]
  ],
  "test_rows_equal": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_rows_equal"
      ]
    ]
  ],
  "test_equality_masked": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_equality_masked"
      ]
    ]
  ],
  "test_equality_masked_bug": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_equality_masked_bug"
      ]
    ]
  ],
  "test_unicode_content": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_unicode_content"
      ]
    ]
  ],
  "test_unicode_policy": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_unicode_policy"
      ]
    ],
    [
      "astropy/units/tests/test_units.py",
      [
        "test_unicode_policy"
      ]
    ]
  ],
  "test_unicode_bytestring_conversion": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_unicode_bytestring_conversion"
      ]
    ]
  ],
  "test_table_deletion": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_table_deletion"
      ]
    ]
  ],
  "test_nested_iteration": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_nested_iteration"
      ]
    ]
  ],
  "test_table_init_from_degenerate_arrays": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_table_init_from_degenerate_arrays"
      ]
    ]
  ],
  "test_nullable_int": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestPandas",
        "test_nullable_int"
      ]
    ]
  ],
  "test_mixin_pandas": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestPandas",
        "test_mixin_pandas"
      ]
    ]
  ],
  "test_to_pandas_index": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestPandas",
        "test_to_pandas_index"
      ]
    ]
  ],
  "test_mixin_pandas_masked": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestPandas",
        "test_mixin_pandas_masked"
      ]
    ]
  ],
  "test_from_pandas_index": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestPandas",
        "test_from_pandas_index"
      ]
    ]
  ],
  "test_masking": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestPandas",
        "test_masking"
      ]
    ]
  ],
  "test_to_pandas_masked_int_data_with__index": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestPandas",
        "test_to_pandas_masked_int_data_with__index"
      ]
    ]
  ],
  "test_fail_replace_column": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestReplaceColumn",
        "test_fail_replace_column"
      ]
    ]
  ],
  "test_replace_column": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestReplaceColumn",
        "test_replace_column"
      ]
    ],
    [
      "astropy/timeseries/tests/test_common.py",
      [
        "CommonTimeSeriesTests",
        "test_replace_column"
      ]
    ]
  ],
  "test_replace_index_column": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestReplaceColumn",
        "test_replace_index_column"
      ]
    ]
  ],
  "test_replace_column_no_copy": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestReplaceColumn",
        "test_replace_column_no_copy"
      ]
    ]
  ],
  "test_replace_with_masked_col_with_units_in_qtable": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestQTableColumnConversionCornerCases",
        "test_replace_with_masked_col_with_units_in_qtable"
      ]
    ]
  ],
  "test_do_not_replace_string_column_with_units_in_qtable": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestQTableColumnConversionCornerCases",
        "test_do_not_replace_string_column_with_units_in_qtable"
      ]
    ]
  ],
  "test_simple_1": [
    [
      "astropy/table/tests/test_table.py",
      [
        "Test__Astropy_Table__",
        "test_simple_1"
      ]
    ]
  ],
  "test_simple_2": [
    [
      "astropy/table/tests/test_table.py",
      [
        "Test__Astropy_Table__",
        "test_simple_2"
      ]
    ]
  ],
  "test_kwargs_exception": [
    [
      "astropy/table/tests/test_table.py",
      [
        "Test__Astropy_Table__",
        "test_kwargs_exception"
      ]
    ]
  ],
  "test_different_lengths": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestUpdate",
        "test_different_lengths"
      ]
    ]
  ],
  "test_invalid_inputs": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestUpdate",
        "test_invalid_inputs"
      ]
    ]
  ],
  "test_metadata_conflict": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestUpdate",
        "test_metadata_conflict"
      ]
    ]
  ],
  "test_update_without_copy": [
    [
      "astropy/table/tests/test_table.py",
      [
        "TestUpdate",
        "test_update_without_copy"
      ]
    ]
  ],
  "test_table_meta_copy": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_table_meta_copy"
      ]
    ]
  ],
  "test_table_meta_copy_with_meta_arg": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_table_meta_copy_with_meta_arg"
      ]
    ]
  ],
  "test_replace_column_qtable": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_replace_column_qtable"
      ]
    ]
  ],
  "test_replace_update_column_via_setitem": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_replace_update_column_via_setitem"
      ]
    ]
  ],
  "test_replace_update_column_via_setitem_warnings_normal": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_replace_update_column_via_setitem_warnings_normal"
      ]
    ]
  ],
  "test_replace_update_column_via_setitem_warnings_slice": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_replace_update_column_via_setitem_warnings_slice"
      ]
    ]
  ],
  "test_replace_update_column_via_setitem_warnings_attributes": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_replace_update_column_via_setitem_warnings_attributes"
      ]
    ]
  ],
  "test_replace_update_column_via_setitem_warnings_refcount": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_replace_update_column_via_setitem_warnings_refcount"
      ]
    ]
  ],
  "test_replace_update_column_via_setitem_warnings_always": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_replace_update_column_via_setitem_warnings_always"
      ]
    ]
  ],
  "test_replace_update_column_via_setitem_replace_inplace": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_replace_update_column_via_setitem_replace_inplace"
      ]
    ]
  ],
  "test_primary_key_is_inherited": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_primary_key_is_inherited"
      ]
    ]
  ],
  "test_qtable_read_for_ipac_table_with_char_columns": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_qtable_read_for_ipac_table_with_char_columns"
      ]
    ]
  ],
  "test_create_table_from_final_row": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_create_table_from_final_row"
      ]
    ]
  ],
  "test_key_values_in_as_array": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_key_values_in_as_array"
      ]
    ]
  ],
  "test_table_attribute": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_table_attribute"
      ]
    ]
  ],
  "test_table_attribute_ecsv": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_table_attribute_ecsv"
      ]
    ]
  ],
  "test_table_attribute_fail": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_table_attribute_fail"
      ]
    ]
  ],
  "test_set_units_fail": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_set_units_fail"
      ]
    ]
  ],
  "test_set_units": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_set_units"
      ]
    ]
  ],
  "test_set_descriptions": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_set_descriptions"
      ]
    ]
  ],
  "test_set_units_from_row": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_set_units_from_row"
      ]
    ]
  ],
  "test_set_units_descriptions_read": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_set_units_descriptions_read"
      ]
    ]
  ],
  "test_broadcasting_8933": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_broadcasting_8933"
      ]
    ]
  ],
  "test_custom_masked_column_in_nonmasked_table": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_custom_masked_column_in_nonmasked_table"
      ]
    ]
  ],
  "test_sort_with_mutable_skycoord": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_sort_with_mutable_skycoord"
      ]
    ]
  ],
  "test_sort_with_non_mutable": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_sort_with_non_mutable"
      ]
    ]
  ],
  "test_init_with_list_of_masked_arrays": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_init_with_list_of_masked_arrays"
      ]
    ]
  ],
  "test_data_to_col_convert_strategy": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_data_to_col_convert_strategy"
      ]
    ]
  ],
  "test_rows_with_mixins": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_rows_with_mixins"
      ]
    ]
  ],
  "test_iterrows": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_iterrows"
      ]
    ]
  ],
  "test_values_and_types": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_values_and_types"
      ]
    ]
  ],
  "test_items": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_items"
      ]
    ]
  ],
  "test_read_write_not_replaceable": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_read_write_not_replaceable"
      ]
    ]
  ],
  "test_keep_columns_with_generator": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_keep_columns_with_generator"
      ]
    ]
  ],
  "test_remove_columns_with_generator": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_remove_columns_with_generator"
      ]
    ]
  ],
  "test_keep_columns_invalid_names_messages": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_keep_columns_invalid_names_messages"
      ]
    ]
  ],
  "test_remove_columns_invalid_names_messages": [
    [
      "astropy/table/tests/test_table.py",
      [
        "test_remove_columns_invalid_names_messages"
      ]
    ]
  ],
  "_suppress_stdout": [
    [
      "astropy/tests/command.py",
      [
        "_suppress_stdout"
      ]
    ]
  ],
  "initialize_options": [
    [
      "astropy/tests/command.py",
      [
        "AstropyTest",
        "initialize_options"
      ]
    ]
  ],
  "finalize_options": [
    [
      "astropy/tests/command.py",
      [
        "AstropyTest",
        "finalize_options"
      ]
    ]
  ],
  "generate_testing_command": [
    [
      "astropy/tests/command.py",
      [
        "AstropyTest",
        "generate_testing_command"
      ]
    ]
  ],
  "run": [
    [
      "astropy/tests/command.py",
      [
        "AstropyTest",
        "run"
      ]
    ]
  ],
  "_build_temp_install": [
    [
      "astropy/tests/command.py",
      [
        "AstropyTest",
        "_build_temp_install"
      ]
    ]
  ],
  "_change_permissions_testing_path": [
    [
      "astropy/tests/command.py",
      [
        "AstropyTest",
        "_change_permissions_testing_path"
      ]
    ]
  ],
  "_generate_coverage_commands": [
    [
      "astropy/tests/command.py",
      [
        "AstropyTest",
        "_generate_coverage_commands"
      ]
    ]
  ],
  "_save_coverage": [
    [
      "astropy/tests/helper.py",
      [
        "_save_coverage"
      ]
    ]
  ],
  "enable_deprecations_as_exceptions": [
    [
      "astropy/tests/helper.py",
      [
        "enable_deprecations_as_exceptions"
      ]
    ]
  ],
  "treat_deprecations_as_exceptions": [
    [
      "astropy/tests/helper.py",
      [
        "treat_deprecations_as_exceptions"
      ]
    ]
  ],
  "assert_follows_unicode_guidelines": [
    [
      "astropy/tests/helper.py",
      [
        "assert_follows_unicode_guidelines"
      ]
    ]
  ],
  "pickle_protocol": [
    [
      "astropy/tests/helper.py",
      [
        "pickle_protocol"
      ]
    ]
  ],
  "generic_recursive_equality_test": [
    [
      "astropy/tests/helper.py",
      [
        "generic_recursive_equality_test"
      ]
    ]
  ],
  "check_pickling_recovery": [
    [
      "astropy/tests/helper.py",
      [
        "check_pickling_recovery"
      ]
    ]
  ],
  "assert_quantity_allclose": [
    [
      "astropy/tests/helper.py",
      [
        "assert_quantity_allclose"
      ]
    ]
  ],
  "_generate_args": [
    [
      "astropy/tests/runner.py",
      [
        "TestRunnerBase",
        "_generate_args"
      ]
    ]
  ],
  "_has_test_dependencies": [
    [
      "astropy/tests/runner.py",
      [
        "TestRunnerBase",
        "_has_test_dependencies"
      ]
    ]
  ],
  "run_tests": [
    [
      "astropy/tests/runner.py",
      [
        "TestRunnerBase",
        "run_tests"
      ]
    ],
    [
      "astropy/tests/runner.py",
      [
        "TestRunner",
        "run_tests"
      ]
    ]
  ],
  "make_test_runner_in": [
    [
      "astropy/tests/runner.py",
      [
        "TestRunnerBase",
        "make_test_runner_in"
      ]
    ]
  ],
  "packages_path": [
    [
      "astropy/tests/runner.py",
      [
        "TestRunner",
        "packages_path"
      ]
    ]
  ],
  "coverage": [
    [
      "astropy/tests/runner.py",
      [
        "TestRunner",
        "coverage"
      ]
    ]
  ],
  "package": [
    [
      "astropy/tests/runner.py",
      [
        "TestRunner",
        "package"
      ]
    ]
  ],
  "args": [
    [
      "astropy/tests/runner.py",
      [
        "TestRunner",
        "args"
      ]
    ]
  ],
  "plugins": [
    [
      "astropy/tests/runner.py",
      [
        "TestRunner",
        "plugins"
      ]
    ]
  ],
  "verbose": [
    [
      "astropy/tests/runner.py",
      [
        "TestRunner",
        "verbose"
      ]
    ]
  ],
  "pastebin": [
    [
      "astropy/tests/runner.py",
      [
        "TestRunner",
        "pastebin"
      ]
    ]
  ],
  "remote_data": [
    [
      "astropy/tests/runner.py",
      [
        "TestRunner",
        "remote_data"
      ]
    ]
  ],
  "pep8": [
    [
      "astropy/tests/runner.py",
      [
        "TestRunner",
        "pep8"
      ]
    ]
  ],
  "pdb": [
    [
      "astropy/tests/runner.py",
      [
        "TestRunner",
        "pdb"
      ]
    ]
  ],
  "open_files": [
    [
      "astropy/tests/runner.py",
      [
        "TestRunner",
        "open_files"
      ]
    ]
  ],
  "parallel": [
    [
      "astropy/tests/runner.py",
      [
        "TestRunner",
        "parallel"
      ]
    ]
  ],
  "docs_path": [
    [
      "astropy/tests/runner.py",
      [
        "TestRunner",
        "docs_path"
      ]
    ]
  ],
  "skip_docs": [
    [
      "astropy/tests/runner.py",
      [
        "TestRunner",
        "skip_docs"
      ]
    ]
  ],
  "repeat": [
    [
      "astropy/tests/runner.py",
      [
        "TestRunner",
        "repeat"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "repeat"
      ]
    ]
  ],
  "test_warnings_logging_disable_no_enable": [
    [
      "astropy/tests/test_logger.py",
      [
        "test_warnings_logging_disable_no_enable"
      ]
    ]
  ],
  "test_warnings_logging_enable_twice": [
    [
      "astropy/tests/test_logger.py",
      [
        "test_warnings_logging_enable_twice"
      ]
    ]
  ],
  "test_warnings_logging_overridden": [
    [
      "astropy/tests/test_logger.py",
      [
        "test_warnings_logging_overridden"
      ]
    ]
  ],
  "test_warnings_logging": [
    [
      "astropy/tests/test_logger.py",
      [
        "test_warnings_logging"
      ]
    ]
  ],
  "test_warnings_logging_with_custom_class": [
    [
      "astropy/tests/test_logger.py",
      [
        "test_warnings_logging_with_custom_class"
      ]
    ]
  ],
  "test_warning_logging_with_io_votable_warning": [
    [
      "astropy/tests/test_logger.py",
      [
        "test_warning_logging_with_io_votable_warning"
      ]
    ]
  ],
  "test_import_error_in_warning_logging": [
    [
      "astropy/tests/test_logger.py",
      [
        "test_import_error_in_warning_logging"
      ]
    ]
  ],
  "test_exception_logging_disable_no_enable": [
    [
      "astropy/tests/test_logger.py",
      [
        "test_exception_logging_disable_no_enable"
      ]
    ]
  ],
  "test_exception_logging_enable_twice": [
    [
      "astropy/tests/test_logger.py",
      [
        "test_exception_logging_enable_twice"
      ]
    ]
  ],
  "test_exception_logging_overridden": [
    [
      "astropy/tests/test_logger.py",
      [
        "test_exception_logging_overridden"
      ]
    ]
  ],
  "test_exception_logging": [
    [
      "astropy/tests/test_logger.py",
      [
        "test_exception_logging"
      ]
    ]
  ],
  "test_exception_logging_origin": [
    [
      "astropy/tests/test_logger.py",
      [
        "test_exception_logging_origin"
      ]
    ]
  ],
  "test_exception_logging_argless_exception": [
    [
      "astropy/tests/test_logger.py",
      [
        "test_exception_logging_argless_exception"
      ]
    ]
  ],
  "test_log_to_list": [
    [
      "astropy/tests/test_logger.py",
      [
        "test_log_to_list"
      ]
    ]
  ],
  "test_log_to_list_level": [
    [
      "astropy/tests/test_logger.py",
      [
        "test_log_to_list_level"
      ]
    ]
  ],
  "test_log_to_list_origin1": [
    [
      "astropy/tests/test_logger.py",
      [
        "test_log_to_list_origin1"
      ]
    ]
  ],
  "test_log_to_list_origin2": [
    [
      "astropy/tests/test_logger.py",
      [
        "test_log_to_list_origin2"
      ]
    ]
  ],
  "test_log_to_file": [
    [
      "astropy/tests/test_logger.py",
      [
        "test_log_to_file"
      ]
    ]
  ],
  "test_log_to_file_level": [
    [
      "astropy/tests/test_logger.py",
      [
        "test_log_to_file_level"
      ]
    ]
  ],
  "test_log_to_file_origin1": [
    [
      "astropy/tests/test_logger.py",
      [
        "test_log_to_file_origin1"
      ]
    ]
  ],
  "test_log_to_file_origin2": [
    [
      "astropy/tests/test_logger.py",
      [
        "test_log_to_file_origin2"
      ]
    ]
  ],
  "test_log_to_file_encoding": [
    [
      "astropy/tests/test_logger.py",
      [
        "test_log_to_file_encoding"
      ]
    ]
  ],
  "test_imports": [
    [
      "astropy/tests/tests/test_imports.py",
      [
        "test_imports"
      ]
    ]
  ],
  "test_toplevel_namespace": [
    [
      "astropy/tests/tests/test_imports.py",
      [
        "test_toplevel_namespace"
      ]
    ]
  ],
  "test_assert_quantity_allclose": [
    [
      "astropy/tests/tests/test_quantity_helpers.py",
      [
        "test_assert_quantity_allclose"
      ]
    ]
  ],
  "test_module_not_found": [
    [
      "astropy/tests/tests/test_run_tests.py",
      [
        "test_module_not_found"
      ]
    ]
  ],
  "test_pastebin_keyword": [
    [
      "astropy/tests/tests/test_run_tests.py",
      [
        "test_pastebin_keyword"
      ]
    ]
  ],
  "test_unicode_literal_conversion": [
    [
      "astropy/tests/tests/test_run_tests.py",
      [
        "test_unicode_literal_conversion"
      ]
    ]
  ],
  "test_disable_kwarg": [
    [
      "astropy/tests/tests/test_runner.py",
      [
        "test_disable_kwarg"
      ]
    ]
  ],
  "test_wrong_kwarg": [
    [
      "astropy/tests/tests/test_runner.py",
      [
        "test_wrong_kwarg"
      ]
    ]
  ],
  "test_invalid_kwarg": [
    [
      "astropy/tests/tests/test_runner.py",
      [
        "test_invalid_kwarg"
      ]
    ]
  ],
  "test_new_kwarg": [
    [
      "astropy/tests/tests/test_runner.py",
      [
        "test_new_kwarg"
      ]
    ]
  ],
  "test_priority": [
    [
      "astropy/tests/tests/test_runner.py",
      [
        "test_priority"
      ]
    ]
  ],
  "test_docs": [
    [
      "astropy/tests/tests/test_runner.py",
      [
        "test_docs"
      ]
    ]
  ],
  "_construct_from_dict_base": [
    [
      "astropy/time/core.py",
      [
        "TimeInfo",
        "_construct_from_dict_base"
      ]
    ]
  ],
  "_init_from_vals": [
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "_init_from_vals"
      ]
    ]
  ],
  "_get_time_fmt": [
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "_get_time_fmt"
      ]
    ]
  ],
  "writeable": [
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "writeable"
      ]
    ]
  ],
  "writeable_4": [
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "writeable_4"
      ]
    ]
  ],
  "format_6": [
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "format_6"
      ]
    ]
  ],
  "_set_scale": [
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "_set_scale"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeDelta",
        "_set_scale"
      ]
    ]
  ],
  "precision_13": [
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "precision_13"
      ]
    ]
  ],
  "in_subfmt": [
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "in_subfmt"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeFormat",
        "in_subfmt"
      ]
    ]
  ],
  "in_subfmt_15": [
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "in_subfmt_15"
      ]
    ]
  ],
  "out_subfmt": [
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "out_subfmt"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeFormat",
        "out_subfmt"
      ]
    ]
  ],
  "out_subfmt_17": [
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "out_subfmt_17"
      ]
    ]
  ],
  "shape_19": [
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "shape_19"
      ]
    ]
  ],
  "_shaped_like_input": [
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "_shaped_like_input"
      ]
    ]
  ],
  "jd1": [
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "jd1"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeFormat",
        "jd1"
      ]
    ]
  ],
  "jd2": [
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "jd2"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeFormat",
        "jd2"
      ]
    ]
  ],
  "isclose": [
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "isclose"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeDelta",
        "isclose"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "isclose"
      ]
    ]
  ],
  "_advanced_index": [
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "_advanced_index"
      ]
    ]
  ],
  "argmin": [
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "argmin"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "argmin"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "argmin"
      ]
    ]
  ],
  "argmax": [
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "argmax"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "argmax"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "argmax"
      ]
    ]
  ],
  "ptp": [
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "ptp"
      ]
    ],
    [
      "astropy/units/function/logarithmic.py",
      [
        "LogQuantity",
        "ptp"
      ]
    ]
  ],
  "cache_44": [
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "cache_44"
      ]
    ]
  ],
  "_match_shape": [
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "_match_shape"
      ]
    ]
  ],
  "_time_comparison": [
    [
      "astropy/time/core.py",
      [
        "TimeBase",
        "_time_comparison"
      ]
    ]
  ],
  "_make_value_equivalent": [
    [
      "astropy/time/core.py",
      [
        "Time",
        "_make_value_equivalent"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeDelta",
        "_make_value_equivalent"
      ]
    ]
  ],
  "now": [
    [
      "astropy/time/core.py",
      [
        "Time",
        "now"
      ]
    ]
  ],
  "strptime": [
    [
      "astropy/time/core.py",
      [
        "Time",
        "strptime"
      ]
    ]
  ],
  "strftime": [
    [
      "astropy/time/core.py",
      [
        "Time",
        "strftime"
      ]
    ]
  ],
  "light_travel_time": [
    [
      "astropy/time/core.py",
      [
        "Time",
        "light_travel_time"
      ]
    ]
  ],
  "earth_rotation_angle": [
    [
      "astropy/time/core.py",
      [
        "Time",
        "earth_rotation_angle"
      ]
    ]
  ],
  "sidereal_time": [
    [
      "astropy/time/core.py",
      [
        "Time",
        "sidereal_time"
      ]
    ]
  ],
  "_sid_time_or_earth_rot_ang": [
    [
      "astropy/time/core.py",
      [
        "Time",
        "_sid_time_or_earth_rot_ang"
      ]
    ]
  ],
  "_call_erfa": [
    [
      "astropy/time/core.py",
      [
        "Time",
        "_call_erfa"
      ]
    ]
  ],
  "get_delta_ut1_utc": [
    [
      "astropy/time/core.py",
      [
        "Time",
        "get_delta_ut1_utc"
      ]
    ]
  ],
  "_get_delta_ut1_utc": [
    [
      "astropy/time/core.py",
      [
        "Time",
        "_get_delta_ut1_utc"
      ]
    ]
  ],
  "_set_delta_ut1_utc": [
    [
      "astropy/time/core.py",
      [
        "Time",
        "_set_delta_ut1_utc"
      ]
    ]
  ],
  "_get_delta_tdb_tt": [
    [
      "astropy/time/core.py",
      [
        "Time",
        "_get_delta_tdb_tt"
      ]
    ]
  ],
  "_set_delta_tdb_tt": [
    [
      "astropy/time/core.py",
      [
        "Time",
        "_set_delta_tdb_tt"
      ]
    ]
  ],
  "to_datetime": [
    [
      "astropy/time/core.py",
      [
        "Time",
        "to_datetime"
      ]
    ],
    [
      "astropy/time/core.py",
      [
        "TimeDelta",
        "to_datetime"
      ]
    ]
  ],
  "_get_format": [
    [
      "astropy/time/core.py",
      [
        "TimeDelta",
        "_get_format"
      ]
    ]
  ],
  "_add_sub": [
    [
      "astropy/time/core.py",
      [
        "TimeDelta",
        "_add_sub"
      ]
    ]
  ],
  "__abs__": [
    [
      "astropy/time/core.py",
      [
        "TimeDelta",
        "__abs__"
      ]
    ]
  ],
  "__rtruediv__": [
    [
      "astropy/time/core.py",
      [
        "TimeDelta",
        "__rtruediv__"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "__rtruediv__"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "__rtruediv__"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionQuantity",
        "__rtruediv__"
      ]
    ],
    [
      "astropy/units/physical.py",
      [
        "PhysicalType",
        "__rtruediv__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__rtruediv__"
      ]
    ]
  ],
  "_make_array": [
    [
      "astropy/time/core.py",
      [
        "_make_array"
      ]
    ]
  ],
  "get_as_filled_ndarray": [
    [
      "astropy/time/core.py",
      [
        "_check_for_masked_and_fill",
        "get_as_filled_ndarray"
      ]
    ]
  ],
  "_check_for_masked_and_fill": [
    [
      "astropy/time/core.py",
      [
        "_check_for_masked_and_fill"
      ]
    ]
  ],
  "_check_leapsec": [
    [
      "astropy/time/core.py",
      [
        "_check_leapsec"
      ]
    ]
  ],
  "update_leap_seconds": [
    [
      "astropy/time/core.py",
      [
        "update_leap_seconds"
      ]
    ]
  ],
  "_regexify_subfmts": [
    [
      "astropy/time/formats.py",
      [
        "_regexify_subfmts"
      ]
    ]
  ],
  "_get_allowed_subfmt": [
    [
      "astropy/time/formats.py",
      [
        "TimeFormat",
        "_get_allowed_subfmt"
      ]
    ]
  ],
  "in_subfmt_3": [
    [
      "astropy/time/formats.py",
      [
        "TimeFormat",
        "in_subfmt_3"
      ]
    ]
  ],
  "out_subfmt_5": [
    [
      "astropy/time/formats.py",
      [
        "TimeFormat",
        "out_subfmt_5"
      ]
    ]
  ],
  "jd1_7": [
    [
      "astropy/time/formats.py",
      [
        "TimeFormat",
        "jd1_7"
      ]
    ]
  ],
  "jd2_9": [
    [
      "astropy/time/formats.py",
      [
        "TimeFormat",
        "jd2_9"
      ]
    ]
  ],
  "scale_12": [
    [
      "astropy/time/formats.py",
      [
        "TimeFormat",
        "scale_12"
      ]
    ]
  ],
  "mask_if_needed": [
    [
      "astropy/time/formats.py",
      [
        "TimeFormat",
        "mask_if_needed"
      ]
    ]
  ],
  "jd2_filled": [
    [
      "astropy/time/formats.py",
      [
        "TimeFormat",
        "jd2_filled"
      ]
    ]
  ],
  "asarray_or_scalar": [
    [
      "astropy/time/formats.py",
      [
        "TimeFormat",
        "_check_val_type",
        "asarray_or_scalar"
      ]
    ]
  ],
  "_check_val_type": [
    [
      "astropy/time/formats.py",
      [
        "TimeFormat",
        "_check_val_type"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeNumeric",
        "_check_val_type"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeDatetime",
        "_check_val_type"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeYMDHMS",
        "_check_val_type"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeString",
        "_check_val_type"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeDatetime64",
        "_check_val_type"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeBesselianEpoch",
        "_check_val_type"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeDeltaDatetime",
        "_check_val_type"
      ]
    ],
    [
      "astropy/time/tests/test_custom_formats.py",
      [
        "test_mjd_longdouble_preserves_precision",
        "CustomMJD",
        "_check_val_type"
      ]
    ]
  ],
  "_check_scale": [
    [
      "astropy/time/formats.py",
      [
        "TimeFormat",
        "_check_scale"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeDeltaFormat",
        "_check_scale"
      ]
    ]
  ],
  "set_jds": [
    [
      "astropy/time/formats.py",
      [
        "TimeFormat",
        "set_jds"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeJD",
        "set_jds"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeMJD",
        "set_jds"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeDecimalYear",
        "set_jds"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeFromEpoch",
        "set_jds"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeDatetime",
        "set_jds"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeYMDHMS",
        "set_jds"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeString",
        "set_jds"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeDatetime64",
        "set_jds"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeEpochDate",
        "set_jds"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeEpochDateString",
        "set_jds"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeDeltaNumeric",
        "set_jds"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeDeltaDatetime",
        "set_jds"
      ]
    ],
    [
      "astropy/time/tests/test_custom_formats.py",
      [
        "test_custom_time_format_problematic_name",
        "try_",
        "Custom",
        "set_jds"
      ]
    ],
    [
      "astropy/time/tests/test_custom_formats.py",
      [
        "test_mjd_longdouble_preserves_precision",
        "CustomMJD",
        "set_jds"
      ]
    ],
    [
      "astropy/time/tests/test_custom_formats.py",
      [
        "test_custom_format_cannot_make_bogus_jd1",
        "Custom",
        "set_jds"
      ]
    ],
    [
      "astropy/time/tests/test_custom_formats.py",
      [
        "test_custom_format_can_return_any_scalar",
        "Custom",
        "set_jds"
      ]
    ],
    [
      "astropy/time/tests/test_custom_formats.py",
      [
        "test_custom_format_can_return_any_iterable",
        "Custom",
        "set_jds"
      ]
    ]
  ],
  "_select_subfmts": [
    [
      "astropy/time/formats.py",
      [
        "TimeFormat",
        "_select_subfmts"
      ]
    ]
  ],
  "_epoch": [
    [
      "astropy/time/formats.py",
      [
        "TimeFromEpoch",
        "_epoch"
      ]
    ]
  ],
  "_default_scale": [
    [
      "astropy/time/formats.py",
      [
        "TimeFromEpoch",
        "_default_scale"
      ]
    ]
  ],
  "comma_repr": [
    [
      "astropy/time/formats.py",
      [
        "TimeYMDHMS",
        "_check_val_type",
        "comma_repr"
      ]
    ]
  ],
  "utcoffset": [
    [
      "astropy/time/formats.py",
      [
        "TimezoneInfo",
        "utcoffset"
      ]
    ]
  ],
  "tzname": [
    [
      "astropy/time/formats.py",
      [
        "TimezoneInfo",
        "tzname"
      ]
    ]
  ],
  "dst": [
    [
      "astropy/time/formats.py",
      [
        "TimezoneInfo",
        "dst"
      ]
    ]
  ],
  "parse_string": [
    [
      "astropy/time/formats.py",
      [
        "TimeString",
        "parse_string"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeISO",
        "parse_string"
      ]
    ],
    [
      "astropy/time/formats.py",
      [
        "TimeFITS",
        "parse_string"
      ]
    ]
  ],
  "get_jds_python": [
    [
      "astropy/time/formats.py",
      [
        "TimeString",
        "get_jds_python"
      ]
    ]
  ],
  "get_jds_fast": [
    [
      "astropy/time/formats.py",
      [
        "TimeString",
        "get_jds_fast"
      ]
    ]
  ],
  "str_kwargs": [
    [
      "astropy/time/formats.py",
      [
        "TimeString",
        "str_kwargs"
      ]
    ]
  ],
  "format_string": [
    [
      "astropy/time/formats.py",
      [
        "TimeString",
        "format_string"
      ]
    ]
  ],
  "_validate_jd_for_storage": [
    [
      "astropy/time/formats.py",
      [
        "_validate_jd_for_storage"
      ]
    ]
  ],
  "_broadcast_writeable": [
    [
      "astropy/time/formats.py",
      [
        "_broadcast_writeable"
      ]
    ]
  ],
  "test_empty_value": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestBasic",
        "test_empty_value"
      ]
    ]
  ],
  "test_copy_time": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestBasic",
        "test_copy_time"
      ]
    ]
  ],
  "test_properties": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestBasic",
        "test_properties"
      ]
    ]
  ],
  "test_transforms_no_location": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestBasic",
        "test_transforms_no_location"
      ]
    ]
  ],
  "test_location": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestBasic",
        "test_location"
      ]
    ]
  ],
  "test_location_array": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestBasic",
        "test_location_array"
      ]
    ]
  ],
  "test_all_scale_transforms": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestBasic",
        "test_all_scale_transforms"
      ]
    ]
  ],
  "test_creating_all_formats": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestBasic",
        "test_creating_all_formats"
      ]
    ]
  ],
  "test_local_format_transforms": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestBasic",
        "test_local_format_transforms"
      ]
    ]
  ],
  "test_datetime": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestBasic",
        "test_datetime"
      ]
    ]
  ],
  "test_datetime64": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestBasic",
        "test_datetime64"
      ]
    ]
  ],
  "test_epoch_transform": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestBasic",
        "test_epoch_transform"
      ]
    ]
  ],
  "test_input_validation": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestBasic",
        "test_input_validation"
      ]
    ]
  ],
  "test_utc_leap_sec": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestBasic",
        "test_utc_leap_sec"
      ]
    ]
  ],
  "test_init_from_time_objects": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestBasic",
        "test_init_from_time_objects"
      ]
    ]
  ],
  "test_unused_val2_raises": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestVal2",
        "test_unused_val2_raises"
      ]
    ]
  ],
  "test_val2": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestVal2",
        "test_val2"
      ]
    ]
  ],
  "test_val_broadcasts_against_val2": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestVal2",
        "test_val_broadcasts_against_val2"
      ]
    ]
  ],
  "test_broadcast_not_writable": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestVal2",
        "test_broadcast_not_writable"
      ]
    ]
  ],
  "test_broadcast_one_not_writable": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestVal2",
        "test_broadcast_one_not_writable"
      ]
    ]
  ],
  "test_input_subformat": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestSubFormat",
        "test_input_subformat"
      ]
    ]
  ],
  "test_input_subformat_fail": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestSubFormat",
        "test_input_subformat_fail"
      ]
    ]
  ],
  "test_bad_input_subformat": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestSubFormat",
        "test_bad_input_subformat"
      ]
    ]
  ],
  "test_output_subformat": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestSubFormat",
        "test_output_subformat"
      ]
    ]
  ],
  "test_fits_format": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestSubFormat",
        "test_fits_format"
      ]
    ]
  ],
  "test_yday_format": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestSubFormat",
        "test_yday_format"
      ]
    ]
  ],
  "test_scale_input": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestSubFormat",
        "test_scale_input"
      ]
    ]
  ],
  "test_fits_scale": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestSubFormat",
        "test_fits_scale"
      ]
    ]
  ],
  "test_scale_default": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestSubFormat",
        "test_scale_default"
      ]
    ]
  ],
  "test_epoch_times": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestSubFormat",
        "test_epoch_times"
      ]
    ]
  ],
  "test_plot_date": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestSubFormat",
        "test_plot_date"
      ]
    ]
  ],
  "test_explicit_example": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestNumericalSubFormat",
        "test_explicit_example"
      ]
    ]
  ],
  "test_explicit_longdouble": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestNumericalSubFormat",
        "test_explicit_longdouble"
      ]
    ]
  ],
  "test_explicit_longdouble_one_val": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestNumericalSubFormat",
        "test_explicit_longdouble_one_val"
      ]
    ]
  ],
  "test_longdouble_for_other_types": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestNumericalSubFormat",
        "test_longdouble_for_other_types"
      ]
    ]
  ],
  "test_subformat_input": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestNumericalSubFormat",
        "test_subformat_input"
      ]
    ]
  ],
  "test_subformat_output": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestNumericalSubFormat",
        "test_subformat_output"
      ]
    ]
  ],
  "test_explicit_string_other_formats": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestNumericalSubFormat",
        "test_explicit_string_other_formats"
      ]
    ]
  ],
  "test_basic_subformat_setting": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestNumericalSubFormat",
        "test_basic_subformat_setting"
      ]
    ]
  ],
  "test_basic_subformat_cache_does_not_crash": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestNumericalSubFormat",
        "test_basic_subformat_cache_does_not_crash"
      ]
    ]
  ],
  "test_decimal_context_does_not_affect_string": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestNumericalSubFormat",
        "test_decimal_context_does_not_affect_string"
      ]
    ]
  ],
  "test_decimal_context_caching": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestNumericalSubFormat",
        "test_decimal_context_caching"
      ]
    ]
  ],
  "test_timedelta_basic": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestNumericalSubFormat",
        "test_timedelta_basic"
      ]
    ]
  ],
  "test_need_format_argument": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestNumericalSubFormat",
        "test_need_format_argument"
      ]
    ]
  ],
  "test_wrong_in_subfmt": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestNumericalSubFormat",
        "test_wrong_in_subfmt"
      ]
    ]
  ],
  "test_wrong_subfmt": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestNumericalSubFormat",
        "test_wrong_subfmt"
      ]
    ]
  ],
  "test_not_allowed_subfmt": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestNumericalSubFormat",
        "test_not_allowed_subfmt"
      ]
    ]
  ],
  "test_switch_to_format_with_no_out_subfmt": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestNumericalSubFormat",
        "test_switch_to_format_with_no_out_subfmt"
      ]
    ]
  ],
  "test_bad_time": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestSofaErrors",
        "test_bad_time"
      ]
    ]
  ],
  "test_immutable_input": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestCopyReplicate",
        "test_immutable_input"
      ]
    ]
  ],
  "test_iso_to_stardate": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestStardate",
        "test_iso_to_stardate"
      ]
    ]
  ],
  "test_stardate_to_iso": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "TestStardate",
        "test_stardate_to_iso"
      ]
    ]
  ],
  "test_python_builtin_copy": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_python_builtin_copy"
      ]
    ]
  ],
  "test_now": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_now"
      ]
    ]
  ],
  "test_decimalyear": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_decimalyear"
      ]
    ]
  ],
  "test_fits_year0": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_fits_year0"
      ]
    ]
  ],
  "test_fits_year10000": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_fits_year10000"
      ]
    ]
  ],
  "test_time_from_epoch_jds": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_time_from_epoch_jds"
      ]
    ]
  ],
  "test_len_size": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_len_size"
      ]
    ]
  ],
  "test_TimeFormat_scale": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_TimeFormat_scale"
      ]
    ]
  ],
  "test_scale_conversion": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_scale_conversion"
      ]
    ]
  ],
  "test_byteorder": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_byteorder"
      ]
    ]
  ],
  "test_datetime_tzinfo": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_datetime_tzinfo"
      ]
    ]
  ],
  "test_subfmts_regex": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_subfmts_regex"
      ]
    ]
  ],
  "test_set_format_basic": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_set_format_basic"
      ]
    ]
  ],
  "test_unix_tai_format": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_unix_tai_format"
      ]
    ]
  ],
  "test_set_format_shares_subfmt": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_set_format_shares_subfmt"
      ]
    ]
  ],
  "test_set_format_does_not_share_subfmt": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_set_format_does_not_share_subfmt"
      ]
    ]
  ],
  "test_replicate_value_error": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_replicate_value_error"
      ]
    ]
  ],
  "test_remove_astropy_time": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_remove_astropy_time"
      ]
    ]
  ],
  "test_isiterable": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_isiterable"
      ]
    ],
    [
      "astropy/utils/tests/test_misc.py",
      [
        "test_isiterable"
      ]
    ]
  ],
  "test_to_datetime": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_to_datetime"
      ]
    ]
  ],
  "test_to_datetime_pytz": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_to_datetime_pytz"
      ]
    ]
  ],
  "test_cache": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_cache"
      ]
    ]
  ],
  "test_epoch_date_jd_is_day_fraction": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_epoch_date_jd_is_day_fraction"
      ]
    ]
  ],
  "test_sum_is_equivalent": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_sum_is_equivalent"
      ]
    ]
  ],
  "test_string_valued_columns": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_string_valued_columns"
      ]
    ]
  ],
  "test_bytes_input": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_bytes_input"
      ]
    ]
  ],
  "test_writeable_flag": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_writeable_flag"
      ]
    ]
  ],
  "test_setitem_location": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_setitem_location"
      ]
    ]
  ],
  "test_setitem_from_python_objects": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_setitem_from_python_objects"
      ]
    ]
  ],
  "test_setitem_from_time_objects": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_setitem_from_time_objects"
      ]
    ]
  ],
  "test_setitem_bad_item": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_setitem_bad_item"
      ]
    ]
  ],
  "test_setitem_deltas": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_setitem_deltas"
      ]
    ]
  ],
  "test_strftime_scalar": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_strftime_scalar"
      ]
    ]
  ],
  "test_strftime_array": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_strftime_array"
      ]
    ]
  ],
  "test_strftime_array_2": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_strftime_array_2"
      ]
    ]
  ],
  "test_strftime_leapsecond": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_strftime_leapsecond"
      ]
    ]
  ],
  "test_strptime_scalar": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_strptime_scalar"
      ]
    ]
  ],
  "test_strptime_array": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_strptime_array"
      ]
    ]
  ],
  "test_strptime_badinput": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_strptime_badinput"
      ]
    ]
  ],
  "test_strptime_input_bytes_scalar": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_strptime_input_bytes_scalar"
      ]
    ]
  ],
  "test_strptime_input_bytes_array": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_strptime_input_bytes_array"
      ]
    ]
  ],
  "test_strptime_leapsecond": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_strptime_leapsecond"
      ]
    ]
  ],
  "test_strptime_3_digit_year": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_strptime_3_digit_year"
      ]
    ]
  ],
  "test_strptime_fracsec_scalar": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_strptime_fracsec_scalar"
      ]
    ]
  ],
  "test_strptime_fracsec_array": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_strptime_fracsec_array"
      ]
    ]
  ],
  "test_strftime_scalar_fracsec": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_strftime_scalar_fracsec"
      ]
    ]
  ],
  "test_strftime_scalar_fracsec_precision": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_strftime_scalar_fracsec_precision"
      ]
    ]
  ],
  "test_strftime_array_fracsec": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_strftime_array_fracsec"
      ]
    ]
  ],
  "test_insert_time": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_insert_time"
      ]
    ]
  ],
  "test_datetime64_no_format": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_datetime64_no_format"
      ]
    ]
  ],
  "test_hash_time": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_hash_time"
      ]
    ]
  ],
  "test_hash_time_delta": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_hash_time_delta"
      ]
    ]
  ],
  "test_get_time_fmt_exception_messages": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_get_time_fmt_exception_messages"
      ]
    ]
  ],
  "test_ymdhms_defaults": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_ymdhms_defaults"
      ]
    ]
  ],
  "test_ymdhms_init_from_table_like": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_ymdhms_init_from_table_like"
      ]
    ]
  ],
  "test_ymdhms_init_from_dict_array": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_ymdhms_init_from_dict_array"
      ]
    ]
  ],
  "test_ymdhms_init_from_dict_scalar": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_ymdhms_init_from_dict_scalar"
      ]
    ]
  ],
  "test_ymdhms_exceptions": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_ymdhms_exceptions"
      ]
    ]
  ],
  "test_ymdhms_masked": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_ymdhms_masked"
      ]
    ]
  ],
  "test_ymdhms_output": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_ymdhms_output"
      ]
    ]
  ],
  "test_broadcasting_writeable": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_broadcasting_writeable"
      ]
    ]
  ],
  "test_format_subformat_compatibility": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_format_subformat_compatibility"
      ]
    ]
  ],
  "test_to_value_with_subfmt_for_every_format": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_to_value_with_subfmt_for_every_format"
      ]
    ]
  ],
  "test_location_init": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_location_init"
      ]
    ]
  ],
  "test_location_init_fail": [
    [
      "astropy/time/tests/test_basic.py",
      [
        "test_location_init_fail"
      ]
    ]
  ],
  "test_miscompares": [
    [
      "astropy/time/tests/test_comparisons.py",
      [
        "TestTimeComparisons",
        "test_miscompares"
      ]
    ]
  ],
  "test_time_boolean": [
    [
      "astropy/time/tests/test_comparisons.py",
      [
        "TestTimeComparisons",
        "test_time_boolean"
      ]
    ]
  ],
  "isclose_swap": [
    [
      "astropy/time/tests/test_comparisons.py",
      [
        "test_isclose_time",
        "isclose_swap"
      ]
    ],
    [
      "astropy/time/tests/test_comparisons.py",
      [
        "test_isclose_timedelta",
        "isclose_swap"
      ]
    ]
  ],
  "test_isclose_time": [
    [
      "astropy/time/tests/test_comparisons.py",
      [
        "test_isclose_time"
      ]
    ]
  ],
  "test_isclose_time_exceptions": [
    [
      "astropy/time/tests/test_comparisons.py",
      [
        "test_isclose_time_exceptions"
      ]
    ]
  ],
  "isclose_other_quantity": [
    [
      "astropy/time/tests/test_comparisons.py",
      [
        "test_isclose_timedelta",
        "isclose_other_quantity"
      ]
    ]
  ],
  "test_isclose_timedelta": [
    [
      "astropy/time/tests/test_comparisons.py",
      [
        "test_isclose_timedelta"
      ]
    ]
  ],
  "test_isclose_timedelta_exceptions": [
    [
      "astropy/time/tests/test_comparisons.py",
      [
        "test_isclose_timedelta_exceptions"
      ]
    ]
  ],
  "test_arrays": [
    [
      "astropy/time/tests/test_corrs.py",
      [
        "TestHelioBaryCentric",
        "test_arrays"
      ]
    ],
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_arrays"
      ]
    ]
  ],
  "custom_format_name": [
    [
      "astropy/time/tests/test_custom_formats.py",
      [
        "custom_format_name"
      ]
    ]
  ],
  "test_custom_time_format_set_jds_exception": [
    [
      "astropy/time/tests/test_custom_formats.py",
      [
        "test_custom_time_format_set_jds_exception"
      ]
    ]
  ],
  "test_custom_time_format_val_type_exception": [
    [
      "astropy/time/tests/test_custom_formats.py",
      [
        "test_custom_time_format_val_type_exception"
      ]
    ]
  ],
  "test_custom_time_format_value_exception": [
    [
      "astropy/time/tests/test_custom_formats.py",
      [
        "test_custom_time_format_value_exception"
      ]
    ]
  ],
  "test_custom_time_format_fine": [
    [
      "astropy/time/tests/test_custom_formats.py",
      [
        "test_custom_time_format_fine"
      ]
    ]
  ],
  "test_custom_time_format_forgot_property": [
    [
      "astropy/time/tests/test_custom_formats.py",
      [
        "test_custom_time_format_forgot_property"
      ]
    ]
  ],
  "test_custom_time_format_problematic_name": [
    [
      "astropy/time/tests/test_custom_formats.py",
      [
        "test_custom_time_format_problematic_name"
      ]
    ]
  ],
  "test_mjd_longdouble_preserves_precision": [
    [
      "astropy/time/tests/test_custom_formats.py",
      [
        "test_mjd_longdouble_preserves_precision"
      ]
    ]
  ],
  "test_custom_format_cannot_make_bogus_jd1": [
    [
      "astropy/time/tests/test_custom_formats.py",
      [
        "test_custom_format_cannot_make_bogus_jd1"
      ]
    ]
  ],
  "test_custom_format_scalar_jd1_jd2_okay": [
    [
      "astropy/time/tests/test_custom_formats.py",
      [
        "test_custom_format_scalar_jd1_jd2_okay"
      ]
    ]
  ],
  "test_custom_format_can_return_any_scalar": [
    [
      "astropy/time/tests/test_custom_formats.py",
      [
        "test_custom_format_can_return_any_scalar"
      ]
    ]
  ],
  "test_custom_format_can_return_any_iterable": [
    [
      "astropy/time/tests/test_custom_formats.py",
      [
        "test_custom_format_can_return_any_iterable"
      ]
    ]
  ],
  "test_sub": [
    [
      "astropy/time/tests/test_delta.py",
      [
        "TestTimeDelta",
        "test_sub"
      ]
    ]
  ],
  "test_add": [
    [
      "astropy/time/tests/test_delta.py",
      [
        "TestTimeDelta",
        "test_add"
      ]
    ]
  ],
  "test_add_vector": [
    [
      "astropy/time/tests/test_delta.py",
      [
        "TestTimeDelta",
        "test_add_vector"
      ]
    ]
  ],
  "test_sub_vector": [
    [
      "astropy/time/tests/test_delta.py",
      [
        "TestTimeDelta",
        "test_sub_vector"
      ]
    ]
  ],
  "test_copy_timedelta": [
    [
      "astropy/time/tests/test_delta.py",
      [
        "TestTimeDelta",
        "test_copy_timedelta"
      ]
    ]
  ],
  "test_neg_abs": [
    [
      "astropy/time/tests/test_delta.py",
      [
        "TestTimeDelta",
        "test_neg_abs"
      ]
    ]
  ],
  "test_keep_properties": [
    [
      "astropy/time/tests/test_delta.py",
      [
        "TestTimeDelta",
        "test_keep_properties"
      ]
    ]
  ],
  "test_set_format": [
    [
      "astropy/time/tests/test_delta.py",
      [
        "TestTimeDelta",
        "test_set_format"
      ]
    ]
  ],
  "test_from_non_float": [
    [
      "astropy/time/tests/test_delta.py",
      [
        "TestTimeDelta",
        "test_from_non_float"
      ]
    ]
  ],
  "test_delta_scales_definition": [
    [
      "astropy/time/tests/test_delta.py",
      [
        "TestTimeDeltaScales",
        "test_delta_scales_definition"
      ]
    ]
  ],
  "test_standard_scales_for_time_minus_time": [
    [
      "astropy/time/tests/test_delta.py",
      [
        "TestTimeDeltaScales",
        "test_standard_scales_for_time_minus_time"
      ]
    ]
  ],
  "test_local_scales_for_time_minus_time": [
    [
      "astropy/time/tests/test_delta.py",
      [
        "TestTimeDeltaScales",
        "test_local_scales_for_time_minus_time"
      ]
    ]
  ],
  "test_scales_for_delta_minus_delta": [
    [
      "astropy/time/tests/test_delta.py",
      [
        "TestTimeDeltaScales",
        "test_scales_for_delta_minus_delta"
      ]
    ]
  ],
  "test_scales_for_delta_scale_is_none": [
    [
      "astropy/time/tests/test_delta.py",
      [
        "TestTimeDeltaScales",
        "test_scales_for_delta_scale_is_none"
      ]
    ]
  ],
  "test_delta_day_is_86400_seconds": [
    [
      "astropy/time/tests/test_delta.py",
      [
        "TestTimeDeltaScales",
        "test_delta_day_is_86400_seconds"
      ]
    ]
  ],
  "test_timedelta_setitem": [
    [
      "astropy/time/tests/test_delta.py",
      [
        "test_timedelta_setitem"
      ]
    ]
  ],
  "test_timedelta_setitem_sec": [
    [
      "astropy/time/tests/test_delta.py",
      [
        "test_timedelta_setitem_sec"
      ]
    ]
  ],
  "test_timedelta_mask": [
    [
      "astropy/time/tests/test_delta.py",
      [
        "test_timedelta_mask"
      ]
    ]
  ],
  "test_python_timedelta_scalar": [
    [
      "astropy/time/tests/test_delta.py",
      [
        "test_python_timedelta_scalar"
      ]
    ]
  ],
  "test_python_timedelta_vector": [
    [
      "astropy/time/tests/test_delta.py",
      [
        "test_python_timedelta_vector"
      ]
    ]
  ],
  "test_timedelta_to_datetime": [
    [
      "astropy/time/tests/test_delta.py",
      [
        "test_timedelta_to_datetime"
      ]
    ]
  ],
  "test_insert_timedelta": [
    [
      "astropy/time/tests/test_delta.py",
      [
        "test_insert_timedelta"
      ]
    ]
  ],
  "test_no_units_warning": [
    [
      "astropy/time/tests/test_delta.py",
      [
        "test_no_units_warning"
      ]
    ]
  ],
  "test_fast_conf": [
    [
      "astropy/time/tests/test_fast_parser.py",
      [
        "test_fast_conf"
      ]
    ]
  ],
  "test_fast_matches_python": [
    [
      "astropy/time/tests/test_fast_parser.py",
      [
        "test_fast_matches_python"
      ]
    ]
  ],
  "test_fast_yday_exceptions": [
    [
      "astropy/time/tests/test_fast_parser.py",
      [
        "test_fast_yday_exceptions"
      ]
    ]
  ],
  "test_fast_iso_exceptions": [
    [
      "astropy/time/tests/test_fast_parser.py",
      [
        "test_fast_iso_exceptions"
      ]
    ]
  ],
  "test_fast_non_ascii": [
    [
      "astropy/time/tests/test_fast_parser.py",
      [
        "test_fast_non_ascii"
      ]
    ]
  ],
  "test_fast_subclass": [
    [
      "astropy/time/tests/test_fast_parser.py",
      [
        "test_fast_subclass"
      ]
    ]
  ],
  "test_diff": [
    [
      "astropy/time/tests/test_functions.py",
      [
        "TestFunctionsTime",
        "test_diff"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_diff"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestIntDiffFunctions",
        "test_diff"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestIntDiffFunctions",
        "test_diff"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_functions.py",
      [
        "TestMaskedArrayCalculation",
        "test_diff"
      ]
    ]
  ],
  "test_sum_like": [
    [
      "astropy/time/tests/test_functions.py",
      [
        "TestFunctionsTimeDelta",
        "test_sum_like"
      ]
    ]
  ],
  "test_guess1": [
    [
      "astropy/time/tests/test_guess.py",
      [
        "TestGuess",
        "test_guess1"
      ]
    ]
  ],
  "test_guess2": [
    [
      "astropy/time/tests/test_guess.py",
      [
        "TestGuess",
        "test_guess2"
      ]
    ]
  ],
  "test_guess3": [
    [
      "astropy/time/tests/test_guess.py",
      [
        "TestGuess",
        "test_guess3"
      ]
    ]
  ],
  "test_guess4": [
    [
      "astropy/time/tests/test_guess.py",
      [
        "TestGuess",
        "test_guess4"
      ]
    ]
  ],
  "test_scalar_init": [
    [
      "astropy/time/tests/test_mask.py",
      [
        "test_scalar_init"
      ]
    ]
  ],
  "test_mask_not_writeable": [
    [
      "astropy/time/tests/test_mask.py",
      [
        "test_mask_not_writeable"
      ]
    ]
  ],
  "test_str": [
    [
      "astropy/time/tests/test_mask.py",
      [
        "test_str"
      ]
    ],
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogUnitStrings",
        "test_str"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitBasics",
        "test_str"
      ]
    ],
    [
      "astropy/units/tests/test_units.py",
      [
        "test_str"
      ]
    ]
  ],
  "test_masked_input": [
    [
      "astropy/time/tests/test_mask.py",
      [
        "test_masked_input"
      ]
    ]
  ],
  "test_all_masked_input": [
    [
      "astropy/time/tests/test_mask.py",
      [
        "test_all_masked_input"
      ]
    ]
  ],
  "test_serialize_fits_masked": [
    [
      "astropy/time/tests/test_mask.py",
      [
        "test_serialize_fits_masked"
      ]
    ]
  ],
  "test_serialize_hdf5_masked": [
    [
      "astropy/time/tests/test_mask.py",
      [
        "test_serialize_hdf5_masked"
      ]
    ]
  ],
  "test_serialize_ecsv_masked": [
    [
      "astropy/time/tests/test_mask.py",
      [
        "test_serialize_ecsv_masked"
      ]
    ]
  ],
  "assert_time_all_equal": [
    [
      "astropy/time/tests/test_methods.py",
      [
        "assert_time_all_equal"
      ]
    ]
  ],
  "create_data": [
    [
      "astropy/time/tests/test_methods.py",
      [
        "ShapeSetup",
        "create_data"
      ]
    ],
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestArithmetic",
        "create_data"
      ]
    ]
  ],
  "test_broadcast_via_apply": [
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestManipulation",
        "test_broadcast_via_apply"
      ]
    ]
  ],
  "test_broadcast": [
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestShapeFunctions",
        "test_broadcast"
      ]
    ]
  ],
  "test_argfuncs": [
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestArithmetic",
        "test_argfuncs"
      ]
    ]
  ],
  "test_funcs": [
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestArithmetic",
        "test_funcs"
      ]
    ]
  ],
  "test_argmin": [
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestArithmetic",
        "test_argmin"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_argmin"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestArgFunctions",
        "test_argmin"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestArgFunctions",
        "test_argmin"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_argmin"
      ]
    ]
  ],
  "test_argmax": [
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestArithmetic",
        "test_argmax"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_argmax"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestArgFunctions",
        "test_argmax"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestArgFunctions",
        "test_argmax"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_argmax"
      ]
    ]
  ],
  "test_argsort_warning": [
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestArithmetic",
        "test_argsort_warning"
      ]
    ]
  ],
  "test_min": [
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestArithmetic",
        "test_min"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_min"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_min"
      ]
    ],
    [
      "astropy/visualization/tests/test_norm.py",
      [
        "TestImageScaling",
        "test_min"
      ]
    ]
  ],
  "test_max": [
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestArithmetic",
        "test_max"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_max"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_max"
      ]
    ]
  ],
  "test_ptp": [
    [
      "astropy/time/tests/test_methods.py",
      [
        "TestArithmetic",
        "test_ptp"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_ptp"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncLike",
        "test_ptp"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestMethodLikes",
        "test_ptp"
      ]
    ]
  ],
  "iers_b": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "iers_b"
      ]
    ]
  ],
  "quiet_erfa": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "quiet_erfa"
      ]
    ]
  ],
  "reasonable_ordinary_jd": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "reasonable_ordinary_jd"
      ]
    ]
  ],
  "leap_second_tricky": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "leap_second_tricky"
      ]
    ]
  ],
  "reasonable_jd": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "reasonable_jd"
      ]
    ]
  ],
  "unreasonable_ordinary_jd": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "unreasonable_ordinary_jd"
      ]
    ]
  ],
  "ordered_jd": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "ordered_jd"
      ]
    ]
  ],
  "unreasonable_jd": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "unreasonable_jd"
      ]
    ]
  ],
  "jd_arrays": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "jd_arrays"
      ]
    ]
  ],
  "unreasonable_delta": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "unreasonable_delta"
      ]
    ]
  ],
  "reasonable_delta": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "reasonable_delta"
      ]
    ]
  ],
  "test_abs_jd2_always_less_than_half": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_abs_jd2_always_less_than_half"
      ]
    ]
  ],
  "test_abs_jd2_always_less_than_half_on_construction": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_abs_jd2_always_less_than_half_on_construction"
      ]
    ]
  ],
  "test_round_to_even": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_round_to_even"
      ]
    ]
  ],
  "test_addition": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_addition"
      ]
    ],
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityOperations",
        "test_addition"
      ]
    ]
  ],
  "test_mult_div": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_mult_div"
      ]
    ]
  ],
  "test_init_variations": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_init_variations"
      ]
    ]
  ],
  "test_precision_exceeds_64bit": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_precision_exceeds_64bit"
      ]
    ]
  ],
  "test_through_scale_change": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_through_scale_change"
      ]
    ]
  ],
  "test_iso_init": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_iso_init"
      ]
    ]
  ],
  "test_jd1_is_mult_of_one": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_jd1_is_mult_of_one"
      ]
    ]
  ],
  "test_precision_neg": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_precision_neg"
      ]
    ]
  ],
  "test_precision_epoch": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_precision_epoch"
      ]
    ]
  ],
  "test_leap_seconds_rounded_correctly": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_leap_seconds_rounded_correctly"
      ]
    ]
  ],
  "test_two_sum": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_two_sum"
      ]
    ]
  ],
  "test_two_sum_symmetric": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_two_sum_symmetric"
      ]
    ]
  ],
  "test_two_sum_size": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_two_sum_size"
      ]
    ]
  ],
  "test_day_frac_harmless": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_day_frac_harmless"
      ]
    ]
  ],
  "test_day_frac_exact": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_day_frac_exact"
      ]
    ]
  ],
  "test_day_frac_idempotent": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_day_frac_idempotent"
      ]
    ]
  ],
  "test_mjd_initialization_precise": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_mjd_initialization_precise"
      ]
    ]
  ],
  "test_day_frac_always_less_than_half": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_day_frac_always_less_than_half"
      ]
    ]
  ],
  "test_day_frac_round_to_even": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_day_frac_round_to_even"
      ]
    ]
  ],
  "test_resolution_never_decreases": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_resolution_never_decreases"
      ]
    ]
  ],
  "test_resolution_never_decreases_utc": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_resolution_never_decreases_utc"
      ]
    ]
  ],
  "test_conversion_preserves_jd1_jd2_invariant": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_conversion_preserves_jd1_jd2_invariant"
      ]
    ]
  ],
  "test_conversion_never_loses_precision": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_conversion_never_loses_precision"
      ]
    ]
  ],
  "test_leap_stretch_mjd": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_leap_stretch_mjd"
      ]
    ]
  ],
  "test_jd_add_subtract_round_trip": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_jd_add_subtract_round_trip"
      ]
    ]
  ],
  "test_time_argminmaxsort": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_time_argminmaxsort"
      ]
    ]
  ],
  "test_timedelta_full_precision": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_timedelta_full_precision"
      ]
    ]
  ],
  "test_timedelta_full_precision_arithmetic": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_timedelta_full_precision_arithmetic"
      ]
    ]
  ],
  "test_timedelta_conversion": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_timedelta_conversion"
      ]
    ]
  ],
  "test_datetime_difference_agrees_with_timedelta": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_datetime_difference_agrees_with_timedelta"
      ]
    ]
  ],
  "test_datetime_to_timedelta": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_datetime_to_timedelta"
      ]
    ]
  ],
  "test_datetime_timedelta_roundtrip": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_datetime_timedelta_roundtrip"
      ]
    ]
  ],
  "test_timedelta_datetime_roundtrip": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_timedelta_datetime_roundtrip"
      ]
    ]
  ],
  "test_timedelta_from_parts": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_timedelta_from_parts"
      ]
    ]
  ],
  "test_datetime_difference_agrees_with_timedelta_no_hypothesis": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_datetime_difference_agrees_with_timedelta_no_hypothesis"
      ]
    ]
  ],
  "test_datetime_timedelta_sum": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_datetime_timedelta_sum"
      ]
    ]
  ],
  "test_sidereal_lat_independent": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_sidereal_lat_independent"
      ]
    ]
  ],
  "test_sidereal_lon_independent": [
    [
      "astropy/time/tests/test_precision.py",
      [
        "test_sidereal_lon_independent"
      ]
    ]
  ],
  "test_valid_quantity_input": [
    [
      "astropy/time/tests/test_quantity_interaction.py",
      [
        "TestTimeQuantity",
        "test_valid_quantity_input"
      ]
    ],
    [
      "astropy/time/tests/test_quantity_interaction.py",
      [
        "TestTimeDeltaQuantity",
        "test_valid_quantity_input"
      ]
    ]
  ],
  "test_invalid_quantity_input": [
    [
      "astropy/time/tests/test_quantity_interaction.py",
      [
        "TestTimeQuantity",
        "test_invalid_quantity_input"
      ]
    ],
    [
      "astropy/time/tests/test_quantity_interaction.py",
      [
        "TestTimeDeltaQuantity",
        "test_invalid_quantity_input"
      ]
    ]
  ],
  "test_column_with_and_without_units": [
    [
      "astropy/time/tests/test_quantity_interaction.py",
      [
        "TestTimeQuantity",
        "test_column_with_and_without_units"
      ]
    ]
  ],
  "test_no_quantity_input_allowed": [
    [
      "astropy/time/tests/test_quantity_interaction.py",
      [
        "TestTimeQuantity",
        "test_no_quantity_input_allowed"
      ]
    ]
  ],
  "test_valid_quantity_operations": [
    [
      "astropy/time/tests/test_quantity_interaction.py",
      [
        "TestTimeQuantity",
        "test_valid_quantity_operations"
      ]
    ]
  ],
  "test_invalid_quantity_operations": [
    [
      "astropy/time/tests/test_quantity_interaction.py",
      [
        "TestTimeQuantity",
        "test_invalid_quantity_operations"
      ]
    ],
    [
      "astropy/time/tests/test_quantity_interaction.py",
      [
        "TestTimeDeltaQuantity",
        "test_invalid_quantity_operations"
      ]
    ]
  ],
  "test_quantity_output": [
    [
      "astropy/time/tests/test_quantity_interaction.py",
      [
        "TestTimeDeltaQuantity",
        "test_quantity_output"
      ]
    ]
  ],
  "test_quantity_output_errors": [
    [
      "astropy/time/tests/test_quantity_interaction.py",
      [
        "TestTimeDeltaQuantity",
        "test_quantity_output_errors"
      ]
    ]
  ],
  "test_valid_quantity_operations1": [
    [
      "astropy/time/tests/test_quantity_interaction.py",
      [
        "TestTimeDeltaQuantity",
        "test_valid_quantity_operations1"
      ]
    ]
  ],
  "test_valid_quantity_operations2": [
    [
      "astropy/time/tests/test_quantity_interaction.py",
      [
        "TestTimeDeltaQuantity",
        "test_valid_quantity_operations2"
      ]
    ]
  ],
  "test_valid_quantity_operations3": [
    [
      "astropy/time/tests/test_quantity_interaction.py",
      [
        "TestTimeDeltaQuantity",
        "test_valid_quantity_operations3"
      ]
    ]
  ],
  "test_invalid_quantity_operations2": [
    [
      "astropy/time/tests/test_quantity_interaction.py",
      [
        "TestTimeDeltaQuantity",
        "test_invalid_quantity_operations2"
      ]
    ]
  ],
  "test_invalid_quantity_broadcast": [
    [
      "astropy/time/tests/test_quantity_interaction.py",
      [
        "TestTimeDeltaQuantity",
        "test_invalid_quantity_broadcast"
      ]
    ]
  ],
  "test_delta_ut1_utc": [
    [
      "astropy/time/tests/test_quantity_interaction.py",
      [
        "TestDeltaAttributes",
        "test_delta_ut1_utc"
      ]
    ],
    [
      "astropy/time/tests/test_ut1.py",
      [
        "TestTimeUT1",
        "test_delta_ut1_utc"
      ]
    ]
  ],
  "test_delta_tdb_tt": [
    [
      "astropy/time/tests/test_quantity_interaction.py",
      [
        "TestDeltaAttributes",
        "test_delta_tdb_tt"
      ]
    ]
  ],
  "test_quantity_conversion_rounding": [
    [
      "astropy/time/tests/test_quantity_interaction.py",
      [
        "test_quantity_conversion_rounding"
      ]
    ]
  ],
  "test_doc_string_contains_models": [
    [
      "astropy/time/tests/test_sidereal.py",
      [
        "test_doc_string_contains_models"
      ]
    ]
  ],
  "test_setup": [
    [
      "astropy/time/tests/test_sidereal.py",
      [
        "TestERFATestCases",
        "test_setup"
      ]
    ],
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantitySubclassAboveAndBelow",
        "test_setup"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedClassCreation",
        "test_setup"
      ]
    ]
  ],
  "test_iau_models": [
    [
      "astropy/time/tests/test_sidereal.py",
      [
        "TestERFATestCases",
        "test_iau_models"
      ]
    ]
  ],
  "test_era": [
    [
      "astropy/time/tests/test_sidereal.py",
      [
        "TestERFATestCases",
        "test_era"
      ]
    ],
    [
      "astropy/time/tests/test_sidereal.py",
      [
        "TestST",
        "test_era"
      ]
    ]
  ],
  "test_gmst": [
    [
      "astropy/time/tests/test_sidereal.py",
      [
        "TestST",
        "test_gmst"
      ]
    ]
  ],
  "test_gst": [
    [
      "astropy/time/tests/test_sidereal.py",
      [
        "TestST",
        "test_gst"
      ]
    ]
  ],
  "test_gmst_gst_close": [
    [
      "astropy/time/tests/test_sidereal.py",
      [
        "TestST",
        "test_gmst_gst_close"
      ]
    ]
  ],
  "test_gmst_era_close": [
    [
      "astropy/time/tests/test_sidereal.py",
      [
        "TestST",
        "test_gmst_era_close"
      ]
    ]
  ],
  "test_gmst_independent_of_self_location": [
    [
      "astropy/time/tests/test_sidereal.py",
      [
        "TestST",
        "test_gmst_independent_of_self_location"
      ]
    ]
  ],
  "test_gmst_vs_lmst": [
    [
      "astropy/time/tests/test_sidereal.py",
      [
        "TestST",
        "test_gmst_vs_lmst"
      ]
    ]
  ],
  "test_lst": [
    [
      "astropy/time/tests/test_sidereal.py",
      [
        "TestST",
        "test_lst"
      ]
    ]
  ],
  "test_lst_string_longitude": [
    [
      "astropy/time/tests/test_sidereal.py",
      [
        "TestST",
        "test_lst_string_longitude"
      ]
    ]
  ],
  "test_lst_needs_location": [
    [
      "astropy/time/tests/test_sidereal.py",
      [
        "TestST",
        "test_lst_needs_location"
      ]
    ]
  ],
  "test_lera": [
    [
      "astropy/time/tests/test_sidereal.py",
      [
        "TestST",
        "test_lera"
      ]
    ]
  ],
  "test_model_uniqueness": [
    [
      "astropy/time/tests/test_sidereal.py",
      [
        "TestModelInterpretation",
        "test_model_uniqueness"
      ]
    ]
  ],
  "test_wrong_models_raise_exceptions": [
    [
      "astropy/time/tests/test_sidereal.py",
      [
        "TestModelInterpretation",
        "test_wrong_models_raise_exceptions"
      ]
    ]
  ],
  "test_auto_update_leap_seconds": [
    [
      "astropy/time/tests/test_update_leap_seconds.py",
      [
        "TestUpdateLeapSeconds",
        "test_auto_update_leap_seconds"
      ]
    ]
  ],
  "test_never_expired_if_connected": [
    [
      "astropy/time/tests/test_update_leap_seconds.py",
      [
        "TestUpdateLeapSeconds",
        "test_never_expired_if_connected"
      ]
    ]
  ],
  "test_auto_update_always_good": [
    [
      "astropy/time/tests/test_update_leap_seconds.py",
      [
        "TestUpdateLeapSeconds",
        "test_auto_update_always_good"
      ]
    ]
  ],
  "test_auto_update_bad_file": [
    [
      "astropy/time/tests/test_update_leap_seconds.py",
      [
        "TestUpdateLeapSeconds",
        "test_auto_update_bad_file"
      ]
    ]
  ],
  "test_auto_update_corrupt_file": [
    [
      "astropy/time/tests/test_update_leap_seconds.py",
      [
        "TestUpdateLeapSeconds",
        "test_auto_update_corrupt_file"
      ]
    ]
  ],
  "test_auto_update_expired_file": [
    [
      "astropy/time/tests/test_update_leap_seconds.py",
      [
        "TestUpdateLeapSeconds",
        "test_auto_update_expired_file"
      ]
    ]
  ],
  "test_init_thread_safety": [
    [
      "astropy/time/tests/test_update_leap_seconds.py",
      [
        "TestUpdateLeapSeconds",
        "test_init_thread_safety"
      ]
    ]
  ],
  "do_ut1_prediction_tst": [
    [
      "astropy/time/tests/test_ut1.py",
      [
        "do_ut1_prediction_tst"
      ]
    ]
  ],
  "test_utc_to_ut1": [
    [
      "astropy/time/tests/test_ut1.py",
      [
        "TestTimeUT1Remote",
        "test_utc_to_ut1"
      ]
    ]
  ],
  "test_ut1_iers_auto": [
    [
      "astropy/time/tests/test_ut1.py",
      [
        "TestTimeUT1Remote",
        "test_ut1_iers_auto"
      ]
    ]
  ],
  "test_ut1_to_utc": [
    [
      "astropy/time/tests/test_ut1.py",
      [
        "TestTimeUT1",
        "test_ut1_to_utc"
      ]
    ]
  ],
  "test_empty_ut1": [
    [
      "astropy/time/tests/test_ut1.py",
      [
        "TestTimeUT1",
        "test_empty_ut1"
      ]
    ]
  ],
  "test_ut1_iers_A": [
    [
      "astropy/time/tests/test_ut1.py",
      [
        "TestTimeUT1SpecificIERSTable",
        "test_ut1_iers_A"
      ]
    ]
  ],
  "test_ut1_iers_B": [
    [
      "astropy/time/tests/test_ut1.py",
      [
        "TestTimeUT1SpecificIERSTable",
        "test_ut1_iers_B"
      ]
    ]
  ],
  "day_frac": [
    [
      "astropy/time/utils.py",
      [
        "day_frac"
      ]
    ]
  ],
  "quantity_day_frac": [
    [
      "astropy/time/utils.py",
      [
        "quantity_day_frac"
      ]
    ]
  ],
  "two_sum": [
    [
      "astropy/time/utils.py",
      [
        "two_sum"
      ]
    ]
  ],
  "two_product": [
    [
      "astropy/time/utils.py",
      [
        "two_product"
      ]
    ]
  ],
  "split": [
    [
      "astropy/time/utils.py",
      [
        "split"
      ]
    ]
  ],
  "longdouble_to_twoval": [
    [
      "astropy/time/utils.py",
      [
        "longdouble_to_twoval"
      ]
    ]
  ],
  "decimal_to_twoval1": [
    [
      "astropy/time/utils.py",
      [
        "decimal_to_twoval1"
      ]
    ]
  ],
  "bytes_to_twoval1": [
    [
      "astropy/time/utils.py",
      [
        "bytes_to_twoval1"
      ]
    ]
  ],
  "twoval_to_longdouble": [
    [
      "astropy/time/utils.py",
      [
        "twoval_to_longdouble"
      ]
    ]
  ],
  "twoval_to_decimal1": [
    [
      "astropy/time/utils.py",
      [
        "twoval_to_decimal1"
      ]
    ]
  ],
  "twoval_to_string1": [
    [
      "astropy/time/utils.py",
      [
        "twoval_to_string1"
      ]
    ]
  ],
  "twoval_to_bytes1": [
    [
      "astropy/time/utils.py",
      [
        "twoval_to_bytes1"
      ]
    ]
  ],
  "time_bin_start": [
    [
      "astropy/timeseries/binned.py",
      [
        "BinnedTimeSeries",
        "time_bin_start"
      ]
    ]
  ],
  "time_bin_center": [
    [
      "astropy/timeseries/binned.py",
      [
        "BinnedTimeSeries",
        "time_bin_center"
      ]
    ]
  ],
  "time_bin_end": [
    [
      "astropy/timeseries/binned.py",
      [
        "BinnedTimeSeries",
        "time_bin_end"
      ]
    ]
  ],
  "time_bin_size": [
    [
      "astropy/timeseries/binned.py",
      [
        "BinnedTimeSeries",
        "time_bin_size"
      ]
    ]
  ],
  "autocheck_required_columns": [
    [
      "astropy/timeseries/core.py",
      [
        "autocheck_required_columns"
      ]
    ]
  ],
  "_check_required_columns": [
    [
      "astropy/timeseries/core.py",
      [
        "BaseTimeSeries",
        "_check_required_columns"
      ]
    ]
  ],
  "_delay_required_column_checks": [
    [
      "astropy/timeseries/core.py",
      [
        "BaseTimeSeries",
        "_delay_required_column_checks"
      ]
    ]
  ],
  "reduceat": [
    [
      "astropy/timeseries/downsample.py",
      [
        "reduceat"
      ]
    ]
  ],
  "aggregate_downsample": [
    [
      "astropy/timeseries/downsample.py",
      [
        "aggregate_downsample"
      ]
    ]
  ],
  "kepler_fits_reader": [
    [
      "astropy/timeseries/io/kepler.py",
      [
        "kepler_fits_reader"
      ]
    ]
  ],
  "fake_header": [
    [
      "astropy/timeseries/io/tests/test_kepler.py",
      [
        "fake_header"
      ]
    ]
  ],
  "fake_hdulist": [
    [
      "astropy/timeseries/io/tests/test_kepler.py",
      [
        "fake_hdulist"
      ]
    ]
  ],
  "test_raise_telescop_wrong": [
    [
      "astropy/timeseries/io/tests/test_kepler.py",
      [
        "test_raise_telescop_wrong"
      ]
    ]
  ],
  "test_raise_extversion_kepler": [
    [
      "astropy/timeseries/io/tests/test_kepler.py",
      [
        "test_raise_extversion_kepler"
      ]
    ]
  ],
  "test_raise_extversion_tess": [
    [
      "astropy/timeseries/io/tests/test_kepler.py",
      [
        "test_raise_extversion_tess"
      ]
    ]
  ],
  "test_raise_timesys_kepler": [
    [
      "astropy/timeseries/io/tests/test_kepler.py",
      [
        "test_raise_timesys_kepler"
      ]
    ]
  ],
  "test_raise_timesys_tess": [
    [
      "astropy/timeseries/io/tests/test_kepler.py",
      [
        "test_raise_timesys_tess"
      ]
    ]
  ],
  "test_kepler_astropy": [
    [
      "astropy/timeseries/io/tests/test_kepler.py",
      [
        "test_kepler_astropy"
      ]
    ],
    [
      "astropy/timeseries/tests/test_sampled.py",
      [
        "test_kepler_astropy"
      ]
    ]
  ],
  "test_tess_astropy": [
    [
      "astropy/timeseries/io/tests/test_kepler.py",
      [
        "test_tess_astropy"
      ]
    ],
    [
      "astropy/timeseries/tests/test_sampled.py",
      [
        "test_tess_astropy"
      ]
    ]
  ],
  "from_timeseries": [
    [
      "astropy/timeseries/periodograms/base.py",
      [
        "BasePeriodogram",
        "from_timeseries"
      ]
    ]
  ],
  "validate_unit_consistency": [
    [
      "astropy/timeseries/periodograms/bls/core.py",
      [
        "validate_unit_consistency"
      ]
    ]
  ],
  "autoperiod": [
    [
      "astropy/timeseries/periodograms/bls/core.py",
      [
        "BoxLeastSquares",
        "autoperiod"
      ]
    ]
  ],
  "autopower": [
    [
      "astropy/timeseries/periodograms/bls/core.py",
      [
        "BoxLeastSquares",
        "autopower"
      ]
    ],
    [
      "astropy/timeseries/periodograms/lombscargle/core.py",
      [
        "LombScargle",
        "autopower"
      ]
    ]
  ],
  "power": [
    [
      "astropy/timeseries/periodograms/bls/core.py",
      [
        "BoxLeastSquares",
        "power"
      ]
    ],
    [
      "astropy/timeseries/periodograms/lombscargle/core.py",
      [
        "LombScargle",
        "power"
      ]
    ]
  ],
  "_as_relative_time": [
    [
      "astropy/timeseries/periodograms/bls/core.py",
      [
        "BoxLeastSquares",
        "_as_relative_time"
      ]
    ],
    [
      "astropy/timeseries/periodograms/lombscargle/core.py",
      [
        "LombScargle",
        "_as_relative_time"
      ]
    ]
  ],
  "_as_absolute_time_if_needed": [
    [
      "astropy/timeseries/periodograms/bls/core.py",
      [
        "BoxLeastSquares",
        "_as_absolute_time_if_needed"
      ]
    ]
  ],
  "_compute_depth": [
    [
      "astropy/timeseries/periodograms/bls/core.py",
      [
        "BoxLeastSquares",
        "compute_stats",
        "_compute_depth"
      ]
    ]
  ],
  "compute_stats": [
    [
      "astropy/timeseries/periodograms/bls/core.py",
      [
        "BoxLeastSquares",
        "compute_stats"
      ]
    ]
  ],
  "transit_mask": [
    [
      "astropy/timeseries/periodograms/bls/core.py",
      [
        "BoxLeastSquares",
        "transit_mask"
      ]
    ]
  ],
  "_validate_inputs": [
    [
      "astropy/timeseries/periodograms/bls/core.py",
      [
        "BoxLeastSquares",
        "_validate_inputs"
      ]
    ],
    [
      "astropy/timeseries/periodograms/lombscargle/core.py",
      [
        "LombScargle",
        "_validate_inputs"
      ]
    ]
  ],
  "_validate_duration": [
    [
      "astropy/timeseries/periodograms/bls/core.py",
      [
        "BoxLeastSquares",
        "_validate_duration"
      ]
    ]
  ],
  "_validate_period_and_duration": [
    [
      "astropy/timeseries/periodograms/bls/core.py",
      [
        "BoxLeastSquares",
        "_validate_period_and_duration"
      ]
    ]
  ],
  "_format_results": [
    [
      "astropy/timeseries/periodograms/bls/core.py",
      [
        "BoxLeastSquares",
        "_format_results"
      ]
    ]
  ],
  "_t_unit": [
    [
      "astropy/timeseries/periodograms/bls/core.py",
      [
        "BoxLeastSquares",
        "_t_unit"
      ]
    ]
  ],
  "_y_unit": [
    [
      "astropy/timeseries/periodograms/bls/core.py",
      [
        "BoxLeastSquares",
        "_y_unit"
      ]
    ]
  ],
  "bls_slow": [
    [
      "astropy/timeseries/periodograms/bls/methods.py",
      [
        "bls_slow"
      ]
    ]
  ],
  "bls_fast": [
    [
      "astropy/timeseries/periodograms/bls/methods.py",
      [
        "bls_fast"
      ]
    ]
  ],
  "_bls_slow_one": [
    [
      "astropy/timeseries/periodograms/bls/methods.py",
      [
        "_bls_slow_one"
      ]
    ]
  ],
  "assert_allclose_blsresults": [
    [
      "astropy/timeseries/periodograms/bls/tests/test_bls.py",
      [
        "assert_allclose_blsresults"
      ]
    ]
  ],
  "test_32bit_bug": [
    [
      "astropy/timeseries/periodograms/bls/tests/test_bls.py",
      [
        "test_32bit_bug"
      ]
    ]
  ],
  "test_correct_model": [
    [
      "astropy/timeseries/periodograms/bls/tests/test_bls.py",
      [
        "test_correct_model"
      ]
    ]
  ],
  "test_fast_method": [
    [
      "astropy/timeseries/periodograms/bls/tests/test_bls.py",
      [
        "test_fast_method"
      ]
    ]
  ],
  "test_period_units": [
    [
      "astropy/timeseries/periodograms/bls/tests/test_bls.py",
      [
        "test_period_units"
      ]
    ]
  ],
  "test_results_units": [
    [
      "astropy/timeseries/periodograms/bls/tests/test_bls.py",
      [
        "test_results_units"
      ]
    ]
  ],
  "test_autopower": [
    [
      "astropy/timeseries/periodograms/bls/tests/test_bls.py",
      [
        "test_autopower"
      ]
    ],
    [
      "astropy/timeseries/periodograms/lombscargle/tests/test_lombscargle.py",
      [
        "test_autopower"
      ]
    ]
  ],
  "test_compute_stats": [
    [
      "astropy/timeseries/periodograms/bls/tests/test_bls.py",
      [
        "test_compute_stats"
      ]
    ]
  ],
  "test_negative_times": [
    [
      "astropy/timeseries/periodograms/bls/tests/test_bls.py",
      [
        "test_negative_times"
      ]
    ]
  ],
  "test_absolute_times": [
    [
      "astropy/timeseries/periodograms/bls/tests/test_bls.py",
      [
        "test_absolute_times"
      ]
    ],
    [
      "astropy/timeseries/periodograms/lombscargle/tests/test_lombscargle.py",
      [
        "test_absolute_times"
      ]
    ]
  ],
  "test_transit_time_in_range": [
    [
      "astropy/timeseries/periodograms/bls/tests/test_bls.py",
      [
        "test_transit_time_in_range"
      ]
    ]
  ],
  "_weighted_sum": [
    [
      "astropy/timeseries/periodograms/lombscargle/_statistics.py",
      [
        "_weighted_sum"
      ]
    ]
  ],
  "_weighted_mean": [
    [
      "astropy/timeseries/periodograms/lombscargle/_statistics.py",
      [
        "_weighted_mean"
      ]
    ]
  ],
  "_weighted_var": [
    [
      "astropy/timeseries/periodograms/lombscargle/_statistics.py",
      [
        "_weighted_var"
      ]
    ]
  ],
  "_gamma": [
    [
      "astropy/timeseries/periodograms/lombscargle/_statistics.py",
      [
        "_gamma"
      ]
    ]
  ],
  "vectorize_first_argument": [
    [
      "astropy/timeseries/periodograms/lombscargle/_statistics.py",
      [
        "vectorize_first_argument"
      ]
    ]
  ],
  "pdf_single": [
    [
      "astropy/timeseries/periodograms/lombscargle/_statistics.py",
      [
        "pdf_single"
      ]
    ]
  ],
  "fap_single": [
    [
      "astropy/timeseries/periodograms/lombscargle/_statistics.py",
      [
        "fap_single"
      ]
    ]
  ],
  "inv_fap_single": [
    [
      "astropy/timeseries/periodograms/lombscargle/_statistics.py",
      [
        "inv_fap_single"
      ]
    ]
  ],
  "cdf_single": [
    [
      "astropy/timeseries/periodograms/lombscargle/_statistics.py",
      [
        "cdf_single"
      ]
    ]
  ],
  "tau_davies": [
    [
      "astropy/timeseries/periodograms/lombscargle/_statistics.py",
      [
        "tau_davies"
      ]
    ]
  ],
  "fap_naive": [
    [
      "astropy/timeseries/periodograms/lombscargle/_statistics.py",
      [
        "fap_naive"
      ]
    ]
  ],
  "inv_fap_naive": [
    [
      "astropy/timeseries/periodograms/lombscargle/_statistics.py",
      [
        "inv_fap_naive"
      ]
    ]
  ],
  "fap_davies": [
    [
      "astropy/timeseries/periodograms/lombscargle/_statistics.py",
      [
        "fap_davies"
      ]
    ]
  ],
  "inv_fap_davies": [
    [
      "astropy/timeseries/periodograms/lombscargle/_statistics.py",
      [
        "inv_fap_davies"
      ]
    ]
  ],
  "fap_baluev": [
    [
      "astropy/timeseries/periodograms/lombscargle/_statistics.py",
      [
        "fap_baluev"
      ]
    ]
  ],
  "inv_fap_baluev": [
    [
      "astropy/timeseries/periodograms/lombscargle/_statistics.py",
      [
        "inv_fap_baluev"
      ]
    ]
  ],
  "_bootstrap_max": [
    [
      "astropy/timeseries/periodograms/lombscargle/_statistics.py",
      [
        "_bootstrap_max"
      ]
    ]
  ],
  "fap_bootstrap": [
    [
      "astropy/timeseries/periodograms/lombscargle/_statistics.py",
      [
        "fap_bootstrap"
      ]
    ]
  ],
  "inv_fap_bootstrap": [
    [
      "astropy/timeseries/periodograms/lombscargle/_statistics.py",
      [
        "inv_fap_bootstrap"
      ]
    ]
  ],
  "false_alarm_probability": [
    [
      "astropy/timeseries/periodograms/lombscargle/_statistics.py",
      [
        "false_alarm_probability"
      ]
    ],
    [
      "astropy/timeseries/periodograms/lombscargle/core.py",
      [
        "LombScargle",
        "false_alarm_probability"
      ]
    ]
  ],
  "false_alarm_level": [
    [
      "astropy/timeseries/periodograms/lombscargle/_statistics.py",
      [
        "false_alarm_level"
      ]
    ],
    [
      "astropy/timeseries/periodograms/lombscargle/core.py",
      [
        "LombScargle",
        "false_alarm_level"
      ]
    ]
  ],
  "has_units": [
    [
      "astropy/timeseries/periodograms/lombscargle/core.py",
      [
        "has_units"
      ]
    ]
  ],
  "get_unit": [
    [
      "astropy/timeseries/periodograms/lombscargle/core.py",
      [
        "get_unit"
      ]
    ]
  ],
  "strip_units": [
    [
      "astropy/timeseries/periodograms/lombscargle/core.py",
      [
        "strip_units"
      ]
    ]
  ],
  "_validate_frequency": [
    [
      "astropy/timeseries/periodograms/lombscargle/core.py",
      [
        "LombScargle",
        "_validate_frequency"
      ]
    ]
  ],
  "_validate_t": [
    [
      "astropy/timeseries/periodograms/lombscargle/core.py",
      [
        "LombScargle",
        "_validate_t"
      ]
    ]
  ],
  "_power_unit": [
    [
      "astropy/timeseries/periodograms/lombscargle/core.py",
      [
        "LombScargle",
        "_power_unit"
      ]
    ]
  ],
  "autofrequency": [
    [
      "astropy/timeseries/periodograms/lombscargle/core.py",
      [
        "LombScargle",
        "autofrequency"
      ]
    ]
  ],
  "offset": [
    [
      "astropy/timeseries/periodograms/lombscargle/core.py",
      [
        "LombScargle",
        "offset"
      ]
    ]
  ],
  "model_parameters": [
    [
      "astropy/timeseries/periodograms/lombscargle/core.py",
      [
        "LombScargle",
        "model_parameters"
      ]
    ]
  ],
  "design_matrix": [
    [
      "astropy/timeseries/periodograms/lombscargle/core.py",
      [
        "LombScargle",
        "design_matrix"
      ]
    ],
    [
      "astropy/timeseries/periodograms/lombscargle/implementations/mle.py",
      [
        "design_matrix"
      ]
    ]
  ],
  "distribution": [
    [
      "astropy/timeseries/periodograms/lombscargle/core.py",
      [
        "LombScargle",
        "distribution"
      ]
    ],
    [
      "astropy/uncertainty/core.py",
      [
        "Distribution",
        "distribution"
      ]
    ]
  ],
  "compute_power": [
    [
      "astropy/timeseries/periodograms/lombscargle/implementations/chi2_impl.py",
      [
        "lombscargle_chi2",
        "compute_power"
      ]
    ],
    [
      "astropy/timeseries/periodograms/lombscargle/implementations/fastchi2_impl.py",
      [
        "lombscargle_fastchi2",
        "compute_power"
      ]
    ]
  ],
  "lombscargle_chi2": [
    [
      "astropy/timeseries/periodograms/lombscargle/implementations/chi2_impl.py",
      [
        "lombscargle_chi2"
      ]
    ]
  ],
  "lombscargle_fast": [
    [
      "astropy/timeseries/periodograms/lombscargle/implementations/fast_impl.py",
      [
        "lombscargle_fast"
      ]
    ]
  ],
  "lombscargle_fastchi2": [
    [
      "astropy/timeseries/periodograms/lombscargle/implementations/fastchi2_impl.py",
      [
        "lombscargle_fastchi2"
      ]
    ]
  ],
  "available_methods": [
    [
      "astropy/timeseries/periodograms/lombscargle/implementations/main.py",
      [
        "available_methods"
      ]
    ]
  ],
  "_is_regular": [
    [
      "astropy/timeseries/periodograms/lombscargle/implementations/main.py",
      [
        "_is_regular"
      ]
    ]
  ],
  "_get_frequency_grid": [
    [
      "astropy/timeseries/periodograms/lombscargle/implementations/main.py",
      [
        "_get_frequency_grid"
      ]
    ]
  ],
  "validate_method": [
    [
      "astropy/timeseries/periodograms/lombscargle/implementations/main.py",
      [
        "validate_method"
      ]
    ]
  ],
  "lombscargle": [
    [
      "astropy/timeseries/periodograms/lombscargle/implementations/main.py",
      [
        "lombscargle"
      ]
    ]
  ],
  "periodic_fit": [
    [
      "astropy/timeseries/periodograms/lombscargle/implementations/mle.py",
      [
        "periodic_fit"
      ]
    ]
  ],
  "lombscargle_scipy": [
    [
      "astropy/timeseries/periodograms/lombscargle/implementations/scipy_impl.py",
      [
        "lombscargle_scipy"
      ]
    ]
  ],
  "lombscargle_slow": [
    [
      "astropy/timeseries/periodograms/lombscargle/implementations/slow_impl.py",
      [
        "lombscargle_slow"
      ]
    ]
  ],
  "test_design_matrix": [
    [
      "astropy/timeseries/periodograms/lombscargle/implementations/tests/test_mle.py",
      [
        "test_design_matrix"
      ]
    ]
  ],
  "test_multiterm_design_matrix": [
    [
      "astropy/timeseries/periodograms/lombscargle/implementations/tests/test_mle.py",
      [
        "test_multiterm_design_matrix"
      ]
    ]
  ],
  "test_exact_mle_fit": [
    [
      "astropy/timeseries/periodograms/lombscargle/implementations/tests/test_mle.py",
      [
        "test_exact_mle_fit"
      ]
    ]
  ],
  "test_bitceil": [
    [
      "astropy/timeseries/periodograms/lombscargle/implementations/tests/test_utils.py",
      [
        "test_bitceil"
      ]
    ]
  ],
  "extirpolate_data": [
    [
      "astropy/timeseries/periodograms/lombscargle/implementations/tests/test_utils.py",
      [
        "extirpolate_data"
      ]
    ]
  ],
  "test_extirpolate": [
    [
      "astropy/timeseries/periodograms/lombscargle/implementations/tests/test_utils.py",
      [
        "test_extirpolate"
      ]
    ]
  ],
  "extirpolate_int_data": [
    [
      "astropy/timeseries/periodograms/lombscargle/implementations/tests/test_utils.py",
      [
        "extirpolate_int_data"
      ]
    ]
  ],
  "test_extirpolate_with_integers": [
    [
      "astropy/timeseries/periodograms/lombscargle/implementations/tests/test_utils.py",
      [
        "test_extirpolate_with_integers"
      ]
    ]
  ],
  "trig_sum_data": [
    [
      "astropy/timeseries/periodograms/lombscargle/implementations/tests/test_utils.py",
      [
        "trig_sum_data"
      ]
    ]
  ],
  "test_trig_sum": [
    [
      "astropy/timeseries/periodograms/lombscargle/implementations/tests/test_utils.py",
      [
        "test_trig_sum"
      ]
    ]
  ],
  "bitceil": [
    [
      "astropy/timeseries/periodograms/lombscargle/implementations/utils.py",
      [
        "bitceil"
      ]
    ]
  ],
  "extirpolate": [
    [
      "astropy/timeseries/periodograms/lombscargle/implementations/utils.py",
      [
        "extirpolate"
      ]
    ]
  ],
  "trig_sum": [
    [
      "astropy/timeseries/periodograms/lombscargle/implementations/utils.py",
      [
        "trig_sum"
      ]
    ]
  ],
  "test_autofrequency": [
    [
      "astropy/timeseries/periodograms/lombscargle/tests/test_lombscargle.py",
      [
        "test_autofrequency"
      ]
    ]
  ],
  "test_all_methods": [
    [
      "astropy/timeseries/periodograms/lombscargle/tests/test_lombscargle.py",
      [
        "test_all_methods"
      ]
    ]
  ],
  "test_integer_inputs": [
    [
      "astropy/timeseries/periodograms/lombscargle/tests/test_lombscargle.py",
      [
        "test_integer_inputs"
      ]
    ]
  ],
  "test_nterms_methods": [
    [
      "astropy/timeseries/periodograms/lombscargle/tests/test_lombscargle.py",
      [
        "test_nterms_methods"
      ]
    ]
  ],
  "test_fast_approximations": [
    [
      "astropy/timeseries/periodograms/lombscargle/tests/test_lombscargle.py",
      [
        "test_fast_approximations"
      ]
    ]
  ],
  "test_output_shapes": [
    [
      "astropy/timeseries/periodograms/lombscargle/tests/test_lombscargle.py",
      [
        "test_output_shapes"
      ]
    ]
  ],
  "test_errors_on_unit_mismatch": [
    [
      "astropy/timeseries/periodograms/lombscargle/tests/test_lombscargle.py",
      [
        "test_errors_on_unit_mismatch"
      ]
    ]
  ],
  "test_unit_conversions": [
    [
      "astropy/timeseries/periodograms/lombscargle/tests/test_lombscargle.py",
      [
        "test_unit_conversions"
      ]
    ]
  ],
  "test_model_units_match": [
    [
      "astropy/timeseries/periodograms/lombscargle/tests/test_lombscargle.py",
      [
        "test_model_units_match"
      ]
    ]
  ],
  "test_model_units_mismatch": [
    [
      "astropy/timeseries/periodograms/lombscargle/tests/test_lombscargle.py",
      [
        "test_model_units_mismatch"
      ]
    ]
  ],
  "test_model_parameters": [
    [
      "astropy/timeseries/periodograms/lombscargle/tests/test_lombscargle.py",
      [
        "test_model_parameters"
      ]
    ]
  ],
  "make_data": [
    [
      "astropy/timeseries/periodograms/lombscargle/tests/test_statistics.py",
      [
        "make_data"
      ]
    ]
  ],
  "null_data": [
    [
      "astropy/timeseries/periodograms/lombscargle/tests/test_statistics.py",
      [
        "null_data"
      ]
    ]
  ],
  "test_distribution": [
    [
      "astropy/timeseries/periodograms/lombscargle/tests/test_statistics.py",
      [
        "test_distribution"
      ]
    ]
  ],
  "test_inverse_single": [
    [
      "astropy/timeseries/periodograms/lombscargle/tests/test_statistics.py",
      [
        "test_inverse_single"
      ]
    ]
  ],
  "test_inverse_bootstrap": [
    [
      "astropy/timeseries/periodograms/lombscargle/tests/test_statistics.py",
      [
        "test_inverse_bootstrap"
      ]
    ]
  ],
  "test_inverses": [
    [
      "astropy/timeseries/periodograms/lombscargle/tests/test_statistics.py",
      [
        "test_inverses"
      ]
    ]
  ],
  "test_false_alarm_smoketest": [
    [
      "astropy/timeseries/periodograms/lombscargle/tests/test_statistics.py",
      [
        "test_false_alarm_smoketest"
      ]
    ]
  ],
  "test_false_alarm_equivalence": [
    [
      "astropy/timeseries/periodograms/lombscargle/tests/test_statistics.py",
      [
        "test_false_alarm_equivalence"
      ]
    ]
  ],
  "test_convert_normalization": [
    [
      "astropy/timeseries/periodograms/lombscargle/tests/test_utils.py",
      [
        "test_convert_normalization"
      ]
    ]
  ],
  "compute_chi2_ref": [
    [
      "astropy/timeseries/periodograms/lombscargle/utils.py",
      [
        "compute_chi2_ref"
      ]
    ]
  ],
  "convert_normalization": [
    [
      "astropy/timeseries/periodograms/lombscargle/utils.py",
      [
        "convert_normalization"
      ]
    ]
  ],
  "time": [
    [
      "astropy/timeseries/sampled.py",
      [
        "TimeSeries",
        "time"
      ]
    ]
  ],
  "fold": [
    [
      "astropy/timeseries/sampled.py",
      [
        "TimeSeries",
        "fold"
      ]
    ]
  ],
  "test_empty_initialization": [
    [
      "astropy/timeseries/tests/test_binned.py",
      [
        "test_empty_initialization"
      ]
    ],
    [
      "astropy/timeseries/tests/test_sampled.py",
      [
        "test_empty_initialization"
      ]
    ]
  ],
  "test_empty_initialization_invalid": [
    [
      "astropy/timeseries/tests/test_binned.py",
      [
        "test_empty_initialization_invalid"
      ]
    ],
    [
      "astropy/timeseries/tests/test_sampled.py",
      [
        "test_empty_initialization_invalid"
      ]
    ]
  ],
  "test_initialization_time_bin_invalid": [
    [
      "astropy/timeseries/tests/test_binned.py",
      [
        "test_initialization_time_bin_invalid"
      ]
    ]
  ],
  "test_initialization_time_bin_both": [
    [
      "astropy/timeseries/tests/test_binned.py",
      [
        "test_initialization_time_bin_both"
      ]
    ]
  ],
  "test_initialization_time_bin_size": [
    [
      "astropy/timeseries/tests/test_binned.py",
      [
        "test_initialization_time_bin_size"
      ]
    ]
  ],
  "test_initialization_time_bin_start_scalar": [
    [
      "astropy/timeseries/tests/test_binned.py",
      [
        "test_initialization_time_bin_start_scalar"
      ]
    ]
  ],
  "test_initialization_n_bins_invalid_arguments": [
    [
      "astropy/timeseries/tests/test_binned.py",
      [
        "test_initialization_n_bins_invalid_arguments"
      ]
    ]
  ],
  "test_initialization_n_bins": [
    [
      "astropy/timeseries/tests/test_binned.py",
      [
        "test_initialization_n_bins"
      ]
    ]
  ],
  "test_initialization_non_scalar_time": [
    [
      "astropy/timeseries/tests/test_binned.py",
      [
        "test_initialization_non_scalar_time"
      ]
    ]
  ],
  "test_even_contiguous": [
    [
      "astropy/timeseries/tests/test_binned.py",
      [
        "test_even_contiguous"
      ]
    ]
  ],
  "test_uneven_contiguous": [
    [
      "astropy/timeseries/tests/test_binned.py",
      [
        "test_uneven_contiguous"
      ]
    ]
  ],
  "test_uneven_non_contiguous": [
    [
      "astropy/timeseries/tests/test_binned.py",
      [
        "test_uneven_non_contiguous"
      ]
    ]
  ],
  "test_uneven_non_contiguous_full": [
    [
      "astropy/timeseries/tests/test_binned.py",
      [
        "test_uneven_non_contiguous_full"
      ]
    ]
  ],
  "test_read_empty": [
    [
      "astropy/timeseries/tests/test_binned.py",
      [
        "test_read_empty"
      ]
    ]
  ],
  "test_read_no_size_end": [
    [
      "astropy/timeseries/tests/test_binned.py",
      [
        "test_read_no_size_end"
      ]
    ]
  ],
  "test_read_both_extra_bins": [
    [
      "astropy/timeseries/tests/test_binned.py",
      [
        "test_read_both_extra_bins"
      ]
    ]
  ],
  "test_read_size_no_unit": [
    [
      "astropy/timeseries/tests/test_binned.py",
      [
        "test_read_size_no_unit"
      ]
    ]
  ],
  "test_read_start_time_missing": [
    [
      "astropy/timeseries/tests/test_binned.py",
      [
        "test_read_start_time_missing"
      ]
    ]
  ],
  "test_read_end_time_missing": [
    [
      "astropy/timeseries/tests/test_binned.py",
      [
        "test_read_end_time_missing"
      ]
    ]
  ],
  "test_read_size_missing": [
    [
      "astropy/timeseries/tests/test_binned.py",
      [
        "test_read_size_missing"
      ]
    ]
  ],
  "test_read_time_unit_missing": [
    [
      "astropy/timeseries/tests/test_binned.py",
      [
        "test_read_time_unit_missing"
      ]
    ]
  ],
  "test_periodogram": [
    [
      "astropy/timeseries/tests/test_binned.py",
      [
        "test_periodogram"
      ]
    ],
    [
      "astropy/timeseries/tests/test_sampled.py",
      [
        "test_periodogram"
      ]
    ]
  ],
  "test_stacking": [
    [
      "astropy/timeseries/tests/test_common.py",
      [
        "CommonTimeSeriesTests",
        "test_stacking"
      ]
    ]
  ],
  "test_row_slicing": [
    [
      "astropy/timeseries/tests/test_common.py",
      [
        "CommonTimeSeriesTests",
        "test_row_slicing"
      ]
    ]
  ],
  "test_row_indexing": [
    [
      "astropy/timeseries/tests/test_common.py",
      [
        "CommonTimeSeriesTests",
        "test_row_indexing"
      ]
    ]
  ],
  "test_column_indexing": [
    [
      "astropy/timeseries/tests/test_common.py",
      [
        "CommonTimeSeriesTests",
        "test_column_indexing"
      ]
    ]
  ],
  "test_column_slicing_notime": [
    [
      "astropy/timeseries/tests/test_common.py",
      [
        "CommonTimeSeriesTests",
        "test_column_slicing_notime"
      ]
    ]
  ],
  "test_set_unit": [
    [
      "astropy/timeseries/tests/test_common.py",
      [
        "CommonTimeSeriesTests",
        "test_set_unit"
      ]
    ]
  ],
  "test_required_after_stacking": [
    [
      "astropy/timeseries/tests/test_common.py",
      [
        "CommonTimeSeriesTests",
        "test_required_after_stacking"
      ]
    ]
  ],
  "test_column_slicing": [
    [
      "astropy/timeseries/tests/test_common.py",
      [
        "TestTimeSeries",
        "test_column_slicing"
      ]
    ],
    [
      "astropy/timeseries/tests/test_common.py",
      [
        "TestBinnedTimeSeries",
        "test_column_slicing"
      ]
    ]
  ],
  "test_reduceat": [
    [
      "astropy/timeseries/tests/test_downsample.py",
      [
        "test_reduceat"
      ]
    ]
  ],
  "test_timeseries_invalid": [
    [
      "astropy/timeseries/tests/test_downsample.py",
      [
        "test_timeseries_invalid"
      ]
    ]
  ],
  "test_time_bin_invalid": [
    [
      "astropy/timeseries/tests/test_downsample.py",
      [
        "test_time_bin_invalid"
      ]
    ]
  ],
  "test_binning_arg_invalid": [
    [
      "astropy/timeseries/tests/test_downsample.py",
      [
        "test_binning_arg_invalid"
      ]
    ]
  ],
  "test_time_bin_conversion": [
    [
      "astropy/timeseries/tests/test_downsample.py",
      [
        "test_time_bin_conversion"
      ]
    ]
  ],
  "test_time_bin_end_auto": [
    [
      "astropy/timeseries/tests/test_downsample.py",
      [
        "test_time_bin_end_auto"
      ]
    ]
  ],
  "test_time_bin_start_array": [
    [
      "astropy/timeseries/tests/test_downsample.py",
      [
        "test_time_bin_start_array"
      ]
    ]
  ],
  "test_nbins": [
    [
      "astropy/timeseries/tests/test_downsample.py",
      [
        "test_nbins"
      ]
    ]
  ],
  "test_downsample": [
    [
      "astropy/timeseries/tests/test_downsample.py",
      [
        "test_downsample"
      ]
    ]
  ],
  "test_downsample_edge_cases": [
    [
      "astropy/timeseries/tests/test_downsample.py",
      [
        "test_downsample_edge_cases"
      ]
    ]
  ],
  "test_initialize_only_time": [
    [
      "astropy/timeseries/tests/test_sampled.py",
      [
        "test_initialize_only_time"
      ]
    ]
  ],
  "test_initialization_with_data": [
    [
      "astropy/timeseries/tests/test_sampled.py",
      [
        "test_initialization_with_data"
      ]
    ]
  ],
  "test_initialize_only_data": [
    [
      "astropy/timeseries/tests/test_sampled.py",
      [
        "test_initialize_only_data"
      ]
    ]
  ],
  "test_initialization_with_table": [
    [
      "astropy/timeseries/tests/test_sampled.py",
      [
        "test_initialization_with_table"
      ]
    ]
  ],
  "test_initialization_with_time_delta": [
    [
      "astropy/timeseries/tests/test_sampled.py",
      [
        "test_initialization_with_time_delta"
      ]
    ]
  ],
  "test_initialization_missing_time_delta": [
    [
      "astropy/timeseries/tests/test_sampled.py",
      [
        "test_initialization_missing_time_delta"
      ]
    ]
  ],
  "test_initialization_invalid_time_and_time_start": [
    [
      "astropy/timeseries/tests/test_sampled.py",
      [
        "test_initialization_invalid_time_and_time_start"
      ]
    ]
  ],
  "test_initialization_invalid_time_delta": [
    [
      "astropy/timeseries/tests/test_sampled.py",
      [
        "test_initialization_invalid_time_delta"
      ]
    ]
  ],
  "test_initialization_with_time_in_data": [
    [
      "astropy/timeseries/tests/test_sampled.py",
      [
        "test_initialization_with_time_in_data"
      ]
    ]
  ],
  "test_initialization_n_samples": [
    [
      "astropy/timeseries/tests/test_sampled.py",
      [
        "test_initialization_n_samples"
      ]
    ]
  ],
  "test_initialization_length_mismatch": [
    [
      "astropy/timeseries/tests/test_sampled.py",
      [
        "test_initialization_length_mismatch"
      ]
    ]
  ],
  "test_initialization_invalid_both_time_and_time_delta": [
    [
      "astropy/timeseries/tests/test_sampled.py",
      [
        "test_initialization_invalid_both_time_and_time_delta"
      ]
    ]
  ],
  "test_fold": [
    [
      "astropy/timeseries/tests/test_sampled.py",
      [
        "test_fold"
      ]
    ]
  ],
  "test_fold_invalid_options": [
    [
      "astropy/timeseries/tests/test_sampled.py",
      [
        "test_fold_invalid_options"
      ]
    ]
  ],
  "test_pandas": [
    [
      "astropy/timeseries/tests/test_sampled.py",
      [
        "test_pandas"
      ]
    ]
  ],
  "test_read_time_missing": [
    [
      "astropy/timeseries/tests/test_sampled.py",
      [
        "test_read_time_missing"
      ]
    ]
  ],
  "test_read_time_wrong": [
    [
      "astropy/timeseries/tests/test_sampled.py",
      [
        "test_read_time_wrong"
      ]
    ]
  ],
  "test_required_columns": [
    [
      "astropy/timeseries/tests/test_sampled.py",
      [
        "test_required_columns"
      ]
    ]
  ],
  "n_samples": [
    [
      "astropy/uncertainty/core.py",
      [
        "Distribution",
        "n_samples"
      ]
    ]
  ],
  "pdf_mean": [
    [
      "astropy/uncertainty/core.py",
      [
        "Distribution",
        "pdf_mean"
      ]
    ]
  ],
  "pdf_std": [
    [
      "astropy/uncertainty/core.py",
      [
        "Distribution",
        "pdf_std"
      ]
    ]
  ],
  "pdf_var": [
    [
      "astropy/uncertainty/core.py",
      [
        "Distribution",
        "pdf_var"
      ]
    ]
  ],
  "pdf_median": [
    [
      "astropy/uncertainty/core.py",
      [
        "Distribution",
        "pdf_median"
      ]
    ]
  ],
  "pdf_mad": [
    [
      "astropy/uncertainty/core.py",
      [
        "Distribution",
        "pdf_mad"
      ]
    ]
  ],
  "pdf_smad": [
    [
      "astropy/uncertainty/core.py",
      [
        "Distribution",
        "pdf_smad"
      ]
    ]
  ],
  "pdf_percentiles": [
    [
      "astropy/uncertainty/core.py",
      [
        "Distribution",
        "pdf_percentiles"
      ]
    ]
  ],
  "pdf_histogram": [
    [
      "astropy/uncertainty/core.py",
      [
        "Distribution",
        "pdf_histogram"
      ]
    ]
  ],
  "view": [
    [
      "astropy/uncertainty/core.py",
      [
        "ArrayDistribution",
        "view"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "view"
      ]
    ]
  ],
  "normal": [
    [
      "astropy/uncertainty/distributions.py",
      [
        "normal"
      ]
    ]
  ],
  "uniform": [
    [
      "astropy/uncertainty/distributions.py",
      [
        "uniform"
      ]
    ]
  ],
  "test_numpy_init": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "TestInit",
        "test_numpy_init"
      ]
    ]
  ],
  "test_numpy_init_T": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "TestInit",
        "test_numpy_init_T"
      ]
    ]
  ],
  "test_quantity_init_T": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "TestInit",
        "test_quantity_init_T"
      ]
    ]
  ],
  "test_quantity_init_with_distribution": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "TestInit",
        "test_quantity_init_with_distribution"
      ]
    ]
  ],
  "test_init_scalar": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "test_init_scalar"
      ]
    ]
  ],
  "test_n_samples": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "TestDistributionStatistics",
        "test_n_samples"
      ]
    ]
  ],
  "test_n_distr": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "TestDistributionStatistics",
        "test_n_distr"
      ]
    ]
  ],
  "test_pdf_mean": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "TestDistributionStatistics",
        "test_pdf_mean"
      ]
    ]
  ],
  "test_pdf_std": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "TestDistributionStatistics",
        "test_pdf_std"
      ]
    ]
  ],
  "test_pdf_var": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "TestDistributionStatistics",
        "test_pdf_var"
      ]
    ]
  ],
  "test_pdf_median": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "TestDistributionStatistics",
        "test_pdf_median"
      ]
    ]
  ],
  "test_pdf_mad_smad": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "TestDistributionStatistics",
        "test_pdf_mad_smad"
      ]
    ]
  ],
  "test_percentile": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "TestDistributionStatistics",
        "test_percentile"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestReductionLikeFunctions",
        "test_percentile"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestPartitionLikeFunctions",
        "test_percentile"
      ]
    ],
    [
      "astropy/visualization/tests/test_interval.py",
      [
        "TestInterval",
        "test_percentile"
      ]
    ]
  ],
  "test_add_quantity": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "TestDistributionStatistics",
        "test_add_quantity"
      ]
    ]
  ],
  "test_add_distribution": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "TestDistributionStatistics",
        "test_add_distribution"
      ]
    ]
  ],
  "test_helper_normal_samples": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "test_helper_normal_samples"
      ]
    ]
  ],
  "test_helper_poisson_samples": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "test_helper_poisson_samples"
      ]
    ]
  ],
  "test_helper_uniform_samples": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "test_helper_uniform_samples"
      ]
    ]
  ],
  "test_helper_normal_exact": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "test_helper_normal_exact"
      ]
    ]
  ],
  "test_helper_poisson_exact": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "test_helper_poisson_exact"
      ]
    ]
  ],
  "test_reprs": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "test_reprs"
      ]
    ]
  ],
  "test_wrong_kw_fails": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "test_wrong_kw_fails"
      ]
    ]
  ],
  "test_index_assignment_quantity": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "test_index_assignment_quantity"
      ]
    ]
  ],
  "test_index_assignment_array": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "test_index_assignment_array"
      ]
    ]
  ],
  "test_array_repr_latex": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "test_array_repr_latex"
      ]
    ]
  ],
  "test_distr_to": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "test_distr_to"
      ]
    ]
  ],
  "test_distr_noq_to": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "test_distr_noq_to"
      ]
    ]
  ],
  "test_distr_to_value": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "test_distr_to_value"
      ]
    ]
  ],
  "test_distr_noq_to_value": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "test_distr_noq_to_value"
      ]
    ]
  ],
  "test_distr_angle": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "test_distr_angle"
      ]
    ]
  ],
  "test_distr_angle_view_as_quantity": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "test_distr_angle_view_as_quantity"
      ]
    ]
  ],
  "test_distr_cannot_view_new_dtype": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "test_distr_cannot_view_new_dtype"
      ]
    ]
  ],
  "test_scalar_quantity_distribution": [
    [
      "astropy/uncertainty/tests/test_distribution.py",
      [
        "test_scalar_quantity_distribution"
      ]
    ]
  ],
  "_initialize_module": [
    [
      "astropy/units/cds.py",
      [
        "_initialize_module"
      ]
    ],
    [
      "astropy/units/deprecated.py",
      [
        "_initialize_module"
      ]
    ],
    [
      "astropy/units/required_by_vounit.py",
      [
        "_initialize_module"
      ]
    ]
  ],
  "enable": [
    [
      "astropy/units/cds.py",
      [
        "enable"
      ]
    ],
    [
      "astropy/units/deprecated.py",
      [
        "enable"
      ]
    ],
    [
      "astropy/units/imperial.py",
      [
        "enable"
      ]
    ]
  ],
  "_flatten_units_collection": [
    [
      "astropy/units/core.py",
      [
        "_flatten_units_collection"
      ]
    ]
  ],
  "_normalize_equivalencies": [
    [
      "astropy/units/core.py",
      [
        "_normalize_equivalencies"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "_normalize_equivalencies"
      ]
    ]
  ],
  "_reset_units": [
    [
      "astropy/units/core.py",
      [
        "_UnitRegistry",
        "_reset_units"
      ]
    ]
  ],
  "_reset_equivalencies": [
    [
      "astropy/units/core.py",
      [
        "_UnitRegistry",
        "_reset_equivalencies"
      ]
    ]
  ],
  "_reset_aliases": [
    [
      "astropy/units/core.py",
      [
        "_UnitRegistry",
        "_reset_aliases"
      ]
    ]
  ],
  "all_units": [
    [
      "astropy/units/core.py",
      [
        "_UnitRegistry",
        "all_units"
      ]
    ]
  ],
  "non_prefix_units": [
    [
      "astropy/units/core.py",
      [
        "_UnitRegistry",
        "non_prefix_units"
      ]
    ]
  ],
  "set_enabled_units": [
    [
      "astropy/units/core.py",
      [
        "_UnitRegistry",
        "set_enabled_units"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "set_enabled_units"
      ]
    ]
  ],
  "add_enabled_units": [
    [
      "astropy/units/core.py",
      [
        "_UnitRegistry",
        "add_enabled_units"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "add_enabled_units"
      ]
    ]
  ],
  "get_units_with_physical_type": [
    [
      "astropy/units/core.py",
      [
        "_UnitRegistry",
        "get_units_with_physical_type"
      ]
    ]
  ],
  "set_enabled_equivalencies": [
    [
      "astropy/units/core.py",
      [
        "_UnitRegistry",
        "set_enabled_equivalencies"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "set_enabled_equivalencies"
      ]
    ]
  ],
  "add_enabled_equivalencies": [
    [
      "astropy/units/core.py",
      [
        "_UnitRegistry",
        "add_enabled_equivalencies"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "add_enabled_equivalencies"
      ]
    ]
  ],
  "aliases": [
    [
      "astropy/units/core.py",
      [
        "_UnitRegistry",
        "aliases"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "aliases"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "NamedUnit",
        "aliases"
      ]
    ]
  ],
  "set_enabled_aliases": [
    [
      "astropy/units/core.py",
      [
        "_UnitRegistry",
        "set_enabled_aliases"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "set_enabled_aliases"
      ]
    ]
  ],
  "add_enabled_aliases": [
    [
      "astropy/units/core.py",
      [
        "_UnitRegistry",
        "add_enabled_aliases"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "add_enabled_aliases"
      ]
    ]
  ],
  "get_current_unit_registry": [
    [
      "astropy/units/core.py",
      [
        "get_current_unit_registry"
      ]
    ]
  ],
  "_get_physical_type_id": [
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "_get_physical_type_id"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "_get_physical_type_id"
      ]
    ],
    [
      "astropy/units/structured.py",
      [
        "StructuredUnit",
        "_get_physical_type_id"
      ]
    ]
  ],
  "bases": [
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "bases"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "CompositeUnit",
        "bases"
      ]
    ]
  ],
  "powers": [
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "powers"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "CompositeUnit",
        "powers"
      ]
    ]
  ],
  "__format__": [
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "__format__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__format__"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "__format__"
      ]
    ]
  ],
  "__pow__": [
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "__pow__"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "__pow__"
      ]
    ],
    [
      "astropy/units/function/logarithmic.py",
      [
        "LogQuantity",
        "__pow__"
      ]
    ],
    [
      "astropy/units/physical.py",
      [
        "PhysicalType",
        "__pow__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__pow__"
      ]
    ]
  ],
  "__rlshift__": [
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "__rlshift__"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "__rlshift__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__rlshift__"
      ]
    ],
    [
      "astropy/units/structured.py",
      [
        "StructuredUnit",
        "__rlshift__"
      ]
    ]
  ],
  "__rrshift__": [
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "__rrshift__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__rrshift__"
      ]
    ]
  ],
  "_is_equivalent": [
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "_is_equivalent"
      ]
    ]
  ],
  "make_converter": [
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "_apply_equivalencies",
        "make_converter"
      ]
    ]
  ],
  "get_err_str": [
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "_apply_equivalencies",
        "get_err_str"
      ]
    ]
  ],
  "_apply_equivalencies": [
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "_apply_equivalencies"
      ]
    ]
  ],
  "_get_converter": [
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "_get_converter"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnrecognizedUnit",
        "_get_converter"
      ]
    ],
    [
      "astropy/units/structured.py",
      [
        "StructuredUnit",
        "_get_converter"
      ]
    ]
  ],
  "_to": [
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "_to"
      ]
    ]
  ],
  "in_units": [
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "in_units"
      ]
    ]
  ],
  "decompose": [
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "decompose"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "IrreducibleUnit",
        "decompose"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "Unit",
        "decompose"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "CompositeUnit",
        "decompose"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "decompose"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionQuantity",
        "decompose"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "decompose"
      ]
    ],
    [
      "astropy/units/structured.py",
      [
        "StructuredUnit",
        "decompose"
      ]
    ]
  ],
  "is_final_result": [
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "_compose",
        "is_final_result"
      ]
    ]
  ],
  "_compose": [
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "_compose"
      ]
    ]
  ],
  "has_bases_in_common": [
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "compose",
        "has_bases_in_common"
      ]
    ]
  ],
  "has_bases_in_common_with_equiv": [
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "compose",
        "has_bases_in_common_with_equiv"
      ]
    ]
  ],
  "filter_units": [
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "compose",
        "filter_units"
      ]
    ]
  ],
  "sort_results": [
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "compose",
        "sort_results"
      ]
    ]
  ],
  "compose": [
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "compose"
      ]
    ]
  ],
  "score": [
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "to_system",
        "score"
      ]
    ]
  ],
  "to_system": [
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "to_system"
      ]
    ]
  ],
  "physical_type": [
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "physical_type"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "physical_type"
      ]
    ],
    [
      "astropy/units/structured.py",
      [
        "StructuredUnit",
        "physical_type"
      ]
    ]
  ],
  "_get_units_with_same_physical_type": [
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "_get_units_with_same_physical_type"
      ]
    ]
  ],
  "_process_equivalent_units": [
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "EquivalentUnitsList",
        "_process_equivalent_units"
      ]
    ]
  ],
  "find_equivalent_units": [
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "find_equivalent_units"
      ]
    ]
  ],
  "is_unity": [
    [
      "astropy/units/core.py",
      [
        "UnitBase",
        "is_unity"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnrecognizedUnit",
        "is_unity"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "Unit",
        "is_unity"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "CompositeUnit",
        "is_unity"
      ]
    ],
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "is_unity"
      ]
    ]
  ],
  "_generate_doc": [
    [
      "astropy/units/core.py",
      [
        "NamedUnit",
        "_generate_doc"
      ]
    ]
  ],
  "get_format_name": [
    [
      "astropy/units/core.py",
      [
        "NamedUnit",
        "get_format_name"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "UnrecognizedUnit",
        "get_format_name"
      ]
    ]
  ],
  "short_names": [
    [
      "astropy/units/core.py",
      [
        "NamedUnit",
        "short_names"
      ]
    ]
  ],
  "long_names": [
    [
      "astropy/units/core.py",
      [
        "NamedUnit",
        "long_names"
      ]
    ]
  ],
  "_inject": [
    [
      "astropy/units/core.py",
      [
        "NamedUnit",
        "_inject"
      ]
    ]
  ],
  "_recreate_irreducible_unit": [
    [
      "astropy/units/core.py",
      [
        "_recreate_irreducible_unit"
      ]
    ]
  ],
  "represents": [
    [
      "astropy/units/core.py",
      [
        "IrreducibleUnit",
        "represents"
      ]
    ],
    [
      "astropy/units/core.py",
      [
        "Unit",
        "represents"
      ]
    ]
  ],
  "_unrecognized_operator": [
    [
      "astropy/units/core.py",
      [
        "UnrecognizedUnit",
        "_unrecognized_operator"
      ]
    ]
  ],
  "_from_physical_type_id": [
    [
      "astropy/units/core.py",
      [
        "Unit",
        "_from_physical_type_id"
      ]
    ]
  ],
  "add_unit": [
    [
      "astropy/units/core.py",
      [
        "CompositeUnit",
        "_expand_and_gather",
        "add_unit"
      ]
    ]
  ],
  "_expand_and_gather": [
    [
      "astropy/units/core.py",
      [
        "CompositeUnit",
        "_expand_and_gather"
      ]
    ]
  ],
  "_add_prefixes": [
    [
      "astropy/units/core.py",
      [
        "_add_prefixes"
      ]
    ]
  ],
  "def_unit": [
    [
      "astropy/units/core.py",
      [
        "def_unit"
      ]
    ]
  ],
  "_condition_arg": [
    [
      "astropy/units/core.py",
      [
        "_condition_arg"
      ]
    ]
  ],
  "unit_scale_converter": [
    [
      "astropy/units/core.py",
      [
        "unit_scale_converter"
      ]
    ]
  ],
  "_get_allowed_units": [
    [
      "astropy/units/decorators.py",
      [
        "_get_allowed_units"
      ]
    ]
  ],
  "_validate_arg_value": [
    [
      "astropy/units/decorators.py",
      [
        "_validate_arg_value"
      ]
    ]
  ],
  "_parse_annotation": [
    [
      "astropy/units/decorators.py",
      [
        "_parse_annotation"
      ]
    ]
  ],
  "as_decorator": [
    [
      "astropy/units/decorators.py",
      [
        "QuantityInput",
        "as_decorator"
      ]
    ]
  ],
  "dimensionless_angles": [
    [
      "astropy/units/equivalencies.py",
      [
        "dimensionless_angles"
      ]
    ]
  ],
  "logarithmic": [
    [
      "astropy/units/equivalencies.py",
      [
        "logarithmic"
      ]
    ]
  ],
  "spectral": [
    [
      "astropy/units/equivalencies.py",
      [
        "spectral"
      ]
    ],
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "spectral"
      ]
    ]
  ],
  "converter": [
    [
      "astropy/units/equivalencies.py",
      [
        "spectral_density",
        "converter"
      ]
    ]
  ],
  "iconverter": [
    [
      "astropy/units/equivalencies.py",
      [
        "spectral_density",
        "iconverter"
      ]
    ]
  ],
  "converter_f_nu_to_nu_f_nu": [
    [
      "astropy/units/equivalencies.py",
      [
        "spectral_density",
        "converter_f_nu_to_nu_f_nu"
      ]
    ]
  ],
  "iconverter_f_nu_to_nu_f_nu": [
    [
      "astropy/units/equivalencies.py",
      [
        "spectral_density",
        "iconverter_f_nu_to_nu_f_nu"
      ]
    ]
  ],
  "converter_f_la_to_la_f_la": [
    [
      "astropy/units/equivalencies.py",
      [
        "spectral_density",
        "converter_f_la_to_la_f_la"
      ]
    ]
  ],
  "iconverter_f_la_to_la_f_la": [
    [
      "astropy/units/equivalencies.py",
      [
        "spectral_density",
        "iconverter_f_la_to_la_f_la"
      ]
    ]
  ],
  "converter_phot_f_la_to_f_la": [
    [
      "astropy/units/equivalencies.py",
      [
        "spectral_density",
        "converter_phot_f_la_to_f_la"
      ]
    ]
  ],
  "iconverter_phot_f_la_to_f_la": [
    [
      "astropy/units/equivalencies.py",
      [
        "spectral_density",
        "iconverter_phot_f_la_to_f_la"
      ]
    ]
  ],
  "converter_phot_f_la_to_f_nu": [
    [
      "astropy/units/equivalencies.py",
      [
        "spectral_density",
        "converter_phot_f_la_to_f_nu"
      ]
    ]
  ],
  "iconverter_phot_f_la_to_f_nu": [
    [
      "astropy/units/equivalencies.py",
      [
        "spectral_density",
        "iconverter_phot_f_la_to_f_nu"
      ]
    ]
  ],
  "converter_phot_f_la_phot_f_nu": [
    [
      "astropy/units/equivalencies.py",
      [
        "spectral_density",
        "converter_phot_f_la_phot_f_nu"
      ]
    ]
  ],
  "iconverter_phot_f_la_phot_f_nu": [
    [
      "astropy/units/equivalencies.py",
      [
        "spectral_density",
        "iconverter_phot_f_la_phot_f_nu"
      ]
    ]
  ],
  "converter_phot_f_nu_to_f_la": [
    [
      "astropy/units/equivalencies.py",
      [
        "spectral_density",
        "converter_phot_f_nu_to_f_la"
      ]
    ]
  ],
  "iconverter_phot_f_nu_to_f_la": [
    [
      "astropy/units/equivalencies.py",
      [
        "spectral_density",
        "iconverter_phot_f_nu_to_f_la"
      ]
    ]
  ],
  "spectral_density": [
    [
      "astropy/units/equivalencies.py",
      [
        "spectral_density"
      ]
    ]
  ],
  "to_vel_freq": [
    [
      "astropy/units/equivalencies.py",
      [
        "doppler_radio",
        "to_vel_freq"
      ]
    ],
    [
      "astropy/units/equivalencies.py",
      [
        "doppler_optical",
        "to_vel_freq"
      ]
    ],
    [
      "astropy/units/equivalencies.py",
      [
        "doppler_relativistic",
        "to_vel_freq"
      ]
    ]
  ],
  "from_vel_freq": [
    [
      "astropy/units/equivalencies.py",
      [
        "doppler_radio",
        "from_vel_freq"
      ]
    ],
    [
      "astropy/units/equivalencies.py",
      [
        "doppler_optical",
        "from_vel_freq"
      ]
    ],
    [
      "astropy/units/equivalencies.py",
      [
        "doppler_relativistic",
        "from_vel_freq"
      ]
    ]
  ],
  "to_vel_wav": [
    [
      "astropy/units/equivalencies.py",
      [
        "doppler_radio",
        "to_vel_wav"
      ]
    ],
    [
      "astropy/units/equivalencies.py",
      [
        "doppler_optical",
        "to_vel_wav"
      ]
    ],
    [
      "astropy/units/equivalencies.py",
      [
        "doppler_relativistic",
        "to_vel_wav"
      ]
    ]
  ],
  "from_vel_wav": [
    [
      "astropy/units/equivalencies.py",
      [
        "doppler_radio",
        "from_vel_wav"
      ]
    ],
    [
      "astropy/units/equivalencies.py",
      [
        "doppler_optical",
        "from_vel_wav"
      ]
    ],
    [
      "astropy/units/equivalencies.py",
      [
        "doppler_relativistic",
        "from_vel_wav"
      ]
    ]
  ],
  "to_vel_en": [
    [
      "astropy/units/equivalencies.py",
      [
        "doppler_radio",
        "to_vel_en"
      ]
    ],
    [
      "astropy/units/equivalencies.py",
      [
        "doppler_optical",
        "to_vel_en"
      ]
    ],
    [
      "astropy/units/equivalencies.py",
      [
        "doppler_relativistic",
        "to_vel_en"
      ]
    ]
  ],
  "from_vel_en": [
    [
      "astropy/units/equivalencies.py",
      [
        "doppler_radio",
        "from_vel_en"
      ]
    ],
    [
      "astropy/units/equivalencies.py",
      [
        "doppler_optical",
        "from_vel_en"
      ]
    ],
    [
      "astropy/units/equivalencies.py",
      [
        "doppler_relativistic",
        "from_vel_en"
      ]
    ]
  ],
  "doppler_radio": [
    [
      "astropy/units/equivalencies.py",
      [
        "doppler_radio"
      ]
    ]
  ],
  "doppler_optical": [
    [
      "astropy/units/equivalencies.py",
      [
        "doppler_optical"
      ]
    ]
  ],
  "doppler_relativistic": [
    [
      "astropy/units/equivalencies.py",
      [
        "doppler_relativistic"
      ]
    ]
  ],
  "doppler_redshift": [
    [
      "astropy/units/equivalencies.py",
      [
        "doppler_redshift"
      ]
    ]
  ],
  "molar_mass_amu": [
    [
      "astropy/units/equivalencies.py",
      [
        "molar_mass_amu"
      ]
    ]
  ],
  "mass_energy": [
    [
      "astropy/units/equivalencies.py",
      [
        "mass_energy"
      ]
    ]
  ],
  "brightness_temperature": [
    [
      "astropy/units/equivalencies.py",
      [
        "brightness_temperature"
      ]
    ]
  ],
  "beam_angular_area": [
    [
      "astropy/units/equivalencies.py",
      [
        "beam_angular_area"
      ]
    ]
  ],
  "convert_Jy_to_K": [
    [
      "astropy/units/equivalencies.py",
      [
        "thermodynamic_temperature",
        "convert_Jy_to_K"
      ]
    ]
  ],
  "convert_K_to_Jy": [
    [
      "astropy/units/equivalencies.py",
      [
        "thermodynamic_temperature",
        "convert_K_to_Jy"
      ]
    ]
  ],
  "thermodynamic_temperature": [
    [
      "astropy/units/equivalencies.py",
      [
        "thermodynamic_temperature"
      ]
    ]
  ],
  "temperature": [
    [
      "astropy/units/equivalencies.py",
      [
        "temperature"
      ]
    ]
  ],
  "temperature_energy": [
    [
      "astropy/units/equivalencies.py",
      [
        "temperature_energy"
      ]
    ]
  ],
  "assert_is_spectral_unit": [
    [
      "astropy/units/equivalencies.py",
      [
        "assert_is_spectral_unit"
      ]
    ]
  ],
  "pixel_scale": [
    [
      "astropy/units/equivalencies.py",
      [
        "pixel_scale"
      ]
    ]
  ],
  "plate_scale": [
    [
      "astropy/units/equivalencies.py",
      [
        "plate_scale"
      ]
    ]
  ],
  "_known_formats": [
    [
      "astropy/units/format/__init__.py",
      [
        "_known_formats"
      ]
    ]
  ],
  "get_format": [
    [
      "astropy/units/format/__init__.py",
      [
        "get_format"
      ]
    ]
  ],
  "_parser": [
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "_parser"
      ]
    ],
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_parser"
      ]
    ]
  ],
  "_lexer": [
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "_lexer"
      ]
    ],
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_lexer"
      ]
    ]
  ],
  "_generate_unit_names": [
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "_generate_unit_names"
      ]
    ],
    [
      "astropy/units/format/fits.py",
      [
        "Fits",
        "_generate_unit_names"
      ]
    ],
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_generate_unit_names"
      ]
    ],
    [
      "astropy/units/format/vounit.py",
      [
        "VOUnit",
        "_generate_unit_names"
      ]
    ]
  ],
  "t_X": [
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "_make_lexer",
        "t_X"
      ]
    ],
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_make_lexer",
        "t_X"
      ]
    ]
  ],
  "t_UNIT": [
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "_make_lexer",
        "t_UNIT"
      ]
    ],
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_lexer",
        "t_UNIT"
      ]
    ],
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_make_lexer",
        "t_UNIT"
      ]
    ]
  ],
  "t_DIMENSIONLESS": [
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "_make_lexer",
        "t_DIMENSIONLESS"
      ]
    ]
  ],
  "_make_lexer": [
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "_make_lexer"
      ]
    ],
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_lexer"
      ]
    ],
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_make_lexer"
      ]
    ]
  ],
  "p_main": [
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "_make_parser",
        "p_main"
      ]
    ],
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_parser",
        "p_main"
      ]
    ],
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_make_parser",
        "p_main"
      ]
    ]
  ],
  "p_combined_units": [
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "_make_parser",
        "p_combined_units"
      ]
    ]
  ],
  "p_product_of_units": [
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "_make_parser",
        "p_product_of_units"
      ]
    ],
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_parser",
        "p_product_of_units"
      ]
    ],
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_make_parser",
        "p_product_of_units"
      ]
    ]
  ],
  "p_division_of_units": [
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "_make_parser",
        "p_division_of_units"
      ]
    ]
  ],
  "p_unit_expression": [
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "_make_parser",
        "p_unit_expression"
      ]
    ],
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_parser",
        "p_unit_expression"
      ]
    ],
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_make_parser",
        "p_unit_expression"
      ]
    ]
  ],
  "p_factor": [
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "_make_parser",
        "p_factor"
      ]
    ],
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_parser",
        "p_factor"
      ]
    ]
  ],
  "p_unit_with_power": [
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "_make_parser",
        "p_unit_with_power"
      ]
    ],
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_parser",
        "p_unit_with_power"
      ]
    ]
  ],
  "p_numeric_power": [
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "_make_parser",
        "p_numeric_power"
      ]
    ],
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_parser",
        "p_numeric_power"
      ]
    ],
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_make_parser",
        "p_numeric_power"
      ]
    ]
  ],
  "p_signed_int": [
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "_make_parser",
        "p_signed_int"
      ]
    ],
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_parser",
        "p_signed_int"
      ]
    ],
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_make_parser",
        "p_signed_int"
      ]
    ]
  ],
  "p_signed_float": [
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "_make_parser",
        "p_signed_float"
      ]
    ],
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_parser",
        "p_signed_float"
      ]
    ],
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_make_parser",
        "p_signed_float"
      ]
    ]
  ],
  "_get_unit": [
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "_get_unit"
      ]
    ],
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_get_unit"
      ]
    ],
    [
      "astropy/units/format/vounit.py",
      [
        "VOUnit",
        "_get_unit"
      ]
    ]
  ],
  "_parse_unit": [
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "_parse_unit"
      ]
    ],
    [
      "astropy/units/format/fits.py",
      [
        "Fits",
        "_parse_unit"
      ]
    ],
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_parse_unit"
      ]
    ],
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_parse_unit"
      ]
    ],
    [
      "astropy/units/format/vounit.py",
      [
        "VOUnit",
        "_parse_unit"
      ]
    ]
  ],
  "_get_unit_name": [
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "_get_unit_name"
      ]
    ],
    [
      "astropy/units/format/console.py",
      [
        "Console",
        "_get_unit_name"
      ]
    ],
    [
      "astropy/units/format/fits.py",
      [
        "Fits",
        "_get_unit_name"
      ]
    ],
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_get_unit_name"
      ]
    ],
    [
      "astropy/units/format/latex.py",
      [
        "Latex",
        "_get_unit_name"
      ]
    ],
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_get_unit_name"
      ]
    ],
    [
      "astropy/units/format/unicode_format.py",
      [
        "Unicode",
        "_get_unit_name"
      ]
    ],
    [
      "astropy/units/format/vounit.py",
      [
        "VOUnit",
        "_get_unit_name"
      ]
    ]
  ],
  "_format_unit_list": [
    [
      "astropy/units/format/cds.py",
      [
        "CDS",
        "_format_unit_list"
      ]
    ],
    [
      "astropy/units/format/console.py",
      [
        "Console",
        "_format_unit_list"
      ]
    ],
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_format_unit_list"
      ]
    ],
    [
      "astropy/units/format/latex.py",
      [
        "Latex",
        "_format_unit_list"
      ]
    ],
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_format_unit_list"
      ]
    ],
    [
      "astropy/units/format/vounit.py",
      [
        "VOUnit",
        "_format_unit_list"
      ]
    ]
  ],
  "_format_superscript": [
    [
      "astropy/units/format/console.py",
      [
        "Console",
        "_format_superscript"
      ]
    ],
    [
      "astropy/units/format/unicode_format.py",
      [
        "Unicode",
        "_format_superscript"
      ]
    ]
  ],
  "format_exponential_notation": [
    [
      "astropy/units/format/console.py",
      [
        "Console",
        "format_exponential_notation"
      ]
    ],
    [
      "astropy/units/format/latex.py",
      [
        "Latex",
        "format_exponential_notation"
      ]
    ],
    [
      "astropy/units/format/unicode_format.py",
      [
        "Unicode",
        "format_exponential_notation"
      ]
    ]
  ],
  "_validate_unit": [
    [
      "astropy/units/format/fits.py",
      [
        "Fits",
        "_validate_unit"
      ]
    ],
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_validate_unit"
      ]
    ]
  ],
  "_to_decomposed_alternative": [
    [
      "astropy/units/format/fits.py",
      [
        "Fits",
        "_to_decomposed_alternative"
      ]
    ],
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_to_decomposed_alternative"
      ]
    ],
    [
      "astropy/units/format/vounit.py",
      [
        "VOUnit",
        "_to_decomposed_alternative"
      ]
    ]
  ],
  "_to_string": [
    [
      "astropy/units/format/generic.py",
      [
        "_to_string"
      ]
    ]
  ],
  "_all_units": [
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_all_units"
      ]
    ]
  ],
  "_deprecated_units": [
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_deprecated_units"
      ]
    ]
  ],
  "_functions": [
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_functions"
      ]
    ]
  ],
  "t_FUNCNAME": [
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_lexer",
        "t_FUNCNAME"
      ]
    ]
  ],
  "p_structured_subunit": [
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_parser",
        "p_structured_subunit"
      ]
    ]
  ],
  "p_structured_unit": [
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_parser",
        "p_structured_unit"
      ]
    ]
  ],
  "p_subunit": [
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_parser",
        "p_subunit"
      ]
    ]
  ],
  "p_unit": [
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_parser",
        "p_unit"
      ]
    ],
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_make_parser",
        "p_unit"
      ]
    ]
  ],
  "p_division_product_of_units": [
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_parser",
        "p_division_product_of_units"
      ]
    ]
  ],
  "p_inverse_unit": [
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_parser",
        "p_inverse_unit"
      ]
    ]
  ],
  "p_factor_float": [
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_parser",
        "p_factor_float"
      ]
    ]
  ],
  "p_factor_int": [
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_parser",
        "p_factor_int"
      ]
    ]
  ],
  "p_factor_fits": [
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_parser",
        "p_factor_fits"
      ]
    ]
  ],
  "p_paren_expr": [
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_parser",
        "p_paren_expr"
      ]
    ]
  ],
  "p_frac": [
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_parser",
        "p_frac"
      ]
    ]
  ],
  "p_product": [
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_parser",
        "p_product"
      ]
    ],
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_make_parser",
        "p_product"
      ]
    ]
  ],
  "p_division": [
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_parser",
        "p_division"
      ]
    ],
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_make_parser",
        "p_division"
      ]
    ]
  ],
  "p_power": [
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_parser",
        "p_power"
      ]
    ],
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_make_parser",
        "p_power"
      ]
    ]
  ],
  "p_function_name": [
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_parser",
        "p_function_name"
      ]
    ]
  ],
  "p_function": [
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_make_parser",
        "p_function"
      ]
    ]
  ],
  "_convert_superscript": [
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_convert_superscript"
      ]
    ]
  ],
  "_convert_deg": [
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_convert_deg"
      ]
    ]
  ],
  "_do_parse": [
    [
      "astropy/units/format/generic.py",
      [
        "Generic",
        "_do_parse"
      ]
    ]
  ],
  "_latex_escape": [
    [
      "astropy/units/format/latex.py",
      [
        "Latex",
        "_latex_escape"
      ]
    ]
  ],
  "_format_bases": [
    [
      "astropy/units/format/latex.py",
      [
        "Latex",
        "_format_bases"
      ]
    ],
    [
      "astropy/units/format/latex.py",
      [
        "LatexInline",
        "_format_bases"
      ]
    ]
  ],
  "t_LIT10": [
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_make_lexer",
        "t_LIT10"
      ]
    ]
  ],
  "t_UNKNOWN": [
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_make_lexer",
        "t_UNKNOWN"
      ]
    ]
  ],
  "p_complete_expression": [
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_make_parser",
        "p_complete_expression"
      ]
    ]
  ],
  "p_scale_factor": [
    [
      "astropy/units/format/ogip.py",
      [
        "OGIP",
        "_make_parser",
        "p_scale_factor"
      ]
    ]
  ],
  "get_grouped_by_powers": [
    [
      "astropy/units/format/utils.py",
      [
        "get_grouped_by_powers"
      ]
    ]
  ],
  "split_mantissa_exponent": [
    [
      "astropy/units/format/utils.py",
      [
        "split_mantissa_exponent"
      ]
    ]
  ],
  "decompose_to_known_units": [
    [
      "astropy/units/format/utils.py",
      [
        "decompose_to_known_units"
      ]
    ]
  ],
  "format_power": [
    [
      "astropy/units/format/utils.py",
      [
        "format_power"
      ]
    ]
  ],
  "_try_decomposed": [
    [
      "astropy/units/format/utils.py",
      [
        "_try_decomposed"
      ]
    ]
  ],
  "fix_deprecated": [
    [
      "astropy/units/format/utils.py",
      [
        "did_you_mean_units",
        "fix_deprecated"
      ]
    ]
  ],
  "did_you_mean_units": [
    [
      "astropy/units/format/utils.py",
      [
        "did_you_mean_units"
      ]
    ]
  ],
  "unit_deprecation_warning": [
    [
      "astropy/units/format/utils.py",
      [
        "unit_deprecation_warning"
      ]
    ]
  ],
  "do_defines": [
    [
      "astropy/units/format/vounit.py",
      [
        "VOUnit",
        "_generate_unit_names",
        "do_defines"
      ]
    ]
  ],
  "def_base": [
    [
      "astropy/units/format/vounit.py",
      [
        "VOUnit",
        "_def_custom_unit",
        "def_base"
      ]
    ]
  ],
  "_def_custom_unit": [
    [
      "astropy/units/format/vounit.py",
      [
        "VOUnit",
        "_def_custom_unit"
      ]
    ]
  ],
  "_default_function_unit": [
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "_default_function_unit"
      ]
    ],
    [
      "astropy/units/function/logarithmic.py",
      [
        "LogUnit",
        "_default_function_unit"
      ]
    ],
    [
      "astropy/units/function/logarithmic.py",
      [
        "MagUnit",
        "_default_function_unit"
      ]
    ],
    [
      "astropy/units/function/logarithmic.py",
      [
        "DexUnit",
        "_default_function_unit"
      ]
    ],
    [
      "astropy/units/function/logarithmic.py",
      [
        "DecibelUnit",
        "_default_function_unit"
      ]
    ]
  ],
  "_quantity_class": [
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "_quantity_class"
      ]
    ],
    [
      "astropy/units/function/logarithmic.py",
      [
        "LogUnit",
        "_quantity_class"
      ]
    ],
    [
      "astropy/units/function/logarithmic.py",
      [
        "MagUnit",
        "_quantity_class"
      ]
    ],
    [
      "astropy/units/function/logarithmic.py",
      [
        "DexUnit",
        "_quantity_class"
      ]
    ],
    [
      "astropy/units/function/logarithmic.py",
      [
        "DecibelUnit",
        "_quantity_class"
      ]
    ]
  ],
  "from_physical": [
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "from_physical"
      ]
    ],
    [
      "astropy/units/function/logarithmic.py",
      [
        "LogUnit",
        "from_physical"
      ]
    ]
  ],
  "to_physical": [
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "to_physical"
      ]
    ],
    [
      "astropy/units/function/logarithmic.py",
      [
        "LogUnit",
        "to_physical"
      ]
    ]
  ],
  "_copy": [
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "_copy"
      ]
    ]
  ],
  "physical_unit": [
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "physical_unit"
      ]
    ]
  ],
  "function_unit": [
    [
      "astropy/units/function/core.py",
      [
        "FunctionUnitBase",
        "function_unit"
      ]
    ]
  ],
  "physical": [
    [
      "astropy/units/function/core.py",
      [
        "FunctionQuantity",
        "physical"
      ]
    ]
  ],
  "_function_view": [
    [
      "astropy/units/function/core.py",
      [
        "FunctionQuantity",
        "_function_view"
      ]
    ]
  ],
  "_comparison": [
    [
      "astropy/units/function/core.py",
      [
        "FunctionQuantity",
        "_comparison"
      ]
    ]
  ],
  "__lshift__": [
    [
      "astropy/units/function/core.py",
      [
        "FunctionQuantity",
        "__lshift__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__lshift__"
      ]
    ]
  ],
  "_wrap_function": [
    [
      "astropy/units/function/core.py",
      [
        "FunctionQuantity",
        "_wrap_function"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "_wrap_function"
      ]
    ]
  ],
  "cumsum": [
    [
      "astropy/units/function/core.py",
      [
        "FunctionQuantity",
        "cumsum"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "cumsum"
      ]
    ]
  ],
  "clip": [
    [
      "astropy/units/function/core.py",
      [
        "FunctionQuantity",
        "clip"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "clip"
      ]
    ]
  ],
  "_add_and_adjust_physical_unit": [
    [
      "astropy/units/function/logarithmic.py",
      [
        "LogUnit",
        "_add_and_adjust_physical_unit"
      ]
    ]
  ],
  "__isub__": [
    [
      "astropy/units/function/logarithmic.py",
      [
        "LogQuantity",
        "__isub__"
      ]
    ]
  ],
  "__imul__": [
    [
      "astropy/units/function/logarithmic.py",
      [
        "LogQuantity",
        "__imul__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__imul__"
      ]
    ]
  ],
  "__itruediv__": [
    [
      "astropy/units/function/logarithmic.py",
      [
        "LogQuantity",
        "__itruediv__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__itruediv__"
      ]
    ]
  ],
  "__ilshift__": [
    [
      "astropy/units/function/logarithmic.py",
      [
        "LogQuantity",
        "__ilshift__"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__ilshift__"
      ]
    ]
  ],
  "var": [
    [
      "astropy/units/function/logarithmic.py",
      [
        "LogQuantity",
        "var"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "var"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "var"
      ]
    ]
  ],
  "diff": [
    [
      "astropy/units/function/logarithmic.py",
      [
        "LogQuantity",
        "diff"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "diff"
      ]
    ],
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "diff"
      ]
    ]
  ],
  "ediff1d": [
    [
      "astropy/units/function/logarithmic.py",
      [
        "LogQuantity",
        "ediff1d"
      ]
    ],
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "ediff1d"
      ]
    ]
  ],
  "zero_point_flux": [
    [
      "astropy/units/photometric.py",
      [
        "zero_point_flux"
      ]
    ]
  ],
  "_physical_type_from_str": [
    [
      "astropy/units/physical.py",
      [
        "_physical_type_from_str"
      ]
    ]
  ],
  "_replace_temperatures_with_kelvin": [
    [
      "astropy/units/physical.py",
      [
        "_replace_temperatures_with_kelvin"
      ]
    ]
  ],
  "_standardize_physical_type_names": [
    [
      "astropy/units/physical.py",
      [
        "_standardize_physical_type_names"
      ]
    ]
  ],
  "_name_string_as_ordered_set": [
    [
      "astropy/units/physical.py",
      [
        "PhysicalType",
        "_name_string_as_ordered_set"
      ]
    ]
  ],
  "_dimensionally_compatible_unit": [
    [
      "astropy/units/physical.py",
      [
        "PhysicalType",
        "_dimensionally_compatible_unit"
      ]
    ]
  ],
  "_dimensional_analysis": [
    [
      "astropy/units/physical.py",
      [
        "PhysicalType",
        "_dimensional_analysis"
      ]
    ]
  ],
  "def_physical_type": [
    [
      "astropy/units/physical.py",
      [
        "def_physical_type"
      ]
    ]
  ],
  "get_physical_type": [
    [
      "astropy/units/physical.py",
      [
        "get_physical_type"
      ]
    ]
  ],
  "__next__": [
    [
      "astropy/units/quantity.py",
      [
        "QuantityIterator",
        "__next__"
      ]
    ],
    [
      "astropy/utils/console.py",
      [
        "ProgressBar",
        "__next__"
      ]
    ],
    [
      "astropy/utils/console.py",
      [
        "Spinner",
        "__next__"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedIterator",
        "__next__"
      ]
    ]
  ],
  "base": [
    [
      "astropy/units/quantity.py",
      [
        "QuantityIterator",
        "base"
      ]
    ]
  ],
  "coords": [
    [
      "astropy/units/quantity.py",
      [
        "QuantityIterator",
        "coords"
      ]
    ]
  ],
  "possible_string_format_functions": [
    [
      "astropy/units/quantity.py",
      [
        "QuantityInfoBase",
        "possible_string_format_functions"
      ]
    ]
  ],
  "__class_getitem__": [
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__class_getitem__"
      ]
    ]
  ],
  "_result_as_quantity": [
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "_result_as_quantity"
      ]
    ]
  ],
  "_new_view": [
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "_new_view"
      ]
    ]
  ],
  "_recursively_apply": [
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "_recursively_apply"
      ]
    ],
    [
      "astropy/units/structured.py",
      [
        "StructuredUnit",
        "_recursively_apply"
      ]
    ]
  ],
  "get_virtual_unit_attribute": [
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__getattr__",
        "get_virtual_unit_attribute"
      ]
    ]
  ],
  "__rshift__": [
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__rshift__"
      ]
    ]
  ],
  "__irshift__": [
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__irshift__"
      ]
    ]
  ],
  "__float__": [
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__float__"
      ]
    ]
  ],
  "__int__": [
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__int__"
      ]
    ]
  ],
  "__index__": [
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__index__"
      ]
    ]
  ],
  "float_formatter": [
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "to_string",
        "float_formatter"
      ]
    ]
  ],
  "complex_formatter": [
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "to_string",
        "complex_formatter"
      ]
    ]
  ],
  "_decompose": [
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "_decompose"
      ]
    ]
  ],
  "item": [
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "item"
      ]
    ]
  ],
  "_to_own_unit": [
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "_to_own_unit"
      ]
    ]
  ],
  "itemset": [
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "itemset"
      ]
    ]
  ],
  "tobytes": [
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "tobytes"
      ]
    ]
  ],
  "dumps": [
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "dumps"
      ]
    ]
  ],
  "flat": [
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "flat"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "flat"
      ]
    ]
  ],
  "flat_66": [
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "flat_66"
      ]
    ]
  ],
  "take": [
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "take"
      ]
    ],
    [
      "astropy/utils/shapes.py",
      [
        "NDArrayShapeMethods",
        "take"
      ]
    ]
  ],
  "put": [
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "put"
      ]
    ],
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "put"
      ]
    ]
  ],
  "choose": [
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "choose"
      ]
    ],
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "choose"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "choose"
      ]
    ],
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "choose"
      ]
    ]
  ],
  "__array_function__": [
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "__array_function__"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "__array_function__"
      ]
    ],
    [
      "astropy/utils/shapes.py",
      [
        "ShapedLikeNDArray",
        "__array_function__"
      ]
    ]
  ],
  "_not_implemented_or_raise": [
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "_not_implemented_or_raise"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "_not_implemented_or_raise"
      ]
    ]
  ],
  "trace": [
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "trace"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "trace"
      ]
    ]
  ],
  "all": [
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "all"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "all"
      ]
    ]
  ],
  "any": [
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "any"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "any"
      ]
    ]
  ],
  "nansum": [
    [
      "astropy/units/quantity.py",
      [
        "Quantity",
        "nansum"
      ]
    ]
  ],
  "_unquantify_allclose_arguments": [
    [
      "astropy/units/quantity.py",
      [
        "_unquantify_allclose_arguments"
      ]
    ]
  ],
  "register_module": [
    [
      "astropy/units/quantity_helper/converters.py",
      [
        "UfuncHelpers",
        "register_module"
      ]
    ]
  ],
  "import_module": [
    [
      "astropy/units/quantity_helper/converters.py",
      [
        "UfuncHelpers",
        "import_module"
      ]
    ]
  ],
  "__missing__": [
    [
      "astropy/units/quantity_helper/converters.py",
      [
        "UfuncHelpers",
        "__missing__"
      ]
    ]
  ],
  "can_have_arbitrary_unit": [
    [
      "astropy/units/quantity_helper/converters.py",
      [
        "can_have_arbitrary_unit"
      ]
    ]
  ],
  "converters_and_unit": [
    [
      "astropy/units/quantity_helper/converters.py",
      [
        "converters_and_unit"
      ]
    ]
  ],
  "check_output": [
    [
      "astropy/units/quantity_helper/converters.py",
      [
        "check_output"
      ]
    ]
  ],
  "has_matching_structure": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "has_matching_structure"
      ]
    ]
  ],
  "check_structured_unit": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "check_structured_unit"
      ]
    ]
  ],
  "helper_s2c": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "helper_s2c"
      ]
    ]
  ],
  "helper_s2p": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "helper_s2p"
      ]
    ]
  ],
  "helper_c2s": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "helper_c2s"
      ]
    ]
  ],
  "helper_p2s": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "helper_p2s"
      ]
    ]
  ],
  "helper_gc2gd": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "helper_gc2gd"
      ]
    ]
  ],
  "helper_gd2gc": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "helper_gd2gc"
      ]
    ]
  ],
  "helper_p2pv": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "helper_p2pv"
      ]
    ]
  ],
  "helper_pv2p": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "helper_pv2p"
      ]
    ]
  ],
  "helper_pv2s": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "helper_pv2s"
      ]
    ]
  ],
  "helper_s2pv": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "helper_s2pv"
      ]
    ]
  ],
  "helper_pv_multiplication": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "helper_pv_multiplication"
      ]
    ]
  ],
  "helper_pvm": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "helper_pvm"
      ]
    ]
  ],
  "helper_pvstar": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "helper_pvstar"
      ]
    ]
  ],
  "helper_starpv": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "helper_starpv"
      ]
    ]
  ],
  "helper_pvtob": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "helper_pvtob"
      ]
    ]
  ],
  "helper_pvu": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "helper_pvu"
      ]
    ]
  ],
  "helper_pvup": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "helper_pvup"
      ]
    ]
  ],
  "helper_s2xpv": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "helper_s2xpv"
      ]
    ]
  ],
  "ldbody_unit": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "ldbody_unit"
      ]
    ]
  ],
  "astrom_unit": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "astrom_unit"
      ]
    ]
  ],
  "helper_ldn": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "helper_ldn"
      ]
    ]
  ],
  "helper_aper": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "helper_aper"
      ]
    ]
  ],
  "helper_apio": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "helper_apio"
      ]
    ]
  ],
  "helper_atciq": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "helper_atciq"
      ]
    ]
  ],
  "helper_atciqn": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "helper_atciqn"
      ]
    ]
  ],
  "helper_atciqz_aticq": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "helper_atciqz_aticq"
      ]
    ]
  ],
  "helper_aticqn": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "helper_aticqn"
      ]
    ]
  ],
  "helper_atioq": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "helper_atioq"
      ]
    ]
  ],
  "helper_atoiq": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "helper_atoiq"
      ]
    ]
  ],
  "get_erfa_helpers": [
    [
      "astropy/units/quantity_helper/erfa.py",
      [
        "get_erfa_helpers"
      ]
    ]
  ],
  "invariant_a_helper": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "invariant_a_helper"
      ]
    ]
  ],
  "invariant_m_helper": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "invariant_m_helper"
      ]
    ]
  ],
  "invariant_x_helper": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "invariant_x_helper"
      ]
    ]
  ],
  "like_helper": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "like_helper"
      ]
    ]
  ],
  "sinc": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "sinc"
      ]
    ],
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "sinc"
      ]
    ]
  ],
  "unwrap": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "unwrap"
      ]
    ],
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "unwrap"
      ]
    ]
  ],
  "argpartition": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "argpartition"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "argpartition"
      ]
    ]
  ],
  "full_like": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "full_like"
      ]
    ],
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "full_like"
      ]
    ]
  ],
  "putmask": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "putmask"
      ]
    ],
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "putmask"
      ]
    ]
  ],
  "place": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "place"
      ]
    ],
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "place"
      ]
    ]
  ],
  "copyto": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "copyto"
      ]
    ],
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "copyto"
      ]
    ]
  ],
  "nan_to_num": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "nan_to_num"
      ]
    ],
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "nan_to_num"
      ]
    ]
  ],
  "_as_quantity": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "_as_quantity"
      ]
    ]
  ],
  "_as_quantities": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "_as_quantities"
      ]
    ]
  ],
  "_quantities2arrays": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "_quantities2arrays"
      ]
    ]
  ],
  "_iterable_helper": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "_iterable_helper"
      ]
    ]
  ],
  "block": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "block"
      ]
    ],
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "block"
      ]
    ]
  ],
  "select": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "select"
      ]
    ],
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "select"
      ]
    ]
  ],
  "piecewise": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "piecewise"
      ]
    ],
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "piecewise"
      ]
    ]
  ],
  "pad": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "pad"
      ]
    ]
  ],
  "quantile": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "quantile"
      ]
    ],
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "quantile"
      ]
    ]
  ],
  "percentile": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "percentile"
      ]
    ],
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "percentile"
      ]
    ]
  ],
  "count_nonzero": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "count_nonzero"
      ]
    ]
  ],
  "array_equal": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "array_equal"
      ]
    ],
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "array_equal"
      ]
    ]
  ],
  "array_equiv": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "array_equiv"
      ]
    ],
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "array_equiv"
      ]
    ]
  ],
  "dot_like": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "dot_like"
      ]
    ]
  ],
  "cross_like": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "cross_like"
      ]
    ]
  ],
  "einsum": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "einsum"
      ]
    ]
  ],
  "bincount": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "bincount"
      ]
    ],
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "bincount"
      ]
    ]
  ],
  "digitize": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "digitize"
      ]
    ]
  ],
  "_check_bins": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "_check_bins"
      ]
    ]
  ],
  "histogram_bin_edges": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "histogram_bin_edges"
      ]
    ]
  ],
  "histogram2d": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "histogram2d"
      ]
    ]
  ],
  "histogramdd": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "histogramdd"
      ]
    ]
  ],
  "gradient": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "gradient"
      ]
    ]
  ],
  "logspace": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "logspace"
      ]
    ]
  ],
  "geomspace": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "geomspace"
      ]
    ]
  ],
  "interp": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "interp"
      ]
    ],
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "interp"
      ]
    ]
  ],
  "intersect1d": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "intersect1d"
      ]
    ]
  ],
  "twosetop": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "twosetop"
      ]
    ]
  ],
  "setcheckop": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "setcheckop"
      ]
    ]
  ],
  "apply_over_axes": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "apply_over_axes"
      ]
    ],
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "apply_over_axes"
      ]
    ]
  ],
  "array_repr": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "array_repr"
      ]
    ]
  ],
  "array_str": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "array_str"
      ]
    ],
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "array_str"
      ]
    ]
  ],
  "array2string": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "array2string"
      ]
    ],
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "array2string"
      ]
    ]
  ],
  "diag": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "diag"
      ]
    ]
  ],
  "svd": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "svd"
      ]
    ]
  ],
  "_interpret_tol": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "_interpret_tol"
      ]
    ]
  ],
  "matrix_rank": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "matrix_rank"
      ]
    ]
  ],
  "inv": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "inv"
      ]
    ]
  ],
  "pinv": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "pinv"
      ]
    ]
  ],
  "det": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "det"
      ]
    ]
  ],
  "solve": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "solve"
      ]
    ]
  ],
  "lstsq": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "lstsq"
      ]
    ]
  ],
  "matrix_power": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "matrix_power"
      ]
    ]
  ],
  "cholesky": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "cholesky"
      ]
    ]
  ],
  "qr": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "qr"
      ]
    ]
  ],
  "eig": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "eig"
      ]
    ]
  ],
  "structured_to_unstructured": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "structured_to_unstructured"
      ]
    ]
  ],
  "_build_structured_unit": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "_build_structured_unit"
      ]
    ]
  ],
  "unstructured_to_structured": [
    [
      "astropy/units/quantity_helper/function_helpers.py",
      [
        "unstructured_to_structured"
      ]
    ]
  ],
  "_d": [
    [
      "astropy/units/quantity_helper/helpers.py",
      [
        "_d"
      ]
    ]
  ],
  "get_converters_and_unit": [
    [
      "astropy/units/quantity_helper/helpers.py",
      [
        "get_converters_and_unit"
      ]
    ]
  ],
  "helper_onearg_test": [
    [
      "astropy/units/quantity_helper/helpers.py",
      [
        "helper_onearg_test"
      ]
    ]
  ],
  "helper_invariant": [
    [
      "astropy/units/quantity_helper/helpers.py",
      [
        "helper_invariant"
      ]
    ]
  ],
  "helper_square": [
    [
      "astropy/units/quantity_helper/helpers.py",
      [
        "helper_square"
      ]
    ]
  ],
  "helper_reciprocal": [
    [
      "astropy/units/quantity_helper/helpers.py",
      [
        "helper_reciprocal"
      ]
    ]
  ],
  "helper_sqrt": [
    [
      "astropy/units/quantity_helper/helpers.py",
      [
        "helper_sqrt"
      ]
    ]
  ],
  "helper_cbrt": [
    [
      "astropy/units/quantity_helper/helpers.py",
      [
        "helper_cbrt"
      ]
    ]
  ],
  "helper_modf": [
    [
      "astropy/units/quantity_helper/helpers.py",
      [
        "helper_modf"
      ]
    ]
  ],
  "helper__ones_like": [
    [
      "astropy/units/quantity_helper/helpers.py",
      [
        "helper__ones_like"
      ]
    ]
  ],
  "helper_dimensionless_to_dimensionless": [
    [
      "astropy/units/quantity_helper/helpers.py",
      [
        "helper_dimensionless_to_dimensionless"
      ]
    ]
  ],
  "helper_dimensionless_to_radian": [
    [
      "astropy/units/quantity_helper/helpers.py",
      [
        "helper_dimensionless_to_radian"
      ]
    ]
  ],
  "helper_degree_to_radian": [
    [
      "astropy/units/quantity_helper/helpers.py",
      [
        "helper_degree_to_radian"
      ]
    ]
  ],
  "helper_radian_to_degree": [
    [
      "astropy/units/quantity_helper/helpers.py",
      [
        "helper_radian_to_degree"
      ]
    ]
  ],
  "helper_radian_to_dimensionless": [
    [
      "astropy/units/quantity_helper/helpers.py",
      [
        "helper_radian_to_dimensionless"
      ]
    ]
  ],
  "helper_frexp": [
    [
      "astropy/units/quantity_helper/helpers.py",
      [
        "helper_frexp"
      ]
    ]
  ],
  "helper_multiplication": [
    [
      "astropy/units/quantity_helper/helpers.py",
      [
        "helper_multiplication"
      ]
    ]
  ],
  "helper_division": [
    [
      "astropy/units/quantity_helper/helpers.py",
      [
        "helper_division"
      ]
    ]
  ],
  "helper_power": [
    [
      "astropy/units/quantity_helper/helpers.py",
      [
        "helper_power"
      ]
    ]
  ],
  "helper_ldexp": [
    [
      "astropy/units/quantity_helper/helpers.py",
      [
        "helper_ldexp"
      ]
    ]
  ],
  "helper_copysign": [
    [
      "astropy/units/quantity_helper/helpers.py",
      [
        "helper_copysign"
      ]
    ]
  ],
  "helper_heaviside": [
    [
      "astropy/units/quantity_helper/helpers.py",
      [
        "helper_heaviside"
      ]
    ]
  ],
  "helper_two_arg_dimensionless": [
    [
      "astropy/units/quantity_helper/helpers.py",
      [
        "helper_two_arg_dimensionless"
      ]
    ]
  ],
  "helper_twoarg_comparison": [
    [
      "astropy/units/quantity_helper/helpers.py",
      [
        "helper_twoarg_comparison"
      ]
    ]
  ],
  "helper_twoarg_invtrig": [
    [
      "astropy/units/quantity_helper/helpers.py",
      [
        "helper_twoarg_invtrig"
      ]
    ]
  ],
  "helper_twoarg_floor_divide": [
    [
      "astropy/units/quantity_helper/helpers.py",
      [
        "helper_twoarg_floor_divide"
      ]
    ]
  ],
  "helper_divmod": [
    [
      "astropy/units/quantity_helper/helpers.py",
      [
        "helper_divmod"
      ]
    ]
  ],
  "helper_clip": [
    [
      "astropy/units/quantity_helper/helpers.py",
      [
        "helper_clip"
      ]
    ]
  ],
  "helper_degree_to_dimensionless": [
    [
      "astropy/units/quantity_helper/scipy_special.py",
      [
        "helper_degree_to_dimensionless"
      ]
    ]
  ],
  "helper_degree_minute_second_to_radian": [
    [
      "astropy/units/quantity_helper/scipy_special.py",
      [
        "helper_degree_minute_second_to_radian"
      ]
    ]
  ],
  "get_scipy_special_helpers": [
    [
      "astropy/units/quantity_helper/scipy_special.py",
      [
        "get_scipy_special_helpers"
      ]
    ]
  ],
  "_enable": [
    [
      "astropy/units/required_by_vounit.py",
      [
        "_enable"
      ]
    ]
  ],
  "_names_from_dtype": [
    [
      "astropy/units/structured.py",
      [
        "_names_from_dtype"
      ]
    ]
  ],
  "_normalize_names": [
    [
      "astropy/units/structured.py",
      [
        "_normalize_names"
      ]
    ]
  ],
  "field_names": [
    [
      "astropy/units/structured.py",
      [
        "StructuredUnit",
        "field_names"
      ]
    ]
  ],
  "_recursively_get_dtype": [
    [
      "astropy/units/structured.py",
      [
        "StructuredUnit",
        "_recursively_get_dtype"
      ]
    ]
  ],
  "test_set_enabled_aliases_context_manager": [
    [
      "astropy/units/tests/test_aliases.py",
      [
        "TestAliases",
        "test_set_enabled_aliases_context_manager"
      ]
    ]
  ],
  "test_add_enabled_aliases_context_manager": [
    [
      "astropy/units/tests/test_aliases.py",
      [
        "TestAliases",
        "test_add_enabled_aliases_context_manager"
      ]
    ]
  ],
  "test_set_enabled_aliases": [
    [
      "astropy/units/tests/test_aliases.py",
      [
        "TestAliases",
        "test_set_enabled_aliases"
      ]
    ]
  ],
  "test_add_enabled_aliases": [
    [
      "astropy/units/tests/test_aliases.py",
      [
        "TestAliases",
        "test_add_enabled_aliases"
      ]
    ]
  ],
  "test_cannot_alias_existing_unit": [
    [
      "astropy/units/tests/test_aliases.py",
      [
        "TestAliases",
        "test_cannot_alias_existing_unit"
      ]
    ]
  ],
  "test_cannot_alias_existing_alias_to_another_unit": [
    [
      "astropy/units/tests/test_aliases.py",
      [
        "TestAliases",
        "test_cannot_alias_existing_alias_to_another_unit"
      ]
    ]
  ],
  "test_emu": [
    [
      "astropy/units/tests/test_deprecated.py",
      [
        "test_emu"
      ]
    ]
  ],
  "test_required_by_vounit": [
    [
      "astropy/units/tests/test_deprecated.py",
      [
        "test_required_by_vounit"
      ]
    ]
  ],
  "test_dimensionless_angles": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_dimensionless_angles"
      ]
    ]
  ],
  "test_logarithmic": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_logarithmic"
      ]
    ]
  ],
  "test_doppler_frequency_0": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_doppler_frequency_0"
      ]
    ]
  ],
  "test_doppler_wavelength_0": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_doppler_wavelength_0"
      ]
    ]
  ],
  "test_doppler_energy_0": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_doppler_energy_0"
      ]
    ]
  ],
  "test_doppler_frequency_circle": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_doppler_frequency_circle"
      ]
    ]
  ],
  "test_doppler_wavelength_circle": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_doppler_wavelength_circle"
      ]
    ]
  ],
  "test_doppler_energy_circle": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_doppler_energy_circle"
      ]
    ]
  ],
  "test_30kms": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_30kms"
      ]
    ]
  ],
  "test_bad_restfreqs": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_bad_restfreqs"
      ]
    ]
  ],
  "test_doppler_redshift": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_doppler_redshift"
      ]
    ]
  ],
  "test_doppler_redshift_no_cosmology": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_doppler_redshift_no_cosmology"
      ]
    ]
  ],
  "test_massenergy": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_massenergy"
      ]
    ]
  ],
  "test_parallax2": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_parallax2"
      ]
    ]
  ],
  "test_spectral": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_spectral"
      ]
    ]
  ],
  "test_spectral2": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_spectral2"
      ]
    ]
  ],
  "test_spectral3": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_spectral3"
      ]
    ]
  ],
  "test_spectral4": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_spectral4"
      ]
    ]
  ],
  "test_spectraldensity2": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_spectraldensity2"
      ]
    ]
  ],
  "test_spectraldensity3": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_spectraldensity3"
      ]
    ]
  ],
  "test_spectraldensity4": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_spectraldensity4"
      ]
    ]
  ],
  "test_spectraldensity5": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_spectraldensity5"
      ]
    ]
  ],
  "test_spectraldensity6": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_spectraldensity6"
      ]
    ]
  ],
  "test_spectraldensity_not_allowed": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_spectraldensity_not_allowed"
      ]
    ]
  ],
  "test_equivalent_units": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_equivalent_units"
      ]
    ]
  ],
  "test_equivalent_units2": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_equivalent_units2"
      ]
    ]
  ],
  "test_trivial_equivalency": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_trivial_equivalency"
      ]
    ]
  ],
  "test_invalid_equivalency": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_invalid_equivalency"
      ]
    ]
  ],
  "test_irrelevant_equivalency": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_irrelevant_equivalency"
      ]
    ]
  ],
  "test_brightness_temperature": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_brightness_temperature"
      ]
    ]
  ],
  "test_swapped_args_brightness_temperature": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_swapped_args_brightness_temperature"
      ]
    ]
  ],
  "test_surfacebrightness": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_surfacebrightness"
      ]
    ]
  ],
  "test_beam": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_beam"
      ]
    ]
  ],
  "test_thermodynamic_temperature": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_thermodynamic_temperature"
      ]
    ]
  ],
  "test_equivalency_context": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_equivalency_context"
      ]
    ]
  ],
  "just_to_from_units": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_equivalency_context_manager",
        "just_to_from_units"
      ]
    ]
  ],
  "test_temperature_energy": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_temperature_energy"
      ]
    ]
  ],
  "test_molar_mass_amu": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_molar_mass_amu"
      ]
    ]
  ],
  "test_compose_equivalencies": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_compose_equivalencies"
      ]
    ]
  ],
  "test_pixel_scale": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_pixel_scale"
      ]
    ]
  ],
  "test_pixel_scale_invalid_scale_unit": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_pixel_scale_invalid_scale_unit"
      ]
    ]
  ],
  "test_pixel_scale_acceptable_scale_unit": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_pixel_scale_acceptable_scale_unit"
      ]
    ]
  ],
  "test_plate_scale": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_plate_scale"
      ]
    ]
  ],
  "test_equivelency": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_equivelency"
      ]
    ]
  ],
  "test_add_equivelencies": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_add_equivelencies"
      ]
    ]
  ],
  "test_pprint": [
    [
      "astropy/units/tests/test_equivalencies.py",
      [
        "test_pprint"
      ]
    ]
  ],
  "test_unit_grammar": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_unit_grammar"
      ]
    ]
  ],
  "test_unit_grammar_fail": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_unit_grammar_fail"
      ]
    ]
  ],
  "test_cds_grammar": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_cds_grammar"
      ]
    ]
  ],
  "test_cds_grammar_fail": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_cds_grammar_fail"
      ]
    ]
  ],
  "test_cds_dimensionless": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_cds_dimensionless"
      ]
    ]
  ],
  "test_cds_log10_dimensionless": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_cds_log10_dimensionless"
      ]
    ]
  ],
  "test_ogip_grammar": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_ogip_grammar"
      ]
    ]
  ],
  "test_ogip_grammar_fail": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_ogip_grammar_fail"
      ]
    ]
  ],
  "check_roundtrip": [
    [
      "astropy/units/tests/test_format.py",
      [
        "RoundtripBase",
        "check_roundtrip"
      ]
    ]
  ],
  "check_roundtrip_decompose": [
    [
      "astropy/units/tests/test_format.py",
      [
        "RoundtripBase",
        "check_roundtrip_decompose"
      ]
    ]
  ],
  "test_roundtrip_dex": [
    [
      "astropy/units/tests/test_format.py",
      [
        "TestRoundtripCDS",
        "test_roundtrip_dex"
      ]
    ]
  ],
  "test_fits_units_available": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_fits_units_available"
      ]
    ]
  ],
  "test_vo_units_available": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_vo_units_available"
      ]
    ]
  ],
  "test_cds_units_available": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_cds_units_available"
      ]
    ]
  ],
  "test_cds_non_ascii_unit": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_cds_non_ascii_unit"
      ]
    ]
  ],
  "test_latex": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_latex"
      ]
    ]
  ],
  "test_new_style_latex": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_new_style_latex"
      ]
    ]
  ],
  "test_latex_scale": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_latex_scale"
      ]
    ]
  ],
  "test_latex_inline_scale": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_latex_inline_scale"
      ]
    ]
  ],
  "test_format_styles": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_format_styles"
      ]
    ]
  ],
  "test_flatten_to_known": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_flatten_to_known"
      ]
    ]
  ],
  "test_flatten_impossible": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_flatten_impossible"
      ]
    ]
  ],
  "test_console_out": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_console_out"
      ]
    ]
  ],
  "test_flexible_float": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_flexible_float"
      ]
    ]
  ],
  "test_fits_to_string_function_error": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_fits_to_string_function_error"
      ]
    ]
  ],
  "test_fraction_repr": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_fraction_repr"
      ]
    ]
  ],
  "test_scale_effectively_unity": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_scale_effectively_unity"
      ]
    ]
  ],
  "test_percent": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_percent"
      ]
    ],
    [
      "astropy/visualization/tests/test_norm.py",
      [
        "TestImageScaling",
        "test_percent"
      ]
    ]
  ],
  "test_scaled_dimensionless": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_scaled_dimensionless"
      ]
    ]
  ],
  "test_deprecated_did_you_mean_units": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_deprecated_did_you_mean_units"
      ]
    ]
  ],
  "test_fits_function": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_fits_function"
      ]
    ]
  ],
  "test_vounit_function": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_vounit_function"
      ]
    ]
  ],
  "test_vounit_binary_prefix": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_vounit_binary_prefix"
      ]
    ]
  ],
  "test_vounit_unknown": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_vounit_unknown"
      ]
    ]
  ],
  "test_vounit_details": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_vounit_details"
      ]
    ]
  ],
  "test_vounit_scale_factor": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_vounit_scale_factor"
      ]
    ]
  ],
  "test_vounit_custom": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_vounit_custom"
      ]
    ]
  ],
  "test_vounit_implicit_custom": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_vounit_implicit_custom"
      ]
    ]
  ],
  "test_fits_scale_factor": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_fits_scale_factor"
      ]
    ]
  ],
  "test_fits_scale_factor_errors": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_fits_scale_factor_errors"
      ]
    ]
  ],
  "test_double_superscript": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_double_superscript"
      ]
    ]
  ],
  "test_powers": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_powers"
      ]
    ]
  ],
  "test_unicode": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_unicode"
      ]
    ],
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_unicode"
      ]
    ]
  ],
  "test_unicode_failures": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_unicode_failures"
      ]
    ]
  ],
  "test_parse_error_message_for_output_only_format": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_parse_error_message_for_output_only_format"
      ]
    ]
  ],
  "test_unknown_parser": [
    [
      "astropy/units/tests/test_format.py",
      [
        "test_unknown_parser"
      ]
    ]
  ],
  "test_logarithmic_units": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogUnitCreation",
        "test_logarithmic_units"
      ]
    ]
  ],
  "test_callable_units": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogUnitCreation",
        "test_callable_units"
      ]
    ]
  ],
  "test_equality_to_normal_unit_for_dimensionless": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogUnitCreation",
        "test_equality_to_normal_unit_for_dimensionless"
      ]
    ]
  ],
  "test_call_units": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogUnitCreation",
        "test_call_units"
      ]
    ]
  ],
  "test_call_invalid_unit": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogUnitCreation",
        "test_call_invalid_unit"
      ]
    ]
  ],
  "test_subclass_creation": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogUnitCreation",
        "test_subclass_creation"
      ]
    ],
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantityCreation",
        "test_subclass_creation"
      ]
    ]
  ],
  "test_lshift_magnitude": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogUnitCreation",
        "test_lshift_magnitude"
      ]
    ]
  ],
  "test_ilshift_magnitude": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogUnitCreation",
        "test_ilshift_magnitude"
      ]
    ]
  ],
  "test_lshift_errors": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogUnitCreation",
        "test_lshift_errors"
      ]
    ]
  ],
  "test_predefined_magnitudes": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "test_predefined_magnitudes"
      ]
    ]
  ],
  "test_predefined_reinitialisation": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "test_predefined_reinitialisation"
      ]
    ]
  ],
  "test_predefined_string_roundtrip": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "test_predefined_string_roundtrip"
      ]
    ]
  ],
  "test_inequality": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "test_inequality"
      ]
    ]
  ],
  "test_physical_unit_conversion": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogUnitConversion",
        "test_physical_unit_conversion"
      ]
    ]
  ],
  "test_container_unit_conversion": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogUnitConversion",
        "test_container_unit_conversion"
      ]
    ]
  ],
  "test_subclass_conversion": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogUnitConversion",
        "test_subclass_conversion"
      ]
    ]
  ],
  "test_unit_decomposition": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogUnitConversion",
        "test_unit_decomposition"
      ]
    ]
  ],
  "test_unit_multiple_possible_equivalencies": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogUnitConversion",
        "test_unit_multiple_possible_equivalencies"
      ]
    ]
  ],
  "test_magnitude_conversion_fails_message": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogUnitConversion",
        "test_magnitude_conversion_fails_message"
      ]
    ]
  ],
  "test_multiplication_division": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogUnitArithmetic",
        "test_multiplication_division"
      ]
    ],
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantityArithmetic",
        "test_multiplication_division"
      ]
    ]
  ],
  "test_raise_to_power": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogUnitArithmetic",
        "test_raise_to_power"
      ]
    ],
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantityArithmetic",
        "test_raise_to_power"
      ]
    ]
  ],
  "test_addition_subtraction_to_normal_units_fails": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogUnitArithmetic",
        "test_addition_subtraction_to_normal_units_fails"
      ]
    ],
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantityArithmetic",
        "test_addition_subtraction_to_normal_units_fails"
      ]
    ]
  ],
  "test_addition_subtraction_to_non_units_fails": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogUnitArithmetic",
        "test_addition_subtraction_to_non_units_fails"
      ]
    ]
  ],
  "test_addition_subtraction": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogUnitArithmetic",
        "test_addition_subtraction"
      ]
    ],
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantityArithmetic",
        "test_addition_subtraction"
      ]
    ]
  ],
  "test_complicated_addition_subtraction": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogUnitArithmetic",
        "test_complicated_addition_subtraction"
      ]
    ],
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantityArithmetic",
        "test_complicated_addition_subtraction"
      ]
    ]
  ],
  "test_hashable": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "test_hashable"
      ]
    ]
  ],
  "test_logarithmic_quantities": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantityCreation",
        "test_logarithmic_quantities"
      ]
    ]
  ],
  "test_different_units": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantityCreation",
        "test_different_units"
      ]
    ]
  ],
  "test_function_values": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantityCreation",
        "test_function_values"
      ]
    ]
  ],
  "test_indirect_creation": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantityCreation",
        "test_indirect_creation"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedNDArraySubclassCreation",
        "test_indirect_creation"
      ]
    ]
  ],
  "test_from_view": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantityCreation",
        "test_from_view"
      ]
    ]
  ],
  "test_using_quantity_class": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantityCreation",
        "test_using_quantity_class"
      ]
    ]
  ],
  "test_conversion_to_and_from_physical_quantities": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "test_conversion_to_and_from_physical_quantities"
      ]
    ]
  ],
  "test_quantity_decomposition": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "test_quantity_decomposition"
      ]
    ]
  ],
  "test_value_view": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantityViews",
        "test_value_view"
      ]
    ]
  ],
  "test_function_view": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantityViews",
        "test_function_view"
      ]
    ]
  ],
  "test_quantity_view": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantityViews",
        "test_quantity_view"
      ]
    ]
  ],
  "test_item_get_and_set": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantitySlicing",
        "test_item_get_and_set"
      ]
    ]
  ],
  "test_slice_get_and_set": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantitySlicing",
        "test_slice_get_and_set"
      ]
    ]
  ],
  "test_more_multiplication_division": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantityArithmetic",
        "test_more_multiplication_division"
      ]
    ]
  ],
  "test_error_on_lq_as_power": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantityArithmetic",
        "test_error_on_lq_as_power"
      ]
    ]
  ],
  "test_inplace_addition_subtraction_unit_checks": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantityArithmetic",
        "test_inplace_addition_subtraction_unit_checks"
      ]
    ]
  ],
  "test_inplace_addition_subtraction": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantityArithmetic",
        "test_inplace_addition_subtraction"
      ]
    ]
  ],
  "test_comparison_to_non_quantities_fails": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantityComparisons",
        "test_comparison_to_non_quantities_fails"
      ]
    ]
  ],
  "test_comparison": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantityComparisons",
        "test_comparison"
      ]
    ],
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityOperations",
        "test_comparison"
      ]
    ],
    [
      "astropy/units/tests/test_units.py",
      [
        "test_comparison"
      ]
    ]
  ],
  "test_always_ok": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantityMethods",
        "test_always_ok"
      ]
    ]
  ],
  "test_clip": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantityMethods",
        "test_clip"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_clip"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncLike",
        "test_clip"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestMethodLikes",
        "test_clip"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_clip"
      ]
    ],
    [
      "astropy/visualization/tests/test_norm.py",
      [
        "TestNormalize",
        "test_clip"
      ]
    ],
    [
      "astropy/visualization/tests/test_stretch.py",
      [
        "TestStretch",
        "test_clip"
      ]
    ]
  ],
  "test_only_ok_if_dimensionless": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantityMethods",
        "test_only_ok_if_dimensionless"
      ]
    ]
  ],
  "test_never_ok": [
    [
      "astropy/units/tests/test_logarithmic.py",
      [
        "TestLogQuantityMethods",
        "test_never_ok"
      ]
    ]
  ],
  "test_maggies": [
    [
      "astropy/units/tests/test_photometric.py",
      [
        "test_maggies"
      ]
    ]
  ],
  "test_maggies_zpts": [
    [
      "astropy/units/tests/test_photometric.py",
      [
        "test_maggies_zpts"
      ]
    ]
  ],
  "test_physical_type_names": [
    [
      "astropy/units/tests/test_physical.py",
      [
        "test_physical_type_names"
      ]
    ]
  ],
  "test_getting_physical_type": [
    [
      "astropy/units/tests/test_physical.py",
      [
        "test_getting_physical_type"
      ]
    ]
  ],
  "test_getting_physical_type_exceptions": [
    [
      "astropy/units/tests/test_physical.py",
      [
        "test_getting_physical_type_exceptions"
      ]
    ]
  ],
  "test_physical_type_cannot_become_quantity": [
    [
      "astropy/units/tests/test_physical.py",
      [
        "test_physical_type_cannot_become_quantity"
      ]
    ]
  ],
  "test_physical_type_operations": [
    [
      "astropy/units/tests/test_physical.py",
      [
        "test_physical_type_operations"
      ]
    ]
  ],
  "test_physical_type_as_set": [
    [
      "astropy/units/tests/test_physical.py",
      [
        "test_physical_type_as_set"
      ]
    ]
  ],
  "test_physical_type_iteration": [
    [
      "astropy/units/tests/test_physical.py",
      [
        "test_physical_type_iteration"
      ]
    ]
  ],
  "test_physical_type_in": [
    [
      "astropy/units/tests/test_physical.py",
      [
        "test_physical_type_in"
      ]
    ]
  ],
  "test_physical_type_instance_equality": [
    [
      "astropy/units/tests/test_physical.py",
      [
        "test_physical_type_instance_equality"
      ]
    ]
  ],
  "test_get_physical_type_equivalent_pairs": [
    [
      "astropy/units/tests/test_physical.py",
      [
        "test_get_physical_type_equivalent_pairs"
      ]
    ]
  ],
  "test_physical_type_instance_inequality": [
    [
      "astropy/units/tests/test_physical.py",
      [
        "test_physical_type_instance_inequality"
      ]
    ]
  ],
  "test_physical_type_str": [
    [
      "astropy/units/tests/test_physical.py",
      [
        "test_physical_type_str"
      ]
    ]
  ],
  "physical_type_repr": [
    [
      "astropy/units/tests/test_physical.py",
      [
        "physical_type_repr"
      ]
    ]
  ],
  "test_physical_type_hash": [
    [
      "astropy/units/tests/test_physical.py",
      [
        "test_physical_type_hash"
      ]
    ]
  ],
  "test_physical_type_multiplication": [
    [
      "astropy/units/tests/test_physical.py",
      [
        "test_physical_type_multiplication"
      ]
    ]
  ],
  "test_unrecognized_unit_physical_type": [
    [
      "astropy/units/tests/test_physical.py",
      [
        "test_unrecognized_unit_physical_type"
      ]
    ]
  ],
  "test_invalid_physical_types": [
    [
      "astropy/units/tests/test_physical.py",
      [
        "test_invalid_physical_types"
      ]
    ]
  ],
  "test_attempt_to_define_unknown_physical_type": [
    [
      "astropy/units/tests/test_physical.py",
      [
        "TestDefPhysType",
        "test_attempt_to_define_unknown_physical_type"
      ]
    ]
  ],
  "test_multiple_same_physical_type_names": [
    [
      "astropy/units/tests/test_physical.py",
      [
        "TestDefPhysType",
        "test_multiple_same_physical_type_names"
      ]
    ]
  ],
  "test_expanding_names_for_physical_type": [
    [
      "astropy/units/tests/test_physical.py",
      [
        "TestDefPhysType",
        "test_expanding_names_for_physical_type"
      ]
    ]
  ],
  "test_redundant_physical_type": [
    [
      "astropy/units/tests/test_physical.py",
      [
        "TestDefPhysType",
        "test_redundant_physical_type"
      ]
    ]
  ],
  "_undef_physical_type": [
    [
      "astropy/units/tests/test_physical.py",
      [
        "TestDefPhysType",
        "_undef_physical_type"
      ]
    ]
  ],
  "test_that_str_methods_work_with_physical_types": [
    [
      "astropy/units/tests/test_physical.py",
      [
        "test_that_str_methods_work_with_physical_types"
      ]
    ]
  ],
  "test_missing_physical_type_attribute": [
    [
      "astropy/units/tests/test_physical.py",
      [
        "test_missing_physical_type_attribute"
      ]
    ]
  ],
  "test_physical_types_module_access": [
    [
      "astropy/units/tests/test_physical.py",
      [
        "test_physical_types_module_access"
      ]
    ]
  ],
  "test_nan_inf": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityCreation",
        "test_nan_inf"
      ]
    ]
  ],
  "test_unit_property": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityCreation",
        "test_unit_property"
      ]
    ]
  ],
  "test_preserve_dtype": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityCreation",
        "test_preserve_dtype"
      ]
    ]
  ],
  "test_subok": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityCreation",
        "test_subok"
      ]
    ]
  ],
  "test_ndmin": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityCreation",
        "test_ndmin"
      ]
    ]
  ],
  "test_non_quantity_with_unit": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityCreation",
        "test_non_quantity_with_unit"
      ]
    ]
  ],
  "test_creation_via_view": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityCreation",
        "test_creation_via_view"
      ]
    ]
  ],
  "test_rshift_warns": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityCreation",
        "test_rshift_warns"
      ]
    ]
  ],
  "test_subtraction": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityOperations",
        "test_subtraction"
      ]
    ]
  ],
  "test_multiplication": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityOperations",
        "test_multiplication"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitArithmatic",
        "test_multiplication"
      ]
    ]
  ],
  "test_division": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityOperations",
        "test_division"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitArithmatic",
        "test_division"
      ]
    ]
  ],
  "test_commutativity": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityOperations",
        "test_commutativity"
      ]
    ]
  ],
  "test_power": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityOperations",
        "test_power"
      ]
    ],
    [
      "astropy/visualization/tests/test_norm.py",
      [
        "TestImageScaling",
        "test_power"
      ]
    ]
  ],
  "test_matrix_multiplication": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityOperations",
        "test_matrix_multiplication"
      ]
    ]
  ],
  "test_unary": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityOperations",
        "test_unary"
      ]
    ]
  ],
  "test_abs": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityOperations",
        "test_abs"
      ]
    ]
  ],
  "test_incompatible_units": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityOperations",
        "test_incompatible_units"
      ]
    ],
    [
      "astropy/visualization/tests/test_units.py",
      [
        "test_incompatible_units"
      ]
    ]
  ],
  "test_non_number_type": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityOperations",
        "test_non_number_type"
      ]
    ]
  ],
  "test_dimensionless_operations": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityOperations",
        "test_dimensionless_operations"
      ]
    ]
  ],
  "test_complicated_operation": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityOperations",
        "test_complicated_operation"
      ]
    ]
  ],
  "test_numeric_converters": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityOperations",
        "test_numeric_converters"
      ]
    ]
  ],
  "test_numeric_converter_to_index_in_practice": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityOperations",
        "test_numeric_converter_to_index_in_practice"
      ]
    ]
  ],
  "test_array_converters": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityOperations",
        "test_array_converters"
      ]
    ]
  ],
  "test_quantity_conversion": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_quantity_conversion"
      ]
    ]
  ],
  "test_quantity_value_views": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_quantity_value_views"
      ]
    ]
  ],
  "test_quantity_conversion_with_equiv": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_quantity_conversion_with_equiv"
      ]
    ]
  ],
  "test_quantity_conversion_equivalency_passed_on": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_quantity_conversion_equivalency_passed_on"
      ]
    ]
  ],
  "test_self_equivalency": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_self_equivalency"
      ]
    ]
  ],
  "test_si": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_si"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitMethods",
        "test_si"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredQuantity",
        "test_si"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredMaskedQuantity",
        "test_si"
      ]
    ]
  ],
  "test_cgs": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_cgs"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitMethods",
        "test_cgs"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredQuantity",
        "test_cgs"
      ]
    ]
  ],
  "test_quantity_equality": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityComparison",
        "test_quantity_equality"
      ]
    ]
  ],
  "test_quantity_equality_array": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityComparison",
        "test_quantity_equality_array"
      ]
    ]
  ],
  "test_dimensionless_quantity_repr": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityDisplay",
        "test_dimensionless_quantity_repr"
      ]
    ]
  ],
  "test_dimensionless_quantity_str": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityDisplay",
        "test_dimensionless_quantity_str"
      ]
    ]
  ],
  "test_dimensionless_quantity_format": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityDisplay",
        "test_dimensionless_quantity_format"
      ]
    ]
  ],
  "test_scalar_quantity_str": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityDisplay",
        "test_scalar_quantity_str"
      ]
    ]
  ],
  "test_scalar_quantity_repr": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityDisplay",
        "test_scalar_quantity_repr"
      ]
    ]
  ],
  "test_array_quantity_str": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityDisplay",
        "test_array_quantity_str"
      ]
    ]
  ],
  "test_array_quantity_repr": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityDisplay",
        "test_array_quantity_repr"
      ]
    ]
  ],
  "test_scalar_quantity_format": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityDisplay",
        "test_scalar_quantity_format"
      ]
    ]
  ],
  "test_uninitialized_unit_format": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityDisplay",
        "test_uninitialized_unit_format"
      ]
    ]
  ],
  "test_decompose": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_decompose"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitMethods",
        "test_decompose"
      ]
    ],
    [
      "astropy/units/tests/test_units.py",
      [
        "test_decompose"
      ]
    ]
  ],
  "test_decompose_regression": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_decompose_regression"
      ]
    ]
  ],
  "test_array_indexing_slicing": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_array_indexing_slicing"
      ]
    ]
  ],
  "test_array_setslice": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_array_setslice"
      ]
    ]
  ],
  "test_inverse_quantity": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_inverse_quantity"
      ]
    ]
  ],
  "test_quantity_mutability": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_quantity_mutability"
      ]
    ]
  ],
  "test_quantity_initialized_with_quantity": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_quantity_initialized_with_quantity"
      ]
    ]
  ],
  "test_quantity_string_unit": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_quantity_string_unit"
      ]
    ]
  ],
  "test_quantity_invalid_unit_string": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_quantity_invalid_unit_string"
      ]
    ]
  ],
  "test_implicit_conversion": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_implicit_conversion"
      ]
    ]
  ],
  "test_implicit_conversion_autocomplete": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_implicit_conversion_autocomplete"
      ]
    ]
  ],
  "test_quantity_iterability": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_quantity_iterability"
      ]
    ]
  ],
  "test_equality_numpy_scalar": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_equality_numpy_scalar"
      ]
    ]
  ],
  "test_quantity_pickelability": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_quantity_pickelability"
      ]
    ]
  ],
  "test_quantity_initialisation_from_string": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_quantity_initialisation_from_string"
      ]
    ]
  ],
  "test_unsupported": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_unsupported"
      ]
    ]
  ],
  "test_unit_identity": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_unit_identity"
      ]
    ]
  ],
  "test_quantity_to_view": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_quantity_to_view"
      ]
    ]
  ],
  "test_quantity_tuple_power": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_quantity_tuple_power"
      ]
    ]
  ],
  "test_quantity_fraction_power": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_quantity_fraction_power"
      ]
    ]
  ],
  "test_quantity_from_table": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_quantity_from_table"
      ]
    ]
  ],
  "test_assign_slice_with_quantity_like": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_assign_slice_with_quantity_like"
      ]
    ]
  ],
  "test_repr_array_of_quantity": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_repr_array_of_quantity"
      ]
    ]
  ],
  "test_creation": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestSpecificTypeQuantity",
        "test_creation"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestRecArray",
        "test_creation"
      ]
    ]
  ],
  "test_operation_precedence_and_fallback": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestSpecificTypeQuantity",
        "test_operation_precedence_and_fallback"
      ]
    ]
  ],
  "test_unit_class_override": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_unit_class_override"
      ]
    ]
  ],
  "test_mimic_input": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityMimics",
        "test_mimic_input"
      ]
    ]
  ],
  "test_mimic_setting": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityMimics",
        "test_mimic_setting"
      ]
    ]
  ],
  "test_mimic_function_unit": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantityMimics",
        "test_mimic_function_unit"
      ]
    ]
  ],
  "test_masked_quantity_str_repr": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "test_masked_quantity_str_repr"
      ]
    ]
  ],
  "test_attr_propagation": [
    [
      "astropy/units/tests/test_quantity.py",
      [
        "TestQuantitySubclassAboveAndBelow",
        "test_attr_propagation"
      ]
    ]
  ],
  "test_ignore_generic_type_annotations": [
    [
      "astropy/units/tests/test_quantity_annotations.py",
      [
        "test_ignore_generic_type_annotations"
      ]
    ]
  ],
  "test_simple_annotation": [
    [
      "astropy/units/tests/test_quantity_annotations.py",
      [
        "TestQuantityUnitAnnotations",
        "test_simple_annotation"
      ]
    ]
  ],
  "test_multiple_annotation": [
    [
      "astropy/units/tests/test_quantity_annotations.py",
      [
        "TestQuantityUnitAnnotations",
        "test_multiple_annotation"
      ]
    ]
  ],
  "test_optional_and_annotated": [
    [
      "astropy/units/tests/test_quantity_annotations.py",
      [
        "TestQuantityUnitAnnotations",
        "test_optional_and_annotated"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_typing.py",
      [
        "TestQuantityTyping",
        "test_optional_and_annotated"
      ]
    ]
  ],
  "test_union_and_annotated": [
    [
      "astropy/units/tests/test_quantity_annotations.py",
      [
        "TestQuantityUnitAnnotations",
        "test_union_and_annotated"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_typing.py",
      [
        "TestQuantityTyping",
        "test_union_and_annotated"
      ]
    ]
  ],
  "test_not_unit_or_ptype": [
    [
      "astropy/units/tests/test_quantity_annotations.py",
      [
        "TestQuantityUnitAnnotations",
        "test_not_unit_or_ptype"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_annotations.py",
      [
        "test_not_unit_or_ptype"
      ]
    ]
  ],
  "test_args3": [
    [
      "astropy/units/tests/test_quantity_annotations.py",
      [
        "test_args3"
      ]
    ]
  ],
  "test_args_noconvert3": [
    [
      "astropy/units/tests/test_quantity_annotations.py",
      [
        "test_args_noconvert3"
      ]
    ]
  ],
  "test_args_nonquantity3": [
    [
      "astropy/units/tests/test_quantity_annotations.py",
      [
        "test_args_nonquantity3"
      ]
    ]
  ],
  "test_arg_equivalencies3": [
    [
      "astropy/units/tests/test_quantity_annotations.py",
      [
        "test_arg_equivalencies3"
      ]
    ]
  ],
  "test_wrong_unit3": [
    [
      "astropy/units/tests/test_quantity_annotations.py",
      [
        "test_wrong_unit3"
      ]
    ]
  ],
  "test_not_quantity3": [
    [
      "astropy/units/tests/test_quantity_annotations.py",
      [
        "test_not_quantity3"
      ]
    ]
  ],
  "test_decorator_override": [
    [
      "astropy/units/tests/test_quantity_annotations.py",
      [
        "test_decorator_override"
      ]
    ]
  ],
  "test_kwargs3": [
    [
      "astropy/units/tests/test_quantity_annotations.py",
      [
        "test_kwargs3"
      ]
    ]
  ],
  "test_unused_kwargs3": [
    [
      "astropy/units/tests/test_quantity_annotations.py",
      [
        "test_unused_kwargs3"
      ]
    ]
  ],
  "test_kwarg_equivalencies3": [
    [
      "astropy/units/tests/test_quantity_annotations.py",
      [
        "test_kwarg_equivalencies3"
      ]
    ]
  ],
  "test_kwarg_wrong_unit3": [
    [
      "astropy/units/tests/test_quantity_annotations.py",
      [
        "test_kwarg_wrong_unit3"
      ]
    ]
  ],
  "test_kwarg_not_quantity3": [
    [
      "astropy/units/tests/test_quantity_annotations.py",
      [
        "test_kwarg_not_quantity3"
      ]
    ]
  ],
  "test_kwarg_default3": [
    [
      "astropy/units/tests/test_quantity_annotations.py",
      [
        "test_kwarg_default3"
      ]
    ]
  ],
  "test_return_annotation": [
    [
      "astropy/units/tests/test_quantity_annotations.py",
      [
        "test_return_annotation"
      ]
    ]
  ],
  "test_return_annotation_none": [
    [
      "astropy/units/tests/test_quantity_annotations.py",
      [
        "test_return_annotation_none"
      ]
    ]
  ],
  "test_return_annotation_notUnit": [
    [
      "astropy/units/tests/test_quantity_annotations.py",
      [
        "test_return_annotation_notUnit"
      ]
    ]
  ],
  "test_enum_annotation": [
    [
      "astropy/units/tests/test_quantity_annotations.py",
      [
        "test_enum_annotation"
      ]
    ]
  ],
  "test_copy_on_creation": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityArrayCopy",
        "test_copy_on_creation"
      ]
    ]
  ],
  "test_to_copies": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityArrayCopy",
        "test_to_copies"
      ]
    ]
  ],
  "test_si_copies": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityArrayCopy",
        "test_si_copies"
      ]
    ]
  ],
  "test_getitem_is_view": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityArrayCopy",
        "test_getitem_is_view"
      ]
    ]
  ],
  "test_flat": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityArrayCopy",
        "test_flat"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayCopyFilled",
        "test_flat"
      ]
    ]
  ],
  "test_flat_attributes": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityReshapeFuncs",
        "test_flat_attributes"
      ]
    ]
  ],
  "test_mean": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_mean"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestReductionLikeFunctions",
        "test_mean"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestMethodLikes",
        "test_mean"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_mean"
      ]
    ]
  ],
  "test_mean_inplace": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_mean_inplace"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_mean_inplace"
      ]
    ]
  ],
  "test_std_inplace": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_std_inplace"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_std_inplace"
      ]
    ]
  ],
  "test_var": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_var"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestReductionLikeFunctions",
        "test_var"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestMethodLikes",
        "test_var"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_var"
      ]
    ]
  ],
  "test_var_inplace": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_var_inplace"
      ]
    ]
  ],
  "test_median": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_median"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestReductionLikeFunctions",
        "test_median"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestPartitionLikeFunctions",
        "test_median"
      ]
    ]
  ],
  "test_median_inplace": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_median_inplace"
      ]
    ]
  ],
  "test_min_inplace": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_min_inplace"
      ]
    ]
  ],
  "test_max_inplace": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_max_inplace"
      ]
    ]
  ],
  "test_clip_inplace": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_clip_inplace"
      ]
    ]
  ],
  "test_conj": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_conj"
      ]
    ]
  ],
  "test_ptp_inplace": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_ptp_inplace"
      ]
    ]
  ],
  "test_round": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_round"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_round"
      ]
    ]
  ],
  "test_round_inplace": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_round_inplace"
      ]
    ]
  ],
  "test_sum": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_sum"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncReductions",
        "test_sum"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestMethodLikes",
        "test_sum"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_sum"
      ]
    ]
  ],
  "test_sum_inplace": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_sum_inplace"
      ]
    ]
  ],
  "test_cumsum": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_cumsum"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncReductions",
        "test_cumsum"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestMethodLikes",
        "test_cumsum"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_cumsum"
      ]
    ]
  ],
  "test_cumsum_inplace": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_cumsum_inplace"
      ]
    ]
  ],
  "test_nansum": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_nansum"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestNanFunctions",
        "test_nansum"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestNaNFunctions",
        "test_nansum"
      ]
    ]
  ],
  "test_nansum_inplace": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_nansum_inplace"
      ]
    ]
  ],
  "test_prod": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_prod"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncReductions",
        "test_prod"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestMethodLikes",
        "test_prod"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayProductMethods",
        "test_prod"
      ]
    ]
  ],
  "test_cumprod": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_cumprod"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncReductions",
        "test_cumprod"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestMethodLikes",
        "test_cumprod"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayProductMethods",
        "test_cumprod"
      ]
    ]
  ],
  "test_ediff1d": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_ediff1d"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSetOpsFcuntions",
        "test_ediff1d"
      ]
    ]
  ],
  "test_dot_meth": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_dot_meth"
      ]
    ]
  ],
  "test_trace_func": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_trace_func"
      ]
    ]
  ],
  "test_trace_meth": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_trace_meth"
      ]
    ]
  ],
  "test_clip_func": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_clip_func"
      ]
    ]
  ],
  "test_clip_meth": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestQuantityStatsFuncs",
        "test_clip_meth"
      ]
    ]
  ],
  "test_item": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestArrayConversion",
        "test_item"
      ]
    ]
  ],
  "test_take_put": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestArrayConversion",
        "test_take_put"
      ]
    ]
  ],
  "test_fill": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestArrayConversion",
        "test_fill"
      ]
    ]
  ],
  "test_repeat_compress_diagonal": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestArrayConversion",
        "test_repeat_compress_diagonal"
      ]
    ]
  ],
  "test_slice_to_quantity": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestArrayConversion",
        "test_slice_to_quantity"
      ]
    ]
  ],
  "test_byte_type_view_field_changes": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestArrayConversion",
        "test_byte_type_view_field_changes"
      ]
    ]
  ],
  "test_not_implemented": [
    [
      "astropy/units/tests/test_quantity_array_methods.py",
      [
        "TestArrayConversion",
        "test_not_implemented"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "MaskedOperatorTests",
        "test_not_implemented"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayOperators",
        "test_not_implemented"
      ]
    ]
  ],
  "x_input": [
    [
      "astropy/units/tests/test_quantity_decorator.py",
      [
        "x_input"
      ]
    ]
  ],
  "y_input": [
    [
      "astropy/units/tests/test_quantity_decorator.py",
      [
        "y_input"
      ]
    ]
  ],
  "test_args": [
    [
      "astropy/units/tests/test_quantity_decorator.py",
      [
        "test_args"
      ]
    ]
  ],
  "test_args_nonquantity": [
    [
      "astropy/units/tests/test_quantity_decorator.py",
      [
        "test_args_nonquantity"
      ]
    ]
  ],
  "test_wrong_unit": [
    [
      "astropy/units/tests/test_quantity_decorator.py",
      [
        "test_wrong_unit"
      ]
    ]
  ],
  "test_wrong_unit_annotated": [
    [
      "astropy/units/tests/test_quantity_decorator.py",
      [
        "test_wrong_unit_annotated"
      ]
    ]
  ],
  "test_not_quantity": [
    [
      "astropy/units/tests/test_quantity_decorator.py",
      [
        "test_not_quantity"
      ]
    ]
  ],
  "test_not_quantity_annotated": [
    [
      "astropy/units/tests/test_quantity_decorator.py",
      [
        "test_not_quantity_annotated"
      ]
    ]
  ],
  "test_kwargs": [
    [
      "astropy/units/tests/test_quantity_decorator.py",
      [
        "test_kwargs"
      ]
    ]
  ],
  "test_unused_kwargs": [
    [
      "astropy/units/tests/test_quantity_decorator.py",
      [
        "test_unused_kwargs"
      ]
    ]
  ],
  "test_kwarg_wrong_unit": [
    [
      "astropy/units/tests/test_quantity_decorator.py",
      [
        "test_kwarg_wrong_unit"
      ]
    ]
  ],
  "test_kwarg_not_quantity": [
    [
      "astropy/units/tests/test_quantity_decorator.py",
      [
        "test_kwarg_not_quantity"
      ]
    ]
  ],
  "test_kwarg_default": [
    [
      "astropy/units/tests/test_quantity_decorator.py",
      [
        "test_kwarg_default"
      ]
    ]
  ],
  "test_kwargs_input": [
    [
      "astropy/units/tests/test_quantity_decorator.py",
      [
        "test_kwargs_input"
      ]
    ]
  ],
  "test_kwargs_extra": [
    [
      "astropy/units/tests/test_quantity_decorator.py",
      [
        "test_kwargs_extra"
      ]
    ]
  ],
  "test_arg_equivalencies": [
    [
      "astropy/units/tests/test_quantity_decorator.py",
      [
        "test_arg_equivalencies"
      ]
    ]
  ],
  "test_kwarg_equivalencies": [
    [
      "astropy/units/tests/test_quantity_decorator.py",
      [
        "test_kwarg_equivalencies"
      ]
    ]
  ],
  "test_no_equivalent": [
    [
      "astropy/units/tests/test_quantity_decorator.py",
      [
        "test_no_equivalent"
      ]
    ]
  ],
  "test_kwarg_invalid_physical_type": [
    [
      "astropy/units/tests/test_quantity_decorator.py",
      [
        "test_kwarg_invalid_physical_type"
      ]
    ]
  ],
  "test_default_value_check": [
    [
      "astropy/units/tests/test_quantity_decorator.py",
      [
        "test_default_value_check"
      ]
    ]
  ],
  "test_str_unit_typo": [
    [
      "astropy/units/tests/test_quantity_decorator.py",
      [
        "test_str_unit_typo"
      ]
    ]
  ],
  "test_single_annotation_unit": [
    [
      "astropy/units/tests/test_quantity_decorator.py",
      [
        "TestTypeAnnotations",
        "test_single_annotation_unit"
      ]
    ]
  ],
  "test_args_None": [
    [
      "astropy/units/tests/test_quantity_decorator.py",
      [
        "test_args_None"
      ]
    ]
  ],
  "test_args_None_kwarg": [
    [
      "astropy/units/tests/test_quantity_decorator.py",
      [
        "test_args_None_kwarg"
      ]
    ]
  ],
  "test_allow_dimensionless_numeric": [
    [
      "astropy/units/tests/test_quantity_decorator.py",
      [
        "test_allow_dimensionless_numeric"
      ]
    ]
  ],
  "test_allow_dimensionless_numeric_strict": [
    [
      "astropy/units/tests/test_quantity_decorator.py",
      [
        "test_allow_dimensionless_numeric_strict"
      ]
    ]
  ],
  "test_dimensionless_with_nondimensionless_input": [
    [
      "astropy/units/tests/test_quantity_decorator.py",
      [
        "test_dimensionless_with_nondimensionless_input"
      ]
    ]
  ],
  "test_annotated_not_quantity": [
    [
      "astropy/units/tests/test_quantity_decorator.py",
      [
        "test_annotated_not_quantity"
      ]
    ]
  ],
  "test_annotated_not_unit": [
    [
      "astropy/units/tests/test_quantity_decorator.py",
      [
        "test_annotated_not_unit"
      ]
    ]
  ],
  "test_allclose_isclose_default": [
    [
      "astropy/units/tests/test_quantity_helpers.py",
      [
        "test_allclose_isclose_default"
      ]
    ]
  ],
  "test_allclose_isclose": [
    [
      "astropy/units/tests/test_quantity_helpers.py",
      [
        "test_allclose_isclose"
      ]
    ]
  ],
  "get_wrapped_functions": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "get_wrapped_functions"
      ]
    ]
  ],
  "test_ndim": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestShapeInformation",
        "test_ndim"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestShapeInformation",
        "test_ndim"
      ]
    ]
  ],
  "test_moveaxis": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestShapeManipulation",
        "test_moveaxis"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestShapeManipulation",
        "test_moveaxis"
      ]
    ]
  ],
  "test_rollaxis": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestShapeManipulation",
        "test_rollaxis"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestShapeManipulation",
        "test_rollaxis"
      ]
    ]
  ],
  "test_expand_dims": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestShapeManipulation",
        "test_expand_dims"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestShapeManipulation",
        "test_expand_dims"
      ]
    ]
  ],
  "test_flip": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestShapeManipulation",
        "test_flip"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestShapeManipulation",
        "test_flip"
      ]
    ]
  ],
  "test_flipud": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestShapeManipulation",
        "test_flipud"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestShapeManipulation",
        "test_flipud"
      ]
    ]
  ],
  "test_broadcast_arrays": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestShapeManipulation",
        "test_broadcast_arrays"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestShapeManipulation",
        "test_broadcast_arrays"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_functions.py",
      [
        "TestMaskedArrayBroadcast",
        "test_broadcast_arrays"
      ]
    ]
  ],
  "test_lexsort": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestArgFunctions",
        "test_lexsort"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestArgFunctions",
        "test_lexsort"
      ]
    ]
  ],
  "test_nonzero": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestArgFunctions",
        "test_nonzero"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestArgFunctions",
        "test_nonzero"
      ]
    ]
  ],
  "test_argwhere": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestArgFunctions",
        "test_argwhere"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestArgFunctions",
        "test_argwhere"
      ]
    ]
  ],
  "test_argpartition": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestArgFunctions",
        "test_argpartition"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestArgFunctions",
        "test_argpartition"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_argpartition"
      ]
    ]
  ],
  "test_flatnonzero": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestArgFunctions",
        "test_flatnonzero"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestArgFunctions",
        "test_flatnonzero"
      ]
    ]
  ],
  "test_take_along_axis": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestAlongAxis",
        "test_take_along_axis"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestAlongAxis",
        "test_take_along_axis"
      ]
    ]
  ],
  "test_put_along_axis": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestAlongAxis",
        "test_put_along_axis"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestAlongAxis",
        "test_put_along_axis"
      ]
    ]
  ],
  "test_apply_along_axis": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestAlongAxis",
        "test_apply_along_axis"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestAlongAxis",
        "test_apply_along_axis"
      ]
    ]
  ],
  "test_apply_over_axes": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestAlongAxis",
        "test_apply_over_axes"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestAlongAxis",
        "test_apply_over_axes"
      ]
    ]
  ],
  "test_diag_indices_from": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestIndicesFrom",
        "test_diag_indices_from"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestIndicesFrom",
        "test_diag_indices_from"
      ]
    ]
  ],
  "test_triu_indices_from": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestIndicesFrom",
        "test_triu_indices_from"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestIndicesFrom",
        "test_triu_indices_from"
      ]
    ]
  ],
  "test_tril_indices_from": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestIndicesFrom",
        "test_tril_indices_from"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestIndicesFrom",
        "test_tril_indices_from"
      ]
    ]
  ],
  "test_real": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestRealImag",
        "test_real"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestRealImag",
        "test_real"
      ]
    ]
  ],
  "test_imag": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestRealImag",
        "test_imag"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestRealImag",
        "test_imag"
      ]
    ]
  ],
  "test_asfarray": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestCopyAndCreation",
        "test_asfarray"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestCopyAndCreation",
        "test_asfarray"
      ]
    ]
  ],
  "test_empty_like": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestCopyAndCreation",
        "test_empty_like"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredQuantityFunctions",
        "test_empty_like"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestArrayCreation",
        "test_empty_like"
      ]
    ]
  ],
  "test_zeros_like": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestCopyAndCreation",
        "test_zeros_like"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestArrayCreation",
        "test_zeros_like"
      ]
    ]
  ],
  "test_ones_like": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestCopyAndCreation",
        "test_ones_like"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestArrayCreation",
        "test_ones_like"
      ]
    ]
  ],
  "test_full_like": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestCopyAndCreation",
        "test_full_like"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestArrayCreation",
        "test_full_like"
      ]
    ]
  ],
  "test_diag": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestAccessingParts",
        "test_diag"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestAccessingParts",
        "test_diag"
      ]
    ]
  ],
  "test_diag_1d_input": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestAccessingParts",
        "test_diag_1d_input"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestAccessingParts",
        "test_diag_1d_input"
      ]
    ]
  ],
  "test_diagflat": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestAccessingParts",
        "test_diagflat"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestAccessingParts",
        "test_diagflat"
      ]
    ]
  ],
  "test_compress": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestAccessingParts",
        "test_compress"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestAccessingParts",
        "test_compress"
      ]
    ]
  ],
  "test_extract": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestAccessingParts",
        "test_extract"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestAccessingParts",
        "test_extract"
      ]
    ]
  ],
  "test_trim_zeros": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestAccessingParts",
        "test_trim_zeros"
      ]
    ]
  ],
  "test_put": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSettingParts",
        "test_put"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestSettingParts",
        "test_put"
      ]
    ]
  ],
  "test_putmask": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSettingParts",
        "test_putmask"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestSettingParts",
        "test_putmask"
      ]
    ]
  ],
  "test_place": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSettingParts",
        "test_place"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestSettingParts",
        "test_place"
      ]
    ]
  ],
  "test_copyto": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSettingParts",
        "test_copyto"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestSettingParts",
        "test_copyto"
      ]
    ]
  ],
  "test_fill_diagonal": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSettingParts",
        "test_fill_diagonal"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestSettingParts",
        "test_fill_diagonal"
      ]
    ]
  ],
  "test_tile": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestRepeat",
        "test_tile"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestRepeat",
        "test_tile"
      ]
    ]
  ],
  "test_repeat": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestRepeat",
        "test_repeat"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestRepeat",
        "test_repeat"
      ]
    ]
  ],
  "test_resize": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestRepeat",
        "test_resize"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestRepeat",
        "test_resize"
      ]
    ]
  ],
  "test_stack": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestConcatenate",
        "test_stack"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestConcatenate",
        "test_stack"
      ]
    ]
  ],
  "test_column_stack": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestConcatenate",
        "test_column_stack"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestConcatenate",
        "test_column_stack"
      ]
    ]
  ],
  "test_dstack": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestConcatenate",
        "test_dstack"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestConcatenate",
        "test_dstack"
      ]
    ]
  ],
  "test_block": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestConcatenate",
        "test_block"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestConcatenate",
        "test_block"
      ]
    ]
  ],
  "test_pad": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestConcatenate",
        "test_pad"
      ]
    ]
  ],
  "test_split": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSplit",
        "test_split"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestSplit",
        "test_split"
      ]
    ]
  ],
  "test_array_split": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSplit",
        "test_array_split"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestSplit",
        "test_array_split"
      ]
    ]
  ],
  "test_hsplit": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSplit",
        "test_hsplit"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestSplit",
        "test_hsplit"
      ]
    ]
  ],
  "test_vsplit": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSplit",
        "test_vsplit"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestSplit",
        "test_vsplit"
      ]
    ]
  ],
  "test_dsplit": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSplit",
        "test_dsplit"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestSplit",
        "test_dsplit"
      ]
    ]
  ],
  "test_amax": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncReductions",
        "test_amax"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestMethodLikes",
        "test_amax"
      ]
    ]
  ],
  "test_amin": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncReductions",
        "test_amin"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestMethodLikes",
        "test_amin"
      ]
    ]
  ],
  "test_any": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncReductions",
        "test_any"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestMethodLikes",
        "test_any"
      ]
    ]
  ],
  "test_all": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncReductions",
        "test_all"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestMethodLikes",
        "test_all"
      ]
    ]
  ],
  "test_sometrue": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncReductions",
        "test_sometrue"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestMethodLikes",
        "test_sometrue"
      ]
    ]
  ],
  "test_alltrue": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncReductions",
        "test_alltrue"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestMethodLikes",
        "test_alltrue"
      ]
    ]
  ],
  "test_product": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncReductions",
        "test_product"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestMethodLikes",
        "test_product"
      ]
    ]
  ],
  "test_cumproduct": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncReductions",
        "test_cumproduct"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestMethodLikes",
        "test_cumproduct"
      ]
    ]
  ],
  "test_round_": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncLike",
        "test_round_"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestMethodLikes",
        "test_round_"
      ]
    ]
  ],
  "test_around": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncLike",
        "test_around"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestMethodLikes",
        "test_around"
      ]
    ]
  ],
  "test_fix": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncLike",
        "test_fix"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestUfuncLike",
        "test_fix"
      ]
    ],
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_fix"
      ]
    ]
  ],
  "test_i0": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncLike",
        "test_i0"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestUfuncLike",
        "test_i0"
      ]
    ]
  ],
  "test_sinc": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncLike",
        "test_sinc"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestUfuncLike",
        "test_sinc"
      ]
    ]
  ],
  "test_where": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncLike",
        "test_where"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestUfuncLike",
        "test_where"
      ]
    ]
  ],
  "test_choose": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncLike",
        "test_choose"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestUfuncLike",
        "test_choose"
      ]
    ]
  ],
  "test_select": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncLike",
        "test_select"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestUfuncLike",
        "test_select"
      ]
    ]
  ],
  "test_real_if_close": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncLike",
        "test_real_if_close"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestUfuncLike",
        "test_real_if_close"
      ]
    ]
  ],
  "test_tril": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncLike",
        "test_tril"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestUfuncLike",
        "test_tril"
      ]
    ]
  ],
  "test_triu": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncLike",
        "test_triu"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestUfuncLike",
        "test_triu"
      ]
    ]
  ],
  "test_unwrap": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncLike",
        "test_unwrap"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestUfuncLike",
        "test_unwrap"
      ]
    ]
  ],
  "test_nan_to_num": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncLike",
        "test_nan_to_num"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestUfuncLike",
        "test_nan_to_num"
      ]
    ]
  ],
  "test_nan_to_num_complex": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncLike",
        "test_nan_to_num_complex"
      ]
    ]
  ],
  "test_isposinf": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncLikeTests",
        "test_isposinf"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestUfuncLikeTests",
        "test_isposinf"
      ]
    ]
  ],
  "test_isneginf": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncLikeTests",
        "test_isneginf"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestUfuncLikeTests",
        "test_isneginf"
      ]
    ]
  ],
  "test_isreal": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncLikeTests",
        "test_isreal"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestUfuncLikeTests",
        "test_isreal"
      ]
    ]
  ],
  "test_iscomplex": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncLikeTests",
        "test_iscomplex"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestUfuncLikeTests",
        "test_iscomplex"
      ]
    ]
  ],
  "test_isclose": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncLikeTests",
        "test_isclose"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestUfuncLikeTests",
        "test_isclose"
      ]
    ]
  ],
  "test_allclose_atol_default_unit": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestUfuncLikeTests",
        "test_allclose_atol_default_unit"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestReductionLikeFunctions",
        "test_allclose_atol_default_unit"
      ]
    ]
  ],
  "test_average": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestReductionLikeFunctions",
        "test_average"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestReductionLikeFunctions",
        "test_average"
      ]
    ]
  ],
  "test_quantile": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestReductionLikeFunctions",
        "test_quantile"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestPartitionLikeFunctions",
        "test_quantile"
      ]
    ]
  ],
  "test_trace": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestReductionLikeFunctions",
        "test_trace"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestReductionLikeFunctions",
        "test_trace"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_trace"
      ]
    ]
  ],
  "test_count_nonzero": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestReductionLikeFunctions",
        "test_count_nonzero"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestReductionLikeFunctions",
        "test_count_nonzero"
      ]
    ]
  ],
  "test_allclose": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestReductionLikeFunctions",
        "test_allclose"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestUfuncLikeTests",
        "test_allclose"
      ]
    ]
  ],
  "test_allclose_failures": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestReductionLikeFunctions",
        "test_allclose_failures"
      ]
    ]
  ],
  "test_array_equal": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestReductionLikeFunctions",
        "test_array_equal"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestUfuncLikeTests",
        "test_array_equal"
      ]
    ]
  ],
  "test_array_equiv": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestReductionLikeFunctions",
        "test_array_equiv"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestUfuncLikeTests",
        "test_array_equiv"
      ]
    ]
  ],
  "test_nanmax": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestNanFunctions",
        "test_nanmax"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestNaNFunctions",
        "test_nanmax"
      ]
    ]
  ],
  "test_nanmin": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestNanFunctions",
        "test_nanmin"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestNaNFunctions",
        "test_nanmin"
      ]
    ]
  ],
  "test_nanargmin": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestNanFunctions",
        "test_nanargmin"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestNaNFunctions",
        "test_nanargmin"
      ]
    ]
  ],
  "test_nanargmax": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestNanFunctions",
        "test_nanargmax"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestNaNFunctions",
        "test_nanargmax"
      ]
    ]
  ],
  "test_nanmean": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestNanFunctions",
        "test_nanmean"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestNaNFunctions",
        "test_nanmean"
      ]
    ]
  ],
  "test_nanmedian": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestNanFunctions",
        "test_nanmedian"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestNaNFunctions",
        "test_nanmedian"
      ]
    ]
  ],
  "test_nancumsum": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestNanFunctions",
        "test_nancumsum"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestNaNFunctions",
        "test_nancumsum"
      ]
    ]
  ],
  "test_nanstd": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestNanFunctions",
        "test_nanstd"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestNaNFunctions",
        "test_nanstd"
      ]
    ]
  ],
  "test_nanvar": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestNanFunctions",
        "test_nanvar"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestNaNFunctions",
        "test_nanvar"
      ]
    ]
  ],
  "test_nanprod": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestNanFunctions",
        "test_nanprod"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestNaNFunctions",
        "test_nanprod"
      ]
    ]
  ],
  "test_nancumprod": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestNanFunctions",
        "test_nancumprod"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestNaNFunctions",
        "test_nancumprod"
      ]
    ]
  ],
  "test_nanquantile": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestNanFunctions",
        "test_nanquantile"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestNaNFunctions",
        "test_nanquantile"
      ]
    ]
  ],
  "test_nanpercentile": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestNanFunctions",
        "test_nanpercentile"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestNaNFunctions",
        "test_nanpercentile"
      ]
    ]
  ],
  "test_outer": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestVariousProductFunctions",
        "test_outer"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestOuterLikeFunctions",
        "test_outer"
      ]
    ]
  ],
  "test_inner": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestVariousProductFunctions",
        "test_inner"
      ]
    ]
  ],
  "test_vdot": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestVariousProductFunctions",
        "test_vdot"
      ]
    ]
  ],
  "test_tensordot": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestVariousProductFunctions",
        "test_tensordot"
      ]
    ]
  ],
  "test_kron": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestVariousProductFunctions",
        "test_kron"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestOuterLikeFunctions",
        "test_kron"
      ]
    ]
  ],
  "test_einsum": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestVariousProductFunctions",
        "test_einsum"
      ]
    ]
  ],
  "test_einsum_path": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestVariousProductFunctions",
        "test_einsum_path"
      ]
    ]
  ],
  "test_trapz": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestIntDiffFunctions",
        "test_trapz"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestIntDiffFunctions",
        "test_trapz"
      ]
    ]
  ],
  "test_diff_prepend_append": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestIntDiffFunctions",
        "test_diff_prepend_append"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestIntDiffFunctions",
        "test_diff_prepend_append"
      ]
    ]
  ],
  "test_gradient": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestIntDiffFunctions",
        "test_gradient"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestIntDiffFunctions",
        "test_gradient"
      ]
    ]
  ],
  "test_gradient_spacing": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestIntDiffFunctions",
        "test_gradient_spacing"
      ]
    ]
  ],
  "test_linspace": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSpaceFunctions",
        "test_linspace"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestSpaceFunctions",
        "test_linspace"
      ]
    ]
  ],
  "test_logspace": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSpaceFunctions",
        "test_logspace"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestSpaceFunctions",
        "test_logspace"
      ]
    ]
  ],
  "test_geomspace": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSpaceFunctions",
        "test_geomspace"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestSpaceFunctions",
        "test_geomspace"
      ]
    ]
  ],
  "test_interp": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestInterpolationFunctions",
        "test_interp"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestInterpolationFunctions",
        "test_interp"
      ]
    ]
  ],
  "test_piecewise": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestInterpolationFunctions",
        "test_piecewise"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestInterpolationFunctions",
        "test_piecewise"
      ]
    ]
  ],
  "test_bincount": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestBincountDigitize",
        "test_bincount"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestBincount",
        "test_bincount"
      ]
    ]
  ],
  "test_digitize": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestBincountDigitize",
        "test_digitize"
      ]
    ]
  ],
  "test_histogram_bin_edges": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestHistogramFunctions",
        "test_histogram_bin_edges"
      ]
    ]
  ],
  "test_histogram2d": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestHistogramFunctions",
        "test_histogram2d"
      ]
    ]
  ],
  "test_histogramdd": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestHistogramFunctions",
        "test_histogramdd"
      ]
    ]
  ],
  "test_correlate": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestHistogramFunctions",
        "test_correlate"
      ]
    ]
  ],
  "test_convolve": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestHistogramFunctions",
        "test_convolve"
      ]
    ]
  ],
  "test_cov": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestHistogramFunctions",
        "test_cov"
      ]
    ]
  ],
  "test_corrcoef": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestHistogramFunctions",
        "test_corrcoef"
      ]
    ]
  ],
  "test_sort_complex": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSortFunctions",
        "test_sort_complex"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestSortFunctions",
        "test_sort_complex"
      ]
    ]
  ],
  "test_msort": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSortFunctions",
        "test_msort"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestSortFunctions",
        "test_msort"
      ]
    ]
  ],
  "test_partition": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSortFunctions",
        "test_partition"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestSortFunctions",
        "test_partition"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_partition"
      ]
    ]
  ],
  "test_array2string": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestStringFunctions",
        "test_array2string"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestStringFunctions",
        "test_array2string"
      ]
    ]
  ],
  "test_array_repr": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestStringFunctions",
        "test_array_repr"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestStringFunctions",
        "test_array_repr"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayRepr",
        "test_array_repr"
      ]
    ]
  ],
  "test_array_str": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestStringFunctions",
        "test_array_str"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestStringFunctions",
        "test_array_str"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayRepr",
        "test_array_str"
      ]
    ]
  ],
  "test_packbits": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestBitAndIndexFunctions",
        "test_packbits"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestBitFunctions",
        "test_packbits"
      ]
    ]
  ],
  "test_unpackbits": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestBitAndIndexFunctions",
        "test_unpackbits"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestBitFunctions",
        "test_unpackbits"
      ]
    ]
  ],
  "test_unravel_index": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestBitAndIndexFunctions",
        "test_unravel_index"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestIndexFunctions",
        "test_unravel_index"
      ]
    ]
  ],
  "test_ravel_multi_index": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestBitAndIndexFunctions",
        "test_ravel_multi_index"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestIndexFunctions",
        "test_ravel_multi_index"
      ]
    ]
  ],
  "test_ix_": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestBitAndIndexFunctions",
        "test_ix_"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestIndexFunctions",
        "test_ix_"
      ]
    ]
  ],
  "test_common_type": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestDtypeFunctions",
        "test_common_type"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestDtypeFunctions",
        "test_common_type"
      ]
    ]
  ],
  "test_result_type": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestDtypeFunctions",
        "test_result_type"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestDtypeFunctions",
        "test_result_type"
      ]
    ]
  ],
  "test_can_cast": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestDtypeFunctions",
        "test_can_cast"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestDtypeFunctions",
        "test_can_cast"
      ]
    ]
  ],
  "test_min_scalar_type": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestDtypeFunctions",
        "test_min_scalar_type"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestDtypeFunctions",
        "test_min_scalar_type"
      ]
    ]
  ],
  "test_iscomplexobj": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestDtypeFunctions",
        "test_iscomplexobj"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestDtypeFunctions",
        "test_iscomplexobj"
      ]
    ]
  ],
  "test_isrealobj": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestDtypeFunctions",
        "test_isrealobj"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestDtypeFunctions",
        "test_isrealobj"
      ]
    ]
  ],
  "test_meshgrid": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestMeshGrid",
        "test_meshgrid"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestMeshGrid",
        "test_meshgrid"
      ]
    ]
  ],
  "test_shares_memory": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestMemoryFunctions",
        "test_shares_memory"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestMemoryFunctions",
        "test_shares_memory"
      ]
    ]
  ],
  "test_may_share_memory": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestMemoryFunctions",
        "test_may_share_memory"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestMemoryFunctions",
        "test_may_share_memory"
      ]
    ]
  ],
  "check1": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSetOpsFcuntions",
        "check1"
      ]
    ]
  ],
  "check2": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSetOpsFcuntions",
        "check2"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "BasicTestSetup",
        "check2"
      ]
    ]
  ],
  "test_unique_more_complex": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSetOpsFcuntions",
        "test_unique_more_complex"
      ]
    ]
  ],
  "test_intersect1d": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSetOpsFcuntions",
        "test_intersect1d"
      ]
    ]
  ],
  "test_setxor1d": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSetOpsFcuntions",
        "test_setxor1d"
      ]
    ]
  ],
  "test_union1d": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSetOpsFcuntions",
        "test_union1d"
      ]
    ]
  ],
  "test_setdiff1d": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSetOpsFcuntions",
        "test_setdiff1d"
      ]
    ]
  ],
  "test_in1d": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSetOpsFcuntions",
        "test_in1d"
      ]
    ]
  ],
  "test_isin": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestSetOpsFcuntions",
        "test_isin"
      ]
    ]
  ],
  "test_busday_count": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestDatetimeFunctions",
        "test_busday_count"
      ]
    ]
  ],
  "test_busday_offset": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestDatetimeFunctions",
        "test_busday_offset"
      ]
    ]
  ],
  "test_datetime_as_string": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestDatetimeFunctions",
        "test_datetime_as_string"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestDatetimeFunctions",
        "test_datetime_as_string"
      ]
    ]
  ],
  "test_is_busday": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestDatetimeFunctions",
        "test_is_busday"
      ]
    ]
  ],
  "test_fft_frequencies": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "test_fft_frequencies"
      ]
    ]
  ],
  "test_fft": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestFFT",
        "test_fft"
      ]
    ]
  ],
  "test_ifft": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestFFT",
        "test_ifft"
      ]
    ]
  ],
  "test_rfft": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestFFT",
        "test_rfft"
      ]
    ]
  ],
  "test_irfft": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestFFT",
        "test_irfft"
      ]
    ]
  ],
  "test_fft2": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestFFT",
        "test_fft2"
      ]
    ]
  ],
  "test_ifft2": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestFFT",
        "test_ifft2"
      ]
    ]
  ],
  "test_rfft2": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestFFT",
        "test_rfft2"
      ]
    ]
  ],
  "test_irfft2": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestFFT",
        "test_irfft2"
      ]
    ]
  ],
  "test_fftn": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestFFT",
        "test_fftn"
      ]
    ]
  ],
  "test_ifftn": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestFFT",
        "test_ifftn"
      ]
    ]
  ],
  "test_rfftn": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestFFT",
        "test_rfftn"
      ]
    ]
  ],
  "test_irfftn": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestFFT",
        "test_irfftn"
      ]
    ]
  ],
  "test_hfft": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestFFT",
        "test_hfft"
      ]
    ]
  ],
  "test_ihfft": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestFFT",
        "test_ihfft"
      ]
    ]
  ],
  "test_fftshift": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestFFT",
        "test_fftshift"
      ]
    ]
  ],
  "test_ifftshift": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestFFT",
        "test_ifftshift"
      ]
    ]
  ],
  "test_cond": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestLinAlg",
        "test_cond"
      ]
    ]
  ],
  "test_matrix_rank": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestLinAlg",
        "test_matrix_rank"
      ]
    ]
  ],
  "test_matrix_rank_with_tol": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestLinAlg",
        "test_matrix_rank_with_tol"
      ]
    ]
  ],
  "test_matrix_power": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestLinAlg",
        "test_matrix_power"
      ]
    ]
  ],
  "test_matrix_inv_power": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestLinAlg",
        "test_matrix_inv_power"
      ]
    ]
  ],
  "test_multi_dot": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestLinAlg",
        "test_multi_dot"
      ]
    ]
  ],
  "test_svd": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestLinAlg",
        "test_svd"
      ]
    ]
  ],
  "test_inv": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestLinAlg",
        "test_inv"
      ]
    ]
  ],
  "test_pinv": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestLinAlg",
        "test_pinv"
      ]
    ]
  ],
  "test_tensorinv": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestLinAlg",
        "test_tensorinv"
      ]
    ]
  ],
  "test_det": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestLinAlg",
        "test_det"
      ]
    ]
  ],
  "test_slogdet": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestLinAlg",
        "test_slogdet"
      ]
    ]
  ],
  "test_solve": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestLinAlg",
        "test_solve"
      ]
    ]
  ],
  "test_tensorsolve": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestLinAlg",
        "test_tensorsolve"
      ]
    ]
  ],
  "test_lstsq": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestLinAlg",
        "test_lstsq"
      ]
    ]
  ],
  "test_cholesky": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestLinAlg",
        "test_cholesky"
      ]
    ]
  ],
  "test_qr": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestLinAlg",
        "test_qr"
      ]
    ]
  ],
  "test_eig": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestLinAlg",
        "test_eig"
      ]
    ]
  ],
  "test_eigvals": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestLinAlg",
        "test_eigvals"
      ]
    ]
  ],
  "test_eigh": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestLinAlg",
        "test_eigh"
      ]
    ]
  ],
  "test_eigvalsh": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestLinAlg",
        "test_eigvalsh"
      ]
    ]
  ],
  "test_structured_to_unstructured": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestRecFunctions",
        "test_structured_to_unstructured"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredQuantityFunctions",
        "test_structured_to_unstructured"
      ]
    ]
  ],
  "test_unstructured_to_structured": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestRecFunctions",
        "test_unstructured_to_structured"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredQuantityFunctions",
        "test_unstructured_to_structured"
      ]
    ]
  ],
  "test_testing_completeness": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "test_testing_completeness"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "test_testing_completeness"
      ]
    ]
  ],
  "test_no_duplicates": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestFunctionHelpersCompleteness",
        "test_no_duplicates"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestFunctionHelpersCompleteness",
        "test_no_duplicates"
      ]
    ]
  ],
  "test_all_included": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestFunctionHelpersCompleteness",
        "test_all_included"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestFunctionHelpersCompleteness",
        "test_all_included"
      ]
    ]
  ],
  "test_ignored_are_untested": [
    [
      "astropy/units/tests/test_quantity_non_ufuncs.py",
      [
        "TestFunctionHelpersCompleteness",
        "test_ignored_are_untested"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestFunctionHelpersCompleteness",
        "test_ignored_are_untested"
      ]
    ]
  ],
  "test_quantity_typing": [
    [
      "astropy/units/tests/test_quantity_typing.py",
      [
        "TestQuantityTyping",
        "test_quantity_typing"
      ]
    ]
  ],
  "test_metadata_in_annotation": [
    [
      "astropy/units/tests/test_quantity_typing.py",
      [
        "TestQuantityTyping",
        "test_metadata_in_annotation"
      ]
    ]
  ],
  "test_quantity_subclass_typing": [
    [
      "astropy/units/tests/test_quantity_typing.py",
      [
        "TestQuantityTyping",
        "test_quantity_subclass_typing"
      ]
    ]
  ],
  "test_testcase": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "test_testcase"
      ]
    ]
  ],
  "test_testexc": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "test_testexc"
      ]
    ]
  ],
  "test_testwarn": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "test_testwarn"
      ]
    ]
  ],
  "test_coverage": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestUfuncHelpers",
        "test_coverage"
      ]
    ]
  ],
  "test_scipy_registered": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestUfuncHelpers",
        "test_scipy_registered"
      ]
    ]
  ],
  "test_removal_addition": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestUfuncHelpers",
        "test_removal_addition"
      ]
    ]
  ],
  "test_thread_safety": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestUfuncHelpers",
        "test_thread_safety"
      ]
    ]
  ],
  "test_testcases": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityTrigonometricFuncs",
        "test_testcases"
      ]
    ]
  ],
  "test_testexcs": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityTrigonometricFuncs",
        "test_testexcs"
      ]
    ]
  ],
  "test_testwarns": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityTrigonometricFuncs",
        "test_testwarns"
      ]
    ]
  ],
  "test_multiply_array": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_multiply_array"
      ]
    ]
  ],
  "test_matmul": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_matmul"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "MaskedOperatorTests",
        "test_matmul"
      ]
    ]
  ],
  "test_divide_scalar": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_divide_scalar"
      ]
    ]
  ],
  "test_divide_array": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_divide_array"
      ]
    ]
  ],
  "test_floor_divide_remainder_and_divmod": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_floor_divide_remainder_and_divmod"
      ]
    ]
  ],
  "test_sqrt_scalar": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_sqrt_scalar"
      ]
    ]
  ],
  "test_sqrt_array": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_sqrt_array"
      ]
    ]
  ],
  "test_square_scalar": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_square_scalar"
      ]
    ]
  ],
  "test_square_array": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_square_array"
      ]
    ]
  ],
  "test_reciprocal_scalar": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_reciprocal_scalar"
      ]
    ]
  ],
  "test_reciprocal_array": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_reciprocal_array"
      ]
    ]
  ],
  "test_heaviside_scalar": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_heaviside_scalar"
      ]
    ]
  ],
  "test_heaviside_array": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_heaviside_array"
      ]
    ]
  ],
  "test_cbrt_scalar": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_cbrt_scalar"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "if_HAS_SCIPY_",
        "TestScipySpecialUfuncs",
        "test_cbrt_scalar"
      ]
    ]
  ],
  "test_cbrt_array": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_cbrt_array"
      ]
    ],
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "if_HAS_SCIPY_",
        "TestScipySpecialUfuncs",
        "test_cbrt_array"
      ]
    ]
  ],
  "test_power_scalar": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_power_scalar"
      ]
    ]
  ],
  "test_power_array": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_power_array"
      ]
    ]
  ],
  "test_float_power_array": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_float_power_array"
      ]
    ]
  ],
  "test_power_array_array": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_power_array_array"
      ]
    ]
  ],
  "test_power_array_array2": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_power_array_array2"
      ]
    ]
  ],
  "test_power_array_array3": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_power_array_array3"
      ]
    ]
  ],
  "test_power_invalid": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_power_invalid"
      ]
    ]
  ],
  "test_copysign_scalar": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_copysign_scalar"
      ]
    ]
  ],
  "test_copysign_array": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_copysign_array"
      ]
    ]
  ],
  "test_ldexp_scalar": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_ldexp_scalar"
      ]
    ]
  ],
  "test_ldexp_array": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_ldexp_array"
      ]
    ]
  ],
  "test_ldexp_invalid": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_ldexp_invalid"
      ]
    ]
  ],
  "test_exp_scalar": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_exp_scalar"
      ]
    ]
  ],
  "test_exp_array": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_exp_array"
      ]
    ]
  ],
  "test_exp_invalid_units": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_exp_invalid_units"
      ]
    ]
  ],
  "test_modf_scalar": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_modf_scalar"
      ]
    ]
  ],
  "test_modf_array": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_modf_array"
      ]
    ]
  ],
  "test_frexp_scalar": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_frexp_scalar"
      ]
    ]
  ],
  "test_frexp_array": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_frexp_array"
      ]
    ]
  ],
  "test_frexp_invalid_units": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_frexp_invalid_units"
      ]
    ]
  ],
  "test_dimensionless_twoarg_array": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_dimensionless_twoarg_array"
      ]
    ]
  ],
  "test_dimensionless_twoarg_invalid_units": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestQuantityMathFuncs",
        "test_dimensionless_twoarg_invalid_units"
      ]
    ]
  ],
  "test_invariant_scalar": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestInvariantUfuncs",
        "test_invariant_scalar"
      ]
    ]
  ],
  "test_invariant_array": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestInvariantUfuncs",
        "test_invariant_array"
      ]
    ]
  ],
  "test_invariant_twoarg_scalar": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestInvariantUfuncs",
        "test_invariant_twoarg_scalar"
      ]
    ]
  ],
  "test_invariant_twoarg_array": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestInvariantUfuncs",
        "test_invariant_twoarg_array"
      ]
    ]
  ],
  "test_invariant_twoarg_one_arbitrary": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestInvariantUfuncs",
        "test_invariant_twoarg_one_arbitrary"
      ]
    ]
  ],
  "test_invariant_twoarg_invalid_units": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestInvariantUfuncs",
        "test_invariant_twoarg_invalid_units"
      ]
    ]
  ],
  "test_comparison_valid_units": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestComparisonUfuncs",
        "test_comparison_valid_units"
      ]
    ]
  ],
  "test_comparison_invalid_units": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestComparisonUfuncs",
        "test_comparison_invalid_units"
      ]
    ]
  ],
  "test_onearg_test_ufuncs": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestComparisonUfuncs",
        "test_onearg_test_ufuncs"
      ]
    ]
  ],
  "test_sign": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestComparisonUfuncs",
        "test_sign"
      ]
    ]
  ],
  "test_one_argument_ufunc_inplace": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestInplaceUfuncs",
        "test_one_argument_ufunc_inplace"
      ]
    ]
  ],
  "test_one_argument_ufunc_inplace_2": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestInplaceUfuncs",
        "test_one_argument_ufunc_inplace_2"
      ]
    ]
  ],
  "test_one_argument_two_output_ufunc_inplace": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestInplaceUfuncs",
        "test_one_argument_two_output_ufunc_inplace"
      ]
    ]
  ],
  "test_two_argument_ufunc_inplace_1": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestInplaceUfuncs",
        "test_two_argument_ufunc_inplace_1"
      ]
    ]
  ],
  "test_two_argument_ufunc_inplace_2": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestInplaceUfuncs",
        "test_two_argument_ufunc_inplace_2"
      ]
    ]
  ],
  "test_two_argument_ufunc_inplace_3": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestInplaceUfuncs",
        "test_two_argument_ufunc_inplace_3"
      ]
    ]
  ],
  "test_two_argument_two_output_ufunc_inplace": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestInplaceUfuncs",
        "test_two_argument_two_output_ufunc_inplace"
      ]
    ]
  ],
  "test_ufunc_inplace_non_contiguous_data": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestInplaceUfuncs",
        "test_ufunc_inplace_non_contiguous_data"
      ]
    ]
  ],
  "test_ufunc_inplace_non_standard_dtype": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestInplaceUfuncs",
        "test_ufunc_inplace_non_standard_dtype"
      ]
    ]
  ],
  "test_comparison_ufuncs_inplace": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestInplaceUfuncs",
        "test_comparison_ufuncs_inplace"
      ]
    ]
  ],
  "test_onearg_test_ufuncs_inplace": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestInplaceUfuncs",
        "test_onearg_test_ufuncs_inplace"
      ]
    ]
  ],
  "test_sign_inplace": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestInplaceUfuncs",
        "test_sign_inplace"
      ]
    ]
  ],
  "test_clip_simple": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestClip",
        "test_clip_simple"
      ]
    ]
  ],
  "test_clip_unitless_parts": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestClip",
        "test_clip_unitless_parts"
      ]
    ]
  ],
  "test_clip_dimensionless": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestClip",
        "test_clip_dimensionless"
      ]
    ]
  ],
  "test_clip_ndarray": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestClip",
        "test_clip_ndarray"
      ]
    ]
  ],
  "test_clip_quantity_inplace": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestClip",
        "test_clip_quantity_inplace"
      ]
    ]
  ],
  "test_clip_ndarray_dimensionless_output": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestClip",
        "test_clip_ndarray_dimensionless_output"
      ]
    ]
  ],
  "test_clip_errors": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestClip",
        "test_clip_errors"
      ]
    ]
  ],
  "test_one_argument_ufunc_at": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestUfuncAt",
        "test_one_argument_ufunc_at"
      ]
    ]
  ],
  "test_two_argument_ufunc_at": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestUfuncAt",
        "test_two_argument_ufunc_at"
      ]
    ]
  ],
  "test_one_argument_ufunc_reduce_accumulate": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestUfuncReduceReduceatAccumulate",
        "test_one_argument_ufunc_reduce_accumulate"
      ]
    ]
  ],
  "test_two_argument_ufunc_reduce_accumulate": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestUfuncReduceReduceatAccumulate",
        "test_two_argument_ufunc_reduce_accumulate"
      ]
    ]
  ],
  "test_one_argument_ufunc_outer": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestUfuncOuter",
        "test_one_argument_ufunc_outer"
      ]
    ]
  ],
  "test_two_argument_ufunc_outer": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "TestUfuncOuter",
        "test_two_argument_ufunc_outer"
      ]
    ]
  ],
  "test_scipy_registration": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "if_HAS_SCIPY_",
        "test_scipy_registration"
      ]
    ]
  ],
  "test_erf_scalar": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "if_HAS_SCIPY_",
        "TestScipySpecialUfuncs",
        "test_erf_scalar"
      ]
    ]
  ],
  "test_erf_array": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "if_HAS_SCIPY_",
        "TestScipySpecialUfuncs",
        "test_erf_array"
      ]
    ]
  ],
  "test_erf_invalid_units": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "if_HAS_SCIPY_",
        "TestScipySpecialUfuncs",
        "test_erf_invalid_units"
      ]
    ]
  ],
  "test_radian": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "if_HAS_SCIPY_",
        "TestScipySpecialUfuncs",
        "test_radian"
      ]
    ]
  ],
  "test_jv_scalar": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "if_HAS_SCIPY_",
        "TestScipySpecialUfuncs",
        "test_jv_scalar"
      ]
    ]
  ],
  "test_jv_array": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "if_HAS_SCIPY_",
        "TestScipySpecialUfuncs",
        "test_jv_array"
      ]
    ]
  ],
  "test_jv_invalid_units": [
    [
      "astropy/units/tests/test_quantity_ufuncs.py",
      [
        "if_HAS_SCIPY_",
        "TestScipySpecialUfuncs",
        "test_jv_invalid_units"
      ]
    ]
  ],
  "test_initialization_and_keying": [
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitBasics",
        "test_initialization_and_keying"
      ]
    ],
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredQuantity",
        "test_initialization_and_keying"
      ]
    ]
  ],
  "test_recursive_initialization": [
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitBasics",
        "test_recursive_initialization"
      ]
    ]
  ],
  "test_extreme_recursive_initialization": [
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitBasics",
        "test_extreme_recursive_initialization"
      ]
    ]
  ],
  "test_initialization_names_invalid_list_errors": [
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitBasics",
        "test_initialization_names_invalid_list_errors"
      ]
    ]
  ],
  "test_looks_like_unit": [
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitBasics",
        "test_looks_like_unit"
      ]
    ]
  ],
  "test_initialize_with_float_dtype": [
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitBasics",
        "test_initialize_with_float_dtype"
      ]
    ]
  ],
  "test_initialize_with_structured_unit_for_names": [
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitBasics",
        "test_initialize_with_structured_unit_for_names"
      ]
    ]
  ],
  "test_initialize_single_field": [
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitBasics",
        "test_initialize_single_field"
      ]
    ]
  ],
  "test_parsing": [
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitBasics",
        "test_parsing"
      ]
    ]
  ],
  "test_len": [
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitAsMapping",
        "test_len"
      ]
    ]
  ],
  "test_field_names": [
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitAsMapping",
        "test_field_names"
      ]
    ]
  ],
  "test_as_iterable": [
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitAsMapping",
        "test_as_iterable"
      ]
    ]
  ],
  "test_as_dict": [
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitAsMapping",
        "test_as_dict"
      ]
    ]
  ],
  "test_contains": [
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitAsMapping",
        "test_contains"
      ]
    ]
  ],
  "test_setitem_fails": [
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitAsMapping",
        "test_setitem_fails"
      ]
    ]
  ],
  "test_physical_type_id": [
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitMethods",
        "test_physical_type_id"
      ]
    ]
  ],
  "test_physical_type": [
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredUnitMethods",
        "test_physical_type"
      ]
    ]
  ],
  "test_initialization_with_unit_tuples": [
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredQuantity",
        "test_initialization_with_unit_tuples"
      ]
    ]
  ],
  "test_initialization_with_string": [
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredQuantity",
        "test_initialization_with_string"
      ]
    ]
  ],
  "test_initialization_by_multiplication_with_unit": [
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredQuantity",
        "test_initialization_by_multiplication_with_unit"
      ]
    ]
  ],
  "test_initialization_by_shifting_to_unit": [
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredQuantity",
        "test_initialization_by_shifting_to_unit"
      ]
    ]
  ],
  "test_value": [
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredQuantity",
        "test_value"
      ]
    ]
  ],
  "test_conversion_via_lshift": [
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredQuantity",
        "test_conversion_via_lshift"
      ]
    ]
  ],
  "test_inplace_conversion": [
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredQuantity",
        "test_inplace_conversion"
      ]
    ]
  ],
  "test_zeros_ones_like": [
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredQuantityFunctions",
        "test_zeros_ones_like"
      ]
    ]
  ],
  "test_error_on_non_equivalent_unit": [
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredSpecificTypeQuantity",
        "test_error_on_non_equivalent_unit"
      ]
    ]
  ],
  "test_unit_initialization": [
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredLogUnit",
        "test_unit_initialization"
      ]
    ]
  ],
  "test_quantity_initialization": [
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredLogUnit",
        "test_quantity_initialization"
      ]
    ]
  ],
  "test_quantity_si": [
    [
      "astropy/units/tests/test_structured.py",
      [
        "TestStructuredLogUnit",
        "test_quantity_si"
      ]
    ]
  ],
  "test_cpv": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestPVUfuncs",
        "test_cpv"
      ]
    ]
  ],
  "test_p2pv": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestPVUfuncs",
        "test_p2pv"
      ]
    ]
  ],
  "test_p2pv_inplace": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestPVUfuncs",
        "test_p2pv_inplace"
      ]
    ]
  ],
  "test_pv2p": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestPVUfuncs",
        "test_pv2p"
      ]
    ]
  ],
  "test_pv2s": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestPVUfuncs",
        "test_pv2s"
      ]
    ]
  ],
  "test_pv2s_non_standard_units": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestPVUfuncs",
        "test_pv2s_non_standard_units"
      ]
    ]
  ],
  "test_pv2s_non_standard_names_and_units": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestPVUfuncs",
        "test_pv2s_non_standard_names_and_units"
      ]
    ]
  ],
  "test_s2pv": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestPVUfuncs",
        "test_s2pv"
      ]
    ]
  ],
  "test_pvstar": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestPVUfuncs",
        "test_pvstar"
      ]
    ]
  ],
  "test_starpv": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestPVUfuncs",
        "test_starpv"
      ]
    ]
  ],
  "test_pvtob": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestPVUfuncs",
        "test_pvtob"
      ]
    ]
  ],
  "test_pvdpv": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestPVUfuncs",
        "test_pvdpv"
      ]
    ]
  ],
  "test_pvxpv": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestPVUfuncs",
        "test_pvxpv"
      ]
    ]
  ],
  "test_pvm": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestPVUfuncs",
        "test_pvm"
      ]
    ]
  ],
  "test_pvmpv": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestPVUfuncs",
        "test_pvmpv"
      ]
    ]
  ],
  "test_pvppv": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestPVUfuncs",
        "test_pvppv"
      ]
    ]
  ],
  "test_pvu": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestPVUfuncs",
        "test_pvu"
      ]
    ]
  ],
  "test_pvup": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestPVUfuncs",
        "test_pvup"
      ]
    ]
  ],
  "test_sxpv": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestPVUfuncs",
        "test_sxpv"
      ]
    ]
  ],
  "test_s2xpv": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestPVUfuncs",
        "test_s2xpv"
      ]
    ]
  ],
  "test_rxpv": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestPVUfuncs",
        "test_rxpv"
      ]
    ]
  ],
  "test_trxpv": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestPVUfuncs",
        "test_trxpv"
      ]
    ]
  ],
  "test_ldn_basic": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestEraStructUfuncs",
        "test_ldn_basic"
      ]
    ]
  ],
  "test_ldn_in_other_unit": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestEraStructUfuncs",
        "test_ldn_in_other_unit"
      ]
    ]
  ],
  "test_ldn_in_SI": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestEraStructUfuncs",
        "test_ldn_in_SI"
      ]
    ]
  ],
  "test_aper": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestEraStructUfuncs",
        "test_aper"
      ]
    ]
  ],
  "test_atciq_basic": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestEraStructUfuncs",
        "test_atciq_basic"
      ]
    ]
  ],
  "test_atciq_in_other_unit": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestEraStructUfuncs",
        "test_atciq_in_other_unit"
      ]
    ]
  ],
  "test_atciqn": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestEraStructUfuncs",
        "test_atciqn"
      ]
    ]
  ],
  "test_atciqz": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestEraStructUfuncs",
        "test_atciqz"
      ]
    ]
  ],
  "test_aticq": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestEraStructUfuncs",
        "test_aticq"
      ]
    ]
  ],
  "test_aticqn": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestEraStructUfuncs",
        "test_aticqn"
      ]
    ]
  ],
  "test_atioq_atoiq": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestEraStructUfuncs",
        "test_atioq_atoiq"
      ]
    ]
  ],
  "test_apio": [
    [
      "astropy/units/tests/test_structured_erfa_ufuncs.py",
      [
        "TestEraStructUfuncs",
        "test_apio"
      ]
    ]
  ],
  "test_initialisation": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_initialisation"
      ]
    ]
  ],
  "test_invalid_power": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_invalid_power"
      ]
    ]
  ],
  "test_invalid_compare": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_invalid_compare"
      ]
    ]
  ],
  "test_convert": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_convert"
      ]
    ]
  ],
  "test_convert_fail": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_convert_fail"
      ]
    ]
  ],
  "test_composite": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_composite"
      ]
    ]
  ],
  "test_represents": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_represents"
      ]
    ]
  ],
  "test_units_conversion": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_units_conversion"
      ]
    ]
  ],
  "test_units_manipulation": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_units_manipulation"
      ]
    ]
  ],
  "test_dimensionless_to_si": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_dimensionless_to_si"
      ]
    ]
  ],
  "test_dimensionless_to_cgs": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_dimensionless_to_cgs"
      ]
    ]
  ],
  "test_unknown_unit": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_unknown_unit"
      ]
    ]
  ],
  "test_multiple_solidus": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_multiple_solidus"
      ]
    ]
  ],
  "test_unknown_unit3": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_unknown_unit3"
      ]
    ]
  ],
  "test_invalid_scale": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_invalid_scale"
      ]
    ]
  ],
  "test_cds_power": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_cds_power"
      ]
    ]
  ],
  "test_register": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_register"
      ]
    ]
  ],
  "test_in_units": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_in_units"
      ]
    ]
  ],
  "test_null_unit": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_null_unit"
      ]
    ]
  ],
  "test_unrecognized_equivalency": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_unrecognized_equivalency"
      ]
    ]
  ],
  "test_convertible_exception": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_convertible_exception"
      ]
    ]
  ],
  "test_convertible_exception2": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_convertible_exception2"
      ]
    ]
  ],
  "test_steradian": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_steradian"
      ]
    ]
  ],
  "test_decompose_bases": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_decompose_bases"
      ]
    ]
  ],
  "test_complex_compose": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_complex_compose"
      ]
    ]
  ],
  "test_equiv_compose": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_equiv_compose"
      ]
    ]
  ],
  "test_empty_compose": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_empty_compose"
      ]
    ]
  ],
  "_unit_as_str": [
    [
      "astropy/units/tests/test_units.py",
      [
        "_unit_as_str"
      ]
    ]
  ],
  "test_compose_roundtrip": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_compose_roundtrip"
      ]
    ]
  ],
  "test_compose_cgs_to_si": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_compose_cgs_to_si"
      ]
    ]
  ],
  "test_compose_si_to_cgs": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_compose_si_to_cgs"
      ]
    ]
  ],
  "test_to_si": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_to_si"
      ]
    ]
  ],
  "test_to_cgs": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_to_cgs"
      ]
    ]
  ],
  "test_decompose_to_cgs": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_decompose_to_cgs"
      ]
    ]
  ],
  "test_compose_issue_579": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_compose_issue_579"
      ]
    ]
  ],
  "test_compose_prefix_unit": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_compose_prefix_unit"
      ]
    ]
  ],
  "test_self_compose": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_self_compose"
      ]
    ]
  ],
  "test_compose_failed": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_compose_failed"
      ]
    ]
  ],
  "test_compose_fractional_powers": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_compose_fractional_powers"
      ]
    ]
  ],
  "test_compose_best_unit_first": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_compose_best_unit_first"
      ]
    ]
  ],
  "test_compose_no_duplicates": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_compose_no_duplicates"
      ]
    ]
  ],
  "test_long_int": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_long_int"
      ]
    ]
  ],
  "test_endian_independence": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_endian_independence"
      ]
    ]
  ],
  "test_radian_base": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_radian_base"
      ]
    ]
  ],
  "test_no_as": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_no_as"
      ]
    ]
  ],
  "test_no_duplicates_in_names": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_no_duplicates_in_names"
      ]
    ]
  ],
  "test_pickle_between_sessions": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_pickle_between_sessions"
      ]
    ]
  ],
  "test_pickle_does_not_keep_memoized_hash": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_pickle_does_not_keep_memoized_hash"
      ]
    ]
  ],
  "test_pickle_unrecognized_unit": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_pickle_unrecognized_unit"
      ]
    ]
  ],
  "test_duplicate_define": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_duplicate_define"
      ]
    ]
  ],
  "test_all_units": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_all_units"
      ]
    ]
  ],
  "test_operations_with_strings": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_operations_with_strings"
      ]
    ]
  ],
  "test_compose_into_arbitrary_units": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_compose_into_arbitrary_units"
      ]
    ]
  ],
  "test_unit_multiplication_with_string": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_unit_multiplication_with_string"
      ]
    ]
  ],
  "test_unit_division_by_string": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_unit_division_by_string"
      ]
    ]
  ],
  "test_sorted_bases": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_sorted_bases"
      ]
    ]
  ],
  "test_megabit": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_megabit"
      ]
    ]
  ],
  "test_composite_unit_get_format_name": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_composite_unit_get_format_name"
      ]
    ]
  ],
  "test_suggestions": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_suggestions"
      ]
    ]
  ],
  "test_fits_hst_unit": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_fits_hst_unit"
      ]
    ]
  ],
  "test_barn_prefixes": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_barn_prefixes"
      ]
    ]
  ],
  "test_fractional_powers": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_fractional_powers"
      ]
    ]
  ],
  "test_sqrt_mag": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_sqrt_mag"
      ]
    ]
  ],
  "test_composite_compose": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_composite_compose"
      ]
    ]
  ],
  "test_data_quantities": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_data_quantities"
      ]
    ]
  ],
  "test_compare_with_none": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_compare_with_none"
      ]
    ]
  ],
  "test_validate_power_detect_fraction": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_validate_power_detect_fraction"
      ]
    ]
  ],
  "test_complex_fractional_rounding_errors": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_complex_fractional_rounding_errors"
      ]
    ]
  ],
  "test_fractional_rounding_errors_simple": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_fractional_rounding_errors_simple"
      ]
    ]
  ],
  "test_enable_unit_groupings": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_enable_unit_groupings"
      ]
    ]
  ],
  "test_unit_summary_prefixes": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_unit_summary_prefixes"
      ]
    ]
  ],
  "test_raise_to_negative_power": [
    [
      "astropy/units/tests/test_units.py",
      [
        "test_raise_to_negative_power"
      ]
    ]
  ],
  "test_quantity_asanyarray": [
    [
      "astropy/units/tests/test_utils.py",
      [
        "test_quantity_asanyarray"
      ]
    ]
  ],
  "test_sanitize_scale": [
    [
      "astropy/units/tests/test_utils.py",
      [
        "test_sanitize_scale"
      ]
    ]
  ],
  "_get_first_sentence": [
    [
      "astropy/units/utils.py",
      [
        "_get_first_sentence"
      ]
    ]
  ],
  "_iter_unit_summary": [
    [
      "astropy/units/utils.py",
      [
        "_iter_unit_summary"
      ]
    ]
  ],
  "generate_unit_summary": [
    [
      "astropy/units/utils.py",
      [
        "generate_unit_summary"
      ]
    ]
  ],
  "generate_prefixonly_unit_summary": [
    [
      "astropy/units/utils.py",
      [
        "generate_prefixonly_unit_summary"
      ]
    ]
  ],
  "is_effectively_unity": [
    [
      "astropy/units/utils.py",
      [
        "is_effectively_unity"
      ]
    ]
  ],
  "sanitize_scale": [
    [
      "astropy/units/utils.py",
      [
        "sanitize_scale"
      ]
    ]
  ],
  "maybe_simple_fraction": [
    [
      "astropy/units/utils.py",
      [
        "maybe_simple_fraction"
      ]
    ]
  ],
  "validate_power": [
    [
      "astropy/units/utils.py",
      [
        "validate_power"
      ]
    ]
  ],
  "resolve_fractions": [
    [
      "astropy/units/utils.py",
      [
        "resolve_fractions"
      ]
    ]
  ],
  "quantity_asanyarray": [
    [
      "astropy/units/utils.py",
      [
        "quantity_asanyarray"
      ]
    ]
  ],
  "directory": [
    [
      "astropy/utils/argparse.py",
      [
        "directory"
      ]
    ]
  ],
  "readable_directory": [
    [
      "astropy/utils/argparse.py",
      [
        "readable_directory"
      ]
    ]
  ],
  "writeable_directory": [
    [
      "astropy/utils/argparse.py",
      [
        "writeable_directory"
      ]
    ]
  ],
  "make_function_with_signature": [
    [
      "astropy/utils/codegen.py",
      [
        "make_function_with_signature"
      ]
    ]
  ],
  "_assert": [
    [
      "astropy/utils/collections.py",
      [
        "HomogeneousList",
        "_assert"
      ]
    ]
  ],
  "possible_filename": [
    [
      "astropy/utils/compat/misc.py",
      [
        "possible_filename"
      ]
    ]
  ],
  "override__dir__wrapper": [
    [
      "astropy/utils/compat/misc.py",
      [
        "override__dir__",
        "override__dir__wrapper"
      ]
    ]
  ],
  "override__dir__": [
    [
      "astropy/utils/compat/misc.py",
      [
        "override__dir__"
      ]
    ]
  ],
  "namedtuple_asdict": [
    [
      "astropy/utils/compat/misc.py",
      [
        "namedtuple_asdict"
      ]
    ]
  ],
  "get_ipython": [
    [
      "astropy/utils/console.py",
      [
        "_IPython",
        "get_ipython"
      ]
    ]
  ],
  "OutStream": [
    [
      "astropy/utils/console.py",
      [
        "_IPython",
        "OutStream"
      ]
    ]
  ],
  "ipyio": [
    [
      "astropy/utils/console.py",
      [
        "_IPython",
        "ipyio"
      ]
    ]
  ],
  "get_stream": [
    [
      "astropy/utils/console.py",
      [
        "_IPython",
        "get_stream"
      ]
    ]
  ],
  "_get_stdout": [
    [
      "astropy/utils/console.py",
      [
        "_get_stdout"
      ]
    ]
  ],
  "isatty": [
    [
      "astropy/utils/console.py",
      [
        "isatty"
      ]
    ],
    [
      "astropy/utils/tests/test_console.py",
      [
        "FakeTTY",
        "isatty"
      ]
    ]
  ],
  "terminal_size": [
    [
      "astropy/utils/console.py",
      [
        "terminal_size"
      ]
    ]
  ],
  "_color_text": [
    [
      "astropy/utils/console.py",
      [
        "_color_text"
      ]
    ]
  ],
  "_decode_preferred_encoding": [
    [
      "astropy/utils/console.py",
      [
        "_decode_preferred_encoding"
      ]
    ]
  ],
  "_write_with_fallback": [
    [
      "astropy/utils/console.py",
      [
        "_write_with_fallback"
      ]
    ]
  ],
  "color_print": [
    [
      "astropy/utils/console.py",
      [
        "color_print"
      ]
    ]
  ],
  "strip_ansi_codes": [
    [
      "astropy/utils/console.py",
      [
        "strip_ansi_codes"
      ]
    ]
  ],
  "human_time": [
    [
      "astropy/utils/console.py",
      [
        "human_time"
      ]
    ]
  ],
  "human_file_size": [
    [
      "astropy/utils/console.py",
      [
        "human_file_size"
      ]
    ]
  ],
  "_handle_resize": [
    [
      "astropy/utils/console.py",
      [
        "ProgressBar",
        "_handle_resize"
      ]
    ]
  ],
  "_update_console": [
    [
      "astropy/utils/console.py",
      [
        "ProgressBar",
        "_update_console"
      ]
    ]
  ],
  "_update_ipython_widget": [
    [
      "astropy/utils/console.py",
      [
        "ProgressBar",
        "_update_ipython_widget"
      ]
    ]
  ],
  "_silent_update": [
    [
      "astropy/utils/console.py",
      [
        "ProgressBar",
        "_silent_update"
      ]
    ]
  ],
  "map": [
    [
      "astropy/utils/console.py",
      [
        "ProgressBar",
        "map"
      ]
    ]
  ],
  "map_unordered": [
    [
      "astropy/utils/console.py",
      [
        "ProgressBar",
        "map_unordered"
      ]
    ]
  ],
  "_iterator": [
    [
      "astropy/utils/console.py",
      [
        "Spinner",
        "_iterator"
      ]
    ]
  ],
  "_silent_iterator": [
    [
      "astropy/utils/console.py",
      [
        "Spinner",
        "_silent_iterator"
      ]
    ]
  ],
  "print_code_line": [
    [
      "astropy/utils/console.py",
      [
        "print_code_line"
      ]
    ]
  ],
  "is_url": [
    [
      "astropy/utils/data.py",
      [
        "is_url"
      ]
    ]
  ],
  "_is_inside": [
    [
      "astropy/utils/data.py",
      [
        "_is_inside"
      ]
    ]
  ],
  "get_readable_fileobj": [
    [
      "astropy/utils/data.py",
      [
        "get_readable_fileobj"
      ]
    ]
  ],
  "get_file_contents": [
    [
      "astropy/utils/data.py",
      [
        "get_file_contents"
      ]
    ]
  ],
  "get_pkg_data_fileobj": [
    [
      "astropy/utils/data.py",
      [
        "get_pkg_data_fileobj"
      ]
    ]
  ],
  "get_pkg_data_filename": [
    [
      "astropy/utils/data.py",
      [
        "get_pkg_data_filename"
      ]
    ]
  ],
  "get_pkg_data_contents": [
    [
      "astropy/utils/data.py",
      [
        "get_pkg_data_contents"
      ]
    ]
  ],
  "get_pkg_data_filenames": [
    [
      "astropy/utils/data.py",
      [
        "get_pkg_data_filenames"
      ]
    ]
  ],
  "get_pkg_data_fileobjs": [
    [
      "astropy/utils/data.py",
      [
        "get_pkg_data_fileobjs"
      ]
    ]
  ],
  "compute_hash": [
    [
      "astropy/utils/data.py",
      [
        "compute_hash"
      ]
    ]
  ],
  "get_pkg_data_path": [
    [
      "astropy/utils/data.py",
      [
        "get_pkg_data_path"
      ]
    ]
  ],
  "_find_hash_fn": [
    [
      "astropy/utils/data.py",
      [
        "_find_hash_fn"
      ]
    ]
  ],
  "check_free_space_in_dir": [
    [
      "astropy/utils/data.py",
      [
        "check_free_space_in_dir"
      ]
    ]
  ],
  "init": [
    [
      "astropy/utils/data.py",
      [
        "_ftptlswrapper",
        "init"
      ]
    ]
  ],
  "connect_ftp": [
    [
      "astropy/utils/data.py",
      [
        "_FTPTLSHandler",
        "connect_ftp"
      ]
    ]
  ],
  "_build_urlopener": [
    [
      "astropy/utils/data.py",
      [
        "_build_urlopener"
      ]
    ]
  ],
  "_try_url_open": [
    [
      "astropy/utils/data.py",
      [
        "_try_url_open"
      ]
    ]
  ],
  "_download_file_from_source": [
    [
      "astropy/utils/data.py",
      [
        "_download_file_from_source"
      ]
    ]
  ],
  "download_file": [
    [
      "astropy/utils/data.py",
      [
        "download_file"
      ]
    ],
    [
      "astropy/utils/iers/iers.py",
      [
        "download_file"
      ]
    ]
  ],
  "is_url_in_cache": [
    [
      "astropy/utils/data.py",
      [
        "is_url_in_cache"
      ]
    ]
  ],
  "cache_total_size": [
    [
      "astropy/utils/data.py",
      [
        "cache_total_size"
      ]
    ]
  ],
  "_do_download_files_in_parallel": [
    [
      "astropy/utils/data.py",
      [
        "_do_download_files_in_parallel"
      ]
    ]
  ],
  "download_files_in_parallel": [
    [
      "astropy/utils/data.py",
      [
        "download_files_in_parallel"
      ]
    ]
  ],
  "_deltemps": [
    [
      "astropy/utils/data.py",
      [
        "_deltemps"
      ]
    ]
  ],
  "clear_download_cache": [
    [
      "astropy/utils/data.py",
      [
        "clear_download_cache"
      ]
    ]
  ],
  "_get_download_cache_loc": [
    [
      "astropy/utils/data.py",
      [
        "_get_download_cache_loc"
      ]
    ]
  ],
  "_url_to_dirname": [
    [
      "astropy/utils/data.py",
      [
        "_url_to_dirname"
      ]
    ]
  ],
  "check_download_cache": [
    [
      "astropy/utils/data.py",
      [
        "check_download_cache"
      ]
    ]
  ],
  "_SafeTemporaryDirectory": [
    [
      "astropy/utils/data.py",
      [
        "_SafeTemporaryDirectory"
      ]
    ]
  ],
  "_rmtree": [
    [
      "astropy/utils/data.py",
      [
        "_rmtree"
      ]
    ]
  ],
  "import_file_to_cache": [
    [
      "astropy/utils/data.py",
      [
        "import_file_to_cache"
      ]
    ]
  ],
  "get_cached_urls": [
    [
      "astropy/utils/data.py",
      [
        "get_cached_urls"
      ]
    ]
  ],
  "cache_contents": [
    [
      "astropy/utils/data.py",
      [
        "cache_contents"
      ]
    ]
  ],
  "export_download_cache": [
    [
      "astropy/utils/data.py",
      [
        "export_download_cache"
      ]
    ]
  ],
  "import_download_cache": [
    [
      "astropy/utils/data.py",
      [
        "import_download_cache"
      ]
    ]
  ],
  "serialize_context_as": [
    [
      "astropy/utils/data_info.py",
      [
        "serialize_context_as"
      ]
    ]
  ],
  "dtype_info_name": [
    [
      "astropy/utils/data_info.py",
      [
        "dtype_info_name"
      ]
    ]
  ],
  "data_info_factory": [
    [
      "astropy/utils/data_info.py",
      [
        "data_info_factory"
      ]
    ]
  ],
  "_get_obj_attrs_map": [
    [
      "astropy/utils/data_info.py",
      [
        "_get_obj_attrs_map"
      ]
    ]
  ],
  "_get_data_attribute": [
    [
      "astropy/utils/data_info.py",
      [
        "_get_data_attribute"
      ]
    ]
  ],
  "_parent": [
    [
      "astropy/utils/data_info.py",
      [
        "DataInfo",
        "_parent"
      ]
    ]
  ],
  "parent_table_1": [
    [
      "astropy/utils/data_info.py",
      [
        "BaseColumnInfo",
        "parent_table_1"
      ]
    ]
  ],
  "indices_5": [
    [
      "astropy/utils/data_info.py",
      [
        "BaseColumnInfo",
        "indices_5"
      ]
    ]
  ],
  "adjust_indices": [
    [
      "astropy/utils/data_info.py",
      [
        "BaseColumnInfo",
        "adjust_indices"
      ]
    ]
  ],
  "slice_indices": [
    [
      "astropy/utils/data_info.py",
      [
        "BaseColumnInfo",
        "slice_indices"
      ]
    ]
  ],
  "warn_str_func": [
    [
      "astropy/utils/data_info.py",
      [
        "BaseColumnInfo",
        "merge_cols_attributes",
        "warn_str_func"
      ]
    ]
  ],
  "getattrs": [
    [
      "astropy/utils/data_info.py",
      [
        "BaseColumnInfo",
        "merge_cols_attributes",
        "getattrs"
      ]
    ]
  ],
  "merge_cols_attributes": [
    [
      "astropy/utils/data_info.py",
      [
        "BaseColumnInfo",
        "merge_cols_attributes"
      ]
    ]
  ],
  "deprecate_doc": [
    [
      "astropy/utils/decorators.py",
      [
        "deprecated",
        "deprecate_doc"
      ]
    ]
  ],
  "get_function": [
    [
      "astropy/utils/decorators.py",
      [
        "deprecated",
        "get_function"
      ]
    ]
  ],
  "deprecated_func": [
    [
      "astropy/utils/decorators.py",
      [
        "deprecated",
        "deprecate_function",
        "deprecated_func"
      ]
    ]
  ],
  "deprecate_function": [
    [
      "astropy/utils/decorators.py",
      [
        "deprecated",
        "deprecate_function"
      ]
    ]
  ],
  "deprecate_class": [
    [
      "astropy/utils/decorators.py",
      [
        "deprecated",
        "deprecate_class"
      ]
    ]
  ],
  "deprecate": [
    [
      "astropy/utils/decorators.py",
      [
        "deprecated",
        "deprecate"
      ]
    ]
  ],
  "deprecated": [
    [
      "astropy/utils/decorators.py",
      [
        "deprecated"
      ]
    ]
  ],
  "delete": [
    [
      "astropy/utils/decorators.py",
      [
        "deprecated_attribute",
        "delete"
      ]
    ]
  ],
  "deprecated_attribute": [
    [
      "astropy/utils/decorators.py",
      [
        "deprecated_attribute"
      ]
    ]
  ],
  "deprecated_renamed_argument": [
    [
      "astropy/utils/decorators.py",
      [
        "deprecated_renamed_argument"
      ]
    ]
  ],
  "getter": [
    [
      "astropy/utils/decorators.py",
      [
        "classproperty",
        "getter"
      ]
    ]
  ],
  "setter": [
    [
      "astropy/utils/decorators.py",
      [
        "classproperty",
        "setter"
      ]
    ]
  ],
  "deleter": [
    [
      "astropy/utils/decorators.py",
      [
        "classproperty",
        "deleter"
      ]
    ]
  ],
  "_wrap_fget": [
    [
      "astropy/utils/decorators.py",
      [
        "classproperty",
        "_wrap_fget"
      ]
    ]
  ],
  "_make_method": [
    [
      "astropy/utils/decorators.py",
      [
        "sharedmethod",
        "_make_method"
      ]
    ]
  ],
  "set_docstring": [
    [
      "astropy/utils/decorators.py",
      [
        "format_doc",
        "set_docstring"
      ]
    ]
  ],
  "format_doc": [
    [
      "astropy/utils/decorators.py",
      [
        "format_doc"
      ]
    ]
  ],
  "diff_values": [
    [
      "astropy/utils/diff.py",
      [
        "diff_values"
      ]
    ]
  ],
  "report_diff_values": [
    [
      "astropy/utils/diff.py",
      [
        "report_diff_values"
      ]
    ]
  ],
  "where_not_allclose": [
    [
      "astropy/utils/diff.py",
      [
        "where_not_allclose"
      ]
    ]
  ],
  "_none_to_float": [
    [
      "astropy/utils/iers/iers.py",
      [
        "_none_to_float"
      ]
    ]
  ],
  "open": [
    [
      "astropy/utils/iers/iers.py",
      [
        "IERS",
        "open"
      ]
    ],
    [
      "astropy/utils/iers/iers.py",
      [
        "IERS_Auto",
        "open"
      ]
    ],
    [
      "astropy/utils/iers/iers.py",
      [
        "LeapSeconds",
        "open"
      ]
    ]
  ],
  "mjd_utc": [
    [
      "astropy/utils/iers/iers.py",
      [
        "IERS",
        "mjd_utc"
      ]
    ]
  ],
  "ut1_utc": [
    [
      "astropy/utils/iers/iers.py",
      [
        "IERS",
        "ut1_utc"
      ]
    ]
  ],
  "dcip_xy": [
    [
      "astropy/utils/iers/iers.py",
      [
        "IERS",
        "dcip_xy"
      ]
    ]
  ],
  "pm_xy": [
    [
      "astropy/utils/iers/iers.py",
      [
        "IERS",
        "pm_xy"
      ]
    ]
  ],
  "_check_interpolate_indices": [
    [
      "astropy/utils/iers/iers.py",
      [
        "IERS",
        "_check_interpolate_indices"
      ]
    ],
    [
      "astropy/utils/iers/iers.py",
      [
        "IERS_Auto",
        "_check_interpolate_indices"
      ]
    ]
  ],
  "_refresh_table_as_needed": [
    [
      "astropy/utils/iers/iers.py",
      [
        "IERS",
        "_refresh_table_as_needed"
      ]
    ],
    [
      "astropy/utils/iers/iers.py",
      [
        "IERS_Auto",
        "_refresh_table_as_needed"
      ]
    ]
  ],
  "ut1_utc_source": [
    [
      "astropy/utils/iers/iers.py",
      [
        "IERS",
        "ut1_utc_source"
      ]
    ],
    [
      "astropy/utils/iers/iers.py",
      [
        "IERS_A",
        "ut1_utc_source"
      ]
    ],
    [
      "astropy/utils/iers/iers.py",
      [
        "IERS_B",
        "ut1_utc_source"
      ]
    ]
  ],
  "dcip_source": [
    [
      "astropy/utils/iers/iers.py",
      [
        "IERS",
        "dcip_source"
      ]
    ],
    [
      "astropy/utils/iers/iers.py",
      [
        "IERS_A",
        "dcip_source"
      ]
    ],
    [
      "astropy/utils/iers/iers.py",
      [
        "IERS_B",
        "dcip_source"
      ]
    ]
  ],
  "pm_source": [
    [
      "astropy/utils/iers/iers.py",
      [
        "IERS",
        "pm_source"
      ]
    ],
    [
      "astropy/utils/iers/iers.py",
      [
        "IERS_A",
        "pm_source"
      ]
    ],
    [
      "astropy/utils/iers/iers.py",
      [
        "IERS_B",
        "pm_source"
      ]
    ]
  ],
  "time_now": [
    [
      "astropy/utils/iers/iers.py",
      [
        "IERS",
        "time_now"
      ]
    ]
  ],
  "_combine_a_b_columns": [
    [
      "astropy/utils/iers/iers.py",
      [
        "IERS_A",
        "_combine_a_b_columns"
      ]
    ]
  ],
  "_substitute_iers_b": [
    [
      "astropy/utils/iers/iers.py",
      [
        "IERS_A",
        "_substitute_iers_b"
      ]
    ],
    [
      "astropy/utils/iers/iers.py",
      [
        "IERS_Auto",
        "_substitute_iers_b"
      ]
    ]
  ],
  "_today": [
    [
      "astropy/utils/iers/iers.py",
      [
        "LeapSeconds",
        "_today"
      ]
    ]
  ],
  "auto_open": [
    [
      "astropy/utils/iers/iers.py",
      [
        "LeapSeconds",
        "auto_open"
      ]
    ]
  ],
  "expires": [
    [
      "astropy/utils/iers/iers.py",
      [
        "LeapSeconds",
        "expires"
      ]
    ]
  ],
  "_read_leap_seconds": [
    [
      "astropy/utils/iers/iers.py",
      [
        "LeapSeconds",
        "_read_leap_seconds"
      ]
    ]
  ],
  "from_iers_leap_seconds": [
    [
      "astropy/utils/iers/iers.py",
      [
        "LeapSeconds",
        "from_iers_leap_seconds"
      ]
    ]
  ],
  "from_leap_seconds_list": [
    [
      "astropy/utils/iers/iers.py",
      [
        "LeapSeconds",
        "from_leap_seconds_list"
      ]
    ]
  ],
  "from_erfa": [
    [
      "astropy/utils/iers/iers.py",
      [
        "LeapSeconds",
        "from_erfa"
      ]
    ]
  ],
  "update_erfa_leap_seconds": [
    [
      "astropy/utils/iers/iers.py",
      [
        "LeapSeconds",
        "update_erfa_leap_seconds"
      ]
    ]
  ],
  "test_open_filename": [
    [
      "astropy/utils/iers/tests/test_iers.py",
      [
        "TestBasic",
        "test_open_filename"
      ]
    ]
  ],
  "test_open_network_url": [
    [
      "astropy/utils/iers/tests/test_iers.py",
      [
        "TestBasic",
        "test_open_network_url"
      ]
    ]
  ],
  "test_interpolate_error_formatting": [
    [
      "astropy/utils/iers/tests/test_iers.py",
      [
        "TestIERS_Auto",
        "test_interpolate_error_formatting"
      ]
    ]
  ],
  "test_auto_max_age_none": [
    [
      "astropy/utils/iers/tests/test_iers.py",
      [
        "TestIERS_Auto",
        "test_auto_max_age_none"
      ]
    ]
  ],
  "test_auto_max_age_minimum": [
    [
      "astropy/utils/iers/tests/test_iers.py",
      [
        "TestIERS_Auto",
        "test_auto_max_age_minimum"
      ]
    ]
  ],
  "test_no_auto_download": [
    [
      "astropy/utils/iers/tests/test_iers.py",
      [
        "TestIERS_Auto",
        "test_no_auto_download"
      ]
    ]
  ],
  "test_IERS_B_parameters_loading_into_IERS_Auto": [
    [
      "astropy/utils/iers/tests/test_iers.py",
      [
        "test_IERS_B_parameters_loading_into_IERS_Auto"
      ]
    ]
  ],
  "test_iers_a_dl": [
    [
      "astropy/utils/iers/tests/test_iers.py",
      [
        "test_iers_a_dl"
      ]
    ]
  ],
  "test_iers_a_dl_mirror": [
    [
      "astropy/utils/iers/tests/test_iers.py",
      [
        "test_iers_a_dl_mirror"
      ]
    ]
  ],
  "test_iers_b_dl": [
    [
      "astropy/utils/iers/tests/test_iers.py",
      [
        "test_iers_b_dl"
      ]
    ]
  ],
  "test_configuration": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "test_configuration"
      ]
    ]
  ],
  "verify_day_month_year": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestReading",
        "verify_day_month_year"
      ]
    ]
  ],
  "test_read_leap_second_dat": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestReading",
        "test_read_leap_second_dat"
      ]
    ]
  ],
  "test_read_leap_second_dat_locale": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestReading",
        "test_read_leap_second_dat_locale"
      ]
    ]
  ],
  "test_open_leap_second_dat": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestReading",
        "test_open_leap_second_dat"
      ]
    ]
  ],
  "test_read_leap_seconds_list": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestReading",
        "test_read_leap_seconds_list"
      ]
    ]
  ],
  "test_open_leap_seconds_list": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestReading",
        "test_open_leap_seconds_list"
      ]
    ]
  ],
  "test_open_system_file": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestReading",
        "test_open_system_file"
      ]
    ]
  ],
  "make_fake_file": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "make_fake_file"
      ]
    ]
  ],
  "test_fake_file": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "test_fake_file"
      ]
    ]
  ],
  "test_auto_open_simple": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestAutoOpenExplicitLists",
        "test_auto_open_simple"
      ]
    ]
  ],
  "test_auto_open_erfa": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestAutoOpenExplicitLists",
        "test_auto_open_erfa"
      ]
    ]
  ],
  "test_fake_future_file": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestAutoOpenExplicitLists",
        "test_fake_future_file"
      ]
    ],
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestDefaultAutoOpen",
        "test_fake_future_file"
      ]
    ]
  ],
  "test_fake_expired_file": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestAutoOpenExplicitLists",
        "test_fake_expired_file"
      ]
    ],
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestDefaultAutoOpen",
        "test_fake_expired_file"
      ]
    ]
  ],
  "test_iers_url": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestRemoteURLs",
        "test_iers_url"
      ]
    ]
  ],
  "test_ietf_url": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestRemoteURLs",
        "test_ietf_url"
      ]
    ]
  ],
  "remove_auto_open_files": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestDefaultAutoOpen",
        "remove_auto_open_files"
      ]
    ]
  ],
  "test_erfa_found": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestDefaultAutoOpen",
        "test_erfa_found"
      ]
    ]
  ],
  "test_builtin_found": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestDefaultAutoOpen",
        "test_builtin_found"
      ]
    ]
  ],
  "test_builtin_not_expired": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestDefaultAutoOpen",
        "test_builtin_not_expired"
      ]
    ]
  ],
  "test_system_file_used_if_not_expired": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestDefaultAutoOpen",
        "test_system_file_used_if_not_expired"
      ]
    ]
  ],
  "test_auto_open_urls_always_good_enough": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestDefaultAutoOpen",
        "test_auto_open_urls_always_good_enough"
      ]
    ]
  ],
  "test_get_erfa_ls": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestFromERFA",
        "test_get_erfa_ls"
      ]
    ]
  ],
  "test_get_built_in_erfa_ls": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestFromERFA",
        "test_get_built_in_erfa_ls"
      ]
    ]
  ],
  "test_get_modified_erfa_ls": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestFromERFA",
        "test_get_modified_erfa_ls"
      ]
    ]
  ],
  "test_built_in_up_to_date": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestUpdateLeapSeconds",
        "test_built_in_up_to_date"
      ]
    ]
  ],
  "test_update_with_built_in": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestUpdateLeapSeconds",
        "test_update_with_built_in"
      ]
    ]
  ],
  "test_update_initialize_erfa": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestUpdateLeapSeconds",
        "test_update_initialize_erfa"
      ]
    ]
  ],
  "test_update_overwrite": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestUpdateLeapSeconds",
        "test_update_overwrite"
      ]
    ]
  ],
  "test_bad_jump": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestUpdateLeapSeconds",
        "test_bad_jump"
      ]
    ]
  ],
  "test_bad_day": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestUpdateLeapSeconds",
        "test_bad_day"
      ]
    ]
  ],
  "test_bad_month": [
    [
      "astropy/utils/iers/tests/test_leap_second.py",
      [
        "TestUpdateLeapSeconds",
        "test_bad_month"
      ]
    ]
  ],
  "resolve_name": [
    [
      "astropy/utils/introspection.py",
      [
        "resolve_name"
      ]
    ]
  ],
  "minversion": [
    [
      "astropy/utils/introspection.py",
      [
        "minversion"
      ]
    ]
  ],
  "find_current_module": [
    [
      "astropy/utils/introspection.py",
      [
        "find_current_module"
      ]
    ]
  ],
  "_get_module_from_frame": [
    [
      "astropy/utils/introspection.py",
      [
        "_get_module_from_frame"
      ]
    ]
  ],
  "find_mod_objs": [
    [
      "astropy/utils/introspection.py",
      [
        "find_mod_objs"
      ]
    ]
  ],
  "isinstancemethod": [
    [
      "astropy/utils/introspection.py",
      [
        "isinstancemethod"
      ]
    ]
  ],
  "_isinstancemethod": [
    [
      "astropy/utils/introspection.py",
      [
        "_isinstancemethod"
      ]
    ]
  ],
  "from_unmasked": [
    [
      "astropy/utils/masked/core.py",
      [
        "Masked",
        "from_unmasked"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "from_unmasked"
      ]
    ]
  ],
  "_get_masked_instance": [
    [
      "astropy/utils/masked/core.py",
      [
        "Masked",
        "_get_masked_instance"
      ]
    ]
  ],
  "_get_masked_cls": [
    [
      "astropy/utils/masked/core.py",
      [
        "Masked",
        "_get_masked_cls"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "_get_masked_cls"
      ]
    ]
  ],
  "_get_data_and_mask": [
    [
      "astropy/utils/masked/core.py",
      [
        "Masked",
        "_get_data_and_mask"
      ]
    ]
  ],
  "_get_data_and_masks": [
    [
      "astropy/utils/masked/core.py",
      [
        "Masked",
        "_get_data_and_masks"
      ]
    ],
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "_get_data_and_masks"
      ]
    ]
  ],
  "_get_mask": [
    [
      "astropy/utils/masked/core.py",
      [
        "Masked",
        "_get_mask"
      ]
    ]
  ],
  "_set_mask": [
    [
      "astropy/utils/masked/core.py",
      [
        "Masked",
        "_set_mask"
      ]
    ]
  ],
  "unmasked": [
    [
      "astropy/utils/masked/core.py",
      [
        "Masked",
        "unmasked"
      ]
    ],
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "unmasked"
      ]
    ]
  ],
  "_comparison_method": [
    [
      "astropy/utils/masked/core.py",
      [
        "_comparison_method"
      ]
    ]
  ],
  "_baseclass": [
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "_baseclass"
      ]
    ]
  ],
  "shape_10": [
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "shape_10"
      ]
    ]
  ],
  "_combine_masks": [
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "_combine_masks"
      ]
    ]
  ],
  "_masked_result": [
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "_masked_result"
      ]
    ]
  ],
  "_reduce_defaults": [
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "_reduce_defaults"
      ]
    ]
  ],
  "nonzero": [
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "nonzero"
      ]
    ]
  ],
  "compress": [
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "compress"
      ]
    ]
  ],
  "partition": [
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "partition"
      ]
    ]
  ],
  "cumprod": [
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedNDArray",
        "cumprod"
      ]
    ]
  ],
  "getfield": [
    [
      "astropy/utils/masked/core.py",
      [
        "MaskedRecarray",
        "getfield"
      ]
    ]
  ],
  "datetime_as_string": [
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "datetime_as_string"
      ]
    ]
  ],
  "iscomplex": [
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "iscomplex"
      ]
    ]
  ],
  "masked_a_helper": [
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "masked_a_helper"
      ]
    ]
  ],
  "masked_m_helper": [
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "masked_m_helper"
      ]
    ]
  ],
  "masked_v_helper": [
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "masked_v_helper"
      ]
    ]
  ],
  "masked_arr_helper": [
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "masked_arr_helper"
      ]
    ]
  ],
  "broadcast_to": [
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "broadcast_to"
      ]
    ]
  ],
  "outer": [
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "outer"
      ]
    ]
  ],
  "empty_like": [
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "empty_like"
      ]
    ]
  ],
  "zeros_like": [
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "zeros_like"
      ]
    ]
  ],
  "ones_like": [
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "ones_like"
      ]
    ]
  ],
  "packbits": [
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "packbits"
      ]
    ]
  ],
  "unpackbits": [
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "unpackbits"
      ]
    ]
  ],
  "msort": [
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "msort"
      ]
    ]
  ],
  "sort_complex": [
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "sort_complex"
      ]
    ]
  ],
  "broadcast_arrays": [
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "broadcast_arrays"
      ]
    ]
  ],
  "_masked_median_1d": [
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "_masked_median_1d"
      ]
    ]
  ],
  "_masked_median": [
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "_masked_median"
      ]
    ]
  ],
  "median": [
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "median"
      ]
    ]
  ],
  "_masked_quantile_1d": [
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "_masked_quantile_1d"
      ]
    ]
  ],
  "_masked_quantile": [
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "_masked_quantile"
      ]
    ]
  ],
  "lexsort": [
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "lexsort"
      ]
    ]
  ],
  "from_data": [
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "MaskedFormat",
        "from_data"
      ]
    ]
  ],
  "nanfunc": [
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "masked_nanfunc",
        "nanfunc"
      ]
    ]
  ],
  "masked_nanfunc": [
    [
      "astropy/utils/masked/function_helpers.py",
      [
        "masked_nanfunc"
      ]
    ]
  ],
  "test_initialization": [
    [
      "astropy/utils/masked/tests/test_containers.py",
      [
        "TestRepresentations",
        "test_initialization"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_containers.py",
      [
        "TestSkyCoord",
        "test_initialization"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_containers.py",
      [
        "TestTime",
        "test_initialization"
      ]
    ]
  ],
  "test_transformation": [
    [
      "astropy/utils/masked/tests/test_containers.py",
      [
        "TestRepresentations",
        "test_transformation"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_containers.py",
      [
        "TestSkyCoord",
        "test_transformation"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_containers.py",
      [
        "TestTime",
        "test_transformation"
      ]
    ]
  ],
  "test_different_formats": [
    [
      "astropy/utils/masked/tests/test_containers.py",
      [
        "TestTime",
        "test_different_formats"
      ]
    ]
  ],
  "test_nonzero_0d": [
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestArgFunctions",
        "test_nonzero_0d"
      ]
    ]
  ],
  "test_apply_over_axes_no_reduction": [
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestAlongAxis",
        "test_apply_over_axes_no_reduction"
      ]
    ]
  ],
  "test_apply_over_axes_wrong_size": [
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestAlongAxis",
        "test_apply_over_axes_wrong_size"
      ]
    ]
  ],
  "test_where_single_arg": [
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestUfuncLike",
        "test_where_single_arg"
      ]
    ]
  ],
  "test_where_wrong_number_of_arg": [
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestUfuncLike",
        "test_where_wrong_number_of_arg"
      ]
    ]
  ],
  "test_choose_masked": [
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestUfuncLike",
        "test_choose_masked"
      ]
    ]
  ],
  "test_quantile_out_of_range": [
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestPartitionLikeFunctions",
        "test_quantile_out_of_range"
      ]
    ]
  ],
  "check_arg": [
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "TestNaNFunctions",
        "check_arg"
      ]
    ]
  ],
  "test_basic_testing_completeness": [
    [
      "astropy/utils/masked/tests/test_function_helpers.py",
      [
        "test_basic_testing_completeness"
      ]
    ]
  ],
  "test_2op_ufunc": [
    [
      "astropy/utils/masked/tests/test_functions.py",
      [
        "MaskedUfuncTests",
        "test_2op_ufunc"
      ]
    ]
  ],
  "test_ufunc_inplace": [
    [
      "astropy/utils/masked/tests/test_functions.py",
      [
        "MaskedUfuncTests",
        "test_ufunc_inplace"
      ]
    ]
  ],
  "test_ufunc_inplace_no_masked_input": [
    [
      "astropy/utils/masked/tests/test_functions.py",
      [
        "MaskedUfuncTests",
        "test_ufunc_inplace_no_masked_input"
      ]
    ]
  ],
  "test_ufunc_inplace_error": [
    [
      "astropy/utils/masked/tests/test_functions.py",
      [
        "MaskedUfuncTests",
        "test_ufunc_inplace_error"
      ]
    ]
  ],
  "test_2op_ufunc_outer": [
    [
      "astropy/utils/masked/tests/test_functions.py",
      [
        "MaskedUfuncTests",
        "test_2op_ufunc_outer"
      ]
    ]
  ],
  "test_3op_ufunc": [
    [
      "astropy/utils/masked/tests/test_functions.py",
      [
        "MaskedUfuncTests",
        "test_3op_ufunc"
      ]
    ]
  ],
  "test_add_reduce": [
    [
      "astropy/utils/masked/tests/test_functions.py",
      [
        "MaskedUfuncTests",
        "test_add_reduce"
      ]
    ]
  ],
  "test_add_reduce_no_masked_input": [
    [
      "astropy/utils/masked/tests/test_functions.py",
      [
        "MaskedUfuncTests",
        "test_add_reduce_no_masked_input"
      ]
    ]
  ],
  "test_minimum_reduce": [
    [
      "astropy/utils/masked/tests/test_functions.py",
      [
        "MaskedUfuncTests",
        "test_minimum_reduce"
      ]
    ]
  ],
  "test_maximum_reduce": [
    [
      "astropy/utils/masked/tests/test_functions.py",
      [
        "MaskedUfuncTests",
        "test_maximum_reduce"
      ]
    ]
  ],
  "test_multiply_reduce": [
    [
      "astropy/utils/masked/tests/test_functions.py",
      [
        "TestMaskedArrayUfuncs",
        "test_multiply_reduce"
      ]
    ]
  ],
  "test_ufunc_not_implemented_for_other": [
    [
      "astropy/utils/masked/tests/test_functions.py",
      [
        "TestMaskedArrayUfuncs",
        "test_ufunc_not_implemented_for_other"
      ]
    ]
  ],
  "test_ufunc_inplace_error2": [
    [
      "astropy/utils/masked/tests/test_functions.py",
      [
        "TestMaskedQuantityUfuncs",
        "test_ufunc_inplace_error2"
      ]
    ]
  ],
  "test_ufunc_inplace_quantity_initial": [
    [
      "astropy/utils/masked/tests/test_functions.py",
      [
        "TestMaskedLongitudeUfuncs",
        "test_ufunc_inplace_quantity_initial"
      ]
    ]
  ],
  "test_concatenate_not_all_masked": [
    [
      "astropy/utils/masked/tests/test_functions.py",
      [
        "TestMaskedArrayConcatenation",
        "test_concatenate_not_all_masked"
      ]
    ]
  ],
  "test_insert_masked_obj": [
    [
      "astropy/utils/masked/tests/test_functions.py",
      [
        "TestMaskedArrayConcatenation",
        "test_insert_masked_obj"
      ]
    ]
  ],
  "test_broadcast_to_using_apply": [
    [
      "astropy/utils/masked/tests/test_functions.py",
      [
        "TestMaskedArrayBroadcast",
        "test_broadcast_to_using_apply"
      ]
    ]
  ],
  "test_broadcast_arrays_not_all_masked": [
    [
      "astropy/utils/masked/tests/test_functions.py",
      [
        "TestMaskedArrayBroadcast",
        "test_broadcast_arrays_not_all_masked"
      ]
    ]
  ],
  "test_broadcast_arrays_subok_false": [
    [
      "astropy/utils/masked/tests/test_functions.py",
      [
        "TestMaskedArrayBroadcast",
        "test_broadcast_arrays_subok_false"
      ]
    ]
  ],
  "test_diff_explicit": [
    [
      "astropy/utils/masked/tests/test_functions.py",
      [
        "TestMaskedArrayCalculation",
        "test_diff_explicit"
      ]
    ]
  ],
  "test_lexsort1": [
    [
      "astropy/utils/masked/tests/test_functions.py",
      [
        "TestMaskedArraySorting",
        "test_lexsort1"
      ]
    ]
  ],
  "test_lexsort2": [
    [
      "astropy/utils/masked/tests/test_functions.py",
      [
        "TestMaskedArraySorting",
        "test_lexsort2"
      ]
    ]
  ],
  "test_lexsort_mix": [
    [
      "astropy/utils/masked/tests/test_functions.py",
      [
        "TestMaskedArraySorting",
        "test_lexsort_mix"
      ]
    ]
  ],
  "assert_masked_equal": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "assert_masked_equal"
      ]
    ]
  ],
  "test_masked_ndarray_init": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "test_masked_ndarray_init"
      ]
    ]
  ],
  "test_cannot_initialize_with_masked": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "test_cannot_initialize_with_masked"
      ]
    ]
  ],
  "test_cannot_just_use_anything_with_a_mask_attribute": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "test_cannot_just_use_anything_with_a_mask_attribute"
      ]
    ]
  ],
  "test_masked_list": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedClassCreation",
        "test_masked_list"
      ]
    ]
  ],
  "test_from_list": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedClassCreation",
        "test_from_list"
      ]
    ]
  ],
  "test_masked_list_subclass": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedClassCreation",
        "test_masked_list_subclass"
      ]
    ]
  ],
  "test_direct_creation": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedNDArraySubclassCreation",
        "test_direct_creation"
      ]
    ]
  ],
  "test_initialization_without_mask": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedNDArraySubclassCreation",
        "test_initialization_without_mask"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedQuantityInitialization",
        "test_initialization_without_mask"
      ]
    ]
  ],
  "test_initialization_with_masked_values": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedNDArraySubclassCreation",
        "test_initialization_with_masked_values"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedQuantityInitialization",
        "test_initialization_with_masked_values"
      ]
    ]
  ],
  "test_can_initialize_with_masked_values": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedNDArraySubclassCreation",
        "test_can_initialize_with_masked_values"
      ]
    ]
  ],
  "test_viewing": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedNDArraySubclassCreation",
        "test_viewing"
      ]
    ]
  ],
  "test_masked_quantity_class_init": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedQuantityInitialization",
        "test_masked_quantity_class_init"
      ]
    ]
  ],
  "test_masked_quantity_getting": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedQuantityInitialization",
        "test_masked_quantity_getting"
      ]
    ]
  ],
  "test_whole_mask_setting_simple": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskSetting",
        "test_whole_mask_setting_simple"
      ]
    ]
  ],
  "test_whole_mask_setting_structured": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskSetting",
        "test_whole_mask_setting_structured"
      ]
    ]
  ],
  "test_part_mask_setting": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskSetting",
        "test_part_mask_setting"
      ]
    ]
  ],
  "test_part_mask_setting_structured": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskSetting",
        "test_part_mask_setting_structured"
      ]
    ]
  ],
  "test_viewing_as_new_type": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestViewing",
        "test_viewing_as_new_type"
      ]
    ]
  ],
  "test_viewing_as_new_dtype": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestViewing",
        "test_viewing_as_new_dtype"
      ]
    ]
  ],
  "test_viewing_as_new_dtype_not_implemented": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestViewing",
        "test_viewing_as_new_dtype_not_implemented"
      ]
    ]
  ],
  "test_viewing_as_something_impossible": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestViewing",
        "test_viewing_as_something_impossible"
      ]
    ]
  ],
  "test_filled": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayCopyFilled",
        "test_filled"
      ]
    ]
  ],
  "test_filled_no_fill_value": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayCopyFilled",
        "test_filled_no_fill_value"
      ]
    ]
  ],
  "test_filled_structured": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayCopyFilled",
        "test_filled_structured"
      ]
    ]
  ],
  "test_shape_setting_failure": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayShaping",
        "test_shape_setting_failure"
      ]
    ]
  ],
  "test_iter": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayShaping",
        "test_iter"
      ]
    ]
  ],
  "test_getitem_structured": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "MaskedItemTests",
        "test_getitem_structured"
      ]
    ]
  ],
  "test_setitem_structured": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "MaskedItemTests",
        "test_setitem_structured"
      ]
    ]
  ],
  "test_setitem_np_ma_masked": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "MaskedItemTests",
        "test_setitem_np_ma_masked"
      ]
    ]
  ],
  "test_getitem_strings": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayItems",
        "test_getitem_strings"
      ]
    ]
  ],
  "test_setitem_strings_np_ma_masked": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayItems",
        "test_setitem_strings_np_ma_masked"
      ]
    ]
  ],
  "test_add_subtract": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "MaskedOperatorTests",
        "test_add_subtract"
      ]
    ]
  ],
  "test_structured_equality": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "MaskedOperatorTests",
        "test_structured_equality"
      ]
    ]
  ],
  "test_matvec": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "MaskedOperatorTests",
        "test_matvec"
      ]
    ]
  ],
  "test_vecmat": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "MaskedOperatorTests",
        "test_vecmat"
      ]
    ]
  ],
  "test_vecvec": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "MaskedOperatorTests",
        "test_vecvec"
      ]
    ]
  ],
  "test_equality_strings": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayOperators",
        "test_equality_strings"
      ]
    ]
  ],
  "test_mean_int16": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_mean_int16"
      ]
    ]
  ],
  "test_mean_float16": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_mean_float16"
      ]
    ]
  ],
  "test_var_int16": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_var_int16"
      ]
    ]
  ],
  "test_min_with_masked_nan": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_min_with_masked_nan"
      ]
    ]
  ],
  "test_argmin_only_one_unmasked_element": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_argmin_only_one_unmasked_element"
      ]
    ]
  ],
  "test_structured_argsort": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_structured_argsort"
      ]
    ]
  ],
  "test_argsort_error": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_argsort_error"
      ]
    ]
  ],
  "test_all_explicit": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_all_explicit"
      ]
    ]
  ],
  "test_all_and_any": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_all_and_any"
      ]
    ]
  ],
  "test_any_inplace": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_any_inplace"
      ]
    ]
  ],
  "test_clip_masked_min_max": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayMethods",
        "test_clip_masked_min_max"
      ]
    ]
  ],
  "test_masked_str_explicit": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "test_masked_str_explicit"
      ]
    ]
  ],
  "test_masked_repr_explicit": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "test_masked_repr_explicit"
      ]
    ]
  ],
  "test_masked_repr_summary": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "test_masked_repr_summary"
      ]
    ]
  ],
  "test_masked_repr_nodata": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "test_masked_repr_nodata"
      ]
    ]
  ],
  "test_scalar_str": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayRepr",
        "test_scalar_str"
      ]
    ]
  ],
  "test_scalar_repr": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayRepr",
        "test_scalar_repr"
      ]
    ]
  ],
  "test_recarray_setup": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedRecarray",
        "test_recarray_setup"
      ]
    ]
  ],
  "test_recarray_setting": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedRecarray",
        "test_recarray_setting"
      ]
    ]
  ],
  "test_recarray_field_getting": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedRecarray",
        "test_recarray_field_getting"
      ]
    ]
  ],
  "test_recarray_field_setting": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedRecarray",
        "test_recarray_field_setting"
      ]
    ]
  ],
  "test_masked_array_from_masked": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayInteractionWithNumpyMA",
        "test_masked_array_from_masked"
      ]
    ]
  ],
  "test_view_as_masked_array": [
    [
      "astropy/utils/masked/tests/test_masked.py",
      [
        "TestMaskedArrayInteractionWithNumpyMA",
        "test_view_as_masked_array"
      ]
    ]
  ],
  "setup_arrays": [
    [
      "astropy/utils/masked/tests/test_table.py",
      [
        "MaskedArrayTableSetup",
        "setup_arrays"
      ]
    ],
    [
      "astropy/utils/masked/tests/test_table.py",
      [
        "MaskedQuantityTableSetup",
        "setup_arrays"
      ]
    ]
  ],
  "test_table_initialization": [
    [
      "astropy/utils/masked/tests/test_table.py",
      [
        "TestMaskedArrayTable",
        "test_table_initialization"
      ]
    ]
  ],
  "test_info_basics": [
    [
      "astropy/utils/masked/tests/test_table.py",
      [
        "TestMaskedArrayTable",
        "test_info_basics"
      ]
    ]
  ],
  "test_table_write": [
    [
      "astropy/utils/masked/tests/test_table.py",
      [
        "TestMaskedArrayTable",
        "test_table_write"
      ]
    ]
  ],
  "test_table_write_serialization": [
    [
      "astropy/utils/masked/tests/test_table.py",
      [
        "TestMaskedArrayTable",
        "test_table_write_serialization"
      ]
    ]
  ],
  "test_non_existing_serialize_method": [
    [
      "astropy/utils/masked/tests/test_table.py",
      [
        "TestMaskedArrayTable",
        "test_non_existing_serialize_method"
      ]
    ]
  ],
  "test_table_operations_requiring_masking": [
    [
      "astropy/utils/masked/tests/test_table.py",
      [
        "TestMaskedQuantityTable",
        "test_table_operations_requiring_masking"
      ]
    ]
  ],
  "test_table_operations_requiring_masking_auto_promote": [
    [
      "astropy/utils/masked/tests/test_table.py",
      [
        "TestMaskedQuantityTable",
        "test_table_operations_requiring_masking_auto_promote"
      ]
    ]
  ],
  "_both_isinstance": [
    [
      "astropy/utils/metadata.py",
      [
        "_both_isinstance"
      ]
    ]
  ],
  "_not_equal": [
    [
      "astropy/utils/metadata.py",
      [
        "_not_equal"
      ]
    ]
  ],
  "enable_merge_strategies": [
    [
      "astropy/utils/metadata.py",
      [
        "enable_merge_strategies"
      ]
    ]
  ],
  "_warn_str_func": [
    [
      "astropy/utils/metadata.py",
      [
        "_warn_str_func"
      ]
    ]
  ],
  "_error_str_func": [
    [
      "astropy/utils/metadata.py",
      [
        "_error_str_func"
      ]
    ]
  ],
  "isiterable": [
    [
      "astropy/utils/misc.py",
      [
        "isiterable"
      ]
    ]
  ],
  "indent": [
    [
      "astropy/utils/misc.py",
      [
        "indent"
      ]
    ]
  ],
  "silence": [
    [
      "astropy/utils/misc.py",
      [
        "silence"
      ]
    ]
  ],
  "format_exception": [
    [
      "astropy/utils/misc.py",
      [
        "format_exception"
      ]
    ]
  ],
  "find_api_page": [
    [
      "astropy/utils/misc.py",
      [
        "find_api_page"
      ]
    ]
  ],
  "signal_number_to_name": [
    [
      "astropy/utils/misc.py",
      [
        "signal_number_to_name"
      ]
    ]
  ],
  "is_path_hidden": [
    [
      "astropy/utils/misc.py",
      [
        "is_path_hidden"
      ]
    ]
  ],
  "walk_skip_hidden": [
    [
      "astropy/utils/misc.py",
      [
        "walk_skip_hidden"
      ]
    ]
  ],
  "strip_accents": [
    [
      "astropy/utils/misc.py",
      [
        "strip_accents"
      ]
    ]
  ],
  "did_you_mean": [
    [
      "astropy/utils/misc.py",
      [
        "did_you_mean"
      ]
    ]
  ],
  "_class_attribute_": [
    [
      "astropy/utils/misc.py",
      [
        "OrderedDescriptor",
        "_class_attribute_"
      ]
    ]
  ],
  "_set_locale": [
    [
      "astropy/utils/misc.py",
      [
        "_set_locale"
      ]
    ]
  ],
  "dtype_bytes_or_chars": [
    [
      "astropy/utils/misc.py",
      [
        "dtype_bytes_or_chars"
      ]
    ]
  ],
  "_hungry_for": [
    [
      "astropy/utils/misc.py",
      [
        "_hungry_for"
      ]
    ]
  ],
  "pizza": [
    [
      "astropy/utils/misc.py",
      [
        "pizza"
      ]
    ]
  ],
  "coffee": [
    [
      "astropy/utils/misc.py",
      [
        "coffee"
      ]
    ]
  ],
  "_add_tab_header": [
    [
      "astropy/utils/parsing.py",
      [
        "_add_tab_header"
      ]
    ]
  ],
  "_patch_get_caller_module_dict": [
    [
      "astropy/utils/parsing.py",
      [
        "_patch_get_caller_module_dict"
      ]
    ]
  ],
  "reshape": [
    [
      "astropy/utils/shapes.py",
      [
        "NDArrayShapeMethods",
        "reshape"
      ]
    ]
  ],
  "ravel": [
    [
      "astropy/utils/shapes.py",
      [
        "NDArrayShapeMethods",
        "ravel"
      ]
    ]
  ],
  "flatten": [
    [
      "astropy/utils/shapes.py",
      [
        "NDArrayShapeMethods",
        "flatten"
      ]
    ]
  ],
  "transpose": [
    [
      "astropy/utils/shapes.py",
      [
        "NDArrayShapeMethods",
        "transpose"
      ]
    ]
  ],
  "T": [
    [
      "astropy/utils/shapes.py",
      [
        "NDArrayShapeMethods",
        "T"
      ]
    ]
  ],
  "swapaxes": [
    [
      "astropy/utils/shapes.py",
      [
        "NDArrayShapeMethods",
        "swapaxes"
      ]
    ],
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "swapaxes"
      ]
    ]
  ],
  "diagonal": [
    [
      "astropy/utils/shapes.py",
      [
        "NDArrayShapeMethods",
        "diagonal"
      ]
    ]
  ],
  "squeeze": [
    [
      "astropy/utils/shapes.py",
      [
        "NDArrayShapeMethods",
        "squeeze"
      ]
    ]
  ],
  "check_broadcast": [
    [
      "astropy/utils/shapes.py",
      [
        "check_broadcast"
      ]
    ]
  ],
  "unbroadcast": [
    [
      "astropy/utils/shapes.py",
      [
        "unbroadcast"
      ]
    ]
  ],
  "get_data_filename": [
    [
      "astropy/utils/tests/data/test_package/__init__.py",
      [
        "get_data_filename"
      ]
    ]
  ],
  "crashy_function": [
    [
      "astropy/utils/tests/test_codegen.py",
      [
        "test_make_function_with_signature_lineno",
        "crashy_function"
      ]
    ]
  ],
  "test_make_function_with_signature_lineno": [
    [
      "astropy/utils/tests/test_codegen.py",
      [
        "test_make_function_with_signature_lineno"
      ]
    ]
  ],
  "test_homogeneous_list": [
    [
      "astropy/utils/tests/test_collections.py",
      [
        "test_homogeneous_list"
      ]
    ]
  ],
  "test_homogeneous_list2": [
    [
      "astropy/utils/tests/test_collections.py",
      [
        "test_homogeneous_list2"
      ]
    ]
  ],
  "test_homogeneous_list3": [
    [
      "astropy/utils/tests/test_collections.py",
      [
        "test_homogeneous_list3"
      ]
    ]
  ],
  "test_homogeneous_list4": [
    [
      "astropy/utils/tests/test_collections.py",
      [
        "test_homogeneous_list4"
      ]
    ]
  ],
  "test_homogeneous_list5": [
    [
      "astropy/utils/tests/test_collections.py",
      [
        "test_homogeneous_list5"
      ]
    ]
  ],
  "test_homogeneous_list_setitem_works": [
    [
      "astropy/utils/tests/test_collections.py",
      [
        "test_homogeneous_list_setitem_works"
      ]
    ]
  ],
  "test_homogeneous_list_setitem_works_with_slice": [
    [
      "astropy/utils/tests/test_collections.py",
      [
        "test_homogeneous_list_setitem_works_with_slice"
      ]
    ]
  ],
  "test_homogeneous_list_init_got_invalid_type": [
    [
      "astropy/utils/tests/test_collections.py",
      [
        "test_homogeneous_list_init_got_invalid_type"
      ]
    ]
  ],
  "test_homogeneous_list_works_with_generators": [
    [
      "astropy/utils/tests/test_collections.py",
      [
        "test_homogeneous_list_works_with_generators"
      ]
    ]
  ],
  "test_fake_tty": [
    [
      "astropy/utils/tests/test_console.py",
      [
        "test_fake_tty"
      ]
    ]
  ],
  "test_color_text": [
    [
      "astropy/utils/tests/test_console.py",
      [
        "test_color_text"
      ]
    ]
  ],
  "test_color_print": [
    [
      "astropy/utils/tests/test_console.py",
      [
        "test_color_print"
      ]
    ]
  ],
  "test_color_print2": [
    [
      "astropy/utils/tests/test_console.py",
      [
        "test_color_print2"
      ]
    ]
  ],
  "test_color_print3": [
    [
      "astropy/utils/tests/test_console.py",
      [
        "test_color_print3"
      ]
    ]
  ],
  "test_color_print_unicode": [
    [
      "astropy/utils/tests/test_console.py",
      [
        "test_color_print_unicode"
      ]
    ]
  ],
  "test_color_print_invalid_color": [
    [
      "astropy/utils/tests/test_console.py",
      [
        "test_color_print_invalid_color"
      ]
    ]
  ],
  "test_spinner_non_unicode_console": [
    [
      "astropy/utils/tests/test_console.py",
      [
        "test_spinner_non_unicode_console"
      ]
    ]
  ],
  "test_progress_bar": [
    [
      "astropy/utils/tests/test_console.py",
      [
        "test_progress_bar"
      ]
    ]
  ],
  "test_progress_bar2": [
    [
      "astropy/utils/tests/test_console.py",
      [
        "test_progress_bar2"
      ]
    ]
  ],
  "test_progress_bar3": [
    [
      "astropy/utils/tests/test_console.py",
      [
        "test_progress_bar3"
      ]
    ]
  ],
  "test_zero_progress_bar": [
    [
      "astropy/utils/tests/test_console.py",
      [
        "test_zero_progress_bar"
      ]
    ]
  ],
  "test_progress_bar_as_generator": [
    [
      "astropy/utils/tests/test_console.py",
      [
        "test_progress_bar_as_generator"
      ]
    ]
  ],
  "test_progress_bar_map": [
    [
      "astropy/utils/tests/test_console.py",
      [
        "test_progress_bar_map"
      ]
    ]
  ],
  "test_human_time": [
    [
      "astropy/utils/tests/test_console.py",
      [
        "test_human_time"
      ]
    ]
  ],
  "test_human_file_size": [
    [
      "astropy/utils/tests/test_console.py",
      [
        "test_human_file_size"
      ]
    ]
  ],
  "test_bad_human_file_size": [
    [
      "astropy/utils/tests/test_console.py",
      [
        "test_bad_human_file_size"
      ]
    ]
  ],
  "can_rename_directory_in_use": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "can_rename_directory_in_use"
      ]
    ]
  ],
  "url_to": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "url_to"
      ]
    ]
  ],
  "valid_urls": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "valid_urls"
      ]
    ]
  ],
  "invalid_urls": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "invalid_urls"
      ]
    ]
  ],
  "temp_cache": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "temp_cache"
      ]
    ]
  ],
  "change_tree_permission": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "change_tree_permission"
      ]
    ]
  ],
  "is_dir_readonly": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "is_dir_readonly"
      ]
    ]
  ],
  "readonly_dir": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "readonly_dir"
      ]
    ]
  ],
  "readonly_cache": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "readonly_cache"
      ]
    ]
  ],
  "no_mkdir": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "fake_readonly_cache",
        "no_mkdir"
      ]
    ]
  ],
  "no_mkdtemp": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "fake_readonly_cache",
        "no_mkdtemp"
      ]
    ]
  ],
  "no_TemporaryDirectory": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "fake_readonly_cache",
        "no_TemporaryDirectory"
      ]
    ]
  ],
  "fake_readonly_cache": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "fake_readonly_cache"
      ]
    ]
  ],
  "test_download_file_basic": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_file_basic"
      ]
    ]
  ],
  "test_download_file_absolute_path": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_file_absolute_path"
      ]
    ]
  ],
  "test_unicode_url": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_unicode_url"
      ]
    ]
  ],
  "test_too_long_url": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_too_long_url"
      ]
    ]
  ],
  "test_case_collision": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_case_collision"
      ]
    ]
  ],
  "test_domain_name_case": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_domain_name_case"
      ]
    ]
  ],
  "test_download_nocache_from_internet": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_nocache_from_internet"
      ]
    ]
  ],
  "a_binary_file": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "a_binary_file"
      ]
    ]
  ],
  "a_file": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "a_file"
      ]
    ]
  ],
  "test_temp_cache": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_temp_cache"
      ]
    ]
  ],
  "test_download_with_sources_and_bogus_original": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_with_sources_and_bogus_original"
      ]
    ]
  ],
  "test_download_file_threaded_many": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_file_threaded_many"
      ]
    ]
  ],
  "test_threaded_segfault": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_threaded_segfault"
      ]
    ]
  ],
  "test_download_file_threaded_many_partial_success": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_file_threaded_many_partial_success"
      ]
    ]
  ],
  "test_clear_download_cache": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_clear_download_cache"
      ]
    ]
  ],
  "make_url": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_clear_download_multiple_references_doesnt_corrupt_storage",
        "make_url"
      ]
    ]
  ],
  "test_clear_download_multiple_references_doesnt_corrupt_storage": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_clear_download_multiple_references_doesnt_corrupt_storage"
      ]
    ]
  ],
  "test_download_file_local_cache_survives": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_file_local_cache_survives"
      ]
    ]
  ],
  "test_sources_normal": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_sources_normal"
      ]
    ]
  ],
  "test_sources_fallback": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_sources_fallback"
      ]
    ]
  ],
  "test_sources_ignore_primary": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_sources_ignore_primary"
      ]
    ]
  ],
  "test_sources_multiple": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_sources_multiple"
      ]
    ]
  ],
  "test_sources_multiple_missing": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_sources_multiple_missing"
      ]
    ]
  ],
  "test_update_url": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_update_url"
      ]
    ]
  ],
  "test_download_noprogress": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_noprogress"
      ]
    ]
  ],
  "test_download_cache": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_cache"
      ]
    ]
  ],
  "test_download_certificate_verification_failed": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_certificate_verification_failed"
      ]
    ]
  ],
  "test_download_cache_after_clear": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_cache_after_clear"
      ]
    ]
  ],
  "test_download_parallel_from_internet_works": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_parallel_from_internet_works"
      ]
    ]
  ],
  "test_download_parallel_fills_cache": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_parallel_fills_cache"
      ]
    ]
  ],
  "test_download_parallel_with_empty_sources": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_parallel_with_empty_sources"
      ]
    ]
  ],
  "test_download_parallel_with_sources_and_bogus_original": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_parallel_with_sources_and_bogus_original"
      ]
    ]
  ],
  "test_download_parallel_many": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_parallel_many"
      ]
    ]
  ],
  "test_download_parallel_partial_success": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_parallel_partial_success"
      ]
    ]
  ],
  "test_download_parallel_partial_success_lock_safe": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_parallel_partial_success_lock_safe"
      ]
    ]
  ],
  "test_download_parallel_update": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_parallel_update"
      ]
    ]
  ],
  "test_update_parallel": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_update_parallel"
      ]
    ]
  ],
  "test_update_parallel_multi": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_update_parallel_multi"
      ]
    ]
  ],
  "test_url_nocache": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_url_nocache"
      ]
    ]
  ],
  "test_find_by_hash": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_find_by_hash"
      ]
    ]
  ],
  "test_find_invalid": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_find_invalid"
      ]
    ]
  ],
  "test_get_invalid": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_get_invalid"
      ]
    ]
  ],
  "test_local_data_obj": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_local_data_obj"
      ]
    ]
  ],
  "bad_compressed": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "bad_compressed"
      ]
    ]
  ],
  "test_local_data_obj_invalid": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_local_data_obj_invalid"
      ]
    ]
  ],
  "test_local_data_name": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_local_data_name"
      ]
    ]
  ],
  "test_data_name_third_party_package": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_data_name_third_party_package"
      ]
    ]
  ],
  "test_local_data_nonlocalfail": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_local_data_nonlocalfail"
      ]
    ]
  ],
  "test_compute_hash": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_compute_hash"
      ]
    ]
  ],
  "test_get_pkg_data_contents": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_get_pkg_data_contents"
      ]
    ]
  ],
  "test_data_noastropy_fallback": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_data_noastropy_fallback"
      ]
    ]
  ],
  "test_read_unicode": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_read_unicode"
      ]
    ]
  ],
  "test_compressed_stream": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_compressed_stream"
      ]
    ]
  ],
  "test_invalid_location_download_raises_urlerror": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_invalid_location_download_raises_urlerror"
      ]
    ]
  ],
  "test_invalid_location_download_noconnect": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_invalid_location_download_noconnect"
      ]
    ]
  ],
  "test_is_url_in_cache_remote": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_is_url_in_cache_remote"
      ]
    ]
  ],
  "test_is_url_in_cache_local": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_is_url_in_cache_local"
      ]
    ]
  ],
  "test_check_download_cache": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_check_download_cache"
      ]
    ]
  ],
  "test_export_import_roundtrip_one": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_export_import_roundtrip_one"
      ]
    ]
  ],
  "test_export_url_not_present": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_export_url_not_present"
      ]
    ]
  ],
  "test_import_one": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_import_one"
      ]
    ]
  ],
  "test_export_import_roundtrip": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_export_import_roundtrip"
      ]
    ]
  ],
  "test_export_import_roundtrip_stream": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_export_import_roundtrip_stream"
      ]
    ]
  ],
  "test_export_overwrite_flag_works": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_export_overwrite_flag_works"
      ]
    ]
  ],
  "test_export_import_roundtrip_different_location": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_export_import_roundtrip_different_location"
      ]
    ]
  ],
  "test_cache_size_is_zero_when_empty": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_cache_size_is_zero_when_empty"
      ]
    ]
  ],
  "test_cache_size_changes_correctly_when_files_are_added_and_removed": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_cache_size_changes_correctly_when_files_are_added_and_removed"
      ]
    ]
  ],
  "test_cache_contents_agrees_with_get_urls": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_cache_contents_agrees_with_get_urls"
      ]
    ]
  ],
  "test_free_space_checker_huge": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_free_space_checker_huge"
      ]
    ]
  ],
  "test_get_free_space_file_directory": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_get_free_space_file_directory"
      ]
    ]
  ],
  "test_download_file_bogus_settings": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_file_bogus_settings"
      ]
    ]
  ],
  "test_download_file_local_directory": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_file_local_directory"
      ]
    ]
  ],
  "test_download_file_schedules_deletion": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_file_schedules_deletion"
      ]
    ]
  ],
  "test_clear_download_cache_refuses_to_delete_outside_the_cache": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_clear_download_cache_refuses_to_delete_outside_the_cache"
      ]
    ]
  ],
  "test_check_download_cache_finds_bogus_entries": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_check_download_cache_finds_bogus_entries"
      ]
    ]
  ],
  "test_check_download_cache_finds_bogus_subentries": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_check_download_cache_finds_bogus_subentries"
      ]
    ]
  ],
  "test_check_download_cache_cleanup": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_check_download_cache_cleanup"
      ]
    ]
  ],
  "test_download_cache_update_doesnt_damage_cache": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_cache_update_doesnt_damage_cache"
      ]
    ]
  ],
  "check_quietly_ignores_bogus_cache": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_cache_dir_is_actually_a_file",
        "check_quietly_ignores_bogus_cache"
      ]
    ]
  ],
  "test_cache_dir_is_actually_a_file": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_cache_dir_is_actually_a_file"
      ]
    ]
  ],
  "test_get_fileobj_str": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_get_fileobj_str"
      ]
    ]
  ],
  "test_get_fileobj_localpath": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_get_fileobj_localpath"
      ]
    ]
  ],
  "test_get_fileobj_pathlib": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_get_fileobj_pathlib"
      ]
    ]
  ],
  "test_get_fileobj_binary": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_get_fileobj_binary"
      ]
    ]
  ],
  "test_get_fileobj_already_open_text": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_get_fileobj_already_open_text"
      ]
    ]
  ],
  "test_get_fileobj_already_open_binary": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_get_fileobj_already_open_binary"
      ]
    ]
  ],
  "test_get_fileobj_binary_already_open_binary": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_get_fileobj_binary_already_open_binary"
      ]
    ]
  ],
  "test_cache_contents_not_writable": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_cache_contents_not_writable"
      ]
    ]
  ],
  "test_cache_relocatable": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_cache_relocatable"
      ]
    ]
  ],
  "test_get_readable_fileobj_cleans_up_temporary_files": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_get_readable_fileobj_cleans_up_temporary_files"
      ]
    ]
  ],
  "test_path_objects_get_readable_fileobj": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_path_objects_get_readable_fileobj"
      ]
    ]
  ],
  "test_nested_get_readable_fileobj": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_nested_get_readable_fileobj"
      ]
    ]
  ],
  "mockurl": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_file_wrong_size",
        "mockurl"
      ]
    ]
  ],
  "mockurl_builder": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_file_wrong_size",
        "mockurl_builder"
      ]
    ]
  ],
  "test_download_file_wrong_size": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_file_wrong_size"
      ]
    ]
  ],
  "test_can_make_directories_readonly": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_can_make_directories_readonly"
      ]
    ]
  ],
  "test_can_make_files_readonly": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_can_make_files_readonly"
      ]
    ]
  ],
  "test_read_cache_readonly": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_read_cache_readonly"
      ]
    ]
  ],
  "test_download_file_cache_readonly": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_file_cache_readonly"
      ]
    ]
  ],
  "test_import_file_cache_readonly": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_import_file_cache_readonly"
      ]
    ]
  ],
  "test_download_file_cache_readonly_cache_miss": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_file_cache_readonly_cache_miss"
      ]
    ]
  ],
  "test_download_file_cache_readonly_update": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_file_cache_readonly_update"
      ]
    ]
  ],
  "test_check_download_cache_works_if_readonly": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_check_download_cache_works_if_readonly"
      ]
    ]
  ],
  "test_read_cache_fake_readonly": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_read_cache_fake_readonly"
      ]
    ]
  ],
  "test_download_file_cache_fake_readonly": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_file_cache_fake_readonly"
      ]
    ]
  ],
  "test_mkdtemp_cache_fake_readonly": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_mkdtemp_cache_fake_readonly"
      ]
    ]
  ],
  "test_TD_cache_fake_readonly": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_TD_cache_fake_readonly"
      ]
    ]
  ],
  "test_import_file_cache_fake_readonly": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_import_file_cache_fake_readonly"
      ]
    ]
  ],
  "test_download_file_cache_fake_readonly_cache_miss": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_file_cache_fake_readonly_cache_miss"
      ]
    ]
  ],
  "test_download_file_cache_fake_readonly_update": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_file_cache_fake_readonly_update"
      ]
    ]
  ],
  "test_check_download_cache_works_if_fake_readonly": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_check_download_cache_works_if_fake_readonly"
      ]
    ]
  ],
  "test_pkgname_isolation": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_pkgname_isolation"
      ]
    ]
  ],
  "test_transport_cache_via_zip": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_transport_cache_via_zip"
      ]
    ]
  ],
  "test_download_parallel_respects_pkgname": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_parallel_respects_pkgname"
      ]
    ]
  ],
  "test_removal_of_open_files": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_removal_of_open_files"
      ]
    ]
  ],
  "test_update_of_open_files": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_update_of_open_files"
      ]
    ]
  ],
  "test_removal_of_open_files_windows": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_removal_of_open_files_windows"
      ]
    ]
  ],
  "test_update_of_open_files_windows": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_update_of_open_files_windows"
      ]
    ]
  ],
  "test_no_allow_internet": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_no_allow_internet"
      ]
    ]
  ],
  "test_clear_download_cache_not_too_aggressive": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_clear_download_cache_not_too_aggressive"
      ]
    ]
  ],
  "test_clear_download_cache_variants": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_clear_download_cache_variants"
      ]
    ]
  ],
  "test_ftp_tls_auto": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_ftp_tls_auto"
      ]
    ]
  ],
  "test_url_trailing_slash": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_url_trailing_slash"
      ]
    ]
  ],
  "test_empty_url": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_empty_url"
      ]
    ]
  ],
  "test_download_ftp_file_properly_handles_socket_error": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_download_ftp_file_properly_handles_socket_error"
      ]
    ]
  ],
  "test_string_is_url_check": [
    [
      "astropy/utils/tests/test_data.py",
      [
        "test_string_is_url_check"
      ]
    ]
  ],
  "test_dtype_info_name": [
    [
      "astropy/utils/tests/test_data_info.py",
      [
        "test_dtype_info_name"
      ]
    ]
  ],
  "test_info_no_copy_numpy": [
    [
      "astropy/utils/tests/test_data_info.py",
      [
        "test_info_no_copy_numpy"
      ]
    ]
  ],
  "test_info_no_copy_mixin_with_index": [
    [
      "astropy/utils/tests/test_data_info.py",
      [
        "test_info_no_copy_mixin_with_index"
      ]
    ]
  ],
  "test_info_no_copy_skycoord": [
    [
      "astropy/utils/tests/test_data_info.py",
      [
        "test_info_no_copy_skycoord"
      ]
    ]
  ],
  "set_private": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_deprecated_attribute",
        "DummyClass",
        "set_private"
      ]
    ]
  ],
  "test_deprecated_attribute": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_deprecated_attribute"
      ]
    ]
  ],
  "test_deprecated_class": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_deprecated_class"
      ]
    ]
  ],
  "test_deprecated_class_with_new_method": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_deprecated_class_with_new_method"
      ]
    ]
  ],
  "test_deprecated_class_with_super": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_deprecated_class_with_super"
      ]
    ]
  ],
  "test_deprecated_class_with_custom_metaclass": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_deprecated_class_with_custom_metaclass"
      ]
    ]
  ],
  "B": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_deprecated_static_and_classmethod",
        "A",
        "B"
      ]
    ]
  ],
  "C": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_deprecated_static_and_classmethod",
        "A",
        "C"
      ]
    ]
  ],
  "test_deprecated_static_and_classmethod": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_deprecated_static_and_classmethod"
      ]
    ]
  ],
  "test1": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_deprecated_argument",
        "Test",
        "test1"
      ]
    ],
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_deprecated_argument",
        "test1"
      ]
    ]
  ],
  "test2": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_deprecated_argument",
        "Test",
        "test2"
      ]
    ]
  ],
  "test3": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_deprecated_argument",
        "Test",
        "test3"
      ]
    ]
  ],
  "test4": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_deprecated_argument",
        "Test",
        "test4"
      ]
    ]
  ],
  "test_deprecated_argument": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_deprecated_argument"
      ]
    ]
  ],
  "test_deprecated_argument_custom_message": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_deprecated_argument_custom_message"
      ]
    ]
  ],
  "test_deprecated_argument_in_kwargs": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_deprecated_argument_in_kwargs"
      ]
    ]
  ],
  "test_deprecated_argument_relaxed": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_deprecated_argument_relaxed"
      ]
    ]
  ],
  "test_deprecated_argument_pending": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_deprecated_argument_pending"
      ]
    ]
  ],
  "test_deprecated_argument_multi_deprecation": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_deprecated_argument_multi_deprecation"
      ]
    ]
  ],
  "test_deprecated_argument_multi_deprecation_2": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_deprecated_argument_multi_deprecation_2"
      ]
    ]
  ],
  "test_deprecated_argument_not_allowed_use": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_deprecated_argument_not_allowed_use"
      ]
    ]
  ],
  "test_deprecated_argument_remove": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_deprecated_argument_remove"
      ]
    ]
  ],
  "foo": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_sharedmethod_reuse_on_subclasses",
        "AMeta",
        "foo"
      ]
    ],
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_sharedmethod_reuse_on_subclasses",
        "A",
        "foo"
      ]
    ]
  ],
  "test_sharedmethod_reuse_on_subclasses": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_sharedmethod_reuse_on_subclasses"
      ]
    ]
  ],
  "test_classproperty_docstring": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_classproperty_docstring"
      ]
    ]
  ],
  "test_classproperty_lazy_threadsafe": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_classproperty_lazy_threadsafe"
      ]
    ]
  ],
  "test_lazyproperty_threadsafe": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_lazyproperty_threadsafe"
      ]
    ]
  ],
  "test_format_doc_stringInput_simple": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_format_doc_stringInput_simple"
      ]
    ]
  ],
  "testfunc2": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_format_doc_stringInput_format",
        "testfunc2"
      ]
    ],
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_format_doc_objectInput_format",
        "testfunc2"
      ]
    ]
  ],
  "testfunc3": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_format_doc_stringInput_format",
        "testfunc3"
      ]
    ],
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_format_doc_objectInput_format",
        "testfunc3"
      ]
    ]
  ],
  "test_format_doc_stringInput_format": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_format_doc_stringInput_format"
      ]
    ]
  ],
  "docstring_fail": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_format_doc_objectInput_simple",
        "docstring_fail"
      ]
    ]
  ],
  "docstring0": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_format_doc_objectInput_simple",
        "docstring0"
      ]
    ]
  ],
  "testfunc_1": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_format_doc_objectInput_simple",
        "testfunc_1"
      ]
    ]
  ],
  "testfunc_2": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_format_doc_objectInput_simple",
        "testfunc_2"
      ]
    ]
  ],
  "test_format_doc_objectInput_simple": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_format_doc_objectInput_simple"
      ]
    ]
  ],
  "docstring": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_format_doc_objectInput_format",
        "docstring"
      ]
    ]
  ],
  "docstring2": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_format_doc_objectInput_format",
        "docstring2"
      ]
    ]
  ],
  "test_format_doc_objectInput_format": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_format_doc_objectInput_format"
      ]
    ]
  ],
  "test_format_doc_selfInput_simple": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_format_doc_selfInput_simple"
      ]
    ]
  ],
  "test_format_doc_selfInput_format": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_format_doc_selfInput_format"
      ]
    ]
  ],
  "test_format_doc_onMethod": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_format_doc_onMethod"
      ]
    ]
  ],
  "test_format_doc_onClass": [
    [
      "astropy/utils/tests/test_decorators.py",
      [
        "test_format_doc_onClass"
      ]
    ]
  ],
  "test_diff_values_false": [
    [
      "astropy/utils/tests/test_diff.py",
      [
        "test_diff_values_false"
      ]
    ]
  ],
  "test_diff_values_true": [
    [
      "astropy/utils/tests/test_diff.py",
      [
        "test_diff_values_true"
      ]
    ]
  ],
  "test_float_comparison": [
    [
      "astropy/utils/tests/test_diff.py",
      [
        "test_float_comparison"
      ]
    ]
  ],
  "test_diff_types": [
    [
      "astropy/utils/tests/test_diff.py",
      [
        "test_diff_types"
      ]
    ]
  ],
  "test_diff_numeric_scalar_types": [
    [
      "astropy/utils/tests/test_diff.py",
      [
        "test_diff_numeric_scalar_types"
      ]
    ]
  ],
  "test_array_comparison": [
    [
      "astropy/utils/tests/test_diff.py",
      [
        "test_array_comparison"
      ]
    ]
  ],
  "test_diff_shaped_array_comparison": [
    [
      "astropy/utils/tests/test_diff.py",
      [
        "test_diff_shaped_array_comparison"
      ]
    ]
  ],
  "test_tablediff": [
    [
      "astropy/utils/tests/test_diff.py",
      [
        "test_tablediff"
      ]
    ]
  ],
  "test_where_not_allclose": [
    [
      "astropy/utils/tests/test_diff.py",
      [
        "test_where_not_allclose"
      ]
    ]
  ],
  "test_pkg_finder": [
    [
      "astropy/utils/tests/test_introspection.py",
      [
        "test_pkg_finder"
      ]
    ]
  ],
  "test_find_current_mod": [
    [
      "astropy/utils/tests/test_introspection.py",
      [
        "test_find_current_mod"
      ]
    ]
  ],
  "test_find_mod_objs": [
    [
      "astropy/utils/tests/test_introspection.py",
      [
        "test_find_mod_objs"
      ]
    ]
  ],
  "test_minversion": [
    [
      "astropy/utils/tests/test_introspection.py",
      [
        "test_minversion"
      ]
    ]
  ],
  "test_find_current_module_bundle": [
    [
      "astropy/utils/tests/test_introspection.py",
      [
        "test_find_current_module_bundle"
      ]
    ]
  ],
  "test_mapping_init": [
    [
      "astropy/utils/tests/test_metadata.py",
      [
        "MetaBaseTest",
        "test_mapping_init"
      ]
    ]
  ],
  "test_non_mapping_init": [
    [
      "astropy/utils/tests/test_metadata.py",
      [
        "MetaBaseTest",
        "test_non_mapping_init"
      ]
    ]
  ],
  "test_mapping_set": [
    [
      "astropy/utils/tests/test_metadata.py",
      [
        "MetaBaseTest",
        "test_mapping_set"
      ]
    ]
  ],
  "test_non_mapping_set": [
    [
      "astropy/utils/tests/test_metadata.py",
      [
        "MetaBaseTest",
        "test_non_mapping_set"
      ]
    ]
  ],
  "test_meta_fits_header": [
    [
      "astropy/utils/tests/test_metadata.py",
      [
        "MetaBaseTest",
        "test_meta_fits_header"
      ]
    ]
  ],
  "test_metadata_merging_conflict_exception": [
    [
      "astropy/utils/tests/test_metadata.py",
      [
        "test_metadata_merging_conflict_exception"
      ]
    ]
  ],
  "test_metadata_merging": [
    [
      "astropy/utils/tests/test_metadata.py",
      [
        "test_metadata_merging"
      ]
    ]
  ],
  "test_metadata_merging_new_strategy": [
    [
      "astropy/utils/tests/test_metadata.py",
      [
        "test_metadata_merging_new_strategy"
      ]
    ]
  ],
  "test_common_dtype_string": [
    [
      "astropy/utils/tests/test_metadata.py",
      [
        "test_common_dtype_string"
      ]
    ]
  ],
  "test_common_dtype_basic": [
    [
      "astropy/utils/tests/test_metadata.py",
      [
        "test_common_dtype_basic"
      ]
    ]
  ],
  "test_signal_number_to_name_no_failure": [
    [
      "astropy/utils/tests/test_misc.py",
      [
        "test_signal_number_to_name_no_failure"
      ]
    ]
  ],
  "test_api_lookup": [
    [
      "astropy/utils/tests/test_misc.py",
      [
        "test_api_lookup"
      ]
    ]
  ],
  "test_skip_hidden": [
    [
      "astropy/utils/tests/test_misc.py",
      [
        "test_skip_hidden"
      ]
    ]
  ],
  "test_JsonCustomEncoder": [
    [
      "astropy/utils/tests/test_misc.py",
      [
        "test_JsonCustomEncoder"
      ]
    ]
  ],
  "test_JsonCustomEncoder_FITS_rec_from_files": [
    [
      "astropy/utils/tests/test_misc.py",
      [
        "test_JsonCustomEncoder_FITS_rec_from_files"
      ]
    ]
  ],
  "test_set_locale": [
    [
      "astropy/utils/tests/test_misc.py",
      [
        "test_set_locale"
      ]
    ]
  ],
  "test_dtype_bytes_or_chars": [
    [
      "astropy/utils/tests/test_misc.py",
      [
        "test_dtype_bytes_or_chars"
      ]
    ]
  ],
  "_docstring_canary": [
    [
      "astropy/utils/tests/test_parsing.py",
      [
        "_docstring_canary"
      ]
    ]
  ],
  "test_generate_parser": [
    [
      "astropy/utils/tests/test_parsing.py",
      [
        "test_generate_parser"
      ]
    ]
  ],
  "test_check_broadcast": [
    [
      "astropy/utils/tests/test_shapes.py",
      [
        "test_check_broadcast"
      ]
    ]
  ],
  "test_unbroadcast": [
    [
      "astropy/utils/tests/test_shapes.py",
      [
        "test_unbroadcast"
      ]
    ]
  ],
  "test_ScienceState_and_Context": [
    [
      "astropy/utils/tests/test_state.py",
      [
        "test_ScienceState_and_Context"
      ]
    ]
  ],
  "test_writer": [
    [
      "astropy/utils/tests/test_xml.py",
      [
        "test_writer"
      ]
    ]
  ],
  "test_check_id": [
    [
      "astropy/utils/tests/test_xml.py",
      [
        "test_check_id"
      ]
    ]
  ],
  "test_fix_id": [
    [
      "astropy/utils/tests/test_xml.py",
      [
        "test_fix_id"
      ]
    ]
  ],
  "test_check_token": [
    [
      "astropy/utils/tests/test_xml.py",
      [
        "test_check_token"
      ]
    ]
  ],
  "test_check_mime_content_type": [
    [
      "astropy/utils/tests/test_xml.py",
      [
        "test_check_mime_content_type"
      ]
    ]
  ],
  "test_check_anyuri": [
    [
      "astropy/utils/tests/test_xml.py",
      [
        "test_check_anyuri"
      ]
    ]
  ],
  "test_unescape_all": [
    [
      "astropy/utils/tests/test_xml.py",
      [
        "test_unescape_all"
      ]
    ]
  ],
  "test_escape_xml": [
    [
      "astropy/utils/tests/test_xml.py",
      [
        "test_escape_xml"
      ]
    ]
  ],
  "test_escape_xml_without_bleach": [
    [
      "astropy/utils/tests/test_xml.py",
      [
        "test_escape_xml_without_bleach"
      ]
    ]
  ],
  "test_escape_xml_with_bleach": [
    [
      "astropy/utils/tests/test_xml.py",
      [
        "test_escape_xml_with_bleach"
      ]
    ]
  ],
  "_convert_to_fd_or_read_function": [
    [
      "astropy/utils/xml/iterparser.py",
      [
        "_convert_to_fd_or_read_function"
      ]
    ]
  ],
  "end": [
    [
      "astropy/utils/xml/iterparser.py",
      [
        "_fast_iterparse",
        "end"
      ]
    ],
    [
      "astropy/utils/xml/writer.py",
      [
        "XMLWriter",
        "end"
      ]
    ]
  ],
  "_fast_iterparse": [
    [
      "astropy/utils/xml/iterparser.py",
      [
        "_fast_iterparse"
      ]
    ]
  ],
  "get_xml_iterator": [
    [
      "astropy/utils/xml/iterparser.py",
      [
        "get_xml_iterator"
      ]
    ]
  ],
  "get_xml_encoding": [
    [
      "astropy/utils/xml/iterparser.py",
      [
        "get_xml_encoding"
      ]
    ]
  ],
  "xml_readlines": [
    [
      "astropy/utils/xml/iterparser.py",
      [
        "xml_readlines"
      ]
    ]
  ],
  "test_iterparser_over_read_simple": [
    [
      "astropy/utils/xml/tests/test_iterparse.py",
      [
        "test_iterparser_over_read_simple"
      ]
    ]
  ],
  "unescape_all": [
    [
      "astropy/utils/xml/unescaper.py",
      [
        "unescape_all"
      ]
    ]
  ],
  "_unescape_str": [
    [
      "astropy/utils/xml/unescaper.py",
      [
        "_unescape_str"
      ]
    ]
  ],
  "_unescape_bytes": [
    [
      "astropy/utils/xml/unescaper.py",
      [
        "_unescape_bytes"
      ]
    ]
  ],
  "_flush": [
    [
      "astropy/utils/xml/writer.py",
      [
        "XMLWriter",
        "_flush"
      ]
    ]
  ],
  "xml_cleaning_method": [
    [
      "astropy/utils/xml/writer.py",
      [
        "XMLWriter",
        "xml_cleaning_method"
      ]
    ]
  ],
  "tag": [
    [
      "astropy/utils/xml/writer.py",
      [
        "XMLWriter",
        "tag"
      ]
    ]
  ],
  "element": [
    [
      "astropy/utils/xml/writer.py",
      [
        "XMLWriter",
        "element"
      ]
    ]
  ],
  "get_indentation": [
    [
      "astropy/utils/xml/writer.py",
      [
        "XMLWriter",
        "get_indentation"
      ]
    ]
  ],
  "get_indentation_spaces": [
    [
      "astropy/utils/xml/writer.py",
      [
        "XMLWriter",
        "get_indentation_spaces"
      ]
    ]
  ],
  "object_attrs": [
    [
      "astropy/utils/xml/writer.py",
      [
        "XMLWriter",
        "object_attrs"
      ]
    ]
  ],
  "split_version": [
    [
      "astropy/version.py",
      [
        "split_version"
      ]
    ]
  ],
  "hist": [
    [
      "astropy/visualization/hist.py",
      [
        "hist"
      ]
    ]
  ],
  "get_limits": [
    [
      "astropy/visualization/interval.py",
      [
        "BaseInterval",
        "get_limits"
      ]
    ],
    [
      "astropy/visualization/interval.py",
      [
        "ManualInterval",
        "get_limits"
      ]
    ],
    [
      "astropy/visualization/interval.py",
      [
        "MinMaxInterval",
        "get_limits"
      ]
    ],
    [
      "astropy/visualization/interval.py",
      [
        "AsymmetricPercentileInterval",
        "get_limits"
      ]
    ],
    [
      "astropy/visualization/interval.py",
      [
        "ZScaleInterval",
        "get_limits"
      ]
    ]
  ],
  "compute_intensity": [
    [
      "astropy/visualization/lupton_rgb.py",
      [
        "compute_intensity"
      ]
    ]
  ],
  "make_rgb_image": [
    [
      "astropy/visualization/lupton_rgb.py",
      [
        "Mapping",
        "make_rgb_image"
      ]
    ]
  ],
  "intensity": [
    [
      "astropy/visualization/lupton_rgb.py",
      [
        "Mapping",
        "intensity"
      ]
    ]
  ],
  "map_intensity_to_uint8": [
    [
      "astropy/visualization/lupton_rgb.py",
      [
        "Mapping",
        "map_intensity_to_uint8"
      ]
    ],
    [
      "astropy/visualization/lupton_rgb.py",
      [
        "LinearMapping",
        "map_intensity_to_uint8"
      ]
    ],
    [
      "astropy/visualization/lupton_rgb.py",
      [
        "AsinhMapping",
        "map_intensity_to_uint8"
      ]
    ]
  ],
  "_convert_images_to_uint8": [
    [
      "astropy/visualization/lupton_rgb.py",
      [
        "Mapping",
        "_convert_images_to_uint8"
      ]
    ]
  ],
  "make_lupton_rgb": [
    [
      "astropy/visualization/lupton_rgb.py",
      [
        "make_lupton_rgb"
      ]
    ]
  ],
  "_set_limits": [
    [
      "astropy/visualization/mpl_normalize.py",
      [
        "ImageNormalize",
        "_set_limits"
      ]
    ]
  ],
  "simple_norm": [
    [
      "astropy/visualization/mpl_normalize.py",
      [
        "simple_norm"
      ]
    ]
  ],
  "imshow_norm": [
    [
      "astropy/visualization/mpl_normalize.py",
      [
        "imshow_norm"
      ]
    ]
  ],
  "fits2bitmap": [
    [
      "astropy/visualization/scripts/fits2bitmap.py",
      [
        "fits2bitmap"
      ]
    ]
  ],
  "test_function": [
    [
      "astropy/visualization/scripts/tests/test_fits2bitmap.py",
      [
        "TestFits2Bitmap",
        "test_function"
      ]
    ]
  ],
  "test_script": [
    [
      "astropy/visualization/scripts/tests/test_fits2bitmap.py",
      [
        "TestFits2Bitmap",
        "test_script"
      ]
    ]
  ],
  "test_exten_num": [
    [
      "astropy/visualization/scripts/tests/test_fits2bitmap.py",
      [
        "TestFits2Bitmap",
        "test_exten_num"
      ]
    ]
  ],
  "test_exten_name": [
    [
      "astropy/visualization/scripts/tests/test_fits2bitmap.py",
      [
        "TestFits2Bitmap",
        "test_exten_name"
      ]
    ]
  ],
  "test_compressed_fits": [
    [
      "astropy/visualization/scripts/tests/test_fits2bitmap.py",
      [
        "TestFits2Bitmap",
        "test_compressed_fits"
      ]
    ]
  ],
  "test_orientation": [
    [
      "astropy/visualization/scripts/tests/test_fits2bitmap.py",
      [
        "TestFits2Bitmap",
        "test_orientation"
      ]
    ]
  ],
  "_logn": [
    [
      "astropy/visualization/stretch.py",
      [
        "_logn"
      ]
    ]
  ],
  "_prepare": [
    [
      "astropy/visualization/stretch.py",
      [
        "_prepare"
      ]
    ]
  ],
  "_supports_invalid_kw": [
    [
      "astropy/visualization/stretch.py",
      [
        "BaseStretch",
        "_supports_invalid_kw"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "SqrtStretch",
        "_supports_invalid_kw"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "PowerStretch",
        "_supports_invalid_kw"
      ]
    ],
    [
      "astropy/visualization/stretch.py",
      [
        "LogStretch",
        "_supports_invalid_kw"
      ]
    ]
  ],
  "test_hist_basic": [
    [
      "astropy/visualization/tests/test_histogram.py",
      [
        "test_hist_basic"
      ]
    ]
  ],
  "test_hist_specify_ax": [
    [
      "astropy/visualization/tests/test_histogram.py",
      [
        "test_hist_specify_ax"
      ]
    ]
  ],
  "test_hist_autobin": [
    [
      "astropy/visualization/tests/test_histogram.py",
      [
        "test_hist_autobin"
      ]
    ]
  ],
  "test_histogram_pathological_input": [
    [
      "astropy/visualization/tests/test_histogram.py",
      [
        "test_histogram_pathological_input"
      ]
    ]
  ],
  "test_manual": [
    [
      "astropy/visualization/tests/test_interval.py",
      [
        "TestInterval",
        "test_manual"
      ]
    ]
  ],
  "test_manual_defaults": [
    [
      "astropy/visualization/tests/test_interval.py",
      [
        "TestInterval",
        "test_manual_defaults"
      ]
    ]
  ],
  "test_manual_zero_limit": [
    [
      "astropy/visualization/tests/test_interval.py",
      [
        "TestInterval",
        "test_manual_zero_limit"
      ]
    ]
  ],
  "test_manual_defaults_with_nan": [
    [
      "astropy/visualization/tests/test_interval.py",
      [
        "TestInterval",
        "test_manual_defaults_with_nan"
      ]
    ]
  ],
  "test_minmax": [
    [
      "astropy/visualization/tests/test_interval.py",
      [
        "TestInterval",
        "test_minmax"
      ]
    ]
  ],
  "test_asymmetric_percentile": [
    [
      "astropy/visualization/tests/test_interval.py",
      [
        "TestInterval",
        "test_asymmetric_percentile"
      ]
    ]
  ],
  "test_asymmetric_percentile_nsamples": [
    [
      "astropy/visualization/tests/test_interval.py",
      [
        "TestInterval",
        "test_asymmetric_percentile_nsamples"
      ]
    ]
  ],
  "test_zscale": [
    [
      "astropy/visualization/tests/test_interval.py",
      [
        "test_zscale"
      ]
    ]
  ],
  "test_zscale_npoints": [
    [
      "astropy/visualization/tests/test_interval.py",
      [
        "test_zscale_npoints"
      ]
    ]
  ],
  "test_integers": [
    [
      "astropy/visualization/tests/test_interval.py",
      [
        "test_integers"
      ]
    ]
  ],
  "test_constant_data": [
    [
      "astropy/visualization/tests/test_interval.py",
      [
        "test_constant_data"
      ]
    ]
  ],
  "display_rgb": [
    [
      "astropy/visualization/tests/test_lupton_rgb.py",
      [
        "display_rgb"
      ]
    ]
  ],
  "saturate": [
    [
      "astropy/visualization/tests/test_lupton_rgb.py",
      [
        "saturate"
      ]
    ]
  ],
  "random_array": [
    [
      "astropy/visualization/tests/test_lupton_rgb.py",
      [
        "random_array"
      ]
    ]
  ],
  "test_compute_intensity_1_float": [
    [
      "astropy/visualization/tests/test_lupton_rgb.py",
      [
        "test_compute_intensity_1_float"
      ]
    ]
  ],
  "test_compute_intensity_1_uint": [
    [
      "astropy/visualization/tests/test_lupton_rgb.py",
      [
        "test_compute_intensity_1_uint"
      ]
    ]
  ],
  "test_compute_intensity_3_float": [
    [
      "astropy/visualization/tests/test_lupton_rgb.py",
      [
        "test_compute_intensity_3_float"
      ]
    ]
  ],
  "test_compute_intensity_3_uint": [
    [
      "astropy/visualization/tests/test_lupton_rgb.py",
      [
        "test_compute_intensity_3_uint"
      ]
    ]
  ],
  "convolve_with_noise": [
    [
      "astropy/visualization/tests/test_lupton_rgb.py",
      [
        "TestLuptonRgb",
        "setup_method",
        "convolve_with_noise"
      ]
    ]
  ],
  "test_Asinh": [
    [
      "astropy/visualization/tests/test_lupton_rgb.py",
      [
        "TestLuptonRgb",
        "test_Asinh"
      ]
    ]
  ],
  "test_AsinhZscale": [
    [
      "astropy/visualization/tests/test_lupton_rgb.py",
      [
        "TestLuptonRgb",
        "test_AsinhZscale"
      ]
    ]
  ],
  "test_AsinhZscaleIntensity": [
    [
      "astropy/visualization/tests/test_lupton_rgb.py",
      [
        "TestLuptonRgb",
        "test_AsinhZscaleIntensity"
      ]
    ]
  ],
  "test_AsinhZscaleIntensityPedestal": [
    [
      "astropy/visualization/tests/test_lupton_rgb.py",
      [
        "TestLuptonRgb",
        "test_AsinhZscaleIntensityPedestal"
      ]
    ]
  ],
  "test_AsinhZscaleIntensityBW": [
    [
      "astropy/visualization/tests/test_lupton_rgb.py",
      [
        "TestLuptonRgb",
        "test_AsinhZscaleIntensityBW"
      ]
    ]
  ],
  "test_make_rgb": [
    [
      "astropy/visualization/tests/test_lupton_rgb.py",
      [
        "TestLuptonRgb",
        "test_make_rgb"
      ]
    ]
  ],
  "test_make_rgb_saturated_fix": [
    [
      "astropy/visualization/tests/test_lupton_rgb.py",
      [
        "TestLuptonRgb",
        "test_make_rgb_saturated_fix"
      ]
    ]
  ],
  "test_linear": [
    [
      "astropy/visualization/tests/test_lupton_rgb.py",
      [
        "TestLuptonRgb",
        "test_linear"
      ]
    ],
    [
      "astropy/visualization/tests/test_norm.py",
      [
        "TestImageScaling",
        "test_linear"
      ]
    ]
  ],
  "test_linear_min_max": [
    [
      "astropy/visualization/tests/test_lupton_rgb.py",
      [
        "TestLuptonRgb",
        "test_linear_min_max"
      ]
    ]
  ],
  "test_saturated": [
    [
      "astropy/visualization/tests/test_lupton_rgb.py",
      [
        "TestLuptonRgb",
        "test_saturated"
      ]
    ]
  ],
  "test_different_shapes_asserts": [
    [
      "astropy/visualization/tests/test_lupton_rgb.py",
      [
        "TestLuptonRgb",
        "test_different_shapes_asserts"
      ]
    ]
  ],
  "test_normalize_error_message": [
    [
      "astropy/visualization/tests/test_norm.py",
      [
        "test_normalize_error_message"
      ]
    ]
  ],
  "test_invalid_interval": [
    [
      "astropy/visualization/tests/test_norm.py",
      [
        "TestNormalize",
        "test_invalid_interval"
      ]
    ]
  ],
  "test_invalid_stretch": [
    [
      "astropy/visualization/tests/test_norm.py",
      [
        "TestNormalize",
        "test_invalid_stretch"
      ]
    ],
    [
      "astropy/visualization/tests/test_norm.py",
      [
        "TestImageScaling",
        "test_invalid_stretch"
      ]
    ]
  ],
  "test_stretch_none": [
    [
      "astropy/visualization/tests/test_norm.py",
      [
        "TestNormalize",
        "test_stretch_none"
      ]
    ]
  ],
  "test_implicit_autoscale": [
    [
      "astropy/visualization/tests/test_norm.py",
      [
        "TestNormalize",
        "test_implicit_autoscale"
      ]
    ]
  ],
  "test_call_clip": [
    [
      "astropy/visualization/tests/test_norm.py",
      [
        "TestNormalize",
        "test_call_clip"
      ]
    ]
  ],
  "test_masked_clip": [
    [
      "astropy/visualization/tests/test_norm.py",
      [
        "TestNormalize",
        "test_masked_clip"
      ]
    ]
  ],
  "test_masked_noclip": [
    [
      "astropy/visualization/tests/test_norm.py",
      [
        "TestNormalize",
        "test_masked_noclip"
      ]
    ]
  ],
  "test_invalid_data": [
    [
      "astropy/visualization/tests/test_norm.py",
      [
        "TestNormalize",
        "test_invalid_data"
      ]
    ]
  ],
  "test_invalid_keyword": [
    [
      "astropy/visualization/tests/test_norm.py",
      [
        "TestNormalize",
        "test_invalid_keyword"
      ]
    ]
  ],
  "test_sqrt": [
    [
      "astropy/visualization/tests/test_norm.py",
      [
        "TestImageScaling",
        "test_sqrt"
      ]
    ]
  ],
  "test_sqrt_invalid_kw": [
    [
      "astropy/visualization/tests/test_norm.py",
      [
        "TestImageScaling",
        "test_sqrt_invalid_kw"
      ]
    ]
  ],
  "test_log": [
    [
      "astropy/visualization/tests/test_norm.py",
      [
        "TestImageScaling",
        "test_log"
      ]
    ]
  ],
  "test_log_with_log_a": [
    [
      "astropy/visualization/tests/test_norm.py",
      [
        "TestImageScaling",
        "test_log_with_log_a"
      ]
    ]
  ],
  "test_asinh": [
    [
      "astropy/visualization/tests/test_norm.py",
      [
        "TestImageScaling",
        "test_asinh"
      ]
    ]
  ],
  "test_asinh_with_asinh_a": [
    [
      "astropy/visualization/tests/test_norm.py",
      [
        "TestImageScaling",
        "test_asinh_with_asinh_a"
      ]
    ]
  ],
  "test_imshow_norm": [
    [
      "astropy/visualization/tests/test_norm.py",
      [
        "test_imshow_norm"
      ]
    ]
  ],
  "test_no_clip": [
    [
      "astropy/visualization/tests/test_stretch.py",
      [
        "TestStretch",
        "test_no_clip"
      ]
    ]
  ],
  "test_clip_ndimensional": [
    [
      "astropy/visualization/tests/test_stretch.py",
      [
        "TestStretch",
        "test_clip_ndimensional"
      ]
    ]
  ],
  "test_inplace": [
    [
      "astropy/visualization/tests/test_stretch.py",
      [
        "TestStretch",
        "test_inplace"
      ]
    ]
  ],
  "test_round_trip": [
    [
      "astropy/visualization/tests/test_stretch.py",
      [
        "TestStretch",
        "test_round_trip"
      ]
    ]
  ],
  "test_inplace_roundtrip": [
    [
      "astropy/visualization/tests/test_stretch.py",
      [
        "TestStretch",
        "test_inplace_roundtrip"
      ]
    ]
  ],
  "test_double_inverse": [
    [
      "astropy/visualization/tests/test_stretch.py",
      [
        "TestStretch",
        "test_double_inverse"
      ]
    ]
  ],
  "test_inverted": [
    [
      "astropy/visualization/tests/test_stretch.py",
      [
        "TestStretch",
        "test_inverted"
      ]
    ]
  ],
  "test_chaining": [
    [
      "astropy/visualization/tests/test_stretch.py",
      [
        "TestStretch",
        "test_chaining"
      ]
    ]
  ],
  "test_clip_invalid": [
    [
      "astropy/visualization/tests/test_stretch.py",
      [
        "test_clip_invalid"
      ]
    ]
  ],
  "test_invalid_powerdist_a": [
    [
      "astropy/visualization/tests/test_stretch.py",
      [
        "test_invalid_powerdist_a"
      ]
    ]
  ],
  "test_invalid_power_log_a": [
    [
      "astropy/visualization/tests/test_stretch.py",
      [
        "test_invalid_power_log_a"
      ]
    ]
  ],
  "test_invalid_sinh_a": [
    [
      "astropy/visualization/tests/test_stretch.py",
      [
        "test_invalid_sinh_a"
      ]
    ]
  ],
  "test_histeqstretch_invalid": [
    [
      "astropy/visualization/tests/test_stretch.py",
      [
        "test_histeqstretch_invalid"
      ]
    ]
  ],
  "get_ticklabels": [
    [
      "astropy/visualization/tests/test_time.py",
      [
        "get_ticklabels"
      ]
    ]
  ],
  "test_formatter_locator": [
    [
      "astropy/visualization/tests/test_time.py",
      [
        "test_formatter_locator"
      ]
    ]
  ],
  "test_formats": [
    [
      "astropy/visualization/tests/test_time.py",
      [
        "test_formats"
      ]
    ]
  ],
  "test_auto_formats": [
    [
      "astropy/visualization/tests/test_time.py",
      [
        "test_auto_formats"
      ]
    ]
  ],
  "test_formats_simplify": [
    [
      "astropy/visualization/tests/test_time.py",
      [
        "test_formats_simplify"
      ]
    ]
  ],
  "test_plot": [
    [
      "astropy/visualization/tests/test_time.py",
      [
        "test_plot"
      ]
    ]
  ],
  "test_nested": [
    [
      "astropy/visualization/tests/test_time.py",
      [
        "test_nested"
      ]
    ],
    [
      "astropy/visualization/tests/test_units.py",
      [
        "test_nested"
      ]
    ]
  ],
  "test_units_errbarr": [
    [
      "astropy/visualization/tests/test_units.py",
      [
        "test_units_errbarr"
      ]
    ]
  ],
  "test_quantity_subclass": [
    [
      "astropy/visualization/tests/test_units.py",
      [
        "test_quantity_subclass"
      ]
    ]
  ],
  "test_empty_hist": [
    [
      "astropy/visualization/tests/test_units.py",
      [
        "test_empty_hist"
      ]
    ]
  ],
  "test_radian_formatter": [
    [
      "astropy/visualization/tests/test_units.py",
      [
        "test_radian_formatter"
      ]
    ]
  ],
  "tick_values": [
    [
      "astropy/visualization/time.py",
      [
        "time_support",
        "AstropyTimeLocator",
        "tick_values"
      ]
    ]
  ],
  "format_ticks": [
    [
      "astropy/visualization/time.py",
      [
        "time_support",
        "AstropyTimeFormatter",
        "format_ticks"
      ]
    ]
  ],
  "format_1": [
    [
      "astropy/visualization/time.py",
      [
        "time_support",
        "MplTimeConverter",
        "format_1"
      ]
    ]
  ],
  "default_units": [
    [
      "astropy/visualization/time.py",
      [
        "time_support",
        "MplTimeConverter",
        "default_units"
      ]
    ],
    [
      "astropy/visualization/units.py",
      [
        "quantity_support",
        "MplQuantityConverter",
        "default_units"
      ]
    ]
  ],
  "convert": [
    [
      "astropy/visualization/time.py",
      [
        "time_support",
        "MplTimeConverter",
        "convert"
      ]
    ],
    [
      "astropy/visualization/units.py",
      [
        "quantity_support",
        "MplQuantityConverter",
        "convert"
      ]
    ]
  ],
  "axisinfo": [
    [
      "astropy/visualization/time.py",
      [
        "time_support",
        "MplTimeConverter",
        "axisinfo"
      ]
    ],
    [
      "astropy/visualization/units.py",
      [
        "quantity_support",
        "MplQuantityConverter",
        "axisinfo"
      ]
    ]
  ],
  "time_support": [
    [
      "astropy/visualization/time.py",
      [
        "time_support"
      ]
    ]
  ],
  "all_issubclass": [
    [
      "astropy/visualization/units.py",
      [
        "quantity_support",
        "all_issubclass"
      ]
    ]
  ],
  "rad_fn": [
    [
      "astropy/visualization/units.py",
      [
        "quantity_support",
        "rad_fn"
      ]
    ]
  ],
  "quantity_support": [
    [
      "astropy/visualization/units.py",
      [
        "quantity_support"
      ]
    ]
  ],
  "get_minpad": [
    [
      "astropy/visualization/wcsaxes/axislabels.py",
      [
        "AxisLabels",
        "get_minpad"
      ]
    ]
  ],
  "set_visible_axes": [
    [
      "astropy/visualization/wcsaxes/axislabels.py",
      [
        "AxisLabels",
        "set_visible_axes"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/ticklabels.py",
      [
        "TickLabels",
        "set_visible_axes"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/ticks.py",
      [
        "Ticks",
        "set_visible_axes"
      ]
    ]
  ],
  "get_visible_axes": [
    [
      "astropy/visualization/wcsaxes/axislabels.py",
      [
        "AxisLabels",
        "get_visible_axes"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/ticklabels.py",
      [
        "TickLabels",
        "get_visible_axes"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/ticks.py",
      [
        "Ticks",
        "get_visible_axes"
      ]
    ]
  ],
  "set_minpad": [
    [
      "astropy/visualization/wcsaxes/axislabels.py",
      [
        "AxisLabels",
        "set_minpad"
      ]
    ]
  ],
  "set_visibility_rule": [
    [
      "astropy/visualization/wcsaxes/axislabels.py",
      [
        "AxisLabels",
        "set_visibility_rule"
      ]
    ]
  ],
  "get_visibility_rule": [
    [
      "astropy/visualization/wcsaxes/axislabels.py",
      [
        "AxisLabels",
        "get_visibility_rule"
      ]
    ]
  ],
  "draw": [
    [
      "astropy/visualization/wcsaxes/axislabels.py",
      [
        "AxisLabels",
        "draw"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/core.py",
      [
        "_WCSAxesArtist",
        "draw"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/core.py",
      [
        "WCSAxes",
        "draw"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "BaseFrame",
        "draw"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "RectangularFrame1D",
        "draw"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "EllipticalFrame",
        "draw"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/ticklabels.py",
      [
        "TickLabels",
        "draw"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/ticks.py",
      [
        "Ticks",
        "draw"
      ]
    ]
  ],
  "wrap_angle_at": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "wrap_angle_at"
      ]
    ]
  ],
  "grid": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "grid"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/coordinates_map.py",
      [
        "CoordinatesMap",
        "grid"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/core.py",
      [
        "WCSAxes",
        "grid"
      ]
    ]
  ],
  "set_coord_type": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "set_coord_type"
      ]
    ]
  ],
  "set_major_formatter": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "set_major_formatter"
      ]
    ]
  ],
  "format_coord": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "format_coord"
      ]
    ]
  ],
  "set_separator": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "set_separator"
      ]
    ]
  ],
  "set_format_unit": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "set_format_unit"
      ]
    ]
  ],
  "get_format_unit": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "get_format_unit"
      ]
    ]
  ],
  "set_ticks": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "set_ticks"
      ]
    ]
  ],
  "set_ticks_position": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "set_ticks_position"
      ]
    ]
  ],
  "set_ticks_visible": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "set_ticks_visible"
      ]
    ]
  ],
  "set_ticklabel": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "set_ticklabel"
      ]
    ]
  ],
  "set_ticklabel_position": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "set_ticklabel_position"
      ]
    ]
  ],
  "set_ticklabel_visible": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "set_ticklabel_visible"
      ]
    ]
  ],
  "set_axislabel": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "set_axislabel"
      ]
    ]
  ],
  "get_axislabel": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "get_axislabel"
      ]
    ]
  ],
  "set_auto_axislabel": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "set_auto_axislabel"
      ]
    ]
  ],
  "get_auto_axislabel": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "get_auto_axislabel"
      ]
    ]
  ],
  "_get_default_axislabel": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "_get_default_axislabel"
      ]
    ]
  ],
  "set_axislabel_position": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "set_axislabel_position"
      ]
    ]
  ],
  "set_axislabel_visibility_rule": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "set_axislabel_visibility_rule"
      ]
    ]
  ],
  "get_axislabel_visibility_rule": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "get_axislabel_visibility_rule"
      ]
    ]
  ],
  "locator": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "locator"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/formatter_locator.py",
      [
        "AngleFormatterLocator",
        "locator"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/formatter_locator.py",
      [
        "ScalarFormatterLocator",
        "locator"
      ]
    ]
  ],
  "formatter": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "formatter"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/formatter_locator.py",
      [
        "AngleFormatterLocator",
        "formatter"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/formatter_locator.py",
      [
        "ScalarFormatterLocator",
        "formatter"
      ]
    ]
  ],
  "_draw_grid": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "_draw_grid"
      ]
    ]
  ],
  "_draw_ticks": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "_draw_ticks"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/ticks.py",
      [
        "Ticks",
        "_draw_ticks"
      ]
    ]
  ],
  "_draw_axislabels": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "_draw_axislabels"
      ]
    ]
  ],
  "_update_ticks": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "_update_ticks"
      ]
    ]
  ],
  "_compute_ticks": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "_compute_ticks"
      ]
    ]
  ],
  "display_minor_ticks": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "display_minor_ticks"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/ticks.py",
      [
        "Ticks",
        "display_minor_ticks"
      ]
    ]
  ],
  "get_minor_frequency": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "get_minor_frequency"
      ]
    ]
  ],
  "set_minor_frequency": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "set_minor_frequency"
      ]
    ]
  ],
  "_update_grid_lines_1d": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "_update_grid_lines_1d"
      ]
    ]
  ],
  "_update_grid_lines": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "_update_grid_lines"
      ]
    ]
  ],
  "_get_gridline": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "_get_gridline"
      ]
    ]
  ],
  "_clear_grid_contour": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "_clear_grid_contour"
      ]
    ]
  ],
  "_update_grid_contour": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "_update_grid_contour"
      ]
    ]
  ],
  "tick_params": [
    [
      "astropy/visualization/wcsaxes/coordinate_helpers.py",
      [
        "CoordinateHelper",
        "tick_params"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/core.py",
      [
        "WCSAxes",
        "tick_params"
      ]
    ]
  ],
  "wrap_180": [
    [
      "astropy/visualization/wcsaxes/coordinate_range.py",
      [
        "wrap_180"
      ]
    ]
  ],
  "find_coordinate_range": [
    [
      "astropy/visualization/wcsaxes/coordinate_range.py",
      [
        "find_coordinate_range"
      ]
    ]
  ],
  "set_visible": [
    [
      "astropy/visualization/wcsaxes/coordinates_map.py",
      [
        "CoordinatesMap",
        "set_visible"
      ]
    ]
  ],
  "get_coord_range": [
    [
      "astropy/visualization/wcsaxes/coordinates_map.py",
      [
        "CoordinatesMap",
        "get_coord_range"
      ]
    ]
  ],
  "_as_table": [
    [
      "astropy/visualization/wcsaxes/coordinates_map.py",
      [
        "CoordinatesMap",
        "_as_table"
      ]
    ]
  ],
  "_display_world_coords": [
    [
      "astropy/visualization/wcsaxes/core.py",
      [
        "WCSAxes",
        "_display_world_coords"
      ]
    ]
  ],
  "_set_cursor_prefs": [
    [
      "astropy/visualization/wcsaxes/core.py",
      [
        "WCSAxes",
        "_set_cursor_prefs"
      ]
    ]
  ],
  "_hide_parent_artists": [
    [
      "astropy/visualization/wcsaxes/core.py",
      [
        "WCSAxes",
        "_hide_parent_artists"
      ]
    ]
  ],
  "imshow": [
    [
      "astropy/visualization/wcsaxes/core.py",
      [
        "WCSAxes",
        "imshow"
      ]
    ]
  ],
  "contour": [
    [
      "astropy/visualization/wcsaxes/core.py",
      [
        "WCSAxes",
        "contour"
      ]
    ]
  ],
  "contourf": [
    [
      "astropy/visualization/wcsaxes/core.py",
      [
        "WCSAxes",
        "contourf"
      ]
    ]
  ],
  "plot_coord": [
    [
      "astropy/visualization/wcsaxes/core.py",
      [
        "WCSAxes",
        "plot_coord"
      ]
    ]
  ],
  "reset_wcs": [
    [
      "astropy/visualization/wcsaxes/core.py",
      [
        "WCSAxes",
        "reset_wcs"
      ]
    ]
  ],
  "draw_wcsaxes": [
    [
      "astropy/visualization/wcsaxes/core.py",
      [
        "WCSAxes",
        "draw_wcsaxes"
      ]
    ]
  ],
  "set_xlabel": [
    [
      "astropy/visualization/wcsaxes/core.py",
      [
        "WCSAxes",
        "set_xlabel"
      ]
    ]
  ],
  "set_ylabel": [
    [
      "astropy/visualization/wcsaxes/core.py",
      [
        "WCSAxes",
        "set_ylabel"
      ]
    ]
  ],
  "get_xlabel": [
    [
      "astropy/visualization/wcsaxes/core.py",
      [
        "WCSAxes",
        "get_xlabel"
      ]
    ]
  ],
  "get_ylabel": [
    [
      "astropy/visualization/wcsaxes/core.py",
      [
        "WCSAxes",
        "get_ylabel"
      ]
    ]
  ],
  "get_coords_overlay": [
    [
      "astropy/visualization/wcsaxes/core.py",
      [
        "WCSAxes",
        "get_coords_overlay"
      ]
    ]
  ],
  "_get_transform_no_transdata": [
    [
      "astropy/visualization/wcsaxes/core.py",
      [
        "WCSAxes",
        "_get_transform_no_transdata"
      ]
    ]
  ],
  "get_tightbbox": [
    [
      "astropy/visualization/wcsaxes/core.py",
      [
        "WCSAxes",
        "get_tightbbox"
      ]
    ]
  ],
  "values_1": [
    [
      "astropy/visualization/wcsaxes/formatter_locator.py",
      [
        "BaseFormatterLocator",
        "values_1"
      ]
    ]
  ],
  "number": [
    [
      "astropy/visualization/wcsaxes/formatter_locator.py",
      [
        "BaseFormatterLocator",
        "number"
      ]
    ]
  ],
  "number_3": [
    [
      "astropy/visualization/wcsaxes/formatter_locator.py",
      [
        "BaseFormatterLocator",
        "number_3"
      ]
    ]
  ],
  "spacing": [
    [
      "astropy/visualization/wcsaxes/formatter_locator.py",
      [
        "BaseFormatterLocator",
        "spacing"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/formatter_locator.py",
      [
        "AngleFormatterLocator",
        "spacing"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/formatter_locator.py",
      [
        "ScalarFormatterLocator",
        "spacing"
      ]
    ]
  ],
  "spacing_5": [
    [
      "astropy/visualization/wcsaxes/formatter_locator.py",
      [
        "BaseFormatterLocator",
        "spacing_5"
      ]
    ]
  ],
  "minor_locator": [
    [
      "astropy/visualization/wcsaxes/formatter_locator.py",
      [
        "BaseFormatterLocator",
        "minor_locator"
      ]
    ]
  ],
  "format_unit": [
    [
      "astropy/visualization/wcsaxes/formatter_locator.py",
      [
        "BaseFormatterLocator",
        "format_unit"
      ]
    ]
  ],
  "format_unit_8": [
    [
      "astropy/visualization/wcsaxes/formatter_locator.py",
      [
        "BaseFormatterLocator",
        "format_unit_8"
      ]
    ]
  ],
  "_locate_values": [
    [
      "astropy/visualization/wcsaxes/formatter_locator.py",
      [
        "BaseFormatterLocator",
        "_locate_values"
      ]
    ]
  ],
  "decimal": [
    [
      "astropy/visualization/wcsaxes/formatter_locator.py",
      [
        "AngleFormatterLocator",
        "decimal"
      ]
    ]
  ],
  "decimal_1": [
    [
      "astropy/visualization/wcsaxes/formatter_locator.py",
      [
        "AngleFormatterLocator",
        "decimal_1"
      ]
    ]
  ],
  "spacing_3": [
    [
      "astropy/visualization/wcsaxes/formatter_locator.py",
      [
        "AngleFormatterLocator",
        "spacing_3"
      ]
    ]
  ],
  "sep": [
    [
      "astropy/visualization/wcsaxes/formatter_locator.py",
      [
        "AngleFormatterLocator",
        "sep"
      ]
    ]
  ],
  "sep_5": [
    [
      "astropy/visualization/wcsaxes/formatter_locator.py",
      [
        "AngleFormatterLocator",
        "sep_5"
      ]
    ]
  ],
  "base_spacing": [
    [
      "astropy/visualization/wcsaxes/formatter_locator.py",
      [
        "AngleFormatterLocator",
        "base_spacing"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/formatter_locator.py",
      [
        "ScalarFormatterLocator",
        "base_spacing"
      ]
    ]
  ],
  "spacing_1": [
    [
      "astropy/visualization/wcsaxes/formatter_locator.py",
      [
        "ScalarFormatterLocator",
        "spacing_1"
      ]
    ]
  ],
  "format_3": [
    [
      "astropy/visualization/wcsaxes/formatter_locator.py",
      [
        "ScalarFormatterLocator",
        "format_3"
      ]
    ]
  ],
  "data_1": [
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "Spine",
        "data_1"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "SpineXAligned",
        "data_1"
      ]
    ]
  ],
  "pixel": [
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "Spine",
        "pixel"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "SpineXAligned",
        "pixel"
      ]
    ]
  ],
  "pixel_3": [
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "Spine",
        "pixel_3"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "SpineXAligned",
        "pixel_3"
      ]
    ]
  ],
  "world": [
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "Spine",
        "world"
      ]
    ]
  ],
  "world_5": [
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "Spine",
        "world_5"
      ]
    ]
  ],
  "_update_normal": [
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "Spine",
        "_update_normal"
      ]
    ]
  ],
  "_halfway_x_y_angle": [
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "Spine",
        "_halfway_x_y_angle"
      ]
    ]
  ],
  "origin": [
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "BaseFrame",
        "origin"
      ]
    ]
  ],
  "transform_2": [
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "BaseFrame",
        "transform_2"
      ]
    ]
  ],
  "_update_patch_path": [
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "BaseFrame",
        "_update_patch_path"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "RectangularFrame1D",
        "_update_patch_path"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "EllipticalFrame",
        "_update_patch_path"
      ]
    ]
  ],
  "patch": [
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "BaseFrame",
        "patch"
      ]
    ]
  ],
  "sample": [
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "BaseFrame",
        "sample"
      ]
    ]
  ],
  "set_color": [
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "BaseFrame",
        "set_color"
      ]
    ]
  ],
  "get_color": [
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "BaseFrame",
        "get_color"
      ]
    ]
  ],
  "set_linewidth": [
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "BaseFrame",
        "set_linewidth"
      ]
    ]
  ],
  "get_linewidth": [
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "BaseFrame",
        "get_linewidth"
      ]
    ]
  ],
  "update_spines": [
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "BaseFrame",
        "update_spines"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "RectangularFrame1D",
        "update_spines"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "RectangularFrame",
        "update_spines"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/frame.py",
      [
        "EllipticalFrame",
        "update_spines"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/tests/test_frame.py",
      [
        "HexagonalFrame",
        "update_spines"
      ]
    ]
  ],
  "get_lon_lat_path": [
    [
      "astropy/visualization/wcsaxes/grid_paths.py",
      [
        "get_lon_lat_path"
      ]
    ]
  ],
  "get_gridline_path": [
    [
      "astropy/visualization/wcsaxes/grid_paths.py",
      [
        "get_gridline_path"
      ]
    ]
  ],
  "_rotate_polygon": [
    [
      "astropy/visualization/wcsaxes/patches.py",
      [
        "_rotate_polygon"
      ]
    ]
  ],
  "test_getaxislabel": [
    [
      "astropy/visualization/wcsaxes/tests/test_coordinate_helpers.py",
      [
        "test_getaxislabel"
      ]
    ]
  ],
  "ax": [
    [
      "astropy/visualization/wcsaxes/tests/test_coordinate_helpers.py",
      [
        "ax"
      ]
    ]
  ],
  "assert_label_draw": [
    [
      "astropy/visualization/wcsaxes/tests/test_coordinate_helpers.py",
      [
        "assert_label_draw"
      ]
    ]
  ],
  "test_label_visibility_rules_default": [
    [
      "astropy/visualization/wcsaxes/tests/test_coordinate_helpers.py",
      [
        "test_label_visibility_rules_default"
      ]
    ]
  ],
  "test_label_visibility_rules_label": [
    [
      "astropy/visualization/wcsaxes/tests/test_coordinate_helpers.py",
      [
        "test_label_visibility_rules_label"
      ]
    ]
  ],
  "test_label_visibility_rules_ticks": [
    [
      "astropy/visualization/wcsaxes/tests/test_coordinate_helpers.py",
      [
        "test_label_visibility_rules_ticks"
      ]
    ]
  ],
  "test_label_visibility_rules_always": [
    [
      "astropy/visualization/wcsaxes/tests/test_coordinate_helpers.py",
      [
        "test_label_visibility_rules_always"
      ]
    ]
  ],
  "test_format_unit": [
    [
      "astropy/visualization/wcsaxes/tests/test_coordinate_helpers.py",
      [
        "test_format_unit"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/tests/test_formatter_locator.py",
      [
        "TestScalarFormatterLocator",
        "test_format_unit"
      ]
    ]
  ],
  "test_set_separator": [
    [
      "astropy/visualization/wcsaxes/tests/test_coordinate_helpers.py",
      [
        "test_set_separator"
      ]
    ]
  ],
  "test_overlay_coords": [
    [
      "astropy/visualization/wcsaxes/tests/test_display_world_coordinates.py",
      [
        "TestDisplayWorldCoordinate",
        "test_overlay_coords"
      ]
    ]
  ],
  "test_cube_coords": [
    [
      "astropy/visualization/wcsaxes/tests/test_display_world_coordinates.py",
      [
        "TestDisplayWorldCoordinate",
        "test_cube_coords"
      ]
    ]
  ],
  "test_cube_coords_uncorr_slicing": [
    [
      "astropy/visualization/wcsaxes/tests/test_display_world_coordinates.py",
      [
        "TestDisplayWorldCoordinate",
        "test_cube_coords_uncorr_slicing"
      ]
    ]
  ],
  "test_plot_coord_3d_transform": [
    [
      "astropy/visualization/wcsaxes/tests/test_display_world_coordinates.py",
      [
        "TestDisplayWorldCoordinate",
        "test_plot_coord_3d_transform"
      ]
    ]
  ],
  "test_no_options": [
    [
      "astropy/visualization/wcsaxes/tests/test_formatter_locator.py",
      [
        "TestAngleFormatterLocator",
        "test_no_options"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/tests/test_formatter_locator.py",
      [
        "TestScalarFormatterLocator",
        "test_no_options"
      ]
    ]
  ],
  "test_too_many_options": [
    [
      "astropy/visualization/wcsaxes/tests/test_formatter_locator.py",
      [
        "TestAngleFormatterLocator",
        "test_too_many_options"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/tests/test_formatter_locator.py",
      [
        "TestScalarFormatterLocator",
        "test_too_many_options"
      ]
    ]
  ],
  "test_number": [
    [
      "astropy/visualization/wcsaxes/tests/test_formatter_locator.py",
      [
        "TestAngleFormatterLocator",
        "test_number"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/tests/test_formatter_locator.py",
      [
        "TestScalarFormatterLocator",
        "test_number"
      ]
    ]
  ],
  "test_spacing": [
    [
      "astropy/visualization/wcsaxes/tests/test_formatter_locator.py",
      [
        "TestAngleFormatterLocator",
        "test_spacing"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/tests/test_formatter_locator.py",
      [
        "TestScalarFormatterLocator",
        "test_spacing"
      ]
    ]
  ],
  "test_minor_locator": [
    [
      "astropy/visualization/wcsaxes/tests/test_formatter_locator.py",
      [
        "TestAngleFormatterLocator",
        "test_minor_locator"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/tests/test_formatter_locator.py",
      [
        "TestScalarFormatterLocator",
        "test_minor_locator"
      ]
    ]
  ],
  "test_separator": [
    [
      "astropy/visualization/wcsaxes/tests/test_formatter_locator.py",
      [
        "TestAngleFormatterLocator",
        "test_separator"
      ]
    ]
  ],
  "test_latex_format": [
    [
      "astropy/visualization/wcsaxes/tests/test_formatter_locator.py",
      [
        "TestAngleFormatterLocator",
        "test_latex_format"
      ]
    ]
  ],
  "test_invalid_formats": [
    [
      "astropy/visualization/wcsaxes/tests/test_formatter_locator.py",
      [
        "TestAngleFormatterLocator",
        "test_invalid_formats"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/tests/test_formatter_locator.py",
      [
        "TestScalarFormatterLocator",
        "test_invalid_formats"
      ]
    ]
  ],
  "test_base_spacing": [
    [
      "astropy/visualization/wcsaxes/tests/test_formatter_locator.py",
      [
        "TestAngleFormatterLocator",
        "test_base_spacing"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/tests/test_formatter_locator.py",
      [
        "TestScalarFormatterLocator",
        "test_base_spacing"
      ]
    ]
  ],
  "test_incorrect_spacing": [
    [
      "astropy/visualization/wcsaxes/tests/test_formatter_locator.py",
      [
        "TestAngleFormatterLocator",
        "test_incorrect_spacing"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/tests/test_formatter_locator.py",
      [
        "TestScalarFormatterLocator",
        "test_incorrect_spacing"
      ]
    ]
  ],
  "test_decimal_values": [
    [
      "astropy/visualization/wcsaxes/tests/test_formatter_locator.py",
      [
        "TestAngleFormatterLocator",
        "test_decimal_values"
      ]
    ]
  ],
  "test_values_unit": [
    [
      "astropy/visualization/wcsaxes/tests/test_formatter_locator.py",
      [
        "TestAngleFormatterLocator",
        "test_values_unit"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/tests/test_formatter_locator.py",
      [
        "TestScalarFormatterLocator",
        "test_values_unit"
      ]
    ]
  ],
  "test_formatter_no_format": [
    [
      "astropy/visualization/wcsaxes/tests/test_formatter_locator.py",
      [
        "TestAngleFormatterLocator",
        "test_formatter_no_format"
      ]
    ]
  ],
  "test_formatter_no_format_with_units": [
    [
      "astropy/visualization/wcsaxes/tests/test_formatter_locator.py",
      [
        "TestAngleFormatterLocator",
        "test_formatter_no_format_with_units"
      ]
    ]
  ],
  "test_incompatible_unit_decimal": [
    [
      "astropy/visualization/wcsaxes/tests/test_formatter_locator.py",
      [
        "TestAngleFormatterLocator",
        "test_incompatible_unit_decimal"
      ]
    ]
  ],
  "test_custom_frame": [
    [
      "astropy/visualization/wcsaxes/tests/test_frame.py",
      [
        "TestFrame",
        "test_custom_frame"
      ]
    ]
  ],
  "test_update_clip_path_rectangular": [
    [
      "astropy/visualization/wcsaxes/tests/test_frame.py",
      [
        "TestFrame",
        "test_update_clip_path_rectangular"
      ]
    ]
  ],
  "test_update_clip_path_nonrectangular": [
    [
      "astropy/visualization/wcsaxes/tests/test_frame.py",
      [
        "TestFrame",
        "test_update_clip_path_nonrectangular"
      ]
    ]
  ],
  "test_update_clip_path_change_wcs": [
    [
      "astropy/visualization/wcsaxes/tests/test_frame.py",
      [
        "TestFrame",
        "test_update_clip_path_change_wcs"
      ]
    ]
  ],
  "test_copy_frame_properties_change_wcs": [
    [
      "astropy/visualization/wcsaxes/tests/test_frame.py",
      [
        "TestFrame",
        "test_copy_frame_properties_change_wcs"
      ]
    ]
  ],
  "test_round_trip_visibility": [
    [
      "astropy/visualization/wcsaxes/tests/test_grid_paths.py",
      [
        "test_round_trip_visibility"
      ]
    ]
  ],
  "test_image_plot": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "TestBasic",
        "test_image_plot"
      ]
    ]
  ],
  "test_axes_off": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "TestBasic",
        "test_axes_off"
      ]
    ]
  ],
  "test_axisbelow": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "TestBasic",
        "test_axisbelow"
      ]
    ]
  ],
  "test_contour_overlay": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "TestBasic",
        "test_contour_overlay"
      ]
    ]
  ],
  "test_contourf_overlay": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "TestBasic",
        "test_contourf_overlay"
      ]
    ]
  ],
  "test_overlay_features_image": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "TestBasic",
        "test_overlay_features_image"
      ]
    ]
  ],
  "test_curvilinear_grid_patches_image": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "TestBasic",
        "test_curvilinear_grid_patches_image"
      ]
    ]
  ],
  "test_cube_slice_image": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "TestBasic",
        "test_cube_slice_image"
      ]
    ]
  ],
  "test_cube_slice_image_lonlat": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "TestBasic",
        "test_cube_slice_image_lonlat"
      ]
    ]
  ],
  "test_plot_coord": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "TestBasic",
        "test_plot_coord"
      ]
    ]
  ],
  "test_plot_line": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "TestBasic",
        "test_plot_line"
      ]
    ]
  ],
  "test_changed_axis_units": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "TestBasic",
        "test_changed_axis_units"
      ]
    ]
  ],
  "test_minor_ticks": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "TestBasic",
        "test_minor_ticks"
      ]
    ]
  ],
  "test_ticks_labels": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "TestBasic",
        "test_ticks_labels"
      ]
    ]
  ],
  "test_rcparams": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "TestBasic",
        "test_rcparams"
      ]
    ]
  ],
  "test_tick_angles": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "TestBasic",
        "test_tick_angles"
      ]
    ]
  ],
  "test_tick_angles_non_square_axes": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "TestBasic",
        "test_tick_angles_non_square_axes"
      ]
    ]
  ],
  "test_set_coord_type": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "TestBasic",
        "test_set_coord_type"
      ]
    ]
  ],
  "test_ticks_regression": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "TestBasic",
        "test_ticks_regression"
      ]
    ]
  ],
  "test_axislabels_regression": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "TestBasic",
        "test_axislabels_regression"
      ]
    ]
  ],
  "test_noncelestial_angular": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "TestBasic",
        "test_noncelestial_angular"
      ]
    ]
  ],
  "test_patches_distortion": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "TestBasic",
        "test_patches_distortion"
      ]
    ]
  ],
  "test_quadrangle": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "TestBasic",
        "test_quadrangle"
      ]
    ]
  ],
  "test_elliptical_frame": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "TestBasic",
        "test_elliptical_frame"
      ]
    ]
  ],
  "test_hms_labels": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "TestBasic",
        "test_hms_labels"
      ]
    ]
  ],
  "test_latex_labels": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "TestBasic",
        "test_latex_labels"
      ]
    ]
  ],
  "test_tick_params": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "TestBasic",
        "test_tick_params"
      ]
    ]
  ],
  "wave_wcs_1d": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "wave_wcs_1d"
      ]
    ]
  ],
  "test_1d_plot_1d_wcs": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "test_1d_plot_1d_wcs"
      ]
    ]
  ],
  "test_1d_plot_1d_wcs_format_unit": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "test_1d_plot_1d_wcs_format_unit"
      ]
    ]
  ],
  "spatial_wcs_2d": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "spatial_wcs_2d"
      ]
    ]
  ],
  "test_1d_plot_2d_wcs_correlated": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "test_1d_plot_2d_wcs_correlated"
      ]
    ]
  ],
  "spatial_wcs_2d_small_angle": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "spatial_wcs_2d_small_angle"
      ]
    ],
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "spatial_wcs_2d_small_angle"
      ]
    ]
  ],
  "test_1d_plot_1d_sliced_low_level_wcs": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "test_1d_plot_1d_sliced_low_level_wcs"
      ]
    ]
  ],
  "test_1d_plot_put_varying_axis_on_bottom_lon": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "test_1d_plot_put_varying_axis_on_bottom_lon"
      ]
    ]
  ],
  "test_allsky_labels_wrap": [
    [
      "astropy/visualization/wcsaxes/tests/test_images.py",
      [
        "test_allsky_labels_wrap"
      ]
    ]
  ],
  "test_grid_regression": [
    [
      "astropy/visualization/wcsaxes/tests/test_misc.py",
      [
        "test_grid_regression"
      ]
    ]
  ],
  "test_format_coord_regression": [
    [
      "astropy/visualization/wcsaxes/tests/test_misc.py",
      [
        "test_format_coord_regression"
      ]
    ]
  ],
  "test_no_numpy_warnings": [
    [
      "astropy/visualization/wcsaxes/tests/test_misc.py",
      [
        "test_no_numpy_warnings"
      ]
    ]
  ],
  "test_invalid_frame_overlay": [
    [
      "astropy/visualization/wcsaxes/tests/test_misc.py",
      [
        "test_invalid_frame_overlay"
      ]
    ]
  ],
  "test_plot_coord_transform": [
    [
      "astropy/visualization/wcsaxes/tests/test_misc.py",
      [
        "test_plot_coord_transform"
      ]
    ]
  ],
  "test_set_label_properties": [
    [
      "astropy/visualization/wcsaxes/tests/test_misc.py",
      [
        "test_set_label_properties"
      ]
    ]
  ],
  "test_slicing_warnings": [
    [
      "astropy/visualization/wcsaxes/tests/test_misc.py",
      [
        "test_slicing_warnings"
      ]
    ]
  ],
  "test_plt_xlabel_ylabel": [
    [
      "astropy/visualization/wcsaxes/tests/test_misc.py",
      [
        "test_plt_xlabel_ylabel"
      ]
    ]
  ],
  "test_grid_type_contours_transform": [
    [
      "astropy/visualization/wcsaxes/tests/test_misc.py",
      [
        "test_grid_type_contours_transform"
      ]
    ]
  ],
  "test_plt_imshow_origin": [
    [
      "astropy/visualization/wcsaxes/tests/test_misc.py",
      [
        "test_plt_imshow_origin"
      ]
    ]
  ],
  "test_ax_imshow_origin": [
    [
      "astropy/visualization/wcsaxes/tests/test_misc.py",
      [
        "test_ax_imshow_origin"
      ]
    ]
  ],
  "test_grid_contour_large_spacing": [
    [
      "astropy/visualization/wcsaxes/tests/test_misc.py",
      [
        "test_grid_contour_large_spacing"
      ]
    ]
  ],
  "test_contour_return": [
    [
      "astropy/visualization/wcsaxes/tests/test_misc.py",
      [
        "test_contour_return"
      ]
    ]
  ],
  "test_contour_empty": [
    [
      "astropy/visualization/wcsaxes/tests/test_misc.py",
      [
        "test_contour_empty"
      ]
    ]
  ],
  "test_iterate_coords": [
    [
      "astropy/visualization/wcsaxes/tests/test_misc.py",
      [
        "test_iterate_coords"
      ]
    ]
  ],
  "test_invalid_slices_errors": [
    [
      "astropy/visualization/wcsaxes/tests/test_misc.py",
      [
        "test_invalid_slices_errors"
      ]
    ]
  ],
  "time_spectral_wcs_2d": [
    [
      "astropy/visualization/wcsaxes/tests/test_misc.py",
      [
        "time_spectral_wcs_2d"
      ]
    ]
  ],
  "test_time_wcs": [
    [
      "astropy/visualization/wcsaxes/tests/test_misc.py",
      [
        "test_time_wcs"
      ]
    ]
  ],
  "test_simplify_labels_usetex": [
    [
      "astropy/visualization/wcsaxes/tests/test_misc.py",
      [
        "test_simplify_labels_usetex"
      ]
    ]
  ],
  "test_set_labels_with_coords": [
    [
      "astropy/visualization/wcsaxes/tests/test_misc.py",
      [
        "test_set_labels_with_coords"
      ]
    ]
  ],
  "test_bbox_size": [
    [
      "astropy/visualization/wcsaxes/tests/test_misc.py",
      [
        "test_bbox_size"
      ]
    ]
  ],
  "test_wcs_type_transform_regression": [
    [
      "astropy/visualization/wcsaxes/tests/test_misc.py",
      [
        "test_wcs_type_transform_regression"
      ]
    ]
  ],
  "test_multiple_draws_grid_contours": [
    [
      "astropy/visualization/wcsaxes/tests/test_misc.py",
      [
        "test_multiple_draws_grid_contours"
      ]
    ]
  ],
  "inverted": [
    [
      "astropy/visualization/wcsaxes/tests/test_transform_coord_meta.py",
      [
        "DistanceToLonLat",
        "inverted"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/tests/test_transform_coord_meta.py",
      [
        "LonLatToDistance",
        "inverted"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/transforms.py",
      [
        "CurvedTransform",
        "inverted"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/transforms.py",
      [
        "CoordinateTransform",
        "inverted"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/transforms.py",
      [
        "World2PixelTransform",
        "inverted"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/transforms.py",
      [
        "Pixel2WorldTransform",
        "inverted"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/wcsapi.py",
      [
        "WCSWorld2PixelTransform",
        "inverted"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/wcsapi.py",
      [
        "WCSPixel2WorldTransform",
        "inverted"
      ]
    ]
  ],
  "test_coords_overlay": [
    [
      "astropy/visualization/wcsaxes/tests/test_transform_coord_meta.py",
      [
        "TestTransformCoordMeta",
        "test_coords_overlay"
      ]
    ]
  ],
  "test_coords_overlay_auto_coord_meta": [
    [
      "astropy/visualization/wcsaxes/tests/test_transform_coord_meta.py",
      [
        "TestTransformCoordMeta",
        "test_coords_overlay_auto_coord_meta"
      ]
    ]
  ],
  "test_direct_init": [
    [
      "astropy/visualization/wcsaxes/tests/test_transform_coord_meta.py",
      [
        "TestTransformCoordMeta",
        "test_direct_init"
      ]
    ]
  ],
  "test_select_step_degree": [
    [
      "astropy/visualization/wcsaxes/tests/test_utils.py",
      [
        "test_select_step_degree"
      ]
    ]
  ],
  "test_select_step_hour": [
    [
      "astropy/visualization/wcsaxes/tests/test_utils.py",
      [
        "test_select_step_hour"
      ]
    ]
  ],
  "test_select_step_scalar": [
    [
      "astropy/visualization/wcsaxes/tests/test_utils.py",
      [
        "test_select_step_scalar"
      ]
    ]
  ],
  "plt_close": [
    [
      "astropy/visualization/wcsaxes/tests/test_wcsapi.py",
      [
        "plt_close"
      ]
    ]
  ],
  "wcs_4d": [
    [
      "astropy/visualization/wcsaxes/tests/test_wcsapi.py",
      [
        "wcs_4d"
      ]
    ]
  ],
  "cube_wcs": [
    [
      "astropy/visualization/wcsaxes/tests/test_wcsapi.py",
      [
        "cube_wcs"
      ]
    ]
  ],
  "test_shorthand_inversion": [
    [
      "astropy/visualization/wcsaxes/tests/test_wcsapi.py",
      [
        "test_shorthand_inversion"
      ]
    ]
  ],
  "test_coord_type_from_ctype": [
    [
      "astropy/visualization/wcsaxes/tests/test_wcsapi.py",
      [
        "test_coord_type_from_ctype"
      ]
    ]
  ],
  "test_coord_type_1d_1d_wcs": [
    [
      "astropy/visualization/wcsaxes/tests/test_wcsapi.py",
      [
        "test_coord_type_1d_1d_wcs"
      ]
    ]
  ],
  "test_coord_type_1d_2d_wcs_correlated": [
    [
      "astropy/visualization/wcsaxes/tests/test_wcsapi.py",
      [
        "test_coord_type_1d_2d_wcs_correlated"
      ]
    ]
  ],
  "test_coord_type_1d_2d_wcs_uncorrelated": [
    [
      "astropy/visualization/wcsaxes/tests/test_wcsapi.py",
      [
        "test_coord_type_1d_2d_wcs_uncorrelated"
      ]
    ]
  ],
  "test_coord_meta_4d": [
    [
      "astropy/visualization/wcsaxes/tests/test_wcsapi.py",
      [
        "test_coord_meta_4d"
      ]
    ]
  ],
  "test_coord_meta_4d_line_plot": [
    [
      "astropy/visualization/wcsaxes/tests/test_wcsapi.py",
      [
        "test_coord_meta_4d_line_plot"
      ]
    ]
  ],
  "sub_wcs": [
    [
      "astropy/visualization/wcsaxes/tests/test_wcsapi.py",
      [
        "sub_wcs"
      ]
    ]
  ],
  "test_apply_slices": [
    [
      "astropy/visualization/wcsaxes/tests/test_wcsapi.py",
      [
        "test_apply_slices"
      ]
    ]
  ],
  "test_sliced_ND_input": [
    [
      "astropy/visualization/wcsaxes/tests/test_wcsapi.py",
      [
        "test_sliced_ND_input"
      ]
    ]
  ],
  "pixel_n_dim": [
    [
      "astropy/visualization/wcsaxes/tests/test_wcsapi.py",
      [
        "LowLevelWCS5D",
        "pixel_n_dim"
      ]
    ],
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "Spectral1DLowLevelWCS",
        "pixel_n_dim"
      ]
    ],
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "Celestial2DLowLevelWCS",
        "pixel_n_dim"
      ]
    ],
    [
      "astropy/wcs/wcsapi/fitswcs.py",
      [
        "FITSWCSAPIMixin",
        "pixel_n_dim"
      ]
    ],
    [
      "astropy/wcs/wcsapi/high_level_wcs_wrapper.py",
      [
        "HighLevelWCSWrapper",
        "pixel_n_dim"
      ]
    ],
    [
      "astropy/wcs/wcsapi/low_level_api.py",
      [
        "BaseLowLevelWCS",
        "pixel_n_dim"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_high_level_api.py",
      [
        "SimpleDuplicateWCS",
        "pixel_n_dim"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_high_level_api.py",
      [
        "SkyCoordDuplicateWCS",
        "pixel_n_dim"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_high_level_api.py",
      [
        "SerializedWCS",
        "pixel_n_dim"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_high_level_wcs_wrapper.py",
      [
        "CustomLowLevelWCS",
        "pixel_n_dim"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/base.py",
      [
        "BaseWCSWrapper",
        "pixel_n_dim"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/sliced_wcs.py",
      [
        "SlicedLowLevelWCS",
        "pixel_n_dim"
      ]
    ]
  ],
  "world_n_dim": [
    [
      "astropy/visualization/wcsaxes/tests/test_wcsapi.py",
      [
        "LowLevelWCS5D",
        "world_n_dim"
      ]
    ],
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "Spectral1DLowLevelWCS",
        "world_n_dim"
      ]
    ],
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "Celestial2DLowLevelWCS",
        "world_n_dim"
      ]
    ],
    [
      "astropy/wcs/wcsapi/fitswcs.py",
      [
        "FITSWCSAPIMixin",
        "world_n_dim"
      ]
    ],
    [
      "astropy/wcs/wcsapi/high_level_wcs_wrapper.py",
      [
        "HighLevelWCSWrapper",
        "world_n_dim"
      ]
    ],
    [
      "astropy/wcs/wcsapi/low_level_api.py",
      [
        "BaseLowLevelWCS",
        "world_n_dim"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_high_level_api.py",
      [
        "SimpleDuplicateWCS",
        "world_n_dim"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_high_level_api.py",
      [
        "SkyCoordDuplicateWCS",
        "world_n_dim"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_high_level_api.py",
      [
        "SerializedWCS",
        "world_n_dim"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_high_level_wcs_wrapper.py",
      [
        "CustomLowLevelWCS",
        "world_n_dim"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/base.py",
      [
        "BaseWCSWrapper",
        "world_n_dim"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/sliced_wcs.py",
      [
        "SlicedLowLevelWCS",
        "world_n_dim"
      ]
    ]
  ],
  "world_axis_physical_types": [
    [
      "astropy/visualization/wcsaxes/tests/test_wcsapi.py",
      [
        "LowLevelWCS5D",
        "world_axis_physical_types"
      ]
    ],
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "Spectral1DLowLevelWCS",
        "world_axis_physical_types"
      ]
    ],
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "Celestial2DLowLevelWCS",
        "world_axis_physical_types"
      ]
    ],
    [
      "astropy/wcs/wcsapi/fitswcs.py",
      [
        "FITSWCSAPIMixin",
        "world_axis_physical_types"
      ]
    ],
    [
      "astropy/wcs/wcsapi/high_level_wcs_wrapper.py",
      [
        "HighLevelWCSWrapper",
        "world_axis_physical_types"
      ]
    ],
    [
      "astropy/wcs/wcsapi/low_level_api.py",
      [
        "BaseLowLevelWCS",
        "world_axis_physical_types"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_high_level_api.py",
      [
        "SimpleDuplicateWCS",
        "world_axis_physical_types"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_high_level_api.py",
      [
        "SkyCoordDuplicateWCS",
        "world_axis_physical_types"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_high_level_api.py",
      [
        "SerializedWCS",
        "world_axis_physical_types"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_high_level_wcs_wrapper.py",
      [
        "CustomLowLevelWCS",
        "world_axis_physical_types"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/base.py",
      [
        "BaseWCSWrapper",
        "world_axis_physical_types"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/sliced_wcs.py",
      [
        "SlicedLowLevelWCS",
        "world_axis_physical_types"
      ]
    ]
  ],
  "world_axis_units": [
    [
      "astropy/visualization/wcsaxes/tests/test_wcsapi.py",
      [
        "LowLevelWCS5D",
        "world_axis_units"
      ]
    ],
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "Spectral1DLowLevelWCS",
        "world_axis_units"
      ]
    ],
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "Celestial2DLowLevelWCS",
        "world_axis_units"
      ]
    ],
    [
      "astropy/wcs/wcsapi/fitswcs.py",
      [
        "FITSWCSAPIMixin",
        "world_axis_units"
      ]
    ],
    [
      "astropy/wcs/wcsapi/high_level_wcs_wrapper.py",
      [
        "HighLevelWCSWrapper",
        "world_axis_units"
      ]
    ],
    [
      "astropy/wcs/wcsapi/low_level_api.py",
      [
        "BaseLowLevelWCS",
        "world_axis_units"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_high_level_api.py",
      [
        "SimpleDuplicateWCS",
        "world_axis_units"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_high_level_api.py",
      [
        "SkyCoordDuplicateWCS",
        "world_axis_units"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_high_level_api.py",
      [
        "SerializedWCS",
        "world_axis_units"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_high_level_wcs_wrapper.py",
      [
        "CustomLowLevelWCS",
        "world_axis_units"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/base.py",
      [
        "BaseWCSWrapper",
        "world_axis_units"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/sliced_wcs.py",
      [
        "SlicedLowLevelWCS",
        "world_axis_units"
      ]
    ]
  ],
  "world_axis_names": [
    [
      "astropy/visualization/wcsaxes/tests/test_wcsapi.py",
      [
        "LowLevelWCS5D",
        "world_axis_names"
      ]
    ],
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "Spectral1DLowLevelWCS",
        "world_axis_names"
      ]
    ],
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "Celestial2DLowLevelWCS",
        "world_axis_names"
      ]
    ],
    [
      "astropy/wcs/wcsapi/fitswcs.py",
      [
        "FITSWCSAPIMixin",
        "world_axis_names"
      ]
    ],
    [
      "astropy/wcs/wcsapi/low_level_api.py",
      [
        "BaseLowLevelWCS",
        "world_axis_names"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/base.py",
      [
        "BaseWCSWrapper",
        "world_axis_names"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/sliced_wcs.py",
      [
        "SlicedLowLevelWCS",
        "world_axis_names"
      ]
    ]
  ],
  "pixel_to_world_values": [
    [
      "astropy/visualization/wcsaxes/tests/test_wcsapi.py",
      [
        "LowLevelWCS5D",
        "pixel_to_world_values"
      ]
    ],
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "Spectral1DLowLevelWCS",
        "pixel_to_world_values"
      ]
    ],
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "Celestial2DLowLevelWCS",
        "pixel_to_world_values"
      ]
    ],
    [
      "astropy/wcs/wcsapi/fitswcs.py",
      [
        "FITSWCSAPIMixin",
        "pixel_to_world_values"
      ]
    ],
    [
      "astropy/wcs/wcsapi/low_level_api.py",
      [
        "BaseLowLevelWCS",
        "pixel_to_world_values"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_high_level_api.py",
      [
        "DoubleLowLevelWCS",
        "pixel_to_world_values"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_high_level_wcs_wrapper.py",
      [
        "CustomLowLevelWCS",
        "pixel_to_world_values"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/base.py",
      [
        "BaseWCSWrapper",
        "pixel_to_world_values"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/sliced_wcs.py",
      [
        "SlicedLowLevelWCS",
        "pixel_to_world_values"
      ]
    ]
  ],
  "world_to_pixel_values": [
    [
      "astropy/visualization/wcsaxes/tests/test_wcsapi.py",
      [
        "LowLevelWCS5D",
        "world_to_pixel_values"
      ]
    ],
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "Spectral1DLowLevelWCS",
        "world_to_pixel_values"
      ]
    ],
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "Celestial2DLowLevelWCS",
        "world_to_pixel_values"
      ]
    ],
    [
      "astropy/wcs/wcsapi/fitswcs.py",
      [
        "FITSWCSAPIMixin",
        "world_to_pixel_values"
      ]
    ],
    [
      "astropy/wcs/wcsapi/low_level_api.py",
      [
        "BaseLowLevelWCS",
        "world_to_pixel_values"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_high_level_api.py",
      [
        "DoubleLowLevelWCS",
        "world_to_pixel_values"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_high_level_wcs_wrapper.py",
      [
        "CustomLowLevelWCS",
        "world_to_pixel_values"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/base.py",
      [
        "BaseWCSWrapper",
        "world_to_pixel_values"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/sliced_wcs.py",
      [
        "SlicedLowLevelWCS",
        "world_to_pixel_values"
      ]
    ]
  ],
  "world_axis_object_components": [
    [
      "astropy/visualization/wcsaxes/tests/test_wcsapi.py",
      [
        "LowLevelWCS5D",
        "world_axis_object_components"
      ]
    ],
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "Spectral1DLowLevelWCS",
        "world_axis_object_components"
      ]
    ],
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "Celestial2DLowLevelWCS",
        "world_axis_object_components"
      ]
    ],
    [
      "astropy/wcs/wcsapi/fitswcs.py",
      [
        "FITSWCSAPIMixin",
        "world_axis_object_components"
      ]
    ],
    [
      "astropy/wcs/wcsapi/low_level_api.py",
      [
        "BaseLowLevelWCS",
        "world_axis_object_components"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_high_level_api.py",
      [
        "SimpleDuplicateWCS",
        "world_axis_object_components"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_high_level_api.py",
      [
        "SkyCoordDuplicateWCS",
        "world_axis_object_components"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_high_level_api.py",
      [
        "SerializedWCS",
        "world_axis_object_components"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_high_level_wcs_wrapper.py",
      [
        "CustomLowLevelWCS",
        "world_axis_object_components"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/base.py",
      [
        "BaseWCSWrapper",
        "world_axis_object_components"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/sliced_wcs.py",
      [
        "SlicedLowLevelWCS",
        "world_axis_object_components"
      ]
    ]
  ],
  "world_axis_object_classes": [
    [
      "astropy/visualization/wcsaxes/tests/test_wcsapi.py",
      [
        "LowLevelWCS5D",
        "world_axis_object_classes"
      ]
    ],
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "Spectral1DLowLevelWCS",
        "world_axis_object_classes"
      ]
    ],
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "Celestial2DLowLevelWCS",
        "world_axis_object_classes"
      ]
    ],
    [
      "astropy/wcs/wcsapi/fitswcs.py",
      [
        "FITSWCSAPIMixin",
        "world_axis_object_classes"
      ]
    ],
    [
      "astropy/wcs/wcsapi/low_level_api.py",
      [
        "BaseLowLevelWCS",
        "world_axis_object_classes"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_high_level_api.py",
      [
        "SimpleDuplicateWCS",
        "world_axis_object_classes"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_high_level_api.py",
      [
        "SkyCoordDuplicateWCS",
        "world_axis_object_classes"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_high_level_api.py",
      [
        "SerializedWCS",
        "world_axis_object_classes"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_high_level_wcs_wrapper.py",
      [
        "CustomLowLevelWCS",
        "world_axis_object_classes"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/base.py",
      [
        "BaseWCSWrapper",
        "world_axis_object_classes"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/sliced_wcs.py",
      [
        "SlicedLowLevelWCS",
        "world_axis_object_classes"
      ]
    ]
  ],
  "test_edge_axes": [
    [
      "astropy/visualization/wcsaxes/tests/test_wcsapi.py",
      [
        "test_edge_axes"
      ]
    ]
  ],
  "test_coord_meta_wcsapi": [
    [
      "astropy/visualization/wcsaxes/tests/test_wcsapi.py",
      [
        "test_coord_meta_wcsapi"
      ]
    ]
  ],
  "test_wcsapi_5d_with_names": [
    [
      "astropy/visualization/wcsaxes/tests/test_wcsapi.py",
      [
        "test_wcsapi_5d_with_names"
      ]
    ]
  ],
  "sort_using": [
    [
      "astropy/visualization/wcsaxes/ticklabels.py",
      [
        "sort_using"
      ]
    ]
  ],
  "simplify_labels": [
    [
      "astropy/visualization/wcsaxes/ticklabels.py",
      [
        "TickLabels",
        "simplify_labels"
      ]
    ]
  ],
  "set_pad": [
    [
      "astropy/visualization/wcsaxes/ticklabels.py",
      [
        "TickLabels",
        "set_pad"
      ]
    ]
  ],
  "get_pad": [
    [
      "astropy/visualization/wcsaxes/ticklabels.py",
      [
        "TickLabels",
        "get_pad"
      ]
    ]
  ],
  "set_exclude_overlapping": [
    [
      "astropy/visualization/wcsaxes/ticklabels.py",
      [
        "TickLabels",
        "set_exclude_overlapping"
      ]
    ]
  ],
  "_set_xy_alignments": [
    [
      "astropy/visualization/wcsaxes/ticklabels.py",
      [
        "TickLabels",
        "_set_xy_alignments"
      ]
    ]
  ],
  "_get_bb": [
    [
      "astropy/visualization/wcsaxes/ticklabels.py",
      [
        "TickLabels",
        "_get_bb"
      ]
    ]
  ],
  "get_display_minor_ticks": [
    [
      "astropy/visualization/wcsaxes/ticks.py",
      [
        "Ticks",
        "get_display_minor_ticks"
      ]
    ]
  ],
  "set_tick_out": [
    [
      "astropy/visualization/wcsaxes/ticks.py",
      [
        "Ticks",
        "set_tick_out"
      ]
    ]
  ],
  "get_tick_out": [
    [
      "astropy/visualization/wcsaxes/ticks.py",
      [
        "Ticks",
        "get_tick_out"
      ]
    ]
  ],
  "set_ticksize": [
    [
      "astropy/visualization/wcsaxes/ticks.py",
      [
        "Ticks",
        "set_ticksize"
      ]
    ]
  ],
  "get_ticksize": [
    [
      "astropy/visualization/wcsaxes/ticks.py",
      [
        "Ticks",
        "get_ticksize"
      ]
    ]
  ],
  "set_minor_ticksize": [
    [
      "astropy/visualization/wcsaxes/ticks.py",
      [
        "Ticks",
        "set_minor_ticksize"
      ]
    ]
  ],
  "get_minor_ticksize": [
    [
      "astropy/visualization/wcsaxes/ticks.py",
      [
        "Ticks",
        "get_minor_ticksize"
      ]
    ]
  ],
  "out_size": [
    [
      "astropy/visualization/wcsaxes/ticks.py",
      [
        "Ticks",
        "out_size"
      ]
    ]
  ],
  "get_minor_world": [
    [
      "astropy/visualization/wcsaxes/ticks.py",
      [
        "Ticks",
        "get_minor_world"
      ]
    ]
  ],
  "add_minor": [
    [
      "astropy/visualization/wcsaxes/ticks.py",
      [
        "Ticks",
        "add_minor"
      ]
    ]
  ],
  "transform_path": [
    [
      "astropy/visualization/wcsaxes/transforms.py",
      [
        "CurvedTransform",
        "transform_path"
      ]
    ]
  ],
  "same_frames": [
    [
      "astropy/visualization/wcsaxes/transforms.py",
      [
        "CoordinateTransform",
        "same_frames"
      ]
    ]
  ],
  "same_frames_1": [
    [
      "astropy/visualization/wcsaxes/transforms.py",
      [
        "CoordinateTransform",
        "same_frames_1"
      ]
    ]
  ],
  "input_dims": [
    [
      "astropy/visualization/wcsaxes/transforms.py",
      [
        "World2PixelTransform",
        "input_dims"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/wcsapi.py",
      [
        "WCSWorld2PixelTransform",
        "input_dims"
      ]
    ]
  ],
  "output_dims": [
    [
      "astropy/visualization/wcsaxes/transforms.py",
      [
        "Pixel2WorldTransform",
        "output_dims"
      ]
    ],
    [
      "astropy/visualization/wcsaxes/wcsapi.py",
      [
        "WCSPixel2WorldTransform",
        "output_dims"
      ]
    ]
  ],
  "select_step_degree": [
    [
      "astropy/visualization/wcsaxes/utils.py",
      [
        "select_step_degree"
      ]
    ]
  ],
  "select_step_hour": [
    [
      "astropy/visualization/wcsaxes/utils.py",
      [
        "select_step_hour"
      ]
    ]
  ],
  "select_step_scalar": [
    [
      "astropy/visualization/wcsaxes/utils.py",
      [
        "select_step_scalar"
      ]
    ]
  ],
  "get_coord_meta": [
    [
      "astropy/visualization/wcsaxes/utils.py",
      [
        "get_coord_meta"
      ]
    ]
  ],
  "transform_contour_set_inplace": [
    [
      "astropy/visualization/wcsaxes/utils.py",
      [
        "transform_contour_set_inplace"
      ]
    ]
  ],
  "transform_coord_meta_from_wcs": [
    [
      "astropy/visualization/wcsaxes/wcsapi.py",
      [
        "transform_coord_meta_from_wcs"
      ]
    ]
  ],
  "apply_slices": [
    [
      "astropy/visualization/wcsaxes/wcsapi.py",
      [
        "apply_slices"
      ]
    ]
  ],
  "wcsapi_to_celestial_frame": [
    [
      "astropy/visualization/wcsaxes/wcsapi.py",
      [
        "wcsapi_to_celestial_frame"
      ]
    ]
  ],
  "get_include": [
    [
      "astropy/wcs/__init__.py",
      [
        "get_include"
      ]
    ]
  ],
  "_fix": [
    [
      "astropy/wcs/docstrings.py",
      [
        "_fix"
      ]
    ]
  ],
  "TWO_OR_MORE_ARGS": [
    [
      "astropy/wcs/docstrings.py",
      [
        "TWO_OR_MORE_ARGS"
      ]
    ]
  ],
  "RETURNS": [
    [
      "astropy/wcs/docstrings.py",
      [
        "RETURNS"
      ]
    ]
  ],
  "ORIGIN": [
    [
      "astropy/wcs/docstrings.py",
      [
        "ORIGIN"
      ]
    ]
  ],
  "RA_DEC_ORDER": [
    [
      "astropy/wcs/docstrings.py",
      [
        "RA_DEC_ORDER"
      ]
    ]
  ],
  "string_escape": [
    [
      "astropy/wcs/setup_package.py",
      [
        "string_escape"
      ]
    ]
  ],
  "determine_64_bit_int": [
    [
      "astropy/wcs/setup_package.py",
      [
        "determine_64_bit_int"
      ]
    ]
  ],
  "write_wcsconfig_h": [
    [
      "astropy/wcs/setup_package.py",
      [
        "write_wcsconfig_h"
      ]
    ]
  ],
  "generate_c_docstrings": [
    [
      "astropy/wcs/setup_package.py",
      [
        "generate_c_docstrings"
      ]
    ]
  ],
  "get_wcslib_cfg": [
    [
      "astropy/wcs/setup_package.py",
      [
        "get_wcslib_cfg"
      ]
    ]
  ],
  "tab_wcs_2di": [
    [
      "astropy/wcs/tests/conftest.py",
      [
        "tab_wcs_2di"
      ]
    ]
  ],
  "tab_wcsh_2di": [
    [
      "astropy/wcs/tests/conftest.py",
      [
        "tab_wcsh_2di"
      ]
    ]
  ],
  "tab_wcs_2di_f": [
    [
      "astropy/wcs/tests/conftest.py",
      [
        "tab_wcs_2di_f"
      ]
    ]
  ],
  "prj_TAB": [
    [
      "astropy/wcs/tests/conftest.py",
      [
        "prj_TAB"
      ]
    ]
  ],
  "fwd_eval": [
    [
      "astropy/wcs/tests/helper.py",
      [
        "SimModelTAB",
        "fwd_eval"
      ]
    ]
  ],
  "test_solar_aux_get": [
    [
      "astropy/wcs/tests/test_auxprm.py",
      [
        "test_solar_aux_get"
      ]
    ]
  ],
  "test_solar_aux_set": [
    [
      "astropy/wcs/tests/test_auxprm.py",
      [
        "test_solar_aux_set"
      ]
    ]
  ],
  "test_set_aux_on_empty": [
    [
      "astropy/wcs/tests/test_auxprm.py",
      [
        "test_set_aux_on_empty"
      ]
    ]
  ],
  "test_unset_aux": [
    [
      "astropy/wcs/tests/test_auxprm.py",
      [
        "test_unset_aux"
      ]
    ]
  ],
  "test_celprm_init": [
    [
      "astropy/wcs/tests/test_celprm.py",
      [
        "test_celprm_init"
      ]
    ]
  ],
  "test_celprm_copy": [
    [
      "astropy/wcs/tests/test_celprm.py",
      [
        "test_celprm_copy"
      ]
    ]
  ],
  "test_celprm_offset": [
    [
      "astropy/wcs/tests/test_celprm.py",
      [
        "test_celprm_offset"
      ]
    ]
  ],
  "test_celprm_prj": [
    [
      "astropy/wcs/tests/test_celprm.py",
      [
        "test_celprm_prj"
      ]
    ]
  ],
  "test_celprm_phi0": [
    [
      "astropy/wcs/tests/test_celprm.py",
      [
        "test_celprm_phi0"
      ]
    ]
  ],
  "test_celprm_theta0": [
    [
      "astropy/wcs/tests/test_celprm.py",
      [
        "test_celprm_theta0"
      ]
    ]
  ],
  "test_celprm_ref": [
    [
      "astropy/wcs/tests/test_celprm.py",
      [
        "test_celprm_ref"
      ]
    ]
  ],
  "test_celprm_isolat": [
    [
      "astropy/wcs/tests/test_celprm.py",
      [
        "test_celprm_isolat"
      ]
    ]
  ],
  "test_celprm_latpreq": [
    [
      "astropy/wcs/tests/test_celprm.py",
      [
        "test_celprm_latpreq"
      ]
    ]
  ],
  "test_celprm_euler": [
    [
      "astropy/wcs/tests/test_celprm.py",
      [
        "test_celprm_euler"
      ]
    ]
  ],
  "test_dist": [
    [
      "astropy/wcs/tests/test_pickle.py",
      [
        "test_dist"
      ]
    ]
  ],
  "test_sip": [
    [
      "astropy/wcs/tests/test_pickle.py",
      [
        "test_sip"
      ]
    ],
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_sip"
      ]
    ]
  ],
  "test_sip2": [
    [
      "astropy/wcs/tests/test_pickle.py",
      [
        "test_sip2"
      ]
    ]
  ],
  "test_axes_info": [
    [
      "astropy/wcs/tests/test_pickle.py",
      [
        "test_axes_info"
      ]
    ]
  ],
  "test_pixlist_wcs_colsel": [
    [
      "astropy/wcs/tests/test_pickle.py",
      [
        "test_pixlist_wcs_colsel"
      ]
    ],
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_pixlist_wcs_colsel"
      ]
    ]
  ],
  "test_alt_wcskey": [
    [
      "astropy/wcs/tests/test_pickle.py",
      [
        "test_alt_wcskey"
      ]
    ]
  ],
  "test_prjprm_init": [
    [
      "astropy/wcs/tests/test_prjprm.py",
      [
        "test_prjprm_init"
      ]
    ]
  ],
  "test_prjprm_copy": [
    [
      "astropy/wcs/tests/test_prjprm.py",
      [
        "test_prjprm_copy"
      ]
    ]
  ],
  "test_prjprm_flag": [
    [
      "astropy/wcs/tests/test_prjprm.py",
      [
        "test_prjprm_flag"
      ]
    ]
  ],
  "test_prjprm_code": [
    [
      "astropy/wcs/tests/test_prjprm.py",
      [
        "test_prjprm_code"
      ]
    ]
  ],
  "test_prjprm_phi0": [
    [
      "astropy/wcs/tests/test_prjprm.py",
      [
        "test_prjprm_phi0"
      ]
    ]
  ],
  "test_prjprm_theta0": [
    [
      "astropy/wcs/tests/test_prjprm.py",
      [
        "test_prjprm_theta0"
      ]
    ]
  ],
  "test_prjprm_pv": [
    [
      "astropy/wcs/tests/test_prjprm.py",
      [
        "test_prjprm_pv"
      ]
    ]
  ],
  "test_prjprm_pvrange": [
    [
      "astropy/wcs/tests/test_prjprm.py",
      [
        "test_prjprm_pvrange"
      ]
    ]
  ],
  "test_prjprm_bounds": [
    [
      "astropy/wcs/tests/test_prjprm.py",
      [
        "test_prjprm_bounds"
      ]
    ]
  ],
  "test_prjprm_category": [
    [
      "astropy/wcs/tests/test_prjprm.py",
      [
        "test_prjprm_category"
      ]
    ]
  ],
  "test_prjprm_name": [
    [
      "astropy/wcs/tests/test_prjprm.py",
      [
        "test_prjprm_name"
      ]
    ]
  ],
  "test_prjprm_w": [
    [
      "astropy/wcs/tests/test_prjprm.py",
      [
        "test_prjprm_w"
      ]
    ]
  ],
  "test_prjprm_simplezen": [
    [
      "astropy/wcs/tests/test_prjprm.py",
      [
        "test_prjprm_simplezen"
      ]
    ]
  ],
  "test_prjprm_equiareal": [
    [
      "astropy/wcs/tests/test_prjprm.py",
      [
        "test_prjprm_equiareal"
      ]
    ]
  ],
  "test_prjprm_conformal": [
    [
      "astropy/wcs/tests/test_prjprm.py",
      [
        "test_prjprm_conformal"
      ]
    ]
  ],
  "test_prjprm_global_projection": [
    [
      "astropy/wcs/tests/test_prjprm.py",
      [
        "test_prjprm_global_projection"
      ]
    ]
  ],
  "test_prjprm_divergent": [
    [
      "astropy/wcs/tests/test_prjprm.py",
      [
        "test_prjprm_divergent"
      ]
    ]
  ],
  "test_prjprm_r0": [
    [
      "astropy/wcs/tests/test_prjprm.py",
      [
        "test_prjprm_r0"
      ]
    ]
  ],
  "test_prjprm_x0_y0": [
    [
      "astropy/wcs/tests/test_prjprm.py",
      [
        "test_prjprm_x0_y0"
      ]
    ]
  ],
  "test_prjprm_n_m": [
    [
      "astropy/wcs/tests/test_prjprm.py",
      [
        "test_prjprm_n_m"
      ]
    ]
  ],
  "test_prjprm_prj_roundtrips": [
    [
      "astropy/wcs/tests/test_prjprm.py",
      [
        "test_prjprm_prj_roundtrips"
      ]
    ]
  ],
  "test_read_map_files": [
    [
      "astropy/wcs/tests/test_profiling.py",
      [
        "test_read_map_files"
      ]
    ]
  ],
  "test_map": [
    [
      "astropy/wcs/tests/test_profiling.py",
      [
        "test_map"
      ]
    ]
  ],
  "test_read_spec_files": [
    [
      "astropy/wcs/tests/test_profiling.py",
      [
        "test_read_spec_files"
      ]
    ]
  ],
  "test_spectrum": [
    [
      "astropy/wcs/tests/test_profiling.py",
      [
        "test_spectrum"
      ]
    ]
  ],
  "test_2d_spatial_tab_roundtrip": [
    [
      "astropy/wcs/tests/test_tab.py",
      [
        "test_2d_spatial_tab_roundtrip"
      ]
    ]
  ],
  "test_2d_spatial_tab_vs_model": [
    [
      "astropy/wcs/tests/test_tab.py",
      [
        "test_2d_spatial_tab_vs_model"
      ]
    ]
  ],
  "test_mixed_celest_and_1d_tab_roundtrip": [
    [
      "astropy/wcs/tests/test_tab.py",
      [
        "test_mixed_celest_and_1d_tab_roundtrip"
      ]
    ]
  ],
  "test_wcsprm_tab_basic": [
    [
      "astropy/wcs/tests/test_tabprm.py",
      [
        "test_wcsprm_tab_basic"
      ]
    ]
  ],
  "test_tabprm_coord": [
    [
      "astropy/wcs/tests/test_tabprm.py",
      [
        "test_tabprm_coord"
      ]
    ]
  ],
  "test_tabprm_crval_and_deepcopy": [
    [
      "astropy/wcs/tests/test_tabprm.py",
      [
        "test_tabprm_crval_and_deepcopy"
      ]
    ]
  ],
  "test_tabprm_delta": [
    [
      "astropy/wcs/tests/test_tabprm.py",
      [
        "test_tabprm_delta"
      ]
    ]
  ],
  "test_tabprm_K": [
    [
      "astropy/wcs/tests/test_tabprm.py",
      [
        "test_tabprm_K"
      ]
    ]
  ],
  "test_tabprm_M": [
    [
      "astropy/wcs/tests/test_tabprm.py",
      [
        "test_tabprm_M"
      ]
    ]
  ],
  "test_tabprm_nc": [
    [
      "astropy/wcs/tests/test_tabprm.py",
      [
        "test_tabprm_nc"
      ]
    ]
  ],
  "test_tabprm_extrema": [
    [
      "astropy/wcs/tests/test_tabprm.py",
      [
        "test_tabprm_extrema"
      ]
    ]
  ],
  "test_tabprm_map": [
    [
      "astropy/wcs/tests/test_tabprm.py",
      [
        "test_tabprm_map"
      ]
    ]
  ],
  "test_tabprm_sense": [
    [
      "astropy/wcs/tests/test_tabprm.py",
      [
        "test_tabprm_sense"
      ]
    ]
  ],
  "test_tabprm_p0": [
    [
      "astropy/wcs/tests/test_tabprm.py",
      [
        "test_tabprm_p0"
      ]
    ]
  ],
  "test_tabprm_print": [
    [
      "astropy/wcs/tests/test_tabprm.py",
      [
        "test_tabprm_print"
      ]
    ]
  ],
  "test_wcstab_copy": [
    [
      "astropy/wcs/tests/test_tabprm.py",
      [
        "test_wcstab_copy"
      ]
    ]
  ],
  "test_tabprm_crval": [
    [
      "astropy/wcs/tests/test_tabprm.py",
      [
        "test_tabprm_crval"
      ]
    ]
  ],
  "test_wcs_dropping": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_wcs_dropping"
      ]
    ]
  ],
  "test_wcs_swapping": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_wcs_swapping"
      ]
    ]
  ],
  "test_add_stokes": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_add_stokes"
      ]
    ]
  ],
  "test_slice_with_sip": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_slice_with_sip"
      ]
    ]
  ],
  "test_slice_getitem": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_slice_getitem"
      ]
    ]
  ],
  "test_slice_fitsorder": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_slice_fitsorder"
      ]
    ]
  ],
  "test_slice_wcs": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_slice_wcs"
      ]
    ]
  ],
  "test_axis_names": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_axis_names"
      ]
    ]
  ],
  "test_celestial": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_celestial"
      ]
    ]
  ],
  "test_wcs_to_celestial_frame": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_wcs_to_celestial_frame"
      ]
    ]
  ],
  "test_wcs_to_celestial_frame_correlated": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_wcs_to_celestial_frame_correlated"
      ]
    ]
  ],
  "test_wcs_to_celestial_frame_extend": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_wcs_to_celestial_frame_extend"
      ]
    ]
  ],
  "test_celestial_frame_to_wcs": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_celestial_frame_to_wcs"
      ]
    ]
  ],
  "test_celestial_frame_to_wcs_extend": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_celestial_frame_to_wcs_extend"
      ]
    ]
  ],
  "test_pixscale_nodrop": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_pixscale_nodrop"
      ]
    ]
  ],
  "test_pixscale_withdrop": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_pixscale_withdrop"
      ]
    ]
  ],
  "test_pixscale_cd": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_pixscale_cd"
      ]
    ]
  ],
  "test_pixscale_cd_rotated": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_pixscale_cd_rotated"
      ]
    ]
  ],
  "test_pixscale_pc_rotated": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_pixscale_pc_rotated"
      ]
    ]
  ],
  "test_pixel_scale_matrix": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_pixel_scale_matrix"
      ]
    ]
  ],
  "test_is_celestial": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_is_celestial"
      ]
    ]
  ],
  "test_has_celestial": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_has_celestial"
      ]
    ]
  ],
  "test_has_celestial_correlated": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_has_celestial_correlated"
      ]
    ]
  ],
  "test_noncelestial_scale": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_noncelestial_scale"
      ]
    ]
  ],
  "test_skycoord_to_pixel": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_skycoord_to_pixel"
      ]
    ]
  ],
  "test_skycoord_to_pixel_swapped": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_skycoord_to_pixel_swapped"
      ]
    ]
  ],
  "test_is_proj_plane_distorted": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_is_proj_plane_distorted"
      ]
    ]
  ],
  "test_skycoord_to_pixel_distortions": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_skycoord_to_pixel_distortions"
      ]
    ]
  ],
  "test_local_pixel_derivatives": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_local_pixel_derivatives"
      ]
    ]
  ],
  "test_pixel_to_world_correlation_matrix_celestial": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_pixel_to_world_correlation_matrix_celestial"
      ]
    ]
  ],
  "test_pixel_to_world_correlation_matrix_spectral_cube_uncorrelated": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_pixel_to_world_correlation_matrix_spectral_cube_uncorrelated"
      ]
    ]
  ],
  "test_pixel_to_world_correlation_matrix_spectral_cube_correlated": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_pixel_to_world_correlation_matrix_spectral_cube_correlated"
      ]
    ]
  ],
  "test_pixel_to_pixel_correlation_matrix_celestial": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_pixel_to_pixel_correlation_matrix_celestial"
      ]
    ]
  ],
  "test_pixel_to_pixel_correlation_matrix_spectral_cube_uncorrelated": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_pixel_to_pixel_correlation_matrix_spectral_cube_uncorrelated"
      ]
    ]
  ],
  "test_pixel_to_pixel_correlation_matrix_spectral_cube_correlated": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_pixel_to_pixel_correlation_matrix_spectral_cube_correlated"
      ]
    ]
  ],
  "test_pixel_to_pixel_correlation_matrix_mismatch": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_pixel_to_pixel_correlation_matrix_mismatch"
      ]
    ]
  ],
  "test_pixel_to_pixel_correlation_matrix_nonsquare": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_pixel_to_pixel_correlation_matrix_nonsquare"
      ]
    ]
  ],
  "test_split_matrix": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_split_matrix"
      ]
    ]
  ],
  "test_pixel_to_pixel": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_pixel_to_pixel"
      ]
    ]
  ],
  "test_pixel_to_pixel_correlated": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_pixel_to_pixel_correlated"
      ]
    ]
  ],
  "test_pixel_to_pixel_1d": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_pixel_to_pixel_1d"
      ]
    ]
  ],
  "test_fit_wcs_from_points": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_fit_wcs_from_points"
      ]
    ]
  ],
  "test_fit_wcs_from_points_CRPIX_bounds": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_fit_wcs_from_points_CRPIX_bounds"
      ]
    ]
  ],
  "test_issue10991": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_issue10991"
      ]
    ]
  ],
  "test_pixel_to_world_itrs": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_pixel_to_world_itrs"
      ]
    ]
  ],
  "dkist_location": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "dkist_location"
      ]
    ]
  ],
  "test_obsgeo_cartesian": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_obsgeo_cartesian"
      ]
    ]
  ],
  "test_obsgeo_spherical": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_obsgeo_spherical"
      ]
    ]
  ],
  "test_obsgeo_infinite": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_obsgeo_infinite"
      ]
    ]
  ],
  "test_obsgeo_invalid": [
    [
      "astropy/wcs/tests/test_utils.py",
      [
        "test_obsgeo_invalid"
      ]
    ]
  ],
  "ctx_for_v71_dateref_warnings": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "ctx_for_v71_dateref_warnings"
      ]
    ]
  ],
  "test_consistency": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "TestMaps",
        "test_consistency"
      ]
    ],
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "TestSpectra",
        "test_consistency"
      ]
    ]
  ],
  "test_maps": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "TestMaps",
        "test_maps"
      ]
    ]
  ],
  "test_spectra": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "TestSpectra",
        "test_spectra"
      ]
    ]
  ],
  "test_fixes": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_fixes"
      ]
    ]
  ],
  "test_outside_sky": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_outside_sky"
      ]
    ]
  ],
  "test_pix2world": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_pix2world"
      ]
    ]
  ],
  "test_load_fits_path": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_load_fits_path"
      ]
    ]
  ],
  "test_dict_init": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_dict_init"
      ]
    ]
  ],
  "test_extra_kwarg": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_extra_kwarg"
      ]
    ]
  ],
  "test_3d_shapes": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_3d_shapes"
      ]
    ]
  ],
  "test_preserve_shape": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_preserve_shape"
      ]
    ]
  ],
  "test_invalid_shape": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_invalid_shape"
      ]
    ]
  ],
  "test_warning_about_defunct_keywords": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_warning_about_defunct_keywords"
      ]
    ]
  ],
  "test_warning_about_defunct_keywords_exception": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_warning_about_defunct_keywords_exception"
      ]
    ]
  ],
  "test_to_header_string": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_to_header_string"
      ]
    ]
  ],
  "test_to_fits": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_to_fits"
      ]
    ]
  ],
  "test_to_header_warning": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_to_header_warning"
      ]
    ]
  ],
  "test_no_comments_in_header": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_no_comments_in_header"
      ]
    ]
  ],
  "test_find_all_wcs_crash": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_find_all_wcs_crash"
      ]
    ]
  ],
  "test_validate_with_2_wcses": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_validate_with_2_wcses"
      ]
    ]
  ],
  "test_all_world2pix": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_all_world2pix"
      ]
    ]
  ],
  "test_scamp_sip_distortion_parameters": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_scamp_sip_distortion_parameters"
      ]
    ]
  ],
  "test_fixes2": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_fixes2"
      ]
    ]
  ],
  "test_unit_normalization": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_unit_normalization"
      ]
    ]
  ],
  "test_footprint_to_file": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_footprint_to_file"
      ]
    ]
  ],
  "test_validate_faulty_wcs": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_validate_faulty_wcs"
      ]
    ]
  ],
  "test_error_message": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_error_message"
      ]
    ]
  ],
  "test_out_of_bounds": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_out_of_bounds"
      ]
    ]
  ],
  "test_calc_footprint_1": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_calc_footprint_1"
      ]
    ]
  ],
  "test_calc_footprint_2": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_calc_footprint_2"
      ]
    ]
  ],
  "test_calc_footprint_3": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_calc_footprint_3"
      ]
    ]
  ],
  "test_sub_3d_with_sip": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_sub_3d_with_sip"
      ]
    ]
  ],
  "test_printwcs": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_printwcs"
      ]
    ]
  ],
  "test_invalid_spherical": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_invalid_spherical"
      ]
    ]
  ],
  "test_no_iteration": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_no_iteration"
      ]
    ]
  ],
  "test_sip_tpv_agreement": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_sip_tpv_agreement"
      ]
    ]
  ],
  "test_tpv_copy": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_tpv_copy"
      ]
    ]
  ],
  "test_hst_wcs": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_hst_wcs"
      ]
    ]
  ],
  "test_cpdis_comments": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_cpdis_comments"
      ]
    ]
  ],
  "test_d2im_comments": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_d2im_comments"
      ]
    ]
  ],
  "test_sip_broken": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_sip_broken"
      ]
    ]
  ],
  "test_no_truncate_crval": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_no_truncate_crval"
      ]
    ]
  ],
  "test_no_truncate_crval_try2": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_no_truncate_crval_try2"
      ]
    ]
  ],
  "test_no_truncate_crval_p17": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_no_truncate_crval_p17"
      ]
    ]
  ],
  "test_no_truncate_using_compare": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_no_truncate_using_compare"
      ]
    ]
  ],
  "test_passing_ImageHDU": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_passing_ImageHDU"
      ]
    ]
  ],
  "test_inconsistent_sip": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_inconsistent_sip"
      ]
    ]
  ],
  "test_bounds_check": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_bounds_check"
      ]
    ],
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_bounds_check"
      ]
    ]
  ],
  "test_naxis": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_naxis"
      ]
    ],
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_naxis"
      ]
    ]
  ],
  "test_sip_with_altkey": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_sip_with_altkey"
      ]
    ]
  ],
  "test_to_fits_1": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_to_fits_1"
      ]
    ]
  ],
  "test_keyedsip": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_keyedsip"
      ]
    ]
  ],
  "test_zero_size_input": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_zero_size_input"
      ]
    ]
  ],
  "test_scalar_inputs": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_scalar_inputs"
      ]
    ]
  ],
  "test_footprint_contains": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_footprint_contains"
      ]
    ]
  ],
  "test_cunit": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_cunit"
      ]
    ],
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_cunit"
      ]
    ]
  ],
  "test_keywods2wcsprm": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "TestWcsWithTime",
        "test_keywods2wcsprm"
      ]
    ]
  ],
  "test_invalid_coordinate_masking": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_invalid_coordinate_masking"
      ]
    ]
  ],
  "test_no_pixel_area": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_no_pixel_area"
      ]
    ]
  ],
  "test_distortion_header": [
    [
      "astropy/wcs/tests/test_wcs.py",
      [
        "test_distortion_header"
      ]
    ]
  ],
  "test_alt": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_alt"
      ]
    ]
  ],
  "test_alt_invalid1": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_alt_invalid1"
      ]
    ]
  ],
  "test_alt_invalid2": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_alt_invalid2"
      ]
    ]
  ],
  "test_axis_types": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_axis_types"
      ]
    ]
  ],
  "test_cd": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_cd"
      ]
    ]
  ],
  "test_cd_missing": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_cd_missing"
      ]
    ]
  ],
  "test_cd_missing2": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_cd_missing2"
      ]
    ]
  ],
  "test_cd_invalid": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_cd_invalid"
      ]
    ]
  ],
  "test_cdfix": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_cdfix"
      ]
    ]
  ],
  "test_cdelt": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_cdelt"
      ]
    ]
  ],
  "test_cdelt_delete": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_cdelt_delete"
      ]
    ]
  ],
  "test_cel_offset": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_cel_offset"
      ]
    ]
  ],
  "test_celfix": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_celfix"
      ]
    ]
  ],
  "test_cname": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_cname"
      ]
    ]
  ],
  "test_cname_invalid": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_cname_invalid"
      ]
    ]
  ],
  "test_colax": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_colax"
      ]
    ]
  ],
  "test_colnum": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_colnum"
      ]
    ]
  ],
  "test_colnum_invalid": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_colnum_invalid"
      ]
    ]
  ],
  "test_crder": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_crder"
      ]
    ]
  ],
  "test_crota": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_crota"
      ]
    ]
  ],
  "test_crota_missing": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_crota_missing"
      ]
    ]
  ],
  "test_crota_missing2": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_crota_missing2"
      ]
    ]
  ],
  "test_crpix": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_crpix"
      ]
    ]
  ],
  "test_crval": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_crval"
      ]
    ]
  ],
  "test_csyer": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_csyer"
      ]
    ]
  ],
  "test_ctype": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_ctype"
      ]
    ]
  ],
  "test_ctype_repr": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_ctype_repr"
      ]
    ]
  ],
  "test_ctype_index_error": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_ctype_index_error"
      ]
    ]
  ],
  "test_ctype_invalid_error": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_ctype_invalid_error"
      ]
    ]
  ],
  "test_cubeface": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_cubeface"
      ]
    ]
  ],
  "test_cunit_invalid": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_cunit_invalid"
      ]
    ]
  ],
  "test_cunit_invalid2": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_cunit_invalid2"
      ]
    ]
  ],
  "test_unit2": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_unit2"
      ]
    ]
  ],
  "test_unit3": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_unit3"
      ]
    ]
  ],
  "test_unitfix": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_unitfix"
      ]
    ]
  ],
  "test_cylfix": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_cylfix"
      ]
    ]
  ],
  "test_dateavg": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_dateavg"
      ]
    ]
  ],
  "test_dateobs": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_dateobs"
      ]
    ]
  ],
  "test_datfix": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_datfix"
      ]
    ]
  ],
  "test_equinox": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_equinox"
      ]
    ]
  ],
  "test_fix2": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_fix2"
      ]
    ]
  ],
  "test_fix3": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_fix3"
      ]
    ]
  ],
  "test_fix4": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_fix4"
      ]
    ]
  ],
  "test_fix5": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_fix5"
      ]
    ]
  ],
  "test_get_ps": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_get_ps"
      ]
    ]
  ],
  "test_get_pv": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_get_pv"
      ]
    ]
  ],
  "test_imgpix_matrix": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_imgpix_matrix"
      ]
    ]
  ],
  "test_imgpix_matrix2": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_imgpix_matrix2"
      ]
    ]
  ],
  "test_isunity": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_isunity"
      ]
    ]
  ],
  "test_lat": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_lat"
      ]
    ]
  ],
  "test_lat_set": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_lat_set"
      ]
    ]
  ],
  "test_latpole": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_latpole"
      ]
    ]
  ],
  "test_lattyp": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_lattyp"
      ]
    ]
  ],
  "test_lattyp_set": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_lattyp_set"
      ]
    ]
  ],
  "test_lng": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_lng"
      ]
    ]
  ],
  "test_lng_set": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_lng_set"
      ]
    ]
  ],
  "test_lngtyp": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_lngtyp"
      ]
    ]
  ],
  "test_lngtyp_set": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_lngtyp_set"
      ]
    ]
  ],
  "test_lonpole": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_lonpole"
      ]
    ]
  ],
  "test_mix": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_mix"
      ]
    ]
  ],
  "test_mjdavg": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_mjdavg"
      ]
    ]
  ],
  "test_mjdobs": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_mjdobs"
      ]
    ]
  ],
  "test_naxis_set": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_naxis_set"
      ]
    ]
  ],
  "test_obsgeo": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_obsgeo"
      ]
    ]
  ],
  "test_pc_missing": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_pc_missing"
      ]
    ]
  ],
  "test_phi0": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_phi0"
      ]
    ]
  ],
  "test_piximg_matrix": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_piximg_matrix"
      ]
    ]
  ],
  "test_piximg_matrix2": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_piximg_matrix2"
      ]
    ]
  ],
  "test_print_contents": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_print_contents"
      ]
    ]
  ],
  "test_radesys": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_radesys"
      ]
    ]
  ],
  "test_restfrq": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_restfrq"
      ]
    ]
  ],
  "test_restwav": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_restwav"
      ]
    ]
  ],
  "test_set_ps": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_set_ps"
      ]
    ]
  ],
  "test_set_ps_realloc": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_set_ps_realloc"
      ]
    ]
  ],
  "test_set_pv": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_set_pv"
      ]
    ]
  ],
  "test_set_pv_realloc": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_set_pv_realloc"
      ]
    ]
  ],
  "test_spcfix": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_spcfix"
      ]
    ]
  ],
  "test_spec": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_spec"
      ]
    ]
  ],
  "test_spec_set": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_spec_set"
      ]
    ]
  ],
  "test_specsys": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_specsys"
      ]
    ]
  ],
  "test_sptr": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_sptr"
      ]
    ]
  ],
  "test_ssysobs": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_ssysobs"
      ]
    ]
  ],
  "test_ssyssrc": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_ssyssrc"
      ]
    ]
  ],
  "test_tab": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_tab"
      ]
    ]
  ],
  "test_theta0": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_theta0"
      ]
    ]
  ],
  "test_toheader": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_toheader"
      ]
    ]
  ],
  "test_velangl": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_velangl"
      ]
    ]
  ],
  "test_velosys": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_velosys"
      ]
    ]
  ],
  "test_velref": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_velref"
      ]
    ]
  ],
  "test_zsource": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_zsource"
      ]
    ]
  ],
  "test_cd_3d": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_cd_3d"
      ]
    ]
  ],
  "test_get_pc": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_get_pc"
      ]
    ]
  ],
  "test_detailed_err": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_detailed_err"
      ]
    ]
  ],
  "test_header_parse": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_header_parse"
      ]
    ]
  ],
  "test_locale": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_locale"
      ]
    ]
  ],
  "test_sub_segfault": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_sub_segfault"
      ]
    ]
  ],
  "test_wcs_sub_error_message": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_wcs_sub_error_message"
      ]
    ]
  ],
  "test_wcs_sub": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_wcs_sub"
      ]
    ]
  ],
  "test_compare": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_compare"
      ]
    ]
  ],
  "test_radesys_defaults": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_radesys_defaults"
      ]
    ]
  ],
  "test_radesys_defaults_full": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_radesys_defaults_full"
      ]
    ]
  ],
  "test_iteration": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_iteration"
      ]
    ]
  ],
  "test_invalid_args": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_invalid_args"
      ]
    ]
  ],
  "test_datebeg": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_datebeg"
      ]
    ]
  ],
  "test_char_keys": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_char_keys"
      ]
    ]
  ],
  "test_num_keys": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_num_keys"
      ]
    ]
  ],
  "test_array_keys": [
    [
      "astropy/wcs/tests/test_wcsprm.py",
      [
        "test_array_keys"
      ]
    ]
  ],
  "test_wtbarr_i": [
    [
      "astropy/wcs/tests/test_wtbarr.py",
      [
        "test_wtbarr_i"
      ]
    ]
  ],
  "test_wtbarr_m": [
    [
      "astropy/wcs/tests/test_wtbarr.py",
      [
        "test_wtbarr_m"
      ]
    ]
  ],
  "test_wtbarr_m_2": [
    [
      "astropy/wcs/tests/test_wtbarr.py",
      [
        "test_wtbarr_m_2"
      ]
    ]
  ],
  "test_wtbarr_extnam": [
    [
      "astropy/wcs/tests/test_wtbarr.py",
      [
        "test_wtbarr_extnam"
      ]
    ]
  ],
  "test_wtbarr_extver": [
    [
      "astropy/wcs/tests/test_wtbarr.py",
      [
        "test_wtbarr_extver"
      ]
    ]
  ],
  "test_wtbarr_extlev": [
    [
      "astropy/wcs/tests/test_wtbarr.py",
      [
        "test_wtbarr_extlev"
      ]
    ]
  ],
  "test_wtbarr_ttype": [
    [
      "astropy/wcs/tests/test_wtbarr.py",
      [
        "test_wtbarr_ttype"
      ]
    ]
  ],
  "test_wtbarr_row": [
    [
      "astropy/wcs/tests/test_wtbarr.py",
      [
        "test_wtbarr_row"
      ]
    ]
  ],
  "test_wtbarr_ndim": [
    [
      "astropy/wcs/tests/test_wtbarr.py",
      [
        "test_wtbarr_ndim"
      ]
    ]
  ],
  "test_wtbarr_print": [
    [
      "astropy/wcs/tests/test_wtbarr.py",
      [
        "test_wtbarr_print"
      ]
    ]
  ],
  "add_stokes_axis_to_wcs": [
    [
      "astropy/wcs/utils.py",
      [
        "add_stokes_axis_to_wcs"
      ]
    ]
  ],
  "_wcs_to_celestial_frame_builtin": [
    [
      "astropy/wcs/utils.py",
      [
        "_wcs_to_celestial_frame_builtin"
      ]
    ]
  ],
  "_celestial_frame_to_wcs_builtin": [
    [
      "astropy/wcs/utils.py",
      [
        "_celestial_frame_to_wcs_builtin"
      ]
    ]
  ],
  "wcs_to_celestial_frame": [
    [
      "astropy/wcs/utils.py",
      [
        "wcs_to_celestial_frame"
      ]
    ]
  ],
  "celestial_frame_to_wcs": [
    [
      "astropy/wcs/utils.py",
      [
        "celestial_frame_to_wcs"
      ]
    ]
  ],
  "proj_plane_pixel_scales": [
    [
      "astropy/wcs/utils.py",
      [
        "proj_plane_pixel_scales"
      ]
    ],
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "proj_plane_pixel_scales"
      ]
    ]
  ],
  "proj_plane_pixel_area": [
    [
      "astropy/wcs/utils.py",
      [
        "proj_plane_pixel_area"
      ]
    ],
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "proj_plane_pixel_area"
      ]
    ]
  ],
  "is_proj_plane_distorted": [
    [
      "astropy/wcs/utils.py",
      [
        "is_proj_plane_distorted"
      ]
    ]
  ],
  "_is_cd_orthogonal": [
    [
      "astropy/wcs/utils.py",
      [
        "_is_cd_orthogonal"
      ]
    ]
  ],
  "non_celestial_pixel_scales": [
    [
      "astropy/wcs/utils.py",
      [
        "non_celestial_pixel_scales"
      ]
    ]
  ],
  "_has_distortion": [
    [
      "astropy/wcs/utils.py",
      [
        "_has_distortion"
      ]
    ]
  ],
  "skycoord_to_pixel": [
    [
      "astropy/wcs/utils.py",
      [
        "skycoord_to_pixel"
      ]
    ]
  ],
  "pixel_to_skycoord": [
    [
      "astropy/wcs/utils.py",
      [
        "pixel_to_skycoord"
      ]
    ]
  ],
  "_unique_with_order_preserved": [
    [
      "astropy/wcs/utils.py",
      [
        "_unique_with_order_preserved"
      ]
    ]
  ],
  "_pixel_to_world_correlation_matrix": [
    [
      "astropy/wcs/utils.py",
      [
        "_pixel_to_world_correlation_matrix"
      ]
    ]
  ],
  "_pixel_to_pixel_correlation_matrix": [
    [
      "astropy/wcs/utils.py",
      [
        "_pixel_to_pixel_correlation_matrix"
      ]
    ]
  ],
  "_split_matrix": [
    [
      "astropy/wcs/utils.py",
      [
        "_split_matrix"
      ]
    ]
  ],
  "pixel_to_pixel": [
    [
      "astropy/wcs/utils.py",
      [
        "pixel_to_pixel"
      ]
    ]
  ],
  "local_partial_pixel_derivatives": [
    [
      "astropy/wcs/utils.py",
      [
        "local_partial_pixel_derivatives"
      ]
    ]
  ],
  "_linear_wcs_fit": [
    [
      "astropy/wcs/utils.py",
      [
        "_linear_wcs_fit"
      ]
    ]
  ],
  "_sip_fit": [
    [
      "astropy/wcs/utils.py",
      [
        "_sip_fit"
      ]
    ]
  ],
  "fit_wcs_from_points": [
    [
      "astropy/wcs/utils.py",
      [
        "fit_wcs_from_points"
      ]
    ]
  ],
  "obsgeo_to_frame": [
    [
      "astropy/wcs/utils.py",
      [
        "obsgeo_to_frame"
      ]
    ]
  ],
  "_load_tab_bintable": [
    [
      "astropy/wcs/wcs.py",
      [
        "if__wcs_is_not_None_",
        "_load_tab_bintable"
      ]
    ]
  ],
  "_parse_keysel": [
    [
      "astropy/wcs/wcs.py",
      [
        "_parse_keysel"
      ]
    ]
  ],
  "sub": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "sub"
      ]
    ]
  ],
  "_fix_scamp": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "_fix_scamp"
      ]
    ]
  ],
  "fix": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "fix"
      ]
    ]
  ],
  "calc_footprint": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "calc_footprint"
      ]
    ]
  ],
  "_read_det2im_kw": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "_read_det2im_kw"
      ]
    ]
  ],
  "_read_d2im_old_format": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "_read_d2im_old_format"
      ]
    ]
  ],
  "write_d2i": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "_write_det2im",
        "write_d2i"
      ]
    ]
  ],
  "_write_det2im": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "_write_det2im"
      ]
    ]
  ],
  "_read_distortion_kw": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "_read_distortion_kw"
      ]
    ]
  ],
  "write_dist": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "_write_distortion_kw",
        "write_dist"
      ]
    ]
  ],
  "_write_distortion_kw": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "_write_distortion_kw"
      ]
    ]
  ],
  "_remove_sip_kw": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "_remove_sip_kw"
      ]
    ]
  ],
  "_read_sip_kw": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "_read_sip_kw"
      ]
    ]
  ],
  "write_array": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "_write_sip_kw",
        "write_array"
      ]
    ]
  ],
  "_write_sip_kw": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "_write_sip_kw"
      ]
    ]
  ],
  "_denormalize_sky": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "_denormalize_sky"
      ]
    ]
  ],
  "_normalize_sky": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "_normalize_sky"
      ]
    ]
  ],
  "_return_list_of_arrays": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "_array_converter",
        "_return_list_of_arrays"
      ]
    ]
  ],
  "_return_single_array": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "_array_converter",
        "_return_single_array"
      ]
    ]
  ],
  "_array_converter": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "_array_converter"
      ]
    ]
  ],
  "all_pix2world": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "all_pix2world"
      ]
    ]
  ],
  "wcs_pix2world": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "wcs_pix2world"
      ]
    ]
  ],
  "_all_world2pix": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "_all_world2pix"
      ]
    ]
  ],
  "all_world2pix": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "all_world2pix"
      ]
    ]
  ],
  "wcs_world2pix": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "wcs_world2pix"
      ]
    ]
  ],
  "pix2foc": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "pix2foc"
      ]
    ]
  ],
  "p4_pix2foc": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "p4_pix2foc"
      ]
    ]
  ],
  "det2im": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "det2im"
      ]
    ]
  ],
  "sip_pix2foc": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "sip_pix2foc"
      ]
    ]
  ],
  "sip_foc2pix": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "sip_foc2pix"
      ]
    ]
  ],
  "to_fits": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "to_fits"
      ]
    ]
  ],
  "to_header": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "to_header"
      ]
    ]
  ],
  "_fix_ctype": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "_fix_ctype"
      ]
    ]
  ],
  "to_header_string": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "to_header_string"
      ]
    ]
  ],
  "footprint_to_file": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "footprint_to_file"
      ]
    ]
  ],
  "_get_naxis": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "_get_naxis"
      ]
    ]
  ],
  "printwcs": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "printwcs"
      ]
    ]
  ],
  "get_axis_types": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "get_axis_types"
      ]
    ]
  ],
  "dropaxis": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "dropaxis"
      ]
    ]
  ],
  "reorient_celestial_first": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "reorient_celestial_first"
      ]
    ]
  ],
  "slice": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "slice"
      ]
    ]
  ],
  "axis_type_names": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "axis_type_names"
      ]
    ]
  ],
  "celestial": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "celestial"
      ]
    ]
  ],
  "is_celestial": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "is_celestial"
      ]
    ]
  ],
  "has_celestial": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "has_celestial"
      ]
    ]
  ],
  "is_spectral": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "is_spectral"
      ]
    ]
  ],
  "has_spectral": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "has_spectral"
      ]
    ]
  ],
  "has_distortion": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "has_distortion"
      ]
    ]
  ],
  "pixel_scale_matrix": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "pixel_scale_matrix"
      ]
    ]
  ],
  "footprint_contains": [
    [
      "astropy/wcs/wcs.py",
      [
        "WCS",
        "footprint_contains"
      ]
    ]
  ],
  "__WCS_unpickle__": [
    [
      "astropy/wcs/wcs.py",
      [
        "__WCS_unpickle__"
      ]
    ]
  ],
  "find_all_wcs": [
    [
      "astropy/wcs/wcs.py",
      [
        "find_all_wcs"
      ]
    ]
  ],
  "spectral_1d_fitswcs": [
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "spectral_1d_fitswcs"
      ]
    ]
  ],
  "time_1d_fitswcs": [
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "time_1d_fitswcs"
      ]
    ]
  ],
  "celestial_2d_fitswcs": [
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "celestial_2d_fitswcs"
      ]
    ]
  ],
  "spectral_cube_3d_fitswcs": [
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "spectral_cube_3d_fitswcs"
      ]
    ]
  ],
  "cube_4d_fitswcs": [
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "cube_4d_fitswcs"
      ]
    ]
  ],
  "pixel_shape": [
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "Spectral1DLowLevelWCS",
        "pixel_shape"
      ]
    ],
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "Celestial2DLowLevelWCS",
        "pixel_shape"
      ]
    ],
    [
      "astropy/wcs/wcsapi/fitswcs.py",
      [
        "FITSWCSAPIMixin",
        "pixel_shape"
      ]
    ],
    [
      "astropy/wcs/wcsapi/low_level_api.py",
      [
        "BaseLowLevelWCS",
        "pixel_shape"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/base.py",
      [
        "BaseWCSWrapper",
        "pixel_shape"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/sliced_wcs.py",
      [
        "SlicedLowLevelWCS",
        "pixel_shape"
      ]
    ]
  ],
  "pixel_shape_6": [
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "Spectral1DLowLevelWCS",
        "pixel_shape_6"
      ]
    ]
  ],
  "pixel_bounds": [
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "Spectral1DLowLevelWCS",
        "pixel_bounds"
      ]
    ],
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "Celestial2DLowLevelWCS",
        "pixel_bounds"
      ]
    ],
    [
      "astropy/wcs/wcsapi/fitswcs.py",
      [
        "FITSWCSAPIMixin",
        "pixel_bounds"
      ]
    ],
    [
      "astropy/wcs/wcsapi/high_level_wcs_wrapper.py",
      [
        "HighLevelWCSWrapper",
        "pixel_bounds"
      ]
    ],
    [
      "astropy/wcs/wcsapi/low_level_api.py",
      [
        "BaseLowLevelWCS",
        "pixel_bounds"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/base.py",
      [
        "BaseWCSWrapper",
        "pixel_bounds"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/sliced_wcs.py",
      [
        "SlicedLowLevelWCS",
        "pixel_bounds"
      ]
    ]
  ],
  "pixel_bounds_8": [
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "Spectral1DLowLevelWCS",
        "pixel_bounds_8"
      ]
    ]
  ],
  "spectral_1d_ape14_wcs": [
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "spectral_1d_ape14_wcs"
      ]
    ]
  ],
  "celestial_2d_ape14_wcs": [
    [
      "astropy/wcs/wcsapi/conftest.py",
      [
        "celestial_2d_ape14_wcs"
      ]
    ]
  ],
  "array_shape": [
    [
      "astropy/wcs/wcsapi/fitswcs.py",
      [
        "FITSWCSAPIMixin",
        "array_shape"
      ]
    ],
    [
      "astropy/wcs/wcsapi/high_level_wcs_wrapper.py",
      [
        "HighLevelWCSWrapper",
        "array_shape"
      ]
    ],
    [
      "astropy/wcs/wcsapi/low_level_api.py",
      [
        "BaseLowLevelWCS",
        "array_shape"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/sliced_wcs.py",
      [
        "SlicedLowLevelWCS",
        "array_shape"
      ]
    ]
  ],
  "array_shape_3": [
    [
      "astropy/wcs/wcsapi/fitswcs.py",
      [
        "FITSWCSAPIMixin",
        "array_shape_3"
      ]
    ]
  ],
  "pixel_shape_5": [
    [
      "astropy/wcs/wcsapi/fitswcs.py",
      [
        "FITSWCSAPIMixin",
        "pixel_shape_5"
      ]
    ]
  ],
  "pixel_bounds_7": [
    [
      "astropy/wcs/wcsapi/fitswcs.py",
      [
        "FITSWCSAPIMixin",
        "pixel_bounds_7"
      ]
    ]
  ],
  "axis_correlation_matrix": [
    [
      "astropy/wcs/wcsapi/fitswcs.py",
      [
        "FITSWCSAPIMixin",
        "axis_correlation_matrix"
      ]
    ],
    [
      "astropy/wcs/wcsapi/high_level_wcs_wrapper.py",
      [
        "HighLevelWCSWrapper",
        "axis_correlation_matrix"
      ]
    ],
    [
      "astropy/wcs/wcsapi/low_level_api.py",
      [
        "BaseLowLevelWCS",
        "axis_correlation_matrix"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/base.py",
      [
        "BaseWCSWrapper",
        "axis_correlation_matrix"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/sliced_wcs.py",
      [
        "SlicedLowLevelWCS",
        "axis_correlation_matrix"
      ]
    ]
  ],
  "serialized_classes": [
    [
      "astropy/wcs/wcsapi/fitswcs.py",
      [
        "FITSWCSAPIMixin",
        "serialized_classes"
      ]
    ],
    [
      "astropy/wcs/wcsapi/low_level_api.py",
      [
        "BaseLowLevelWCS",
        "serialized_classes"
      ]
    ],
    [
      "astropy/wcs/wcsapi/tests/test_high_level_api.py",
      [
        "SerializedWCS",
        "serialized_classes"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/base.py",
      [
        "BaseWCSWrapper",
        "serialized_classes"
      ]
    ]
  ],
  "spectralcoord_from_redshift": [
    [
      "astropy/wcs/wcsapi/fitswcs.py",
      [
        "FITSWCSAPIMixin",
        "_get_components_and_classes",
        "if_self_has_spectral_",
        "if_ctype_ZOPT_",
        "spectralcoord_from_redshift"
      ]
    ]
  ],
  "redshift_from_spectralcoord": [
    [
      "astropy/wcs/wcsapi/fitswcs.py",
      [
        "FITSWCSAPIMixin",
        "_get_components_and_classes",
        "if_self_has_spectral_",
        "if_ctype_ZOPT_",
        "redshift_from_spectralcoord"
      ]
    ]
  ],
  "spectralcoord_from_value": [
    [
      "astropy/wcs/wcsapi/fitswcs.py",
      [
        "FITSWCSAPIMixin",
        "_get_components_and_classes",
        "if_self_has_spectral_",
        "if_ctype_ZOPT_",
        "else_",
        "spectralcoord_from_value"
      ]
    ]
  ],
  "value_from_spectralcoord": [
    [
      "astropy/wcs/wcsapi/fitswcs.py",
      [
        "FITSWCSAPIMixin",
        "_get_components_and_classes",
        "if_self_has_spectral_",
        "if_ctype_ZOPT_",
        "else_",
        "value_from_spectralcoord"
      ]
    ]
  ],
  "time_from_reference_and_offset": [
    [
      "astropy/wcs/wcsapi/fitswcs.py",
      [
        "FITSWCSAPIMixin",
        "_get_components_and_classes",
        "if_time_in_self_world_a",
        "for_i_in_range_self_naxis",
        "if_self_world_axis_physic",
        "time_from_reference_and_offset"
      ]
    ]
  ],
  "offset_from_time_and_reference": [
    [
      "astropy/wcs/wcsapi/fitswcs.py",
      [
        "FITSWCSAPIMixin",
        "_get_components_and_classes",
        "if_time_in_self_world_a",
        "for_i_in_range_self_naxis",
        "if_self_world_axis_physic",
        "offset_from_time_and_reference"
      ]
    ]
  ],
  "_get_components_and_classes": [
    [
      "astropy/wcs/wcsapi/fitswcs.py",
      [
        "FITSWCSAPIMixin",
        "_get_components_and_classes"
      ]
    ]
  ],
  "rec_getattr": [
    [
      "astropy/wcs/wcsapi/high_level_api.py",
      [
        "rec_getattr"
      ]
    ]
  ],
  "default_order": [
    [
      "astropy/wcs/wcsapi/high_level_api.py",
      [
        "default_order"
      ]
    ]
  ],
  "_toindex": [
    [
      "astropy/wcs/wcsapi/high_level_api.py",
      [
        "_toindex"
      ]
    ]
  ],
  "low_level_wcs": [
    [
      "astropy/wcs/wcsapi/high_level_api.py",
      [
        "BaseHighLevelWCS",
        "low_level_wcs"
      ]
    ],
    [
      "astropy/wcs/wcsapi/high_level_api.py",
      [
        "HighLevelWCSMixin",
        "low_level_wcs"
      ]
    ],
    [
      "astropy/wcs/wcsapi/high_level_wcs_wrapper.py",
      [
        "HighLevelWCSWrapper",
        "low_level_wcs"
      ]
    ]
  ],
  "pixel_to_world": [
    [
      "astropy/wcs/wcsapi/high_level_api.py",
      [
        "BaseHighLevelWCS",
        "pixel_to_world"
      ]
    ],
    [
      "astropy/wcs/wcsapi/high_level_api.py",
      [
        "HighLevelWCSMixin",
        "pixel_to_world"
      ]
    ]
  ],
  "array_index_to_world": [
    [
      "astropy/wcs/wcsapi/high_level_api.py",
      [
        "BaseHighLevelWCS",
        "array_index_to_world"
      ]
    ]
  ],
  "world_to_pixel": [
    [
      "astropy/wcs/wcsapi/high_level_api.py",
      [
        "BaseHighLevelWCS",
        "world_to_pixel"
      ]
    ],
    [
      "astropy/wcs/wcsapi/high_level_api.py",
      [
        "HighLevelWCSMixin",
        "world_to_pixel"
      ]
    ]
  ],
  "world_to_array_index": [
    [
      "astropy/wcs/wcsapi/high_level_api.py",
      [
        "BaseHighLevelWCS",
        "world_to_array_index"
      ]
    ]
  ],
  "high_level_objects_to_values": [
    [
      "astropy/wcs/wcsapi/high_level_api.py",
      [
        "high_level_objects_to_values"
      ]
    ]
  ],
  "values_to_high_level_objects": [
    [
      "astropy/wcs/wcsapi/high_level_api.py",
      [
        "values_to_high_level_objects"
      ]
    ]
  ],
  "_as_mpl_axes": [
    [
      "astropy/wcs/wcsapi/high_level_wcs_wrapper.py",
      [
        "HighLevelWCSWrapper",
        "_as_mpl_axes"
      ]
    ],
    [
      "astropy/wcs/wcsapi/low_level_api.py",
      [
        "BaseLowLevelWCS",
        "_as_mpl_axes"
      ]
    ]
  ],
  "array_index_to_world_values": [
    [
      "astropy/wcs/wcsapi/low_level_api.py",
      [
        "BaseLowLevelWCS",
        "array_index_to_world_values"
      ]
    ]
  ],
  "world_to_array_index_values": [
    [
      "astropy/wcs/wcsapi/low_level_api.py",
      [
        "BaseLowLevelWCS",
        "world_to_array_index_values"
      ]
    ]
  ],
  "pixel_axis_names": [
    [
      "astropy/wcs/wcsapi/low_level_api.py",
      [
        "BaseLowLevelWCS",
        "pixel_axis_names"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/base.py",
      [
        "BaseWCSWrapper",
        "pixel_axis_names"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/sliced_wcs.py",
      [
        "SlicedLowLevelWCS",
        "pixel_axis_names"
      ]
    ]
  ],
  "validate_physical_types": [
    [
      "astropy/wcs/wcsapi/low_level_api.py",
      [
        "validate_physical_types"
      ]
    ]
  ],
  "test_simple_celestial": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "test_simple_celestial"
      ]
    ]
  ],
  "test_spectral_cube": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "test_spectral_cube"
      ]
    ]
  ],
  "test_spectral_cube_nonaligned": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "test_spectral_cube_nonaligned"
      ]
    ]
  ],
  "test_time_cube": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "test_time_cube"
      ]
    ]
  ],
  "header_time_1d": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "header_time_1d"
      ]
    ],
    [
      "astropy/wcs/wcsapi/wrappers/tests/test_sliced_wcs.py",
      [
        "header_time_1d"
      ]
    ]
  ],
  "assert_time_at": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "assert_time_at"
      ]
    ]
  ],
  "test_time_1d_values": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "test_time_1d_values"
      ]
    ]
  ],
  "test_time_1d_values_gps": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "test_time_1d_values_gps"
      ]
    ]
  ],
  "test_time_1d_values_deprecated": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "test_time_1d_values_deprecated"
      ]
    ]
  ],
  "test_time_1d_values_time": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "test_time_1d_values_time"
      ]
    ]
  ],
  "test_time_1d_roundtrip": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "test_time_1d_roundtrip"
      ]
    ]
  ],
  "test_time_1d_high_precision": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "test_time_1d_high_precision"
      ]
    ]
  ],
  "test_time_1d_location_geodetic": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "test_time_1d_location_geodetic"
      ]
    ]
  ],
  "header_time_1d_no_obs": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "header_time_1d_no_obs"
      ]
    ]
  ],
  "test_time_1d_location_geocentric": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "test_time_1d_location_geocentric"
      ]
    ]
  ],
  "test_time_1d_location_geocenter": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "test_time_1d_location_geocenter"
      ]
    ]
  ],
  "test_time_1d_location_missing": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "test_time_1d_location_missing"
      ]
    ]
  ],
  "test_time_1d_location_incomplete": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "test_time_1d_location_incomplete"
      ]
    ]
  ],
  "test_time_1d_location_unsupported": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "test_time_1d_location_unsupported"
      ]
    ]
  ],
  "test_time_1d_unsupported_ctype": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "test_time_1d_unsupported_ctype"
      ]
    ]
  ],
  "test_unrecognized_unit": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "test_unrecognized_unit"
      ]
    ]
  ],
  "test_distortion_correlations": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "test_distortion_correlations"
      ]
    ]
  ],
  "test_custom_ctype_to_ucd_mappings": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "test_custom_ctype_to_ucd_mappings"
      ]
    ]
  ],
  "test_caching_components_and_classes": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "test_caching_components_and_classes"
      ]
    ]
  ],
  "test_sub_wcsapi_attributes": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "test_sub_wcsapi_attributes"
      ]
    ]
  ],
  "header_polarized": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "header_polarized"
      ]
    ]
  ],
  "test_phys_type_polarization": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "test_phys_type_polarization"
      ]
    ]
  ],
  "header_spectral_frames": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "header_spectral_frames"
      ]
    ]
  ],
  "test_spectralcoord_frame": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "test_spectralcoord_frame"
      ]
    ]
  ],
  "test_different_ctypes": [
    [
      "astropy/wcs/wcsapi/tests/test_fitswcs.py",
      [
        "test_different_ctypes"
      ]
    ]
  ],
  "test_simple_duplicate": [
    [
      "astropy/wcs/wcsapi/tests/test_high_level_api.py",
      [
        "test_simple_duplicate"
      ]
    ]
  ],
  "test_skycoord_duplicate": [
    [
      "astropy/wcs/wcsapi/tests/test_high_level_api.py",
      [
        "test_skycoord_duplicate"
      ]
    ]
  ],
  "test_serialized_classes": [
    [
      "astropy/wcs/wcsapi/tests/test_high_level_api.py",
      [
        "test_serialized_classes"
      ]
    ]
  ],
  "test_objects_to_values": [
    [
      "astropy/wcs/wcsapi/tests/test_high_level_api.py",
      [
        "test_objects_to_values"
      ]
    ]
  ],
  "test_values_to_objects": [
    [
      "astropy/wcs/wcsapi/tests/test_high_level_api.py",
      [
        "test_values_to_objects"
      ]
    ]
  ],
  "test_wrapper": [
    [
      "astropy/wcs/wcsapi/tests/test_high_level_wcs_wrapper.py",
      [
        "test_wrapper"
      ]
    ]
  ],
  "test_wrapper_invalid": [
    [
      "astropy/wcs/wcsapi/tests/test_high_level_wcs_wrapper.py",
      [
        "test_wrapper_invalid"
      ]
    ]
  ],
  "test_validate_physical_types": [
    [
      "astropy/wcs/wcsapi/tests/test_low_level_api.py",
      [
        "test_validate_physical_types"
      ]
    ]
  ],
  "test_construct": [
    [
      "astropy/wcs/wcsapi/tests/test_utils.py",
      [
        "test_construct"
      ]
    ]
  ],
  "test_noconstruct": [
    [
      "astropy/wcs/wcsapi/tests/test_utils.py",
      [
        "test_noconstruct"
      ]
    ]
  ],
  "test_wcs_info_str": [
    [
      "astropy/wcs/wcsapi/tests/test_utils.py",
      [
        "test_wcs_info_str"
      ]
    ]
  ],
  "deserialize_class": [
    [
      "astropy/wcs/wcsapi/utils.py",
      [
        "deserialize_class"
      ]
    ]
  ],
  "wcs_info_str": [
    [
      "astropy/wcs/wcsapi/utils.py",
      [
        "wcs_info_str"
      ]
    ]
  ],
  "sanitize_slices": [
    [
      "astropy/wcs/wcsapi/wrappers/sliced_wcs.py",
      [
        "sanitize_slices"
      ]
    ]
  ],
  "combine_slices": [
    [
      "astropy/wcs/wcsapi/wrappers/sliced_wcs.py",
      [
        "combine_slices"
      ]
    ]
  ],
  "dropped_world_dimensions": [
    [
      "astropy/wcs/wcsapi/wrappers/sliced_wcs.py",
      [
        "SlicedLowLevelWCS",
        "dropped_world_dimensions"
      ]
    ]
  ],
  "_pixel_to_world_values_all": [
    [
      "astropy/wcs/wcsapi/wrappers/sliced_wcs.py",
      [
        "SlicedLowLevelWCS",
        "_pixel_to_world_values_all"
      ]
    ]
  ],
  "test_invalid_slices": [
    [
      "astropy/wcs/wcsapi/wrappers/tests/test_sliced_wcs.py",
      [
        "test_invalid_slices"
      ]
    ]
  ],
  "test_sanitize_slice": [
    [
      "astropy/wcs/wcsapi/wrappers/tests/test_sliced_wcs.py",
      [
        "test_sanitize_slice"
      ]
    ]
  ],
  "test_ellipsis": [
    [
      "astropy/wcs/wcsapi/wrappers/tests/test_sliced_wcs.py",
      [
        "test_ellipsis"
      ]
    ]
  ],
  "test_pixel_to_world_broadcasting": [
    [
      "astropy/wcs/wcsapi/wrappers/tests/test_sliced_wcs.py",
      [
        "test_pixel_to_world_broadcasting"
      ]
    ]
  ],
  "test_world_to_pixel_broadcasting": [
    [
      "astropy/wcs/wcsapi/wrappers/tests/test_sliced_wcs.py",
      [
        "test_world_to_pixel_broadcasting"
      ]
    ]
  ],
  "test_spectral_slice": [
    [
      "astropy/wcs/wcsapi/wrappers/tests/test_sliced_wcs.py",
      [
        "test_spectral_slice"
      ]
    ]
  ],
  "test_spectral_range": [
    [
      "astropy/wcs/wcsapi/wrappers/tests/test_sliced_wcs.py",
      [
        "test_spectral_range"
      ]
    ]
  ],
  "test_celestial_slice": [
    [
      "astropy/wcs/wcsapi/wrappers/tests/test_sliced_wcs.py",
      [
        "test_celestial_slice"
      ]
    ]
  ],
  "test_celestial_range": [
    [
      "astropy/wcs/wcsapi/wrappers/tests/test_sliced_wcs.py",
      [
        "test_celestial_range"
      ]
    ]
  ],
  "test_celestial_range_rot": [
    [
      "astropy/wcs/wcsapi/wrappers/tests/test_sliced_wcs.py",
      [
        "test_celestial_range_rot"
      ]
    ]
  ],
  "test_no_array_shape": [
    [
      "astropy/wcs/wcsapi/wrappers/tests/test_sliced_wcs.py",
      [
        "test_no_array_shape"
      ]
    ]
  ],
  "test_ellipsis_none_types": [
    [
      "astropy/wcs/wcsapi/wrappers/tests/test_sliced_wcs.py",
      [
        "test_ellipsis_none_types"
      ]
    ]
  ],
  "test_combine_slices": [
    [
      "astropy/wcs/wcsapi/wrappers/tests/test_sliced_wcs.py",
      [
        "test_combine_slices"
      ]
    ]
  ],
  "test_nested_slicing": [
    [
      "astropy/wcs/wcsapi/wrappers/tests/test_sliced_wcs.py",
      [
        "test_nested_slicing"
      ]
    ]
  ],
  "test_too_much_slicing": [
    [
      "astropy/wcs/wcsapi/wrappers/tests/test_sliced_wcs.py",
      [
        "test_too_much_slicing"
      ]
    ]
  ],
  "time_1d_wcs": [
    [
      "astropy/wcs/wcsapi/wrappers/tests/test_sliced_wcs.py",
      [
        "time_1d_wcs"
      ]
    ]
  ],
  "test_1d_sliced_low_level": [
    [
      "astropy/wcs/wcsapi/wrappers/tests/test_sliced_wcs.py",
      [
        "test_1d_sliced_low_level"
      ]
    ]
  ],
  "validate_info_dict": [
    [
      "astropy/wcs/wcsapi/wrappers/tests/test_sliced_wcs.py",
      [
        "validate_info_dict"
      ]
    ]
  ],
  "test_dropped_dimensions": [
    [
      "astropy/wcs/wcsapi/wrappers/tests/test_sliced_wcs.py",
      [
        "test_dropped_dimensions"
      ]
    ]
  ],
  "test_dropped_dimensions_4d": [
    [
      "astropy/wcs/wcsapi/wrappers/tests/test_sliced_wcs.py",
      [
        "test_dropped_dimensions_4d"
      ]
    ]
  ],
  "test_pixel_to_world_values_different_int_types": [
    [
      "astropy/wcs/wcsapi/wrappers/tests/test_sliced_wcs.py",
      [
        "test_pixel_to_world_values_different_int_types"
      ]
    ]
  ],
  "pytest_report_header": [
    [
      "conftest.py",
      [
        "pytest_report_header"
      ]
    ]
  ],
  "rstjinja": [
    [
      "docs/conf.py",
      [
        "rstjinja"
      ]
    ]
  ],
  "resolve_astropy_and_dev_reference": [
    [
      "docs/conf.py",
      [
        "resolve_astropy_and_dev_reference"
      ]
    ]
  ],
  "_docdir": [
    [
      "docs/conftest.py",
      [
        "_docdir"
      ]
    ]
  ],
  "download_image_save_cutout": [
    [
      "docs/nddata/examples/cutout2d_tofits.py",
      [
        "download_image_save_cutout"
      ]
    ]
  ],
  "load_wcs_from_file": [
    [
      "docs/wcs/examples/from_file.py",
      [
        "load_wcs_from_file"
      ]
    ]
  ],
  "galactic_to_sgr": [
    [
      "examples/coordinates/plot_sgr-coordinate-frame.py",
      [
        "galactic_to_sgr"
      ]
    ]
  ],
  "sgr_to_galactic": [
    [
      "examples/coordinates/plot_sgr-coordinate-frame.py",
      [
        "sgr_to_galactic"
      ]
    ]
  ],
  "rv_to_gsr": [
    [
      "examples/coordinates/rv-to-gsr.py",
      [
        "rv_to_gsr"
      ]
    ]
  ],
  "dummy": [
    [
      "examples/template/example-template.py",
      [
        "dummy"
      ]
    ]
  ]
}