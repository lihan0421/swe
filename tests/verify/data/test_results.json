{
    "test_results": [
      {
        "status": "PASSED",
        "name": "test_html_autocomplete_attributes (auth_tests.test_forms.AdminPasswordChangeFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "AdminPasswordChangeFormTest.test_html_autocomplete_attributes",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_missing_passwords (auth_tests.test_forms.AdminPasswordChangeFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "AdminPasswordChangeFormTest.test_missing_passwords",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_non_matching_passwords (auth_tests.test_forms.AdminPasswordChangeFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "AdminPasswordChangeFormTest.test_non_matching_passwords",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_one_password (auth_tests.test_forms.AdminPasswordChangeFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "AdminPasswordChangeFormTest.test_one_password",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_password_whitespace_not_stripped (auth_tests.test_forms.AdminPasswordChangeFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "AdminPasswordChangeFormTest.test_password_whitespace_not_stripped",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_success (auth_tests.test_forms.AdminPasswordChangeFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "AdminPasswordChangeFormTest.test_success",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_custom_login_allowed_policy (auth_tests.test_forms.AuthenticationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "AuthenticationFormTest.test_custom_login_allowed_policy",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_get_invalid_login_error (auth_tests.test_forms.AuthenticationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "AuthenticationFormTest.test_get_invalid_login_error",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_html_autocomplete_attributes (auth_tests.test_forms.AuthenticationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "AuthenticationFormTest.test_html_autocomplete_attributes",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_inactive_user (auth_tests.test_forms.AuthenticationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "AuthenticationFormTest.test_inactive_user",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_inactive_user_i18n (auth_tests.test_forms.AuthenticationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "AuthenticationFormTest.test_inactive_user_i18n",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "An invalid login doesn't leak the inactive status of a user.",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "AuthenticationFormTest.test_inactive_user_incorrect_password",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_integer_username (auth_tests.test_forms.AuthenticationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "AuthenticationFormTest.test_integer_username",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_invalid_username (auth_tests.test_forms.AuthenticationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "AuthenticationFormTest.test_invalid_username",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_login_failed (auth_tests.test_forms.AuthenticationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "AuthenticationFormTest.test_login_failed",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_no_password (auth_tests.test_forms.AuthenticationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "AuthenticationFormTest.test_no_password",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_password_whitespace_not_stripped (auth_tests.test_forms.AuthenticationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "AuthenticationFormTest.test_password_whitespace_not_stripped",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_success (auth_tests.test_forms.AuthenticationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "AuthenticationFormTest.test_success",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_unicode_username (auth_tests.test_forms.AuthenticationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "AuthenticationFormTest.test_unicode_username",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_username_field_autocapitalize_none (auth_tests.test_forms.AuthenticationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "AuthenticationFormTest.test_username_field_autocapitalize_none",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_username_field_label (auth_tests.test_forms.AuthenticationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "AuthenticationFormTest.test_username_field_label",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_username_field_label_empty_string (auth_tests.test_forms.AuthenticationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "AuthenticationFormTest.test_username_field_label_empty_string",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_username_field_label_not_set (auth_tests.test_forms.AuthenticationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "AuthenticationFormTest.test_username_field_label_not_set",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_username_field_max_length_defaults_to_254 (auth_tests.test_forms.AuthenticationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "AuthenticationFormTest.test_username_field_max_length_defaults_to_254",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_username_field_max_length_matches_user_model (auth_tests.test_forms.AuthenticationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "AuthenticationFormTest.test_username_field_max_length_matches_user_model",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_field_order (auth_tests.test_forms.PasswordChangeFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "PasswordChangeFormTest.test_field_order",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_html_autocomplete_attributes (auth_tests.test_forms.PasswordChangeFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "PasswordChangeFormTest.test_html_autocomplete_attributes",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_incorrect_password (auth_tests.test_forms.PasswordChangeFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "PasswordChangeFormTest.test_incorrect_password",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_password_verification (auth_tests.test_forms.PasswordChangeFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "PasswordChangeFormTest.test_password_verification",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_password_whitespace_not_stripped (auth_tests.test_forms.PasswordChangeFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "PasswordChangeFormTest.test_password_whitespace_not_stripped",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_success (auth_tests.test_forms.PasswordChangeFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "PasswordChangeFormTest.test_success",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_cleaned_data (auth_tests.test_forms.PasswordResetFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "PasswordResetFormTest.test_cleaned_data",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_custom_email_constructor (auth_tests.test_forms.PasswordResetFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "PasswordResetFormTest.test_custom_email_constructor",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_custom_email_field (auth_tests.test_forms.PasswordResetFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "PasswordResetFormTest.test_custom_email_field",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_custom_email_subject (auth_tests.test_forms.PasswordResetFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "PasswordResetFormTest.test_custom_email_subject",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_html_autocomplete_attributes (auth_tests.test_forms.PasswordResetFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "PasswordResetFormTest.test_html_autocomplete_attributes",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "Inactive user cannot receive password reset email.",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "PasswordResetFormTest.test_inactive_user",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_invalid_email (auth_tests.test_forms.PasswordResetFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "PasswordResetFormTest.test_invalid_email",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "Test nonexistent email address. This should not fail because it would",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "PasswordResetFormTest.test_nonexistent_email",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "Preserve the case of the user name (before the @ in the email address)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "PasswordResetFormTest.test_preserve_username_case",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "Test the PasswordResetForm.save() method with html_email_template_name",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "PasswordResetFormTest.test_save_html_email_template_name",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "Test the PasswordResetForm.save() method with no html_email_template_name",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "PasswordResetFormTest.test_save_plaintext_email",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_unusable_password (auth_tests.test_forms.PasswordResetFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "PasswordResetFormTest.test_unusable_password",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_user_email_domain_unicode_collision (auth_tests.test_forms.PasswordResetFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "PasswordResetFormTest.test_user_email_domain_unicode_collision",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_user_email_domain_unicode_collision_nonexistent (auth_tests.test_forms.PasswordResetFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "PasswordResetFormTest.test_user_email_domain_unicode_collision_nonexistent",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_user_email_unicode_collision (auth_tests.test_forms.PasswordResetFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "PasswordResetFormTest.test_user_email_unicode_collision",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_user_email_unicode_collision_nonexistent (auth_tests.test_forms.PasswordResetFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "PasswordResetFormTest.test_user_email_unicode_collision_nonexistent",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_help_text_translation (auth_tests.test_forms.SetPasswordFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "SetPasswordFormTest.test_help_text_translation",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_html_autocomplete_attributes (auth_tests.test_forms.SetPasswordFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "SetPasswordFormTest.test_html_autocomplete_attributes",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_no_password (auth_tests.test_forms.SetPasswordFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "SetPasswordFormTest.test_no_password",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_password_verification (auth_tests.test_forms.SetPasswordFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "SetPasswordFormTest.test_password_verification",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_password_whitespace_not_stripped (auth_tests.test_forms.SetPasswordFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "SetPasswordFormTest.test_password_whitespace_not_stripped",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_success (auth_tests.test_forms.SetPasswordFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "SetPasswordFormTest.test_success",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_validates_password (auth_tests.test_forms.SetPasswordFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "SetPasswordFormTest.test_validates_password",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_bug_14242 (auth_tests.test_forms.UserChangeFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "UserChangeFormTest.test_bug_14242",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_bug_17944_empty_password (auth_tests.test_forms.UserChangeFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "UserChangeFormTest.test_bug_17944_empty_password",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_bug_17944_unknown_password_algorithm (auth_tests.test_forms.UserChangeFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "UserChangeFormTest.test_bug_17944_unknown_password_algorithm",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_bug_17944_unmanageable_password (auth_tests.test_forms.UserChangeFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "UserChangeFormTest.test_bug_17944_unmanageable_password",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "The change form does not return the password value",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "UserChangeFormTest.test_bug_19133",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_bug_19349_bound_password_field (auth_tests.test_forms.UserChangeFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "UserChangeFormTest.test_bug_19349_bound_password_field",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_custom_form (auth_tests.test_forms.UserChangeFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "UserChangeFormTest.test_custom_form",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_password_excluded (auth_tests.test_forms.UserChangeFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "UserChangeFormTest.test_password_excluded",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_unusable_password (auth_tests.test_forms.UserChangeFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "UserChangeFormTest.test_unusable_password",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_username_field_autocapitalize_none (auth_tests.test_forms.UserChangeFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "UserChangeFormTest.test_username_field_autocapitalize_none",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_username_validity (auth_tests.test_forms.UserChangeFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "UserChangeFormTest.test_username_validity",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_both_passwords (auth_tests.test_forms.UserCreationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "UserCreationFormTest.test_both_passwords",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_custom_form (auth_tests.test_forms.UserCreationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "UserCreationFormTest.test_custom_form",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_custom_form_hidden_username_field (auth_tests.test_forms.UserCreationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "UserCreationFormTest.test_custom_form_hidden_username_field",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_custom_form_with_different_username_field (auth_tests.test_forms.UserCreationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "UserCreationFormTest.test_custom_form_with_different_username_field",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "To prevent almost identical usernames, visually identical but differing",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "UserCreationFormTest.test_duplicate_normalized_unicode",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_html_autocomplete_attributes (auth_tests.test_forms.UserCreationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "UserCreationFormTest.test_html_autocomplete_attributes",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_invalid_data (auth_tests.test_forms.UserCreationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "UserCreationFormTest.test_invalid_data",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_normalize_username (auth_tests.test_forms.UserCreationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "UserCreationFormTest.test_normalize_username",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_password_help_text (auth_tests.test_forms.UserCreationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "UserCreationFormTest.test_password_help_text",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_password_verification (auth_tests.test_forms.UserCreationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "UserCreationFormTest.test_password_verification",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_password_whitespace_not_stripped (auth_tests.test_forms.UserCreationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "UserCreationFormTest.test_password_whitespace_not_stripped",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_success (auth_tests.test_forms.UserCreationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "UserCreationFormTest.test_success",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_unicode_username (auth_tests.test_forms.UserCreationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "UserCreationFormTest.test_unicode_username",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_user_already_exists (auth_tests.test_forms.UserCreationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "UserCreationFormTest.test_user_already_exists",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "UserCreationForm password validation uses all of the form's data.",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "UserCreationFormTest.test_user_create_form_validates_password_with_all_data",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_username_field_autocapitalize_none (auth_tests.test_forms.UserCreationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "UserCreationFormTest.test_username_field_autocapitalize_none",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_validates_password (auth_tests.test_forms.UserCreationFormTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "UserCreationFormTest.test_validates_password",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_inactive_user (admin_views.test_forms.AdminAuthenticationFormTests)",
        "file_path": "tests/admin_views/test_forms.py",
        "method": "AdminAuthenticationFormTests.test_inactive_user",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_bug_19349_render_with_none_value (auth_tests.test_forms.ReadOnlyPasswordHashTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "ReadOnlyPasswordHashTest.test_bug_19349_render_with_none_value",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "ReadOnlyPasswordHashWidget doesn't contain a for attribute in the",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "ReadOnlyPasswordHashTest.test_label",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_readonly_field_has_changed (auth_tests.test_forms.ReadOnlyPasswordHashTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "ReadOnlyPasswordHashTest.test_readonly_field_has_changed",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_render (auth_tests.test_forms.ReadOnlyPasswordHashTest)",
        "file_path": "tests/auth_tests/test_forms.py",
        "method": "ReadOnlyPasswordHashTest.test_render",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_warning (forms_tests.tests.test_forms.DeprecationTests)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "DeprecationTests.test_warning",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_accessing_clean (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_accessing_clean",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_auto_id (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_auto_id",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_auto_id_false (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_auto_id_false",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_auto_id_on_form_and_field (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_auto_id_on_form_and_field",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_auto_id_true (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_auto_id_true",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "BaseForm.__repr__() should contain some basic information about the",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_baseform_repr",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "BaseForm.__repr__() shouldn't trigger the form validation.",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_baseform_repr_dont_trigger_validation",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "BoundField without any choices (subwidgets) evaluates to True.",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_boundfield_bool",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_boundfield_css_classes (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_boundfield_css_classes",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_boundfield_empty_label (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_boundfield_empty_label",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_boundfield_id_for_label (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_boundfield_id_for_label",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "If an id is provided in `Widget.attrs`, it overrides the generated ID,",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_boundfield_id_for_label_override_by_attrs",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "Multiple calls to BoundField().value() in an unbound form should return",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_boundfield_initial_called_once",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_boundfield_invalid_index (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_boundfield_invalid_index",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_boundfield_label_tag (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_boundfield_label_tag",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_boundfield_label_tag_custom_widget_id_for_label (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_boundfield_label_tag_custom_widget_id_for_label",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "If a widget has no id, label_tag() and legend_tag() return the text",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_boundfield_label_tag_no_id",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_boundfield_slice (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_boundfield_slice",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "If auto_id is provided when initializing the form, the generated ID in",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_boundfield_subwidget_id_for_label",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_boundfield_value_disabled_callable_initial (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_boundfield_value_disabled_callable_initial",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_boundfield_values (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_boundfield_values",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_boundfield_widget_type (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_boundfield_widget_type",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_callable_initial_data (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_callable_initial_data",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_changed_data (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_changed_data",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_changing_cleaned_data_in_clean (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_changing_cleaned_data_in_clean",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_changing_cleaned_data_nothing_returned (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_changing_cleaned_data_nothing_returned",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_checkbox_auto_id (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_checkbox_auto_id",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_class_prefix (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_class_prefix",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_cleaned_data_only_fields (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_cleaned_data_only_fields",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_custom_boundfield (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_custom_boundfield",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "Form fields can customize what is considered as an empty value",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_custom_empty_values",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_datetime_changed_data_callable_with_microseconds (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_datetime_changed_data_callable_with_microseconds",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "The cleaned value for a form with a disabled DateTimeField and callable",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_datetime_clean_disabled_callable_initial_bound_field",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "Cleaning a form with a disabled DateTimeField and callable initial",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_datetime_clean_disabled_callable_initial_microseconds",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_dynamic_construction (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_dynamic_construction",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_dynamic_initial_data (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_dynamic_initial_data",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_empty_data_files_multi_value_dict (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_empty_data_files_multi_value_dict",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_empty_dict (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_empty_dict",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_empty_permitted (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_empty_permitted",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_empty_permitted_and_use_required_attribute (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_empty_permitted_and_use_required_attribute",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_empty_querydict_args (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_empty_querydict_args",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_error_dict (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_error_dict",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "#21962 - adding html escape flag to ErrorDict",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_error_dict_as_json_escape_html",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_error_escaping (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_error_escaping",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_error_html_required_html_classes (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_error_html_required_html_classes",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_error_list (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_error_list",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_error_list_class_has_one_class_specified (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_error_list_class_has_one_class_specified",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_error_list_class_not_specified (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_error_list_class_not_specified",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_error_list_with_hidden_field_errors_has_correct_class (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_error_list_with_hidden_field_errors_has_correct_class",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_error_list_with_non_field_errors_has_correct_class (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_error_list_with_non_field_errors_has_correct_class",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_escaping (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_escaping",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_explicit_field_order (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_explicit_field_order",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_extracting_hidden_and_visible (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_extracting_hidden_and_visible",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_field_deep_copy_error_messages (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_field_deep_copy_error_messages",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_field_named_data (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_field_named_data",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_field_order (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_field_order",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_filefield_initial_callable (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_filefield_initial_callable",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_filefield_with_fileinput_required (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_filefield_with_fileinput_required",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_form (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_form",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_form_html_attributes (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_form_html_attributes",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_form_with_disabled_fields (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_form_with_disabled_fields",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_form_with_iterable_boundfield (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_form_with_iterable_boundfield",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_form_with_iterable_boundfield_id (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_form_with_iterable_boundfield_id",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_form_with_noniterable_boundfield (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_form_with_noniterable_boundfield",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_forms_with_choices (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_forms_with_choices",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_forms_with_file_fields (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_forms_with_file_fields",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_forms_with_multiple_choice (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_forms_with_multiple_choice",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_forms_with_null_boolean (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_forms_with_null_boolean",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_forms_with_prefixes (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_forms_with_prefixes",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_forms_with_radio (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_forms_with_radio",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_get_initial_for_field (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_get_initial_for_field",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_has_error (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_has_error",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_help_text (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_help_text",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "help_text should not be escaped.",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_help_text_html_safe",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_hidden_data (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_hidden_data",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_hidden_initial_gets_id (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_hidden_initial_gets_id",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_hidden_widget (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_hidden_widget",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_html_output_with_hidden_input_field_errors (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_html_output_with_hidden_input_field_errors",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_html_safe (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_html_safe",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_id_on_field (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_id_on_field",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_initial_data (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_initial_data",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_initial_datetime_values (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_initial_datetime_values",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_iterable_boundfield_select (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_iterable_boundfield_select",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_label_attrs_not_localized (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_label_attrs_not_localized",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_label_does_not_include_new_line (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_label_does_not_include_new_line",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "required_css_class is added to label_tag() and legend_tag() of required",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_label_has_required_css_class",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_label_split_datetime_not_displayed (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_label_split_datetime_not_displayed",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_label_suffix (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_label_suffix",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "BoundField label_suffix (if provided) overrides Form label_suffix",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_label_suffix_override",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_multipart_encoded_form (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_multipart_encoded_form",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_multiple_checkbox_render (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_multiple_checkbox_render",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_multiple_choice_checkbox (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_multiple_choice_checkbox",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_multiple_choice_list_data (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_multiple_choice_list_data",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_multiple_hidden (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_multiple_hidden",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "#19298 -- MultiValueField needs to override the default as it needs",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_multivalue_deep_copy",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_multivalue_field_validation (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_multivalue_field_validation",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "#23674 -- invalid initial data should not break form.changed_data()",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_multivalue_initial_data",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_multivalue_optional_subfields (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_multivalue_optional_subfields",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_multivalue_optional_subfields_rendering (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_multivalue_optional_subfields_rendering",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_only_hidden_fields (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_only_hidden_fields",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_optional_data (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_optional_data",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_specifying_labels (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_specifying_labels",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_subclassing_forms (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_subclassing_forms",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_unbound_form (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_unbound_form",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_unicode_values (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_unicode_values",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_update_error_dict (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_update_error_dict",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_use_required_attribute_false (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_use_required_attribute_false",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_use_required_attribute_true (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_use_required_attribute_true",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_validating_multiple_fields (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_validating_multiple_fields",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "The list of form field validators can be modified without polluting",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_validators_independence",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_various_boolean_values (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_various_boolean_values",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_widget_output (forms_tests.tests.test_forms.FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "FormsTestCase.test_widget_output",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_accessing_clean (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_accessing_clean",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_auto_id (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_auto_id",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_auto_id_false (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_auto_id_false",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_auto_id_on_form_and_field (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_auto_id_on_form_and_field",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_auto_id_true (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_auto_id_true",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "BaseForm.__repr__() should contain some basic information about the",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_baseform_repr",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "BaseForm.__repr__() shouldn't trigger the form validation.",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_baseform_repr_dont_trigger_validation",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "BoundField without any choices (subwidgets) evaluates to True.",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_boundfield_bool",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_boundfield_css_classes (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_boundfield_css_classes",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_boundfield_empty_label (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_boundfield_empty_label",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_boundfield_id_for_label (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_boundfield_id_for_label",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "If an id is provided in `Widget.attrs`, it overrides the generated ID,",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_boundfield_id_for_label_override_by_attrs",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "Multiple calls to BoundField().value() in an unbound form should return",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_boundfield_initial_called_once",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_boundfield_invalid_index (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_boundfield_invalid_index",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_boundfield_label_tag (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_boundfield_label_tag",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_boundfield_label_tag_custom_widget_id_for_label (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_boundfield_label_tag_custom_widget_id_for_label",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "If a widget has no id, label_tag() and legend_tag() return the text",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_boundfield_label_tag_no_id",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_boundfield_slice (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_boundfield_slice",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "If auto_id is provided when initializing the form, the generated ID in",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_boundfield_subwidget_id_for_label",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_boundfield_value_disabled_callable_initial (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_boundfield_value_disabled_callable_initial",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_boundfield_values (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_boundfield_values",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_boundfield_widget_type (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_boundfield_widget_type",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_callable_initial_data (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_callable_initial_data",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_changed_data (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_changed_data",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_changing_cleaned_data_in_clean (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_changing_cleaned_data_in_clean",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_changing_cleaned_data_nothing_returned (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_changing_cleaned_data_nothing_returned",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_checkbox_auto_id (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_checkbox_auto_id",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_class_prefix (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_class_prefix",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_cleaned_data_only_fields (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_cleaned_data_only_fields",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_custom_boundfield (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_custom_boundfield",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "Form fields can customize what is considered as an empty value",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_custom_empty_values",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_datetime_changed_data_callable_with_microseconds (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_datetime_changed_data_callable_with_microseconds",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "The cleaned value for a form with a disabled DateTimeField and callable",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_datetime_clean_disabled_callable_initial_bound_field",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "Cleaning a form with a disabled DateTimeField and callable initial",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_datetime_clean_disabled_callable_initial_microseconds",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_dynamic_construction (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_dynamic_construction",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_dynamic_initial_data (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_dynamic_initial_data",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_empty_data_files_multi_value_dict (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_empty_data_files_multi_value_dict",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_empty_dict (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_empty_dict",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_empty_permitted (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_empty_permitted",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_empty_permitted_and_use_required_attribute (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_empty_permitted_and_use_required_attribute",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_empty_querydict_args (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_empty_querydict_args",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_error_dict (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_error_dict",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "#21962 - adding html escape flag to ErrorDict",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_error_dict_as_json_escape_html",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_error_escaping (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_error_escaping",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_error_html_required_html_classes (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_error_html_required_html_classes",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_error_list (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_error_list",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_error_list_class_has_one_class_specified (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_error_list_class_has_one_class_specified",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_error_list_class_not_specified (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_error_list_class_not_specified",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_error_list_with_hidden_field_errors_has_correct_class (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_error_list_with_hidden_field_errors_has_correct_class",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_error_list_with_non_field_errors_has_correct_class (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_error_list_with_non_field_errors_has_correct_class",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_escaping (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_escaping",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_explicit_field_order (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_explicit_field_order",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_extracting_hidden_and_visible (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_extracting_hidden_and_visible",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_field_deep_copy_error_messages (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_field_deep_copy_error_messages",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_field_named_data (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_field_named_data",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_field_order (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_field_order",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_filefield_initial_callable (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_filefield_initial_callable",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_filefield_with_fileinput_required (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_filefield_with_fileinput_required",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_form (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_form",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_form_html_attributes (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_form_html_attributes",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_form_with_disabled_fields (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_form_with_disabled_fields",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_form_with_iterable_boundfield (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_form_with_iterable_boundfield",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_form_with_iterable_boundfield_id (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_form_with_iterable_boundfield_id",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_form_with_noniterable_boundfield (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_form_with_noniterable_boundfield",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_forms_with_choices (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_forms_with_choices",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_forms_with_file_fields (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_forms_with_file_fields",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_forms_with_multiple_choice (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_forms_with_multiple_choice",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_forms_with_null_boolean (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_forms_with_null_boolean",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_forms_with_prefixes (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_forms_with_prefixes",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_forms_with_radio (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_forms_with_radio",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_get_initial_for_field (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_get_initial_for_field",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_has_error (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_has_error",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_help_text (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_help_text",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "help_text should not be escaped.",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_help_text_html_safe",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_hidden_data (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_hidden_data",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_hidden_initial_gets_id (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_hidden_initial_gets_id",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_hidden_widget (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_hidden_widget",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_html_output_with_hidden_input_field_errors (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_html_output_with_hidden_input_field_errors",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_html_safe (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_html_safe",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_id_on_field (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_id_on_field",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_initial_data (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_initial_data",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_initial_datetime_values (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_initial_datetime_values",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_iterable_boundfield_select (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_iterable_boundfield_select",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_label_attrs_not_localized (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_label_attrs_not_localized",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_label_does_not_include_new_line (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_label_does_not_include_new_line",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "required_css_class is added to label_tag() and legend_tag() of required",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_label_has_required_css_class",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_label_split_datetime_not_displayed (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_label_split_datetime_not_displayed",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_label_suffix (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_label_suffix",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "BoundField label_suffix (if provided) overrides Form label_suffix",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_label_suffix_override",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_multipart_encoded_form (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_multipart_encoded_form",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_multiple_checkbox_render (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_multiple_checkbox_render",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_multiple_choice_checkbox (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_multiple_choice_checkbox",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_multiple_choice_list_data (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_multiple_choice_list_data",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_multiple_hidden (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_multiple_hidden",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "#19298 -- MultiValueField needs to override the default as it needs",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_multivalue_deep_copy",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_multivalue_field_validation (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_multivalue_field_validation",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "#23674 -- invalid initial data should not break form.changed_data()",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_multivalue_initial_data",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_multivalue_optional_subfields (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_multivalue_optional_subfields",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_multivalue_optional_subfields_rendering (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_multivalue_optional_subfields_rendering",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_only_hidden_fields (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_only_hidden_fields",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_optional_data (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_optional_data",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_specifying_labels (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_specifying_labels",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_subclassing_forms (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_subclassing_forms",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_unbound_form (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_unbound_form",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_unicode_values (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_unicode_values",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_update_error_dict (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_update_error_dict",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_use_required_attribute_false (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_use_required_attribute_false",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_use_required_attribute_true (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_use_required_attribute_true",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_validating_multiple_fields (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_validating_multiple_fields",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "The list of form field validators can be modified without polluting",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_validators_independence",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_various_boolean_values (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_various_boolean_values",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_widget_output (forms_tests.tests.test_forms.Jinja2FormsTestCase)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "Jinja2FormsTestCase.test_widget_output",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_custom_renderer_template_name (forms_tests.tests.test_forms.OverrideTests)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "OverrideTests.test_custom_renderer_template_name",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_cyclic_context_boundfield_render (forms_tests.tests.test_forms.OverrideTests)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "OverrideTests.test_cyclic_context_boundfield_render",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_errorlist_override (forms_tests.tests.test_forms.OverrideTests)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "OverrideTests.test_errorlist_override",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_legend_tag (forms_tests.tests.test_forms.OverrideTests)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "OverrideTests.test_legend_tag",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_per_form_template_name (forms_tests.tests.test_forms.OverrideTests)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "OverrideTests.test_per_form_template_name",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_attribute_class (forms_tests.tests.test_forms.RendererTests)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "RendererTests.test_attribute_class",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_attribute_instance (forms_tests.tests.test_forms.RendererTests)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "RendererTests.test_attribute_instance",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_attribute_override (forms_tests.tests.test_forms.RendererTests)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "RendererTests.test_attribute_override",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_default (forms_tests.tests.test_forms.RendererTests)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "RendererTests.test_default",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_kwarg_class (forms_tests.tests.test_forms.RendererTests)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "RendererTests.test_kwarg_class",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_kwarg_instance (forms_tests.tests.test_forms.RendererTests)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "RendererTests.test_kwarg_instance",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_basic_processing_in_view (forms_tests.tests.test_forms.TemplateTests)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "TemplateTests.test_basic_processing_in_view",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_iterate_checkboxes (forms_tests.tests.test_forms.TemplateTests)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "TemplateTests.test_iterate_checkboxes",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_iterate_radios (forms_tests.tests.test_forms.TemplateTests)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "TemplateTests.test_iterate_radios",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_templates_with_forms (forms_tests.tests.test_forms.TemplateTests)",
        "file_path": "tests/forms_tests/tests/test_forms.py",
        "method": "TemplateTests.test_templates_with_forms",
        "failure_output": null,
        "stacktrace": []
      },
      {
        "status": "PASSED",
        "name": "test_repr (admin_views.test_forms.AdminFormTests)",
        "file_path": "tests/admin_views/test_forms.py",
        "method": "AdminFormTests.test_repr",
        "failure_output": null,
        "stacktrace": []
      }
    ]
  }
  

